Really ? How ? I have to dig it further...
MS pushed ActiveX because it was their proprietary technology and, via IE, made attempts to limit the usage of Java applets.
Slick might also be something to look into, because it is based on LWJGL, but is really meant to 2D graphics, which seems to be what you're looking for.
You didn't really read the API. repaint() will return immediately on a jcomponent, whereas your render method on the canvas returns after drawing. Here's a much better test: http://pastebin.com/r2UDRLrb http://pastebin.com/beCuhLFF http://pastebin.com/pMR0zDKh And this still isn't perfect, because there is no equivalent of paint Immediately in Canvas 
Thanks, I must have forgotten about that. A long time since I actually read the documentation for swing.
The main reason icedtea plugin and webstart have problems is oracle has never released a spec so it is basically reverse engineered and some behaviour is just a best guess. Still, most applets generally do work quite well at this point, and the devs are usually quite responsive to bug reports.
I agree. I'm currently using Wicket and JavaEE6 (mostly CDI) for a small website, hosted on OpenShift, and couldn't be happier with the result. [Sources are available on GitHub for the curious](https://github.com/Athou/mirumiru). 
I don't have specifics, but you'll basically have to use an external library for ssh. Getting the cryptographic details correct and up to standard (as in very secure, not just working), is a very error-prone process, so don't do that yourself -- only a team of experts could be really qualified for that job. If you were working in C on unix, then you'd look for bindings to openssh, or something similar. Take a look at these google search results for "openssh java": http://stackoverflow.com/questions/2715406/which-java-telnet-or-openssh-library http://www.openssh.com/java.html Easier way: If you don't care about ssh persay, you could probably easily find a java package that will open a secure connection to a server that you yourself write, and then you can pass it commands to execute. It's reinventing part of the wheel, but since it doesn't have to match existing contracts, it might be easier.
What about setting up a webDAV. Webdav is super easy to interact with: something like [sardine](https://code.google.com/p/sardine/) With SSH, at my work we use [mindterm](http://www.cryptzone.com/products/mindterm/) but it might cost money, I'm not sure. I remember it being a bit of work setting up factory methods to login/tunnel with SSH. Manageable though.
&gt; An applet runs in a sandbox and can't access the computer it's running on Apparently, you have missed the recent security vulnerability found in the JRE API, which allowed applets to disable all security and then run whatever they wanted on the computer. Since it was pure regular Java code, it worked everywhere. Since the JRE code is often reused by other vendors, it is quite possible it worked on their version of Java too. Look up CVE-2012-4681 for details.
I have used this library at work standalone. It is also used in the default SFTP Session Factory in Spring Integration. Works fairly well.
you can just issue the ssh command via java.lang.Runtime.getRuntime() Here is a simple example : http://www.coderanch.com/t/419192/java/java/Runtime-getRuntime-exec-String-command 
Ok, a history lesson then for kids born in the late80's and 90s. Sun Microsystems could not get their JVM in the distribution of windows98 (or any other version.) Microsoft came out with their own JVM because the spec for java was out and they could. A grand legal battle was fought for many years but at some point, the battle was lost. ActiveX was the competing 'applet' technology that Microsoft was advocating and so they were doing everything they could to squash java on the desktop. The most evident problems were that the MS jvm was broken much of the time. It would not run pure java applets, but it did a great job at running MS applets that were created in MSVS with a funky 'java-like' language called J++. MS did everything they could to convey their J++ was basically the same as Java because you could make java byte code. Who changes the basic String class? MS. Everything defaulted to a MS variant if you weren't aware, and thus would not run on anything but the MS jvm. Deliberately confusing and muddy the waters of what java was and wasn't came from MS while Sun was too insignificant to most normal users to have a real voice.
http://projectlombok.org/features/GetterSetter.html
In addition to JSch that boa13 mentioned I have also used [Ganymed](https://code.google.com/p/ganymed-ssh-2/). Both work well.
Yes do this. http://bit.ly/bLgNdD
Yep. Plus, the hotspot compiler will be way better at optimizing this stuff, than you will be in code. 
don't forget control-shift-space -- context based completion (knows what type is expected, will list those first). 
Dude, it's just not that expensive. I would gladly pay for it over and over (and I have, since version 8). 
Solid advice.
Room and Item should be classes, and you can have instance constants (`static final Room`) representing the actual rooms/items (To represent the same room in different states, use different rooms, or you can use variables and put more complex logic in the rooms, but that gets messy and is best suited to things like inventory management). For the parsing thing, there's a really neat design pattern for this kind of thing. Basically, each Room should have an abstract `action(String)` method. You give each Room its own behavior for what to do with the command string, so each Room can behave differently in a well-encapsulated way. You have to pre-declare all the rooms you're going to use, so that they can reference each other. This is probably a lot to swallow for someone new to java, so I'll explain in code. public class Main { abstract static class Room { abstract Room action(String command); } static final Room HOME_WELCOME, HOME, HALLWAY, HALLWAY1_LOOKLEFT, HALLWAY1_LOOKRIGHT, H1_R1_WELCOME, H1_R1_GOTSWORD, H1_R2_WELCOME, H1_R2_MONDEAD, HALLWAY2_PLAYERISREADY, HALLWAY2_PLAYERISNTREADY, END; static Room pos = HOME_WELCOME; static boolean gameRunning = true; public static void main(String[] args) { HOME_WELCOME = new Room() { @Override Room action(String it) { if( it.equals("Look") ) { System.out.println( "Welcome to GAME! Adventure awaits!\n"+ "You seem to be in some kind of dungeon... The only obvious exit is NORTH." ); return HOME; if( it.equals("Go NORTH") ) { return HALLWAY1; } else { System.out.println("Sorry, I don't know how to "+it); return HOME; } } } HOME = new Room() { @Override Room action(String it) { if( it.equals("Look") ) { System.out.println("You're in the room you started in. The only exit is NORTH"); return HOME; } else if( it.equals("Go NORTH") ) { return HALLWAY1; } else { System.out.println("Sorry, I don't know how to "+it); return HOME; } } } HALLWAY1 = new Room() { @Override Room action(String it) { if( it.equals("Look") { System.out.println( "You're in a stone brick hallway.\n"+ "The hallway continues to the NORTH, and there are doors on your right (EAST) and left (WEST)" ); return HALLWAY1; } if( it.equals("Go EAST") ) {return HALLWAY1_ROOM1;} else if( it.equals("Go WEST") ) {return HALLWAY1_ROOM2;} else { System.out.println("Sorry, I don't know how to "+it); return HOME; } } } // ... Scanner in = new Scanner(System.in); while(gameRunning) { pos = pos.action(in.nextLine()); } } }
Get and read a copy of [Effective Java](http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683). It's particularly helpful if you're coming at Java with considerable experience in other languages (my situation). But there's still a ton of useful information for people new to programming in general.
I love this place, it helps a lot with loops and reasoning. http://codingbat.com/
While strenghtening your understanding of the language is all well and good, "improving your Java skills" should also include the practise of really taking time to consider what kind of code and documentation you'd want to read, if you were to maintain the software you write.
If you're still "learning about object-oriented programming and abstract methods.", then there's a good chance that you'll be overwhelmed and not be able to contribute to third party projects.
You can try going through the Java tutorials. If you need to learn the basics, try going through the [Java SE Tutorial](http://docs.oracle.com/javase/tutorial/index.html) and work through the questions and exercises. For a bigger challenge, try going through the [Java EE Tutorial](http://docs.oracle.com/javaee/6/tutorial/doc/index.html). The Java EE tutorial contains full blown applications which you could try to implement yourself using the guidance provided by the tutorial, and you can always look at the source code for the examples for hints. Especially check out the case studies at the end of the Java EE tutorial, and try to implement them yourself.
Try to write simple paint project with touchable interface.
I was going to ask where Java EE 7 is, if it even exists, then noticed this tutorial was written over the summer last year (close enough!)
Ssh, you don't want them to hear you.
This is definitely the Java book I recommend. Additionally if you want to learn about writing concurrent programs in Java get [Java Concurrency In Practice](http://www.amazon.com/Java-Concurrency-Practice-Brian-Goetz/dp/0321349601).
Thanks for the tip. It's something that I'll be ordering in the next few months, as the server component of the app I'm writing will have multiple threads. I'm currently working GWT to get the UI into a position for users to start providing feedback. Getting GWT, Maven, and Eclipse to play well together was no small feat!
Design patterns java workbook by metzker is a good one. Josh Bloch books definitely. David Geary books as well. Anything by Martin fowler. Not java specific but will make you a better programmer. "Refactoring" is a must. 
Move beyond the language and start understanding APIs and frameworks. Learn how to make a basic web page. Learn how to interact with a database. Read a book on Spring Framework. 
Online judge systems are nice ways to practice algorithmic coding. Some additional challenges after you have solved an online judge problem is to restructure/refactor/rewrite your code so that it is clearer, more concise, or makes use of some particular language feature. * Sphere Online Judge: http://www.spoj.com/ * UVa Online Judge: http://uva.onlinejudge.org/index.php * Timus Online Judge: http://acm.timus.ru/ * CodeChef: http://www.codechef.com/ This online judge has difficult problems which could earn you a job interview: * https://www.interviewstreet.com/challenges/dashboard/#problems
imporove you programming skills.
All of the tutorials are current released version. There's no EE7 release yet.
Thank you all for the great responses! I will definitely be checking out these sites, and possibly ordering some of these books :)
No need to install (unless you want to), there’s a [bookmarklet](http://www.readability.com/bookmarklets).
I love reading about the “old times” of silicon valley (Xerox PARC and all that).
This is good. Especially if you're contributing to--or tackling independently--projects that will actually be released. There's a big difference between "I think it works" and "The users think it works". You'll learn a lot passing software to others.
Abstract answer that I happen to like: Immerse yourself in code. Especially good code. d:
http://maven.apache.org/ for Java It lets you configure your dependencies in an XML file, and will handle downloading them for you as needed.
This book - http://www.amazon.com/Software-Development-Principles-Patterns-Practices/dp/0135974445 - covers basic OO design principles that you will eventually need to know. At first, when you read up on these design principles you won't understand why they're so important. As you get more experience, you will figure out one by one how much work these principles will save you. In particular: * Open-closed principle * Liskov substitution principle * Dependency inversion principle * lots of others... These principles explain the fundamentals of how to organize code to control dependencies. Once you really understand them, you'll get how to make really extensible, testable, and reusable code using all the power OO can provide. Learn to understand the importance of capturing intrinsic behaviors and characteristics in a class only, and not extrinsic, because of how it keeps dependencies from proliferating in your code. Pay attention to managing dependencies. Pay attention to managing dependencies. Pay attention to managing dependencies. (Yes, three times.) Learn data structures. Lots of good books on this, some already suggested in this thread no doubt. Learn algorithms. An excellent overview of this topic and a CS approach to problem solving in general is *Algorithms in a Nutshell* by O'Reilly publishers. Learn big-O, and don't ever do anything without first knowing the big-O in both space and time. Learn the standard libraries and collections, as already suggested in this thread. Learn to use guice, in particular, constructor-based injection. Read the Dependency inversion principle paper over and over again until you understand the difference between dependency injection and dependency inversion. Learn to use JUnit and Mockito, and test your code.
Indeed, but there have been a number of JVM related issues as well - Particularly the major malware infection on OSX over the summer (although in that case it was as much Apple's fault as Oracle's)
Thanks for replying despite the age of this thread! I will definitely look into your suggestions. You mentioned that some books have already been suggested in this thread for learning data structures, use of the standard libraries, etc. Would you mind specifying which ones? Thanks again in advance!
I'd be very interested to learn more about how others work without DTOs. I recently tried to do so in a fresh project, and I didn't find it very comfortable. Here's a brief retelling of my experience: When taking user input, I get an instance of the entity class nicely populated by Spring. But a user shouldn't directly modify some fields, like their own account type; ok, Bean Validation, slap @Null on a bunch of fields. Make sure you don't copy those nulls to the datastore object! Or I could just have a different class for user input, and not deal with that. Okay, got my entities back for output, time to render the template! Wow, this control logic to determine which buttons should be enabled can get quite hairy in the template code. I wish I could have generated simple booleans like entity.actionXyzAvailable back in Java. Okay, *okay*, I'll go back to having input and output DTOs.
Could you recommend any open source project that would be easy to contribute to? I've always wanted to contribute to open source projects but whenever I find one it's usually so large that I don't know where to start.
There are some interesting developments like LogMeIn's client java applet. But most of the interesting stuff that was *doable* with applets can now be done with a good AJAX+HTML5 framework, given the widespread adoption of optimized javascript engines on most of the "big" browsers... The thing is Java applets are on a similar situation as Adobe Flash: It's 2013 already, java/applet support on mobile devices is still non homogeneous, and mobile devices have already defined new ways of accessing web contents, so leaving them out of the equation it's not a wise decision at all, unless you have an alternative for them... 
"a top one" :P
If you don't need interactivity (meaning you just execute commands and parse their result), you could create a small REST service on your laptop (you can use Python for an easy implementation), and then invoke that service from a Java app. This way you can also reuse the same "endpoint" with different clients using a standard interface -there are REST client implementations for most platforms-, and best of all, if you want to change the way you execute any given command, you have a single point of definition. **Important:** I wouldn't expose the shell directly, as it can cause some serious security problems. Instead I'd create different endpoints for each command in a pluggable fashion -so you can just deploy new services by putting new command definitions in a directory in your "server"-, with their inputs sanitized before passing them to java's Runtime.exec() or python's os.system() call. 
This is the single worst piece of advice. Algo questions will NOT help you improve your Java or understanding of object oriented programming.
&gt; ...age of this thread! Ha, internet time 3 days is considered old. :-) (Since this group doesn't get tons of traffic, as long as your q is on the first page you'll see that occasional visitors will come in and pick it up.) I cannot recommend Robert C. Martin's book highly enough for the design principles. The book is on the Agile methodology and the philosophy behind it, and it's good to get familiar with a bunch of different development processes like Agile, but the main value is in the OO design. Actually, I just thought to look for the white papers, and here they are - http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod These are absolutely fundamental principles of OO. The three pillars of OO you've already no doubt learned–encapsulation, polymorphism, and inheritance–are great, but these papers explain how to use these aspects of OO properly. These are the foundational principles behind all of the design patterns in the Gang of Four book (another awesome suggestion you should get and read, but notice how they respect these design principles when you do). Data structures are data structures...pretty much any book that gives a decent treatment of hash tables, trees, graphs, lists, etc, will be good. (I didn't read the entire thread closely so I wasn't pointing to a specific one.) However, if you get an overview of Java collections, that will be a pretty good start. The only major thing lacking in collections is graphs so you'll want to read up on those too. I highly recommend getting familiar with guava, Google's additions to the Java standard collections. They are awesome. Between really getting to know guava and guice and use them properly, you'll have a very strong basis.
Oh lord. I cannot imagine to set it up.
You'll get better responses from StackOverflow.
My name is David, not Javin Paul.
Good Idea! Thanks! [Link to StackOverflow question] (http://stackoverflow.com/q/14223962/1959412)
I wanted to point out to OP that this book is used to get the Java certification. As such, it really goes in depth into how the JVM works, and might be too comprehensive as a starting book. However, it's a fantastic knowledge base for when you need to find something specific
Careful, productive practice will always help you improve, no matter what you're working on. With algorithmic questions, you get a clear problem statement, you get to exercise algorithmic thinking, AND you get to practice programming. And once you've solved the problem once, you can practice with other language features. But that's exactly what I said in my bit of advice... You might know what you're talking about, but it certainly doesn't sound like it.
https://github.com/goldmansachs/gs-collections
&gt; After I have this program written is it possible to package the program and database into something an end user can use? If you want to distribute the GUI as single-package executable downloads: Google:"executable jar file" [Lesson: Packaging Programs in JAR Files](http://docs.oracle.com/javase/tutorial/deployment/jar/) &gt; Is there a way to have your program launch another (which contains a GUI) and have the GUI program send its values to your main program (and have the main program send stuff back)? Yes, you can. You should read up on MVC pattern: [The MVC pattern and SWING](http://stackoverflow.com/questions/5217611/the-mvc-pattern-and-swing)
Thanks I'll look into MVC. I know about packaging Jars. I'm wondering if I can package the database into the program somehow so the program doesn't need a MS SQL server running to access the database once packaged. Basically I'd like the end product to be a program someone launches and they don't have to worry about a database. Because currently the user would need to install a local MSSQL server and restore a database backup file before the program works. (not something I'd call user friendly) I saw there is is something called Java DB. However I'm unsure how that would be packaged with the jar, or even if the MSSQL database I have could be converted to work in Java DB
If you want to distribute the database with your application instead of hosting the database yourself you can look into sqlite http://www.sqlite.org/
Packaging a database means it has to be embeddable. I've used HSQL for apps with 5000 entries or less. Its performance is no good in very large data sets. Other embeddable DB to consider are Apache Derby and Neo4j.
As for pulling/parsing XML data from online source, if you are in charge of the online server then the easiest way would to be to serialize an object on server side and deserialize it on client side, this process is automated you just need to have the same object structure on both ends, check this out http://jaxb.java.net/ If you have no control over the XML and it's not structured according to a serializable standard then you'll have to parse the XML node by node which can be very redundant. You should also consider JSON format as an alternative for XML http://www.json.org/java/
You wont be able to use MSSQL with your application for multiple reasons (You cant redistribute it, and your users would need to configure it themselves). But you can convert the database into a more open format. There are three Java based database solutions that I know of Derby, Hypersonic SQL and H2 ([Here is a comparison](http://www.h2database.com/html/features.html#comparison)), using a Java based database should make distributing it much easier, but as Crummosh mentions you could also use SQLite. If you haven't had much exposure to SQL then converting the databases might be a challenge. If you run into problems with automated conversion tools, try and identify what information you actually need and just copy that across. On a sidenote I am curious how you have been programming for 5 or 6 years in Java, yet have no database or GUI experience, what sort of work do you do?
I can confirm, thatphotoguy is not my sock puppet and Mike, it just happened that we thought in same line. javolution is there for long some time and its obvious that many would know about it. 
Don't forget H2.
But what if this were a karma conspiracy? :)
you're welcome
you have a point mate :)
May i ask what sort of clients are going to consume your APIs? if there are any mobile clients involved, one big ammo is the data size and the processing time in the mobile device. I remember winning some arguments with that. If you can publish your xml schema, you can publish your json structure. And since you said you will have a schema, if doing it with xml, then you might as well have objects created and converting json to objects will (or can be made to) fail if they don't conform. If there's any persistence involved, and you are big shop, then persisting json type content is easy with all the nosql (for lack of better term) databases. Performance costs - If i'm to validate an xml against a schema (by God I better use an efficient parser/validator), unmarshal it, do something and again re-do this process, I'm going to be spending quite a bit of time doing all these extra work than doing the actual work. And if I'm going to get many many requests per minute, I'm seeing a bottleneck.. Resource constraints: &lt;employeeId&gt;12345&lt;/employeeId&gt; needs more memory than {employeeId : 12345} JSON handles these cases easily. And more and more systems evolve with json support and if your boss wants to do both (xml first and then json), he might as well do it the other way. :) On the other hand, if you only have old clients who can't handle xml, then all the best with SOAP. 
Using JAXB to create an XML schema is trivially easy. Then using the right providers you can support transforming this to JSON via RESTEasy or other JAX-RS implementations. In my current project this is what we are supporting and it seems to be working wonderfully.
Why not both? JAXB object can serialize to both and binding to both REST and SOAP endpoints shouldn't add a huge upfront or maintenance burden to most apps.
First of all, let me tell you this: never design the API itself depending on the 'protocol' it is speaking to the outside world - whether it is JSON or XML over HTTP, plain Java locally or via RMI, etc. The API should be free of technology-specifics. For your requirements I would suggest plugging a JAX-RS connector (or exporter as it would be called in the Spring Framework) onto your API. JAX-RS supports both JSON and XML with minimal code overhead. See [http://www.vogella.com/articles/REST/article.html](http://www.vogella.com/articles/REST/article.html) for a pretty good example. You won't have to argue with the architect whether or not to use "a specified standard product already bundled with the JDK" while still retaining support for modern communication protocols like JSON with practically no additional effort.
Most modern (read:new) APIs are going JSON and eschewing XML. Twitter, which was XML first, is dropping all API XML support in a matter of weeks. Makes sense as they are mobile first. Make no mistake, our API will support XML. What I don't want to do is have no way to support JSON in such a manner that maintaining support becomes a chore. I see our products extending into the mobile realm sooner rather than later. Since the argument against JSON is lack of tooling, this is quickly becoming a hard row to hoe.
Do both? I'm not a huge JAXB fan, but you should be able to handle both effectively and then you let the client pick what they want based on accept/consume header. Couple that with bean validation for checking the requests. I'd avoid both XML and JSON schema stuff like the plague. 
This is fine and all, but XML makes my eyes bleed. It's 2013 and you're using a Servlet 3.0 container. Time to move away from teh XML. Spring 3.x has org.springframework.web.WebApplicationInitializer which will let you define all the config in Java in most cases. 
I like this idea. Hadn't thought of this specifically but that's why I posted on reddit! 
How do you manage that? What I don't want to have is JSON-ified XML or XML-ified JSON.
Without being any kind of guru on the subject, I found using JaxB &amp; Jersey makes providing RESTful services supporting XML/JSON/XML+JSON all to be the same amount of effort - pretty easy. You get to simply focus on getting the data model (i.e. the class structure and JaxB annotations) and the API structure correct, and the the rest is handled for you behind the scenes. I've generally found that no-one uses the XML due to performance, but if people want it, it's there.
It is XML converted to JSON. You can force it to use [Badgerfish](http://badgerfish.ning.com/) if you want but I found that fairly verbose. I'm using JAXB, JAX-WS, and JAX-RS on JBoss AS7.1. The providers are already ... uh, provided, with AS7. Some information to get you started is here: http://docs.jboss.org/resteasy/docs/1.1.GA/userguide/html/json.html What we do is create a base interface (say, IHelloWorldService) and then we create versions of that interface called IHelloWorldSOAPService and IHelloWorldRESTService that have proper JAX-WS and JAX-RS annotations on their methods. (@WebMethod or @GET or what have you.) The REST implementations are also rigged to use the @Consumes and @Produces annotations for XML and JSON which gives the flexibility of both options. &gt; @Consumes({ MediaType.APPLICATION_XML, MediaType.TEXT_XML, MediaType.APPLICATION_JSON }) &gt; @Produces({ MediaType.APPLICATION_XML, MediaType.TEXT_XML, MediaType.APPLICATION_JSON }) So in this way we actually support SOAP, RESTful XML, and RESTful JSON. It's actually pretty awesome. In the end we have a HellowWorldServiceImpl that is called by HellowWorldServiceRESTEndpointImpl and HelloWorldServiceSOAPEndpointImpl to make the most of code reuse. It's pretty easy to maintain but it can be a lot to remember when plumbing up a new method.
Have you considered something like Apache cxf that will support more than just REST. I know rest seems to be the thing right now but I always choose to use soap apis when given an option of consuming either. I can get a soap client generated in less than 2 minutes and have it work. Never been able to do that with rest even if a Java client is provided. In addition to being able to do soap and rest I believe cxf can do other protocols.
The advantage of protocol buffers is incredibly fast conversion to/from the internal structure of any supported language. I'd be surprised if there isn't a protocol buffer implementation for JavaScript, but it won't be as fast as compiled languages.
Don't think there is. Protobuf is a binary format which is not ideal for a browser to parse.
Hmmm. At first thought, I'd use Firebug to look at what format the request and response come in. Then I'd write something using an HTTP client library to fire the requests in the desired format, then parse the response into something I could read. If I were feeling fancy I'd do it multithreaded, if not I'd just do it in sequence. Then I'd format the result for easy viewing. Your mileage may vary.
Yes JBoss uses RESTEasy and it is easier in a container that provides a JAX-WS or JAX-RS implementation but overall we're not doing anything that Metro (instead of CXF) or Jersey (instead of RESTEasy or CXF) couldn't do because we're just coding to the standard and using the standard annotations. 
I'll look into Firebug and see what I can come up with. If you did it sequentially, wouldn't you only have to hit the captcha once? I don't have any problem doing that once and then continuing on.
Not sure. I'd have to sit down and mess with some code. Sounds like an interesting project, though. 
My thinking was that there might be some syntax in the &amp;searchFipsCode= that would allow me to do 540 and 003 at the same time. I've tried &amp;searchFipsCode=540,003 and =540&amp;003 but they get thrown out.
It seems that the captcha is only hit once; afterwards, there's a cookie installed that just contains your JSESSIONID which allows you to hit multiple districts per page. I would imagine (with some work), you could enter the captcha, grab the JSESSIONID, then have a separate program that allows you to select your preferred districts &amp; grab the pages accordingly. A bit of work this might take though
have you tried http://epwsgdp1.courts.state.va.us/gdcourts/nameSearch.do?fromSidebar=true&amp;formAction=searchLanding&amp;searchDivision=T&amp;searchFipsCode=003&amp;searchFipsCode=540 ? I don't think it'd work (as i'm guessing it'll just return what's at searchFipsCode=540) but it's worth a shot. Edit: If you were to get multiple districts to return, that unfortunately would have to be handled on the server side. You can get away on the client side by having a small system throw out multiple calls with different searchFipsCode numbers, but the server guys might not like the number of calls in such a short period. Then again, who knows :P
Adding another &amp;searchFipsCode=100 doesn't work. Good try though.
My experience is mainly in MYSQL and MSSQL, but my colleuges inform me that any of the databases I have suggested should be fine for what you want to do. JavaDB(Derby) is included with the JDK, so it will already be installed on your users system when they install Java, this is what makes it my first choice for your type of application. SQLite is also exelent, it is used acorss multiple languages, it is quite mature and has some very simple to use Java wrappers. The amount of rows in the DB is not the issue, you would need more than millions start to worry about it. What I mean by my earlier comment is that you should identify what tables you need from the EVE db and only copy those across. There are tools for converting databases, but the way I would suggest doing it, is writing a simple class to do it for you. Writing a class will help you understand SQL better. The process for converting it will be as follows. 1. Load the EVE db into MSSQL(You can use the free express edition). 2. Identify which tables you need, then create the same tables manually in your new DB. 3. Write a class to connect to your MSSQL db and select its rows and insert them into your new DB tables. I havent looked at the data in the EVE DB, so I don't know how complex the relationships are, but you will probably need to do your export/import in some order to adhere to the foreign key constraints.
Oh ok, that sounds like it would work. It's about 3 or 4 tables so wouldn't be that bad moving them over once I figure out how. Could you go more in-depth with this? &gt;probably need to do your export/import in some order to adhere to the foreign key constraints. I know that there are a few columns that have relationships for example http://wiki.eve-id.net/InvBlueprintTypes_(CCP_DB) (That wiki has the table layouts.) I thought a relationship between tables just meant that they contain the same values invBlueprintTypes.blueprintTypeID = invTypes.typeID is there something more to relationships between tables than containing the same values? When would import order matter? I think I wrote that backwards, should be blueprintTypeID.invBlueprintTypes
Am I missing something here or could you just enter the captcha once then run 2+ separate searches and combine the results on your own?
Throw in a [Vordell API Server](http://www.vordel.com/products/) gateway and do both
Is it open source? i couldn't tell.
Nope it costs real money so if your company doesn't like paying for things then I guess it's not for you. Shame though because it is one of the best enterprise Java applications I have ever used.
Going by that information it looks like there are several layers of constraints. invBlueprintTypes needs invTypes and so on. [invBlueprintTypes](http://wiki.eve-id.net/InvBlueprintTypes_%28CCP_DB%29) -&gt; [invTypes](http://wiki.eve-id.net/InvTypes_%28CCP_DB%29) -&gt; [invGroups](http://wiki.eve-id.net/InvGroups_%28CCP_DB%29) - &gt;[invCategories](http://wiki.eve-id.net/InvCategories_%28CCP_DB%29) - &gt;[eveIcons](http://wiki.eve-id.net/EveIcons_%28CCP_DB%29) So the first table you would need to add would be the eveIcons. There are actually more constraints then that, you might need to map i out like a tree. Keep going until you arive at a table that has no foreign keys. If you dont need to know which invGroup a invType belongs to you could remove that column and then you wouldnt require the subsequent tables. Thsi database looks quite complex, so it might be a tough introduction to databases.
i hope you are using a recursive relation in your search algorithm. essentially a good way to optimize this is to use a depth first search. the trick however is how to best limit the depth effectively eliminating dead end paths. i would strongly suggest reading up on a ternary trie and storing your lexicon in that. it does word searches in O(logn) which is probably faster than what you are using now. this page may help: http://en.wikipedia.org/wiki/Ternary_search_tree
I am just trying to condense my workload. Sometimes I've got to search for the same person 10-15 times. It'd be nice to search once and get results for the whole state or for the most common combination of districts. 
I guess what I'm suggesting is if it's possible to run the search multiple times, scrape the results page of each search, and then compile all those results.
That would be fine if it could be automated to a degree. For instance: load site, enter code, enter name and select a half dozen districts and have them all show up at once. 
Extremely interesting and informative, thanks!
http://gcc.gnu.org/java/done.html
If you're using JBoss you deserve what you get. Frankly if you're using *any* of the major application servers, you probably deserve what you get. They are horrible piles of crap. I speak from experience. I quit a very lucrative job ($1000/wk) because using JBoss made me want to stab myself in the testicles several times a day.
It can be used to bootstrap a build of IcedTea or I assume even upstream OpenJDK with the new build system that's about to hit the main jdk8 repositories. (Funny enough you need some form of java compiler to build Java). I think Eclipse or more accurately ecj might be similar.
Unfortunately GCJ is dead. From the gcc mailing list discussions it seems it is only kept around due to the unit tests. If you want a free Java native compiler then the only solution seems to be VMKit from LLVM project as all the other ones are commercial.
I am using a recursive algorithm, it was actually the easiest way to think about it even though I still find them confusing from time to time. And I also believe I actually have it setup so it's doing it depth first. The optimisation I mention in the edit was ignoring subtrees that would of already been explored. What I did was keep a list of the unique text value of each node and compared it to the node I was adding as a child, if it was present it's safe to say that it and it's children have already been explored elsewhere in the tree so I ignore it in my search. I will have a look at using a Ternary Tree! Thanks for the comment and suggestions!
Which alternatives would you suggest?
I recall coming across a game launcher a few years ago that was compiled with gcj. I only knew because I was running the application in Wine and it was obvious from Wine's debugging output. 
I need some help with an assessment I got, it's object orientated programming in Java Eclipse if someone is willing to help me please post here!! Thanks in advance
Hello, You should take a look at https://github.com/peter-lawrey/Java-Chronicle It's from the same creator of Huge Collections and he recomends it over Huge Collections saying it has better performance and more users and in this stackoverflow post: http://stackoverflow.com/questions/12800613/memory-mapped-collections-in-java
We are using JBOSS AS 7.1.1 right now at work. Thanks for the link!
Indeed. Bad wording on my part. I mostly added that to explain to for anyone not already familiar with the term 'bootstrap' what it actually means. Knowledge level on this sub is quite varied!
New Java vulnerability is being exploited in the wild, disabling Java is currently your only option
Yea, I discovered this one pretty quickly when I realized the jsp-configuration development="true" setting didn't work in 7.1.1 which is quite an annoying issue. 7.1.2 fixed this but as you say you must build it yourself. 
&gt; disabling Java is currently your only option Incorrect and excessive. You can also disable the Java plugin, or use NoScript (or many other similar tools) to block applets.
Did you build 7.1.2 from the tag in github, or did you build the real release 7.1.2.Final-redhat-1? (which is not available in github, but is on a public red hat FTP site)
[Non linkbait version](http://www.qualcomm.com/media/releases/2013/01/07/qualcomm-and-att-support-internet-everything-development-platform)
I would give him the benefit of the doubt that he meant the java plugin. All of these recent attacks have been specific to applets.
I agree, it's more of a hint at why Bruno reconsiders for people who know both Bruno's past Wicket evangelism and who also know the latest versions of JSF by heart. It doesn't really present a solid case of why JSF 2 is so great now.
Repetition. I don't mean making flashcards of keywords or anything. For example, if you're trying to learn how to do ArrayLists, maybe have the JavaDoc tab open. When you're using them, refer to that tab until you don't need to anymore.
I'm by no means an experienced coder, but a trick that has helped me more than any other is involving yourself in a project. I've gone through the first 3rd of a java book about 4 times each retaining pretty much nothing - this last time I decided that I would create a project to keep me busy and help retain what I've learned. I decided to go with a text-based RPG game and it has done wonders. Every chapter I read I would involve whatever I learned out of that chapter into my game and evolve it over time. I'm now 75% through the book and remember everything I have learned out of it! 
I build 7.1.2 from github and my friend from work build 7.1.3 last week from github as well.
I don't remember all this stuff, I just know where to go to find what I need.
Thanks for your suggestions! They are good and I may implement them in the future :D I actually turned it into a working Android Application! Here's a quick blog post about: http://lyndonarmitage.com/an-android-app-word-wheel-helpersolver/ It's got a screenshot of it in action. Sooner or later I am going to plop it up for free on the Google Play Store, when I bother to spend money and register as a Developer on it and figure out what I need to add to put it up there.
It has really helped. Many of the basics that have been covered have been utilized, all the way from gathering input, to comparing the input and then activating a sequence to move the users position (X &amp; Y coordinates) and have specific challenges/enemies appear on those areas. I just implemented the ability for users to save, as well as a early UI design. It's not perfect - But I know pretty much everything I've learned during that time by heart.
If I want to learn a new language I first read about the basic syntax and then jump right in. For example, I wanted to learn python (I already know java) so I first read up on the formatting and the syntax and then began making some basic programs without following tutorials. I find I learn much faster if I write the code myself and don't just copy someone else's tutorial.
If you want a smaller "toy" problem to tackle first, you might try a [Code Kata](http://codekata.pragprog.com/2007/01/code_kata_backg.html#more). Whatever you try, you'll probably end up implementing using the conceptual approach from whatever your favorite language is, but the more you research how to do various things in the new language, the more you'll absorb the philosophy of the new language.
I can second this. Just keep practicing. I remember when I was first learning java I had no idea how i was going to remember public static void main(String[] args) but hey, now I do!
There's no shortcuts around the 10k hours rule. Write code, write more of it, figure out how to do the piece that your stuck on, write more code. Keep writing code. A lot of programming is very repetitive. The first time you write something, you'll struggle with it. The second time you'll get annoyed. The third time, you'll look up how others have approached the same problem. The next time, you'll write an even more efficient way. Don't worry about getting it right the first time. Just make it run. 
I do the Project Euler problems, but in general is there a reason you need to know lots of different programming languages? If you use 1 or 2 in your job or daily life then you'll remember them because you use them. If you don't often use a language why bother remembering it? Most aren't that difficult to pick up on anyway.
In my book "[Permanent Learning](http://asperatu.info/pl)" I describe a method of creating a map of your study material I call an "inverse table of contents." Find and make a list of every topic in the language with special attention to the summaries of the material at the end of each chapter or section. Read those summaries in the order of what's most interesting to you, or what's most surprising to you, and check them off when you understand them. Add their page numbers to your personal table-of-contents to help the reviews to come. Read the summaries first of every section and note which items make the least sense to you---that's how you're going to know which sections you need to study the most. Most importantly, take breaks between sessions (read for about 10-minutes, then do something else) and remember that you're going to have a limit on how much you learn every day---your brain can't make solid memories without sleep and repetition, so mark and plan some intervals for reviews of previous chapters in the days to come. You are only probably going to manage about 90-minutes/day hammering on this list before your brain gets too tired to care---in which case, celebrate with something that makes you feel good! Your list becomes your study plan, mark it up like crazy until you fill in all the gaps, but with the knowledge that the brain has these disappointing, but manageable limitations. The biggest mistake is believing that you "know it" after reading it once. Never works. Those gaps aren't complete until you've re-read and understand items 3-5 times in intervals days apart and feel bored about reading them. 
It's what you want. It was renamed in newer SDK's (or so I've heard) If the video you watched had just 'Android Project', It's the same thing. (some of the wizards have been moved though, they've sort of categorized it... sort of... ) No worries OP, all is well :)
&gt;how to load the array from a text file, and how to save an edited array back into the text file. Any pointers would be greatly appreciated. Easiest way would probably be BufferedReaders and BufferedWriters. [Tutorials](https://www.google.ca/search?q=Using+BufferedWriter+for+text+file&amp;oq=Using+BufferedWriter+for+text+file&amp;sugexp=chrome,mod=7&amp;sourceid=chrome&amp;ie=UTF-8) It would go something like this though (**Writing** is what I do in this example, though that's fairly obvious! :p ) BufferedWriter write = new BufferedWriter(new FileWriter(new File(/*File path*/)); write.write(/*A string*/); // for newlines I believe it's write.newLine(); // finally write.flush(); write.close(); 
Atrociously written, sensationalist blog article. Downvote. Credible sources, please.
 public void newCherry() { cherryX = 1 + (int)(Math.random() * ((GRIDSIZE - 2 - 1) + 1)); cherryY = 1 + (int)(Math.random() * ((GRIDSIZE - 2 - 1) + 1)); } Just a tip on game programming, random values like this should be checked! On the off chance it lands on the snake and adds another block leaving the user to wonder why 2 blocks where added on that cherry instead of just 1. what i mean is : while (true) { randX = 1 + (int)(Math.random() * ((GRIDSIZE - 2 - 1) + 1)); randY = 1 + (int)(Math.random() * ((GRIDSIZE - 2 - 1) + 1)); if (randX != playerX &amp;&amp; randY != playerY) break; } its just good practice :) Cheers!
Thank you SO much for the added assurance, it's much appreciated! :)))))
I'm a serial-learner who first fell in love with libraries back in the late-80's. I self-taught programming and UNIX from libraries and never really stopped learning. As technology got more and more crazy (new operating systems! new programming languages!) and my needs got more varied (gardening, building, electrical, plumbing, etc.) I needed to get a grip on what I was doing. I realized that I needed to make what I did more systemic and predictable. So that fell into a book I built with much of what I've been learning and using for the last couple years (Markdown, pandoc, etc.). Which you just... bought. Woo! Thank you! [The "first sale" was my birthday present today.]
Don't remember all the small details. If you're not using a language often, then just learn where to find the answer. Don't worry about learning the answer itself. I have refcards around my desk for the basic syntax of all the languages that I use. Anything more complicated than that gets google or stackoverflow. Of course, if you use a language often, then you'll remember all the small details naturally. 
A bunch of people on the JBoss forum build those tags as well, but you have to realize that those tags are just tags. They weren't tested or sanctioned by JBoss as actual releases. The real releases are 7.1.2.Final-redhat-1 and 7.1.3.Final.redhad-4. aka 6.0.0 an 6.0.1. The source of those can be found at: ftp://ftp.redhat.com/redhat/jbeap
This. Knowing what's possible is important, not necessarily memorizing how to do it. Even professional software developers google stuff all the time.
Did you took the tag from github because the 'real tag' couldnt be build, or did you explicitly choose to use the github tag?
Here's the source code: http://pastebin.com/raw.php?i=cUG2ayjh I've cleaned up the code (more meaningful variable names), put the class on my website, it works impressively well. Visit web page, Windows calculator starts.
Don't forget to disable [GIF images](http://www.opera.com/support/kb/view/1038/) (Advisory: Malformed GIF images could allow execution of arbitrary code)
Someone forgot their bounds check...
Were you able to build jboss-eap-6.0.1 from the sources on RH FTP?
http://www.ft.com/cms/s/0/529f3720-5b7c-11e2-9d4c-00144feab49a.html#axzz2HfpUiNQM
[Security Now](https://www.grc.com/securitynow.htm) [episode 367](http://www.grc.com/sn/sn-367.htm)
This seems to be the umpteenth time that exactly this pattern has been exploited ... what the hell?
This. This. This. Learn *how* to program: the languages are just tools. Once you understand the paradigm it's relatively straight forward to pick up a new language within that paradigm. Of course every one has its own idioms that you will pick up the more you use it. Read other people's code: I've been a professional software engineer for over 20 years and I still learn new things by reading other people's code. It's good that the OP wants to become a polyglot programmer: during any given week I may be working in Common Lisp, C++, Java, or even assembler depending on the task. Practice. Practice. Practice. 
Write lots of code. Even when you think it's silly. Just write code. It doesn't matter what the language is, just solve problems with code. Don't have any unsolved code problems? Make some. The reality is that many languages and their platforms share a huge amount of common concepts. You don't need to remember the specifics. Just understanding the general concepts is enough. If you code professionally (or even as an experienced amateur), you will always have textbooks (or the internet) within reach.
Please see http://www.reddit.com/r/java/comments/16cek0/uscert_vulnerability_note_vu625617_java_7_fails/
You should ask this same question on the httpclient user mailling list. https://hc.apache.org/httpclient-3.x/mail-lists.html If youre using v 4.x then its called httpcomponents. (they changed the name after 3.x) https://hc.apache.org/mail-lists.html hth
http://www.amazon.com/JRuby-Cookbook-Justin-Edelson/dp/B005SNJF28/
It's the same general principle as CVE 2012-4681 (find a way to run `System.setSecurityManager(null)`), but the way it circumvents the security checks is very different. So from an implementation point of view, it's not the umpteenth time this has been exploited. CVE 2012-4681 used flaws in the java.beans package and in the "internal" sun.awt.SunToolkit class. CVE 2013-0422 takes advantage of the com.sun.jmx.mbeanserver and sun.org.mozilla.javascript.internal packages (the latter notably offers a way to load a class from a byte array), and plays with the java.lang.invoke to circumvent security. In particular, the offending class (which does the System.setSecurityManager call) is encoded as a hexadecimal string.
It applies specifically to applets in the browser. Just disable it from your browser.
I just found the jboss hudson and it linked directly to github, so it was just the first thing I found. 
I understand that, but doesn't matter too much for me since our client doesn't deploy to jboss and I just wanted to play with some new spring/javaee/jboss stuff. Sadly our client has decided to buy large amounts of websphere licenses for their production and test servers. So what is the real difference between 7.1.3.Final and 7.1.3.Final-redhat-4 ? Would they not be built from the same tags anyways since the entire source is open? Been a while since I read the thread, but don't they specify that the EAP is the same source as whats on github?
This might be what you're looking for: http://pastebin.com/RkFaGpiF Not a lot of explanation, I know, but let us know if you have further questions. You should not create a new HttpClient everytime because it is a "big" object which "costs" a lot to build. Try to reuse it.
As a professional developer, I can confirm the crap outta this.
I can't get into that just yet hopefully will have time over the weekend but at a quick glance it looks like it could be a huge help. Thanks!
Sorry, I haven't read your book and this question may already be answered in it. Whenever you are learning something new, there are more unknown unknowns than there are known unknowns on the subject. The only way to create an inverse table of contents is all from your known unknowns; "these are the things that you know that you don't know that you need to know". An inverse table of contents can only be made after the fact rather than in the beginning. In a lot of self guided studying, you start with a known unknown, make it a known known, which exposes unknown unknowns that become known unknowns. By doing this repetitively you slowly master the subject matter. This iterative process allows you to build a landscape from a solid base. This is true whether you're studying math, programming languages or magic tricks. 
Always interesting how it's never "top books on programming".
When I describe the ITC in the book, its built from the sources you've selected to study, it is not self-generated from your own mind. As you build it, you are essentially making a map of your own personal knowns|unknowns and then you iterate over it until you've built the landscape (in your words.) You could just xerox the TOC out of the books you intend to study, but I don't recommend it because you deny yourself the slow sequence of priming your mind with concepts if you write it out by hand.
Many people are confused by this. JBoss should put the real release tag on github as well :(
From the article; there are additional fixes done after a clone is made from the tag in github. These may be nice to haves or very critical. Since the 7.1.3.Final-redhat-4 source is available, you could diff them to see what has exactly changed. Cloning 7.1.3.Final on github, then copying all source from the FTP over that and then committing it might be one way.
There is no way to take all the details in, when you work with different technology stacks you will forget them. The key is to know where to look for the finer details. Practise is the only way, the more you code the easier it will be to pick up something new. 
I really liked Thinking In Java, might want to give that one a look.
&gt; ...which is bullshit as it is needed to play almost anything. Java is not actually used for much at all for most people. You are probably confusing it with javascript.
Except we've systematically trained every computer user on the planet to knee-jerk click I Accept, Install, Grant Superuser Privileges, Always Run, Take my Credit Card.
This is the CERT Alert http://www.us-cert.gov/cas/techalerts/TA13-010A.html
The title is (as usual) overreacting. This is the proposed solution: &gt; Disable Java in web browsers I really thought people already disabled applets by default, unless you *really* needed to see something.
Core Java, Volume I by Cay S. Horstmann and Gary Cornell – Introductory Java Book slanted towards developers with C++ experience. Does a good job of noting where Java differs from C++.
Perhaps. The details of the vulnerability aren't public so I can't be sure (and I'm not going to audit a whole damn package just for my own curiosity). Still, my first guess is that somebody was playing fast and loose with `AccessController.doPrivileged`. Java's security model is rather strong and somewhat difficult to screw up, even in the face of different pieces of code evolving separately like you say, but `doPrivileged` lets you partially turn it off (by limiting how far down the stack the `AccessController` looks). There's a big, fat warning on that method's Javadoc precisely because it is easy to create security holes with it and hard not to.
Interesting. You wouldn't happen to know where the source to `sun.org.mozilla.javascript.internal.Context` could be found, would you? I tried looking through the OpenJDK trees, but I don't really know their layout that well…
I couldn't agree more. After a few years of java I've memorized my personal method of doing things. However whenever I need to do something I don't frequently do, I'll just blank out.
I'd say since OP has programming experience, definitely these tutorials give a good rundown of Java OOP topics. Good suggestion.
Every developer I've ever met had a hard time remembering things at first. Little suggestion though, is to get used to how object oriented programming works, and the basic syntax of languages that are based on the concept. It'll really help new things come naturally !
when i saw this subject - "US-CERT Alert TA13-010A - Oracle Java 7 Security Manager Bypass Vulnerability" - I instantly thought "irony!"
Yea, I noticed after I posted. I got the link from a twitter feed.
convenient, isn't it?
Try [this](http://www.amazon.com/Programming-Problem-Solving-Java-Nell/dp/0763734020) textbook, it's the one I had for my Java course last semester. It's very easy to understand and has excellent review exercises.
Well, I'm good with https://github.com/eclipse/jetty.project It works, it keeps on working, and you don't have to dread the day when some MBA kid decides to bet his employers assets the community relies upon, on the chance of personal advancement.
Um, I guess, idk on the website it says it's in 97% of computers and programs
Not sure how the ninth edition of the Deitel book is, but I found the sixth and seventh editions were actually quite good, though some explanations were a bit verbose.
Phew, that's great to know. I was getting a little worried that I might have to drop Java. Thanks a ton!
Though the preferred language can vary from school to school; it pretty much depends on what the faculty prefers working with. For instance, my school used C++ almost exclusively. To wax philosophical for a second, it's no big deal if you have to program in another language. Having a diverse skill-set is quite useful for a number of reasons, and a lot of skills you learn in any language are universal. Best of luck! 
Like it has been said, the language sometimes differs from school to school based on how the professors would rather teach. Most school offer both but they tend to lean more towards one as the classes progress. Regardless, freshman courses that involve some sort of programming language are ran with the assumption that a majority of the class will not know the language. Everyone, regardless of past experience, will leave the class with an understand of the programming language if you actually do the work. Currently a Computer Science major on the train back to school.
My college had their students only use Java for all classes, but they recently switched to python for unknown reasons. Here's a tip from my experience: Whatever the language is, practice programming because you enjoy it, not because it is an assignment. I know a lot of guys that get burned out due to the intensity of lab projects (even the easy ones). Your core knowledge of coding WILL NOT come from your teacher, but they WILL help you get there. Before you jump into classes, do yourself a favor and finish at least one personal coding project :D
I'm not from the US, but it my first year we learned Haskell, Java and C. Then in the second year you start your own projects in a language of your choice. Java was popular and well supported by the staff. Hope that helps.
&gt; I decided to go with a text-based RPG game I actually did for my final project in Java class, it was based on pirates with lots of inspiration from the old Drugwars game. In the end I didn't wholly finish the game and it still took nearly 2k lines of code with very minimal graphics.
&gt;temporarily too, not permanently
I like the Deitel &amp; Deitel series :/
Looking at the source code, one possible explanation is that some of the build configuration changes are there mainly to break the build outside the RH network.
Yes, you'll be able to take courses in specific languages, including Java, at just about every university. However, be aware that if you plan to really learn programming, that is *not* the same thing as learning a programming language. In order to really be facile with computers, you'll need to understand a wide range of concepts, many of which don't make an appearance in Java (or, more accurately, in the object oriented paradigm). Especially these days with everything moving towards the cloud, it's very important to be grounded in concepts around parallelism and synchronization if you want to be useful in the workforce someday with your skills. This means understanding functional programming concepts, as well as OO, scripting, and a host of other things.
Knowing where to find information is more important than knowing information *at some point*. But first you have to get to that point of first knowing what's out there. To do that, read a little, program a little to exercise what you learned. Be on the lookout for examples or opportunities to combine two (or eventually, several) different bits you learned to accomplish something in an elegant way, or just to be able to do it period. Practice is what solidifies concepts.
So just to clarify, if i have java 6, update 29, then I'm totally in the clear and don't need to do anything? Because it should just be Java 7 update 10 right?
&gt;if i have java 6, update 29, then I'm totally in the clear No, because the current version of Java 6 is update 38 so you're missing a bunch of security fixes. Also they will stop releasing any updates for Java 6 in February. 
There's SWT/JFace, which makes reasonably good looking UIs. But I think that's also trending downward as far as this goes. Does JavaFX support UIs for the desktop? If so I think that's probably the way to go these days... I'm not familiar with that at all, myself, though
JavaFX is meant to replace swing as the standard lib to build desktop guis with Java.
My hero! Thanks mailman!
I work on a Swing app. All I can say is go native. Microsoft, osx, or Linux. Spare yourself. It's better to write 3 apps if need be.
My guess is that its a pain to maintain it?
support costs.
Java isnt known for its GUIs. If you're really up for it, write &amp; design your own look and feel. Pick up a copy of "Filthy Rich Clients" and get at it. Or go the enterprise route: write a Java http server, and have a web based interface plug into that.
I would use more meaningful variable, method and class names. For instance, you should write out count(don't use 1 letter variables), user, last, commissionedCalculation, format() and validateNumber(). It makes reading and understanding what is going on much easier and you won't have to comment your code as much to explain what the variables are (self-documenting code). Methods should be verbs and classes should be nouns. http://stackoverflow.com/questions/209015/what-is-self-documenting-code-and-can-it-replace-well-documented-code
&gt;how do I know which plugins use Java? Other plugins will not be using Java. Java is a plugin. Find it in your list of plugins and disable it.
Got it. Thank you. Edit to add: I usually use Chrome and I found no reference to Java in my extensions. I use Firefox occasionally and it was already disabled. I am required to use IE at work and Java was already disabled there as well, so I guess I'm OK. I retract my statement regarding Chrome. It was just [more difficult to find](http://www.podfeet.com/wordpress/tutorials/how-to-disable-java-in-chrome/).
Why do people still just java. I haven't had to use it on my PC for years now. 
Minecraft, mostly.
Should say selecting a full EE profile OSS app server with support available, not selecting _your_ java EE.. For many companies the commercial Oracle and IBM app servers are the only option. &gt; Now lets intentionally remove IBM Lol, and also :(
Wrong. It contains most of 1.5 &amp; a significant chunk of 1.6, with more being added. If it was just 1.4, it wouldn't be able to bootstrap IcedTea. What tends to matter most is not which version is the latest and greatest, but which is most heavily used and what methods of it. gcj &amp; GNU Classpath have always focused on implementing methods actually used by applications rather than the entire specification of one particular version.
YouTube thenewboston he has tons of vids to clarify anything 
Just... No... TheNewBoston will skip everything about programming best practices and is generally doing a bad job at teaching programming languages in general. You might watch his videos just to refresh your memory when it comes to some aspects of Java programming, but for a first timer he/she would benefit a whole lot more from a good book that will go more into detail. If people want to learn from videos, they should take a look at the Java lectures provided by Stanford University. The lecturer is really enthusiastic (makes it more appealing to watch) and he's great at explaining key concepts! 
Just to clear up then: this wouldn't affect server-side Java? If I were, for instance, programming applications with Spring on Tomcat?
if the server side java app was programmed to execute arbitrary, uploaded java code, then yes, it is a risk. i haven't heard of such a thing though, so mostly this is an attack against users, who's browsers do download and execute arbitrary java code (with the right plugins enabled of course). one possible attack vector I could see in a server realm is if you are hosting a java ee container for random people to run their web applications on, but getting attacked that way is not likely and those services are pretty rare; besides, what would be the point?
[Uhm, you don't?](http://threatpost.com/en_us/blogs/nasty-new-java-zero-day-found-exploit-kits-already-have-it-011013) You port your stuff to a sensible language.
If you use the native theme in swing the ui blends in with whichever OS you are using. As far as I am aware, the big complaint with swing is that it old and feature-light.
Maybe you could update the site then? http://gcc.gnu.org/java/ last update is from September 2009. My information is based in a question I asked in the gcc mailing list around two years ago.
Java Swing can use native OS theme, but you need to set it on app startup (UIManager.setLookAndFeel). Detect system/desktop environment and set GTK+ Look and Feel (Linux), Windows LAF, or Nimbus/Metal depending on your target system. Oh yes, it's pain, but it looks nice ;)
I have been working with SWT for a few months, off and on - it's a private hobby project. SWT makes much better-looking UIs than anything else. But it seems unfinished, and bug reports in Bugzilla are still open a couple of years down the road. The people who say Swing/etc are pretty good are mainly programmers. Here's a small example (one of the reasons I switched to SWT). In Swing, it's easy to make tables (grid-like data view). It's easy to fill them. it's easy to make columns resizable. It's easy to make the background a nice, subtle colour. It's easy to make the columns re-positionable. The problem comes when you allow the user to reposition columns on a coloured background. Because the space the table control makes to drop the dragged column into will be white. Not the nice, UI-enhancing background colour you would like. But white. It's as ugly as fuck. And that, in my humble opinion, encapsulates entirely the problem with all Java UIs. Developers are 'engineering first, and appearance second' type people. They understand very well the difficulties and challenges of programming, and are mighty impressed by some impressive engineering feat. Making a working table, for example, is a horrendous amount of complex work. The user, though, does not see that complexity. The user sees a glaringly obvious and ugly white square suddenly appear, throwing the visual design of the harmonious colour palette entirely out of whack. It looks like a bug. And from a visual experience point of view, it is. However, the 'important' engineering works, and therefore, it is not a bug, according to the developer. So I switched to SWT. It's a b it more complicated to use, because, where it can, it uses native (to the OS) widgets. Therefore, it looks a lot better, generally. Personal opinion - it's well worth the extra effort. But, and here's the gotcha, it feels unfinished. The official tutorial website is broken. Bugs are not being fixed. (Clarification: Serious faults are corrected. Enhancements and nice to haves are not). As a result, there are some really 'simple' things that are not implemented. Examples: It's a one-line convenience thing, to set up a status line on a window. Nice! Super easy, and useful! But then it is not possible to set the font in that statusline. Every other control : Yup, easy peasy! Control.setFont(Times) (kinda thing. Status line? Nope. Not implemented. My current bugbear. Every widget (visible control) has a setLocation(x,y) function. However, if you use a layout manager (which auto-calculates positions based on your specification), then setlocation() values are ignored. No problem! Every widget has a setLayoutData(positionMeHere), where positionMeHere is the specification to the layout manager. Except menus don't have this. This means, if you have a layout manager in effect, there is no way to programmatically position menus. Bottom line: I looked at JFX - and there was a reason I rejected it for my desktop app (though I can't remember why). Swing is fugly. SWT is a lego set, missing the one red 4-nobbler that would fit perfectly, and you have to make do with 2 x 2-nobbler in green. TL;DR : Java is not brilliant at GUI's, but pretty good if you are flexible, and want standard types of list/table/drop-downs. You can reach more difficult things with a lot of head-scratching. If you have an easy, satisfactory solution with WX, stick with that. the dropped into
Well but it better not be [Ruby](http://reddit.com/r/programming/comments/1682n0/extremely_critical_ruby_on_rails_bug_threatens) right? And maybe we should skip [Python and PHP](http://reddit.com/r/netsec/duplicates/14bupz/exploit_information_leaks_in_random_numbers_from) as well? Besides, the attack surface you referenced is about Applets in the browser. Java EE is about Java running on a server.
After doing a bit of research, I can see how you are correct with regard to the JDK version support. Perhaps it wouldn't be so easy to be incorrect if the gcj homepage didn't say, "It has been merged with GNU Classpath and supports most of the 1.4 libraries plus some 1.5 additions."
Except the Java plugin isn't an enterprise server
Consider for using StringBuffer for joining strings together for increased performace (less garbage collection) if you are doing str1 = str1 + string2. Instead of assigning a boolean to valid i would just return return or false.
Don't look at Swing. Look into JavaFX. I worked on a larger application that included a Swing client. It is not so bad if you can invest money in a commercial toolkit that brings new LaFs and components (like [Jide](http://www.jidesoft.com)). But the programming model is really outdated. That's where JavaFX drops in. It has a new and much cleaner way to build UIs and the LaF is okay. Having JavaFX (2.x), I don't call Java on the client dead, yet. There is still a demand for it in the enterprise area. But there is the security problem (see the latest [vulnerability](http://www.kb.cert.org/vuls/id/625617)) which leads to a decrease of client-side installations of Java. And there is the increasing competition of rich-client web applications: HTML 5 and the Browser as platform (plugin development).
Check out Window Builder for Eclipse. Google bought them and have the source code top the eclipse foundation. It s pretty good
would I use a desktop app based on Java? NO, because all I've used weren't integrated well with OS featured and UI always looked odd. Juk (linux media player) used to be decent though based on Java but banshee/rhythmbox were better.
You are correct. Oracle forcing client-side Java out would not be a major hit. Tooling, etc would exist for server side programming. Developers would most like migrate to HTML5 for client side. 
They've just spent a ton of time and effort pushing JavaFX.i don't think they want client side Java to die, but they sure don't make it easy to like.
That's not the problem. You have to ask yourself first. Why am I writing a Desktop App instead of a Web App? The answer is that you need to be more tightly coupled to the native OS in order get better performance, or access to features unavailable in a web app. If you go with a swing app everything will seam OK at first. It will look native, and be pretty quick to write. But then you start to see cracks. You need to save some local settings, but you can't access the Registry on Windows. You run into some strange problem with Sounds not playing, then mysteriously playing minutes later. You find that your application thinks it's rendering correctly, but the FrameBuffer has not been flushed, leaving the user with a stale image that they can click on, but will not redraw. You try to store some data in "user.home" only to find that this is not always in a safe place to store data. Java Swing a complex abstraction, on top of a complex model. It will fail more often then native, simply due to this fact. Unless your app is extremely simple , then write three native apps. But if it's so simple then why not just write a web app. Writing a native app give you better tools to solve desktop application problems. 
I believe in Java 6 it does this for you already. The only time to use a stringbuilder is with loops.
Can you post a screenshot of a nice Java GUI please?
What about Android? Most of the Android operating system and just about all the apps use Java. How will this exploit effect us?
Just to add to this, it is not just java in the browser. Plugin is just one way to run potentially untrusted code. Exploit also works when running jnlp files using something called 'webstart' or even running java programs locally. So if you do any such things, be sure you trust where the programs come from.
How is writing one line of code a pain?
Now I know you're lying. Of course you could access the registry. You can do anything you want with Swing. Basically if you want to write a desktop app which will run mostly without modification on Linux, Mac and Windows then Java is the best thing out there.
Really, please post the pure Java way of accessing the registry in jdk 6. You can do it using JNI but that's not pure java.
Sure, Just use whatever language will give you full access to the operating system. Because sooner or later you will need it. In windows this would be c++. You could use c#, but you will need to call to windows using p-invoke.
&gt; You need to save some local settings, but you can't access the Registry on Windows. The Java properties API is a replacement for the registry. (AFAIK it might even use the registry on windows). &gt; You find that your application thinks it's rendering correctly, but the FrameBuffer has not been flushed, leaving the user with a stale image that they can click on, but will not redraw. 90% of the time this is a threading problem, the other 10% it is a problem with adding and removing components without invalidating the layout. In both cases this is caused by the developer. &gt; Unless your app is extremely simple , then write three native apps. Lol no, that has to be the worst advice ever. If you have to go native at least use Qt to write **one**. 
The book's cover image alone is worth clicking through to that site. Make money, Duke. Make money.
Don't download non-Market .apk files you don't trust. Also, Android is technically Dalvik via a Java cross-compiler, not true Java.
There are valid complaints against swing, but with one line of code you can have a native look across platforms.
Don't extend validMethods. Instead, make the validStringTest and validNumb static, and invoke them like validMethods.validStringTest(...) and validMethods.validNumb(...) from within ComCalc. Also, consider renaming validMethods to "ValidMethods" (class names should begin with an upper-case letter). 
Very level-headed and insightful comment. Had to say that, considering your nonsensical downvotes.
Try adding a -server before the -jar param? Edit: Not sure why the down vote. If OP is running a client JVM on an OS where 32-bit processes only get 2GB total, then the process won't be able to allocate a 2 GB heap.
I am going to comment this in the order that I see problems, like I was standing over you as you wrote this. This way is easier for me, and (I hope) for you as well. To start off, you should always link to something executable. Make it easy for me to visualize what the code is doing. But for the actual code. Note that all locations are for the pastebin: As a general guideline, documentation should not include implementation details, because you will probably change that in the future. This is a hard one, and I find myself breaking it regularly, but try to keep that in mind. Just removing line 8 and 9. Use javadoc comments if you are going to comment on private variables, it keeps it much more consistent. The javadoc tools won't include them however. Your javadoc for the first constructor is missing the variable 'itsname'. Consider renaming 'itsname' to just 'name' and using this.name=name. I don't personally like how you are handling the setCurrentHealth method, what if you wanted a boost that overheals you? Also, final variables for something like max health seems odd, I would think different things would have a different amount of max health. Possibly more constructors are in order. In setName, consider renaming 'itsname' to 'name' and using a 'this.name=name' Also, package names should be all lowercase. just textrpg would probably be fine, but *lastname*.textrpg would remove all doubt. Replace lastname with your username if that makes you more comfortable, but be consistent. You are going to be making a lot of packages before you make anything longer than a week or so, so you will get plenty of time to decide how you like to name them. Consider refactoring 'currentStreght' to the correct spelling. The documentation on the first constructor in Player is out of date. When using @return, avoid using the word Returns. I'm terrible at this, but it looks odd when you compile the documentation The documentation on setCurrentAttackSpeed does not match up with the parameters In Enemy, MAX_DAMAGE should not be final under most circumstances. The first constructor's documentation in Enemy is out of date. Consider renaming Fighting to just Fight. Based on the documentation. Why are all the variables in Fighting package-private? I think a new Fight instance should be created if the player or enemies change and I doubt you are changing the dice mid-game. It looks like the Fighting class takes over the UI when start() is called, which is not bad in itself, but may make game-wide consistency difficult if you change the layout. Consider renaming from start(), which is usually for threads and may cause confusion for onlookers like myself. The documentation should be professional, use /* and */ for comments about the code itself. The Random variable in Dice should be renamed and should be private. All of prompts variables should be private, except for playername which should be replaced with an object such as player. What if you wanted to add things like wins vs loses? A string wouldn't be much help, but a Player object of some sort certainly would. (PlayerData would work) All-in-all it seems reasonable, but reviewing your documentation before releasing source should become instinctive, it is unlikely that your documentation will stay up-to-date while you are developing. A few design points: Since you are in a small text-based game using separate methods for all of the UI works, but you shouldn't get used to this. In an actual GUI, you won't have that sort of convenience. Always go private unless there is a good reason not to. While final variables are good, they have to reasonably not change, things like max damage and max health should be constructor parameters, and sub-classes may have final variables, although in larger rpg structures health will be dependent on things such as the level and type (elite vs normal) of the monster. Remember, you can always have more than one constructor, and final default variables are ok. Feel free to PM me whenever you need any help, just by *having* documentation, you are a step ahead of most beginners! EDIT: That was longer than expected, please note that your code was not at all bad, and works fine :)
There isn't really a need to set xms. That is the initial size of the heap, which if you set it to the same as the max size is probably going to cause problems.just do java -Xmx2056m -jar Tekkit.jar nogui Also pause is for batch, don't do that when calling the java, you can add that to a bat file if you are using windows, however.
The compiler will alter things as it sees fit, so chances are it's being complied to use StringBuilder. If you're doing concatenation of Strings in a tight loop then it makes sense to use StringBuilder (or StringBuffer if you're certain that it needs to be thread-safe). Even so unless the loops being called a large number of times or in an excessively low memory environment the performance gain most likely won't be noticeable. The other reason to avoid String concatenation though is that it puts your code in a better light - one of the best practices everyone gets drummed into them is to avoid String concatenation with +, so seeing it can give code a bad smell.
As bfoo said, you should use JavaFX. JavaFX is part of the JDK and thus available everywhere you find Java SE (from version... 7u2 or something). If you insist on using Swing you need a good look and feel. We currently use Substance (old version) now "deprecated" and forked into [Insubstantial](http://insubstantial.github.com/insubstantial/substance/). The best LAF I've seen developed recently is [Web Look and Feel](http://weblookandfeel.com/). It is still being developed but I don't know how stable it is. If you really want native look, my best bet is SWT (eclipse's way of doing things). The Swing native LAFs are good but not perfect. I believe [JGoodies](http://www.jgoodies.com/freeware/libraries/looks/) still have the best windows look-alike.
For your first, it's pretty well written actually. It's clear what your doing, intent comes across well, you commented it... So I'm going to talk to you about design. You have 3 creature classes. What do they do? They store values. That's it. In other words, they are glorified hashmaps. This is actually the first time I've finally found the terminology to express my problem with the getter/setter phenomena in Java. I can replicate your whole classes just by making a hashmap, in a few lines. That's not really what we want though. You've got the basics of encapsulation down, which is hiding variables from the outside world. Now it's time to really grasp encapsulation. You don't want to expose those variables *at all*. Contain the behavior *in the classes*. So, how do you do this? Why, you've practically done it already. Your functions are nice and contained, they do one thing and one thing only--which is good. The only thing you need to do is copy some functions from your overall class into the creature classes. For example, calculate player damage... you use player strenght to do that function right? Just copy it to the player class, and when you want to get the damage to deal by the player, call it from the player. So... player.calculateDamage(). Or something like that, you could probably change around names. Now, you don't need the getters/setters for the strength variable. Do the same with take damage functions. player.takeDamage(int damage) for example, and then you could add defense or something or whatever. Your code will start to look something like this: player.takeDamange(enemy.CalculateDamage()) And then say, have, for the creature class, an isDead check that returns a boolean. Then you don't have to use a getter to check the health outside the class. You see where I'm going with all this? So what you should do, is get rid of all your getters and setters. Keep the class structure though, and then make it work by putting the behavior in the classes as well. ... We're not done yet though. We're going to kick a few things up a notch. First, don't be afraid of static classes and methods. Your dice class? Make that static. Make the Random r, private static. Make the methods, like public static rollD10(). If you want, add in some others for expansive options, like rollD6(). Whatever. Why do this? Do you really need to create a Dice object for everything that ever needs to roll and dice? Not really, nor is there any good difference between two Dice objects. For your Creature class... get rid of the default constructor. Do you *ever* want a creature walking about without hp or mana values set? No, that could be the cause of bugs. Don't feel the need to put in a default that does nothing. If there is expected behavior needed for the object to behave like you'd expect, enforce it. Speaking of which, do you ever just want a creature out there? Or do you always want it to be a player or enemy or any other subclass you design? You can make the creature class abstract, which means it can't be created on it's own. Also, don't forget you have the protected scope, which allows access to subclasses only. Don't use it too much, but don't be afraid of it either. ... I think that's all I have to say now, have fun!
JavaFX does support UIs for the desktop. But right now, there is no CSS available emulating the native looks perfectly. However, there is some work going on trying to build css files making JavaFX look native on Windows 8 [here](http://pixelduke.wordpress.com/category/javafx/).
It is "true" java, it is just not running on the Hotspot JVM (obviously).
Javafx has a pretty good ui builder that is super easy to use and generates the ui code as javafx xml. Give it a shot. Its way better than swing. 
You're welcome. And about the registry, just stay away from it since it's a mess already if you ask me.
TIL. Out of curiosity, why would you want to immediately allocate the max? Seems like it would be slower if it didn't actually need 2 gigabytes, but I am not particularly knowledgeable on Java heaps, having never needed to increase the size myself
So what is the benefit of using GCJ? Machine code and therefore faster?
Most of the others have gone over the design. As for code review - you are better off putting it on GitHub / BitBucket / one of the other source code hosting sites than just putting all the files source in a single pastebin. You will also learn about source control doing this ;)
Get rid of the Javadocs, if I can't tell what your code is doing just by reading the code, then its wrong. The constructor calls on some of your objects are ludicrously long. Ideally should be 0 to 2 objects in a constructor. This usually means that your design slightly wrong if you have to pass that many objects around. Such as your position can be encapsulated inside a `Point` object. You could probably wrap up the mana, health and armor into another object too, like a status object. Also you probably want to use interfaces and abstract classes rather than extending the Creature class. Other than that I think it pretty good. Good formatting and code conventions. Most of your methods are fairly short which is great! Well done on the programming it just the architecture you need to work on!
Is Java*script* ok? (ninja-edit: I had to enable 'script to get this post to go through. But you guys already know that, I'm sure!) This affects ALL platforms of browser Java, correct? Browsers on Android, iThings included? Are there any "hidden" uses of browser-flavored-java that run on things like xBOX, Wii, Blu-ray players, etc? I obviously don't know how these devices interface to the 'net. Thanks in Advance!
i wish i could run it. that's amazing that you wrote that without even taking a class. i took a beginner class and i have no idea what most of the code is.
Yea, I understand that there are ways to write my program using fewer lines of code, but I have to work with what I've learned from my book so far, and I haven't gotten very far yet. I am trying to learn as fast as I can, but programming seems hard to get your head around, and that I like! I must say I havent heard of hashmaps before, so I guess I should read up on it. I just recently read about java inheritence, and that is the main reason to me creating the Creature class. Right now I am just putting everything I've read into practical use, since I find it easier to remember and understand the programming principles that way. When you are talking about containing the behaviour in the classes, what do you mean by that? So like other classes doesn't need to have direct access to the variables? I think I get what it is all about, but I am not sure. We are using getters and setters to enforce a strict way to set the variables, so that we can for example specify the domain of what the variables should be able to hold? I definately see where you are going with the stuff you are mentioning, and I will try to remember it as best I can. Speaking of the getters and the setters, they are all there because the book kept ranting on about "programmers best practices", and I tried to stick with what they have suggested. By making the Dice class static, and by not making a new object for every roll, will that save memory, or is it mostly about best practices aswell? I get that the runtime for a program such as this won't suffer much from bad programming, but I guess that later on, when things get a bit bigger, the program will be affected a lot more by bad programming. No, I didn't think to have a creature in my game, other than the Player object, the rest should be enemies, so making the Creature class abstract might be a good choise indeed! I will try it out for sure. Thank you very much for a clear and concise answer. I think I can learn quite a lot from participating in discussions here, and I have got people like you to thank for that :)
Thank you very much!
Yes, that seems like a very good idea. Are you able to provide me with any good starter references? Is it hard to learn?
You are welcome. Use it as much as you like!
Yes the static class will save you on memory. Its also just cleaner in general because that class doesn't maintain any state outside of its methods (I'm assuming; I haven't looked at the code). And there is no reason to keep instantiating stateless objects.
That's so awesome. I wish it worked like that over here :/
You're getting hammered likely because of your remarks on the Javadoc: Javadocs are good. Yes, you should be able to tell what code is doing just by reading it... but that doesn't mean you shouldn't have good comments/javadoc. Nor is it wrong just because it's not clear--it's just not clear. Javadocs have usage outside of looking at code. They form documentation, that is easily looked at instead of the code. Just think, when you need to look up a class online, what do you find? *Javadocs*. Lastly, if your using Eclipse or some other editors, they can show Javadoc simply by hovering--providing a quick simple way to see what a function does without having to spend time poring over the code. He should not get rid of the Javadocs. Some of it right now may not be so meaningful since he used a bunch of getters/setters, but as he changes the design to better encapsulate data and put the behavior into the classes, then he'll be able to create more meaningful Javadocs.
Github is super easy to use and there's good documentation provided here: https://help.github.com/ Plus you can make changes and know that previous working versions will be archived so you can go back and recover code if you need to.
Behavior... well, the simplest way I can put it, is all the code having to deal with those variables. So, as in the example I gave, calculating the attack damage a player will do deals with the strength / player state variables. So have that behavior (as in, functions, code) done in the player class. Basically, yes, you do not want anybody but that class to have access to those variables. Or at least you want to severely limit it. What you want, is for them to have *no reason* to do so even. You want to check if a creature is dead? Don't take the health variable from the creature class and see if it's less than zero, just ask the creature class if it's dead. Have the creature class check if the health is less than zero, basically have it do the work instead of having a parent class do the work by taking the data. Here's the concept: Don't ask for the information you need to do the work; ask the object that has the information to do the work for you. Practice doing this and it will come naturally. ... Getters and setters... They are the worst "best practice" there is. Yet they seem to be taught to everybody all the time... Well, that's their function, they *introduce* the concept of encapsulation. They are, however, the worst atrocity to plague object orientated programming. They are a plague. Yes, they can be good *in some* instances, but they are altogether something you should avoid completely unless *absolutely* necessary. Let me explain... the general minset behind them is that, having public variables is bad mkay? It's true, having public variables are basically ticking time bombs waiting to happen. It's state that can be manipulated by anyone, anywhere, anytime, anyhow. I had jobs where there are billions of lines of code with public variables... bugs and glitches popping up everywhere because some moron decided to touch a variable they shouldn't have any place/reason doing so. Incredibly difficult to detect, incredibly difficult to find out who to pin the blame, and then incredibly difficult to fix. You can't just change it to private, because tons of people are poking random things. Well there's a solution they say! Getters/setters! Now, let's ask you something, is there really much difference between that and a public variable? What really is the use when your still allowing anything and everything to touch things they shouldn't be touching that could screw you up somewhere? I mean, okay, sometimes getters make the simplest way of doing something. Okay, a few getters is acceptable. A setter however is almost *never* acceptable. A few rare cases, you really need a good reason for doing so. (Well okay, you don't really, you can do what you want, but you should take up this mindset to save yourself a lot of headaches.) They are basically ONE step above public variables. --- Well, that was a long rant... here, the gist of it is, you *shouldn't* need getters/setters with good design if you bundle the behavior with the data. I'm going to repeat the concept: Don't ask for the information you need to do the work; ask the object that has the information to do the work for you. Programming words to program by I say. ... As for the Dice... it *could* save memory. But this is not really a memory issue, simply a better practice. Think of it like this, do you need separate dice objects? Plus it creates more work for you. Assuming you follow my advice, now that your breaking up the behavior you'll either need more dice objects (each creature needs one) or you'll need to make it static. I guess the question to pose yourself is this: does the behavior *ever* change when you create a separate Dice object? Then answer is not really.
Scenarios in which that might happen would be unsecured [RMI](http://en.wikipedia.org/wiki/Java_remote_method_invocation) which can be made to actually transfer java classes which then could escalate their privileges.
Client-side java has been basically irrelevant for years. It has very little to do with the success of java on the server side, and as other people said, the server infrastructures are usually not as risk from such vulnerabilities. 
It uses the Java development eco system and basic syntax. Dalvik, the runtime, is different from Java though. It does not execute Java bytecode and of course also doesn't have the Java standard library.
Correct me if I'm wrong. HTML5 and Javascript are going to require a browser engine, yes? Do they require an application/webserver server also? Of course, these can be lite versions, but even so, are you not installing a weighty process on a client machine, before you can even do a 'hello world'? To be clear: I am using SWT because it's the 'best' solution I have found. If there is a better one, I need to know about it. 
I did expect to get hammered for it saying that, but more people need to know that comments aren't always good and that more documentation does not mean better code. I don't see how you would really need a Javadoc unless you were creating a public API. Clearly this is a simple program and you gain almost nothing from any of the comments in the code linked above. Eg: /** * Method for calculating player damage to enemy dragon. * * @return Returns amount of damage done to the dragon. */ public int calculatePlayerDamage() { That Javadoc takes up 6 lines of code! What have I learned from that which I couldn't have learned from the method signature? Nothing. I believe the method name could be made slightly clearer, but there is certainly no need for 6 extra lines which just gets in the way. Another reason for not writing Javadocs for classes like these is because of decay. It adds another level of refactor, and an untestable refactor. Your comments will decay overtime, and they will become more and more unless than they already are. There are certainly times when comments are appropriate, I just don't see any here.
Advocate for better comments, not for no comments. It should be that simple. And yes, documented code is better code than the same stuff without it. Just like formatting and style guidelines improve code quality, because presentation and readability matters. And no, as I said, Javadoc is typically inlined to contexts if you are using editors, it has uses outside public API. It furthermore provides an easy way to get back into a project after a while, just generate the Javadoc for a quick overview. &gt; takes up 6 lines of code! It takes up 0 lines of code, as it isn't code. Again, advocate better documentation over no documentation. It even looks better, because it provides a bit of whitespace between code chunks and gives it a nice feel of organization. Quite frankly, his poor quality documentation is better than not having it at all, and his adherence to doing it even when it should be obvious is a trait to admire as it becomes habit for when he does need it. Check out the Point class, the class you advocated. You see it's methods? Each one documented, even if you think it would be obvious. You could always crack open the source, but when have you ever? One other thing, even if you aren't making a public API you still have at least one person who down the line might need to look at it at a quick overview. As for decay, that's ridiculous. Sorry, if the method changes than certainly the documentation for it would need to be changed as well. They also do not decay overtime, obviously, they decay when you change what happens... WHICH shouldn't matter with good documentation. As the implementation details *do not matter* with good documentation. Lastly, comments and documentation are a bit different. More importantly, none of us would have liked to have gone through his code and saw absolutely no documentation at all. Well except you apparently. Almost every single person except you applauded his documentation, and one person even stated he's ahead of most beginners because of it. ... Code, no matter how self-documentating you think it is, will never express intent very well. Furthermore, everybody is at different skill levels and regardless if you think your code is so clear as to be readable to everybody, it doesn't actually mean everybody can read it. ... Oh, by the way, just the last most important thing: calculatePlayerDamage() This function? It's not clear. Is it calculating the damage to deliver to the player? What exactly is the context of it? How would I know this? Why, if only there was some documentation for me to clarify my questions...
So you're a liar, a troll or just stupid. Which is it?
Who uses Linux except losers anyway? 
You should avoid using sleep in your gaming loop, it is typically better to use the System time and refresh when the last checked time has passed your threshold (in your case 100ms). This should give your game smoother fps. Not sure this will help the flashing text though, probably better to work with Swing than console output.
If you have to read the code to know what the code is doing then it's wrong. 
&gt; And yes, documented code is better code than the same stuff without it. I have to agree takac00, that this is not always the case. Public APIs and non-obvious internal APIs should be documented, but well written code (meaning descriptive naming and clear structure) planned to be used in certain limited context does not warrant the extra maintenance burden JavaDoc brings. Documentation is not free; it takes effort to write it and it takes effort to keep it up-to-date while also adding the possiblity of code and comments being out-of-synch, which is worse case than comment not being there at all. Sometimes the effort is better spent in making the code read better. There are many instances of this in OP's code, e.g. the one quoted above.
Unless you do a fully static compilation of your C and C++ application, the runtimes also need to be installed. Of course they are much smaller than the Java one.
do you know of any apps which accept RMI and run with a security policy? I think having RMI exposed at all would be the bigger concern. I haven't had to deal with RMI so I don't know if it runs with any "default" protections.
Here is the latest SWT nonsense that surfaced today. And makes me want enact the table-throwing rage comic. [screen recording](http://youtu.be/RlD4E2_WCwo) Seriously investigating Python with WX, as you seem happy enough with it. 
javascript is not java. I believe this only affects Oracle Java 7 web browser plugins. I don't think the same classes are available on android (namely the javascript^(*) classes, possibly the jmx classes as well) but I could be mistaken. OpenJDK 7 lacks the necessary javascript classes. \* - the javascript classes i am referring to allow the JVM to run JavaScript, but regardless of that, JavaScript is not Java. You should however still use noscript and whitelist sites you trust.
Scrolled down until I saw currentStrenght and had a heart attack.
Of course a server is used. But now you can have a simple server, mostly handling data exchange and authentication, and let all controls and views client side. Most users are happy enough if they connect to a server with their favorite browser (even IE now) instead of installing a client application. I too made many SWT applications because 6 years ago you couldn't handle big scientific data rendering and manipulation in real time in a browser, but that era is now finished. I even stopped making Android applications and replaced them with dedicated HTML5 webapps (yes, this can't be done for any kind of application today).
Does this Java vulnerability exist on either iOS or Android devices? If so which ones, and what should one do?
I prefer applications where I can choose the LaF myself, Nimbus looks nice but one of my systems is stuck with an age old GPU making any GUI app slow. My experience with LaF on linux (fastest first): * Motif LaF * Metal LaF * Nimbus LaF * Gtk LaF With all the rounded and shaded looking elements in Nimbus, it should not be surprising that there is a large speed difference between Nimbus and Metal. Sadly having the user choose the look and feel means you have to check if your GUI has glitches in any of them -&gt; fixing a glitch in one LaF might create a new one in a different LaF. 
As pointed out by beltorak Javascript is not Java. AFAIK the name Javascript was used as a marketing trick at a time where java was the next big thing. The original name of Javascript was Livescript and was renamed before it was first releases by Netscape (browser) and Sun (Java). If the Java plugin is active it can interact with Javascript, but that is all they have to do with each other. (Sun had a habit of puting "java" in the name of everything with just a remote connection to Java itself)
I never encountered it in the wild, only as possibility.
That would be awesome lol
That is not always the case? You guys are jokers. Honestly, there is not a single professional out there that enjoys having to work with code that the previous developer did not put documentation in it. You guys are vastly taking advantage that this project is relatively small with few access points and you can read through rather easily. If this was a big project or complicated you two probably wouldn't even bother to have read it. You guys keep ignoring the inlined context. I figure it's probably at this point you know your wrong because of it. *Everybody thinks their code is readable.* How about you two put up some code without documentation, this great stuff that will be out there, some workable project, so I can lambast you about how unreadable it truly is. Lastly, you guys can skip the documentation if you don't like it, but if it's not there it's not there. I separates code junks and makes code cleaner even especially to people who've looked at a lot of code that has been documented. &gt; documentation is not free It has more benefits than cons. I hear whining about how terrible it is to write it and so much effort it takes to keep it up-to-date... you know what? That's a BS excuse. And it's like you didn't read my post when you replied... get this: **implementation details do not matter with good documentation**, well for good designed code anyways. I bolded it for you so you can take it in this time. If you are furiously typing code and don't have any spare time to document it you are doing it wrong. That code will be complete crap. I can program as fast as they come but I still find some time to write a quick comment/javadoc documenting my code, and it's because I'm constantly thinking about good design. I have plenty of time to spare while thinking of my next move. Furiously typing code doesn't even happen honestly. &gt; There are many instances of this in the OP's code, e.g. the one quoted above Actually no. I need to really get this through to you guys, because apparently this didn't make it through. What the hell does "calculatePlayerDamage()" mean? I want you to take a step back. Think of it like you've just come across this method, or that you've been away for a couple months and now think, hey, let's improve my dragon text game... You stumble upon the use of this method. Am I calculating the damage to the player or from the player? Okay, well, there's some strength variable... good thing I have background knowledge in RPGs **that not everybody has** and know that str typically = dmg. But what if this guy is creating a new system where str is defense too? As it is, both of you jumped to conclusions you shouldn't have. "calculatePlayerDamage" is NOT just plain readable by itself, *because it's ambiguous*. If you didn't have background on RPGs, the documentation is actually necessary for somebody looking at the method to understand what it's doing exactly. Furthermore, and this is the big point: **code doesn't express intent**. You're looking at it like a pristine case. But maintenance time comes, people have to figure out what the hell went wrong. Now I come to this method, and the end result is it deals damage to the player, how would I know that it's not supposed to do that? ... You know, it's just ridiculous. That you two are looking at a beginner, somebody just starting, and your guys advice is to... uh, don't document/comment your code. What a disaster.
[citaton needed]
You want me to provide a citation that Android uses Java? No, Google it. It does not use Hotspot and does not use the Standard library as I said in my first post. But it clearly absolutely uses Java. (You can also use java standard library jar files in android apps and they will just get converted) Remember Oracle took Google to court over using Java, but Google won.
&gt;Remember Oracle took Google to court over using Java, but Google won. Which is precisely why google does not use java. You as the developer use java but java does not ANY way run on android period. Remember if you use java in your products, you have to be licensed and pay oracle for the right to use the name java. Google has not done that. Oracle took them to court for breaching their IP which they lost. So now google doesn't have to pay for the name 'java' because they don't fucking use it. You as the developer use java. Android does not use java in ANY fucking way and that's why you can't find an official source by google that says they do. 
Look at the Android docs, Java is mentioned dozens of times. Android does not use Hotspot. Hotspot is not Java. Java is trademarked, that also does not mean that anything that does not pay to use that trademark is not Java. You are being extremely pedantic.
The tutorial trails on http://java.sun.com used to be really decent starting points. However, it sounds like you might actually want a grounding in OO software design first as well.
If you want to write graphics, the correct way is to use a curses library. Instead of spitting out a hundred new lines each frame the terminal can be updated more intelligently. There a pure Java curses library called [Lanterna](https://code.google.com/p/lanterna/). 
&gt; In reality what the architect said is true, there isn't a similar JSON schema that would be widely supported across technology stacks. How often does this actually come up as a problem? I ask out of genuine curiosity. Having developed both client and servers for both XML and JSON services, I've found that XSDs tend to hinder me more than help (added complexity with and little, if any, help in validation or marshaling), in most cases. Just wondering if your experience is different.
You could check out YouTube. One good guy for learning is Bucky aka [thenewboston](http://www.youtube.com/user/thenewboston). I'm also learning and he helped me out a lot, but the best way is just to keep practicing and making small projects. Tutorials for games aren't always the best to follow, You'll probably get more knowledge out of just putting everything you know together. Just keep at it and get the basics down as these are going to help you more the more you fully understand.
&gt; You guys are jokers. Thanks. I would appreciate more civilized tone, but whatever. &gt; Honestly, there is not a single professional out there that enjoys having to work with code that the previous developer did not put documentation in it. I am a professional in the field software development, yet I have no problem with missing JavaDoc, when other code qualities (like naming and structuring) make the intention crystal clear. This of course does not mean, that I'm happy to see a non-trivial system built without JavaDocs, but my point is that there are many obvious enough pieces of code where it can be omitted. &gt; You guys are vastly taking advantage that this project is relatively small with few access points and you can read through rather easily. If this was a big project or complicated you two probably wouldn't even bother to have read it. You are correct, that I probably wouldn't bother to read it (whether it had documentation or not), but I do work with complicated systems, and that is also basis for everything I say. If you have a relatively clean architecture (which unfortunately isn't always true), big complex system is formed from pretty simple components with controlled interfaces. Some of these components are isolated enough, that they are essentially small and simple projects with just a tiny interface (which usually should be documented extensively) to other parts of the system. &gt;&gt; documentation is not free &gt; It has more benefits than cons. Sometimes, yes. Writing a comment for a module (as pretty much everything done in software development) is a trade-off. It is done to improve maintainability (or more specifically readability of the code, but this mostly aims for better efficiency and fewer errors when modifying the system), but as said, this isn't free. You have to spend time writing the JavaDoc, and in professional setting, someone has to pay for that time. If you modify the interface, you need to modify the JavaDoc too. Once again this costs money. If maintainability is improved enough, the cost is justified, but this is not always the case. &gt; implementation details do not matter with good documentation And (to exaggerate a bit) documentation does not matter with self-documenting code. &gt; If you are furiously typing code and don't have any spare time to document it you are doing it wrong. That code will be complete crap. Why would the code be crap? If the time spent writing comment is used to improve the code quality, it could actually be less crappy. In my opinion, comment coverage is somewhat orthogonal to code quality. &gt; I need to really get this through to you guys, because apparently this didn't make it through. &gt; What the hell does "calculatePlayerDamage()" mean? Fair point, but seems that the root cause for problems here is bad naming (or perhaps even bad structuring), not missing comments. &gt; Okay, well, there's some strength variable... good thing I have background knowledge in RPGs that not everybody has and know that str typically = dmg. Well, the comment we're discussing doesn't help here. It pretty much states the same thing as the method's name. You could improve the comment, but you could as well improve the naming and make the comment unnecessary. To clarify furher with another example of a typical method. Something very similar can be found in pretty much every system written in Java: /** * Returns the value of property foo. */ public int getFoo() { return foo; } How much does the JavaDoc contribute to maintainability of the code? Every Java developer knows instantly that the method returns the value of property 'foo' just by looking at method's name. I don't see how the JavaDoc makes it any clearer.
&gt; civilized I would prefer if you wouldn't take things so personally. Would a "you kid", or a "you jest" have been taken more "civilized" by someone of your stature? &gt; that I'm happy to see a non-trivial system built without JavaDocs Isn't that what I said? You sure know how to make a bunch of rhetoric reiterating it. I said there is no professional who enjoys it, you just stated exactly that. &gt; but I do work with complicated systems And all of that is largely irrelevant. I find it a little shocking you don't take into consideration that maintenance is often the largest time spent, and you seem to think that wasting time putting in comments that will help maintenance is such a time consuming waste... not that it matters, as: &gt; someone has to pay for that time As I said, time consumption is a red herring. &gt; this is not always the case In the case of documentation, it actually is always the case. Undocumented code is a plague, and I haven't met a boss yet that would accept it no matter how many pathetic excuses you put forward about it. Again, PROVE IT. Stop rambling theoretical BS and show me some decent project that lacks documentation and yet is so great in readability. &gt; documentation does not matter with self-documenting code Alright, time to put this under the rug. There is NO SUCH THING as self-documenting code. There is more readable and less readable code. I don't care if you think your code is readable, it does NOT EXPRESS INTENT. How many times are you going to avoid this? I don't appreciate you dodging every single thing that proves your inane ramblings wrong. &gt; would the code be crap? Programming is more than just typing. If you aren't spending time thinking about the design and how components combine your code is going to be crap. &gt; time spent writing comment This is inane BS. You mean to tell me your under such time constraints that you're writing crappy code if you have to write a comment for your code? How long does it take you to write a comment? This whole justification is absolutely stupid. &gt; root cause for problems here is bad naming Nope. Unless you are making massive function names, that actually a bad code smell and makes code hard to read (what would ya know?), in general most function names are ALWAYS going to have a bit of room for ambiguity. The solution, of course, is still not ever delete all the javadoc. &gt; Well, the comment we're discussing doesn't help here Uh, yes, it does. It looks like you'll argue BS without even looking back. You've made that without even understanding... here, the javadoc is: "Method for calculating player damage to enemy dragon." It doesn't state the same thing. It solves the ambiguity of the method name, as in NOW I KNOW that it means calculating damage the player deals instead of calculating damage to the player. It expresses intent. Amazing. &gt; pretty much every system written in Java: (getter) A bad comment. Why is he exposes the property? Saying WHY is a good comment, a good documentation, something that the getter will NEVER be able to express. Of course getters are typically bad design in the first place. That's why good documentation and comments express the WHY, not what it's doing. The solution is make better documents, not throw it out.
If you want to see how some basic 2d games work you try these http://zetcode.com/tutorials/javagamestutorial/.
&gt;&gt; that I'm happy to see a non-trivial system built without JavaDocs &gt; Isn't that what I said? You sure know how to make a bunch of rhetoric reiterating it. I said there is no professional who enjoys it, you just stated exactly that. Well, ok. Seems that I have misunderstood your point. I'm not sure if you agree that some simple enough pieces of code don't necessarily need comments, as the code itself can be read like a description, but I'm definitely not advocating getting rid of comments altogether. Commenting is one method to improve the maintainability and should be used if and only it actually does improve it. &gt; Alright, time to put this under the rug. There is NO SUCH THING as self-documenting code. There is more readable and less readable code. We seem to disagree here. I'm too lazy to start finding examples of any non-trivial self-documenting code, but Robert Martin's Clean Code covers the topic with some real-life examples. Could be eye-opening reading. It's a good book by the way, even if you don't agree with everything he says. &gt; I don't care if you think your code is readable, it does NOT EXPRESS INTENT. How many times are you going to avoid this? There are times when the intention is trivial enough to be expressed with the code. Design is the key here, as in writing small very concise methods and modules with single responsibility allows one to express the intention with a couple of words, which then can used to name said method or class. As doing perfect design is harder than what most of us are cabable of doing, it's often needed to clarify the intention with comments too.
What do you mean, "newer"? JD-GUI v0.3.5 was released on October 18th, 2012, it's not like the author died and left us without updates for several years. If you think you have found a bug in JD-GUI, why not contact him? He accepts donations on his site, have you asked him about doing the quick reverse-engineering job? He certainly is the most suited to do that.
My process involves 3 things: 1. Commit to using the language in personal projects. Like other posters have mentioned, the most important thing is to write code, but I think an important corollary is that it requires a real personal investment along the lines of, if I don't do it in this language, it won't get done. 2. Focus on tackling I/O features first. While the ultimate goal of learning new languages is arguably to learn new paradigms, I/O is where the rubber meets the road. Implementing command line tools in the Unix style (produce/filter/consume lines of text from/to stdin/stdout/other files) allows you to incorporate those new paradigms gradually while completing real objectives quickly and consistently. I find this reduces frustration and improves the likelihood that I'll stick with it until I'm comfortable. 3. Reduce barriers to reference lookup. Learn where examples, api docs, and forums exist, and write/get tools that help you get there faster, so that the effort in looking something up becomes reflexive. Eliminate the possibility that you will use "I don't know why/how" as an excuse to not take the next step. As a personal example, I wrote a couple tools using Powershell and jd-gui to assist me in decompiling maven artifacts from my local repository on demand so I could look up underlying implementation details as part of my normal workflow. Incidentally, the reasons I used PowerShell for this include items #1 and #2 described above.
http://www.reddit.com/r/technology/comments/16i6on/new_java_update_release_you_should_update_right/
&gt; A setter however is almost never acceptable. *In a proprietary Java application. In a web framework they are extremely useful. 
Try [Greenfoot](http://www.greenfoot.org)?
No.
From a technical perspective, this is only really an issue with the browser plugins. The main risk is that the words "security problems" and Java will get linked in the minds of non-technical executives. That could start a trend toward other platforms and hurt opportunities long term. Oracle and the Java community in general need to get on top of this to prevent that.
I would recommend you look up you tube for more specific examples, but as someone who recently started working with java i will try and explain classes and objects as i understand it ( from my reprogramming experience my understanding is proving correct). So essentially a class describes an Object. An Object can be really a representation of any high level function. Ex. Your game has enemies. Lets call this class Enemies.class, in this class you will describe all behaviors ( using methods, and variables ) of the enemies, eg health, lives, strength etc ( understanding what you want your enemies to be able to do, will definine what behaviors you need to program). You can than use this enemies class which is generic ( ideally ) which you can further refine to describe specific enemies eg a Boss. The general enemies and boss share many of the same properties like health, strength etc... so instead of you having to program how the health functions work for general enemies and the boss. You can just use the behavior of the enemies class, in the boss class, and any special behavior only used by the boss can be programmed in that class. This is where its important to understand the extends keyword, and modifiers like private, or static... Hope that helps a bit.. writting on phone so have to keep details short
You know... we get this question ALOT
Here are some shots I took of an interface I've been working on, and although these are quite old (has been updated significantly), I reckon they show some potential for Java Swing / AWT interfaces. http://imgur.com/a/Nqn1z#0
&gt;Look at the Android docs, Java is mentioned dozens of times Yes because as I've already said you develop in java. Then compile java into java bytecode. From there the dalvik compiler converts the java bytecode into its own bytecode which specifically avoids oracles IP and patients for java. The dalvik bytecode then runs on andriod on the dalvik virtual machine. Thus andriod is not in ANY WAY associated with java. Now put up some some evidence by google themselves to support your argument or shut up. 
Looks great! I'm learning to (I guess we're all always learning) and I'm working on a project like this. How do you store the current state the game is in? I've looked into JSON and simply having Java write text files, but I can't wrap my head around them and ATM the only way to test it is to manually create the instances of my creatures, weapons, and players in the main method. EDIT: Oh sorry, didn't read your post all the way.
I'm starting a high school Java class in February. Let me know if you're interested in following a long. A lot of the links here skip over TONS of basic stuff. P.S. post questions like this in /r/javahelp
yes, people should be directed to /r/javahelp
It depends. The OP didn't really deliver any pertinent business requirements from which we could draw conclusions, instead of just concentrating on getting his way. If the API is used in active two-way communication of complete or partial data documents, then local standard validation would probably be a technical requirement. Even just inside a larger organization. If the business requirements the API conceptually fulfills are projected to be around for half a decade or longer, it will likely evolve quite a bit along its lifecycle, which would again necessitate that kind of validation. When you let your data go bad, the developers will suffer much more than if they can't use their browsers to debug the API.
I am at work right now. I appreciate the responses. I will look further into the links posted on here tonight. I am serious about advancing further with java. I just have to understand this object oriented stuff first. Thanks 
I assume he will provide you links to the source material they have to refer too.
Pretty much what I figured. I think that would be great. A structured lesson or plan to follow would help me I believe
Are you kidding? The biggest complaint most people have is that libraries are too large, and that there are too many...
Just checked out Greenfoot. Looks interesting but I'm afraid it might keep me from learning to actually code on my own instead of using Greenfoot. Anybody tried this?
Java mentioned twice there and I already mentioned Dalvik and Java being trademarked. So Java it is then.
Write code and have things break. You'll only make the same poor coding choices a few times before you commit it to memory.
It depends on your school I guess. Sometime around sophomore year we were able to pick our own languages/frameworks to develop our projects in. 
[thenewboston](http://thenewboston.org/) has over 200 tutorials on java, this is what i learned java from... very helpfull and free.
switch statements i can understand...there are now enum and string switches in various compiler-dependant variants, often with fall-throughs and deep breaks/continues into outer blocks. but what do you mean by vectors?
Sorry, I should have clarified. There seem to be trouble with arrays of objects, such as Vector&lt;Point&gt; or others.
It looks like Greenfoot is just a more visual IDE that you would use to develop with. None the less, it still uses java in the background, and I'm guessing that there's a lot of pre-code that you can work off of. Either way, Greenfoot seems like a decent place to start with, especially using java for game dev work.
I don't think this book is all that great, but I can attest that it's not terrible which is more than can be said for most java programming tutorials. It's the book I learned from, anyway. That said, this book assumes you're already comfortable with java programming. In particular, it does not try to teach you about OOP nor classes nor objects or anything like that. 
Well it goes over sound, graphics, graphic transform packages, 3d, "3d sound", and controls. There aren't many books with Java [that I know of that do that]
hmmm, arrays of objects in java are things like Object[] or String[] or Point[], JD-GUI shouldn't have problems with this. Vector&lt;String&gt; is a parameterized generic type...don't know how good JD-GUI is with that, it should at least show the raw type Vector without problems. don't know a better decompiler currently.
Head First Java is a good book to start with but since it's a OO course you might be better off reading [Head First Design Patterns](http://www.amazon.com/First-Design-Patterns-Elisabeth-Freeman/dp/0596007124/ref=sr_1_3?s=books&amp;ie=UTF8&amp;qid=1358177481&amp;sr=1-3&amp;keywords=Java+Head+first) If you want to understand Java as quickly as possible pick up Joshua Bloch's book, [Effective Java](http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1358177867&amp;sr=1-1&amp;keywords=effective+java). It contains plenty of design patterns and useful java nuggets of information, but assumes you are familiar with the language already.
The associate test is pretty easy. We expect our new hires, fresh from school, to be able to pass the test after about 2-3 months of being on the job. Much of the codebase at that shop was Java based, so there was daily exposure. No real expectation of solid Java skills from most university programs. Most folks were able to spend a bit of time each evening going over one of those test prep books after week 5 or so. The Associate test basically covers some of the Java basics. Dealing with Strings, objects, flow, and some of the normal things that people get wrong. It also covers some of the 'what is the Java platform' style questions. What is a servlet, what is RMI, what is an EJB, SE vs ME vs EE versions - high level stuff. So... is it worth the bother? Depends. In our case, it was a bit of a confidence booster for the new hires. It does cover the basics reasonably well, so you would not come off like a total chuckle head. I'd not pay the $300 (or less, if via an Oracle partner shop) just for self edification. This sort of thing makes for fantastic MBO fodder - where the manager is looking for some measurable metric of growth to justify giving out some sort of bonus. If you can pass it, odds are you will be somewhat prepared for most technical interviews at the Jr level. This test is not a pre-req for anything. It is reasonable practice for the format/sort of questions you would see in the Java programmer certification. That one is a bit harder. It covers the language in depth, including parts you probably won't use in your day to day coding. It also covers 'what happens when' type questions, where you need to know what happens with code that would *never* pass a code review. This test is a pre-req for many of the other certifications. Studying for this one will make you a better coder. 
No 6. Not understanding the passing of variables but writing like you do. Java always passes by value, it's just that with Objects, the value is a reference/pointer.
It doesn't inhibit you, just don't depend solely on it. It's really nice though for getting you learning to create games without having to know about audio codecs, double buffering and so on. I'd definitely use it while you're learning about creating games in general, and once you can comfortably use it, try moving on to something else. But the point is, if you can't do Greenfoot, you're likely going to struggle with other things. Some time I may get round to making a guide for building a simple game engine with Java, but until I do, I'd recommend Greenfoot. EDIT: Also @darkpool2005, you're right. It is a bit more visual in it's displaying of your classes than normal IDEs, but it's a fully fledged IDE by it's own right. It has code completion and so on (hit Ctrl+Space). Oh and on the "keeping you from learning to code on your own part", I used Greenfoot to learn programming (and Java - it was my first language), but then had no trouble moving on to more advanced things. Even though I'm at the point where I've done things like build game engines in C++, I'll still create things in Greenfoot now and again just because I find it really nice for creating something simple quickly. EDIT 2: As an example, here's some stuff I've made recently: - http://www.greenfoot.org/scenarios/5055 - http://www.greenfoot.org/scenarios/7179 - http://www.greenfoot.org/scenarios/7192 EDIT 3: (I promise I'll stop editing!) Though I haven't tried it, I heard Slick2D may be worth a look
This is probably one of the best Java GUI's I've ever seen. Then again I don't do any GUI work, mainly only web services/ restful services. 
I have been through about 20+ tutorials of his. I did learn some stuff from it. But I read some negative things on this subreddit regarding his tutorials so I stopped watching them. Maybe I should just keep going through them to supplement the other information I'm taking in. Can't hurt right?
Thanks to you and darkpool for the informative posts. Installing Greenfoot now and will play with it tonight after work. Looks like it could be a good tool.
You'll probably want to have a look at [this](http://www.greenfoot.org/doc)
yea somehow oracle must make money...the billions from their database software and everything else, I feel bad for them. I hope they can still keep their data centers open!
I heard bandwidth was free and it was difficult to unclick a checkbox...
Still better than Flash :P http://www.techrepublic.com/blog/australia/googles-sneaky-adobe-partnership/1343 I noticed that some Java (JDK only?) installers are without tool bar bundles...
Thanks for this informative answer, it is really valuable. I'm planning on doing both the OCAJP and the OCPJP certifications, and I believe the OCAJP will give me a good stepping stone to the OCPJP (albeit simply a mental stepping stone, especially since I don't *really* come from a programming or computer science background).
That's a shitty excuse. Oracle brings in money from Java in other places *and* Java could easily be downloaded via torrent.
I am using eclipse, but I am very new to this all, it didn't seem to come up with anything.
Also, would you mind writing out the code for me, just so I can see where I am going wrong, it would be greatly appreciated as I'm new to all of this and don't fully understand everything you are saying.
TRUE GOOD POINT; When you make enough money from your own company to buy a mid sized planet, clearly that company is not in good financial health to omit some adware that makes your flagship product look like something from a free mobile app.
Random dice = new Random();
 All you needed was to change the Random object's name to dice and your code should work if I am not missing something. Pay attention to the errors popping up in eclipse, I cannot believe nothing came up when your using a variable you never declared. class Sausage { public static void main(String[] args) { Random dice = new Random(); int total = 0; int temproll; int average; int counter = 0; while (counter &lt; 10) { temproll = 1+dice.nextInt(6); total = total + temproll; counter++; } average = total/10; System.out.println("Average: "+ average); } }
Ah, I see, thank you very much :) 
He should also use average = total / counter. 
The point is how much Ellison *has* made vs how much Oracle is *currently* making are two different animals.
counter will equal 10 so...
Exactly. And if Ellison *were* to liquidate $500M of the Oracle stock that he owns just for this purchase (at which point, you could consider the two somewhat intertwined), NASDAQ would flip out - if he's even allowed to sell that much in a short amount of time.
looks cool, im not using jsps though.
It is frustrating when you have to help your parents and the first step is uninstalling crap ware 1 through 50 just to make sure that none of it caused the problem. There are enough people with limited computer expertise, my mother for example can surf web pages, google, create office documents and knows that updates should be installed - it works only until the ingrained steps that let the computer do its "magic" no longer produce the expected outcome. Just replacing the default search can be enough to leave some stuck with "google no longer works" until they get someone to "fix google" for them.
I got annoyed with the windows plague that are custom installers/updaters years ago. Then I got annoyed with Ubuntu breaking my systems long before they added crap ware to it. Currently on Debian with java installed per apt-get, what is this ask toolbar you are talking about? On a serious note Oracle never cared about end user experience and their enterprise customers either don't have to deal with the ask toolbar or their internal IT deals with it. Oracle just makes sure to squeeze out the last drop of cash by wringing the cows neck wherever it can. 
If more people used [Ninite](http://ninite.com/), this wouldn't be such a problem. I hardly even knew that they offered this. In fact, even without Ninite this shouldn't be a problem because they don't force you to install it. It's a free product, for goodness sake.
Argggg so not fair. Almost every class uses a different one, with the professor choosing. 
Also watch a few Google IO or Tech talks on Java. Since you are new to the Java ecosystem, spending a few hours you can get a good grasp on Java's state along with a plenty of tips and tricks from industry experts. Since you learned python, a good portion of programming logic will carry over pretty easily, expect for FP. 
hah yah you're right, I was just saying with the program the way it is
http://www.zdnet.com/blog/btl/google-defends-fair-use-of-java-on-android-in-closing-statements/75762 Java API and language is used. Hence it is real Java. It is not Java ™ and it does not use Hotspot but it is Java. Because you are incapable of googling for yourself.
Is that *really* the only way for them to make money?
The horrors of installing chrome!
DAMN THEM FOR TRYING TO MAKE MONEY TO CONTINUE MAKING PRODUCTS LIKE THAT. OH THE FUCKING HORROR.
lol, do you go through your entire life only doing things 'just fine' also?
&gt; Don't ask me why I'm doing it, but I am So, homework. Others have already given you the information you need, so I'm going off at a tangent. Don't bother with the following lines at the start: int temproll; int average; Declare the variables where you need them [e.g. int temproll = 1+dice.nextInt(6);]; it cuts down the number of lines of code, is no less clear what the code's intent is, and will stop you being tempted to reuse a variable for different purposes through the method. The compiler and/or JVM will be smart enough to reuse a variable if it sees fit.
Actually, yes, for the most part. Only by "just fine" most of us would describe it in terms of benefits or advantages. Now, what is the benefit of installing a browser toolbar to Oracle? Maybe they get a few dollars out of it. OK, that's easy enough. But now, what are the drawbacks? There are many more drawbacks than benefits. Couple their arrogance with the fact that many IT professionals will now summarily uninstall Java on any desktop they support, and all of the sudden it doesn't look like Oracle really stands to gain much from this type of crap. Unless you think installing a silly toolbar somehow equates to making life measurably better for either Oracle or their users, then you can only conclude that it's misguided at best.
Can you remind me in a week? I'll have more information then. Basically, I'll be posting my lessons and assignments online. You can do them and email them to me. I'll mark them and return them to you. 
You keep repeating yourself, doesn't make you any more right or any less pedantic.
There is no use in trying. Oracle has money therefore they are fucking evil. You know how reddit is. If someone has something and someone else needs it and they don't give it to them for free - FUCK THEM. Look at the way rich people are treated here. Hell, just the other day we had a normal fucking guy with a standard ass fucking American house and people were bitching at him for being rich. IT WAS A NORMAL FUCKING HOUSE. Shame Oracle for trying to make more of a profit. What a terrible goal for a company. To make fucking money.
I don't force useless crap on my customers just to make a buck.
What is this toolbar you are talking about? Are you sure you are getting java from [https://www.java.com/en/download/index.jsp](https://www.java.com/en/download/index.jsp) ?
Might be double-posting because of a power failure, but here's some basic info about Oracle (who are behind Java): • They make enterprise hardware and software which is the envy of the world (except Java, which has had some less-than negligible flaws lately) • Their market cap in 2012 was $165B; it's safe to say that that's more money than anyone here can even dream of making in a lifetime. • Net income in 2012: $10B. Also an obscene amount of money. • [Here's what they do with the money](http://upload.wikimedia.org/wikipedia/commons/1/12/Oracle_Headquarters_Redwood_Shores.jpg). • [Here's their primary source of income](http://www.oracle.com/us/products/servers/overview/index.html?origref=http://www.oracle.com/us/products/servers-storage/servers/sparc-enterprise/overview/index.html). Any questions?
*sigh* /me watches planes fly over dakboy's head
Does it hurt too much to admit your wrong?
The Ask toolbar was included back before the Oracle acquisition. It was a sad day when Sun Microsystems decided to bundle it. 
When computers that we pay $500+ stop having bloatware it'll be worthwhile expecting our freeware to not have it. Honestly if i wrote a program and some company offered me some cash to include an option to have their software installed with it i'd prolly take the offer too. After all, you can always uncheck the box can't you?
I can for sure do that. I'll message of you in a week. Sounds like a cool opportunity. Thank you!
I think very few people who install the JDK would leave the "install the Ask toolbar now!" checkbox checked 
Xubuntu is nice too. More drivers included out of the box than Debian, PPAs, etc. -- but without the Ubuntu crap.
Hopefully your finals are a bit harder than that... :) 
Why aren't you using http://ninite.com? Click the boxes for Java and whatever else you like, no toolbars, no crap. Also does updates without nagging. Run once, updates everything you selected.
http://ninite.com works for both flash and java. Also Eclipse, if you use that. And Chrome. 
I am reading Java: How to Program, 9th Edition by Deitel =) I'm not quite sure whether I like it or not, but I don't think that the book is the most important aspect of learning how to program. I think it is mostly about how much time you are willing to spend programming. 
Cool,just wondering because i also just started. Halfway through beginner java for dummies, and i couldnt write your code yet. Close, i understood most of it, but i do need to just put more hours into it. Ill probably go through several beginners books. Then many more books after that! 
I'd check out libgdx and its scene2d.ui and TWL packages. http://twl.l33tlabs.org/
I would suggest getting used to coding conventions. I'm particularly looking at all those variables starting with an uppercase letter. It may not seem important in small home projects, but later on you'll thank yourself for sticking to them when you work on shared code and everyone is on the same page. [Java - Naming Conventions](http://www.oracle.com/technetwork/java/javase/documentation/codeconventions-135099.html#367) 2nd suggestion: Now try updating your program to use a Data Structure :)
Your click events are bubbling to your titlebar... Are you using a toolbar/coolbar to contain your combo/dropdown?
Maybe they were forever alone and were angry at him for fucking?
Never underestimate the users and their decisions, distractions, and fear of messing settings up. **Fear** * A while back visiting the parents I happened to watch my Mom fearfully spam the next button and audibly sigh when she saw finish. I do not ostracize them in any way if they ask for help nor am I the official tech support. **Doesn't read steps** * Well this typical user "reads" something obviously, but not much more than the bolder top "text". This is not too dissimilar from an old neighbor who bought an Ikea couch and decided to ignore the instructions... he didn't have time to b bothered by silly things like paragraphs! **Trusts companies** * "Look, if that toolbar is bad Oracle would not have recommended it." Perhaps she may also think that she is under some pseudo-legal morality contract "and plus companies like this worry about their reputation!" **No time** * "Look I am going to spend 3 hours and possibly augment my income for repair costs because I do not have 1 minute *right now*." **Tim the tool-man** * "A toolbar, this sounds useful. I'll take 2." **That's your job** * (Stubbornly ignorant bosses, etc. will always exist to some degree...) **I don't care.** * This much apathy suggests lifestyle issues, possible depression, or other various issues. Sometimes these users just get better after "learning the hard way". Sometimes due to a stunning amount of ignorance, "learning the hard way" results in an odd set of protective behaviors and bad habits. ***...And much more*** *(We have all been there to some degree)*
and start using OOP ;)
It's terrible :(
What is the Ubuntu crap, if I may ask? 
**No time** This was usually a big excuse for me, I would simply blast the 'next' button on installers. Until one day I got a new copy of DaemonTools and I got a toolbar. It has been ages since I seen one, I mean, I see those constantly when I visit my parents, but it has been ages since I installed one of them by mistake. Then somebody mentioned to me that we spent so much time using certain applications the *least* we can do is pay attention during the installation. And if the installer has some bundle, complain to the developer and change app. This worked with uTorrent - they bundled some crap toolbar and so many people complained that they took it out. 
Damm. This Ninite thing it's kinda awesome. 
Heroku aren't bad, and they can run a single app on a single worker for zero cost. If you need to scale out, or run multiple apps, or use anything extra - like databases - then you start to have to pay though. I've got some instructions somewhere for hosting WAR files there if you want. Alternatively, you could look into Amazon AWS. The Elastic Beanstalk service makes it so trivial to run a webapp that gets automatically load balanced and multiply deployed and so on, and again if you use the very lowest level then it's free for the first year (I think). Having said all that - how certain are you that it wasn't your app crashing tomcat? Tomcat is normally pretty rock solid, so having it crash that often for no reason is quite unusual...
Amazon search. Unity. (Stuff like that. I am not him, but I dislike Ubuntu mainly because it isn't Arch.)
I asked this question 1 month ago if you want some advice from that thread. http://www.reddit.com/r/java/comments/14s0ot/hosting_suggestions_needed_for_a_java_web_app/
I know. I haven't been able to live without it since finding it. It makes reformatting a PC much easier.
Any technical test will likely be for basic proficiency only. For example: given a snippet of code can you identify the bug. When interviewing interns I am looking more for a willingness to learn than specific skills. If you don't have a gihub account create one and start a small project. This does not have to be much more than taking a tutorial and adapting it to your own interests. This will show your interviewer that you are motivated, and able to teach yourself.
While we're on the subject of very basic junit exercises, [here](https://github.com/Vannevelj/Exercises/tree/master/Exercises/src/com/bestpractice) is another example (including a parameterized test) of a very basic implementation. You'll also find an example of mocking, which goes hand in hand with unit testing. These are some very basic examples since I had to learn these subjects for an exam a few days back, but they're the same level as the unit tests from the OP. Unit tests are very helpful for those who don't use it yet, they've allowed me to create entire separate 'modules' of some private projects without even integrating them into a UI (think about logging or preferences).
123system.net is a really great and extrodinarily cheap VPS service. If you wait for their deals (fairly regular), I got mine at $10/year (only 3$ the first year during deals) for a tiny (think 128mb storage + 64mb ram) server. I don't know about their larger packages, but I have yet to have anything but forewarned downtimes on their cheapest service, so I can't imagine what they do for the more expensive ones. Also, to add a website it cost a couple of dollars/year for the domain, but all-in-all it totalled &lt;20$ a year for a website that fit my needs perfectly. The setup time takes a little longer, because they don't offer much in terms of easy-setup, but PM me if you need assistance. IIRC it comes with apache EDIT: Also if you want just java, staticvoidgames.com will host the game + pay you 100% of ad revenue. EDIT: Also, someone pointed out that tomcat is going to need one of the larger plans, 1 gig guarranteed ram (2 gigs burstable) + 50gb of storage is 12$/month
Free or not, there's no excuse for bundling a toolbar that defaults to install. Everything isn't all about making a buck. It's in Oracle's best interest to make installing Java as pleasant an experience as possible.
It takes away much of the fear of it, that's for sure.
also in the vps area is http://www.server4you.com/vserver/ they have 1G RAM / 25G disk for 15$ a month, and bad service. Make sure to use a server located in the US if you are located there 
[Openshift](http://openshift.redhat.com) is free [to an extent](https://openshift.redhat.com/community/developers/pricing).
Here's an idea. Go to a VPS service. Alot of them will give you 1 GB of memory for about $10-$15 a month. Register your domain and point it at the IP of the virtual host. Install a Debian based OS on the host. Do apt-get install tomcat. This will need AT LEAST 512mb of heap space, and virtuals do not have swap. apt-get everything else you want on your server environment.
To run Tomcat, you'll probably need 1 GB. Mysql and Apache don't add terribly much overhead, but tomcat is a beast.
The highly-publicized security holes are doing far more harm than the bundled toolbar. Oracle needs to get it's Java house in order.
This happened to a friend's laptop that I was asked to fix. It's more likely due to malware than the Java install -I'd think that's more likely just coincidental timing. In the case of my friend's laptops it was the default actions for exe files that had been screwed up in the registry. This MS KB article describes how to fix it if that's the problem (and obviously scan for malware too afterwards).
problem is, he has no anti-malware program installed and now he can't run a normal .exe file to get it installed. Your MS KB article link didn't make it through. Thanks for the help
&gt; this new security risk the US government publicized You make it sound like it's an extraordinary event. They "publicize" about 2 risks per month, mostly for Microsoft software. You should take them all as seriously.
Sorry - link should have been http://support.microsoft.com/kb/950505
He will have to use regedit to fix it but regedit is an .exe. If you make a copy of regedit and rename the extension to be .com then you should be able to run the copy. You'll then be able to fix the .exe association in the registry.
+1 for any of the VPS posts on this thread. In addition to the VPS offerings, you can do the more modern "Cloud" offerings which are similar to VPS offerings. Amazon EC2/Rackspace Cloud Any of the options should run you between $15-25/mo Linnode is a VPS provider I've used in the past which was pretty good.
Thanks for the info, I have been meaning to set up a github profile but I have been put off many times. I have a few bare bones games that I wrote in java using Slick2D. Is that something worthwhile to upload or should I just create a project that is pure java?
Oh my bad! I leave it up there so people see it, but I'll make a note in my message
The update didn't cause me any problems on Windows 7 (64-bit). When I first heard about the vulnerability, I unchecked "Enable Java content in the browser" in the Java Control Panel for 7u10. I have some Java-based EXE files on my desktop and don't care about Java in browsers. On Sunday, I manually uninstalled 7u10 (32-bit) then manually installed 7u11 (32-bit). 
BTW, you didn't say whether it was 32-bit or 64-bit Java. 
It's not pure Java EE, as you have to use the app engine programming model but it is Java - I'd recommend the Google App Engine. You get a good free quota too, so you can serve a low volume website for free. And it's great for experimenting with Java - as many web frameworks like JSF and Stripes work on it. Just don't expect EJBs, threads, etc. And for persistence you'll have to fit to the data store (but the Objectify framework will help). With their recent Maven plugin release it seems like they're really getting their act together. 
You could probably reduce the footprint of tomcat, but if you start using heavy components such as spring or hibernate, you may eventually run into PermGenSpace issues if you go too far.
I said JDK, not JRE - most people who install the JDK are (or intend to be) developers, and most developers would probably be able to avoid most of those issues. Then again, I'm *pretty* sure they don't bundle anything with the Windows JDK installer.
While I believe this question has hardly anything to do with Java: http://www.chris.com/ascii/ Or search for ASCII Art on google or your choice of search engine.
Assuming you're only talking about the source text file you should be able to find something [here](http://www.chris.com/ascii/index.php?art=cartoons%2Fsimpsons). If you don't find any you like you can just google for "ascii art" and whatever it is you're looking for.
Ya i just switched to the learning programming subreddit, sorry. 
Awesome, thank you! 
Also have a look at the hamcrest jar. Adds a lot more assertions and matches. Hamcrest.org is URL, it won't format because I am on iPad sorry.
This is almost certainly completely unrelated to Java, by the way.
You don't need a main function to run junit tests.
I posted some code over at code review to get some feedback it hasn't got much attention maybe I could get an idea of what it's like at the moment. [code sample](http://codereview.stackexchange.com/questions/20551/would-like-some-feedback-on-code-samples). I can see where I have gone wrong with a few things, that I will be fixing shortly.
I love the mailinator design talks, but I also thought this was good: http://www.1024cores.net/home/scalable-architecture/general-recipe Short version: If you have no idea, multiply your number of processors by small factor. For example, in Java, you can do Runtime.getRuntime().getAvailableProcessors()*2 to come up with reasonable guess at a thread pool size. 
You can use System Restore (assuming you can get it to run) to go back to a previous restore point. Usually a restore point is created when something gets installed, and System Restore is pretty good about unwinding the mess. The rename exe to com trick mentioned here might be required to run it -- hopefully that'll work. Best of luck
Try extending JApplet and adding a JFXPanel to your applet. Take a look at the latest version of [NetBeans](http://netbeans.org/downloads/) for an example. It includes a sample app template that I think might be just what you want. Install NetBeans if you don't have it already, Create a new project, and select Categories: JavaFX and JavaFX in Swing Application (will make sense when you see it.) See if that is what you are after.
Seems I misread your comment. Ironically enough I have a good bit of experience in Java and one would think that is something I look for while reading haha Anyways I was just having fun blocking that out on my cell at the time so no harm done I suppose... but you are probably correct that the majority of developers would clear the check-box. :)
http://www.hetzner.de/en/hosting/produktmatrix/rootserver-produktmatrix-ex
Wow, those 1-2 GB VPS machines cost as much as a 24 GB dedicated server from Hetzner!
No, it is not. - you will gain no info when reading the output by prefixing it with `test` - calling the test method `fooOperation`, will leave the next developer no information what you are testing and why the method/test fails. Was it because you supplied a `null` parameter, was it because an internal logic was broken?
I tried it for 15 minutes. IntelliJ IDEA has a very bad _OOBE_ for me (on OSX). - closing a tab is mapped to `Cmd+F4`. It should be `Cmd+W`. - Typing in the main search box in the preferences dialog also searches in Keymap search - Open/Import dialog is not native to OSX (and opened on `/` the first time) - default project scope is very file oriented instead of package oriented - When importing a project there is an option to `Import Maven projects automatically` but what it means is to update the IDE project when changes are made to the `pom.xml`. It confused me. - When importing Multi-Module maven projects IntelliJ will create an `.idea` directory in every module. I find this annoying. - Cursor Positioning. If there is one character in a line, I can put my cursor anywhere on the line even if there are no characters. I keep questioning if I have trailing whitespace. Very annoying. 
( ͡° ͜ʖ ͡°)
It's a Unified ToolBar. Mac only. And it's a pretty rushed implementation in the SWT library. I have solved this by window.setEnabled(false) when the menu pops up, and window.setEnabled(true) when the menu disappears. When setEnabled is false, it ignores mouse input. My point was that the SWT library was full of these little stupidities. That menu should capture the mouse, because it's top-most. And it doesn't. And it's annoying. Thanks for the input. 
That actually makes a lot of sense now. I have spent hours learning swing then I learned awt and re-wrote it, then I remembered javafx can be in a browser but failed at that.
yep, already had tried that and the problem still existed. I one by one killed processes running in the background to see if the problem would go away, but nothing worked. It was the weirdest thing. Anyway, he just re-installed the OS, so no more worrying about now... thanks for your help.
&gt; Yeah, that would be nice, but unfortunately that is only true for immutable objects. Well he did put that in a section titled **Immutability**.
But he doesn't state the connection. People who don't know about it already can much too easily miss the immutability requirement. And also, of the two concept involved, immutability is the more important one.
⢇⡸⢸⠢⡇⡇⢎⡁⢎⡱⢸⡱⢸⣭⠀⢸⢜⢸⢸⣀⢸⣀⢸⣭⢸⡱⠀⢰⠭⡆⣫⠰⣉⢸⢸⠀⢰⠭⡆⡯⡆⢹⠁⠀⢐⠰⡁
I ported a 5ish year old swing application to it as well as used it for some quick lab-only applications to be used by developers. I really liked using it. It makes your application more consistent and, if you pay attention to using the APIs properly, performant. In the big application port, we had a custom tree-table that loaded data from an LDAP server and while we got pretty close, we never quite got the threading/background loading right. Using the OutlineView in the platform was a dream after writing a Node class and the associated factory. It loaded data so much more intelligently. Being able to generate installers is a plus. I have a job on our jenkins that builds the nbms and copies them to the right place on the webserver so that anyone running the program on our network gets notified of module updates. The documentation of the platform is good, there are a lot of tutorials and blog posts online.
Not an IDEA apologist, but a couple points.. I've been using it for about 5 years on Mac OS, works ok, stuff like mvn and svn integration work perfectly out of the box, unlike Eclipse, which is always a pain to set up in this regard. Cmd+w is bound to something else by default, but why not just remap it to do what you want, in the Keymap settings? I just use shift+click on the tab to close a tab. You can customize the .idea folder creation stuff, I think that's kind of annoying too. It should only be creating one, i thought. The whitespace behavior can be changed 
See also [StackOverflow: What's the difference between JPA and Hibernate?](http://stackoverflow.com/questions/9881611/whats-the-difference-between-jpa-and-hibernate)
Very much this. ONLY complaint I have - If you want to customize your installer heavily, it is not an easy task, and involves altering the netbeans ide itself instead of just your project. Beyond that - man, it works very well once you get used to it.
Interesting, to be honest I'm not entirely sure. I had assumed that javax.persistence was the Java standard implementation of JPA. Is this incorrect?
JPA is the interface. Hibernate is one implementation thereof. 
The NetBeans Platform is not the NetBeans IDE. The platform is a framework for designing applications. I use Eclipse for most of my Java work anyway.
Right - sorry - nasty cold.
[Hibernate EntityManager - Introducing JPA Persistence](http://docs.jboss.org/hibernate/stable/entitymanager/reference/en/html_single/#d0e46) Be aware that URL says "stable", but the docs state version 3.5.6. Either way a good read to understand the relationship between Hibernate and JPA.
What's the catch? :P
Proper security measure would be to store password using one-way encryption, and not allow decryption ever. A good process is generate a random string called a salt per user. Use a slow digest funciton like bcrypt on the salt and raw password and store that resulting value. When a user attempts to login, use the same salt and digest function and match it to the stored version. Thus, decryption is never required. Read this [post on SO](http://stackoverflow.com/questions/549/the-definitive-guide-to-forms-based-website-authentication). Edit: OK you evidently mean app level passwords which is different. Encrypting is slightly pointless since the encryption key would be in the same codebase as the config. If you really want to, AES is the standard and there's an implementation in javax.crypto
o/
I got started my first time by adding modules onto an existing Netbeans Platform project. Lots of googling how-to's. The Netbeans IDE does make it somewhat easy to create new Netbeans Platform projects. Netbeans Platform applications and modules are pre-defined project options in the standard new project wizard/dialog. The docs are okay, but not great compared to the likes of Java's docs, which I'm used to. http://netbeans.org/features/platform/all-docs.html Searching for answers online can be slow because there are so many questions, answers, and tutorials out there about the IDE, so "netbeans" as a keyword doesn't work. I learned pretty quickly to preface all my google searches like this: ("Netbeans RCP" OR "Netbeans Platform") AND (&lt;search terms here&gt;) 
Some of these things are kind of hard to understand without a historical perspective of the language and understanding of the JCP. Often there are third parties that develop packages that perform a function or fill a gap that are not part of the official JDK. For various reasons that function may become part of the java JDK through the JCP (Java Community Process) In this case Hibernate (in 2003) provided a way to abstract SQL and allow developers to think more in terms of persisting objects (ORM). You notified hibernate about your Entity objects and it automatically generated the strategy to persist them. Hibernate provided an implementation to do this and the API to drive the implementation either through XML config or annotations. The fundamental issue now is that your code was tightly coupled with a specific vendor (Hibernate) for, what a lot of people thought, was a generic problem (A generic persistence API). Meanwhile, the JCP with a lot of input from Hibernate and other ORM tool vendors was developing JSR 220 (Java Specification Request) which resulted in JPA 1.0. And eventually JSR 317 which is JPA 2.0. These are specifications of a generic Java Persistence API. The API is provided in the JDK as a set of interfaces so that your classes can depended on the javax.persistence and not worry about the particular vendor that is doing the work of persisting your objects. This is only the API and not the implementation. Hibernate now becomes one of the many vendors that implement the JPA 2.0 specification. You can code toward JPA and pick whatever compliant ORM vendor suits your needs. There are cases where Hibernate may give you features that are not codified in JPA. In this case you may make a choice to insert a Hibernate specific annotation directly in your class since JPA does not provide the interface to do that thing. Make sense? TL;DR: see tenorsaxman11's answer.
take a look at jasypt.org
&gt; not allow decryption ever This is a crucial point; if you allow decryption, then somewhere in your code you need to include the way to decrypt a particular string - and if you can do that, then if an attacker gains control of your server, they can find out all your user's passwords. When it comes to encryption, never roll your own - always use a recommended existing library.
Yup. OP, this is why tech support always tells you they can RESET your password, but not tell you what it is. They can't decrypt it.
Jrebel is good stuff, but 14 days is too short for trying
Any software that you can find has exploits. Currently Java is under fire due to some serious 0day exploits, exploits for which there is no fix yet, but many other language, or to be more precise, runtimes are continuously affected by these types of defects. There is something called CVE "Common Vulnerabilities and Exposures" at http://cve.mitre.org which lists all the defects being found that we pretty much know about. Take a look, it is quite extensive. Another runtime which has had a spotty past is the .net CLR, just do a search for ".net clr cve" and you find lots of CVE articles on it. As long as humans write code there will be issues like this, proper QA and taking the time to release things will only go so far...
Bigger target... bigger guns pointed at you. It's the same reason you never hear of Mac's being attacked... and why you always hear about Adobe being attacked. Mac's are maybe &gt;5% of computers... Adobe PDF/flash/etc/ on 90%+. If you are a criminal, and want to break stuff... and earn lots of money... are you going to go after something that will net you 10 victims? or 1000? Simple choice really... Java is installed EVERYWHERE so people will dig for the bugs. Same for Windows, PHP and Wordpress. odds are, as well, that years of programming have left the Java codebase a mess. Different architects, programmers. Different modules. Years of technical debt. Different companies working it. You end up with a lot of lines of code, and a lot of seams that can be broken. While a Mac might be programmed better, or worse, the difference is how much effort is spent breaking in. It's pretty much guaranteed that holes will be found on Macs... but people search for the holes on PCs and iPhones (Jailbreaks) because that is where the people are. 
I've based two of my applications on the Netbeans Platform, so far I've found the experience pleasant enough. Depending on your requirements I would think that basing your application on Netbeans Platform would be a wise choice. But do check out Eclipse too. As the Eclipse platform "recently" changed quite radically. Starting from scratch yourself seems like a rather silly choice, but I guess it sometimes is needed. As to how to get started, buy a book. There are quite a number of them out there and they can give you an overview of the platform and it's API. The mailing list is really helpful, so get on it as soon as possible. Sorry for the complete an utter chaos this post might be. TL;DR: It's a nice platform on which to build applications. 
It's a bit confusing because Hibernate predates JPA. Before JPA, you write native hibernate code to do your ORM. JPA is just the interface, so now you write JPA code and you need to find an implementation. Hibernate happens to be an implementation. So your choices are this: - Write native ORM code (hibernate, toplink, etc...) - Write JPA code and plug in an implementation. The advantage to JPA is that it allows you to swap out your implementation if need be. The disadvantage is that the native hibernate/toplink/etc... API may offer functionality that the JPA specification doesn't support.
Well, if IT does tell you your password, then you know your data is not secure. 
Open the FileWriter/PrintWriter before starting the while loop. Then put the pw.close() after exiting the while loop. When you create a file writer with only one argument then, by default, it overwrites everything in the file. You can supply an additional argument telling it to append to the file rather than to overwrite.
Part of the problem is that Java is one of the few languages that's accessible through the web browser (Java plugin) that runs as a binary on your computer rather than in a browser-implemented sandbox (like Javascript). To provide security, the JVM runs applets in a sandbox of its own. However, if you break that sandbox, then you have access to either the machine itself, or the full Java API (which pretty much hands you the machine too). You won't see anything like this from a language like Ruby, Python, C, C++, D, and many others, because those languages are not accessible by browser plugin (a common attack vector for Java). Flash has had similar trouble: http://www.cvedetails.com/vulnerability-list/vendor_id-53/product_id-6761/Adobe-Flash-Player.html At this point, nobody should be using the Java browser plugin unless they're absolutely sure they need it (and even then, whitelist sites you want to use it on). Either don't install it or leave it disabled.
The catch is that if you like it, I'll want you to recommend it to your company to buy licenses. But no pressure haha.
Glad you think so. I can extend those trials if need be, but most people have a pretty good idea of what it can do within a couple days.
Hey sorry for the late reply, but I was wondering how I could open the FileWriter/PrintWriter before starting the while loop?
How easy is it to have a regular JVM target in maven while maintaining a profile or something for JRebel targeting? I use Arqullian for testing in-container stuff but it isn't for the faint of heart. It also isn't instant. So it's not really a competitor.
I think the OP is asking about storing a password for another application. In this case, the password needs to be decrypted, else you can't use it.
The null comes from the loop where you print out the GuessesPlusWord array. Every element in the array is null when the array is initialized so it prints out "null". You could do something like this as a work-around: for(int x = 0; x &lt; length; x++) { System.out.print(GuessesPlusWord[x] == null ? "?" : GuessesPlusWord[x]); }
I am guessing you mean null? It basically means that an object (string in this case) is uninitialized (has no value). This occurs in the line System.out.print(GuessesPlusWord[x]); This is due to you printing out all strings in the array even when they have not been assigned a value. Just do a null check before this, that is: if(GuessesPlusWord[x] != null){ System.out.print(GuessesPlusWord[x]); }
This declaration FileWriter fw=new FileWriter("C:\\finalproject/out.txt"); Should be moved above this line. while(true) 
Oh! Ok thanks a ton!
The error doesn't mean much as a java error. It simply means that you've run out of network ports for the application to use so no new connections can be made. I would try restarting your computer and relaunching the application. This should wipe out any unnecessary network connections. If you still have the problem, it is most likely the application itself creating the connections. Reinstall the application.
http://struts.apache.org/2.3.8/docs/migration-guide.html Scroll down to where it says: Struts 1 to Struts 2
For those wondering if this product is legit, it most certainly is. I used it (and was the one to champion its use) at my last company. We had a shared 5 license block among 9 developers. It worked really well. If your build process isn't standard, then it takes some dev work to integrate it, but if you're running a simple ant build or a standard maven2/3 build, it's a piece of cake. The part that won my colleagues over was when I started editing spring xml files and the beans were created on the fly without a restart. It's pretty slick stuff.
I actually downloaded JRebel trial yesterday and your people called me within 2 hours of the download... That's the quickest way to make me recommend NOT TO DO BUSINESS with a company. Additionally, I uninstalled the trial and deleted the configs... If they had waited a few days or just sent an e-mail, it would have been OK, but calling me the day I downloaded the trial is UNACCEPTABLE!!!
Right. "Can I talk to your supervisor? Better yet, can I talk to an engineer?"
Public string toString() { return "you rolled a "+ roll()+" and a "+roll(); }
Are you actually taking course from which this assignment is from, or are you learning on your own? Because the structure of the code isn't that great, and if it's this way due to constraints of the assignment, I'd recommend you do a different version of the assignment which is more conducive to proper code organization. For example, the way the class is structured, it sounds like instances of the class are intended to represent a die, but instead it'd probably be better to have a class that represents the result of dice roll, rather than the dice themselves.
I'm sorry but that just confused me. I have no idea what your trying to say.
I am not taking the course, I am learning on my own. I just used google for program ideas. I am following the assignment word for word assuming that the professor who wrote it up knows good coding structure. You may be correct, but as I said I am just wanting to know how in the world this professor expects you to return this, "You have rolled a six and a four" using a toString() in the Die class.
Oh I didn't understand what you wanted it to do exactly. If you need it to print the result of the last two rolls you're going to have to save the result of the last two rolls in private properties on your Die object and reference them in the toString method.
That kind of makes sense but that would entail using an array wouldn't it? The assignment as it was written says nothing about using an array. I mean sure the int die variable would hold one of the values I want but how would I get the second value without having two different roll() methods...
Got an example? 
I agree with the comments that it is a poor design. Whether it was intentional or not I can't say without looking at what the assignment was trying to make the students accomplish or how it was guiding you to build it. It would make way more sense for the "toString" method you asked about to be in some sort of "Game" class. Design wise I would expect a Die to behave like an individual Die. I would also think that the intention was to override the equals method (just google "java overriding equals" or similar). There is a correct way of doing it. Otherwise I would change your equals to be a static method.
I am not disagreeing that this is a bad design, but that is not my issue. Here is the link: http://www.cwu.edu/~gellenbe/110/assignments/program7.php I just want to know how this teacher thought that this could be implemented the way that he wrote it. And isn't the die acting as an individual die? It is being rolled once for one number and again for the second number... Also, Why should my equals() method be static?
Have you tried running a NetBeans Platform app on Linux? It seemed fairly fast for me, but for some reason the default toolbar was ridiculously slow, taking almost a second to register clicks. Buttons, scrollbars and animations things were as fast as any native application though.
Absolutely. After receiving Kreiger's comments, I was still confused about how JPA related to javax.persistence. With tenorsaxman11's response I had that "ah-ha" moment where it all clicked. This completely confirms that realization, thank you!
Ohhhh that makes so much more sense now, thank you! I was confused what was meant exactly when I initially read the equals(Die die2), so I just kind of made up what I thought he meant. lol. Anyways, you deserve more than one upvote for taking the time to write that out! thanks! 
To just tack on to what geekocioso has already mentioned for the sake of science, "equals(Object o)" and "toString()" are just a couple of commonly implemented methods (Canonical Class Form). This helps as systems get more complex because you'll be able to easily compare and print things, among other things. For further reading: http://csis.pace.edu/~bergin/patterns/CanonicalJava.html
You should really read things more carefully. I don't see how you got "nuff" from "null". You're going to have a hell of a time looking things up if you can't spell them...
If you only need to save the last two rolls you can manage with two private int variables, even if it's not the prettiest solution. If you have a "current" and a "last" variable, you can move the value of current to last and store the new value in current at each roll.
Sorry it was 3o'clock in the morning and I was freaking out. :/
basically jrebel is a javaagent, so if you run your jvm with something like: java -jar myjar.jar then you just need to add a -javaagent option, so you transform it to somehtign like: java -javaagent:path/to/jrebel.jar -jar myjar.jar So it's just one property, so you can turn in on and off anytime. Also, check out this [post](http://zeroturnaround.com/jrebel/arquillian-meets-jrebel-lightning-fast-integration-testing/) about how Jrebel can enhance your Arquillian experience. disclaimer: I work for the company, so you can ask stuff :) 
That is great to hear. I always love talking to satisfied customers.
Look at the following Die code, it will still roll but also save last 2 rolls, you can make it work in your main with change to the confusing equals() call. public class Die { protected int rollCurrent; protected int rollLast; private static final Random dice = new Random(); public Die() { // compare to your original constructor if my comments are not clear // static random is less wasteful of space and better distribution // default int value for a member is 0, no need to re-set it to 0 } /** * Roll die, save current and save last */ public int roll() { rollLast = rollCurrent; rollCurrent = dice.nextInt(6) + 1; return rollCurrent; } /** * Remove this method * This is bad, don't overload obvious operation of == of ints * with a confusing method like equals which normally compares one * object to another when reference compare is not enough */ // public boolean equals(int die, int die2) { // if (die == die2) { // return true; // } else { // return false; // } // } /** Remove @Override is you java version is old */ @Override public String toString() { StringBuilder buffer = new StringBuiler("You have rolled "); buffer.append(rollCurrent); if (0 != rollLast) { buffer.append(" and "); buffer.append(rollLast); } return buffer.toString(); } } 
Interesting. We've been using Cucumber-JVM for the last 4 months and while there have been some growing pains (to get the framework in place and what not) we're VERY happy with it and it works great in our Scrum-Kanban workflow. QA is writing the feature file up front, which gets approved by Product Owners and Stake Holders which then get pulled by devs. There's much less back-and-forth and disappointed expectations thus far.
Making them available as plain-text system properties passed to the JVM means a simple "ps -ef" by any user will dump the passwords... i'd prefer to make the server.xml file only readable by tomcat. If you really want encryption, then create an encrypted file system and mount it with transparent decryption with permissions that make it readable only by the tomcat process; include it in the server.xml using entities. You can then automount the encrypted file system using standard system tools (crypttab/fstab for linux; not sure for windows).
I think it's worth saying that the reason we historically just let the container store the passwords (and probably apply some internal obfuscation, but usually not) is that those secrets are usually only available to the server process. So if your server gets owned to a point where they can read those secrets, then they are in a position to cause much more mischief than reading those passwords. Do any standard EE containers leverage any OS "secure storage" mechanisms, like gnome-keyring or KDE wallet? Windows has something like that, yes? Mac?
this is also possibly one of the biggest hurdles in getting any other popular language runtime invoked from the browser. Say python or ruby. Could you imagine trying to go through the standard python API and whitelisting only the "safe" packages, like Java does for applets? On that note, could we not strip Java of all the stuff that's not needed for applets - JDBC? JMX? many candidates there. And provide alternates for core things (java.io.File etc). I wonder if that would make things a little safer. Granted you would run a serious risk of fragmenting the "write once run everywhere" dream of Java....
They did call me too, albeit after 2 days or so. That was the first time. Afterwards I received multiple calls each week. Oh, and they did this to each team member. Their representative tried to involve me in getting my company to buy (more expensive) "roaming" licenses - this was at a time when you could use personal licenses for commercial projects, too. After I had enough and sent them a mail to pretty-please stop all calls, they *silently* changed their licensing model (and the website) and then called the company reminding us that we're using illegal licenses... Granted, The timing of this change very probably was coincidence, but the fact remains that they changed the licensing without notifying the users. Regarding the product (I use JRebel): I like it, it works within its limits, and saves me a lot of time. As for the company &amp; their marketing: I have a very very bad impression. Oh, and a sidenote: zeroturnaround is also very agressive in marketing on reddit - there's multiple submissions in /r/java each month, more or less disguised. /rant
We use Cucumber-JVM a lot at work and it's made a big difference having the JVM version. It is very time consuming and also maintenance costs are quite high but in the long run it is beneficial. 
This is old by any standard, but from what I see out there seems it has gone unread for the most part...
Here's a mini datamodel. It does show one of the issues with this approach, that is dealing with const vs non-const Collections or Maps. In this case since we're deciding a CompositeModel may modify its children I'm storing the children using IModel but decided that the addChild model could not modify the child itself so I passed in IConstModel but then had to do a cast. Obviously clients can also cast to the non const interface, but this is no different to c++. Currently we have not wrapped Collections to provide const interfaces for them so we are usually copying any Collection data member before returning it or sometimes using Collections.unmodifiableXXXX methods to wrap them. Ideally we'd prefer a better compile time correct approach though. public interface IModelConst { @NotNull String getName(); } public interface IModel extends IModelConst { void setName(@NotNull String name); } public class Model implements IModel { private String mName = ""; public void setName(@NotNull String name) { mName = name; } @NotNull public String getName() { return mName; } } public interface ICompositeModelConst extends IModelConst { @Nullable IModelConst getFirstChild(); } public interface ICompositeModel extends IModel, ICompositeModelConst { void addChild(@NotNull IModelConst child); } public class CompositeModel extends Model implements ICompositeModel { private List&lt;IModel&gt; mChildren = new ArrayList&lt;IModel&gt;(); public void addChild(@NotNull IModelConst child) { mChildren.add((IModel) child); } @Nullable public IModelConst getFirstChild() { return mChildren.isEmpty() ? null : mChildren.iterator().next(); } } EDIT: reformatted for code
Hey! They're "rebels" after all, right?
I posted an example - it was meant to be as a reply to you but I did it wrong.
The Curse Minecraft forums are probably the best place for this question. There are a lot of addon authors who post there and are very familiar with the decompiled code of the game (which you can decompile yourself using tools from http://mcp.ocean-labs.de/) I haven't worked on the MC networking lately, but as of last year the server architecture itself is IMPO less scalable than alternate implementations.
Don't forget ActiveX.
Pffffffffffffffft, are you kidding me, people whine and complain about documentation, but they never actually read it. If I had a dime for every meeting I've ever been in where developers themselves say in one breath "we need documentation", and then in the very next breath they say " I never read the documentation"... Man, I could retire by now. Just look at all the weenies whining and complaining because they can't figure out how to close applications in Windows 8. There is a 5 page thread about this on arstechnica right now. Well, last night it was 5 pages, it's probably one hundred and five pages by now. Yeah dumbshit, it's because it's NEW, and you need to read the directions first. Buncha lame ass idiots. You must think the world stops down and actually looks at this shit before they click the download button. You are wrong about that. 
&gt; this is why tech support always tells you they can RESET your password, but not tell you what it is Same goes for a website. If its "Forgotten password" feature emails you your existing password, be afraid and change it to something unique (yes all passwords should be unique in an ideal world, but that's not how people behave in the real world).
What do you see out there? I don't understand why you chose to post this now.
So as I mentioned, while it's possible (in the sense that it doesn't violate the laws of physics), it doesn't make sense to do so with the way the code is structured. Instead, consider creating a class that represent dice rolls results rather than the dice themselves: public class DiceRollResult { private int result; public DiceRollResult(int numDice) { Random rng = new Random(); this.result = 0; for (i = 0; i &lt; numDice; i++) { this.result += rng.nextInt(6) + 1; } } public int getResult() { return this.result; } } Are you able to understand all this code? If so, I'll tell you right away that the way this class is structured is **not** ready to get the string that you want, but it's a lot closer than your old class. In order to produce the string you're looking for, there's a hard way and an easy way. The hard way will work on arbitrary number of dice (e.g. the user can choose to roll 2 dice, 3 dice, or whatever), and you'll need to use an array or a List or something like that (I don't know if you know how to do that). The easy way is to modify this class so that it's hardcoded to always assume 2 dice. Let me know if you need further help.
If you **have** to read documentation to perform basic tasks, the user interface isn't intuitive. 
Indeed, JD-GUI is missing some static initializers and synthetic methods without even stating that some bytecode is missing. So for obfuscated code on large jars it's quite useless. I signaled several times those bugs to JD-GUI's author, Mr. Dupuy, but recently he confessed to me having lost interest in further developing his tool. Nor is he ready to open source his (C++) code to let others enhance his otherwise very nice decompiler. Too bad. Fernflower is nice but horrible in its choice of var names (when there is no local variable table). Besides, Fernflower has stupid shortcomings like e.g. not putting the super() call as the first instruction in a constructor. Minor correction but tedious when you have to perform it across thousand of classes! And, of course, Fernflower is not handling correctly Java5+ enums (sigh). Last but not least control flow is not always correct even if Fernflower has been dubbed the first "analytical" decompiler, LOL An interesting work in progress can be found here: https://github.com/Storyyeller/Krakatau
Lots and lots of applets that hardcode the JRE version ಠ_ಠ
Do you understand what the vulnerabilities are in these new exploits? You are the only person I have found that is mentioning this. I am trying to answer a few questions and I am not programming literate at all. 1.) Open office is in Java IIRC. Is this vulnerable in this new set? Should I still feel safe using open office? 2.) One of my online homework programs is in Java. Should our class be concerned with having java enabled in order to log into this homework site? Or is the exploit limited to sites that have malicious Java code in them, whereas the publishers website that does the online homework is probably not one of these malicious websites. Would you recommend disabling Java entirely until this passes or can I do my homework on a what I consider a trusted site? And then disable before surfing other sites? Thanks.
I had posted something on there, and no solutions came about.
Cool project, though I loathe the idea of giving COM any more reasons to stay around. $10 says I will end up using something like this for a legacy integration at some point. 
Do you have a slow or unreliable internet connection? Or does the server you connect to have a high ping?
I guess it would have a high ping, people from all over connect to it simultaneously. I have never found my internet to be slow/unreliable. I can only remember 2 times it's lost the interwebs in the last 7 months. My internet speeds are 40 kbps down and 5 kbps up, so I don't think that's the issue.
yup, IIRC its wrapped up effectively as a second class citizen now but its only maintained for legacy applications. You really don't want to write new code against COM unless you have to. That said, COM negotiation is a pain in the ass and the exceptions are useless so an API is welcome. 
What?! No! This is horrible. Way too complex. This is not how enums or classes should be used. Here is a much better solution. public enum OperatingSystem { WINDOWS_NT_WORKSTATION(WINDOWS, WORKSTATION), WINDOWS_NT_SERVER(WINDOWS, SERVER), WINDOWS_95(WINDOWS, WORKSTATION), WINDOWS_98(WINDOWS, WORKSTATION), WINDOWS_ME(WINDOWS, WORKSTATION), WINDOWS_2000_WORKSTATION(WINDOWS, WORKSTATION), WINDOWS_2000_SERVER(WINDOWS, SERVER), WINDOWS_XP(WINDOWS, WORKSTATION), WINDOWS_VISTA(WINDOWS, WORKSTATION), WINDOWS_7_HOME(WINDOWS, WORKSTATION), WINDOWS_7_ULTIMATE(WINDOWS, SERVER), WINDOWS_8(WINDOWS, WORKSTATION), FEDORA(LINUX, WORKSTATION), UBUNTU(LINUX, WORKSTATION), KNOPPIX(LINUX, WORKSTATION), SUN_OS(UNIX, SERVER), HP_UX(UNIX, SERVER); private final OsFamily osFamily; private final OsClass osClass; private OperatingSystem(OsFamily osFamily, OsClass osClass) { this.osFamily = osFamily; this.osClass = osClass; } public OsFamily getOsFamily() { return osFamily; } public OsClass getOsClass() { return osClass; } public enum OsFamily { LINUX, UNIX, WINDOWS; } public enum OsClass { SERVER, WORKSTATION; } } Now you can add whatever features you want to capture at whatever level it makes sense. Also, I wouldn't put any information about "supporting X" on any of these enums. Enums are meant to just be lightweight tokens that you pass around to represent a limited number of instances. Do all the heavy lifting elsewhere in your code.
Where's a sharp implement when one needs it?
Pretty cool. Is there something like this that works with Scala case-classes?
Consider that 1) if a config file hits the prod server with plaintext passwords, it can be edited to change the password to an encrypted value, and 2) the expensive crypto functions only need to happen once, when the webapp starts up and establishes the connections. Once those are established, the decrypted passwords in memory can be erased and the integration code can use the established connection objects without knowledge of any crypto secrets. Disk encryption doesn't buy me much on a prod server, because the filesystem is always going to be decrypted so long as it's serving data. I suppose I could have it only decrypt the web application partition of the filesystem and store the passwords in the encrypted portion, but that breaks security boundaries - the web application now has knowledge of the disk encryption key. A compromise of the webapp now potentially exposes the entire filesystem.
Thanks, that's something I will definitely look into for future efforts.
The application uses Hibernate, which I'm not sure uses a Tomcat datasource or not. I suspect not - I think I saw code that explicitly builds a connection string. I used to work with WebLogic and let that handle my connection strings, but I can't remember if it encrypts the strings at all in storage. There's also the question of what key it would use to encrypt, whether that's an OS-level key, Java keyring key, or container-level key. The ldap passwords, like the db passwords, are in properties files (or xml, can't remember). They get loaded into memory and are used to concact connection strings to the recipient systems. My goal is to achieve least-privilege; if you're not deploying the application, or you are not the application itself, you should not be able to view the passwords.
You're missing some brackets after the while loop. If you don't include them, then the line after will just be looped. Essentially, your code had: while (test) { System.out.println("Enter integer values (\"end\" to quit): "); } which is a forever loop, and will block your program. After including these brackets, your "total" variable will also have the incorrect scope, so that needs to be moved outside of the while loop. Also, it will keep asking for an input, so you need to add a check for test with the hasNextLine check. Fixed code: public static void main(String[] args) { boolean test = true; Scanner in = new Scanner(System.in); int grandTotal = 0; int total = 0; while (test) { System.out.println("Enter integer values (\"end\" to quit): "); while (test &amp;&amp; in.hasNextLine()) { if (in.hasNextDouble()) { total += in.nextDouble(); } else { test = false; } } } grandTotal += total; System.out.println("The sum was " + total + " and the grand total is " + grandTotal); } Instead of using the test variable, it's simpler to just use a break statement: public static void main(String[] args) { Scanner in = new Scanner(System.in); int grandTotal = 0; int total = 0; System.out.println("Enter integer values (\"end\" to quit): "); while (in.hasNextLine()) { if (in.hasNextDouble()) { total += in.nextDouble(); } else { //Breaks out of the while loop break; } } grandTotal += total; System.out.println("The sum was " + total + " and the grand total is " + grandTotal); } And your in.next() line seemed kind of pointless.
I get what you mean by an encrypted filesystem, but our prod servers should never go down. This means that for 99% of the time, the filesystem is decrypted and available to the userland. If the tomcat/java process is compromised, our plaintext passwords are up for grabs as they are already decrypted.
Thank you so much for your help. But it needs to return the sum and grand total after you push enter at the end of a group of numbers and then ask you for numbers again.
Why is this relevant?
This is actually pretty impressive, well done, magruff!
Java naming conventions have non-constant variables and all functions start with a lowercase letter. Eg Doitbaby becomes doItBaby. Also, pretty neat
Also, one more thing that I would suggest, adding a video to the post! I made one for you, cause I had it running at the time anyway. [It's currently uploading, should be done in about 30 minutes](http://www.youtube.com/watch?v=wkc-EUz93rw&amp;feature=youtu.be)
okay cool. I know how to code but I haven't done much in the way of video capturing. I'd like to combine the two eventually. 
Well all I did was run fraps for 18 seconds and then I dragged it into a box on youtube!
Right on. I like making things like this. It would be awesome if I could turn it into a job someday.
How I know that feeling, all too well.. Do you have a GitHub account (or BitBucket/Mercurial)?
Should I? I've mostly been in and around [codepen.io](http://codepen.io/)
I think it's nice when people do, especially if they freely share their code. That way, if you release something new I would be able to find it a lot easier than trawling through your reddit account! The video is now uploaded as well!
The only thing I worry about with tricks like this is that it's essentially a code level modification of the java type system. It makes type errors easier to make and more difficult to understand.
I think I'll do that, though I basically only know java and little else. I'm glad those wormies entertained you as they did me. Also thanks for making a video. So do you have a GitHub account or equivalent?
&gt; it doesn't do the same thing ??? Yes it does... Solves exactly the problem the article posted (but not necessarily better, I'd agree). What do you think it can't accomplish that article version did? EDIT: Look guys, I like the article's version too, it's like a more compact version of this really...
You only need one language, it's also good for revisions and even seeing progress! No worries, hopefully more people will look cause it was just a bit of a pain making sure nothing was malicious and putting it into a project! I do, you can find it [here](https://github.com/Harry-Torry/Game_1). It's a small game that I'm working on, and you can sort of see the progress in the commits and the youtube videos!
The type system isn't being modified by the code. It's the same type system used for all other classes. An enum is a regular old class, subclassing Enum, with a specialized syntax for creating a fixed number of instances and a few special methods added by the compiler. Tricks like these with enum are fairly harmless. On the other hand, generics is what makes type errors easy to make and difficult to understand.
The approach used by the linked article allows arbitrary hierarchies. Your approach only works if every subtree of the hierarchy has the same structure. Furthermore, the taller the tree, the more complicated your approach becomes. The example in the link had a different structure in different parts of the hierarchy, but you choose to change this to get it to work with your approach. (Hint: Linux is a Unix, and saying things like "my OS is Ubuntu Workstation" is going to get you funny looks.)
&gt; Where is the implementation Right, and you don't think his answer can do that? Look, he didn't expand upon *everything*, but he solved *the original* issue. It does in fact do everything OP asked for. If your blaming him for not adding a simple function that could be easily figured out, that is pretty close to the article's implementation anyways, it's just not something that crucial. It's pendantic. You *know* his answer is capable of doing it all, he shouldn't have to explain every single detail to you for you to accept it. I mean, darn you're asking for an is statement based upon the article? C'mon, there is no difficulty to it because their is no complexity in the design. No need to branch through parents, as he separated out class and family. So to reiterate here, you want him to put down for you: public boolean is(OsFamily other) { return other == osFamily; } Which, is that "simple and elegant" enough for you? The others are just as clean and simple, by the way, because there is no tricks to them.
Thumbs up for "Enums are meant to just be lightweight tokens that you pass around to represent a limited number of instances".
Did you read the article? How do you implement `is` using his structure so that it can do the following: OsType.Windows2000Server.is(OsType.Windows2000) == true OsType.Windows2000Server.is(OsType.Windows) == true OsType.Fedora.is(OsType.Linux) == true OsType.Fedora.is(OsType.Unix) == true I'd like to see if it is as simple as this (from the article): public boolean is(OsType other) { if(other == null) { return false; } for(OsType t = this; t != null; t = t.parent) { if(other == t) { return true; } } return false; } Note, this works for any comparison at any level of the tree without any additional code.
Check usernames before you respond to somebody. &gt; only works if every subtree It has the *exact* same limitations as the article one. Your ignoring that the design can be expanded upon. &gt; taller the tree, the more complicated ??? Uh, no. &gt; different structure That's... the point, it solved the problem in a different way. &gt; (Hint: Linux is a Unix Artificial issue that could be fixed in the parents post. &gt; going to get you funny looks Shouldn't, and that wouldn't matter anyways.
Yes, *technically* it's not modifying the type system. However, it's *simulating* parts of a common java type behavior by substituting *implements*/*extends* with a call to a constructor and user written functions. If there are any errors in any of those places, in any of the *enum*s that use the trick, normal assumptions go out the window. I'm not saying it's not useful. I'm just trying to say it adds onus to the person that maintains it and possibly the people who use it. I think there may be safer ways to do it.
&gt; iterate what you think it can't do Seriously? That's exactly what I did. With detailed examples and I even copied the `is` implementation "complex" enum right from the article. I don't think the "simple" `enum` can do this the same way as described in the article (and as I demonstrated), and certainly your "implementation" doesn't even come close. Do you need *me* to hold your hand through this?
I think you're confusing what I'm talking about. I'm well aware *enum*s are basically a constrained set of singletons, which leads to all sorts of language/compiler supported goodness (*EnumSet*/*EnumMap*, switch statements/jump tables, *interface* implementation, efficient memory representations, etc...). I don't think everybody had a hard time understanding what the code in the article does, but I think some people might. One of the problems, I think, is that rather than having the compiler handle the hierarchy entirely behind the scenes, a la *instanceof*, it's explicit and in an unfamiliar manner.
&gt;Check usernames before you respond to somebody. Sorry about that. The mobile client I'm using has an almost unreadable font for user names. &gt;It has the *exact* same limitations as the article one. Your ignoring that the design can be expanded upon. The limitations are quite different. The design in the article needs no modification to add arbitrary layers to the hierarchy, or to make the different subtrees have different shapes. The design you're defending gives each level of the hierarchy a constructor parameter, so more levels = more parameters, and every level has the same name and the same values (ie: branching) in each subtree. You end up having to use the same subcategorizations even when they don't make any sense. The design you're defending does make sense for cases where you just want to model a fixed set of objects with a common set of attributes, but it doesn't make sense for an arbitrary hierarchy. &gt;&gt; taller the tree, the more complicated &gt;??? Uh, no. What a well reasoned argument. I'm convinced! /s &gt;&gt; different structure &gt;That's... the point, it solved the problem in a different way. No, it solved a modified, simpler problem. The "structure" I was referring to was the data being encoded by the enum. He encoded *different* data, which conceals the awkwardness in his alternate design. &gt;Artificial issue that could be fixed in the parents post. So show us how you can represent the same data as the article's approach without needing any additional constructor parameters.
Sorry, I couldn't parse what you were saying. The use case in this article is a hierarchical set of constants, an extended enum. Enums can have additional behavior like this, so this is within the realm of what enums are designed for. You could do this with the class system by creating classes mirroring the hierarchy, but then you'd have to create singleton instances of the entire class hierarchy or pass around the singleton `Class` instances, either introducing duplication or basically simulating enum in very ugly fashion (and losing the ability to iterate the enum, use switch and EnumMap/EnumSet).
How is it different fom [Apache Commons BeanUtils](http://commons.apache.org/beanutils/) ? 
So don't add a whole bunch of specific behavior in one branch. Enums are a fixed set of related objects. If you find yourself needing to do something like this, you've outgrown your abstraction or you may need to rethink what you are trying to accomplish.
Nice I'll take a look at the code since it seems quite interesting. edit: Ok I imported the code and got it running, as mentioned before the variable naming is important. Don't use abbreviations and definitely don't use single char variable names. Looking at the method SetItUpYo() I have no idea what it's doing at first glance. The method name should be an indication of what it's doing. You have new java.util.Random() which is assigned to nothing and can be removed. You have a lot of magic numbers which mean nothing. 50 + (Math.random() * 200) , looking at this line what does the 50 do? it'd be better to do something like this public static final int DESCRIPTIVE_NAME = 50; This way it's clear to everyone what the 50 is for. Use variable names and method names as the documentation of the code. Each method can be just a few lines. public void createLights(){ pnt = createPointArray(); for ( d = 0 ; d &lt; NUMBER_OF_LIGHTS; d++){ createLight(); } } public void createLight(){ pnt = new Pnt[p]; int q = (p / 4); int d, a, b, f, g; int red, green, blue; initializeConstants(); ..... You get the picture. It's a mission to write code in reddit. Quite interesting code, have a read of [Clean Code](http://www.amazon.co.uk/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882) if you get a chance it's a great book on how to write "clean code" :) 
1) Solve one problem at a time. 2) Don't just dump a whole bunch of questions without context on reddit and expect answers. If you can't even bother formatting it properly, why would anyone bother? In this context, learning about properly formatting code in reddit posts (hint:4 spaces indentation ) would really help. If the code is longer, try using gists.github.com ( or something similar ) for easier reading. Suggested format: **code snippet** &lt;code&gt; ... &lt;/code&gt; Questions regarding code 3) Also mentioning the steps you tried to solve the questions might help us to point you in the right direction. Good luck
This. ask specific questions. I'm not going to do homework (open book, look up question, research answer) to answer your question. Post the question from the book, word for word... and an attempt to code yourself on pastebin or via a code snippet here... and what you don't understand.
Probably belongs in /r/javahelp rather than being here.
You honestly want me to sort through a 100+ page PDF (with no page numbers) to find the specific problems you're asking because it is too much work for you to be specific?
My help policy: I answer specific questions about problems. If you had asked why an infinite loop was occurring during a text entry program and pasted your code, then sure. This blanket plea, pass. Specifics man!
"This." Agreeing with you :P
"Hi guys, please do my homework for me. Will check back later. Thanks!"
Basically BeanUtils use reflection to do simple copy between two JavaBean (not a deep one, no conversion), Orika in the other side provide a solution to copy data between simple to complex object graph with standard JavaBean setters and getters or custom conventions, and give more control on mapping code, you can even use plain Java code to do it while Orika will do boilerplate code for you. It handle inheritance, enhanced objects like Hibernate proxies, or other generated stubs, ... and integrate well with Spring or other IOC containers Other thing important about Orika, is it generate on the fly byte code, that you can debug it (no magic) by plugin Eclipse JDT CompilerStrategy, and in comparison to other reflection based mapper Orika offer the best performance pretty much as plain java code. Take a look at http://code.google.com/p/orika
Ugh! The parent of Linux and Unix should be POSIX!!
&gt; I even copied the is implementation The is implementation is already done. If you want to check a class or family you just compare the the given class or family. It is that simple, because that's the design the author decided upon was to separate all categories into other enums and incorporate them into the parent. I'm not sure what is confusing or hard about this. You want to check if something is Windows? You check if it's a Windows. Bam, done. It's that simple. Here's the deal... the article implementation favors inheritance. The parent's implementation favors composition. The issue is you aren't looking at what he's trying to say, and trying to force him to write perfect code for you when all he's doing is trying to express an alternative way. It's childish, stop acting like everybody here needs to give you perfect implementations of everything. &gt; "complex" Seeing how I never said complex this makes you insidious. &gt; "simple" enum can do this Do what? **The same way**? IT'S NOT THE SAME. That's the point, I don't get it. &gt; your "implementation" What "implementation"? The implementation of is? Or the enum implementation of the enum? Because I'm going to tell you what I told the other guy: I'm not the person who presented the alternative. And you're wrong, my implementation of is is exactly how you'd do it in a composition format. Give me a break.
&gt; doesn't do the same thing You're right. My approach doesn't treat "Windows" and "Windows NT Workstation" as the same kind of thing, while the linked article does. The problem: Windows (an OS family) and Windows NT Workstation (an actual OS) are different things. &gt; Enums in Java are not meant to merely be lightweight tokens you can pass around. Once again, you're right. Enums in Java are simply implicitly final subclasses of `Enum` with a limited number of instances, and everything you can do with a class you can do with an enum. And, like all classes in Java and any OO language, they should only attempt to capture properties and behaviors intrinsic to the type they represent. For instance, if I want to put mass or weight as a property on a class, it would be right to put mass (because it's an intrinsic property of massive objects, or "proper mass" if you're going to bring up relativity) and wrong to put weight (because weight is extrinsic, conferred upon the object by the context). What this means, in effect, for enums in Java is that most of the time you're far better off just letting them be lightweight tokens you can use to configure other objects. For example: public class SomeClass { public enum Instance { ONE, TWO, THREE; } private final Foo foo; private final Bar bar; private SomeClass(Foo foo, Bar bar) { ... } public static SomeClass create(Instance instance) { // use instance to create some complex configuration of a SomeClass instance // better yet, instead of doing this here, use the Builder pattern } } The reason it is better to use a normal class to represent actual instances and a lightweight enum to simply represent all the possible configurations are many, but they're not worth going into unless you get why doing complex construction as a separate concern is a good idea. (Here's some more info on why you'd want to use a Builder pattern - http://severoon.livejournal.com/347150.html) This article uses an example of horrible OO design to demonstrate an overly complex use of a Java language feature. It seems really whiz bang neat-o like a lot of similar tricks I've seen over the years, but don't try to use this in an actual project, or you'll end up old, dying alone, and filled with regret.
&gt; Linux is a Unix Nope. These are different OS families. UNIX defines a strict specification which an OS must follow in order to be called "UNIX". Linux doesn't follow that spec. &gt; the taller the tree, the more complicated your approach becomes. The taller the tree, the more nodes in it that are not proper `OsType`s. In other words, the author of this article didn't seem to be bothered by the fact that many of those enums represent different types of things. In OO, we would usually model these different types with different classes, as I did.
&gt; so more levels = more parameters Not necessarily true, because you can expand backwards. It's more work, true, actually and I think the article version is more scalable actually for just these reasons. It's a composition vs inheritance deal. I don't care enough of this to write out a perfect composition structure of this for you, neither was the author. I also notice you added a constraint of "any additional constructor parameters" which is not okay. So you know it's doable in this format, that's it that's all. We can discuss which way is better all we want but trying to claim a composition method can't handle it all was the problem here.
&gt; The design in the article needs no modification to add arbitrary layers to the hierarchy... This is exactly the problem. The design in the article makes it very easy to do the wrong thing.
 public class Die { private int nextToLastRoll = -1; private int lastRoll = -1; // ... public int roll() { int thisRoll = // ... nextToLastRoll = lastRoll; lastRoll = thisRoll; return thisRoll; } public String toString() { if (nextToLastRoll = -1) { return "die hasn't been rolled twice yet"; } return "next to last roll: " + nextToLastRoll + ", last roll: " + lastRoll; } } This is horrible design by the way. The die should be stateless, because a real die is stateless (doesn't remember past rolls) and that's what you're trying to model. In real life, if you wanted to have that info for some purpose, you'd have to introduce another object to track it like a `ScoreCard` class that you could consult. The `Die` class should not know about the `ScoreCard` class so a dependency in that direction would be bad design.
&gt; The problem: Windows (an OS family) and Windows NT Workstation (an &gt; actual OS) are different things. It's not a problem. You are confusing physical reality with the design of an abstraction, which do not necessarily have to correspond. For the way the author solved the problem, this abstraction may have served his purpose. We presume the validity of his model, unless you have more information as to the problem the author is trying to solve. &gt; all classes in Java and any OO language, they should only attempt to &gt; capture properties and behaviors intrinsic to the type they represent. And enums do precisely that. There are broadly speaking two kinds of objects: value objects and entity objects. Java enums represent a type of value object, and can capture whatever properties make sense to represent that value type. &gt; For instance, if I want to put mass or weight as a property on a &gt; class, it would be right ... You are confusing physical reality for abstractions. Weight might be perfectly okay even if it is an "extrinsic property" in the world of physics because in the domain model in which you are working that detail is irrelevant. For example, if you were representing cooking ingredients. The software model and the way the model is used determine which properties make sense, not the physical representation. Perhaps instead of criticizing the specific implementation it would be better for you to understand the problem he was trying to solve, before picking apart his work and presenting some substitute implementation which does nothing to solve the actual problem he was facing. The enum in this example is not capturing configuration details. It is a value type enumerating a number of operating systems both general categories and specific. An enumeration of operating system names which served some purpose of the authors, not some purpose that you re-imagined. This way of enumerating the values confers upon the value type a property of hierarchy, which is neatly captured by extending the enum. In addition, the operating system "value" is modeled to consist of some basic properties, such as `supportsXWindows`, which must have been useful to his design. This is a perfectly reasonable OO design. I've done similar "tricks" before in production systems to enrich enumerated value types and I'm happy to report that I'm healthy, friendly and have no regrets.
Except that you've lost the property of hierarchy which was a requirement of his approach (whether or not you think this requirement is "correct"). How would you capture the following with just equals while maintaining the contract of equals? OsType.Fedora.is(OsType.Linux) == true OsType.Fedora.is(OsType.Unix) == true
&gt; I'm not sure what is confusing or hard about this. Please, re-read the article. The author wants to capture *hierarchy*. That is: OperatingSystem.HP_UX.getOsFamily() == OsFamily.UNIX but also: OperatingSystem.Fedora.getOsFamily() == OsFamily.UNIX OperatingSystem.Fedora.getOsFamily() == OsFamily.LINUX The "simple" solution completely ignores this requirement. The OS class requirement is an unnecessary embellishment, and the OS family requirement doesn't meet the stated requirements. There are other requirements, such as being able to do a depth-wise enumeration by OS family, but I just want to see how this *one* requirement would be met. I'm not asking for "perfect code", only code that at least minimally meets the stated requirements.
The author doesn't actually understand the *hierarchy*, Fedora is not Unix, Linux is not Unix. But if you wanted to pull that stupid stunt anyways, you could do it by A) accepting a list of osfamilies, or B) adding another enum level. It has become painfully obvious that you don't understand how to make a composition solution to the problem.
&gt; Each OperatingSystem enum value participates in a hierarchy, i.e., it is a &gt; child of its OS family. That is not a hierarchy. A hierarchy implies a path from a root to a leaf of arbitrary length. Each possible path in your hierarchy has a length of 1. &gt; I know the author modeled it that way, but it's wrong and confusing. But that's his requirement. Whether or not you think the requirement is wrong or confusing, that's not at issue here. The model he chose served some purpose for him. Don't try to recast the problem because your solution doesn't fit. &gt; But to directly give you the code... No, you either violate the contract of `equals` (reflexive, symmetric, transitive and consistent) or end up the following result: FEDORA.getOsFamily().equals(OsFamily.LINUX) == true FEDORA.getOsFamily().equals(OsFamily.UNIX) == true HPUX.getOsFamily().equals(OsFamily.UNIX) == true HPUX.getOsFamily().equals(OsFamily.LINUX) == true Equals cannot be used this way.
&gt; He's modeling them both and the fact that they're related. That's his model. The *actual* problem here is that you are altering his model to validate your solution. Whether his model is right or wrong is not at issue. Assume his model is correct. Provide an alternate implementation which meets the requirements of his model. Otherwise, this exercise is pointless. &gt; I suppose you could arbitrarily divide all kinds of objects into these &gt; two categories, but why would you? And what are those categories &gt; supposed to represent? Because they represent two fundamentally different concepts. The number "one" is a value, an object which has immutable. All "ones" are the same and all instances of "one" are interchangeable. A "one" can only ever be "one". If you had `x = new Integer(1)` and `y = new Integer(1)`, you can swap x for y and nothing would change, for now and all time. A "car" is an entity, an object which as changeable state. Instances of cars are not interchangeable, even if they have the same value at some point of time. If you had `x = new Car()` and `y = new Car()`, you cannot swap x for y and expect the same results. You cannot even substitute swap x from two different points in time and expect the same results. Why you would choose one or the other depends on your domain model. But value objects should be preferred, and you should make make objects entities only as required, because entities introduce temporal coupling to a system, which makes behavior much harder to predict. &gt; What do you lose by representing mass in this case? YAGNI (You Aren't Going to Need It). Do not introduce unnecessary concepts just because it might be beneficial "down the road". YAGNI results in simpler models and simpler systems. Only add a concept if you can *prove* that it is necessary with concrete facts about how the app is likely to be used, not handwaving about pluggability and extensibilty. &gt; Yes, but this is surprising. It doesn't matter if its surprising. It's not your model, it's the author's model. If you don't like the model, don't bother trying to come up with an alternative implementation of the model. Doing something completely different and saying you have a better solution is not intellectually honest. I've read that book. Introducing it here is a complete red herring. The validity of the model is not at issue. Provide a better implementation of the model proposed.
Thanks. I suppose I should have cleaned it up before putting it out here. I somewhat forgot that other people would be reading the code and not just looking at what it did. I appreciate the suggestions.
&gt;&gt; Linux is a Unix &gt;Nope. These are different OS families. UNIX defines a strict specification which an OS must follow Okay, Linux is a *nix if you want to be pedantic. You can't deny that grouping Linux with Solaris is useful. It's certainly a lot more useful than claiming Solaris is a Server OS but that Linux distros are Workstation OSes. &gt; The taller the tree, the more nodes in it that are not proper OsTypes. Irrelevant. Yes, the article's example might not have been the greatest, but the point was to show how a hierarchy could be represented with an enum. Your approach is very limited when it comes to representing hierarchies, as illustrated by the fact that you had to fudge the data to fit your implementation.
Yeah I guess I've been quite informal with my coding. Often times I know I'll need a variable but I won't be picky about its name. I kinda forgot that others would want to read and understand my code, and not just look at the end result.
&gt; I also notice you added a constraint of "any additional constructor parameters" which is not okay. The first thing I said was: &gt; the taller the tree, the more complicated your approach becomes. To which you responded "??? Uh, no." The only way to increase the height of the tree in severoon's approach is to add more constructor parameters, more fields and possibly even more side-enums if they follow a similar pattern to the ones already there. That's all additional complexity. The article's approach only needs one extra line of code per node in the tree, no matter where it goes -- even if that node ends up increasing the height of the tree. So that wasn't a new constraint. I just made the "no additional complexity" constraint more explicit.
&gt; The author doesn't actually understand the hierarchy, Fedora is not &gt; Unix, Linux is not Unix. Irrelevant. &gt; you could do it by A) accepting a list of osfamilies, or B) adding &gt; another enum level. I want to see the complexity of this solution. The enum solution provided by the author was fairly elegant. If you accept a ranked list of osfamilies representing depths, you would have to provide that list for every single enum value, resulting in massive duplication which is absent from the author's solution. The author's solution can handle arbitrary depths without adding new types making the enum easy to modify while retaining the benefits of using an enumerated list (everything is the same type, compact representation). More enum levels results an an explosion of types and fragmentation, interfering with the benefits of using enums in the first place. At that point, it might be better just to not use enums. &gt; It has become painfully obvious that you don't understand how to &gt; make a composition solution to the problem. LOL. What has become painfully obvious is that you seem to have a habit of making unfounded assertions. 
I think the combination of laziness and balls is *nearly* impressive. He just doesn't give a shit. If the title was "Do my homework for me." it would have impressed me more... but still, kinda awesome. 
This is actually a pretty interesting issue. If I gave this as an interview question, I would probably want to hear the applicant mention that the generic case of this question (if any n numbers in the array add up to X) is the NP-Complete problem: http://en.wikipedia.org/wiki/Subset_sum_problem Which is of course O(2^N) run time. *edit* edited out my stupidity
&gt; Irrelevant No, it's COMPLETELY relevant. You claim it's irrelevant because now you have a stick up your ass and don't want to be wrong. The author made a mistake, he represented it wrong, he made a WRONG solution. The authors solution is WRONG. Are we good now? I didn't think honestly it would have to come to this, but apparently now solving the problem correctly is "irrelevant". Pathetic. &gt; I want to see the complexity of this solution What complexity? Taking a list as a parameter is complex? If you want to "see" it do it yourself. By "elegant" you mean doing a trick. &gt; you have to provide that list Overload a constructor to accept a single entry that makes a list of the given value. &gt; resulting in massive duplication Just because you say that BS doesn't make it true. No it doesn't. There is no duplication. It's because you and the author don't actually understand the hierarchy. Additionally, if you expand the enums lower then you get rid of that anyways. &gt; arbitrary depths without adding new types Good for it. I *didn't say it didn't smartass*. We're not discussing how the solutions scale for different scenarios. You said *it wasn't possible*, that a composition solution couldn't do the same thing. You keep trying to bring this in now, about how great you think the article's solution is. I don't give a shit, honestly, that it's so great and elegant, especially since that is your opinion. The problem I had with you is that you claimed the behavior couldn't be replicated with the compositional design. It seems now that you've dropped that and now decided to talk about how the other things and other problems that it might adapt to, and how easily it can do that... but that's a complete red herring. So we go back to the ORIGINAL point, and that was me asking you what you think the design can't do. And your response basically is it can't adapt to different scenarios and problems without work... and you know what? THAT is what is irrelevant.
&gt;It’s make or break time for Spring. Um? Isn't Spring well enough established at this point that it shouldn't even need to be questioned? Downvoted? Oracle fanbois on the rampage? 
&gt; The first thing I said was Not really the first thing you said but whatever. What you consider "complicated" would be your opinion I suppose, and of course what aspect your applying "taller" to as well. Let's instead, talk about the first thing **I** said, because it was YOU who replied to me. And I was saying that the compositional design can replicate all the behavior. I NEVER said that it scales perfectly in all ways and fashions the same. ... You want to discuss downfalls of each solution? Fine. The article's solution must have a singular hierarchy. It can't support multiple values at once, while severoon's can. It also is not truly a good OO approach, and if you have to add specific behavior to each part of the hierarchy it becomes a mess. So in fact, the article's solution doesn't handle "no additional complexity" very well either. They both scale in different ways. I'd chose one primarily on the exact problem at hand. Are you happy now?
Ok after further consideration, I suppose you can do it in O(n) in a way similar to what you describe, since for each number you really only need to know if the correct 'paired' number is in the set. However, this solution would take up O(n) space where n is the largest number in the set (so this solution would not be usable for numbers in the range 1 - 1,000,000,000 or so)
&gt; Are we good now? We'll be good when you can tell me what problem the original author was solving that lead him to choose the enum structure in the first place. Choosing a solution that doesn't do the same thing *at all* without knowing the original requirements is just plain stupid. &gt; Overload a constructor to accept a single entry that makes a list of &gt; the given value. Which is exactly what the author's solution does. But, in the "simple" solution that was proposed, there is no hierarchy of OS families defined (that Linux is a Unix, regardless of how stupid you think that is) which provides the information you would use to dynamically generate the list, so we'll have to encode somehow. This adds complexity to the "simple" enum, which we're not allowed to do. The "simple" solution would be to spell it out in the parameter list. In case the entire point of this discussion escaped you, severoon stated that enums should be simple lightweight tokens, while I said there is no harm in adding some intelligence to an enum since they were designed for that. &gt; that a composition solution couldn't do the same thing. I never said that. I only said that the original author's solution was simple and elegant. I didn't make any claims about the compositional approach in general. Only that the "simple" solution proposed by severoon wouldn't work. This should be blindingly obvious by now, because it doesn't even attempt to solve the original problem. Which was very conveniently deemed stupid. &gt; The problem I had with you is that you claimed the behavior couldn't &gt; be replicated with the compositional design. I never said that genius. But, since you have demonstrated a complete lack of reading comprehension skills, I'll spell it out: I said that the "simple" solution that *was proposed by severoon*, which *claimed to be a better solution* than the "complex" solution devised by the original author, did not actually solve the same problem *at all*, and *as proposed* could not be made to solve the original problem while retaining its simplicity. We're discussing how to fix severoon's implementation.
The O(n) solution reminds me a lot of using hash sort
1.6? We're still trying to get out of 1.5.
&gt; We'll be good when you can tell me what problem the original author was solving Alright: "Once upon a time I wanted to create enum that contains various operating system." Done. He never claimed there was a specific problem to be solved, just that he wanted to represent it in an enum. You really can't read. &gt; without knowing the original requirements is just plain stupid. The original requirements was that he wanted to represent the proper hierarchy structure. He said so in the first place, as well, we've already gone over this. He's claim that: &gt; All Linux distributions together with SunOs and HpUx are Unix systems Was WRONG. And I find it really pathetic that you are attempting to try and distort this in order to find some ground to save your now pathetic argument. &gt; This adds complexity THIS IS A RED HERRING. It does not matter if it "adds" complexity. This was not about which one was more complex or not. This was you claiming it can't handle the same thing. It can, add the complexity and we're done here. I don't give a shit if you think "adding complexity" was bad. I really don't. I never did. I never mentioned it. I keep telling you this, plugging your ears and screaming la la la isn't a way to communicate with others. &gt; In case the entire point of this discussion escaped you, severoon stated that enums should be simple lightweight tokens **This is not what I, read I, see I, started this with**. I DID NOT question that aspect. I did not support that claim. I did not deal with that claim. **I** responded to your first post asking what you think the author's design could do that the parent couldn't. This is why **I HAVE NOT** brought it up, nor did I attempt to even discuss it, nor do I care about interjecting into the stupid argument of how "light" enums should be. &gt; because it doesn't even attempt to solve the original problem. **It solved the original problem**. The article author made **a mistake** in solving **his problem**. His **mistake** is **not** the **problem**.
Magic number is 10. First number in list is 2. I can then store 8 in a hashmap because 8 will solve the problem. Next int in the list gets checked against the hash for existence. If found, I know my current number solves the magic number based on a previous number I have seen. Thus, I can do a single iteration over the list and have a definitive answer at the end. sincerely, Richard Nixon
I've always called them member variables, so as to not confuse with the idea of the java.util.Properties object, or anything like that. "properties" for something that looks like array.length is, from what I know, a c# feature to have methods that don't look like methods...
It won't matter but if you really do want to check it you can use Caliper - Microbenchmark Framework: [http://code.google.com/p/caliper/](http://code.google.com/p/caliper/)
`.length` is a member variable. The term "property" has a very specific meaning in Java relating to beans. Specifically, a bean is a class with methods like `getXXX()` and `setXXX()` which define a property named XXX. Properties are used for "binding", where you associate a textfield (for example) to a property name, and any changes the user makes to the textfield cause the bean object to be updated through the `setXXX` method (and vice versa through the `getXXX` method).
&gt; That is not a hierarchy. A hierarchy implies a path from a root to a leaf of arbitrary length. Each possible path in your hierarchy has a length of 1. Java doesn't define the notion of a hierarchy, so I thought you were just using the term to mean a hierarchical structure. Now I think you simply mean the data structure notion of a tree. Note that in such a tree structure, each node is the same type, normally `Node`. That is not the case here. &gt; But that's his requirement. I don't think so. I think the example is meant to imply the requirements he's coding to, but he never comes straight out and says what the requirement is that a hierarchical enum satisfies. I suppose we could invent one, and the idea of a hierarchical enum might not be an absurd one. But it is a bad example...and I can't think of a reason one would want this. Can you? In any case, modeling Linux as a child of UNIX is just not right. They're different kernels. I suppose you could create categories of OS families: POSIX (Solaris, HP-UX, IRIX, etc), MOSTLY_POSIX (Linux, Minix, NetBSD, etc). Again, though, it would be a mistake to confuse OS family category with OS family, because they once again mean different things and have different intrinsic behaviors. &gt; The model he chose served some purpose for him. Don't try to recast the problem because your solution doesn't fit. What purpose? I contend that it could *only* serve the most contrived purpose possible, if any at all, custom-tailored for the very purpose of having this hierarchical enum in the first place. If you can invent one that actually makes sense where this is the best solution, I'll be impressed. &gt; you either violate the contract of equals How did I violate the contract of `equals()`? How could I possibly have violated the contract of that method...I didn't even write it! `OsFamily` inherits the default `equals()` from `Enum`...are you accusing Sun of implementing it poorly? :-) Also, I don't think you appreciate the meaning of the code you wrote: FEDORA.getOsFamily().equals(OsFamily.LINUX) == true FEDORA.getOsFamily().equals(OsFamily.UNIX) == true HPUX.getOsFamily().equals(OsFamily.UNIX) == true HPUX.getOsFamily().equals(OsFamily.LINUX) == true These are all perfectly valid statements. So would these be: FEDORA.getOsFamily().equals(OsFamily.LINUX) == false FEDORA.getOsFamily().equals(OsFamily.UNIX) == false HPUX.getOsFamily().equals(OsFamily.UNIX) == false HPUX.getOsFamily().equals(OsFamily.LINUX) == false Whether these evaluate to true or false, they are all valid uses of `equals()`.
&gt; Assume his model is correct. But it isn't. &gt; Provide an alternate implementation which meets the requirements of his model. What are the requirements of his model? Can you state them? I contend that you cannot, because his model is incorrect, it would force you into nonsense if you tried to capture the requirements served by this code. &gt; The number "one" is a value... A "car" is an entity... You have invented the terms *value* and *entity* when we already have perfectly good terms for these concepts: *immutable* and *mutable*. (I think you might be referencing these as concepts from domain-driven design, but if these concepts are relevant to this particular discussion you'll have to enlighten me as to how, exactly.) &gt; Why you would choose one or the other depends on your domain model. Perhaps you are assuming that one may articulate any domain model one wishes? If so, this is a problem. You may not do this. Your domain model must be constrained by the problem domain you are modeling. There is no problem domain where an OS family and an OS are the same kind of thing. Hence, representing them both with a single type is invalid in every domain model because the set of problem domains addressed by such a domain model is the empty set. &gt; Do not introduce unnecessary concepts just because it might be beneficial "down the road". Weight depends upon mass. If you introduce the concept of weight into your domain model, whether you acknowledge it or not, mass has snuck in under the covers. If you deal with the notion of "heaviness" at all in any application anywhere, you absolutely cannot do without mass conceptually. Even so, you may choose to exclude it from your model. I say this is a mistake in most cases, though, unless you can for all intents and purposes now and forever treat both weight and mass as instrinsic properties. That is a very bold prediction though, and one I would prefer not to make if I could help it. Since I've already committed to introducing mass into my model either way, I might as well just model it directly and let weight be figured elsewhere, on some other object where it *is* intrinsic to that thing. &gt; It doesn't matter if its surprising. *Obey the principle of least astonishment.* —Josh Bloch source: http://delivery.acm.org/10.1145/1180000/1176622/p506-bloch.pdf?ip=216.239.45.4&amp;acc=ACTIVE%20SERVICE&amp;CFID=171514335&amp;CFTOKEN=37556390&amp;__acm__=1358553529_de55c48e171c8a5639aad7cb3f65fc77 &gt; If you don't like the model, don't bother trying to come up with an alternative implementation of the model. As a professional programmer, most of what I do is come up with alternative models that better capture that salient bits where they should be captured. This is the secret sauce of programming. Programming is all about dependencies. That is the core concept: deft dependency management between objects, between packages, between deployment units, between subsystems, between systems. If you can do this at every level, you're good. The author is breaking this principle and we need go no farther than the single enum he's introduced. It's a tragic misunderstanding of OO design basics. &gt; Doing something completely different and saying you have a better solution is not intellectually honest. I think inventing a neat little whiz-bang trick, contriving a very poor example, and presenting it as useful when it hasn't been shown to be so in any real system anywhere is kind of intellectually...curious.
&gt; You can't deny that grouping Linux with Solaris is useful. I deny it. Not only is it not useful, it's misleading, and harmful. Solaris is fully POSIX compliant. Linux is not. If POSIX compliance is to mean anything, certainly this matters. &gt; the point was to show how a hierarchy could be represented with an enum. The more important question is not *can* an enum be used to represent an hierarchy, though! It is *should* an enum be used in this way? I say no, based on the example, and my inability to come up with one that even remotely makes sense. Perhaps you can do better than both the author and me? &gt; you had to fudge the data I say I unfudged the data, and the author was the fudger.
Let's use the author's example of `supportsX()`. I want to add a variant of Linux into his enum called busybox. (This is a real example, busybox exists.) Busybox doesn't support X Windows, but it is a child of Linux. So I add it thusly: public enum OsType { // ... BUSYBOX(LINUX.class) { @Override public boolean supportsX() { return false; } } // ... } Ok, all good, right? `BUSYBOX` is a child of `LINUX`, `LINUX` is a child of `UNIX` (the author says, incorrectly so, but whatever). If I call `BUSYBOX.supportsX()`, it properly returns false. Now consider `UNIX.supportsX()`. Tell me: what should it return? What about `LINUX.supportsX()`?
&gt; hierarchical supportsX method http://www.reddit.com/r/java/comments/16rudq/enum_tricks_hierarchical_data_structure/c7zhcvv
By VST, do you mean the Steinberg plugin stuff?
&gt; But it isn't. That's your opinion. &gt; What are the requirements of his model? Can you state them? I don't know, but I do know will suspend judgement about a design unless I know what those requirements were. &gt; You have invented the terms value and entity Not my invention. These are terms that come from [Domain Driven Design](http://en.wikipedia.org/wiki/Domain-driven_design#Building_blocks_of_DDD). &gt; immutable and mutable These are just implementation details. The terms value object and entity object have much broader design implications. There is an [entire book](http://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215) dedicated to the topic which is very well regarded in the industry. &gt; There is no problem domain where an OS family and an OS are the &gt; same kind of thing. You keep clinging to one representation. There are an infinite number of representations that are equally valid when viewed in the context of the business process which is being modeled. Context matters. I don't know that context, so I'm not going to go create an entirely different model ignorant of the context. &gt; Weight depends upon mass. ... mass has snuck in under the covers. Weight is the effect of mass due to gravity. But depending on the context, this is completely irrelevant. In a domain model representing cooking ingredients, the heaviness of an ingredient matters only in how it relates to cooking, that is what would register on a common scale. The distinction between mass and weight is completely irrelevant in this context and it would be total silliness to deal with mass conceptually in this context. You can choose to model mass and weight as distinct concepts in your model. That's up to you. But different programmers can have different opinions on what they choose to include in their models based on their professional judgement, and it is the height of unprofessional behavior to say they are making a "mistake" when you have no evidence that the model does or does not serve the purpose it was created for. You are not the sole judge of what is "correct" and what is a "mistake". I don't know if the model created by the original author serves the purpose it was created for or not. So, as a professional, I suspend judgement. I certainly wouldn't create something completely different and then say my model is better when I have no idea what the original model was used for. &gt; As a professional programmer, most of what I do is come up with &gt; alternative models that better capture that salient bits where they &gt; should be captured That is not professionalism. That is unprofessional and arrogant. Without understanding why the original model was created the way it was, you make an alternate proposal without any bearing on the facts. You have no idea what the real salient bits are because you don't know why the original model was created the way it was. Professionalism is about respecting the abilities of your peers, and suspending judgement until you've heard them out. &gt; The author is breaking this principle You have gone from not knowing what problem the model was used to solve to making judgments about the dependency structure of a system you've never seen. There is no way to judge if the author is breaking any broader OO principles because we are looking at a snippet of code in total isolation. Why even bring any of that into the discussion? Thus, if I evaluate this model isolation, accepting that his domain model meets his needs (I don't know those needs are, and so I suspend judgement about the applicability of the model), I don't see any violations of encapsulation, the members are cohesive, and the design is simple and elegant. That looks like good OOP to me. That is my *opinion*. You can disagree, but that is your *opinion*. &gt; I think inventing a neat little whiz-bang trick It is hardly a "trick" if Java enums were designed to be used this way. There is nothing magical here, it is just an interesting application of existing features. If I encounter a situation where I might want to encode a hierarchy this way, I might go with this design. &gt; presenting it as useful when it hasn't been shown to be so in any real &gt; system anywhere Again with the unfounded assertions. If the original author found it useful in a real system, there is one counter-example. I frequently use these features of Java enums to give them intelligence in real systems. There's some more counterexamples for you.
Like spewing meaningless buzzword soup that says absolutely nothing about what this new version actually *does?* That's hardly "emerging". Saying nothing in as many words as possible is a long tradition of megacorporate non-engineering.
Yeah, according to whom? I can't speak for everyone, but I've talked to a total of zero other Java devs about abandoning the most widely used Java framework in the world.
No, it tries to see if it is a variety of int values. Each of the case conditions checks against static int values defined at the class level. 
Because the code is using "final static" to define the card ranks, the switch statement is actually using the identifier which resolves to an int. So what you think is a string, is actually an identifier for the constants defined at the top of the class. EDIT: clarifiaction
I agree, actually. It's a great product, but if I get another call from them I might just strangle-a-rebel.
Looks pretty promising without trying it out yet. The need to do a deep copy in a fast, complete way occasionally pops up and I don't remember ever finding an API out there for it. I spent half a day once making a utility to do this, but ran into some tricky issues dealing with hibernate proxies and said screw it. Thanks for bringing this up. 
I've seen many walk down that path, and don't remember anyone actually saving themselves any typing by making their architecture much more complicated than necessary. However: http://en.wikipedia.org/wiki/Command_pattern
&gt; The terms value object and entity object have much broader design implications. Ah, so you were referring to these concepts from domain driven design. But I still don't understand what they have to do with this topic of hierarchical enums. I wish you would clarify that. &gt; There are an infinite number of representations that are equally valid when viewed in the context of the business process which is being modeled. There are not. For a given business process, there are usually a few valid approaches that make honest to goodness tradeoffs. Everything else is usually suboptimal. That's not to say you can always foresee which ones are the best until much further down the road. But more to the point I've been making, it is often the case that two designs will be equal in the context of a particular business process, but one relies on that context less. In that case, the one that is more context-independent is objectively better. This is basic stuff, Occam's razor and all that. &gt; The distinction between mass and weight is completely irrelevant in this context and it would be total silliness to deal with mass conceptually in this context. That's not true. No matter which way you choose you are dealing with mass. It's unavoidable because it's an intrinsic property of stuff. You can't model stuff without taking note of its intrinsic properties. If you do, you're not modeling the stuff you've set out to model. &gt; You can choose to model mass and weight as distinct concepts in your model. I assert that you cannot choose to do otherwise, because they actually *are* distinct concepts. You have no choice here; you can either recognize reality, or not. &gt;&gt; The author is breaking this principle &gt; You have gone from not knowing what problem the model was used to solve to making judgments about the dependency structure of a system you've never seen. I didn't say I didn't know the problem. I said *you* couldn't verbalize the requirements. I know this because they cannot be made explicit because they are nonsensical. If I'm wrong, then please answer my questions I've put in the other subthreads. How would you add busybox to the author's enum? If you can answer my question and have it make sense, I will concede. Happily so, because in that case I would have learned something. &gt; There is no way to judge if the author is breaking any broader OO principles because we are looking at a snippet of code in total isolation. Why even bring any of that into the discussion? Because there is absolutely a way to judge this from a snippet of code. No problem, you can do this all day long. Here: public class Foo { public int bar; public void setBar(int b) { bar = b; } } Is this bad code? You bet. It breaks encapsulation. Can you contrive a business context where it makes sense? Nope. It breaks encapsulation. How about this: public class Rectangle { private final double width; private final double height; public Rectangle(double w, double h) { widith = w; height = h; } public double getWidth() { return width; } public double getHeight() { return height; } } public class Square extends Rectangle { ... } Should `Square` extend `Rectangle`? Nope. It breaks the LSP; it's flat wrong. Does business context matter? Nope, because it breaks the LSP. I can do this all day. What the author has done in the article is somewhat like an LSP violation, except instead of spreading it across a class and a subclass, he's done it in the enum itself by letting it represent two different types. I'd have to double check to be certain, but I think the Single Responsibility Principle is the one imperiled in this design, and perhaps others. &gt; That looks like good OOP to me. That is my opinion. You can disagree, but that is your opinion. I don't mean to say that there are no matters of opinion in OOD. There are, but that comes in when weighing tradeoffs. So, while there are some decisions that are purely subjective, there are certainly some that are objective. This is an example of the latter. &gt; if Java enums were designed to be used this way. They certainly weren't. Just because something *allows* a particular usage does not mean that it *supports* that usage. Enums support hierarchies no more than any other class. You wouldn't say that all classes need to implement hierarchy simply because it's possible, I hope. &gt; If the original author found it useful in a real system, there is one counter-example. And where is that counterexample? If he knows of one, he certainly didn't say so in the article. And he certainly didn't derive the example from any real world use, because it is badly contrived. &gt; I frequently use these features of Java enums to give them intelligence in real systems. There's some more counterexamples for you. Oh, my.
When I started studying programming, our teacher told us that year students would blame the compiler for lack of understanding of programming but he had yet to see one such actual bug. He was right, I saw people blame the compiler, faulty hardware but it was always a student bug. (I have found one since then but it was in VBA)
ref: same author, orginal blog: http://blog.cedarsoft.com/2010/10/hierarchical-structures-with-java-enums/
Spring is fine but I think it is not the best anymore. I can develop a web application with JSF much quicker. Using a component library like Primefaces lets me easily make a custom theme and has all sorts of rich web components. I do not have to search and put together a mish mash of Javascript and JQuery plugins. It used to be I would spend most of my time on the front end. Now I spend the majority of my time on business logic.
You're talking about Spring Web MVC. The Spring Framework integrates very well with JSF.
I know people have different opinions on error handling, but I just really can't accept everything being a runtime exception. You are just asking for trouble because people will easily forget to catch it. This is an issue when something that errors could be recoverable, but the client doesn't know to handle that case.
&gt; I just really can't accept everything being a runtime exception Seems like everyone outside of Java has accepted it. Java is the only major platform that supports checked exceptions. Even Scala, a JVM language, converts all checked exceptions to runtime exceptions. Maybe the cost of not catching a recoverable exception is not worth the price of making exceptions a part of the API. At least, that's the reasoning for why Anders Hejlsberg did not make checked exceptions a part of the .NET platform.
the first tip, a single, system-wide exception class, is horrible, but some of the other tips have some merit. I especially think #4, a map of fields in the exception class, and #6, a web interface for reading logs, are good ideas.
4 wouldn't even be necessary if he extended the exception class. 6 is a good idea but in practice, in live systems you are more interested in state and rate alarms than events.
I like the idea of the first tip, an application specific exception type, but cringe at how that idea is applied. Why not make it a base exception type (runtime or checked depending on your philosophical leaning)? It seems like all of the points he raises can be addressed using subclasses of a base exception type, which also fits with the idiomatic style of how exceptions are used in Java. On a personal note, regarding tip 4, I much prefer having a class capture details than a map. Having dealt with code that passes maps around everywhere instead of defining a class around the concept, I had some unpleasant flashbacks when reading that suggestion.
1. OpenOffice is not in Java. OpenOffice has some functionality that depends on Java, but it would be a massive stretch to run from there and call it a Java program. 2. Depends on how this program is implemented. If it's a Java applet that runs in a web browser, then yes, you will have to take additional precautions. If however this homework program is a standalone Java application then you have nothing to worry about. These security issues are about the potential for Java code to bypass the sandbox the JVM creates to protect the system from untrusted applets. What capability does an applet like this have? Well, exactly the same as any normal application running on your machine. The difference being you probably did not consent to downloading and installing this applet in the same way you would for a normal application. Running Java applications is entirely safe - or rather, as safe as its ever been to run any application written in any language. It is however unsafe to allow Java Applets to run. The sandbox is obviously flawed and who knows how many more exploits against it exist. You should if possible disable Java from within your browser. If you require Java functionality for some websites, you should look into browser extensions and the like to setup a whitelist for those sites you trust.
Checked exceptions are part of Java's class library. The question is whether you should add checked exceptions to your own class libraries. Wrapping checked exceptions is already a common practice, either into a runtime exception or into a "higher-level" checked exception. If you don't wrap checked exceptions and can't catch you have to propagate, which because it is checked, means it has to become a part of the method signature, resulting in pollution of the API with low level details. This is why C# doesn't have checked exceptions. I have severe disagreements with the remaining tips, but choosing a system-wide application runtime exception I have no problems with, especially if it is a base class so you don't have to do the horrible enum thing.
&gt; internationalized text can now be retrieved by using the error code as the resource bundle’s lookup key. There is Throwable.getLocalizedMessage() method for i18n messages (by default it returns getMessage() ).
JSF is Java EE. The fact that Spring integrates with it just means that some would prefer a Java EE front-end as opposed to the Spring solution. 
The Spring Framework also integrates with JPA, which is Java EE, but also provides its own adapters for pure Hibernate and JDBC integration, if you don't want to use Java EE as a front-end for persistence. Spring is all about integration, you can mix and match Java EE and non-Java EE as you wish.
Why is it a bad idea to have a system-wide exception class as a parent, or do you only mean that it's bad to use one, across the system, and for all errors? 
You usually don't care about the exception details at runtime, just return a HTTP 4xx error code, log it then you inspect it later. Why does the user care about the details? Exceptions should be exceptional. User input validation errors shouldn't be treated as exceptions. 
Show us the code you have, and ask specific questions. We're not here do do your homework. Also, try /r/learnprogramming or /r/javahelp for these kind of questions. 
Is this from Deitel - Java: How to program ?
Is there some reason you need to use arrays? In java it would be better to create Student objects and have each contain an array/list of assignments.
I really appreciate this answer. So when I disable Java in my browser (firefox) and log into the homework site. It directs me to the needed plug-ins one of which is java. So I think it is a applet in the browser. Correct me if I am making a false assumption. By additional precautions, do you mean disabling Java in the browser with an exceptions list? Or just allowing white listed sites that I give permission to. Or is there something else that students using this site should be advised of? Thank you again. 
Strange post...
Even hibernate has moved to using runtime exceptions for everything. As others have pointed out jvm languages like groovy use runtime exceptions for everything. The basic logic is that you have some top level block for handling exceptions that go uncaptured and just catch the exceptions that you can handle. For example, if you are using a library that can throw ioexceptions then your module that interacts with it should handle them or nothing in your code will be able to do it.
assuming you follow the plan given, you wouldn't need separate object types for the exceptions, the "separate type" is effectively contained within the meta data of the single exception type. Just because you FEEL that it has to be a separate object, does not mean in any way that it is necessary or even the best course of action. As usual, the best method is the one that the team follows and uses. 
Having your own wrapper classes is a good idea, but using it for all Exceptions in your app oversimplifies exception handling. Furthermore, having it extend RuntimeException would n't allow you to force recovery logic in the calling method. 
&gt;6 is a good idea but in practice, in live systems you are more interested in state and rate alarms than events. This really depends on the application. I work on a system that processes incoming tasks, and we are very concerned about events and exactly how each task was processed. However, because we have multiple worker processes executing tasks concurrently, reading the log file itself is tricky. If we had a better interface to access processing history, support would be much easier. 
It's not the article doesn't understand the purpose of checked exceptions, the author is purposefully throwing away impartial valuation. He's not alone. Anders Helsjberg decided against adding checked exceptions to C#. Martin Odersky drew the same conclusion in Scala, which converts all checked exceptions to runtime exceptions. Even modern Java APIs, such as JPA, don't use checked exceptions (NoResultException is perfectly recoverable and is a RuntimeException). There are rules for when to use checked exceptions vs runtime exceptions, but many people don't care anymore. There's a case to be made either way.
#1 has definitely good advice in that you should extend from runtime instead of just exception. Unless there is something the system can do to recover from an exception, forcing the system to handle the exception at multiple levels is messy. To the other point, it depends on a number of factors as to rather or not you should have multiple exception classes for your system. If all your exceptions are doing is wrapping (runtime)exception and you aren't planning on having your system handling exceptions differently depending on their type, then yes you should only have a single system wide exception. Having MySystemDaoException, MySystemFileExcception, and so on, but the end result is for all them to is write to the log, then it doesn't really help you to have multiple exception classes, at least it doesn't help you nearly as much as a good message and/or including the original exception will. 
I was thinking the same thing.
As I tried to explain, there is nothing wrong with using RuntimeException for all exceptional cases. In the end, the minimal level of handling a checked exception would be to wrap it into an unchecked one. So higher up the stack, there would be no difference other than that it is even less likely that code would be able to recover in a more precise way, because it has to know the type of that exception from two or more layers below. If everyone is able to live with that, thats okay. And many applications are just fine with that kind of valuation. But good APIs should enforce the next layer to do the valuation. If Query#getSingleResult would throw NoResultException as a checked exception, there would be less issues around where people are just curious about the exception being thrown. Yes, people do like unchecked exceptions often more, because they are either lazy or just experience Java (the JVM) as much more dynamic at runtime (which is not wrong at all). It very much boils down to how people think and talk about a language. And they do it with their own projects in mind with which they are familiar with - even if it is a JSR like the persistence API.
As I said, there's a case to be made either way and there is no "correct" answer. To me, a good API is self-explanatory and does what you would expect, and proper use of checked exceptions is just the icing on the cake. But really, I only take "exception" to statements like this: &gt; And yet another article about exception handling not understood.
For my sanity, I'm choosing to agree.
So you're assuming the system will handle all exceptions the same. That may be the case in some apps, but some systems need to have a more sophisticated error handling then that. And if you extend RuntimeException, you rely on the documentation and the developer. Not all exceptions are system errors.
Well, I can't stand arrays[][] so here are a few pointers to make life easier. Truth be told this homework assignment should only take a few minutes to complete. Before you do anything in Java go look up these topics, Oracle's has tutorials that can help you out, or just add stackoverflow at the end of your google searches * Objects * Collections * Generics * JUnit - Careful, will make your teacher love you. One thing I would do is make a student object and store their 'assignment' objects inside a collection data structure. This way, it's much easier to associate a student to their homework. public class Student { // Fill in the blanks . . . String name; Collection&lt;Assignment&gt; assignment; }
You can get that information by looking at the headline + submitter's name. Javin Paul must be trolling /r/java, because his advice consists of mostly copypasted articles by authors who completely misunderstand the subject. I feel sorry for his colleagues.
No, I'm not assuming the system will handle all exceptions/errors the same way. I stated that if you are going to handling exceptions the same way (e.g. logging it) there isn't a point to creating separate exception classes, even if they originate from different parts of the system. Arguing against extending RuntimeException because it will "force you to rely on developers and documentation" is a bit of a silly critique. All coding depends upon developers and documentation. If you have bad developers and documentation no system can be designed to withstand. I realize not all exceptions are (unrecoverable) errors, though often if that is the case you wouldn't be throwing an exception anyways. 
Either of those solutions would be fine. Personally, I do not have a need for any java applets, so I have it disabled in the browser entirely. NoScript should allow you to set up a whitelist. Another possibility is to install a separate browser just for that site and do not disable java within it.
I read top-down. It made kinda sense. I think.
Yeah, It's a shame, I learned a lot from this site. Also it is (or soon was) a respected CV entry in IT world.
Yes it is
Spring, spring and more spring. It is your friend. @Transactional on your daos and services.
If Hibernate is too heavy-weight, there is [Yank](http://xeiam.com/yank.jsp), which is an ultra-light JDBC persistance layer that wraps DBUtils. To use it you create for each table a POJO and a DAO Class. You write your own SQL statements and execute queries through the DBProxy class. You don't have to deal with Connections, ResultSets, and or other low level JDBC code. The Yank jar is only 13 KB as of release 2.0.0, and it depends on only SLF4J, DBUtils, and a 3rd-party database jar, whichever database technology you're using. [Here](http://obscuredclarity.blogspot.de/2013/01/unit-testing-with-hsqldb.html) is an example of using Yank for unit tests with JUnit and HSQLDB, but the idea is the same for whatever DB you're using.
HibernateTemplate sounds like a very convenient solution. I can live with another dependency as it's going to be a bare prototype for educational purpose only. Can it be used without adopting the whole Spring-Framework?
Is the rest of the area black? Your Screen class is only getting width, height without the scaling factor
If you're just playing with Hibernate for educational purposes, then I wouldn't use Spring. Spring hides details to increase productivity. I do note that you never call sessionFactory.openSession. It looks like you are relying on sessionFactory.getCurrentSession to create the session for you. I would recommend using the [Open Session In View pattern](https://community.jboss.org/wiki/OpenSessionInView). Any time you are going to do something requiring a session, before you start, open the session and after you are finished, close the session. For a web application, you would use a servlet filter which opens the session at the start of a request and closes it at the end. In the case of a test, open the session in the setup method and close the session in the teardown. Doing this will ensure that you always have an open session with clean state (no entities hanging around from previous operations, nothing half-modified from previous operations).
+1 for Linode.
&gt; using users' Google Talk contacts as contacts Unless the users exchange public keys via some alternate medium (i.e. meeting up in person) the communication will be vulnerable to a simple man-in-the-middle attack. If this is phone-based I'd recommend NFC (or QR codes/Bluetooth). &gt; no amount of telecom, ISP, or government spying could find out message Someone could intercept the user's web request to download the application, and replace it with their own "modified" version designed to leak data. Or, someone could use brute force/a quantum computer to break the encryption. Or a piece of malware could simply log the user's keys. Not trying to discourage you, but it's not possible to make something like this *perfectly* secure and immune to *all* kinds of interception. Your best bet would be to have the phones agree on a symmetric key in person (e.g. by NFC), and then transmit AES encrypted messages to each other via your server (over an SSL connection, with the public key hardcoded into the app). For added security, users could renegotiate a new symmetric key whenever they meet, permanently erasing the old one so that the old messages could no longer be recovered.
Take a look at your rendering algorithm: public void render() { graphics = bufferStrategy.getDrawGraphics(); gameLoop.render(screen); graphics.drawImage(screen.image, 0, 0, getWidth(), getHeight(), null); graphics.dispose(); bufferStrategy.show(); } Notice that the size you are rendering to is based on **getWidth()** and **getHeight()** defined inside Game2D, not in the Canvas class. However, when you create the Graphic2D object you are not setting those values to a scale: public Game2D(int width, int height, int scale, String title, GameLoop gameLoop) { this.width = width; this.height = height; this.scale = scale; Because you have a **width** and **height** private variable in the Game2D class itself, you are effectively overriding the **getWidth()** and **getHeight()** methods that are in the **Canvas** class. When you set the **canvasSize** with the scaled width and height, you effectively hide that with your own width/getWidth and height/getHeight code. Keep your scale/getScale() but remove the width/height/getWidth()/getHeight() from Game2D and see what happens.
Java Concepts - Cay Horstmann
[Head First Java](http://www.amazon.com/Head-First-Java-Kathy-Sierra/dp/0596009208/ref=sr_1_3?ie=UTF8&amp;qid=1358785467&amp;sr=8-3&amp;keywords=java) 
Use EJB and JPA (which can be Hibernate). It makes transaction handling SO much more simpler!
You're certainly right. I just learned, that getCurrentSession()-Sessions are getting flushed with the very first commit. That seems to be the reason why I get "Session is closed"-Errors when running jUnit-Tests with my HibernateUtil. (Well, starting after the first commit that is.) What I don't understand though is, that in my application this error does not appear. I read that calling getCurrentSession subsequently would open another session anyway. (So this seams to be the case for the application.) I can't make sense of this contradiction?
It's not that bad really. I enjoy how easy it is to implement a relative complex db scheme in Hibernate.
[http://thenewboston.org/list.php?cat=31](http://thenewboston.org/list.php?cat=31) It's not as good a real course, or a good book, but it's cheaper, and easier to begin with. If you follow these, you'll be able to decide if you need to expend some real money on a good book or two.
Defiantly read Head First Java. Also the official Java tutorials on Oracles website are good. As far as tutorials I would recommend the Netbeans tutorials. They are very easy to follow and cover all sorts of topics. I know you want to use Eclipse which is fine but it is easy to switch. I use both myself.
I always felt like TNB explained things in praxis, however the theoretical part of it was very limited, going from no knowledge about java and programming into this is a very big step. if you combine this with a theoretical course from youtube you can actually get a fairly good understanding of it. I recommend if you are following TNB, also watch some from this CS introduction course; http://www.cosmolearning.com/courses/cs-61b-data-structures/ it covers the same, but from a theoretical perspective. Lecture 1-15 covers java, after that it goes more into computer science stuff (also interesting stuff, but not really related to basic java and eclipse) 
Where I work, we actually have a policy of final-by-default in our codebase. Mutability at the reference level is something we feel needs to be justified. Sadly, it doesn't solve the problem of an object's internal mutability. Also, this results in ugly code when you need to assign a final reference from a call that can generate a checked exception. If the catch blocks don't re-throw (read: act as return points), my IDE complains that the reference might not have been initialized if I attempt to reference that final reference below the try/catch. Minor headache though, and par for the course with this Java of ours. :)
Thank you very, very much. I've been slaving over this problem for a little less than a week and I always hate when the little mistakes like those go over my head.
The majority of companies are on Java 6 now. Anything lower is just a risk. About 20 to 25% of companies are on Java 7 now. It was a fairly painless and straightforward update (only the initial release was problematic).
&gt; Is this about as secure as it gets? It's secure enough that it would be impossible to break without either: 1. intercepting the initial key exchange (this could be mitigated by using Diffie Hellman) 2. using malware/backdoors on the device to access the key (but there's nothing you can do about this - if the device isn't rooted the risk is low) 3. intercepting the application download The SSL connection stops someone from simply logging all the encrypted messages and decrypting them if they get access to the private key (unless they have a lot of CPU power, or a quantum computer). For point (3), I assume that apps downloaded via the Play Store are protected with HTTPS, which makes the possible weak links: 1. Google (who could just send the user whichever binaries they wanted) 2. MitM attacks by anyone with access to a private key trusted by Android (e.g. governments, ISPs, certificate authorities and their employees, etc) There's not really any way to protect against those unfortunately.
You can look at the source code to these. It was installed when you installed the JDK. 
hey, how do you rearrange elements in an array in descending order? 
`BigInteger` is working with an array of ints to store the magnitude and an int field for the sign. No magic at all. `BigDecimal` is afaik just wrapping two `BigInteger` instances internally.
It says it's Java 5.0. Will that be a problem when learning? I believe java 7 is the newest now?
 integers[firstInput - k] Think about what happens when k is 0. You're essentially accessing integers[firstInput]. integers[firstInput-1] is the last element in the array. integers[firstInput] is out of bounds.
i changed it to integers[k] = integers[firstInput-k-1]; but now the final rotated output is {3,2,3} i've now tried using if loops for conditions such as if (k == 0){ integers[k] = integers[firstInput-k-1]; } else{ if (k&gt;=(firstInput/2)){ integers[k] = integers[firstInput-k+1]; } else { integers[k] = integers[firstInput-k]; } } but still to no avail. any more help?
Yeah you're writing to the same array as you're reading from. Make a temporary array and write to that. Then you can assign that to the integers array.
it's not a assignment but a practice problem from my teacher. and the specific problem is: 9. Write and test a procedure called "rotate" which will rotate the integer values of an array. If the array contained {1, 2, 3}, then afterwards, the array should contain {3, 2, 1}. So it wouldn't be correct to simply print the integers in reverse, in fact you dont need to print them at all. I need to actually swap the values of the indices in the array. I'm thinking I may need to use a specific function to swap each value.
thank you, this saved me. i was trying to figure out the if/else statements for hours before i realized what you meant.
There is a specific function in java you can use to reverse an array, however when studying java at school we were made to write a lot of the stuff already included with java so we understand how it works. I've updated the code to actually reverse the array: https://gist.github.com/4591662 There are two methods of accomplishing this, both are included in the paste edit, there's a fair bit of replicated code in there, I'd definitely consider wrapping some of the stuff in methods
http://docs.oracle.com/javase/6/docs/api/java/util/Arrays.html#sort(T[], java.util.Comparator)
&gt; turning strings into objects Strings are objects, so I'm not sure what you mean by this. &gt; parsing integers to add/multiply/divide the two numbers. There is some parsing involved in BigInteger/BigDecimal, but I think it's a relatively small fraction of their code. &gt; Is creating a working BigDecimal class possible with low level java knowledge? Yes. &gt; How would one create a class like "BigInteger" or "BigDecimal"? Do you know how linked lists work? If not, learn that first. Now that you know how linked lists work, look at a number like "498". You can think of it as a linked list of size 3, in which the first element is 4, the next element is 9, and the element after that is 8. That's basically how BigInteger works, except they store more than 1 digit per element for efficiency reasons. 
Thanks for the advice PerspectiveMan. I understand there isn't perfect security. But I consider my app a small, insignificant strike back against the corporate and state forces that right now are destroying any shred of privacy rights. I know I'm a bit in over my head in this as an amateur programmer, but it really means a lot to me and is something I want to do.
No, it shouldn't be a problem. I have read the book in german and my trainee also read parts of it and didn't have any problems.
I should point out that the contents of `ThreadLocal`s are also subject to garbage collection. Specifically, if the only reference to that object is through the `ThreadLocal`, and the `ThreadLocal` itself is eligible for collection, then so are its contents. Of course, if your `ThreadLocal` instance is `static`, as I imagine it often will be, it's not going to be GC'd unless your whole application and its `ClassLoader` is unloaded, and it can have a stale object sitting in it for every thread it has ever been used on. So yes, clear your `ThreadLocal`s in a `finally` block when you're done with them. (If you're using Scala instead of Java, use its `DynamicVariable` class instead; it's a wrapper around `ThreadLocal` that will handle the cleanup for you.)
&gt; I should point out that the contents of ThreadLocals are also subject to garbage collection. Specifically, if the only reference to that object is through the ThreadLocal, and the ThreadLocal itself is eligible for collection, then so are its contents. Isn't this true for everything? I.e. "if the only reference to some object A is through some object B, and object B itself is eligible for collection, then so is object A." &gt; If you're using Scala instead of Java, use its DynamicVariable class instead; it's a wrapper around ThreadLocal that will handle the cleanup for you. Or use actors instead?
JPA over Hibernate is pretty popular, Hibernate has been around for a long long time so it's very mature, lots of documentation, lots of libraries and it extends JPA very nicely (with non-standard features)
I love Hibernate. You have to get into the right mindset. If you think about the database and how it will turn out then you'll get caught up in data modeling and making the database structure match your ideal model. Using JPA2 on an EE6 (Hibernate and AS7.1) has been an incredible experience over earlier iterations of the technology. I'm able to develop much faster and keep things more decoupled. 
We need an article describing how to disable Internet Explorer.
I'm a big fan of both Hibernate and Cayenne. Cayenne is nice if you are a DB geek because you design you're DB and then it generates the classes for it. It also is easy to re-use the DB in another context or using traditional DB tools.
Thanks - I'll give Cayenne a look through.
So you haven't been caught in any performance issues with using Hibernate and JPA? From the cursory reading I've done, I've heard it consumes a lot of CPU. Also, my previous experiences with Hibernate have invariably led to me messing around in HQL, which kinda of leads me to thinking I've gained very little over doing it with raw SQL. How much do you find you use HQL? 
Yes that's what I'm hearing. I think I probably need to go back to Hibernate and give it a fair chance. I've always been a database-geek as much as a java-geek so abstracting the database away as much as Hibernate does has always been a bit unnerving for me.
I know its not a popular opinion but the last couple years have only cemented for me that Oracle has Java on the long path to obsolescence. No one is going to be out of a job anytime soon but don't be shocked that if in the next 10-15 years new code development in businesses shifts to other platforms and Java systems become the COBOL of the future, hanging on for ages but never doing anything new. 
I didn't take any metrics, but most likely any CPU usage made by Hibernate itself should be minimal vs the time it takes for the DB to execute the query and return results
The data mapping done by JPA is usually nice. The entity life-cycle and transaction management done by JPA is a PITA though. Is there any framework that give you JPA like mapping, but let you do the entity life-cycle management yourself? 
Not 100% sure what you mean by JPA-like mapping, but MyBatis automatically maps ResultSets to your domain objects. By default it coverts underscores to camel-case (eg: 'first_name' maps to setFirstName(...)), but this can be tweaked via annotations or XML-config. There's a reasonable example [here](http://www.objectpartners.com/2011/04/05/using-mybatis-annotations-with-spring-3-0-and-maven/). I'm a big fan of MyBatis myself but there's still a fair bit of boilerplate, and you still have to provide it with all the SQL.
I haven't done any performance comparisons. Typically it seems to add 2-5ms per query/action over raw JDBC but I don't really worry about it too much. I don't have to write my own object hydration/persistence stuff so that cuts down on code complexity. I don't have to manually track transactions: I just use request scoped beans, injected persistence contexts, and some stateless EJBs. Everything just works in a pretty seamless fashion. Yes there are some caveats and you can engineer situations in hibernate (especially with respect to cascading and transactions) that cause huge heartburn. As for HQL/JQL: I hate them. I use JPA2 and the CriteriaBuilder API. You should remember, however, that even with HQL one of the powerful aspects of JPA (especially as implemented by Hibernate) is that it works cross-database. Tackling that task without an ORM will make your code complexity skyrocket.
I've been using JPA2 for a while with both OpenJPA and Hibernate providers. To be honest if you just use the JEE API your application code shouldn't know who the provider is. If you're deploying to a JEE app server then it's probably simpler and more supportable to keep the default implementation e.g. Open JPA for WebSphere. The only issue I encountered was enhancement of Classes with OpenJPA. I like the MetaModel API - even though it takes some getting used to it provides type safety in the code, rather than just using Strings everywhere. For Web based applications I think using JPA2 is a bit of a no brainer now. I'd rather stick to the JEE stack, than introduce other frameworks. For work I do in batch processing I still use the Spring JDBC templates and plain old JDBC for high volume operations - but am more than happy to use JPA to read and write less high volume entities in batch processing. 
+1
Well... Oracle hasn't dona exactly good to anything they've purchased in the last years... 
Good stuff. Good primer on how not to write fragile tests.
It's a hard line to walk putting in such restrictions while not crippling features development teams depend on for legitimate uses or forcing more complex installer routines on the end user. Even if this were done, it would be gamed to one degree or another, nothing is truly secure and if there is profit to be gained from sneaky installers then they will be made. IMO naming and shaming is really the best one can hope for. 
As an ex Plumtree/BEA employee I agree. Though the Java community in general has been hard on me in the past when I state that Oracle's intentions with Java are selfish and that the community is primarily an afterthought to maintain critical mass while it's still needed by Oracle. As much as we would like Oracle to care, Oracle is positioned to not need OSS in the future. Like everything else, they strive to own their stack soup to nuts. 
Do you think there might be some future with Open Java or people will migrate to other solutions? Personally I think Open Java is bound to death, specially with the rise of Ruby and Python, but then again, I always listen to my father, he insists that it's too soon to predict anything. 
I wish browsers had an option to prevent outside app from installing toolbars &amp; plugins/extensions.
NONE of this applies if you install the SDK instead. Nice fud though.
&gt; The solution is for Microsoft to step up and make it impossible for installers to tack on shit by default. Then nobody will be able to install their [Bing Bar](http://imgur.com/gallery/fia5r) (bundled with DirectX installer)
I agree, Java has/had a lot of potential but there is a lot of steam gaining under other efforts now. Further the continually hard line stance against fully realizing functional programming capabilities will only hurt the movement. I get the arguments and I even am fine living without however if you want to lure new developers it's going to be hard when you are missing key features many other platforms are starting to take for granted. Finally Oracle taking a increasingly aggressive stance may become a risk factor for those running Java based systems from a patent and copyright perspective. There is nothing really stopping Oracle from forcing ISV's and businesses to start paying for Java (or creating a multi-tier license)short of the industry uproar it would cause at the moment. More than anything the questionable future licensing status and Oracles attitude toward it is the biggest thing keeping me from getting to close to new Java work now. One can say similar risks exist with other large stack like .NET. In these cases you have to look at the company position. MS is mostly interested in selling tools (IDEs, servers, document editors, etc) while oracle has increasingly been in the business of selling solutions (public portals, integration stacks, professional services). When you sell tools it is always in your best interest to make those tools as valuable as possible, the number of free platform features and APIs are testament to this. When you sell solutions you really want to make sure you are offering something others cannot. In normal free market terms this would mean doing better than your competitors. When you get as big as Oracle it means you have a vested interest in manipulating the market so it's not possible for anyone to provide a better solution than you. Having a full featured Java system available to the public does not match with Oracle's business model. Does that mean they won't do right by Java? No, but it does mean they have far fewer incentives to do so than most think. And no, I don't think Oracle really cares about the OSS army of free programmers or QA. Not now that they have bought almost all the stack pieces they need to keep shoveling crap-ware at big enterprise for the next 40-80 quarters.
Agreed, [Oracle has little to no vested interest in public Java](http://www.reddit.com/r/java/comments/17269n/a_close_look_at_how_oracle_installs_deceptive/c81m3e3)
As most of us develop for Java thats nice. However its important to note that many Java developers write code that is to run on an end user's machine. A negative experience with the consumer installer can translate into your app being removed along with the offending Java install. This is a serious consideration when determining which platform to develop with. 
Thanks for the input. A final question: Would recommend being a hardcore Java developer if you're just getting in the market? Or would it be more interesting to have other programming skills?
If you use [Ninite](http://ninite.com) to install Java you can avoid all this.
Installing through a curated walled garden would work just fine, which seems to be the direction Microsoft is headed in the long term. 
IMO for any developer def have the goal to know and understand multiple platforms. Don't let personal feelings dictate what stack you use more than cold analysis of what you need, what the platform can do etc. When looking at the company behind it you really just want to see a commitment to supporting the development community and ideally evidence of consistent support. That said, Java is a fine language to start with, there is plenty of work out there. However if it were me I would likely dig into the following platforms to pad out my skillset in the next decade: * JavaScript (with and without HTML4/5) * Scala * .NET * Ruby * Java IMO there is no sense in being a "hardcore" developer for any platform. Once you become comfortable with languages and tools you will find the difference between most "expert" or "senior" level programmers for a particular platform and you is API and tools knowledge. For any platform once you ramp up on API and tools (generally 2-4 weeks) the language itself is normally not so much of an issue. All that said, and I will likely get flamed for this, a good "hardcore" platform would be .NET these days. It appears to be in position to take a large chunk of Java systems in the future as they are retired. A person with solid .NET skills will be able to find employment in that stack for most if not all of their career. The market split is likely to be between .NET, Java and a 3rd contender like Scala however I don't see a clear 3rd other than Scala quite yet.
I think the Windows store has people mis-understanding the direction for Microsoft. Stand-alone application installs will not be removed from the windows platform for at least the next decade, likely longer and I would bet never. More than 70% of software developed for windows is not distributed to consumers but developed and used in businesses all over the world. The only way I would see this happening in windows would be if at the point of the lock down there is also available a suite of software that allows you to host your own repository (like nexus or nuget). Even then the huge pushback from most of their customer base would likely prevent it until enough time has passed to move away from legacy app requirements. That said, it is possible for MS to pull what apple did with OSX and just drop direct legacy support. Though traditionally this has not been their MO. 
I never install Java on Windows by using the graphical installer. Just open the installer, but don't proceed with the installation process. Instead search for the CAB/MSI file which is extracted somewhere inside the user's home directory, extract it to a destination of your choice or use the command line to install the MSI and cancel the installer. Done.
No, stand-alone application installs won't be removed, but if there is a trusted place to get applications then most people won't bother looking anywhere else to download it. I expect that downloading from outside the trusted repo will quickly become something that is considered a major no-no if you care about security much the same way it already has for non power Linux and/or android users. 
You can bundle java if the user does not have it.
Try .tar.gz package for Windows http://www.oracle.com/technetwork/java/javase/downloads/jre7-downloads-1880261.html
Without any specifics about what you are struggling with it's impossible to help. But as with any other subject, if you are struggling seek help. From your professors, fellow students, or try to find a tutor. There is always the internet for more specific questions like "java arrays explained" etc. Good luck.
Ok, that's new with Java 7. My last project, where I had to do it the way I spoke of, that was Java 6. Luckily, most the time, I use Linux.
You're right, I'm hardly being specific. In my introduction to programming class we covered mainly simple things such as how to define methods, what a boolean is, how to format loops and if statements. Basic stuff. The beginning of this intermediate class didn't go into any review or anything like that, the first HW assignment was really easy, just basic print lines, but the second assignment left me baffled with writing my own methods. Basically when I was trying to write my own methods I knew what I wanted to program to do, I just wasn't sure what words to write to make it do that. So I guess I'm really just looking for a way to catch myself up on the actual coding so I can complete my assignments, but I found in a post a book people recommended called "Head First java". So I think I'll give a look at that and see what I can accomplish.
Try watching [The New Boston](http://thenewboston.org/tutorials.php). It's live webcasts of some guy coding live in Java and explaining what he's doing. If you can follow what he is saying, maybe it might all just click.
As someone who's never used MAT, I'd be interested to hear the thoughts about this article from anyone who has experience using it - the article seems well written and comprehensive with what it covers, but as I've no knowledge of the tool I've no idea if what's it's saying is actually accurate etc.
In some cases that works, in others you want the user to be able to take the latest version of Java for security purposes, for example if your application maintains/listens on open ports. Also IMO, needing to bundle the runtime with your app demonstrates an abject failure in terms of a truly cross-platform portable system which is the core goal of Java.
I had a hard time figuring out why java.exe could be called from the command line without being in the PATH variable. Turns out the installer places some EXEs **inside** the Windows directory. EDIT: *windows\system32*, actually. Not even the installer can be trusted to not mess up with the OS.
i used the temporary array for my final answer. realized that AReallyGoodName had given me the answer ages ago
Given that it's for practice, I suggest you do both rotate and reverse. Also, look at JUnit for separating tests from implementation.
If Oracle earns money by providing new updates, doesn't that mean it is in their financial interest to ship as much insecure crap as possible? Edit: Wow so many downvotes on this? I know my formulation might have been harsh. But the point still stands. Making profit from the updates gives them a reason to ship premature crap. If you disagree, please comment and defend your logic.
http://docs.oracle.com/javase/tutorial/uiswing/
I've notice this story has gotten lots of news in the past two weeks. I guess I wasn't the only one to notice.
To be fair, installing the JDK has become *easier* under Oracle. Under Sun, you had to run an installer to agree to the EULA. Oracle lets you agree online, then just download plain zip. Simple. Done. OTOH, it got removed from ubuntu distributions, which is a pain.
Check out 'cave of programming' on YouTube
Maybe if you're independent in which case you represent 0.001 of the developers on the planet.
As a Java dev, Java on the desktop has been on this road for a very long time. It's just not worth it. I've uninstalled it on Windows, and don't allow install the plugin in Linux. Java on the server, and the JVM in general, have a long life ahead of them I suspect. Even longer if Jigsaw ever sees the light of day.
Jython, JRuby do phenomenal under the JVM. The JVM is a very good VM, with excellent garbage collection, JIT, resource management. Java on the desktop (in the form of applets) has been a dream that never solidified and a sore point for the platform in general. There are countless Java libraries which do almost everything you'd ever think of needing (and often times multiple libraries to do the same thing). In short, the JVM is awesome, JVM based languages bring a ton of new options, languages which run on the JVM are highly performant. Don't count the JVM out when Java on the desktop is the only thing dying.
I have been using Hibernate/JPA for years, but I didn't realize how nice it is to use it under Spring Data... I started using Spring Roo a few weeks back and the amount of boilerplate that you have to write is almost nil.
As a professional Java developer for just over a year now, one of the most important things you can do for yourself is get familiar with the [Javadocs.](http://docs.oracle.com/javase/6/docs/api/) Understand how to read them, and start referring to them often. Even try [writing your own Javadoc](http://www.oracle.com/technetwork/java/javase/documentation/index-jsp-135444.html) for a Java class that you created. These docs are invaluable and will help you get along in the learning phases quite a bit.
Big fan of the New Bostons stuff. Watched his Objective C videos and they were really good.
Those slezzy bastards (Oracle I mean)
I am definitely recommended Eclipselink as the JPA provider. IMHO it's much better then Hibernete. Currentlly I am working on mid size enterprise project. We started using Hibernate but after few months we made transition to eclipselink due problems with lazy loading in hibernate. Eclipselink handles this better in web enviroment (attaching session to lazy properties is annoying thing), also creating and using custom converters is easier.
What exactly is the problem you are struggling with? As someone has already mentioned, check out The New Boston and I also find StackOverflow to be a great help sometimes.
No big deal, just a ~100 MB deal.
I never heard of that before. Is that even allowed? Would not anti-virus-snakeoil-software going crazy about that?
JPA 2.1 will introduce fetch graphs for that, so per query you can specify how deep and to which width the graph should be fetched.
Exactly. No big deal. 
I love this guy! Considering the steep learning curve for everything Java EE his blog is much better than many high priced technical books.
Are you talking about starting a java program with different parameters? Normally you just do it like this: package com.mypackage; public class MyClass { public static void main(String[] arguments) { // do whatever } } Then, whenever you start your application, the command-line parameters will be passed in as the elements of the 'arguments' array. If you're bundling your application as a jar file, you would launch it like this: java -jar myjar.jar com.mypackage.MyClass parameter1 parameter2 parameter3
Well, I never heard of it either, but it sure did happen with JRE 1.6.0_u37 on Win7. I just did a test with a clean WinXP virtual machine. *java.exe* sure popped up inside *C:\Windows*. Rename your JRE folder and the try to run *java.exe* from anywhere, you'll get an error about *jvm.cfg*.
Can anybody recommend me an up-to-date (i.e. late 2012) and comprehensive reference to best-practices web development in Java? I'm so out of touch maintaining legacy apps that all I can see is a very fragmented landscape, container- and framework-wise.
This blog is good... almost TOO good. Oh fuck, run! It's a trap!
Are you asking if there is a way to take some string like "method1(target) { doSomethingTo("target1");}" and have it run that within the context of your application? So, for example, you could roll your own REPL in java? If yes, check out java.lang.Class. It has some neat methods like Class.forName( ).. If no, can you be more precise?
Maybe that's a backward compatibility thingy. It is possible, that Java did this since years and enterprises / old applications still rely on that. Is it the same executable as in $JAVA_HOME/bin?
Yes, go to Tools | Templates. Select the language in the tree, I guess Java, but all the templates are there in the dialog. Click Open in Editor. There you can change it. 
Uhmm I clicked 'Java class' and opened this in editor. I'm afraid that I may mess this one up so I would be grateful if you assist me. &lt;#assign licenseFirst = "/*"&gt; &lt;#assign licensePrefix = " * "&gt; &lt;#assign licenseLast = " */"&gt; &lt;#include "../Licenses/license-${project.license}.txt"&gt; &lt;#if package?? &amp;&amp; package != ""&gt; package ${package}; &lt;/#if&gt; /** * * @author ${user} */ public class ${name} { } 
It seems they are the same file, both have the same size. It's located inside *c:\windows\system32* actually. There's also a *java* dir inside *c:\windows*, but it's empty, only 2 subdirs but no files. *java.exe* *javacpl.cpl* *javaw.exe* *javaws.exe* They have the same size as the ones inside the JRE dir. I think the path to the JRE is stored somewhere on the registry, I can't find any clues to where the *java.exe* inside *system32* gets its information on where the JRE is installed.
You probably want to look at the reflection package 
You should make a copy of this text and store it somewhere safe. Once you have a backup, edit this one as you please until you get a satisfactory result. If you mess up, you can always revert back to original. To remove the items you asked for simply remove the License stuff &lt;#assign licenseFirst = "/*"&gt; &lt;#assign licensePrefix = " * "&gt; &lt;#assign licenseLast = " */"&gt; &lt;#include "../Licenses/license-${project.license}.txt"&gt; and /** * * @author ${user} */ As per the other stuff keep fishing around in those screens and you'll find it. Update: I see there are more java object templates, the one you are looking for is called **Java Main Class**
That is Javascript. This is /r/java ಠ_ಠ
Ooo. Sorry.
Now I know why our lecturers always force us to call it ECMAScript.
The [Java EE Tutorial](http://docs.oracle.com/javaee/6/tutorial/doc/p1.html) is a good place to start. Although, this is a reference to the *standard*, which is intended to represent a collection of best-practices. Java EE 6 is the latest (as of January 2013).
Aaanyways... The solution to your problem is simple: There is no String.replaceAll() in JavaScript. String.replace() also accepts regular expressions. Try this: st.replace(/ /g,"+") The g-flag will match **all** spaces. [[More info](http://www.w3schools.com/jsref/jsref_replace.asp)]
You can do this with ant by creating a [custom ant task](http://ant.apache.org/manual/develop.html). You can specify the method you want to run as a parameter to the task, and then you'll have to use [Reflection](http://docs.oracle.com/javase/6/docs/api/java/lang/Class.html#getMethod\(java.lang.String, java.lang.Class...\)) to find the method on the class and execute the method on the object.
To start with try [r/scala](http://reddit.com/r/scala) edit: fixed the link 
Good tip. Thanks. I guess I did not realize that there was another reddit group.
Thanks a lot :D
There's the upcoming Corsera course and the book by the language's creator, Martin Odersky. I'm making my way through the book and it's been a positive experience.
Thanks! I will check them out.
The Coursera course finished months ago...
I believe it's being offered again in March. 
You put a lot of work into making a link to /r/scala, and ended up with a broken link. If you just type the name of the subreddit, starting with the first slash, you get a link for free.
Yup, [starting March 25](https://www.coursera.org/course/progfun).
How about a web server? They're trivial to implement in java. You could multithread it to support multiple clients.
Try to make a simple IRC-type client/server. That will need multithreading(at least on the server), and networking (TCP or UDP). Next up, install tomcat and make a web service to manage and/or monitor your chat service. Finally, sell the chat logs to the CIA and retire on an island somewhere in the South Pacific.
Man, I wish I could get into Scala but every time I think about it the syntax creeps me out. I've waited a few years so maybe it's deprecated and stabilized a bit but what I found before is that the language is so flexible that learning any 3rd party Scala is a huge pain in the ass. What I mean is that since you can do almost anything syntax-wise, every third party library or framework comes up with their own DSL so you're learning not only Scala, but someone else's take on it. I keep crawling back to Groovy and Closure. Groovy because I'm old and was around when it was the new-hotness so learned it well and Closure because I like the fact that it's the opposite of Scala; very few rules and syntax. With Closure all you're learning with a new framework are it's functions. But still, I know some amazing stuff is being done over there...just way too complicated for my limited experimental time.
It isn't javascript vs java. These are two different languages.
you could redirect system output to the JTextPane, then you can use the standard System.out.println http://www.coderanch.com/t/555193//java/Redirect-System-println-JTextArea-JTextPane
Sometimes it helps splitting things. You could for example propagate exception handling to be taken care of elsewhere and use the Runnable Interface: public class Test implements Runnable { public void run() { byte buf[] = new byte[256]; [...] } public static void main(String[] args) { try { new Thread(new Test()).run(); } catch (Exception e) { // do stuff } } } Let's you get rid of all nested try catch blocks and the redundant run method. Hope this helps!
You're assuming, of course, that you're doing indentation the "right way". Note the quotes. There is no single right way. However, if the massive amount of indentation annoys you, try splitting things into classes and functions like someone else said.
It doesn't look bad to me but that's just an opinion. As others said you could split it up into method calls.
Or rather than tabbing everything, just indent with 2 spaces. It would cut the amount of indent by half and avoid the horrors of pasting it into word documents (if a student).
or just adjust your editor to display tabs as 2 spaces...
Which is great until you open it up in another editor.
Yeah, I have a very similar problem. I think my plan is to use Scala but not use any third party Scala libraries or frameworks (to use on Java ones). And with that to only use the beginner level Scala (level A1 here http://www.scala-lang.org/node/8610), until I am really wanting to go to the next level.
Your other editor is bad and you should feel bad.
My company went to two spaces for the opposite reason; the asylum is being run by lunatics. Refactoring is hard, let's go shopping.
Never said I was the one using it. Not my fault my lecturers still use a decade old version of Borland. And require source code of projects in print and in a .doc file. God damn academics. 
Yes, exactly this! This will make the code more readable as well. Sort of a [self-fulfilling prophecy](http://tvtropes.org/pmwiki/pmwiki.php/Main/SelfFulfillingProphecy). (I'm feeling particularly evil so I linked to TvTropes)
You won't feel silly when you have to go back to that code six months later to fix a bug and can't remember how it works. Indentation is for readability only (in Java, at least. Python.... that's another story). You don't have to use indentation, of course, but you'll be glad you did. Frankly, I don't think it's silly at all and your example listed above looks spot on.
I may be wrong, but isn't this impossible? You can't throw exceptions from a Runnable. Edit: Got home and double checked. I am right, you cannot throw exceptions from a Runnable because there's no guarantee that the method starting the thread and catching the exception will still be alive when its needed. Furthermore, its very sad to see that I'm not only the only one to mention this, but that this post continues to get upvoted for suggesting code that will never compile. I'm fairly new to /r/java, but if this is representative of the knowledgebase of this community then I doubt I should bother sticking around long enough to ever not be new. As it stands, it's looking like the level of expertise here is equivalent to what you'd expect from people directed here from the inside cover of A Complete Dummies Guide to Java.
You're right, but there may be an exception thrown in the Thread constructor.
You're correct, Runnable can't throw exceptions. He'd have to catch the IOException inside run() but implementing Runnable will still let him clear up some clutter.
As far as I know, any uncaught exception within Thread is passed to the Thread DefaultUncaughtExceptionHandler. You wouldn't need to try or catch to get it. I'm not sure however if this is still the case when the exception originates from the constructor. Furthermore, I'm having trouble imagining what kind of exception could be thrown from within a Thread constructor. The only thing I can imagine would be unchecked exceptions, from which you would be unlikely to be able to recover from anyway.
How so? If he can't throw the exception from Runnable and deal with it elsewhere, all the code currently in run() would have to remain there. I happen to agree that a Runnable is a better choice than Thread, but only because you should only subclass Thread when you want to alter its behaviour, not merely make use of it. I think the best solution however is a Calleable and submitting the task to a ExecutorService. He'll be able to get any Exceptions from the Future returned by Executor.submit().
You're right. You can use a listener pattern or something, but that's probably a lot more work than just dealing with some exception clutter. He'd save two tabs using Runnable. Which is still better than the way he originally did it. public void run() { byte buf[] = new byte[256]; .... vs public void run() { new Thread() { public void run() { byte buf[] = new byte[256]; ....
So much wrong within a single article: &gt;if number &gt;=0 means number is positive This one hopefully requires no explanation. The author through entire article seems to not know what “positive” means. &gt; Convert any number into String and get first character, if its equals to "-" then its negative number otherwise its positive one. Though this method will not work for float and double, if number is represented in exponential form. I'll just ignore the fact that converting a number to string to check it's sign is a waste of time, but it would detect negative floats and doubles just fine. `Float.MIN_VALUE` and `Double.MIN_VALUE` are positive numbers. Or in the comments: &gt;You can also compare the number with Math.abs(number) It won't work with negative numbers `Long.MIN_VALUE` and `Integer.MIN_VALUE`. If anyone is still wondering how to solve this “problem”, here's the solution that works for integers, longs, shorts, and chars: if(number &gt; 0) return "positive"; else if (number &lt; 0) return "negative"; else return "zero"; And one for floats and doubles: if(number &gt; 0) return "positive"; else if (number &lt; 0) return "negative"; else if(number == 0) return "zero"; else return "not a number"; 
My general rule on functions is I don't care how long they are as long as it is obvious how one could refactor it. In this case the refactoring is straightforward: private void doStuff(byte [] buf) throws IOException { synchronized(is) { try { int read = is.read(buf); if(read &gt; 0) { byte out[] = new byte[read]; System.arraycopy(buf, 0, out, 0, read); receiverCallBack.receive(out); } } catch (IOException e) { e.printStackTrace(); disconnect(); // might throw, let it. } } } public void run() { new Thread() { public void run() { try { byte buf[] = new byte[256]; while(true) { doStuff(buf); } } catch (Throwable t) { // Log anything - this is the last chance to get a stack trace t.printStackTrace(); } } }.start(); } The original is good enough though so I wouldn't really change anything unless I was bored.
So you are saying the article is a bunch of complex non-solutions to a non-problem?
tldr; Use gradle
I started using single space indentation over 2 decades ago when I was still using C. Each to there own ultimately.
Who the fuck uses borland? That's just bizarre. *shudder* I just had a flashback to 1999 when I was called in as a mainetanance monkey to clusterfuck of a Borland C++ Builder project. My god! The vision of about 200 tables in the non-scrolling database tables view haunts me. That was my first professional subcontracting project. I thought everything would suck that hard. Forever. Well, nowadays I can keep my composure, no matter what kind of weird heap of crap I am presented with: "I know. Don't worry. I have seen worse. We will get this shit sorted out." Edit: My boss asked me once in that project: "are we Y2K compliant?" I wanted to answer that "apocalypse is the least of our worries with this application". I think I just sheepisly smiled and said "I try to make sure we are". (We were. Thou I think there were some integer overflows with POSIX time, but I decided that would not be my problem to solve)
In regards to Python, you're doing something wrong: &gt; Flat is better than nested. Zen of Python ([PEP 20](http://www.python.org/dev/peps/pep-0020/))
I don't even see the indentations for the class and methods anymore, Just the loops and conditions.
Use append() instead of setText().
I agree, but I'm sure some Ruby kid is going to use this thread as evidence that Java sucks. See, Java sucks because of indentation, blah blah blah.
It's true that joins can result in a gazillion sub-queries. At that point I devolve back into named queries. While that removes DB agnosticism, it also removes all the jdbc boilerplate, so there is still a net gain.
He sums up my experience with my adventure that started with Ant over 10 years ago, that brought me to Maven and now led me to Gradle. Gradle is new. It has rough edges. And it's still evolving rapidly. But it feels much more natural than Maven or Ant. It's definitely worth to invest time into it (until the next shiny build thingy arrives, that is able to read our minds ... Google?).
http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/io/ByteStreams.html#readBytes(com.google.common.io.InputSupplier, com.google.common.io.ByteProcessor) Use Guava for a much simpler implementation.
Yes, because I always want to have like 20 nevöhööd libs for trivial things contaminating my pom.xml, at all times.
It doesn't matter what the Ruby-kids think. Even less on rails. 
So "Academics" is a fair reason to mislead students? Yes, very fucking useful education you are buying then... So I assume your prof uses Borland TurboC compiler from -89. Yes, I am sure he is competent in evaluating the proficiency of our future coders. How about MinGW GCC with whatever compat flags he requires? Who on earth programs any real C on windows these days anyway? GCC and POSIX should be the standard on any *nix and embedded system these days. You insecurity about her intentions should be a red flag. Go read some rants from Linus Torvalds about real world and programming. Forget magical thinking. Read manuals. Buy books from this millenia. Learn how processors work and why C is interpreted like it is. Learn some assembler. Tell your prof real world told him "fuck you, you clueless cunt". PS. There's no "ins and outs" of C. Everything about the language can be explained in a book of less than 100 pages. With examples. Libc, maybe not. But if your prof cannot comprehend how to use different compilers, I have no confidence of him understanding libc. PPS. iOS and Android are not really operating systems, so your operating system prof shouldn't be talking about that layer anyway. Android runs on Linux and iOS runs on a proprietary variation of FreeBSD. BSD and Linux are operating systems. iOS and Anrdoid are platforms.
Do you by any chance go to OU?
I've been playing around with this for the past couple of days and really liking it.
I have to elaborate on the "magical thinking". I have noticed, that whenever programmers are faced with a problem that doesn't seem logical to their observations, they tend to just fuck off to another dimension where all libraries and the operating system are some magical entity that do weird things out of their control. So the problem must be there. When you notice that you are no longer trying to solve a problem in a coherent, rational way; systematically and analytically: STOP. Have a break. Have a coffee, smoke a cigarette/spliff. Drink a beer. Snort a line of coke. Whatever. Come back to the problem, when you have regained your composure and you are ready to approach the problems systematically. Magical thinking and random poking very rarely give efficient results. Stop and think. If you're knowledge is not sufficient: google or read a book.
Still, never heard. I'll keep it in mind if I need more than one function from them. Thanks for the tip!
Was aware of Android being on top of Linux, wasn't aware of iOS being BSD. To be honest a lot of personal crap came up for me this year so I've just been going through the motions, completing course material and not much else. I was considering dropping out due to depression (missed a few weeks) and I haven't been in a 'working mood' for over a year. I've already spent a year on assembly and 2 years on Java. Dunno how I managed to get to third year. We only started C in September and the exam is in March. You're right, we're all outdated theory and no real world application, as far as I've seen in this course. Strange that so many companies approach this place for internships, etc. Might as well start fresh this weekend.
The learning doesn't end at employment. It merely starts. Get a motherfucking headstart! Get the fire burning! Can you see a problem around you that could be solved with any of the fields you have learned yet? Data mining? Algorithms? Basic chemistry? Fix it. Today! You will never have the multi-discipline resources an university provides you with today. Ever again! ...No? Do you have the intuition about anything, that there must be a better way to solve it with technology? Research it. Let your curiosity consume you. Instead of killing your time, let your passion kill you! Sleepless nights, obsessing about problem, which' solution is just around the corner, if _you_could_just_figure_out_this_small_thing... 
Yeah. Course start date is February 5th also.
You are correct, Runnable cannot throw exceptions, but Callable can, and you can execute these using the java.util.concurrent Executors framework. There are utility methods from creating a Callable from a Runnable, and the Callable interface is generic so they are also slightly more useful. People ought to be using this instead of using java.lang.Thread unless they have a specific need to do so. That is my opinion at least.
Your comment was helpful and interesting right up to the point where you decided to be a condescending cunt. Learn to quit while you're ahead, kid, because you also get an F on your debugging skills. &gt; suggesting code that will never compile First, the code will compile fine. You can toss a try/catch around pretty much any arbitrary code even if it could never possibly throw an exception. Second, the code as written actually WILL catch any exception thrown by the Test.run() method. The line: new Thread(new Test()).run() Doesn't start a new JVM thread. The [Thread.run()](http://docs.oracle.com/javase/7/docs/api/java/lang/Thread.html) method dispatches directly to Test.run() it doesn't start a new JVM thread. Therefore any exceptions thrown in Test.run() will be caught. You need to use [Thread.start()](http://docs.oracle.com/javase/7/docs/api/java/lang/Thread.html) to have the Test instance run on a separate thread. This is all academic though. An experienced Java developer would use an ExecutorService in java.util.concurrent to make thread handling more robust and easy.
Let them eat tabs! I've been beaten up a lot over tabs and function length, but you give me hope. If your real code starts halfway horizontally through your editor, you're probably doing something wrong.
Not sure if... Upvote good sir! Made me laugh :)
I find my code looks better when I indent only 3 spaces instead of a whole tab.
There, there, it's alright. We understand.
Amazing - thanks so much! That's exactly where the problem was :D Sad I can only give you one upvote, but I clicked it a number of times out of respect and gratitude :)
Java 5 had the biggest changes to the language. None of the language changes in java 6/7 where world moving - they mostly added new classes to the standard library. Java 6 language change (that I am aware of) * Override Annotation applies to interfaces as well Java 7 language changes **Binary Literals (10b == 2)** **Strings in switch Statements** originally: if(value.equals("test")) ... else if(value.equals("test2")) ... now: switch(value){ case "test": ... break; case "test2":... break; } **The try-with-resources Statement**: will close opened streams after the try block originally: InputStream input = ...; try{ ... }finally{ input.close(); } now: try(InputStream input=...) { ... } **Catching and Rethrowing Multiple Exception Types** originally: catch(IOException ex){ ... throw ex; }catch(ArrayIndexOutOfBoundsException ex){ ...throw ex; } now: catch(IOException | ArrayIndexOutOfBoundsException ex){ ... } **Underscores in Numeric Literals** 1_000 == 1000 == 1_0_00 **Type Inference for Generic Instance Creation** ArrayList&lt;Integer&gt; listOfNumbers = new ArrayList&lt;Integer&gt;(); now: ArrayList&lt;Integer&gt; litOfNumbers = new ArrayList&lt;&gt;(); Most of these only reduce verbosity/improve readability and all are optional - you can still write java 5 code.
Congrats to the entire team for this release. Fantastic work, guys. May the code be with you.
Stay away from Tapestry. Howard Lewis Ship doesn't know what the hell he is doing.
As a professional software developer, I can confirm I just did this to figure out how to parse a string to a long... I can't even remember how to do simple stuff like this. It doesn't matter if you remember the nitty gritty, it just matters if you can remember the abstractness of what you can do and what you can not do.
Can you comment on the eclipse integration? Is it any good? Is gradle itself stable enough?
Honestly this is the hardest part about beginning programming. You understand the idea's and how the logic flows, you just don't have enough experience programming to understand what needs to happen line by line. If you give specifics we can easily assist you.
Yeah exactly, I've consulted my teacher who has agreed that everything we've been doing in class as far as assignments have been way out of reach for where the intro course put us. Also the intro programming course here only gives broad generalizations on just about every topic in our book (that's used for intermediate and advanced), so instead of us reviewing the material in class in my intermediate programming, I'm basically having to self teach and learn the specifics I didn't know. I feel better about programming now than when I made this post because of the amount of time I've put on assignments (mainly googling what shit does) but I'm no where near at an "intermediate" level. Hopefully it comes with practice.
You can do user-managed transactions with JPA (also called Bean Managed Transactions). Google that and you'll get tons of examples.
Unfortunately not. I switched to IntelliJ just before I started using Gradle. But I expect it at least as sufficient as it is for IntelliJ in terms of [project config generation](http://www.gradle.org/docs/current/userguide/eclipse_plugin.html). If you mean something like the m2e-plugins for Eclipse, there is the [Spring Tool Suite (STS)](http://static.springsource.org/sts/docs/latest/reference/html/gradle/) from SpringSource which provides Gradle integration for eclipse. I expect this integration far better than that of IntelliJ (IDEA-Gradle). If the standard IDE plugin it is not sufficient enough, there is always the XML (or at least file) processing option. That's what Neal meant with 'context': in Gradle, you would just program your customization using the same DSL (which is Groovy) that you use for the rest of your build configuration. In Maven, aside from using existing plugins, you would need to write your own plugin and suffer from the contextual gap between the DSL (XML or JSON), Java to write or extend the plugin, the plugin's lifecycle management (coding, testing, deploying, documenting, etc) and the knowledge of the Maven internals. That alone makes Gradle the better choice for me. But I'd like to hear about the Eclipse integration capabilities, too. That's a question, I require the answer to as well, because of a software development strategy project that started at my company, recently.
Thanks! I wasn't aware this was groovy (it's been years since I last looked at it) - so that's good. I guess I'll have to investigate...
javacpl.cpl is the control panel. The other executionables are doing a lookup for JAVA_HOME if they find themselves being located inside / run from the Windows directory (or system32). Pretty old stuff and really a convenience thing for older applications (and the Internet Explorer). Nearly forgot about this.
Don't worry, every now and then I impress myself with the guess. Probably the reason I wear a cape though ;)
Very nice! As a long time Java dev, Groovy is my favorite language. All the nice dynamic features of Ruby or Python with a Java feel to it. Monkey-patching on one hand, @CompileStatic on the other. Best of both worlds.
Any performance improvements thanks to the use of invoke dynamic?
Up until very recently, I was skeptical about the utility of ORM frameworks. I think Hibernate is basically an out-of-control feature monster that gets in the damn way. HQL? Really? Hey, why not just do a 4GL while we're at it? The only one that I have used that I think is worth using is [Ebean](http://www.avaje.org/), which is the default persistence framework for the Play! framework. Here's why I like it: * Uses (mostly) plain JPA annotations, which is fine. * Sessionless * They didn't invent another flavor of SQL-you can just use SQL (why the others insist on re-inventing SQL makes zero sense to me) So, if I have to use one, I'll pick that one.
Man I'm just messing up all over the place. I copied the one to pastebin that I was currently working on. If you uncomment everything in the readint() method and comment everything in the main method it will compile. Oops regarding the bases. Nice catch.
Here is some compilable code: http://pastebin.com/iUksMf0R
In that case this is what your instructor is talking about. Don't use System.in and all of the related method, use the args array. Looks like you are already working on the conversion so good luck :)
Yeah. I get what you're saying I just don't know how to do it. =[ It's been forever since I've used Java and I have to do this for an assembly language course, haha.
Since you are using eclipse it should be providing you with enough hints. Can't access non static stuff from a static context (main belongs to a class whilst you variables belonged to an object). You'll need to parse the String argument to convert them to integers. Of course exceptions may be throw so you'll have to deal with those.
If you look at the main method public static void main (String[] args) args is an array of strings that contains whatever it is you write in the terminal when starting a compiled java program from there. For instance if you run a program called Main.class from the terminal like this java Main word1 word2 args will then be a String array that consists of the strings "word1" and "word2" to access these strings you simply write args[0] for the first and so on. If you want to convert those to ints you'd use Integer.parseNextInt(args[0]) and so on.
So basically, I should comment out everything in teh readint method and then put this in the main method: String number = args[0]; int initialbase = Integer.parseNextInt(args[1]); int targetBase = Integer-parseNextInt(args[2]); ConvertBases b = new ConvertBases(); b.readInt(); System.out.println("" + output); right?
Reading three commands through CMD is achieved by doing this - http://pastebin.com/ps5JhkXe
So then the main method should be like this? public static void main(String[] args) { int number = Integer.parseInt(args[0]); int initialbase = Integer.parseInt(args[1]); int finalbase = Integer.parseInt(args[2]); ConvertBases b = new ConvertBases(); b.readInt(); System.out.println("" + answer);
What are you meant to be doing with the input numbers? e: I see what it's doing. I'll try and conjure up something.
I guess you mean *Integer.parseInt(..)*? Integer doesn't have a *parseNextInt* method. Also, instead of calling *b.readInt()* (that seems to read from the console, which you don't need to do any more), shouldn't you call *convertToBase(number, initialBase, targetBase)*?
Would this be right then? I'm still getting errors with this as the main. public static void main(String[] args) { int number = Integer.parseInt(args[0]); int initialbase = Integer.parseInt(args[1]); int finalbase = Integer.parseInt(args[2]); ConvertBases b = new ConvertBases(); b.convertToBase(s, base, convertbase); System.out.println("" + answer); 
Why wouldn't you use a linked list and an iterator then? Is it important enough to access big-data elements by numeric key? Why not use a database then? Oh, is this for graphics and games? That would make sense, because those are getting pretty complex, but why would you use Java for that?
There are few use cases I can think of where I would need an array that big and am not doing something wrong. And im not sure that that makes the other use cases right...
That is an interesting concept. However, if you are using more than Integer.MAX_VALUE elements in an array (which I'm guessing is more common in scientific computing [I'm not sure, as I am a math person, and not a computer programmer of any high quality]), wouldn't it just be more efficient to use C or possibly C++ due to their higher speed (please don't stone me, I know that Java *can* run very quickly, but C and C++ allow for using assembly code directly) and built-in support of this type of array (that is, you don't have to worry about malloc() and other functions like it becoming inaccessible in future versions of the language due to their built-in support)?
I've always preferred the "early escape return" approach, but didn't know there was a name for it. Reading a method in which the code is entirely wrapped in multiple nested if blocks makes me want to shed the blood of a white kitten in the name of our Glorious Lord Satan.
Apparently being right gets you downvoted around here.
It was integrated into JDK8 just the other day: [8003680: JSR 310 Date/Time API](http://hg.openjdk.java.net/jdk8/tl/rev/8209c91b751d)
The important part about using this technique is to clearly communicate that you're using it. It's best specified in a coding standards doc, for example. The reason is that it can be a little confusing if not consistently used and the reader doesn't understand the context. Also, it's generally a good idea to not return anywhere else but the natural end of the method. (If you find a situation where you still want multiple return points after early escapes, no! Do another round of design to further decompose!)
You're right, which is why I pointed out that an array would only offer the added benefit of selecting an element by integer position, but what does that offer? You could get the 354673115645276th item of an array. That doesn't hit me as very useful.
Yeah, well. Maybe my swearing bothered people. Anyway, I thought it was a fun post, shows there are many ways to skin the same cat. 
It's only slower if you're doing random seeks. If you're iterating over the collection, it's of comparable speed. (Note this comment applies to linked list, as in the abstract data type. I didn't check how Sun/Oracle specifically implemented their LinkedList class).
The only use case I see for this is when the Hotspot jvm can utilize vectorization for processor specific SIMD like SSE or 3DNow which is going to be easier with sequential data in memory. For the most part this would be an optimization step that requires verification that Hotspot is actually doing this, the benefits of which I have my doubts would save much headache over just doing it via JNI if you know C++, which he apparently does. Otherwise a sparse array fills the gap if you truly need something like this.
Are you acually doing anything wth number, initialbase and finalbase? As far as I can tell they're just initialized and never used. It seems pretty likely they should be passed to convertToBase(). Similiarly, do you have the arguments s, base and convertbase declared and initialized somewhere else? If not, that should give an instant compile error. Oh, and sorry about misremembering the method name for Integer.parseInt(). Hopefully that didn't add to your confusion.
According to my guesstimate, each entry in a LinkedList is about 32 bytes. 16 bytes for the "Entry" object pr. integer, and 16 bytes for each Integer object. It's even worse on a 64bit architecture. It would probably also make the GC very sad. &gt; but why would you use Java for that? Why not? :) The biggest annoyances IMO are reducing object creation and mangling objects to/from data buffers. Some of that code might not be too pretty, but if you saw the source of C++ engines, I doubt you would call them pretty either.
Oh, sorry. I thought you were poking gently fun at the over engineerig that is prevalent in JavaEE projects. Yes, all your suggestions and advice is actually good advice in general, but I just felt that you must be sarcastic here, because what my thing does is: wait on a inpustream untill I get data, send a copy of the data to a callback, return when stream closes or any other exception happens. Your final solution seemed so overblown for this purpose, it just made me crack up. Sorry. On the other hand, I did read your post carefully and I made mental notes of general architectural advice I have forgotten. I've been writing C and Qt-C++ lately and have forgotten many of the standard things in Java.
Streaming it may not be possible because it would be so much slower. A lot of big data applications might require looping over the data multiple times. For an example of practical application: the company I work for is considering designing a 0.6 gigapixel CMOS.
Except that's not how arrays work. They use address arithmetic so there is only one reference to the array, not 2 billion. And while I agree that that is a lot of data to put into ram, it isn't far fetched to see why we would want that much data in ram. Memory is cheap and getting cheaper, I have 16GB in my iMac and would have 32 if it supported it.
&gt; why would you use Java for that? I don't know, may we could [ask this guy?](http://www.celebritynetworth.com/richest-businessmen/richest-designers/markus-persson-aka-notch-net-worth/)
`String s4 = new String(“Ravi”);` This is not a bad way, it is actually wrong. What you are actually doing is calling `new String(String);` The entire purpose of that constructor is to create a new object with the same data in it.
Seriously? How many nanoseconds of my life have been wasted 
If you really need that much data (and have the necessary RAM), you could use a list of chunks where the chunks themselves are arrays of a fixed size. If you use an ArrayList for the list, access is still O(1). 
Of you plan to have relations in to your relational database.... Please do a favor to yourself and don't use JPA.
HASHING.
Somehow, I doubt minecraft utilizes 16+ gigs of space in arrays, no matter how badly optimized we make it out to be.
Thanks!
It's pretty cool, the icon is awesome. 
Question: What is it? I have a rule that I don't download anything unless I know what it is, and this link points directly to the download as opposed to information. **EDIT:** After /u/TheBros35 told me what the app was, I downloaded it and ran it. It's pretty good. Well done!
It's a sweet calculator.
Nice job. For anyone who wants to download and run it- java -jar Math.jar I decompiled it, it's harmless. Don't forget to keep your users happy by handling your exceptions (division by 0) :-) 
You don't need to java jar it, if you are in Windows you should just double click it, or in Linux if you are using the openjdk you can just open it with that after marking it as executable. 
[Updated](http://dl.dropbox.com/u/103880997/MathV2.jar)
[I reverse engineered his program and made it my own](https://www.dropbox.com/s/7vhc9eohahaa99j/AwesomeCalculator.jar)
This app is [pro](http://www.funfluster.com/images/images-funny-pro-9.jpg)
Is that just because of the problems with collections / associations and such? I'm fairly confident we can code around and monitor for N+1 select problems and the like. Is there anything else to be wary of with JPA? So far it's been pretty smooth sailing...
Heh
well, if some nameless stranger on reddit says it's OK, then I guess I'll suspend all sense of rationality and run it.
&gt; Except that's not how arrays work. They use address arithmetic so there is only one reference to the array, not 2 billion. If you have 2 billion objects, you need a 32 or 64 bit reference to each of these objects. That's what I'm calling the storage space required by the array: The values stored in the array are the reference to the objects. In addition to that, you need space to store the contents of the objects themselves. &gt; Memory is cheap and getting cheaper, I have 16GB in my iMac and would have 32 if it supported it. So basically you're saying that today, the limit is around 16 or 32GB. I'm saying to store 2 billion elements, you're looking at 32GB **minimum** (that's like if you're storing 2 billion objects that contain just a single integer field), and closer to 100GB if you're storing objects that contain actually useful data. In other words, with our current memory limitations, we can't do very use things with 2 billion elements, unless we stream it from storage.
Reddit account 13 days old. No description other than 'sweet' in the title. Links directly to the compiled executable. Then you get a people with established accounts that say they tried it/decompiled it and there is nothing nefarious about it but they neglect to provide an md5 or any other validation that the file they looked at hasn't since been changed (which in this case it has) such that the file everyone else downloads later doesn't have a virus. This is the exactly how social engineering works to get people to download viruses. Not saying this is the case, but you must be aware everything that has transpired so far in this thread proves nothing that the download tomorrow coming from this URL isn't a virus.
This makes me happy in ways I should probably tell a psychiatrist about...
For all those who are skeptical of this, download [JD GUI](http://java.decompiler.free.fr/) (a java decompiler (it's trustworthy, and written in C++, so no java related insecurity)). You can then just download this jar and open it with JD GUI to view the source **before** you open it.
[Version 3.0 available here](https://github.com/mitchbutter1210/math) It now accepts numbers from -9 trillion to +9 trillion. Thanks for the input
You do have a valid point, but hosting it that way was the easiest way for other people to get it. We just started using GitHub, and just set up a repo a minute ago. Dropbox is just so much easier. GitHub is a nightmare.
If you think I'm trying to implant a virus, you can read through the source [here](https://github.com/mitchbutter1210/math) and it's also compressed into the jar.
It's a reasonable assumption, might as well use the right tools for the right job. However real life is never that straight forward. You'll have to deal with weird and dumb limitation at times. This is obviously a work around to solve a problem and it is clearly mentioned that this is not exactly supported. Personally, I use Java to solve Project Euler's problems, as it is easily accessible to me from pretty much anywhere I am. I do recall some problems that required more than a normal sized array and I could have definitely used that solution.
When people are talking about multi-gigabyte arrays, they aren't talking about objects. I've never heard of an array this big being used unless it was simply numbers (image data, scientific data, etc.).
&gt; I've never heard of an array this big being used unless it was simply numbers (image data, scientific data, etc.). Well, think of what Google does. There's more than 2 billion URLs out there. Think of what Twitter does. There's more than 2 billion tweets.
This sounds rather like you need each 'function' to be a separately-launchable java program. Any shell offers sufficient scripting to launch each function-wrapped-in-a-launchable multiple times, with variable parameters. This fits your stated requirements. If you state your requirements in greater detail, or more requirements, the answer may vary.
This is an infinite loop: while(n &lt;= 40); { /** whatever **/ } By putting the semicolon after while statement (and before the opening bracket), you have terminated the while statement. No code in the following block is executed. In which case `n` is always less than 40, and you have an infinite loop.
On a large server, cumulatively maybe. I've seen an instance running with over 70,000 loaded chunks, due to a "small" bug with chunks not being unloaded properly. Of course, it doesn't store these all in one place.
An interesting idea to try is implementing smalltalk's become in java with this. edit: I have done something terrible. https://gist.github.com/4649492
Read the replies. It's not random enough.
This is neat, low power, a good way to get into clustering, etc...but is rather wasteful. A single modern processor will run laps around this setup, and probably cost the same. And take up 1/6th the space.
http://en.wikipedia.org/wiki/Multiply-with-carry This is super-fast, and "good enough" for non-crypto applications. 
For anyone who wants the latest version (5.0) of this, it is located [here](https://github.com/mitchbutter1210/math). The latest source is in the repository also.
Yep - from intuitive maths you're twice as likely to get a number in the range (0, 0.5) than you are to get one in the range [0.5, 1). Edit: On a re-read of what their algorithm's doing, maybe not twice as likely - but the generator's far too dependent on its initial state to give true randomness.
Yeah, that's my point: Don't use giant arrays for big data. They're streamed off of storage via map reduce.
It's still in the TL (tools and libraries) repository. It's still being integrated into the JDK8 master. There are about half a dozen team sub-repos that are integrated into the JDK8 master repo on a weekly or bi-weekly basis.
linked: http://isis.apache.org/ http://minuteproject.wikispaces.com/ 
thank you for the update!
What happens when you run this code? Couple of comments on it though. 1. Why are you looping to 'less than 1 less than height/width'? Shouldn't you just loop to 'less than height/width'? Imagine a simple 4px by 4px image, height/width = 4, and the indexes go from 0 to 3. Your loops would only go from 0 to 'less than (4-1)', which is the same as 0 to 2. That means you'll be missing the last row and column. 2. I think you're also one off when it comes to reassigning the 'pixel' Color you retrieve. Again, imagine the 4x4 image. First loop, you retrieve the color at 0,0 and then assign it to 0, 4. That would be out of bounds of your original image size, but I guess that's why you add in the extra +1s when initializing? 3. Why are you shifting the x-value by two inside of the else? Also, when you say mirror over y = height/2, do you basically mean flip the image, or should the top remain the same and the bottom be the flip? e.g. a composite of the original mixed with the flipped image? 
I haven't tested the code but I think he meant the top half should remain as is but the bottom half be a mirror of the top. I think the for loops should be exchanged. 
Yep, that's the conclusion I came after writing most of my comment, which is why he only changes the color if y&gt;=(height/2). I don't think the for loops are the problem (I guess there might be a tiny amount of optimization depending on how Picture handles retrieving pixel values, but that's not important in this situation).
How often is random number generation the performance bottleneck? Assuming that at some point you do disk reads, any performance boosts you get from optimizing your random number generators will be pretty negligible. 
I am also a beginner. [This tutorial](http://sourceforge.net/projects/eclipsetutorial/files/1.%20Total%20Beginners/Version%201.0/) has been incredibly useful for me. It's (conveniently or annoyingly) split into 16 short videos of around 5 to 15 minutes each. You'll want to download eclipse classic from [here](http://www.eclipse.org/downloads/) and follow along with him while building your own code. This will at least get you started.
If my assumptions about your code is correct, this should fix you up for (int x = 0; x &lt; width; x++) { for (int y = 0; y &lt; height; y++) { if (y &lt; height / 2) { //nothing to be done } else { int mid = height / 2; int over = y - mid; Color c = pic.get(x, mid - over); pic.set(x, y, new Color(c.getRed(), c.getGreen(), c.getBlue())); } } }
Damn... I was willing to help you out a lot until you said you have a mac =/ good luck man. I'm not even sure what development environment to use for macs
Yes, this is a generally stupid idea... I'd rather get a nice AMD processor to play with MPI.
In fact it's sometimes the bottleneck but only when you really need a good distribution (Monte Carlo algorithms for example). Which makes this solution useless anyways...
Yes, it saves you lot of time and code to maintain and you don't have to do too much to get it working.
&gt; The solution is for Microsoft to step up and make it impossible for installers to tack on shit by default. That would be rather surprising, considering that 90% of all windows PCs come bundled with loads of hard to remove crap ware. 