&gt; The main issue is, why is the recipe not included in the bundle? I absolutely agree. I made that point when it was first announced, but to no avail. Bundling the recipe with the code has tangible benefits - for one, you never need to have a discrepancy between versions on your source repo and the recipe repo. On the other hand, every benefit I've seen can be provided just as easily without centralising those recipes. The short aliases are an obvious example - just host a simple lookup file, http://flex.symfony.com/aliases.json or similar. Hell you can even support both - look in the source repo first, fall back to a central repo (so that you can add recipes for third party code). It wouldn't even need any extra lookups, just a bit of extra code. All that said, I absolutely disagree that Flex is a mistake. It's greatly improved my DX; I love the direction that Symfony is heading in, I just hate that they're clearly pushing us towards a walled garden.
Its eminently configurable... it can be however you like it. Try phpstorm again. 
PHP 7 added an $options parameter to session_start. With it, and some refactoring, you can use 'read_and_close' ``` // If we know we don't need to change anything in the session, we can just read and close rightaway to avoid locking the session session_start(['read_and_close' =&gt; true]); ``` More info under options: http://php.net/manual/en/function.session-start.php 
I suggest adding the material design UI. It's still busier than VS code, but the functionality more than makes up for it.
Splitting utf-8 strings with non-mb functions isn't safe in all cases afaik. You could split it right in the middle of a multi-byte sequence. Otherwise pretty dead on.
A blog post containing a single tweet for a middleware containing a single line of code ... And this only works if the rest of your stack allows it (e.g NGINX). 
But I mean, that's kind of the point of OSS done properly. OSS doesn't assume that companies will suddenly become selfless, it just makes sure that companies following their best interest help everyone.
Exactly this. And obviously the title deserves some nuance. 
If you're splitting by a given delimiter, one of the nice properties of UTF-8 is that no valid encoding of a character (sequence of bytes) contains the encoding of another character. However if you're splitting every 1000 characters or whatever, yes, you should use the mb_ functions. Though even they are not enough to do this correctly for all Unicode text. You don't want to split è into e and ` if you can avoid it.
That makes sense for dev, but is it really worth it in prod?
I called it way back in 2015. Of course, the mods of /r/PHP banned my original account and I can't find those posts anymore. Deleted? :-/
I attempted to upgrade the prod site I managed to 7.3.0 right when it came out, but PHP-FPM segfaulted about 20% of the time, stickily (like 5 requests in a row would segfault, then the next 10 would work, repeat +-3). I hadn't seen segfaults like that since the dreaded 5.1.0 release! Disabling opcache seemed to fix it, but I figured if it was so unstable that I'd wait until bugs stopped popping up, but they haven't even been fixed yet. I was then laid off on Christmas week and am currently looking for a remote PHP job. I'm willing to travel -anywhere- in the world to get started, and I have an American passport.
I'd say its better than forcing a restart of a web server. Assuming it is graceful, it still makes things more complicated.
&gt;You identify as a minority (gender, sexuality, ethnicity, age, mental health, varying physical abilities, etc.) I want people doing talks because they have something to offer and to help others learn. Diversity like this makes it feel like some people are there purely because they fit a group and not necessarily because they are good, or they offer experience or new ideas etc.
Wow /u/nikic , I'm totally awed by this. I think's a great way to kick off 2019 for you, congratulation to you and Jetbrains :-)
;)
Touche. What was the n-word then?
&gt; I am afraid you are overthinking it. At least mysql would never re-use once assigned id to fill the gap from a deleted record. It will just issue an error. Actually, looks like you're correct - I just verified that on my machine locally. MySQL just errors out when it can't create an id greater than the largest number. &gt; A datetime is not unique by definition. There could be a thousand records with the same datetime. So I don't get your point here either. The original intent of the question was to retrieve the latest 3 items inserted into a table. A DateTime doesn't need to be unique to make that happen. However, as u/libe said, if you sort by the DateTime and an ID, you'd at least guarantee that the order that it comes out will always be consistent *and* sorted in order.
\&gt; Usually when this is said, it turns out that the community uses precisely that method and tailors it's tools, processes, and libraries around it, making *not* using the thing in question akin to shooting yourself or your career in the foot. I don't think so. There is nothing Flex can do that you cannot do by yourself. And if a open-source bundle maintainer would force you to use paid service to use his code then nobody would use :P
I always wondered how Symfony made money. Couldn't just they offer consulting solutions?
This is the stupidest controversy and not worth anyone's time or brainpower to give a shit about.
naggers
What's the use-case for this? Seems weird.
I was working on a project which had race tracks as thumbnails on an event list, so we needed some random “track outlines” as placeholders, found the js code ported into a php package 
Only id in this regard is enough. Which tenders your original comment rather wrong ind misleading
There is still no guarantee that ids would always be filled sequentially and in order. Manual inserts may specify a specific id and leave gaps that other inserts may fill. Who knows. All I’m saying is that if you want to sort by time, use a field that contains time.
**Mysql do not fill the gaps.** You need to learn the basics before offering your advise to people. I am glad this topic is deleted so noone will be fooled by your shit.
MySQL does not guarantee that gaps will not be filled. It doesn’t happen to fill them. It doesn’t prevent something else from filling them.
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
Wow that's oddly specific haha
technically you are correct, but anyone who would be filling gaps manually will be outright wrong. Do not abuse auto_increment and ordering by it will be fine.
I think we’re in violent agreement here. I think either solution would work - ordering by id or by datetime + id. I recognize that my original assumption of id reuse was incorrect, but I personally would still to prefer to sort by datetime because if nothing else it still self documents slightly better in my opinion. I guess it's more of a personal preference at this point.
Yeah, and if they never had to deal with Smile, of course they won't. We were not concerned either before working with them. Their sales reps are very good, and they some how managed to make themselves look good from open-source tech company. We actually reported them to the main framework company what was involved in our project, and we were glady surprised that the company took it seriously and launched an investigation into Smile. 
Are there any hosting services like GitHub pages or Netlify do for Jekyll that have the built in CI deployment for Statie?
I like your points, clear and specific. I have met personally on lecture we organized in Prague and talked with folks from Sylius community on Github. They make me feel really safe - open communication, clear reasons behind decision and the most important - you can see they're having fun doing the work :). Very rare to see for me in PHP companies.
I think it's nice to help the beginners to understand some stuff in an advanced way. There are fewer articles about PHP and React. Everyone's on Node.js. Me included but such an article helps them flex their brains into understanding complex code. Nice title though
My bad. Sorry for the inconvenience
I love your point. That's why i made this article. Using front end to verify "logged in" in this way is also dangerous for future. In spite of that, the variable is available in the index.php file. This means you can redirect to authentication page from the server side just like we used to back then.
Well you get a perpetual licence after you've paid for 1 year up front, so all you're actually paying for is new features and bug fixes :-)
It doesn't matter. What matters is the benefits of setting up react in such a way. 1. You can redirect unauthorized users from the server side. 2. You can block IP's, suspended users or any other stuff before loading your React app. 3. It allows you to divide your react app in different sections. Maybe you only use React in sections that you need to make fast and nice transitions in your views or forms and showing errors. An example is PayPal. The settings page is done with React since it has awesome stuff that come in handy. 4. You can redo your existing website in sections without destroying the whole project. 5. There are so many endless uses of this setup
&gt;Nice. This was my issue. And i knew many people have this problem and i helped them fix it. I am developing a PHP web app, how on earth will i run my PHP code in React's index.html on localhost:3000 
There are so many ways to do one thing. And not all websites need the use APIs. 
I switched from 8.2 to 9 but it require manual installation of 8.2 plugins for work with PHP. Once 10 out with support for PHP 7.3 I switched immediatly ad It works great! I use Netbeans since 6.0 version, I tried Atom, Vs code, notepad++, PHP storm and others, in the end I'm always back to Netbeans, use the editor with which you find yourself better! 
Netbeans 10 in my experience, is better than 8.2 and 9, it is faster and support PHP7.3
&gt;When you say "your product is no-nonsense" it implies others is "nonsense". Sounds hostile at least to me and, whilst your PSR interface is "nice", oh, I understand now, you are right... I tried to show in what makes this library different IMHO, but I should have done it more carefully... &gt;you library is totally inferior in terms of features to e.g. Guzzlehttp which *my* opinion would be a total "no-nonsense" package. It's totally straight forward to use is able to cover 120% everyones needs. I am sure that cover guzzle cover everyone needs, but this has a cost in term of complexity.. so the idea is to make a library that covers 80% of users needs with the 20% of complexity. But if you have already a good knowledge of guzzle, I can understand that you don't see the benefit.
Had a look around the Smile website, anyone able to figure out what the heck they do? Never heard of them in my 15 years of programming.
 The PHP development team announces the immediate availability of PHP 7.3.0. This release marks the third feature update to the PHP 7 series. PHP 7.3.0 comes with numerous improvements and new features such as [http://php.net/releases/7\_3\_0.php](http://php.net/releases/7_3_0.php)
Wish I'd got £600 to blow on that. 
I like codeigniter, it's a great way to learn how MVC should be, but it's also ancient, and very easy to abuse, with little to recommend it on favour of more modern frameworks. I would be wary of a team suggesting it for a greenfield project. 
Thank you. That's interesting feedback. I'll dig a little deeper.
I'll give that a shot, thanks for giving an actual tip instead of pointless downvotes
Why are these conferences so incredibly expensive? It's like the only way to attend is if your company is paying for you
&gt; How would you add custom Twig or Latte filter to Jekyll? https://jekyllrb.com/docs/plugins/
Alan Storm of Magento fame (sort of) endorsing Sylius. The times, they are a changing. 
Patreon banned someone because that someone had different political opinions than what trust and safety team deems acceptable in their subjective world view. Jack Conte is filmed lying repeatedly to his user base. Quite a few prominent people already stopped using patreon, one of such examples would be Sam Harris, a well known neuroscientist and author. A lot of users who are not even related to the incident directly stopped using patreon cutting revenues of many creators to by around 20%. Add that to the fact that Patreon admitted that they are not free market platform. They do not stand by your right to express yourself in a way that would be regarded fair under the law. And they do treat each creator subjectively, public terms and conditions be damned, their CEO demeans and insults his own user base - Patreon is garbage service with people of questionable professional integrity. Sadly, currently there is nothing equivalent on the market, however this will probably change.
Well, perhaps. But while you're not interested in politics, those people are definately interested in you. Linus Torvalds resigned from Linux lead due to political pressure. For the benefit of .. no-one really.
Hey, wherediditrun, just a quick heads-up: **definately** is actually spelled **definitely**. You can remember it by **-ite- not –ate-**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Hey CommonMisspellingBot, just a quick heads up: Your spelling hints are really shitty because they're all essentially "remember the fucking spelling of the fucking word". You're useless. Have a nice day! [^Save ^your ^breath, ^I'm ^a ^bot.](https://www.reddit.com/user/BooCMB/comments/9vnzpd/faq/)
Hey BooCMB, just a quick heads up: I learnt quite a lot from the bot. Though it's mnemonics are useless, and 'one lot' is it's most useful one, it's just here to help. This is like screaming at someone for trying to rescue kittens, because they annoyed you while doing that. (But really CMB get some quiality mnemonics) I do agree with your idea of holding reddit for hostage by spambots though, while it might be a bit ineffective. Have a nice day!
Aye its insane. I have a £500 budget per year. And I mainly just use it for ScotlandPHP because going to other big ticket conferences just isnt an option when you put travel, hotel and ticket price into the mix. 
I don't think you have it in the picture. The problem many people have with patreon, is that it's being led by people of dubious professional integrity who are being seen lying to their user base and in some cases intentionally demeaning their userbase. The way Patreon decided to handle the situation revealed a lot about the company, which saw legit, evidence based distrust between it's user base.
That web site is terrible on mobile 🙄
For curiosity, I watched the original demo, and it is the generation of the track: http://static.opengameart.org/procgen/track.html The track generated could cross itself, so I don't think it works for any track, maybe for stunt-racer, MicroMachine or Off-road type of game but not for F-1 (however, Suzuka Circuit has a bridge). 
The example on that page (and in the original RFC) is pretty misleading - you can't really use this for public properties, and you definitely shouldn't start porting your models from getters/setters to public properties. You will most likely just have to port them back again. [See my article here for details](https://dev.to/mindplay/php-typed-properties-think-twice-3824).
For my purposes it was just to have a random generated track thumbnail, I don’t think they would actually be safe and driveable/rideable. 
I miss PHPNW and PHPSC. They were quite affordable.
No ready ;(
Will do.
Since PHP 7.0 the getter &amp; setter have a better purpose : enforcing strict typing of a property (for assignment or retrieving). But with PHP 7.4/8.0, with typed properties, we'll be able to do encapsulation with public properties but with typed values. And get rid of unpleasant getter/setter ofr simple assignment/retrieving on those.
"we can learn from the LEGO Movie" Oh good to see they're keeping the manchild keynotes going. Sat through an hour of a grown man talking about how great Disney Word is at PHPUK a few years ago.
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
Glad I'm not the only one who's annoyed by the recent explosion in infantile culture amongst grown adults.
Costs of basic catering and venue even in smaller cities in the UK are very steep: considering this is 3 days of conference in central London, you'd have to compare it to hotel costs for 4 nights to decide if it's pricey or not.
But what about the ones that happen in universities and without catering?
I mean there's nothing wrong with enjoying Disney World or a kids' film, but having the keynote of your conference be some guy excitably talk about it and then tenuously try and tie it to a professional context is just embarrassing. I've been to a few and it always feels like there's a big split between professionals whose companies have sent them, and people with WordPress blogs treating it like it's Comic Con.
It's only £600 if you're going to the training day as well, and I imagine the vast majority of delegates (or more likely their companies) are claiming the VAT back too, so £500. Regardless of my criticism below, I think that's a very fair price if you think the talks are valuable.
I went to PHPNW years ago, and it was pretty decent, but why was it Friday/Saturday instead of Thursday/Friday?!
It's £300 for just the conference fyi
Yeah. But if I take my PHPScotland off I have ~400 left. 300 off that leaves me 100 for travel from glasgow and a hotel. Means that's me on slim pickings or picking it up off my own tab. And locked out of anything else for the year. My last job was 300 though so can't complain 
You're free to organise those, and I'll gladly go to them as well: this one ain't one of those, it's a commercial event like many others around the tech industry.
Great progress. Looking forward to using this in future projects. Now if only the int type handled arbitrarily large integers internally rather than having to resort to extensions and strings to represent bigints. 
64bits should be enough for everybody… 
Great news! What's the roadmap, will this be available in 7.4?
yes
Looks like yes, this Will be in 7.4
RemindMe! 5 years "Hahaha"
I will be messaging you on [**2024-01-14 00:00:16 UTC**](http://www.wolframalpha.com/input/?i=2024-01-14 00:00:16 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/PHP/comments/afp7ux/typed_properties_are_merged/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/PHP/comments/afp7ux/typed_properties_are_merged/]%0A%0ARemindMe! 5 years ) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Yeah I agree, just a lot of people want to throw JetBrains a parade for looking after their own interests because it helps everyone, but the helping everyone is just a side effect they don't care about ultimately.
"Merged" means it's on the master branch. 7.4 will be forked from master in Summer. Ergo, yes, it's going to be in 7.4
Bigints should be supported without extensions but virtually every language do not use them as the primary int type for performance and that those numbers have to be handled differently in many circumstances. It's also almost impossible to do that without breaking a lot of code.
Been using it quite a bit at work recently (disclaimer: I'm using Sylius 1.2) Pros: * That documentation that is there is very good * The view hijacking is great, everything on the frontend is confiugrable * Extremely extendable, modifying the database structure and overriding forms is simple, and plugins are easy to write * The eCommerce side has obviously had a lot of thought put into it * Over-engineered, which made it a bit hard for me to grasp at first, but ultimately allows for finer control over the functionality * Breeze to get up and running Cons: * Some documentation is a bit sparse, I often find myself digging through the source code * Community support isn't as large as other eCommerce platforms yet, so there are not many plugins yet, and the ones that are there are slow to upgrade * Documentation is very developer focused, an installation/setup guide for non-programmers would probably help them gain users * It's nice to have gulp setup out the box, but it took quite a bit of hacking to setup a build process that allowed me to extend the javascript and css in a theme, and to get ES6/module support
Everyone forgot about PHP 6. Is what PHP would want.
Depends on the field.
I think it's a good fit for PHP to handle it under the context of the int type. Similar to how python deals with it I guess. Though I suppose they started with a separate long type initially. I think there was even a RFC for changing how bigints were handled a while ago. Don't think it went anywhere unfortunately. It causes me all sorts of headaches on projects. How would you expect it to be handled? Or just not bother with it at all at this point?
I would say more like JavaScript is doing with BigInt. But I forgot about python. I guess the best approach would be to analyze how it worked for them. 
Running Laracon US this year will probably hit total expenses of $450,000-$500,000. Thankfully I don’t need to make money on the conference so can keep ticket prices a bit lower but running a conference can be pretty expensive. Food alone is $100,000+... large venue in major city is $200,000... AV going to be another $50,000, etc.
If i'm still alive by then, I'll be pretty impressed.
I need to learn PHP. Then I can make a darknet market!
i though this was some sort of a joke, but after checking your profile, i'm not sure anymore.
You'll be 11.
(This) [http://shop.oreilly.com/product/0636920033868.do] helped me.
Start learning Symfony and the concepts from it.
From the book contents, it seems like a good starting point. Thanks
Symfonycasts and laracasts are a great resource. For symfonycasts, the videos are paid, but the transcript is free
&gt; but this has a cost in term of complexity This is an interesting statement. I can only think you aim at someone needs an "easy" library. So the most easiest example can only be this: Yours: ``` $httpClient = new HttpClient(); $response = $httpClient-&gt;sendRequest( new Request('http://www.google.com') ); ``` Vs Guzzlehttp: ``` $client = new GuzzleHttp\Client(); $response = $client-&gt;request('GET', 'http://www.google.com'); ``` There is zero difference here; none is more complex then the other. Except when I need anything I listed before (logging, retry, oauth, etc.) then _your_ package starts to introduce complexity, because none of it is present (either out of the package or ecosystem). I guess we define "complexity" differently :-) &gt; But if you have already a good knowledge of guzzle, I can understand that you don't see the benefit. Yes, absolutely right. I don't think I can evaluate this in isolation given my experience (it's not just Guzzlehttp, but HTTPlug and friends). Again, there's nothing wrong with your library. But the way you try to sell it, but when I look under the hood, there's really nothing new on table (_well_ except the interface stuff, Guzzlehttp will support it in the future).
Thanks a lot for your reply. Really appreciate it.
Btw do you suggest learning symphony or laracast now since I know the basics, or learn the missing modern parts like composer, namespaces, etc.. first?
there is nothing much to "learn". composer basics you will learn just along installing Symfony. Namespaces are also not a big deal, and could be learned just by the way. Just start
Symfonycasts has some quick primer videos on composer and namespaces under their dev tools section
Laravel comes pre baked with a lot more. This is bad or good depending on what your view is on it. Symfony has great tutorials, but both follow MVC and OOP standards. Symfony follows a repository pattern in there documentations which I highly recommend (even if using Laravel). Laravel is built off of symfony. It unfortunately uses eloquent ORM which you could use with Symfony, but it recommends doctrine (and I agree). If you are wanting to just learn basics both are great. But if you want to learn more behind the scenes I would suggest making your own basic framework based on packages you like. 
I added some more information and mentioned you.
Thank you. Yes I think I need to learn more behind the scenes, as I don't want to be tied to a particular framework.
Thank you, I will start. Just wanted to start the right way not like 6 years ago when I learned writing messy code. I know that writing php has changed a lot since I first learned it, composer, and namespaces are just what came to my mind but I think there is a lot more like exception handling, type hinting, auto loading, MVC, and other stuff that I didn't learn the first time.
&gt;Benchmarks in comparison to [https://github.com/Masterminds/html5-php](https://github.com/Masterminds/html5-php) in the last two releases got a 10x performance boost (see [https://github.com/Masterminds/html5-php/releases](https://github.com/Masterminds/html5-php/releases))
Then why put the sodding thing in central London? Has to be the most expensive place to hold it that it's possible to find in the UK.
https://phptherightway.com
As far as I remember, https://symfonycasts.com/screencast/symfony/setup has it all
Thank you. I will check it.
I am dead serious. If you want to help please send an email here. My email to start contact- anontrustDNM@secmail.pro 
Unfortunately (or maybe fortunately?) this is going to leak all your variables (due to the global registry), so you're quickly going to run into memory issues.
Perfect timing with the recent Github pricing changes. Would rather spend my 7$ on open source.
Some new resources for PHP: https://odan.github.io/learn-php/
The merge concerne services around Symfony, Sensiolabs, and not the framework on its own. The framework is the property of Symfony SAS. Smile has a majority in Sensiolabs but a minority in Symfony SAS. So Symfony is safe and stay independent. Smile and Sensiolabs have been working together for a long time. Smile is present in 7 countries and is working on very big Symfony projets like the worlwide web platform of BeInSport. But nothing is perfect sometimes it can happen bad team, bad feeling. &amp;#x200B;
I'm pretty sure this was a reference to a famouse quote by Bill Gates.
Oh, then I may have been wooshed 
You were told wrong. Go to /r/forhire 
* Loading the photos. If the photos are in a folder, then you could generate the list of the images as follow (windows) (cmd command): &gt; dir /b &gt;list.txt * Then, let's say that you don't want a database and you want to show the images as follow (html) &gt; &lt;img src='img/pony1.jpg'&gt;pony1.jpg&lt;/img&gt; Then, you could create the list by using excel. Just paste the list (list.txt) into excel, concatenate the text and that's it. 
Hallelujah!
 public function getActivePosts(): array { $posts = $this-&gt;getAllPosts(); return array_filter($posts, function ($post) { return $post-&gt;isActive(); }); } I know that's not the point of the article, but I wouldn't recommend filtering after fetching the full table; that's a database job.
Haskell have arbitrary size ints as a primary int implementation (fixed size have to be asked for explicitly)
(facepalm0) ... (facepalmk) &amp;#x200B; thx for pointing that out
&gt; should I start learning MVC For client-side code? Sure. But on the server side, there essentially *is* no MVC; here's [a history of why](https://github.com/pmjones/adr/blob/master/MVC-MODEL-2.md). You may wish to consider [Action Domain Responder](http://pmjones.io/adr) as a replacement pattern.
Because most of the people attending live in London?
How to write good code. keep this steps in mind while start coding [https://www.technolush.com/blog/how-to-write-good-code](https://www.technolush.com/blog/how-to-write-good-code)
Yeah I mentioned that after the code-snippet too :)
A good practice. At codeteview@stackexchange we are doing it a lot. On a few recent occasions I feel proud for the job done, - [reduced the code size by a factor of 5](https://codereview.stackexchange.com/q/211397/101565) - [only two times less and not very suitable for the real life but still](https://codereview.stackexchange.com/q/210173/101565) 
So in Prepared Statements with Mysql, there is the ability bind data types: &amp;#x200B; `$stmt = $conn-&gt;prepare("INSERT INTO MyGuests (firstname, lastname, email) VALUES (?, ?, ?)");` `$stmt-&gt;bind_param("sss", $firstname, $lastname, $email);` &amp;#x200B; According to the documentation, the types correspond as: [http://php.net/manual/en/mysqli-stmt.bind-param.php](http://php.net/manual/en/mysqli-stmt.bind-param.php) &gt;i corresponding variable has type integer &gt; &gt;d corresponding variable has type double &gt; &gt;s corresponding variable has type string &gt; &gt;b corresponding variable is a blob and will be sent in packets I think the types are a bit limited and can be expanded to include other Scalar types, but I imagine these improvements can make it easier to match types and potentially improve performance. &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B;
https://secure.php.net/manual/en/pdostatement.bindparam.php https://secure.php.net/manual/en/pdo.constants.php
Erm, are you sure that 2 bytes for integers is enough? As of prepared statements, they are implemented using Mysql API so you have to make it support more types first. I doubt' though that anyone would bother with it as the gain is quite questionable. 
I disagree that someone should start with a framework before learning the foundational language of the framework
&gt;Erm, are you sure that 2 bytes for integers is enough? No clue, was just giving an example. Floats should be obviously large than ints, but the responsibility is implementing that correctly is another developers problem :). &gt;they are implemented using Mysql API so you have to make it support more types first. [https://dev.mysql.com/doc/refman/8.0/en/data-types.html](https://dev.mysql.com/doc/refman/8.0/en/data-types.html) I'm sure it can be expanded, but to your point, the gains can be questionable. In theory, I believe and to the point above, the gains would be around memory utilization.
Ouch. Experienced similar. Start with composer. Then look into Laravel if you are going to stick to smaller projects. For bigger projects go whole hog on Symfony also. I echo PHP the Right Way but get the book. I kept going off on tangents when I used the website. And there is a PDF of the book.
These things are not as easy as it seems: getActivePosts() could have been called: getAllActiveBlogPosts() -&gt; this is what it seems to do getAllActiveData() -&gt; this is what it also seems to do getAllActives() -&gt; and yes; this one also So, I love writing clear code, but it's all in clear in the eyes of the writer a.t.m. of writing, but it should be clear in the eyes of the reader (perhaps eons later). Though one ;-) 
Which is attributed to him, but he never really said it, according to himself. Whether to trust him or not is debatable, though, but there's no proof he actually said nor wrote it.
Yeah, that's plain stupid IMO. Symfony is a good choice in general, but not to someone who barely knows PHP or programming in general.
For a starting point without a framework, I humbly recommend: [https://kevinsmith.io/modern-php-without-a-framework](https://kevinsmith.io/modern-php-without-a-framework)
a good habit is to "git status" before commiting and reading all the changes.
&gt; It would also be nice if having typed properties started to have memory improvements for PHP, ie integers 2 bytes, floats 4 bytes, etc. But I might be asking for too much. While possible, that would require major changes in the engine - internally, PHP stores all variables as a "zval", a tagged union w/ reference count (see [here](http://docs.php.net/manual/en/internals2.variables.intro.php) - it's quite small, too). Changing all the code to handle either a zval or a native integer would be complicated, and could easily cause worse performance. &gt; I imagine these improvements can make it easier to match types It sounds like what you're suggesting is [function overloading](https://en.wikipedia.org/wiki/Function_overloading). That would be especially difficult to manage in PHP because of it's automatic type coercion, I doubt we'll ever see it happen. My money's on typed properties giving a performance boost when we eventually get a JIT; until then, I'm just happy for the improved static analysis.
Read out a directory with \[glob\]([http://php.net/manual/en/function.glob.php](http://php.net/manual/en/function.glob.php)) (eg: \`glob('images/\*.jpg')\`), loop through the files and generate the HTML for it in the loop. Use a lazyload js library or you're in for a long initial page load. But there are loads of scripts and tutorials online that do exactly what you want. [One of the first results when searching on google](https://stackoverflow.com/questions/20922626/view-images-from-a-folder/20922807) gives me exactly what you need.
true that :)
That's awesome, thanks!
well, the way I see it. Whatever the guy said, he didn't do it on patreon, or on his youtube channel linked to his patreon. Nor did he violate the patreon terms of service in any way. An analogy could be: a contributor to doctrine goes on a racist tirade somewhere on a forum, it goes viral, and patreon slashes doctrine from its platform. another consideration might be that people dont want to contribute through patreon because they dont want to support patreon, which you indirectly do by using them to funnel funds to doctrine.
What about this? public function handle() { // Configure HTTP Logger app()-&gt;singleton(HttpLogger::class, function () { return (new HttpLogger($this-&gt;output)); }); // Configure Connection Logger app()-&gt;bind(ConnectionLogger::class, function () { return (new ConnectionLogger($this-&gt;output)) }); // Register echo routes WebSocketsRouter::echo(); // Start Websocket Server $websocketServer = new WebSocketServer(WebSocketRouter::getRoutes()); $websocketServer-&gt;setHost($this-&gt;option('host')); $websocketServer-&gt;setPort($this-&gt;option('port')); $websocketServer-&gt;setLoop(LoopFactory::create()); $websocketServer-&gt;run(); } &amp;#x200B;
You are a sad, strange little man
👌
Symfony has this great tutorial for how to create your own framework. It doesn't go through all of it, but it does give you some basics of how the http foundation works and then a bit into routing. I usually recommend this for newer programmers that are trying to understand frameworks better. [Symfony Create your own PHP Framework](https://symfony.com/doc/current/create_framework/index.html)
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
Depends how many active vs. inactive posts there are. Of course ideally that's done in SQL, but we've all hit edge cases, where PHP finishes the job and the function works within parameters. It could be optimized later if it's a bottleneck.
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
You could do that, but in my opinion, it makes the code more maintainable if you split those larger methods into smaller chunks. In this example: If someone wants to modify the way the websocket server gets started, you would only need to point them to the startWebsocketServer() method, instead of having them to scan (and understand) a large method - even if it has comments.
Thanks a lot, really appreciate it. A lot of symphony tutorials recommendations. Will start from it.
&gt; but he never really said it, Nobody knows if he said it. Important distinction. Like any person, if there's an incentive to deny, they will. This has no bearing on history. Given his history of foot-in-mouth, it's not out of the realm of possibility.
It's a bit of a cargo cult, but watch me get downvoted for saying it. Methods should be kept "single-purpose" and simple, that much is true. But in controllers, pipelines and workflows, you often have "orchestrating" methods that do a series of things in a linear fashion, almost zero, or literally no branching, and you never need to call a piece of that method by itself in another context. Then... you know, comments are perfectly fine to separate the steps. Everything else is literally going out of your way gold-plating your code so you don't get ostracized by your peers. The more important lesson is to never hesitate to refactor *once* the need arises. Should you see significant branching in that code, or you need to abstract some of the steps, or call them individually... it's so trivial to extract a method, literally any IDE has this under their refactoring tools. No need to split everything into morsels in advance.
I had to do a double take because I'd just read their similar comment in /r/Python.
No mention of phpdbg? http://kizu514.com/blog/phpdbg-is-much-faster-than-xdebug-for-code-coverage/ https://hackernoon.com/generating-code-coverage-with-phpunite-and-phpdbg-4d20347ffb45
Shouldn't we assume people _didn't_ say something unless we have proof they did? It doesn't really matter whether he said it or not (at this point, anyway), but it feels odd to try to attribute something to someone which they have denied and we have no proof of.
Ok thanks for making me feel better about what I do. I usually don't split in advance and only do it if I feel the need to (like when branching or when I have more than 10-15 lines). I don't like too much methods only called once if they don't contain a "significant" number of lines, because then I waste more time navigating around through stuff.
It's summer right now in Australia.
What about GRPC?
Hi, thanks a lot. somehow i missed this, i tried to fix this by implementing few functions that could help avoiding memory leaks. \- `Typed\purge(): void` : deletes all references to typed variables. \- `Typed\clean(string $namespace = 'default'): void` : delete references to typed variables in a specific namespace ( as now you can also pass a namespace to the other functions like `Typed\string(string $value, string $namespace = 'default'): void` ) \- `Typed\delete(mixed $value, string $namespace = 'default'): void` this function allows you to delete the last created variable with the passed value in the given namespace. \- `Typed\c(callable $call): void` : this function accepted a callable that take no arguments, the callable will be called inside `c` ( container ) and all the assigned typed variables in the time of the call would be deleted afterward, this makes it easier to ensure that function calls don't cause any memory leak. example : &lt;?php declare(strict_types=1); use Typed as t; use function Typed\c; /** * all assigned variables inside the callable will be destroyed after execution. */ c(function(): void { $name = &amp;t\string('saif eddin'); $age = &amp;t\int(5); $arr = &amp;t\arr([ 'age' =&gt; $age, 'name' =&gt; $name ]); });
What if you want to attach some relevant data to an exception for later use? For example: &amp;#x200B; \`\`\`php try { ... } catch (HttpInteractionTimedOut $e) { do\_retry($e-&gt;getTimedOutRequest()); } \`\`\` Does it make sense? If so, what would \`HttpInteractionTimedOut\` look like then?
That's really personal preference, but there's pros and cons to both. More abstraction means more work/time spent, but easier to swap out implementations (or entire frameworks if done well). Less abstraction means faster development seeing as you're more able to use all the helpers the framework provides you, but you'll have a harder time switching frameworks down the line if you find you need to. There's no single right way to do it.
And if it’s a database 😉 could easily be a collection of data instead!
This is great. I'll be able to get rid of **a lot** of PHPDoc once we move to 7.4, without upsetting the static analyzers. Now all we need is some kind of generics (for typed arrays/collections mostly - not full-on C++ style templating madness). Is anyone working on something like that?
Surprised me as well. phpdbg is ~10x faster for our suite out of the box (compared to xdebug without any performance optimizations) and can be invoked by simply prefixing phpunit with phpdbg -qrr
The problem with the frameworks is not the use of the frameworks but because it involves dependencies. For example, let's say that I use X library, so my project depends on X library and I should update it regularly (if it doesn't break my code). So, my project is dependent on the X library. However, things could be worse, for example, what if the X library also depends on Y and Z library, then my project also depends on those. Some developers feel proud that their project uses +50 libraries. Nobody would want to reinvent the wheel, but adding dependencies that aren't needing involves a future cost (update, limited to some components and so on). **tl/dr, frameworks are not bad per se, however, dependencies are bad. (a needing evil)** Anyways, the lifecycle of any modern application is around three years, so an application created this year will turn obsolete during the 2021. And I am not talking about patches; I am talking that it will need a new version. However, three years is a short time; a moderate lifecycle is two cycles or around 6-7 years at most!. So, we shouldn't look at some far future; our applications are recyclable. 
phpdbg is significantly more unstable and unreliable: it easily gets out of memory or just fails. Just try it on a project like humbug/php-scoper or humbug/box and you will see. I personally never managed to get it working for an extended period of time on a project :(
Abstractions are always a good idea regardless of your framework of choice. Reliance on AR vs repositories is honestly not a huge deal as long as your business logic is self-contained and easily testable. Your app will eventually be coupled to the framework in some way or another so don't worry too much about that. My #1 advice is not really related to your question but here it goes: don't build a V2 of a legacy app. Try to modernize, refactor and test the old app instead. With this approach you will gain useful knowledge while still keeping the old code running. Complete rewrites are error-prone and you will waste many hours just replicating the behavior of the old app.
I love xdbug for debugging. For code coverage it's not 2x slower, or even 3x slower... It's 10x slower (if not more) than the alternative. That's simply not very good. Would it be possible to start a code coverage driver project, without debugging features, so theoretically less complicated, separate from a debugger? Where would one start? 
&gt; For example, those working with Laravel, do you write repositories to abstract away from Active Record? Personally? No. At least, not in the beginning. When you're picking Laravel, you're picking an Active Record implementation regardless, so you should probably start with that and let the framework do the heavy lifting so you can focus on your v2 prototype. I would probably wait until you have a working Version 2 before trying to separate the application from Laravel's chosen persistence layer. Otherwise, you're just going to find yourself going down a rabbit-hole, and prematurely optimizing / abstracting away too many things, thus compounding and slowing down actual dev work. &gt; Do you abstract as much as possible such that you can swap out the framework? Similar to the above, I do prefer that approach, but not to start with. Focus on getting your code done and tested first. Yes, you can write it in such a way that will make things easier to swap out downstream, but I don't think that should be your primary focus at the start. &gt; Or do you guys tend to just use the framework as is and not abstract away anything? In Laravel specifically, I will abstract away only as much as I need to initially. Personally, I would focus on using Service classes and custom Provider classes to build your dependencies. I like to keep my controllers light so that all they're doing is orchestrating method calls to each appropriate service. After that, if you want to make your application framework-agnostic, then that's where you can start using interfaces and repositories to further decouple everything from the underlying Laravel classes. &gt; What is the "modern approach" to working with frameworks? Abstract or not? Abstractions, but within reason. When you're refactoring an existing application, you have to strike a balance between the time that you're spending on the application itself, as well as any abstractions that you're creating to create less of a hard dependency on the framework you're using. By selecting any given framework, you're still going to be creating constraints for yourself that depend on that given suite of tools for that iteration of your application. It really all just depends on how much work you want to offload onto the framework to handle low-level concepts (ie: Validation, Authentication, Authorization, etc.) so that you can focus on writing code that meets the actual requirements of the application you're building.
And I'm sure that as an Australian you're accustomed to dealing with Northern Hemisphere Oppression. Get back in your place. * Said in good humor, I promise.
How to install NetBeans 10 for PHP Development https://php.tutorials24x7.com/blog/how-to-install-netbeans-10-for-php-on-windows
Why is this whole topic down-voted so hard?
NetBeans 10 for Development https://php.tutorials24x7.com/blog/how-to-install-netbeans-10-for-php-on-windows
Re 'proper rock solid code navigation and code completion' I meant the core ability to 'Go to declaration' on a class/method/variable in the code and actually end up in the right place through proper symbol linking and not just fuzzy matching. This is the fundamental and traditional feature of IDE's that's necessary when you have large applications. VSCode and other text editor's implementations of this are not the same and not as robust. VSCode et al are find for smaller apps/software and I concur may well be used for larger development when it comes to Javascript based languages, but for any other language I'd bet large enterprise development with multiple users in corporate environments remains with traditional IDE's. When you mention "when it comes to PHP development" - why is it be any different for PHP than to Java or .NET? If you have an extremely large PHP application with many classes and many people using it, why is fuzzy matching ok there, but not sufficient for Java or .NET?
builwith.com
Builtwith.com
Read “Clean Architecture” by Uncle Bob. He supports this that you creating a whole new app doesn’t solve the problems. Learn good structural patterns and fix the current problems you have.
Most likely. It sets a cookie named PHPSESSID.
1. Learn nginx. New devs will push for that. And "I could never understand Nginx" is shity excuse. 2. Latest mysql 8 has new authorization, so you should check if that works with your ORM. 3. Use always a little older php by one release. Like 7.2. 7.3 is not yet in all reps. So you will need to compile or add external repo. 7.2 comes out of the box, or just one apt-get install away(yum install). 4. Do not rewrite legacy application. Probably it has shitload of workarounds, special client solutions etc. You will never finish "migrating" or it will be way over reasonable time. It's much better to learn legacy system and fix it and upgrade. 5. You can run some parts from old system, and some parts from new. And you can just route request from your http server to new or old application. There are so many ways to "fix" legacy application. Biggest migration I have seen was in 10mil social network(\~30 app servers), and they where running symfony + legacy application. And custom router in index.php before kernel boot. It was a little slower, but you could load legacy application as service and just encapsulate it in controller until you will have enough time to rewrite it. 
Dunno about others, so I would tell for myself. For me the question is not well thought and quite confusing. For me, the question about abstracting should be *abstracted* from software versions and the new version affair. After all, does it matter which particular framework is used, of what will be the purpose of the new app? So when you read the question it turns to different and irrelevant matters, and one just have no idea what is this question about. It would have been received better if was specifically asked on the abstraction and abstraction only. 
`the first example was using simple comparison with only two equal signs instead of identical comparison` The example's actually written it as an identical comparison, but great article nonetheless.
I'd still use a named constructor
Your only big dependency must be Business Logic, not frameworks or packages. In this topic already mentioned "Clean Architecture" and I double this: do yourself a favor, read this book, understand it and only after that start writing code. &amp;#x200B; If you ignore all comments and just starts doing something: soon you find yourself in your own legacy code. Don't do that.
Just went to the phpdbg website and it looks like some sort of phishing attack site with redirects. I wouldn't trust putting shit like that into my projects [http://phpdbg.com](http://phpdbg.com/) 
That's not their website https://github.com/krakjoe/phpdbg Anyway: &gt; phpdbg was developed here, then merged into php-src: This repository is no longer used.
Very welcome news! Does this permit nullable types in line with function argument and return type hints? protected ?string $middleName;
&gt; Complete rewrites are error-prone and you will **waste many hours just replicating the behavior of the old app**. I can't stress this enough. Currently rewriting a 10 year old app and I'm already so burned out and there's still so much work to be done. Been on it for 10 months and I'm nowhere near administration, just frontend and backend modules. For 10 years, the old dev team wrote, albeit mostly spaghetti code, they did write in a lot of features. Most of which **do work.** It's a life lesson for me at this point. No rewrites unless I have a huge team of skilled coders.
&gt; Sentry is life saver and you can get it for free. Agree with both hands there. Not having sentry gives false sense of security. You think your application is working, but it crashes in specific cases and unless you check the logs hourly, you'll never catch them. Sentry and Sentry for Laravel package increased my work for a week after I found out just how many freaking crashes my users have been facing (after passing unit tests, lol). So I took a week to fix most, if not all stuff reported in the Sentry error log. Been sailing flawlessly and I get to knock my colleagues on the head when they release a module that throws errors
&gt; That's not their website &gt; &gt;[https://github.com/krakjoe/phpdbg](https://github.com/krakjoe/phpdbg) &gt; &gt;Anyway: &gt; &gt;phpdbg was developed here, then merged into php-src: This repository is no longer used. It is literally linked at the top of the repo so I assumed someone who owns the repo would have added the link.
&gt; I'd still use a named constructor Does it mean that you'd "disable" `__costruct` by making it private or keep `__costruct` untouched but let `getTimedOutRequest` to return `?Request`? 
This is really interesting, and even if one doesn't want to use typed variables within a project, reading through your source is a great way of learning some new PHP tricks.
Hi, this is a study I have made for a class in university. TDLR; we found some common performance defects on popular Laravel applications and fixed them. I posted here because I believe the results we found for Laravel could be generalized for other frameworks as well. The full report is here https://adrien.poupa.fr/wp-content/uploads/2019/01/LaravelPerformanceStudyReport.pdf Hope you find it interesting! 
Great job with the post and topic! I'm sure there are some useful hints, but 10-page is very hard to read and the info might get lost in the translation. Do you plan to write some 1-2 page post with top 3 foundings? I'd be happy to review!
Thank you! I agree, but our professor specifically asked for the IEEE paper format to be used. However, I thought the article I linked to here was sufficient summary. 
&gt;Instead of making people to speak at a conference, I would rather offer them a training, to let them grow as professionals to the level where they can do some research and then share its result with the audience. Surely it will take more effort than just take someone, write them a speech and then make them memorize it. but it will be fair, both for the speaker and the audience. From the article, that seems to be close to what this is. It's seems to solely be about providing public speaking training for people who are interested in doing a talk but for whatever reason feel they can't. There's nothing in the article that suggests it's about accepting talks for conference from people that wouldn't otherwise be accepted.
Did you read the article? It's about offering public speaking training to people, nothing about accepting talks that wouldn't otherwise be accepted because of who the speaker is.
I understand that, schools work like that. I wrote 60-pages long thesis about polyphasic sleep. Interesting topic, but not many views nor comments :D Until I wrote [4-min long post](https://www.tomasvotruba.cz/blog/2018/02/12/sleep-shorter-to-get-62-percent-smarter/) about it. Also, the purpose of the post is not to replace the paper, but to get more people interested in it. Such post links the paper in the end for those who are eager to know more.
[Yes!](https://wiki.php.net/rfc/typed-properties-v2)
See, you are taking a talk as a self-sufficient task, a goal to pursue by itself. In reality, it is not. A talk is just a consequence, only a *side effect* of some other, much bigger task. First you are doing a research, or a develop a tool, or something of a similar degree. And once you've done it - trust me, there is no question as "being unable to think of a topic". And the reverse is true as well: once you have no idea what to talk about, you have probably done nothing interesting worth to be shared with a large audience of specialists who paid a considerable sum to attend. 
Sublime of course :) 
&gt;See, you are taking a talk as a self-sufficient task, a goal to pursue by itself. You're reading too much into what I'm saying, because I'm not saying that. &gt;once you have no idea what to talk about, you have probably done nothing interesting worth to be shared with a large audience of experienced devs who paid a considerable sum to attend. Which is fine, because there's nothing in this post about getting people without anything specific to speak about to speak to a large audience of experienced devs who paid a considerable sum to attend. There's nothing about bypassing the usual CFP process, so I don't think you have anything to worry about in that respect.
This is kind of the issues I have with ORM systems, there fine for most common tasks. But once you start to work with bigger data sets, and a bunch of tables, they start to fall apart if your not careful. And 20,000 is small to me, that’s a nice start.
&gt;But once you start to work with bigger data sets, and a bunch of tables, they start to fall apart if your not careful. The same is true of not using an ORM, *if you're not careful*. It comes down to understanding the tools you're using. Any ORM worth it's salt will allow you to bypass it's cleverness or inline raw SQL if necessary. &gt;And 20,000 is small to me, that’s a nice start. 20,000 records is enough to identify the specific performance issues that they were looking for in the paper, which all related to non-linearity of scaling. It's also a reasonable database load for the three applications tested. Using millions of rows for performance testing only makes sense if that's a likely real world scenario and you're looking for specific performance issues that would only show themselves at that kind of scale. You don't need millions of rows to identify problems with eager loading.
&gt; getActivePosts() could have been called: The `All` is implied. &gt; getAllActiveBlogPosts() -&gt; this is what it seems to do This one is fair, but if there is no other kind of `Post` in the context, unnecesarry. &gt; getAllActiveData() -&gt; this is what it also seems to do `Data` doesn't provide any useful information, it's a nothing word that applies to anything in a database. The entity is a `Post`, so it makes sense to refer to it as such. &gt; getAllActives() -&gt; and yes; this one also `Actives` could refer to any number of different things and isn't a real word. I still think the original suggestion for `getActivePosts()` is the clearest of all of those suggestions.
 ㄣ˙ㄥ ԀHԀ
I like ORM, but I also like to write RAW SQL. Especially when in comes to database relations. &amp;#x200B; I love Laravel and I created an website which growed to a million+ records. At the start Eloquent was running fine, but it got slower and slower while the number of records grow. The database had the right indexes and finally we changes all queries from Eloquent style to just RAW queries. The speed up the queries 1.000 times. &amp;#x200B; In my opinion Eloquent is nice for just simple insert, update and delete records. But not for complicated queries with multiple relations to multiple tables.
&gt; The speed up the queries 1.000 times. Did you use `toRawSql()` or the Laravel Debugbar to see what SQL Eloquent was executing? If you still have the code I'd be interested to see what it was doing versus the Eloquent query. As with any ORM there definitely are times when a complex query can more performantly be expressed as raw SQL, but a lot issues also stem from not understanding how Eloquent builds a query up and how it can be manipulated. I'd always recommend viewing the SQL that is being executed by an ORM whenever you're making a complex query. You can use `getSql()` and `getParameters()` on a Doctrine query for the same purpose.
This is part of why I really like the repository pattern. I can start with an ORM and then strip out the least performant parts with raw SQL based on my needs without having to change and re-test a lot of code.
This is over 2 years ago, I don't have the code anymore. At that point I could write a better RAW query than Eloquent could. Maybe I used it wrong, but just followed the documentation.
&gt;At that point I could write a better RAW query than Eloquent could. You're probably not wrong on that, with very complex queries it often is clearer just to use raw SQL rather than try and structure the the ORM query to achieve a similar end result. I was just interested to see what kind of query would be so drastically slower but it's understandable that you don't have it around any more.
My words, exactly. Recently I was working with a gianormous database almost entirely on Hibernate. I spent months just rewriting from ORM to pure sql queries. The speed improvement was great. 
&gt; In my opinion Eloquent is nice for just simple insert, update and delete records. But not for complicated queries with multiple relations to multiple tables. Hmmm I'm going to have to disagree on this, Eloquents queries are not in order of magnitude slower than a raw SQL query, the slow down (and high memory usage) comes when it converts the result set into collections. This increases in parallel to the size of the result set, as the OP's papaer, rightly pointed out. The complexity of the query in my research on live applications has shown me the query produced run's no faster or slower than writing a raw query. The OP's paper also proves this in the Monica app. The issue isn't with Eloquents constructed query it's when it's trying to compile the result set into collections. With the Monica app it sounds really poorly coded to try and return a full result set in one go the OP was correct to add pagination which decreased the page load time significantly. It's only in rare cases you actually need to return a full data set, things like data export for example. In an actual app it makes little sense 99% of time to select all of the data.
Very nice primer on performance tuning and optimization. Some of the most significant gains you can make in performance tuning an application occur within the DBAL. &amp;#x200B; Might I suggest that as a follow up, you then analyze the queries themselves to find outliers which take a lot of time. When you find these, you generally can fix them by properly indexing the table(s) involved. Once you hit a bottleneck and can't improve performance when accessing data, it's then time to look at what items are good candidates for implementing a caching layer on top of your ORM data. &amp;#x200B; Lastly, once you've exhausted these options, you can track down other low hanging optimizations. You'll find these by enabling xdebug profiling on your application, saving the cachegrind files to your local machine, and then running a UI application such as kcachegrind or qcachegrind to organize and locate expensive operations in the application. In some cases, you may be able to refactor and optimize some of the more intensive calls. &amp;#x200B; &amp;#x200B;
You can't touch the constructor, as it's declared by a parent implementation.
Every time I see a post like this, my mercenary heart compels me to mention my book, [Modernizing Legacy Applications in PHP](https://leanpub.com/mlaphp). Others here have mentioned the pitfalls of a rewrite, and I will reiterate: a rewrite is practically guaranteed to fail, in terms of getting it done in a reasonable period of time. Rewrites are immensely expensive. A refactor-in-place, though, keeps the application running the whole time as you improve it incrementally. MLAPHP gives you step-by-step instructions on exactly how to do that. Either way, good luck!
You would start with an extension ... which nobody would install ...
The main performance defect for me re: Laravel has been db-&gt;each() Instead of iterating a single result set, each() delegates all logic to chunk() and, in turn, chunk() creates multiple result sets for large enough data set. These result sets are from queries in the form 'SELECT ... LIMIT X OFFSET Y' When Y is a large enough number (in my case, about a million or so) the additional time for the queries to return becomes substantially unperformant (about 1000ms more time to return) The hacky solution for me has been to use getPdo() for those larger dataset queries. Proposal for improvement remains open here https://github.com/laravel/ideas/issues/882 (Recently re-read https://www.yegor256.com/2014/12/01/orm-offensive-anti-pattern.html which makes a few decent points against ORM in general, although I'm not as rabidly anti-ORM myself)
I had an application which was looping through \~300 eloquent objects a few times, checking a parameter on each and adding the object to an array if the parameter matched a value. Just retrieving the value from the Model was taking longer than the actual DB query to get the results in the first place. This all stems to Laravel's crazy Model objects which call *7 methods* to get any attribute out of a model. Adding a layer on top of eloquent which converted the model from the Laravel model to a basic PHP class saved us over 500ms per request.
Oh, sorry.
Really good article. A sort of click baity title since Laravel is only incidentally related to the underlying architecture issues (that can be misused in any language) you found and resolved. Interesting content though for sure.
It seems like something else must have been happening there. Seven function calls is absolutely nothing, the performance penalty is negligible. If Laravel's `getAttribute()` call chain was taking longer than a DB query there must have been something else happening, either a poorly written mutator or something very wrong with the underlying PHP set up. As a quick test I pulled a fairly heavy entity out of a project I'm working on currently (forty attributes, some of them containing kilobytes of data). Accessing the ID takes an average of 0.00005 microseconds. Accessing the `created_at` property, which has to go through an accessor to convert it into a Carbon object takes an average 0.00012 microseconds. Accessing an attribute that contains 16kb of data and passes through an accessor takes an average of 0.000014 microseconds. This is all run through a slow local development VM with XDebug enabled.
There is something very wrong in testing methodology here. I don't use Laravel/Eloquent as I find them really bad but no matter how bad some ORM is, it is impossible to have large database affects ORM speed. It is physically impossible! Proof: for fun, I made hobby project where one of the tables has 100 millions rows! Other tables are in range of 1-10 million. &amp;#x200B; Result: program works without visible slowdowns, 100% using Doctrine and **never** a single raw SQL. The only thing I had to do is to make my own paginator. When I used existing paginators, COUNT() took about 20-25 seconds for largest table. To solve it, nr of rows for all tables are stored in one isolated table and is updated whenever entity is persisted or removed. &amp;#x200B; If someone is interested, I can update the code (few minor bugs) and give you the link to try it. It takes about 8 hours to populate DB as I intentionally wanted to use Doctrine for everything. Even with top speed of 9000 records per second, it takes time to populate entire DB. &amp;#x200B;
Yes, but that should be their problem, not yours. It's cool to keep supporting stuff as long as possible, but don't let your own progress be slowed down by companies not wanting to upgrade. There's versioning, they can always stay on the old versions and you can always push additional minors for security patches, it's all fine.
&gt;There is something very wrong in testing methodology here. I don't use Laravel/Eloquent as I find them really bad but no matter how bad some ORM is, it is impossible to have large database affects ORM speed. It is physically impossible! The problems found in the article aren't related to Laravel's ORM, or the size of the database, it's simply cases where the projects being looked at hadn't been eager loading associated models (and so Laravel creates a query for each record being pulled), or they weren't using pagination at all and so when loading the page it was trying to load in 20,000 results. They used different numbers of records in order to easily find these problems, not to prove some point about the size of the database.
&gt; There is in my opinion no valid technical reason to centralize all manifests in one repo. Searching through all Flex Packages? Having automatic security/version checks, upgrade notices etc.? Surely there needs to be a "List of all valid Packages" in some way that can be worked on by automatisms.
I do in all my recent Symfony applications, 3 of them are productive. It's a lot less hassle to set up bundles, you don't have to do a thing other than requiring the package. Configuration files are set up automatically and fed with default values, .env-files are updated automatically and you just have to fill in values, bundles are registered automatically. Keep in mind that you had to do exactly these things manually previously, by reading the (sometimes very bad) documentations of the specific bundles. Short names are also a breeze (`composer req api`, `composer req rest`, `composer req admin` etc.) I like it a lot and personally I also can't understand why having a small recipe on GitHub is a deal-breaker. For me, this seems more like a typical rant on Microsoft for acquiring GitHub, nothing more, nothing less. Having them in central repo improves consistency (they can block recipes that are badly defined) and they can do stuff like automatic security checks to provide a fixed list of secure and production-ready bundles the whole community can rely on.
A few reasons: &amp;#x200B; 1. more venue options/flexibility 2. easier for people to travel to. If Im coming from America, and your conference is in bumble fuck England, it will be harder for me to get there. 3. Added tourism. Part of the allure to travel to a conference is to see a new city.
There are RFCs for it. Not sure if anybody is actually working on them. https://wiki.php.net/rfc/generics https://wiki.php.net/rfc/generic-arrays
&gt;Running Laracon US this year will probably hit total expenses of $450,000-$500,000. Thankfully I don’t need to make money on the conference so can keep ticket prices a bit lower but running a conference can be pretty expensive. Food alone is $100,000+... large venue in major city is $200,000... AV going to be another $50,000, etc. holy fuck. I thought running Southeast PHP was crazy at around 50k but wow. 
I'll bet you thought nobody would try :) This is xdebug ... ``` krakjoe@fiji:/opt/src/box$ time /opt/bin/php bin/phpunit --coverage-text 2&gt;/dev/null PHPUnit 7.5.0 by Sebastian Bergmann and contributors. ............................................................... 63 / 763 ( 8%) ......................................................SSSSSSSSS 126 / 763 ( 16%) SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS.............. 189 / 763 ( 24%) .......................................................FFFFFF.. 252 / 763 ( 33%) ..........F.................................................... 315 / 763 ( 41%) ............................................................... 378 / 763 ( 49%) ............................................................... 441 / 763 ( 57%) ............................................................... 504 / 763 ( 66%) ...............................SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS 567 / 763 ( 74%) SSSSS.......SSSSSSSSSS......F.EEEE.................SSSSSSSSSS.. 630 / 763 ( 82%) ............................................................... 693 / 763 ( 90%) ..............................FF............................... 756 / 763 ( 99%) ....... 763 / 763 (100%) Time: 4.7 minutes, Memory: 62.00MB ERRORS! Tests: 763, Assertions: 1448, Errors: 4, Failures: 10, Skipped: 115. Code Coverage Report: 2019-01-15 16:18:32 Summary: Classes: 58.82% (30/51) Methods: 73.22% (216/295) Lines: 67.66% (2086/3083) ``` This is phpdbg ... ``` krakjoe@fiji:/opt/src/box$ time /opt/bin/phpdbg -qrr bin/phpunit --coverage-text 2&gt;/dev/null PHPUnit 7.5.0 by Sebastian Bergmann and contributors. ............................................................... 63 / 763 ( 8%) ......................................................SSSSSSSSS 126 / 763 ( 16%) SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS.............. 189 / 763 ( 24%) .......................................................FFFFFF.. 252 / 763 ( 33%) ..........F.................................................... 315 / 763 ( 41%) ............................................................... 378 / 763 ( 49%) ...........................................EE.................. 441 / 763 ( 57%) ............................................................... 504 / 763 ( 66%) ...............................SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS 567 / 763 ( 74%) SSSSS.......SSSSSSSSSS......F.EEEE.................SSSSSSSSSS.. 630 / 763 ( 82%) ............................................................... 693 / 763 ( 90%) ..............................FF............................... 756 / 763 ( 99%) .....F. 763 / 763 (100%) Time: 1.66 minutes, Memory: 74.00MB ERRORS! Tests: 763, Assertions: 1436, Errors: 6, Failures: 11, Skipped: 115. Code Coverage Report: 2019-01-15 16:37:28 Summary: Classes: 64.71% (33/51) Methods: 74.23% (216/291) Lines: 67.74% (2041/3013) ``` I see no crashes ... I see a difference in errors, but no failing or oom ... I couldn't figure out how to install php-scoper in order to run the tests ...
Maybe you should update. I think it was 2017.3 where they implemented the multiple-project-view. I just open a project and get the following options: "This Window", "New Window", "Attach" (&lt;- this is what you want), "Cancel"
&gt; do not need extensive IDE features. ...yet. It's not about needing them, it's about the fact that they improve your efficiency when writing code. I'd fire a programmer in my team that tells me they don't need automatic code-analysis, annotation completion, Symfony utilities when working with Symfony like route and service auto-completion etc.
w: shit ESC :wq fuck :q!
Maybe to each their own don't you think ? :) I've been a professional dev for twelve years (working from Symfony 1.2 to 4), I've tried most approach, including working two years with Netbeans, two years with PHPStorm / WebStorm full IDE and I prefer distraction free editors to rich featured editors. There is plenty of ways to code although you seem to have a strong opinion that there is only one. (And I also don't think firing someone based on IDE preferences is a good decision)
Sorry, I removed it ... it was removed from readme ages ago when I lost control of the phpdbg.com domain, I forgot to edit the tag line on github ...
You use PHPStorm for PHP, not WebStorm. And both have a distraction free mode and the UI is fully configurable. As said, it’s not about can or can’t. It’s about the fact other programmers knowing the same stuff as you are more efficient with a real IDE, that fact is undeniable.
"that fact is undeniable" ok Well I undeniably prefer working in Visual Studio Code, I don't know what to say. It's crazy how a "What are you guys using to write your code these days?" question can become an argument when you don't agree to someone else preferred code editor.
I didn’t say you shouldn’t use it, I said I’d fire you if you’d work in my team and refuse to use a proper IDE. That’s a big difference. You should try working with PHPStorm for some time and get to know all it’s features. It makes a big difference in efficiency, _especially_ when you are a good programmer.
When working outside of a framework I've always had great success with Sentinel from the Cartalyst guys. [https://github.com/cartalyst/sentinel](https://github.com/cartalyst/sentinel) Why I like this package: * It has great in-depth, well written documentation [https://cartalyst.com/manual/sentinel/2.0](https://cartalyst.com/manual/sentinel/2.0) * As with all Cartalyst packages it works really well stand alone outside of frameworks * It has plugins for social media logins which is a really nice extra [https://cartalyst.com/](https://cartalyst.com/) * Another useful plugin is it's multi-tenancy feature, might not be good for your use case but it's a nice to have. * You can use as much or as little of it as you like so features like Permissions, Roles, Throttling and Password resetting are all optional and totally up to you if you want to implement them or not.
&gt; and fixed them Kudos to you to not just shaming bad performance, but making the projects better. We need more people like you.
Assuming you want to use entity-style objects to represent your domain models, the structure is pretty similar as what an ORM provides: the persistence layer abstracts away the interaction with the database / storage mechanism, and does the data mapping to convert domain objects to storage-ready data and vice versa. Aura PHP has a handful of packages under their [Atlas namespace](https://github.com/atlasphp) to help with converting source data to both persistence objects and domain objects. (Cool option that packages like these provide that many people may not realize: you can choose to convert third-party API results to local objects.)
So I have worked on some truly stateless applications a few time - apps with no data storage of any sort. They take an input, transform it in a particular way, then send off to another service. The only output is the logger service, saying that the job was done. I'll have a set of controllers that take the data handed into the service and put it into an input model. Then you call a service dispatcher that finds the right way to transform the data based on whatever criteria you are using, and returns the output model. Finally, that output model is passed into a transport dispatcher that decides what other service is getting the data based (again) on whatever criteria is needed, then calls that service to do the transport. In the event of an error anywhere in the process, the input model, output model, and any data accumulated during the attempt to transport get pushed into a data store of some sort (I use mongodb) for any sort of automated or manual error handling. This allows me to accept requests that fail then manually modify them and resubmit them.
You could use simple PDO statement query and either use array or custom objets using fetchObject : http://php.net/manual/fr/pdostatement.fetchobject.php The custom object would be a DTO (for Data Transfer Objects), I like this approach because you are using standard SQL, have no ORM magic and still use OOP. I struggle finding the good balance between using ORM and not using ORM. ORM are nice for the schema part (doctrine is really good on this), migrations, etc. But on the other side using it for querying objects and relations is always a mess and hard to tune for performance. In the end on most project I still use an ORM for the schema, and PDO for querying (returning just the data I need, mostly with arrays).
That basically is the repository pattern still, they're just single-purpose, read-only repositories.
Yes, the pattern is similar but the approach is different from "Standard repositories", the doctrine in way is "put whatever queries for the user on the UserRepository".
How are you using Doctrine ORM but using PDO for querying? Are you still creating Entities and using annotations but hydrating them manually? Or are you using external mapping so you can use the schema tools and handling the class definitions manually and separate?
In addition to single query Finder classes I also have Updater classes for persisting the changes. The Finders are great as you can return exactly what you need in whatever format work the best. But the Updaters are a real pain to write especially when dealing with relations.
Recreation of most developers using VI for the first time. `ctrl+s`. Oh shit, wtf did I just do, nothing is working, my terminal is locked up, I just wanted to save goddamnit.
It depend on the project but I've experimented with this because I'm not really finding a perfect solution (don't if it exists), here is a simple example to show you how I could mix both in a projet but I don't mean it's perfect. I'm creating Doctrine Entities (for example a User), it's great because it ensure my schema is valid and my database up to date, it's also great to automatically generate migrations. If I have a registration form on my web app, here I can still use the User entity because this won't cause any performance issue and it's way easier than writing an INSERT query, also it works well with Symfony built in validation / form, etc. On the other hand if I have an API /users/1/sugest_friend for example, that potentially sends a lot of user, and has a lot of relations to other table, and anyway I just want to return a JSON output I'll just use PDO and write my query in SQL, Doctrine is not really useful here and hydratation can have an impact over performance, it also forces me to think my queries in "Doctrine way", when I prefer to just write SQL (I can write DQL, but there are some limitations too, and I prefer the simpler PDO way). This is accurate for everything batch related. On some project I've completely ditched the ORM, but I feel like I'm missing some things Doctrine handles well. I hope I've answered you question :)
In my case I use a "Query" to find object or insert/update/delete object, I can also have a "Query" that is not really related to the database but another persistance system for example : FindUserByUid, CreateAdminUser, ResetPasswordQuery (this might send an event to send a mail).
My projects are literally graphs of objects and interactions. ORM is a way to represent it, sure, but I never "follow an ORM approach", it is just a possible way to represent my project that I may choose depending on some factors.
&gt;I actually use this with automatically deployments in gitlab Why though? Why not just deploy the docker container directly, that's the whole reason Gitlab introduced the Container Registry. Seems silly adding an external tool and hosting your own container registry
&gt;Why would I use this over a CI/CD system like CircleCI/Pipelines/Jenkins/Bamboo etc? You don't. I can only imagine people using this are people are rolling the dice and gambling with their projects by not doing repeatable builds. (Yeah I know its 2019 but there are still lots of people doing this)
&gt;If all your deployment is, is that you do git checkout then you can have it do that. Who is even doing that in 2019?
Let's be serious, some people are still ftp'ing their files over.
&gt;Let's be serious, some people are still ftp'ing their files over. I would hope not? However, I've only been involved in professional, enterprise scale systems for the last 5 or 6 years so maybe it's still commonplace in some markets?
What do you mean by gambling by not doing repeatable builds? Does deployer not let you rerun a build? :/
Adding a login facility to the CMS isn't particularly difficult. Maybe 50 lines of code, max, to authenticate the user and set a flag to say that they're authenticated. And a few more in order to create a function which returns a value to indicate whether or not the user is logged in. You can do it with a framework (whatever that means, in this instance) or without. No major hassle either way. It will depend a lot on how your existing CMS is written and structured. There's plenty of good example code out there to show how it's done. What could end up being the biggest issue, however, is making sure that you call the "is the user logged in?" function whenever it's necessary. IE, at the top of every page that requires authentication. And if you have different user levels, then that also means checking that the user has the right to do what the page is about to let them do. Tracking down all those instances where you need to call the code might be a big job.
The summary can be found in chapter 7, this is page 9 of the PDF.
Dude pull your head out of your ass. No one is impressed. 
I dont use docker on my servers.... yet
Yep, makes sense. Wasn't clear if you were still using the Entities at all but it sounds like you are in some cases. Thanks!
Are you showcasing your portfolio or mine? 
I don't know why this took so long to have... maybe I don't know all the things.
While it was written about Go, I've become a really big fan of this article in which Ben Johnson talks about his idea for the [Standard Package Layout](https://medium.com/@benbjohnson/standard-package-layout-7cdbc8391fc1). The reason I'm such a big fan is because Ben's description of code architecture manages to clearly defines domain nouns and contracts. It also makes separation of concerns far easier as a result of it's inspiration from the [Hexagonal Application Architecture](https://fideloper.com/hexagonal-architecture). In Ben's example, the root package (a PHP namespace being the most similar, albeit not identical, equivalent) defines out domain models and contracts. The contracts define out the business logic, and often require implementation to use the domain models as input or output types. The external systems or implementations that then handle this business logic are then not allowed to reach another section of the system without going through these domain models and contracts. The best part about this, to me, is that none of this means I can't have system-specific implementations. For example, say I had to implement a repository for an Article. Let's say the contract looks like the following: &lt;?php namespace App; use App\Article; interface ArticleRepository { public function find(int $id) : ?Article; public function create(Article $article); public function update(Article $article); public function delete(int $id); } Implementing that repository, I could choose to use Doctrine, Eloquent, PDO or whatever else I wanted to persist said data, but I am required to return a domain model of an **Article**. This means I might have two Article "models", one for my database layer and one for my domain, which is fine so long as I always use the *domain* model for arguments and return types. This has proven extremely powerful for me because that, plus some good package/namespace naming makes the intent of my application very clear. Consider as well that the separation of domain and implementation is still well established and I have personally fallen in love with the architectural method. It feels quite a bit closer to what Uncle Bob always says about project structure, which is reassuring that I'm on the right path. Just my opinion!
I never use a ORM and active record (IMHO it's an anti pattern). I put all my "data access logic" / "query logic" into repository methods. Then I put the "business logic" (the calculation) into service classes (e.g. CustomerService). I also split data from behavior. To hold the pure data I use DTO's with setter and getter methods (or sometimes arrays or VO).
are you willing to pay?
i can build it, but i dont work for free
why is this getting downvoted?
Absolutely. I may have worded it incorrectly I think :) Support for PHP5 has ended, I only added a bug fix release for the previous branch/release (1.8). There were a few critical issues that had to be resolved. 
Just run it with PHP 7.1.2 and see what breaks. That will give you a better idea of time than asking a bunch of people who have no idea what your project is. Line numbers don't matter much. It's the contents of the lines. Most things will work just like before.
as a fan of legacy cartalyst/sentry, I'll also vote for cartalyst/sentinel &amp;#x200B; setting it up and start using it is quite straight forward
It depends on the code. If it's a poor code (for example, call time pass by reference) then it could take some time to migrate the code. 
I've done this exact migration with 500,000 lines of code. In short, very little broke (there were some slight changes, for example, to object iteration), but bear in mind [some extensions were removed in PHP 7](https://wiki.php.net/rfc/remove_deprecated_functionality_in_php7), so you'll want to verify that your code still works as expected.
I use Eloquent ORM for tables between 2 and 10 million rows all the time with few problems. I've run into one or two problems but they didn't make me ditch Eloquent. Just had to do things a bit differently. I think you'd get that with any tool.
My DAO classes do the ORM. 
For normal pho 1000 lines, from php 5.4 to PHP 7.1 would take 5-15 min, depending if you have everything set up. There not that many things changed. Would take longer to set everything up and make sure the old script runs ( db, modules, etc ) If they use some kind of library that doesn't work with PHP 7.1 tho ( had Judy arrays for example), then it can take much longer.
mysql\_\* functions, to be specific. If you're using PDO already (or mysqli), then changes should be minimal/none.
The correct solution in laravel is to use a cursor.
ORM should not really determine your project structure. Be it Eloquent/Doctrine/Propel/any other ORM, you still can (and in larger projects - even should) have repositories, gateways, query objects etc. ORM only makes it just a little bit easier for you. I try to organize my code by domain. So in a blog app I would have directories like `src/User`, `src/Post` etc., and each would have directories like `Models`, `Exceptions` and so on.
Done it on several projects now, generally if it's been written using well favoured solid frameworks then it's pretty trivial. OTOH I have some code originally developed for a client by a complete cowboy back in the early 2000s on some very early version of 5 which had been persuaded up to 5.3 and it's the end of the road - complete rewrite now needed. But 9 times out of 10 if the code is in production it's probably going to be not too hard.
&gt; the slow down (and high memory usage) comes when it converts the result set into collections This is my experience too. Heck just outputting a variable via Eloquent (eg `$user-email`) goes through 4-5 separate functions. Seems trivial but outputting dozens of variables on a page it very soon adds up.
I've done a mysql -&gt; mysqli and it was pretty painless, however the previous code was already (sort of) broken into models (100ish). Took the opportunity to go to parameterized queries/prepared statements; killed a lot of tech debt in one shot. 
&lt;?php session\_start(\['cookie\_lifetime' =&gt; 86400,'cookie\_secure' =&gt; FALSE,'cookie\_httponly' =&gt; TRUE,\]); &amp;#x200B; It creates a session cookie with the desired expiration date but the problem is that I cannot change or delete the cookie itself. Is there any way to update the expiration date on a session cookie? 
[https://stackoverflow.com/questions/2241769/php-how-to-destroy-the-session-cookie-correctly](https://stackoverflow.com/questions/2241769/php-how-to-destroy-the-session-cookie-correctly)
In the same layer of hierarchy, I would have a lot more little classes that hit the database. Then none of the ORM classes that hit the database. I'll have the boring PDO query data code anyways for identified slow queries. But, instead of generated code. Every bit of everything would be written by me. ORMs-- not great for performance. But, usually they provide tolerable response and allow me more rapid development using a consistent code pattern. I use ORMs. I have other shit to do than write a couple hundred SQL queries in PDO form.
I saw some mysql shim, but never tested it. From what I understand, you just need to include it and it should work. Not the best thing to do, but can same time and headaches. https://github.com/dshafik/php7-mysql-shim
I did an MVC framework in PHP4 (2000/2001), and did many client projects with it. PHP5 came out, much worked OK. Had one guy call me in 2017 saying "this doesn't work". Someone upped their server to 5.6, and there was an issue with references and some tricky $this-&gt; stuff (which was about the only way to have it work in 2002, when this project was done). Took about 2 hours to track the issues and get it to 5.6, but it just wouldn't go to 7. Some more internal stuff that was just completely redone in 7, and I'd indicated they *really* needed to rebuild in something modern. They did get 15 years from code originally written for PHP4, but still weren't quite happy about 'starting over'. Even if the PHP code could have run, there's so much else that's changed about the front-end (mobile, responsive, etc) that a larger rebuild was needed anyway (there was no xhttp stuff in 2001!) I recently found out another project from that same codebase origin is also running - at least the base core is, but I don't have a login anymore. I'm sure the inside has been upgraded some, but it's odd to look at stuff you write now and think it'll still be in production, untouched, 15-20 years from now. 
coincidentally, I *just* used this today on a crappy project someone needed a hand with. seemed to work ok, but then they managed to downgrade the php installation for that vhost back to 5.6, so the old code kept running as is.
Use Phan in backwards compatibility mode? `-b, --backward-compatibility-checks Check for potential PHP 5 -&gt; PHP 7 BC issues` https://github.com/phan/phan/blob/master/README.md &gt; About how many hours would it take an experienced PHP dev to migrate 1000 lines of code? Honestly, Phan might be overkill for so little lines of code. An experienced dev could load up in PhpStorm, set the project to PHP7, and fix all the errors in the gutter. Would take less than an hour? 
Man, my very first e-commerce, for-an-employer website https://flyfood.arl.arizona.edu/ went live in September 2000 in PHP 3 and was successfully ported all the way up to 7.0 before they finally pulled the plug on *the server it was on* in October 2017.... I was able to reach the department and they said they rewrote it in NodeJS but they were amazed how good the code was for a college intern lol
&gt; I meant the core ability to 'Go to declaration' on a class/method/variable in the code and actually end up in the right place through proper symbol linking and not just fuzzy matching. Checkout [code navigation](https://code.visualstudio.com/docs/editor/editingevolved) in vscode, it sounds like you may not be familiar with it. All the languages I work with support symbol linking. &gt; When you mention "when it comes to PHP development" - why is it be any different for PHP than to Java or .NET? If you have an extremely large PHP application with many classes and many people using it, why is fuzzy matching ok there, but not sufficient for Java or .NET? I am sure big projects in .NET are still using Visual Studio. No doubt big Java based projects are using Intellij (or Netbeans, or whatever). I think I mentioned in another portion of this post that if I was working on a massive PHP based backend I'd probably consider switching back to PhpStorm. It has some added bells and whistles I think may come in handy. That said, with each passing VSCode release I'm less and less sure that holds up anymore... I work on good sized PHP projects from time to time and find the debugging and language support to be everything I need. I'm not trying to shit on Netbeans. It would be far down my list of editors to recommend for PHP development based on experience but that's just my opinion. If Netbeans is what you know and you enjoy using it then more power to you.
Is that because redis couldn't handle 100k+ connections, or for another reason?
Nice read! My one big problem with my own app is that I either have to write a billion different queries for almost-but-not-quite-similar views or just have one big fat include all query that will get me what I need all the time. Right now I’m doing the latter but it’s a though choice. 
http://php.net/manual/en/function.session-regenerate-id.php this is actually a best practice whenever you change the users context in your app (login/logout/update privileges).
&gt; To solve it, nr of rows for all tables are stored in one isolated table and is updated whenever entity is persisted or removed. This is a goos advice when the time comes for it. Had to do that some time ago for PostgreSQL. But not on the total-rows-in-table, but per specific groups on a large table (&gt;30 mio records total). Only catch is to make 120% certain the counts are always correct, which was achieved by using triggers all the way. The application doesn't even need to be aware of it, the counts are transaction safe, waa a spot kn optimization. 
This might get downvoted since it’s the PHP sub, but I used JavaScript. I have a promo code cookie that changes frequently and doing REQUEST on the cookie wouldn’t get the updated promo if it was different in the URL unless the page was refreshed. I had to use JavaScript to check if the cookie exists, check the URL if the promo is different than the cookie, and if so delete the cookie and create a new one. 
I am pretty sure OP is looking to handle the PHP session cookie that is linked to all of the data stored in the $_SESSION array on the server side.
While I don't suggest downvoting it, I do suggest people discussing the approach. It's a viable approach. However, it leave the old session intact on the server. Depending on your security requirements, this might be a problem, but as with all things security related, your first, modulus(5)th step, and final step is to do a risk assessment, to determine the level of risk that you're willing to take. If session hijacking is possible, then take a few moments to question whether or not to regenerate the session on the server side, rather than the client side, and remember that the client can never be implicitely trusted.
This is good to know! I’m a noob managing a large website so most of my knowledge is on the front end. This was really insightful, thanks!
I think you should try to write your own logging system. It is not hard and it can be helpful in future.
Thank you, that did the trick.
With confidence 
Depends on the type. ActiveRecord is definitely going to start running into performance issues not so much on the dataset size but how complex the application is. Data mappers like Doctrine have a steeper learning curve and more up-front dev required but will likely gain you a lot of performance over AR or plain SQL in a complex system. 
What do you do when two services need to read and/or modify the same entity?
There are [some tools](https://github.com/rectorphp/rector) that can help you with the migration process and will reduce the amount of manual work you need to do, but it's all going to depend on your codebase.
I'd spare myself all the trouble and go with auth0 
Wamp is the server. Windows Apache MySQL PHP It’s not silverstripe specific and it’s not the only option but it’s a fairly painless way to start out. Heaps of info online about setting up a wamp stack on windows. Also referred to as Lamp for Linux Mamp for Mac. Or Xamp is the generic term. 
Would you mind sharing why you think ORM's are an anti pattern? I've heard that before, but I don't recall the reasoning.
1000 lines of code? Should take an afternoon. 5.4 -&gt;5.6 is the biggest hurdle. After that it's pretty easy. 
Sorry to be a bit harsh, but an authentication system is only simple if it's bad. There are so many details and pitfalls that you either really need to know what you do or be prepared to do a lot of research (and be prepared that it might even then be shitty). Some bullet points (not all of them might be needed for a single system, and I'm very sure I forgot a lot): \- Password policy (minimum length, maximum length (to avoid DoS attacks on your server by excessively long passwords), special characters), \- Selecting a password hashing algorithm that is secure; bonus points for details such as the \~70 character limit for bcrypt. \- Brute force protection for login that really works and doesn't mean major pain for users. \- Concealing if a user with a given name or email address is already registered. \- Password recovery that doesn't open security holes. \- Maybe two-factor authentication. \- Concept for authorization, depending on e.g. URL, voters, roles, user groups, ACLs (otherwise your login wouldn't be meaningful). \- Not creating a big ball of mud where user information and authorization are spread over the whole codebase. \- User administration, including locking and unlocking of users, assigning permissions, forcing password change, forcing logout. \- Intercepting access to forbidden pages and redirect correctly after login. \- CSRF token handling (including token regeneration and cache interactions). \- Standard security measures such as avoiding SQL injection matter too, of course. \- Controlling browser cache for confidential information, so that the browser's back button cannot be misused after logout. &amp;#x200B; I'm not advocating against self-building authentication, but a really big mistake is to underestimate what is required to do it well.
I've had lots of success installing it with https://bitnami.com/stacks/installer. 
Hey, I'd suggest looking into the lessons provided by SilverStripe - there is one on how to set up your local dev environment: [https://www.silverstripe.org/learn/lessons/v4/up-and-running-setting-up-a-local-silverstripe-dev-environment-1](https://www.silverstripe.org/learn/lessons/v4/up-and-running-setting-up-a-local-silverstripe-dev-environment-1). Otherwise the previously mentioned Xampp should do - it should work almost out of the box. &amp;#x200B; \-- Peter
It should be relatively straight forward - use some tools like phan or psalm to inspect the code - they'll help highlight things. &amp;#x200B; Alternatively, run it through php 7.1 and fix any errors. It might be the quickest approach.
For the most part should work out of the box with the exception of deprecated functions. You can either shim those or write your own or you know ... actually use a modern approach and refactor those pieces. Unless it's too cobbled up. Things like Phan help. All in all, I would highly recommend getting Sentry.io. Because even if your app works at first glance, maybe it breaks somewhere for someone and you likely don't know about it. Sentry.io is a error logging service with a really nice user interface and it breaks down fatal exceptions and in few clicks you can see where you have problems with your code without writing a single unit test. Honestly though, it will mostly work. PHP 7 deprecated mostly insecure garbage that should've been gone a long time ago. 
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
use exakat on your code : there is a compatiblity review that will spot all incompatibilities and all code upgrade from PHP 5.4 to 7.1 (and beyond if you need). [http://www.exakat.io/](http://www.exakat.io/) &amp;#x200B; There is a break down of issues, versions by version and a general view of the compatibility for the whole project. [https://www.exakat.io/reports/yoastseo/datas/compatibility\_version.html#](https://www.exakat.io/reports/yoastseo/datas/compatibility_version.html#)
I'm not that fond over the idea to use the same `Article` class for both write &amp; read operations. Usually there are properties that you can't set when creating &amp; updating an entity, assume there is a field call `created` that is a timestamp. Can I set that on the `Article` object when doing an `update` and it updates? Probably not. How would the user of the API know? By reading the code. That makes an API unclear. It is not unusual that entities have columns that are read only, or only updated by certain conditions or state, by reusing the same `Article` class it makes it harder reason about the code because of this. I have had bugs because of this unclear definition of what create or update really means. My recommendation is to have more specific methods for each use case. ``` public function create(string $title, string $content, bool $free_trials); public function updateTitle(int $id, string $title); public function updateTitleAndContent(int $id, string $title, string $content); ``` You always know exactly what the use case is, because you are designing the out most API, REST endpoint or whatever. If there are too many properties that need to be set, then you can have an specific class for that use case, e.g. `ArticleCreation`, or a builder class. Consequently you only add methods you need &amp; don't do any over engineering for use cases that don't exist, this also means that you remove methods that are no longer in use. And when talking about, I'm not that fond about the general `find` method either, because it fetches properties that you don't need. When working with relational databases, everything is a specific view on a combination of tables &amp; columns at that moment, it is not an object. This is especially true if working with multiple APIs against your product. Let say there is a user REST API and an admin REST API, do they see the same things? Do they have the same understanding about the model? No. If you need two columns in the `Article` table &amp; one column in the `Author` table, you should write a SQL query with a JOIN for that use case. 
Once you have mysql_ in your legacy code, it's not so simple. I have a case where the database records done by mysql_ CRUD have all garbled up encoding. If you just change it to mysqli_, the new encoding is fine, but accessing the old records comes out garbled. So, here's a relatively simple case where you will see zero errors and yet everything is fucked :)
Do they have a forgot password flow?
&gt;I think you should try to write your own logging system. It is not hard and it can be helpful in future. A login system is not hard? It's one of the most complex things you can do in programming and get it right. It touches on every area of application security, it's very difficult to do correctly.
&gt; but an authentication system is only simple if it's bad I've been waiting for comments like the OPs to pop up and I'm glad someone was around to answer them and answer them well. Thanks for your effort. Login system touch on literally every part of application security it's extremely difficult to do it well.
&gt;Dude pull your head out of your ass. No one is impressed. I'm not trying to impress anyone. I assume people do things properly, there is nothing wrong in making those assumptions of fellow professionals. 
&gt;What do you mean by gambling by not doing repeatable builds? Does deployer not let you rerun a build? :/ Does deployer allow you to rebuild your entire stack as part of the build process or just build your application?
&gt;I dont use docker on my servers.... yet I'd look into it even more so if you're running/building applications for customers whose businesses depend on it. If you're just building apps for yourself you can probably get away with not using it. If you're not ready for docker yet then look at using VM's and something like Chef or Puppet they will ensure you can repeat the application stack build so it is identical everywhere you run it.
&gt; Do they have a forgot password flow? Yes but they call it 'Reminders' [https://cartalyst.com/manual/sentinel/2.0#reminder](https://cartalyst.com/manual/sentinel/2.0#reminder) A list of the core features from the documentation: * Authentication. * Authorization. * Registration. * Users &amp; Roles Management. * Driver based permission system. * Flexible activation scenarios. * Reminders (password reset). * Inter-account throttling with DDoS protection. * Custom hashing strategies. * Multiple sessions. * Multiple login columns. * Integration with Laravel. * Allow use of multiple ORM implementations. * Native facade for easy usage outside Laravel. * Interface driven (your own implementations at will). As above though you're free to use as much or as little as you like it doesn't require to implement all the features for it to work.
Question is somewhat ambiguous as to what you mean by "instance" - You can have as many running instances of php.exe as your memory allows. Including of different versions, if properly configured. Alternatively, perhaps your vulnerability scanner is just telling you that a particular version of PHP has multiple vulnerabilities in it and is reporting them as multiple independent attack vectors (which they would be).
Not sure what you mean. You are looking through the results of a vuln scan and it says that there are multiple PHP vulns, yes? What sort of vulns? Problems with the way that PHP has been configured? Generally there's only one installation of PHP on a server, even if the server is hosting multiple websites. 
For example, from the vuln scan report: IP 1.2.3.4 will say “Apache 2.2.x &lt; 2.2.28 Multiple Vulnerabilities. Upgrade to Apache version 2.2.29 or later.” Then later in the later, it will say: IP 1.2.3.4 “Apache 2.2.x &lt; 2.2.33-dev / 2.4.x &lt; 2.4.26 Multiple Vulnerabilities. Upgrade to Apache version 2.2.33-dev / 2.4.26 or later.” We are trying to condense this massive scan report into something smaller and easier for IT to fix. Do we need to tell them about BOTH vulnerabilities above??
I agree with you totally. But the OP was talking about retrofitting some "basic" auth onto a home-made CMS that was created "some time ago" and where the original developer is no longer available. So this is probably a bit of cobbled-together code that runs the company's website, and they've decided that the current arrangement whereby anyone in the org can update the pages is a bit suboptimal. Sure, if you're creating a CMS from scratch then you'd do things properly. But I was trying to provide a pragmatic answer to the actual question that was asked, rather than give a textbook reply which simply wouldn't have worked in this instance. But yes, doing security properly from the start would have been the right way. 
Hello redditor, this is a spam post from a scam company, be aware that even if you get something from them it will be the worst code you can imagine. &amp;#x200B;
Most likely, no. In the first instance the vulnerabilities game is telling you to upgrade to 2.2.29 and the next is telling you to upgrade to 2.4.26 which would include any and all fixes from 2.2.29. So as long as they update to the most recent recommended upgrade it should include all the fixes for all the other versions.
WUT?
[https://www.slimframework.com/2019/01/15/slim-3.12.0.html](https://www.slimframework.com/2019/01/15/slim-3.12.0.html) (to be sure)
Thank you.
So for the example above, do I just need to find the solution that has the HIGHEST version number? Here are other examples for IP 1.2.3.4: “PHP 5.4.x &lt; 5.4.30 Multiple Vulnerabilities. Upgrade to PHP version 5.4.30 or later.” “PHP 5.4.x &lt; 5.4.45 Multiple Vulnerabilities. Upgrade to PHP version 5.4.45 or later.” When reporting to IT, I really only need to tell them to upgrade to 5.4.45 or later, correct? Sorry for the newbness here. When I researched last night, someone on Quora had said you could have more than 1 instance of PHP installed on a single server.
It depends, but usually these two services then use the same class (service or repository) as a dependency (injected via constructor injection). In my case, an "Entity" is just a holder of pure data (no complex logic, maximum simple and generic validation rules, e.g. id &gt; 0). Services are responsible for business logic. Services perform more complex validations in the respective context, calculates complex things and read/persist data via the repository. An Entitiy is not like a "global variable". The Entitiy/DTO represents only the current state, in memory, since the data in the database could be changed while you are working with the entity.
Yes, but the summary makes sense only after reading whole content before. Otherwise is like "= 5" part of the equation.
that error doesnt make much sense, since 30 is obviously lower than 45. so yes, upgrading to 45 should also fix &lt;30 errors. that's how numbers work.
Do you know what's on this server? Is it a physical box running multiple VMs, for example? I'm assuming it's not. To be frank, if it's running PHP 5.4 and you don't intend to upgrade to 7.x, then you might as well not bother doing anything. Is this a Windows or Linux box? Either way, try searching for php.ini and tell us how many copies it finds. List the full paths if it's not too sensitive.
An excellent point (more about cursors here: https://stackoverflow.com/questions/45464676/what-is-the-difference-between-laravel-cursor-and-laravel-chunk-method and https://laravel.com/docs/5.7/eloquent )
Or, you know, the official docs, [https://laravel.com/docs/5.7](https://laravel.com/docs/5.7)
Using FTP is many cases is still the proper thing to do. Just because it's basic doesn't mean it's improper.
There is a library that convert the code automatically, I crossed that bridge. However, it doesn't work correctly. :-( 
&gt;I'll bet you thought nobody would try :) I thought so because people are lazy, but I secretly hoped one would and figure out something, so big thanks for trying it! :D Both Box &amp; PHP-Scoper have some unorthodox setup due to their nature, so I'm leveraging Make for it. It's not cross-platform, but that's the only viable solution I found to work out without too much of a hassle. I can see some failures, errors and skipped tests which actually might be the problematic ones. For box, the proper way to run the tests is `make tu_box` (just running `make` will show all the commands). That said after running once you can just go with `bin/phpunit` it will work fine. With phpdbg though: ``` &gt;PHPUnit 7.5.0 by Sebastian Bergmann and contributors. ............................................................... 63 / 763 ( 8%) ............................................................... 126 / 763 ( 16%) ...................................SSSSSS...................... 189 / 763 ( 24%) ............................................................... 252 / 763 ( 33%) ..........S.................................................... 315 / 763 ( 41%) ............................................................... 378 / 763 ( 49%) ............................................................... 441 / 763 ( 57%) ............................................................... 504 / 763 ( 66%) ...............................EEEEEEEE ``` That's 30+min and not finished. I think it's linked to the `KevinGH\Box\Console\Command\CompileTest` but strangely enough it is occurring only when running all the tests together... The `Phar` class and the PHPUnit run in separate process features might also play a part in it. I can confirm however that it works fine on PHP-Scoper right now. That's cool to see the previous issues have been fixed :) I'll switch back to phpdbg for it and hope it will keep working well!
&gt;it is impossible to have large database affects ORM speed The paper does not claim otherwise. In my opinion, and as stated in the conclusion, the issue with ORMs in general (not just Eloquent) is not about speed but possible misuses. The layer of abstraction ORMs add compared to raw SQL queries makes it really to forget what is done under the hood, possibly leading to inefficient queries. For instance, because Eloquent does not require you to write explicit joins but allows you to do join tables with a variety of methods, one may not use the best one, leading to N+1 problems. As long as you know what you are doing and why you are doing it, you can definitely use an ORM and maintain a good level of performance as shown here.
If instance means running different versions of PHP (Apache) a the same time, then, in theory, you could run as many as you want (using different ports). I write how to do it under windows: https://medium.com/cook-php/running-different-versions-of-php-under-windows-b16db9d864ee However, it is anything but common. However, if instance means different threads, then it is not a security issue. And since you are talking about security, it is simple: * open ports could lead to insecurities. So, the rule of thumb says "less port open = fewer insecurities.". Of course, we can't close the Apache's port (usually the 80/443 port) for obvious reason, but if Apache and PHP are patched then we are good. 
My older colleague just confirmed what you wrote. Not common but possible. He said to look at the ports and that would be an indicator there may be different versions of php installed. But most likely, it’s just 1 php installed and the vuln scanner is just reporting all possible vulns.
&gt;Using FTP is many cases is still the proper thing to do Maybe things have moved on since I last used it but how do you reproduce a build over FTP? Even that aside surely in the past 10years at least people have been transferring files over a secure protocol like SSH rather than an insecure one like FTP?
Ah, my bad. I kinda focused on other comments first instead of reading the article. Now I see the difference. I just read it and I must say it is very impressive, nice job. It would be interesting to see similar one for Doctrine which is using DataMapper pattern and has Identity-Map. &amp;#x200B;
There are multiple reasons. 1. They vioalte the SRP (the S in SOLID). Data should be separated from from the behavior (business logic). ORM's mixing everyting together. 2. ORM Models become God classes. 3. ORM's are CRUD (database) driven and not domain driven. 4. The most ORM's uses the Active-Record Antipatern. An object should not contain data AND persist or load it's data, this is also against the SRP.
I'm on my phone so I don't have the link but there is some good data out there that shows you the speed difference between get, chunk, and cursors on different size data sets as well.
Ah okay, that makes sense. Yeah, I've definitely had some models that become a God class. Thanks for the insight.
I worked for a company last year, were we needed to move an application from php 5.6 to 7.0, without PHPStan it would be impossible to do that in the short-term. There was a lot to change, thanks Ondřej Mirtes, you done something amazing for the PHP ecosystem :)
Great work Ondrej! Any plans on tagging a stable release?
It's already tagged of course :)
Is it? I'm was talking about a major 1.0 release 🙂
It is possible to have multiple PHP versions by manually compiling them, using something like docker and some installers allow them to install side-by-side. But that's not what is going on here I believe, you just get reported different vulnerabilities fixed at different versions, not necessarily having multiple versions. Also PHP 5.4 is old... You need to go to PHP 7.1 or higher if you want to have a version that is still actively supported and will have fixes for the latest vulnerabilities. If your PHP is actually being used for something that's not to be done without knowledge and consent of the developers as it might break the projects.
Well, in my eyes, it's just a number. I haven't released 1.0 yet because I want to do that when there will be no obvious BC breaks on the horizon. When I plan to release multiple 0.x a year (with breaking compatibility) because the tool is still too young and with areas in the discovery phase, it's too soon to release 1.0 with a long-term support. When I release 1.0, I want to stay in that range for multiple years. I don't see any practical difference if 0.11 was called 11.0 today. I want 1.0 to be a major milestone. For example Composer also didn't get there for multiple years so I think it's fine :)
you're correct, though the keyword is "or later". 5.4 hasn't been officially supported for 3 years, even 7.0 isn't supported anymore by now. an upgrade is more than overdue, and not just minor versions as the report says, but ideally to 7.3.x. That'll probably take some time as they'll very likely need to fix the code up and make it compatible. give them the time. security is no joke. any specific reason why you don't just give them the security report and let them solve it on their own? I mean that's kinda their job, isn't it?
Not to mention, the Active Record pattern makes testing a huge pain in the ass.
that really depends on code quality, as well as what it does. it could just magically work, or it could require a full rewrite, or anything in between.
You can run as many php instances as you want (unless limited by available resources). But it seems it has absolutely nothing to do with your problem.
&gt; Maybe things have moved on since I last used it but how do you reproduce a build over FTP? Derp, derp, derp. A build and how you transfer files are two different things. This is like you're trying to be really smart and talk about best practices but you clearly don't know what they are. Cargo cult. &gt; Even that aside surely in the past 10years at least people have been transferring files over a secure protocol like SSH rather than an insecure one like FTP? Many people have been doing many things. FTP in a VPN is just as secure using OpenSSH to transfer files. Mr Enterprise, doesn't know of enterprise practices like using a VPN. As I said, pull your head out of your ass.
If he's running CentOS 7 then he's fine until 2024. Red Hat backports security fixes to PHP even after it becomes EOL from the vendor. They only stop once the CentOS release becomes EOL.
All you post is blogspam for one blog. Why not try making real content and actually contribute?
Ondřej Mirtes (and contributors): congratz on this. I knew it was hige from the day I installed it and learned a lot about myself 9and my skills) hahah, thanks for pointing that out. ;-)
Interesting, didn't know about those backports. That makes CentOS an interesting option for running PHP servers. But if your projects use a framework or have a bunch of dependencies, I guess it matters little. You're still going to get forced indirectly to update PHP at some point if you want to keep those dependencies supported and secure.
What I’m getting at is that if you need an entity manager to ensure hat changes to an entity are tracked across all services you’re essentially building an ORM, right?
&gt; As I said, pull your head out of your ass. I was compiling an answer but then seen the petty comments and snide remarks throughout the reply and decided it's pointless engaging in an educated conversation with an *adult* that resorts to name calling and using the word 'derp'. Have a nice day
This tool is godsend. &amp;#x200B; Allow any develop of any level to achieve robust PHP code. &amp;#x200B; Thank you so much.
I’m going to guess (and hope) that you misread the OP? He’s asking about authentication, not logging. 
Top work as ever. Thank you for your hard work.
If you don't like it, don't use it. In facts, Symfony works without Flex. It is just a tool for project configuration. I don't want to change your mind, because this is open-source, open-world. There is more than one way to do it. Pick the one you like the most, you fit most :D
That's the first time anyone on the internet has been convinced by evidence to change their mind ... I'm glad it's working ... and the best thing to do when you find a bug is make noise about it, really loud noise .... you may find bugs, nothing is perfect ;)
&gt; I am learning cyber security and reviewing our network vulnerability scans. There are several unique PHP vulnerabilities on a single server. This means that there are several PHP instances running on that server, right? No. The vulnerabilities you listed are vulnerabilities in Apache and NOT PHP, they have literally nothing to do with PHP. &gt; “Apache 2.2.x &lt; 2.2.28 Multiple Vulnerabilities. Upgrade to Apache version 2.2.29 or later.” &gt; &gt; “Apache 2.2.x &lt; 2.2.33-dev / 2.4.x &lt; 2.4.26 Multiple Vulnerabilities. Upgrade to Apache version 2.2.33-dev / 2.4.26 or later.” Your error log literally tells you the vulnerabilities are with Apache. Looking into the CVE's they are down to Apache mod\_headers, mod\_deflate, mod\_status, mod\_cgid and a few functions like ap\_get\_basic\_auth\_pw and ap\_hook\_process\_connection, again none of this has anything to do with PHP and I'm not sure how you've come to that conclusion? &gt; Do we need to tell them about BOTH vulnerabilities above?? Yes of course you do. You need to tell them about all the vulnerabilities. You are getting multiple ones because your Apache is so far out of date. The first bunch of CVEs has been fixed in version 2.2.29 of Apache or later and the second bunch have been fixed in versions 2.4.26 or later, hence the report telling you to upgrade. Upgrading past 2.4.26 will include fixes for both of these warnings. &gt; Just because it’s a single server does NOT mean there can only be one PHP instance. That is correct you can run multiple versions of PHP on the same server by running them to different ports or running the PHP versions in containers, you can run every single version ever released if you wish. However as mentioned above this has literally nothing to do with PHP.
Don't want this comment to get lost... https://www.reddit.com/r/PHP/comments/agjmuk/how_many_php_instances_can_i_have_on_a_single/ee6q8nr/ Unless you have a super non-standard install-- the configurations are in one or more files named php.ini . For instance, I have a php.ini for running PHP on the command line and a php.ini for running PHP via fpm and responds to system calls that tell it to process a php script. Permit the linux filesystem context, those files are under the /etc/php7.3/ directory. I am running a singular installation of PHP 7.3 on that machine. I have another box with both PHP 7.2 and 7.3 installed-- with four php.ini files similarly as above. However, only the PHP 7.3 is running. PHP 7.2 is installed and there-- it just never does anything. Those are the most likely situations. Even a shared hosting site (shudders) I had to do some work on offers multiple choices for PHP versions-- but you are merely put on a host running that singular version. Can you run multiple versions of PHP at once--? yes. Is it something most people do--? no. Is it likely you have more than one active installation of PHP--? highly unlikely. Multi-threading, it is a thing, you may have your single installtion of PHP running multiple times all at once. That is a thing. It is likely.
He's just an idiot.
you could wrap your queries up in something like Zend's query builder then section off each logical section behind a function Then each new view is a composable set of function calls or research Datomic/Clojure 
I can recommend Laradock or Devilbox, both dockerized.
Yes, and it is also completely unnecessary (and bad) to track the entity status within a "global variable" aka "entity manager" because it could cause unwanted side effects and doesn't perform very well with a lot of data.
i would use container for this kind of task.
&gt; I was compiling an answer but then seen the petty comments and snide remarks throughout the reply and decided it's pointless engaging in an educated conversation with an adult that resorts to name calling and using the word 'derp'. Compiling an answer? An answer to what, there was no question. Also, there has been no name calling, merely mocking. There is a difference. Let's be serious. You started off by gatekeeping, then you doubled down on the gatekeeping. Then you exposed yourself as a cargo cult member. There is no real response to that. 
If you're on Ubuntu I'd definitely recommend Docker for this (probably with docker-compose)
Firstly, thanks for all your hard work :) It goes along way in this community. The PHP community seems to be very relaxed on versioning which it makes developer lives that much more difficult. It's not just a number, you elude to this when you mention your reasoning for not tagging a 1.0 release yet. Versioning conveys many things about a project. It communicates to myself and my team the general level of effort to update a dependency, for instance. There's a new minor or patch version? Probably pretty easy. There's a new major version? Do some more research before updating that bad boy. Project is pre-1.0.0? The author hasn't determined it's stable (not a bad thing!! but expect changes). All this to say, please consider using Semver for your project. It sucks having to understand every project dependency/tool's unique versioning scheme (Laravel is a glaring example). You've built an incredible tool, thanks again!
Hi, thanks for the kind words 😊 I’m aware of semver and PHPStan adheres to it. Nothing breaks in 0.x.y when y increases. BC breaks are allowed when x is increased.
But I plan to commit more to it. For example add @api annotations to interfaces which are actually meant to be used. Good PHPStan architecture with SOLID principles actually fires me in the back sometimes because some internal stuff is accessible to extension developers more than I like 😊
You don't, [PHP 5.6 and 7.0 are EOL](http://php.net/supported-versions.php)
Heh. I was mostly commenting on "significantly more unstable and unreliable" part of the post. Glad you're posting, making people double think check their "phpdbg is unstable" assumptions. &gt; when you find a bug is make noise about it, really loud noise Where? I can report segfaults and unable to fork errors today probably. I use phpdbg but work around crashes in the code using `( new \SebastianBergmann\Environment\Runtime() )-&gt;isPHPDBG();`. A gross hack, but it's faster to run the tests twice (once with phpdbg and once without) than using Xdebug for coverage... 
&gt; BC breaks are allowed when x is increased In the case of Semver this should not be true. Given major.minor.patch, BC breaks are only allowed when incrementing the major number. From [semver](https://semver.org/) docs: 1. MAJOR version when you make incompatible API changes 2. MINOR version when you add functionality in a backwards-compatible manner, and 3. PATCH version when you make backwards-compatible bug fixes.
Yes, but the rules are different for &lt;1.0. See rule number 4: https://semver.org/ I’m a little bit more strict in that I consider increase of X in “0.X.Y” as a major version, publish an article etc. And I break compatibility only when X is increased, not Y.
If Docker et. al solutions aren't possible (for whatever reason) you can compile two instances of PHP and switch between them by renaming the programs. Say you have `/usr/local/bin/php` (which is 7.0) and `/usr/local/bin/php-5.6`. To switch to 5.6 just rename `php` =&gt; `php-7.0` and `php5.6` =&gt;`php`.
Writing your SQL directly with no wrappers is a huge red flag even 5 years ago. Even in my PHP 4.x days I had wrappers around mysql_* functions so it's trivial to convert to MySQLi or PDO by changing it in one spot. Captain hindsight strikes again.
Niccccce. I hadn't realized they'd defined Major version 0.x.y specifications. Awesome! 
https://github.com/phpenv/phpenv It's a bit reading to get started. But works for me.
While others are right to recommend Docker, to answer the direct question, you can install multiple version of PHP just fine by installing the packages as normal. You'll need to add the PPA for older versions, as explained here https://askubuntu.com/questions/756181/installing-php-5-6-on-xenial-16-04 Once installed, you have need toggle which version you're using at the CLI and in your application server. On the CLI you can change the version being used with sudo update-alternatives --config php For changing the application server version, it depends on the application server. For Apache, you can do that for example to switch from 7.2 to 5.6 sudo a2dismod php7.2 sudo a2enmod php5.6 sudo service apache2 restart
First of all, thank you for the thorough critique! I really appreciate when others take time out of their busy day to help others learn and grow. Funnily enough, I actually agree with basically all that you're saying, which tells me that I failed to communicate my ideas effectively without confusion. I'll try and address each of your problem points one-by-one, adding some additional detail to help clarify what I was originally trying to say. &gt;I'm not that fond over the idea to use the same `Article` class for both write &amp; read operations. I agree with this point outright. I don't like the idea of mixing of read and write concerns being melded together, and this is a big problem with ORM in many cases. So, allow me to clarify how my original point *should* work with your own! I defined a contract for an `App\ArticleRepository`. This interface *would not* be implemented by the domain model, and in fact I think it's worth adding some additional information that I believe domain models should be as close to data objects as possible. In other words, an `App\Article` is just an object with properties; it could have getters/setters, but I personally don't mind just setting the rule for myself that a domain model, in most cases, should not be changed after instantiation (this is much easier to handle in Go due to the option of passing either by pointer or by copy). Of course that may open another question, that being what *does* implement the ArticleRepository contract. Without bulking this comment up with implementation, allow me to give an example. Let's say we wanted to implement a SQL database using PDO. We could create an implementation of the ArticleRepository interface with a fully qualified class name of `App\DB\PDO\ArticleRepository`. Any system which wants to integrate with our ArticleRepository goes through our domain, aka our `App\ArticleRepository` interface, while the implementation lives somewhere else entirely. This also handles the decoupling of the data model from the data layer entirely. &gt;Usually there are properties that you can't set when creating &amp; updating an entity, assume there is a field call `created` that is a timestamp. Can I set that on the `Article` object when doing an update and it updates? Probably not. How would the user of the API know? By reading the code. That makes an API unclear. I agree with your primary concern here, that being that the API is unclear if there are awkward business rules about what you *can* and *cannot* set on a domain model when updating. I believe it is impossible to answer this concern without admitting that my response relies heavily on implementation details and business logic. I believe that it is *convention* for us to allow the database to handle things like setting a `created` timestamp, or mutating an `updated` timestamp. This is an implementation detail, and it's not always in our hands to control this. Your domain contracts should define out expectations of your API clearly, and if you intend to allow your database to handle timestamps then certainly your ArticleRepository contract should reflect that! However, we don't always have to let the database handle this problem. Depending on the data storage technique we are using (which may be SQL, NoSQL, or even file-based) we may not have the luxury of allowing the database to handle setting a timestamp on insert. A common pattern I've seen to handle this is to wrap Repositories in Services, which is another interface (eg. `App\ArticleService`) in which the implementation handles business rules. The service can provide a clearer API, such as specifying what the developer is able to change in an update. An example ArticleService that follows your proposed problem may look like the following: &lt;?php namespace App; use App\Article; interface ArticleService { public function create(string $title, string $content, bool $freeTrials) : Article; public function update(string $title, string $content, bool $freeTrials, Article $article); public function updateTitle(string $title, Article $article); public function updateContent(string $content, Article $article); public function updateFreeTrials(bool $freeTrials, Article $article); } Here, I have added an `update()` method which allows multiple fields to be updated in one request. If only one field needs to change, field-specific update methods are also provided. As a small aside, I personally feel that classes get bloated when you add methods to handle varying degree's of complexity such as "updateTitleAndContent". That's mostly personal preference though, it's actually quite convenient at a small scale. This also allows us to avoids the null primitives problem you outlined above. Since a services job is to implement business logic, the ArticleService would be required to handle the problem of state. Columns which are only updated when certain conditions are met can remain that way, while columns which can be updated freely are free to do so. &gt;If there are too many properties that need to be set, then you can have an specific class for that use case, e.g. `ArticleCreation` or a builder class. No real comment of disagreement here, just wanted to say that this is a great way to handle this problem. I personally would keep to defining contracts, as Hexagonal Architecture states that for systems to intercommunicate they *are required* to go through your domain. Other than that, excellent addition. &gt;And when talking about, I'm not that fond about the general `find` method either, because it fetches properties that you don't need. I hope that my explanation of the separation between an Article, an ArticleRepository and an ArticleService helps clarify this. I think this is mostly down to naming convention. In Go, it's common to have the repository implement methods with names such as Find, Create, Update and Delete, while the service implements methods such as FindArticle, CreateArticle, UpdateArticle and DeleteArticle. In any case, naming conventions are just that, convention, and so long as you remain consistent I see no problem with either methodology. &gt;If you need two columns in the `Article` table &amp; one column in the `Author` table, you should write a SQL query with a JOIN for that use case. This is where I feel the repository model and domain contracts really shines. Repository implementations can easily *wrap each other*. Not to mention, through the use of contracts, they can be *substituted* for each other based on context. Maybe we have both an `App\DB\PDO\ArticleRepository` and a `App\DB\PDO\AuthoredArticleRepository`. Using composition, the AuthoredArticleRepository can defer create, update and delete calls to the ArticleRepository, but it can perform it's own find with joins the authors table and loads that additional data. In this case, the Article domain model should probably provide a potentially null `$author` property, but I don't want to get too much into the specifics of solving this problem. I hope that clarifies a lot of what I was trying to say! Thanks again, I always appreciate others insight and contributions to the difficult problem that is clean code.
Haha fair. I would really like to figure out what's the issue with the Box test suite with phpdbg but I have no idea how to do it. I've tried to use valgrind at one point but didn't find much. I would be happy to think the test suite is faulty, especially since it's occurring only when running the whole test suite, but it is not happening without phpdbg or with xdebug, so there is definitely a phpdbg related issue there :/
If the only thing you need is authentication with Google, I think it's easier to use a OAuth2 client and just integrate directly with Google. Maybe [http://oauth2-client.thephpleague.com/](http://oauth2-client.thephpleague.com/).
That’s the current implementation, yep. Not perfect but it works. 
This. If you're using php-fpm with nginx you can just point each virtual host to the appropriate fpm socket and it'll just work! You won't need to update the php version just need the versions installed and the corresponding php-fpm package too
Ondřej Surý provides a package repository [https://launchpad.net/\~ondrej/+archive/ubuntu/php](https://launchpad.net/~ondrej/+archive/ubuntu/php) Follow installation instructions then sudo apt install php5.6-cli sudo apt install php7.2-cli &amp;#x200B;
Thank you!
Laragon will let you have different PHP versions side-by-side. You can switch them at will using the interface.
FWIW, I get segfaults. ``` $ phpdbg -qrr vendor/bin/phpunit Segmentation fault (core dumped) $ php -v PHP 7.2.10-0ubuntu1 (cli) (built: Sep 13 2018 13:38:55) ( NTS ) Copyright (c) 1997-2018 The PHP Group Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies with Zend OPcache v7.2.10-0ubuntu1, Copyright (c) 1999-2018, by Zend Technologies with Xdebug v2.6.0, Copyright (c) 2002-2018, by Derick Rethans ```
Nice write-up, thanks for sharing. I've tried moving from Vagrant VMs to Docker, but there's one sticking point for me: I've never been able to read the Apache logs in a container. I just can't do web development without access to Apache logs. I've read the doc on the 'docker logs' command, but Apache logs aren't included in the output. Maybe it's my setup?
I might add that from the console you can just use php7.1 or php7.2 etc to pick a version. Comes in handy at times.
WOAH! https://github.com/krakjoe/pcov :)
Actually want to say this is good advice. 
you could just bash into your container and check them there.
everything sent to \`/dev/stderr\` is logged by docker, so, put the following lines in your apache virtual host config: ErrorLog /dev/stderr TransferLog /dev/stdout and you're ready :)
&gt; Alan Storm of Magento fame (sort of) Your unintentionally ambiguous parenthetical pretty succinctly sums up my relationship with the various Magento organizations over the years. :)
I should have deduced this from reading the docker docs. Thanks!!
I've tried this but the logs weren't being written to. I assumed because (according to the docs) they were sent to /dev/stderr, but when I check STDERR, I didn't see Apache messages. I'm guessing that the container I was working with had a non-standard setup. I never thought to double-check the Apache config file... doh.
&gt; Any ORM worth **it's** salt will allow you to bypass **it's** cleverness or *its. Both times. *its* is the possessive. *it's* is the contraction of it is or it has.
You're welcome, and don't worry, this happens to everybody all the time :)
I blame auto correct. Thanks.
Woohoo for Makefile! You can have `docker-compose logs -f` in there for easy access. Boohoo for everything in docker in cases where you're not running a Linux dev box. I get the run anywhere, but tools like phpstan are IO heavy and slow everything down when doing full scans. 
Interesting article, helping me get on the docker train. Two typos tbe =&gt; the, wil =&gt; will
I runs in occasional problems cause by difference between my dev and production environment. This post made me finally try Docker. "Please login to download" Fuck that shit. I know I could use mailinator.com but I'd rather use a product from people that don't enforce bullshit like that, even if it's free. Any recommendation for alternatives? Vagrant + something that isn't Docker or VirtualBox (Oracle) maybe?
I like the post but I'm missing one part: xdebug. Unfortunately I couldn't make it work with Devilbox/VSCode and expected some tips on how to wire it into such a setup.
Pretty sure you can get around that, haven't tried in a while. You can try nomad but just dl docker imo.
Check out wodby/php, the have a php stack with working debug and docs. https://github.com/wodby/docker4php/blob/master/docker-compose.yml
Thank you for your work.
using docker fo php projects on osx / windows is pain.
Thanks, will take a look!
[Here's](https://github.com/maiorano84/docker-emp) a pretty light container setup with XDebug. There are some constants in the .env.example file for reference, but all you need to do is provide your OS specific value under `MACHINE_IP` and it should be enabled for remote connections automatically (tested on both Windows and Mac). After that, setting the project up in PHPStorm is pretty easy.
I'm on mobile but forgot to mention, on osx there is an additional setup step documented in the docs, make sure to read the entire page for an Ethernet adapter command.
I've definitely never had to login to anything to download docker. Maybe because I'm a linux user.
I've never used it myself but [PHPBrew](https://github.com/phpbrew/phpbrew) might be what you're looking for ?
Good write up, our setup looks very similar. But I couldn’t be bothered to run everything in the container although I know would be the right way. Currently I’m experimenting with http://docker-sync.io to get the performance to acceptable levels.
I feel so stupid for not thinking about this! Thanks 
apt install docker or pacman -S docker or your distro equivalent.
Is it? How so? I'm on osx and the running a docker environment for my php projects without any pain whatsoever.
If you’re on MacOS, you can install docker through homebrew. If linux, just follow their guide. Not sure about Windows
Please elaborate why docker for php projects on macos is pain
I don’t think using bash is the docker way to do things. 
https://twitter.com/asgrim/status/1081223853815279627?s=19
Hardly an evidence. I use Docker on OS X for PHP and it’s fine. See?
Docker is alright. &amp;#x200B; \&gt;All without installing PHP on their local machine. Not bad ey? &amp;#x200B; Not against docker, but installing PHP is much easier than implementing a ton of work arounds. &amp;#x200B;
Installing PHP, sure. But managing project versions and dependencies is what gets you. 
I use Windows Home Edition (it came with my laptop), and I cannot make Docker run in this version. It needs Hyper-V, and than only comes in the Pro version of Windows.
I've been running docker on my mac for ages, never had any issues with i
So if one of the teams I manage has PHP on their machine, and it’s not the exact version we use on production, and it requires compiling a very specific PHP extension and INI changes, how do I tell my team to manage that while they also work on other projects that may be on PHP 7 or PHP 7.3 or PHP 5.6? It’s ridiculously easy to get Docker setup with the version and extensions you need to help your entire team out, and we can throw on Gulp and Node and npm and anything else without wondering why it works on one machine or one OS but not the other. I call BS because I have to manage a lot of different teams, some use WP, some Magento 1, some Magento 2, some CI, some Laravel, etc. 
How so? We use it for Linux, Windows, and macOS. No issues.
Use Docker-Tools
https://github.com/docker/for-mac/issues/77 It’s slow, but I don’t need to manage my setup locally which is far more valuable when I’ve got projects with differing PHP version requirements.
&gt; sometimes run this upon file save to statically examine my code in earl time :). Shoulda got Earl to proofread this...
What exactly are you doing that makes it a pain?
Try a more algorithm based language like c# or java, it helps a lot when it come to algorithms 
Read the Pragmatic Programmer
I used to have the IO problem, I setup docker-sync and have no issues now. http://docker-sync.io 
Not a huge fan of either. What about diving more into python?
This helped you personally?
Yes, greatly. I recommend it to all my junior devs. 
We were having some issues scaling Redis, but I'm sure they were solvable. We mostly switched so we could share authoritarian information with related Golang microservices. 
It’s 2019. Why do we still have .html on URIs that I’m hoping aren’t static html pages? Is this still a thing?
Unless you're on RHEL or similar. RHEL6 will support 5.3 until 2020. RHEL7 will support 5.4 until 2024 (I suspect similar is provided for 7-- but no source). Ubuntu 16.04 will support PHP7 until 2021. 14.04 will drop support for PHP 5.6 in April. Regardless, these systems will continue to exist. Upgrading them isn't always feasible or practical. I guess the solution is just to find new breaking changes for the next version of PHP.
its 2019, and static site generator like jekyll is still much alive
Does that actually put out html files? I’ve never used it, so I’m legitimately curious.
 I had to practice various projects, from e-commerce, over bundle system, multi-repo to monorepo, forms to CLI, code analysis to code refactoring with AST, from Nette to Symfony, from CMS to static-site generator, from personal to open-source. Do not stuck with one fulltime job for more than a year. Like machine learning. When you get lot of data
Anyone else here who uses windows for their dev box, docker can be a pain in the ass. I don't like non-portable environments and maintaining an office/home environment and trying to work on code, even with using repos to house code/makefiles/etc and pull down to each environment is just cumbersome, especially when working on a large number of concurrent projects. Docker is cool and all, but, for my projects, it's just another layer of "not work" that I deal with that is ultimately unnecessary. I have just relegated to using a large VPS for projects. I have CI/CD setup with git integration so I can pull the code and work locally, commit and pull from dev branch into dev server, staging to run builds and tests, and prod for live sites. Just putting this out there so people who aren't using docker don't feel so bad. Use the right tool for the job, don't use the tool cause someone said you should.
Does anyone have any tips they can share about easily setting up docker in Windows for a PHP dev environment? I’ve tried for a couple hours multiple nights and I still for the life of me have issues. Believe it or not I’ve been a PHP dev for 6 years -.-
I’ve had the same issues with Windows. It seems like it’s just so much work to get my docker environment up and running. I just want to create web apps and docker is a massive layer of work on top of my current workload.
[https://www-cs-faculty.stanford.edu/\~knuth/taocp.html](https://www-cs-faculty.stanford.edu/~knuth/taocp.html) Go directly to the source.
Makefiles are ok. php-cs-fixer is acceptable. PHPStan is ok. Fuck the Docker, it's a constantly increasing pain in the ass. They're not fixing bugs for years and have very huge troubles on non-linux platforms.
Unless you need this for an exam or similar, don't waste time. In 10 years of web applications development (not sites) , I never had a need for algorithm. Example: just imagine **one** real-life app where you would use knowledge from task you got? &amp;#x200B; One might say: sorting. And maybe they would be right in Java or C++... but not in PHP who chokes after 10.000 objects. Under that number, usort() is just fine. I would focus on frameworks and design patterns, things that has practical value.
Noted, but what if I feel like learning for me? I also dispute that this never would have come in handy. I am sure I could find plenty examples in my code and your code over the last ten years that could've been accomplished better (i.e. cleaner, more readable, more efficient) with use of an algorithm.
Reason it out in pseudocode. The first step is to identify your objective and your dataset. Then kick around some attempts at the high-level logic until you have something that looks promising. Develop and refine that approach until either it works or it’s clearly a dead end. Lather, rinse, repeat until you have a solution. If this is real-world, ask someone to look at the problem and make suggestions.
Sorry but I don’t understand your response. I asked if you basically ended up building an EM and you replied yes but then went on to say that an EM is bad. If you don’t use an EM how do you coordinate entity updates between services?
I like Laravel homestead with Vagrant. Docker I find has a significant learning curve and changes a lot, it's not a stable ecosystem because it's evolving too fast. I know vagrant can use docker under the hood but at least that abstracts it away. By the way you can use homestead for any type of app not just Laravel ones.
Yeah? What else do you think a "static site generator" does?
let's look at How to test your code [https://www.technolush.com/blog/how-to-test-your-code](https://www.technolush.com/blog/how-to-test-your-code) how to write good code [https://www.technolush.com/blog/how-to-write-good-code](https://www.technolush.com/blog/how-to-write-good-code)
&gt;Frameworks are easy, once you have one modern one under your belt its just reading through the docs on the next one &amp;#x200B; You couldn't be more wrong about this. I use Symfony for 7 years, and still don't know everything. And every week there is something new (their news page every Sunday) so no... it is not just reading the docs. &amp;#x200B; &gt;code over the last ten years that could've been accomplished better &amp;#x200B; Nope. &amp;#x200B;
I mean, i assumed, but we all know what happens when one assumes, right?
Man, I wish I had the time and budget to do all the stuff you do. But I don’t. I code it and leave it. Bugs? Few, but I’ll handle them as they come up. I hear all the time everyone spending hours and hours on unit tests and code reviews and bullshit. I’m like: who the hell gets to justify billing for that and HOW DO I GET THAT JOB! Haha. Spend my life quadruple checking my IF statement. Heaven.
The hell wrong with you?
I just use a composer create project and then run php artisan serve Why do people make things super complicated with vms and all this set up process?
I'm on Win, which is a poorly documented part of Devilbox for example :/
Exactly what I need, thank you!
Docker-sync is the way to go. We use it for large phone projects that do a lot of read/write. The only problem we get is that the sync app/host breaks :/
As a freelancer, I totally get that sentiment, but there is something so subjectively satisfying about running `vendor/bin/phpunit` and knowing that you've sanity checked the most important logic in your code.
So, this other guy at work takes 4 hours to my 1 hour. His code is, admittedly, beautiful. However his bugs are far more than mine. So... all of this perfect code means nothing because my sloppy ass code, with 16 years of holes in my belt (fuck I’m old), still performs better than his in production. 
Well there is no substitute for experience :)
Tell my boss that. 
This is similar to be but minus the makefile. Instead i use the strta pattern of scripts. I love the watcher stuff, will have to try this out!
Set the PHP binary yourself `"php.executablePath": "C:\\php\\php7.3\\php.exe"` Stop using WAMP and get [Windows Subsystem for Linux](https://docs.microsoft.com/en-us/windows/wsl/install-win10) and run a linux web server on your windows box.
It's really intense in my codebase. Says 17,530 files and it fails around 13101 even though I brought the memory limit up a lot. Is there anyway it can get cached or see what the error was?
Do you really have such big codebase or did you run it on a /vendor/ too by mistake? Try running it first on some subdirectory, to observe the results.
Yeah or docker! 
Lando or ddev might make things easier. https://devwithlando.io https://ddev.readthedocs.io
You can run a virtual machine using hyper-v. This would eliminate the need for wamp giving you a virtual linux host to develop on.
I did run it on vendor thinking it was needed for it to work properly but now I made a neon file and running it on 2329. Still slower than I'd like to be honest and it's interpreting some of the class inheritance wrong and of course issues with __get and __set in the models but that's okay. My hope is to eventually have a tool like yours power code intellisense, auto complete, etc in editors like VSCode. Ideally it would keep all the data in-memory and be able to run analyses on one file at a time. Recently I've mostly been needing something like this when refactoring namespaces from old code where everything is a global. Then having to go through the rest of the code and placing use statements where necessary.
If you think it reports something it shouldn’t, I’d welcome if you submitted an issue on GitHub, thanks. “Interprets class inheritance wrong” caught my eye, I don’t know what you think by that.
Isn't Docker on MacOS slow as hell?
You can also write so-called class reflection extensions so that __get, __set and __call are interpreted correctly. Or you can just write @method or @property annotations above classes.
For example `Method IncentFit\Models\PlanObjective::LoadByIncentivePlan() should return array&lt;IncentFit\Models\PlanObjective&gt; but returns array&lt;Cybertron\Model&gt;.` Cybertron\Model is the parent so this is actually a false positive. 
Symfony is pretty slow and using composer is a pain in the ass
Nope, PHPStan is correct here. You need to return array of PlanObjectives. Imagine if someone relies on it and calls a method on PlanObjective that isn’t on Model, your code would crash.
Working on huge projects for huge companies with a huge budget justifies every test you can think of
That's a lot of overhead to get static analysis working. With 150+ models that already have PHPDoc notation it should work from just that just like PHPStorm and Eclipse currently work. For example class SomeModel extends SomeORM { /** * @var string The Name of the ActivityType, e.g. Running */ public $Type = null; } At this point any object instantiated from the above class should have an attribute (string) $Object-&gt;Type and be treated as such. If you type hint as a class any child of that class can be used in it's place.
Again, I don’t understand what’s actually the issue (this works correctly to my knowledge), please submit it on GitHub. Ideally with reproduction on phpstan.org. BTW there are levels - it should be easy to set up PHPStan on a project with level 0, and gradually increasing the level as you fix the codebase.
I don't agree because the static method Model::LoadListByWhere() is documented to return []Model but in this situation it's being called from inside PlanObjective as static::LoadListByWhere() and implicitly would return only PlanObjective objects but because LoadListByWhere is documented up in Model it makes no sense for me to redefine it in PlanObjective just to fix the static analysis. This is actually literally where the translation happens. This method documents the return as []PlanObjective because realistically only that method will come out.
No worries. I'm just spit balling. Thank you for the work you do it's not easy.
Try changing the return typehint to @return static[].
Just to say: it's all in the eye of the writer to make sense, but in the end, it is the reader that has to make sense out of it. And since we are no mindreaders, we do our best to make it as good as we can. We have something documented in our code-style-guide, which is just a reminder of how to name stuff. From variables till functions, but it's never perfect ;-)
Wow that's amazing. Today I learned.
Do you have experience to compare it to? If you really want to use OSX then it's not a big deal as your choice of OS will outweigh the pain, but it's objectively a better experience on Linux. For a start it's not running in a VM.
Hi John, use of .editorconfig file is a great idea :)
&gt; Run everything in Docker How's the Docker performance on Mac these days? Last time we tried at work, it was quite terrible. I'd love nothing more than to use Docker, but right now I have a vagrant box with all old PHP versions, and run newer projects just on my mac.
Oh? I was almost super happy. Why and how does it break?
And docker can be used for deployment and running in prod too, having that reproducible environment across dev, test, staging, prod - even if those envs are different OS's or Linux distros, and again running different versions side by side or upgrading one without impacting another project - loads of benefits!
It really depends on the type of project. The basic promotional website with a simple blog and contact page, won't be unit tested as much. But for the big project where we'll be working on the next 5 years, we make sure it's tested very well. My guess is that most of the freelance work isn't targeted at these larger projects?
That's fair. :)
Agreed. 
Yeah or install gentoo
The filesystem is extremely slow, which makes anything that makes heavy use of filesystem very slow. More specific composer tasks, annotations, file caching (like twig templates, Symfony container cache, etc..). It makes using tools like Blackfire near useless as it's always going to detect classes/methods dealing with files as the bottleneck. I'm currently running NGINX/PHP locally, while having database/Redis/Elasticsearch/.. in docker. This gives me the flexibility to install specific versions of software without the slowdown. Not ideal but it'll have to do until I have time to figure out and migrate to a different dev stack.
In this context, PHP and Python are probably mostly equivalent.
I don't know.. maybe it's me.. but I am shocked how many downvote you get for wanting better quality instead of being lazy and saying "It works right? And I don't have billion of users so that it matters". I agree that you don't need algorithms every day, but it's still something that can improve your quality a LOT! Thanks to it I could manage the urgent need for an importer that could load billions of data, sort them correctly, do some fancy shit and import them. Part of it was using the Aho-Corasick-Algorithmus that I never heard of before and had to do some researches before I could use it. I probally would need to research again before I ever could implement it again, because it's soooo rare that you will ever need it.
What's that got to do with docker? 
"more than a year"... How do you plan managing and building multi year projects with that approach? Also, if I see your resume, the first thing that springs to mind is: I won't get back a return on investment before this one hops jobs again. Better let this one go.
This is why update-alternatives was invented.
Sorry then I obviously didn't understand your question correctly. I am not building an EM, but a so-called service-oriented architecture (SOA). One has nothing to do with the other. I separate data from logic. Data comes into the DTO/VO, data access logic comes into the repositories and business logic (complex calculation) comes into the services.
Thanks for clarifying your answer but I’m still unclear on one thing. Let’s say a request to Controller Foo calls Service A which queries Model 1 (via the repository or DAO or whatever) and modifies the model and writes it back to the DB. Controller Foo then calls Service B which needs to also evaluate Model 1 and make some updates. Without an entity manager each service has to query the DB and write changes back (via repository or DAO) independently, resulting in numerous unneeded DB operations, no? The point of the EM is to allow any number of services to interact with the entities and drastically reduce the load on the DB servers. 
Try marking your volumes `:delegated` this ensures a great speed up! 
Try marking your volumes `:delegated` this ensures a great speed up! 
Hard to say based on your description but here's some general tips: - Design the algorithm before writing any code. Depending on the algorithm, it might be a sketch on paper, rough outline or pseudo-code. You could also start by writing unit tests first so it's easier to verify that your algorithm works correctly. - Split the problem into subproblems. These can be just separate steps in the function or completely separate functions. As a result the performance may suffer but if needed the code can be optimized later. It's usually a trade-off between readability and performance. - Use abstraction. Abstraction reduces unnecessary implementation details in your algorithm. The abstractions might be your own related to the domain in question but also general data structures like [stack](https://en.wikipedia.org/wiki/Stack_(abstract_data_type)) or [queue](https://en.wikipedia.org/wiki/Queue_(abstract_data_type)). Data structures are not PHP's strong point but you could look into PHP's [Ds](https://secure.php.net/manual/en/book.ds.php) and Laravel's [Collection](https://laravel.com/docs/5.7/collections). - If you're not happy with your code, try refactoring or even rewriting it. The result could be better because you should have better understanding of the problem.
In my experience it is, but workarounds like a docker virtual machine with an NFS exported filesystem makes it "workable". For example take a look at: [https://github.com/codekitchen/dinghy](https://github.com/codekitchen/dinghy)
&gt; how do I tell my team to manage that while they also work on other projects that may be on PHP 7 or PHP 7.3 or PHP 5.6? Add fastcgi_pass unix:/run/php/php7.0-fpm.sock; Or fastcgi_pass unix:/run/php/php7.3-fpm.sock; Or fastcgi_pass unix:/run/php/php5.6-fpm.sock; To nginx in each projects virtual host config file.
In my experience, you won't get a workable dev environment on Windows using docker (on relatively non-small projects). It is painfully slow on Windows due to a slow shared filesystem, because under the hood docker is using a virtual machine to run Docker (HyperV normally). &amp;#x200B; I believe your options are (unless performance changed since I tried several solutions): &amp;#x200B; \- Use Linux instead of Windows (OSX also has performance issues, but seemed workable using something like [https://github.com/codekitchen/dinghy](https://github.com/codekitchen/dinghy)) \- Configure your container to only mount project files, and move vendor files inside a seperate non mounted directory in the container. Use rsync/unison to sync these vendor files. In theory this should just work fine, but I only got more problems using this (like debugging errors due mismatches in vendor files in the container and the machine). Example: [http://docker-sync.io/](http://docker-sync.io/) &amp;#x200B; Working on a Symfony project I get response times like 200ms in dev mode, while in Windows they average to 10-20s.
If you have a large file base it can be. I use Dockersync because we have a massive media folder (images are degraded in quality to reduce size). And that makes it quicker. But I'm definitely moving to Linux because of it. 
Use Dockersync when you run 'docker-sync-stack start' you get a log straight to the command line you can read in an instant. 
&gt; I have CI/CD setup with git integration so I can pull the code and work locally, commit and pull from dev branch into dev server, staging to run builds and tests, and prod for live sites/apps How do you keep the dev, staging and live servers in sync? Sounds like a nightmare to keep them all updated to exactly the same dependencies and configurations. How do you scale the live application doing it this way and keep the environment consistent?
&gt;Installing PHP, sure. But managing project versions and dependencies is what gets you. Nice to see other people in the community getting it. I was told I was 'cargo culting' and I should 'pull my head out of my arse' because I don't believe FTP'ing files is the correct way to develop and reproduce builds. 
Also `git diff --cached` to make sure you've not staged a hunk of a file that isn't logically related to the change you're committing and thus shouldn't be committed together.
Composer is brilliant. It's not without issue but by and large, it's an amazing tool.
I'm not experiencing the latency that others seem to be. Unless my expectations and standards are low. But seems plenty fast enough to me.
I didnt like learning java at the start, but it helped me make sense of CSS/PHP/JavaScript.
&gt; Controller Foo then calls Service B Did you mean that a controller calls multiple service methods within the same request? If so, then the controller may be doing too much. I would try to reduce the control task to a single service call per request. I understand your point, you're trying to keep DB operations to a minimum. That's what I do, too, but with more direct control over queries and transactions. Don't get me wrong, it's just another option that works very well for me. This architecture works very efficiently and fast, even in a 35GB+ database with half a million customers and a code base with more than 150k LOC. I switched from ORM to this architecture because the classic ORM approach with its "god" model classes didn't work for me and the ORM didn't generate efficient queries. Now I have full control and am very happy with it. Greetings.
I second this. It's how I'm set-up currently. VS.Code with WSL with WSL php with XDebug with remote debugging. Works like a charm. 
in fact I meant git diff…. :)
It improved a lot since about a year. They had a heavy IO problem, which is still not super amazing, but speed is totally okay now.
Yes, Docker native is very slow on Mac OS. I use docker-sync to speed it up. You can checkout my configuration at [GitHub](https://github.com/thhan/Docker-Builder).
You need to use Docker Toolbox. I found it a little harder to set up than the normal version, but works very well
Makes more sense then - but `git diff` and `git diff --cached` are probably equally important to make sure everything is staged and nothing unrelated isn't.
&gt;oooh thats a great addition!
Algorithm based? These languages will walk you through some sophisticated object constructs (like low level langs will push you into pointers and memory management stuff), but it adds no direct value when it comes to algorithms.
Report bug at bugs.php.net.
I didn't realize the difference was that bad. I don't think it's due to virtualization (not a Windows guy, but my understanding is that HyperV is running virtual instances natively via CPU VT support). The delay must be at the file system layer.
Try [https://www.codewars.com/](https://www.codewars.com/) 
&gt; They're not fixing bugs for years Examples? 
"10 Best PHP Development Tools That Every Developer Must Explore" ...seriously??? :D
vi
My nginx.conf file looks like this: `user www-data;` `worker_processes 4;` `events {` `worker_connections 1024;` `}` `http {` include mime.types; server_tokens off; root /var/www/html; fastcgi_cache_path /tmp/nginx/cache levels=1:2 keys_zone=phpcache:100m inactive=60m; fastcgi_cache_key "$scheme$request_method$host$request_uri"; server { listen 80; server_name localhost; return 301 https://$host$request_uri; } server { listen 443 ssl http2; server_name localhost; ssl_certificate /etc/nginx/ssl/nginx.crt; ssl_certificate_key /etc/nginx/ssl/nginx.key; ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; ssl_prefer_server_ciphers on; ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5; add_header Strict-Transport-Security "max-age=31536000" always; index index.php index.html; location / { try_files $uri $uri/ =404; } location ~\.php { fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; fastcgi_index index.php; include fastcgi_params; fastcgi_pass unix:/run/php/php7.3-fpm.sock; fastcgi_cache phpcache; fastcgi_cache_valid 200 301 302 60m; add_header X-FastCGI-Cache $upstream_cache_status; fastcgi_cache_bypass $skip_cache; fastcgi_no_cache $skip_cache; } } `}` &amp;#x200B; Now, while opening *some urls*, it is throwing **502 Bad Gateway**, but not for others. The error I'm getting in error.log is: &gt;2019/01/10 23:53:39 \[error\] 12139#12139: \*5 recv() failed (104: Connection reset by peer) while reading response header from upstream, client: 127.0.0.1, server: localhost, request: "GET /wordpress/ HTTP/2.0", upstream: "fastcgi://unix:/run/php/php7.3-fpm.sock:", host: "localhost" Please let me know what can be the problem. &amp;#x200B; PS: Small php files are running fine e.g. simple echo 'hi' is working. But as soon as I request something heavy like wordpress or any other CMS it throws 502 error. &amp;#x200B; FPM logs: \[11-Jan-2019 00:35:53\] WARNING: \[pool www\] child 12467 exited on signal 11 (SIGSEGV - core dumped) after 2189.642323 seconds from start \[11-Jan-2019 00:35:53\] NOTICE: \[pool www\] child 14303 started \[11-Jan-2019 00:35:53\] WARNING: \[pool www\] child 13689 exited on signal 11 (SIGSEGV - core dumped) after 684.578509 seconds from start \[11-Jan-2019 00:35:53\] NOTICE: \[pool www\] child 14305 started
Here's a thing to look at ... krakjoe@fiji:/opt/src/box$ php -n -dpcov.enabled=1 -dextension=pcov.so -dextension=componere.so -dpcov.directory=/opt/src/box/src bin/phpunit --coverage-text PHPUnit 7.5.2 by Sebastian Bergmann and contributors. ............................................................... 63 / 763 ( 8%) ......................................................SSSSSSSSS 126 / 763 ( 16%) SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS.............. 189 / 763 ( 24%) .......................................................FFFFFF.. 252 / 763 ( 33%) ..........F.................................................... 315 / 763 ( 41%) ............................................................... 378 / 763 ( 49%) ............................................................... 441 / 763 ( 57%) ............................................................... 504 / 763 ( 66%) ...............................SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS 567 / 763 ( 74%) SSSSS.......SSSSSSSSSS......F.EEEE.................SSSSSSSSSS.. 630 / 763 ( 82%) ............................................................... 693 / 763 ( 90%) ..............................FF............................... 756 / 763 ( 99%) ....... 763 / 763 (100%) Time: 1.14 minutes, Memory: 76.00MB There were 4 errors: /** all bz2 extension required for test errors */ -- There were 10 failures: /* looks related to how I installed box */ ERRORS! Tests: 763, Assertions: 1448, Errors: 4, Failures: 10, Skipped: 115. Code Coverage Report: 2019-01-17 11:36:39 Summary: Classes: 62.75% (32/51) Methods: 73.88% (215/291) Lines: 67.26% (2028/3015) Drivers on github, will make relevant pull requests soon ...
And if one project use MySQL 10.5 and the other project MySQL 10.7. How do you want handle this problem on our system. &amp;#x200B; I could be harder, if one project used two MySQL-servers with two different versions in production and you have to rebuild it in your environment.
"one fulltime job for more than a year" - that's know-how vendor lock that prevents growing I do 2-5 projects in span of 2-40 months. 
I see you've gotten down votes. I up voted so your thread doesn't collapse, and I think it contributes value to the topic. Unit testing is particularly valuable for library code and services: what happens to this code on garbage input? Does it generate the errors I expect on exception? That's helpful when methods get long and you refactor code out of a model class, for instance. Is a routine giving me the output I expect? A good example (which translates to a lot of real-life scenarios) is something like a routine to check if a text string is a palindrome. Does it handle both odd and even character counts? Does it handle different character encodings? How about punctuation? Chinese characters? Are you catching every case in a `switch` statement, or following through to the default on some edge cases (and you haven't written a default case)? How about after someone adds another case and moves code around down the line? Unit tests are quick and easy to write if you become familiar with how to do it. It's just assertions, and a little more to learn how to do mocks, setup and teardown (for things like using an in-memory database in your tests), and a few other odds and ends. Once you learn one unit testing library, you have a very transferable skill -- they all work pretty similarly, in any language. Jest has great support for testing UI. That's not always helpful, but if (for example) your project requires ARIA tags on specific elements to meet accessibility requirements, you can help yourself not to forget down the road when your view code changes. And end-to-end tests aren't hard to set up, either, and make sure your whole stack is working as you expect. &gt; spending hours and hours on unit tests If this is true, to me it means you're not familiar enough with testing frameworks to use them efficiently. It really shouldn't be an undue burden. If you follow a test-driven approach, people often report they spend about as much time on writing tests as they do on code. But that is kind of obfuscating something important. *The time you're spending on writing the test is time you'd spend anyway thinking through how something should work.* It's no different than taking a piece of paper and making some notes by hands about what something is supposed to do. &gt; and code reviews I think the more experienced a developer is, the faster they're able to conduct code reviews of other's code is, and also the more valuable code reviews of their own work is. The quality of code I write varies throughout the day. Sometimes at least average (first thing in the morning), and sometimes not so much. It's easy to miss how something you're doing impacts something else. I don't like pair programming at all, I find it very distracting rather than helpful. But I don't trust my own code enough to put it straight into production, and neither should anyone else imo. **tl;dr** it's worth the investment to learn testing frameworks.
PhpStan is great. Shout out to Psalm which is also brilliant.
[Over 3k opened issues](https://github.com/moby/moby/issues?q=is%3Aissue+is%3Aopen+sort%3Acreated-asc) from '2013 isn't enough? My own experience was waiting 2+ years for nearly usable filesystem driver for osx, and it's still laggy. Another own example was waiting 3+ years till they solve how to pass external client ip into the swarm members. They fixed that with the huge idiotic crunch, forcing users to have the service in the host mode. [One more thing](https://github.com/moby/moby/issues/25685) ate thousands of my neurons, it's visible only under really high loads (I had 3k+ services on a cluster with overall 2Tb RAM). Still open. And yeah... "crossplatform development", roflmao! － try to start swarm mode out of the box not on linux. Only thing they did really cool was the swarm mode. Abandoned.
How would you dockerize a mysql db with persistent data?
It's like in golf... A lot of people - I don't want this to sound trivial - but a lot of people use Netbeans or these things that boil down to a glorified text editor and in some cases that's ok. But for PHP it's very inefficient, very unattractive... it's weird. You see these coders with these really bad "IDEs", because they think it makes them great and they feel superior. And, I hate it. I am a traditionalist. I have so many fabulous friends who happen to use bad "IDEs", but I am a traditionalist I use PhpStorm. It's great. It has so many plugins, absolutely the best plugins. Auto-completion, let me tell you.. it doesn't get any better. The layout, the utility... debugging doesn't get any easier. It's beautiful. When I see someone using var_dump() to debug a problem.. I just have to stop and ask why? I mean, PhpStorm makes it so easy, why do it any other way. But it's great IDE and a great product.. simply great.
Best suggestion. I even run my VSCode inside the VM.
What work arounds?
Piece of cake to install on Linux using shell. I am assuming you are on Windows?
I was facing the same things, downgrading to 7.2 helped 
I have the same question 
hello
Did you make any changes to php/fpm config? If yes then try to revert it to default first.
Do you think the same response times applies if Docker was installed in WSL instead? 
It's perfectly possible to write correct procedural code without tests. But deep experience by the programming community at large shows that it's unlikely (you are probably an outlier, the 7-sigma guy). If your coworker's commits have more bugs than yours, that coworker is #1 not testing correctly, and #2 probably has some more structural issues in his work process that are repetitive in nature and need correcting.
Gateway errors with Nginx + PHP generally means something is wrong with PHP's configuration - Nginx is fine. Looks like your timeouts are exceeding its limit, and PHP will just... kill the process if it does. Try increasing the timeout, or set to `-1` for unlimited time.
I tried running docker under windows at work, and after days of frustration I ended up just running docker inside of a VM on Ubuntu. PHPStorm is set to sFTP files to the VM on save, I'm sure you can do that with whichever IDE. In general it works pretty well, but over time the two filesystems end up out of sync and juggling the files around can get a bit awkward, especially when you pull in some changes and have to sync everything up. Running it on windows really is a drag though, if you have the option I would recommend just switching to linux.
Honestly, use what gets the job done. Two years back when I started my job with coding(still pretty new to this), I thought also, ohh lets use all the new cool gadgets what kids use these days, newest laravels, all those fancy javascript libraries, etc. Now seeing how things are done, if you are comfortable with notepad and can write there fast, safe and easily readable code, I ain't gonna judge you, probably opposite. I personally have no huge preferences, but since my boss/mentor uses netbeans and most stuff is done in cake or in regular php I use those at the moment. 
There's also 15,000 closed issues in that time period, and the project chose to take feature requests via their issue tracker rather than using an external service. Docker is also a complex product, and the attempt to support Windows (for something that is really Linux-centric, e.g. a fancy `chroot` or `jail`) intensifies that. I am not a fan of Swarm either. Kubernetes is a much better solution imo.
Yeah, it's mapping volumes from windows to the VM which causes issues. My understanding is that the volumes run over samba. 
Finally, it worked. PHP7.3 is not working somehow. I had tried it on docker as well.
I don't think you can do that. Docker uses the Linux kernel's abilities to do its job, WSL is everything but a Linux kernel.
or look into docker.
The [12 Factor App](https://12factor.net/) methodology is a set of principles that make running dev, staging, and prod servers easier. Using environment variables instead of configuration files for things like database connection credentials is important for the app to deploy easily across environments. Using version control is essential for this to work. Using a configuration management (CM) tool, like Ansible, Puppet, Chef, or Salt is also essential. That way you write how the server should be setup once, commit it to version control, and it's reproducible. A pretty common workflow: * Unit tests run on dev's workstation when they commit locally. * CI (Jenkins, Travis, etc.) runs the full test suite (unit, functional, integration, code quality) on commits to the mainline branch. * Your CD tooling will generate whatever you are using to distribute the app (a Docker image, executable binary, zip file, etc.). The CD tool should probably also use some kind of artifact repository, so you have a record of everything that went into that distribution to analyze if something goes wrong. * Then, the CI tool will push to staging. If you're using a cloud service like DO or Vultr, it might spawn a new virtual server, configure it via CM, and then push your app live to it. * Ditto with pushing to production, except you also need rollback capability in the production environment in case something goes wrong. This is the basic idea behind Laravel Forge. The most important thing is that pushing to staging and production requires only a single button to push, and a single button to push for rollback. /r/devops is a good subreddit concerned with managing this pipeline.
In my docker-compose file: **volumes**: \- ./mysql-data:/var/lib/mysql/ This lets me zip &amp; transfer it if necessary &amp;#x200B;
Believe me, we've tried a lot of things - all with their own pros and cons but nothing provided a significant improvement. It's fine for smaller codebases but isn't workable for large projects. I wish the solution was as simple as adding \`:delegated\` 😞
Why not utc timezone? I have all my applications in utc. If i need to present the time in another timezone, let the frontend decide 😉
I mentioned not a feature requests and not a harmless issues. One of them cost me my job. After that I have opinion that maybe it's really simpler to use chrooted environments instead of docker at all. As for about swarm, I prefer it over k8s because of it's simplicity and lightweight nature. But they lost their time and kubernetes won. See no real advantages in it. Too complex, too hungry for resources. Swarm mode was the real brilliant from the docker team. But they're flushed it down to the toilet as everything. I wouldn't mind anything about macos/windows and other oses support if I wouldn't seen those "CONFIGURE ONCE RUN EVERYWHERE" hype about docker at every corner.
Ah. I have been experiencing issues connecting after the installation. That could be the reason. Thanks for pointing that out!
I know a company that was using Dropbox to deploy to production until a few years ago! They were also using it for "version control".
His Makefile is cute, but it's also trivial. So when he says that few developers use Makefiles effectively, I can't help but roll my eyes. His Makefile is a glorified list of bash aliases.
Give them each some matrix math and tell me you still believe that.
Thanks, it wasn't even for a "real-world" task. It was a programming test app given by a prospective employer. I passed, but the crux of the assignment was the algorithm, the rest was fluffy easy stuff. It peaked my interest in a skillset that could use some improvement. I was lambasted by a troll further down saying I should invest more time in learning frameworks. Whats funny is, I had never even used their framework of choice. I skimmed through the docs enough to follow the basic standards (fluff) and show that I can use any framework.
Your comment Trumps them all
What do you even mean when you actually say this? We have all the operators including bitwise operators and can make declarations in expressions. You will jump through more hoops of OOP in C# and especially java. This is such a vague armchair response.
&gt; I skimmed through the docs enough to follow the basic standards (fluff) and show that I can use any framework &amp;#x200B; "The first rule of Dunning-Kruger club is that you don't know you're in Dunning-Kruger club" But no worries, if you think I was trolling you, so be it.
I use Netbeans and it works, could be also notepad.exe, isn't the IDE that make the code good code, moreover I use var_dump() for debug and it works! Don't see reasons for update my devel environment.
Saves a lot of typing though doesn't it ;)
https://phptherightway.com
Just keep in mind that "pretty big projects" are not done by beginners. You are supposed to create a rather small project, then polish you skills for a coople of years and then you could be able to try a big one. Depends on the meaning of "big" though
&gt; isn't the IDE that make the code good code To a certain extent; no - but it certainly helps you deliver said code faster and more reliably.
Mac
Get sites urls-&gt;translate into ips-&gt;save page-&gt;get scripts that run on that page
what does it mean, "get scripts" that run on that page? Basically, you don't need no PHP to save pages from URLs, wget can do it easily.
Great idea, will update it soon.
For sure. And, to be honest, I actually really like it as long as you aren't already using a Makefile for building some other part of your app. It was really just just the wording of that line that bugged me.
&gt; implementing a ton of work arounds. Can you elaborate on this?
I've been working on windows 10 using docker for the past two years and this is pretty much the tools I've been using: * [Docker Desktop](https://hub.docker.com/editions/community/docker-ce-desktop-windows) (it used to be named differently in the past). * [Cmder](http://cmder.net/) - For the bash console * Created a .bashrc at the home level (C:\Users\YourUser\.bashrc) to include this: docker() { (export MSYS_NO_PATHCONV=1; "docker.exe" "$@") } export -f docker; And usually, this was an example of command I am using (using the bash console in Cmder): docker run -it --rm -d -v $(pwd):$(pwd) -w $(pwd)/public -p 80:80 php -S 0.0.0.0:80 Don't know if this is going to help you, but good luck!
Yea, it's really unfortunate that they added that a few(?) months back. I can't recommend Docker enough, and I've yet to find a comparable utility that provides everything that docker does, but if you have personal issues with an account being required then there's not much to do there. On *nix you can just install the related packages, I have next to zero experience with MacOS though.
&gt; while in Windows they average to 10-20s. Hot damn that's not been my experience at all. It's been a while since I've done a direct comparison between the platforms but on Windows 10 I've had no noticeable slowdown. Are you using Docker for Windows on Windows 10 (might need pro) or Docker Toolbox?
/u/hitchen1's recommendation works but you should use volumes when possible. Check out [Manage data in Docker](https://docs.docker.com/storage/). 
Are you on Windows 10 using Docker for Windows or Docker Toolbox? Docker for Windows works perfectly in my experience. I've had zero windows specific issues in the past year or so I've been using this setup. I dev locally with no pain then deploy to Linux boxes all the time.
&gt; How does one get better at writing algorithms by writing more algorithms.
If you have a big project, why are you using a language you have zero knowledge?
Atom for me, awesome development tool with a lot of support and free
Both in the past, but mainly docker for Windows. And yes windows 10.
&gt; that's how numbers work. This is __usually__ how version numbers work. To act like its this way 100% of the time is stupid.
var_dump works... To an extent. But why do that when you can set a breakpoint, step through the code, and see all the variables and their values? I'm interested to hear how doing multiple requests with var_dump trying to narrow down an issue is easier and/or more efficient. Sort of sounds like one interview we had where the individual said they didn't need to write unit tests because their code just works. In this day and age, for anything past hobby projects, you really should be using the best tools for the job. Anything less is just doing yourself and your client/employer a disservice.
Look at Laravel's Homestead. It's a vagrant box with pretty much anything you'd ever need and it works great for all PHP projects, not just Laravel. My company uses this and Docker exclusively depending on which deployment pipeline we're using.
Try to bundle existing solutions. The reason: beginner devs tend to underestimate the the amount of effort it takes to create a custom solution. Have an MVP and see if it pays. Then if so you have the resources for the custom solution
Thanks! So if I'm reading that right, unless you can afford experienced devs (and know they're solid), creating your own custom solution can just lead to more problems than its worth? In other words, "if the answer is already out there, stop looking for the solution" type of thing. Cool perspective 
I'd say VSCode is pretty popular, more popular than most IDEs on that list at least.
Regarding using a Makefile: any suggestions for those of us who develop on Windows and don't have make? 
After solving an algorithm problem yourself, then look at how more advanced programmers solved it. Then try solving it again using what you observed, either on the same problem, or another similar problem. One of the main things to look out for in an algorithm is the number of loops, and especially if any of them are nested within another loop. Look for ways of reducing the number of loop structures. In the problem you described, I might start with counting the number of elements as you add them to a single array, then divide the total by 18. The resulting loop should count from 0 to that number, and within it a loop from 0 to 18 as it distributes the elements to each array. Then the remainder can be distributed to one or more of the arrays. Then you step away form it and think about what could be better, more efficient, faster.
&gt;show some alternatives &gt;everybody in the community: just buy the goddamn PhpStorm! Tbh I work with Java and while I think IntelliJ is better it isn't better enough than Eclipse to convince me to buy it.
&gt; I'm interested to hear how doing multiple requests with var\_dump trying to narrow down an issue is easier and/or more efficient. I don't do multiple requests with var\_dump on the browser for find a solution, I adopted TDD and debug is did when tests run. If a test fails for a method or a function, I use var\_dump to show values in phpunit's output. var\_dump is limited to little snippets of code. var\_dumping all code is a madness! When I work on a script, xdebug launched from IDE can help, but I use it very rarely.
I use Docker
&gt;[PHP interprets an integer with a leading 0 as an octal (base 8) number. 016 base 8 is 14 base 10.](https://stackoverflow.com/questions/43157005/why-does-php-016-divided-by-2-answering-7) [http://php.net/manual/en/language.types.integer.php](http://php.net/manual/en/language.types.integer.php) &amp;#x200B; &amp;#x200B;
It's because 016 is octal for decimal 14, then you divide by decimal 2. You are doing 14/2 which equals 7.
I used it for a while and liked it but continuous crashes forced me back to Netbeans.
A leading zero means octal, 8 dec. + 6 dec = 14 dec.
See [http://php.net/manual/en/language.types.integer.php](http://php.net/manual/en/language.types.integer.php) &amp;#x200B; 016 means 16 (octal), which is 14 (decimal). [https://3v4l.org/p3WoQ](https://3v4l.org/p3WoQ) &amp;#x200B;
For PHP questions use r/PHPhelp the next time. &amp;#x200B; You are creating an integer using the octal notation, 016 is 14 in decimal and of course divided by 2 it's 7.
This is an interview question I've seen at a number of places.
I assume it means find linked JS and download it? Not that it seems like a useful thing to do. But if that’s the case, just use Scrapy. It’s python but is actually designed for this kind of thing. No need for a bunch of custom infrastructure. 
In my experience, volume mounts on Mac are super slow. You can however set a `:cached` flag on the mount to make things way, way quicker. volumes: - .:/var/www/app:cached
If compared to Linux - yes, although Docker Sync somewhat mitigates the problem. If you have an option of picking Linux, I'd definitely recommend it, since it doesn't require any workaround like this. Docker on Mac is not "unusable slow" though.
If portability isn't a requirement, you can use a named volume like so: mysql: ... volumes: - mysql:/var/lib/mysql volumes: mysql:
looking at your makefile, your targets aren't actually files, you should mark them phony: [https://www.gnu.org/software/make/manual/html\_node/Phony-Targets.html](https://www.gnu.org/software/make/manual/html_node/Phony-Targets.html)
Thanks. Will this work with running WordPress locally? The only reason I installed WAMP is because Local By Flywheel came with too many bugs. The same question applies to the other two recommendations Docker and Gentoo. Docker has a lot of good documentation and tutorials. What about Vagrant/Virtual Box? That's also recommended for running WP locally. Again, though, whichever is best all around. I'm on the fence of studying WP in general. I for the life of me can't decide to just focus on PHP 7 or WP. I'm interested in eventually contract or freelance work.
I'd recommend following [this tutorial](https://learngitbranching.js.org/), it covers Git in general, not just branching, despite the name.
Btw - version control I don’t think you should only consider when working collaborating, getting used to using it for everything is a life saver and gives so much clarity and let you review work before you finish up. So many benefits. Once you go GIT you’ll never go back.
PM me and I'll gladly screenshare with you for an hour or two.
I agree with this outright, but I think that the tooling reality can be a bit of a pain. For PHP Storm users, this is pretty easy to setup and works great! As a VS Code user I can't use a remote language server without some [cheeky workarounds](https://github.com/felixfbecker/vscode-php-intellisense/issues/150). That feature is supposedly coming but for the time being it's either use PHP Storm (which I personally just don't enjoy working in) or install/configure PHP locally.
Just returned to PHP development after 3.5+ years working the Microsoft stack with Visual Studio, and for the first time I started using PhpStorm. I couldn't agree more, it's a fantastic tool.
Can you give us more details on what you would be roughly making exactly? If you say a big website we might assume you will also be doing the security layer with an API taking in requests with JSON. Or you might mean a big project like a php daemon process that's managing a database. Need more information.
Geese that sounds rough. It definitely seems so much easier on Linux or Mac, but on Windows it’s a nightmare. I can’t use Linux or Mac though because the company I work for is strictly Windows based and they don’t allow other OSes on the network. I currently use Laragon which is a pretty quick and nice dev environment, but nowhere near as portable as Docker of course.
I agree. It's not my favorite ide (for PHP) but it is highly popular. 
Visual Studio Code is like Atom sans the crash and memory usage.
Imagine having the ability to revert your code to any point in time. Let's say you need to undo recent changes quickly, without having to undo them manually. And then be able to find what went wrong with recent changes, and fix it without having to start over. When working with more than one dev, it gets even better. You won't have to worry about simultaneous changes to files (well, it still happens, but it makes it easier to cope with when you can merge in only the lines that another developer did while keeping your edits intact) That's just the benefits you'll have on Day One.
Some people prefer to smoke. That doesn't make it a equally healthy choice. Preference has very little to do in regards to what's actually efficient.
PHPStorm. There is nothing which comes even remotely close.
This was my primer. "Take this with you. Its dangerous out there." https://git-scm.com/docs/giteveryday
Docker is slow on mac.
PHP Storm. I'll rue the day when my student license expires.
Generally unbearable, plus extremely quirky. Moved away from MacOS due to basically wasting entire nights on it. Recently had co-workers also do the same (couple weeks ago).
Way to start a PHPStorm circle-jerk. I migrated from 8 to 9 in August of last year and, after importing the old 8 PHP module found it a very natural successor. I updated to 10 this month and, with the PHP mod baked-in it is fitting perfectly into my workflow. I am no guru, but I'd love to know your thoughts on using Netbeans 10 if you continue with it.
F
https://scrubs.fandom.com/wiki/Rowdy
step by step learn how to install php 7 on windows. https://php.tutorials24x7.com/blog/how-to-install-php-7-on-windows
This was my solution, granted I limited myself to the amount of time I would spend on it: class Balancer { public function distributionCount(Rules $rules, int $totalPlayers, int $teams) : int { $perTeam = $totalPlayers / $teams; $attempts = []; while ($teams &gt; 1 &amp;&amp; ($perTeam &lt; $rules::MIN_PLAYERS || $perTeam &gt; $rules::MAX_PLAYERS)) { $teams--; $perTeam = floor($totalPlayers / $teams); $attempts[] = $perTeam; } if ($teams % 2) { return $this-&gt;getNextBestDistributionCount($attempts, $rules); } return $perTeam; } public function getNextBestDistributionCount(array $counts, Rules $rules) { foreach ($counts as $count) { if ($count &gt; $rules::MIN_PLAYERS) { $countPerTeam = $count; break; } } if (!isset($countPerTeam)) { return false; } return $countPerTeam - ($countPerTeam - $rules::MAX_PLAYERS); } }
I think you did a pretty nice job with this! That's already several iterations beyond the starting point I suggested, I think you're on a good track. It would take me substantial analysis to try to think of any way to improve what you did. Good work!
https://github.com/phpexpertsinc/laravel_quickstart is a lot easier...
Here’s an upvote for the Trumpism
I used PHPStorm and then switched to VSCode with the IntelliJ bindings. It was a fairly painless transition. It’s a million times faster, has a better git integration, and with plugins and some custom configuration it can almost do everything I could do in PHPStorm. Oh, and it’s free.
Mercurial wants to have a word with you
Thanks to all for participating. You can use above mentioned PHP editors to do bug-free coding. It support major [PHP Frameworks](https://technostacks.com/blog/php-frameworks) such as laravel, codeigniter etc.
I'd post this over in /r/forhire for better exposure.
Thanks! :) 
Hey everyone. I've built this tool to automate finding poorly documented code. However, all tools that existed required documenting everything, also trivial functions such as a single line `get_title`. This tool used the Cyclomatic Complexity score of a function to determine if it is difficult enough to warrant DocBlocks, to further clarify why it is there. Feedback is very welcome!
how to install php on windows https://php.tutorials24x7.com/blog/how-to-install-php-7-on-windows
There is a bug in your second example. You use $this-&gt;title in your return statement, making all previous operations do nothing. Also, consider: [$title] = explode('.', $this-&gt;title, 2); See asymmetric array destructuring and the limit for explode.
Good catch, editing the readme in a minute!
Yep, not all sites have the www domain set up. It is generally good practice to have one redirect to the other, but not everyone bothers to do that.
/u/hihello1990: &gt; PHP was never a reliable or robust programming language and it will never be. Why would you want to download it then? &gt; it was giving 403 forbidden error. Yeah, in its place I'd do the same. 
*Obviously* php.net do have the www domain set up
Depends why your doing it. If you want to learn and try clone something, go for it! If you need it for a production ready product, don’t use peoples businesses as your learning playground. Utilize tried and tested tools. — There’s loads of saas tools like... Big cartel Big commerce Shopify Loads of self host like... Cs cart Woocommerce Magento — Some like big commerce and big cartel are API driven so you can build your own front end use their backend. Depending on your skill set you might decide what to pick. woocommerce is good for the average online seller, who wants to have lots of custom pages/forms etc and is pretty easy Magento is considered more enterprise but is overkill for most use cases, is a slow beast without right optimizations and is pretty grim experience as a whole, but has lots of extensions (albeit many badly made) it’s also terrible for bespoke pages that are not shop related like “meet our team” Cs cart is very flexible but they have their own ways of doing things with smarty templates so is a bit convoluted, but is good product All the saas products like Shopify are pretty similar, so just pick the one you like most! 
Laracasts has a great series on general php from basics to more advance functions. Give it a look and see how you feel. I believe it’s called something like “the php practitioner” or something 
If your using php fpm. Run them all on different ports Then in each site configuration just point it to right port :)
It works just fine from my network.
The problem is this www url is right there on non-www page. Just scroll down to “PHP 7.3.1 Release” section and click on download. I guess the url is hard coded. 
This isn't easier, because in this repos you used linux for docker. My repo used docker-ce for Linux and you can use docker-sync for Mac to speed up transfer between host and guest system. And xDebug is full supported for cli and http-request debugging at mac and linux systems.
Such dope, such hacker. &amp;#x200B; Btw, what happens if I simply change the value of amount field?
Let me give you a small lesson in basic programming. The following wall of cargo cult code $correct_price_found = false; $prep_stmt = "SELECT price FROM paypal_products WHERE id = ?"; $stmt = $mysqli-&gt;prepare($prep_stmt); $item_number = $_POST["item_number"]; if ($stmt) { $stmt-&gt;bind_param('s', $item_number); $stmt-&gt;execute(); $stmt-&gt;store_result(); $stmt-&gt;bind_result($price); if ($stmt-&gt;num_rows &gt;= 1) { while ($stmt-&gt;fetch()) { if ($_POST["mc_gross"] == $price) { $correct_price_found = true; break; } } } $stmt-&gt;close(); } could be rewritten to $stmt = $mysqli-&gt;prepare("SELECT price FROM paypal_products WHERE id = ?"); $stmt-&gt;bind_param('s', $_POST["item_number"]); $stmt-&gt;execute(); $stmt-&gt;store_result(); $stmt-&gt;bind_result($price); $stmt-&gt;fetch(); $correct_price_found = ($_POST["mc_gross"] == $price); with even with unreliable mysqli, not to mention just a few lines using PDO $stmt = $pdo-&gt;prepare("SELECT price FROM paypal_products WHERE id = ?"); $stmt-&gt;execute([$_POST["item_number"]]); $price = $stmt-&gt;fetchColumn(); $correct_price_found = ($_POST["mc_gross"] == $price); 
Wow that is fantastic, I never knew about phony. I have been scratching my head to why make test wasn't working. Thanks I will update when I get a chance
I'm 99% certain this is against Google policy
I never understand why going to https://php.net always redirects you to https://secure.php.net. No other site I've ever been on redirects to a different subdomain for HTTPS connections. Weird setup.
What OS are you using? I would recommend installing PHP using a package manager, for example, I install software like PHP or Ruby using [brew.sh](https://brew.sh/) on a mac, on Windows, you can use something like [https://chocolatey.org/](https://chocolatey.org/) (although someone might recommend a better package manager for windows, I'm not too hot on a windows OS these days.) 
Well, if you change amount value, changed price will be processed to PayPal, this is only a basic example about integrating PayPal in your website, to avoid this, price should be fetched from database in "paypal\_ipn.php" file. Thanks for taking a look at my content. BTW: I'll update my post soon and make it more advanced.
This is a very basic tutorial for beginners and I think the code should be wider, in my opinion people can understand it better than well formatted code. I tried to explain every action that is made and that's why I didn't cut the code. Thanks for taking a look at my content!
sometimes crashes but I know this is caused by some plugins. You have to disable some plugins and test
This code is in no way affiliated with, authorized, maintained, sponsored or endorsed by Google or any of its affiliates or subsidiaries. This is an independent and unofficial API. Use at your own risk. 
how is giving a wall of code with countless methods better than just a simple 4 lines of PDO code? &gt; in my opinion people can understand it better than well formatted code. Are you implying that "well formatted code" is harder to understand?
&gt;I know a company that was using Dropbox to deploy to production until a few years ago! They were also using it for "version control" Christ. I know they exist but the real issue I have is why? Granted LXC was difficult to use without system admin/linux knowledge but there is no such reason with Docker.
I never used Mercurial. What are the main differences from git?
Containers per project is fine. You will have a docker file in each project that defines containers for each project. I implore you to read through the Docker documentation and try to follow along some tutorials. 
start with some beginner courses, at this point, it seems you have no clue what docker even is nonetheless how to use it. &amp;#x200B;
From the specks of information I encountered by accident, at least one major difference is that GIT history is mutable, whereas Mercurial history is immutable. If you're paranoid or have an obligation to be able to prove anything and everything, that difference may be really significant to you. I have no first hand experience, so please don't take my word for any of it.
Have you found a satisfactory way of running NPM/Yarn and GULP? &amp;#x200B; It's the one thing I'm having to rely on native installs for.
&gt; with even with **unreliable** mysqli How is that? 
Setup a Linux VM. Install docker inside. Setup your IDE to deploy to the VM. Enjoy the fact you can use this VM on any other host OS without having problems because of different file permission management. And you can manage how much RAM and processor the VM can use so you don't end with a macbook playing the "I'm a plane ready for take-off" tune.
You can check the code above and compare yourself. The word choice is poor, however, inconvenient or clumsy would be probably better.
I don't really think so. [Php.net](https://Php.net) is a documentation, not a tutorial. A documentation serves a strictly different purpose than a tutorial and there is a reason for that. A Documentation shows you in all detail, what a specific function does. A tutorial shows you some aspects of a function and focuses on how you can utilise it. That being said, PHP's documentation is actually very practical oriented and has a lot of useful examples. For a documentation, it provides a lot more than actually required.
Why are you doing it? ``` $stmt-&gt;execute(); $stmt-&gt;store_result(); // &lt;-- this??? Do you need cache?? $stmt-&gt;bind_result($id, $name, $price); ``` instead of ``` $stmt-&gt;execute(); $result = $stmt-&gt;get_result(); ``` Does it involve an optimization? Also, this line is redundant ``` if ($stmt-&gt;num_rows &gt;= 1) { // &lt;-- redundant. while ($stmt-&gt;fetch()) { ``` 
Question: Why we need that?
&gt; start with some beginner courses, at this point, it seems you have no clue what docker even is nonetheless how to use it. Hence this question; I don't want to be dealing with courses that mislead me and was hoping anyone here could post a credible guide. &gt; multiple php versions would be terrible and wrong in so many ways. How would I be able to test my web apps in multiple PHP versions locally then (with Docker)? &gt; docker have nothing to do with custom domains, they are resolved in hosts file. A guide to this + docker would also be appreciated. &gt; did you even tried to do some research? Not much because I don't know where to start and I don't wanna "test" things and get them wrong and retry and so on, again, hence this thread. I need to solve this as quickly as possible without facing obstacles which would hinder me from doing my actual work. Also, thanks for the link. 
Could you link me to some credible tutorials?
hmm interesting one, leave it with me and I will get back to you
\&gt;Hence this question; I don't want to be dealing with courses that mislead me and was hoping anyone here could post a credible guide. official documentation is a good place where to start, can't be more credible than that. it will also answer all your questions. &amp;#x200B; &amp;#x200B;
I mean they still have a HTTP site aswell sooooooooo
In the second example if you give the B class some field/method it wont be available in the same way as the class is invalid in first example.
Shouldn't need a a beefy graphics card for web dev. Unless you are doing stuff WebGL.
The main things are RAM and SSD. 8GB should be enough to get you going, if you're planning on running Windows 10 it uses 1.5GB without doing anything. An IDE like PHPStorm or Netbeans uses a further 1gb then containers on top (when you reach that point in experience) will eat another few gig so something that can be expanded to 16gb, 32gb would be useful (Most modern laptops will allow this). I personally have the Dell XPS 15 due to it being the best laptop shipping with Linux. It's pricy though and probably overkill for what you need but you can't go wrong with any of the XPS range really.
I don't know why you are being downvoted. The Docker documentation is excellent. It is how I learned Docker. &amp;#x200B; [https://www.docker.com/get-started](https://www.docker.com/get-started) &amp;#x200B; Gives you everything you need to have a decent grasp of docker. You can then work on creating your down containers for your PHP environments.
A graphics card isn't necessary. Otherwise I would go for as much RAM and CPU power as your budget can afford. My preference is an i7 with at least 16 GB of RAM, since I run virtual machines all the time (Docker and VirtualBox). If you use Linux I would actively avoid a separate graphics card. We have Thinkpad's with Ubuntu 16-18 at work, and while AMD graphics cards do work most of the time, the newer laptops with USB3 docks have a lot of driver problems with NVIDIA cards. That's just my experience with them, though.
I buy secondhand HP laptops, slap an SSD in them for speed and then install Linux with Docker. Don't need much more than that. If you are running lots of containers at once you will want a decent level of RAM.
You should probably go for 12 or 16 GB ram. With a docker image or a virtual machine running in the background and my normal tools for development i easily reached 8GB and the swapping begans. &amp;#x200B;
One of the main problems is private npm packages. Getting auth into the containers is a right so and so. I got round it with composer by using an auth.json file. NPM is a different kettle of fish
Why do you indent your code with 8 spaces!!! Are you some kind of madman?
&gt;Are you implying that "well formatted code" is harder to understand? Wow, that's hilarious :)) 
For a laptop shipping with Linux, it's pretty terrible. I have an XPS 15 at work (came with windows initially) and installing 18.10 was a hell. It actually took me 5 tries and during the first installation (without doing anything persistent, nomodeset crashed it), it managed to corrupt my windows installation. On top of this, some features are missing (like sleep mode) and it doesn't come with an ethernet port (wireless is working fine though). I've got an USB-C adapter with it (DA200), which works rather well, except that the Ethernet doesn't work 95% of the time. Generally speaking it took me over 1 full working day to set up the latest Ubuntu as I also had to compile a newer kernel. I still haven't managed to get the NVidia drivers to work... &amp;#x200B; I'm pretty happy with Ubuntu on this laptop now that I have (most of it) running, and the laptop itself is great! 
Wouldn't it be possible to rework this into PHPStan rule?
Cyclomatic Complexity is good for computers. If you want to write documentation for humans, it's better to use [Cognitive Comlexity](https://www.tomasvotruba.cz/blog/2018/05/21/is-your-code-readable-by-humans-cognitive-complexity-tells-you/).
How would you compare it to `PHP_CodeSniffer\Standards\Generic\Sniffs\Metrics\CyclomaticComplexitySniff`?
RAM and SSD are vital. I wouldn't except less than 16GB now days.
You're right, I'm gonna update my post by your recommendations. Thanks!
The phpCS sniff is for preventing this complexity from entering the codebase. This tool is to see which complexity is already in the code base (or not complex enough to trigger the PHPCS warning) and warns you to document it. Of Course if the code is complex you should always attempt to make it easier to understand, but adding a comment is often easier and safer.
That typed variable hack is interesting
Very interesting, will definitely look if I can add this as a metric. Added an issue here: https://github.com/NielsdeBlaauw/php-doc-check/issues/3
Haha obviously. Nah, while making a quick edit to the example this morning I missed that the GitHub web editor sets this as default indentation. Fixed!
So it's basically the sniff checking for docs above This approach might lead to long methods with event longer docs blocks. Keeping over-complex code "covered" and legitimized.
Here is the [class that does all the computing](https://github.com/Symplify/Symplify/blob/2a449a660d48658088e35be8bd565111c230fa78/packages/TokenRunner/src/Analyzer/SnifferAnalyzer/CognitiveComplexityAnalyzer.php). 
It depends. if you are going to us PHPStorm or Atom it would be great to have more than 8GB. If you are going with VSCode or Sublime, 8GB will do fine.
Bad code is bad. Yes. It should be refactored. This checker is not a replacement for mess detector or codesniffer. 
I think it would make more sense as a plugin for GrumPHP
&gt;For a laptop shipping with Linux, it's pretty terrible. Sounds like you got a Windows version and did some sort of dual boot set-up. I can say out of the box directly from Dell I had zero issues and still, 13months later have zero issues with the Linux only version. &gt; it doesn't come with an ethernet port This is true, if you get an ultrabook (from any vendor) they will very rarely have an RJ45. If you don't have a USB/Thunderbolt dock and ethernet is a must have feature then an ultrabook probably isn't for you. Anyhow, I still stand by its the best system(laptop) that ships natively with Linux
And? I am asking why in here.
Did you hear about CognitiveComplexity? It would be better if your tool could find missing doc's on those functions :-) &amp;#x200B; Anyways: heel goed bedacht !
If you plan on using any intellij products (PHPStorm/WebStorm/etc) you'll want an SSD, 16GB of RAM, and 4 physical cores or more if you can get them. 2 cores + hyperthreading will not be enough. 
and this is precisely why no one should use it ever. You'll get rate limited and blocked and you'll have to rewrite. Its pointless.
No dual boot, I simply removed windows
Thanks, didn't know about this and plan to give it a whirl at work today.
Ok I was thinking that upgrading ram on the fly
I think I can afford i5, thinking of adding ram on the go
Because undefined class when created will be of type stdObject which doesnt implement the interface and doesnt have these methods you would declare later on
I second this, I have 8gb on my Mac but whenever Virtual Machine are a part of the setup I'm missing a bit of RAM (It still run but I have to make compromises). I plan to update to 16gb soon to be safe.
That's.... unusual. Might actually need one of the internals team to cast light on this as it's something of a logical contraction... Normally you would expect the class to only be defined once it had been proceed, which is why if you do: ```php class A { } die('No error plz'); class A { } ``` You don't expect it to throw an error, because it never encounters the second class... But if you remove the die('...') it does throw an error because it does try to define it multiple times. However, equally you can seemingly reference a class in the same file before it's been defined in some cases, but not in others. Wut.
Still not answering my question. Sorry friend.
Zag het ook al als suggestie van een andere commenter, ga er zeker naar kijken. Klinkt inderdaad als een waardevolle toevoeging.
I guess, /u/SaraMG can enlighten us about this topic. I have tried these snippets in PHP 7.1.19 .
This is very odd and surprising that you could use a class before it’s defined at all. After searching around I found this [SO post](https://stackoverflow.com/a/21437344) basically it seems like interfaces are handling at execution, which would defer the class from being parsed until then.
why would you want to test your apps with multiple php versions lol? the whole point of a docker is that it is a **contained** environment so it can be run on virtually any machine and have the same versions as the other guy.
[https://www.docker.com/get-started](https://www.docker.com/get-started)
are there laptops besides macbooks?
This is a good resource for generating pho docker stacks: https://phpdocker.io/generator Unzip the files into the root of your project and you’re ready for `docker-compose up -d`.
Wouldn't be better to have a tool that refactors such code to the one with lower complexity?
Since interface and class declarations are at top level, i expect them to be available at execution time.
Yeah. But there’s obviously something special about interfaces that make them be parsed during execution. If you want to know more maybe head over to php.net and ask their one of their mailing lists.
that tool is called : Colleague ;-)
That is a good direction. How can i find out a mailing list for this?
I'd recommend something with an i5, 16GB of RAM, an SSD and integrated GPU. 8GB works, but it's gonna start swapping as soon as you have a couple IDE windows, a browser and maybe a VM or two open.
But what's wrong with wanting to throw a parade? I think it is also a PR move to support OSS. And why dont you want to support this and encourage other companies to follow JetBrains?
Thanks so much! This is awesome! 
Yeah, it hadn't even crossed my mind that you could reference as a property like that and receive it's type checking. Horrifically hacky, but interesting on a theoretical level.
Oh no I got it, it's because you're using TABS!!! &amp;#x200B; Have you heard of PSR-2? ([https://www.php-fig.org/psr/psr-2/](https://www.php-fig.org/psr/psr-2/)) "Code MUST use 4 spaces for indenting, not tabs." &amp;#x200B; I would highly recommend sticking to standards, it facilitates collaboration ;)
Ha, yeah I've heard of psr-2. I've become so used to the [WordPress standard](https://make.wordpress.org/core/handbook/best-practices/coding-standards/php/#indentation). Adding phpCS with psr-2 standards check before the next release.
I have [this thinkpad](https://www.lenovo.com/us/en/laptops/thinkpad/thinkpad-p/ThinkPad-P51/p/22TP2WPWP51) at work and it is pretty good, I rarely open the lid except to bring to take notes in meetings, just plug it in. Only complaint is 8GB of RAM is barely enough, I'd rather have 16 or 32. It works fine with Ubuntu which was one of my primary needs, most of my coworkers use macbooks but those are much more finicky with linux. But if you don't have to use a laptop I'd go for a desktop any day. That's all I use at home, it's way more powerful and easy to upgrade, e.g. I just added an RTX 2060 graphics card a couple of weeks ago.
Already moved to bing maps. Google wants money for javascript calls
Tip for the future: If it says wordpress and standard in the same sentence, run away.
To make my apps backward compatible with all recent PHP versions?
How is the build quality or durability of the XPS or Dell in general? I bought an ASUS Zenbook a little more than a year ago. It works fine with Linux too (after some fixes). I'm disappointed of the build quality, it's worse than my previous ASUS (plural). I'm slowly looking for a new laptop since the screen died.
Yes. I love my MacBook and would highly recommend one, but there are plenty of other great choices too. I would suggest checking Linux compatibility if getting a non-Mac though. Being stuck on windows for web dev (or anything that’s not a windows desktop app tbh) feels like a non-starter to me. 
What do you mean by "warm the cache?"
A tool to visit some predefined URLs the first time in order to warm-up the cache so real users would have an already fast website 
100% recommended: [https://serversforhackers.com/](https://serversforhackers.com/) 
Bash script full of curls.
[removed]
laradock.io
Why did this person get downvoted? They're asking a question.
While I can appreciate where you're coming from, I think your approach is a little misguided here. When you're building web applications locally, you actually don't want to use Docker to test multiple versions of PHP. That's not a good use of your time OR Docker. Instead, you should be using Docker to network together all of your software dependencies so that you can match whatever Production server your application is going to be hosted on (ie: NGINX/Apache, MySQL, PHP 7.x). Additionally, having your Docker environment configuration version controlled will ensure all of your team members and contributors will be working in the same environment, thus taking out the "but it works on my machine" instances entirely. If you want to ensure full backwards compatibility with your application across multiple PHP versions, I would instead advise you to look into a good Continuous Integration tool. [Travis CI](https://travis-ci.org/) is excellent, and has first class support for Github. It's also free for open-source projects. This way, you can write your unit and integration tests at whatever version of PHP you want to support. Then once you make your pull requests, your CI configuration will run and make sure your application is compliant with whatever standards you set for yourself.
These things are often submitted to [bugs.php.net](bugs.php.net) instead of the mailing list. If it's not a bug (it's required or intentional for some reason) someone usually explains why.
And now imagine, anyone had such colleague for free at his or her service anytime they wanted ;-)
If I were you I'd: * Start with: [https://docs.docker.com/get-started/](https://docs.docker.com/get-started/) (NOT to be confused with docker.com/get-started/!!!) * Then glance over the info in: [https://www.reddit.com/r/PHP/comments/6wnlo4/docker\_getting\_started\_why\_its\_useful\_how\_to/](https://www.reddit.com/r/PHP/comments/6wnlo4/docker_getting_started_why_its_useful_how_to/) * Then read: [https://bitpress.io/simple-approach-using-docker-with-php/](https://bitpress.io/simple-approach-using-docker-with-php/) Then do some research into Networks in docker which is what you need to communicate between projects: [https://stackoverflow.com/questions/38088279/communication-between-multiple-docker-compose-projects](https://stackoverflow.com/questions/38088279/communication-between-multiple-docker-compose-projects) &amp;#x200B; &amp;#x200B; &amp;#x200B;
Lenovo X1 Carbon if you don't want Apple.
Have a look at some of these: [https://system76.com/laptops](https://system76.com/laptops) With a linux distro, it will run great. You can use VS Code as a code editor, plenty of other GUI for web dev, using docker for local dev as well as prod.
Cache is only useful for speeding things up if it exists. Usually, when you deploy large changes you'll want to flush all the caches to ensure things are updated. But now that everything is flushed things might be slower for your users. So as to not burden you visitors after a deploy it's a good idea to 'warm the cache' to ensure it will have everything you need cached or a bare minimum of the most expensive and critical caches.
it has a much more logical and simpler "user interface" (as in more streamlined command line parameters) 
Was looking into this ages ago and was a bit upset that it did not working with ODM. Will be trying this out again
They kind of specific to your application. If you want to hit a few URLs and cache the PHP code (optcache or disk cache), just do a few curl requests as a sanity check to test your app/and cache some files. For the big cache (redis/memcached /whatnot) it's to specify to your application, so better you design singing something yourself that works for your app. ( I got a 50tb cache that takes a few days to warm up, don't see how a pre-built system can warm that up...)
Pragmatic Programmer is one of my favorite books but it's not going to help you with algorithms. Bizarre book to recommend for algos. PP is more about best practices and personal development as a career programmer
I love my thinkpad + Linux -&gt; doing webdev full time. if money is a issue - just pick up some used one from ebay and install ssd + more ram. Thinkpads are great for upgredeability. &amp;#x200B;
And why the translation from urls to IPs..... 😮 Man man man. Sometimes I just want to tell people to not do it... OP, Don't do this project.
Exactly this, for the application cache you're always going to need to write something custom that fits your needs. The simple approach to this is to create a class or set of classes responsible for warming the cache and create a console command to call this service that forms part of your deployment process. You can make this as simple or as complex as you need, from a single class that just calls every method in the services or models that cache data and adding to it as and when needed, or a more flexible pipeline pattern that lets you plug in classes to take care of caching individual features that you can easilly include or exclude as needed. It all just depends on the scale and complexity of the application and the data you need to cache. If you're creating a simple blog, there's no harm in just having a command that retrieves every post from your BlogPost service to cache them and calling it a day. If you're caching 50TB of complex data, you're going to need something far more flexible and carefully designed.
Fluffy search? 😆
We warm our cache as part of the docker entrypoint. Although I am not a fan of this . I'm thinking of changing it by using Elastic Beanstalk post deployment command hooks. I suppose it's all to do with how you deploy. 
Squeeze the juice.
MacBook Air (even the second hand one if you can't afford a new one). PIRIOD.
It's to do with something called hoistability. At the start of the page load, the full make-up of B isn't known since it's got a dependency on X. So the psuedo-main is marked with an instruction to bind that class during execution. That instruction is executed after the new instruction, so you get an error. The second example works, but the hoistability of B is known ahead of time. Now, I could swear we lifted all top-level late-binds to the top of the TU, but maybe that broke when the AST got introduced in 7.0. It does seem like PHP should be able to do better here.
Huh... https://3v4l.org/iGuco Guess it never worked. Weird. My brain is getting old. I'll sit down over the weekend and see if the fix is as easy as I think it is, or if there's a reason nobody has done it yet.
I want to implement api platform at work so bad. Soon...
You could use something like this: https://github.com/spatie/laravel-sitemap It will hit all of your URLs assuming they are public. Or you could use it just to generate the URLs and make cURL requests. 
 A simple login and session management would be a good start. Just a page with a couple inputs to process and do stuff with. Then managing the logged in users session. I think this would be a good start. Almost every app has a login process.
I think you want /r/phphelp
I’ve been working on my first web app in Laravel and Vuejs. When you’re ready pick up a framework like Laravel and start building apis and get into databases and sql. 
I don't think starting with framework is beneficial at this point. OP (and everyone else in his position) needs to learn the basics first. Don't go with framework on your first project, OP
Personally, I'd start with a simple blog. It's pretty common for the first project but it's a good idea, nonetheless. You know what typical blog looks like so you don't have to think about that part, you can start with totally barebones form, skip the login part for now (I think that starting off with sessions/state management might be a bit difficult) and focus on two parts - a simple form to insert into the database and the part where you fetch the blog posts to display them. Later on you can add various improvements like login system for your admin panel, parsing Markdown (just an example), categories etc
Ooohh OP is that brand new? Damn OP has a long ways to go then. 
I'd also like to point out that if this is your first OOP learn it as OOP. Php is wonderful procedurally (and I use it as such daily) but there are times an object will just make sense. Luckily PHP has been a decent OOP since PHP7(.1). Later on, you'll more easily move into other OOPs because you've learned the basic fundamentals in php. An example with a blog in OOP is a post. Each post can be treated as a seperate object. Objects are things that share a defined structure. So a post class might have the following properties - Title,Date,Body,Author,Tags. Sure, you can procedurally do the same thing. But when you declare a class you're setting structure. You're forcing yourself to use that structure.
getNextBestDistributionCount is a complete hack in my opinion, i cringed.
Follow some tutorials if you're totally brand new, but once you start to get bored of tutorials and ToDo apps and simple blogs it's mostly just try building something you're passionate about. It'll end up being a much better learning experience building something more real world and it's a lot easier to stay motivated to keep working on it if it's something you care about. As far as ideas on what to give a go it's really up to you.
I've been using PHPMetrics for a while and love it. What's better in PHPStan?
You allready know I'm a fan of your work, but if we had such a free colleague, would our job be obsolete? hahahaha :-) Free at last.....)
It’s a completely different tool. See https://medium.com/@ondrejmirtes/phpstan-2939cd0ad0e3
PHP has had a pretty decent object model since PHP5 imo.
I'm actually enjoying programming on my Pixelbook. No issues running PhpStorm with the official Linux support that a lot of Chromebooks now have. i5 + 8 GB Ram + 128 GB SSD works pretty damn good.
If you do anything else to the framework, please, please, refactor your database class to use prepared statements. Can you give a good reason prepared statements are not used? You can keep your custom "type specific" validation and still use prepared statements. I know you're using \`mysqli\_real\_escape\_string\`, however there are obscure edge cases where this can break down. A little bit of research will yield examples. &amp;#x200B; This file scares me: [https://github.com/Envrin/apex/blob/master/lib/db/mysql.php](https://github.com/Envrin/apex/blob/master/lib/db/mysql.php) &amp;#x200B; Additionally, I haven't spent a ton of time going through the code relating to your error handling but it looks like \`process\_invalid\_sql\` and \`dberror\` will dump the sql statement to the client, which I probably don't have to explain, is bad, and it doesn't look like there's any way to configure that for a production environment. The error handler function in lib/functions looks like it's going to spit out the actual error: \`\`\` $response = array('status' =&gt; 'error', 'errmsg' =&gt; $errmsg, 'file' =&gt; $errfile, 'line' =&gt; $errline); echo json\_encode($response); \`\`\` the views/tpl/public/500.tpl also spits out the $errmsg. &amp;#x200B; There's also many numerous places were XSS is probably exploitable, just from clicking around the code for a few minutes. &amp;#x200B; At least make sure you are addressing the OWASP top 10.. one of the benefits of a mainstream framework (which are really very easily extensible) is that you get thousands of eyes looking for and improving potential vulnerabilities. &amp;#x200B;
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
You should make a website with blog posts and make your own simple CMS with login system. Inside give user possibility to do CRUD(create, read, update, delete) with blog posts. CRUD is something that you will use on daily bases in PHP.
Download an exiting one.
Hey guys, &amp;#x200B; Zeeshan from HugoBot here. Most of my time while I am prototyping something, working on some project or just want to tinker with some snippet to see the output, I had to go through the hassle of saving the script, opening my terminal and running the code from there which was a little time taking and annoying if you have to do that a lot. So I came up with this idea to build an extension for VS Code that can run my PHP code on the go and show me the output right beside my code without ever having to leave the editor. Hugobot allows me to run my code and see the output right beside the code, all I have to do is just hit some keystrokes and the output will be shown. &amp;#x200B; I have been working on the product for the past couple of weeks and I am excited to share it with you all. I would love for you to take it for a test drive and leave your comments, feedback, feature requests and questions here. Happy to answer any questions that you might have. &amp;#x200B; PS. the extension is only available for VS Code currently, but our team is working hard to make it available for the other editors and IDEs - you will soon be able to use it on Sublime Text and IntelliJ. Stay tuned! &amp;#x200B; Thanks
The perfect API doesn't exi.....
Hey, this is pretty cool. It's kinda like a limited version of Jupyter Notebook but for PHP.
Thank you Sara. I am waiting for your response. Where can I see that pseudo-main creation? Can I track how zend creates it? Or can I check it through AST?
To learn more, check out laracasts videos Only try build a e-commerce system if it’s a crazy bespoke requirements or if your doing it to learn. The first thing you’ll realize when you start getting lots of experience is how complicated e-commerce can be. Don’t subject a customer to your first time build - pretty unethical unless they know it will be wobbly 
You should be teaching.. Really helpful and not sarcastic at all 😀 #not
Thank you for you advice I will try 😁
don't worry about him, just watch laravel videos and soon you will be great ecommerce program #not
Would love to see it available for Atom.io!
Suxh a good community.. Really helpful.. Gonna drop this one
/u/scooter_nz is right. An e-commerce website is a very serious undertaking and should not be attempted by an inexperienced developer on their own. There's so much scope for things to go wrong with things like payment gateways that until you've got enough practical experience to answer your questions you're going to run a high risk of potentially costly issues. I'm not sure I'd recommend something like WooCommerce, but it's a safer bet than rolling your own solution at this point. Unless you have some very, very specialised requirements, an off-the-shelf solution is your best bet at this point. If you run into problems as the site grows, then you can revisit that, but that's something you should only consider at that point. It's almost certainly a bad use of your time to build a custom e-commerce system for it unless you have an existing e-commerce site that already has a fair amount of business and you're running into some kind of limitations.
From the website: &gt;⚡ Support for Sublime Text, IntelliJ and Atom is coming soon I guess that's coming too. I'm an Atom user myself and would very much like that. &amp;#x200B;
I use [Lando](https://docs.devwithlando.io/), which is kind of to Docker what Vagrant is to Virtualbox, and it does well for me. You configure it with a simple YAML file and you can specify what services are installed, select different PHP versions, and so on. It also has presets for popular CMS's and frameworks, such as Wordpress, Drupal and Laravel, and lets you use custom domains for each one locally. That said, I have had mixed results using it on Windows, but that was on a work machine that had a load of crap installed on it, so you might have better luck with it.
Because they don't care about OSS, they care about JetBrains bottom line, it just so happens that supporting OSS is good for their financial health. It's not about supporting it. Other companies will follow suit if there's financial gain in it for them.
A simple CRUD application like a blog would be a great start.
I think I tried every way I could find. Across Win 10 (pro), OSX and Linux I tried the original docker installation as well as docker toolbox as vagrant/virtualbox and vmware solutions using the default file share as well as nfs/rsync/unison and smb solutions. Some setups had a better performance but they introduced other problems. I do need to point out this was probably more than a year ago, and I suppose there are improvements now. 
Is there a way to keep up when the phpstorm/intellij plugin is released?
For starting out \- Start reading the documentation of docker, you have to get familiarized with concepts that are unique to docker \- Start small, eg a simple web server container serving only static content \- 1 process per container, although a noble goal, is not always the best use of developer time ( look up supervisord ) \- When you are ready to spin up your second container that you want to link to the first, don't do it by hand, docker-compose is your friend and will save you LOTS of time \-- &gt;The services required would be: Multiple PHP versions starting from 5.6 preferably (with tons of extensions, incl. xdebug), MySQL, Apache, Redis and custom stuff per container whenever it's needed The point of docker is to have microservices not a full stack container apache (\*.\*.\*.\*:80, docker-network:80) &lt;---&gt; php-fpm (docker-network:1234) &lt;---&gt; mysqld (docker-network:1235) |-&gt; redis (docker-network:1236) &gt;Can containers communicate with each other? Eg. I'm developing a SPA on one container and an API on another, is it possible to test out this scenario? docker networks are awesome and will do what you want &gt;Files should be on my local Windows machine of course and I need my databases to persist even when the containers are shut off volume mounts straightforward, just read up on the manual :) &gt;Possibility to have custom domains (eg. mycustomproject.test) &gt; &gt;\-- &gt; &gt;WordPress support Thats outside the scope of containers and only depends on your webserver/loadbalancer/php config \-- Extra points: \- Version control for your DOCKERFILES \- use linux on a vm, docker-ce is a terminal based application \- As i said before docker-compose is a great time saver once you deploy, i wish i started to use it earlier \- a user in the docker group essentially has root access &amp;#x200B; 
I will probably post the link here on Reddit when I release that - but you may also follow the product's twitter handle for the updates [https://twitter.com/hugoobot](https://twitter.com/hugoobot)
I really appreciated the docker manual when i started using ansible and had to read their manual
Very nice!
Awesome! Gonna try this out, thank for your work in building this.
&gt;No dual boot, I simply removed windows Ah sorry when you said &gt;It actually took me 5 tries and during the first installation (without doing anything persistent, nomodeset crashed it), it managed to corrupt my windows installation. Made me assume it didn't come pre-installed with Linux because you were trying to install it and the machine had a Windows partition on it that it corrupted which lead me to believe you were dual booting to have both a Windows and Linux partition. &amp;#x200B;
Compressing images does not make much sense given that images are already compressed. Encoding a response as gz for images is heavy on the server that does the encoding, and the device that has to decode it, for basically no gain (depends on the image format, however). &amp;#x200B; What is your goal? do you want to save disk space?
Really nice, I was using "Code Runner" on Mac but it stopped working the last few week, great! (Last time I've said I use VS Code and not PHPStorm in Reddit I've been flamed hard 😰)
&gt;How is the build quality or durability of the XPS or Dell in general? I use to work with a company in the UK that repaired all the major brand's laptops that wherein warranty like HP, ASUS, Sony, Toshiba and Alienware but I left a year or 2 after the ultrabook craze started so I only have a few hands-on ultrabooks to compare them too. Overall the build quality is very solid, there is no flex at all in the chassis at all which is pretty incredible considering it's so thin, it's on a par with the Sony SVP range which was a full metal body. I've got the 1080p screen on mine and paired with the infinity edge (slim bezel) it makes for a gorgeous display, nice and bright with great colour. I've not tried or seen the 4k version so can't comment. The performance is what you'd expect at this price point so can't complain about that. The biggest issue people have with them is the positioning of the webcam as it's on the bottom of the display, it doesn't bother me as I never have the need to go on webcam but something to consider if you do/want to use the built-in camera. It's good quality just bad positioning. I only ever touched one of the early UX31 (2011/2012) Zenbooks which was a prototype as well so wasn't a final product (but I believe very close to being one) and the biggest things for me with those was the screen looked washed out the keyboard wasn't great to use, there wasn't much travel in the keys. Both these areas the XPS excels in so might be worth a look. Best advice is going to a local computer store and try one out before committing to purchase.
compress indeed was a poor choice of words. The goal is to reduce the filesize sacrificing the least amount of image clarity &gt; What is your goal? do you want to save disk space? definately not, disk space is cheap, load time under poor network conditions is my main motivation &amp;#x200B;
Hey, marios88, just a quick heads-up: **definately** is actually spelled **definitely**. You can remember it by **-ite- not –ate-**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
I use PsySh for this, am I missing something?
Nice! I've gotten quite used to using Quokka.js as I'm in the JS world at the moment, and as moving back to PHP for a job, this is gonna make my readjustment buttery smooth. Cheers OP!
In this case you just need to minimize the amount of times you compress images. &amp;#x200B; For example gzipping on the fly for every request is definitely not good for your cpu... if you want to gzip a file you need to do it once, save the gzipped file somewhere, and then always serve that already-gzipped version of the file. &amp;#x200B; If you need to serve a 200x200 thumbnail from a big image, you create it once with the right compression format (jpeg for photos, png for illustrations) and you save it somewhere, then from the second request onward you serve that saved version instead of re-compressing the big image again. &amp;#x200B; ...which is probably what you are doing already. I don't think there is more to say!
I misread, LOL. If you want to make the images as small as possible for improved transfer speeds, then a good way to start is using JPEG because overall they have the better quality/size ratio. &amp;#x200B; If you need to compress illustrations, PNG (paletted) might result in smaller files and unnoticeable compression artifacts. Paletted PNG might also work for small photo thumbnails, for example a 200x200 photo as paletted PNG won't look too bad. &amp;#x200B; On top of that you might try gzipping the images (as explained before) but keep in mind that you will gain almost nothing from doing that.
The Dell XPS 13 Developer Edition is brilliant.
Got it. The term "static analysis" is confusing here. PHPStan aims to find bugs where PHPMetrics checks the complexity of the code.
It’s a very broad term, yes. Here’s a comparison of some other tools (that you should combine): https://medium.com/@ondrejmirtes/three-pillars-of-static-analysis-in-php-f3f5d7bfd61b
This is great and all, but where's the source?
Ah sorry for the confusion. It came with windows and I wanted to replace it with Ubuntu. I didn't have nomodeset the first time and it crashed just before I could select which installation option I wanted to do (overwriting, dual boot etc). So I restarted and windows started giving blue screens and couldn't boot anymore.
The AST won't indicate binding, you'll want to look at the bytecode output which will have entries like.... ZEND\_BIND\_CLASS or something like that (still not in front of a computer). That'll have been created inside zend\_compile.c
The AST won't indicate binding, you'll want to look at the bytecode output which will have entries like.... ZEND\_BIND\_CLASS or something like that (still not in front of a computer). That'll have been created inside zend\_compile.c
As you type, results appear inline. Instead of having to rerun the same snippet manually, you just make the code change and the result appears.
It's the volumes and I've had the same issues with Windows 7 &amp; 10. It's great if all you're doing is running the container for services like mysql, rabbit, solr, but attach a volume with a large amount of files (like Symfony) and it's incredibly slow.
I found it easier to just run a UI on the Linux in the VM and do all the development in there rather than trying to sync the files between Windows and Linux. The filesystem differences can be a pain.
Really awesome stuff. Coming from a sublime user who has never used VS Studio, how do I get this setup? Are there any dependencies needed?
I installed and it isn't working on my end, can anyone let me know what the correct way to set this up is?
So here's the line that excludes classes with interfaces and traits: https://github.com/php/php-src/blob/1bd7a9d6d1898d7941a871ede023db212580f958/Zend/zend_compile.c#L6539 As to the why, it does look to be a bit deeper than the "try again" policy I was thinking of. At least, a more significant change than I'd want to do without consulting Dmitry first.
cool, will give it a try!
cool, will give it a try!
So, this situation is explicitly defined as-is in here. Can we say that this is the expected behavior? Should the error message be changed to represent specific error or should PHP look ahead and resolve that interface implementation?
Hi guys, this is my latest project, some of the features include: &amp;#x200B; \- Crawlers for Pixel2life, Tuts Plus, Hackr.io (so far) \- Report broken links with reCaptcha from Google - Broken links go into the db, and from admin panel you can directly delete the entry from the DB, or you can delete the report; \- Ads management, in admin panel, you can add multiple ads, and you can select which one you want to use (want to make an ad rotator soon) \- Statistics in admin panel: how many tutorials were indexed today, this week, total. \- When a link gets reported, the administrator gets and e-mail with the reported link id. \- Added Cookies consent because of EU regulations. &amp;#x200B; Still under development and adding more sources for crawler. What do you guys think? &amp;#x200B; Thank you, Cristian
On an S8+ the page doesnt quite scale right (search button). Looks good tho. If I remember I'll test it from home this afternoon
Quokka.js is awesome. I often need php scratch board.
&gt;I installed and it isn't working on my end, can anyone let me know what the correct way to set this up is? Can you please open the issue here [https://github.com/hugobot/hugobot](https://github.com/hugobot/hugobot) &amp;#x200B;
You just need to have PHP installed on your machine other than that there is nothing much this extension requires.
That's because it's designed to work with (B)LOB data, which may contain huge chunks of information, such as images, documents, etc. The underlying layer already returns a resource if the adapter supports that: the `is_string()` block only provides compatibility for adapters that don't correctly use a resource for representing larger streams of data.
Yes, indeed you are right. I have an S7 edge and it is a little offscale. I will try to fix that. &amp;#x200B; Thank you.
You should be able to chain multiple monitors off that mini display port. See: https://www.displayport.org/cables/driving-multiple-displays-from-a-single-displayport-output/ Alternative get a docking station.
Oh really? Did we meet on Github? Well, Our job is obsolete, that what it's not to so fun as it could be :) Making such helper would put human and computer on the same level. 
I think the intention is to improve it, but without any promise of when. The reality is that this is EASILY avoided by writing well organized code. This error really only shows up if you've got definitions and statements randomly interwoven all haphazardly.
i'd wait for 7.3.2 - there are a ton of instabilities with opcache that cause random failures!
Nice, thanks.
Does it work in Windows version of VSCode? PHP is installed and configured properly, but still it's not working.
For any decent development, you need an SSD and allot of RAM with a good keyboard. &amp;#x200B; \- Usually it's cheaper to add an SSD to a laptop than to buy one with it in it. \- Be sure to try the keyboard /read reviews on it, since missed keys really break your concentration when you code. \- CPU, depends on the tools you use, but i would not touch anything under dual core with hyper-threading (better 4 cores), make sure to research/compare the CPUs, sometimes older generation laptops are at the same price as the new ones, with a slower CPU. \- RAM, you need more than 8GB... if you plan to do any real work you need 16-32gb minimum (so make sure your laptop has 32GB or can be upgraded to 32GB) A few tabs opened, plus your IDE and dev database in memory and you will start swapping, meaning really slow to do anything and new SSD every year (had a colleague do this with his 8GB ram laptop) \- Network: make sure it has AC adaptor (have a buddy that got one in 2018 with BGN only... wanders why it's show to checkout projects) \- Videocard: preferably integrated video-card, (for web dev) anything good will drain your battery allot (1060ti looks good on paper, but a 45min battery life really sucks) \- Battery: depends how you use the laptop, if on the move allot, make sure it lasts as long as possible and that you can swap it out (so you keep an extra with you on the go) If your not on the move allot, look at a desktop, you can get it at half price almost. \- Size/weight: If you take the plane allot, (and your circumference is not to big) 14" will fit between your belly and the chair in-front of you. Rest see what you don't mind having in your bag with you all the time. \- Bonus: if you do any server work, make sure you have the normal size RG45 network plug, since the damn adaptor will be nowhere to be found when your at the colo fixing stuff at 1am.
Hope they fixed the keyboard on those, I had one a while ago with keys that would not connect all the time (you feel the press but would not actually press). And you can format pretty much any laptop and install linux on it, don't have to spend extra for one that comes with linux.
Looking forward to the sublime port
Thanks, that makes sense, I didn't realize PDO has the same behavior. I'll indeed submit PRs for the docs.
Did you check [http://php.net/manual/en/ds.installation.php](http://php.net/manual/en/ds.installation.php) ?
Please refer to google or r/phphelp. 
What I fail to understand is where I should install the library 
I've tried it but the VM just feels too unresponsive. It would probably work if we were running faster hardware
Please make phpstorm extension
VirtualBox or VMWare? I can’t do it on Virtualbox, it’s as you described. VMware, especially in full screen, works nice
Who uses pear anymore? it's 2019...
Optimization &gt; Compression. This package (for laravel) [https://github.com/spatie/image-optimizer](https://github.com/spatie/image-optimizer) is a good example of how you would take it a step further. I personally use this in the apps I build. Essentially you install binaries on the server that are called via a shell process which runs image optimization algorithms with the specified files. So to summarize, I use Imagick via "Intervention Image" to resize and constrain, then use the binaries to squeeze the images until they pass a page speed test.
People who install PHP extensions?
Since you mentioned security, let me recommend reading this and keeping it in your back pocket while you're building whatever you end up building. [https://paragonie.com/blog/2017/12/2018-guide-building-secure-php-software](https://paragonie.com/blog/2017/12/2018-guide-building-secure-php-software)
You mean PECL?
I used it when converting my site from 5.5 to 7.2 last week. Several of the extensions I've been using for 10 years are still there.
Not everything is there.
Don't learn PHP, learn Rust or Go
I would probably consider moving away from those extensions, but that's your call. As best as I recall, PEAR isn't quite as active so a lot of the libraries there haven't been updated in a long time. This may no longer be the case, but it was the case for a good while.
Such as?
Hi, PHP dev on windows 10. Sorry for the bad news but Docker for Windows is a very bad idea, as it requires Hyper-V and Windows can't support Hyper-V and whatever other emulation Virtualbox and VMWare use at the same time. This is an issue for a lot of devs who use e.g. Vagrant boxes to work in multiple projects, such as me. There is Docker Toolbox, but it's mostly a mess, old, and probably completely unsupported. Symlinks between the different filesystems have ended up creating some very peculiar situations, Windows drive always has 0777 perms so e.g. SSH keys won't be trusted, you can't actually launch VMs directly from WSL without some hack to make them actually use Vagrant/Docker/similar on Windows side, which has it's own issues again. No sound, no built-in X support, no 32-bit compatibility, ... In short, there's a massive list of issues that can easily block someone from using these tools effectively, and annoyingly Microsoft's official answer to many of these complaints on their uservoice has been that they don't plan to fix them. They clearly plan to keep the WSL a 2nd class citizen in their world, with mostly an advertising value to be able to say "hey developers, you can totally work on Windows with your \*nix tools". &amp;#x200B; I would recommend you try [Vagrant](https://www.vagrantup.com/) or [nanobox](https://nanobox.io/for-developers/) as they offer the same product stack on windows as well other platforms without Microsoft locking them down to terrible services on windows.
I tried several topics and the result is disappointing. Google yields much better results.
 Install WampServer with PHP 7, MySQL 5.7 and MariaDB 10.2 on Windows https://php.tutorials24x7.com/blog/how-to-install-wampserver-on-windows
You are missing semicolons and closing a bracket, try this: `&lt;?php` `if(isset($_GET['vsent'])) {` `echo "color:green;"; echo " font-size:1.2em;";` `}` `?&gt;` You can also try and do the following: `echo 'color: green; font-size: 1.2em;';`
Thankyou. 
I wouldn't insert the style in the element itself personaly. I would create a css class with this style and do something like this: `class = &lt;?= (isset($_GET['vsent']) ? '"classname"' : "" ?&gt;` Nothing wrong with your approach. Classes just make the webpage more maintainable, since all styles are located in one spot: the css file.
Why is MVC impossible in PHP?
Hello, &amp;#x200B; Thank you for trying the website. What search have you tried if you can share that with me? Also, please keep in mind that the website only indexes 3 others ( pixel2life, tutsplus, hackr.io ) so it is normal for Google to give better results since Google indexes millions of websites. They cannot be compared. &amp;#x200B; Thank you, Cristian
 class="&lt;?php echo isset($_GET['vsent'] ? 'classname' : ''; ?&gt; This feels cleaner
It says so in the first paragraph: &gt; The easiest way to install the extension is via » PECL &gt; pecl install ds If you don't know what pecl is, you can learn more about it here http://pecl.php.net/index.php It is not a pure PHP library, it's an "extension" and thus is handled differently. 
My use case is that I want to allow the user to write custom scripts. This means that I need to execute user-supplied javascript code on server-side using PHP. I have come across two good solutions. 1) PHPV8/V8JS = PHP's official extension for embedding JavaScript using V8 2) PHP-JS = Another solution to execute user-supplied javascript using PHP by a company named Copernica Any thoughts on this? Has anyone worked with a similar use case? Your thoughts will be appreciated. 
What I mean here is not some classic like: `$view-&gt;render( "template.whatever", $values );` But a pure composite view with any actual html output abstracted behind classes. More of `return new SomeView( ExactType $exactValue );` rather than the latter. &amp;#x200B; Please do note that I do not ask for judgement of any similar aproach - only for examples to look at.
And you should using a template engine. But that's just my 2 cents.
I don't have a good answer for you, but I suspect you might struggle to find one anyhow. There's something about embedding another language into PHP that makes me uncomfortable.
Really enjoyed this post. It shows where PHP could go as a more general language, still focused on the web.
Sure, I wrap almost all of my HTML in classes rather than templates, I personally hate using associative arrays to pass information, I much prefer using properties and arguments.
RemindMe! 6 weeks
I will be messaging you on [**2019-03-03 16:47:39 UTC**](http://www.wolframalpha.com/input/?i=2019-03-03 16:47:39 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/PHP/comments/ahxwjl/some_light_sunday_reading_about_the_strangest/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/PHP/comments/ahxwjl/some_light_sunday_reading_about_the_strangest/]%0A%0ARemindMe! 6 weeks) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! eejm8so) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
No as I really like my Twig :) But I did use other classes assigned to template instead of actual entities. Not all the time but only when page displays too much info and I don't want to have bunch of if-else statements in it. Sure... it is doable but makes template harder to read. When such situation is needed, there is interface to be used in templates and service will generate anonymous classes that implements it. Because it is generated by service, I have benefits of DI and each anon class can calculate return values. For some really messed-up situations (only once so far), the service will work with tagged services and use them to generate views. 
Looks almost like the thing. Could you possibly point me to a live application of this principle, maybe with a source even?
Afraid not. I use it internally for enterprise projects, but it's not a popular style, probably because people get a bit too focused on MVC, which I hate with a passion, and use something like Twig, or they don't use any abstraction at all.
The approach you mentioned is what can partially be seen almost anywhere, and I also did it a lot. It is an exact opposite of what I have asked about though. Thanks for your consideration of this topic regardless.
Same. Ive wanted to learn elixr recently and learning about phx sounds amazing. Bringing that to php/laravel would be amazing. I know some javascript and kind of like it but to avoid writting js i can work soo much faster.
The book "Developing Large Web Applications: Producing Code That Can Grow and Thrive" by Kyle Loudon does something akin to this. He takes it to the n-th degree and composes entire pages from individual modules all stored as classes. Each class can provide its own inline HTML, CSS, JS or reference external assets. The page gets defined in one class as a set of objects mixed together, and handles generating the various script and link elements. I think it is something that makes sense at the extreme scale and disparate products being combined that someone like Yahoo (it's a Yahoo press book) may need. It felt like a lot of building your own framework for the sake of doing it. When I used it, it was a bit overkill and I ended up heavily reducing the functionality later in the project to speed up.
Is this a question coming from someone who prefers looking at code than HTML?
As these were asked for mainly to evaluate the approach practically and infer its advantages (of which it promises to be teeming with), it actually won't be a big loss if you could elaborate on this matter wordly instead, if you are interested in spending your time this way. &amp;#x200B; Had you ever any "fundamental" problems with this approach for example? I understand that it may be too broad a question, so it can be narrowed down to "imposible to apply" situation.
I've never had any problems with it so long as its structured properly and consideration it put to create suitable interfaces at the earliest opportunity. For example, I always have what I call the outer renderer, this is part of the internal framework and takes care of things like the head element, scripts, css, links and so forth. That's practically identical on every website. Next up I have what we call the frame renderer, this is what makes the website conform to a particular theme. For example, most websites have a particular banner, navigation area, footer, and then the individual page content is placed in a particular spot. It's the job of the frame renderer to contain that layout and call out to other classes to control what is rendered in each particular location. Usually the last layer is the content body renderer, in my case this is usually a function callable rather than an invokable class instances. The content renderer deals with just the part of the page which is specific to the actual URL being requested. [https://imgur.com/a/XMxkqWS](https://imgur.com/a/XMxkqWS) Each render is responsible for telling its children when to render, until the complete page has been formed, and spat out by the outer renderer. Obviously there are a few ways to deal with storing the chain of renderers and their associated properties. 1. The renderer holds information about its configuration. For example my frame renderer might want to display a title, so I might set that as $frame-&gt;setTitle('My Title'); 2. Alternatively, it may be that you want your renderer to pull its title from part of the action controller, this way it is immediately available to the action controller itself for other reasons, say you want to log every visit along with its page title to the database... that information is "owned" by the action controller, in which case you need to tell your renderer how to find it. Your action might implement "interface TitleFetcherInterface { public function getTitle(): string; } You would then pass your action object to the frame renderer and let it call the getTitle() function when it needed it. 3. &amp;#x200B;
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/nLd485t.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20eejxpmf) 
Why not delegate to node with shell_exec? 
Thank you for this direction, will look into this. Were there any problems besides the size of the framework when you used this? I'm also a bit confused by this, as when I outlined this principle in my head priorly - it didn't seem to require much boilerplating or scaffolding, let alone a whole framework to manage.
I will pre-apologize for stealing your mongoloidb and not giving you credit for it beyond, "Some guy on reddit"
I have a lot functions in php which needs to be available to the user provided javascript. 
More likely one who seeks for a more efficient ways of accomplishing tasks. Can't say I see a general difference in witnessability between programming language code and markup languages. I may have not understood properly what you did imply, but it sounds like you are going to judge the matter that I have asked of based on my personal preference, which does not seem very constructive. Please do note that I simply seek for an existent application of said thing for the purpose of evaluation and inference of any qualities, but based strictly on particular instance rather than an approach in general.
I would check out https://github.com/Level-2/Transphporm
I'd recommend either requiring that the user write PHP (and you exec in a sandbox), or writing those functions you have in js. Trying to run Javascript in PHP, ie calling PHP functions from JS sounds like a world of pain and insecurity. Sometimes the problem you are trying to solve already has you on the wrong track. 
Those php functions are already used in application. If I write in javascript, that would be duplicating of code. Not to mention, the php code is using framework specific features. 
Seen this one! Peculiar stuff. Alas, while being miles far from conventional approaches, it is also nowhere near to what I've asked for. I also imagine it being very tricky to use in cases of heavy data bound view logic, or any view logic at all, being more on declarative side. I would have to declare transformers for many operations that could be concisely expressed in-place instead, or fall back to more traditional style for such pieces and then pass them to the system "raw". What can you say about this, as a contributor?
This mostly follows what I have imagined to see. Thank you for not only a relevant, but also an elaborate answer! Much appreciated!
Seems to work and a fun little project, but I am not sure why I would use this over https://placeholder.com/
It’s just an alternative really and the video place holders are fairly unique. I have a few ideas on how to make improve it but I’m not quite there yet.
It appears to deliver image of wrong dimensions if they cannot be satisfied for selected category. I also think that if the requested image cannot be delivered ( e.g. allowed dimensions exceeded ) it is better not to return an image response at all, or any other placeholder just for the end user convinience, along with a proper http code.
That’s likely just a bug, I’ll review it and set the maximum size for the real photos. 
If you really want to improve don't watch videos. Read some good books and participate in opensource projects.
Videos tend not to be very good for coding instruction. There is some good content out there, but generally you'd be better just reading.
Their whole thing seemed to be isolated / reusable components that could be combined without a thought to their dependencies. So if you had a weather widget and you wanted to embed it on the home page you just create the object and on render it will pull all of the dependencies and source. It is a great concept and I'm sure I just implemented it poorly. But if you really commit to it, you'll have a page object for each page, layout object for each page type (2-col, 3-col, blog, splash, etc), you end up making objects to define internal layouts (I need the weather and news to stack vertically, the sports is in a tabbed view with the stocks, etc). I think it could really help if there was a solid base on which to build and you have multiple devs across different departments all contributing to a single product. Like I said, overkill for most. Buuuut, I think it is the most evolved version I've seen of what you were talking about. It has helped informed how I think about building single page apps in a large scale enterprise app, and boy do you need a good OOP base to make it work. I would re-read the book if I was doing a large scale PHP-based app where UI was generated on the back end. But I'd probably end up extracting the actual HTML into twig templates, and using the objects as a way to give the app insight into the needs of the HTML from a JS/CSS perspective.
If i am not mistaken, zend framework 1 used this approach. Personally I found it bit over complex and spend more time figuring out where the HTML came from. To much inheritance before the actual composition layer. 
just a spot check opinion, no personal experience: php-js's github project is substantially more active. that company seems to care about it working, but its still gpl 2. phpv8 looks more 'official' but its clearly a one man part time maintenance operation. good luck with your use case I'd love to hear how it pans out.
&gt;Websockets are the perfect tool for near-constant communication between client and server. Aren't websockets kinda deprecated since they are no longer supported in HTTP2? I thought this is why https://mercure.rocks was made
I can't say that I'm an expert, but this was an interesting read- [https://www.infoq.com/articles/websocket-and-http2-coexist](https://www.infoq.com/articles/websocket-and-http2-coexist)
For coding you need practice to improve your skills (nothing beats trial and error), but game design is far more complex to improve by ones self. You could check youtube for 'extra credits' channel, they have great collection of game design insights where you could learn from others failures/successes.
I'm uncomfortable about executing user supplied JS..
So, this is what you've been working lately:) Nice, I hope it will get somewhere. I'm wondering, couldn't the "data" =&gt; (string) $object-&gt;statefulRender(), be replaced with "data" =&gt; (string) $object-&gt;render(), so this wouldn't be needed root.replaceWith(...root.childNodes) 
Not html, but the JsonSerializable interface lets me compose my views to render as JSON purely by modelling class relationships. Graphql is pretty much this entire concept too, where I write my resolvers (close to the controller logic) and the JSON response payload it assembles is the view. The lack of a standard interface, and the bizarrely inconsistent and complicated ruleset of html makes it less convenient, but I started doing this approach back with Facebook's xhp. That's XML that renders to html, and the Lib makes it easy to compose. 
This looks very promising and exciting! It's a lot to take in for me right now but as a PHP developer who is still struggling with the whole JS world, this seems like it could be a great alternative. Hope this encourages you to go on with it. And I loved reading this along the way... &gt;Don’t believe, for a second, I just knew how to build this. It was a struggle. ...because that's something you hardly hear from someone who just shows up out of nowhere with something great. And this also encourages me to keep trying random things, thinking outside of the box. Eventually you might get there!
Users using Faker library; is there something wrong with this code? Cannot get it to work with \*any\* foreign language providers, not just JP This is linked to the Text provider; I can use -&gt;address, etc to generate foreign values w/o issue &amp;#x200B; \`\`\` use Faker\\Generator as Faker; &amp;#x200B; $factory-&gt;define(App\\Sentence::class, function (Faker $faker) { $jp\_faker = \\Faker\\Factory::create('ja\_JP'); return \[ 'vocabulary' =&gt; $jp\_faker-&gt;word, 'level' =&gt; $faker-&gt;numberBetween(1, 60), 'sentence\_jp' =&gt; $jp\_faker-&gt;text, 'sentence\_en' =&gt; $faker-&gt;text, \]; }); \`\`\`
use Faker\\Generator as Faker; &amp;#x200B; $factory-&gt;define(App\\Sentence::class, function (Faker $faker) { $jp\_faker = \\Faker\\Factory::create('ja\_JP'); return \[ 'vocabulary' =&gt; $jp\_faker-&gt;word, 'level' =&gt; $faker-&gt;numberBetween(1, 60), 'sentence\_jp' =&gt; $jp\_faker-&gt;text, 'sentence\_en' =&gt; $faker-&gt;text, \]; });
1. Simple blog 2. Simple mock online store
Check out /r/phphelp, and don't forget to search!
Yes. Seeing other peoples code is always good. 
Here is some built in PHP validation and sanitize functions - [https://secure.php.net/manual/en/filter.filters.php](https://secure.php.net/manual/en/filter.filters.php) Your input data should be in $\_POST\['field-name'\]. After checking, return errors back to let user know, repopulate fields (after sanitize), * Get input data * Sanitize data * Validate data * If no error, proceed to next step * If failed validation, you need to be able to pass errors back to the user, back to the form * Repopulate form * Display error Usually the way I pass data back is to use PHP session $\_SESSION, including the error message, and then you need to be able to output a field's error back on to that field, and repopulate that field's input from the session as well. Easier if you are posting back to the same page in this case.
Why do you need to use PHP at all? You're just checking if the 'vsent' query variable exists which you could do in javascript or even figure a better way and the CSS is fixed. &lt;style&gt; .vsent { color: green; font-size: 1.2em; } &lt;/style&gt; Then with javascript, add/remove the class depending on if the vsent query string is set.
That's not a bad suggestion. I'll give it a test. Thank you.
I'm not expert in them or HTTP2. I think that speaks highly of the Amphp's implementation. In terms of being deprecated...Ok. I'm not sure how critical web sockets are to this approach, given there are alternatives (like the one you pointed out) I could swap for them. I'd say it might have been better for me to phrase that as "websocket-like protocols are the perfect tool..."
Thanks! The filter_validate_int worked. Is there a filter I can use that checks for a string? Checks for chars instead of int.
I think this is awesome, just a quick question: &gt;If you’ve got a PHP project, and you can use it with PHP ^7.1 Is this why you type cast primitives in: &gt; $props = (array) $props; Instead of type defined: &gt;array $props = []
https://www.reddit.com/r/programming/comments/ai2v26/php_extension_repository_pecl_compromised/
No, that undefined type and type casting is because there are some situations where I the function could receive an object instead of an array. It's to allow both.
Wow i see, that's actually really cool for how flexible that would be.
That would probably be FILTER\_VALIDATE\_REGEXP \^\[a-zA-Z\_ \]+$ That regex only accepts upper and lower case latin alphabet characters, underscore and spaces, at least one character. That is a very limited regex for sure, only for latin characters, enough for school, enough for local audience probably, not enough for world. FYI for learning's sake \^\[a-zA-Z\_ \]{1,15}$ This makes it 1-15 characters required. {,15} 0-15, {2,} at least 2 chars, no max limit specified. Typically for stings, you do a sanitize string, then check if it's not empty, you could do strlen() as well.
Why do you think you need it?
I'm really not a fan of JSX, and I'd hate to see it make it's way into PHP with something like this phpx. I'm a strong believer in separations of concerns, and combining the presentation logic with the business logic is a step backwards IMO. We used to mix PHP and HTML, before OOP and MVC elevated PHP to more than a templating language, and it was terrible.
That's not separation of concerns, it's separation of technologies. The concerns we were bad at separating, in the time you're talking about, was that the view/response shouldn't know or care about the database. These components aren't meant to be a replacement for fat controllers. They're just a template engine with less distance between view/response state and the template it renders. JSX isn't for everyone, and I don't expect this to be either. I'm just not as much of a believer in separating technologies as you are. Thanks fo the feedback.
From a quick peek into zf1 and zf2 docs it appers that both in fact come down to separate template files ( ".tpl" or otherwise ), which is not the method I was describing, thanks for the direction though.
Right, so according to the article WebSockets will remain to a certain extend due to the legacy but to be replaced by HTTP2 + SEE (on which mercure is based).
My name is O'Neal, you cargo cult programmers.
What's the use of your site then? Is it just the learning project? Share its code then, so we'd review it. 
Strangest thing I built in PHP was a Cat Facts application for use on a Kronos In Touch timeclock. Technically all it does is echo random cat facts from an MS SQL database in to the JSON that the clock understands. None the less it was strange. And probably more complex than it needed to be with a full MS SQL table to store said facts. 
It even uses the clocks internal sound and light used for good or bad punches to indicate of the fact is a positive fact or negative one. 
You might want to have a look at using Lua instead of JavaScript. PHP supports evaluating Lua scripts and as far as I remember it’s very well sandboxed (so you don’t have to worry about the security impact as much. Still worth doing some due diligence on that though). You can find the PHP / Lua documentation here: [http://php.net/manual/en/book.lua.php](http://php.net/manual/en/book.lua.php) 
Yeah it is, a very wise man told me about it ;)
The traditional separation of concerns philosophy doesn't really apply to component-driven applications, because the components themselves (instead of the technologies) are where the separation of concerns take place. In Vue for example each component usually has its scoped CSS styles, JavaScript, and template all in the same file. 
Very good idea. I am searching for video placeholder for a long time. You may want to add a frame counter, or time counter, and the best feature would be to allow to give a random word and have a video (or a list of pictures) related to the words. &amp;#x200B;
I'm trying to disable the \`phar://\` stream wrapper altogether from php.ini. As of now, the only way I know to unregister it is using a \`stream\_wrapper\_unregister('phar');\` call. Is there a \`php.ini\` directive to disable it so I don't have to call this on every request? &amp;#x200B; Thank you.
http://bearsunday.github.io/manuals/1.0/en/index.html In BEAR.Sunday framework, The object renderer is injected into each object by "context" to have own view. View data and renderer are encapsulated. (string) casting to those object trigger the rendering o the object as well as the contained child object to having the layered view. Changing context enable to change the representation without touching application code. Like JsonRenderer in API context or HtmlRenderer in HTML context. The renderer also can be changed (=injected) individually for custom rendering. Here is an actual screen in dev mode. "green" page object contains each "red" table/child object. Each view has a dotted line to show the area, object name, view caching status. https://speakerdeck.com/koriym/bear-dot-sunday-2018?slide=106 https://youtu.be/ZQ_7gctfxBE?t=74 I hope this is related to what you are talking about...
Official API is easy to rate limit and block. That's why they are created, so service provider is in control. Unofficial usage is not so easy, since you don't authenticate. Only way to block it is based on IP address. Good luck with that when you use cloud server.
A comprehensive MIME-type lib allowing you to get known file extensions by mime-type and vice-versa. It uses [mime-db](https://github.com/jshttp/mime-db) underneath as it is most thorough and recent mime-types list, aggregated from [IANA](http://www.iana.org/assignments/media-types/media-types.xhtml), [Apache](http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types) and [nginx](http://hg.nginx.org/nginx/raw-file/default/conf/mime.types)
As a PHP developer, I used to use both Laravel and Symfony. I will consider Symfony as the primary framework when it comes to PHP. So if you can use symfony components, then you can use any other framework or even create your custom framework. However, I have noticed that new developers can find learning laravel easier than learning symfony but after they get used to it, they can move easily to symfony. especially that laravel also use some symfony components internally.
&gt; WordPress Nuff said.
Come on, what's the point in responding to a blatant corporate blogspam? I have a feeling that such blueprinted corporate websites for Bangalore-based outsourcing tech companies are coming with built-in blogspam feature. Either way, I'd just downvote, report and move on.
Ahem, STOP USING WORDPRESS!. * It's unsafe. * It's slow, painfully slow. Wordpress designers say "but you could use X plugin".. haha, it is still slow. * It's limited. * Its a blog system, it wasn't designed to be a portal or a web store. 
This is an interesting experiment, but compared using JS to manage the DOM in the browser (e.g. using React) this approach introduces a lot of complexity and potential UI unresponsiveness. What would be the advantages to taking this approach over using React, other than PHP developers not having to learn JS? Do you really think this could become a viable option in production? Apologies if this was covered in the article; I only read the TL;DR as the article is pretty long.
Wow, didn't really know that someone would do that. I have removed my comment
It was an employee .