https://silviodelgado.github.io/flywork Any help is welcome! ;)
I think something like that would be great! Falling back to the interactive questions though is a nice way to help people who may be new to semver.
But what if the old version I have has an issue. Like it crashes constantly or something. I would have to pay for an update on that right? Also the guy that made Laravel uses Sublime.
Ahh I see, so basically what the guy said above an API sitting on a database, what your looking for may have nothing to do specially with CRM you might have to get more generic with your terminology, the last CRM I worked with in php was highly tied frontend and backend.
&gt;But what if the old version I have has an issue. Like it crashes constantly or something. I would have to pay for an update on that right? Yeah. &gt;Also the guy that made Laravel uses Sublime. True. I primarily use Sublime. I wish he made a Sublime addon for Laravel, that would be so cool.
Kinda yes an API in front of DB.. sometimes a CRM has industry-specific features. i.e. I use to work with CiviCRM which is aimed at non profits. In addition to contact management, it had a campaign component, accounting, events etc. It was tied to a front-end of it's own, in fact it was tied to specific urls.
It really depends on what exactly you're needing to do. I mean, you can throw out the terms like ESB, ETL, and Workflow but if what you're describing doesn't really fit into what those actually are then recommendations kind of mean shit. If you're wanting to stick with PHP, which I assume you are since you posted this to /r/php, I would go with Symfony with Doctrine because a lot of the structure is similar to Spring and Hibernate. Symfony 4 actually has the added benefit of being able to create a console only application a lot easier than previous Symfony versions.
You know the rule: If you can't find a package for something you must then create one.
Ha thanks. On it! Which CRM have you worked with?
Sorry, kind of new to reddit and didn't know how to elaborate. We're a small e-commerce company and have around 15 PHP scripts, helping us to automate daily tasks. They are triggered by cron jobs. Some scripts have copy and paste code and some files are copies as well. We'd like to optimize that, since we're going to add more scripts/automation.
Without knowing complete details of what you're needing, to recommend a framework would only be guessing on my part. http://symfony.com - The latest version of Symfony makes it really easy to setup a console only application, which sounds a lot like what you're wanting to do. 
Adding on to this, symfony has cli script support (wiring services to cli calls) so you can continue with the cron, cli, automation type processes with the same set of services internally.
Custom php with mysql no packages.
I'm kind of new in PHP development ( and in programmings in general ). Can someone ELI5 me what generics means?
Yii2!
Thank you ! I saw your answer too late though and had to find a work around, so I did the search in SQL on the base with a prepared statement and recreated the table of objects afterwards : "where bk.bk\_title like '&amp;#37;".$searched."&amp;#37;' ". "or aut.aut\_name like '&amp;#37;".$searched."&amp;#37;' ". "or th.th\_title like '&amp;#37;".$searched."&amp;#37;' "; I'll try your solution later.
&gt; yoga
Yes, that looks more appropriate and I am going that way now. 
Do you mean Swing?
We all worried more about getting fired when we were starting out. Your attitude tells us that's not going to happen. Just don't risk overworking, because then you'll be too tired to actually learn and do things properly. i.e. The opposite of your goal. &gt; He told me not worry much Well do as you're told then. :)
I’ve been bitten by this - turning off automatic graphics switching helps a little, and of my laptop is plugged into my 4K monitor then it’ll be plugged in, so it’s not an issue. It’s still not perfect though.
If all you need are the matching items, filtering them in your database might even be a better solution than what I proposed as loading data you don't need is almost never a good idea. 
Pretty much any framework can do this. My recommended solution is Laravel and not because its the flavor of the month. Laravel has a built in job queue which is wonderful for ETL/service bus type applications. When running giant ETL scripts, if they fail they will often do so silently and may even kill any subsequent scripts you have lined up. Instead you can have the scheduler create jobs for each of the various tasks you have to run. Then workers will run them. If you have multiple workers you can even run them concurrently. But for me the main benefit for this type of solution is how it handles crashes. If a script crashes in a job you can set it to retry a number of times, and when it can't proceed it moves the job into the failed jobs table. You can also set up notifications for yourself so you know if that happens. Then you can resolve the issue and simply re-run the job. You can do this stuff with other frameworks as well with extra bundles or packages, but laravel has the queue functionality built in and its easily the shortest path to an excellent solution.
I mean Swing indeed :(
https://plugins.jetbrains.com/plugin/8006-material-theme-ui &lt; Try this
The last person I would ask where and what should I comment, is you, thank you very much :)
Thanks so much!
It's great if checking for equality is all you do. Start adding lesser or greater into the mix and you'll find yourself in some deep shit.
Generics allow you to write classes with strong type hints, but without having to specify the exact types in that class. First let's take a look at type hints. Type hints allow you to specify what type of arguments a function or method accepts. Let's say you are making a function to add two integers. If you pass something else to this function (for instance a boolean or string), this may result into unexpected results and bugs. To prevent this, you can add \`int\` type hints to the function, which gives you two big benefits: * They document the types of arguments a function accepts. This is very useful if you (or someone else) has to use that function and you want to see what you should pass as arguments. Docblocks work for this, too, but they have the risk of becoming outdated if you change the function but forget to update the docblock. * As said before, PHP will prevent you from passing an argument with a wrong type. Also, static analysis tools and good IDE's can analyze your code to catch these issues before deploying them to your production server. This way you can catch these bugs before they impact your users. Back to generics. Sometimes you need to write a piece of code that itself doesn't care about the type of arguments it gets, but where these types *are* important in the context where you are using that code. This may sound a bit vague so let me give an example. Let's say you need a class that stores a collection of objects, and you want to make sure that it accepts only objects of the same class. Basically, you will write a fancy wrapper around a PHP array: &lt;?php class Foo { public function foo(): void { // do something important } } class FooCollection { private $elements = []; public function add(Foo $foo): void { $this-&gt;elements[] = $foo; } public function getFirst(): Foo { return $this-&gt;elements[0]; } } $fooCollection = new FooCollection(); $fooCollection-&gt;add(new Foo()); $fooCollection-&gt;getFirst()-&gt;foo(); // you can call the `foo` method without worrying that you will get an array, because FooCollection will always return instances of Foo (unless FooCollection is empty, but let's ignore that for now) This works great, the type hints are enforcing that only instances of `Foo` can be passed to the `add` method and returned by the `getFirst` method. But let's say you also have a `Bar` class and want to use the same kind of collection class to store `Bar` instances. Currently, you would have to duplicate the `FooCollection` class and replace all instances of `Foo` with `Bar`. With generics, you would be able to create a *generic* Collection class, which you can then instantiate with one or more type parameters: &lt;?php class Collection&lt;Type&gt; { private $elements = []; public function add(Type $element): void { $this-&gt;elements[] = $element; } public function getFirst(): Type { return $this-&gt;elements[0]; } } $fooCollection = new Collection&lt;Foo&gt;(); $barCollection = new Collection&lt;Bar&gt;(); $fooCollection-&gt;add(new Foo()); // works fine $fooCollection-&gt;add(new Bar()); // gives an error, because Collection only accepts instances of Foo For more information, see [Generic programming](https://en.wikipedia.org/wiki/Generic_programming) and the [RFC for PHP](https://wiki.php.net/rfc/generics).
**Generic programming** Generic programming is a style of computer programming in which algorithms are written in terms of types to-be-specified-later that are then instantiated when needed for specific types provided as parameters. This approach, pioneered by ML in 1973, permits writing common functions or types that differ only in the set of types on which they operate when used, thus reducing duplication. Such software entities are known as generics in Ada, C#, Delphi, Eiffel, F#, Java, Rust, Swift, TypeScript and Visual Basic .NET. They are known as parametric polymorphism in ML, Scala, Haskell (the Haskell community also uses the term "generic" for a related but somewhat different concept) and Julia; templates in C++ and D; and parameterized types in the influential 1994 book Design Patterns. The authors of Design Patterns note that this technique, especially when combined with delegation, is very powerful, however, Dynamic, highly parameterized software is harder to understand than more static software. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/PHP/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Which industry?
Java is by no means industry standard. I've hardly met anyone who uses java. Python, if anything, is slowly pushing its way ahead but Php I think is still 60-70% used (based on 2018 stackoverflow developer survey) 
WTF is interview you've been told that? Were you going to an interview for a java dev position or what? 
Interested
Guessing this wasn't for a web development role (99&amp;#37;+ of all PHP jobs being web-related!). PHP (well, Wordpress) still runs an obscene percentage of the web. I can't remember the last time I saw a site written in JSP. Unless you mean JavaScript and not Java, and even then, JS frameworks for web, while they're gaining traction in the front-end side of things (as it should be) you don't see that many sites running on Node.
Especially in enterprises, Java is the de-facto standard.
I wrote on my CV that I'm a PHP learner,and today I went through an interview,the HR told me PHP is for minority and they only use PHP a little. HR said that JAVA is the industry standard,so they could teach me JAVA,and because of this,the salary they would pay for me will lower than I expected. I woder if these really is something called industry standard in IT business.I know that for web dev,JAVA/ASP/PHP/Python are all OK.Is the syntax of JAVA more strict than others so it's standard?Or the HR said loosely?
Maybe the word is loosely.I don't know,the HR's opinion on PHP makes me more unlikely to go to his company,the salary is secondary.
[https://w3techs.com/technologies/comparison/pl-java,pl-php](https://w3techs.com/technologies/comparison/pl-java,pl-php) I bet he told you Windows is the best OS ever..
Not really
Where exactly did you get that PHP has 60-70% from the Stackoverflow developer survey? I was actually saying that when someone pointed me to the survey to prove otherwise. I looked through the survey and there was nothing tangible to compare PHP usage too since they combine it with JavaScript (back-end + front-end) when its mentioned.
That's kind of ridiculous.I saw that job ads on the internet that they are looking for ***PHP developer***,not JAVA,not Python,not any others.Because the company is near my home,I went there,and HR told as is stated above.
Disagreed. I think the first is easier to read.
One benefit that people often forget, is that it's easier to check what kind of comparison is being done. if ($someLongVariable-&gt;withLongGetterMethods()-&gt;doesSomethingElse() === null) //vs if (null === $someLongVariable-&gt;withLongGetterMethods()-&gt;doesSomethingElse()) In the second example, you can clearly see what kind of comparison is done, where as with the first, you have to look all the way to the right to see.
Parameters are not really an issue for me, but the inconsistent naming makes it a pain. 
Personally I find the actor model the most easy to reason about, so I'm pretty excited about this project! Thank you for tackling such a daunting task. One quick question, does it work in other SAPIs other than the CLI (I see it builds upon pthreads)?
I like to call them downward facing dog conditions
Thank you to take your time to explain it. Really appreciate it. I recently understand type hinting and start to refactor my codes to stricter type. So basically, generic is when you instantiate a generic class you also type hint that class?
Hmm let’s read the posting guidelines then. Post must be related to PHP. I think I am good on that one. Post doesn’t have a link to my own content. It definitely isn’t a meme post. As far as I can tell, I clearly am not advertising anything. Let’s move on to the FAQ. This is a common FAQ but the post it links to was posted 7 years ago. What rules am I breaking exactly? Stop being such a sweaty nerd just because I asked a genuine question. 
HHVM is not really PHP anymore, they don't support it officially anymore. Zend engine without the compiler part of PHP is a VM on which would could potentially run non-PHP code compiled for it. Although, lots of its OPCodes are very specific to PHP, it remains potentially possible to run other languages on top of it if someone crazy enough starts writing additional compilers. It could a fun projet. Completely separate the Zend engine from the PHP compiler. It'd very much love to be able to dump compiled PHP OPCodes into a binary, and run this binary with Zend without feeding it the source. At least for fun/testing.
That would be a great next step in PHP features
Well,what's more,the HR said I'll be a absolute leaner in his company,so the salary they would pay is 40&amp;#37; of I expected,after learning for 1 to 3 months,the salary will be about 50&amp;#37; as I'm in probation,and after 1 to 3 months again,I'll become regular worker,so the salary will reach or above my expectable salary,and even what I expected is much more below the average level both for technicians in my hometown and for fresh graduates in my country. The only thing make me consider this job for some time is the HR claim that I'll learn JAVA，Python,embedded development,android development and so on in the first 1 to 3 months and after that I'll get commission if I do a good job in his company.He said the commmision can be many times as my salary if I choose the payment with low salary and high commision,while if I choose high salary and low commision,the salary can be higher.
Better stop being such a lazy selfish jerk. You've been told already to ask such questions from Google. Try to learn how to help yourself instead of pestering others for not helping you with your silly problems. 
I thought it was just my machine!
I'm not familiar with this practice, but might it be possible that you would only get the 100% after 3 months *if you meet some very unrealistic requirements* and therefore continue working for a low price? I assume there are redditors that went through similar programs and could enlighten us.
May be it's just hard to find a java dev for their salary/tasks, and so they went to advertise a PHP dev position intending to humiliate an applicant and persuade them to learn java instead. We were in the same position, though it's java was a minority for us. Being unable to find a java dev to support a Selenium-based farm we ended up rewriting the whole thing to facebook/webdrive to make it in line with other codebase which is now entirely in PHP.
I like doing this: if (false !== strpos($myAwesomeVariable, "somestring")) { } Since it's immediately obvious whether I'm testing for equality or _in_-equality.
I also doubt it's an empty promise.
Please use `===`, if you care about anything in this world. if ($x) Isn't good for everything if you want to test for boolean true/false. PHP will consider "". "0", 0, and null to be _falsy_, but not `(bool)false`. You could double-negate it with `if (!!$x)` which basically just coerces the value to be a bool.
Thank you for solving puzzle in my mind.
w/e with the downvotes. Got 3 accounts? Have worked in several enterprises since 2001 and Java was rarely used in any of them. Even if it was used in most but not all of them, it would still not be a 'de-facto standard'.
Everybody and their grandma knows how to use google. It’s different when you get almost real time responses from people who are currently developers who use specific PHP frameworks. Me asking a question on this subreddit is me helping myself and nowhere did I say that I had a problem with anything. Nowhere am I pestering anybody to answer my question. You are the one who responded in a negative manner. Go outside and get some fresh air because you could sure use some after angrily typing away on your dirty keyboard that was a result of all the doritos you’ve been eating in your mom’s basement. If only I could be as smart and witty as you. Get a life. Take a breather.
Actually not. Dunno about your grandma but you apparently don't. You don't even bother to learn from people who do. This attitude is your problem. And I can assure you, it won't make your life easy in this sub. 
Got plenty of great responses and advice from people on this one post so I don’t really understand what you are going on about.
Can you please elaborate on what you mean by being a truly good PHP developer. Like what kind of skills in PHP should I have to be considered a great PHP developer. I am genuinly curious.
...at the expense of littering others' reddit feed. Which explains why you're a lazy selfish jerk. Also got your silly question removed, which explains that such attitude is not welcomed here actually. But of course you're unable to learn even from the apparent evidence. Get back to me when you learn.
“Littering others’ reddit feed”. This is a PHP subreddit that is meant for PHP related things. I am sorry PHP overlord for “littering” your feed. Must of been really hard to not click and scroll past my post like a normal person would do. I am sorry for the atrocity that I have committed. I’m not sure if you know what selfish actually means but that is exactly what your comment conveys. Get a grip. My question is still here btw how else are we commentinf back and forth. 
Ooh, nice! I'll check them out! :)
Mixed feelings here. On one hand I think it's a good idea to introduce this into the Laravel world, but on the other hand when I see the example, I still see static calls being done and AR models where public properties are being modified and saved.
I was just about to reply to his comment about having no social contact and no friends/family/partner, and suggest some hobbies to get him out of the house, until I took a look at other things he's said. Quite disturbing. I do still hope he gets help, cuts back on the work and MMO games and takes part in the world.
The industry standard for what? For embedded systems? Nope. For web development? Nope. For GUIs? Nope. Java is the industry standard if you want bloated, confusing shit written by outsourced programmers.
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
lol, fixed 
Phpstorm on MacBook retina?
Knowing Computer Science basics for once - there are a lot of developers who never learned them properly and have no idea what affects performance, how networks work and stuff like that. Overall a truly good PHP developer is "a developer that happens to work with PHP". You can pick up most web tech stacks and be working away with it in a month without prior experience with it. You know your tools in depth, you can see problems before they arise due to your experience and you use the right tool for the job and not just cram everything into a single platform (although in case of PHP a lot of the time the opposite happens - people needlessly offload stuff to other tech stacks, duplicating code based because they have no idea how actually good PHP is if done right). It's more or less subjective, but my peers with similar 10-15 years of hardcore PHP dev experience mostly agree that there is a lot of developers that lack the big picture view and some basic knowlage that basically makes them coders and they can't really do a good job on a more abstract high level stuff. Too many people think that 5 years makes them a senior dev - it does not. 
Keyword "butthurt". I just don't talk to them :D
So I supose minority means something near 80% of web working with PHP....😅 😅 😅 
Do you mean the 'company' use Java as a standard, rather than the 'industry'? ('Industry' would suggest a sector of businesses - so, e.g. banking, or commerce, or Maritime management, etc... rather than an individual business)
It's not that it doesn't have it, it's that it breaks my flow to check it.
&gt;WTF is interview you've been told that? Calm down a bit you don't know his location, industry or market. There could be a very high chance JAVA is the 'industry standard' in his industry and location. We have no idea where the interview was or what it was for. To the OP: JAVA is the dominant player in a lot of enterprise software, it's also very dominate in the mobile app market so the real answer to your question is 'it depends'. It's like saying Python is the 'industry standard' which would be correct if the company where in a scientific field. 
Yeah this is great advice. It’s going so far 
I know they went to an interview for a PHP dev position. If you were able to think, you 'd find such a claim on such an interview quite surprising too. Cheers.
Quit being insecure about your skills. I bet it's a female HR who doesn't know shit about programming. I hate HRs. They're existance is pointless. Just start laughing in her face and walk away if it happens one more time.
Hey, Shimaneiro, just a quick heads-up: **existance** is actually spelled **existence**. You can remember it by **ends with -ence**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
It's strange on my Surface Book with Windows 10. When moving any Jetbrains product from my external monitor, which is a standard 72dpi screen, to the laptop screen, which is 200+, it shrinks to about 1/4 size. All controls scale fine though. Most software has some issue with scaling between my screens, so I expect issues regardless, but the way that it affects Jetbrains' software is especially unique.
I haven't limited it to any particular SAPI yet, but really, you are going to want to use it on the CLI only. This is because each actor system runs on N threads (N = machine's core count). You therefore only want to have one actor system per machine, otherwise you'll just inundate your machine with threads. If PHP is being run in a web server environment, then you don't have control over how many PHP instances are being run on at once (the web server is in control of this concurrency), and so you'd end up with many actor systems. Actor systems also work best for long-running applications. In PHP's (usually short) request-response cycle, it would be inefficient to build up and tear down an entire actor system for every request.
No it is not. I asked you guys how make streaming site. You guys told it was going cost $200,000 to $300,000 grand. But I found legit crash course on it at Udemy for $10 bucks. 
&gt;Oh sure, if you're having to integrate with other solutions that are already using JWT, then using JWT with them is ok (assuming that's all they offer). At the very least OIDC has JWTs right in the spec.
Thanks for the response. I always try to make sure my code is efficient and consider run time and things like that. What I do lack though, is the network aspect of it. If I was to work on a large scale project using PHP, I don’t really understand how server load works and how my PHP code would effect it negatively or positively. Do you know of any books or something that goes more in depth about these things? 
https://i.imgur.com/DK1ckG8.png
Oh nope dude,It's a micro company,I think besides HR he's also a developer,he can even be investor of that company from my observation,because he said that he would have earn a lot of money if he developed computer game,but it's bad for kids.Well,I just think there're something of bragging.
Well,the HR exactly said that the industry standard is JAVA,just after saying PHP is for minority.I remember that clearly.In fact I don't hate JAVA at all,but commending one and derogating another makes me unpleasant.
delete
Ok! I've never interfaced the CLI SAPI with nginx, but I guess you'd just set it up as an HTTP proxy instead of FastCGI. PS Sent you a private message regarding Phactor.
Yes.
Color me crazy, but it doesn't look like he needs help with a pre-existing PHP problem. He wants a problem to solve.
So, what industry is this company part of? Because its definitely not a standard in web-development in general. The other option of course, is that HR are not known for their technical knowledge, and may be making stuff up to get your salary down (either way, I'd be wary of the company, unless they're a big name in your locality that can be used to benefit your career later)
/u/colshrapnel can be a bit of a cunt, but he's not entirely wrong. This probably isn't the best place to ask for these kinds of things. How many things have you built in PHP? In your experience, have you run into any problems that is a consistent pain point for you? If so, try solving that.
`*patiently:*` he don't have anything to share with everyone. He needs help from ones who explicitly agreed to. This is what /r/phphelp is or. If you like to help noobs with whatever problems, existing, or imaginary, welcome to subscribe there. 
I just started to learn PHP a few days ago 
It really depends on the industry segment. Java is standard for certain things, PHP is certainly the standard for the web and content-driven projects.
Go to [https://www.hackerrank.com](https://www.hackerrank.com/dashboard) Lot's of challenges in several categories.
IMHO PHP is an asset. You can do quite a lot with it and there are millions of sites running on PHP. I also find it cleaner than javascript (parenthesis nightmare). I'd suggest go get some python under your belt. It's easy to learn and quite powerful. Java is used in a lot of places and platforms. Wouldn't hurt to learn it.
Thank you for your wariness about that.From the company's introduction,its business includes providing solutions,developing softwares,developing mobile APPs,developing application systems,developing office systems,building websites and some other things for enterprise. It seems that it is a startup company.The employees they have now are very few,and the operations they do are very abundant.
Alright. Start small. Here are a few things that you can try building: * Determine whether or not a given input by the user is a palindrome * Generate an array filled with 50,000 random numbers. Then come up with a way to sort it (without relying on `sort`) * Given a number inputted by a user, convert that number to its corresponding English word (123 =&gt; one-hundred-twenty-three)
I will try , thanks
Oh thanks a lot dude.After pulling these information together I know about this company I realize that this job is actually not for me!I'd like to be a web developer and I've paid some time and energy on that,but this company is not a web-dev company in general. I'll still looking for a web-dev job,unless there're no web-dev job suit me,I won't do this job.
&gt;I know they went to an interview for a PHP dev position. Yes he went for a PHP interview at a place that makes android apps and embedded systems, so the HR guy was very likely correct in saying JAVA is the industry standard because it is in those fields. &gt;If you were able to think, you 'd find such a claim on such an interview quite surprising too. Cheers. If I went to a business that was doing android work I certainly wouldn't be surprised that JAVA was being used and considered the market leader. The same way when I contracted at an Apple Dev shop (in a PHP role) and Swift was the dominant player in that market, I was the only person there who had any real world experience with PHP and from what OP has said it sounds like it will be the same for him in that place. I can see your last response was a little shitty so I will leave it there
&gt; I found legit crash course on it at Udemy for $10 bucks Ok
Yes dude I'll stick learning PHP and try to find a job about web development.This company and the job is not so much suit me.
What is "Swing"?
Yeah, I turned off scaling on Windows 10 for a couple of years because of these issues. Works absolutely flawlessly on macOS though. I did turn it back on after a couple of years when i got tired of squinting at tiny things on my main screen, and while it's still not up to macOS standard, it has improved.
Yes please
The only issue I have had with 4K resolution scaled all the way up is the Jetbrains Toolbox refreshing weird or not refreshing. https://i.imgur.com/hDO8mWO.png
Keywords: "HR said" HR and recruiters put down strange requirements on job posting, so I would take what they say with a grain of salt.
I personally do enjoy codewars.com for random coding challanges (that are as small or big as i want them). Pick a language, chose a difficulty, enjoy the tasks and when you are finished: learn from the solutions of others :-)
He seems to be the unnofficial wannabe mod of this subreddit. Great way to welcome new people.
Is this the link to a PHP discord? Looking for something like this too.
Wow!! The demo site is **horrendously** slow, especially assuming I'm the only one on it right now. This definitely couldn't scale to 100 active users!
Java UI library used by Jetbrains to make their IDEs.
&gt; saw a site written in JSP No, but our Java teams end up writing a lot of APIs. It's not often they have to deal with the presentation layer.
You can see more context in OP's previous post [here](https://www.reddit.com/r/PHP/comments/8vf0o7/i_have_been_building_php_apps_now_for_over_10/) It's a general 'Reddit Developers' discord.
APIs for web interfaces, or for general data interchange? 
Try exercism.io
It's a novel idea, but you could just update the scripts to take parameters if they're duplicated as you say :) It sounds like a full on framework might be excessive for a handful of scripts that run on a cron, but you could rewrite them to be OO and pull in some components with Composer. Make sure they're in source control somehow if they aren't already, too. If you really want to use a framework, go with Symfony 4's Flex approach and just pull in the bits you need, rather than the whole thing. No sense in over complicating stuff.
do one
I haven't received any private messages from you - are you sure you spelt my username correctly?
In this context - web interfaces.
r/learnphp
I thought downgrading to 4.0 was the way to get the best perf...
https://discord.gg/9x4fa44 - yes, sorry other expired.
My back end was getting so slow edits were becoming rediculous. After killing plugins etc. I downgraded PHP and ...voila.
* **Async. Programming**: I have no idea where they're coming from in this. There's nothing introduced in PHP 7 in terms of async support. PHP 5 has long supported both threading and forking, and people have been doing async work in it for a while, with the help of projects such as ReactPHP. * **HHVM**: Given that HHVM has [officially stopped supporting PHP](https://hhvm.com/blog/2017/09/18/the-future-of-hhvm.html), and what support it had was riddled with *cough* "[minor incompatiblities](https://github.com/facebook/hhvm/issues?q=is%3Aopen+is%3Aissue+label%3A%22php5+incompatibility%22)" (and [for 7](https://github.com/facebook/hhvm/issues?q=is%3Aopen+is%3Aissue+label%3A%22php7+incompatibility%22)), recommending it over PHP is dubious at best IMO. * **PHP 8 / JIT**: Trying to predict what will be in PHP 8 at this point is a fools errand. If I remember correctly there's been a total of 1 accepted RFC mentioning PHP 8 so far and that was related to a deprecation. While there have been some discussions surround PHP 8 / JIT on internals, nothing is even in draft RFC form yet. While Zeev posted a video, I don't believe the code he's working has been made available even to most of the core developers yet.
React.js?
What is the go to microframework these days? I've been out of the loop.
Wow, thanks for this tip. I've had my retina macbook screen resolution bumped down to one below default just to make it easier to read small text and i was damn-near unable to scroll through some large programming files without turning on low-power mode. When I switched to the default resolution it scrolled like a dream. No more slowdowns. One more reason to fucking hate java. (i know it's not necessarily java's fault but i've always had an irrational hatred of java)
I have no idea what you're dealing with right now, so take my lines my personal thoughts on stress. I used to be under lot of stress, on University, having a job, having much 'smarter' developers around me and so on. I thought that's the way to learn stuff, the way I am. But the bad feeling from started to grow and soon I started to act. I quit University, year on that my job and I started to learn what I want. It was tough because my income dropped to under half, but I decided that I'll give it a go for one year. I had some money saved up, so I know I can do it for the year. I risked everything I had in that time. I contributed to open source for free, I wrote about it, I made packages noone used. And it... Worked. After 2 years it started to give back and now there is no stress. Just excitement, if I can make the talk sound the way I want, help others the way they need or write post to be understood. You're in charge of your life. Make that count 
\- Reduce requirements - i.e they want "real time" updates via web sockets but you cannot figure it out, to fallback to ajax polling \- Baby steps - i.e the payment solution fails, first start with logging all errors, its not fixing the problem but its a start \- Isolate - i.e anything can affect or pollute your perception of whats wrong, create a test of only the isolated code to verify thats the problem \- Socialize The Problem - i.e Stackoverflow, Slack, Discord, etc ask for help were help can be provided.
Bro. Let me tell you how I started. In 2014, I didn't know how to code more than a for loop that prints odd and even numbers in C. In 2015, when I moved to another city to study, I started working as a content writer for almost anything I can get. At that time, I was 16 years old and I was rarely making through a month. I used to make $150 a month. After two years of hardwork (I used to sleep less than 4 hours because of the pressure of studying, working and making money to survive), I started making enough to live a better life. Then I got an idea and I started learning programming. The programming languages required were PHP, MySQL, laravel(PHP framework) and I also had to learn server management and optimisation. After 6-7 months, I launched the first version of my product. Made it free for 1 year (still I didn't have money because I lost my assets) and then made it paid a paid product. And now I know content creation, programming, system administration and monitoring and an experience that was required to push me ahead that I now realise. I am on my own since I was 16 years old and now I even support my family. I am passing on to you what I learnt. Never give up, what if what you want is available in the next try. Always think you are the best. And always think you already have everything you need and keep hustling.
🤔
What the fuck is a PHP 7?
So install a package and be done with it? Where are the 27 regular expressions and the explanation of how it's done and possibly why?
Ask for help... Be direct, don't coast around and try and make out you understand something f that you don't. Then make sure to keep asking more questions until you actually understand. If you can't get any help, then own up and state that you don't know what to do. You'll only make the situation worse sitting on your hands going round in circles. 
I rarely downvote posts but although there are many performance improvements in PHP 7, none are in this post and the author did not do his research at all.
A small group is working on it. It's a big feature but hopefully we will get it ready for 7.4/8.0. ----- Here are my other wishlist features: - Union, intersection, and enumeration types. - Ability to write extensions in PHP itself, or something extension-like. I am particularly interested in this once we get generic types and functions. - More convenient closure syntax. - Unified symbol tables which allows us to use symbols to refer to functions and/or methods for callback reasons. Has a few other minor benefits but that's the big one.
Same old same old
[removed]
I remember php academy, on YouTube, did a make your own mvc framework in order to understand how they worked. 
Send me the link
 &lt;?php echo '6'; 
I googled it and it was the top result. 
 die(6);
The title gave me diverticulitis.
1. Take a break. Go for a walk. Do some shopping. 1. Look for different resources. 
https://symfony.com/doc/4.1/introduction/from_flat_php_to_symfony2.html
What?! My time here has led me to believe that Taylor was God and Jeffrey his prophet. 
&lt;?php $numberOfTheBeast = '666'; $pos = rand(0,2); echo substr($numberOfTheBeast, $pos, 1); 
 $sum = 0; while ($num != 0) { $sum = $sum + $num % 10; $num = $num/10; } Echo $sum;
 ```php function tensPlace($n) { for ($x = $n; $x &gt;= 1; $x /= 10) { yield $x % $n; } } array_sum(iterator_to_array(tensPlace(123))); ```
It had == in the original post. With == there, I'm assuming we know the variable is boolean already and that the dev already knows the diff between == and ===. I still think it's more readable: if($is_correct) if($is_ready_to_submit) if($was_successful) if($did_send) Easy to read, easy to understand.
 ?&gt;6
- Use an IDE or a code editor which let's you use a linter. - Keep reading the guide, API reference, language manual, etc... before continuing. 
 &lt;?php $res = array_reduce(explode('', '123'), function ($total, $num) { return $total + $num; });
Fair enough. Your variable names suggest booleans, which it might not always be, which is the reason why you compare with `true` or `false`. At some point in your code, you might have to make a boolean assertion from a non-boolean expression - i.e. from `strpos` or similar - and then you can't _simply_ use `if ($did_send)`.
1st off, remember that you aren't alone. If everything was easy no one would get paid to make websites :) Problems happen to everyone, it's how we solve those problems that matters. 2nd, see if you can isolate what part of the code your problem is coming from, look at the error log, make sure to fix any notices even if they seem unrelated to the problem, if all else fails start echo'ing every variable until you expose the bug. Once you've isolated the problem, if you don't see a solution, look through Google to see if anyone had the same problem before you. 3rd: If part of your brain is telling you to give up, don't just ignore it, maybe you need to take a break. Walk around, go outside, relax. Don't let the problem ruin your mood or ruin your day. Remember that you yourself are far more important than the code you are writing. Forget the code for awhile. When you come back with fresh eyes it will be easier to find the bug. 4th: Remember that even if you 100% fail, you **can** give up and rewrite that part of the code from scratch again. It might hurt your developer pride to admit to yourself that you have to scrap a day or a couple days of work because the bug won the battle, but usually you'll find that your 2nd try is far far better and easier than your first.
`6`
```php function sumDigits($num) { if ($num &lt; 1) { return 0; } return $num % 10 + sumDigits($num / 10); } ```
```php function sumDigitsGolf($num) { return ($num &lt; 1) ? 0 : $num % 10 + sumDigitsGolf($num / 10); } ```
 &lt;?php class Collection implements Countable, JsonSerializable { /** * A collection of items * @var array */ private $collection; /** * The original collection * @var array */ private $original; /** * Collection constructor. * @param array $collection */ public function __construct(array $collection) { $this-&gt;collection = $collection; $this-&gt;original = $collection; } /** * @return string */ public function jsonSerialize(): string { return $this-&gt;toJson(); } /** * @return string */ public function toJson(): string { return json_encode($this-&gt;collection); } /** * @return int */ public function count(): int { return count($this-&gt;collection); } /** * @param callable $callable * @return \Collection */ public function filter(Callable $callable): Collection { $this-&gt;collection = array_filter($this-&gt;collection, $callable); return $this; } /** * @param callable $callable * @return \Collection */ public function map(Callable $callable): Collection { $this-&gt;collection = array_map($callable, $this-&gt;collection); return $this; } /** * @param int $size * @return array */ public function chunk(int $size = 4): array { return array_chunk($this-&gt;collection, $size); } /** * Remove the first item from the collection * @return \Collection */ public function shift() : Collection { $this-&gt;collection = array_shift($this-&gt;collection); return $this; } /** * Remove the last item from the collection * @return \Collection */ public function pop() : Collection { $this-&gt;collection = array_pop($this-&gt;collection); return $this; } /** * Reverse the order of the collection * @param bool $preserve * @return \Collection */ public function reverse($preserve = true): Collection { $this-&gt;collection = array_reverse($this-&gt;collection, $preserve); return $this; } /** * Merge an other array with the collection * @param array $items * @return \Collection */ public function merge(array $items): Collection { $this-&gt;collection = array_merge($this-&gt;collection, $items); return $this; } /** * @return array */ public function get(): array { return $this-&gt;collection; } /** * */ public function reset(): void { $this-&gt;collection = $this-&gt;original; } } $one = [ 'number' =&gt; 1 ]; $two = [ 'number' =&gt; 2 ]; $three = [ 'number' =&gt; 3 ]; $four = [ 'number' =&gt; 4 ]; $five = [ 'number' =&gt; 5 ]; $six = [ 'number' =&gt; 6 ]; $collection = new Collection([$one, $two, $three, $four, $five, $six]); $collection -&gt;map(function($item) { return [ 'number' =&gt; $item['number'] ]; }) -&gt;filter(function($item){ return $item['number'] &lt; 10; }) -&gt;count(); 
Wow, first time I’ve seen this project, but it looks awesome!
Parse error at line 4
Have a hobby. Fellow newbie programmer here. For me, gaming is my choice to escape from codes. Usually when I stuck at some algorithm, I will have a session of gaming to clear my mind. Not some high end desktop gaming, but a simple game from smartphone is enough. Then in the middle of gaming, suddenly the solution arise.
u can see file here. https://jsfiddle.net/kqn8cdau/
Wow.. Fucking Wow.. Holy crap. I totally forgot this existed, I saw it a while ago and stared it. But it's getting more powerful with each iteration. Time to see videos / tutorials show how it works in all it's glory.
I set that issue down and work on something simpler like css. Then I hit it again the next morning. Let it percolate . Ask yourself what's the very Immediste next step to solving this problem?
All the time
How it is ? How much do you earn per month?
GraphQL + React or Angular would be a more suitable option
It's great. I've gotten lots of long term projects along with many quick ones; tons of PHP work available on Upwork.
Try Laravel , best for even beginners
Was it hard on the beginning ?
Before you beat yourself up try taking a break from looking at the screen from time to time. I used to regard myself as a slow learner too when I started working. For me, the way I slowly learned to get better at solving problems was asking google in different ways like: - literally pasting the error on the search bar and see if there’s a stackoverflow result - ask what I want to solve - ask why my solution returns the wrong result - ask google using keywords instead of the question to see if the gives stackoverflow questions - ask google for alternatives to my approach to a solution - if the top stackoverflow answer did not work or is too complicated for you, try the other answers (in the future when you do a lot more coding the complex answers will make sense) If you have seniors you can ask, try explaining it to them. I also used to write down my code logic on paper like a primitive flowchart because I had a very hard time imagining it on my head.
You have an undefined index called `a_stdb` On line `+- 52` In the file `/var/lib/nginx/html/web/upload.php` Hope that helps.
Sounds like PHP was emiting several warnings.
20% of the job is past experience. 70% is on Stackoverflow, Laracasts and Github. 10% is you taking the imitative to use that previous 90% and alter it in a way that solves your problem. Don’t worry about writing beautiful code at first. Just solve your problem. You can go back and tidy it up afterwards. Plus as you gain enough experience, over time you will write come closer to writing clean code on the first pass. Don’t fret we’ve all gone through this, and every once in a while we all relapse from time to time.
If your request is JSON, PHP doesn't parse this to $_POST. Try this: echo file_get_contents("php://input");
https://i.imgur.com/DK1ckG8.png
Oh I am sorry, but thanks for pointing that :)
No need for excuses. Just delete from here and ask there.
https://i.imgur.com/DK1ckG8.png
[removed]
Blog spam
Yup spam
Look, buy a pet snek and be done with it.
I can already see people befriending basically all classes in their application just to be able to say “see my code is encapsulated” Jokes aside I do know the ‘friends’ keyword from C++ but I havent used it alot application wise because it makes everything feel even tighter coupled. But it has been very useful for blackbox testing. I already hear people scream at me “You shall not black box test” but honestly there are situations with a complex method that should be private but you want to test on its own. Having freinds there instead of reflection hacks would be nice. 
try to actually run it
why quotes?
But in what real world situation will this "friend" be useful? I don't see it useful other than in the testing domain. I might vote No too.
You being who?
Why
I mean if I have the voting right.
You don't.
🤷
Vuejs is a terrible implementation, it's like a mix between the worst of react and angular. 
Keep telling yourself that ✌️ 
The title itself provoked a "No" in me, and the proposal didn't make things better. A keyword to grant access to protected things that is a tiny bit weaker than "extends", but in every "extends"-replaceable? PHP suffers from a war over its design philosophy being conducted by irreconcilable micro-proposals. This does nothing but make that worse. 
You are a fucking irrelevant """Redditor""". Why don't you fuck off?
I was thinking about this lately and imagine you have a user class. Which can only be loaded by the application class. The friend keyword should then only hold application. Trying to instantiate the user class somewhere else results in an error...
chill down ricegum
&gt; a complex method that should be private but you want to test on its own. Declare it as public and extend from the class in your test.
I've wanted this sort of things a couple of times (not necessarily in PHP) when I've wanted, say, a class with a private constructor that can *only* be constructed by another class. The class with the private constructor is usually one with somewhat-complex invariants that are, for one reason or another, difficult to encode directly into the constructor of the class, but which I can guarantee will be satisfied if the class is always constructed by another class.
Breaking access restrictions in context seems like a very strange thing to want to do. Making a class aware of the context in which it is used seems like a very strange thing to want to do. Doing ***both*** seems even stranger. If you really *really* ***really*** need to break access restrictions then well..... [3v4l.org/h4fXH](https://3v4l.org/h4fXH). Rewrite the function in an extension if you want it to be faster.
Hmm this make sense. It happens to me before that I will have private classes that I do not want anyone to instantiate it but my "factory" class to create it. That would make sense in this case. Hmmm
Lot's of coffee and breaks. If you have many tasks, switching to a different to-do helps distract from a difficult task. If possible, revisit the difficult task days later.. Sometimes the task is unnecessarily difficult. A previous employer of mine had me 'fix' js issues because she wanted two conflicting wordpress plugins to work together. What a huge waste of charity money, not to mention feeling useless at that job because I knew a better solution existed. If it's a critical problem, like the bank needs you to fix their login system asap, take deep breathers and discard the stress vibes from within your skin.
I really hope this passes. I often am writing domain objects that will only be modified by one or two other classes. I'd rather write them to be immutable and grant friendship to the mutator classes.
I find I am often writing domain objects that have only one or two mutator classes. Ideally, I would make the domain objects immutable and grant friendship to the mutator classes.
A class extension has access to protected scope because it's reasonably expected to follow the Liskov’s substitution principle and not cause undefined states and behaviors. Protected variables and methods are usually not meant to be poked at by themselves outside the class internals because it can cause those undefined states and behaviors. Where does this leave class "friends"? It seems to me they would become too much a code smell, if you find a class which has no pretense of following Liskov substitution poking at another class' internals.
http://php.net/manual/en/book.dom.php
I agree, I think I would agree with your "no". This "friend" talk is seems like design leaking through. Even in a testing context a method shouldn't be callable if it is private. You can extract that logic into it's own class if it's complicated and make that method public to test. 
And move the responsibility for maintaining proper state to multiple other classes? It's probably a better design to make a decent interface for a class to manage its own data than to _not_ make one and have many classes trying to uphold domain constraints.
This feature extends far beyond protected constructors. It probably isn't worth the added complication for something that isn't much of a problem anyway. Sure, they can initialize a class that's marked for internal-only use: but they probably can't inject it into the other objects that do care about it. (The variables are already private or protected, and no public setter is generally provided).
To me, it's even worse than that. From the RFC: class Person { friend HumanResourceReport; ... } The Person class is a fundamental entity of the system/domain. The HumanResourceReport is a business service either on the outside of the same domain as 'Person' or in a completely different domain. If anyone wants to couple the 'Person' class to the 'HumanResourceReport' class in the name of _clean code_ should have their computer taken away from them immediately.
Thanks, with your help I was able to solve the problem :) 
But it sure would be nice if I could make that mutable interface protected and only access it though the friend classes. 
Even if it wasn't abused (unlikely). Giving access a field or method-level needlessly complicates interface/API design when type systems already provide better solutions. Returning an ImmutableThing instead of an Thing which is sometimes mutable, sometimes not is much clearer and easier to understand: not just in the defining context, but in the more likely _usage_ contexts. Instead of adding more 'protections', that result in more cognitive load, more runtime overhead, and more potential for design abuse: it makes more sense, imho, to make it easier for developers to represent these constraints through the type system.
[removed]
Yeesh, this seems like a terrible idea. What are the merits of this? It just seems like it makes it easier to write poorly-designed systems.
For me it’s a terrible idea and opens my eyes even wider. This completely couples code together when we actually want to get rid of monolithic bricks...
Already tilting toward no, as it should. Please, property types for 7.3. 
C++ joke: Only friends can touch your private parts
You may have to start at a lower hourly rate in order to land your first job, but do long as you perform well you can raise your rate over time.
You may have to start at a lower hourly rate in order to land your first job, but do long as you perform well you can raise your rate over time.
Brilliant, made laugh. Thanks for this one! 
It's not often I get to use it
I completely agree with you regarding the problems of increasing the cognitive load and potential for abuse (because it will be, especially with regards to testing). I will think about what you've said because I need a better solution to these issues than what I have now. Having programmed in C++, I've learned that (when done well) friendship leads to cleaner interfaces and better encapsulation at the expense of tighter coupling. I actually predict that this RFC will not pass. But we'll see.
This entire thread is a pointless bike shed, because encapsulation doesn't exist in PHP objects: \`\`\`php class secret { private $noaccess = "surprise"; } $surprise = (function () { return $this-&gt;noaccess; })-&gt;call(new secret()); \`\`\` When you're all done fiddling with your lipsticked pig, can we start doing some grown up shit: Java -&gt; Scala C# -&gt; F# JS -&gt; ReactJS -&gt; ReasonML 
I'm not a coder so I don't know what that means. Are you suggesting that the newer version caused code warnings that made the backend slow? Is there a downside to running lower than v7? I've been wondering but didn't know who to ask.
How much did u start with?
I don't know, I was pretty tired when I posted that.
Lend them to the guy who is using `die()` :)
Encapsulation in any language is adding human controls to logic because programmers might do something "wrong". It's always been nonsensical.
Author here! I'm reading through comments, digging for useful feedback to tack onto the RFC. Some of you are brutal! Haha. That said, there are some really great points here that I'm glad to see and would like to incorporate into the result of the RFC; pass or fail. To be honest, I never really had much hope of this RFC passing; mostly *because* it is such a niche feature that is, frankly, very-much abused in C++. That said, I share some of your experiences that (when done well) class friendship expresses a specific relationship between collaborators that can be useful. There is likely a reason this feature only exists in C++! I think [https://externals.io/message/100743#100746](https://externals.io/message/100743#100746) sums up one of the fundamental issues with such a feature; that the use-cases for it are very limited (and frankly, is perhaps why the examples in the RFC seem so contrived). All that said, to anybody that wants to contribute to PHP but feels overwhelmed by working parser grammars, C, etc.: the implementation of this RFC (while certainly imperfect) represents a slim vertical slice through the Zend VM and demonstrates how new syntax, data structures and compile / runtime behaviour can be added. As I said in my original mails almost 3 years ago, part of my reasoning of this RFC (while I do see merits of such a feature, be they slim in scope) was to gather relevant information on the topic within the PHP community and put it up for vote. Pass or fail, there would be documented "this is what didn't work and why". Towards the future, I've already begun work on another RFC to discuss namespace visibility, which I hope will yield interesting discussion. It's certainly not a new topic and in fact, there is already a REALLY great start [at an implementation](https://github.com/php/php-src/pull/947) that was stalled due to the way namespaces are implemented in Zend. I think I've found a way around that to simplify the rest of the implementation. I'll be putting that out for discussion after the vote for my current RFC finishes. With a new baby in the house, I have less time to tinker. To any internals folks on /r/php, thank you so much for your patience and time! Thanks to everybody else for caring enough to comment! :)
I understand what you mean but I think most of the time encapsulation is fine as long as the original programmer is generous in exposing values that may need changing or accessing in the future and hiding trivial details My main point however is that most people are acting like user land objects have encapsulation when they don't Functions however do: ``` function secret() { $noaccess = "surprise"; } ``` There's no reasonable way to get $noaccess outside of secret() without source code modification, it can be considered an implementation detail of the function and is in no way exposed outside of the function but that's not true with the object above
The only legitimate use case I have seen even in C++ is to write an iterator for a given class in a way that it takes advantage of the internal details. The iterators are naturally coupled to the design of the class that they iterate over so that's fine. Even for this use case it is best if you can use the publicly available info.
Author here, let me know if you have any questions.
Yeah, PHP sucks and other newer languages are better. Trust me, this sub is well aware of PHP's reputation.
Hey just as an FYI, there are special subs for sexism/misogyny. This is not one of them.
People seem to be saying that Java *isn't* an industry standard, where others are saying it depends on the industry. My two cents would be to remark that a lot of people learn Java in college, so a big chunk of devs out there know Java. So I don't know about "industry standard" but it's definitely out there.
&gt; Out of, potentially morbid curiosity, would a script that could do a full rewrite of your source code to support the "new" version be possible? Absolutely. I imagine one could probably use phpcs for it. Maybe other static analysis tools could also be configured to do that. If all else fails you could do it yourself using the tokenizer functionality in PHP.
C# seems to be pretty good when it comes to that sort of thing actually. I completely agree with the spirit of your comment btw, I'm just saying.
What do you mean?
It's simple. You just
Reply with a div with an id with some javascript that will call ReactDOM.render on that id with the component.
Adopt a proper license.
Downvoted for abuse (again). I estimate that if you were confident in your opinions, you'd be able to make assertions without the need to reach for abuse so readily. 
The OP is essentially complaining, quite correctly, about someone making an ill-informed sweeping generalisation. There is surely no need to respond to that with more sweeping generalisations, especially if they are discriminatory too. 
for example, in my profile.blade.php file, just add in my &lt;div id="root"&gt;&lt;/div&gt; ?
You get why you got so downvoted right? Like learn how to contribute to a convo
WTFPL is the most proper license.
I did this once, but I had to use code.
trolll.
I wouldn't use a project using that license tbh. It kinda puts me off and makes me feel like this project is doing being taken seriously. The license aside, maybe you could give some insights as how it differentiate itself from the Symfony Lock component? I didn't dig deep in neither so it's a genuine question :)
Assuming _after_ that div you're loading a script which calls ```ReactDOM.render(&lt;YourComponent/&gt;, document.getElementById('root'))```, yes.
Yes, sometimes error messages can slow down an aplication. If there's no expert available, the best choice is to downgrade for a while.
I am a computer coach and so far, 90% of the courses that I am done this year are about Java. While 10% is about C# and zero about PHP and I am opening a new market with Python, JavaScript, and R. PHP is popular but it's not quite popular amongst many businesses. It's mainly for the SMB segment. I blame Wordpress for this.
I don't like Laravel (I prefer vanilla PHP) however, Laravel is highly popular, and it's easy to land a job by knowing it (and some SQL). 
Nice! This can be used to prevent cache stampede, right ?
Can we port the good parts of other languages and not the controversial ones?
The Symfony Lock component is relatively new. malkush/lock turns three years old this week. This package support more backing stores: MySQL and PostgreSQL locking functions can be used, for example. All implementations support blocking, in fact, that is the only option supported. The Symfony Lock component is somewhat more extensive, e.g. it supports refreshing the lock and checking if the lock has expired from within the lock. Summarizing, I think the malkush/lock library is more opinionated and Symfony Lock is more configurable. 
Yes, the only reasonable case for this is builders. In Java for example, this could be done by relying on package-level private state. But since `friends` only declared in your module and can't be altered from outside, then I ok with this. But this feature may be very overused, so I consider this dangerous. one more way to make code tightly coupled.
Might be a good idea to prefix the lock name on MySQL, e.g. by `get_lock(concat(database(), ?), ?)`. Those locks are server global. Generally that is not wanted.
Or `concat(database(), md5(?))` to avoid issue with name length.
I remember this video has been posted 2 times already, but strangely I cannot find it. The link was a different one, probably https://www.youtube.com/watch?v=rKXFgWP-2xQ but still. Where did these posts go?
Seen this as well.
https://www.youtube.com/watch?v=umxGUWYmiSw is the video on the official YouTube channel of .concat()
Yes I noticed that. I am just wondering why I can't find the other posts. 
Maybe you are looking for https://www.reddit.com/r/programming/comments/8m9vet/php_in_2018_talk_by_rasmus_lerdorf_video?
I remember it was in /r/php, I am not subscribed to /r/programming. May be I've seen it elsewhere. But it bugs me that I've seen it posted in /r/php 2 times.
I would leave. It's perfectly fine to not know tech x, and it's fine to not have time to rewrite or implement all new tools. But I could not work with someone clearly not interested in being a modern dev. I'd burn out in no-time working in a team where development was a nine to five job and nothing more. I'm not saying everyone must spend all their free time learning about new stuff, but you need some interest and passion or I'm out
If English is your first language then you should seriously consider editing this post. I don't understand half of your sentences. Not every company is going to be using the latest and greatest languages or tech stack. It sounds like it's a problem for you, so I'd advise you to find a more meaningful job that will make you happy. I've personally heard much worse stories, and it's true that sometimes there's no time to look into better options for something that's old but working for a busy company. 
Yep, that’s true, nobody needs to update or change something running. But they surely feel pain with their workflow but they don’t change stuff. I personally also want to be good in my job and can’t understand when people get stuck. My teacher told me early that I will have to learn my live long ;) In general i also think that Coaching should be done from the company. Otherwise they can’t get for granted that everybody is capable of really doing their job well. So thanks for advise.
I agree with 100% of what he said. It seems every where I look they say, and by they I mean any community really, that large applications, monoliths, are bad and you should split that up into smaller apps. The question really is, how would that suit your business needs? Specifically if you have a smaller team and are not, as the article states, a giant company like google or amazon. While many of us work on code that was written before us and, in my case, in a mess in most places, we do not instantly re-write, we refactor, clean up, test and structure the code to be better, cleaner and easier to write. We take deeply nested logic and create services, classes and other object containers that separate out logic. I remember when Micro services were all the rage, well unfortunately they are not the rage for 99% of us. They are, essentially, headaches and damaging creatures to try and control.
Luckily English is not my first language :) IMO It must not be the latest and greatest but it should work smooth. Which it seems not to do. Thanks for your opinion
How long have you been there?
Agreed. Usually when people come in to a company and want to start changing everything, they don't understand the reasons why it's the way it is, and don't appreciate large mature codebases. But in this case it sounds like there's no desire from management to pay off technical debt, which is an issue.
If it where „just“ an large oldschool codebase ( which is not ) ... Its more like: Should and can i try to change the mindset of an Team in which most people never met another company and never heard of something like Vagrant, Docker, Jenkins ?
It’s nearly half an year since he changed. Nothing big changed, also there is no clearly defined roadmap ( or approach to define one ) and no clarification who should / will do what or kind off.
This is what I love about DHH. His pragmatism shines and his writing style, whilst opinionated, is so enjoyable to read and convincing. I’m not far off 100% agreeing with building a monolith. Over the past year I’ve been building one with a slight twist. I wrote about it here: https://medium.com/@simonhamp/a-modular-monolith-in-laravel-lumen-4933b8cab2f1 The main idea is that, if you’re going to stay on the monolithic path, you may be able to ease the journey by breaking it down into modules. This has been an architectural dream for me and a great challenge too that I’ve enjoyed exploring and still continuing to enjoy using. I think one of the big challenges that a lot of developers face is focusing on the achievable goals without getting distracted by the architectural details. This goes beyond which major paradigm to use (monolith/SOA): it leaks into every single design decision - from Abstract Everything(TM) to Think Of The Next Developer - sometimes you need a clear refocus to get back to what matters most - the business, not the code.
That sounds like a very uphill battle to me. If it’s important to you and not to them, it will likely just end in mutual frustration. 
I don't really agree with this article, I don't think size has anything to do with if you choose monolithic or not. I am 100&amp;#37; on board with micro-services because I've seen what they can achieve and how they push into the future, from solo projects (that get millions of views a month), to my work with 20 devs micro-services has made life easier and it wasn't anything to do with dev size. If it works for your team and that is what your team understand, then that is good for you. But you don't choose monolithic or micro-service based on team size.
"sky is blue" vs "blue is sky"
Same as your with Chrome replaced by Firefox Developer Edition. And Vagrant + Virtual box. 
How about taking a look at https://www.reddit.com/r/PHP/comments/8w56nc/what_ide_do_you_use/?
I had previously looked at the thread, was hoping to maybe get more detailed answers than "Guess I'm the only atom user". The finer things I guess and opinions as to why.
If what they have “works” then it is normal that they resist changing it. If all you’re doing is replacing the current technical debt with a different but equal debt, the company is no better off and that time is lost. What you could do is gradually introduce small improvements and demonstrate the benefit, for example saving developer time, avoiding common errors or detecting regressions earlier in the process. These things can be quantified and justified to management as a cost and risk mitigating strategy. To you, being 4-6 years out of date may feel like a lifetime. Meanwhile, I have 20-year old code running on my desktop that is still useful. Sure, it is not of the same quality as my newer projects, but it still satisfies the need and requires no maintenance.
I also think in that direction but thought that maybe community has some positive suggestions ;)
This is a good read, thanks. It highlights the one thing I have always loved about PHP, the flexibility.
You seem to know a lot of things about this friend. It’s fine to ask questions about yourself. 
it's more than a decade ago. the op could have link an article on the French Revolution as well.
I know but sometimes it’s easier to avoid possible trouble. Europe and data safety and stuff. Had some fun in the past ;)
Magento, Typo3, they don't use composer and are not willing to change? Leave.
I agree that when something works you should possibly not change it. But then it should work! And then it should not have known vulernabilities and stuff like that ;) I try to go the incremental way, in general most change will go under the hood so the devs won’t ( or for me should ) even notice it that much. Vagrant Is perfectly integrated in PHPStorm also docker ( just activate the remote api for the private network ). But that’s more of an nice to have. So I thought they just need to change their GIT strategy a little bit and we are up and running to get further. But I must see that also in 2018 there are companies where GIT in general is not understood that well. Ain’t it a bigger problem when nobody can / will look at the GIT log? For me it is ... Management asked how long will it need to get an dev stack up with this ( incl. SSL, varnish, Redis etc. )? As I answered as long as Vagrant needs which currently is 5-10 mins they got big eyes.
So i am not the only one for whom composer is an MUST HAVE ? ;) Isn’t it hard that nobody ( an it really seems so as they had troubles with Magento 2 ) knows composer from working with it ?
This was amazing and well put together, really showed both sides of the coin with no "this is better then that" BS intermingled and sprinkled through out that you see in similar articles.
I wish. This sounds like more of just fighting human nature. Some engineers just want a paycheck, and some want to learn as much as they can and do the best work possible. If most of the staff is in the former bucket and you’re in the latter, I don’t think there’s much to do beyond accepting that and planning accordingly. Of course, I can’t pretend to know the whole situation so maybe that’s not the case at all. 
I use: - Atom with no plugins for auto completion or IDE like features - PHP 7.2 - Laravel 5.6 - Mysql - php artisan serve for testing locally - Chrome. Its the easiest set up and the fastest to get going with for me and what I do and I work on a large laravel app.
Ruby on Rails == PHP on Laravel
Thx :)
I agree with this he is basically asking them to change everything to suit him, what then happens when he leaves?
For me, it doesn't make sense for me why I should pass `$type` in `fromJson(string $json, $type)`. Imho, the library should know which class it was before I frozed it.
Had some fun in the past?
Passing in the type allows you to reuse the same serializer for multiple types. Because I'm not sure which part you're confused about, this is commonly used separately from serialization. For example, consuming a json api. I actually use it in an api to handle request data. In both cases, you don't know the target type beforehand. 
Lawyers n stuff. At that time I really got what: Being right does not automatically lead to getting justice Means ( maybe sounds harder as it was ).
Unless you want to change the company's culture to achieve a professional goal for your resume, you should leave.
Interesting, thanks! 
90,000 lines of code to 12,000? There really had to be something fundamentally wrong before...
That’s an good point. Don’t know if it could work to change their mindsets which is currently my problem...
&gt; I announced that I was going to **completely scrap over 100,000 lines of messy PHP code** in my existing CD Baby (cdbaby.com) website, and **rewrite the entire thing in Rails**, from scratch. Pretty sure *that* was the root of the problem.
IMO they must change things cause otherwise they get problems as company as well as DEVs searching for other Jobs. I surely can not understand how you can get stuck and not innovate further. We work in Web-Technology and if you can’t move you are out at some time. I also think that the problems which comes with stuff like deployments by hand exist and it just should not be done anymore. The problem with brain drain can be mitigated with good coaching and team work. I always encourage this and not doing anything in the shadows so there is always someone who can manage the stack. Till know I never left somebody alone with no knowledge. But, it’s a good mention. Maybe it’s better to leave them working as they do and not change anything further. When we are not at the same basics it doesn’t make much sense.
I couldn't agree more!
Just like you can set path mappings from an IDE to a container to debug your application, it would be nice if we could set these path mappings for a contained install of PHP. Example of use: Atom has a package called atom-ide-ui and you can install php-ide... However, this requires PHP 7.0 to be installed on the host machine. Does anyone know a workaround for this?
[removed]
The nice thing about WTFPL is that you can fork it and put whatever license you want on it, it's like you could literally do what every you want with it. But I get why people might feel offended.
A big thank you for taking it over and putting your time into it!
&gt; people might feel offended Nothing to do with the license's foul language, it's solely based on the fact that the license doesn't cover some basic legal aspects (warranty) that even MIT covers. In my personal experience in the UK not a single mid/big company would allow their teams to contribute to, or adopt, WTFPL licensed software.
&gt; Speaking of tastes: one tiny but important thing: I love SQL. I dream in queries. I think in tables. I was always fighting against Rails and its migrations hiding my beloved SQL from me. On the other hand, migrations make it _really_ simple to version your database schema.
&gt; currently my problem... Your friend's problem, surely? ;-)
it's 11 years old...
Could you technically fork the library and change the license in UK?
Realistically if my company is profitable, my userbase is strong, my website is secure - why force new technology into my development team other than "because everyone else is doing it"?
https://github.com/adhocore/cli Helps you build console app easy and quick - includes commands, actions, argument parsing, colors, cursors, interaction and all that is required. (inspired by nodejs commander) [scrutinizer rating 10/10, test coverage 100%, version 0.0.2, illustrative readme doc]
Some of what's going on here sounds pretty terrible (like not having composer), some of it sounds pretty good (their git workflow sounds standard, as you describe it), and some of it is just different. Docker is a lot of fun to play with, but from the sound of it, it's not going to solve any actual issues they have. If your friend was willing to take an incremental approach, break stuff down into small digestible steps, and prioritise the ones with the biggest payoff, he might be able to get somewhere. Instead he's trying a "big bang approach", where he's trying to get them to change everything at once, and that's impractical and inefficient. Worse, some of his ideas are...well...bad: &gt; maybe show something about the GIT Flow when working with project repo and submodules ( yeah he tends to use them ;) ). Git flow is overly complicated and doesn't work very well; it's very rarely the right choice, as the things it solves can be done better in more simple ways. And submodules are an immense pain to work with; sometimes you need them, but if you can get away without them you probably should. Monorepos are *easier* if you can use them, and given that Google and Facebook use monorepos, you probably can. Frankly, your friend sounds like the kind of person I'd hate to work with, and I don't think he's taking the right approach here at all. Workflows and code management have value to the extent they add value to customers (by, eg, making devs more efficient). If they're struggling with something, then by all means present a possible solution: "We had an issue with X on Tuesday; where I've worked before we used Y to prevent this, and it worked well. We could easily adopt this here, and I think it would pay off rapidly." But some sort of "everything you do is shit, we should just change everything because docker is totally rad"? No.
Yes, we did some research on Symfony, Yii2 and Laravel and almost decided to go with Laravel now. We've got one person on the team with a bit of experience and the learning curve seems to be more attractive than Sumfony and it ... kind of forces us into a structure.
**About managers:** you should be very careful not to step on corporate politics pitfalls, learn to sell your process enhancements as improvement in quality and speed of delivery. Don't ask permission to be professional (You don't tell dentist what kind of drill to use) **About programmers:** It is far more common to have to have stagnant PHP programmers - It is super demotivating - that's why I left PHP world and went back to Java. While you're staying, take it easy on your colleagues or they will start hating you. Your desires are too intense for them - they need to move on their own speed. Just do improvements on your own when you can and then showcase it for your team (for visibility, be humble) **You may be strong technically but you have a lot of work to do on your people skills.** Good luck
Have your friend ask "ok so teach me everthing about using $oldTechStack" which will uncover what is not properly documented, insecure, bad to handle in general.
Came here to say the same thing about Modular Monoliths. I’ve been use this recently while reworking and scaling production project, and it’s been working great. 
&gt;Google JSON Why is this a thing?
I agree on git-flow and sub-modules - they are unnecessary work. Best is feature-branch and PR to master (hoping OP team is doing code reviews) 
Totally 
https://github.com/google/gson/blob/master/UserGuide.md#TOC-Goals-for-Gson Also, that phrase was never actually said in the post.
&gt;...everything already exists one way or another. This isn't true. I've found that a lot of programmers I work with seem to feel this way, and I think it has to do with the fact that they're programmers surrounded by other programmers and they've only worked in this one field. Also, they have all their own basic needs met more or less. But if you get out of this bubble and talk to people in other fields (like healthcare, science, etc...), you'll find that there are people who want things that don't exist yet, but they aren't programmers and can't develop it themselves. I have several ideas for applications (one that I'm currently developing) that are new. It has helped me that I've done a relatively large number of "human growth" activities that support me in believing in my own ideas and to be more aware of the needs around me than I used to be. There's something I do at work, it's kind of a game to me. When I hear two people say something similar about a need at my work place, I start paying more attention. There are a few things at my work place that A LOT of people have individually commented upon but most of those people don't talk to each other. Most of my coworkers don't really talk much and aren't very social. In comparison to them, I'm a social butterfly (while compared to most of my friends outside of work, I'm a hermit). So I tend to notice when some need at work is a trend. I've gotten a couple of good ideas for needed applications just from that.
It is a Java component.
If you're doing CI, you can learn by building your own CI applications. CI is a super-easy framework to get set up and running. Does your company use a Wiki for documenting common tasks like setting up your IDE (we use IntelliJ for Java and PHP) to use Xdebug and the remote server, etc...? If they don't, encourage them to start one and create the documentation for things like that as you learn them. This will be reusable not only by you, but by other new people and people that have to come back to do it again and again. Does your company use Query Builder? If so, learn that, it makes interacting with the database pretty tidy in the model. Does your company use CI or does it also use other PHP frameworks? Start learning PHP 7 stuff (like strict typing). I bet a lot of your current application is 5.4 or older and could use refactoring. 
I'm all for more competition for JMS, but what is in here to make it stand out? I've used JMS enough to know my way around the shortcomings in the docs, but everything you noted is already in JMS. I'm not trying to be critical -- you've put some decent work into this lib -- but I'm looking for what shortcoming you saw that led you to create this.
&gt;I always felt uncomfortable being tied to Microsoft as it made it more difficult to launch my own projects. Same here. I was doing C# but it's a PITA for your own projects. With PHP or Java, I can build a virtual machine environment for every project on Linux with Apache/Nginx/Tomcat whatever and make copies of it easily. Do that with Windows and the licensing gets it all fucked up. So I went to work at my current employer that uses Java and PHP mostly.
Hi, thanks for taking a look. I wrote it because JMS can be very frustrating to use when you need to customize your serialization. *Aside: I can't remember specifics because it was a long time ago, but I would often run into issues hooking into a custom event subscriber or handler where I had to dig into the source code to figure out why something was failing that should have been working. IIRC, there was often something around the event/handler call that was misinterpreting the response. In a few cases it wasn't fixable.* It could just be a personal opinion, but I don't think that using visitors and events is the right way to solve this problem. I was working on a small android app, and saw how easy it was to convert data between disparate models and I wanted that flexibility in PHP. Off the top of my head, here are a few things that are not possible using JMS, or made easier with Gson: * General deserialization: Not requiring a `@Type` annotation makes it a lot faster to make your classes ready to use. * Deserialization to 3rd party classes: While possible, the last I checked, you had to use yaml and couldn't mix yaml config and annotations. * Deserialize into an existing object * Delegate during a custom serialization/deserialization (for example, let the serializer handle a nested object that doesn't require any customization) * Polymorphic deserialization based on multiple fields * Exclusion strategies using runtime data * Will use the best strategy for accessing properties (defaults to methods, but will fall back to public property or binding a closure) * Variable types (This is a bad idea, but things like the stripe api can return either a string or an object. If I'm remembering correctly, JMS would fail a type check before I got a chance to handle the invalid type.) All of that aside, this was a fun project for me. I mostly wrote it for myself, but I know I'm not alone in my frustrations with JMS, so I thought I'd share. So far I've been very happy with the result.
What is the safe/proper way to do string exploding/checking that won't cause errors. I think the answer is either \`strpos\` or \`isset\` or both. But for example when checking if some session exists or exploding and specifying a left/right index eg. \`\[0\]\` or \`\[1\]\` on something that may or may not exist... yeah just happened to turn on my error logging today and was like "Holy..." with all the notice warnings mostly saying some index doesn't exist. The context is checking url patterns or if some session was set eg: if (strlen(explode('/some-path/', $cur\_url)\[1\]) &gt; 0) { // something exists }
This might be more of an ELI5 thing, but why does PHP need this / what’s it do differently from plain old json_encode() that would matter to an old-schooler like me ? I understand the appeal of GSON in the Java world, because &lt;cheap Java insults omitted&gt; it’s fast for most popular use cases, but in PHP land it seems like reinventing the wheel, or am I missing something ?
`json_encode()` + `\JsonSerializable` works fine for simple use cases, but starts to fall apart when you have more complex rules around what is readable/writable. Not only do you have to put that logic in your model, once you need to serialize based on what the current authenticated user can read or write, you now need to make that model aware of the user. You also need to rebuild the rules for nested objects, or run the nested object through `json_encode` + `json_decode` as you're likely returning array data. Additionally, there's no `json_decode()` + '\JsonUnserializable`, so there's no native way to hydrate an object based on json data. There's a developer benefit as well. When you have the simple case of just needing an object as json, you can run it through the serializer with no additional effort. Using `\JsonSerializable`, you would need to implement that method for each model you need serialized.
PHP subreddit on the cutting edge...
Prob is that it’s so rudimentary that there is not that much to teach 😱
the symfony serializer is pretty good. You should check out its usage in api-platform.
I truely don't understand why Laravel has become so popular. It adds a lot of layers and unnecessary complexity.
Hey, Shendryl, just a quick heads-up: **truely** is actually spelled **truly**. You can remember it by **no e**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Thx for the valid points. For me in general the question is more of an: Should I do it and are there positive stories out there where you had an complete company and could transform them to something modern. There are plenty other things which are very uncommon for me ( like you have to work 9-5 no flexibility).
And if your website is not secure, you can not grant which code is where and setup of new projects are a pain for every dev? As I said, they have pain and they feel it. Its not like changing stuff so that everything fits for one person.
delete
The Symfony serializer is much too simple to compete with JMS.
Because those don't give you what you need for more complicated tasks that you'll commonly run in to; such as when working with API's. Say you want to serialize a field conditionally, or do some special thing with one or two fields in a particular model, or do some special thing with all fields of a given type, etc. 
Nothing. It works just fine as it is now.
Then read the thread from two weeks ago, or three weeks ago, ...
&gt;compile &gt;php
To a sane level, these are problems you can probably find at any company at some point in time, but it sounds like this place is the perfect storm of corporate development hell. * Developers unwilling to learn new things or do anything to improve their current workflow. Probably expecting the stuff they learned at 20 to last them until retirement. * Management unwilling to so much as think about performance, security, technical debt or development speed as long as it "works" and they get to drop the flaming dumpster fire onto the client at the end of the day. I would leave. It doesn't sound like there's a whole lot you can do here at this point, and it's not your responsibility to save this company from itself at the price of your sanity. 
a few notes on this: * they use some tools that work for them, that's not necessarily a bad thing. * monolithic git repositories (all in one repository) aren't that uncommon either, google for example used to do that (and for all I know might still be doing it) https://www.wired.com/2015/09/google-2-billion-lines-codeand-one-place/ - and while I personally don't like the approach too much, I'd still rather work with a monorepo, than with the mess that are git submodules. * presentation is important, opening a git log when trying to explain something in git isn't it. Consider going through your example on a whiteboard, and make sure that everyone gets what you are saying before moving on. * when wanting to change a workflow you should do the leg work of preparing papers or a presentation that compare the current workflow with the suggested one and show what the advantages for the actual team are - an abstract "this is more modern" or "using some feature" that's not needed won't get you anywhere - also you should make an effort to understand where the current flow is coming from and why it is used in the way it is used before suggesting changes. Having already planned such things as "get them some docker training" after the interview clearly shows a lack of that due diligence. 
&gt;Say you want to serialize a field conditionally, or do some special thing with one or two fields in a particular model What's the advantage in doing it through a library rather than through code?
All the same reasons for using and library.
Node index.js
Yeah just like PHP is always on the cutting edge. I heard they want to introduce generics soon, it's just another couple of rounds of psrs. That feature was so hip in Java 2005.
PHP is a scripting language, not compiled in the same way other languages (like C) might be. 
If the company is feeling the pain of problems caused by outdated practices and tech, then it should be pretty easy to convince them to update. Importantly though, don’t try to sell the change to the rest of the team as “I’m updating X”. Talk about the project to modernise in terms of what they’ll get out of it, like “I’m making Y easier”. Or “Z will be quicker”. Doing this makes it look like useful work, rather than tech for tech’s sake. This’ll be especially important if it the time to do it needs to justified to senior management.
Just a friendly warning. Don't even try your blogspam here.
Don't force them to change their way. Just show your own better way and 6 months down the line, they will be inspired by your ways. I've always been successful this way. If it's not broken, don't change it is a perfectly valid answer. Unless you demonstrate another way that saves TONS of time, they won't switch to it unless they have the will to. Remember that a successful company is not about its tech stack but about the team and each individual person in the team that drives the product quality forward. It's not just about tech and devops.
but rails is soooo good to work with, ruby too.
you probably haven't seen for a long time
Com-pil-er?
Take my upvote, this is exactly what I wanted to say :)
The Symfony Serializer is quite powerful and powers up the whole https://api-platform.com/, however it is true that if you are looking for enriching the payload during (de)serialization, the JMS one is more fit for the job thanks to its visitor pattern
I see. Which form would you prefer, link to source code in the package or these 27 regular expression in the post? What do you mean by "why" it's done? I needed to switch to another templating system that is more commonly used. That's the first part about
it was, but not so much anymore.
I see you like useless comments. Too bad an IDE does help with riddling code with useless comments.
I see you like useless comments. Too bad an IDE does help with riddling code with useless comments.
They aren't live template comments. They are phpdocs which we use to autogenerate API docs and API references from. They also help PHPStorm resolve some code for auto complete and type hinting. Might want to check yourself before you start slamming others
Seems a lot more interesting to see your reasoning behind using certain regular expressions. Since you emphasized that there are 27 to switch to a different templating system, it would be nice to see the approach you took and the obstacles you encountered and how you resolved them. Personally it felt a bit bland to click a link on how to do it when in reality we need to install a package and it's done.
it provides extension points (normalizers/denormalizers) which easily close this gap.
really, /** class ClassName **/ class ClassName is used for generating apis and phpstorm type hinting? It's a phpstorm template, 100% duplicating the exact method signature in a docblock helps with anything? It does nothing but clutter the code... but go ahead, dont improve, but go all defensive...
In the Java industry, php is a minority, yes.
if (strpos('/some-path/', $cur_url) { //found something } should do it just fine.
I read about hipster so-called DevOps complaining about the company they work at and their flow. As a programmer and a project manager I've dealt with such people and one thing defines them all. They know all the cool words but they have absolutely no idea how to set them up or use them effectively unless they break half your project. What have you done OP? The way I see it, you've just thrown in some keywords in your post because half the things you mention - overlap in functionality. Do you actually know what you are talking about or you are just bullshitting everyone in here?
Laravel .... complexity ... you wut mate?!? There's nothing complex about Laravel. That is if you've took a peek at the documentation. 
I expect another article in ~2 years "This is why I switched from PHP to GoLang" dibs
So what is it doing in PHP?
&gt; Imho, the library should know which class it was before I frozed it This is not what the library is trying to solve. The library is simply a json encode/decode with advanced features. The point of JSON is that it's portable between languages, as such, it's not language aware. So there's no way to specify the type within the json spec, as such, it's not up to the library to change your json value.
This is pretty cool actually. I haven't done PHP in a few years, have done Java since I stopped doing PHP, and I share your pain of JMS not being great. Once I started using Gson in Java, it felt like a huge difference. This will make a developer's life much easier.
I don’t mean complexity as in ‘I do not understand what is does’, but as in ‘it does more than needed to get the job done’. 
I mean unless you give specific examples your argument is just a moot point. Laravel interfaces bunch of libraries and does what you tell it to do. Nothing more, nothing less.
I wrote a script that generates random Space Invaders-like character for my friend's street art project.
This implementation serializes PHP objects to JSON and vice versa.
You're just hopping on the "I hate Laravel" hipster brigade. Give some specifics.
Your English isn't bad, it's good enough that people just think you're a lazy native speaker and they're annoyed with that I think. Your situation doesn't sound that bad and I think you have a few choices. The first is to decide to become more patient with your coworkers and demo more useful flows gradually introducing improvements. The second is to engineer a totally new flow but allow people to opt in one at a time while you coach them. The last is to go find some place more cutting edge, but in my experience, that's going to be a rare place.
The complexity is in the processing of this one-liner.
Back when "intranets" were all the rage!! Seriously, when was the last time you heard someone say "Intranet"? 2014? When was the last time you *worked* on one? 2010??
I've got a project that I could definitely try this on, thanks for posting it u/dunglas!
No, you’re clearly in the “dont' attack my favorite framework”-mode. No matter what I will say, you won't agree. And that's fine, you have the right to not agree. But I will not go into a yes-no-debate.
That's because the article predates composer by FIVE YEARS.
If you're already using gitlab, why not use their CI/CD? it'd be way more clearer to the devs when it's a tool they already know. Plus, they can use Gitlab for merges (and even squash in latest CE release).. I don't know how they use docker there, but in previous companies i took it upon myself to integrate and show the devs how it works. I did it overtime. once they realised the benefits of it, they were on board. I'd suggest setting up a self deploying env pointing to 'develop' branch (which according to what you say they don't currently use). make it as seamless as possible (and again, i would suggest using GitLab instead of Jenkins to make it more visible for them). and when you're done you can tell them to play around with it. if they like it, maybe they will consider changing their gitflow to start from develop branch and move to master from there
Well I'll be damned I got jebaited. 
K thanks for posting
I can vote on PHP RFC. If you want to influence the vote, you can raise your voice here, https://twitter.com/mnt_io/status/1016319905153671168, and I will vote what the community wants. We do that with the hoa-project.net's community, and I try to extend it :-). This is an experiment.
I can vote on PHP RFC. If you want to influence the vote, you can raise your voice here, https://twitter.com/mnt_io/status/1016317592661872641, and I will vote what the community wants. We do that with the hoa-project.net's community, and I try to extend it :-). This is an experiment.
I'm looking for server-side validation/manipulation within PHP. While using JS to process this is possible, it isn't what I'm looking for. Thanks for the suggestion anyway.
Ahh right, sorry I couldn't help
this is great, but the blog post doesn't really show much, how about a link to the branch or pr's or something hat show these changes?
How about the fact that everything you can possibly think of is already built in?
That is true, I get JMS immediately as soon as I need that sort of functionality. Maybe I'll try the stock one again sometime.
I'm kind of in favor of keeping them case-insensitive. Is there ever a case where you would *want* two constants with the same name but in different cases? For consistency I'd lean towards making everything case-*insensitive*.
What is the best way to unit test a symfony form with a custom entity type? I have a form type which contains an entity which contains two entities.
Funny, I actually remember the website, it's a music distribution service. Didn't know it was written in Php lol
I don't mind working with old technology because almost every company has old technology. Only startups are cutting edge and they're only a startup until they either start making a profit or die... In fact knowing how to cope with older style workflows makes me more valuable. I have to maintain code written for and running on PHP 5.1 as I also write new code for PHP 7.2. As I see it you should just decide if it's worth it personally. I care more about stuff like - how much I get paid, where the company is located, what the culture is like, more than I care about what tech stack I get to use. At the end of the day it's all just work so if I am using PHP 7 or PHP 4 it doesn't matter much to me, just expect me to work much more slowly and less efficiently in PHP 4!
Admittedly, it's been a while since I've tried the Symfony Serializer component and I've only browsed the api platform docs. It looks like Symfony has made a lot of improvements since I last looked at it. It could be that Symfony's serializer works fine for your needs, and I'd encourage you to continue using it if that's the case. I personally prefer Gson's api. I don't like how much information has to be passed to it at runtime. How do you typically figure out which fields you want serialized? I imagine you must have to calculate that somewhere. With Gson, you can specify through annotation or by setting things on the instance so that it's available everywhere you use the serializer. The last I looked at the api platform, it did a lot for you. If it's generating code, or otherwise programmatically handling requests, I assume that the Symfony serialier works fine for them.
As i have started with Hudson I am more in working with Jenkins and also find it more flexible in general. But if they had used something like GitLab CI that would also be perfectly fine. But they don’t, it’s just and purely their GIT server. I would also love to just use something existing to start work from there. But as mentioned ( or tried to ) they don’t have real project repositories! Packages and Main Applications ( Magento core ) have repos but not the project itself. So you ask what is exactly deployed where, they must login to the server and look at the git status of the package on that server. So it’s like every kind of an easy and not hard breaking transition seems Blocked by lack of knowledge. Sure it can be trained but if things are in general like that question is if it’s possible to change.
Thanks 😊 Yep, patient is one thing which has somewhere left me during live. Maybe that’s one of the biggest problems... I don’t know such an unwillingness to innovate. Maybe I had too much luck till now but innovation was in no company that kind of problem.
&gt; is already built in? silver bullets, give me two. But in reallity if you have tool which has everything you can possibly think of built in, then there are tree options: - You have very simple tasks, which can be generalized good enough - Tool can do everything what you want, but not the best way (performance, how easy is to maintain solution which is built on top of this tool and so on) - You have lack of imagination.
I don’t call me DevOps I am Fullstack baby 😂 ( SCNR ) To get that right, I can setup everything which I mentioned, can configure it and manage the infrastructure. And not just by doing docker run .... I am personally interested in Web development and servers and stuff and try out stuff the whole time. Its really my possession. There I first setup Rancher to get base orchestration and from there on installing required stuff is easy peasy. As I showed them how an GitLab Upgrade works from there on -&gt; big eyes. Today, really, most stuff isn’t that hard like 5 Years ago. But you should always know what you are doing ;)
Why client hated you? 
For me money isn’t something which I take much into consideration. Otherwise i wouldn’t have started there ... maybe I should change that for business ;) Thought the rest would be good but didn’t made an Test day ... which i also need to change.
Sure for me Team and culture have also top priority but it seems that at that point we also have some different fundamentals.
Sure I try this and i think they get it ( mostly ). But I don’t find an base from where to go on. When GIT is the base from where to start cause an GIT log is toooo complicated an nobody gets it .... But don’t get me wrong, it’s ok when they like it that way but then it’s hard to get an structure with stuff they saw from me.
Thanks for your advises. - That’s true and perfectly fine. - I also like the trend of Monorepo or Trunk based development. But when you hear something like: What, multiple hundreds of megs for every repo ? Its hard to go from there an I have made good experiences with submodules and it would also keep some of their current workflow patterns as they work mostly on an package base. Personally, one big monorepo will mitigate a lot of probs :) - No whiteboard there :p But that’s true maybe I must somewhere get better at that. - As i am the more practical type I always try to get more real life examples as just saying it’s modern. 
Thanks, that’s nearly exactly what I think and see. I surely shouldn’t make their problems mine :)
LOL, code reviews, for me sure, for others ... I also don’t like gitflow Main idea with the branches is to get them to an point where all main branches just go by fast forward on an main line and frome there to trunk based.
You forgot: - It's a well built library that does a great job capturing all of the common needs of serializing/deserializing
&gt; Kbps Kilo Bits Per Second &gt; KBps Kilo Bytes Per Second
An alternative, that welcomes beginners too: https://discord.gg/RpJJtZJ
We just started another one, hoping to be a bit more friendly to beginners: https://discord.gg/RpJJtZJ
What do you mean "why" is this a thing? It's a json serialization/deserialization library written and maintained by Google. I don't understand why this can't be a thing.
He tries the incremental approach and most infra is now there. That’s not the problem. But you must start somewhere and when you don’t get the time and just hear everywhere „nope“ it’s hard to deliver them something that they seem to want. Totally agree on the git stuff ( I mentioned it already in other comments ) but also here, you must start somewhere. Also really, they don’t have project repos, like that is the source of your website. They have package repos n stuff ( but no composer ). Also they don’t use GIT flow. The Feature branch gets checked out from the master branch. That feature is now their dev branch. But it does not get merged back to master an from there to stage. You go straight from Feature branch ( again which comes from master ) to stage. They than merge the feature branch back to master. Not stage to master, again the feature branch which is tested with dev code base ind stage branch. Now tell me that’s sane. For me docker is not the point and as long as the toolset if choice works ( but it MUST work ) I am generally perfectly fine. Nobody knows all and people and teams are different, that’s fine and nice. But when you do all stuff which just IS BAD then you should have the will to change. Bogus is bogus regardless if you call that your way to go or works for us or whatever. And hopefully you don’t consider manual deployments a good practice ...
65% VS Code; 35% vi
So like `json_encode()`, then?
True but they're ambiguous and that fact is often even abused to sell storage and bandwidth. I'd go with `KILOBYTES_PER_SECOND` in an application, or more likely kibibytes.
\`json\_encode()\` doesn't preserve class information, and if you \`json\_decode()\` you just get \`stdClass\` objects.
[https://imgur.com/a/akhDk2f](https://imgur.com/a/akhDk2f)
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/m6nMOXK.gifv** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20e22prho) 
It's also not possible in JMS to write handler which handles every instance of certain type. You must give it list of classes of every implementation. This makes it impossible to write generic handlers for eg. Enums.
I did, it misses too much features. You must write normalizer even for such basic thing as renaming a field.
Check out symfony property info and property accessor components
It used to be true that the wrong case would cause an extra lookup. However it works now, uppercase constants are less ambiguous and would be welcome.
I’d need to see more of your implementation, but this should be possible with Gson’s discriminators. As long as you can programmatically derive the type from an object.
&gt;Can easily override type handling for all instances of a type or on one specific property (and is otherwise extremely configurable). I dont doubt your serializer can do that, you even wrote it in your initial post: \&gt; Can easily override type handling for all instances of a type or on one specific property (and is otherwise extremely configurable).
I like your code and the attitude you showed in this thread! Thx for the contribution!
phpstorm. it's the only way.
Wordpress, the DVWA alternative with blog functionality.
i'm with you here. all programmers get shortcut crazy in their early to mid career, thinking it's all the rage and they're a genious then later you realize that clarity is king. if i can take steps to make it more obvious what my code is doing and less ambiguous, i'll happily do it
yeah, who the hell is trying to memorize argument orders? phpstorm (and most other jetbrains based ide's) will tell you the arguments, types, order as you type
i would start with a list of "million dollar ideas" as i call them. i use google keep and have a widget on my homescreen. over time just jot down any old "nice to have" or any old idea. then you'll have a passion to see one of the projects through to the end i would also say, API-first. whatever your idea is, make the api first, so you can later deploy to web, mobile, etc
I don't know how to say this in a way that doesn't sound overly critical: This is worse than SQLite in every way.
If you talking about symfony/serializer - then yes. JMS is great for very common needs, but if you need something slightly more complicated, you ended up writting yet another visitor/listener just to do simple stuff. Symfony's approach is much better and still you could have all the things that JMS does. p.s. Or maybe I just have too many uncommon requirements.
form type can't contain entity. You probably need transformer/mapper to separate things.
Could you elaborate? If you're suggesting using them, I considered it, but I wanted to avoid doing runtime reflection.
Yeah I wanted you to check them out. But since you did all good. Even though I don't get your comment. You still do reflection, don't you? And if you don't do it during serializing but some compiling step instead (sorry didn't check), you can do same with symfony property-info. And property accessor has support for caching built in.
I'll have to look again. I do reflection and cache the results, but if I can use a Symfony library to achieve the same result, that's a bonus. I didn't think it supported caching.
Can you show code?
&gt;Some Example Uses &gt;User Login System Login system of the 80s maybe.
I've been bouncing back and forth between monolith and micro-services for awhile now. The internal application I wrote and maintain is a collection of very descrete applications within one giant monolith. At first this was fine but as I'm asked to add more features I start to get very fearful of doing something as simple as updating smaller dependencies because parts of the code were written 3 or 4 years ago and will need a good amount of TLC. I'm a sole developer currently. I was considering doing microservices with APIs because each "feature/descrete application with a single entry point" could be maintained on it's own. I was thinking of deploying a handful of micro-frameworks with a full fledged framework as the front end, but again this seemed combersome in and of itself due to all of the shared resources including SSO authentication. This means I'd end up launching an OAuth server as well (which I may anyway). I'm now looking into the modular approach in hopes to tame this beast. Looking forward to reading more about this. Any reading material would be greatly appreciated.
&gt; Seriously, when was the last time you heard someone say "Intranet"? 2014? When was the last time you worked on one? 2010?? Today.
That is right there in the post: [https://www.tomasvotruba.cz/blog/2018/07/05/how-to-convert-latte-templates-to-twig-in-27-regular-expressions/#how-does-this-set-work-in-real-project](https://www.tomasvotruba.cz/blog/2018/07/05/how-to-convert-latte-templates-to-twig-in-27-regular-expressions/#how-does-this-set-work-in-real-project)
 I see. Thank you for your feedback, I really appreaciate it. It makes sense now to me. I've updated the post with expression and with useful takeaway under almost each section. There are like 4-5 most important tricks that still repeat. The biggest challange was to find out which one :)
I am not using an entity per se. I am using an entity type https://symfony.com/doc/current/reference/forms/types/entity.html
How did I never know this, holy shit.
Please do and help all of your co-workers with that.
What is it? &gt; Free and open source server providing code assistance for PHP.
Extension API that's actually nice. For example, HHVM's extension API (in C++) is amazing - it's so much less crufty and way more readable.
Microservices architecture is harder than monolith. Switching won't make your code better.
Because there is not such thing as ASP.net. There is .NET which is preferred by many devs as well. Though PHP still prevails, probably because .NET is a proprietary software from Microsoft, and given a choice, I would prefer Open Source. 
Got it. Thanks! Open Source technologies are very trending but what about security? Can an open source product could be more secure than an enterprise level product?
It all depends on the developer. The language/framework provides the tools but it’s up to the developer to use them properly and proportionally.
I am not an expert but it is often said that a software that can be freely reviewed by many people is generally more secure than closed source. Besides, most of time it's not a wand, it's a wizard. Most of time is a bad program written by inexperienced programmer is the problem, not the language/platform.
Your kind of comparing apples with pears. PHP is a language, while .NET is a framework for C#. I know a lot of enterprise devs that swear to .NET. However, look around, how many innovative companies do you see using .NET and how many using PHP? This is not because of limitations in either of the languages/framework, it’s more because of a different mindset between the two.
Actually, PHP is an open source platform and there is no restriction of only code in Visual Studio. If you go more advance in ASP then you have pay for more advanced features while PHP is totally free.
What @colshrapnel said extended: Open source security issues are usually also public and can be exploited fast by hackers (before a fix is deployed). Recent situation: Drupalgeddon 2 vulnerability
So, whats the conclusion? myself i found more php developers then asp.net developers.
Very valid point! I appreciate
true..
PHP needs to be coded in its own editor btw. Yup! ASP is paid but still trusted by many companies at enterprise level. 
I like this a lot. We use a lot of value objects in our code and are already implementing a bunch of `equals($that)` methods. This will be nice. 
[removed]
FYI, .NET open sourced in 2014.
There is so much bad information in this thread. - PHP is not a platform - .NET coding is not restricted to Visual Studio - .NET is open source
What do you mean that PHP needs to be coded in its own editor? 
wtf
It's not really about the language - I don't use PHP because I prefer it more than ASP.Net. PHP as a language is nothing special. ASP.Net is a good framework and Visual Studio has always been fantastic. I use PHP because there's an awesome amount of example code freely available, thriving meetup groups in every city in the world, the documentation is great, deployment is brain-dead simple, hosting is cheap, WordPress/Drupal (et al), it runs on Linux, jobs are plentiful, it's part of a wider open source movement. In contrast, the .Net ecosystem is a corporate wasteland. Or it was at the time. Some of my reasons may be no longer true but they were at the time I made my decision, 12 years ago. 
Many many 'enterprises' use open source. They are not mutually exclusive concepts.
yeah! 
Last I checked you needed Microsoft IIS to run ASP.NET Microsoft IIS requires Windows(Server) No.
I think you should just create your own domain language and API for this.
This needs to support `===`. I'd vote no.
Maybe, maybe. Although that would imply to implement parts of an ORM from scratch.
Good to know. but it's only a platform but not C#, right?
&gt;So, whats the conclusion? myself i found more php developers then asp.net developers You keep mixing terminologies again. ASP is the language and .NET is a framework much the same as PHP is a language and Laravel is a framework. It depends what market/environment you're in. If you're in a corporate setting its most likely you will come across ASP/C#, if you're in a small development shop or working freelance you're more likely to come across PHP. &gt; Why Do Most Developers Prefer PHP over ASP.net? That's a very wide and bold statement do you have any facts to back this claim up? Very few programmers will work professionally with ASP and PHP long enough to give a valid expert opinion and what makes one better than the other. Languages by the most part (if they are Turing complete) have the same basic features and can achieve the same tasks just in different ways. It comes down to implementation differences such as statically/dynamically typed, compiled/interpreted, OO/functional and by the most part these are subjective and have pro's and con's to both. There is no right or wrong answer.
&gt;PHP is an open source platform It's no a platform? &gt; there is no restriction of only code in Visual Studio You don't have to code ASP in Visual Studio either? &gt; while PHP is totally free Not strictly true, there are certainly paid/licensed PHP modules
https://en.wikipedia.org/wiki/Data-rate_units#Kilobit_per_second vs https://en.wikipedia.org/wiki/Data-rate_units#Kilobyte_per_second
I forgot reddit is overwhelmed with political correctness. I just dislike HRs who in my country are mostly women. That does not imply I prefer male HRs. I have bad experience with those people. I prefer to get down to business with someone who has a technical mindset and doesn't try to sell me meaningless jibberish. I find it a waste of time. Is that enough elaborate for you?
ORM means Object-Relational Mapping, in your case, there's nothing relational nor is really a database, you need a proxy to docker commands. A domain specific language/API is more appropriate in my opinion (although opinions may diverge). It's not much, you won't re-implement an ORM. Or if you consider than a findAll() method is an ORM method, then we all re-implement a partial ORM everyday :)
Overall -1. The `==` operator is already quite a dumster file with a high implicit cyclomatic complexity. This patch would maybe be interesting if we had `Ord` and `Eq` interfaces in core, and we could implement those, but PLEASE no more added magic methods, and this is coming from someone that made a "career out of magic methods".
No for me too. No more magic.
Probably because that was (at least) the third time it was posted. Here's the first submission which is still visible: https://www.reddit.com/r/PHP/comments/8m5tu5/on_php7_by_the_creator_of_php_must_watch_he_is_so/ Different url, title give you ebola, but same content.
I actually got it to work. Here's the classes I needed to extend: DockerImage extends \yii\db\ActiveRecord CommandlineConnection extends \yii\db\Connection (does nothing at the moment) DockerImageQuery extends \yii\db\ActiveQuery CommandlineCommand extends \yii\db\Command So it's now possible to use $images = DockerImage::findAll(); to fetch all docker images as ActiveRecord models, just as you would a database model. I can think of at least two downsides: 1) It looks like SQL ORM, but it's not. Is this abstraction layer a good or bad thing? It depends on what the programmer expects to see, of course. 2) To extend the functionality, you need deep knowledge of the Yii 2 framework (or at least need to spend time reading the framework source-code).
Thank you. It didn't occur to me that it could have been a shortened link. 
PHPStorm does do that? Click on any variable and it will highlight the same reference elsewhere. I have tested this and it works for both local and class scope so clicking on a class variable will also highlight every reference to $this-&gt;variable, clicking on a method argument will highlight where its used within the method.
If the messed up their variable and have a character off and match case is checked they’re sol
Sure, https://github.com/ThrusterIO/http-server
That is true however he will see exceptions if that is happening.
Yeah, you don't name a "meter" constant `Unit::M` or a grams constant `define('G', 1)`, for sure most people would pick `METER` and `GRAM`, so they'd also pick `KILOBYTES_PER_SECOND` and `KILOBITS_PER_SECOND` over `Kbps` and `KBps` (apart from the fact that any sane naming conventions lets you keep constants either completely upper-case or camel-cased)
Thanks
[https://www.imperva.com/blog/wp-content/uploads/2018/07/WP1.png](https://www.imperva.com/blog/wp-content/uploads/2018/07/WP1.png) What is this, I can't even... This piece of code perfectly describes the state of WordPress. Stay away from it.
No, the whole Roslyn platform is open source as well, including C#, last time I've checked.
Yeah one click only. There is also Find Usages with Alt-F7 or in the context menu for a more detailed view.
This is the theory, but in fact, not many people decide to check the code for security errors. WordPress is the very basic example of this. Huge community, one security error after another and it doesn't end. If there are so many security experts that read open source, disclose security errors and maybe, just maybe, actually fix them, too, WordPress would be a beacon of security. Everyone \_can\_ take a look at the code, but no one actually does. Except, obviously, the people looking for security vulnerabilities, wanting to attack something (or close their own systems). In fact, closed source can be a lot safer since security errors are harder to find (you can find them by reverse engineering or brute force only). But there is no way for you, as a user, to check if they have been fixed correctly after they've been spotted, obviously. So it's security by trust. Open Source is not automatically more secure than closed source.
When was that? I was able to run ASP.NET sites through Mono for at least 10 years now. It's not very comfortable, but it works. Plesk has brought ASP.NET support for hosted websites for a long time.
Neither ASP.NET (VB, C#, F#, J# etc., whatever floats your boat), nor PHP need an own editor/IDE to be developed.
Many big PHP libraries come from ported or re-written Java projects (Doctrine, coming from Hibernate, as a prime example)
&gt; are already implementing a bunch of equals($that) methods. So....you already have a solution that i) works ii) anyone not familiar with your code base can understand. Can you put into words exactly what the benefit would be for you to move to a more magic way of doing this? 
Best chat I’ve found so far! Great bunch of blokes.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/yii] [Using a different data source than SQL for an ORM • r\/PHP](https://www.reddit.com/r/yii/comments/8xnxfi/using_a_different_data_source_than_sql_for_an_orm/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
I think `$x === false` (`if $x is false`) is much more readable than `false === $x` (`if false is $x`) since it's much more like the normal english sentence flow.
&gt; It's not very comfortable It's super comfortable running PHP on a VPS. 3 commands and you are good to go. 
I would agree on this, if it would be interface, not magic method. 
Atom +1
Control command G on the Mac...
Implementing it like we are feels like a work around to me, it's probably a very "personal preference" thing. The project I'm currently on also does a lot of comparisons (we get huge payloads from a drupal app and need to check if parts of the data changed to trigger domain commands). So we're doing a lot of `$this == $that` and then suddenly `$this-&gt;equals($that)`. I just think it would be neat if everything looked the same. Part of me wishes this RFC would affect strict comparison checks as well, but I can see why that would be a bad idea. I should probably switch from myclabs/php-enum to marc-mabe/php-enum (the latter implements enum as a singleton, so you can do strict comparison on them)... I personally don't mind magic methods and tend to use them often (at least `__toString` and `__invoke`). 
TIL we have case insensitive constants.
If you have trouble remembering the parameter order of the most common PHP functions and it becomes a "**major** productivity issue" for you, regardless if they have a mixed parameter order or not, I'd not hire you, anyways. I don't need an IDE to know that in array_map the function goes first and in array_filter it goes last. If you need that, I'd question your PHP skills. Most IDEs already put the parameters, e.g. `$needle` and `$haystack` in there for you. If not, it shows it in a tooltip, telling you. What more do you need?
I'm trying to use Satis as a repository for proprietary Composer packages, and it seems easy considering the complexity of what it actually does. One thing trips me up a little bit though. Why do we --keep-vcs? My plan was to host the Satis instance on AWS but my deployment process involves (my) version control. What am I not understanding here? Any help appreciated!
Also sorry for putting this in a comment and not the post body, the new Reddit interface is confusing the crap out of me.
There are tons of libraries like this (e.g. [Zubr](https://github.com/nkkollaw/zubr-php)). And somehow, everyone has their own opinionated view of how a "perfect, consistent core API" looks like (e.g. will it be `str_pad`, `strpad`, `string_pad`, `pad_string`, `padString`? Every one of these is *consistent* and *clean* for one person or the other). That's basically why no one uses these libraries except for the authors. And that's basically why no one cares. We can waste time with trying to "fix" the bad, bad, bad PHP inconsistencies or we just learn to live with them, _not_ break existing ecosystems and just write code.
That's not a good reason for someone that wants to start using frameworks. I don't think he's building any application that'd require LTS and once he does and got the experience, we'll be at Symfony 6.3 already, probably.
If you want to make a profession out of this and earn money, and I'm talking about actual money, not "we just founded a startup and write a ToDo app for iOS in HTML"-money, then go for Symfony. The only real existing alternative businesses usually use these days is Laravel. But from a business perspective, Symfony is a lot more stable and consistent than Laravel and doesn't rely on magic wherever it goes.
Sure, as we've all got experience of everyday situation, I think seeing applicability of Algorithms in everyday life is a good way to start you journey. Here's my podcast on the book "Algorithms to live by". [https://soundcloud.com/factor29/algos-to-live-by](https://soundcloud.com/factor29/algos-to-live-by)
It's just a standard composer flag, the official info on it is: &gt;--keep-vcs: Skip the deletion of the VCS metadata for the created project. This is mostly useful if you run the command in non-interactive mode. My understanding is that it'll prevent the package asking if you want to keep the vcs if it exists (e.g if you are doing an install in an existing version controlled directory, which most people will be doing). This wont stop you hosting it on aws at all though so not 100% sure what the issue is.
So you promote your articles in which you copy-paste others work (RIPS TECH)? This is good for SEO but bad for your brand.
&gt; It's super comfortable running PHP on a VPS. 3 commands and you are good to go. I know, that's why I even mentioned the comfort. You can't just run 3 commands, drop a C# file on an FTP, call an URL and it gets run and you get a response. I suggest you take a look at what Mono became (Microsoft is actually supporting Mono and slowly turning Mono and .NET into the same (open source) thing) and how well .NET Core and the additional open source components (Entity Framework + LINQ, the best DBAL I know, ASP.MVC etc.) are doing. These days, it's basically like Node.js/NPM. You install packages, these get automatically linked, you use a namespace, it's there. You say `dotnet` and it runs. And it works on all platforms. I am pretty sure .NET, and especially C#, will become a lot more popular again soon.
If you want to test your private method, you didn't understand the reason for private methods. It's to hide API. To be able to refactor it (including removing the function completely) and still have the same API and same input/output. It's not like you're not covering it when doing testing with coverage. It just gets called from other functions and you cover it through that. You don't test by passing values to it directly, but call the functions that call it and test them with all scenarios that provide all possible values to the private function once. Only that truly means that you can remove your private method completely, swap it out for another one or a concrete implementation, like another class and the API for the class you were testing and its input/output didn't change at all. If you have to change tests when removing a private method and swapping it out for a different implementation, you're testing wrong. The rule is, never test private things. When I write "**private**", I basically write "**I may or may not replace this later and you shouldn't know and see if or when I do it**". And your tests should test exactly that. If your public API works the same when the private is in error, you either didn't test the public API correctly or the private function does something unneeded/useless. If the public API doesn't work when the private is in error, why test the private?
It kind of reminds me of how D allows this with [opEquals and opCmp](https://dlang.org/spec/operatoroverloading.html#eqcmp), also Python and C++ have it IIRC. But I think it should apply to `===` as well...? You could always check if two objects are the same object by using `spl_object_hash` but that's a bit verbose and clunky. 
I am pretty sure I can change private values in any language, with Reflection. That's not a reason to say "encapsulation doesn't exist in PHP objects". You'd notice a construct like closure binding and you'd just as well notice any kind of reflection to change private parts in any other language, too. And then you name JS as a prime example for "grown up shit", but JavaScript doesn't have privates at all prior to ES2018 and ReactJS and ReasonML are affected by this (React is not a language, just a runtime, JSX is the "language" and its part of JavaScript, mostly)
Well I was installing this outside of any other project and it just retained the actual composer/satis VCS info. As in, when I created satis.json it was saying I'd commit/push it to composer/satis. Maybe my problem is that I'm not installing it inside of another git repo? But I don't really understand why that would be best. The satis instance as far as i know does not have to be nested in any other project, in fact it could be used by multiple projects, so why would I nest it inside an existing project?
Darcula all the way.
Then you didn't try PHPStorm's yet. When you type `function doSomething(ProductVariantAttribute $` and stop, you get auto-completion for `productVariantAttribute`, `productAttribute`, `variantAttribute` and `attribute`. Not even Visual Studio with C#, the master of all IntelliSense features, does this (at least, last time I looked). The class-lookup is namespace-sensitive (e.g. if you have `A\Entity\Product` and `B\Entity\Product` and you're editing `B\Manager` trying to load `Product`, it will always but `B\Product` before `A\Product` and realizes where it is and what it is around it and most of the time you have the class you're searching for within the first 3 results after one or two input-characters. You got it, you press enter, it automatically adds the use-statements required. I've tried them all. There is no other PHP IDE that does this. And it's a killer-feature for me.
What is it like, writing more use-statements manually than actual code?
&gt; Open Source is not automatically more secure than closed source. Neither is the opposite, and with closed source we do not have the _option_ to check the source. On that account, open source is better than closed source.
Personally, I believe the pros outweigh the cons here, even with that in mind.
No it doesn't. You can write PHP in Notepad, gedit, Vim, `cat`, or anything that can input text and store in a file.
And the code is hosted where?
For upgrades, use the Jetbrains Toolbox. It makes updating less of a pain. If you can't afford a license, maybe, try creating a few good open source projects and fetch a license for those.
Technically you are absolutely correct. I honestly hate how this community so often tries to outsmart each other by implying “you didnt understand &lt;some concept&gt;”. Blackbox testing / testing a private method is sometimes the better evil, in my case for example with a massive legacy system with almost no tests whatsoever. There is no business value in refactoring especially because changes are very rare. But sometimes there is a massive private method that needs a change and I will write a simple test for that one private method to ensure my changes work inside of its scope. Trying to test the public API of such a legacy monster would be completely out of scope. Obviously this doesnt ensure that everything works but it makes it easier.
[Example](https://i.imgur.com/M6OANuW.png) (this is just random code from the Symfony documentation).
1. You don't. When I do "Open Project", I get a window that asks "Open in new window", "Open in current window" and for current window you get a checkbox "Add to currently opened projects". It adds it to the project list on the left with the checkbox and you can access all of them at the same time. 2. That's not true at all. By default, PHPStorm indexes all changes automatically, even external changes, in all directories. It can also automatically detect directory settings for you (e.g. exclude tests or compiled sources for indexing) or you can exclude/define them differently. Netbeans doesn't even support automatic addition of a `use`-statement when pressing Enter on an auto-completed class. It has the same level of code-completion Sublime Text 3 has with default settings. The refactoring features of PHPStorm have a power that isn't even remotely comparable to any other existing PHP IDE. It's like it completely _understands_ your code. Did you even use PHPStorm? It sounds like you didn't. I suggest you give it another try and actually set it up correctly. I've had tons of Netbeans users converted to PHPStorm just by them sitting next to me seeing how I use it. My code is written 10% manually and 90% generated/auto-completed through IDE features.
Am I missing something? This blog entry links directly to the [original article](https://blog.ripstech.com/2018/wordpress-file-delete-to-code-execution/) that it blatantly copies. 
&gt; and does everything that PHPStorm does and more This is where you're wrong and it just shows you've never used PHPStorm for real. Netbeans doesn't even remotely have the auto-completion and refactoring capabilities PHPStorm has. Netbeans doesn't even auto-complete `use`-statements for you.
You realize the RAM it can use is limited by the JVM and you can only increase it manually? Seems like you're talking bullshit. Good code insight uses RAM. That's simple knowledge. If your IDE doesn't use a lot of RAM, it probably also doesn't have really deep code insight. I have 8GB RAM at work, I run about 9 docker containers, Firefox with like 40 tabs open, two instances of PHPStorm, one instance of WebStorm, Sublime Text with like 60 tabs, HeidiSQL in 4 instances, Stride and Slack. Things are fluid, for the most part. Or else I wouldn't use it like that.
Why would you decide if it needs that RAM or not? PHPStorm consistently has a tree of your whole code in its RAM, constantly analyzing it. That includes your vendor libs, public CSS and JavaScripts etc. What do you have RAM for if applications are not allowed to use it? Do you have 16GB RAM to only ever use 4 of it? Why have 16GB RAM then.
Hey I really love using Serenata - really enjoyed it in the original incarnation as well. It seems you've already been making great strides towards this anyway, but I'm curious and wanted to ask. Are you working to integrate Serenata with Atom-IDE more? Asking because I remember there was a period where I was using them both and it felt like they were fighting each other a bit. I believe shortly after this is when I discovered the rename to Serenata and found that a lot of those overlaps and conflicts were fixed. Again, I really love this tool and cannot say how much I appreciate it and your work on it. Without packages like this I'd probably be stuck paying a monthly subscription for PHPStorm.
&gt; open source is better than closed source. You made that conclusion based on what argument exactly? Open Source is better for the development ecosystem in general. That I support, fully. But my argument that Open Source is not automatically more secure than Closed Source still stands strong. And that was the only argument I made. Just because you made something Open Source, doesn't make it a secure piece of software. Someone has to actually look at the code. Until then, it's at least as unsecure as any potential closed source software. Looking at WordPress, it can even be a big cheese of security holes. And still take decades to fix, as it seems.
Terrible ELI5: Basically it's a service (server) that runs locally and parses your projects PHP code. Using the parsed version of your code it can then provide you with Autocompletion, code navigation (similar to PHP Storm), Annotations and similar awesome features. It's built to support the Atom editor by GitHub, however designed in a way that seperates the Atom implementation packages and the code server. This, in theory, should allow any one to leverage the server component outside of Atom. Allowing for adding similar features and support to other Editors and IDEs, or for any other use you can imagine.
Docker already provides [a REST API](https://docs.docker.com/develop/sdk/) so it's better to use it. You can use some PHP wrapper like [docker-php](https://github.com/docker-php/docker-php).
Atlas looks very promising, one thing I would love to know how it compares performance wise to Doctrine. 
I would love something like this, but as many others already pointed out. More magic... just doesn't feel right.
I don't know if you've banged your head or are just really confused? Whichever one it is I'll just ignore your first comment. As to your second point, yes good code insight uses RAM but if your code base is less than 500MB and 16GB of RAM is being used then clearly something just doesn't add up. VIM has great code insight, it works just as good as PHPStorm but as I'm writing this it's using 4256K of RAM. For your final point, that's just a lie or "fluid" means something completely different where you're from. I'll leave this link https://medium.com/@matt.at.ably/wheres-all-my-cpu-and-memory-gone-the-answer-slack-9e5c39207cab about slacks memory hogging alone for you to read. Feel free to ask for some details of PHPStorms and WebStorms memory usage once you have read the previous article.
I have the RAM there so that I can run multiple heavy programs at the same time. I don't think that me running a fancy text editor should mean that other programs should run slower. Obviously I don't use 4GB at a time, I don't sit with just my editor open then close it, start a browser such as firefox, test, close firefox, restart browser.
I was not trying to "outsmart" you, based on your initial post I was thinking that you simply got the concept of private methods/properties confused. Telling you you didn't understand is is just the basic human reaction to it. What if you actually didn't understand it? Or what if you just _think_ you understood it, but you didn't? Sorry if that offended you. Just because you don't _actually_ refactor it (most private things never get refactored) doesn't mean you don't have to keep it potentially refactorable without breaking things. There's a reason why we keep all properties private in stable applications and write getters/setters for all of them. If the explained concepts above don't apply to an application, the application or the affected classes are structured wrong, most probably. It's not an excuse to test wrong. It's visually okay for you and your boss when you just wrote them and they do the things they should do well. It's a mess when you go and update/extend the application in different ways. At some point you might might **have** to refactor it because you want to stay DRY and the logic in there is needed somewhere else, too. Maybe, suddenly, a completely different logic is required that involes some other methods and implementations. As the method is private, other public methods probably use it and those are those required to return the correct output on specific input. Those are those used by other parts of your application (by design). &gt; **massive** private method That'd be the mistake. And the solution is refactoring, usually. And if the boss doesn't have the time/money for it, ask him how he weighs 4 "lost" hours against the potential break of a production application. Split them into smaller, testable units. Maybe write an encapsulated implementation for it. Pretty sure an algorithm that requires a **massive** private method could be abstracted in another class specific for that purpose, with a public interface. You'll end up with actual "units" you can test. Yes it takes additional time. So does unit testing in general. But it's worth every single second you don't waste your weekends trying to fix your deployed application. What do 1000 functional unit tests achieve, when in the end, that one thing you didn't test correctly breaks your application? If you don't test correctly, you're not testing at all.
It depends on what you're trying to achieve, but with multiple values I sometimes use `array_pad` to create "optional" parts. $string = 'my_module:my_controller:my_action'; [$module, $controller, $action] = array_pad(explode(':', $string, 3), 3, null); In this and other cases, using the null-coalesce-operator, (`??`, PHP7+) can also avoid a warning if ((explode(',', 'im,in,between')[1] ?? null) === 'in') { //Do eet. }
Could you explain why we need somebody to share their voting karma? Everybody can already discuss whatever they want on the mailing lists. Also we already handed out community voting karma. What is the point / goal of this?
In my experience *anything* performs better than Doctrine. Just recently rewrote an SQL query that accepts an array of ids to manually created SQL, because Doctrine chokes on a modest amount of 3-5k parameters.
I'll just ignore your needless insult. PHPStorm has a maximum RAM usage defined for the JVM its running in (Help -&gt; Diagnostics -&gt; Memory Settings) and it's 512MB by default. I have mine configured to 2048MB. It even tells you when you reach it and asks if you want to increase it, it happened sometimes (that's why it's at 2048MB now, and I exaggerated with that just that it doesn't pop up anymore). That also means, just for you, that it _never_ exceeded 2GB during all the time I'm developing with it on this machine, which is many years and hundreds of full-fledged applications. If it would've, it would be higher already. I have a huge Symfony project loaded in it with like 100 entites including controllers, forms, logical services, commands, templates, a JS API to access them etc., including docker integration active and like 10 plugins I use, actively developing. It uses 459MB of RAM. Where is this not acceptable? My browser, in comparison, uses 1198MB right now with like ~30 tabs open. Both react equally fast. I explained my exact open programs in detail in that last comment. It _is_ what I had open at the time of writing it. You can say I'm lying all you want, but it's the truth. And I work fluent as in, I click into any window, it's highlighted instantly, I start typing in PHPStorm, it types instantly, I wait for auto-completion, it comes up instantly (when it's not indexing at that exact same moment, then I have to wait for it to finish indexing, obviously) I don't know why you think so badly of PHPStorm, but I am assuming you simply tested it like 10 years ago or something and just don't know better. But stop insulting me for something you obviously don't seem to know about.
&gt; because Doctrine chokes on a modest amount of 3-5k parameters. "modest"
That'd assume every program you open uses 4GB of RAM. I barely know any that use more than 1GB. And it would also assume that a program opening slows another program down. That's not the case when they don't actually fill up the RAM. And even then, the system starts paging tasks that are not used actively first. At this point I can only assume your RAM sucks or you have a virus or something. All your infos are blown out of proportion completely (referencing your other answer below) and it sounds like you have 16GB and you're always hitting your limits on 90-95% RAM usage. I never reach that and I wouldn't even know how without actually forcing it. 
With your choice of hosting provider. You can connect over FTP, SFTP, dropbox, google drive or webDav.
In this particular situation (and all situations where the caller is the PHP engine and not userland), what value would having an Interface bring to the table? Do you plan on calling `instanceof` somewhere in your code?
Omg.
&gt; Sorry if that offended you. You don't have to apologise, Im not offended. I guess using the wording "outsmart" is a provoking on its own. As I said: &gt; Obviously this doesnt ensure that everything works but it makes it easier. I think you misunderstood my intentions, in a case like this tests don't serve to increase the stability of the platform they serve to ease development in such a situation. Edit and Run is a real pain in the ass with such systems. Being able to execute a small little fraction of a Monster is a great deal. I stand by my statement that Blackbox testing can be useful. This stack overflow answer says ist better than I ever could: https://stackoverflow.com/questions/4171310/what-is-wrong-with-making-a-unit-test-a-friend-of-the-class-it-is-testing/4171331#4171331 &gt; And the solution is refactoring. I disagree, development is expensive and refactoring of legacy systems often cause more issues then they solve. I would agree if there would be continues development on such a system or if it is really business critical. But in any other case I will use my resources where there is a return of investment. 
The stackoverflow guy you linked basically wrote the same text I wrote, the only difference being that he says it might be acceptable in some cases but even then you should think about refactoring (while I was more like „refactor right now“) Development is expensive, but all your customers switching providers because of a bug you required a week of refactoring for surely is more expensive, if not the death of your company. Yes, you don’t hear a lot about developers in these companies. Because the companies usually went bankrupt with it and no one likes to talk about failures. That’s why I said, not testing correctly is like not testing at all. You can see the „common“ mistakes, but common mistakes are not those that crash your application completely. And those that do are not seen when you don’t actually test _all_ units, separately. I don’t expect you to fully follow whatever I said now, I just wanted to explain things from a perspective of someone that’s already beyond that point. Once you’re done just writing code, once you are the person planning and managing the application and giving out tasks, doing reviews, suddenly _you_ are responsible for it and all of its failures. And a single problem one of your developers bring in can cost you your own job and maybe the job of others, too. It’s a good habit to understand and do it right, always.
tl;dr: Mostly to see if the community votes match the “PHP group” votes. Long version: I will write a blog post about that.
Personally, I’d never develop in cloud IDEs. Only open source projects, maybe. And I don’t think I am alone. It’s hard to trust people to be careful with your data, especially with the smaller companies that come and go. It’s hosted elsewhere, but you still have the potential ability to constantly back up all of it as it’s going through an editor running on your website. Is there an open source electron client for your IDE that doesn’t require a connection to your servers, too?
When connecting to your site we have an option called turbo mode. This will upload a PHP proxy script to your server so that the editor can communicate directly with your server and avoid the potential shenanigans that you mentioned. There is an option to back up files so that you can restore previous saves, but that can be disabled in site settings. We're a small company but have been going since 2007 with this which is a pretty good track record.
Thanks for clarification. I wish you best luck and success with your product and company there!
Anyone using this for their testing and how well does it work for you?
This would only be useful if backed by evidence the community actually understands what they are voting for instead of simple yes/no poll in twitter imo.
Ok mr. Im far beyond this point. You seem to greatly understand how business succeed and how they fail. Only time will be able to push your point of view a little bit further. We agree to disagree and I whish you the best for your future.
Perhaps a where in () query wasn’t the answer to your problem. (Read how on earth does one get 3k parameters in a single query)
&gt; By default, PHPStorm indexes all changes automatically, even external changes It certainly doesn't on mine, version 2018.1 running on Elementary OS 0.4 &gt; Did you even use PHPStorm? It sounds like you didn't Yep I'm working in right now, have been using it for about 8 months &gt; It has the same level of code-completion Sublime Text 3 has with default settings Having used both (and still use Sublime) I will have to disagree with you on that one, it's not even close. &gt; I've had tons of Netbeans users converted to PHPStorm I'm not and didn't say Netbeans is better than Storm or Storm is better than Netbeans, both are very capable. I'm saying/said I simply can not see or justify the price difference between the 2 when comparing features, I was waiting to be blown away by Storm and it just didn't happen. Again nothing negative just nothing that made me think 'wow' I wish Netbeans had that.
&gt;In my experience &gt; &gt;anything &gt; &gt; performs better than Doctrine Do you have any recommendations? I'm shortly going to be including an ORM into our application, set-up the DI container today so it's the next step. Do you have any recommendations?
Try to use it for a few months, not only field tests. Trust me with one thing: You won’t switch back. Regarding the price, personally I own an open source license for like 3 years now for some projects I’m running. In any other case there’s the EAP version that is free to use. As for why it’s not indexing I guess it has to do with ElementaryOS, I’ve been working with PHPStorm on windows, OSX, Mint and Ubuntu and it ran flawless on all of them, including indexing.
I use it for bigger projects, especially when you have hundreds of tests the savings can be apparent. Example on a project of mine with 697 tests an 1268 assertions Paratest running phpunit 7.2.6 in 5 processes (default) Time: 2.2 minutes, Memory: 14.00MB' Paratest running phpunit 7.2.6 in 8 processes Time: 1.92 minutes, Memory: 14.00MB Same phpunit 7.2.6 no parallel tests Time: 7.96 minutes, Memory: 122.25MB 
I use it too for a big project, the speed gains are significant. (which I have)
It's pretty nice. I implemented it for my work at one point, but we had a custom test printer, and ended up finding other ways to lower the test times. It was really nice, but we didn't end up keeping it. Would recommend though
Exactly this. Everything can be compared already, so tests for implementation are effectively useless.
Would you feel differently if the implementation used interfaces instead?
https://symfony.com/doc/3.4/form/unit_testing.html#testings-types-from-the-service-container
If you created a value object with value `null` and another of the same class with value `0`, `==` would be `true`. While that's easy and feasible, it's not correct and right now the user has no way to change that behaviour. I don't understand the aversion to magic methods here. There is no benefit to interfaces in this context.
Why interfaces and not magic methods? Objects would need to `implement Comparable, Equatable` which means nothing because all objects can already do both. I'm seeing this come up a lot _after_ discussion so I'm curious to know why magic methods for this feature is the deal-breaker.
I keeping trying to implement it once a year for a bigger test suite (&gt;3k tests) but due to bad(?) tests and customizations I get too many errors: - there are many many "integration" tests, i.e. tests are hitting the database a lot =&gt; I get a lot of locking errors - a good ~1k of the tests use a legacy concept where DB fixtures are pre-loaded before all tests and relying on transactions to restore the state; this pre-loading is already a problem itself 🤷‍♀️
Internals! They have value objects that don't integrate with internals at all. Using `==`, `in_array`, `sort` are all completely useless to them, so they have to implement their own userland solutions for basic operations that already exist in core. Instead, they can use __equals and get all the benefits from semantic operators and integration with internals. 
Why though? `===` is already consistent and identity means "the same thing", which isn't the same as "equal to". I would vote hard no if this was someone else's RFC and changed the semantics of ===.
There would be no benefit to the ability change the behaviour of `===`. I couldn't think of a single one.
&gt; I just think it would be neat if everything looked the same That was the intention with this. It reduces inconsistency because you don't have to think about `==` vs `equals` and every project that uses object comparison doesn't have to roll their own standard for it. 
I disagree. This sort of completes the set when it comes to magic methods. 
I could say the same but for a different codebase. Similar issues. 
I don't know why you react so aggressively. I don't understand how businesses succeed, where do you get that from. But I can tell that businesses \_can\_ fail at some point if they don't use proper testing. It's up to you wether you take the risk or not. I don't take these risks and I don't recommend anyone to do so. I wish you the best, too.
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
More like `function foo(Ord ...$things);` :-)
But whhyyy, what value does that bring that `function foo(object ...$things)` doesn't? 
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
Exactly what it says: a bunch of objects that are supposed to be sorted, instead of a bunch of random objects that are not supposed to be.
Its not meat to be aggressive, for me things like: &gt; I don’t expect you to fully follow whatever I said now &gt; Once you’re done just writing code, once you are the person planning and managing or &gt; from a perspective of someone that’s already beyond that point. Sound like you feel the need to express how far you have come and how less experienced others are. So I imply in a more sarcastic fashion that you probably need some more experience too. If I think I know lots about a topic I usually learn a few year later how wrong I was. Look its a classic discussion over the internet you have to compress a fraction of the information needed to actually discuss a topic into a few sentences. Im sorry if I was mean. If you want to continue a discussion about how to handle legacy system, im very frequently in Berlin lets grab a beer im sure we can easily find some common ground there.
&gt; with value `null` and another of the same class with value `0` Indeed, that's why equality is mostly used in test cases, where `==` is not really in the implementation details (see https://github.com/sebastianbergmann/comparator/pull/58). Most of these are fortunately caught by static analysis.
Solid answer
Python scripts that: 1) scraped travel offerings from 4 competitors, relisted them at a markup. Finding duplicate trips was interesting - made a custom 'hash function' for that. 2) same for plane tickets complete with a rule engine for calculating markup. First time I wrote a full test suite for something. Didn't have any tests initially and accidentally re-sold 2...n tickets for the price of one...
The guy that made Laravel uses Sublime. I'm pretty sure he pays his faster mortgage faster than most.
If a function has the same name It might do the same thing 😂
&gt; a good ~1k of the tests use a legacy concept where DB fixtures are pre-loaded before all tests and relying on transactions to restore the state; this pre-loading is already a problem itself What we did was we had our fixtures run up on the start of the test suites. We got the database name that the test suite used from an environment variable. To use Paratest, we grabbed the `TEST_TOKEN` and appended it to the database name, so we'd get `DBName1, DBName2, DBName3...`, so each process was running on it's own database. That way they didn't lock each other out and the test fixtures held up between tests
[Abstraction and Encapsulation](https://stackoverflow.com/questions/16014290/simple-way-to-understand-encapsulation-and-abstraction) 
I said that about VSCode, not Netbeans... Like really is your argument that those refactoring tools and autocomplete use-statments (to which you can add yourself) are somehow worth $90/year for an editor that works in a single language? Also, VSCode has default use statements, the same refactoring functionality (unless you're going to provide specifics), namespaced docblocks, supports multiple languages, and again - is free. 
Got any users yet?
sad that they talking about data hiding instead of information hiding.
Please no. For some reason I find this hugely anachronistic. PHP already has a reputation for doing weird comparisons, we don't need extra confusion on top of that. Personally, the only comparisons I ever use are `===` and `!==`. I don't trust anything else.
Smalltalk is still around. In fact there are several flavors around.
Using it here. Significant speedup, even when calculating code coverage. Using a single DB seed and then every test in a transaction is immensely fast.
But they still _can_ be. The implementation of `foo` shouldn't be concerned with whether `$things` should be sorted, only whether they can be. However, you make a good point if it means to communicate intent. Maybe something like `Equatable` and `Comparable extends Equatable`, with two methods `equals` and `compareTo`. RemindMe! 6 months "Interfaces?"
I will be messaging you on [**2019-01-10 22:17:27 UTC**](http://www.wolframalpha.com/input/?i=2019-01-10 22:17:27 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/PHP/comments/8xmj2p/voting_php_rfc_userdefined_object_comparison/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/PHP/comments/8xmj2p/voting_php_rfc_userdefined_object_comparison/]%0A%0ARemindMe! 6 months ) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
I love the route D took though, thanks for that reference. I've added it to the RFC as well. :)
How does this compare to Robo?
I picked the names `Eq` and `Ord` from other languages btw :-)
I enjoyed reading your article. Thanks for sharing. 
I didn’t get automatic completion of use statements to work in VSCode, and I tried a lot of plugins. Im not saying you can’t efficiently develop with these IDEs, but PHPStorm has it all right out of the box and contains all tools for professional PHP development. For PHP, there is no better IDE and nothing that reaches its level of functionality. If the price is a concern, try the Open Source licenses or the EAP version
For the pages that are accessed directly in the browser, the whole code is a in a big "try", with a generic "catch", and in the "finally" part you output the html with Response-&gt;send() (from symfony). It feels dirty. I bet it is, no? What do you suggest to improve the overall structure on how it's done? What would be a better use of the finally keyword? Example: &lt;?php require_once 'bootstrap.inc.php'; $MyApp-&gt;pageTitle = 'Reset password' try { // // HERE BE A BUNCH OF CODE THAT CAN THROW EXCEPTIONS // $template = 'reset-password.html'; $variablesForTwig = array('some' =&gt; $vars); } catch (Exception $e) { $template = 'error.html'; $variablesForTwig = array('error' =&gt; $e-&gt;getMessage()); } finally { $Response = new Response(); $Response-&gt;prepare($Request); $Response-&gt;setContent($MyApp-&gt;render($template, $variablesForTwig)); // this generates the html $Response-&gt;send(); }
Until the next magic method.
&gt; why magic methods instead of interfaces That was not compelling.
No problem, just wanted to be consistent with the -able's
Hmm so a trait that implements default behaviour? I like that a lot, but it would break BC in a big way. 
I would, personally.
I have it in a CI build and does wonders. One thing that is more art than science is finding the number of simultaneous jobs to run. This value will be dependent on the code base, tests and the hardware. In a suite in the thousands of tests in a containerized CI workflow this number came to be 3 for me. It used to be 4, but as the application evolved things changed, so keep that in mind!
Heya :) I’ve developed a really nifty library for working with the graph data structure called GraphDS... it’s lightweight, modular and fast! It’s also really hassle-free to get started with it... On the agenda are min/max-flow algorithms, cycle detection, interfaces to existing graph visualisation libraries, and other types of persistence (SQLite, JSON, etc.)... just don’t know what to prioritise first, so I would appreciate any feedback! ;) I hope that this will come in useful for someone here... do let me know if anything doesn’t go as planned, or if you have any suggestions! Here the GitHub repository: https://github.com/algb12/GraphDS And the Packagist Page: https://packagist.org/packages/algb12/graph-ds
Guys. Guys! It’s called class FRIENDSHIP. Not “get e-mad at one another across the intertubes”. Show some love. Shake hands and make out. Err... up. 
&gt; modest amount of 3-5K parameters ಠ_ಠ
Tell it to raw PDO. Which wouldn't even notice it
Didn’t click, assuming it said “everything” but in more words. 
Pleas go tell our customers not to submit this amount of orders to analyze. Also please tell raw PDO this amount is should make *any* problem. Or tell a modern computer in general that 3-5K is anything to notice. You guys live in a strange world. 
Well suggest me another solution when a customer submits this amount of orders to analyze in our ecommerce analytics platform
Actually, I vaguely recall PDO crapping out after about a thousand parameters, but that may have had more to do with the MySQL server version.
You can refresh your memory, anything that is within mysql's max_allowed_packed is OK. Processing a parameter is a primitive operation that any modern computer wouldn't even notice. Unless you are creating a query parser instance for each. 
Some advices : \- Why are you staying in that company ? What are your motivations ? How much effort do you need to put in to reach your career goals ? Wouldn't it be easier somewhere else ? \- During the interview, don't focus on the what (well, a little bit), but focus on the why. Why do they have such stack ? How did they make their decisions ? Try to understand their culture and their way of working. If they come up with something like "It's up to the devs depending on what they like", then run away. Ask about how much you can learn, it there dedicated time for that ? Is knowledge spread across the team ? How ? If you ask the right questions, then it's leverage for later if they don't keep their promises. And you won't feel like the asshole who wants to change everything (no matter if you're right or wrong). \- If you feel like you could be a lead developer, ask for it. But you better make a presentation for your boss, listing all the things that are not working, what improvements you could bring, what value you could bring to the company, show some kind of migration plan (to avoid the bigbang changes that nobody likes). If you do so, you'll be listened. If not, run away. I've been in almost the same situation, and the advices written above worked like a charm.
I think the problem I had AFAIR were the migrations: I would need to run them upfront for each database before I could load the fixtures. I also vaguely remember a problem because we require custom extensions (using postgres here) which isn't available on a new database, so it needs the `CREATE EXTENSION` step. Next problem: the regular connect user doesn't have permissions. And so on, and so on. I only have a code fragment of the first hack I when I tried it in 2016, it went a long something like this: * made a custom phpunit listener * used `startTestSuite` and some global state to check the "first" run * in there I prepared a fresh database (see code beow) * but nothing properly worked Oh, and I remember another thing: although I never got it correctly working, I saw indications that the preloaded fixture was a performance issues, as in: it took a bit of time and kind of negated the parallelism. The code fragment (which never properly worked): public function startTestSuite(PHPUnit_Framework_TestSuite $suite) { if (!$this-&gt;cleanedUpBeforeAllTests) { try { $this-&gt;cleanedUpBeforeAllTests = true; $app = require __DIR__ . '/../bootstrap/app.php'; $app -&gt;make(Illuminate\Contracts\Console\Kernel::class) -&gt;bootstrap(); $console = $app-&gt;make(Illuminate\Contracts\Console\Kernel::class); foreach (config('database.connections') as $name =&gt; $settings) { $dbName = $settings['database']; $dbName .= '_' . md5(uniqid('', true)); $connection = DB::connection($name); $connection-&gt;getPdo()-&gt;query("CREATE DATABASE $dbName"); config()-&gt;set("database.connections.$name.database", $dbName); $connection-&gt;reconnect(); } // var_dump(config('database.connections'));exit; // var_dump($app-&gt;make('config')-&gt;get('database.connections')); // var_dump(getenv('UNIQUE_TEST_TOKEN'));exit; $console-&gt;call('migrate:install'); // $console-&gt;call('migrate:reset'); $console-&gt;call('migrate'); $this-&gt;hydrateFixtures(); } catch (\Exception $e) { fprintf(STDERR, "%s\n", $e-&gt;__toString()); exit(1); } catch (\Throwable $e) { fprintf(STDERR, "%s\n", $e-&gt;__toString()); exit(1); } } } 
Would you describe the following as a valid use-case: - assume I receive different kinds of json data over different APIs - (technically most of them are already all unserialized into arrays due to 3rd party SDK/http libs) - when passing the data around in the application, I can "hydrate" it onto an actual class, making an object with meaningful properties/methods out of it - perform "basic" validation, with that I mean: if I define the class/object has to have an `id` and `comments` and either of them isn't present in the JSON =&gt; error out meaningful I'm basically not concerned about serialization but unserializing into something which gives a bit of "type safety" so I can assume that basic requirements of these hydrated classes are met (the validation does not need to do more =&gt; this is too complex and might be even context dependent within the application, so no need for that). How does it work with nested data, back to my above example with `comments`: can I hydrate nested data too into their own structure and expect the same kind of basic integrity checking therein? If read through your doc a bit but if it's not too much to ask: could you scribble some fragments how this could look like in practice? Thanks :-)
Well Nextras ORM handles for example the n + 1 problem automatically but it still is not suitable for batch operations. 
That could be Doctrine itself, eager-fetching a relation with IN (id_of_parents). Doesn't Doctrine run this as prepared statements and also almost exactly as you would write the PDO yourself?
I don't consider it the role of the serializer to do validation, though, ensuring that properties are set is a pretty common use case. Perhaps in the future I could find a clean way to make that work. I typically will use Symfony's Validation component to validate my models after deserialization. As to your other questions, consider the following: ```json {"id": 1, "title": "My Post", comments: [{"id": 1, "body": "A comment"}]} ``` ```php class Post { private $id; private $title; /** * @var Comment[] */ private $comments; public function getId(): int { return $this-&gt;id; } public function setId(int $id): Post { $this-&gt;id = $id; return $this; } public function getTitle(): string { return $this-&gt;title; } public function setTitle(string $title): Post { $this-&gt;title = $title; return $this; } public function getComments(): array { return $this-&gt;comments; } public function setComments(array $comments): Post { $this-&gt;comments = $comments; return $this; } } class Comment { private $id; private $body; public function getId(): int { return $this-&gt;id; } public function setId(int $id): Comment { $this-&gt;id = $id; return $this; } public function getBody(): string { return $this-&gt;body; } public function setBody(string $body): Comment { $this-&gt;body = $body; return $this; } } ``` ```php $post = $gson-&gt;fromJson($json, Post::class); // or $post = $gson-&gt;fromArray($jsonArray, Post::class); ``` This will give you a fully hydrated `Post` with a single nested `Comment`. Gson will by default look at the getter/setter types. If none exist, it would access the property directly. In the case of the `Comment` array, it falls back to parsing the docblock to determine the type. Using the setters with typehints will give you type validation during deserialization. Many libraries do this much. Some, not as easily, but you can still accomplish the task. Where I think the power comes from is when your json data does not line up perfectly with your business model. If I wanted to rename or exclude specific fields, I could do so easily with an annotation. If comments was an array of ids, I could easily implement a custom handler that loads them all from the database. You could then delegate deserialization into the proper models, or if you're using an ORM and you already have the correct models, just return the entire array. What I like is how easy the simple cases are, but how much control you can take when it gets complex. Let me know if this didn't answer your question, or if you're still confused. The docs are pretty accurate, but feel free to just ask if you're wondering how to accomplish something.
Yesterday I went to the major city for another interview.And…yes,the HR is female and her told me I should think on front-end-dev or Java,too.And the reason,haha,yes,"PHP is for minority" again！Well,both my hometown and this city are not PHP-friendly.But I've gotten some interview invitations from another city in another province,and they exactly said they're looking for PHP developer,I'll be there for those interviews next week,I'm really happy.
I don’t vote what the community chooses. It’s more like a prob.
We had to do some dirty hacks to be able to have 4 test elastic search indexes for tests not to conflict with each other. But the performance boost is totally worth it. We went from 25 min to 9 min in travis !
3-5K for OLTP is *A LOT*, a huge lot too.
But wait, what does OLTP to do with a simple SELECT query? 
What convinced me to learn and use Laravel was the documentation and the Laracasts website. The documentation is easy to read and understandable with good examples, and the (paid for) Laracasts website suits my personal learning style and doesn't just cover Laravel, but also PHP and Vue.js and javascript. A great resource.
I tried to do this before with functional/integration tests on a big project but it all fell apart when it came across testing code that already uses transactions.
&gt; (Read how on earth does one get 3k parameters in a single query) Easily: have more than 3k items to show. Implement an excel-like filter which let you specifically exclude some field values. If you try to do it DOM only browsers will choke on your table so you have to do something server-side. If you have never done it, check the capabilities of Excel line / column filters. After that you'll feel frustrated when trying to order or filter most table data in other applications.
You are probably mistaking Doctrine with something else. Doctrine *is* something server-side. Thank you for trying to help. 
Every programming paradigm has value in certain contexts, and OOP is no exception. OOP has some detractors, and with fair points I would say [https://www.youtube.com/watch?v=QM1iUe6IofM](https://www.youtube.com/watch?v=QM1iUe6IofM) I also remember some Jonathan Blow´s talks about this and how mixing these paradigms, instead of going all the way with them, let you keep complexity down and performance up. I don´t think procedural, OOP, functional etc work as a silver bullet in every problem, and studying all of them is key to use their solutions and key ideas where they really add value to your solution. 
There are interesting interview about history of smalltalk, erlang and so on: [Joe Armstrong interviews Alan Kay ](https://www.youtube.com/watch?v=fhOHn9TClXY)
Now a days all the higher level languages support object oriented programming concepts. So there is nothing new about that. * Abstraction * Encapsulation * Polymorphism * Inheritance * Association * Aggregation * Composition These Object oriented concepts are supported by almost all the higher level programming languages.
Try the plugin "Material theme" you can download it in the plugin manager
Jetbrains Intellij IDEA Ultimate &lt;3
CTRL + ALT + L reformats the code :)
Thanks, this is a pretty awesome answer! If "not more setup" code is needed, this is very nice. About the validation: it's true, may be too much. Or I used the wrong term. I'm rather interested in getting a thing whose "structural integrity" is correct and that I don't end up with `$post-&gt;id` being `(int) 0` just because the JSON payload contained an `"id": "ops,wrong"` string.
Thank you, very useful.
IMHO, the events implementation is overly complex. I think it would have been enough to implement events at the Record level, ie: before inserting a Record, set the \`created\_at\` field to \`new Date()\`.
If you are using Netbeans of PHPStorm, then using a proper class gives you autocomplete. Autocomplete it's not a big deal for a small project. However, it's a life saver on a long project.
A vote shouldn't be a matter of popularity. my 2c
"Provide **easy** to use mechanisms like toString()..." Yes, sure.
The languages on the left are supposed to represent the lesser languages evolving into better languages, React is in there because it's responsible for introducing developers back to functions granted it's not a language it's a framework ReasonML doesn't have private, correct, it has functions which encapsulates a single block of code, which is a single intention, where as a private member of a class is an encapsulation for potentially multiple intentions, which evolve over time You can also take an object in PHP cast it to array and pull out it's private variables that way, there's plenty of leaks Reflection is meta programming, personally I wouldn't consider that suitable for runtime, although I'm aware of some frameworks that do use reflection to implement magic, and likewise I've seen popular PHP libraries dynamically write php to a file and include into run time If encapsulation isn't enforced, then it must be for letting other developers know about usage, the problem with private/protected etc is that they may signal what the original developer wanted to be used outside of the class, but not why The annoying thing to consider is that developers are encouraged to private everything by default, so if you come back to a class with a new use case and you need the data, was there a good reason why it was private in the first place? Has somebody done something stupid like use reflection at run time which means something else is dependent on it being private? Injecting into scope with a Closure tends to be the better solution because it doesn't mutate the property on the original object to public 
We used to add more tools to our stack but it was silly at best. Right now, our stack is simple: xcopy, dropbox and git, it's not elegant but it works. We also use Composer but it's close to go to the path of the dodo
Microservices/ cloud is usually an excuse to not to have a proper system administrator.
I think it might be more accurate to say that all higher level languages support OOP except for those that don't. Might take a look at declarative programming. Could be surprised at what those geeks have gotten up to.
Usually I would agree with you, but sometimes the Yoda version seems clearer (please ignore the bad example): if (false === myClass::doSomething($var1, $var2, $obj-&gt;getProperty()))
If you bind a closure to modify a private variable, you really, really, really, really want it. You don't do this "accidently". And you can do exactly the same thing with Reflection. And if you, as I stated, really, really, really, really want it, you will use Reflection for it. So it's the exact same thing. So by that logic, encapsulation doesn't exist in any language that has reflection to a specific degree (or is PHP). In PHP we use private by default because there are no typed properties. And all we actually want is strict typing (and generics, and typed arrays). And we're getting there, typed properties are coming. With them, public will surely be used more often again. When changing a property with Reflection in PHP, you can just set accessibility to public, set it and set accessibility to private again. And everything is like it was before.
If you’re using strict typing, you’ll get an error if you try to pass in a string for an it.
the problem of OOP is that there is no formal definition what it is. There are two very different definitions: oop is where you have classes (simula way, basicly the same as structural programming) and Alan's key definition, where messaging is key concept, which can't be applied to methods of classes. Object as single compute atom, i.e. computer, which should not share any state with other objects (no getters). And whole system just sends messages, just like computers in a network (today the most fine way to define OOP in this terms is actor model).
If you're using Postgres, and you should, try http://www.pomm-project.org/
You can try FPDF, and why not a page with css predefined to print?
I have looked up many but the most up to date and working with custom fonts and such for me was mPdf.
[https://packagist.org/packages/dompdf/dompdf](https://packagist.org/packages/dompdf/dompdf) works for me (html -&gt; pdf)
I'm not sure what you mean - [pdflib 9.1.2 was released in February.](https://www.pdflib.com/download/pdflib-product-family/). That being said, the PDF standard hasn't changed much since 2010, so FPDF etc. still works fine, even if they might not be structured as modern PHP classes.
https://i.imgur.com/DK1ckG8.png
wkhtmltopdf
I can't scroll or select text on that page.. wtf?
TCPDF and FPDF have a decent API and fonts can be imported
my bad the following php manual page then wasn't updated http://php.net/manual/en/intro.pdf.php
[MPDF](https://github.com/mpdf/mpdf) is really awesome and I find it easy to work with
If you use this, check out the packages h4cc/wkhtmltopdf-amd64 and h4cc/wkhtmltoimage-amd64 to install it in your project instead of at the system level.
Hmm, define competent?
Which browser? It works here with Firefox 61.0.1.
Seconded. I really like MPDF.
Where do you live, how much experience, do you have anything to back up your experience, what kind of experience is it?
That depends on way more factors than any of us can assume. For instance, where you are located plays a HUGE factor in how much you can earn. 
Figure out what your salary would be full time and multiple that hourly rate by 1.5 or 2
For sure. I use Laravel so I use the package `barryvdh/laravel-snappy` which recommends installing it that way.
This is the one I use. Works fine enough. just create the page using html and css and then it takes the html and prints using it. small learning curve and easy to do. 
And would you be completely lost working outside of Laravel?
chrome latest. tested on Windows 10 (1803) and Linux (Debian buster x64). On the linux machine I could scroll for a second but then it sopped when it was finished loading.
Does your code work on PHP 7.1?
Where are you located? How much experience with PHP? How much experience with programming?
Look at your competition. Try and find a Laravel freelancer and see what some of the rates are. Then compare the services they are offering to what you can. That's about it. Everything else will depend on your market and your clients.
I am gonna go out on a limb here and say if you don't know then you are just starting out. And if you are just starting out then you are likely not very competent. And if you aren't very competent then it likely means your rate isn't going to be very high. Completing a code camp or some tutorials doesn't make you competent, and it is important to represent yourself accurately. Otherwise you can easily get in over your head. Have you completed a project that is in production for someone other than yourself?
Seconded, I use it through a library called "Pdfgenerator" off of github that has dompdf built in. You can easily find adaptations for any framework, I think.
Write a test listener that is compatible. 
It seems like a good path for an individual freelancer is to take a job that sounds interesting with a reputable company for a low-ball figure. Good developers are always in demand and over-worked, if you are indeed competent, you will have the opportunity to prove yourself and to become invaluable to the company at which time negotiations begin. 
Good points, it's sort of like databases and normalization. You can normalize a database "until it can no longer reasonably do anything", so then you denormalize. Or you can become an absolute expert in a specific martial art and then get your butt handed to you by someone with a year of grappling and a year of boxing (to paraphrase Bruce Lee). I need to get to a certain point of experience with programming paradigms to understand well where it makes sense to break rules or back off of them and I'm not quite there yet. Sort of like, I need to understand the rules before I can break them.
Man I could have used this thread a month or so back. Used wkhtmltopdf for a while but it turned out to be a nightmare to print anything generated via javascript because its version of webkit was very outdated. I recommend google-chrome --headless with print-to-pdf which we haven't had any problems with yet. 
Yea, it's passing builds on Travis with 7.1 and 7.2
So check for version and use two different classes depending on the version? Seems messy but I guess that's the plan.
Many people switch from an employer to freelancing and have zero idea what they are worth as a freelancer, yet are extremely competent. Why would you take such an adversarial approach to his question?
upgrade the application to use php 7.1?
I don't see any reason to start a holy war. You use the tools that make you most productive, I'll use the ones that work best for me. Live and let live. 😀
You're right :)
This. It's not unreasonable. If you're in the US you're paying more taxes, since you are now responsible for the employer side of FICA, too. Plus, you're not getting any PTO.
&gt; Are you working to integrate Serenata with Atom-IDE more? Yes, as much as possible since the more packages use it, the more consistent the user interface experience for the end user will be, especially for those that work with multiple languages (and Atom IDE packages). Though I should note that I'm specifically talking about [atom-ide-ui](https://github.com/facebook-atom/atom-ide-ui) integration here and not [ide-php](https://atom.io/packages/ide-php). atom-ide-ui isn't directly related to language servers; it just exposes the interface, panels, functionality and services. You can also plug non-language-server packages into it if you like. ide-php specifically plugs felixfbecker's language server into Atom and hooks it up to atom-ide-ui; so the former fetches the data and the latter displays it in Atom. Since felixfbecker's server is a competing project, both have the same target features and direct interoperation isn't really possible. &gt; Asking because I remember there was a period where I was using them both and it felt like they were fighting each other a bit. I believe shortly after this is when I discovered the rename to Serenata and found that a lot of those overlaps and conflicts were fixed. Related to this and what I mentioned above, I've also seen some remarks related to conflicts with the ide-php package. As Serenata and felixfbecker's server are competitors, how well you can use both together depends on what the Atom packages integrating them allow. For example, php-ide-serenata has settings to disable most of the server's features individually at the moment. This would allow you to disable linting and use linting from ide-php if you prefer it. However, if you want Serenata's autocompletion instead of ide-php's autocompletion and ide-php has no way to disable it, there are bound to be conflicts or duplicate results, as Atom usually either merges the results or looks for priorities to prefer one result set over the other. &gt; Again, I really love this tool and cannot say how much I appreciate it and your work on it. Without packages like this I'd probably be stuck paying a monthly subscription for PHPStorm. Thanks for the positive feedback! I still use Serenata on a daily basis myself, so it's not going away soon. As always, contributions, issue reports or just support in general (not just by pledging on Liberapay but also by spreading the word) are appreciated! Other things that (indirectly) help is just boosting the Atom PHP ecosystem as a whole, such as writing other Atom packages for PHPUnit support, Behat support, Docker support, debugging, profiling, working on Atom itself, working on the atom-ide-ui package, etc. For example, twifty fairly recently created a [neat PHPUnit integration package](https://github.com/twifty/atom-phpunit-integrator). It still needs some bugfixing and perhaps some tweaking, but it's already fairly advanced, which indirectly helps me whilst developing Serenata as well.
As in able to use the entirety of the framework to make good solid web apps whilst also using good practices / design principles etc. P.s. not just Laravel/PHP although that is my speciality. Also client side stuff, js, Vuejs etc as well as other server side like python (mainly for ml stuff, not apps.) and some mobile dev tech such as nativescript. 
Cool, thanks
Just upgrade. The oldest supported version of PHP will be 7.1 by the end of this year. http://php.net/supported-versions.php
I'm sorry to hurt you, but it doesn't work that way. If you are a freelancer, you are worth what you are able to get paid. You have to do your math to find what you need to be paid for freelancing to be worthwhile. Being a good technician is not nearly enough, first of all you need to be a marketer, then an accountant, then a technician. You need to be able to sell your self, you need to be able to know your numbers, you need to be able to provide the service you have sold. I know it's hard truth, but I wish you the best.
Being a freelance requires many more skills than an employee, and I'm not talking about programming. Look at my other comment.
Lmao the answer is simple! 😂
North U.K. (near Manchester). I do have experience, 18 months as a full time dev - eventually taking on the companies’ internal ERP/order tracking system taking on the full dev ops role (with a little help from things like laravel forge) making changes, adding new features and generally managing the whole thing. Also a few of my own side projects - though none have actually been deployed yet but including everything from tinkering with mobile apps, js games, web apps, browser extensions.
Good point, quite a vague title. Thanks for your input. 
NONOPLEASENO
https://www.techempower.com/benchmarks/#section=data-r16&amp;hw=ph&amp;test=json&amp;l=hr9y4f&amp;f=zik0zb-zi8sfz-zik0zj-zik0zj-zik0zj-zik0zj-zik0zj-4zsov
The project I'm working on has a lot of legacy code and isn't trivial. I searched for all classes in the codebase and found 500+ definitions in all kinds of files. This is excluding the vendor directory. I've been running 7.1 on my local environment for a while and haven't seen many problems but I'm new on this project and don't want to make breaking changes. To be fair I just had this discussion and the lead dev agreed we should upgrade our prod to 7.1 as it's not showing any problems so far on local dev.
Yes above is my scenario- moved from a full time dev role after around 18 months. Though I’ve done quite a lot in between (completed online Udacity CS course, partially completed others related to ml, worked on my own projects etc). I left the job because of various reasons related to the company as well as there being other, less fulfilling duties expected of me. 
Been freelancing over ten years in London, at least 3 with laravel. Asking for £400+ per day. Hope this helps.
[http://i0.kym-cdn.com/photos/images/newsfeed/000/657/039/7fa.jpg](...)
No. It looks like it's telling you the time taken for the framework Phalcon to respond to a HTTP request that contains a JSON object, parse it then respond is 2.2 times longer than the python framework Django doing the same thing. Almost all the overhead here will be the the framework. This kind of microbenchmarking is not particularly useful.
&gt; it's sad that they talking about data hiding instead of information hiding. Alan Key's ideas was killed by C++ and Java :( Can you clarify the difference for me?
Great, thanks. What kind of jobs do you typically tend to get? As in: pretty lead generation sites, technology solutions/applications, or something else
The php test is using phalcon. You could serialize on php natively : echo json_encode($list); 
Yep, but that would be really ugly, like what Symfony was forced to do: [https://github.com/symfony/phpunit-bridge/blob/master/SymfonyTestsListener.php](https://github.com/symfony/phpunit-bridge/blob/master/SymfonyTestsListener.php) They are bound to their BC promise BTW; if you're not working on a redistributable lib, it would be really better to upgrate to PHP 7.1. 7.0 will be EOL soon too.
Great, thanks. And what kind of jobs do you typically tend to get? As in: pretty lead generation sites, technology solutions/applications, or something else.
Damn, those geeks are always up to something!
Thank you for that. Any idea on how to change the settings on how it formats? Specifically, I'd like array keys and values to have consistent spacing, so not this: $array = [ '1' =&gt; 'Array 1', '1111' =&gt; 'Array 2', '11111' =&gt; 'Array 3' ]; But this: $array = [ '1' =&gt; 'Array 1', '1111' =&gt; 'Array 2', '11111' =&gt; 'Array 3' ];
So actually it is my framework so yea it's a redistributable lib. I just wanted to use my DB wrapper in this project but now I might end up just copying the class over. I think this illustrates a big issue with composer in that it's too strict sometimes with platform requirements. This is a case where the only package that causes a problem is one that is only for dev (PHPUnit). In every other way I know my DB wrapper will work just fine even in PHP 5.x Most packages don't eagerly await new language features like PHPUnit does so the PHPUnit dev team is eager to rebuild a class to use new language constructs instantly rendering your old code obsolete.
This is certainly true and I’m more than willing to learn where necessary. Truth is I’m just slightly unsure on how to effectively and competitively gauge my pricing. I’m also aware I’ll likely be spending additional time actually acquiring the work so would like to understand the cost implications of that. 
That's actually a really good one to add.
Thanks for the input. So just essentially take a lower pay at a good company to get the foot in the door? 
P.s. one of the reason I asked is that I’m unsure if there’s some standard rates out there for laravel (Its seemingly quite easy and fast to build a web app so I assume prices to be fairly competitive).
Maybe you can split the wrapper in a separate package, with different requirements? 
Works great for me too -
I don't even know what PHP stands for. However a customer of mine lost his developer somehow, hired me to move his webserver to GCP, then a bunch of shit broke. Previous dev is nowhere to be found, and guy is asking me for help. So, where do I start looking for mid-level PHP devs and what should I be asking them for in order to vet them? Is it appropriate to ask for references?
\- well, phan and phpstan check code for errors, not PHP versoin changes \- the most useful and powerfull tool I'm aware of is [https://github.com/wimg/PHPCompatibility](https://github.com/wimg/PHPCompatibility) \- what do you think about it?
about the tech stack: it doesn't matter for most cases. it matters what you can do with it. (unless you're selling your time consulting for existing php/laravel teams)
Worked here on win10/Chrome 67.0.3396.99 Check chrome://extensions?
 Hi community. What are the most common questions on technical interviews for jnr php/laravel backend developer. i have one next week and need to be prepared as best as i can. what should i prepare for? what should i look out for? thx for all input. 
Plus you have downtime between projects when you need to work on finding more work...
No, that page talks about a specific version of pdflib, and also explains that the normal version is still updated and available: &gt; A restricted version called PDFlib Lite 7 is available for free, but it is no longer maintained since 2010. .. and: &gt; PDFlib integration for PHP is still actively maintained by PDFlib GmbH. It is mainly targeted at the commercial PDFlib versions, but can also be used for the old PDFlib Lite.
I think everything related to networks, like protocols and how they work. There is a good question "what is going on when you press Enter in your search field in your browser" If you're a junior imho there is no point in asking you much about PHP itself, but more about networks, architecture of you're experienced in other languages
here's a few common questions "give an example of a project you worked on, or an emerging technology you're excited about" "can you think of a time where a project didn't go as planned? (explain), and what you did to resolve it, were you able to get back on track?" Try to have one or two examples ready where you innovated with some new solution to a problem you discovered on your own, that ultimately added value or made money for the company
And of course agile, scrum and other managerial things related to projects
Mostly media companies, writing APIs in Laravel / Lumen / Php / MySQL. These are short term contracts, up to three months, where you need to learn the ropes in a day, cover for people and debug their messy code. That's been my experience, at least 
It would be the same problem cause the tests for the wrapper are part of the problem.
If it's a good company, they will ask you what frameworks you like/don't like and why and general questions like that. If it's a bad company, they will throw a bunch of useless trivia at you.
Of course. (I can recommend [runwildstudio.co.nz](https://runwildstudio.co.nz) \- but I've no idea where you are, or what the 'project' involves).
Obviously it's a jr. role so be sure to address the following: * communication * work ethics * willingness to learn/adapt
You could look for technical job boards in your area, maybe even reach out to some agencies in the area that might have Web departments.
I agree, I was wrong to say encapsulation on PHP objects doesn't exist, it does exist but it can be broken, functions on the other hand cannot have their encapsulation broken at runtime 
Eh... it's pretty unlikely for a junior software engineer to know a ton about networking. I also think it's kind of a silly thing to ask because it has almost nothing to do with the day-to-day responsibilities of a junior developer. I've never encountered a situation where I needed a junior dev to explain to me the intricacies of DNS. I'd focus instead on programming fundamentals as they should at least have those if they're applying for programming jobs, regardless of language.
Few suggestions I can give you: take the first couple of jobs for free, like for an non profit or a cause that you agree with (like an easy website made in laravel). As a compensation, ask them just to do a video testimonial where they tell what a great professional you are and such ;) Use that to track all the workflow and how much time you spend in each step. Put the testimonials in your website and your social. Review your workflow process and improve it. Hope it helps.
Php Inspections (EA Extended) is an OSS static code analyzer for PhpStorm (2016.2+) and Idea Ultimate. And it doesn't interrupt your workflow (works on the fly).
What in the actual hell does the gender of the HR person have to do with anything?
I'm a php vet, let me know what you need help with; reasonable rates.
User groups! - https://php.ug/ - https://php.earth/docs/php/community/groups - http://www.zend.com/en/company/community/local-php-user-groups 
Do you know if the project is built using a certain framework? If so, you might be better off finding a dev/company that can prove they know that framework already. Having said that, a good PHP dev would be able to help you regardless!
Headhunters will pepper you with anyone willing to get on the phone with them. Do not rely on them sending you the best candidates. I had one company give me a PHP Aptitude test from a third party but I am not sure how much that cost them. You may also want to do some research on the app to know what technologies are used so you can advertise appropriately for the position. Look in the web root directory for either a composer.json file to tell you about the app or a readme.md file to see if it is a content management system like WordPress. If time is critical, look for a web design company that would be willing to work on legacy code. It will be more expensive per hour but probably a lot faster to resolve the issue and cheaper in the long run if there are not a lot of reasons to keep a developer on retention.
no question, but the claim that you attacked, was that he was a competent php developer, not that he was a competent freelancer.
That's not true actually if you consider a xdebug session as runtime or whether you count replacing the function with an php module, as breaking the encapsulation of the original: http://php.net/manual/en/function.runkit-function-redefine.php
Hire a company when you don't know wtf you're doing. You'll take less miss steps. If you're not a developer, don't "vet" anyone. Outsource that or you'll fuck shit up bad. Hiring the wrong dev will cost you FAR more.
I’m inclined to agree, and this is far from something specific to php. Get help. 
There are some issues with this on Debian (https references not working) because it's not the latest version. I had to install the latest version from GitHub for it to work
I *think* the codebase is hosted at github. Is that what you are asking?
Can you give a brief summary of what errors you're seeing in the log and also what PHP version it was on before/after? It could be something simple.
I think you answered to the wrong user? I never attacked his competence as a developer :)
&gt; I don't even know what PHP stands for. Originally it was _Personal Home Page_. These days it’s _PHP: Hypertext Preprocessor_.
It is probably something basic like can't connect to the database. Check the logs, feel for database name etc
he is asking weather the project is using a certain framework or not, since you are not into php, check the project folder, if there isn't a file called `composer.json`, that probably means the project is not using a framework since most frameworks use composer nowadays, otherwise you can tell if the project is using a framework by the dependencies in the `composer.json` file.
1) the authority on interviewing any developer is https://www.joelonsoftware.com/2006/10/25/the-guerrilla-guide-to-interviewing-version-30/ 2) don't fear recruiters. Do your homework, some are definitely better than others. Their job is to get you the resource you need, saving the time and money that may be wasted on a bad hire
Nah, any codebase can be hosted on github regardless of the framework used to build it. But it's good that they're using version control at least. If you want to PM me some screenshots I can try and point you in the right direction. Try looking for a file called composer.json, possibly under a directory called vendor. If you have that you can open it up and it'll tell you what packages are being used, IF any. 
maybe so, I responded to a remark that, among other things, stated "Completing a code camp or some tutorials doesn't make you competent" you responded to my reply to that remark..
Yes I do recall seeing that file as a matter of fact.
hah, that's cool. Thanks!
Really? I'm using it on CentOS 7 and it seemed pretty self-contained and worked better than the system package.
There's a pretty wide array of questions you could be asked. The most common ones I remember were to explain why SQL injections and XSS attacks are and how to prevent them. 
I've started creating a lightweight version of what can best be called a CMS, but it has one main purpose. I've made a UI with a dashboard and the option for users to create pages based on 1 of 4 template options. Each template is comprised of panels (basically divs that can be populated by TinyMCE text editor, or an image/media, etc.). I've set up a database to store everything and render properly but I'm starting to get lost a bit. The 4 templates have the same top banner and a footer/news ticker that is always in the same place but they can edit the items on the ticker itself. Between the banner and ticker, there are either 2 50&amp;#37; divs, 1 100&amp;#37; div, a 50&amp;#37; div on the left with two 25&amp;#37; divs on the right, and then another with a 50&amp;#37; on the right with 2 25&amp;#37; divs on the left. Basically, when they click on a div and create content for it and hit save, I will be saving a 'page' with a banner panel, ticker panel, and then the middle panels, as well as all content pertaining to each panel type. The only thing this is used for is to assign pages to displays in certain areas of an office for news, announcements, weather and social media. Is there anything out there to give resources for what I'm doing here? It's much more scaled back than most CMS systems and it's only serving this one purpose but I'm getting to the point where I just need to connect the dots of the front end with the database a bit more strictly and I'm hoping for some helpful resources if anyone knows of them?
What is GCP? 
check if the dependencies contains for example on of the following frameworks : `symfony/symfony`, `laravel/laravel`, `zendframework/zendframework`, `silex/silex`, `laravel/lumen`, `cakephp/cakephp`, `slim/slim` or `yiisoft/yii2` 
That's because the genetic Linux package that it's using is the centos one, at least that's what I read in a related GitHub issue. The problem seems to have to do with the ssl version that comes with Debian Stretch. The newer wkhtmltox release has packages for different distributions instead of one generic
Coming out of university into a junior position these sorts of questions would be fine. If you pretend he didn’t say “networking” and just consider the example question I think they meant more along the lines of “how they think websites work in general”.
what about ruby?
why do you even bother?
To make jokes? I’m hoping to tell a good one eventually. 
More than half of that shit has seldom thing to do with OOP.
But his example question implies he expects a response inclusive of domain name resolution. I also don’t necessarily expect a junior engineer to fully understand Apache or nginx. So, no, I still think it’s a bad question. 
Google Cloud Platform
It has worked for me multiple times to land long-term clients. The proving yourself phase is very important - put in the extra effort to be a star, it will have a lasting impact.
Dice.com
people like you sicken me
I dont even understand what this is, what is it?
Your comment was enough to get me motivated to test it! Made the sample Post/Comment and it worked immediately. But, back to the structural integrity: I used this payload: $data = json_encode([ 'id' =&gt; 123, 'message' =&gt; 'message', 'comments' =&gt; [ [ 'id' =&gt; 4, 'message' =&gt; 'this is a message', ], [ 'id' =&gt; 6, 'message' =&gt; 'this is a message 2', ], ] ]); I modified Comment.php to _not_ have a $message property and it hydrated all objects but (of course) not the message on property: &lt;?php declare(strict_types = 1); namespace App; class Comment { /** @var int */ protected $id; } Somehow this isn't how I would expect such a library to work, no? I.e. I'm forced to write yet another layer when in fact the to-be hydrated models could serve as the common denominator what is acceptable and what not. Interestingly, when I change the payload (made comments.id a string): 'comments' =&gt; [ [ 'id' =&gt; 'asdf', 'message' =&gt; 'this is a message', ], I get a nice exception back: &gt; Expected "number", but found "string" at "$.comments[0].id" 👍 Another question: how do you resolve the classes in docblock comments? Because in the "real" app I tried it, Made a `App\Namepace\Etc\(Post|Comment)` and in the same namespace did run the code for hydration: &lt;?php declare(strict_types = 1); namespace App\Namespace\Etc; class Post { /** @var int */ protected $id; /** @var string */ protected $message; /** @var Comment[] */ protected $comments; } and it did take a completely different comment class, it picked up the class `\Comment` from the file `vendor/phing/phing/classes/phing/filters/StripLineComments.php` (I've phing installed in this project and, yep, it seems they've a global `Comment` class in the middle oft his file 🤷‍♀️). See also this: vendor/composer $ grep -r StripLineComments * autoload_classmap.php: 'Comment' =&gt; $vendorDir . '/phing/phing/classes/phing/filters/StripLineComments.php', autoload_classmap.php: 'StripLineComments' =&gt; $vendorDir . '/phing/phing/classes/phing/filters/StripLineComments.php', autoload_static.php: 'Comment' =&gt; __DIR__ . '/..' . '/phing/phing/classes/phing/filters/StripLineComments.php', autoload_static.php: 'StripLineComments' =&gt; __DIR__ . '/..' . '/phing/phing/classes/phing/filters/StripLineComments.php', The phing code is weird but it also feels wrong that it's being picked up ;-)
I would also think and important characteristic of a jnr. would be to show to willingness to learn ?
&gt; Somehow this isn't how I would expect such a library to work, no? Gson operates from the view of the PHP model. If the field exists in json, but not in your class, it will skip it. This allows you to not have to implement every field that exists in the json. It also means that APIs can return additional fields without resulting in a breaking change. &gt; and it did take a completely different comment class Are you sure that the namespace in your `Comment` class matches the one in your `Post`? Gson will attempt to use the namespace if the class was not imported. You can see that in the tests. - https://github.com/tebru/gson-php/blob/master/tests/Unit/Internal/PhpTypeFactoryTest.php#L140 - https://github.com/tebru/gson-php/blob/master/tests/Mock/DocblockType/DocblockMock.php#L64
The RFC is is poised to be accepted with 51% voting "yes".
Er, this RFC isn't even in voting phase yet. Discussions have only just begun, and given the topic I suspect it might be a lot longer than 2 weeks before it comes to a vote, assuming this RFC does at all.
Any way to disable warnings like “you should use single quotes here” etc? Or is_null() vs === null. I don’t care about those and I did not find a way to disable them. 
cursor on warning, alt-enter, right arrow. There's options for that specific inspection
“Browser sends data, server recieves data, processes data, sends results” A pretty general and okay example answer from a junior developer.
In the same benchmark japronto (python3) gets a score of 1,118,304 and laravel (php) gets 8,596, so does that mean that python3 is 8.6 times faster than python3 at JSON serialization? While PHP is 6.75 times faster than PHP? Of course not, those statements make no sense. This is (by design) not a test of JSON serialization in the stdlib of each language, it's a test of the capacity of a framework to handle a very specific workload primarily focused on rapidly serializing JSON.
Your sense of humor is dead.
I think one of the main reason behind they are popular is being their community is so big. But for me none of them build on laravel framework and for me i love the Laravel framework and when i see there is no Laravel E-commerce available so i have started working on it and i must say it is getting popular with around almost 500 github starts. Even its in currently development and there is no stable version is available yet. If you want you can give it a trial if you love Laravel framework. [https://github.com/avored/laravel-ecommerce](https://github.com/avored/laravel-ecommerce)
All due respect. If you don’t understand that question you don’t know enough to be able to “vet” a developer.
&gt;Gson operates from the view of the PHP model. If the field exists in json, but not in your class, it will skip it. This allows you to not have to implement every field that exists in the json. It also means that APIs can return additional fields without resulting in a breaking change. I understand that point of view. The other view is: you never know what you end up with. I think my expectation would be: if I declare (well, phpdoc typehint as good as it gets, until Typed Props make it in) `int` then I expect the final hydrated objects property to be that type; and not null. Otherwise I would have declared it as `int|null`. &gt;Are you sure that the namespace in your Comment class matches the one in your Post? Yes, absolutely. I did some debugging in your code but since I'm not very familiar with it, just gut feelings noted here: in \`\\Tebru\\Gson\\Internal\\TypeAdapter\\ReflectionTypeAdapter::read\` when iterating over the properties of \`Post\` when it came to the comments I noted it gets parsed as \`array&lt;Comment&gt;\`. Just a feeling, but I believe at this point it should already be \`array&lt;The\\Name\\Space\\Comment&gt;\`: Here's the post, literally copied except adapted namespace from the private application: &lt;?php declare(strict_types = 1); namespace The\Name\Space; class Post { /** @var int */ protected $id; /** @var string */ protected $message; /** @var Comment[] */ protected $comments; } After debugging further I ended up in \`\\Tebru\\Gson\\Internal\\PhpTypeFactory::getType\` after the \`preg\_match\`: The returned type was just \`Comment\[\]\`. After that it hits \`\\Tebru\\Gson\\Internal\\PhpTypeFactory::getTypeToken\` and although the \`$namespace\` is passed correctly, it does not "stick" it seems 🤷‍♀️
The initial comment was: &gt; everything related to networks, like protocols and how they work Which isn't even remotely close to: &gt; “Browser sends data, server recieves data, processes data, sends results” It's a bad question. End of story.
I'd be interested in what people would ask when interviewing a mid weight PHP developer? Perhaps someone with 3 to 4 years experience. That's my current position and I'm currently looking to move jobs.
Well, I mostly agree with that. I would want at this stage to talk to some references that have or had success with projects of similar complexity. I've been around long enough to recognize bullshit. But yeah I'm a little out of my depth here.
Dice is still around eh? Cool, thanks I'll check it out.
The practical effect might be fine, but the intro is unnecessary and overwrought. The RFC process is no place for political soapboaxing.
Right, so now let’s (once again) **pretend he didn’t say networking** and you have a perfectly okay question. Seems fitting, since we’re doing quotes, that I quote the comment you’re arguing with. You should avoid stories until you have enough practice remembering all the words.
Man, even that is possible, for sure (runkit, xdebug). And it’s probably possible in most languages in some way or the other :)
We use moltin
I don't want to be picky, but maybe you should start paying attention to those things and see why they were suggested in the first place?
Internals list - [http://php.net/mailing-lists.php](http://php.net/mailing-lists.php)
Yeah, === null avoids function call overhead and '' potential variable interpolation. No downsides to either and super simple to autofix.
No offence, but I hope you don't code like you write. Slow down. Take some breaths. Add some periods.
Are you in a big city? Meetups are always a good resource. Go out to a bar night, buy some devs a drink and describe your problem to them. You'll either find someone there, or get a good recommendation. Coding bootcamps are a good place to look too. They often hire lots of teachers and mentors who will be at least intermediate level. 
Well, since I live in the real world where I debate the topic that was brought up, that’s what I’m going to stick to instead of the pretend world you want to live in, which was never at any point the topic here. 
I used to ask a modified fizzbuzz of all people I would interview (jnr to snr) Write a program to loop through the number 1 to 100 and print out every 5th number (or something like that). I want to see what you write and how you go about it, so I would ask the candidates to talk through what they were doing. My thinking is: 1. It's a dead simple problem 2. You don't have to remember the % operator (one snr did it with a $count variable) 3. About 30% have no idea how to do it and fail this aspect of the interview. Yes - 30%. 4. Loops are a fundamental principle, if you don't know these you are really in a lot of trouble. 5. I'm happy to assist with things easily found on google. eg if the candidate says "I can't quite remember the lay out of a for loop - is it commas or semi colons between the terms?" 6. I'm not trying to find out if you are a 10x a ninja, a rockstar or even if you are average. What I'm trying to find out is that you are not bottom of the barrel. Oh and if you are interviewing for a PHP position and the interviewer asks you to write out a program in your favourite language - don't write it out in JavaScript or Python. Play the game. 
I'm getting personally triggered by \`is\_null\`... I guess it only exists to make automatic callbacks generation simpler (e.g. \`is\_\[getType\]\`) or for consistency. I was running a bet in the office if someone can show me real world example where \`is\_null()\` is superior... nobody did.
Terse callbacks, e.g. array_filter(‘is_null’, $items) and that’s about it
&gt; The current political climate of Earth shows us that votes that are won by narrow margins build resentment among voters, can lead to instability in the ecosphere, and could be considered harmful to democracy. What? I mean ya but what? Lets remove this. There is no room for this. The rest of the RFC is good.
Except it’s the very first thing I said. If you don’t want to discuss that then why reply to it? It seems pretty dumb to reciprocate the conversation if you’re not interested. It also seems pretty dumb to misconstrue a hypothetical so that you can argue semantics. So fuck off out of our pretend world where people discuss made up interview questions. :) end of story 
You ran into an interesting bug here where a global class exists with the same name as a class you're trying to load. I can see if there's a clean way to solve the problem. In the meantime, you can override the type checking by adding a type annotation `@Gson\Type("array&lt;The\Name\Space\Comment&gt;")`.
TBH it's going to depend on the company and their existing environment; if they use Laravel, it would behove the candidate to at least a familiarity with it. We use WordPress MultiSite, so I tend to ask basic WP development questions.
I just use ecwid.com. 3rd oarty. They handle coding. German company so coding id flawless. Just add javascript to add store to any site. 
I just use ecwid.com. 3rd oarty. They handle coding. German company so coding id flawless. Just add javascript to add store to any site. 
That looks super interesting -- if you're comfortable sharing, what does pricing look like once your 30 days are up?
Your looking at framework overhead. Something more comparative is running the demo under Python's raw version with WSGI via Meiheld's http server versus PHP's raw version with Swoole, as both are ran as async web servers. (python) wsgi 846,933 (php) swoole 1,167,351 Note, those are not running under something like Nginx or Apache, so these are very atypical and not something you'd traditional use as THE front-end web server.
I'm not sure, licensing is handled by a different department
That you're at a company with a department for handling licensing tells us everything we need to know about the pricing :) 
Also check out phpcd.vim https://github.com/lvht/phpcd.vim
I just started using it yesterday, awesome! 
That unfortunately isn't working for me - I tried changing an error to a warning, or to a light warning and it persisted as an error.
Neat, I'll check this out. I was a little wary because it is based on phpcomplete, which uses tags, but apparently phpcd is a rewrite that does not use tags.
Ask a recruiter to find someone for you, or be honest and take the code into interview, ask them to quote time to fix the issue. You are likely best to find a senior over a mid. Anything ess than a senior requires more direction than what sounds like can be given. Good luck.
I'd ask you about generic programming things (design patterns, SOLID principles, unit testing), what is quality code for you, how do you work within a team, how would you manage a conflict with another developer etc... I don't need to know if you are a PHP master, because those are things you can easily learn. I want to know if you're able/motivated to learn, if you could bring value to the team, and if you're a good fit for the culture.
Which inspection was it (some of the older inspections were not respecting the severity settings, perhaps that's a case)?
Thank you =) It's pretty neat and also false-positives level is low.
Great Features 
wow, can you interview me please?
&gt; You ran into an interesting bug here where a global class exists with the same name as a class you're trying to load 🤷‍♀️ Talking about first-time user experience ;-) No, but seriously, digging through the debugger and seeing the code: quite impressive architecture, thanks for the hard work! I'll see how I can benefit from this with the vision I've in mind.
[removed]
The company uses Atom, Sequel pro for databases and CI for building the web app.
A bit of a strange solution but it just might work. Find a php dev and have him to an online test in front of you and gets a decent score, however do not hire them for the purpose of coding. Hire them for a short term contract and have them vet other devs. While this isn't without its own problems it will yield a better result than you trying to vet a dev.
I actually messed up a fizzbuzz because I had to write it on paper. My handwriting is so bad I got nervous and couldn't think anymore. It's the little things that fuck you up. 
A real-time social network. See the actual project page to get an idea of the features: [https://movim.eu/](https://movim.eu/)
I can't agree that there is a big issue with composer. Applications have version compatibility for a reason. If you don't upgrade now and you write a new TestListener then you're just going to need to write a new one again when the next upgrade happens. Save yourself the pain and just upgrade, what the hell is wrong with you?
@kalessil sorry for OT but always wondered, what does EA stand for in the name? What's "EA Extended"?
This is maybe out of your jobs scope (and not exactly for what you asked), but you could try the following: - document every step you do and what the outcome is (this will help a lot to track down issues afterwards) - since you mentioned that there is a `composer.json` inside the repository, install [composer](https://getcomposer.org/) to the new server. - Go inside the projects root and install the dependencies with `$ /PATH/TO/COMPOSER/composer.phar install` (or just `$ composer install` depending on it being renamed and included to the PATH properly), it should tell you what PHP-Extensions are missing. - Install the missing PHP-Extensions (depends on OS and PHP version). - Do a `$ composer install` again to see if everything is properly installed. - Look for config files on the old webserver and copy them over to the new one. There might still be something that needs to be reconfigured (most likely the database server host and credentials). - Check if the website is working properly. - Even when it seems to be working, try to find a php dev to double check everything (thus you should document everything). - **Check for local or nearby PHP Usergroups/Communities, contact one of the mods/organizers and ask for help, be specific - maybe even give them the link to your post, depending on their size you should have a decent PHP dev in no time who can at least tell you what the new dev you're hiring should be capable of** ~~If you don't want to tinker around yourself,~~ see the last bullet point.
That stands for "Extended \[for\] Enterprise Applications", as it was intended originally =)
Thanks =)
The above 3 points are spot on but there could be more on that list, at this level it's mostly about you as a person not your ability to code. If they can see you fitting into the team and know they could work with you in building your knowledge you're far more likely to get the job than an obnoxious know it all who won't listen and looks down on other team members.
&gt;German company so coding id flawless I hear a lot of stupid shit on reddit but that one is certainly up there
&gt;We use moltin Are they anything to do with Stripe? Or have they just completely ripped off their site?
When I first started out as a freelancer, fresh out of uni - I was paid £150 as a daily rate. This equates to roughly a 30k/year once you factor in estimates for things like no paid holiday, no paid sick leave, etc. However, the only reason I got the job was that I applied for and did not get a full time role - and the company offered to try me out, as they had plenty of work at the time but no guarantee that they'd need a second new developer full time (I went permanent after 3 months when I was given the option, as I had student debt to pay!). Since then, I've seen developers paid between £200 and £500 as day rates, with most being around the £300 mark - this is in the southeast, near Brighton, and the market is fairly competitive. Not sure what the market is like your end of the country though. Most of these freelancers were well embedded in the local industry, had been working with the company I was at (and those like it) for several years, and had 5, 10 or more years of experience. 18 months may well not cut it, particularly if you can't get a foot in the door with a company in the first place.
Yeah, it's a major productivity issue alright. Without this problem I could program three times as fast as other developers instead of only two times as fast. ;) Look, I've programmed in many languages. PHP, JavaScript, TypeScript, C, C++, Delphi, Java, Scala and some dabbling in a few others. PHP is the only language where I've ever had this problem. I can accept that for many people this is not perceived as a problem. Can you accept that for some it is a problem?
Is Flexbox supported?
&gt; that probably means the project is not using a framework Not strictly 100% true. We don't have our framework (cakePHP) in the composer.json, but we use one. The other way to see if it's using a framework is to see if it follows an older style of: /app -&gt; contains the code /lib -&gt; contains the framework Typically the only subfolder in /lib will be the framework itself, and the name of that folder should tell you which framework it is.
The only thing I know is that many, many, many PHP-developers don't have this problem and those will always be more productive than you, based on your own logic. And this is bad. Not for me, not for these developers, but for you.
Shopware and Oxid are two large open source e-commerce systems backed by companies that are both around &gt;10 years. Lately Shopware has gained a lot of ground, but is relatively unknown outside of DE, Benelux and UK. It is based on a Zend1 inspired framework, moved large parts to Symfony HttpKernel+Foundation and uses Doctrine as an ORM, so its pretty accessible for Symfony developers.
Doesn't seem to be *that* easier than WS and can be quite intensive in terms of server resources, since every client connected leads to a PHP process consuming memory. For small load, well, maybe.
Read "Laravel is glue"...
haha, It's LaravelS, Laravel+Swoole
Its implementation is simple, no need to create Server, HTML5 native support. If it is under FPM, it will cause one connection to occupy one process. Of course, if you have performance requirements, it is not recommended to run as a process, and threads may be better.
I'm kinda missing a "how badly does the community want this feature" thing as well.
Those are kinda mandatory for me to have enabled. Avoids backslash issues in double quoted strings and highly increases readability with comparison instead of function calls.
I wouldn't mind a small name change to be honest, makes it easier to find it in the plugin browser as well.
Don't underestand what has this to do with HTML5, since this is more about Javascript capabilities (and WS are supported everywhere these days). Anyway, threads are expansive as well, it's really not about SAPI.
I’ve used this plugin for well over a year. It’s THE BEST plugin for PHPStorm ever. Thanks for your work!
it's more OO that Java but still relies on procedure call instead of messaging. Ruby is just perl + some smaltalk ideas anyway.
[https://developer.mozilla.org/en-US/docs/Web/API/Server-sent\_events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events) SSE is used to push data from server to browser, is one-way communication. Of course, WebSocket is currently supported by major browsers, which is a good solution for full-duplex communication applications.
Think about it, probably come up with something not TM-ed this year.
You are welcome =) If it getting boring, you might want to check Php Inspections (EA Ultimate) as well (it's commercial, but offers free 2 weeks trial). It has more rules and up/downgrade should preserve previously made settings.
I know what SSE is about, I just don't think a PHP with regular SAPI on backend is really good for this, since connection = thread or process in case of FPM. Only acceptable usecase I can imagine is a fallback for hosting without a possibility of running your own daemon and with limited number of users. Than this library is just fine and can be perfect if tests are present. Also, check if your running process doesn't lock out a session for user, I think other connections will be waiting for releasing (that is, terminating your push endpoint connection) in some scenarios. [session\_write\_close](http://php.net/manual/en/function.session-write-close.php) just before the loop begins would be a way to go, although this could confuse a programmer. Maybe just note it in a doc.
Thank you for your opinion. I got u. Test cases will be added later, although the code is simple. In addition, session\_write\_close is indeed a risk I did not expect, and should be executed before the loop.
SSE use so much resources. I used in my final project. lol..
Maybe an RFC for it should be made ;)
Many voters read this subreddit so simply discussing your feedback here is one way.
.
The mailing list is the official venue for discussing the future of the language and where us “core contributors” are :)
Didn't mean to make it sound like that is all they do.. That department has all of our sysadmins. The head of that Dept handles negotiation, licensing, etc. 
Sorry I have no idea, I'm not on our ecommerce team so I don't work closely with it
Yeah I will
I'll also add that before moltin we spent a bunch of time trying to customize Magento and gave up. None of the developers had anything good to say about it. And before that we used our own custom written ecommerce platform
I'd love to, but I have been unable to register for the mailing list for some reason.
Yes, it's essentially just a headless browser that "snapshots" what the page looks like and converts it to PDF so no special CSS or print styles needed.
Variable reassignment, I'll look up the name when I'm at work.
I'll take a look into the issue today, thank you for a prompt response.
No problem, thank you for looking into it. :)
I've tried to find what version of Qt exactly that is used, but I haven't found any. Seems to be Qt 5.4 with some patches. That would mean that a lot of modern web is missing, right?
"using good practices" and "Laravel" are not really something I see together. A competent developer knows what the right tool is for the right job and has no problem adjusting to different techniques outside of their comfort zone. 
That sucks man. These problems arent there to fuck you up. Next time make fizzbuzz your bitch!
If you are in Adelaide, Australia, maybe!
Should I pronounce it as Jay-son (json) or Gay-son (gif)?
Okay.. Thanks for that 👍🏼
How does this work without a server timeout after 30 seconds? I thought you'd need something like [ReactPHP](https://reactphp.org) if you want to do async in PHP.
Correct, I don't believe CSS Grid works yet. You could also look at https://github.com/GoogleChrome/puppeteer if you need the latest CSS features.
What are you needing to do with PGP? There's the native library, https://secure.php.net/gnupg or you can just execute the gpg shell command to encrypt or decrypt a file.
Gee-sahn
Gee-sahn
I need to decrypt files from client. I was trying to make native gnupg work on WinServer 2012, but didn't succeed. IIRC gnupg also don't support 64-bit Win. I'm also not sure if executing commands is a good solution from error handling perspective
It's not too bad. I worked at a place that had a file processing application that had to decrypt the files before it could read them. It either decrypted it and it was readable or it didn't and it wasn't.
This lib implements SSE protocol through an infinite loop, and establishes an Event-Stream connection. There are other ways to do this, such as Swoole, Workerman, ReactPHP.
I stopped caring about dice when they sold Slashdot in 2016.
Apart from the obvious "Is this person a seemingly well adjusted Adult?" You want someone that: - Knows what composer/packagist is. - Knows what the PSRs are and has an opinion on them. - Knows what a unit test is and can name at least one unit testing framework. - Knows how namespaces work in PHP. - Knows why you want to use PDO over most other DB connections. - Can name at least 2 ORMs, even if they hate them. - Can explain XSRF to you. Are you looking for a contractor or an FTE?
TcPDF has many many features. But the currently stable branch is not developed anymore (since 2 years I believe?), while a rewrite is underway (https://github.com/tecnickcom/tc-lib-pdf). In my experience it's better to rely on rendering from web pages. You can switch renderer without having to re-write your PDFs.
With your approach, what happens if something in the Response phase throws an exception? Consider working through [Creating your own framework](https://symfony.com/doc/current/create_framework/index.html) [Symfony vs Flat PHP](https://symfony.com/doc/current/introduction/from_flat_php_to_symfony2.html) And maybe even take the actual Symfony framework out for a test drive and see how it handle exceptions. Just to get some ideas on how to structure your own framework.
use java/python/nodejs comments are coming :D
Agreed that rendering from web pages is a better practise in this day and age. I guess I still have a bias towards TCPDF and FPDF from the legacy projects I still maintain :)
Thanks exactly what I was looking for. This would be a contract position.
I've always hated that article, because it really doesn't focus on one of the most lacking skills that lots of programmers are missing. Problem solving and being able to analyze legacy code and figure out what it's supposed to be doing, and find out if there's a problem with it. I've regularly needed someone to come in and join in on a large scale project that may have a code base going back 10 years. The ability to ramp up and start working on and maintaining that code base is important. Rather than asking them to simply write me some original code, I'd prefer to show them code samples from our code base, and have them tell me what the code is trying to do, how they might improve it, etc. If they can read the code and know what's going on, I can feel comfortable that they can maintain it. As for writing new code, especially when you deal with folks that program in dozens of languages, I'm not too worried as long as they understand the logic. Syntax can be googled.
This is honestly the best answer. You will be without any support or security fixes for 7.0 come the end of the year. If you have no great reason not to, then you should be upgrading your applications to 7.1 or more preferably 7.2
I would reach out to a local company that you know uses PHP and see if you could borrow one of their senior devs for the interview process.
If you happen to use Laravel, Debugbar is a MUST! https://github.com/barryvdh/laravel-debugbar This is great for optimization for example duplicate queries among many other things! 
I've been freelancing full time for the last 5 years. I personally charge a $2500 minimum no matter what the project is. Hourly rate I charge $100. I only recommend charging these rates when you're established and have a large clientele that you've built. If you're worth it, they will pay it. If you're new, I'd likely recommend charging something like a $500 minimum and around $20-30 an hour. 
Investing time for finding the actual bottleneck and not start caching anything anywhere. If the bottleneck is found, a good solution can be found usually (caching, background-task, queue, reorganize workflow, database indices, load-balancer, upscaling vertical/horizontal, outsourcing to micro-services with another language, etc.) 
Cool, thanks. What type of projects do you tend to get?
I haven't written it, but the weirdest PHP code I've interacted with was WordPress. It's amazing how many design mistakes it carries.
Yes, if the exception is thrown in the finally part, it's not good! Thanks for the links, I'll read that. The app was mostly procedural and I added oop and symfony components over time and sometimes I'm not sure how I should do things so I just go along with whatever I feel like and some months later realize it might not be the best way… Thanks again for your message :)
Wew lad, Java, heh.
Don't just look at PHP code. SQL (or whatever your database uses) is code too. Database / query tuning is far too often ignored and is often a big source of performance issues. Recommended resources for MySQL: * [High Performance MySQL](http://www.highperfmysql.com/) * [Percona Monitoring &amp; Management](https://www.percona.com/software/database-tools/percona-monitoring-and-management) For performance monitoring, tools like NewRelic APM really help - yes they cost money but it's well worth it to be able to find bottlenecks and quickly check on performance on a regular basis.
In the typical way Python and PHP frameworks are served to the web Python is faster, that is why things like Django, Flask, etc generally outperform Laravel, Cake, etc, even in more rounded tests like Fortunes. The simple explanation is that a PHP app gets booted each request, where as a Python app doesn't to serve something like Django you have WSGI server before Nginx, and that WGSI has worker threads that each hold a copy of your Django app in memory, so obviously this is more performant than booting your app each time in the way PHP typical does. 
I think I would prefer to use Guzzle. https://stackoverflow.com/questions/19520185/how-to-perform-multiple-guzzle-requests-at-the-same-time
I was always under the assumption that ruby was "real" OO, like Python or what not. Interesting
Use SPX to profile your application. [https://github.com/NoiseByNorthwest/php-spx](https://github.com/NoiseByNorthwest/php-spx)
Sponsor me please 😁
Premature optimisation is a crime :)
1. Have one million data sets with like a total of 10 million related datasets 2. Your customer requires to make them searchable by many factors 3. Write SQL queries with 8 joins and GROUP BY/DISTINCT and wonder why the page takes 80 seconds to load (or your SQL server is suddenly gone) 4. Learn about ElasticSearch, build an index, use it 6. Have ~200ms response times for your searches 5. ?????? 6. PROFIT!!! There are three things that I constantly have to optimize regarding performance: 1. Database interaction. Use caching, memory tables/own search indexes and things like ES to solve this. 2. File system interaction. Especially related to file caching or logging. To solve this, use services like Redis for caching and log to ES. 3. Intensively mapping arrays to objects, back to arrays, back to objects etc.. To solve this, KISS. DTOs are nice for auto-completion and stability, but have a lot of memory overhead with large datasets and intensive mapping through multiple loops.
Additionally, log queries during development and fix N+1 query problems before they go live. It’s usually a small tweak with huge rewards. 
Depends on the circumstance. If it is just a single value, why bother making a class for it? 
Depends, but how do you expect us to say anything without giving any details ? Why do you say he used outdated practices for a start ?
You may not need to start over. Take a look at Modernizing Legacy PHP Applications: https://leanpub.com/mlaphp
&gt; what the hell is wrong with you? I like to test things before I push them to production? You're being an asshole. &gt; Applications have version compatibility for a reason. That's right. My library is pretty easily compatible with php 5.4+. I already explained multiple times that the issue is PHPUnit. Not my library. It's not always up to me what version of software someone else decides to use. Gosh I'm such an asshole for making my library able to work on a big umbrella of versions instead of just the latest version. There is literally no reason to force people to use one version over another other than to satisfy people like you who want to ignore medical and financial regulations just so the php -v output strokes your personal ego in that you're running the latest and greatest. The fact that Symfony literally did the same exact thing that I was thinking of doing proves my point.
Have you actually read this book? Looks quite interesting, would like to know what your opinion on it is.
If its more than 1 item per record, class. Else standard variable / array is what I do :)
Depends on the framework / circumstance... this is pretty much why ORMs exist.... 
I've had one person tell me that the way the information is connected to the database is handwritten as opposed to the use of ORM (Object Relationship Management) Other examples like the model for the database are all in one file, a bunch of random ajax files that don't even do ajax calls, and there is no file structure for organization. That's all the information I got. 
Just because a website has outdated architecture or technology does not mean you need to throw it away. The purpose of this website is to provide value, whatever that means for your site/business. I’d question first why you would favor ‘modern architecture practices’ over whatever value the website provides in its current state. To answer your question, I’d recommend reading about refactoring and the strangler pattern.
Does your website work as expected and are you planning future development? If it does the job, it doesn't necessarily need to be "fixed" just because it isn't up to some sort of current standard.
How large is the project and is for example a full blown laravel application necessary?
Lots of great tips already. Keep your code up to date, amazing work has been done with PHP itself to speed up apps so make sure you're on a rather new version
I think I should move to Eloquent too
Sure. I'm practicing OOP in PHP and I'm thinking of some best practices
&gt;I've had one person tell me that the way the information is connected to the database is handwritten as opposed to the use of ORM (Object Relationship Management) Depending on the scale and complexity of your project, this may not be a big deal. &gt;model for the database are all in one file They're probably referring to the migration. Not a big deal. &gt;a bunch of random ajax files that don't even do ajax calls You'll have to get specifics on this one... Honestly it sounds like you're not particularly technically inclined or a developer yourself, so you're probably relying on someone else who is telling you these things, any of which may or may not be true. If you're not the developer yourself you'll really never know. How big is this website?
Great.. I'm practicing OOP in PHP and I' thinking of some best practices. I'm thinking how to map objects because queries containing results from multiple objects. I'm using my custom MVC &amp; do the database querying in Model. 
If its more than just a fetch 1 piece of information sometimes? If i am doing simple things with the data I usually don't bother, I tend to encapsulate my data functions with direct input and output.
Depends on scale and how much time I have. Mapping it to a class is going to scale better as the application becomes more complicated, but depending on what you're doing, it may not be worth the trouble.
I never use classes. I create an array if I expect multiple results and a new stdClass() if I only expect one. I do something like this inside the loop. $result = $stmt-&gt;get_result(); while($row = $result-&gt;fetch_object()) { $arr[] = $row; } That will result in something like this: [ stdClass Object ['id' =&gt; 27, 'name' =&gt; 'Jessica', 'age' =&gt; 27], stdClass Object ['id' =&gt; 432, 'name' =&gt; 'Jimmy', 'age' =&gt; 19] ] 
Just because somebody uses outdated architecture practices, does not mean you need to wast all the work. I can write outdated architecture practices and deliver a perfectly secure and future proof website. Hell, have you ever looked at Wordpress code? That is almost ancient in the way its written and yet it still runs 20% of the worlds websites. &gt; database is handwritten as opposed to the use of ORM (Object Relationship Management) Absolute bull ... Orm are not a requirement for a good working system. The guy telling you that handwritten SQL is a negative compared to a ORM ... no offence but that guy instantly lost all credibility. I work on a website that earns 24 Million per year. It has no ORM, no Framework beyond the basic needed files like auto-load, Dependency injection and that is it. Some external programmer can come in and quickly categorize my work as bad, when the site does not need a ORM, or a full blown framework. We had Orm's and frameworks from the previous guys and we had nothing but issues related to bugs from the frameworks. &gt; Other examples like the model for the database are all in one file, Again ... what is the issue. Unless you are running a website that has dozens of programmers working on it, having the model of your database in one file is not a issue. Its not going to create a performance issue and unless you website is huge and has a 10.000 line model file, its no big issue. If the original programmer put all the SQL in one model file, it means he knew about MVC. You can split that file into smaller model files if needed. But in general it will not be a issue. &gt; a bunch of random ajax files that don't even do ajax calls, and there is no file structure for organization. Random ajax files... No file structure, sure, that is no fun but again ... The Ajax files, sure, i do not like the sound of that but again... i have not seen the code. I do not hear any magic worlds like SQL injection, insecure, ... It looks like the person who is informing you is more or less looking for issues to be able to rewrite the code for a big paycheck. Let me tech you a lesson. Every programmer will always find faults in a other programmer his work. When a programmer is motivated to earn money, he find a lot of faults. When a programmer is not motivated ( aka, the pay sucks for the work ), you will be surprised what is suddenly acceptable ( including massive security breaches ). Do not fall for industry hype. Unless the project that you are running requires a dozen programmers, that need to work in a clean environment, most websites do perfectly fine. Show us the code and we will quickly be able to tell if the work is acceptable or not. But from your explanation it sounds more like the original programmer used more "old school" techniques, where as the new guy you used to validate is looking to rewrite for a nice paycheck. * Does the website work? Yes? No? * Does it have basic protections build in? Anti SQL Injection? Yes? No? * Can other programmer work with the code? Yes? No? If the answer is Yes on all points... Then what is the issue... You need to learn that architectures change all the time. What is hip today, is considered bad tomorrow but that does not mean it does not work. The industry is highly focused on taking over models that large companies use, where dozens of programmer work on the same code bases. Unless you are Google, you will be fine. ;) I have seen horrible coding jobs work perfectly. Maintenance can be a issue but unless you want to spend a lot of money re-coding, be careful what you get yourself into. Because it can becomes a alley of constantly spending money on re-coding where the new guy can keep blaming x issue on the old programmer ( a lot of guys do that in this industry ). And they keep milking the cow for all she has got.
Or a different circumstance, if I am fetching bulk data to correlate, it's a big performance hit to load each record into an object and then correlate, it's much more efficient to use the fetch data directly (and to do as much of the correlation as possible directly in the SQL!).
Handwritten SQL can be much faster and more eloquent than use of an ORM (object relational mapper) if a developer knows what he is doing. It's a tradeoff. ORMs save time but can also be very fragile creatures. ORMs are far from necessary in every project and there are other very useful solutions like DAOs, DataMappers, Table Gateways, etc. which can replace an ORM. Depending on use, having the database model in one file could be an excellent choice if the database is not very complicated, say with 20-30 tables. Maybe the model file is even autogenerated by some tool? &gt; a bunch of random ajax files that don't even do ajax calls OK, that smells a little... mostly because it's a lazy thing to do that complicates the codebase unnecessarily. Sending all server requests to a single router in a single file is a commonly used technique which can have the side effect of removing much of the organisation of the on-disk file structure, ie. the mapping between the request URL: [mysite.com/page/i/want/to/see.php](https://mysite.com/page/i/want/to/see.php) and the on disk structure: /var/www/public/page/i/want/to/see.php is no longer necessary or useful. This is normal walk-in-the park web-programming for projects that use a Router component but it might be a surprise to you eg. if you are the systems administration type. I really think you really need to get a third opinion.
I had stopped using PHP for almost 2 years. Recently, I deploy a production system, which is using worker-queue, by using Python + Celery + RabbitMQ. Now, I need to deploy a solution using PHP. My last experience with worker-queue system, is using [https://github.com/chrisboulton/php-resque](https://github.com/chrisboulton/php-resque) . However, I don't have good experience with it, as it seem to suffer message loss problem, when traffic is high. I didn't take time to debug it. Instead, I replace the buggy code snippet, with manual interaction with RabbitMQ (Avoid using redis). Celery seem to be the de-factor worker-queue library for Python ecosystem. May I know, what is the Celery equivalent system for PHP ecosystem? I prefer using RabbitMQ as it seems to be more robust.
Bingo! I tried out PhpStorm on my Xeon 1275v5 workstation with SSD drives and 16G RAM. PhpStorm's latency problems were absolutely unbearable for me too.
Look into symfony and doctrine. You will learn lots.
Honestly the best performance improvements I've gotten out of PHP -&gt; properly structuring my database and properly setting up Indexes. 
&gt; I prefer Eloquent Heresy against Doctrine! 
You better start with something sane and not ActiveRecord garbage - take a look at Doctrine.
I have. It's decent. I'd recommend it.
I currently work as a free lancer on a laravel app at 60$/h, thats 40 hour weeks
Just curious if it's worthwhile to go down the rabbit hole to get it setup. I'm using a legacy codebase built on a CMS that's powered by Code Igniter 2 under the hood. AspectMock seems like a potential way to actually mock up their way of injecting dependencies - [https://github.com/Codeception/AspectMock](https://github.com/Codeception/AspectMock)
Is eloquent bad?
And is it considered appropriate to just say: "I think this is a great RFC" or "I'd really like to see RFC to be implemented"? I thought the mailing list was for more 'important' stuff.
Depends on how large the application or script is. For larger applications, I will always be using an ORM of some sort.
I think most people are using ORM's, so everything goes in an object. You aren't manually writing SQL queries are you?
It depends on. If you need a one value from DB you likely not need any object. But in the most cases you need objects. In all modern PHP frameworks as a Symfony or Laravel you will work with data mapped on object. It’s only one “official” way to working with data. If you don’t use any framework I also recommend working with objects and not use raw data. Using objects helps you follow OOP principles and best practices. 
In any other language, your model would know how to do a get and a save - you'd have a factory method that retrieves your data, tosses everything into properties, and handles any locking that needs to occur. Then you'd be able to mutate the data however you need, then call a save method. The save method would run any rules (although these might modify the data further, validating the data and failing a save operation can get messy), then would persist the object to the database and unlock the record. After the save is called and the record unlocked, attempting to read or mutate the object any further should throw an error of some sort.
Fixed, please update the plugin =)
I'd create an object that roughly matched your results. There's nothing wrong with your object modelling data from multiple tables
I am writing SQL queries manually :(
If you've got large amounts of rows being returned from the db, fetch them as cursors instead of hydrating them on query. Then use `nikic\iter` to map and filter using generators so you can do that without unwinding the cursor until the end
Where is the advantage of stdClass compared to arrays? The good thing of mapping classes is autocomplete in modern IDEs to avoid typing errors and faster development.
stdClass instantiates an object for when you need to reference by a key instead of a number.
Writing SQL queries is fine. Stop being such a beta.
Maybe you just suck at databases?
You can use `vendor/autoload.php` even if you have your own autoloader. It's not one or the other. Use `spl_autoload_register` on your own version of the autoloader first. Then include vendor/autoload.php It will only ever fire the autoloader from vendor IF and ONLY IF your autoloader fails to find it first.
I don't understand your argument, because you can use keys with arrays as well.
Awesome, thank you.
Been using eloquent for 2 years and never going back. 
With PHP's already shitty one-process-per-request architecture ActiveRecord is absolutely fine. You don't need all that reference management that Doctrine (aka. Hibernate in disguise) does.
And you're so cool you've written your own shitty OS, right? Because you don't suck at kernels! Right?
Be careful about not bothering. People without hammers never see any nails.