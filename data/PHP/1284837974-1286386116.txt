If the system works well and you offer support for it I see no reason why one shouldn't be able to have Sphinx as a requirement. As you said yourself, it's not really targeted at Ms. Applebottom who lost her cat. A slightly convenient effect is that you can make priority commercial support and make a little on the side for your development time.
Which still makes me not trust the site because an attacker can just as easily decrypt all the passwords (if the server is doing it automatically the key has to be there somewhere). Hashing is the way to go.
Not sure what you did to your bullet points: * Item 1 * ... * Item N Try putting a blank line before the very first one.
Also remember that most (all?) relational databases can use any level of a compound index from the start. So you you index columns A, B and C, in that order, in a single compound index, then you get for free effectuve indexed searches on just A, and A+B as well as A+B+C. So get the order right, with A being the most often searched column. TBH you can leave a lot of the indexing detail until further down the line, after you understand much more about how the data will be used and how much there is.
I'll come back to this later but initially I'll tell you there are way too many indexes. You do not want to create an index for every field. What is easiest is to build your application first, and once you are done building your data views go back and create indexes based on the queries you do. You'll want indexes on any fields you use often in WHERE statements and on any fields used in JOIN clauses. As evertrooftop stated you won't want to bother with an index on gender etc, since there is very low cardinality. As far as storing your locations in latitudes and longitudes, I'm not entirely sure I follow the reasoning for that as a city name/state/zip would be more universal and also easier to index. It may also be useful to look into using ENUM types for fixed values such as gender, sexual orientation etc which will help rather than having gender 0 and orientation 2 which can be cryptic and will require mapping elsewhere. How are you planning to implement your search forms and your listed data views?
i hope that whoever uses this reg-ex will merely use it to "display" the password strength rather than force the user to comply.. because the latter is pretty annoying
If someone has unauthorized access to your database, you're already fucked.
urge to kill rising.
all better =)
Solr is an alternative to spinx. I like it a bit better.
&gt;simple regex ಠ_ಠ
Not to jump onto the 'nosql' bandwagon here (mainly because I've never actually used a nosql database), but isn't this the kind of data/systems that nosql (such as mongodb) was made for? Of course I may be entirely mistaken since my knowledge of that field is very limited.
Forget about MySQL and learn [PostgreSQL](http://www.postgresql.org/docs/8.4/static/index.html). It works just as well as MySQL or better in pretty much every respect, it has data types better suited to some of your fields, and **it'll use multiple indexes**. In addition, there are plenty of web hosts that offer PostgreSQL out of the box. You can use any backend you want: Sphinx, Lucene/Solr, or one of those newfangled NoSQL tools. But I think it's also very important for developers of data-heavy apps to learn how standard relational databases work, because, after all, *SQL is the industry standard. PostgreSQL is one of the best ways to do this. (Why aren't you using foreign keys? Because most tutorials for MySQL don't teach you how to use them!) [Edit] Also, test with at least a million dummy entries before you decide if something is performing as it should. Most databases will just do a sequential scan if the dataset is small.
First, "A brute force attack for a 8 character lowercase password can be done in (micro)seconds." This may be true if you are doing a simple string comparison, but any hash will add some time. Ideally you use a purposefully expensive hash. I tend to have mine take ~1ms, which means a full search of the 8 character lowercase password space still takes ~6 years. And that is assuming you have the final hash sitting beside you, saying nothing about network latencies if you are trying to brute force an active website (assuming they let you try a few million times). Second, as soon as you tell me that my crazy passwords aren't good enough because it does have one "special" character, I'm going to seriously reconsider using your service... Sorry I read this while outside my happy bubble. 
[This should point you in the right direction](http://stackoverflow.com/questions/656583/scan-php-uploads-for-viruses) 
You might consider using a soundex for names too, that way you can get names such as Maryanne and mariann in one search.
Images usually don't need to be scanned for viruses, as they are normally not executable. Just check if it's a valid image ([getimagesize](http://www.php.net/manual/en/function.getimagesize.php) works well) and you should be fine in most cases. If you really want to check for viruses, (specially crafted GIF images?) ClamAV is a good open-source antivirus software. There's actually a [PHP extension](http://php-clamav.sourceforge.net/) that implements a ClamAV client library. But running ClamAV on the command line for each file would be pretty slow. A better alternative is clamd (clamav-daemon), which runs in the background. You connect to the daemon with TCP or socket, pass the filename, and the daemon returns the results. It's faster, but the daemon uses quite a bit of RAM. [This one](http://github.com/kijin/simplesocket/blob/master/examples/clamd.php) seems to support clamd and it's pure PHP so it doesn't need to be compiled in, but I haven't tested it.
Also please make sure to never, **EVER** include()/require() an image as a way to read it to the client. The reason (and ways to prevent it) is talked about in depth [here](http://www.phpclasses.org/blog/post/67-PHP-security-exploit-with-GIF-images.html), but tl;dr images can include valid PHP code and can be executed on an include/require. Use readfile() and make sure the file has a valid image extension and not a .php extension.
Meh. They send the email before they store it. No big deal to me.
Agreed. I consider myself a regex ninja, and that used things that I hadn't seen before.
Special character includes anything in the 'Shift+[0-9]' keys, as well as many others. If you're not using passwords like that anyway, even for the random websites, you need to rethink.
Easy fix: don't allow GIFs. Make sure the image is a valid PNG or JPEG. :)
There are more ways to get a larger key space than simply using "special" characters. A 9 character alpha numeric password has more than an order of magnitude more combinations than an 8 character password with "special" characters.
It's been fixed thankfully. &gt;[Finally, Sun has patched this particular attack vector. The Sun advisory is #244988. This is patched as of versions JDK and JRE 6 Update 11, JDK and JRE 5.0 Update 17, and SDK and JRE 1.4.2_19.](http://riosec.com/updates-on-gifar-vulnerability)
If you are talking about simple key/value stores, I seriously doubt that it would suit his needs at all. If you are talking about something like FAST or Lucene, then yes, that is exactly what he should be using.
Why would you use regex for those simple tests?! I expected a sophisticated one but this I can do with native methods: * write it quicker * modify it easily * let other people understand it within seconds
getimagesize does NOT work for this. See http://www.acunetix.com/websitesecurity/upload-forms-threat.htm There's some good advice here: http://stackoverflow.com/questions/602539/stop-people-uploading-malicious-php-files-via-forms/602904#602904 Be careful with number 3, do not process an uploaded image within the context of an HTTP request. In fact, only do this if you know what you're doing as this exposes the server to a greater risk of running malicious code. All it takes is an unpatched vulnerability in GD or your preferred image library.
ye but that is relying on the end user to update java. most ppl have nfi what java is, let alone how to update it. to do a simple check to see if the uploaded file is actually an applet, do a string match for 'META-INF', '.class' or 'MANIFEST.MF' applets are actually PKZip'd - so you can look for the PKZIP header which is '50 4B 03 04' (PKxx) this is a quick way to make sure that the image is sane. 
this doesn't work. see: $ ls test.gif test.jar $ cat test.gif test.jar &gt; vuln.gif $ echo "&lt;?php var_dump(getimagesize('vuln.gif'));" | php array(7) { [0]=&gt; int(200) [1]=&gt; int(200) [2]=&gt; int(1) [3]=&gt; string(24) "width="200" height="200"" ["bits"]=&gt; int(5) ["channels"]=&gt; int(3) ["mime"]=&gt; string(9) "image/gif" } open vuln.gif in a browser and the applet runs (old java) - or append a .php file and require() it and it will run
True. But at least hashing passwords usually protects you from leaking very sensitive user data: their passwords. I'm just warning that saving strength with weakens this protection very much.
Easy fix: don't allow GIFs, JPEG's or PNG's. Make sure the image is a valid... no wait.
I once did contract work for a guy who had the Zend Certificate guide book. I had a quick look through and most of the questions were tricks. Not very useful in a real life scenario. I can see see how it helps, but it doesn't test your ability to program well. So my conclusion is: it'll put you in a good light for non technical people and others (programmers) wont (shouldn't care). Ps: Good luck Nodren. I know you from Kohana ;P 
I won't disagree with that. But 8 alphanum characters has so many less combinations than 8 alphanum+special characters... The argument works both ways.
Almost forgot you were a redditor thanks for the advice
Yes it does go both ways. That is quite the point. Simply looking at the lack of special characters does not indicate the relative strength of a password.
ASCII art!
My first blog post on an advanced concept in PHP. I'd love some thoughts and feedback on how well I communicated the concept, whether or not things are easy to understand etc. Thanks!
I'd say avoid invalidation. Instead, do overwrite on update. Have the backend update the cache when data is changed. That way, several hundred of those 12000 requests per second don't trigger a re-cache on read. Serve everything static, and use ajax to fetch impossible-to-cache dynamic elements, such as the visitor's username.
The article was too long IMO. As for the concepts, I don't think that full-page caching makes sense, unless you're willing to either sacrifice all dynamic and random content, or make-do with javascript. If you'd rather keep your site dynamic, I think caching records retrieved from DB in Memcached and invalidating on write makes the most sense.
Cool! I appreciate your in-depth discussion of various caching options depending on the situation, as well as their caveats. I find this kind of article a lot more valuable than an idealistic "X is always the best and you are crazy to disagree" diatribe. Keep em coming!
Thank you, that is indeed one option which I hadn't considered. That said, one could also look at it the way that on updated data you're then going to create several hundred new pages - which would be quite heavy. There's also the problem that some of those pages might no longer be needed and thus you're spending CPU time generating dead pages. It depends a lot on your specific project, of course, but overall I think invalidating data and spreading out the regeneration is better.
I realize it's long, but this is probably part one of three, there's a lot to cover and cutting it off earlier would most likely have left the user confused. Maybe I could have used more compact language but my goal was to make sure people understood how everything fit together. You do bring up an important point which I did not cover in this part yet. You don't have to sacrifice all dynamic content if you are a bit clever. You can use edge/server side includes to include dynamic content into the page, either via a PHP call or by using the scripting ability of your web server. That said, you will have to sacrifice some of the dynamic code, for instance I had a quick and dirty resource usage counter on my site. It would basically just show me how long it took to generate the page and how many queries was used. With fully cached pages that would no longer make sense and there wasn't a nice way to do it with server side includes. Thanks for the feedback and I'll make sure to cover this in the next part.
Thanks. I think I have enough information to cover for two more articles, but they'll all focus on how to handle the actual implementation of full page caching. :)
&gt; In the real world, good logging, print_r, echo, etc... is the way to go I'm going to get flamed to hell, but this is utter crap ^ So you see a bug, so you go into the code and add some echos, run the page. You see something interesting, so you add some more echos, run the page. You keep doing this until you find the bug. Then you go back to the code and remove the echos. Run the page, then remove the echos you missed. Then in six months time your client phones up and says when I do x, y and z my page is broken. So you take a look and, fuck me if there isn't an echo on the other side of a complex if-else-case-swtich that you missed, and now it is killing the page layout because debug into is comming out before the &lt;html&gt; tag. Using a debugger you debug in one step without having to write an echos. You set a break point, you refresh the page, the IDE stops on the break point and shows you all the variables. You then step into/out of functions and follow the logic line by line. Usually you can spot the bug just by inspecting a couple of variables and watching how they interact. A function returns something odd? (e.g. null) click on the function call and hit 'go back to this line' then step into the function and take a look. Problem with the variables being passed in? Step out, then move the pointer back up to where you think the problem may be. Use the stack to jump up and down the call list. Everytime this conversation comes up someone says just use echo and it gets up votes. But they are wrong, or are doing something simple. Take a look at the big boys, microsoft, ibm, sun, google, etc, they all use industiral strength debuggers. (Yes I know there are exceptions) I have yet to find an instance or bug that a debugger didn't give me lots of information (threads are tricky in a debugger - but we are talking PHP here) 15 years coding. My GPL project has 250,000 downloads and 7 million pages views. I used a debugger. I know C#, Python, PHP and use a debugger with all of them. Anyway, good bye karma, hello down votes.
Don't even use ajax for that, just store the username in a cookie and insert it with javascript as soon as the intended parent element is in the dom.
Yeah I've seen it, it doesn't really test any programing skill. The register globals is a good one, but the answers are not that all straight forward.
No, please don't do this. It's extremely dangerous.
How so? It's not like the username is secret or can be used for bad?!
I stand corrected. Changed to an upvote :)
because you are trusting user data
good read, some tips: * summarize benchmarks in a table and then link to the raw ab output so that it is easier to grok (or put the raw output in the footer) * these types of results could be clearly presented in a graph so that the gain made (which is huge) can be easily seen (0.4sec over 2.4sec is much more apparent in a graph). you can then add other concurrency values to show the scale trend * more sub-headings so those scanning can read conclusions without reading every word (eg. under 'the complications' you should put in sub-headings with a paragraph on each - where the subheadings summarize the result) * that said, more headings as well - like 'introduction'. it helps break up large blobs of text in an article to make it easier to read. most people scan and then read in full, so you have the title and section headings to grab their attention * more links. link to nginx, php, memcachedb, the php module for it, the nginx module for it, wordpress, super-cache, etc. etc. put in lots of links to help those who want to explore further * reference and link your assumptions eg. "A more complicated application might result in only 100 requests per second" * link to your source and to the db schema you used * mark up URL's and code references with the code html tag otherwise your writing and the subject matter is good. you avoid cliches and the poor conversational style of writing that other developers have when writing about technical topics
It's not crap ... it's a difference of opinion. :) Anyway ... it's pretty easy to make sure you don't leave any debugging statements in your code ... CTRL-F, or CTRL-ALT F. I realize lots of "the big boys" use debuggers. Lots of people also drive cars with automatic transmissions, and others prefer a manual. 
Not really.. It's perhaps bad that someone would be able to sniff out the username but as long as any server side validation is still done by data stored in the session then it's fine. The cookie just would serve the purpose of showing the username to the user.
OK, this works for you. But you are an edge case, you have a boss who lets you waist time adding/removing echo statements. Your code has no other echo statements. Your code is simple enough to figure out most bugs by reading it. Writting echo to debug is just writting your own throw away mini debugger. A mini debugger that ignores all the good work that has gone before in that domain. I drive a manual tansmission, does that help?
You are an angry person. I have had a long career architecting and building dynamic web applications. I have worked on projects as complex as any out there, and some that handle exceptionally high volume. I'm considered to be well above average in terms of my productivity and code quality, so clearly I'm not "waisting" [sic] anybody's time with my debugging techniques. Just because I do things differently than you and don't rely upon the same set of crutches you do, doesn't mean you should go around slinging insults at my work or make assumptions about the type of projects I've worked on. I do things differently than you. I typically understand the code I'm working on very well. When debugging, at most I'll need one or two echo statements (actually, more than likely I'm using logging instead anyway) to get at the heart of the issue, so it's not like I have a mess of them to clean up once the bug is squashed. Not only that ... but I can debug code effectively no matter what machine I happen to be on ... I don't need to have a debugging environment available. I can get on any old laptop, and fire up notepad if that's all I have available and get the job done nearly as efficiently as if I had a full installation of Eclipse at my disposal. EDIT: FWIW ... I drive an automatic ... but I like manuals. :)
If it's still being validated server-side, then there's no point in storing it in the cookie.
We're not talking about POST/PUT/UPDATE but cached GETs. There's nothing to be validated.
You're validating the session, which would including fetching the user's data if they're logged in. If they're not, that's fine; but even if you store the username in a cookie you would still have to validate their session which requires some sort of query.
I don't get where you're going here. First: Sessions are validated by session id (and user agent mostly) and nothing from the cookies. Second: For such high performance webservices you won't query anything but memcached (or whatever cache you use) and you only access that by a key without a query that can do harm. Third: This still isn't about doing anything but serving cached pages. Theoretically you don't even need to validate the session for this since you're not processing anything. Or am I completely missing the point here?
The session id is stored inside of the cookie. The cookie is sent to the browser on page load and then the server looks up the session to make sure the user is authenticated. Basically think of a site like Reddit where all the pages are available to anonymous users but if you are logged in you get the username box at the top. If you store that information inside of a cookie then the server doesn't need to do any rendering logic on each page load. All the server has to do is serve out the cached pages and the client can fill the username box if logged in. If you are talking about something like a "My account options" page, then the server will need to do authentication + load the user information into the page. I was only referring to vanilla pages with a username box.
I think we're arguing two different things. My point is that if a user is logged in, you can't serve a completely cached page without AJAX because you have to serve dynamic content (a "Welcome, User!" or "View your account" message, account stats, etc). Storing the username in the cookie wouldn't help: you can't trust that the username they provide is accurate so you would have to fetch something at some point (whether it's a session from memcached/mysql or PHP's native session handling).
These are great tips, I'll definitely summarize the benchmarks, thanks.
Any page that display user sensitive data really shouldn't be cached. If you just need to display a user name then you could use a cookie, but if you're going to depend on it for anything that determines an action then you are correct that it would be insecure.
I'm not angry. A debugger isn't a crutch, it's a basic part of your programmers toolkit. Like an editor. You have a debugger only you call it 'logging' and 'echo'. It's a home brew debugger. So in response to the question: Do I need an IDE debugger for large scale web development? Your answer is: No use a lightweight editor and roll your own debugger built into the source code (echo + logging) My answer is: Yes use a debugger in an IDE as it separates code from debugging Both are 'crutches' to help you code. I'm just amazed that you can't see my argument. Let's agree to disagree and stop writing to each other.
If you're inserting the data from the cookie (verbatim, read: unfiltered) onto the page, then that is an XSS attack vector.
Not at all, only if you allow users to manipulate the cookies of other people. A cookie is per-user which means that they can only inject the javascript into their own pages.
Like I said previously, you don't use the cookie for any server side validation or even use the cookie in the server. You just use it for display purposes for the user. It's just done for caching.
I just don't understand how people can learn programming in book format... it never worked for me.. ever... not even in college. Finding code examples, cheat sheets, and tutorials online has always been my preferred method. Still, upvote for the effort :p
Really, you list a function reference from 2001 (I have no words for this listing, other than it's so bad it invalidates the entire list)? A PHP 5 book from 2004? The rest of the books are no newer than 2008, most from 2007 or before? Protip: Learn PHP by doing, from the php.net manual, and from up-to-date tutorials. Don't bother with PHP books unless they are on specialized topics (like security, [Matthew Turldand's Web Scraping with PHP book](http://www.phparch.com/books/phparchitects-guide-to-web-scraping-with-php/), maybe cook book type books, etc). If you're going to learn from books, learn algorithms, software architecture, object-oriented design patterns, etc. Learn language agnostic things.
As a guy that just got a remote full-time contract position at a cool company through /r/php ...good luck to all who apply! I think reddit attracts higher quality on both sides, companies and potential employees.
Thanks to both of you, it's interesting to see both sides of the discussion. Thanks.
Congratulations! It's everybody's dream to work from home (until they realize they still have to actually do the work). Hopefully someone on here can keep your streak alive!
And that's still an attack vector. Consider the following situation, default data is placed on the page meant to be manipulated by JS: &lt;h1 id="username"&gt;$USERNAME&lt;/h1&gt; And the following pseudo-code JS: document.getElementById("username").innerHTML = getCookieValue("username"); Wouldn't you agree that were someone to gain control of a user's cookies (through whatever means) they could insert malicious content onto the webpage (purporting to be content your website produced)? Server-side or not, it is still an attack vector.
Thanks...working from home is nice in many many ways. I love my work though...so doing it is never an issue :). Good luck on your search, there are a lot of talented people here.
Just apply a simple regex to the username value to make sure it's alphanumeric or whatever your username validation requires. That's easy to fix. Otherwise, yeah you might have a problem.
To be honest if there's that amount of access to a user's cookie then there are far bigger issues. For there to be a username there must at one point have been some authentication, most likely this is handled via cookies as well which means that the malicious user could effective take over the identity of the victim. Session fixation would be an equally dangerous problem. At this point XSS is sort of the less dangerous vector.
I think it's pretty cool, but I'd rather write a web app, host it myself, and make it phone-friendly than fudge with whatever missing features PHP for Android decided to strip out. Definitely useful for the PHP-only developer who doesn't want to learn another language, though.
This totally doesn't look legit. A job application that's giving away free iPads? What? This looks like some sort of "WORK AT HOME MOMS NEEDED" scam. Of course, I'm still going to apply - just going to cross my fingers hoping it isn't spam.
Are you saying the CakePHP is a lie? I see no mention of iPad on there. Was the text blurb updated?
Nah - on the actual application: &gt; You Could Win A FREE Apple iPad!! &gt;Now through September 24th, we're giving away a free iPad (drawn at random) to one (1) qualified candidate who meets the basic requirements below! Submit Your Application Today! 
Oh, I didn't think of clicking on the url ;) That just seem like a relatively cheap attempt to encourage people to apply for the job.. Unusual, but probably not nefarious.
Yeah, thats what I'm hoping - its just the combination of the design and the callout for the free iPads makes my spam radar go off.
HAHA - note that it doesn't say "NEW iPad".
Sounds like something someone could whip up relatively easily, by recursively crawling for .php and .inc files within a few given folders, using php's [token\_get\_all](http://php.net/token_get_all), looking for T\_INCLUDE, T\_REQUIRE (and the \_ONCE variants), and building a little graph with it. You could probably use php's [Graphwiz bindings](http://pear.php.net/package/Image_GraphViz/) to render it in a pretty format. Hmm. it does seem a bit too easy. Someone else must have done it already. 
The site's whois says it's in Boca Raton. That city is essentially the spam capital of the world. Not sure what to make of this, beyond judging by the cover. * Spammer capital of world * Work at home! * Free iProduct! Hmmmmmmmmmmm
Now that I took a look at the application site, it looks very dicey to say the least. I mean for a company that is advertising for a web developer to put up some crap like that is kind of telling to me. Looks very spammy...
Sure do. The [inclued](http://pecl.php.net/package/inclued) extension should be *exacty* what you need. It can be used to make maps like [this](http://blog.extend.ws/wp-content/uploads/2008/10/wee-inclued-nocache.png)
callgrind does this. example: http://talks.php.net/presentations/slides/intro/wp_cg.png and so does inclued http://talks.php.net/presentations/slides/intro/wp_inclued1.png
I think books are a great way to learn the theory behind programming, but not-so-much for the practical stuff. As others have said, you learn the practical side by getting stuck in, code examples, cheat sheets, etc. but all of these lack the thought process and explanation behind them, which I think is usually more important than the code itself. Books &gt; 6-12 months old are usually out-of-date in some way, but you still can't beat getting inside the mind of a professional.
Gah! and I've already submitted. Oh well.. I guess my resume is on the spammer list now.
&gt;Definitely useful for the PHP-only developer who doesn't want to learn another language, though. *shudders*
A work a lot with Cake, but already have a full time job. I'm only open for part-time work. Good luck!
inorite, but I'm sure they exist. ;)
&gt; I was only referring to vanilla pages with a username box. As was I. ;)
Thank baby jesus, I have a big project originally coded by Indians that can use this. 
Funny, I was talking about this with a guy at work a few weeks back. They do alot of AB testing but their process is completely manual, and their website is not MVC based. I thought of writing it, but haven't got past a python script that does automated branching and merging for test subjects.
Ditto here...I didn't even think to look for something like this.
Thank you for this...have an upboat.
holy crap, I was just looking for this exact thing this morning.
Sure you can learn syntax and a few tricks quickly by looking at code and cheat sheets, but it's not as easy to pick up on patterns. If you're a new programmer I'd recommend reading a few books on patterns and theory one you get the basic syntax down.
Also, there is zero contact information on the website. Redditors beware.
http://talks.php.net/presentations/slides/intro/wp_inclued1.png OH GOD THE DISK READS
They prefer "Native Americans", fyi.
I saw this on my google searches but I couldn't find a project page, thank you very much!
Lazy web comes to the rescue, eh?
Sarcasm?
[PHP Object Oriented Solutions](http://books.google.com/books?id=dt9erHv5nGUC&amp;printsec=frontcover&amp;dq=object+oriented+php&amp;hl=en&amp;ei=wD2YTPu3NYuqsAOPnfW7DA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=2&amp;ved=0CC8Q6AEwAQ#v=onepage&amp;q&amp;f=false). Not bad for concepts. 
Was it for the porn site?
Doesn't seem to be a terrible book. Seems to really push scoping (sadly a rarity). Paired with the Gang of Four's 'Design Patterns' it would be great introduction to OOP.
The link the the company's website (American registry) is pretty damn plain too. Nothing that would require a rock stat cakephp dev.
xhprof.
Agreed- the problem with that list is that it's all "php" and no theory. I find that the longer I program the more "meta" my books get- more theory, ideas and new concepts rather than "use this function to do this" types. 
Nooooo!
Yes, that's the one :).
Indian as in from India.
Well said. This is one of those things that *can* be done with a regex, but really shouldn't. You gain absolutely nothing by doing this, yet you lose so much.
I think the free iPad thing is a horrible idea too. Our CEO wanted to do it to boost recruiting efforts since the job listing has been on several other websites for a while with very few hits. I can assure you it's a real job, if you get an interview we'll show you the back-end (intranet) application that is used by 100+ sales and marketing people that is under constant development. Sorry guys, it's not some kind of scam. Just an ugly job listing page!
It's true, the American Registry website doesn't do anything, really. Again, it's the intranet / custom back-end software that's under development. Sorry for the stupid iPad giveaway, my boss thought it was the best idea...
Honestly, it's probably less per hour than freelancing. Then again, I get 40 hours a week. I just barely make six figures.
Honestly, we'd still like to talk to you if you're serious about wanting more work. If someone can be productive in a part time situation because they are excellent Cake developers, then it could still possibly work out.
You lucky bastard! Enjoy the job man ;)
Thanks, and I am! Did you apply for it too?
Typically I store a session identifier in a cookie then store that ID in my user table or wherever else I need state data. This is good for a few reasons: - doesn't clutter the server with the client's state data - allows me to extend a session as long as necessary just by adjusting the cookie expiration - load-balancing friendly - only security threat is session hijacking I'll also store non-volatile data like error messages in there.
1. STOP THROWING EVERYTHING INTO A SESSION! Especially if you're using DB backed sessions, it creates unnecessary strain if you have an active server. 2. Sessions are not a replacement for caching.
No, I would have if I had more experience in high traffic projects. Most of the stuff I've worked on is small/mid-sized local companies, smaller non-profits... that type of stuff. If you feel comfortable I'd love to see what the site was (PM), although I understand if you don't. 
Storing multipart forms in the session seems like a bad idea; what if the user has two multipart forms (either the same form twice, or two different forms) open in two different tabs?
I assume you do this to save from doing the look-up every time the user loads a page. I find that the better way to handle this (and still save from doing the lookup) is to store the user data in memcached, retrieve it that way. By doing this you can easily overwrite the cache if an update/change is made.
Just encapsulate it in a cache object and you can start with the session (which is just *easy*) and switch it to memcached or sqlite later on. eg: Cache::save("user data", $user); Edit: removed superfluous $
I think you might be confused about sessions. 1 - sessions already store cookies on the clients computer with the session id. 2 - I'm not sure what the default session expiry rule is, but I know it is configurable. There is no need to make your own session cookie (or your own sessions) 3 - apache can be load balanced if you need that 4 - the only threat was already session hijacking All you really do by storing sessions in the database is use up database queries to fetch the session information rather than just get it straight out of memory.
you make a good point
all I store in sessions are the username/password for the user. And I might store something like a "return to" url in the session if the user needs to login the website can look for the return to to bring the user back to the page he came from before logging in. Most other uses of sessions are lazy at best imo.
It is 'better', I don't know about 'easier' though...it *can* be done with sessions but it is less ideal. There are a few problems with storing user objects/data in the session: * If you store anything else in the session, that also must be rewritten every time the user is updated (or the user data has to be updated anytime something else changes) * Sessions are stored on-disk unless you use a custom session handler which means a disk read every time the user visits. * For the same reason as this-^ a disk write must be performed when updating a session * When updating user data in sessions, you have to first look up the session id in order to update it (assuming you don't store the session id in the user table - which you shouldn't be doing either). With memcached all of these issues are mitigated: * You only store the user data using a specific memcached key, so when you update it, you only update it and not everything else. * Reading from ram is very 'cheap' and fast compared to disk reads. * Writing to ram is very 'cheap' and fast compared to disk writes. * The session id (or some other unique value stored in a cookie on the clients machine) can be used as the memcached key, no additional look-up needed.
I'm not an expert, but I don't think it's a good idea to store passwords in the session - I used to store them as a hash in the session, but now when someone logs in, I store their userid and session/connection info in an active user table. This is nice as well, since I can get the "currently logged on" users whenever I need it. This also makes it easy to generate a connection log or forcefully log someone off (session timeout, etc). If anything changes in their session, I log them out and have them log in again. For me, the password only exists as an encrypted POST variable at the time of login. 
Please label PDF links as such. Think of the mobile users!
1 - I'm aware of this. Using my own cookie gives me the flexibility of having multiple sessions, should I ever have a reason to. 2 - I would rather not mess with built-in sessions (IMO they should always expire after the browser session is ended-- that is what they are intended for. If I ever wanted strictly this behavior, I might use a built-in session) 3 - I'd rather not mess with apache configuration when I could configure it in PHP (more portable this way) 4 - I know. I was saying that my method doesn't introduce any other threats. Lastly, I prefer to re-fetch all of my models from the database on each request anyways, to avoid using outdated information. One extra query isn't going to break your application. Using and resaving outdated information might.
&gt; Cache::save("user data", $user); FTFY
Good point. A solution might be to assign each form a unique ID (you can reuse your anti-CSRF token here; that would prevent two instances of the same form from having the same ID) and use it as an array key. All form data would go into the second-level array.
+1 Sessions are, by default, stored as plain text files on the server. Often, they're in world-readable locations such as /tmp. You don't want any sensitive information to be lying around there.
Doh, thanks :)
Or you could use the [Memcached session handler](http://ca2.php.net/manual/en/memcached.sessions.php). Gives you the best of both worlds, and you can easily share sessions among multiple web servers. Still, I don't think it's a good idea to store entire User objects in sessions. What if the same user opens two sessions in two different browsers, makes changes to his profile in one browser, and tries to do something else in the other browser? Usually I just store the user ID (12345), and maybe the username too, but that's about it.
Yes. If you use a DB and a cache, when you update something, you only have to apply the update in 2 places (or just update the DB and invalidate the cache). This is very easy to do with an ORM, or in your own DB access layer. If you use a DB and sessions, when you update something, you need to apply the update to the DB + an unknown number of sessions. Since you can't access someone else's session from inside a PHP script, you have no choice but to let those sessions go out of sync. If you don't care about occasionally being out of sync (after all, sessions tend to expire after a couple of hours) then I guess it's OK.
What was the difference?
I fixed my post, so now there is not one. 
Ahh, reddit is fun doesn't show that edits occurred
&gt; 1 point 3 hours ago* Asterisk means the post was edited. (But sometimes it doesn't appear.)
"reddit is fun" is a reddit application for Android.
If you, as the site developer, can re-assemble their password in ANY way short of brute force, you have failed creating a secure site. Passwords should be sent encrypted, immediately hashed, salted and stored. No need to ever have the actual password around.
That's what I do now - I keep their password encrypted in a table, and only query based on encrypted strings. The password only exists as a thought in the user's head and keystrokes in their browser. I used to keep an md5 version of the password in a session variable, but realized the problem with that - I haven't done that for awhile. On a related note - is md5 sufficient as a hash for storing passwords in a db, or is there something else I should be using?
1. Encrypted != hash. If you can decrypt it into the real password, you've failed creating a secure site. 2. md5 collisions are incredibly easy to generate, so for anything security-related, it's insufficient. sha1 is a lot harder to collide, but there are collision attacks against it (none nearly as effective as the md5 collisions)... you can use sha with 256 or 512 bytes, but I prefer whirlpool because it's older and less popular and thus less likely to be focused on by attackers. I use it like so: salt = global site salt, built by reading a few bytes (16 iirc) from dev/random and hashing it with a separate algorithm (sha512) username = the username (or email) that is used for people to login with password = their password hash = whirlpool( salt + username + password) Using the username as part of the salt+hashing that I do prevents people from ever having the same hash in the database. Once they login, you can use a session identifier in the cookie, or let PHP handle it. I keep a bunch of crap in the session, but nothing that isn't stored plain in the database (username, user id, etc.).
Thanks - that's really helpful. I was using md5 as a one-way encryption, but I knew it had vulnerabilities. Using whirlpool with salt+login+pw is a good tip. I keep other crap in the session, but it mostly depends on the site. A lot of times I use it for placeholders. E.g., if the user is looking at a calendar, and then they navigate away from it, when they come back, it's nice to go back to the same date they were looking at before - that kind of stuff.
And that's the kind of crap that belongs in a session. It's when people start using it as a cache, or a global data store, or storing the entire User model in it that things start to fray and collapse.
It was mentioned above, but just to clarify again - md5 is not en encryption algorithm, it is a hashing algorithm. What oozra said was good advice. I have a few modifications on it in my own code, namely that I store a salt for each user in the user table and use sha256: $password = hash('sha256', $salt . $password); you can generate the salt with something like: $salt = hash('sha256', uniqid(mt_rand(1, 524288), true)); note that both postgres and mysql have sha1() functions, so you can do the password check in the DB: select username from users where username='$username' and password=sha1('$password') 
I see this quite a bit. Don't create sessions if they aren't needed. They're needed when a user logs in, and when a form spans many page loads. Rarely are they needed otherwise. You can store form data in a session. When it comes to tying a person to a user account, only place the user id into the session. If you're using memcache, use memcached, roll your own session handler, and make use of cas (compare-and-swap). This way, you can work from user to sessions AND sessions to user. "Someone from china logged in as you. Log them out?"
Never understood the need for smarty type things.. why not just use the output buffer to handle templating
until you have a client that wants clean URLs, are using wordpress and Shopp and have extensive customization. Ugh. I still feel dirty.
Why would you need to store the password of a user? My god. At the least just store a serialized array of their groups/permissions or something. I hope you at least hash the freaking passwords. 
exactly. I hate it when clients get pissed that I can't tell them their password, but usually they quiet down when I explain the reasoning.
Don't store wizard state in the session. For wizards, pass data from "step" to "step" by encoding it into hidden form fields in each step. Otherwise you'll be sorry when the user uses the "back" button.
(I obviously store the hashed password, as storing THE password is a security risk and it would be a waste to rehash the password over and over) The problem with caching information like the user name or the permissions, is that the users won't respond to a changed database until the session expires. However if you just store the username and password theyre accessing the website with, then you don't have this problem. The way I see it, is the user and password is the "key" and you need the key to access the account. It doesn't matter how the key is supplied (GET, POST, SESSION...) as long as it contains the right information. 
You should never store an object in the database, in the session, or anywhere else outside the application. PHP object serialization should be "considered harmful". Usually when I see people persisting objects on the session, it is because they are confusing the session with a cache. The session is not a cache. That said, I really hate PHP file-based session handling. Not only does it not scale across multiple servers, it doesn't scale to long running requests either due to session locking.
&gt; Or you could use the Memcached session handler. Gives you the best of both worlds, and you can easily share sessions among multiple web servers. Not really. You still need to know the session ID to invalidate a user's credentials. If you have other services updating the user's settings then the user's session can become stale. Imagine the following: * You have user data stored in your session. * A user upgrades their account through a Paypal link. * Some time later Paypal does a callback to your site telling you user X's payment has been processed. * You update the user record in your cache and database. * The user's session still has the old, stale data. Of course you could pass both the user ID and session ID to Paypal to return in the callback, or store session IDs in the database, but that is just adding complexity. If you just store the user ID in the session and the user object in cache then updates will automatically show up for users. 
What's wrong with putting excess load on the DB server if you have the option of using memcached? What examples would you have of "everything" that would slow the server down? This is my session class: http://github.com/radiosilence/core/blob/master/core/session.php I need to do a lot of reading on memcached, but hey.
Passwords are only necessary to log in a user at a certain point in time. It's not necessary and definitely not best practice to carry passwords with you for subsequent requests.
I've written something on secure authentication a few months back, maybe it might interest you. It's based on a cookie protocol though. [link](http://raza.narfum.org/post/1/user-authentication-with-a-secure-cookie-protocol-in-php/)
The * doesn't appear when you edit a comment within a certain time frame (30 mins, I think).
Several points: 1. Your constructor has a DOC, or depended on component - the $_COOKIE super global. This is really bad and makes me want to rage when I see it. Now your code is much harder to unit test (you can test session code!) and it's not expressive at all. I deal with this daily on a large codebase at work and it'll make you want to pull your hair out. Your constructor should do exactly what it says: construct an object, without requiring unexpressed DOC's. 2. Same thing with requiring the auth.php file in the constructor. 3. Why are you json encoding/decoding session data that's already serialized? Can you override the way PHP writes session data? 4. HTTP_X_FORWARDED_FOR isn't guaranteed to be included in the $_SERVER superglobal so unless your apache/nginx/webserver config is always setting it, it's not a safe bet to just do $_SERVER['HTTP_X_FORWARDED_FOR'] without some type of checking first. 5. Minor nitpick: the colon in the keys of the parameters array that you're inserting isn't required. Entirely personal choice, of course. 6. Good god man, you don't need the fake javadoc type comments everywhere. Run, don't walk, and pick up a copy of Clean Code by Uncle Bob. 4 lines of code to describe a 1 line variable definition is ridiculous (reddit isn't liking the 4 spaces == code formatting) [http://github.com/radiosilence/core/blob/master/core/session.php#L26-30](http://github.com/radiosilence/core/blob/master/core/session.php#L26-30). Name the variable $token, use Doxygen, and then you don't need any javadoc stuff. By browsing the docs, if I see a Session class with a $token variable, I'll know it's the session token. 7. Use type hinting. If you want $db in the constructor to always be a PDO object, tell PHP that so you'll get a fatal error if someone passes in something else: __construct(\PDO $pdo) { ... } My examples are from stuff at work where *everything* is thrown into a session. With a million visitors a day to our site, the session table gets huge, and often that data is redundant (i.e., configuration data that's quicker to load from the tables themselves, cache on disk, or cache in memory).
Thanks for this post, I'm always looking for ways to improve my code, and I'll definitely take all of your points into suggestion. RE: Point 1 - surely the module should fail to load if dependencies are not met? Hence why I have a dependency checking function: `DEPENDENCY::require_classes('PDO')`. I'm generally really confused by this point, it would be really good if you could explain more. Point 3 - It isn't serialized, is it? It's just an array of "extra" data that hasn't been serialized yet, and JSON was the fastest way to do it? Point 5: Do you mean in the passed array or the SQL itself? I like them in the SQL, but agree with you for the former. Point 6: I've always been taught to DocBlock everything, and thought this was a bit much, but got a little obsessed with pretty PHPDoc output. Other decent coders agreeing this is too much is kind of a relief if anything. Do you have any examples of great code? How would you change my `session.php`, exactly? [Is this the book you mean?](http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882) Point 7: Didn't realise PHP even had this, AWESOME. Aye, I didn't mean anything to that degree. I find relying on session too much was quite lazy and unnecessary.
The best practice I follow when working with PHP sessions is not linking to PDFs without a warning that it's a PDF link.
I think I was a little confused about the purpose of your class, it's not a session handler class (http://lu.php.net/manual/en/function.session-set-save-handler.php) but rather a class to handle session data for users. Thus, the stuff about serialization and json en/decoding can probably be ignored. 1. I was more referring to the $_COOKIE calls in the constructor. For example, take this basic call: $product = new Product(10); 1. Under normal circumstances, that should load product #10 or throw an error if it can't be loaded (just assume this is a simple class that loads up products based on their product_id in the database). However, throw in a DOC, or depended on component of a session/cookie variable and you get a mess: public function __construct($productId) { $this-&gt;load($productId); if ( isset($_COOKIE['some_random_cookie']) ) { $this-&gt;price -= 10.99; } } You might be wondering why people do that, but I see it *all* the time, and when I see an object requiring cookies/sessions/other DOC's, it makes me nuts. :) It's also not expressive. By seeing $product = new Product(10), it should be pretty evident what it does (load product_id #10), however if it requires a DOC, it's no longer expressive in what it does. For point 5, the passed array itself. The colon's are requires in the SQL itself. Yup, that's the book. It contains a ton of stuff "you already knew" but was never properly articulated, so it's really eye opening. It's also written entirely in Java, but pretty easy to follow along. It's a short easy read too. I highly recommend it (and xUnit Test Patterns by Mezaros, great but much more in depth book too). I love talking about this stuff, gives me an opportunity to learn a lot more. :)
Yeah, no bother, I should get a better computer that doesn't grind to a halt when it opens a PDF. Just whack PDF in the link.
Thanks for that - good food for thought. I still have some uneasiness about using cookies for authentication because they can be stolen - but if you are using SSL then it seems pretty strong. Have you used this set up IRL? 
Still a little confused about point 1. Would a good way to do it be to have it throw an exception if there is no cookie superglobal available for some reason? Could you demonstrate how you'd write my code instead? Point 5: Neat, I'll have a play. And yeah, it's a replacement for using $_SESSION entirely, as I disliked it.
No, a good way to be not use a cookie/superglobal in your classes at all. Inject them via dependency injection: $sess = new Session; $sess-&gt;attachPdo($pdo) -&gt;setToken($_COOKIE['token']) -&gt;setUserId($_COOKIE['user_id']); $sess-&gt;startSession(); // This is where you'd put the code from the constructor Now, when you go to write unit tests for the Session class, they don't depend on: 1. PDO 2. Token from a cookie 3. User ID from a cookie You can mock your PDO object, and you can create a random token and user_id.
So you're making a class that has less dependencies off the bat at the expense of more code to set it up? I suppose I could rock that. I guess the point is (correct me if I'm wrong) that you can initiate the class without requiring dependencies (and thus do tests on it) and then add things that need dependencies only when needed? I'm very new to unit tests (gah, always skipped over them), but they're high on my priority list of things to learn about. EDIT: I've updated it so now you start the session like so: $s = new \Core\Session(); $s-&gt;attach_pdo($pdo) -&gt;read_cookie($_COOKIE['sid'],$_COOKIE['tok']) -&gt;attach_auth_config() -&gt;start(); Code is updated on github. I am going to make the dependency class so that it ignores requirements if the system is being unit-tested or something.
I've made this exact thing at http://garyshood.com/virus/
Regarding point 1, look into dependency injection design pattern: http://www.google.com/search?sourceid=chrome&amp;ie=UTF-8&amp;q=php+dependency+injection It should clear up any confusion you have. Edit: actually start with this &lt;http://fabien.potencier.org/article/11/what-is-dependency-injection&gt;. I have a lot of respect for Fabien as a PHP programmer.
Cool, much better! Yeah, when unit testing, you should be testing individual units of code and that means minimizing dependencies as much as possible (i.e., dependencies on cookies being set). When I say you can mock an object, the xUnit framework guidelines let you build a "fake" object so the unit of code you're testing doesn't test or require the object you're mocking. Read more about it's awesomeness here: http://www.phpunit.de/manual/3.5/en/test-doubles.html#test-doubles.mock-objects
That depends on just what the heck you're doing. Are you making a photo gallery service that multiple users may use? Are you writing something that lets people blog, and attach pictures? What you're doing and what you're using the images for should inform/dictate how you organize them.
1000 files or subdirs per directory max. The exact structure can be based on any arbitrary metric, especially if you use a database to map image IDs to physical locations. The exact metric and the depth of the directory tree depends on your app. - uploads/123/456/78 (based on the autoincrement ID of the image, 999 subdirs max) - uploads/c5/a7/76 (based on the first 6 hex digits of the image's SHA1 checksum, 256 subdirs max) A problem with this is that you normally need to go through the DB to map URLs to actual files. This involves PHP scripting, which is slow compared to serving static files. My favorite trick is to make a symlink somewhere inside the web root and use that as the public URL. The function that updates/deletes a database row would also update/delete the symlink. Private photos would have no symlink, so the user is forced to go through PHP, and files are served by readfile(). But not all schemes are equally useful. Unless you're careful, your directory structure could lead to unexpected problems when: - A user uploads thousands of images. Thousands of small files in the same directory could cause filesystem performance issues. - A user uploads two different files with the same filename. Don't overwrite the first file! This is why autoincrementing IDs and hash sums can be useful. Tip: readfile() is the best way to send files to clients using PHP. Don't use include().
yes. This all depends on scale that you are trying to do. Best bet is to make the directories virtual - link them in your SQL table to names
I once made the mistake of saving all the user uploaded pictures in the same directory. Once the site went live, after some months there were more than 100000 pictures in that directory. Although performance was not noticeably degraded, trying to work with that directory was a headache. Unfortunately, changing the structure meant changing a lot of code. So, whatever you do, don't let any directory have more than 1000 pictures!
This really depends a lot on your implementation. If you're storing file info in a table I would just use the auto-generated ID of the media and make decisions based on that. * file # 2050 * floor(2050/1000) = 2 &lt;-- this is your directory now /userfiles/2/2050.jpg (for example) Usually for file mapping purposes I use a function call get_file_url($media_id) which outputs the full URL... 
The problem is that when using the back button, the session state isn't reverted. That can leave your application in an unanticipated state. For example, form data could be present in the session that the current page doesn't expect to be there. This may not be a problem if the entire application is carefully designed to take weird session states into account, but it does introduce a defect vector. When passing data from page-to-page via hidden form fields, application state is stored on the client (in the page). This means that no state is changing on the server. This in turn means that the back button is "safe", reverting the state of the application seamlessly with no unanticipated side affects. Care must still be taken to ensure that use of the back button after the wizard is completed doesn't cause the user to see "stale" pages. The POST-REDIRECT pattern can be used to partially address that, along with appropriate HTTP cache headers, and decent form validation that includes the use of nonces.
Have you looked into Postgis (Postgres Spatial basically). You can do a query of the users within X number of miles from your location using great circle distance. This requires a Postgres database though, with Postgis installed. You can then script the e-mails using Perl or sticking with a CLI php script. 
Reading that book and redoing a LOT of code. I intend core to be something that is a load of classes that are either usable individually, or can combine to make a powerful MVC microframework (like in power rangers), that I can essentially use for a long long time in my development. Can you give me any examples of some really great code you've written, and why you think it is great? I learn really well by example.
uploads/year/day/random-name-of-n-characters Easy to handle in code, easy to reference, sorted in incrementing order, there'll never be too many dirs and files per directory is usually manageable. 
Tip: Web servers have had x-send-file for ages. Readfile() is *horrible* and any sort of popularity will kill your server in no time. 
I made a [Zip Code Range class](http://phpclasses.betablue.net/package/3156-PHP-Get-zip-codes-within-a-range-from-a-given-zip-code.html) a long time ago that can use a database of zip codes with Lat/Long positions to obtain an array of zips within a certain range. It's a modification on Scott Mattocks' code to improve the distance calculation. Please excuse the PHPClasses website. I haven't moved the code yet.
this.
News flash: You usually don't get x-send-file with $6/mo hosting packages, which is where most PHP scripts end up being deployed. Besides, if you have "any sort of popularity", you should be serving (mostly) static files with nginx or the like. Unless the majority of your images are private. But then, I was merely cautioning against the incredibly stupid but prevalent practice of using include/require to display images.
If you decided to go with a hosted solution at some point, I know mailchimp does this pretty easily.
I make use of pcntl_fork in my IRC Bot Prototyping framework for asynchronous function calls (with fork and join). The implementation can be found at [GitHub](http://github.com/ZaneA/ProtoIRC/blob/master/protoirc.php#L175). The usage looks something like this: // Fork/Join $child = $irc-&gt;async(function ($irc) { // run some asynchronous stuff return array('some', 'simple', 'data'); }); $output = $irc-&gt;wait($child); // $output contains above array 
Okay, so following the book, I modified my importer function that used globals to be its own class, with functions broken down as much as possible. Old: http://gist.github.com/592787 New: http://github.com/radiosilence/core/blob/master/importer.php Which do you prefer?
&gt; And FOR THE LOVE OF GOD, do not do this in production code. If you need multi-threading, use a different language. Or [Gearman](http://gearman.org/). (Today's Gearman plug brought to you by the letter S, the number 6, and coders like you.)
Sure, I have an article on the homepage of devzone.zend.com about my framework DataModeler. My VC ( no Model) framework Jolt is pretty nice I think. Feel free to browse my github repos: http://github.com/leftnode Jolt, DataModeler, and Hoboken are my most favorite I guess.
If the file id in DB is say 42345, then I would make the file: 4/2/3/4/5.jpg You never have more than 10 files in a dir, and you never have to worry about writing code to make sure you don't have more than 1000 files in a dir or whatever.
Yes - [MailChimp](http://eepurl.com/888M) allows you to send emails to a segment of your mailing list that is within a specified radius of a location. It is free if you have under 1,000 subscribers.
- Put your error console output on the 2nd screen. - Put your project/development notes on the 2nd screen. - Put the project wireframes up on the 2nd screen. - Put your IRC/Twitter/RSS/Whatever client on the other screen. I also use chrome for personal browsing and firefox for development. So having a distinct extra browser window open on the 2nd screen for manual browsing, task management, etc... on the 2nd screen is nice. Then install a desktop manager (I can't recommend one, I haven't used windows for anything but testing in years). Between dual monitors and multiple desktops things stay nicely separated and organized.
C'mon, you can't figure this out on your own? One huge screen with a browser, Firebug, and the PHP docs, and another huge screen full of code. Get Ultramon or DisplayFusion and make the most of it.
You need to learn to set up your development environment for what you have. If you take a single monitor approach to two screens, of course you won't find much use out of it (some of this might just have to do with the IDE your using is assuming a single monitor, another part likely to do with how you only consider 1 screen.) In netbeans I just click the green "run" button and it deploys the code to my web root directory, then it opens up the web page in firefox which is open on my other screen. It's also just generally convenient to be able to leave the IDE out while accessing other things on the computer. Maybe I need to look at the documentation and see why my code isn't working, maybe I want to look at my revised version of the code and compare it to an older version. Maybe I need to browse through windows explorer, and if i need to drag and drop files into the IDE I don't have to do the ackward swapping windows around thing. Whatever you do, don't use one monitor for one activity and the other monitor for another. Eg don't have your IDE open on the left screen and reddit open on the right so you can browse reddit while convincing yourself that your are actually working on some code because your IDE is open. Make sure the activities are generally related atleast. 
Give me a break it's my first day using dual monitors :) Thanks for pointing out Ultramon and DisplayFusion, I was a little disappointed there was no toolbar on second monitor (Win 7), but looks like Ultramon/DisplayFusion takes care of it. Which one do you prefer? Oh and thanks for reminding me about Firebug, having full screen Firebug on second monitor is really really cool.
I had no idea netbeans could do that! I'm gonna have to give it a go.
Use your imagination. Be creative.
A tiling window manager will do wonders. (Also true for single monitors.)
Err what? x-send-file functionality drastically reduce load on servers when used. Any host who know what they're doing will have it enabled. The Nginx tip is spot on, though! I've been using it exclusively for a long time now. I'm so in love with it that I hang out in #nginx all day and work on improving the wiki. So +1 on that tip.
Pretty sure the point of two monitors is to have one dedicated to reddit at all times. Nice try though.
protip: get one of those logitech mice that have a tiltable scroll wheel, then assign it a keyboard command. Assign the same command in Ultramon to "move current window to next monitor" then flick your scroll wheel to move your window to the other monitor. Productivity++ !
In before Postgres fanatics storm the thread.
For a decent AWS tutorial, visit [here](http://cykod.com/blog/post/2010-09-blogging-in-the-cloud-scaling-wordpress3). Without knowing the details, you should be able to use MySQL for a couple million records. I used to work on a site that... well... let's just say it didn't have the best database design and didn't use any caching, but still handled about ~18 million records using MySQL.
Just a note, PHP is a programming language, you might get a better response in /r/programming.
Holy fucking hell, if you don't know the strength and weaknesses of different dbs or are not willing to investigate, you should not be running a web service with thousands(never going to happen) of users. Research, learn, grow. FUCK!!
while on that topic, any good tutorials out there on caching of databases? I'm starting some work on a project and would like to learn about caching and design the schema with scaling in mind as well ..
Hey!!! I used pcntl_fork in the FIRST PHP irc bot, my PHP-Egg project over at sourceforge! Beat you by a decade :O
Postgres fanatic checking in... but not why you might think. Besides the plethora of features, PG has one more major advantage over MySQL nowadays: it's not controlled by Oracle. OpenSolaris is dead, they committed enough bad acts to make Gosling leave, and their patent suit against Google continue to show the kind of company that Oracle really is. Now they control the official MySQL distro, and it's still not clear if they're going to actually keep their word and continue development in a sane way. There are numerous forks, and it's also not clear if one of them may become dominant. From a corporate point of view, Postgres is a safer bet for long term existence. There's no evil corporate overlord to screw it up. Feature-wise, it's still missing built-in multi-master replication, but only insane people use it. I'm insane. 9.0 has [group\_concat](http://www.depesz.com/index.php/2010/02/17/waiting-for-9-0-string_agg/), but they spell it string_agg. I think that was the last thing I really missed...
I currently use 3 monitors at work, one has the ide one has browser(s) and the third has a couple of consoles tailing the apache error logs.. I first started using 2 screens permanently when the matrox g400 came out. It is absolutely second nature. Every workstation in our office has at least 2 screens and some 3. And I am the only developer here mostly it i people using outlook and office apps and web browser.
I don't have any I could recommend off the top of my head, but look up tutorials on [Memcached](http://en.wikipedia.org/wiki/Memcached) and buy [this book](http://www.amazon.com/gp/product/1590597699/ref=oss_product) to learn about database design and schema. Also learn [the difference between InnoDB and MyISAM](http://www.kavoir.com/2009/09/mysql-engines-innodb-vs-myisam-a-comparison-of-pros-and-cons.html) and [where/when you should use them](http://www.mikebernat.com/blog/MySQL_-_InnoDB_vs_MyISAM). Most people leave the table as MyISAM when InnoDB might be a better option for a write-heavy database. (ninja?)edit: You might want to look up caching solutions specific to PHP, like caching dynamic pages as flat files.
I have three monitors 1) browser + debugger 2) docs + gmail 3) emacs
Awesome. I massively refactored my initial session class this evening, based on stuff I've learned already from that book. What do you think? http://github.com/radiosilence/core/blob/master/core/session.php Thanks for all the help, man. Models can be a fucking pain in the arse, can't they? My [model class](http://github.com/radiosilence/core/blob/master/core/model.php) is really messy. I'm not that bothered about developing it right now (basically doing a few personal projects using core and then making sure model is powerful enough for them).
I'm not saying I did it first, nor did it best, but there is an implementation of a fork with a blocking/non-blocking join plus the ability to pass serialized data between the child and parent. It isn't ground breaking by any stretch but it is relevant to the article at hand and could be useful for anyone reading it.
Another thing I do, not as much when programming, but more when i'm doing something with more refreshing (xHTML or CSS) I will set the browser to reload on its on after a while (only if i'm working on a local machine though, don't want to hammer a remote machine!).
Serialization makes it impossible to query against any serialized property of the object without parsing the serialized data. If you needed to create a report against a property, you'd need to unserialize every record, one by one, just to extract the property. It's an insanely bad idea for data storage. Serialization is great for temporary storage, not for permanent storage in a relational database. Now, document-based databases ("NoSQL") are a different matter entirely...
Wow way to troll. We all learn best by experience and as stated my experience is all in mysql. I have researched other options and I trust people way more than docs. Docs can't tell me about potential pitfalls halfway through development.
But can I cluster or ha pg?
Yes, though honestly it sounds like your app would do fine as one instance per client, unless I don't understand something and all of the data would be shared between clients. Even then, you're only talking about a thousand users per client with hundreds of clients... hundreds of thousands of records? That's a trivial number for any modern database when properly tuned.
A good point, yes, NoSQL databases are different, of course.
Some say when you use two you never go back to one. I say the same thing of three. I use three monitors, and I know I am more productive. I use the center display (24") for my primary tasks like coding, and occasionally I will actually run two classes or files side by side because the screen is so wide. Right monitor is for web stuff when I'm coding. If I have to look something up on the internet while I'm coding I do it there, or if I'm programming in PHP I use it to see the changes I'm making. If I'm using the main display for one file/class, and I need to be working with a closely related class, I'll put the second class on the right screen. Left screen is for AIM, IRC, Putty, FTP, etc. Sometimes I move the browser over there if I need two coding perspectives and the web. Bottom line is I multitask up the wazzoo. Having many screens is so much easier than tapping Alt+tab twice to cycle through three windows. One other neat program you may be interested in is [Windows Layout Manager](http://www.stefandidak.com/ramble/windows-layout-manager/). It allows you to save screen layouts, and you can switch between them very quickly and easily. Enjoy the new productivity!
Exact same layout that I use, increased my productivity so much over alt-tabbing to refresh a page.
While I do not agree on the form of his argument, I do agree partly. I certainly hope that the one in charge of a project of at least in charge of choosing the technology for a decent scale website can do the difference between the different DB systems and their respective engines. Like why use InnoDB over MyISAM in certain cases. This is kinda basic knowledge. It makes me wonder if you know anything about other optimizations independent of the database like request caching, object caching, connection caching, charset or datatypes to use. Also by design: normal form database with triggers and stored procedures. Views to access that normal form in an easier manner. On a mid-scale project like yours, you worries shouldn't be on the database you will choose, but your knowledge of your tools. --- edit: It is possible to manage millions of rows with a SQLite database in a very efficient manner, all depending of the type of usage, so really, go check around.
Two monitors are very usefull. 1° monitor: Komoto Edit 2° monitor: Reddit 
By asking us for information he is trying to learn more. He knows he's in over his head and is looking for more information. We shouldn't put him down for that.
I do not want to bash, my point is really that before jumping to chapter 7 of the book of databases, one should read the chapter 1, and 2. In that particular case, have had he known that all the databases are viable for a project so low-scale, he just wouldn't have worried about the said question and thus, his learning would have been proactive *and* he'd have answer his original problem
Dual monitors + multiple desktops = amazing
I do the same thing, multiple desktops. But using two monitors too. You are sitting too close if you have to move your head.
Just use the second monitor couple of days. I didn't notice any difference at first, but after a while, you start to manage windows in different way. And when coding PHP, I usually keep vim on my main screen with terminal and firefox on the second monitor. On firefox I display PHP resources/project I am working on. If you play games at all, make the game run in windowed/noborder and drop IRC/chat to second monitor.
I definitely prefer DisplayFusion.
That looks very interesting! Thanks for the link!
 Dual Monitors for [PHP?](http://qualitypointtech.net/forum/viewforum.php?f=13) not a bad idea
most of the time when we store data it becomes query-able/indexed. when you serialize and store an object, you obviously lose this. you would have to rebuild the object to pull its data. the state of the object can get quite messy. what happens when one instance is un-serializing the object, where does it exist? can other instances (think requests) access it? finally, when you serialize and object you will lose all of its resources/dependencies. so you will have to reset/rebuild everything upon un-serialization. it might be easy to re-inject a database connection, but can get ugly when your class starts extending 3rd party frameworks (something like an orm or action controller). that said, there are situations where serialization can make sense. if you need to pass an object (some really odd data structure) to another system over some 'not php' format. or an object that takes so long to construct that you would need to cache it in serialized form. i believe memcached has pretty simple php/object/serialization support. ps: everytime i have used serialization (and its rare) is when i needed to cache some long living (but not permanent) data structure that took a long time to construct/build/calculate. 
Here, have a cookie for your massive epeen.
Need a small one or two tables? sqlite Need a large one or two tables? mysql with myisam tables Need a relational model and possible clustering? postresql or mysql with innodb tables Personally, I like mysql just because of their Mysql Workbench... schema sync ftw! 
That's like asking how to manage your property. **what property???**
Remember, google base its search results on your past search history as well as your location. It is a pain in the ass a lot of times. Set up 2 google accounts, home and Work. ;) 
I actually want 3 monitors but still convincing the boss on that one. When developing a website, you generally have 3 main applications open your Code Editor Your Browser Your Database Coding with dual monitor allows you to write code based on Database fields without switching all the time It allows you to visually see what you want It allows you to FTP without switching It allows you to chat and code without switching &gt;&gt; It allows you to browse Reddit while Coding. &lt;&lt; options are endless with 2 monitors.
Each setup has its dangers, but I think this is a fairly "secure" protocol. You would be amazed to know what shitty authentication mechanisms are used in some popular sites. I use this in all my (professional) projects, although not always with SSL enabled for cookie transfer.
Tip for the lazy, too. Have your Start/Windows button to the left of your right monitor. You're never more than a screen away from the menu.
Looks awesome! Yeah, Models are a different bag of monkeys. Personally, I'm not a fan of ActiveRecord and much prefer models that are decoupled from the datastore. That's how my DataModeler project works. Doctrine is also much more advanced/older and is worth investigating.
**&lt;serious&gt;** this is my mac at work, really... the word "porn" is not on my browser's cache. thanks to incognito. **&lt;/serious&gt;** 
I have 5 monitors (thought one of them is a small 7 inch mimo). all are widescreen, but one is in portrait mode. From left to right, there is : 1 ) My outlook monitor. That's where I open the client requirements so I don't have to print them. Usually, I just take the client's e-mail and reply as I go. 2 ) My portrait monitor with my IDE loaded. That way, I am able to see 91 lines of code ! 3 ) My main monitor. It's a little bigger. That's where I test the website I am working on. I always work directly on the server because I am using a complex CMS. 4 ) That's where I have WinSCP loaded (to load new files and check in the upload process), my Skype to chat with employees and clients, etc... My mimo is in front of 2 and 3 and lets me watch videos while I work. I can simply hit ctrl+S on my IDE and WinSCP automatically uploads it. No need to Alt-tab, just move the mouse right. It's a sweet setup...
Just noticed it was a News Feed, We are never safe from the porn.
I use MySQL with all my PHP projects. I'm hooked. It's just so simple and obvious. It saves me so much time to not have to learn intricate database language when I'm busy with PHP. There's a lot more I could be doing with MySQL code, but PHP can do it all too. Plus it has MySQL commands when you need them. It's just quick and easy. Also, what is the idea for this site you're working on? It sounds quite complicated.
My preference has always been Ultramon, though since I switch to Win7 I've had no need for any third party apps.
Been using multiple monitors for over 5 years now, I can hardly stand being on a PC with only one screen. I'm actually shocked that you're struggling to see the value of it. You've never had to reference some code off of php.net and found yourself memorizing each line, alt tabbing, typing it, alt tabbing back, memorizing the next line, etc? Now you can have your code up on one screen and your reference on another. When you're done with your reference material, switch back to the tab that has your website in it. And on a side note, why are you alt tabbing before hitting F5? The point of two screens is that you can have two things running full screen at a time, there's no need to alt tab between them.
well i'm expecting hundreds of clients to start but that number could also grow into thousands as well, and it would be possible for any client to have tens of thousands of users. the numbers can very greatly, i'm just expecting several million records to be safe. and that's the other thing, I dont want 1 instance per client. I'd want all of it in the same database.
Yes. Thanks god.
guess more background is needed... I normally start writing and end up with a small novel i figured being more vague would help me, guess not lol. Ok so I've worked on sites which have thousands of users at any given point, all custom built sites with your standard LAMP(php/mysql) stack. I've built the servers running these sites ground up making every decision on hardware and software. My problem is the fact that with a properly tuned database(indexes, innodb tables where necessary, etc) that once hitting around a few million records on some of the more queried tables, the overall site performance really took a strong hit. I looked into Clustering, which was an utter failure with MySQL, I ended up settling on replication, which because of of how the site was built and the fact you have to specifically build replication into your code, it went underused. so all said and done? we out grew mysql. I've looked into Postgres, and some no-sql type dbs(looked hard at mongodb) given all that the real question i was hoping to have answered is from people who have built a popular site with some of these technologies. I can read docs all day, they wont tell me how it actually works. case and point: MySQL can advertise clustering support, but if you ever set it up be aware of this: you need 10 times your database size in ram, anything less and it's ridiculously unstable. even with all the said ram necessary, it still wasn't that stable either. It's been 2-3 years since i came to that conclusion so things may have changed, but it's still something I had to invest time and hardware into which didn't yield any results and I had to abandon it.
Any modern database should be able to handle 10,000 users and 10,000,000 records if you give it good enough hardware and make proper use of indexes. What would the size of the database be? 100GB max? That's way below the "web scale" that everybody is talking about. Unless you're using an embedded database such as SQLite, or a brain-dead storage engine such as MyISAM, you should be fine with any client-server architecture out there, from MySQL to PostgreSQL to MongoDB to Cassandra. So don't worry about the size of your DB. Focus on the **features** you want. Having said that, another Postgres fanatic here.
OH MAN ... I have dual 23" monitors at work, and I get depressed when I have to go home at night to my lone 19" monitor.
**TSExO.png** apparently so does imgur :/
So, these are just projected figures? Design for what you *know* your traffic will be, and scale as needed. Don't design for scaling up front, you'll end up making bad decisions.
Thanks for the links! :)
Well, this is in fact, totally different. You should have asked your question precising these facts right away. It would have spared you my comments and simplist comments like "add indexes". From my experience, PostgreSQL is really strong and stable and much more potent for datatype. I never did clustering or replication with it but since the overall product seems better, I would give it a try, do some prototypes and testings (fill your database with fake rows and generate thousands of parallel requests). MySQL on the other side is very easy to manage. I did setup replication a couple of times without any problem. The best is to put two servers in dual master and the others slave. This means that you have server A, which is master and slave of server B. Server B is also a master and slave of server A. That way, you can write to both server A and B. You can only do that once so use other servers if needed for read-only access (as slaves). --- But your real problem remains. The MySQL engine is bloated and suffers when you have too much rows so scaling won't help you. Moreover, MySQL doesn't support row locking. So if you do a transaction updating a row, the whole table gets locked. One thing, do you need to do some stats, grouping, etc. on those users? Because one option could be to use one XML file or one SQLite database per user. That would solve all your problems because absolutely no locking would occur. You could always start a cronjob that would go through all your records and convert them in one database to do other bookkeeping. If those options aren't possible, go with PostgreSQL. 
You can limit damage from cookie stealing by making the IP part of the salt used to generate the token. http://github.com/radiosilence/core/blob/master/core/session.php#L330 Where `$this-&gt;keyphrase` is a salt specific to site configuration.
[multimon](http://www.mediachance.com/free/multimon.htm) will put a taskbar on each window, and it's free. (that's about all it does, though)
As long as you had the form ID in get, this would be an excellent solution.
Surely session would make handling of this easier and would allow a user to move around a form with ease (IE going back then forward without loss).
They are both equally easy, but using the session has side-affects, as I described.
Outside of fulltext search, there is absolutely no reason to use MyISAM over InnoDB when you're using a modern version of MySQL.
I was reading a tutorial on dependency injection. For *required* dependencies ($pdo), is the something wrong with having them injected into the constructor? I was actually thinking of splitting Session into SessionHandler and plug-in-able SessionStorage (pdo+cookie, memcached) and having the session class have them injected into it, but for now this works.
Thanks for the heads up. I use SecondBar on my macbook to give myself a menu bar on both screens, so that's the equivalent for those of us unfortunately stuck in the reality-distortion field.
InnoDB performs row level locking, and that will slow down your select queries. So: * if your table is mostly used for reads or needs full text search -&gt; MyISAM * your table is under consistent reads/writes, needs transactions and anything else (which is not covered by the first rule) -&gt; InnoDB
I really like this ... thanks!
A few years ago I was inserting the entire .COM TLD list from verisign into a database and the process had it's bottleneck on DB inserts... MyISAM was about twice as fast at processing them. Not having to log transactional data and keep things ACID compliant keeps inserts/deletes running faster. Did they change innoDB to use some clever hack to get around that which I hope you'll be kind enough to cite? Point being, for bulk data processing where you just need a giant list of crap, MyISAM is more efficient. 
&gt; [...] **difference between the different DB systems and their respective engines**. Like why use InnoDB over MyISAM in certain cases. You failed at your own critique. :) &gt; Moreover, MySQL doesn't support row locking. [InnoDB has row level locking](http://dev.mysql.com/doc/refman/5.0/en/internal-locking.html)
What exactly are the side effects?
Why do I fail at my own critique? And thanks for the enlightening on InnoDB
very nice for quickie code tests
&gt; Not having to log transactional data and keep things ACID compliant keeps inserts/deletes running faster. In other words, if you don't care about the integrity of your data, MyISAM is better. &gt; Did they change innoDB to use some clever hack to get around that which I hope you'll be kind enough to cite? http://www.mysqlperformanceblog.com/ Not being snarky. Many of Percona's patches have made it upstream into the official InnoDB plugin, and they have their own distro for those that haven't.
Neat execution but really it's an update of scripts I remember from various hacker cleanups; phpshell. Definitely one of those ideas that's best left to theory and fun than production IMHO; imagine the havoc this could do if left unsecured ;) That said, I'm trying it out locally and it *is* pretty well executed though it doesn't handle newlines or heredocs very well.
There technically isn't, but if you're testing parts of your class that don't require PDO, then you always have to inject it (or a mocked object of it). While there's nothing technically wrong with it, I don't recommend it.
"Spammers will be banned immediately" - how fucking ironic.
I'm implementing this into my phptutor app. Thank you *very* much. The only other alternative was a GPL'd pos that i couldn't legally bundle.
If your project is a web app or REST API, your best bang for the buck might be a web cache. It's generally easier to install Varnish and stick in some HTTP headers than to architect Memcache into the picture (which in turn is still vastly easier than anything else I can think of implied by the phrase "caching of databases"). 
&gt; imagine the havoc this could do if left unsecured ;) According to the author, it only runs on localhost.
A second monitor for your system isn't some massive technical feat. You just need to have a video card that supports dual monitors. As far as the experience is concerned, it's just like using a computer with one large monitor. You extend your desktop to the second monitor so one half is on your primary monitor and the other is on your secondary monitor. To move between the two monitors you just move your mouse. Switching between programs with Alt+Tab is the same as with one monitor. As far as PHP development is concerned, dual monitors are handy because you can have your IDE/notepad on one monitor and a web browser on the other. This is great because you can actually see what you're working on while you code. Want to refresh the browser? Alt+Tab, F5, Alt+Tab and your browser's refreshed and you're right back on your IDE window.
Oh, you poor people who don't use an IDE. A PHP console is standard in them.
LOL. I'm pretty sure I saw this guy at FrOSCamp last weekend. And now he's on reddit. Coincidences like this sometimes amaze me. I mean, what are the odds?
MySQL WB doesnt have an easy way to apply a UNIQUE INDEX across multiple fields in the same table. It's kinda nasty - phpmyadmin handles it much better.
The state of the session having been modified. Obviously.
Yea, WB is still a little immature, but at least you can build ER diagrams. 
Thanks!
Okay, I've split the session into a handler and various remote/local storage classes: http://github.com/radiosilence/core/blob/master/core/session/handler.php http://github.com/radiosilence/core/blob/master/core/session/remote_storage_pdo.php http://github.com/radiosilence/core/blob/master/core/session/local_storage_cookie.php Each with an interface: http://github.com/radiosilence/core/blob/master/core/session/interfaces.php Example usage: import('core.session.handler'); import('core.session.remote_storage_pdo'); import('core.session.local_storage_cookie'); import('core.exceptions'); $sh = new \Core\Session\Handler(); $srp = new \Core\Session\RemoteStoragePDO(); $slc = new \Core\Session\LocalStorageCookie(); $srp-&gt;attach_pdo($pdo); $sh-&gt;attach_remote_storage($srp) -&gt;attach_local_storage($slc) -&gt;set_remote_addr('1.2.3.6') -&gt;start(); What is the difference between a factory and a container? I might make a central system container and then have a container that can generate sessions or something. It's a lot of work to simply start a session, so I was thinking of using somthing like a container. There's a good article by fabien but the end result is waay more engineered than I need (though it is cool).
LOL, hi vusys.
I can just open another terminal and run PHP there... I personally hate IDE's, none of them really works. Only that I can use is the visual studio for c++ coding on windows. But for everything else, I just launch vim. Especially when I code php, I like to open ssh and use vim there. I have tried almost all IDE's, but all of them have been bloated, slow and annoying things. With vim I can edit the code for source control I have svn/git.
Because you said that he should know the difference between the engines in MySQL, and you weren't aware that InnoDB has row level locking.
I was indeed :)
It's not really related to PHPShell at all. My script just executes php on localhost, while PHPShell provides shell access to a remote box to which you can't ssh. As for newlines and heredocs handling, not sure what you mean, but feel free to create feature requests on github (or better, pull requests).
I probably just remembered because you joked about making the flash presentation in French, anyways cheers to the first redditor I've ever seen in the flesh ;) Did you generally enjoy FrOSCamp? Personally I found it lacking in substance. It was interesting, but not really in depth, nothing really new, know what I mean?
Actually the flash talk was the only talk I attended because the speaker is a friend, but the rest of the time I was at a hackfest, so I can't really speak for the other talks. It was a nice place to meet with some guys I usually never see, but that's what most conferences are. :)
I used to despise IDE's, but now I can't imagine coding without hints, autocompletion etc. NetBeans isn't perfect, but sure as hell beats coding in a textarea.
Yeah, it would be nice. Yeah, it's very difficult.
Think of TTTTTTTTTT and HHHHHHHHH as special "quote" characters, for spooling multiple lines into a single text blob. 
If I were to want to read more about this what should I search for?
It's a terrible bit of obscure syntax, that you hopefully won't need much of in practice, but [here, I guess](http://www.php.net/manual/en/language.types.string.php). You may benefit more from learning [output buffer](http://php.net/manual/en/function.ob-flush.php) functions, if you want to move your html email contents to a plain php file.
I think you're getting confused by the &lt;&lt;&lt;. The &lt;&lt;&lt; operator allows for breadcrumbing. Here's the same thing formatted in a more direct "java"-like manner: &lt;?php $fromAddr = 'admin@example.com'; // the address to show in From field. $recipientAddr = 'xah@xahlee.org'; $subjectStr = 'Thank You'; $mailBodyText = "&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt; &lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"&gt; &lt;title&gt;Thank You&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;&lt;b&gt;Your login is:&lt;/b&gt;" . $POST['login'] . "&lt;br /&gt;&lt;b&gt;Password:&lt;/b&gt;" . $POST['password'] . "&lt;br&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"; $headers= "From: $fromAddr MIME-Version: 1.0 Content-Type: text/html;"; mail( $recipientAddr , $subjectStr , $mailBodyText, $headers); ?&gt;
It's called a [Here Document](http://en.wikipedia.org/wiki/Here_document)
Thanks for your help! I will take a look at both.
OK.. I am pretty sure I understand now. So, I am guessing that this person used the here doc to "quote" the html so they didn't have to escape\ all of the double quotes inside the html. 
That there is an (extremely obnoxious) Here document, a doubled quoted like string used to more efficiently format text in your source code...
What's the pay? Er, open source... nevermind.
I'm decent, but not confidant enough to let any of my terrible code into the wild. 
I thought it was a little ridiculous, especially coming from someone trying to show others how to do something. 
&gt;$mailBodyText = &lt;&lt;&lt;HHHHHHHHHHHHHH It means, "append the following text into $mailBodyText until you come to HHHHHHHHHHHHHH" The HHHH and TTTT's are arbitrary. They are used by the OP to mark the end of text to copy into a variable. Usually, people just use something like "EOF" or "EOL" but you can be creative like that to avoid a collision with assignment text. 
[What?](http://www.google.com/search?q=define:confidant)
Yeah, and this "someone trying to show others how to do something" is also repeating the #1 error committed by PHP tutorial writers: the example has major security holes in it. OP: Spot the holes, fix them, and you'll be already ahead of a lot of PHP programmers.
Do you have an example link to someone's implementation of a moodle forum? I tried visiting the "Moodle Lounge" on the moodle site itself, but it wants me to register an account. Not going to do that just to see how ugly it is. :)
Is there a demo where we can see just how nasty the forum module is? Everything on the moodle.org site seems to be behind a login, and not many people will bother to create an account. BTW, my University recently began to transition from WebCT to Moodle. Didn't know it was open source, though. +1 for my University!
Are you a Moodle representative or just a Moodle users hoping to get some free work done rather than pay for customization? 
1) Are you a listed developer with write access (do you approve changes)? 2) Do you know a developer with write access who can help approve changes? 3) Have you developed for Moodle before - do they know of your work? 4) Do you have a system installed for testing? I ask these questions because the Moodle developers may not like these changes, so any development on our part would be wasted. A patch could be made as a third-party install, but then if Moodle updates their codebase then you have to keep coming back to re-patch the patch.
possibly confident? What's grammar doing in a programming forum?
In case you actually were wondering what he meant, other than simply criticizing his misspelling, he meant he can write functional code but doesn't want to receive any critiques from it from anyone.
The pay is saying to a future employer, "I did some open-source work!"
is there anyway to indent the HereDocs? I remember in perl, I could just quote the EOF strings like this: print &lt;&lt; ' EOF'; EOF in PHP it can't be indented? because it really messes up my code formatting :(
Also make sure you sanitize user-generated data, like $\_POST['login']. htmlentities($\_POST['login']); would be a good start, or steal the xss cleanup function from Drupal.
http://blog.jgc.org/2010/09/on-being-nerd.html http://theody.net/elements.html http://catb.org/~esr/faqs/hacker-howto.html#skills4
Nope, just criticizing his misspelling. And if you don't want critiques on your code, you can't be a very good programmer--learn to accept that you're wrong!
They actually seem to be hiring: http://moodle.com/jobs/
Yes, if you must do something like this please use output buffers instead. use $var = ob_get_flush(); to put the content of the buffer into a variable if you need to.
Haha did you just link me the 'how to become a hacker' site. I do like that glider. At any rate doesn't my inability to master English just make my point, ie that I shouldn't be contributing to an open source project that much more valid?
It's called "heredoc". www.php.net has good documentation: [heredoc](http://us3.php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc)
my editor can edit files directly on ftp/sftp so no need for winscp. also i have good ftp/sftp client so no need for that god damn piece of software too. 
They didn't do it because it was opensource, they did it because it was free
I... actually like how moodle is set up. It's nice and simple. Reddits threading system is unsimplce and choatic.
http://php.net/manual/en/language.types.string.php PHP 5.3 also has Nowdocs where "Nowdocs are to single-quoted strings what heredocs are to double-quoted strings. A nowdoc is specified similarly to a heredoc, but no parsing is done inside a nowdoc. "
You don't have to actually create an account, just click the guest login button. I have no idea why they do it that way.
damn, totally unrelated, we are using moodle in our Systems Acq. Integr. &amp; Imp class this semester
I am pretty positive the end marker must always be on a new line, with no indentation. It sucks for formatting sometimes, but I am sure there is a logical reason behind it.
Actually, no. I mean that you aren't trying hard enough. So do. *then* you can contribute, and become a hacker!
I never post in /php/ and havent fully read this post, but can't you do something like SELECT * FROM people WHERE hair='$hair' AND weight='$weight' and race='$race' ORDER BY id DESC Of course the query would depend on how many variables they are searching by, so just get that into a variable (how many fields they edited/want to search for), and do something like if($searchterms=="1"){ $query = "SELECT * FROM people WHERE $whattheywant='$whattheyentered' ORDER BY id DESC"; } else { if($searchterms=="2"){ $query = "SELECT * FROM people WHERE $whattheywant='$whattheyentered' AND $secondwhat='$secondentered' ORDER BY id DESC"; } else { // three vars } } if that makes sense.
heredoc is seriously evil shit. not only ugly but leads to insecurities. use sprintf
I don't like that. My editor can do that do, but I prefer to go through winscp. I don't know why. Perhaps because I've been doing it for so long...
We used to be on WebCT, but made the transition to Sakai because Moodle didn't have a lot of the course/account tie-ins that Sakai has. Moodle is not very flexible unless you like programming in PHP.
Some clarification on exactly what the uploaded .php file should look like, would be helpful. Possibly a verbose "tutorial" example for 99 bottles, or something?
Yeah, educational software *has to* be clunky, awkward and nasty to use. It's the rules, as laid down by Blackboard.
I doubt it. Software installation costs time and effort. So does the inevitable customisations, which you can generally only do yourself with open source.
Well that was a waste of 60 seconds... 
... it's about as simple as you can get with threading... perhaps your issue is with threading in general, in which case SHUT UP YOU HIPPIE! 
Uh... what holes? It uses $\_POST and it's pretty clearly an example that makes no sense in production anyway... I mean it just emails whatever you POST to it... 
Yeah, that's how I do. And yes, I use two 22" monitors also. I just moved to college and was only able to take one. It hurts. :*( I actually haven't written any code since I got here.
I never understood why people learn without books (even without physical ones, I hate e-books). Different strokes, I guess.
Yeah, but so do license renewals.
Yes and the diagrams are nice however they don't always reflect the underlying schema with perfect fidelity and that is dangerous.
I would like to see how people solved those troubles so I can improve my coding skills, though it would lead to other people to refactoring and not to learn by themselves
The PHP file can look like you want, as long as it obeys the rules given on the rules page and the outputs are similar down to the newlines and spaces. For the examples where input is needed, I think it's set in a constant like define('WORD','something').
&gt;their patent suit against Google continue to show the kind of company that Oracle really is. Interestingly enough, it turns out Sun was going to sue google over the same thing before they got purchased.
Let them refactor, still won't help them in the long run. I do agree in the sense that the code shouldn't be available from the current contest while it is active.
I'm also looking for this.
You'll need to evaluate those scripts manually after they load; I don't think there is any other way. Here's an example of how to do it: //first, plonk that response in your element var div = document.getElementById(divId); div.innerHTML = response; //second, traverse through &lt;scripts&gt; that are children of your element var x = div.getElementsByTagName('script'); for (var i = 0; i &lt; x.length; i++) { eval (x[i].text); } And also a 'gotcha' to be aware of if you get round to it: in **IE**, the innerHTML properties of &lt;table&gt; and &lt;tr&gt; elements are read-only (preventing you from replacing their contents easily), keep this in mind when you want to involve AJAX on a table/row basis.
I have used this one a few times and it uses a mySQL database and is easy to understand and implement. http://www.opencrypt.com/blog.php?a=29
http://www.reddit.com/r/PHP/comments/d076a/rphp_can_you_point_me_towards_a_decent_free_php/
Your question is rather value, what do you mean link to a database? 
You say you are a novice, my advice to you is to take the an hour or so to learn [jQuery](http://jquery.com/) ([direct link to jQuery Ajax method](http://api.jquery.com/category/ajax/)); someone else will handle the messy parts of cross browser ajax calls. And [let google host it for you](http://encosia.com/2008/12/10/3-reasons-why-you-should-let-google-host-jquery-for-you/), you don't even have to deal with an additional file. It's great that you can homebrew it, but do yourself a favor!
 &lt;?php //this will help you code better (set it in php.ini) error_reporting(E_ALL | E_STRICT); if (isset ($_REQUEST['my_submit'])) { echo "Hello $_REQUEST[my_name], you are $_REQUEST[my_age] years old "; echo "and your email address is $_REQUEST[my_email]. Thanks for "; echo "inputting your info into these three separate form inputs."; } ?&gt; &lt;form action=''&gt; &lt;input type='text' name='my_name' value='Jimmy' /&gt; &lt;input type='text' name='my_age' value='24' /&gt; &lt;input type='text' name='my_email' value='jimmy@jimmy.jimmy' /&gt; &lt;input type='submit' name='my_submit' /&gt; &lt;/form&gt;
 &lt;form action="&lt;?php echo $_SERVER['PHP_SELF']; ?&gt;" method="post"&gt; Name: &lt;input type="text" name="name" value="Jimmy"/&gt; Age: &lt;input type="text" name="age" value="24"/&gt; Email: &lt;input type="text" name="email" value="jimmy@jimmy.jimmy"/&gt; &lt;input type="submit" name="submit" value="Submit"/&gt; &lt;/form&gt; &lt;?php if($_POST['submit']){ //NOTE: Filter $_POST values before putting them in ANYTHING! ;) echo "Hello $_POST['name'], you are $_POST['age'] and " . "your email address is $_POST['email']. Thanks for putting" . " your info into these three separate form inputs."; } ?&gt;
It's funny how similar and yet completely different two pieces of code can be :)
Thanks, yes the reason I skipped jQuery is to learn how things work behind the scenes. But yeah, I'll definitely look into it.
Cool I'll give it a shot. Damn IE.
thanks!!!!!
thanks!
I'm a seasoned professional front end developer; nearly any worthwhile project that comes my way already has jQuery on it these days. If someone tried to pass off the above javascript noise I would look sideways at them and probably try to escape the room. FWIW.
[EasyPHPcalendar](http://www.easyphpcalendar.com/) is alright.
I think it would be helpful if they included a checksum of the expected output. Something that can be easily copied. That way we there would be no ambiguity about newlines, spaces, etc.
i think i am missing something...and this may be my stupidity/newb mind. if i plug this into a blank php file all i get is a blank page. i'm not versed enough to distinguish some of the values. once again i apologize for being such a newb. 
don't forget to sanitize user input before displaying
Works perfectly for me. Obviously you need to put it inside the &lt;body&gt; tag of a properly formed HTML page...
thanks. i am a dumb ass. thanks thanks thanks
The POST is not the biggest problem here. At worst, the script in the current form would allow somebody to spam the site admin, as it frequently happens with the formmail.pl CGI script. The real problem is that It's an HTML email. You could inject arbitrary stuff into it, such as an image tag that points to a CSRF attack. Or even worse, an XSS attack if the webmail client on the other side doesn't properly filter JS. Since the message doesn't specify a charset, the attack could also be in an obscure encoding (read: UTF-7) that some browsers (read: IE) would then interpret in weird ways. This could be used to hack the site admin's account. If the script is adapted for the purpose of reply notifications in a forum, for example, somebody could attack arbitrary members of the forum by simply posting replies to their threads. The script in the current form might make no sense in production, but these things actually do end up in production with only minimal modification, such as replacing $_POST['login'] with some other variable. Lazy devs would just copy and paste the unescaped variables around. Solution: - Add a proper charset to the Content-Type header, such as UTF-8. - htmlentities($\_POST['login'], ENT\_COMPAT, $charset) 
LOL. Noted.
IE has decided to be really anal about a bit of the w3c standard that nobody else bothers to goddamn use: the fucking [TBODY](http://www.w3.org/TR/html401/struct/tables.html#h-11.2.3) element. You need a tbody in your table to set it as innerhtml in IE. Because IE sucks. To get around IE caring about what it puts into innerHTML, you can get your php to json\_encode the html code, and evaluate the json on the js side. Edit: To get your php to stop silently failing, outputting nulls for stupid reasons, make sure you utf8\_encode() whatever html you're about to put through json\_encode. \*grumble grumble\*
No problem :)
Ah, you meant email wise... then yea. 
Whenever you use GET or POST, assume that the user can modify anything they send you (and they can) to anything they like. If you have a client\_id which is the same in all your links and only changes depending on the user, consider storing it as a session variable.
You are asking the wrong question. If your app lets users see data that they are not supposed to see, then your app is broken. Permissions are an answer, probably a good one for your app based on assumptions I can make from the URL. You need both input validation and user **authorization**.
 htmlentities($string,ENT_QUOTES,"utf-8"); Example. 
You need to remember to check the user input every time: Does the user have the permissions to do this action? Does this ID point to valid data? Does the user have permission to work with data associated with this ID? Of course, those are higher level checks. The first thing you do is check if the given values are of the correct type (validate) and then escape as necessary.
htmlspecialchars is usually far more appropriate than entities IMO. Entities encodes *every* possible character, while specialchars only escapes things that make XSS possible. 
Yes, but wouldn't entities be better for W3C validation?
&gt; I don't want them changing it to another client_id! If your web app relies on the user not changing parameters in the query string, then I weep for any clients that procure your poor application architecture skills. Protip: look up authentication and authorization.
If you're not in a position to fix the application, you could use symmetric key encryption to obfuscate the data whenever it's sent to the client. For example: function encrypt($data) { $gzip = gzdeflate(serialize($data)); $hash = mcrypt_encrypt('tripledes', 'HERPDERP', $gzip, 'ecb'); $string = strtr(base64_encode($hash), '+/=', '-_.'); return $string; } Now your hidden-inputs / get-requests are almost 'dumb' storage. This could work if you merely need the browser to hold those values until you post them back and decode them again: function decrypt($string) { $hash = base64_decode(strtr($string, '-_.', '+/=')); //url-safe base64 $gzip = mcrypt_decrypt('tripledes', 'HERPDERP', $hash, 'ecb'); $data = unserialize(gzinflate($gzip)); return $data; } This amounts to little more than obfuscation, though. Even though the server will barf if users try to modify the encrypted string, it doesn't prevent somebody using a string that doesn't belong to them (as opposed to a client_id that doesn't belong to them), and you'd be back to square one. (oh, don't use 'HERPDERP' as your symmetric key)
i agree.. i like the idea, would be nice to make it unambiguous
I don't know, actually. Maybe if you are serving XHTML as XML.
If you hit return inside a text field, does the submit button automatically get pressed? Just wondering whether the form could be submitted without "my_submit" being posted.
&gt; If you hit return inside a text field, does the submit button automatically get pressed? Yes, usually... if one exists. &gt; Just wondering whether the form could be submitted without "my_submit" being posted. You could use javascript to do that: &lt;form&gt; &lt;input type='text' name='key' /&gt; &lt;a href='#' onclick='this.parentNode.submit();return false;'&gt;go&lt;/a&gt; &lt;/form&gt; but then you lose the default behaviour of being able to 'hit return' to submit the form ;)
No such thing as dumb question, as long as you are willing to ask t means you are willing to learn. That makes you smarter then a whole heap of people. I see someone has posted the code so no need
You'll notice here that allsecretsknown and blackplasma have very different coding styles. PHP is versatile in this, but it also makes it easy for you to shoot yourself in the foot by creating something unmaintainable or full of security holes if you don't know what you're doing. The key is to have consistency with your style and understand how it works. One of the bigger stylistic choices is whether to use inline PHP (i.e. just coding HTML until you need a variable, and then opening PHP &lt;?php and echoing something and closing ?&gt;; or whether to use the print command from inside of PHP and make HTML the inline language. I personally am more a fan of blackplasma's method, because it opens a php tag &lt;?php at the beginning and stays in PHP until the end of the code section. It promotes clearer separation of code and presentation. 
I think you're generally better off using entities, as long as you don't end up mired in conversions back and forth from entities to ascii and inadvertently run entities twice. 
Goto you php.ini and set error reporting to true, and turn error level to e_all. It will start giving you better hints on what you're doing wrong. Oh, restart apache after updating php.ini
I would do it this way, based on [this](http://www.youtube.com/watch?v=Sibg0T3wKs4): &gt;'Hello ',$_REQUEST['Name'],' your age is ',$_REQUEST['age'],' and your email is',$_REQUEST['email'];
Apparently the company also provides a shit load of crack.
I am happy you have specified that it is **adult** porn as opposed to ... Ehh ... The kind made for kids
Never use $_REQUEST!
This type of work environment is one of the reasons I'm pursuing a career in Web Development. I don't meet the requirements though so I wish you all the best in finding someone.
sounds like an interesting job, but i don't think i would like seeing porn ALL the time. if still need applicants you should try posting in [/r/dallas](/r/dallas)
&gt;This is a front and back end web developer position. You MUST know how to take a design from PSD, and quickly convert it into a working website. While we frown on tables, we're more interested in making money than doing what W3C thinks is best. Sounds like you need a designer (or at least a front end programmer), not a PHP guy. None of the PHP guys I know would ever spend their time doing PSD to HTML/CSS conversation, as that is not what a programmer is.
&gt; This is a front and back end web developer position. o.O
Hey it sounds like you need a solid book that you can work through to learn PHP - save you from asking about every minor detail of the language. Here are some resources I can recommend: Start here: http://www.techotopia.com/index.php/PHP_Essentials and then you can continue from Chapter 7 here with advanced topics: http://www.tuxradar.com/practicalphp/ and then more advanced topics here: http://www.e-booksdirectory.com/details.php?ebook=372 you can use the php.net website as a reference. download the documentation here: http://www.php.net/download-docs.php these resources are a lot better and clearer than w3 schools.
&gt; I believe you can achieve multiple desktops on mac and windows. Super+Left/Right is quicker than moving your head back and forth. I would think moving your head back and forth is better for (or at least easier on) your brain, which is used to maintaining spatial maps of items of interest based on cues that come in through the eyes. Anyway, when I am looking back and forth between error messages on one monitor and code on another, I sure find it a lot easier to move my eyeballs than to piddle around with keyboard commands.
What insecurities?
I belive there is a psd plugin that do that, in form of tables.. you know he says he doesnt care about w3c
I think that is a innuendo
The speed differences parsing single- vs double-quoted strings are now thoroughly insignificant. But by all means do that if it benefits your syntax highlighting, or if you can read your code more easily. Leave such (apparent) micro-optimizations to the interpreter and you work smarter not harder ;-)
Why would you need to store the hashed password in a session either? Once you've authenticated the user, all you need to use to reference them is their record ID.
&gt; Sorry, no telecommuting! &gt; (the programmer does all the heavy PHP coding from his home in Bulgaria) ಠ_ಠ 
Yes but will it involve penetration testing?
There's softcore porn. And then there's us.
Thanks I'll crosspost there as well. Also, it's not porn 24/7. That's the designer who suffers that fate. Most of the time is spent coding, or helping out with some other non-porn related business issues.
Thanks for your input. Let me clarify. If you're a php guru who wouldn't waste his time doing non-php things, don't bother applying. We need a mostly front end developer that is heavy on the php/mysql. I state PHP because a .net or Java guy would be lost. We have a php-only guy in Bulgaria. We need someone with php knowledge here in the office that will do front end stuff most of the time but won't be lost when we need some PHP coding and the Bulgarian Guy is asleep (he works our graveyard shift). Also, will help take care of business-related issues like member account stuff. Again, if you're a snotty guru who will ONLY work on PHP stuff and will scoff at the rest of actual business necessities, don't bother applying.
If you're willing to take his salary and work a full work week, then we can talk I guess. The position I'm offering, and the Bulgarian's position are completely different beasts.
Thanks for posting-- it's always cool to get job posts here. Mind me asking why you're leaving?
$\_REQUEST can lead to issues later on in your code. It is always best to use $_POST/GET/SESSION directly so you know where the input is coming from and can handle it accordingly. Also the chances of your script losing performance from double/single quotes and concatenate is slim to none. Your real bottle necks are how you process the data and how many files you are including every run.
I am pretty sure the soft core kind is also for adults
Snotty... guru... who will only work on php... Sounds kinda like a no-slash fanfiction snob.
thank you so much. really! thanks!
If you change your mind about the telecommuting at any point hit me up, I'd definitely be interested (live in NM, so not too far, but can't relocate).
What is the reason behind this? EDIT: [got it](http://devlog.info/2010/02/04/why-php-request-array-is-dangerous/)
Stop being so anal about it.
Check this for CSS / embedded image or canvas : http://barcode-coder.com/en/barcode-jquery-plugin-201.html or in php : http://barcode-coder.com/en/barcode-php-class-203.html 
Nice job, I would apply if I were in the US. The Bulgarian fits better to the companies needs and niche because bulgarians are bloody cocksuckers. Downvotes on the post? Most probably due to your arrogant tone in the comment. 
You don't have to be a Jerk. Offer some valid criticism.
Well, our Bulgarian isn't rude to us because we actually pay him what he's owed. Sorry if you've had problems with them before, though. We actually had Phillipino guys before, not as programmer but we needed a ton of menial manual computer work done. Those guys were next to useless. In fact, worse than useless since we ended up having to go through and fix everything they did. Sorry if I sounded arrogant, I guess. Kind of hard to see where I did that. Maybe in the part where I was trying to sell how awesome a company this is to work for? Should I tone it down a bit to fit in with the rest of corporate America? Ok, here goes: Wanted, 1 front-end PHP web developer with at least 3 years of experience. Hours are 9-5 in an office environment. No telecommuting. Apply by email. Wow that sounds pretty boring.
There's thousands of people out there with strong skills in HTML/CSS *and* PHP, MySQL *and* JavaScript for that matter - I've been doing all of the above for over 9 years (and some of it for longer) and I'm not the only one by far. There are also hundreds of positions out there that require all of these skills and they pay GOOD money. Expanding your skill set is always worth it.
I'm a PHP developer, and most of my time is spent coverting PSD's &amp; AI's into websites. It's a new paradigm my friend. One where developers need to be designers. I'd love this job if I could do it from home in my torn boxers.
I'm very interested, but need to ensure that your company is legit and a leader in the industry. To show this, please post your best samples for me to review. 
www.gaymilitarypass.com
ಠ_ಠ
You're answer is rather variable, I think it's easily inferable. 
It has nothing to do with being "snotty" and everything to do with being specialized. Does your Bulgarian developer work on your PSD to HTML conversation code, and if not do you consider him "snotty"?
When it comes to developers I prefer (and hire) people who expand their skill sets in the development field. I tend to think the designers should be the ones turning their PSD's into the final html/css product, and in situations where they can't I'll use one of the many (very good!) psd to html services that exist. When I hire a programmer- and trust me, I'm the kind of guy who does hire programmers- I want them to be programmers.
Funny because when we hired him we didn't tell him there would be front-end work. So, no, he fulfills his job description fairly well. Where in my whole description did you see "backend only"?
Sorry to keep picking, but we don't need a programmer. We need a front-end and some back-end web developer. We don't need and/or want a hardcore PHP programming guru. If it offends your senses that some people need a jack of all trades, then you're in the wrong thread.
I don't, and you know it. I simply stated you should be looking for designers, and since you cross posted this in /r/webdesign it seems like you agree. There's absolutely no reason for you to be rude about it.
Dude, that's what I was saying the whole time. It sounds like what you need isn't a straight up programmer- that was my first freaking statement, I was just pointing out the difference. You added clarification to your post- and I'm assuming some of my comments prompted that- and now, because of that clarification, there's a good chance the candidate you end up with will end up a much better match. All I was trying to do was make sure what you asked for matched what you're looking for, as it seemed to me like there was a gap there. There is no reason for you to get all defensive or upset over it, and I'm honestly confused at your hostility.
It's not about my experience with Bulgarians, it's about the way they talk about us in return :). I didn't say the ad bothered me, I just said I read it in an arrogant tone and that may be the reason for downvotes (I assume others have read it in that tone as well). Redditors don't like to be looked down on, and you just smugged it in their face... :)
You sounded arrogent when you responded to me. I was just trying to be helpful, but you turned around and jumped down my throat. You then preceded to insult every developer who specializes in development by calling them "snotty", as if having a specialization has anything at all to do with personality. You took my advice though, updated your posting with my advice, and still act like I'm being rude for having given it in the first place. Yeah, that seems pretty arrogent to me (and many others it would seem).
After your explanation I understand what you were trying to do, but at first I simply thought you were trolling me. Mistakes happen I guess. I wasn't the only one who thought you were maybe being elitist - I just realize I jumped to conclusions too quickly. Internet does that to people. As for my arrogance, I was simply trying to make the ad sound funny. It is a fun place to work, I guess I may have gone overboard with my words.
I got what you were doing in the ad, and I think other's did too- as punchline_needed states, it's most likely the comments themselves that gave off that impression. In the future if you think someone is trolling you just check their account history- the trolls tend to be pretty transparent when you look at their overall comments. That being said, no harm no foul- I'm not going to get heartbroken over interweb drama ;-) The only reason I mentioned anything is that I'm also in the process of hiring people, and I've found that if you aren't extremely clear with what you want then you end up with a ton of people who don't fit the role. For one of the linux system admin rules we put out, as an example, we got hundreds of responses from people who "wanted to expand to linux" but were mostly windows server admins. These were people completely unqualified for the job, but decided that our post was vague enough to apply anyways. We changed the language a bit- not actually "changing" but reordering things- and the applicants that came out of it ended up being orders of magnitude more qualified.
Why not use gzdeflate()?
Why wouldn't you be controlling your stream compression from the webserver? Maybe if you're doing direct socket connections.
I wish I could get a job at a porn company ... I'm sad now.
If I lived in the area, I would apply. This sounds like a great opportunity. You sound exactly like someone I would like to work with. 
And the cool part about web development is that it's not just porn companies that allow you to be laid back. Every company I've worked for, I basically did whatever the fuck I wanted.
No, but it might require load testing.
&gt;And I'm typing in a bunch of caps BECAUSE THIS IS A PORN COMPANY AND SOMETIMES I GET RANDOM BONERS THROUGHOUT THE DAY I think I love you.
I live in the Dallas area and have been a professional PHP developer for nearly 10 years. Send me a PM :)
Being able to take a psd, slice it and put it in a layout from a PSD Composite, is pretty standard imo. Usually creatives do that since they have a strategy for the siteflow (and are familiar with what branding needs to look like and to stay consistent with other projects, if need). In smaller companies (in terms of staffing), the web developer ends up doing it, although you still need creative to actually make the graphics/comps. That sounds like where you are at.
This is actually what I do! ;) I really, really can't stand developing over FTP.
&gt;Do you know OOP, use subversion, etc etc etc? Don't care. In fact you can write all your code in horrible spaghetti procedural style, as long as it works and makes us money. Take note of that kiddies. You might be maintaining the leftovers. Other than that, it looks like a nice job for a person early on in their life to have.
Is there a link to the python class?
http://code.google.com/edu/languages/google-python-class/
*gzdeflate()* is used for compression and we need to decompress our data here. **gzinflate()** would be the right function but I am not using it because then I would have to parse Content-Encoding response header. If that header is "gzip" I would have to strip first 10 bytes (.gz header data) and only then run *gzinflate* (and with "deflate" response I would have to directly send data to *gzinflate*). The whole point of that "compress.zlib://" stream usage was to make that code as small as possible. You could however replace everything with *gzopen()*..*gzread()*..*gzclose()* to get the same effect (and remove that base64 madness).
I think you are confusing this with a typical webserver gzip/deflate compression setup. My blog post is about when you are scraping some sort of content from within PHP (as with *file\_get_contents()* function) . And don't really go though your webserver or any kind of proxy this way so there is no one in the process who can override your headers and add compression/decompression automatically.
Isn't PHP manual is good enough?
[Google PHP Class](http://framework.zend.com/manual/en/zend.gdata.html).
you get an upvote for the lolz
Yes, that's why it usually makes sense to include a hidden field that tells your program which form is being submitted.
Don't thank him too much; by not escaping the values in $_POST before sending them back to the browser, he's betrayed a bad programming practice that has resulted in countless web application security exploits. Anything that comes from the user MUST be sanitized before you do anything with it (other than comparisons or boolean checks). No exceptions.
Obviously not.
Upboat for Zend Framework. Use this at my day job and it's truly a great framework.
Don't massively downvote me. Honest question here... :-) I'm confused with why you would do this with PHP and not with Apache i.e. mod_deflate? http://httpd.apache.org/docs/2.0/mod/mod_deflate.html
To be fair, I made a comment of that in the code. However, people prefer to escape their values in particular ways (some need to ensure that something is not only escaped, but is also numeric within a certain bounds, etc.) that can only be applied to their particular situation. I didn't want to give a generic "filter" function when the real principle is to filter according to your specific needs (whitelist vs. blacklist.)
Yeah, just a peeve of mine. As long as people keep seeing code with stuff like: &lt;?= $_POST['name'] ?&gt; and echo "Hello world, your name is " . $_REQUEST['name']; then beginners are going to keep getting the message that it's acceptable.
Hi prajalpa! mod_deflate is used to setup your server to send compressed content back to the HTTP client (think your Chrome/Firefox receiving compressed document from the server). Now all browsers support gzip/deflate compression and that's great. But PHP is also a HTTP client - there are functions that you can use to retrieve web content. And these functions don't support compression (by not sending required headers) and this blog entry shows how you can improve PHP HTTP streams so they take advantage of this feature as well. I am not sure I can explain it more clearly :)
The standard HTML form (of which i'm assuming you're describing with the word 'form') isn't server-side language dependant and is completely separate from either of the languages you have described. If you submit a form via either method types (POST or GET) then any language can pick up the variables on the receiving side. A simple example. &lt;form action="http://www.domain.com/receiving-page/" method="GET"&gt; &lt;input type="text" name="string" value="Reddit" /&gt; &lt;input type="submit" value="Submit" / &lt;/form&gt; Upon hitting the submit button the page would be directed to http://www.domain.com/receiving-page/?string=Reddit which can be parsed by any web-capable language on the receiving end. So in PHP it's simply a case of: $var = $_GET['string']; The same goes for the POST method. Just remember with any user submitted data to sanitise your variables! Simply put, with HTML forms it doesn't matter what server-side language your pages are written in be it the sending or receiveing page, as long as the language is capable of accessing the POST / GET variables which is pretty much any web-capable language you're going to be alright! I hope I've understood what you're asking for ([ASP.Net Page] &lt;--form variable--&gt; [PHP Page]) and the above is of some use. 
my old wlan-router just prevented me from posting something similar. so, i totally agree with xopas approach.
Phlanger
&gt; I'm trying to find a way to have a submit form in asp.net send a string to a php page. From what I understand php cannot be simply inserted into asp.net. There's nothing to it. Chances are you are over-complicating things somehow. An HTML form is an HTML form, regardless of what language you are using to process it on the server side.
You are probably right. I'm a PC tech who has a very basic understanding of programming in general. I've always told myself that writing code was not for me but I've dabbled in writing some small scripts for work that have been/will be implemented and came to love the debugging process and the feeling of completing something worthwhile. I appreciate the help and lack of condescending responses.
&gt; came to love the debugging process and the feeling of completing something worthwhile. Trust me, it only gets better as you solve tougher and tougher problems. I think there's something addictive about it.
Furthermore, if you're still using die(), it is your responsibility to stop living.
I posted this from php.net a while a go and got no laughs or shiggles.
Heh, reminds me of something my former co-workers had to do, where they hacked some god-awful CRM written in ASP (used by another department), to submit customer feedback data into one of our internal PHP based systems. I'd say using a regular HTML form with POST or GET data will work fine.
Depending on the context, even GOTO has it's uses.
Okay, I've been implementing a container for sessions and databases: $c_pdo = new \Core\Database\Container(); $c_session = new \Core\Session\Container(array( 'pdo' =&gt; $c_pdo-&gt;get_pdo() )); $session = $c_session-&gt;get_standard_session(); And the respective code: [\Core\Database\Container](http://github.com/radiosilence/core/blob/master/core/database/container.php) [\Core\Session\Container](http://github.com/radiosilence/core/blob/master/core/session/container.php)
74% is better than expected. The average post has a 66% upvote ratio. It's mostly due to spam bots I suspect.
Here is one of mine, for the XML challenge. 141 bytes is far off the current low of 74. I think manually searching the string with `substr` or iterating through letter by letter may be better. &lt;?for($t=$i=0,preg_match_all('#&lt;(/?)(\w+) *(/?)#',XML,$m);$n=$m[2][$i];$i++)$t+=$m[1][$i]?-1:(print str_repeat(' ',4*$t)."$n\n")&amp;&amp;!$m[3][$i]; With spaces &lt;?php for($t = $i = 0, preg_match_all('#&lt;(/?)(\w+) *(/?)#', XML, $m); $n = $m[2][$i]; $i++) $t += $m[1][$i] ? -1 : (print str_repeat(' ', 4 * $t) . "$n\n") &amp;&amp; !$m[3][$i]; The call to `preg_match_all` produces four arrays. We ignore the first, one but $m[1] contains leading slashes (or nothing), $m[2] contains tag name and $m[3] contains trailing slashes. For each match: * I check if there is a leading slash, if there is I add -1 to the number of tabs. * Otherwise I print the tabs, tag name and new line. * I then check if there is a trailing slash. `$m[3][$i]` is either `''` or `'/'` so `!$m[3][$i]` will give true if there is no slash. * This is &amp;&amp;ed with the output of the `print` call (which always returns `1`), giving us the same result again. Print is function-like and returns a value, echo couldn't be used here. * The boolean is then added to the number of tabs, so is coerced to and integer meaning we add `1` if there is no trailing slash or `0` if there is.
[PHP's goto implementation](http://us2.php.net/manual/en/control-structures.goto.php) only works within the current scope, meaning the current file and current function/method if you're in one. You can't jump into the middle of a loop or function/method. The intent is relatively sane. I could easily see using it to break out of a multiply-nested set of if blocks. On the other hand, it's freaking goto. All it takes is a few people that haven't updated their skills since hacking in BASIC in gradeschool to royally screw things up. Ah, PHP.
The internet be a fickle mistress.
I love how amazingly British the interviewer is.
TLDR from the article: &gt; I await the Next Big Thing. I want to switch away from PHP, I really do. I don't want to be the Perl dinosaur. But whatever it is, it doesn't seem to be here yet. Am I wrong? 
Whoa, sorry man, totally forgot about this thread, I accidentally marked your last post as read and the orange envelope went away. My apologies. I'll check out your code later today. Rather than continuing in this thread, email me: vmc@leftnode.com and we can continue talking there.
&gt; In netbeans I just click the green "run" button and it deploys the code to my web root directory, then it opens up the web page in firefox which is open on my other screen. I always find that run/debug integration breaks as soon as you use any kind of framework or even Apache rewrites. I'd love to see an IDE allow you to specify rewrite rules for source file to URL mapping.
Right before your conditional statement, what does var_dump(is_array($updates), empty($updates)); say ? *edit: a better way would be to cast your foreach, and get rid of your conditional statement. foreach((array)$updates as $upd) {}
is the code copied and pasted, because it could be a typo? it happens.
true, false
No, I'm working in another environment with no public internet access, that's just a mockup of the code, but it's essentially exactly the same. Also, it works SOMETIMES, which is the biggest mind-fuck of the whole thing. There's always data in the array, the error checking isn't really needed. The array can not be empty. Sometimes the foreach works, sometimes it doesn't, and the data is consistently the same.
Seems like you've covered the basic stuff, moving on to the weird. $updates is a pretty general word, is anything else in previous code or dependencies using the same array for some other data?
I'd cast the variable like *bluepostit* said. See if that fixes it.
Tried casting too, didn't work. =/
Well, in the actual code, it's based in a class, updates is a private member, and I'm accessing it from a class function using $this-&gt;updates. 
Whats the output of this command: var_dump($updates); 
Is the negator negating all of &gt; is_array($updates) || empty($updates) ? Try if( (!is_array($updates)) || empty($updates)) 
&gt;print_r($updates) shows a nice 2D array, with 27 arrays in it. I am at a loss... I have no idea how it's saying my array is invalid. :( It prints out an array, just like expected. I can't copy and paste the exact results, since the code I'm working on is on a computer not connected to the internet, but it's a perfect array; like so: Array ( [0] =&gt; Array ( [id] =&gt; 1 [input] =&gt; 145.54 [output] =&gt; 153.32 ) [1] =&gt; Array ( [id] =&gt; 2 [input] =&gt; 167.39 [output] =&gt; 133.87 ) )
Try print_r($updates) right before the empty check and then do it again right before the foreach That way you can see if it's somehow getting mucked between the check and the loop.
Are you using parens when you call the accessor.
Those checks don't really do anything, it still gets to the foreach, and I added them afterwards because when I posted the original code on stackoverflow, I got a ton of comments just telling me to put error checking, so I didn't want that hassle again. With or without the error checks, it fails. :(
why don't you submit that to the list of ideas for netbeans on the website?
With the check not even there, sometimes it works, sometimes it doesn't. However, the array is ALWAYS intact. I've printed it out for every case that the function is used, and it's never been messed up. This is the most confounding issue I've ever had to deal with.
Where?
I'd be interested in seeing count($updates) at the same time as it fails.
You're going to love this: 27.
Try this... // try forcing it to be an array // if this works, it's a symbol table bug most likely foreach((array)($this-&gt;update) as $upd){ } or try this... // in php, arrays are assigned by copy, not reference // if this works, the object structure was probably messed up $u = $this-&gt;update; foreach($u as $upd){ } But I can't reproduce this on PHP 5.2.6-3... if you can narrow it to a self contained code snippet you should report it as a bug. It's likely an issue with either how it's tracking the symbol table, a permissions bug (does it work if you make the var public instead of private?), or how some array functions are modifying the object so that the foreach() can't find the iterator or something. 
As in: $obj-&gt;method(); //calls function named method() rather than: $obj-&gt;method; //looks for var named method inside $obj
Oh, yeah, of course. $updates = $tower-&gt;getUpdateArray(); The code in the post is from getUpdateArray().
After reading all these comments, I'm more inclined to believe there is an issue occurring out of context with the code sample you provided - it's more likely than a bug with PHP. Can you provide a larger code context? or at least samples of the actual code and not a paraphrase?
Are you only building this on a single dev box? I've ran into WTF's like this when working with multiple servers and forgetting to push to all of them. Load balancer randomly selects which server to hit, so it'd work sometimes and fail others.
How do I even start trying to figure that out?
I can't give code samples. I'm working on the project on my classified machine, so copying to an unclassed machine is a big no no. But.. where would I look to be able to track this down? I've never seen this kind of problem before. Every other foreach I use works (so far that I've seen anyway).
Tried both of those, both to no avail. Also, if I print out the class, it lists the updates as a private member.
Try creating a new array: foreach(array_values($updates) as $upd){} If something is funny with the internal array object, re-creating it might get it straightened out.
Try this: if(!is_array($updates) || empty($updates)) return null; for($i = 0; $i&lt;count($updates); $i++){ echo $i." - ".$updates[$i]."&lt;br /&gt;"; //output anything } If the for loop works but the foreach doesn't then you should try a different type of array. Maybe try a basic 1 dimensional array.
You might want to try pastebinning a larger fragment and/or giving us the printout of a type print_r($updates); Obviously the problem is not on the 3 lines you've shown us.
try making the var public instead of private just to test it (ie it might be doing the call from an inherited class in which case it can't read it without it being public or protected)... and run this and post the output for us to test on: serialize($this-&gt;update) 
It's ok now, PHP decided to bestow upon me a working foreach, all is well. But still, I have no idea what was going on, or why it suddenly started working. Just with one of the random refreshes I did while working on another part of the site, it started working. Yay?
ummm.. error log? Most likely though, whatever your making isn't so awesome that you need to keep it top secret.
yay
What version of PHP are you using? What is the precise input and output? Can you write sample code that demonstrates the same problem? Are you sure it's complaining that $updates is invalid and not something else? As updates is a private member variable, are you sure you're using $this-&gt;?
It's not the awesomeness of it, it's the fact that it's built on a classified machine, for a classified project. It's a pretty serious offense to copy ANY material from a classified machine to an unclassified machine. Of course the code itself would be fine to post on here, but I simply am not allowed to.
Yeah, I was doing everything correctly, and it magically started working again...
did your expected data change? It might have started working because the value of $updates has changed...
Nope, it's back to working exactly as expected.
It didn't magically start working. Something had to have changed. Probably the contents of $updates
I promise nothing changed. It's now properly printing out the array that it should have been the entire time. It had to have been something internal with my php server, perhaps someone was doing some kind of server maintenance or something. Either way, it's back to working as intended.
Cool. yeah, maybe apache was acting a fool for a min.
Not to sound like a dick but you've only given us an approximation of what the code looks like and are refusing to show the actual code yet you want us to help you solve the problem. There are tons of well capable people here who can help and there is already an exhaustive list of debugging methods. I'm not sure what your classified, non-classified issue is but it seems you may be better served getting help from someone with the appropriate clearance to do so
That's what I'm assuming. Now I just hope it stays stable and doesn't do that again. This site is pretty important. :(
Well, the issue is fixed now anyway. There aren't really too many places I can turn to for help, outside of the internet. I provided exactly the part of the code that was breaking, and now it's just "gone away" somehow. So I guess it's not fixed, but it's at least gone.
 //code works. didn't used to work. just started working. do not touch 
Could have been a cache issue? Some php accelerators choke if a file is replaced by an earlier one.
you could print out the Server's IP with echo $_SERVER['SERVER_ADDR']; with your request to see if it's always hitting the same IP address. To ensure you're always hitting the server you mean to hit, you could also use your host files to point to a particular machine if it is a cluster behind a load balancer. We use this technique at my company to check releases before they go out to all the servers. in your hosts file (/etc/hosts on linux...c:\system32\drivers\etc\hosts on win xp), add something like: THE.IP.OF.THE.SERVER.YOU.WANT.TO.TEST www.test-domain.com Then ping www.test-domain.com to verify it's pointing to the right IP. Now you could switch the IP in the host file to the other servers (if that winds up being the case) and see which one is the problem.
I prefer to box it in /************************** **************************/ /**/ this is my working code; /**/ /**/ please do not fuck with; /**/ /************************** **************************/ :( That looked a lot better in the editor.
Hmmmm. That's a possibility I suppose.
show us the var dump.
No need anymore, code is now working.
The article fails to explain why PHP needs to die...
Try gettype() on both $updates and $upd (it's slow, but we're debugging).
Don't use `$_SERVER["PHP_SELF"]` as the action! Consider the following URL pasted by the user: http://www.example.com/form.php/%22%3E%3Cscript%3Ealert(‘xss attack’)%3C/script%3E%3Cbr%20class=%22irrelevant The resulting HTML would be: &lt;form method="post" action="http://www.example.com/form.php/"&gt;&lt;script&gt;alert('xss attack')&lt;/script&gt;&lt;br class="irrelevant"&gt; &lt;!-- form contents --&gt; &lt;/form&gt; The solution, however, is infinitely elegant: &lt;form action="" method="post"&gt; Your presumption is correct, an empty action refers to PHP_SELF implicitly.
I had certain browsers refuse to submit a form to an empty action. In general, it's best to just hardcode the action to your filename, e.g. action="script.php" and filter everything sent by the client. PHP_SELF is just a handy placeholder until your file is actually named.
A good IDE might save you the trips to php.net .
I've got a pet project to harvest the data generated by xhprof to build up a working map of execution paths through medium-large codebases... hopefully I can get a working alpha finished in the next few months.
Don't argue w /him about editors. I make six figures at a 100% dotcom business. There are 8 PHP developers. Of them, only three of us use IDEs to code in (the rest use Vim or emacs), and of all of us, I am the only one **who knows how to use a debugger**. I think these guys all make in excess of $70,000/yr and yet **I** am the one people come to w/ complex problems b/c debuggers win the day almost every time.
When I screen job candidates, the first question I ask is what is their favorite PHP IDE. And since I use all of them, my next question is, how do you debug? I summarily dismiss everyone who says "echo" or "var_dump", usually after a brief lecture of how ridiculous it is to claim you're l337 when you're acting like 30 years of debugging tech hasn't been invented.
***YOU*** are the reason everyone thinks PHP coders are a fucking joke.
Browsers and several ad-blocking extensions can disable automatic redirects.
a browser wouldn't be able to disable a server-side redirect though, right?
Hmm, I guess not. Oh, and some "security" programs might also mess with the page+headers before the browser gets it. Is there any correlation in which UA strings this happens for?
Some older browser handle redirects differently than newer browsers. A lot of people will do the following: header("Location: /path/to/new/file.html"); This is how to properly do it: header("Location: http://www.domain.com/path/to/new/file.html"); If you're doing the proper way, then I don't know what to tell you. I run a large website that incorporates header redirects for a majority of our traffic, and we've never received a complaint. Furthermore, do it as: header("Location: http://www.domain.com/path/to/new/file.html", true, 301); This will overwrite any previous Location headers.
Nice. Send me something when you've something I can play around with. Would love to use it at gdgt.
Thanks, I'm doing it correctly but will see about adding the header info along with the command. Out of curiosity, which version of php are you using? Have you used other versions along the way or always been on your current version?
I've been using PHP since the 3.x days. I update a couple weeks after each new release, so I'm currently running my code on 5.3.3. What version are you currently running? I believe there were some interesting bugs in the early 5.x branches relating to headers.
5.3.3 also (with eAccelerator if that makes any diff). Also, while I'm thinking of it, when sending heavy traffic, do you have to look out for anything server-related on the other side beyond the traditional apache/iptables/etc sorts of connection settings? It seems like I'm running out of things to test for, but with a random percentage of traffic going missing, it's got to be *something*.
header("Location:page2.php"); die(); // the die is to prevent any other data being processed, try it and report back!
I wouldn't call that a "server-side" redirect. Even if you use the header("Location...") thing, it's up to the browser to follow it or not, and many so-called security suites mess with these redirections. Maybe you could do the header thing, plus adding a meta redirect, and a manual link to be sure, something like "if you don't get redirected, click here".
Really? Do you know which browser/s would not allow a php header location redirect?
Nope, sounds like you've got it pretty covered. Any idea what browsers they are using? How are they contacting you; through direct email, or an email form?
Nope, checked that one, but your mentioning "security" programs has given me a new idea, to at least try and cause the same problem to occur via Tamper Data...
Thx for following up--doesn't appear to be a client side browser issue. I will post the eventual solution whenever I discover it!
A "server-side redirect" isn't really server side at all. All you're doing is redirecting the browser with your header. Yes, it is possible for security software to disable these kinds of redirects. In my experience, this isn't likely. Mind posting a link so I can check your headers? Also note that sometimes header order makes a difference.
Try this: function redirect($where) { ob_end_clean(); @header("HTTP/1.0 307 Temporary Redirect"); @header("Location:$where"); @header("Refresh: 0; url=$where"); echo "&lt;script&gt;window.location.href='$where';&lt;/script&gt;"; die; }
At the risk of stating the obvious... I know you said you've written extensive troubleshooting code, but *please* tell me you've confirmed that the header() function always fires off before any of the document content... i.e. the "headers already sent" error is not coming into play on these rare occasions.
yes :-)
will do.
Judging from the Engrish, I somehow expect the site owner to not give a flying crap.
Did you not notice the credit given at the bottom of the page, to php.net? &gt; /r/PHP ripping off php.net There, fixed the title of this post, for you.
It's not about the browser, it's the plugins/addons that interfere with redirection. There's nothing you can do about it if the user chooses to install one of those plugins/addons. All that matters at the end of the day is that your users get redirected. Add a few redundancies and that'll take care of most of the cases. 1. The usual header(Location:) trick. 2. At the same time, display a simple HTML page that contains the link to the new location. 3. Add some JavaScript to that page: window.location.href = 'New Location'; A small minority of visitors will still not follow the redirect, but then there's nothing you can do about it. Maybe they're stupid robots crawling random web pages.
Good call re: redirects. I can't provide a link, but if I wanted to make sure I have the header order correct, would I want to look here? http://www.ietf.org/rfc/rfc2616.txt
All of the major browsers support them, but they could no doubt be disabled with an extension or source modification. You might try exiting after sending the header... sometimes the header won't be sent until the script is finished, and by that time, there could be output. exit(header('Location: /path/to/whatever.html'));
You might try doing a session\_write\_close() just before the header().
Maybe. But I'm laughing all the way to the bank.
&gt;Design by PHP.NET converted to Wordpress by Takien All rights reserved. Reading fail.
Looks like more of an homage than a rip-off. Though it's illegal to use the PHP logo without permission, so they might be infringing there. They're also running ads on the page, which could be questionable as well. They might have permission though, who knows. It's not like they're trying to phish.
And that is 100% of the time, not just 90 to 99% of the time, so long as the user's don't follow one particular path through your scripts?
It's an HTTP redirect, and so much lower level than HTML. I cannot think of any reason why a browser would not honour such a request, because it would cause far too many problems (if you don't follow the HTTP instructions, then there is little chance of getting HTML reliably), unless it is following too many redirects in a row.
Don't forget that a header redirect simply tells the client that the page has moved, and where to find the new one. There is nothing forcing the client to request the new page. My guess for the source of the lost traffic would be: * Crawlers and other bots that push the new URL onto a queue to parse later (or choose not to parse the new URL). * End users with slow connections that close the window, hit back or stop before the second page loads (though this generally should show up in server logs). 
Which browsers? I'm pretty sure it's part of the HTML spec that an empty action is to be interpreted as the current page.
IE for Mac and the Maxthon browser I think. It was a few years ago when I ran into it.
vague FTFY
unfortunately, the http itself doesn't have the necessary checks built in to determine whether or not packets are delivered successfully. Your logic re: receiving html is exactly where I've been at on this, but as a few other commenters observed, some browsers (not to mention bots and spiders) may have more stringent rules for header formatting.
OK, your code actually caught four that wouldn't have forwarded if not for the javascript. Now I guess I have to go through those log entries with a fine-toothed comb in order to figure out which browsers aren't liking my php headers so I can apply this specifically to those rather than have duplicate log entries for 95% of traffic. Unfortunately, since php can successfully execute the header("Location code, I can't use normal exception handling. Or maybe I need to inspect the order of the php headers vs the javascript headers, as [izzy4505](http://www.reddit.com/user/izzy4505) suggested some browsers may be more finicky than others when it comes to responding to redirects.
Yeah, [safetywerd](http://www.reddit.com/user/safetywerd) posted the code and it caught a few that would've otherwise not redirected. Philosophically, I'm on board with your "small minority of visitors will not follow the redirect," but I'm trying to get that number as close to zero as possible. I've had a couple other issues like this recently, where I have something working *pretty* much 100%, and I've managed to actually close the gap and go for the whole enchilada. Cross your fingers!
yeah, that horse done been flogged.
That looks like a fun site. I got 52 for the [Palindromes challenge](http://phpgolf.org/?p=challenges&amp;challenge_id=15), stumped how to get rid of 6 more bytes though.
 http://www.w3.org/TR/html401/interact/forms.html#adef-action 
For those of you who haven't listened to [Thijs Feryn's talk](http://techportal.ibuildings.com/2010/09/14/dpcradio-php-through-the-eyes-of-a-hoster/) at DPC10, I recommend you do so. It has little to do with coding PHP but alot to do about how PHP fits in and interacts in a server stack. It's very interesting. He covers (among other things) memcache, varnish, mysql and scalability. 
Would be interested to hear which browsers those are.
remember though, you're stuffed if your code includes autoload stuff, like maybe reading through a directory and loading a controller who's name was part of the url, eg. include $actions[2].'.class.php';
Hmm, well I don't know where I read that then. Sorry, should have taken 5 mins and checked myself. But as per usual, more concerned about actual browsers than the spec ... :(
I'm interested in what you would use this for... if you do a shm_attach() will it stay active even if php it running as an apache module? ie can you use this to keep data around for caching or something, or is this only if you're using cli php? 
A function that performs a prettier `var_dump()` is far from achieving the power of step-by-step debugging...
Is there any way to send the var_dump results to a variable instead of outputting to the page? It'd be nice if I could send it into a file or the system console or something. edit: just found [var_export](http://www.php.net/manual/en/function.var-export.php). That could do the job...
Just change the source so instead of echoing the output it just adds it to a string, then return that string at the end of the function.
We talking about the same [var_dump](http://php.net/var_dump) here?
Oh, thought you meant the example in the linked article.
Dumping debugging data directly into the stream isn't very helpful when you're dealing with ajax/json. I've used [Firebug](http://www.getfirebug.com) with [FirePHP](http://www.firephp.org) for a good year now and haven't used var_dump() since.
Shared memory segments persist until freed. They're a POSIX thing. It's quite possible to fill the space allocated for them, resulting in the entertaining message "No space left on device." Always remember to free them when you're done working with them. The `ipcs` command line tool can be used to manage things. When working with PHP, I don't know what advantages shared memory might have over something like memcached.
Hey, asshole. People like you give PHP a bad rap!
Congrats! You just created an inferior version of Krumo ( http://krumo.kaloyan.info/)! I'm hostile cuz the only people who think "debugging" only involves vardumps are, well, script kiddies.
&gt; firePHP !!! Thanks!
This code and reasoning is terrible. XDebug + Firebug + FirePHP + an IDE = Win Someday I will write a proper PHP debugging tutorial. 
Shhhh! Phil Sturgeon is 'teh shit' on codeigniter forums!
I KNEW I RECOGNIZED HIS NAME SOMEWHERE!!
Honest question. Why this function and not str_replace?
See the blog article about it: [Fast Multiple String Replacement in PHP](http://www.sklar.com/blog/archives/122-Fast-Multiple-String-Replacement-in-PHP.html)
i realize the point of this is speed, but i was bored $words = array('monkey','salad'); function repl( array $words, $str, $char='*' ) { return str_replace( $words, array_map( create_function( '$w', 'return $w[0] . str_repeat( "' . $char . '", strlen($w)-1 );' ), $words ), $str ); } echo repl( $words, 'My monkey ate some salad today.', '+' ); My m+++++ ate some s++++ today.
no I agree. I've never had problems with it either tho, just making sure it is clear it is not in the specs... :-) It is only relevant if your users use browsers that does not function. 
Interesting, but have you done any benchmarks?
Move on to 5.3 and use closures, at least... $words = array('monkey','salad'); function repl( array $words, $str, $char='*' ) { return str_replace( $words, array_map( function($w) use($char) { return $w[0] . str_repeat($char, strlen($w)-1); }, $words ), $str ); } echo repl( $words, 'My monkey ate some salad today.', '+' );
I wasn't the one who made it and I haven't used it. I just thought I would post the link because it sounded like a neat extension.
PHP follows the "learn by causing this problem" paradigm. Awful for middle management, but great for programmer turnover. 
You know there are real PHP debuggers out there with watches, breakpoints, variable inspection, and so forth. DBG for example.
Stuck on the 99 bottles of beer, keep getting Failed because of a zero. I have no idea what I'm doing thats creating that zero. &gt;0 99 bottles of beer on the wall, 99 bottles of beer. &gt;Take one down and pass it around, 98 bottles of beer on the wall. &gt;98 bottles of beer on the wall, 98 bottles of beer. &lt;? for($i = 99;$i &gt;= 1;$i=$i-1){ $j = $i -1; echo "$i bottles of beer on the wall, $i bottles of beer. &lt;br&gt;"; echo ($j==0)? "Go to the store and buy something more, 99" : "Take one down and pass it around, $j"; echo " bottles of beer on the wall. &lt;br&gt;"; } ?&gt;
I think that zero are line numbering. And by the way, you will not need the &lt;br&gt;'s, that's for sure.
Spelling fail =(
i didn't have 5.3 installed, but i was bored so i just upgraded.
I see. You also need to check bottles vs bottle.
I dump variables instead of debugging because it have yet to find an easy to use debugging situation that works. I have tried just about any combination possible 
Use new lines "\n" instead HTML line breaks. You also have to consider "bottles" v. "bottle". That's a tricky one that took most of my character count. Don't forget you can echo multiple strings at once: echo "$i bottles of beer on the wall, $i bottles of beer. \n",($j==0?"Go to the store and buy something more, 99":"Take one down and pass it around, $j")," bottles of beer on the wall.\n\n";
I got it down to 45. The first zero was killing me because I needed to intialize my counter explicitly, then I realised I could fake that and print the rest of the numbers normally. My first three bytes: `0&lt;?` Some more hints: * You don't need to have '==' or '!=' in your code, you can fake it with a single byte. * You can write the whole thing without a single space. * And finally, `1e4` is the same as `10000`.
Wow 45 bytes. I was doing `0\n&lt;?` but now see how to avoid the explicit newline. I think I'm on 48 now, but it's still pending.
No problem. I'm just trying to help people learn new functionality instead of sticking with the old. Showing both is always good, though :)
From quickly skimming over it it seems like you're on the right track. Something that helps enormously with becoming friends with unittests is writing the tests first and then the code. Not only does it help to define what you really want, you'll also (almost) instantly know if your implementation works or not for every change you do.
Oh hey, just realized you're the same guy I've been chatting with. I already recommended it to you, but for other programmers in the thread, read the book [xUnit Test Patterns](http://www.amazon.com/xUnit-Test-Patterns-Refactoring-Code/dp/0131495054/ref=sr_1_1?s=gateway&amp;ie=UTF8&amp;qid=1285844228&amp;sr=8-1) and you will write better tests.
Test driven development does seem interesting, I'll be sure to give it a shot and see if it works with the way I like to work :)
Yeah...they'd rather spend their day debugging code on the live system while the users are screaming at them. Yeeee Haaa .... COWBOY programming FTW! =)
Sorry, I haven't tried anyone but here is a list of a few: http://en.wikipedia.org/wiki/List_of_free_and_open_source_eCommerce_software For not open source i'd recommend http://www.shopify.com/
I briefly tried Magento, but was not impressed. Expect to put a lot of hours into learning and customizing. I have a client that likes to use DigiSHOP for ecommerce sites. I think it starts at $400, and goes up depending on features. Their business model is built around upselling customizations so there's 0 documentation in the code, and any upgrades (and you will upgrade) will overwrite any customizations to functionality. It does a lot out of the box though, and is easy enough to template, and templates are not overwritten on upgrades.
I had a brief stint with eCommerce software before I outsourced the whole process. Magento is horribly slow and over-engineered, it's basically an education in itself. My favourite was PrestaShop, problem with that was that any sort of module (and you'll need some) was horribly expensive.
avoid oscommerce
**AND** they think var_dump() is all there is to debugging!!! (Like other asshats on /r/php!).
I have used cubecart a bunch, not sure I'm in love with it. I'm going to be trying the ecommerce add-on to wordpress soon. I heard it's worth a look. Also, take a look into opencart.
I had used Zencart once. It was really easy to work with. Give it a try
Opened thread to upvote this comment.
opencart is pretty decent, but the creator/dictator is a douche and doesn't take kindly to any kind of suggestions, even about security.
Magento feels unfinished, but there is potential.
http://en.wikipedia.org/wiki/List_of_Open_Source_eCommerce_Software
I've used zen-cart for a bunch of projects. At first it can be a beast trying to customize your template but after a while you get the hang of it. Besides that, it's a pretty good system with a ton of support.
Try Drupal and Ubercart.
You should change your username to "printf"
Are you **seriously** reocmmending drupal for ecommerce?! DON"T YOU REALIZE HOW FLAWED IT IS?! DON"T YOU KNOW HOW MANY OPEN SECURITY EXPLOITS THERE ARE??!? Just go ahead and give me root access.
-1 benjick beat you by an hour.
Sounds about right - people gotta make money off of developers
See here: http://lmgtfy.com/?q=xdebug+komodo+ubuntu&amp;l=1
It's major good point is that it keeps you from subconsciously thinking "that test isn't important, I'll just skip it" because it forces you to write the test first. ;)
I played around with [LemonStand](http://lemonstandapp.com/) when it was in beta. It's not open source, but it's not terribly expensive at $300. What impressed me is that you can install it with *no* front-end UI. Instead, you get a pretty-well-documented API you can use inside the built-in CMS to build whatever UI is called for. It's somewhat troubling that your PHP code actually gets stored in the DB and eval()'d ... which means you're stuck implementing in the backend's code editor. But I was surprised to find it wasn't as painful as I thought it would be.
I have little respect for the PHP certification but one of my previous employers paid for it and it has been great in terms of aiding in credibility and job opportunities. I agree it doesn't really mean much, but it is a surprisingly great benefit.
Most recruiters are scum. Demand to know how they got your details. If you're in the UK ask them why they are violating the Data Protection Act. You'll get far more work from technical contacts than recruiters, a good recruiter (they do exist) wont have got your CV off someone on Reddit - so any calls you get as a result of this you can safely tell them to fuck off.
I am not surprised, some of the offers seem too good to be true and the person offering often seems to be using words they don't understand.
How do you tag the resumes? This is a brilliant idea.
Must... Sanitize... Data...
I bet that out of control porn guy is one of them.
You say you tag your resumes. Can you tell exactly which job adverts you responded to passed on your details? If so, could you tell *us*?
opencart is the best cart out right now but prepare to do all customizing and extensions yourself.
If you cant figure something **that** simple out, son, you're not welcome on any team of mine ;O
I don't know why you were downvoted... Trent Reznor did this with the Broken Videos until a few years ago
I get emails all the time for the address I use to post on job board (monster/dice/etc), offering me a great position in &lt;something_I'm_not_experienced_in&gt; at their office in &lt;not_my_state&gt;. I've gotten tired enough of these emails that I've started responding, asking how their training program is, and where their office in &lt;my_state&gt; is located. It's funny how they dance around those questions and refuse to give an answer. One such event actually got to telephone conversations, and I repeatedly told the 'recruiter' (I use that term loosely) what state I was in, and he assured me that yes, even though he kept saying &lt;other_state&gt; they did in fact have an office near me. OK great, let's do the phone interview with the actual company. A tech from the company called, and the first thing I asked him was where the job was located... surprise, NOT my state! And he was pissed as hell when I explained that I had told the 'recruiter' repeatedly where I was located, and was not interested in relocating. Screw it, I'm not working. If these guys are going to waste everyone else's time, I may as well waste their's too. and maybe give them a bad enough name that nobody will use them.
Have one gmail address per submission? http://lifehacker.com/5650856/use-namefilter-as-an-alternative-newsletter-spam-catcher I'd maybe suggest not giving out your number at all. OR use google voice with a message that says please leave a message about what the job description is... 
I've created a presentation system for my phpexperts training course. Want to review it and purchase a (closed-source) license?
What's the story on this?
different email addresses (or phone numbers). recruiters will want to email you more info and they will always confirm your address. so basically they are telling you where they got your information from without you even having to ask :)
If I have to tell you, I don't want you on my team... :P http://www.ninwiki.com/Broken_Movie http://en.wikipedia.org/wiki/Broken_%281993_film%29#Availability
id rather not. i dont want to start a flame war / finger pointing game. they aren't too hard to find.
First off, what do you like about it?
I think BB is so awful because they HAVE to let schools/teachers have the ability to customize stuff they way they see fit. And since every teacher in the universe thinks "their way is best" you get this MySpace effect with almost every class that uses BB. I don't blame BB.
There ya' go.
Are you talking about [this post](http://www.reddit.com/r/PHP/comments/dbrxm/posted_a_great_contract_offer_in_rjobs_but_got_0/)? Because if so, I can tell you he was *not* one of the ones selling resumes. How do I know this? Well, I am working for him/them now.
Different middle names?
They can't be that obvious if you applied for the jobs, heh. Recruiters really are rabid, though.
Learning something new every day, thanks man!
I start by not using a proprietary format in a supposedly free course. Use ODP.
Just curious, have you ever tested the system on actual students? What kind of reaction have you gotten from them?
Any idea where this can be found? Can't find a torrent unfortunately.
are you serious? rofl... wow
Is that because I shouldn't watch it or because it's extremely easy to find?
because this is a php thread
I don't get your point? It's not like I came in here and just randomly asked if this video is still available, it was brought up through the course of discussion. It is completely on topic since the topic in this subthread has changed. No need to be a dick, you could have easily just answered my question by now.
i just hit 44 and i'm calling bullshit on your first bullet point (but you get an upvote anyway). My best tip for this one: note that the server is using php 5.3
not being a dick, making commentary... i have no idea how to get a copy of it anymore, I don't think I even have it anymore.
Ok, well thanks though. So have you actually seen it then?
yes, years ago, i downloaded the torrent when it hit... and i saw an old partial version too... seriously it wasnt about you it was more like "i cant believe where this whole thing is going." sorry you took it personally but imagine from my perspective... its worth tracking down
Oh, no problem. I didn't take it personally either which is why I didn't directly call you a dick (wasn't trying to be mean or cause offense). Thanks for the info though, I hadn't heard of this before, hopefully I can track it down somewhere. 
* [RSS](http://www.phpclasses.org/blog/category/podcast/post/latest.rss) * [iTunes](http://itunes.apple.com/podcast/lately-in-php-podcast/id373016482)
I hate headhunters with a passion, and I congratulate you for tagging your submission(s) in such a manner that you can track who's really offering a job versus who's trolling for resumes. Back in 2006, a job posting showed up on my local LUG mailing list for a PHP developer. I applied and was hired. Now I'm the DBA at that company. Don't discount any opportunity, but do hang up on the recruiters when they call, or delete their emails. They aren't interested in your future at all, they just want commission.
I think tf2ftw is talking about the [other post](http://www.reddit.com/r/PHP/comments/dizta/immediate_job_opportunity_web_developer_needed/)... BTW, Congratulations!
So how do you guys want me to deal with this? I see a few options: 1. Dont allow postings of jobs any more. I dont think this is a good idea personally. 2. Break it off into a separate sub Reddit. a r/phpjobs perhaps? 3. Require all of the job posters to receive approval from me before posting. I would have to set up something where I can call them and make sure they are legit and not a recruiter. 4. Allow it to continue. Voice your opinions please!
&gt; BTW, Congratulations! Thanks :)...love the job so far.
The slides that I get from the instructors are powerpoints ... the user technically never sees them. We're just using them as a basis for the course content. 
no i was talking about [this post](http://www.reddit.com/r/PHP/comments/dizta/immediate_job_opportunity_web_developer_needed/)
ZenCart, Magento. ZenCart is more simple than Magento Magento is newer than ZenCart ZenCart has more "bad code" than Magento
I do not think you should stop job postings. Even if people are getting calls from a recruiter they are still getting jobs put in front of them (and thats what they want, right?). A PHP jobs reddit might be nice, but would be less frequented and would lose its appeal. Approved posters would be kind of cool. The problem is that it is a lot of work to police and it wouldn't be hard to 'trick' you into believe my fake company is real. I kinda think - 'Hey - just let it continue the way it is'. Like I said, most people looking for work are probably happy to hear from a recruiter. It's annoying for me to be getting these phone calls everyday, but at least about 15 more people now know my name. The whole point of my original post was to just let everyone know what happened. I do not want to hurt/prevent other /r/php-ers from landing potential jobs.
john resume54 smith!
Why create an account just for that? Use the + signe in your e-mail address (given your server supports it). For example a mail sent to example+job@gmail.com will end up in exemaple@gmail.com account and it can be filtered to be given an label. *edit: nvm, RTFA ;-)
Well, then also instruct them in using open formats. Pretty simple. Also, use less monopolistic terms in your discussion of the project. "Presentation" is far less ambiguous, and doesn't give credit to anyone who doesn't deserve it.
&lt;lol&gt; At my place of work anyone caught using a debugger gets the evil eye. We are all professionals so that should tell you something. &lt;/lol&gt; Fun aside, it really depends. Debuggers are not for everyone, if you write good tests first then you may never actually fire one. I recall my days with .NET where it was essential to have VS.NET run in debug mode while doing a desktop application, but things have moved on since then. I really think debugging is a bad-bad way to squash those bugs or write quality code. Don't get all too excited now.
Who said that is what I was trying to do? This is just a more useful version of var_dump(). #kthnxbye
How is this giving PHP a bad rep? Sometimes it's useful to dump info to a screen, this is just a great way to see it easier. If it sucks that much, why did it get posted on phpdeveloper.org?
I've been meaning to set FirePHP up for a while. Using this to debug AJAX would clearly be using a hammer on screws, its a screen output debug function. This is EXACTLY how XDebug works. Gonna bitch about XDebug too? 
Sure, but I develop on multiple systems, sometimes I need some cheeky live debug or to test something on a dev server via SSH. This lets me do that.
Wow, somebody bothered making a whole website for that?
Because everyone knows what the plus sign is for and if they got it from somewhere else they may not tell you that part. Also if you have to fill out an online application it is possible that they wouldn't accept that email as valid (even though it is). 
&gt; XDebug + Firebug + FirePHP + an IDE = Win More like a giant waste of time :D Specs + Implementation + Tests + an Editor = True Win 
It's cool that it happened on its own. I personally am not at any level that I could apply for these jobs but just reading the posts I think is very helpful. Typically I read a job posting and then go research whatever it is they're requiring. It would be great if you have the time to verify posters, but it doesn't yet seem to be a problem. 
Be very specific: Allow tele-fucking-commuting or don't post here, post in regional reddits, like /r/dallas.
I posted a job offer for a in-house php guy. Got one resume. Don't see myself selling any information, or sharing with anyone, even if I got 100 resumes. A call would be fine with me.
No, it was NOT me, or anyone involved with my company. I got one resume. I am NOT sharing this information. You "bet" incorrectly. It wouldn't bother me much if this username wasn't my company's flagship network, but I have to clarify that I DID NOT SELL OR SHARE ANY INFORMATION.
OK no prob. The crass-ness of your post left it suspect but I believe you.
I like having a postmaster at one of my domains that all mail gets forwarded to. That way phpDev@example.com goes to the same place as devJob@example.com. 
Well ... the presenters are all done, as is most of the video and HTML. And since all of them are non-technical people, it would take more time to get them to convert than is worth it. At some point or another, I would have probably looked less competent by not being able to handle what is effectively a de-facto format by demanding open formats. A presentation doesn't necessarily imply a Powerpoint-esque slideshow, altho I would have preferred they used an open document format because OpenOffice does not render PPT's properly. It's bad enough I had to edit all the video on a Windows machine...
In the jobs i have worked i have found that test driven development is the result of a group of poor programmers who consistently make critical errors that results in this development paradigm in order to overcome it. In every job i have worked where the programmers are at the top of their game and produce quality, full proof code test driven development becomes a laughable idea.
How large are the projects you're working on? Unit testing becomes more of a hassle as systems grow larger, but I've found that often times it's a life savior every time you bring a new programmer on board. Looking at a single component of the system and its associated documentation, they may be comfortable making a change, but any breakage that occurs because of nuances of the system that other components depend upon will be caught be good quality tests. Unit tests help you to sleep at night and beyond that, if you have to interact with other vendors or businesses, it provides you with a solid printable report that says "hey, we aren't broken" and forces them to review their own systems when something goes down instead.
It's not you... it's the cake php guy...
It's the CakePHP that offered the free IPad. That was the scam.
True. Sad that the most competent people are seen as the least when it counts the most. So use "slideshow," either one works. If you're talking about files, "presentation" very nearly always means "slideshow," especially nowadays.
I'll tell you. It was the cakephp job offer that included the free IPad...
Generally speaking, it's a red herring...and Powerpoint is the client's language. I'm probably guilty of using it as a genericized trademark. I use the client's language as much as possible, even if some part of me had to die first to be OK with it. But presentation to old people can mean something completely different at first. You're smarter than the client is, so the less they have to think or even communicate with you, the more helpful you are in the end. While I *hate* dealing with Windows and all its moronic formats, I tend to think of myself is this ubermachine that takes all sorts of garbage like clients' problems, specifications, and files as input and spits out nifty-ass finished projects as output that they didn't even know they wanted but salivate over. The fewer buttons the client has to press on me and processes they have to initiate, the better. 
Probably that it's his, and he charges for the licenses?
it wasnt that one. i would not ever apply to a job that offered a free ipad... comeon.
*shrugs* I'm being open minded for this thing. And if it really did what I wanted, I'd be tempted to buy it. But I doubt it does... It would help that if he were going to be a salesman for his product he could answer replies. 
Oh i agree with you, im just saying that the business motivation tends to not be there when there have not been problems rather then spending X amount of time writing unit tests for everything
don't really see a need...........at least i cant think of a use.
So obvious it might be a troll......
Semaphores are a really basic concurrency primitive. You need them if you're doing any kind of concurrent access - multiprocess, multithread, anything like that. They can also be used to implement virtually any other concurrency primitive, as well.
A good thing to remember with semaphores, SysV message queues and shared memory is, that because they are identified by their integer ids, any process (at least from the same user) using that id can access them. That is one reason I chose not to use message queues, I didn't want the possibility of another process removing a message from the queue.
Who's bitching? I was trying to point out that unlike calling var\_dump() et. al. calling fb() doesn't interfer with rendering or parsing as it passes all the data via http headers. This is convenient, simple and unlike xdebug doesn't require installation of a php extension. Xdebug offers of course much more than FirePHP, but for the most part Firebug / FirePHP more than suffices for the vast majority of web debugging situations. Gonna troll incoherently about this post too?
They are basically a flag that a process (or a critical section of a process) holds up to say "this resource is mine". Any other process that wants to hold up the same flag is then told to wait until the fist process releases it. It keeps multiple processes out of a specific area where it would otherwise be dangerous for two processes to be falling over each other's toes. It is a very basic need for any operating system or many complex processes.
This is an important point (and one of the reasons I consider multi-processing and everything that goes along with it a "Dark Art"). PHP's implementation of semaphores, message queues, and shared memory isn't very robust. It's fun to play with, but in general I'd be scared of using in any sort of production code where reliability is needed.
Does this work on PHP running on Apache? Or is this command line (CLI only)?
&gt; This is EXACTLY how XDebug works. Gonna bitch about XDebug too? Just because something does something a certain way doesn't mean it's the right way :) If you've got access to FirePHP or an IDE's debugger then I'd say take advantage of that (an IDE debugger will likely give you lots of nice things like breakpoints too), otherwise your function helps print the information clearly enough.
Opened thread to upvote this with a FURIOUS FUCKING PASSION. With all due respect (from what I can tell from the codebase, very little is due) to the OSCommerce developers, the product is COMPLETE AND UTTER FUCKING GARBAGE. I've had to support/clean up a bunch of messes from the guy I replaced. The biggest pain in my side has been OSCommerce, with ZenCart coming a close second. My recommendation would be OpenCart. It's not perfect, but after a lot of time spent screwing around with various carts by both myself and my co-worker, we've determined it to basically be the best available.
Hmmm, perhaps you are taking a different approach to me. A negation or even binary OR works for the range required. &lt;?php $a=101; strrev($a)-$a||print'equal 1'; strrev($a)^$a||print'equal 2'; I take it you are using the new ternary syntax? I couldn't get that to work in 44 characters.
That's one standard, one outlook. It's one that gives the software development profession the shitty reputation it has. If a surgeon took the attitude that "Do whatever the patient wants, and if it means having to do a poor quality job, whatever!" would that be okay? If I needed my appendix removed, but couldn't accept the appointment available tomorrow because I was leaving for a vacation, should he just go "Oh, that's okay. I'll squeeze you in on my coffee break!" and then perform the surgery quick and sloppy? If you want to be treated like a professional, act like a professional. If the client makes unreasonable demands, tell them no. 80% of the time they'll get over themselves. 15% of the time they'll get mad and huff and puff and then just give you the time anyway. The other 5% they'll tell you to piss off and go give their money to some developer who will do a piss poor job of it. Here's the really fun part: The amount of time you'll save not dealing with bullshit clients and not having to try and maintain and support shitty code will probably make you your money back and then some. (Oh, and it helps a lot if you have a signed contract beforehand with scope and set deadlines.) Something I printed out and hung up on the wall in my office. It's written for sys-admins but applies just as well for programmers: &gt; **The Abigail Oath for Sysadmins:** &gt; I am hired because I know what I am doing, not because I will do whatever I am told is a good idea. This might cost me bonuses, raises, promotions, and may even label me as 'undesirable' by places I don't want to work at anyway, but I don't care. I will not compromise my own principles and judgement without putting up a fight.
Most of the time the poor asshole that gets stuck maintaining it is *you*. And when the client comes back in a month because half of the application barely works because of all of the bugs, or because they want another feature, you're going to be stuck trying to fix and maintain your sloppy, shitty code. In the long run, you'll save a lot more time just putting the few extra hours in the first time and doing it correctly.
Giv
Post the source? It'd be cool if I have my own exception classes extend it :) Do you have a github?
It would also be cool to just steal this and forget about it
Something went very right here. Is it a plugin you use to do the stacktrace? When I wrote the error-handler I use now I couldn't find a way to trace the hierarchy of the functions.
github it!
Well it'd be hard to forget about it if we could clone the github repo.
debug\_backtrace() and debug\_print\_backtrace().
Alright its on GitHub, its very rough but I'm sure you all can figure out whats what. http://github.com/kurtschwarz/FFFUU-Exception/ I will be committing a major update to it later today. * Edit: The new version is up. - http://imgur.com/3JyJp.jpg * Edit 2: Another version is up now, this one includes syntax highlighting. - http://imgur.com/MSEY8.jpg
Thanks! revising my error handler now!
Very nice! The one thing I would add is that if you're going to go this far with it (ie you should never have this on production), you might add in the option to click on something to view the full source of a particular file. I also wouldn't indent like that since for a long stack it would crunch up at the end, and it's not going to ever go back out so what's the point of indenting? 
Why is session_start() in a class file?
You're missing the point. If the customer wants green widgets and red widgets and you point out that colorblind people won't be able to use their site, it's not your job to determine the clients business model. It's your job to make the fucking site red and green, per the client's wishes. If you stand on principle and say that empirically, this is bad site design, you aren't servicing the needs of the client and you should be fired. It's not your fucking decision. I've known so many people like you. You love to think that you know everything and are willing to sacrifice someone's business because of your arrogance. You know what? I fired people like you. Not because your work wasn't excellent, but because you are a very small part of a very large organization and you're making decisions that affect an entire business line and hundreds of people and you're just fucking wrong. Example: I need a shitty piece of functionality thrown up really quickly. Me: Go do this. You: Fuck that, I stand on principle and won't do shoddy work. Me. Fucking go do this. I don't have time to explain. You: FUCK THAT. I STAND ON PRINCIPLE AND WON'T DO SHODDY WORK. Me: You're fired. I don't have time to argue with you. Now here's why I needed that hypothetical shitty job done quickly. We're bidding a contract and we need a certain piece of functionality as a "check box" in an RFP. It will never be used. EVER. But if it isn't there and at least kind of working we will not be considered for this bid. It's a 200 million dollar bid and this tiny piece of code on one little web site could keep us from winning the bid, but I have a fucking know-it-all sysadmin who thinks he's God and won't do the job. In fact, he is so fucking proud and arrogant that he even has this stupid sign up over his desk to justify his actions. You know what? You want to be the boss, go start your own business. I'm paying you, do what the fuck you're told. If my business crashes and burns because I fucked up, that's my problem, not yours. Your ONLY responsibility is to do what you're told. You can recommend better courses of action, you can document why the current plan is a bad one, but at the end of the day, you're hired to DO WHAT YOU'RE FUCKING TOLD. I would also like to point out that I have been on both sides of this issue. I was just like you and was the person pointing out that the course of action was stupid, that what we were doing would have long term financial ramifications, etc. Hey, guess what? Larger picture concerns were above my pay grade. I was wrong. Yeah, from the 1' level I was right, but from the 100000' level I was just in the way. So I sympathize with you, but you just don't see things from both sides and I do. And I'm a business owner. I'm the one making the decisions and it's my money on the line. By the way, I could argue this very effectively from the other side, but that's not really my goal here. I just want some nameless person on the interwebs to know that there are reasons why it's a good idea to do a shitty job.
Its not, Framework.php is not a class file.
Amazing. 
I think you should use this in production and display it for the users as well.
CSS file is currently missing.
I like it, very cool output. Is it hard to modify?
What's wrong with XDebug?
Very cool stack trace. Thanks for the source!
I hate you for this and would like my life back. (bottles in 212 after ~5 hours)
Hehe ;&gt; Don't repeat code on 99 bottles and you will be under 200 bytes easy.
I don't believe there's any redundancy in here, but that's partly due to a function, which I feel like was possibly a bad decision. edit: When I first started getting decent at PHP I was crazy about premature optimization and small byteline count. I've moved on from that (thank god), but this website is still like *crack* for me.
Good to hear :]
nice. I'll fork it and learn of all your black magic
Cool stuff, thanks again for the source! If I could slip in one recommendation it would be to link the imgur image into the README on Github so that people that stumble upon it can see what it's all about without having to clone it and try it out :)
It looks good, but you should display what parameters were passed to the functions. That would be so much more useful in debugging than displaying the code around the function calls.
You must have something in from of your php block, even a linebreak counts. Anyway you could probably use this: &lt;script&gt; window.location = 'http://foobar.com'; &lt;/script&gt; Though the header method is a lot cleaner I recommend debugging that.
You should tell us what error you're getting.
CSS file is right here http://github.com/kurtschwarz/FFFUU-Exception/blob/master/assets/css/exception/global.css
Thanks for the suggestion! I have updated the README :)
I'm working on putting that in with a new version.
Its very easy to modify, give it a try!
Looks pretty.. but why would a user want to see all that?
If I can find some time at work tomorrow I will. Thanks!
Hows this look? http://i.imgur.com/3JyJp.jpg
I do not use this for production.
Theres nothing wrong with XDebug, I think its awesome. I use it all the time to profile my code. I just wanted to make my own debug page :)
thanks for asking. i think that continuing it to allow for telecommuting jobs only (as another poster before me suggests) and having applicants call out the posters selling info is the best way to proceed. 
&gt;if this username wasn't my company's flagship network while i understand your rage, perhaps you should reconsider that move given the invention of search engines.
lol. that wasn't a clue to anyone?
you realize that's because monster sells credit for downloading prospect resumes in huge blocks, right? so a lot of the time even if the company isn't solely buying them to shove onto recruiters, they sell them to offset the purchase price.. it sucks, just explaining it.
If you call echo or print at any time before header(), it won't work. If you have anything outside of &lt;?php ?&gt; before you call header(), even spaces or newlines, it won't work. Any other function that sends data to the browser (e.g. readfile(), var_dump()) will also make header() fail.
Just checking... :)
Thanks for being so helpful. **** off, I am actually looking for people who have doen this and know how it is done. Happy Trolling
That looks good! Would be perfect if it had syntax coloring
ORM (object relational mapper) helps developers to work with database without having much knowledge in Database. We identified best open source ORM libraries for PHP developers to make their life easy.
I'm going to see about adding that to the next version ;) Edit: http://imgur.com/MSEY8.jpg Next commit will have this implemented along with a CSS file to control the colour of the highlighting.
Programmer + designer? Ick.
Quite shocked but I got to 195 *and* wasted most of my Sunday in the process!
&gt; helps developers to work with database without having much knowledge in Database While ORMs have a few advantages over plain SQL, this isn't one of them. Developers who write code that uses a database _should_ have adequate knowledge of whatever database they're using. Otherwise they end up writing code that totally ignores how relational databases work. Clever ORMs might second-guess what the developer is trying to do and generate better schemas/indexes and queries, but that doesn't make up for the developer's lack of database knowledge. If anything, the ORM would give the developer an illusion of competence, and this may encourage him to keep ignoring RDBMS fundamentals instead of actually learning them. Then they wonder why their pages take X seconds to load, because they're using an N+1 pattern or un-indexed LIKE queries or whatnot. Well-made ORMs are fantastic tools that help developers avoid tedious tasks. But they cannot substitute for proper knowledge of SQL, and should not be promoted as beginner-friendly tools. Learn SQL first, then learn to use ORMs.
+1 on that. I mostly use SQL, but have recently started using http://drupal.org/project/orm for certain tasks, and it removes the tediousness but is no replacement for delving into SQL when necessary.
Nobody was comparing XDebug and FirePHP. They do different things. I spend 99% of my time working on really simple CMS' and I don't need to worry about "messing up rendering". I just want to see whats in a variable quick, so XDebug or this dump() do the job perfectly. This was just a fun little snippet to recreate XDebug at a very basic level for those that can't (or don't want to) install. Not everyone is trying to write a "how to do everything, the best way possible for everyone EVER" post. This was just a quick function post, it even had a poo joke in the name! Don't be so serious :)
i have to cry foul in this comment. either you're a rubyist or a pythonista, you're not any cleaner than the shit you're playing with.
Sounds like a beginner proclaiming he/she's written the best program in the world.
You go to the dentist and ask him to pull your tooth. No fuss. Tooth out. Did you ask for a recommendation? Not with an aching tooth. You just want it out. Did the dentist say you begin losing your jaw bones the moment the tooth is out? Not if he just wants a quick buck. In the end, it's all about the money.
If you'll keep ignoring those emails, they're just gonna pile up.
Hey, do you use Reflection to get the source code?
Why would anyone not want valid XHTML?!?! I mean, seriously, HTML 5 might be great and all, but I'll die before I write something like: &lt;ul&gt; &lt;li&gt;Item 1 &lt;li&gt;Item 2 &lt;/ul&gt; 
I consider it normal. We also give a small coding task as an alternative, for the exact situation you're in. The correctness or incorrectness of the task and the coding style of any additional code is a major deciding factor in who to actually interview. (Protip: Do not submit code with SQL injection or XSS vulnerabilities.)
Something I've had a hard time figuring out is the normal behavior of spammers. They'll submit a link, and then instantly post a comment summarizing the article. Why? Search engines, maybe? Don't they realize how utterly obvious it is? And how quickly they'll get their asses downvoted into oblivion and their submissions flagged?
Not only is it normal, you wouldn't get within ten feet of any of my systems without me having seen a lot of your code beforehand. You don't have any hobby coding projects you could show them?
I'd say it's very normal
4th vote for normal. And saying "most my work code I do not own the copyright to, but here is a simple thing I wrote for my personal website" is perfectly fine too.
It's normal. Just munge up the vars so it's meaningless to the reader except for the logic. That's all they *should* be interested in.
Logic isn't the only thing to look for. How your variables/functions/classes are named is very important, especially when working in a team. Are the names clear and self-explanatory? Do they follow a convention (camelCase or under_scores)? Simply obfuscating some code would make it difficult to evaluate this important quality of one's code.
If you're applying for a php job, I'd be very worried if they weren't asking to see code.
It's normal. I just send them my github link. Or you can tell them most of your code is proprietary, and if there's any example of something they'd like.
I typically find only the crappier employers request code examples. But it's requested of me before.
Could you give us an example coding task?
We give the same task every time with specific Googleable wording, should the applicant decide to get creative and ask for help. It's a simple CRUD-ish application with some specific reports and other requirements. One of the requirement is the usage of a modern Javascript library to demonstrate Ajaxy competence. The report requirements are stated precisely so that there are only one or two "correct" ways to write the underlying query. Technically, it's not even CRUD. In fact, it's read-only, and they supply all the sample data. We state that they can elaborate as much as they want, and can make it possible to insert or update records. The only people that ever did so ended up failing completely because they opened up vulnerabilities...
Yes, this is normal.
If it is a direct competitor do not share the code with them. You can get in a lot of trouble for just a little bit. Tell them you feel it would be unethical and would like to do an assignment of their choosing.
This stinks of someone too lazy to come up with good coding questions or some sample code for you to critique for them. It's not _that_ abnormal, though.
This is why I went out of my way to create my own open source project, the Portal User Directory. Complete with highlighted source code (also downloadable), docs, SQL ERDs, and 100% coverage unit tests! http://www.brokertools.us/user_directory/ 
Oh hah i assumed you meant you had found a multibyte character that the interpreter translated to '=='. I am using the negation as well, with the ternary shortcut.
best solution to this: work on or start an open source project. the code is out there for everyone to see anyway, and you can show this to potential employers as an example of skill.
Wait, you've never once written some code on your spare time? You don't have any open source projects? Do you have a Github/Bitbucket account? Go invent a project or start working on an existing one ASAP, you'll be a much better developer and have code to show off.
At my first ever PHP Dev job I was asked to provide some code examples. I took some of my db classes and day to day code in and described it to them. This was about 6-7 years ago and my skills have improved since then and I haven't been required to show any code. From what I know about interviews and ones I've been a part of(interviewer and interviewee), most employers are looking at your current code quality. Do you comment well? Is your code easy to read? Are there any glaring/obvious holes? As well, I'm finding more employers look at the communicable abilities of the applicant before they get into the technical aspects. Can I work with this person? Do they pick their nose(yes I've had to work with a nose picker), Do I feel I can work with this person for 8+ hours a day? And so on. 
Agreed. All else equal we prefer to hire programmers that demonstrate that they are so excited about software that they can't constrain themselves to just writing code for a paycheck.
Yeah, I don't recommend making the variable names meaningless. Good naming is a pretty big factor when I review applicant's code.
This. Having you WRITE code is normal. Presenting code that may or may not be yours is the strategy of a broken interview system.
&gt; you really only get this at the shittiest employers This absolutely not a definite rule. The employer I've been with for the past two years hired me because of the code sample I supplied after they requested. It's one of the best jobs I've ever had, my bosses are awesome.
I disagree. All of the awesome jobs that paid me well were from companies who gave a crap about the people they hired enough to ask to see their work. If they don't ask to see source code expect to be working for amateurs and expect amateur compensation.
If it isn't normal it damn well should be.
My current employer gave me THEIR code snippets and asked "what is this doing", I very much enjoyed it.
I suggest you read [Everything You Know About XHTML is Wrong](http://diveintohtml5.org/past.html#xhtml). If you don't want to use HTML5, I'd much prefer 4.01.
As long as it is a small assignment I am cool with that. You shouldn't offer to do actual work for free, but some small competency test is OK.
I've preferred to give a simple coding task on the spot. You never know who wrote code they bring in.
I have always been asked, I just wrote up some demo code I saw that does some normal stuff that I give them, took me a few hours to write, they usually barely look at it, it is more just proof that you can write actual code. I don't think I would have ever not gotten a job if I had not supplied it though.
Lol, you say what it did and how it did it wrong?
Facebook is beyond amateur. Trust me, I've seen the source. Google absolutely demands code samples for any position worth a damn. The rest I've not been involved with, but I highly doubt your assessment that they do not want code samples.
Actual work samples are much better indicator for actual work performance than e.g. personality tests. 
glacierexpress said "tech interviews that involve coding". In other words, they do want code samples, they just don't want **previously existing** code samples.
What sort of things do you expect from a sample code? interacting with MySQL? dealing with form input and/or login page? I want to give them enough code to make them feel comfortable and show my knowledge of PHP. 
Of course it's normal! So many jackasses call themselves programmers that it would *never* even cross my mind to hire someone that can't show me code they've written. Actually, I don't hire anyone I don't know from Open Source projects these days.
&gt;EDIT2: A lot of you suggested helping out on open source projects. That's a great idea, but where would you recommend I start? google code? Shameless plug- I'm always looking for more people to work on an [open source project](http://code.google.com/p/mortar/) I started, so if you're curious let me know. Otherwise just pick something you wish you had, program it, and dump it online somewhere. I've done this with a caching library, javascript minifier, session manager, and even some system administration scripts. But to answer your original question- I don't hire anyone whose code I haven't seen.
Sounds like the anti-pattern pattern, otherwise known as the DRY KISS.
Here's something you could plug into an existing site: http://grabaperch.com There's also no harm in just installing WordPress in a folder on your site, then creating a theme that matches your site. You could even just create a theme that uses includes to include the existing template/nav elements of your site. I agree that writing new blog software sounds like reinventing the wheel. 
DRY = Don't repeat yourself. KISS = Keep it simple, stupid. That doesn't help me figure out what Jim is saying though.
http://example.com/blog where /blog = WordPress installation. Problem solved.
Use PDO. Use queries with placeholders. Know when and how to escape data at each layer. Don't under-engineer. Separate your business logic from your presentation. Separate your business logic from your controller glue. Don't over-engineer. For bonus points, use a few 5.3 features.
I see. Personally that's what I do, but I don't find it ideal. I have to make sure Wordpress is kept up to date to reduce the chance of my site being compromised. I also can't integrate the blog with the rest of my site. To get a list of posts to appear on my homepage I needed to write code to hit Wordpress' RSS feed.
They have an existing site, with it's own look and feel, style colors, and fonts. They don't want WordPress or anything. They just want a 'blog' articles on their splash page.
Yes, I shown them WordPress, a customized wordpress with their colors and everything. It was a waste of time and effort -- they don't want that. They want their site, which is up and running and has been for years, with *its* styles, colors, and layout, and they just want a couple blog elements on their front page instead of the generic and stale welcome message. 
So just write new blog software? That doesn't need updating and is invulnerable to XSS? And what's easier than RSS templating?
I believe xiann means that you don't have to run the entire site on Wordpress. Leave the site alone, add wordpress to a subfolder. You don't even really have to skin it. Let them blog on wordpress. Then call in the most recent blogs on the home page of their site.
There is a little arrow pointing up, that you should use if you want this message to have an impact.
Yes it is.
regarding loading posts outside of wordpress, I wrote this for someone wanting to pull posts via ajax, but you could modify query_posts in this example to suit your needs, much simpler and more flexible than using the feed: http://pastebin.com/iWkdmfaH
If their site is already PHP, really just install the wordpress for them in some directory so they can create article. Just make the calls inside the pages they already have. There is also [halogy](http://www.halogy.com/tour) and likely others as well that make importing a site look simple (haven't used myself though). You can have them have their same layout and everything by using their current layout as a wordpress template... heck, don't even tell them if it really comes down to that. You can even use wordpress white label to rebrand the admin section.
If all they want is to display a couple of recent posts from a blog, why not get them a free blog (WordPress.com, Blogger, Tumblr, etc.) and use the free service's API (such as an RSS feed) to pull the recent posts into the site? A lot of real companies do that for convenience. Also, it would be super simple, and you don't have to worry about your blog getting hacked, etc. On the other hand, if you can bill them for the time you spend reinventing the wheel, and if you think you're going to enjoy doing it, then go ahead, write your own blog! BTW, What's wrong with [this blog](http://sourceforge.net/projects/sphpblog/) or [this blog](http://www.supersimple.org/)? Both should be very easy to fit into any existing site.
What I did for a client was the following: * Create a WordPress theme without a header or footer. The default Twenty Ten theme is easy enough to gut. * Include the WordPress installation before my own code. * Use output buffering (`ob_start()`) to capture all of WordPress' output (most template functions use `echo()`). * Store WordPress' output in a variable: `$wp_content = ob_get_clean();` * At the appropriate location in my template/ view, I simply printed the above variable. This'll give you all of WordPress' functions and features (commenting, plugins, customizable blog menu) while not breaking either the site or the blog. There shouldn't be too much of a performance hit when you store the output (only ~13 Kb).
posted this in reply elsewhere, here's a [simpler method](http://www.reddit.com/r/PHP/comments/dmvt6/how_i_write_an_api/c11epwc)
&gt; $blogule-&gt;newPost($content, $author, ... ); I would suggust that you used an object for the 'Post'. It's inevitable that you will have to add more fields to it as your project matures. It is also evident that you will need a similar function 'updatePost(...)' with the same arguments. So, in no time at all, you will struggling to include all the important and non important arguments every time you call these functions. Wouldn't it be better if all you had to do was '$blogule-&gt;newPost($post)', or, even better, '$post-&gt;save()' ? 
There are some pretty awesome standalone, and very simple blog solutions. I think WordPress would probably be a bit much for something like this. It would also be pretty easy to write a simple blog script. Still, I think you should look around a bit for an easier/simpler/more elegant solution before defaulting to WordPress. Someone else said use a free blogging service and their API, and I second that motion.
I have 4, makes life a lot easier
That's it, I'm giving up. I really have no idea how to cheaply handle the bottle/bottles thing, here's my feeble and invalid attempt: &lt;?$x=99;$y=" bottles of beer";$z=" on the wall";while($x)echo"$x$y$z, $x$y. ",$x&lt;2?"Go to the store and buy some more, ":"Take one down and pass it around, ",--$x&lt;1?99:$x,"$y$z. "; That's already 178 bytes. How zkhr managed to squeeze a valid submission in just 5 bytes more is beyond me. Then again my approach feels naive and doesn't (ab)use any of the PHP idiosyncrasies that I imagine would come in handy in golfing (eg. allowing barewords as strings, ?: ternaries), so surely there are better ways to attack this. Oh, and my boss would like talk to you about my lack of productivity today :)
There's a guy over at [Perlmonks](http://www.perlmonks.org) who has written a [lengthy series](http://www.perlmonks.org/?node_id=759963) about code golfing (primarily in Perl, but covers PHP, Python and Ruby as well). Very interesting read. Edit: [The part about PHP](http://www.perlmonks.org/?node_id=762180)
There's also this funny notion that they are paying you for your expertise, truly. That for your remuneration you should be pushing back a bit on the client and explaining how WP would fit into their architecture, benefitting from a community of people all working to provide the best blogging tools out there.. there's an awful lot : post by email, media management, rss management, SEO, etc. that you don't really want to tackle yourself, and its super simple to move that data around. Go with wordpress, you also benefit from mobile apps for posting, constant security updates to guard against xss and the like.. doing it any other way is just impractical, and should cost them a boatload more money.
Not this.
Fuck yeah, I had an interview where the douche wanted me to do some non-trivial code for him *over the phone*. WTF? Needless to say I did not do well, and I'm glad I didn't get that job. 
Well, I'm giving my assessment from an experience of 2 (myself and a close friend) which both entailed senior developer positions (me on the Gmaps app, him on MapReduce). So, maybe it depends on the department? Either way, they made us write a lot of code (particularly him, since MapReduce is a strange world anyways.)
In addition to McGlockenshire's post (cannot stress PDO enough), learn what MVC is and how to use it. The best way is to make your own MVC framework, but dig into CodeIgniter/Kohana/Zend/CakePHP (a lot of jobs use frameworks and the dev team will love you if you already know one). A good place to start would be creating a basic website. Maybe a forum, an imageboard, an AJAX-y chat thing. This way they can see you a) know all of the technologies (MySQL, JavaScript, PHP5 [if you use 4, I will find you and throw your computer out the window]) and b) know how to apply all of these technologies and aren't just talking out of your web scale ass. If you ever have any difficulties, a great place to start is contacting someone who's already done what you need to do. When I was making a scraper, I emailed the guy who created [wallbase.net](http://wallbase.net/ "If you use it, donate. His bandwidth costs are ridiculous.") and he was extremely helpful in explaining each of the things he used and why he used them. edit: added CakePHP to the list of frameworks. You'll probably find that most jobs use CakePHP and Zend more than CodeIngiter (I'm not sure of any company that currently uses Kohana, but it's *so much fun*).
If they want you to write some code on the spot, that I can understand being wary of. But seeing some pre-existing code? I absolutely agree on that: you need to get an idea of what kind of code you're going to get from this hire.
Yeah, most jobs that require you to take a code pop-quiz aren't the kind of jobs you really want. I don't know of any time that I had to code something *immediately* while someone looked over my shoulder and then graded it. Completely unrealistic.
Yep, every employer should always want to see your code, be it a trivial example, open source contributions or something else. 
&gt; CodeIgniter/Kohana/Zend No love for CakePHP? Apart from that obviously accidental omission this is some good advice.
Bah! I knew I forgot one. My sincerest apologies.
Haha, no worries.
Man, thats a pretty big undertaking. You could write a blog in 5 minutes using CakePHP. I highly recommend it.
What you want is the facade pattern: http://en.wikipedia.org/wiki/Facade_pattern
How about Symfony?
If he can get into Symfony, I'd say go for it. I wouldn't want someone new to MVC frameworks or OOP to start out there, though-- definitely with something like Zend, CakePHP, or CodeIngiter. I only mentioned Kohana because it's a less-documented, PHP5-centric CodeIngiter and has a lot of expert-level support (a lot of the plugin authors for CI are moving to Kohana 3).
Thanks a lot for your reply. I will try out Zend or CakePHP. I do use PHP5 :). Any particular good tutorial or book on MVC online that you recommend?
I have been actively seeking employment, and have been asked that by at least 5 different within he past month. It's standard procedure IMO 
"rofl"? are you 9 years old?
yes. I am a 9 year old subscriber to PHP and my dad says to leave me alone or he's calling the cyber police
seo much?
Maybe they just want to make sure they are not wasting their time with you on an interview.
I wouldn't work for a company who **didn't** quiz me during an interview. As someone who has been on both sides of the interview table I can honestly say you get a lot of people who can certainly talk the talk but when it comes time to actually coding you know they are full of it when they cant figure out how % works. Also to your point about having to code something *immediately*... Have you not ever had to fix a critical bug in production? That kinda stuff has to have been fixed yesterday. Of all the startups I've worked at and interviewed for, the best ones always gave the hardest quizes. 
It's obvious that's what they are doing, but the interviewer having good questions or sample code to critique could easily be a far faster method.
&gt;you get a lot of people who can certainly talk the talk but when it comes time to actually coding you know they are full of it when they cant figure out how % works. That's what the take-home work is for. Of all the places I've worked, the worst have been where they throw a pop-quiz during an interview. You should be able to see my knowledge from my resume and the example work I gave, not from putting me on the spot to answer a question that may or may not have anything to do with the job. On-the-spot questions make even the best programmers hesitate. &gt;Also to your point about having to code something immediately... Have you not ever had to fix a critical bug in production? That kinda stuff has to have been fixed yesterday. Of course, but because I'm usually familiar with the code before I dive into the problem, it's less of a pop-quiz and more of a bug fix. Most of the critical production bugs have been "sorry, I neglected to change X variable to fit the production environment", not "code a basic forum in 30 minutes, we'll be grading you".
Yes, but what if the programmer writes code like in oscommerce? You've wasted your time and his time; you could easily have prevented that by asking some code samples first - it doesn't take more than 10-15 minutes to see how bad the programmer really is. 
[So I emailed them my feedback. :)](http://i.imgur.com/eJeVN.png)
That's the book that got me started with PHP
Me too (no aol)
if(chaptersMissing()) sendCoupon();
[I started with this one](http://www.amazon.com/Programming-PHP-Rasmus-Lerdorf/dp/0596006810). Learned it straight from the horse's mouth. I still find myself using this book once in a while; mainly as a reference.
You're a true hero, thanks!
dude examiner, white house, the economist ,sonybmg and ME(yes I) and many more cant be wrong
When I got started with PHP they didn't have any PHP books yet.
Strange, I just read about a bunch of vulnerabilities, XSS holes that are in open cart.
When I got started with PHP is wasn't called PHP yet.
&gt; Yes, but what if the programmer writes code like in oscommerce? This is exactly what "good questions or sample code to critique" should reveal. Plus, you don't know if the code they submit was actually written by them.
please try [this article](http://news.softpedia.com/news/Unpatched-OpenCart-Vulnerabilities-Sorted-Out-148403.shtml) ** side note, the lead dev is still a douche.
When I got started with php it was awful... Oh wait... I kid, I kid :)
I fixed it for you: if( chaptersMissing() === TRUE ) { try { sendCoupon(); } catch ( Exception $e ) { log( $e ); } }
You're almost certainly going to want to use the [gd image library functions](http://us2.php.net/manual/en/ref.image.php) that now come bundled with PHP. Javascript probably won't factor into the equation unless you want to jazz up your image upload form.
Every modern copy of PHP comes with [the GD extension](http://us2.php.net/manual/en/ref.image.php). GD is oldschool, it's a set of functions and a resource handle, not an object. The function names are also sometimes very hard to read. The `imagecreatefrom*()` functions do as they say. You'd want to use this to load the source image. You'll want to switch it to true color. If it's a palleted file (8-bit PNG or GIF), you might need to do some juggling. You'll probably need to resize the source image. [Use `imagecopyresampled()`](http://us2.php.net/manual/en/function.imagecopyresampled.php). It can also crop while resizing. You can draw the borders using [`imagepolygon()`](http://us2.php.net/manual/en/function.imagepolygon.php). Text is a bit tricky. First [use `imagettfbbox()`](http://us2.php.net/manual/en/function.imagettfbbox.php) to figure out how large the text will be, then [use `imagettftext()`](http://us2.php.net/manual/en/function.imagettftext.php) to actually draw it in the right place, using math to figure out where the center should be. You can then use one of the [`image*()`](http://us2.php.net/manual/en/function.imagejpeg.php) functions to save the result, or output it.
[This](http://www.sitepoint.com/books/phpmysql4/) is the book I used at first.
PHP has always been PHP ... it just didn't stand for "PHP Hypertext Preprocessor" in the beginning.
Wow, a response that actually answered the question! You, sir or ma'am, are a rare gem! :D
Do this, and use jQuery's $.ajax(fn) to provide parameters to the script.
yeah i just didnt feel like typing all that out.
When I got started with PHP it was in its 4th line of recursion.
Make it so you could use any size image in order to create posters and order prints. Work out a deal with a printer who will ship prints for you. Allow browsing of previously created images. When someone views a thumbnail, they could click it to get the larger version and be presented with many different screen sizes (1024x768, 1280x1024, 1600xWhatever) or print sizes (8x10, 11x14, 16x20). If they order the picture as a print then you make money. You can also make money on advertising. I would let people download the images if they want a desktop version for free though.
I declare that from now on, ALL instances of "wtf" be rendered with majestic drop shadows.
And pretty much any variation of it.
Magento is very good for very large sites. Not so good for smaller ones. And be prepared to optimize everything. It has a huge footprint.
Thanks for sharing. My code was fairly similar, but I was still well over 200 bytes when I added the bottle/bottles switch. It took me a while to discover the inline new line trick: I was using "\n" for a while. I actually found 99 bottles to be the most frustrating challenge on the site. The shortest versions I found (http://pastebin.com/k9VrGfz5) put the decrement at the start rather than in the middle. 
[This](http://www.amazon.com/Web-Database-Applications-PHP-MySQL/dp/0596005431/ref=tmm_pap_title_0?ie=UTF8&amp;qid=1286322205&amp;sr=8-5) was the book that got me started.
[Zend PDF](http://framework.zend.com/manual/en/zend.pdf.html) is also a good alternative.
Me too
I've used this before, it's crazy easy to implement.
Ajax isn't the solution to everything. You could use a plain old form with JS sprinkled for a pretty interface. I despise the word Ajax, it's more of a buzzword than anything else.
And that's why I just download them in pdf.
We used this for the first time in a site we're launching today and it's wonderfully easy to work with. We were able to make a certificate generation system by placing high resolution images on the background and then drawing text cells over top of it. I wrote the whole thing in under an hour.
I have used fpdf for quite a while and only issues I have found tend to be utf8 related. Also see fpdi, which will let you import existing PDF (to use as a template). This comes in handle for paper application exports.
This one is far better, and much more frequently updated (FPDF was last updated in 2008!) [TCPDF](http://www.tecnick.com/public/code/cp_dpage.php?aiocp_dp=tcpdf)
I wrote a high-speed, multithreaded RSS feed downloader and parser. Each download, parse, and distribution job was fed into a job runner that spawned child processes via the pcntl extension. Because these processes were running together, coordinating via something like a database would have been too slow. Semaphores let me get a lock on some shared memory, "claim" that job for itself, release the lock, do the job, and then relock and mark the job as completed. It works really well, keeps things fast, and is actually pretty damn fun :D
Thank you, i've been using fpdf for a while (like the simplicity/extendability) but didn't know about tcpdf. can't wait to check it out tomorrow!
I actually prefer fpdf, personally. 
In this case, it's the name of the function used to asynchronously send data with javascript to a php script, which returns xhtml data to the browser... so ajax is more than just a buzzword. Ajax is just a smarter way to work with data- you *could* just do it with php, but it's more efficient to process only the data that will be affected and, it's a nicer UX.
my favorite pdf generator is htmldoc. it seems to handle huge html-&gt;pdf conversions most efficiently. fyi htmldoc is a binary, so must have a virtual hosting/shell access/etc to install.
Well, you're right that for small customizations writing a new blogging platform isn't a good idea. Every time I have to dive into Wordpress code I find myself wishing for a blogging platform with a sane API. Of course, that's much easier said than done. Once you've created something that is flexible enough for everyone you'll have a whole unforeseen mess to deal with. Perhaps having a facade that spoke directly to Wordpress without having to go through the full web stack (like my RSS feed hack does) would be a good interim solution. 
No love for DOMPDF yet? I went through a lot of pain trying to make PDF's using a million little tweaks, boxes, cells, etc, etc - then stumbled over DOMPDF and yeah, I can just feed it the already existing HTML template, done. http://code.google.com/p/dompdf/
ah. thank you. would this work on a shared server hosting? (hostmonster to be specific)
Thanks for the anwsers, I'm at school now (8:44 AM here), but gonna try out these things at home. 
Most popular open source embedded WYSIWYG HTML editor used in most of the content management system and bloggers. Its JQuery and Javascript supported editors, which could be easily plugged in.
Interesting solution, although you do realize that you've gone above and beyond the spec with the "no more bottles" part? I'm sure you can shave off quite a bit by eliminating that (eg. no need for the first ternary and the ucfirst() call). Here's an amended version of your paste where I've done some simple optimizations to shave off 17 bytes (short tag, no end tag, removing unneeded whitespace, using literal newlines): &lt;?for($i=100;$i--;){$a=($i?$i:"no more").$a=" bottl".($i-1?es:e)." of beer";$w=" on the wall";echo($z++?"$a$w. ":""),ucfirst("$a$w, $a. "),$i?"Take one down and pass it around, ":Go;}echo" to the store and buy some more, 99 bottles of beer$w."; And of course, remember to set your editor to use UNIX newlines if you're on Windows in order to actually save that single byte.
There is HTML2FPDF too, and another fork that's really good.
I am using this now because when I started a project the other ones had missing features I needed. I don't like this library, because UTF-8 support requires a separate class and it's a pain in the ass to get the correct font files for it (they need converting and whatnot) and it feels like they are included in the pdf files too, meaning a pdf that was 50kb, when including UTF-8 goes up to 1mb+. That is a major problem when it comes to emailing automatically generated PDFs. The API is also rather limited and takes a while to understand. If you're doing an invoice, getting a table together, with proper handling of text that overflow a line, can take a while. And by that I mean days.
We make our PDFs in Acrobat, and then just dump data into it with pdftk on the command line. 
Look at TCPDF. It supports UTF-8. And it is pretty much a drop-in replacement for FPDF.
Unfortunately, if you need to do any really heavy lifting re: PDFs in PHP, you're going to need PDFLib, the poorly documented (lots of docs, well written, but not about anything you need to know about) piece of shit that it is.
Update us on the response.
DomPDF is absolute garbage. It implements its own wacky rendering engine which never looks quite perfect, it has problems with nested tables, it doesn't support all html elements, and it's slow as hell. I use [wkhtmltopdf](http://code.google.com/p/wkhtmltopdf/) now. It uses the webkit rendering engine to render HTML to pdf. You can even give it a page URL and it will render it back as a PDF! Since it uses webkit, if you can display some HTML properly in chrome, that is exactly how it will look rendered as a PDF. That means you can even use CSS3.
Nope, because they generally kill off processes you start from the command line. You'd probably need a VPS or dedicated server to host it.
I never got what @package was intended for exactly and just always put in the name of the project I was working on. Never bothered anyone, but then again I mostly was the one introducing phpDoc in the projects in the first place... So, what is it really for?
Think of it as "component." Say you have five files and none of these files make much sense on their own or they all require each other. These files would all be part of the same component or package. Remember that it's optional, like all phpDocumentor declarations. I organize my files the same way as Zend Framework so it's easy enough to understand what stuff belongs together so I never use this declaration. Also, if you're unsure, check out a bigger project and see how they use phpDocumentor. That's usually how my best practices are formed. 
I just got done with a project where i used TCPDF *extensively.* I've used fpdf before, and have to say TCPDF is *wayyyy* better. Some of the best things about TCPDF is it's dozens and dozens of example files, the fact that you can use simple html to generate pdfs, and the fact that it's FULLY documented. There's a *really* small learning curve for TCPDF as opposed to fpdf and some other libraries I've used. TCPDF is the best, I highly recommend it.
Stop, stop, stop. First, if you're going to use an automatic documentation generator, use Doxygen. Second, chances are, you don't need all of that javadoc/phpdoc type shit littering your code up. I was once guilty of this too. "Oh, my code will be so much more complete if each variable and method name is fully documented! Everyone will rejoice in reading my excellently documented code." It's bad, don't do it. First, Doxygen extracts the function signature/variables from your classes so you can easily see what the parameters are. Anything more than that, and you can just browse the source (through Doxygen, I might add). Next, if I see one more: /** * @var user_id * @type integer * The id of the user. */ private $user_id; I'm going to go nuts. It's ridiculous. I know I picked your thread to rant in, but if you're considering doing something like that, stop before you even start.
You can tunnel the connection to Xdebug on the remote server using SSH. 
Word, thats where im at now. I think im going to look at the other pdf engine mentioned above before I get too invested in a particular method.
Never used Doxygen but long winded needlessly verbose commenting of code drives me fucking nuts.
Oh sweet! Ill have to give this a shot before I get my head wrapped around FPDF. ... is that why your name is 'allsecretsknown'?
&gt; you can use simple html to generate pdfs Wow, that sounds great. I've been using fpdf for some time, and generating pdfs with complex layouts can be a huge pain. I'll give tcpdf a try the next time I need something like that.
It's only ridiculous if your editor doesn't use it for anything. Personally having phpDoc documented code makes me almost jizz when I have to work with it. Seeing things like this is just too damn sexy: http://gyazo.com/64744c6ae387bf5a6cb5fe80caadc056.png
What IDE is that?
At least Eclipse does something like that and uses phpdocs for popup hints, I think it's great.
Oh, the trick (i just learned) is, lets say your spitting out line items (for said invoice) and the description may be several lines. After you've printed your multicell, get the Y position and use that as your Y for the next set. Example $yPos = 10; //first line $itemNumber = 1; foreach($LineItems as $LineItem){ $pdf-&gt;MultiCell(5, $yPos, $itemNumber); //always 1 line $pdf-&gt;MultiCell(10, $yPos, $LineItem['description']); //unknown lines $nextYpos = $pdf-&gt;GetY(); // get it now, while the Y pointer is at the end of description $pdf-&gt;MultiCell(20, $yPos, $LineItem['price']);//1 line $yPos = $nextYpos; $itemNumber++; } I know I dont have to use MultiCell() for all of those, but it has a padding on top of like 1.82 or something, so putting it inline with anything else looks like garbage. Hope this helps 
Yup, I use Eclipse. I've used PHPEdit as well.
[PHP Designer](http://mpsoftware.dk/) - Windows only and not free. Worst of both worlds? But since I make money off of my code I don't really mind, definitely makes coding easier for me.
You mind elaborating on your method more? I've so far learned most everything I know by reading books, but I don't really like it. It seems like I relearn a lot of the same stuff and it's too slow to keep me interested often times, especially when learning a new language since they tend to take a chapter to teach what I would have condensed to a few statements with a comment explaining what it does and move on. My hangup with just grabbing some code/reference material and reading it is that I fear I may miss out on some very basic information and go awhile without ever knowing.
Fantastic! I love that they're all thumb-nailed as well, saves clicking on every single one to see if it's interesting.