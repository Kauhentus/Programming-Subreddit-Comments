### Red flags or ideas/experiences ? The title of the post is wrong, I have not read any idea or experience, just red flags certainly attributed by those who hold the truth about perfect code. If so, they should start or continue to contribute to open-source projects, to help them improve. The red flags distributed do not go in this direction, it would be more constructive to point out to the authors their misunderstanding, by opening up issues in the project concerned. What a pity that a Framework with so many defects is much faster than others ([twice as fast as Symfony, 6 times as fast as Laravel or cake](http://www.phpbenchmarks.com/en/comparator/framework?benchmark=rest-api)) on a REST request (with routing, translation and loading of 100 objects: see [benchmark specifications](http://www.phpbenchmarks.com/en/benchmark/ubiquity/2.1/rest-api)). It is a good thing that it is still unknown, especially since they highlight the fact that they do not respect all the PSRs ;-)
&gt; Framework agnostic &gt; composer.json requires illuminate support and routing. It would probably be best if you made this package actually fully framework agnostic. Then make a Laravel specific package with that stuff. Spatie does a really great job at those kinds of things. Specifically their Menu packages might be a good place to look things over and get an idea. https://github.com/spatie/menu https://github.com/spatie/laravel-menu
I think their point is that you should split that branch into its own repo and composer package. Similar to how laravel is installed via laravel/laravel, but depends on laravel/framework. So in your case it might be Wolff and Wolff-framework.
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
Hey all, I wrote this object-oriented wrapper for the new [Perspective API](https://www.perspectiveapi.com/) from google so I could use it in a couple projects. I decided to clean it up and open source it as well. This is only my second time releasing a public library, so please shower me with your criticisms.
Ajax?
I prefer “update”
Probably gonna want a blog to bring in traffic and help with seo.
Will work on seo. But a blog about what? Cannabis?
Why does a school management system need stripe?
Bad website performance is usually death by a thousand cuts, so it makes sense for the tool to point out where all these tiny little cuts are. At least you can then fix them. I’ve gone through this process a few times, and it’s really remarkable how much faster a site becomes if you diligently chip away at fixing all these tiny issues.
Yeah, cannabis, lol. Everybody loves weed. What are your website goals? Portfolio, Online Resume, Just for fun? I like to build pages that users can interact with. I used to build an ajax chat into every project I built. People seem to like and use it.
Nicely presented YouTube content. I used this library to email myself Packt publishing's free resource of the day. It worked great for years until they started using an iframe to output the part of the page that had the info I needed to scrape. If anyone is interested in the old code, it's on GitHub https://github.com/enfrte/packt-free-ebooks
Right, like this tool lol. But not everything is so easy to fix, and telling a client that getting a 100% can be unrealistic and unnecessary or not be in the budget.
Those are required only for development of the package.
I'd never heard of Magium before. For anyone interested, it describes itself as "The Selenium-based testing framework for people who hate testing". Link for the lazy: * https://magiumlib.com/
Well you can always just give him a quote, right? “If you want 80%, which is our standard quality, you pay nothing extra. If you want 90%, you pay €2k on top. If you want €100%, you pay €8k on top.”
Badging is important. Does it do badging w/ barcode?
Well, I’m not offering any “standard” when other users control content uploads. Low scores don’t always mean slow speed. For a while a few years ago I got dozens of these requests all at once. They must have all read the same article. We would have clients running speed tests on every page and compiling spreadsheets. Too bad they don’t put that same amount of effort into compressing those jpegs, like I asked.
I just keep `git commit -am 'temp save'` on a 5 minute cron tbh
P.s. How can I create a Post with a Title **AND CONTEXT?** This annoys me for some time know here on r/PHP :/
yes
As long as you're delegating transactions into a different infrastructure (something much more powerful than PHP) yes. The frontend could be powered in wordpress for all you care. After that all these complex website use React or Angular for obvious reasons. So your PHP backend will just be a REST or GraphQL API.
Dogs, travel, food, finance... Cannabis mentioned previously
Binance uses a lot of websockets for live trading data so unless you want to roll your own you'll probably need a websocket library like Ratchet
Ok, I'm curious: give me one example of a site with low scores that's fast anyway. And I think you *can* have high scores on Lighthouse tests even if you have almost no control over the content. If you're on WordPress you can install an [image optimizer plugin](https://de.wordpress.org/plugins/wp-smushit/) to optimize the images you already have, you can force users to only upload images [smaller than some predefined dimensions](https://wordpress.org/plugins/imsanity/), you can (and should) use img srcset in your theme, and you can lazy load images so that the user only downloads stuff he or she will actually see. And obviously you should use [Autoptimize](https://wordpress.org/plugins/autoptimize/) and a caching plugin. I mean, there's loads you can do, and the responsibility is more yours than theirs. But yeah... if they're not paying, it becomes a different question.
Who still use Eclipse to code PHP ?
yes
/php is a little bit special, I believe you can do text and content via mobile, but not web? Something like that.
Your server is probably running a linux distro, in which the heaviest duty process is the database (if it has one) or nginx otherwise. Your PC is probably running Windows, which is a beast in of itself, and has a GUI, plus whatever other processes you're running (Antivirus, IDE, music, browsers, etc). Totally normal.
&gt; How can I create a Post with a Title AND CONTEXT? It's encouraged that you use /r/phphelp for questions and help posts, which is the purpose of not having a body text field. &gt; This annoys me for some time know here on r/PHP :/ If you want to ask questions and add context, go to /r/phphelp - as stated in rule number 4.
But what about the times i didnt have a question? It stil is annoying... :/
&gt;P.s. How can I create a Post with a Title **AND CONTEXT?** This annoys me for some time know here on [r/PHP](https://www.reddit.com/r/PHP) :/ It's done this way to stop newcomers submitting support requests when they should be putting them on /r/PHPhelp As for your question, I've never used "Laragon" but it just looks like a load of scripts and configs around Docker (which seems pointless in its self just use Docker) so yes there will be some small performance hit but it depends on a number of factors. Docker is native to Linux so if you're trying to run it on Windows, for example, there is a bigger performance hit. Docker is a wrapper around the Linux kernel module cGroups so having things namespaced and a layered filesystem does come at a cost and therefore giving a small impact on performance. Running it on a none native platform like Windows means those system calls need to be translated into Linux native calls (via a VM) and then the calls are passed down to the Linux kernel modules and then the response is passed back up the stack. As you can imagine this adds a monsters amount of time per request. It also depends on how you have configured cGroups or to be in the context of the question of how you have configured Docker to use cGroups and the Linux network stack. If you are binding ports using the Docker NAT this is costly and will give a large (relatively) performance hit in network latency, instead use the host network stack and Docker will give you near-native performance. It's probably worth noting things like "Laragon" make a lot of assumptions and do a kitchen sink approach to the problem. It would be far better to start with the bare minimum and work your way up as you need more things. IBM has written a great white paper on the subject which pretty much just outlines the above but goes into depth on the why's and provides lots of benchmarks [https://domino.research.ibm.com/library/cyberdig.nsf/papers/0929052195DD819C85257D2300681E7B/$File/rc25482.pdf](https://domino.research.ibm.com/library/cyberdig.nsf/papers/0929052195DD819C85257D2300681E7B/$File/rc25482.pdf) check it out.
&gt;Don't expect this volume. By the time you reach 1k visitor, you might have a viable business model and refactor the entire stack. Lol
Low was like 70%, depending on the testing site. It would be blazing fast, they just didn’t like the score. Often times it was something they were doing. When corrected, it would go above 80, 90, etc. An example of something that made the score low, was the client wanted to be able to modify the css for this promotional page. Haha. My ass I’m giving out that access. So I gave them access to a separate css file they could use to accomplish their goal. So, there’s 2 files now. One of them is uncompressed/unminified, whatever jargon you prefer. It complained about that. Nothing I can do, and it literally doesn’t matter at all why am I even in this meeting sort of thing. Agency work sucks. 🤪
Yes, it is possible. But in any case there will be many different elements in which it will be necessary to use Javascript and may be something else
Well my PC is a 16GB ram, i7 HQ Nvidia masterbeast, only running some chrome tabs, VS Code and Laragon. I still find that a little bit heavy while task manager shows all consumption below 30% (CPU, Ram,...)
Interesting. Are you freelance?
&gt; But what about the times i didnt have a question? It stil is annoying... :/ In those cases you can use old.reddit.com and add context to posts. It's only on the redesign the lack of post body is enforced.
CSS 😏
Yep, totally normal. Windows servers run that sort of thing slower than *nix servers as well, at the same spec.
PHP not secure ? Did you mean the user code is badly written and they skipped security update ?
So Sorry ! I don't understand the differences of IOC and dependency inversion, in both what's pattern? What's principle ?
Try r/phphelp
yes. very much.
I am just wondering why the greatest chess player of all time,Kasparov, will be in this event? By the way, I am a Kasparov fan.
He is a keynote speaker. However, there is not provided an info exactly what topic he will speak about.
Or Swoole websocket server (performs amazing)
 public function findByStatus(TransactionStatus $status) { return $this-&gt;createQueryBuilder('t') -&gt;andWhere('t.status = :status') -&gt;setParameter('status', $status) -&gt;getQuery()-&gt;getResult(); } Wouldn't it be working if you use your convertToDatabaseValue in the setParameter ? =&gt; setParameter('status', convertToDatabaseValue($status, $platform))
&gt;Well my PC is a 16GB ram, i7 HQ Nvidia masterbeast, only running some chrome tabs, VS Code and Laragon. I still find that a little bit heavy while task manager shows all consumption below 30% (CPU, Ram,...) I gave a detailed response above on why this is, you're trying to run native Linux kernel modules (cGroups) on Windows, there is a huge overhead in doing this as it has to run a VM in the background and then translate your system calls back and to the 2 different operating systems. Your hardware is irrelevant, you can have the fastest machine on the planet and it will still run slower than native. I would give the Linux desktop a shot if you want to run Linux native tools. I've heard there are some hacky workarounds using WSL to get good performance but never tried it myself.
Just install Antergos and never look back.
Yes I am, I work on PHP Apps, Websites, other various things
Out of curiosity, what's the main difference between this and PHPMyAdmin for example? More customisation?
In a stable project, every commit should be descriptive, logically organized, and self-contained: no works in progress. When prototyping new software: I don't even know which architecture I'm going to use. Describing each commit is a major slowdown (it could probably be automated, but it isn't, afaik). Looking at some of these commits "Add `test` to the github exclude a directory, add contributor and hope it looks right, try fixing the url for the contributor, try fixing the url for the contributor again, try adding contributor contributions, try adding contributor contributions again, try adding contributor contributions again. In the time I've taken to write out one of those I could've moved on: often tried several more things. I generally squash/rebase into more logical commits when my velocity slows down, communicate that my wip branches are prone to break history, and rely on IntelliJ's local history for short-term history; but IntelliJ's local history is limited, doesn't fully encourage collaboration, and doesn't allow easy context switching. tl;dr WIP commits are fine, but should never be a release branch or branch others are expected to work on.
This is not really the way docker should be used. Main goal is to containerize your application not development environment. Next problem is that with docker you don't need anything except docker itself to be able to run containers, in your case you need php installed locally (and then you use one in container. why? just one one of them)
My *symfony/console* version is locked to *v3.4.27* because of legacy Laravel projects that run for example Laravel 5.5 LTS. So this tool is not really useful if you want to use it to check the quality of legacy Laravel projects.
But.. why would you hate testing?
&gt; I've never used "Laragon" but it just looks like a load of scripts and configs around Docker I'm using Laragon since 3 years. **It's not based on docker.** It's not even based on containers or virtual machines. it just installs and manages apache/nginx/php/mysql/redis/git/.... in one click. It's more like a WAMP/LAMP/XAMP/... stack on steroids, where you almost never have to touch a config file yourself, even for pretty urls, or activating/deactivating redis/changing php's version.
&gt; Main goal is to containerize your application not development environment. Yes, and nothing is stopping you from doing that! You get a .docker folder where you can do whatever you like and containerize to your hearts content. Your next point: having PHP in the host machine... Like I said, I’m new to this and I assume there are better ways of doing this, but I tend to run Composer from the host machine, which means PHP is always available in my host machine. And how likely is it for a PHP developer’s development environment not to have PHP Installed anyway? As for installing PHP in the other containers, that comes back to my lack of experience with docker itself. That’s a good contribution point: improve on making sites SSL ready locally.
I think this is more friendly to a frontend user than just giving them plain PHPMyAdmin access to destroy the database tables structures
I often use laragon too. I don't think I've felt a big enough difference between the two to care to compare. Hell, I even think my staging/prod are slower due to network latency than local. Maybe browse/make a post on the [laragon forum](https://forum.laragon.org/), leokhoa (laragon's creator) is usually very helpfull, and really fast to answer.
Like I said above too, laragon doesn't do any virtualisation/containerisation.
Given his pc specks, I'm guessing he is also gaming... Ain't that easy on linux.
it is extremely likely, as I said, you containerize your application, which means that php and composer is available within container and there is absolutely no need for it globally. Having it on host beats the purpose of docker. also how are you guaranteeing that php versions on host and within container match? editing .docker sort of beats the purpose of such tool and makes it redundant, you are better of choosing one of million framework specific docker boilerplates available in github.
Python, obviously. But that doesn't help my legacy code.
The right answer is, always has been and always will be, a resounding : It depends.
Just for your information, dear fellow Redditor: this is not a question imposed on you, but a blatant blogspam link.
I can't do that. Because doctrine's DBAL types can not be constructed from the outside (the constructor is private). Maybe there's some hacky way of doing it, but I don't think that's how Doctrine intended it. I think there must be a way to communicate to doctrine that it should convert my enum type some other way.
Attended a talk he gave in Dublin recently. Great speaker.
True, although I believe you can change MySQL user permissions to not allow modifying table structure. Still, your interface is more aesthetically pleasing.
Brilliant. Hope he wont disappoint this time either
Yeah you're probably right. I'll re-purpose this tool to be considered a local development setup only, without the deployment part.
How can you test whether you hate testing ?
You only have so many hours in the day. Growing includes gaining experience and confidence working with other developers. Growth comes as you move between teams and are exposed to problems or good practices you've never had, or even needed before. &amp;#x200B; Besides the work and process itself, having access to more experienced developers, and the process of mentoring less experienced developers, also offers growth potential unavailable to solo devs. &amp;#x200B; Nothing wrong with hanging around a solo gig but one dev can only accomplish so much. If it starts feeling overwhelming or mundane, there's a team out there which will allow you to achieve more on many levels.
Regarding the composer issue: `docker run --rm --interactive --tty --volume /$PWD:/app composer install` This one-liner installs the required packages without having to install PHP and composer on the host machine. It does so by mounting the current working directory to the `/app` directory in the composer container and executing `install`. Now the installed packages can be found in the `/vendor` folder on the host. [More info about the compose image](https://hub.docker.com/_/composer)
It’s a paid product and OP is spamming it because he’s too cheap to buy some ads or market it properly. Downvote, report and move on. Plenty of far better free and open source alternatives.
Please read the rules: &gt; Do not advertise. Unless you are sharing PHP-relevant content, please do not post links to websites that you own or develop. If you're unsure, run it by the mods first.
Well we're running 50GB SSD webservers with 8GB ram an dualcore setups 🙃
Actually not...
Short answer: No. Long answer: You have to hire highly paid, experienced finance developers, and maybe a layer or two (at least check if you even are allowed to conduct exchange), a lot of good hardware, etc. Code is least of your concerns.
Low effort really :(
...it's still by definition coupled to big parts of Laravel. If those libraries are only needed for Laravel related tests then you should still split the package as I suggested.
This isn't bad - but yeah pay for some ads if you want to sell it :D
yes
&gt; I mean repos can be compromised and bad commits can get through But that's not what happened for the JS ones. For those, the source repos had good code in them, but malware was injected during the build step, and was only present in the distribution version that was uploaded from NPM. For github based distributions, the distribution version can be build directly from source, and have the build process logged and viewable for each release. That makes sneaking in malware during the build step be a bit more difficult.
try harder, simar
Last I checked, r/php was not a marketplace for you to advertise your software
I don't see me on the speaker list, this is an incomplete speaker list.
You are absolutely right sir. The list is not complete, as the number of speakers is very big and is changing time after time. Provide me with your name and I will make sure that you will be included in the list of Keynote speakers
Pablo Gutiérrez
Thanks! Great work. Looks a lot better and more like a component now. But now i got a good router with good routes and the GenericUrlProvider will do the job.
Seems that organizers have not updated your name yet. As you are not written in the confirmed speakers list. Approximately 180 speakers are written so far and Pablo Gutiérrez is not listed yet.
da
Nope. The Service will fully work on the web pdf renderer with no html and css at all. We wont use Webkit2PDF because that would inject css and html in our pipeline! Only The pdfs are rendered with shitty xml languages. Best Webstack i can imagine.
Then post it on the social media. If it worth it. And post here a link. If you have just some brainfart to share you are not supposed to post either.
this is a travesty
Will the topic be PHP 8?
Make sure your connection to the database is using 127.0.0.1 and not "localhost".
It's important to establish yourself as the alpha programmer in the department. Make sure you use a patronizing tone and talk down to other programmers as if they're beneath you. This will allow you to go home at the end of the night to a lonely, empty, meaningless life while simultaneously feeling superior to your inferiors.
This was posted 3 years ago, but I think it deserves a bump. Dead simple to get going: composer global require hirak/prestissimo And that's it, now you have much much faster downloads with Composer. Brilliant.
Sounds like a max heap.
You can represent a list using a binary tree so reversing the tree reverses the list.
This has been implemented directly to Composer in upcoming 2.0 [https://github.com/composer/composer/pull/5293](https://github.com/composer/composer/pull/5293)
Huh. Nice.
I was at the same one I bet. Good food beforehand.
Those mini-burgers were delicious!
yeah just ask magicaltux
ja
I had a shameful number of them.
Magnus Carlsen is, objectively, the greatest chess player of all time.
I didn’t want Rasmus to see “the real me” so I only took the one. I haven’t slept since.
I was at WeAreDevelopers 2018 in Vienna. It was amazing!!!
If I had to guess, I would not be surprised to hear him talk about the moral decisions you should be making (or at least aware of) as a developer given how technology is being used currently.
Does 2.0 even have an ETA? I've been waiting over THREE YEARS for tymons/jwt-auth to reach v1.0, and that's mission critical to thousands of sites.
Yep
Done! I have move the index.php file to the public folder. Actually I'm not that interested in using Symfony components, but I'll give it a chance, the same with the dotenv library. Thank you :)
I’m afraid of using it on one of my legacy projects 😰
Thank you so much, this is the kind of comments I never forget :) I'll try to apply the others PSR in the next commits. About the query builder I'm thinking in removing it in the next commits and put some of it's functions in the DB abstraction, I have a DB abstraction because the framework has come to a point that it isn't exactly a framework with minimal functions but just a small one. And yes, I'll work on the repository with only the core code to facilitate the framework update. Again, thank you :)
I have had no luck getting it to work on Windows.
These days it's reasonably easy with [Lutris](https://lutris.net/)
Is it because localhost is a proxy?
I just remember it being an issue with ipv6.
About the ideas... If you want to try it. Do it The best way to get an opinion of a framework is create a simple POC and discover how do you feeling using that framework. Try to evaluate community, documentation, scalability and check if works for you. But my biggest advice will be do not relay on a framework to build something.
I've been playing with this just recently. Hoping to save someone else some time, I would point out that if you're using this in a build-server environment as part of ci/cd you need to make sure that your PHP process / container has curl and openssl installed.
Did you receive my PM?
you'd want to post this to r/phphelp
thanks
same, i was at the 2017 one too where Rasmus spoke as well, missed my chance for a selfie with him :(
Oh shit I think Facebook might be screwed
I dont know, I saw 1 exchange site that use yii + php witch is [LiveCoin.net](https://LiveCoin.net) &amp;#x200B; While majority of other exchange are using either Ruby on Rails, or Java. Real reason why i want to use php is because the cost are lot more cheaper, because there are too many php coder out there. Of course I have my own php coder that i trust, and he have many experience handling enterprise or big/complex project. He's very expert in php, and with yii framework, the project gonna get build really fast and lot more secure. Because most of my other project are using yii. But not as big as my next project. &amp;#x200B; I''m just paranoid. And not really confident, that's why i'm asking this question. Apart of me want to use php cause lot cheaper, fast. But apart of me want to use other, but it gonna cost much time and money.
Can't believe it never occurred to me to even google for something like this.
noh. in terms of achievements, kasparov is still the greatest. but carlsen has a chance to surpass him.
You said that [`getStream`](https://www.php.net/manual/en/ziparchive.getstream.php) only supports read, and so does the documentation, but isn't that what you want? You open the stream and you read **from** it and write **to** S3. You shouldn't have to write to the ZipArchive stream. Or am I wrong about what the documentation means by read only?
It looks like you're right that you can't do it with ZipArchive, but [this](https://github.com/maennchen/ZipStream-PHP) looks like a decent package you can pull that will output Zip to a stream. And if it's not exactly what you're after, the [way it does this](https://github.com/maennchen/ZipStream-PHP/blob/master/src/File.php) doesn't look too complicated, so it could be a good starting off point to implementing your own solution
Definitely a good starting place. Thanks.
Would be better off heading over to r/phphelp and posting some source code.
Alright got it thanks I will post it there then.
Dude... [https://github.com/bearcms/bearframework-addon/blob/master/classes/BearCMS.php#L84-L1277](https://github.com/bearcms/bearframework-addon/blob/master/classes/BearCMS.php#L84-L1277)
ZipStream may be able to do what you want: &amp;#x200B; [https://github.com/maennchen/ZipStream-PHP/issues/51](https://github.com/maennchen/ZipStream-PHP/issues/51)
Maybe *the* biggest monolith initalization function I’ve witnessed to date.
I don't think I've seen procedural code that has files and functions this long... This is supposed to be OOP, right?
Simple, fast, no bloat, few files, examples from/using Google's Go, and Python's Asyncio syntax converted, with the same number of lines. &amp;#x200B; Using standard PHP installation, no changes in how you developed, but with no callbacks or promises, no extensions. &amp;#x200B; Just an another take on \*\*Nikita Popov\*\* \[Cooperative multitasking using coroutines (in PHP!)\]([https://nikic.github.io/2012/12/22/Cooperative-multitasking-using-coroutines-in-PHP.html](https://nikic.github.io/2012/12/22/Cooperative-multitasking-using-coroutines-in-PHP.html)) the initial work, \[Ditaio\]([https://github.com/nikic/ditaio](https://github.com/nikic/ditaio)), now with an huge overhaul.
Decreasing maintenance cost is worthy goal if it fulfill business need. If you will finish those features faster after some refactoring. Go for it. If not, then think about future feature requests. Will there be any? Will there be enough to amortize those refactorings? Additionally, you may want to stop thinking about "test coverage" as a monolith number (pun intended ;)), and start thinking about test coverage of a given feature. Providing sufficient test coverage for just the pieces you will modify will probably fulfill the business need of providing working software solution.
He always speaks at WeWreDevelopers.
No, Leela is.
"the cost are lot more cheaper, because there are too many php coder out there" Thought you will want a developers familiar with challenges of financial sector for the exchange part and familiar with security topic for any part facing the internet. Cheap PHP devs had only experience in clicking on the title configuration of wordpress... Otherwise they poses all the knowledge the Java/Ruby devs would have, and ask for similar quotes.
Just for fun for my personnel website. I am working part time full stack developer
You got downvoted to oblivion, i guess demands in the open source world aren't well received. However, i just so feel the same. But who shall throw the first stone. That thing is also critical for us and the latest release is still "only" RC. No idea what's holding them up. 🤷‍♀️
I'm using ManBearPig CMS.
This looks pretty cool, nice work!
TL;DR If you'd write something like this: echo "sum: " . $a + $b; PHP would previously interpret it like this: echo ("sum: " . $a) + $b; PHP 8 will make it so that it's interpreted like this: echo "sum :" . ($a + $b); PHP 7.4 adds a deprecation warning when encountering an unparenthesized expression containing an '.' before a '+' or '-'.
Looks interesting! Why did you choose to put everything in the global namespace though?
What errors do you get?
PHPMD would implode on this piece of code ahahah
Useless. Never forget about memory management
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
Please try to keep your comments civil and constructive here.
Ok.i just want to say that it is not a good idea to try to look like others. I mean Other languages. Php is still bad at memory management. Because it was not designed for that. It is better to manage a pool of short living scripts with supervisord to avoid memory leaks.
I agree. The code can be much improved.
Can I ask why? Maybe it's just because I've worked with php for a long time but how i read: `echo "sum: " . $a + $b;` Is right to left (with concatenation occuring prior to addition): `echo ("sum: " . $a) + $b;` Which makes sense when you read the code as that is what you've written. I get this change will make code easier to write, but like if you want: `echo "sum :" . ($a + $b);` Then surely the simplest solution is to write it as that. Genuinely curious as to what the advantage is?
It doesn't make sense for `.` to have the same precedence as `+` and `-` because those operators are completely unrelated. In PHP 8 the code sample will work the same as this: echo "sum: " . $a * $b The reason they changed it is also explicitly in the RFC. To make PHP's behaviour more intuitive.
I like changes like these partially because people who were writing really bad code get really mad.
wat fuk
Okay, so to put it simply we're lowering the precedence of the concatenation?
The RFC was discussed here: https://externals.io/message/104980
Thanks, discusses basically the exact thought process i was going though
In our company we had the same issue: old huge monolith legacy application. We started a new repo and used something along the lines of mustUseNewApproach and then the new code would be executed. This way we didn’t have to touch the old code base too much, but ended up replacing parts in small increments and finally we replaced the monolith.
That's what I understood!
why is dotenv a shitty dependency ? and how does using dotenv make you prone to every shitty dependency available ?
Why not add a demo video or something? There's nothing on your page that clearly shows why I would use this.
Can anyone share what do you use Coroutines for?
Where I work, there's a 12,552 line class with an incredible 1,320 line constructor.
That's OK: Once you see the code, you'll quickly find two dozen reasons to stay away. Not to mention that the "License is now free!"
This sounds like a trump supporter on why they hate libtards, do we really need to perpetuate more us vs them issues? Teach someone something or ignore them, don't take pleasure in their pain.
I would recommend [https://demo.bearcms.com/](https://demo.bearcms.com/) In 3 clicks you'll see Bear CMS in action.
Geez, async PHP is really moving along. Now, I just need a good reason to actually need async.
How is that particularly relevant here? This may well result in lower memory usage than running multiple scripts in parralel, due to the memory overhead of each individual PHP process. I think you may have misunderstood what this package is and does. Even then, PHP really isn't as bad as it used to be for long running processes, it doesn't just magically leak memory just becase it exists. It's not uncommon at all to keep queue workers alive with an entire framework loaded into memory for days or weeks at a time. Of course you need to be mindful about the resources you are explicitly opening and holding open, but the same is true of any language. The package certainly isn't useless.
But why not in 0 clicks?
The reactions in this thread are toxic
This looks like someone with no knowledge of OOP was told "it needs to use OOP"
I use them to make asynchronous HTTP requests. Guzzle uses cURL by default and cURL supports concurrent requests. Coroutines make the code around making requests and dealing with responses much more readable than promises.
Even more impact has the local cache though. We had factor 100 improvements once we found out the local cache on the server wasnt writable, and it downloaded them over and over again on deploy..
Dotenv doesn't provide any value to your project. It's a fad started by RoR. If you believe there is any value, you tell me what it is, because proving there's "no value" is quite awkward. Show me some semblance of value, that I can't immediately find an already available analog to in PHP, and it kills my argument.
&gt; PHP really isn't as bad as it used to be for long running processes That was my point : avoid long running processes with PHP
So you mean that some good tutorials are the ones that you've written? Way to go with the ego there!
Says the person who promotes their own tutorials, and has been banned from StackOverflow several times for their behaviour to others
While this is a cool change, it's going to make some ugly looking code. I would likely continue to use parenthesis just as a visual grouping.
PHP wanted to look like Java a few years ago. Now he wants to look like Javascript. Double mistake ;-) This is why I am slowly moving toward Golang.
And my point was that it's bad blanket advice when talking about PHP 7, which has greatly improved garbage collection. We have hundreds of long-running PHP processes, many holding the entirety of the Laravel framework in memory for queue processing. Across the board we haven't experienced any memory issues that weren't solvable problems in our own code, like not freeing up resource handlers, as you'd expect to deal with in any language. They generally only get restarted when new code is deployed. We get dramatically better performance when dealing with high-throughput queues when the workers are daemonised and don't need to reload the entire framework for every job. But that's still besides the point, as I'm not really sure how it relates to the Coroutines library, which can be used in many contexts that aren't long-running.
This was a bodyshop ad. Is your zeal for justice satisfied now?
Of course I think those are good. It would be odd if I think otherwise :)
Hello, everyone, I am the creator and main developer of **Ubiquity**. Your red flags came to my ears and brought me here. Beyond the criticisms made, some elements have displeased you in this project, and I am sorry for that. I would like to discuss this with you, here or elsewhere. Ubiquity is a young project, where many points still need to be improved. Since February, its ranking on the phpbenchmarks.com website (slightly unexpected) has given the project some visibility. So the community is just beginning. I work in IT; but Ubiquity is a non-commercial open source project independent of any company, on which I work just out of passion. The initial idea was the following: to make it simpler than others, in terms of use and conception, while remaining within the logic of PHP, not necessarily to follow in the footsteps of other languages, if the direction taken is not beneficial. This guideline partly explains the non-compliance with some PSRs (see [here](https://github.com/phpMv/ubiquity/issues/47) for more details). Even if I particularly like some php frameworks, I find that some of them are mislaid (too much unnecessary complexity, too many dependencies, too many features, too little visibility for the developer...) Back to Ubiquity and the red flags: to take up your criticisms point by point, in the order in which they appear: @EleventyTwatWaffles &gt;Cli that uses caps should probably be a red flag It's not a good idea indeed, but I haven't had any feedback on that yet. @tetracyclic &gt;A huge red flag is located in their Coding Guide. Confusing service location for dependency injection and saying that static methods are better because they're more performant and can be type-hinted. I don't think I'm confusing, I hope I just misspoke. I slightly reworded the sentence in the guide, hoping that it will remove the ambiguity (see [di](https://micro-framework.readthedocs.io/en/latest/contributing/coding.html#dependency-injections)) Dependency injection is not recommended internally, in the framework source code, if it can be avoided. It is nevertheless usable. For example, I don't see the advantage of using dependency injection for a Translation module, but I may be wrong. &gt;Another gem from their "coding guide": ...Did they even read PSR-2? I tried to be more precise in the [coding guide](https://micro-framework.readthedocs.io/en/latest/contributing/coding.html#coding-standards) and in this [issue](https://github.com/phpMv/ubiquity/issues/47) @txmail &gt;I am triggered by the fact that when you go to "Features" it is not highlighted, "Home" stays highlighted... Thank you, it's fixed. @helloworlder ```php public static function diBootstrap($controller, $options = ["defer"=&gt;true,"gc"=&gt;true]) { $jquery = new \Ajax\php\ubiquity\JsUtils ( $options, $controller ); $jquery-&gt;bootstrap ( new \Ajax\Bootstrap () ); $jquery-&gt;setAjaxLoader ( "&lt;div class=\"ui active centered inline text loader\"&gt;Loading&lt;/div&gt;" ); return $jquery; } ``` This is the possible start of the front library. If you have a better offer, I'll take it. Other remarks are too imprecise to be answered... To finish, let's not forget that all frameworks had their beginnings, sometimes laborious, with itinerant imperfections, and the absence of community: I knew Symfony at its beginnings (14 years already, time passes quickly)
Reddit has always been a bit of a pro-Python environment.
&gt; can be used in many contexts that aren't long-running I can't see no other? Do you? Wanting to create a nodejs frankeinstein in PHP?
OP, just wanted to say congratulations for making something that works, and having the courage to post it in r/PHP. Try to ignore useless criticism, and focus on anyone who has something useful to say. (Unfortunately, I'm not one of them as I don't have much time for code review right now.)
so its syntactic sugar?
Why is the invoker missing?
The "ReportHandler" actually acts like one. Following the famous KISS and YAGNI principles, I decided against adding excessive complexity.
Any time you're performing requests to external services or background processes that can be performed asynchronously? PHP's generators are ideal for implementing this kind of co-operative multitasking.
What makes you think that this is aping JavaScript? Nikita was first working on coroutines using generators in PHP back in 2012 and many languages have similar coroutine implementations based on generators. Go's coroutines are co-operative and this library implements a somewhat similar syntax, so surely it's aping Go, not JavaScript?
What makes you think that this is aping JavaScript? Goroutines are cooperative under the hood and this library implements a somewhat similar syntax, so surely it's aping Go, not JavaScript? Moving toward Golang would give you more of what this package aims to provide.
Any time you're performing requests to external services or background processes that can be performed asynchronously? PHP's generators are ideal for implementing this kind of co-operative multitasking.
Agreed: please avoid to pollute the global namespace with those. There is no reason to not move them under a controlled namespace. On the same token: - `"php": "&gt;7.0"` using `^` would be preferable there since there is 0 guarantee your library is working fine under PHP 8.0 - Since you are requiring PHP7, you could require 7.1 (7.0 is EOL) and leveraging `: void` return types where appropriate - You may feel strongly about tabs instead of spaces, but I would argue as in Go you enforce tabs, in PHP (although it's not enforced at the compiler level), the general consensus is spaces... - PHPUnit 8.0 is out, it's a bit weird to require 5.7...
Your code is not testable. Try using DI
tl;dr yes I guess it's technically correct. Coroutines are just functions that execute partially. So if you have 2 functions that are coroutines, the processor kind of makes it look like they're both running at the same time, but it's really just working on one a little, then the other, then back, and forth. PHP isn't really built for true async work and the only way to create interruptible functions is through the `yield` keyword which is meant for generators. So libraries that implement coroutines do add that syntactic sugar around PHP's generators to make coroutines easier to use and seem more like coroutines that are built in to other languages.
I used to have that same train of thought - then I started a new project that needs them badly and uhh, yeah I ended up using php &amp; python workers with Gearman because getting async right for long running processes was a bigger challenge than I had time to tackle it with (and it let me distribute the load). I am a bit jealous that all this async work is now coming to light, I cant wait for the next project that has a valid need to try out some of the new stuff.
&gt; At first it seems like a quick fix, and you can definitely adjust the functionality by adding a few lines of code. However, I decided to use that opportunity to get rid of some technical debt. I'm sorry but... honestly you added technical debt.
From [nikic](https://externals.io/message/104980#105442): &gt; Similarly to the ternary associativity RFC, I've analyzed the top 2000 composer packages and checked whether they would be affected by this change: [https://gist.github.com/nikic/a4df3e8e18c7955c2c21cf6cdb4cbfaa](https://gist.github.com/nikic/a4df3e8e18c7955c2c21cf6cdb4cbfaa) &gt; &gt; The tl;dr is that there were 5 instances where behavior would change per this RFC, and all 5 of them are bugs in current code and would be interpreted correctly after this RFC. &gt; &gt; Nikita Pretty strong case for this one.
&gt;The **command pattern** is a behavioral design pattern in which an object is used to encapsulate all information needed to perform an action or trigger an event at a later time. This information includes the **method name**, the **object that owns the method** and **values for the method parameters**. [https://en.wikipedia.org/wiki/Command\_pattern](https://en.wikipedia.org/wiki/Command_pattern)
I did make a shortcut by adding \`class\_exists()\`, feeling the post is becoming too long to add proper dependency injection. And I probably skipped some explanation why we actually need the pattern. Thanks for the response, I'll edit the post accordingly.
What makes Command Pattern better here than Strategy Pattern?
In this particular case I chose Command pattern because there were existing classes I did not want to edit at all. When you're developing a component from scratch Command pattern might actually be an overkill, and Strategy could fit better.
1. [johnpbloch/wordpress-core](https://packagist.org/packages/johnpbloch/wordpress-core): no surprises here 1. [sabre/vobject](https://packagist.org/packages/sabre/vobject): again no surprise 1. [microsoft/azure-storage](https://packagist.org/packages/microsoft/azure-storage): it only affects the output that is displayed if a test fails
IMO, any code without documentation or tests is technical debt.
The string instantiation and class_exists checks are bit unwieldy and hard to test. I would recommend a factory to handle the logic of which command to use instead, which allows you to be more explicit about what's actually happening. &lt;?php class ReportCommandFactory { private $commands = [ 'csv' =&gt; ExportCsvCommand::class, 'xlsx' =&gt; ExportXlsxCommand::class, 'email' =&gt; EmailSenderCommand::class, ]; public function make(string $todo): ReportCommandInterface { if (isset($this-&gt;commands[$todo])) { throw new CommandNotFoundException; } return new $this-&gt;commands[$todo]; } } Which turns your ReportHandler into this class ReportHandler { private $reportCommandFactory; public function __construct(ReportCommandFactory $reportCommandFactory) { $this-&gt;reportCommandFactory = $reportCommandFactory; } public function handle($todo, $report, array $params) { try { $reportCommand = $this-&gt;reportCommandFactory-&gt;make($todo); $reportCommand-&gt;handle($report, $params); return true; } catch (CommandNotFoundException $e) { return false; } } }
Just sounds like schadenfreude to me. No need to make it political.
can you add this to https://openapi.tools?
Yes - I’ll submit it now
&gt;Try to ignore useless criticism, and focus on anyone who has something useful to say. (Unfortunately, I'm not one of them as I don't have much time for code review right now.) &gt; &gt;Try to ignore useless criticism, and focus on anyone who has something useful to say. (Unfortunately, I'm not one of them as I don't have much time for code review right now.) Thanks. I'll be really happy to talk about the benefits Bear CMS can offer. I believe it's quite a unique approach for making and managing websites.
ya
Use the framework. Routes, templating, ORM, form builders, etc. Don't couple or business-specific logic that might be able to be re-used or moved. But use the framework to hook it into whatever. For example. had a basic CRUD web app for a company in Symfony. It's all in. Authentication, routes, twig, ORM, etc. However, they have this one piece of calculation that needs to happen. I made it a standalone class and hooked into with the event system.
I use the framework for all the Web stuff (routes, templating, authentication, etc.) but not necessarily the other stuff (e.g. ORM). In my field the data store is not always a relational database, so anything that ties the data store tightly to the front end is broken. Business logic, of course, is completely uncoupled.
Tests and documentation are themselves also technical debt, thus completing the circle of technical debt.
I'm looking at your code, which is an improvement upon the original still, and thinking "this is not what I'd do, but what would I do?". I feel if we stick strictly to the requirement of injecting formats from outside, then the simplest solution would be: $reportHandler-&gt;add('xls', function ($report, $params) { ... }); I believe this is better because: - It doesn't require modifying the handler (as required). - Formats can be injected dynamically (as required). - The injected formats can be a class (with method __invoke, i.e. "callable") or an inline closure, thus simplifying code significantly. But the most important benefit is the removal of static references. Any string references to class names, be it direct strings or via the `::class` pseudoconstant are static. Why's that bad? Because then those classes are not configurable. You cannot pass configuration to them, you can't flexibly inject into them either (you could fetch them from a container, but that's a very clumsy way of doing it). So I could have, say: $reportHandler-&gt;add('xls', new GenericHandler(new XlsParser(), new FileHandler(), 'some', 'options', 'here')); $reportHandler-&gt;add('xlss', new GenericHandler(new XlsxParser(), new FileHandler(), 'some', 'options', 'here')); Now I'm reusing more code rather than having to make a separate class for everything.
Best way to do it.
I am currently using zend expressiive with ze-content-validation middleware [https://github.com/mvlabs/ze-content-validation](https://github.com/mvlabs/ze-content-validation). I am wondering if there is some other alternative solution for this problem? I kinda like sylius approach using request object and validate against them, and once you reach controller/action you have already valid data ([https://github.com/Sylius/ShopApiPlugin/blob/master/src/Request/AddressBook/SetDefaultAddressRequest.php](https://github.com/Sylius/ShopApiPlugin/blob/master/src/Request/AddressBook/SetDefaultAddressRequest.php)). Currently I can not find some solution using this approach with middleware context.
merged, thanks!
For any project I'm working on, I use laravel or symfony to prototype, create a poc to show stakeholders. I use the routing, models (although my data is in decoupled value classes which the models /entities take as constructor param) and nothing else from a framework, because i know it is a pain in the ass to force the framework to work just as you want it to. Now the Poc is fine, move on to the real product. I can now use every class I have written in my new project (typically slim framework with php di container and doctrine) and get it done quick or adjust and refactor to the requirements of the product.
Refactoring means changing internals without affecting the behavior. If before refactoring you had $foo-&gt;bar(), after refactoring you still have $foo-&gt;bar() but now maybe internally it uses doctrine instead of PDO or what not. Wrapping legacy code in Commands, does the opposite actually. You still have old shitty code behind new nice command pattern, wow what a pointless exercise. It only made sense to use Command pattern in the first place, if you had to decouple what is done, from by whom it is done, and when it's done. Btw, are you really expect me to go everywhere in my legacy code and and change $foo-&gt;bar() to whatever you came up with? This whole post is nonsense.
I released this last week... https://github.com/phpexpertsinc/DataTypeValidator If you want any features, just create an issue and I'll get right on it.
respect/validation is my defacto standard. beberlei/assert is also very good, but for more useful for domain validation IMO.
Was not my actual intent, I still don't see why anything is good because it makes other people mad. Its either good because its valid or you are somehow fooling yourself because of bias. Just my silly little opinion tho.
wow, I don' have an opinion here, but [this is the comments section right now](https://i.kym-cdn.com/entries/icons/original/000/028/961/cover6.jpg), lol
 Warning: file_put_contents(/tmp/php5/sess_h7vlfsc2k8j2obdulec7dcuahn): failed to open stream: No space left on device in /home/www/paragonie/framework/Session.php on line 84 Warning: session_write_close(): Failed to write session data using user defined save handler. (session.save_path: /var/lib/php/sessions) in Unknown on line 0
People keep saying that, but I'm not seeing it.
That is much more constructive, thank you. Yes, for long running tasks written in just about any language, Supervisord is good practice. Now that I like to do things in Docker, I am interested in how I can spin up containers for a particular period and then slowly replace them so that none of them reach a maximum age - which is the same principle updated for containerised processes.
Would you say you're more of the "Abstract from the framework" when it comes to the "implement it now that we're happy with the prototype?" Essentially create your own (from the sounds of it?)?
Yes, that's why I chose slim. It doesn't provide anything besides templating, routing and dependency injection. I keep the routing utility, replace slim di with php-di and remove templating (always using a js spa frontend, like angular). The benefits I get is minimal bootstrapping (below 50ms on a mac) and full flexibility with integrating my services as well as not having to hack in my tests
Well, that's why I posted it here in the first place, to see what other developers think.
https://designpatternsphp.readthedocs.io/en/latest/Behavioral/Command/README.html
Very possible using PHP.
Can spiny platters actually read more than one file at a time at different locations on the platter?
I agree with this for the most part, assuming you're working on the right framework. Sometimes you've got to work with a framework that does things in poor ways and it makes more sense to decouple these things from it where possible.
True
&gt; Refactoring means changing internals without affecting the behavior. I mean... the "behavior" is at some arbitrarily defined boundary, isn't it. In this case, the code before was exporting XLS etc. or whatever, after it still does that. Which implies that at some level above the example, there's an adapter/bridge/UI code which smooths over the differences between the old code and the new code, and preserves the external API/UI and therefore behavior. I've had reactions like "but if we change X, then we need to change X in 100 places!" People really aren't used to writing adapters/bridges for new/legacy code. And it should be the first thought to occur to them. Refactoring with API changes is fine, as long as you can bridge it.
Yes, operator precedence was invented only so people who write bad code don't get mad. /s Can I interest you in LISP maybe?
Not your fault maybe, but the public discourse is so saturated with Trump stuff, and politics in general, it's just nausea inducing to talk about it in unrelated contexts, even though your point may be absolutely valid. It's just disgusting, we're sick of the circus.
I love the fact we have GitHub and can actually empirically prove a change would be bad or good based on that. Analyzing GitHub code is also how PSR-1 and PSR-2 were created, which is why they're still the most useful of all PSRs.
My approach: - Define the project modules first (at the very minimum: frontend UI, frontend API, backend UI, backend API; in more complicated projects those split into submodules, each handling a cohesive subset of the tasks). - The modules can be executed without knowledge of dependencies (aside from having them installed, of course). - The modules communicate via framework/library agnostic APIs. Simple interfaces. - Each module may be coupled with whatever needs to get the job done. - Because of all of the above, it means every module may be independently refactored to swap a dependency, without breaking its public APIs or behavior. One problem is that most of the mainstream "frameworks" are really obsessive and want you to put your entire project *within* them*. This means those frameworks ain't for me, most of the time. But actually in the UI modules, I'd often pick a framework, and use only the UI layers of it (template engine, helpers, etc.), the other modules don't need to know anything about it.
Thats a darn good question. Even with the upcoming multi-actuator drives I am not sure it is possible to have more than one file stream on the bus at any given time (so even if it was fast enough to read both files they are streamed one by one. I am not really even sure if something faster like NVMe can overcome that - it is just fast enough that you move the bottle neck from the drive to someplace else -- I think.
Wow, thanks for this link. Not because I need this specific DB implementation, but because of finding [this page](https://paragonie.com/software). The [multi-factor](https://github.com/paragonie/multi_factor) is sweet, mainly because it's so simple, well styled and well documented (even links to relevant RFCs!). It's rare to find open source modules of such quality, and if the rest are on this level I'll definitely be using most of them in my projects.
Yea. I’m assuming that SSDs can access the NAND much like RAM and don’t have this issue. I’m also assuming this is one of the main reasons they’re significantly faster. It’s not having to seek the platter based on the TOC to locate the data.
https://github.com/imarc/checkpoint
Oh no doubt on solid state drives the 0ms latency in seeks is one of their huge advantages (on top of usually being striped internally). I was more or less questioning that can more than one file stream be on the bus that connects the drive to the motherboard at a time - like are the requests sequentially handled and us all avaliable bus lanes or are the bus lanes split so they can handle multiple parallel file streams in like a round robin fashion. I seem to recall reading that most controllers will queue multiple requests and only service one request at a time to completion before moving onto another request. The system I am working on is pulling files off of a SAN backed object store so I can get multiple files simultaneously if they are located on different disks - my bottleneck is the network much like on a local disk the bottleneck with a drive might be the bus connecting it to the motherboard (but still the drive itself since the fastest single drive I have seen tops out around 3GB/s).
I enjoyed working with [Laravel's Validation](https://github.com/illuminate/validation) like A LOT, but dunno if it'd be easy to integrate into a non-Laravel project. [https://laravel.com/docs/5.8/validation](https://laravel.com/docs/5.8/validation)
looks nice
This is a stupid question. Mostly for 2 reasons: 1. Its a leading question, where you hint at the answers you want to get, and go as far as insulting anyone who would choose the option you disagree with. So then none of those devs will give u an answer and you will not get the reasoning behind their choices: your loss. So next time you make a question, you might wanna try just making the question without insulting nor giving your opinion, i think you will get less biased answers. 2. Our choices should be depending on the project requirements, so it depends on the project at hand. We should not go for a silver bullet ideology, there is no one boot fits all. Furthermore, have you ever tried making a project completely decoupled from all tools?! I did, and the most difficult to abstract from was not the framework, it was the ORM and the template engine. In the end, i would say most mid size projects should go for the middle option, but both other options are equally valid in some circumstances. Despite this, i think it’s far more important to have a clear structure with clarity of what types of code we have and where each should be located. Hope this helps, and that u don’t resent me for saying the question is stupid, i just wanted to make a point on the language you used.
This is a stupid question. Mostly for 2 reasons: 1. Its a leading question, where you hint at the answers you want to get, and go as far as insulting anyone who would choose the option you disagree with. So then none of those devs will give u an answer and you will not get the reasoning behind their choices: your loss. So next time you make a question, you might wanna try just making the question without insulting nor giving your opinion, i think you will get less biased answers. 2. Our choices should be depending on the project requirements, so it depends on the project at hand. We should not go for a silver bullet ideology, there is no one boot fits all. Furthermore, have you ever tried making a project completely decoupled from all tools?! I did, and the most difficult to abstract from was not the framework, it was the ORM and the template engine. In the end, i would say most mid size projects should go for the middle option, but both other options are equally valid in some circumstances. Despite this, i think it’s far more important to have a clear structure with clarity of what types of code we have and where each should be located. Hope this helps, and that u don’t resent me for saying the question is stupid, i just wanted to make a point on the language you used.
This is a stupid question. Mostly for 2 reasons: 1. Its a leading question, where you hint at the answers you want to get, and go as far as insulting anyone who would choose the option you disagree with. So then none of those devs will give u an answer and you will not get the reasoning behind their choices: your loss. So next time you make a question, you might wanna try just making the question without insulting nor giving your opinion, i think you will get less biased answers. 2. Our choices should be depending on the project requirements, so it depends on the project at hand. We should not go for a silver bullet ideology, there is no one boot fits all. Furthermore, have you ever tried making a project completely decoupled from all tools?! I did, and the most difficult to abstract from was not the framework, it was the ORM and the template engine. In the end, i would say most mid size projects should go for the middle option, but both other options are equally valid in some circumstances. Despite this, i think it’s far more important to have a clear structure with clarity of what types of code we have and where each should be located. Hope this helps, and that u don’t resent me for saying the question is stupid, i just wanted to make a point on the language you used.
It’s completely depends on the project and the maturity of the project. But it’s all going to be somewhere in the middle. For some projects I wouldn’t even use a framework at all and would write adapters for some vendor libs too. It just depends.
It’s completely depends on the project and the maturity of the project. But it’s all going to be somewhere in the middle. For some projects I wouldn’t even use a framework at all and would write adapters for some vendor libs too. It just depends.
It’s completely depends on the project and the maturity of the project. But it’s all going to be somewhere in the middle. For some projects I wouldn’t even use a framework at all and would write adapters for some vendor libs too. It just depends.
It’s completely depends on the project and the maturity of the project. But it’s all going to be somewhere in the middle. For some projects I wouldn’t even use a framework at all and would write adapters for some vendor libs too. It just depends.
&gt;This one seems stupid and any one who does it, IMO, is stupid. and not the KISS stupid, but legit stupid. That's a great way to form a circlejerk, not necessary to learn something. &gt; Look at rails, in thirty seconds I can have a basic blog (obviously maybe more like an hour). You could have hundreds of basic blogs in a week! It's almost like being able to make a copy.
&gt;This one seems stupid and any one who does it, IMO, is stupid. and not the KISS stupid, but legit stupid. That's a great way to form a circlejerk, not necessary to learn something. &gt; Look at rails, in thirty seconds I can have a basic blog (obviously maybe more like an hour). You could have hundreds of basic blogs in a week! It's almost like being able to make a copy.
&gt;This one seems stupid and any one who does it, IMO, is stupid. and not the KISS stupid, but legit stupid. That's a great way to form a circlejerk, not necessary to learn something. &gt; Look at rails, in thirty seconds I can have a basic blog (obviously maybe more like an hour). You could have hundreds of basic blogs in a week! It's almost like being able to make a copy.
&gt;This one seems stupid and any one who does it, IMO, is stupid. and not the KISS stupid, but legit stupid. That's a great way to form a circlejerk, not necessary to learn something. &gt; Look at rails, in thirty seconds I can have a basic blog (obviously maybe more like an hour). You could have hundreds of basic blogs in a week! It's almost like being able to make a copy.
&gt;This one seems stupid and any one who does it, IMO, is stupid. and not the KISS stupid, but legit stupid. I don't mind. Don't know you anyway.
If that thing is so critical on it maybe you should consider contributing back to it or fund its development? Why would someone work freely for your company making money on that work? Some people are good-willed and will implement stuff for their users, but don't take that for granted. Also side note but Composer 2.0 has nothing to do with `tymons/jwt-auth`...
If that thing is so critical on it maybe you should consider contributing back to it or fund its development? Why would someone work freely for your company making money on that work? Some people are good-willed and will implement stuff for their users, but don't take that for granted. Also side note but Composer 2.0 has nothing to do with `tymons/jwt-auth`...
If that thing is so critical on it maybe you should consider contributing back to it or fund its development? Why would someone work freely for your company making money on that work? Some people are good-willed and will implement stuff for their users, but don't take that for granted. Also side note but Composer 2.0 has nothing to do with `tymons/jwt-auth`...
If that thing is so critical on it maybe you should consider contributing back to it or fund its development? Why would someone work freely for your company making money on that work? Some people are good-willed and will implement stuff for their users, but don't take that for granted. Also side note but Composer 2.0 has nothing to do with `tymons/jwt-auth`...
If that thing is so critical on it maybe you should consider contributing back to it or fund its development? Why would someone work freely for your company making money on that work? Some people are good-willed and will implement stuff for their users, but don't take that for granted. Also side note but Composer 2.0 has nothing to do with `tymons/jwt-auth`...
Man I love paragonie and what they're doing, they're probably super strict with anything dealing security but \`display\_errors\` is on? I'm pretty sure this is unintentional so I maybe missing something.
Man I love paragonie and what they're doing, they're probably super strict with anything dealing security but \`display\_errors\` is on? I'm pretty sure this is unintentional so I maybe missing something.
Man I love paragonie and what they're doing, they're probably super strict with anything dealing security but \`display\_errors\` is on? I'm pretty sure this is unintentional so I maybe missing something.
If that thing is so critical on it maybe you should consider contributing back to it or fund its development? Why would someone work freely for your company making money on that work? Some people are good-willed and will implement stuff for their users, but don't take that for granted. Also side note but Composer 2.0 has nothing to do with `tymons/jwt-auth`...
&gt;You got downvoted to oblivion, i guess demands in the open source world aren't well received. You are asking for it though: if something doesn't move as fast as you want/need in open source, you can contribute to it. Be it by code directly or funding its development. If you don't you don't get to complain about the development pace. Also as far as I can tell there is no relationship between `tymons/jwt-auth` and Composer so the complain is also completely irrelevant to the discussion
&gt;You got downvoted to oblivion, i guess demands in the open source world aren't well received. You are asking for it though: if something doesn't move as fast as you want/need in open source, you can contribute to it. Be it by code directly or funding its development. If you don't you don't get to complain about the development pace. Also as far as I can tell there is no relationship between `tymons/jwt-auth` and Composer so the complain is also completely irrelevant to the discussion
Wrapping legacy code in Commands does exactly that you need - modified the behavior of classes without changing them (open-closed principle). You don't need to go anywhere changing code, the legacy classes can still be used directly everywhere else in the code.
Wrapping legacy code in Commands does exactly that you need - modified the behavior of classes without changing them (open-closed principle). You don't need to go anywhere changing code, the legacy classes can still be used directly everywhere else in the code.
Wrapping legacy code in Commands does exactly that you need - modified the behavior of classes without changing them (open-closed principle). You don't need to go anywhere changing code, the legacy classes can still be used directly everywhere else in the code.
Wrapping legacy code in Commands does exactly that you need - modified the behavior of classes without changing them (open-closed principle). You don't need to go anywhere changing code, the legacy classes can still be used directly everywhere else in the code.
\&gt; You still have old shitty code behind new nice command pattern, wow what a pointless exercise. It does contradict the academic definition of refactoring, but that's what refactoring in the real world is about. Companies rarely pay for major refactoring, so you refactor little pieces when you can. The old code is called directly anywhere else, so you don't have to change any other components. You wrap it up with a Command - and you get to modify the behavior of a legacy class without modifying its code, just as open-closed principle suggests. &amp;#x200B; I would replace the class\_exists() with a dependency injection though, that's not a good way of doing things.
Symfony/validator There is no need to attempt to re invent the wheel.
Php has built in validation. Check that first
The articles on coding practices etc are a godsend too! /u/sarciszewski is great for overall quality.
Abstraction allows for reuse. We run multiple applications that partially contain the same business logic. Enter Composer packages. For historical reasons not all applications use the same framework or version. By abstracting the functionalities to be framework agnostic we can use the business logic in every application.
Hello, you must include (using include or require) the file with variable definition before use it!
Endtest spam
Yes that's what I thought as well. But it works without including index.php in my bootstrap file. That's the strange thing.
There are countless concepts and validation libraries to help you validate the potentially dangerous user input. You have to decide for ourselves which is the best solution for our specific requirements. One of the most popular validation library for PHP is [Respect\\Validation](https://github.com/Respect/Validation). You can try it and maybe it’s a good solution for you. Personally, I don’t use a special validation library, because PHP itself offers more flexible and better possibilities for input validation. The only solution that **really works** for me in a big enterprise application was [Martin Fowler’s validation](https://martinfowler.com/articles/replaceThrowWithNotification.html) concept. I have written a small library in PHP to collect all validation errors: [selective/validation](https://github.com/selective-php/validation).
Agreed, every other day some fresh account spams about endtest. Makes the product look really bad IMHO.
If I’m reading this correctly, I think you’re looking at things in the wrong order. My assumption is that traditionally, index.php is called first, and at the bottom of that file it’s requiring (including) your bootstrap.php, which will be why $url is available to you.
I guess not within request
it is not so good at all. there are better test solutions out there
Bootstrapping the application at the very end. Nice design.
I am on mobile so or is hard to view the screenshots, but my guess is that the web directory has a .htaccess file with a rule to route all requests to index.php. This is a common php setup known as a "front controller". In PHP all variables have global scope unless they are defined inside a function, so once the variable is declared in the front loader, subsequent files have full access to it.
you require\_once "bootstrap.php" (which is an include) in line 6 of index.php. in line 5 you have intialized $url. so this var is set before "bootstrap.php" is loaded. thats why you can use this var in your "bootstrap.php"
&gt;In PHP all variables have global scope unless they are defined inside a function, so once the variable is declared in the front loader, subsequent files have full access to it. But when I declare a variable $message in index.php and try to echo it in bootstrap.php I get this message: **Notice**: Undefined variable: message in **C:\\xampp\\htdocs\\ruah\\core\\bootstrap.php** on line **30** **Notice**: &amp;#x200B; Undefined variable: message in **C:\\xampp\\htdocs\\ruah\\core\\bootstrap.php** on line **30**
But $url is available in bootstrap.php although it is declared in index.php. When I declare another variable in index.php ($message) and try to echo it in bootstrap.php I get this message: **Notice**: Undefined variable: message in **C:\\xampp\\htdocs\\ruah\\core\\bootstrap.php** on line **30**
Is $message declared before or after you require/include bootstrap.php?
It's not a good idea indeed, but I haven't had any feedback on that yet. Once wrongly chosen, it seems inappropriate to me to change the name of the client without consultation of the users. For those who didn't stop on name of the Cli, I tried to make some rather innovative commands really simplify development.
Are you declaring $message after you’ve required the bootstrap file?
Wow I am an idiot. I declared it after I required bootstrap.php. I don't know why it has to be before the require bootstrap.php but now it works. Thank you so much to all, you made my day :)
Glad that helped. It's the order of execution. As others pointed out, variables are declared in the global scope so you can think of an include as just placing the code it contains in to your file. If $message was declared before your include, the include has access to it. If declared afterwards, your include doesn't know it exists
&gt; Confusing service location for dependency injection and saying that static methods are better because they're more performant and can be type-hinted. This part is indeed confusing. It will have to be rewritten
Meme image says: Can't have session hijacking if there are no sessions to begin with
Great and thanks for the explanation :)
&gt; Why can I use a variable in one file although it is only defined in another file. Because `$url` is declared and used in the same scope. Including files does not change scopes, it just "includes" more code into the current scope.
Is display error set to on?
bootstrap file is included in index.php after $url was declared, this is ok!
Thank you.
I think about it is three separate cathegories: Business logic - never couple (DDD if possible) Infrastructure/Services - coupling with reason (should be possible to switch framework with not too much work) GUI/API interface - couple everything (it would be easier to write it from scratch if you switch framework than trying to make it framework agnostic)
The point is that it loads the configuration from a .env file which isn't checked into your repo
- Not checking a file into your repo doesn't require a *specific format*. So that is not something dotenv enables you to do. - A format that "many tools can read". Compare it to JSON. Are there more tools that read ENV than JSON? Categorically no. Even then, give me an example where ENV is better than JSON (or INI, or PHP or anything).
&gt;What a pity that a Framework with so many defects is much faster than others ([twice as fast as Symfony, 6 times as fast as Laravel or cake](http://www.phpbenchmarks.com/en/comparator/framework?benchmark=rest-api)) on a REST request (with routing, translation and loading of 100 objects: see [benchmark specifications](http://www.phpbenchmarks.com/en/benchmark/ubiquity/2.1/rest-api)). Those kinds of speed tests just don't matter in the real world. The difference between Symfony and Ubiquity is still under a millisecond per request in that test with tens of thousands of requests a second, on presumably average hardware, the vast majority of applications will never come close to needing that kind of throughput. The slowest version of Laravel on that test is still capable of serving nearly a *billion* requests in a day on a single server. Many other parts of your infrastructure are going to block you long before the framework is an issue.
\&gt; Many other parts of your infrastructure are going to block you long before the framework is an issue. This is true, not to mention that it is also necessary to take into account the quality of the code developed using the framework. But it's not because several parts of your infrastructure can be down that you have to ignore the framework's performance either. The millisecond difference seems to be more important expressed as a percentage: 100% (x2).
Don't you find it annoying to have to pass the rules as string names (e.g. `'required|unique:posts|max:255'`)? I can't help but to find it so error-prone and flismy
My point is two times nothing is still nothing. The performance difference in your choice of framework is unlikely to ever be noticeable to an end user.
I think it's better to post this on [r/phphelp](https://www.reddit.com/r/phphelp)
Can someone tell me what &amp;#x200B; $this-&gt;db-&gt;select('\*'); &amp;#x200B; is doing? It seems to be querying the whole DB?
Respect or symfony validators are both good. For programmatic use, instead of annotations, I prefer respect.
In both computer science and mathematics, 0.9 is not 0, if it is multiplied by an integer greater than 1. If you have a slightly less performing server, or if you multiply the number of requests, the almost zero will turn into much more. As for the perception of the end user, personally, I notice significant differences in my browser by implementing the same features with different frameworks, confirmed when I look at the loading time of the pages.
So at least part of your problem is this: http://localhost/testdb/images?limit=40 That limit=40 is a GET variable, but your code is looking for post variables. $this-&gt;input-&gt;post('limit') will not work with this URL because it's not a POST variable. Somewhere you've got some javascript that is doing stuff when that select menu changes. Find that script and share its source as well.
I'm jealous. I like slim, and I dream of having the frontend decoupled from the backend framework. We wanted to do the same thing except our MVC/POC *became* the application at some point. :( Sometimes instead of "move fast and break shit" you should "slow down and fix shit".
You can pass an array of objects that implement the Rule interface. Here's a nice package with custom rules as an example: &amp;#x200B; [https://github.com/spatie/laravel-validation-rules](https://github.com/spatie/laravel-validation-rules)
Hey, you could always submit another way if you have a better idea? ;) Also, there is a little less known way of passing the rules simply [using an array](https://stackoverflow.com/questions/12875334/laravel-pattern-validation-pipe-character-issue). It's specifically for regex, but it can be applied to any rule. That string is simply split on the pipe into an array, but the validator will accept an array.
I always try to write new code as if it were a standalone library that could work anywhere, and consider the unit tests as my first user, and try to make that user happy. However, like you said, it can be impractical to make 100% decoupled code in some situations. Particulary when you are writing code in a framework and interacting with the database. It's usually best to take a shortcut there and assume the existence of the framework's ORM and friends and use them. In those cases I make a compromise, but try to build it such that it could at least easily be ported to another context less painfully if need be. Usually that can be acheived by making sure that the framework agnostic parts are separated to their own classes and the parts that interact with the framework provided utilities are as slim as possible. That said, when I work with frameworks, I have also started to move away from using certain types of helper code the framework provides, like extending their wrapper "mix-ins" that are designed to work with other classed they provide. For instance, as a made up example if a framework provides a `ModelHelper` that you can extend and attach to one of your `Model` classes, and it's really just a glorified `Trait` with some "magic via convention," I no longer see the benefit in using that kind of thing. I'll just create my own standalone class and call it directly. Usually that results in easier to test code, less need for mocking, and less framework dependency.
Who still uses code igniter?
TIL Respect Validation, it goes to show how we all operate in echo chambers.
Legacy projects
Getting closer. I took what you said and Changed out: if (!empty($this-&gt;input-&gt;post('limit'))) { $Pagelimit = $this-&gt;input-&gt;post('limit'); } else{ $Pagelimit = 20; } For: if (!empty($this-&gt;input-&gt;get('limit'))) { $Pagelimit = $this-&gt;input-&gt;get('limit'); } else{ $Pagelimit = 20; } And it started to work, but for the first page, when i click on page 2 it resets to that pages value.
 Ok looks like all i need to do was add $config['reuse_query_string'] = TRUE; and it seems to work.
Laravel ftw. This has been my go-to framework for a while now and near everything is there out of the box, well documented and just so perfect. Integrating into a non-laravel app may be difficult as said but there are a few repositories out there that have split up parts of Laravel for use elsewhere.
Just started working in a company a few months ago that's built on a version of code igniter so old that the entire dev team is scared to death of, yet management won't let us make it a priority to get on a modern platform or at least update to a more recent version of CI. Sometimes you take what you've got, cross your fingers, hold your breath, and pray that it doesn't implode while you're working there.
If you think lots of parenthesis helps make "ugly" code pretty, you'll love LISP.
Why must people like you exist?
I think you've read my comment in reverse. The RFC proposal reduces the need for parenthesis, and allows for long run-on string concat and multiple calculations in between.
No, I read your comment properly.
Post your question on stack overflow or phphelp subreddit. My condolences on having to work with Magento 2.
What are you talking about. https://www.swoole.co.uk/docs/ The Swoole documentation is free and open for everybody.
&gt; And yet you have to pay to read the documentation. What on Earth? No ... Just no ... Its open and free to read for anybody. https://www.swoole.co.uk/docs/ I do not know what website UnusualBear visited but i suspect that its not a the official Swoole website.
https://www.swoole.co.uk/docs/ as of the time I wrote this comment had a request from some tipping software to pay to read the docs, and lorem ipsum on half of the "getting started guide". It's the only site with "swoole" in the name in my search history. I confirmed the content with 3 others at the time via my company's slack channel. Either they changed their minds or were hacked at the time. Either way I wouldn't touch them. Also, not sure why you went off on a tangent about Windows. No one here is talking about Windows. We're talking about whether a POSIX-compat kernel is needed to run the software.
This isn't what you're asking for and I'm fully prepared for the downvotes, but if you're not committed to Magento for the project, save your sanity and bail now. Magento might work out if you've got a team of 5+ dedicated to it full time with a giant budget, but other than that, you're better off with just about any other shopping cart system that's out there if you're a one man show.
Look into known exploits against old versions of CodeIgniter and show him how you're able to hack the site. If he doesn't fire you for being inconvenient, he'll make it a priority to at least upgrade to the latest CI. And if he does fire you, then it probably saved you from a ship of the damned.
I'll leave that one to the CTO lol. The CTO has been screaming about it, but so far he's gotten nowhere. If I ever move up to that position maybe I'll try that tactic.
Worked with Magento for 6 years and totally agree with this. It cost thousands for Magento U training and there isn’t a ton of learning resources out there. Please don’t bring up Mage2.tv that site won’t help. Bail if you can unless you want to commit to Magento for a career.
I came here to say the exact same thing. Magento, especially 2, ain’t worth it without significant investment.
Hi r/PHP OP here with another exciting Rubix ML update &amp;#x200B; First of all I want to thank everyone who has been using and contributing to [Rubix ML](https://github.com/RubixML) \- we're starting to build a community and that's a great thing &amp;#x200B; The latest release (0.0.12-beta) introduces multiprocessing support, neural network upgrades, as well as a new tutorial using the MNIST dataset to train a multi layer layer neural network to recognize handwritten digits &amp;#x200B; Here are a few of the most notable additions &amp;#x200B; \- Learners implementing the [Parallel](https://github.com/RubixML/RubixML#parallel) interface can benefit from using a multiprocessing Backend such as [Amp](https://github.com/RubixML/RubixML#amp) \- [Random Forest](https://github.com/RubixML/RubixML#random-forest), [Bootstrap Aggregator](https://github.com/RubixML/RubixML#bootstrap-aggregator), [Committee Machine](https://github.com/RubixML/RubixML#committee-machine), [Grid Search](https://github.com/RubixML/RubixML#grid-search) learners now implement Parallel \- Various cross validators including [K Fold](https://github.com/RubixML/RubixML#k-fold), [Leave P Out](https://github.com/RubixML/RubixML#leave-p-out), and [Monte Carlo](https://github.com/RubixML/RubixML#monte-carlo) implement Parallel as well \- Added [AdaMax](https://github.com/RubixML/RubixML#adamax) neural network optimizer - a variation of [Adam](https://github.com/RubixML/RubixML#adam) &amp;#x200B; Here is a link to the full [changelog](https://github.com/RubixML/RubixML/releases/tag/0.0.12-beta) &amp;#x200B; You can check out the MNIST handwritten digit tutorial and example project below &amp;#x200B; [https://github.com/RubixML/MNIST](https://github.com/RubixML/MNIST) &amp;#x200B; As always, if you have any questions for me, feel free to ask &amp;#x200B; Thanks &amp;#x200B; Andrew
Did you click through to read any of the individual pages in the Swoole docs? You get to a paywall. [This is what I get on the prerequisites page. ]()
Can you explain how it compares to https://github.com/php-ai/php-ml?
I've been following Rubix for a while and I've been meaning to integrate it into a side project of mine. I was wondering if you (or anyone else) could point me in the direction of which estimators would likely be the best fit for producing a prediction of a day's revenue based on data from previous days? I have two and a half years of sales data from my side project (3,600 orders) and currently make a very rough prediction of the revenue for the month ahead by taking each day that remains in the month and combining the average the revenue for that specific day each year, the average revenue for the day of the week, and the average revenue for each day so far this month. That combination tends to be surprisingly be accurate, but I'm sure it could be significantly improved upon. I'm somewhat overwhelmed by the number of possible estimators and a lot of the introductory literature I've found focuses on binary prediction, rather than value prediction. Any help you can provide would be greatly appreciated.
What about now? www.[amezmo.com](https://amezmo.com) ? I added a video showing one of the features that I'm trying to illustrate
Sure I built Rubix to bring modern machine learning tools to PHP In general ... Rubix ML has more modern algorithms, is faster, more powerful and easy to use due to modularity, and has considerably more features (The author of PHP-ML would appear to agree to at least some of that too because he even [copied my Regression Tree code](https://github.com/php-ai/php-ml/issues/379) from Rubix ML into his library) Having that said ... PHP-ML has been around longer and has a bigger community, it looks like they won some award too (I haven't won any awards yet)
Hi , glad to have as part of the growing community Revenue prediction is a great use case for machine learning Have you seen the [Housing Price Prediction](https://github.com/RubixML/Housing) tutorial yet? If not, that's a good place to start because it walks you through a typical regression problem in Rubix I'd recommend [Gradient Boost](https://github.com/RubixML/RubixML#gradient-boost) as a good estimator to start with because it performs and can handle both categorical and continuous data The choice of estimator, however, always boils down to which one performs best for your dataset About how many features (different variables) do those 3,600 orders have? Do you have any missing data?
Hey, you could always submit another way to Laravel if you have a better idea? ;) What about the SymfonyValidator? Or is there any painful DX point with it? &gt;Also, there is a little less known way of passing the rules simply using an array Good to know thanks!
I see good to know, thanks :)
Thanks for the reply! Regarding variables, a typical order is anywhere from 1-5 items, with a single item costing under £10. We have 50 or so fairly generic products that sell continually (with orders concentrated around Thursday, Friday and Saturday) and then another 50 or so that are specific to certain events or times of year. The customer could also influence it, as we have a small group of whales who buy regularly (differing amounts) and account for a significant minority of sales, with the rest being made up by customers who only buy once or a few times. We have all the other data you might expect for an ecommerce purchase. A slight wrinkle is that we also provide discounted packs of credits that can be used to pay for orders. A single credit purchase tends to be £100-150, which might then be used to pay for orders over a month or two. There are usually only a handful of credit purchases a month, occasionally none, so that variability impacts the accuracy of our current predictions as its a seemingly fairly random factor. Thanks for the link to the Housing tutorial, Googling "gradient boost future sales" has given me a bunch of other useful reading I need to take a look at. I wonder how you'd model the dataset? Would a single record be a specific day in the past, containing an aggregate of all the orders from that day? And then the input for estimation would be a future date?
I have used Laravel's validation package for a WordPress plugin and it worked like a charm. It's a little annoying to setup due to its translation dependencies, but nothing too difficult to handle.
You're defining your array incorrectly, I think. Pick something from [https://www.php.net/manual/en/language.types.array.php](https://www.php.net/manual/en/language.types.array.php)
¬_¬ @ screenshot of code. Also, looks fine to me and when I re-typed it into a file to test, it worked as expected. I'd be looking elsewhere, chances are it's something that's hiding your &lt;br&gt; tag and treating it as an empty node rather than putting a new line between each one.
Ontging wrong with how the array is defined.
What is your output? And what do you expect to get?
OK, apologies. In which case, can we see the output please OP?
Just entered your code into php-cli 7.2.17 &amp;#x200B; `login@ip-192-168-1-47:~$ php` `&lt;?php` `$valueString = '';` `$array = [23, 54, 99];` &amp;#x200B; `foreach ($array as $value) {` `$valueString = $value;` `echo $valueString . '&lt;br&gt;';` `}` `23&lt;br&gt;54&lt;br&gt;99&lt;br&gt;` That is exactly the output I expect.
Actually, I came to Magento2 from Wordpress and Woocommerce. I couldn't imagine how difficult and full of bugs this cms is! Even the smallest change has to be in a hard way. Thanks for your answer though. I am kind of realizing that I ve shouldn't commit into that project
Thanks for your support and your tip!
Yes but why are there three numbers and not only one ? I thought every number gets overwritten by the nest one ? so 23 overwritten by 54 overwritten by 99. Expected output would be only 99. Why is this not the case ?
Output is 23&lt;br&gt;54&lt;br&gt;99&lt;br&gt; . I thought it would be only 99. Why are they add inside of $valueString although it is not an array ?
Because your echo statement is inside the for loop. Move it out, and you’ll only echo the last value, but it’s a really bad way to go about the pattern. If you only want the last value in the array, don’t use a for loop.
No, you are writing the output to the client (browser, terminal, etc) on each cycle/iteration of the loop. At the end of the loop the value of the variable will be 99.
It looks like a block because there are no new lines, it is outputting it separately though. Also why not just echo $value instead of assigning it to another variable? Try adding \n after &lt;br&gt; if you want it to appear not as a block.
Now I get it, so stupid. Thanks so much for your patience. Have a wonderful day :)
Thank you very much :)
Did you just work out you put the echo in the wrong place?
Thanks for the answer, much appreciated!
Nice!
I don't get it? This is recursive, is it supposed to mean that the question get's asked over and over, or that's it's an endless circle? Like, circle of life in Lion King? Where is the return type? it should be `: void`
I think the main idea is that the search for the meaning of life becomes the meaning of life.
Step 1: Don't (yet) Reason: While PHP can perform certain elements of functional programming, the syntax does not lend itself to it, and can rapidly become quite unwieldy. There are short closures coming in 7.4 which will make it seem at least a bit more natural.
Have a look at https://github.com/lstrojny/functional-php
EDIT: made this a comment as a "Post body cannot contain text" . \--------- Hello fellow PHP programmers, As a developer of web apps I often need to implement complex business logic that, in a more Object Oriented (or procedural, depending on whether you look at this from a method or class level), tends to interweave itself into the 'plumbing' needed to produce the correct state. A simple (contrived) example of what I mean: $results = []; foreach($records as $record) { if(someCondition($record)) { continue; } $results[] = $record; } return $results; As can be seen, both a business facing concern in form of 'someCondition' and a infrastructural concern in the form of '$results\[\] = $record' are present in the same piece of code, making it less obvious among what lines improvements may lie. From experiments in more functionally oriented languages I learned that a lot of clarity can be gained by separating these concerns into explicitly different pieces of functionality. These separations can then be used in composition to produce the same end result. These functional languages however, tend to depend heavily on type inference or static analysis to check boundary conditions, such as function signatures. PHP does not seem to support such indepth analysis of methods, and certainly seems lacking when defining anonymous functions. These anonymous functions become instances of a pretty much undocumented class Closure, that can be somewhat inspected using undocumented features from the Reflection Module. Now I know PHP is not primarily focused on a functional paradigm, but does support more and more of the common functional niceties, such as the short closures coming up. My question then, is how to go about exploring and discovering PHPs abilities when it comes to inspecting functions and their signatures. Documentation from implementation of these functionalities would also be welcome, as I cannot wrap my head around, for example: &amp;#x200B; $f = function(int $x) : string { return new \stdClass; }; // perfectly fine definition $r = new \ReflectionFunction($f); $r-&gt;getReturnType(); // string $f(5); // Warning: $f must return string, stdClass found
&gt; The issue is when the archive fails, it rapidly fills up the /tmp directory then crashes our server. This should be a red flag for you. You should catch this failure, and `unlink` the file.
https://github.com/justinrainbow/json-schema The client side can use the same validation if the requirements are met.
``` $f = function(int $x) : string { return new \stdClass; }; // perfectly fine definition $r = new \ReflectionFunction($f); $r-&gt;getReturnType(); // string $f(5); // Warning: $f must return string, stdClass found ``` What were you expecting to happen here? Your function signature says that you're returning a string, and then in the function you're telling it to return something which isn't a string.
Note that the advice from cdtweb should only be applied to specific and focussed questions - asking "where do I start" is too broad for Stack Overflow.
I suddenly feel like I don't know PHP.
I'm author of Phln. A small functional utility which is sort-of copy of Ramda. Maybe you'll find it usable :) [https://github.com/baethon/phln/](https://github.com/baethon/phln/)
I am aware the signature and method body do not match up, but I was expecting the warning to be issued after declaring $f, not after calling it.
Until the function is executed, there is no way to tell what type will come out of that function.
PHP doesn't work like that. It uses something called runtime checking, so you're able to declare signatures to be whatever you want (unless you're breaking certain interface/inheritance conditions), but it will only throw an actual error when you try to actually use them. If you want to detect such errors, you need to use a static analyser which will check through the code and work out how it actually functions (without actually executing it), and display appropriate errors / warnings.
Yet ReflectionFunction is able to determine the return type, so at least the method signature gets parsed and interpreted. Do you happen to know why the same is not true for the method body? I understand that PHP can be pretty flexible with its types and that the return value for a method can be pretty much anything, but I would suspect that in this case a simple enough shortcut could be made. To clarify, I do not know how PHP constructs or interprets these function structures internally, and I would like to know.
I must have missed something then, I was under the impression that the Reflection module covered this need. It also explains why my function declaration was valid until the function was used. Is there really no way to check this during runtime? It seems to me that anonymous functions are quite a dangerous tool to use if it is not possible to run checks against them during runtime, although I suppose class methods and normal named methods are subject to the same problem. Too bad, I was really hoping to find some support for functional patterns but it seems that PHP is just lacking the tools needed.
Reading a function signature is easily done by reflection, and the signature can say absolutely anything. To get the actual type returned by the function, the function has to run and return, which can’t be done by reflection.
&gt; Is there really no way to check this during runtime? Not that I'm aware of. Most people use static analysers to cover that need.
Nice!
Thank you :)
Remember that the input to any learner is a fixed length feature vector that must not contain missing values &amp;#x200B; For example, you could design a 50 dimensional feature vector consisting of the gross revenue each day for the past 50 days and the label is the revenue attained the next month let's say &amp;#x200B; If you want to get fancy, you could incorporate website statistics or seasonal variables as well &amp;#x200B; Let me know how the Gradient Boost tutorial works out for you and feel free to follow up with any questions
I'll add another vote for running the fuck away. I've been building and maintaining a Mage 1 project since 2013, and none of my coworkers or freelancers have been able to help effectively. I've spent more hours stepping through layers upon layers of xdebug than I can count, and at some point that turns from "detective work" to "masochism". Never again. --- Here's some of the fun things you can expect from Magento: * [Undefined classes, methods, and fields, oh my!](https://imgur.com/RMxWEgR) * [You said you wanted a DB index, you didn't say anything about keeping your data](https://what.thedailywtf.com/topic/20898/the-index-is-more-important-than-the-data) * [`sprintf` is hard, let's `@sprintf` instead](https://www.reddit.com/r/PHP/comments/7wo8e1/dell_debugging_in_production_sucks/du2q7dv/) * [A screenful of ~~secrets~~annoyances](https://news.ycombinator.com/item?id=13343468) * [Paid extensions: security fuckurity](https://news.ycombinator.com/item?id=13100162) --- ^(The client recently got the bright idea to try and offload some of that work to cheap "Magento Certified" consultants in India, who so far have managed to copy-paste a Magento tutorial and create an empty module without even changing its name from `Inchoo_Mymodule`.
*a non-existent variable/array member. I am sure I have seen a good post that explains the difference but half a hour of Googleing yielded nothing. I suppose it has something to do with "references are not pointers" but I cannot make any sense of that either.
There are still plenty of functional programming principles you can apply though, even without things like arrow function syntax. This article was written for JavaScript but it applies to PHP equally well: [Functional-ish JavaScript](https://medium.com/@bluepnume/functional-ish-javascript-205c05d0ed08).
You've replaced the entire array, not the contents of the array. $c is still sharing a reference with the first element of an array, but it's a different array to what $d now contains.
Aha. Thank you, it makes sense. I think I should draw on a paper, what happens to variables in this case. So we have an "phantom" $d variable with a phantom element? And then replace $d with a real array hat contains a real element. But a reference works only one level, for $d only but not its elements?
Your first code block is a textbook example use for array_filter. You can just replace all that with `$results = array_filter('someCondition', $records);` Your second example is easily spotted by using phpstan or Phan on your CI or in a pre-commit hook.
&gt; Aha. Thank you, it makes sense. I think I should draw on a paper, what happens to variables in this case. So we have an "phantom" $d variable with a phantom element? More accurately, there is an array value that used to inhabit `$d` that was created when you did `$c = &amp;$d[0];`. Then you replaced the content of `$d` with a new value. Actually, I made a mistake about the reference here. Since the containing array is gone, the reference that was shared between its first element and `$d` is now only used by `$d`. A reference with only one use like this is, from the user perspective, indistinguishable from there not being a reference at all, and PHP may clean it up at some point. &gt; And then replace $d with a real array hat contains a real element. The array that existed before was as real as the new one, even though it's dead now. &gt; But a reference works only one level, for $d only but not its elements? Think of it as being based on slots for values. Such a slot can be a variable, an element of an array, or an object property. A reference is a relation between two or more slots where changing the value in one slot will also change the value in the other slot. Technically, this is actually done internally (from PHP 7 onwards) by having both slots point to the reference which contains its own slot for the actual value, but this is hidden from the user.
https://3v4l.org/Anp20 So now I get it that when I reterence a non-existent array's member, I get this array *legitimately defined*, as well as its member. And now, as you say, instead of assigning a value to an existing array element to retain the reference, I am assigining a value to the entire array.
Great :)
I think now I get it. Thanks a lot!
PHP doesn't have a built-in static analysis, but your first line could be easily caught, befare running by phpstan, psalm or phan. I think even phpcs or phpmd would catch this.
I try to develop APIs on [Siler](https://github.com/leocavalcante/siler) as close as possible to declarative and borrowing some [functional principles is one strategy](https://github.com/leocavalcante/siler/blob/master/tests/Unit/Functional/FunctionalTest.php).
Oh wow. Coming from Laravel, the moment I had the pleasure of viewing some Magento code, I instantly decided to run away from that thing and never look back. It looked mindboggling at first sight, but I did not expect it was -this- bad.
Article on how to use Laravel's validation outside of Laravel - [https://medium.com/@jeffochoa/using-the-illuminate-validation-validator-class-outside-laravel-6b2b0c07d3a4](https://medium.com/@jeffochoa/using-the-illuminate-validation-validator-class-outside-laravel-6b2b0c07d3a4)
If it comes to moving a project from one framework to another, it's most likely going to be a complete rewrite anyway, I think.
I could tell a few comments ago that they were just being toxic. Not worth the effort.
What I will do when I specifically want my value to be a stand alone thing is to return the value from a function. Most of the time it doesn't matter if the value was passed by reference or not. But, when you need it not to be, return the value from a function.
That sounds more like compiled code. I’m wondering if Hack or any other VM would provide this for PHP. I don’t consider this lacking “tools” in any way. It’s really the difference between runtime, compiled or static analysis.
The point of decoupling is so that you don't have to rewrite to change dependencies. The more decoupled you are from the framework's services, the easier it is to not rewrite.
Will check it out.
&gt;a big one and that people don't need a DB always or an ORM, but using a Query Builder without an ORM, this is what I think it's strange... This statement makes me sad :-( If you know SQL and write good S.O.L.I.D code and adhere to D.R.Y. an ORM will slow you down. For instance, if you want to call a stored procedure how do you do this with an ORM? If you want to use a subselect in in your select query and set any values that are NULL to an empty string, then call a MySQL function or a stored procedure, how do you do this in an ORM? If you want to create a temporary table and perform a union or a natural select across 3 tables, how do you do this in an ORM? These are things I've done in every one of my jobs: from telephone records, to loan software, to now educational records - I \[and every one else who writes code\] is expected to be able to use MySQL to its fullest, which means writing SQL, not relying on some auto-code generator. I'm not trying to be mean, I'm trying to say, "An ORM limits your thoughts and actions"
I'm currently working doing both Node &amp; PHP with ReactJS. I had someone say to me Friday, "PHP?! That's like the slowest language and so hacky" He then pointed me to some person's blog where they attempted to write a bubble sort algorithm and PHP took 4 seconds while node took 1.5 seconds. I need to put a link on my gitHub page, but, I rewrote the tests using **actual** bubblesort algorithm and Node ran the test in .5 ms and PHP in .003ms
Can it manage the sprinklers, though?
No, but we will for you
I understand the fact that it limits you, but seeing that you have access to a query builder and not an orm it looks strange to me. I understand that it will limit you and constraint you to do the job in one way only, but for some jobs it's just enough to get the job done quick, easy and efficient. When needing to write raw SQL I know that most of the orms can handle them and use them without a problem (at least I didn't meet one who hasn't) so if you have a situation where you need something like this you are set to go. I don't say that orm is the only way that you can make software, but i say that it's only a thing that will help you to get the job done and seeing that you have a query builder made and without an orm I find it strange. Even if this is for learning purposes and to have fun, I I thought that he/she/it will have also an orm because a basic one is not so hard to create and it's quite fun. That's my rational about this and I didn't mean to make you feel sorry :(
What's the stack of the system?
This one is even more convincing, https://3v4l.org/ZajXj does exactly what you said - overwrites the entire array and the old reference points astray.
Php School management system
Ok, but this isn't my question, I asked what's the stack of system? What did you use to build it? Tools, gear and etc... Do you get me now?
If you want to copy a value without it being a reference, you can just copy to a new variable, or some existing variable you know isn't a reference: $newA = $a;
&gt;i use core php to make this
i am talking about best 'human' player.
Nice, without frameworks ? It's seems very well done.
My apologies, I didn't know that the place was not quite appropriate for this type of post. I'll publish an ad next time That being said, now that it has been done, I will explain a little more precisely what it is all about. &amp;#x200B; I have been working for many years on PHP MySQL projects, personal projects or for clients (websites with Admin Panel, online sales sites, web applications,...) &amp;#x200B; My customers need to manage their data (categories, products, customers, orders,... any data) and do so using the admin panel of their website. &amp;#x200B; PHP CRUD Generator allows you to generate, customize and edit your [Bootstrap admin panel](https://www.phpcrudgenerator.com/admin/home) at any time. &amp;#x200B; There are actually many other excellent tools, Laravel and others, or Mac/Windows desktop applications. &amp;#x200B; But to my knowledge, there is no other web app that can do that. I worked gradually on this project for several years, before publishing this tool. **In a few words**: * Simple visual user interface * Nothing to code * Intelligent database analysis: structure, relationships, keys, field types, value validation - PHPCG understands and stores all these parameters, which allows to generate the admin panel in a few clicks * Very clean and structured generated code (MVC structure, router, PHP objects, TWIG templates, Bootstrap 4 + jQuery) * Admin easily customizable for programmers thanks to the clarity &amp; cleanliness of the code * Documentation &amp; video tutorials * Automatic &amp; customizable jQuery plugins via UI (date &amp; time pickers, file/image upload, thumbnail generation, editing in place,...) * User management &amp; profiles * Etc, etc....
yes without framework can you want to but it?
This PHP library has taken it pretty far by (ab)using weird language features: [https://github.com/mathiasverraes/lambdalicious](https://github.com/mathiasverraes/lambdalicious) If you want to do functional in right way, it's probably going to perform bad. PHP doesn't support tail call optimisation. And like already mentioned, the syntax is going to be verbose. That being said, please do experiment, that's what helps us grow and become a better programmer. Here's a better way to get into functional programming: [http://learnyouahaskell.com/](http://learnyouahaskell.com/) (It's really good!)
Given the nature of the product, are you able to disclose a recent penetration test report? As a parent, I'd be nervous of a school holding my child's details on an unknown SaaS product, unless they'd had done their due diligence on how/where that information was being stored.
No, I'm just asking since this is a PHP thread. If I need one I'll do like you, buy by my own.
okay
 function weNeedToGoDeeper() { weNeedToGoDeeper(); } (not PHP though)
This is so deep, haha
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
We don't allow help posts in the main PHP sub-reddit. Please use /r/PHPhelp/ Cheers!
We don't allow help posts in the main PHP sub-reddit. Please use /r/PHPhelp/ Cheers!
It is not tough
What about a boy named Sue?
One thing I'd change is to use [ISO 639 language code standard][1] instead of country names, similar to [Faker][0]. [0]: https://github.com/fzaninotto/Faker#localization [1]: https://www.loc.gov/standards/iso639-2/php/code_list.php
Very nice. On the other hand I would have expected the gender not to be a boolean, but rather a probability value.
The results seem to be "male, mostly\_male, unisex, mostly\_female, female" ... which is not binary at all.
How do you do?
checked a wiki [page](https://en.wikipedia.org/wiki/Sue_(name)) to get the reference. Sorry for the boy, but he gets a plain `female`, haha
But the country names are not used for the localisations, they are there to give a more concrete gender result (see example in readme). Another case is for instance the name `Jaime` which is mostly a female name worldwide, but in Great Britain it is a more frequent to be a diminutive form of James =&gt; a male name.
Thanks! As MatthiasKuehne noticed the gender is not a boolean at all!
What do you do with unisex names? https://en.wikipedia.org/wiki/Unisex_name
Ah OK then thumbs up I guess :)
This is a fairly basic intro level post, aimed at people who hear the term "State Machines" and think of complicated comp sci stuff that's prolly above them. The code is actually production usable, but fairly simple use case. It is "for Laravel" because I use a Laravel service provider library to set it up, but the winzou/state-machine ( [https://github.com/winzou/state-machine](https://github.com/winzou/state-machine) ) is introduced so any php learners should benefit. Added a couple of links for further study once you get your hands dirty
you will get `unisex` of course. All genders are described in the readme file.
So there are only 2 genders, right?
thanks for your work, looks really interesting! a question: have you compared Rubix ML performances with similar libraries in Python?
This is a very politically incorrect code for 2019 :)
Hey, nice explanations. I slightly went through your tutorial. * Upvote: Choosing meaningful examples * Upvote: For the good explanations. * Suggestion: *I think it would be better if you use a text editor like sublime text instead of using PHPStrom, as beginners should know how to create their own code without depending on auto-completions and suggestions. (This stops user from understanding all the code.) And, its better if you could run those commands on the OS's terminal (Not the PHPStrom's one) therefore the beginners will learn how to navigate to and run the PHP files without any second-hand help.* * I think you missed the final keyword, which can be useful in some cases. Good luck! &amp;#x200B; BTW, if you need a webpage tutorial on Inheritance, [here](https://developer.hyvor.com/tutorials/php/oop-inheritance) it is. (Disclaimer: I wrote that)
Upvote for learn you a Haskell. Easily the most helpful and entertaining book I've ever read on programming.
Did you just assume your users gender?
/r/the_donald has been triggered :P
Functional programming as a term is getting muddied by the various ecosystems &amp;#x200B; Ask a haskeller what functional programming is, they might tell you about monads and higher kinded types Ask a OCamler/F#er what functional programming is, they might show you their algebraic data types and union types Ask a Scala user what functional programming is, and they'll show their kitchen sink syntax &amp; haskell Ask a ReactJS user what functional programming is, they might show you the new hooks system in ReactJS Ask a Clojurian what functional programming is, they might show you data oriented libraries &amp;#x200B; My suggestion is to avoid any "functional programming" feature that is confined to statically typed languages (languages that fail to compile if types are wrong) because PHP is a dynamic language, otherwise you will have a miserable time &amp;#x200B; TL:DR Watch rich hickey talks: copy Clojure
Not sure why you are being downvoted. I use to be option three, decouple everything. Then I realised how miuch time I wasted and now sit comfortably with option 2. Use the magic the framework provides in your controllers, templates etc, but abstract your business logic into seperate classes.
There are languages that do functional programming without TCO, JavaScript, Clojure, the kind of FP you see in PHP typically isn't recursion based anyway, &amp; even when there is, it's typically not enough to stackoverflow
Beside just *how* I would like to see an explanation *why* and *when*. Inheritance is the most double-edged feature in OOP. Any student trying to implement it would likely violate one of SOLID principles, or even all at once. I cannot tell you how many times I've seen a class User extending a Database.
You should avoid giving code examples that are not a real-world usecase. I mean, technically this is correct but noone will implement promoting soliders using state machines in laravel. It's like teaching class inheritance with Animal-&gt;Mamal-&gt;Cat or something like this... There are so many better examples, like article publishing state (with drafts, reviews, rejections etc), or ecommerce order.
Hey, Thanks for your feedback. BTW, I do have final keyword explained at 11:55. I'll keep in mind your suggestion. I have seen and read your tutorial, It's really well written. Upvote...
I completely agree with you. `class User extends Database` . I also did this in the past. I think it is a mistake which we can learn from. When we get some experience we understand that Database is not the parent of the User. Not mentioning about this **is good**. So, the beginner can understand it by their-self someday (The most effective way, as self-teaching is the best). Or, you can just say it. I'm not sure which one is the best way to teach it.
how come? What is politically incorrect to analyse ppl data based on their name?
Some of us old farts work in an array of programming languages in the same day-- using a returned value seems to work regardless of what is in your IDE. Now you know two of the reasons we have so many getters &amp; setters when you really don't 'need' them. Code consistency (as in it all looks &amp; works similarly) and non referenced variables...
Not politically incorrect per se, but determining gender this way is a flawed concept these days: anyone could be any gender, or consider themselves non binary. So your code may get it right for some, it will never get it right for all. It is a nice coding exercise, but quite useless in the modern practical world. It's comparable to determining someone is female because they have long hair. It is not that straightforward these days.
Thats less than 1% of the population. It's not flawed and saying its useless is quite a stretch.
Yeah, he should really teach Composition first. I say this as a 10 year professional PHP mentor. Use code samples like this: https://github.com/phpexpertsinc/RESTSpeaker/blob/master/src/HTTPSpeaker.php That plainly shows how the class can do everything Guzzle does, without inheritance.
Wow, I totally disagree with you about not using PhpStorm. I instruct my students that if they are serious about learning, the $100/year is a firm commitment to the process. Why would we hobble people and get them used to plain text editors first? I combat that ALL THE TIME as a tech lead, with people with 10+ years experience.
Going with the value you just grabbed out of thin air: all reports based on the information contains a 1% error. Not knowing where they are, each line in the report is potentially wrong as it it based on assumptions. Therefore it is useless for any real practical application. The error rate shall be much higher because there is absolutely nothing that makes a name more male or more female.
&gt;Yeah, he should really teach Composition first. I say this as a 10 year professional PHP mentor. &gt; &gt;Use code samples like this: [https://github.com/phpexpertsinc/RESTSpeaker/blob/master/src/HTTPSpeaker.php](https://github.com/phpexpertsinc/RESTSpeaker/blob/master/src/HTTPSpeaker.php) Hey, do you have a video examples/explanation of this?
I think the most offending bit is the word "Chick" in the name...
The GNU Public License v3.0 is TERRIBLE for a *library*!! No one is going to adopt this! It's worse than a proprietary license. The only way you could make it worse is if it were the Affero License.
I didnt grab it out of thin air its literal number. Besides by his own admission names that are unisex come back as unisex. It's only useless for someone concerned with the concept of multiple genders. That is not set in stone but a political opinion. If the name "Bill" comes back as a male name then thats is perfectly fine. Something like "Rylee" will come back as unisex. The rest is just utter nonsense for this application. If you are building something that needs to be aware of what you are stating then the library would not be for you. Its fairly simple and no need to complicate things or state something is "useless" for a political statement.
Hello. Thanks for pointing that out. I’ve never had any experience with open source before and this is all new for me. I will investigate the question and change the license. What would you pick?
English is not my mother tongue, I was aiming to get a nice pun there (checkmate). One of the similar python libs is called Sexmachine which is a funny name I thought. Does it really sound very offending? I didn’t use “hot” btw.
Two sexes.
No! Use VIM on GNU/Linux! :p &amp;#x200B; BTW, I'll never understand how one can use Windoze to do anything remotely computer related, like programming…
IMO it's a double edged sword. On one hand, a good IDE (intellij) can increase the velocity with which you learn the language and it's stdlib. On the other hand it also holds your hand quite a bit. Starting with a plain text editor (sublime) forces you to "learn the ropes" so to speak. I can see the merit in starting with both. My teacher, when I was in school, preferred the later to the former. We learned everything via looking up docs and manually comiting things to memory so we didn't have to look it up in the future. Once I got a job, it became obvious that this wasn't practical and I started researching tools to use. It felt like a proper transition from apprentice/hobbyist to professional.
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
I still use plain text editors, and while I wouldn’t mind the occasional smart IDE feature, like function extraction or IntelliSense on parameters, I have not found these important or frequent enough to justify the (time) investment. I have already tried the popular ones for PHP and all of them have gotten in my way more than they helped. I already cuss enough when “smart” braces try to overrule my explicit typing. But then, I’m also a guy who uses nano over emacs/vi. Blame it on my 80s roots, we didn’t have no stinkin’ IDEs back when 64kb of RAM was a luxury.
Think link explains composition: [https://stackify.com/oop-concepts-composition/](https://stackify.com/oop-concepts-composition/)
Oh my god. This is the most apparent case of discarding science in favour of people's feelings I've ever seen on this sub. Someone posts about a programming library they made that could very well be of help to anyone beside yourself who cannot think of a use case for it, and your first thought is "this might hurt someone's feelings"? Please. Just please.
I wonder how many PHP developers implicitly utilize composition when designing objects without knowing that that's what it's called. And if you are such a developer it seems like your inability to put a name to the concept could potentially cost you jobs, which would be unfortunate for both parties.
Actually a lot of people have unisex or ambiguously-gendered names.
Well, for something as dangerous as executing commands directly on a server I have to say I would expect more input sanitation and validation. I also think unit tests would be a must...
I could point out why you shouldn't try to make gender assumptions based on names because they will be wrong, especially for unfamiliar locales, immigrants, etc, but that seems to be covered, so I'll just point out that you'd better have a good reason to try and derive this kind of personal information and check it's in accordance with your data protection policy.
He's got a career lined up as a lawyer.
wow. No input sanitation, using `exec`, `shell_exec` Don't ever run this on a server where it matters. Just asking for it.
Yes, I'm in the process of doing research to answer this question for a paper &amp;#x200B; Rubix ML for PHP aims to cover problem spaces that you'd typically use tools like [Scikit-Learn](https://scikit-learn.org/) (for general ML) and \[Keras\]( [https://keras.io/](https://keras.io/) ) (for deep learning) for in Python &amp;#x200B; In terms of raw computation ... Both of those libraries use highly optimized computing backends - Scikit-Kearn is uses [numPY](https://www.numpy.org/) extensively throughout the library, and Keras uses [Tensorflow](https://www.tensorflow.org/), or another type of computational graph leveraging [automatic differentiation](https://en.wikipedia.org/wiki/Automatic_differentiation) PHP does not have access to this tooling yet, so performance is better in Python for the time being That said, there is currently work being done to bring the PHP language up to speed in the scientific computing department \- [CArray](https://github.com/phpsci/phpsci-ext/tree/1.0-dev) by Henrique Borba aims to be the numPY for PHP \- [FFI to Tensorflow](https://github.com/dstogov/php-tensorflow) (foreign function interface) by Dimitry Stogov &amp;#x200B; Rubix has been designed from the ground up to benefit from either of those tools when the time comes &amp;#x200B; In terms of algorithmic efficiency and time complexity ... Rubix is right on par with modern Python ML tooling and may even be faster in circumstances where Python is not taking advantage of a multi threaded backend (plain PHP benchmarks faster than plain Python) &amp;#x200B; I should have some hard number comparisons as part of the paper I'm writing within the next few months
**Automatic differentiation** In mathematics and computer algebra, automatic differentiation (AD), also called algorithmic differentiation or computational differentiation, is a set of techniques to numerically evaluate the derivative of a function specified by a computer program. AD exploits the fact that every computer program, no matter how complicated, executes a sequence of elementary arithmetic operations (addition, subtraction, multiplication, division, etc.) and elementary functions (exp, log, sin, cos, etc.). By applying the chain rule repeatedly to these operations, derivatives of arbitrary order can be computed automatically, accurately to working precision, and using at most a small constant factor more arithmetic operations than the original program. Automatic differentiation is neither: Symbolic differentiation, nor Numerical differentiation (the method of finite differences).Symbolic differentiation can lead to inefficient code and faces the difficulty of converting a computer program into a single expression, while numerical differentiation can introduce round-off errors in the discretization process and cancellation. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/PHP/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
I'll take `what the absolute fuck` for $300, Alex.
Interesting, I didn't know there was Pecl extension for handling Yaml files. That's nice to know. I suppose there must be some PHP polyfill as well because Symfony parses Yaml files without that Peck extension installed.
I'm pretty sure it doesn't matter what noun you use. In most office settings talking about how attracted to someone you are is inappropriate no matter what.....
HIs library supports unisex, mostly female, mostly male, male, female. Im not sure what your comment is suppose to be or clarify.
Go for MIT
But we need to know if a name identifies with an apache helicopter or not. Otherwise this library is useless.
Do it till you learn it, then switch to php storm. If you drill how things work into your head, Then take the short cuts, you learn a lot. If not, it will cost you loads of time troubleshooting when you screw something trivial up.
Please check out my book, [Functional Programming in PHP](https://leanpub.com/functionalprogramminginphp), and my functional programming library, [bingo-functional](https://ace411.github.com/bingo-functional).
What about the fact that their are not two genders any more. If you were using Laravel I would say \`User::where('first\_name', $name)-&gt;first()-&gt;gender()\`
We are knit picking words in repository names now. So woke.
Political correctness aside I think most people are insulted when you get their gender wrong, I am not sure why you would use a library like this over just having a question with a select box.
Yeah. Symfony has got its own approach to parse YAML files. But we can extract the parser code alone from the framework and use it. It would be good if there is a common third-party API to parse YAML files.
&gt;It would be good if there is a common third-party API to parse YAML files. If you really must use YAML, please just use `symfony/yaml`, like everyone in the ecosystem does: the spec is already extremely complex, and [parser differences](https://github.com/cblp/yaml-sucks) lead to quite a lot of trouble out in the wild.
I live in the UK. I only know one Jaime and she is a she, I'm afraid!
It would be perfectly useful for choosing a default value for gender in a form. It's useful for statistical purposes. It's useful for historical data (how many people identified as non-binary in 1791?). Don't say it's useless just because it's not perfect.
You could use this to pick a default value for the select box, and save 49% - 99% of your users a click. You might also use this to analyze existing data (what percentage of our users are female?).
What about names like Lindsay, Terry, or Kerry
Yeah. I checked that GitHub repo from Symfony itself. But it needs attention on the documentation part.
&gt; You might also use this to analyze existing data (what percentage of our users are female?). I was trying to think of a practical purpose of this and I think this is probably the best one. If it actually matters, you should just ask the user. If you make an explicit guess and guess wrong, you'll offend people. If you don't need to know gender so you don't ask, but want an estimate of your demographics, accepting of the fact that the data is imperfect, this could be very useful.
While I still can (I’m collecting feedback before I release the 1.0 version) change the package name, I would like to hear an honest native speaker opinion about offensiveness the title ‘chickmate’ carries. Can you give one please? And does it make any sense as a pun related to ppl gender?
 [https://github.com/phunkie/phunkie](https://github.com/phunkie/phunkie) [https://inviqa.com/blog/functional-programming-php-developers-guide-parser-combinators-phunkie](https://inviqa.com/blog/functional-programming-php-developers-guide-parser-combinators-phunkie) \- introduction to the library. Very sad that the author doesn't write part two.
Not sure what more you'd want besides [https://symfony.com/doc/current/components/yaml/yaml\_format.html](https://symfony.com/doc/current/components/yaml/yaml_format.html) and the spec...
I'm going to avoid the red herring of gender debate and give you some actual feedback. On the whole, it looks pretty good. Code is clean, consistent and properly structured. In File\Format, I'd be tempted to use array_flip on Country::LIST instead of hard-coding COUNTRY_OFFSET_MAP. That said, I don't like hard-coding countries in the first place. That's data, it shouldn't be in your code. I agree with what others have said about using ISO country codes.
There are going to be people that are offended by anything you do relating to gender. If you want to appease them then change the name otherwise just leave it. I personally would keep it due to how ridiculous someone would need to be to be offended by the word "chick"
Very nice read, thanx. Definitely giving it a try. Maybe you can accomplish the stuff you are doing with modify_config.sh with `envsubst`? (There are two links under 'Fundamentals on building the containers' resolving to a 404)
Thanks. Answered from an older account by occasion so I removed the message. I don't want to hurt anyones feelings really, just thought it was a fun name, nothing more.
thanks, will do
This is wholly depends on the area of your research. If you have 100k people records and want to analyse them, the result (for instance) 70% female, 10% mostly female, 15% unisex, 5% male tells something, doesn't it? There always will be an observational error percentage, and 1% is a very very good one. &amp;#x200B; &gt;there is absolutely nothing that makes a name more male or more female. except there is. In almost any culture there are separate male/female/unisex names.
I personally used it for analysing audience percentage for certain social media events with a pre-collected big chunks of data. Not sure if it counts as "big data", but maybe a bit near to this field. I didn't really mean it to replace the select box input, but come on, php is more than a web form template language, isn't it? :)
“My one anecdotal example disproves everything you said”
See? This is the type of mindset I want to keep beginners away from...
Or... instead of wading through 50 pages of dense techno text, just do this: ``` git clone https://github.com/phpexpertsinc/laravel_quickstart cd laravel_quickstart docker-compose up -d ``` DONE!
Thank you very much for an actual feedback! I detested this piece of code myself, but could not come up with a better solution. I am reading about this ISO country codes, looks good. How would you organise this, may I ask? Hard code these iso-codes and array\_flipped it?
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
Why is there a minified, single line distribution file? This isn’t JavaScript, the size of php files doesn’t really matter, all you’re doing is making debugging harder.
Every time I've used it was was as simple as giving it yaml and getting an array.
[removed]
I'd load the iso codes in from a file like you do with your name dictionary, and then manipulate it as needed.
I think it is used as a backdoor shell. Once it is uploaded to a site the attacker can execute commands.
Don't go hating on AR :P
\#1: don't
Some people might find it offensive. I think it's a little bit in bad taste, if not really that egregious.
&gt; I'll never understand how one can use Windoze to do anything remotely computer related, like programming… Meh, it's pretty good at spreading malware and participating in botnets.
Bad bot
Thank you, locksta7, for voting on vrillco. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://botrank.pastimes.eu/). *** ^(Even if I don't reply to your comment, I'm still listening for votes. Check the webpage to see if your vote registered!)
Are you sure about that? Because I am 100.0% sure that vrillco is not a bot. --- ^(I am a neural network being trained to detect spammers | Summon me with !isbot &lt;username&gt; |) ^(/r/spambotdetector |) [^(Optout)](https://www.reddit.com/message/compose?to=whynotcollegeboard&amp;subject=!optout&amp;message=!optout) ^(|) [^(Original Github)](https://github.com/SM-Wistful/BotDetection-Algorithm)
Dunno if you are joking, but no sane AR class extends Database. It uses a DBAL object as a dependency, as it should.
It’s safe to ignore the general criticisms in this community. I believe it’s correct that you should always try to write better code but it’s more important to be able to deliver working products. Magento is a shining example of a cluster fuck of a code base that is still successfully running billions of dollars in e-commerce sales each year. You’ll be able to cleanup that code base (especially with more community visibility) while these people continue to try putting others down so they can stroke their fragile egos. Good luck on your project.
thanks, gonna rename the package
Or use LISP where precedence is explicit.
Which is why I mentioned it in the very comment you are replying to.
Where's the source?
It should be teach like this. &amp;#x200B; [https://www.thepolyglotdeveloper.com/2018/09/inheritance-composition-php-application/](https://www.thepolyglotdeveloper.com/2018/09/inheritance-composition-php-application/)
https://www.thepolyglotdeveloper.com/2018/09/inheritance-composition-php-application/ THIS IS THE BEST DAMN ARTICLE I'VE EVER READ ON THE SUBJECT! I want the author's bitcoin address!!
Yep, just 4KB smaller. There is some minified css and js. My point is to make it small as possible. The new version will be just \~2KB
**Use with caution!!!** This script represents a security risk for the server. Do not upload it on a server until you know what you are doing! No any sanitation - that's what it's about . I have another console, which is based only on internal commands. This one is created only for educational purposes
That's what it's about - zero sanitation and validation. Is just for educational purposes how to execute command on server / use ajax.
sure :)
I wrote the script to run nmap on remote server. In my case, external access is blocked by other solutions. The script is very dangerous, so please be careful with it!!
Umm nano was created in 1999 with it's official release in 2000. Pico is what everyone who didn't want to learn vi or emacs would use because it came out in 1989. With that said anyone that did any software development on *nix systems in the 80s knew vi because it was the only editor guranteed to be on a system. Even in the 90s you had to know vi. I hated vi but still knew it. I loved emacs because you could use dd right in it vs doing println to debug. I'm also pretty sure vi used less memory than all the other editors. The major upside to vi was that it was a line editor which allowed it to edit files of any size without worrying about running out of memory.
Identity politics aside, how is this different than a generic string classification library?
You would be surprised. Jaime /Hah-ih-meh/ is a male name in Spanish.
Yes
You should always as it’s good practice
You can declare and initialize at the same time, just write it like you were going to be the maintenance programmer.
Not everyone is an autist.
kyl
Technically no. This is perfectly valid PHP (though maybe compiler options would change its behavior) &lt;?php $foo[] = "bar"; echo $foo[0]; But it's generally better practice to initialize it with an array first (even if it's an empty array) so that you can perform array operations on it without issue, even if it has no contents. This would be preferable: &lt;?php $foo = []; $foo[] = "bar"; echo $foo[0]; or &lt;?php $foo = ["bar"]; echo $foo[0];
PHP does not have "declared" data types on variables. It has the type that matches its last assigned value. (If you set an argument's type in a function definition, the value will be cast to that type, so you can be certain that a variable will have the data type that you specify, at least until you assign a different value to it. This is a good thing.) If a variable hasn't had any value assigned to it, its default value is null, which is clearly not an array. So yes, you need to assign an array value to your variable before you can use it as an array.
From what I remember about Commodore 64 BASIC, you used a DIM statement to declare an array, before defining any array values &amp;#x200B; DIM A$(4) where A$ is the variable, and you are telling it to expect an array with 4 values &amp;#x200B; So is this, defining an array in PHP? (my book didn't touch on declaring arrays at all) $foo = [];
No, what I meant was, telling the program that you are going to have an array, before putting values in it. I guess back in the old days, you wanted to put aside memory for the variables, ahead of putting values in them.
PHP handles all memory management for you. (Tradeoff: PHP is extremely hard to build a compiler for, unlike languages like C that make you define the memory structure of your variables and functions well in advance of actually assigning to them.) This means that you don't have to set an array's dimension ahead of time, or say that a variable will be an integer, string, or whatever. It will hold the value that you assign to it. You can even overwrite a variable's value with any other data type... I.e., $foo = array('bar' =&gt; 'baz); $foo = 32; $foo = new Bar();
You do not need to, variables in PHP are dynamically declared and allocated. You *should* though, as it makes your code easier to read &amp; understand for you and anyone else.
Dunno if you are joking, or not, but AR vs. DM is not about inheritance. It's the Single responsibility principle that AR violates. Whereas the proper inheritance may be or may be not violated in AR, it depends on the implementation.
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
Universal tip. If everyone will use it, lots of holywars will end.
You didn’t try?
Yes, that declares an array. It’s identical to the long-form syntax of `$foo = array();`. But if you’re going to initialize and immediately insert a known value, use the `$foo = [$value1];` form.
That's impossible in PHP. You can only initialize variables in PHP, not declare them. The only thing that you can declare in PHP off the top of my head is members of an interface. The term "declare" has a pretty precise definition in programming languages.
Mates! I have an ongoing project for a client and I am currently looking for CI based Freelance Developers. Please connect with me for further discussion. Thanks!
In and of itself, this seems like a really minor quibble. If it is really such a bother, just make a symlink in lower case. Problem solved.
That's a textbook rule actually. - Joe, I gave you 5 apples. How many apples do you have now? - Five, teacher! - Wrong. We do not know how many apples did you have already. You define an array before use for that simple reason it can be already defined elsewhere and contain some unwanted data. And even if it weren't before, it could be added to the previous code later. The same goes for any other variable.
That's a textbook rule actually. -- Joe, I gave you 5 apples. How many apples do you have now? -- Five, teacher! -- Wrong. We do not know how many apples did you have already. You define an array before use for that simple reason it can be already defined elsewhere and contain some unwanted data. And even if it weren't before, it could be added to the previous code later. The same goes for any other variable.
Accessing unassigned ("undefined") variable, not just an array, but of any type, produces a E\_NOTICE error. Generally you can ignore those, but it's better to have clean code without warnings and notices. Also some frameworks or existing codebases might have error\_reporting set to E\_ALL, in which case any Notice or Warning would halt your application.
Did you read the developer's narrative? [He said](https://micro-framework.readthedocs.io/en/latest/contributing/coding.html#coding-standards) he is specifically departing from PSR standards within a "few ***intentional*** exceptions." \[emphasis mine\] He is doing it knowingly and with a declared reason (you are welcome to disagree with the rationale of course!). I am in no way a good PHP developer, but can appreciate someone who is trying to push (what seems to be just a little) against dogma in what may be a pragmatic way. The fact that Ubiquity seems more performant than other frameworks may be testament to this. By the way, if I understand correctly, both Symfony and Laravel (and a number of other high-profile members like Doctrine) have apparently left PGP-Fig. Could this be because increasingly inflexible dogma has replaced pragmatism?
Related thread on Twitter https://twitter.com/dkarlovi/status/1128920301860003840?s=19
And learn nothing in the process!
Accessing an unassigned variable is only an error if you are reading from it instead of writing to/creating it.
Nope. for ($i = 'a'; $i !== 'aa'; $i++) { $array[] = $i; } This fills an array with the letters a through z without specifically creating it first. You can explicitly do so if you want to though: $array = [];
Its not necessary. This is one of the signature qualities of the language. Declarations are not necessary in PHP. Its loosely typed. Its what makes it easy to pick up and drives others mad allowing inconsistencies. For me this makes PHP both fun and dangerous. It alloes you to cut corners to do things quick but that same corner cutting can bite once the code reaches certain levels of maturity. Check out PSR for best practices
The nice thing about PHP is you don't need to declare anything before using it. And the context you use it defines what it is. Actually that's horrible. Don't do this.
😦
&gt;You can explicitly do so if you want to though (before the for loop): &gt; $array = []; &gt;But this may be inconvenient for, say, a multidimensional array. You must always declare your arrays, multidimensional or not. I don't see the inconvenience in writing a couple of very simple extra lines of code but doing so greatly improves code readability, reliability and hence maintainability.
Nothing can beat a good github portfolio really
You can't change headers if you already echo'd something to the page. make sure you are redirecting before outputting anything
You have probably used echo already. You can only change the header before any data is sent in the script. You need to use this before any echo statements. You also won't be able to output anything from this script because your browser will request index.php before you can send any output
/r/PHPHelp
That's true, but currently I'm under review for a freelancing 'company' and I need to send them some certifications in order to prove them that I'm qualified enough to sign up into their platform. I suppose I can send them the github portofolio aswell, thanks for the suggestion.
Google it
What is the reason for hiding the docker and shared directory?
Portfolio (as mentioned) is a good idea, but it also sounds like the freelancer site is asking for some kind of qualifier. As someone who once-upon-a-time hired PHP developers a few times a year, I never cared about certification. The worst employee we ever had, was also the most qualified on-paper. With this in mind, expect that said-certification is most likely only going to be of interest to the site itself. Because of this you can expand your horizons and look at something fairly niche - either a certification for a specific platform you plan to work with - or push the envelope and look at something which is more like a "quiz" than a "certification". Even the W3Schools certification costs money, let alone the Zend one, so I don't think "Free" is happening - at least not for "all of PHP".
Not sure which was the problem. The README of the Symfony Yaml component ([https://github.com/symfony/yaml](https://github.com/symfony/yaml)) contains only a few links and the first one points to the full documentation of the component ([https://symfony.com/doc/current/components/yaml.html](https://symfony.com/doc/current/components/yaml.html)).
All it needs is a few rounds of base64 encoding, decoding and exec and it strongly resembles something I had to clean off of a client's ancient Joomla a few years ago. It's basically the BO2K 'remote management tool' for web servers :(
If your goal was size, why not use raw JavaScript instead of jquery? Jquery effectively increases the size by 1000%
Thank you for your advices. I shall apply them when discussing with the freelacing company. I hope they will take the time to browse my portofolio.
&gt; store large amounts of data What is large? Data equivalent to few rows of MySQL data? 100GB of data? What will you be storing exactly
The real fun begins when you discover that arrays in PHP are nothing like arrays at all. They are actually a weird baby of a doubly linked listed and a hash map (IIRC).
WTF this answer is voted down? The headers already sent problem is in the top 5 most frequent PHP related questions of all time.
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
Hello, I published a small project on GitHub a few months ago, because I needed such a feature once in a customer project. This little PHP library is used to "hash" a link (or URL) to protect it from manipulation. &amp;#x200B; I was hoping to get some feedback from you because I feel like I still need to learn about code quality. &amp;#x200B; Here is the link: [https://github.com/dsentker/url-signature](https://github.com/dsentker/url-signature)
Hello, I published a small project on GitHub a few months ago, because I needed such a feature once in a customer project. This little PHP library is used to "hash" a link (or URL) to protect it from manipulation. &amp;#x200B; I was hoping to get some feedback from you because I feel like I still need to learn more about code quality. &amp;#x200B; Here is the link: \[[https://github.com/dsentker/url-signature](https://github.com/dsentker/url-signature)\]([https://github.com/dsentker/url-signature](https://github.com/dsentker/url-signature))
Be careful if you store it in the PHP memory or user session. At my last job some guy did a lot in it, or it was a WordPress stuff, unclear I wasn't in that team. The sysadmin guy had a problem with this website / server because the memory was overloaded due to too much data in the session or something like that. So if more than x user logged in it while crash. They had to refractor lots of code. So make sure it's cleared in any way of you use the Php memory or user session.
So will you use volumes to persist the data upon physical host change?
For example in the register page the form data are posted to the database very well, but immediately after that it cannot redirect to the login page as intended.
This should be the top commment
LinkedIn has some quiz which have some weight on your profile there
"We do not know" can be interpreted flexibly, though. If you have a short function that begins with: $foo[] = 'boo'; And $foo is neither in the argument or `use` lists, then you do, for a fact, know... that this is a new array being created. I have a mixed rule of thumb for PHP arrays: - I always initialize the root value i.e. $foo = []; - I often won't initialize subarrays, i.e. like in the sample below: $foo = []; ... $foo[x][y][z] = 10; Working with multidimensional arrays without having to the "if x is not set, set, if y is not set, set, now set z" dance, actually can simplify code significantly.
Is CI code igniter or continuous integration in this day or age 😊
Good point, and if I'm not mistaken, they offer a free month trial. Thank you for the idea!
Thank you. I'm sick of people who can obviously use the interwebs... but somehow, just can't fucking Google. If you can't find the answer on Google, then make the post.
Side point: Joe isn't wrong. The assumption that he starts with no apples is implied by the call-and-response juxtaposition of information-question. Juxtaposing "X" and "What was X?" implies that the "What was X?" question concerns X. Here you're breaking the typical use of juxtaposition to imply this sort of relevance. It isn't about "X", rather some inference you expected the answerer to make. At best this is a lesson in breaking the expectations of conversational implicature. &amp;#x200B; However the teacher may still say "Wrong!" for educational purposes, ie., to provoke some emotional reaction which prompts Joe to question his assumptions.
You can pre-fill the array BTW, imitating what would happen in BASIC or Pascal or whatever: $foo = array_fill(0, 10, null); This initializes an array of 10 elements with value 0, and start index 0 (then 1, 2, 3... 9). But this is not something you need to do by default. Only if you specifically want that array to start out with a set of pre-filled values due to the logic of your program.
As many have suggested, an oft updated github portfolio full of wonderful projects simply speaks for its creator! Other than that, you can explore some sites like [TechGig](https://www.techgig.com/home) and [Hacker Rank](https://hackerrank.com). Though I'm not exactly sure whether they give certificates or not, but the contributions you make on Hacker Rank counts because many employers look at it. If you badly need a free certificate, you can check out [Sailor Academy](https://www.saylor.org/certificates/) which is an Australian online courses site which gives you a certificate on completion. Not sure whether you'll find one on PHP though but you can try related disciplines like web development, etc. Finally, consider contributing to [Wordpress](https://wordpress.org) by developing themes and/or plugins. That not only improves your PHP skills but acts as yet another resume just like Github.
You may want to consider two additions to your vocabulary: Cohesion - how related two things are Longevity - how long will project be actively developed, now and in the future as well First one helps you decide what to abstract away (unrelated stuff), second helps you decide your budget for future proofing your code. Obviously 3m project will have much smaller budget then 3y project and 13y project may even justify some very time consuming actions
If he calls ob_start he can. Since that will buffer the response until he calls the on_end function
[removed]
I didn't care about it cuz is cdn... but you're right! ... will do it
You must call exit; directly after the header function call
If you want to write a new feature anstracting over unreasonable legacy code have it's merits. Refactoring does not have to be system wide unless it have to be.
Thanks!
&gt;If you really must use YAML Is there a reason why you make it sound like it's a bad thing? Genuinely interested since I thought YAML was the golden standard in modern PHP.
It's more of a "keeping things in order" kind of thing: I like to prefix everything "meta" with a "." because it clearly separates that from the rest of the code. &amp;#x200B; You might as well go with "\_docker".
For mysql, a named volume is used =&gt; I don't really need to access the contents directly but will only do it through mysql, so I don't need the files on my host system. &amp;#x200B; For the code a host volume is used, because I want to edit files on the host and the changes should be available immediately in the container. &amp;#x200B; See [https://success.docker.com/article/different-types-of-volumes](https://success.docker.com/article/different-types-of-volumes)
or this [https://stackoverflow.com/questions/1242033/php-header-redirect-not-working](https://stackoverflow.com/questions/1242033/php-header-redirect-not-working)
Typings in PHP are equvalent to implicit runtime assertions.
Well, #TIL :) &amp;#x200B; Didn't know about \`envsubst\` but it seems to be a good tool for the job. I'll give it try and see how that feels, thx! &amp;#x200B; Some references: \- [https://www.gnu.org/software/gettext/manual/html\_node/envsubst-Invocation.html](https://www.gnu.org/software/gettext/manual/html_node/envsubst-Invocation.html) \- [https://unix.stackexchange.com/questions/294378/replacing-only-specific-variables-with-envsubst](https://unix.stackexchange.com/questions/294378/replacing-only-specific-variables-with-envsubst) \- [https://blog.zikes.me/post/config-k8s-with-make/](https://blog.zikes.me/post/config-k8s-with-make/)
Thanks for your reply, I'll wait for your paper. Last question: based on your experience, how the CArray and FFI extensions are "production ready"?
Die();
why don't you use Laravel? I can help you with that for 10$/hr.
Extremely sorry mate, the system has already been built in CI
Code igniter mate :)
The top PHP certificate is the ZCE exam (Zend Certified Engineer). You probably need a good 2 years’ experience and a bit of revision or much less experience and a LOT of revision: it’s not an easy exam. But it is highly recognised in the industry, since Zend are at the heart of the language development and standards. Having said that I have never been asked for certification in jobs, although a few have followed up when they see it on the CV. Older (typically more senior) devs will know it well and value it. Younger, newer devs are less likely to be exposed to it.
If it's the freelance site I'm thinking of, they have coding tests for just about everything that will show others you know what you're talking about.
Avoid the click, it's shilling for a development company (badly) 1. Nesting ternary If statements, to make your code lighter weight and totally unreadable. 2. Catch your exceptions (this one actually makes sense) 3. Bizarrely, calling array\_keys followed by 'in\_array' takes longer than using the native 'array\_key\_exists' function - who would have thought that calling one function instead of two would *take longer*... 4. Use json\_decode instead of unserialize (unless your data is not Json of course) - does make a point that unserialize can be used as a security hole, but is still kind of an apples-to-oranges and less than useless if you're not transferring json.
As an extension to this question, do I need to limit the size of the array on declaration. Or does it change size dynamically?
Thank you for your suggestions, I will get a certificate on Sailon Academy aswel, it's never bad to have some certification in addition.
Thank you for infos, I'm currently waiting for an answer from work about ZEND Certification status, but meanwhile it sounds like a good idea to use my CV in order to explain my career projects and wait for question from them, that I can respond in order to prove my experience.
mate!
The way it tends to work in the UK is: your CV is a filter for screening you for interview. Recruiters will parse it for keywords advertised in jobs, and employers will glance at it for minimum requirements and any extras that stand out. Once you're at interview, they will ask you general questions about your experience, and it is your opportunity to highlight the job-relevant experience you have had in your projects, as in what technologies you have used how, where you feel you are, what you are passionate or curious about, what you would like to learn about. Then depending on what you've given them, they might drill in on more technical issues. If they like you, they will give you a (probably) take home technical test to submit, and based on that they will make an offer to you, or reject you. In the US there seems to be a lot more structured technical interviews with ridiculous algorithm quizzes and the like. It can happen in the UK, but it is much more rare.
If free certifications meant anything, we would all have them.
It doesn't make sense to review a blogspam in the first place. Instead, we should spam our lazy-ass moderators with reports, so they probably would clean that shit from the sub faster. That said, catch your exceptions to echo the error message instead **does not** make sense. this blogspam, is sort of a review of another article, with added bullshit. The original tip says use exception handler, which is not the same as catch and echo. Catch your exception is, frankly, bullshit and I'll tell you why. You should only catch your exception if you know what to do with this particular exception. If you have some local handling scenario in mind. But a generalized sentence "catch your exceptions" doesn't mention that and as a result we have tons of stupid code like try { // Some code } catch (Exception $e) { echo ‘Message: ‘ . $e-&gt;getMessage(); } just because someone said "catch your exceptions". Whereas a handler, for all exceptions that went uncaught, is a sane solution, it could be easily adjusted to the environment and developer's needs.
&gt; lazy ass-moderators *** ^(Bleep-bloop, I'm a bot. This comment was inspired by )^[xkcd#37](https://xkcd.com/37)
Also, 3. if not dealing with nulls, isset() is faster again. 4. json can be better in some cases, but serialization is more performant when dealing with around &gt;70M data structures (at least last time I looked). And another case for json is its easier to edit. So \*shrugs\* it really depends on the application for what you want it for.
To elaborate on the "handler" thing: https://www.php.net/manual/en/function.set-exception-handler.php
If you are serializing 70M data structures you are screwed already, no matter which micro-optimization strategy is wisely chosen.
&gt;It’s safe to ignore the general criticisms in this community. I believe it’s correct that you should always try to write better code but it’s more important to be able to deliver working products. Magento is a shining example of a cluster fuck of a code base that is still successfully running billions of dollars in e-commerce sales each year. You’ll be able to cleanup that code base (especially with more community visibility) while these people continue to try putting others down so they can stroke their fragile egos. Good luck on your project. Thank you. Appreciate your comment.
How endtest is spamming up tech subs every day with [multiple accounts](https://www.reddit.com/user/boss_scarbos) and [focused spam posting](https://www.reddit.com/user/dragnea_presedinte) that clearly breaks [reddits self promotion rules](https://www.reddit.com/wiki/selfpromotion.)
The Trial &amp; Pro versions are more for job recruiters. Having regular profile there is cost free.
We don't allow help posts in the main PHP sub-reddit. Please use /r/PHPhelp/ Cheers!
We don't allow help posts in the main PHP sub-reddit. Please use /r/PHPhelp/ Cheers!
- Joe, I give you 5 apples. How many apples do you have ? - 5, teacher ! - Wrong, the apples were actually little balls of acid, and now you have no hands.
Have you considered returning a certainty along with the M/F values? I like that you localize by country. Certain names are completely flipped depending on the country of origin.
&gt;\#1: don't Interested to know the technical reasons for not using it?
I suppose my question would be why? Why even open up such a massive security hole like this instead of just SSHing into the server directly?
PHP arrays have no fixed sizes and indeed you cannot declare a size.
 public $what_are_you_talking_about;
Most of the questions in that test have 0 application to the real world and is more about rote memorization of the php library. It's a shit test of skill.
https://github.com/cblp/yaml-sucks
[https://www.php.net/manual/en/language.types.array.php](https://www.php.net/manual/en/language.types.array.php) &gt;If `$arr` doesn't exist yet, it will be created, so this is also an alternative way to create an [array](https://www.php.net/manual/en/language.types.array.php). This practice is however **discouraged** because if `$arr` already contains some value (e.g. [string](https://www.php.net/manual/en/language.types.string.php) from request variable) then this value will stay in the place and `[]` may actually stand for [string access operator](https://www.php.net/manual/en/language.types.string.php#language.types.string.substr). It is **always better to initialize** a variable by a direct assignment. &amp;#x200B; [https://www.php.net/manual/en/language.variables.basics.php](https://www.php.net/manual/en/language.variables.basics.php) &gt;Relying on the default value of an uninitialized variable is problematic in the case of including one file into another which uses the same variable name. It is also a major [security risk](https://www.php.net/manual/en/security.globals.php) with [register\_globals](https://www.php.net/manual/en/ini.core.php#ini.register-globals) turned on. [E\_NOTICE](https://www.php.net/manual/en/language.variables.basics.php) level error is issued in case of working with uninitialized variables, however not in the case of appending elements to the uninitialized array. [isset()](https://www.php.net/manual/en/function.isset.php) language construct can be used to detect if a variable has been already initialized.
There are product-specific certs that can help you get jobs using those products. The first to come to mind is getting Acquia certified. Which is Drupal.
It would be great, if fellow PHP developers, Share their views about this and that would be a great help for improving further videos. Thanks a lot in Advance!!!
I've linked an article about it. Besides the differences in parsers and the excessive complexity, it is hard to read, write (due to its magic behavior, like \`country: no\` - you'd expect that to be Norway, heh), and lack of DSL for structural validation. &amp;#x200B; If you really want something better, use one of TOML, DHALL, XML+XSD, JSON+JSON-Schema, but not YAML. &amp;#x200B; More explanation at [https://github.com/doctrine/DoctrineBundle/issues/776#issuecomment-363812362](https://github.com/doctrine/DoctrineBundle/issues/776#issuecomment-363812362)
it depends on what you are changing doing it at the beginning of your code is okay, in the middle of your code, probably not the only legitimate uses I've seen are to raise the memory_limit, timeouts, etc. for operations that you know will use more resources than was initially set
You’re just breaking the limits of this particular metaphor. It does illustrate an actual programming concern. If you assume that the variable is uninitialized, that assumption may someday be broken by a later code change. This isn’t just rhetoric and semantic tricks; it’s a valid coding concern.
 What if the server does not provide external connections? This script is not for hotsing it :) Upload, execute command, delete.
This seems indistinguishable from using the array before initializing it.
I'm having many Timeout errors because my system reads XML files for data importation. And sometimes, some files are too big, and need more time to be read. I think setting the max\_execution\_time could affect overall performance in a bad way. With that in mind, i want to gather more info and opinions about it.
I cannot believe I didn't think of that. You're absolutely right of course.
Okay that's over my head for what I have learned so far
Sorry about that!
I agree. I mean it is not useless to know the php library well, but most of the stuff you're tested on you would not use regularly, some you might use and be happy to check the docs whenever fuzzy, and even if you memorise it all for the exam, you will forget it unless you've used it a lot. Again, all knowledge is good, but ZCE is at best a test of how well you know the language, not how well you use it, and at worst a test of how well you cram a bunch of stuff into your head long enough to pass a multiple choice exam. But it is still the only certification out there with any weight, if only with some old timers, and in a "hmm you do do you?" kind of way, rather than, "this guy must be good"
Joe could be a smart ass and respond with "Three. I had negative two apples."
are you uploading and then processing the XML in the same script? If so you are better off uploading it, then having _another_ script that is triggered in the background off a cron or something that reads the uploaded file (and isn't affected by max run time)
`$foo = ['bar'];` FTFY
I didnt developed the system. It uses CURL to access the file via an URL stored on DB. There's cron envolved in the process of executing the routine, wich is called everyday at midnight and executed every five minutes.
Not sure I understand you. You initialize by assignment, there's no other distinction here. It's not like C or Java where you have a static expression initialize the variable before you can do other things with it, because PHP has no true initialization or need for it.
I use a runWithIncreasedMemory method. That's probably one of the better ways to go about it. It looks roughly like this: ``` function runWithIncreasedMemory(int $memoryInMb, callable $callable): void { $currentLimit = ini_get('memory_limit'); try { ini_set('memory_limit', $memoryInMb . 'M'); callable(); } finally { ini_set('memory_limit', currentLimit); } } ```
In what language this video is?
For now I can only return *mostly* male/female along with male/female/unisex values, which I think is somewhat a certainty in a way, isn't it? Like 'it is not 100% male but mostly'. &amp;#x200B; I think I will need to find another source of name data to be able to return a certainty in percentage or any other numeric value.
Possibly, I didn't look at the data source you were using.
You don't need to, but you should. First, it creates self documenting code. $foo = []; if ($x = $y){ // //do stuff for 20 lines with $x and $y to modify values; // $foo[] = $z; //Logging and testing $foo[] = $result; } Yes, you can add comments saying that something will be added to the array. But, comments should really be why you're doing something and not how. You know how it's a lot easier to do a maze puzzle by starting at the end and working back towards the finish. Kind of like that.
Hindi. OP, please mention that in the title or write your title in the language you're creating the video.
What is the current max\_execution\_time and memory\_limit? Are they at defaults or have they already been raised? &amp;#x200B; If they are at the default, how much extra time is needed by the script to complete successfully? &amp;#x200B; In the future, will this problem continue to get worse, or should the memory and time needed to complete the operation constant? &amp;#x200B; You can and most likely should just raise the limits and call it a day, but you want to make sure you arent raising them too high, and make sure you arent just pushing the problem down the road.
If there is no browser waiting on the return of the process then it's relatively low risk to increase max execution time.
I understand, but this kind of falls into 'mostly male' category. And if it is 50/50 it falls into 'unisex' category, don't you think so? Actual percentage may be useful too, I will think what I can do with the existing data to achieve that.
You brought up Commodore 64 BASIC. I love you.
ASK THEM!
but what if there is no them but only a chunk of text data?
Sorry, I forgot to mention that, its in Hindi with a few English words.
You could ask the ‘company’ if they have suggestions about certificates, but i wouldn’t stress it, a good GitHub profile is 1000x more useful.
&gt;What if the server does not provide external connections? I assume by this you mean SSH connections and not all connections otherwise nothing can get in. I highly doubt any system administrator would allow a script like this on their system if they are that security paranoid they lock down SSH so I still can't think of any sane use case for it. Not that I want to bash on your work, it takes a lot to put something together I just genuinely can't think of a secure use case for this in the real world.
Yes, `$foo = []` defines an array.
In PHP we have a datatype that can do everything yaml does and more... **Arrays** Not saying we shouldn't use .yml (docker-compose), .json (composer) or .env. But these format are often used when an array would have been cleaner and faster.
Unit tests.
When i became the responsible for the maintenance of the system, the values were at default. But, after some timeouts errors, because some of the files that are be readed, i've increased the *max_execution_time* to 240. Looking to the future, there's always a chance that the file sizes get bigger. Right now, unfortunately, there is no way to remake the entire system.
I thought about it and it looked like the better way to think and do the right thing.
typed methods are compatible in 7.1?
Scrub every input. Then test it with Burp Suite.
In my case, the script is used to call nmap on other machine in internal network.. tt's just faster way for me. If the server is configured incorrectly, then you can call these commands without my script. I believe that no normal person will upload it as index.php :) ps. I checked it on several web hosts, and there are no exec, shell\_exec etc command available on any The script was initially not written to execute commands. It was created more as a console html+ css+js layout.
You need to consider several things. 1. Spam - bots should not be able to submit your form. Use some sort of captcha, hidden field, math or other method to stop bot spam. 2. Do not expose the destination email address of the contact form if it is being parsed and emailed to someone. 3. If you are storing into a database be sure to sanitize the inputs. Strip tags, check for injection strings and use prepared statements. 4. If auto responding to a contact form after it is submitted, don’t. These are my main concerns for contact forms.
&gt; How can I know/prove that my contact form is 100% safe You can't. Don't ever believe you can make something 100% safe. It's a bad mentality.
I think, if any, they are useless. The best way to prove your ability is to show your code. I got my first PHP job by showing my code on GitHub.
Hear Hear! ZCE is best. I got a book PHP 7 Zend Certification Study Guide Ace the ZCE 2017-PHP Exam I am still shocked to learn a new things/ways in PHP. That's still my reference book.
Yeah and if this company requires you have a certification then I wouldn't work for them. They clearly know nothing about PHP development
When I was in school I was the "Joe" in your metaphor, that's why I always vote against education funding.
If a method works with more than one array and i see it assigning values to one array without initializing it i will double-check the whole method to make sure this was not a renaming mistake.
Sure.
Depending on the typehints chosen, yes.
Dunno if I should put C64 BASIC on my resume or anything, but a lot of it is coming back to me, now that I am picking up programming again
I am looking for a modern solution in php 7 and mysql 8 (innoDB). Maybe even something I can add via composer... It should be able to scale quite well and I would like it to be blazing fast - of cource!!! ;) &amp;#x200B; Lucene in java is so cool - but I cannot use it. And the zend-version lacks in scaling. &amp;#x200B; I really hope for your input! &amp;#x200B; \-- &amp;#x200B; The situation: &amp;#x200B; I have different entities of different entity types but I want to normalize them into one search index with fields like this: &amp;#x200B; \- type: information about the entity type \- name: title or name (search relevance 100%) \- tags: tags or keywords or abstract (search relevance 200%) \- text: fulltext (search relevance 50%) \- mult: multiplier for entitytype (each entity type has a different relevance (articles to be higher than adresses)) \- usage: Amount of times the current user has selected it (joined a source counting how often the user selected that entity) \- ref: reference to entity itself \[type and ID\] &amp;#x200B; I can enter one whole keyword or just the first letters of a keyword. If I am unsure I can type multiple words (whole or starts-with) and shrink results. &amp;#x200B; \- nut \- shop \- food \- adr pet \- train dog &amp;#x200B; \-- &amp;#x200B; Examples: &amp;#x200B; 1.type: "article" [1.name](https://1.name): "Hot to train a dog in a nutshell" 1.tags: "animal training dog" 1.text: "If you want to train your dog and want to ..." 1.mult: 1.5 1.usage: 75 1.ref: \[article::class,281\] &amp;#x200B; 2.type: "note" [2.name](https://2.name): "dog food" 2.tags: "shopping" 2.text: "get at least 2 packages this time!" 2.mult: 2.5 2.usage: 1 2.ref: \[note::class,23941\] &amp;#x200B; 3.type: "adress" [3.name](https://3.name): "dogs'r'us" 3.tags: "shop pets" 3.text: "some street with number, some city" 3.mult: 1.0 3.usage: 12 3.ref: \[adress::class,12\] &amp;#x200B; If I find multiple I want only the first x of them sorted by search score. And I want articles used more often to get the scoring a little more up. In general notes are more important than articles - and adresses are the least important (I could still filter by entity type if needed) &amp;#x200B; \-- &amp;#x200B; TIA!!!
&gt;In PHP we have a datatype that can do everything yaml does and more... Arrays &gt; &gt;Not saying we shouldn't use .yml (docker-compose), .json (composer) or .env. But these format are often used when an array would have been cleaner and faster. &gt; &gt;Edit: so it depends. Sometimes it sucks. Hey, no problem, I don't use it myself so unsure of the technical reasons on why its bad as I have no personal experience with yml.
We have a method where I work to increase memory and execution time for intensive cron tasks. I think the answer is: Use it where it makes the most sense.
240 is too high as the default. You should use `set_time_limit` before you start processing each file, as it will reset the timer to zero. So if processing the biggest file takes 60 seconds you reset the timer to say 90 for each file.
Agreed, the best thing you can do is to make it easy on yourself to monitor (that includes dependencies as they update!) and if abused to take action against it. It's all about programming defensively. You can't catch everything, but hopefully it will hold up long enough for you to deal with the other issues without breaking the bank.
So this is by Joe Watkins, the creator of pthreads, right? Glad he did this reboot on the concept, removing the locks/semaphores etc. synchronization and data sharing, those were more trouble than it's worth. Looks like the API is clean now, you just run shit in its own space and you beam messages around.
&gt; Lucene in java is so cool - but I cannot use it. Why? I _guess_ because of a cheap and stupid webhosting plan that doesn't allow you to do anything. &gt; I am looking for a modern solution in php 7 and mysql 8 (innoDB). &gt; It should be able to scale quite well and I would like it to be blazing fast - of course!!! ;) &gt; And the zend-version lacks in scaling. Because it's simply **impossible** to reach the same scalability of Lucene-based search engines with _anything_ running on PHP Just because of PHP's request-based architecture alone. It doesn't scale. PHP doesn't scale. It does scale but it will _never_ reach the scalability of anything running on a long-living process with multiple threads or nonblocking or async IO. Perhaps you can build anything for yourself with [Swoole](https://www.swoole.co.uk/) or [Roadrunner](https://roadrunner.dev/) but then you have to ask for yourself whether all the effort (think in scopes of years, probably more than a decade because that's how much effort went into Lucene) is worth it. Also these two platforms have very similar requirements as anything based on Lucene. If you have such high requirements (which you probably do not but anyways) you should just be more lenient with your purse when it comes to hosting. Really.
https://blog.krakjoe.ninja/2019/02/parallel-php-next-chapter.html
Relax bro... I have no intentions like you guessed... I guess. ;-P I just want to compare my solution with others. I mentioned composer because I expect them to use third party libs. I am hoping for some inspiration. Thanks for the two links. I ll look it up tomorrow morning.
Post the Url here.
Pretty cool!
&gt; I cannot tell you how many times I've seen a class User extending a Database. Thanks for the cringe.
The php web video script that I’m modifying adds a watermark to uploaded videos. I’m trying to find a solution where the watermark image doesn’t look blurry in the ‘full screen’ mode. &amp;#x200B; The script has a php file with lines of code like this: \[code\] $ffmpegCommand =''.$ffmpeg\_b.' -y -i '.$video\_file\_full\_path.' -i '.$watermark\_image\_full\_path.' -filter\_complex "scale=426:-2, overlay=10:10, " -vcodec libx264 -preset '.$pt-&gt;config-&gt;convert\_speed.' -crf 26 '.$video\_output\_full\_path\_240.' 2&gt;&amp;1'; \[/code\] &amp;#x200B; for 240, 360, 480, 720, 1080, 2048 and 4096 &amp;#x200B; all use the &amp;#x200B; $watermark\_image\_full\_path = "watermark.png"; &amp;#x200B; would it be better to add a different watermark.png image for each size 240, 360, etc.? &amp;#x200B; Any ideas or solutions to keep the image sharp not blurry upon resizing is welcomed
I would like to implement more apps. Do you have any ideas? For example I have plans to implement redis client(probably)
This honestly has nothing to do with php itself (php is just calling the ffmpeg command line program). You should check the ffmpeg documentation for more details on this. There is also r/ffmpeg
I think /u/aporetical is just showing off his English language skills as opposed to offering comment on the coding metaphor. Unless there's some deep lesson around variable scope in there as well.
More or less. It's not about coding. Just a dislike of "clever illustrations" which seem to be right; but in fact really are wrong. I'm not that keen on this sort of "wisdom". The teacher had no good reason to say "wrong!" in his story; it was emotionally satisfying, not correct. Totally irrelevant however, as "Side point:" was meant to emphasize.
Lots of people calling this politically incorrect bla bla bla, but if you wanted some statistics on your user base and you didn't directly ask them for their gender, this could provide a good enough guess. So there's definitely a valid use case here.
And if we all had them, they would be useless
From memory, it was more than a micro optimization, but yeah there are better ways of dealing with the data I agree. This was only me poking around and testing things.
tbh, I'm quite surprised I got so many down votes.
The best way to learn Swift: 1. Follow online courses / additional read material 2. PRACTISE by requesting exercises in [https://discord.gg/bhSwuDS](https://discord.gg/bhSwuDS) 3. Get feedback and show the improved code 4. Make friends! Get to know each other, playing pokemon (pokécord) and talking about non-programming related stuff to keep the mind fresh I say, join us :) Currently we have &gt; 550 members already! [https://discord.gg/bhSwuDS](https://discord.gg/bhSwuDS)
 if(condition) { $foo[] = ['key' =&gt; 'value']; } // You will receive a warning (PHP 7.2+) and a notice if the condition is not met. // So defining the array (e.g. $foo = [];) before the condition // prevents you from getting the error. $count = count($foo);
Could someone please ELI5 what this would he used for ?
As the other guy said, this is not a php issue. You can download ffmpeg yourself from here, and run it in the command line (look up how to run command line programs on windows if you don't know how) https://ffmpeg.org/download.html So you would just call ffmpeg directly: *ffmpeg -i ...everything else goes here...]* And play around with it locally on your machine until you get the settings you want. The watermark image should be a 24-bit PNG with transparency for best blending.
Very good read, I enjoyed it and I use docked quite a lot. However one tidbit I see a lot, all your problems you listed for Vagrant are not issues of vagrant but issues of you, the dev. Many people do not run into any of those, having used vagrant for the best part of a decade I’ve not experienced a single issue you mentioned in any personal project or any company I’ve worked at...
https://github.com/tantivy-search/tantivy Written in Rust, much less resource hungry. Not compatible with Lucene, but has similar goals.
its a bit like multi-threaded programming. instead of executing code sequentially, you can now fork the processes and run them in parallel.
Running many similar tasks at the same time from a single script. It's a low-level tool that can be used in building larger systems in a performant way. Could be used to build a job queue system, i.e. things that don't take part in the usual request-response loop, delegated to be run separately, not blocking the main execution thread. Comes with a lot of nice built-in interfaces to make easier some of the things that were difficult or unsafe with pthreads.
&gt; Hindi with a few English words So basically Hindi 🤣
I think the most used example of where this is used is the case of processing images. If you had a array of images you could loop over the array and process them one at a time. With parallel If you fed that array of images into something like this you could process the entire list of images at the same time, the process would run in parallel (at the same time). &amp;#x200B; I am excited to test this out - I have tried similar approaches in the past but always ended up offloading tasks to workers using a job queue like gearman. It takes a bit of more work to setup but once it is running it can expand wide.
Boom roasted
Step 1: Choose the right tutorial based on your personal taste. If you like videos and you get more from that, you may choose video tutorials. Make sure that tutorial covers all the basics. Step 2: After finishing the basics, practice them by doing online quizzes, your own simple projects and make sure that you have understood all the basics. If not, don't go to step 3. Step 3: Learn the advanced concepts in that programming language. (In PHP that would be array sorting, including, regexes, OOP, etc.) Step 4: Start your own projects and improve your self. &amp;#x200B; Doing it by yourself is the best!
A mysql viewer could be cool or a websocket apps? I may check this out and make a text-based game for fun using it. Ive been wanting to for a while now.
Note that this only works with Zend Thread Safe PHP, which is only available for CLI. It's good for when you need to do several processor heavy tasks at the same time.
A websocket chat probably would be cool
🤣 yes
ZTS works on web SAPIs as well, not only on CLI. &amp;#x200B; The "problem" with ZTS requirement is that PHP packages for all major Linux distributions usually don't enable it, which means you probably have to self compile PHP to use parallel.
We have many resources available on the Internet to learn PHP and other languages. Prefer Udemy or Codecademy or tutorials point websites to start the course. these websites provide very good tutorials. And follow some YouTube tutorial videos related to your technology...
This is of course very nice, but it requires NPM to use. Which is not always present in PHP projects. &amp;#x200B; You can also just add the git hook as a global pre-commit hook, and run git init in existing projects (for new clones, it will be added automatically). This is my version of the pre-commit hook: &amp;#x200B; `#!/usr/bin/env bash` `echo "php-cs-fixer pre commit hook start."` &amp;#x200B; `PHP_CS_FIXER="./vendor/bin/php-cs-fixer"` `PHP_CS_CONFIG="PATH TO .php_cs, which lives in our own QA package"` `CHANGED_FILES=$(git diff --cached --name-only --diff-filter=ACM -- '*.php')` &amp;#x200B; `if [ -n "$CHANGED_FILES" ]; then` `$PHP_CS_FIXER fix --config "$PHP_CS_CONFIG" $CHANGED_FILES;` `git add $CHANGED_FILES;` `fi` &amp;#x200B; `echo "php-cs-fixer pre commit hook finished."`
Can we request some exercises right here? Sort of a showcase
I agree with you there.
If you need to do something outside of the main request, it should be done on the command line. The CLI doesn't have the same restrictions on execution time [Documentation](https://www.php.net/manual/en/features.commandline.differences.php) so a better way if you need to process a large XML file would be pop it on the disk somewhere, then have a cron come along to process the files on disk. Just as a general rule, changing ini settings in a PHP script is a bad idea. I can't count the amount of time I've spent pouring through ini files trying to find why a setting isn't doing what it should only to find that a single include somewhere in the application is just changing the ini settings on the fly anyway.
You're the "ACKTCHUALLY" guy, aren't you? :P
Ah, yes, "technically correct; the best kind of correct!" :)
&gt;Boom roasted For completing my point? What is yours?
yes!
Thank you! So can you give me a challenge?
It *is* multi-threaded programming, there is no forking ...
Just out of curiosity, how would someone just learning a language know what the basics are?
The most hilarious thing about that tide of blogspam shit from India, they *never make it for the working code*, however primitive it is.
May be just google it ;)
Ah, self-answering. I thought it was a help question :D
On the up side, it has a GitHub repo, so you can actually submit issues against the "fixed" code.
Just answer the question "Can a person who never heard about SQL Injection prevent it after reading my article?" Blogging is not about quantity, it's all about quality. But, don't giveup, make your next article more descriptive than this one.
Hi Supun, what else I can add to article to make it more useful for beginners?
Stop being a beginner yourself.
Then I'd be questioning why you _think_ you need gender data in the first place. No data is better than incorrectly assumed data.
Wow, involving the community in writing blogspam. Creative.
So here I am as someone who knows almost nothing about php. Based on your advice I google php basics and get back several dozen (perhaps hundreds) hits. Quite a few are probably php 4, some are 5 and a few might be 7. They all talk about stuff that, as a newbie, I mostly don't understand. And many contradict each other. Is this really a good first step? Not trying to give you a hard time but the notion I could pick the "right tutorial" with little or no knowledge of the subject matter seems to be quite a stretch.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/coderradio] [PHP Parrallel 1.0.0](https://www.reddit.com/r/CoderRadio/comments/brorxu/php_parrallel_100/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
&gt;Just because of PHP's request-based architecture alone. It doesn't scale. PHP doesn't scale. Just because you use php in a request based architecture that doesnt mean there isnt anything else out there. Long running php servers are quiet cool stuff.
YADE (Yet another docker environment) is getting a thing. Teach people how to use docker themselves so they can help themselves. Yet another "standardized" environment wont work either. Thrust me.
I just named two platforms. But afaik I haven't seen those anywhere in production. Just read about them here on Reddit. I'd guess 99% of the PHP world uses at best php-fpm.
I use it in production :3 but reactphp
\*sad\_stallman.jpeg\*
You certainly don't want to process all your images at the same time. Even if no real context switches are involved there is still an overhead from switching between the tasks and at some point your CPU is saturated and more parallelism won't give you any more performance anyways.
Long standing issue about to be fixed (also one of the [PHP sadness](http://phpsadness.com/sad/14)). Bug is here: https://bugs.php.net/bug.php?id=53648 and discussion: https://externals.io/message/105515
... did you read the article? Because the whole point is basically to not "blindly use docker without understanding why"
Nice demo gif! ``` ./vendor/aharabara/habarnam/install.sh # then run this application php -f index.php ``` It would be great if your app could handle "install.sh" automatically to avoid this extra step for the end user. Also, maybe you can add a bin file to make it feel composer-friendly, like Doctrine: https://github.com/doctrine/orm/blob/master/composer.json#L68 Then we could just type: `bin/htodo`
I thought about boxing it to .phar like composer, so it will be one executable file with built-in dependency installation. Would you like to see more applications? If yes, then which one?
Is it possible? Sure. If you're not confident on it, I'd err on the side of caution and not, however.
&gt; Some years ago, to prove some people on the internet wrong The main reason most interesting things get done.
But why? Why would you want this? Aside from the RFC explanation. Like what real world examples would benefit from this.
Thanks for introducing me to a new podcast aswell! really enjoyed the first 2 episodes
With only 6 months of experience and mainly using CMS's - I would say stick with what you know. Maybe branch out a bit into frameworks like Symfony, Laravel, Zend, What ever else to learn more about the ecosystm.
welp it really depends on what your website is doing...are you just trying to secure a contact form? then sure, a couple of honeypots, a security question, and some backend verification should be enough at least for basic bots. Or are you trying to secure an entire online store? at that point you gotta worry about accounts/passwords, and even more sensitive data like cc #s. At that point its best to use a cms even just for liability.
In general a good rule of thumb is: if you have to ask: no, most likely not
Forest for the trees my dude. If you have a better example please feel free to contribute.
Based on the RFC itself, I think it's more about removing a "silly" restriction that shouldn't have been there in the first place and telling developers (of PHP and its extensions) that their code should be able to handle this case (and providing tools / guidelines to aid that) instead of saying "well, it shouldn't happen... but..."
This seems pretty similar to Task::Run on C#, which is great.
Adam Culp is the man.
Being consistent is better than being inconsistent and because from a non internals POV, not being able to throw from __toString is completely arbitrary.
I just want to display some videos. There is no login and the page is quite simple.
See also : [http://www.dvwa.co.uk/](http://www.dvwa.co.uk/)
I have an error handler that uses classes that could throw. If any error occured inside __toString, that could lead to a throw in the end.
Actually, its common to throw from error handlers to convert PHP errors to exceptions.
i mean in that case it should be quite simple. what exactly do you mean by secure?
&gt; I need to send them some certifications in order to prove them that I'm qualified enough to sign up into their platform. My advice: Find a better company to freelance with. If they're asking you to get some certification to prove you know your stuff, they're tacitly calling you incompetent. This means one of two things: 1. Your resume is totally empty of any technical work and they're genuinely agnostic towards your competence. 2. They have a wrong idea of what a technology career looks like, and want you to conform to ridiculous "standardization" policies. If it's the former case, any time put into your Github / Stack Overflow portfolio is worth conservatively 1000x as much as these certifications. In the latter case, if you disregard the disrespectful overtone implicit to their demand, sure, you might be able to "get" the job if you comply, but you'll likely stunt your growth as a developer. You'll slowly start to buy into their beliefs about what a technology career looks like. "Certifications matter because they got me this job," you'll start to say to yourself. And then after you advance in your career, you'll likely perpetuate this malignant meme onto anyone you're responsible for recruiting. The vicious cycle continues. `++$i`. Meanwhile, virtually every other PHP shop or major tech consultancy in the world that pays better than peanuts and offers a work-life balance will have long moved on [to work-sample tests](https://sockpuppet.org/blog/2015/03/06/the-hiring-post/) instead of ridiculous certification requirements or whiteboarding their applicants. The gulf between your experiences and the norms of our industry widens, and that leaves you at a severe disadvantage. Certification is bullshit. This isn't a problem exclusive to programming; information security has an even nastier plague. ("Must have CISSP, CompTIA Security+, CEH, and OSCP to apply" isn't as uncommon as it should be.)
You can do that with just html.
Not saying images are a bad example, just that you don't want a thread for every single image.
If you’re not managing log-in sessions, user data or any private information, don’t require anything complex and don’t require third party content submission then it’s generally more secure to avoid a CMS altogether simply because they add unnecessary complexity.
If you need to use MySQL, then you could use the full text search capabilities for the text matching. Types are easy to handle, you can just do `IN` clauses. Since you're on MySQL 8 you should have access to the JSON data type, which will allow tag-based queries (has one, has all, etc). For multipliers, you can do searches per field, obtain a relevance value from the appropriate full-text function, then merge the results with your own multipliers. Finally, sort the results by your amalgamated relevance value.
I see channel class. For comms? Deadlock detection? Go-lang'ish? &lt;3 &lt;3 &lt;3
I agree with Scott for the most part. A good portfolio is THE MOST important thing. &amp;#x200B; Where Scott and I differ is the value of a GOOD certification. NOTE: I am old enough to remember the 90's when MSFT and Cisco charged people thousands of dollars for certs. Basically, you knew you passed when the check cleared. We started calling people with these certs "Paper Tigers". Not all certs are created equal. &amp;#x200B; I ran the Zend PHP Cert for 3 years. During my tenure, we upgraded it to PHP 7.1. I am not allowed to talk about the details of the process but I can tell you that updating 33% of the test took us almost a year and was a five-figure project, money wise. Zend - well at least it used to, I have no idea what they do now - put forth a lot of effort and money to make sure of things like there were no outside biases in the questions. Also, our question writers worked together to make sure we were testing real skills and not just playing 'stump the chump'. &amp;#x200B; I have no insights into any other certifications in the PHP community so I cannot offer any comparisons. Ask people who have taken them and ask hiring managers if they are important. &amp;#x200B; A GOOD cert proves more than you can take tests. If you feel you are ready to invest in a certification, talk to people and pick a good one. &amp;#x200B; Don't START with a certification. Take the time that you would spend studying for it and taking it and spend it writing code. There is no better way to prove that you can write code than showing code you have written. &amp;#x200B; Portfolio is a MUST have Cert is a NICE to have &amp;#x200B; My $.02. Cheers! :) =C=
But if you have (say) a 16 core CPU with HT, then it'd make sense to process up to 32 images at a time, right?
&gt;based on your experience, are the CArray and FFI extensions "production ready"? CArray is in early stages and from what I've heard there are stability issues with FFI, I'm confident that these tools or others like them will eventually be part of the PHP ecosystem &gt;could you suggest some useful resources to go in deeper in the logic behind the code? The code looks great, but I want to understand more about the algorithms (and numerical procedures) behind it Sure, in fact, I've referenced the research papers where the fundamental concepts of each algorithm is explained in detail in the documentation and the code itself See [https://github.com/RubixML/RubixML#random-forest](https://github.com/RubixML/RubixML#random-forest) for example If you're looking for more high level info then I'd recommend Andrew Ng's ML course on Coursera, MIT open courseware, and Stanford Online are all free resources Having that said, all the algorithms in Rubix ML are pretty standard and you should be able to use Rubix very effectively with general ML knowledge and an understanding of PHP syntax
Thanks for reply! This is exactly what I did. Kind of... ;-) Created a very complex view and copied/persisted it to a memtable and did weighted fulltext search there. It works well as long as I have enough memory but I think there are other ways to investigate and improve.
Promising for learning new stuff. I apreciate this input!
I'd look at static site generators, there are plenty to choose from and they're as secure as it gets.
First time watcher. Loved the tutorial. Keep creating !!!!
Why you don't show us what you've already done. And explain what you're trying to do.
I am taking three separate progress database queries and combining them into one array, what I am trying to figure out is how to convert a ruby function into a php function each_hash Code I have so far started (which doesn't work due to std object so I need convert to array or work with a different way $lxfp = array(); foreach($data as $k=&gt;$v){ foreach ($v as $key=&gt;$value){ $lxfp[] = array('CIRCUIT'=&gt;$value['CIRCUIT'], 'DESCRIPTION'=&gt;$value['DESCRIPTION'], 'INSTALL_DATE'=&gt;$value['INSTALL_DATE']); } }
I made a view handler that uses toString. If I screw up in my view, I get weird errors that's incredibly hard to trace. It would be hella useful for that.
It doesn't look like you have an actual question, it just looks like you want somebody to do free work for you. \[Look into foreach\]([https://www.php.net/manual/en/control-structures.foreach.php](https://www.php.net/manual/en/control-structures.foreach.php)), and visit /r/PHPhelp when you have some actual code you've tried and a better description of what your actual problem is.
I'm surely not helping, but will `array_map()` do the trick?
I will have to figure out how it works, but I will look into it
 [https://github.com/RedisLabsModules/RediSearch](https://github.com/RedisLabsModules/RediSearch) &amp;#x200B; Haven't tried it myself, but considering switching from Elastic Search to it because ES really is a real memory hog and possibly overkill for us. Maybe it's something available on your hosting and meets your requirements? It has a pretty extensive and simple \[query language\]([https://oss.redislabs.com/redisearch/Commands.html#ftsearch](https://oss.redislabs.com/redisearch/Commands.html#ftsearch))
If you mean how Slim can define a class &amp; method for its route "destination", check the [Container Resolution](http://www.slimframework.com/docs/v3/objects/router.html#container-resolution) section of its docs. If you mean the `::class`, suffix, that's a [special keyword](https://www.php.net/manual/en/language.oop5.basic.php#language.oop5.basic.class.class) used to reference the full-qualified class name in string format.
 **Sr. Fullstack PHP Developer** $110k **4yrs** **PHP** (backend) 2yrs **React** (frontend) 2yrs **DB with any of the following; MySQL, DynamoDB, MS SQL, etc** Mostly coding and also working with **AWS**
And what output do you expect?
I came here to comment that $110k is low for a senior developer, but then saw that it's in NYC. That's crazy low for what you're asking...
I think this might go against Reddit's T&amp;Cs
&gt; I think it would be better if you use a text editor like sublime text instead of using PHPStrom, as beginners should know how to create their own code without depending on auto-completions and suggestions. Jesus, you're like my math teacher from 20 years ago: *No, you will not use a calculator! What if you're stuck on an island and you have no calculator, what would you do then, huh? I'm preparing you for Real Life TM!* So 20 years later, I'm very successful professionally and still using a calculator. And I rely on auto-completion, error-checking, and code generation and analysis. I just try not to get stuck on islands. Auto-completion doesn't write code for you. It just helps you focus on the important shit (algorithms, architecture, correctness, etc.) instead of feeling great that you can do something on a napkin that you will NEVER EVER in your life need to do on a napkin. If there's any profession where we don't need a "plan B without the computers" it's programming. It, by definition, requires computers. And computers can run IDEs and developer tools. Use 'em.
&gt; Wow, I totally disagree with you about not using PhpStorm. I instruct my students that if they are serious about learning, the $100/year is a firm commitment to the process. This comment is for you: https://www.reddit.com/r/PHP/comments/bqu9ze/inheritance_in_php_for_beginners/eogq3dt/
You are incorrect. See [/r/phpjobs](https://www.reddit.com/r/phpjobs) (or any other job subreddit). I believe this is against the rules of /r/php
Thank you for having common-sense. There's nothing shittier than a teacher who constantly holds you back from the real world by forcing artificial limitations on your work, so it can be "like when they were young" or "to learn it for real" and what not. To hold people back from using tools is just pseudo-education. It's like teaching carpentry but all your students can use is teeth and fingernails.
110k for a senior Dev in Manhattan? Feels very light...
I can answer your question as I know both languages quite well, however, I cannot find documentation on \`each\_hash\`. What is the structure you're getting from \`$data\`, and I assume you want to have a flat array of objects as a result?
I'm at 100 in Philly with 2 work from home days a week and unlimited vacation with flex time with a 10 min commute by bike. If this was remote then maybe but NYC for only 110? No.
word. This is a jr. rate in Manhattan.
This is moreso for a student getting out of college. Along with the benefits like dental, 401k, etc, we're also covering tuition. &amp;#x200B; Benefits: Full, 5 weeks PTO, great healthcare, pension (after vesting), tuition reimbursement, etc. No bonus. 
 This is moreso for a student getting out of college. Along with the benefits like dental, 401k, etc, we're also covering tuition. Benefits: Full, 5 weeks PTO, great healthcare, pension (after vesting), tuition reimbursement, etc. No bonus. 
So, not a senior at all. That makes more sense...
Yeah. Sorry. That's just what the company wanted me to label the job as, but yeah, it's moreso for a college student.
Codeception is -so- much better!
Or use Grumphp
Pick me, pick me! https://github.com/hopeseekr
You’re in Houston?
So you want to find a developer with 4 years PHP, 2 years React, 2 years DB who is just a college student? For $110k in NYC? Good luck with your search!
We just witnessed one of those “need 10 years exp in a language/framework that has only existed for 6” moments. Magical
There is no way for us to know, because we don’t have access to your computers, let’s work through this. First, are both environments identical? List the differences between the two.
No. I think the server my company was using is linux. Im running it on my windows 10 laptop. The first error is coming from a base-url in the body tag of a view file. I suspect that it might be a domain issue.
List some of the errors assuming they don't contain confidential data.
Without seeing any error there is simply no way to help. Go one error by one. Have you ever set up a blank Yii project? Maybe start there... baby steps. Also does the project have any documentation? I'd pity the fool who try to set up my my work project without reading my documentation hah.
Sounds like the domain is hard coded in a config file. You know the Yii project structure?
This post was removed because you have a new account and we get a lot of spam from newly created accounts. If you have any questions or think your post should be reinstated, please send a message to the mods. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/PHP) if you have any questions or concerns.*
Hahah Im that fool. The project was offshored to Armenia. Now I gotta fix it. The first error is coming for unidentified index. I think its because of Yii::$app-&gt;params['base_url']
Not really. This is my first time seeing it. How would I go about looking for the hardcoded domain?
Its mostly unidentified index errors.
Are you not allowed to post the error msg verbatim?
I can only see the first 3 errors. The rest just show me which line of code it occur on. The first 3 are all index errors. It literally says unidentified index error.
The error line itself is better for us than English. Trust me. It's like someone is trying to give you directions but the only thing you're saying is there's trees everywhere.
&lt;body class = "p-body" data-baseurl = "&lt;?= Yii::$app-&gt;params['base_url']; ?&gt;" &gt; The error variable is 'base_url'
&amp;#x200B; Ok, done. Quality PHP based platform allowing you to quickly and efficiently develop professional, secure, robust online operations. Check out the links below. &amp;#x200B; Github: [https://github.com/envrin/apex/](https://github.com/envrin/apex/) &amp;#x200B; Demo Main: [https://demo.envrin.com/](https://demo.envrin.com/) Demo Admin: [https://demo.envrin.com/admin/](https://demo.envrin.com/admin/) Demo Members Area: [https://demo.envrin.com/login](https://demo.envrin.com/login) &amp;#x200B; From the Github readme page, there's links to the installation manunal, developer training guide, full developer documentation, etc. &amp;#x200B; Any feedback appreciated. &amp;#x200B; Donations gratefully accepted. Bitcoin address: 3JnYmUHhz1CKz9vgxX55qmBnzVRPirA21D
 foreach ($hashes as &amp;$hash) { $k = key($hash); $v = $hash[$k]; $hash = [strtolower($k) =&gt; $v]; } This seems like the simplest way to achieve the same goal as the ruby code.
Share gist with errors, e.g. with [https://gist.github.com/](https://gist.github.com/)
Great effort to build your own solution to a problem that already been solved... several times. Jokes aside: 1. Quality and security without testing? Are you sure it's v1? 2. Whole framework uses static calls to basically all components? 3. Not following PSR recommendations? 4. ... Create comparison list of features your solution have over Symfony, Laravel and other players. Want to be an OSS involved - contribute to production used, wide-spread frameworks. This will give you more experience and training other than creating your own solution. Great effort from educational side, no real future in it's current state.
The admin seems broken. Doesn't load properly, tries to connect to a localhost websocket.
Now I remember using redi ages ago. Thanks for bringing that back to me! :-D
OMFG, I can't believe that. No wonder potentials were never getting back to me after I sent message after message and proposal after proposal. Jesus christ, that's insane. Anyway, admin panel working now, and thanks for letting me know about ok.
Shouldn't the namespace be `Parallel\Runtime` instead of `parallel\Runtime`? Looks kind of weird.
Perhaps indexeddb, by way of a wrapper like dexie is more appropriate if you want the in progress entries kept client side?
 Curious as to someones opinion who's been through this rather steep curve in that of proper OOP design principles, into more advanced techniques of class relationships -- class inheritance, abstract classes, interfaces, traits, so on. Me? First OOP project. Learning as I go. I've refactored, switched around, completely remodified my methods more time than I care to remember. Painful yet rewarding at the same time. Okay, enough of an intro, let's get into the meat of where I'm at. **PROJECT GOAL** Using chained curl responses to return the HTML of the requested page, pass that on to a DOM Class Handler which handles the parsing and extracting of sought information. This parsed information is then loaded into a DatabaseClass, which uses the information retrieved from the DOM parsing requests to appropriately store the data into the appropriate Database tables QL database. I've only 3 Classes. Brief description immediately below each Class. Class CurlHandler { //Methods to download data and images using cURL Class DOMHandler { //Methods to parse the DOM from the cURL Results Class DatabaseHandler { // Methods to insert into a Database particular Data received from the DOM Here's the list of methods used in the class. I designed it as, for good or ill) an interface, providing for a more compact type for those with constantly changing the Dynamics interface DOMInterface { public function getNotice(\DiDom\Document $document): int; public function getStock(\DiDom\Document $document): int; public function getUPC(\DiDom\Document $xpath): int; public function getTitle(\DiDom\Document $document): int; public function getCurrentPrice(\DiDom\Document $document): int; public function getMSRP(\DiDom\Document $document): int; public function getPriceDiscount(\DiDom\Document $document): int; public function getImages(\DiDom\Document $document): int; public function getAttributes(\DiDom\Document $document): int; public function getTags(\DiDom\Document $document): int; public function getAttributes(\DiDom\Document $document): int; public function getLink(\DiDom\Document $document): int; public function pageCheck(int $page, int $pagelength): int; } And below are the ones I left out in the Interface, as these functions are more or less as is, static and designed to work in universal applications.. class DOMController implements DOMInterface { public function setup (string $html); public function write (string $file, string $producturl); public function writeJSON (array $json, string $proxy, string $dir) public function writeHTML (string $html, string $proxy, string $dir) } As I stated earlier, aside from the obious reasions, one of the main reasons I get this down is crucial is scalability. As this project resolves around the parsing of different datasources and websites, my Classes must be conformed in a way that another website (Class) can easily be added and organized in an affluent way. My other Classes are similar. I feel this post has reached close to it's maxim so I'll conclude, the similiarty between universal and specific are logical seperators that I've found, there's bound to be something I'm unaware of. Tips, comments, why I'm wrong, how to be right.. I'd appreciate it. It's been a tough ride getting to this point.
Look up encapsulation. Not all of your methods should be public.
You can learn multiple things at the same time so you will got down to max 4
I think on stackoverflow are more hindi speaking people than here on php reddit.
Thank you. I've been meaning too, it's a step by step this. Made note of that, knew it was something I needed to do. &amp;#x200B; Moreso put it on the backburner for now until I can probably figure out how to properly inject my classes in different classes whilst still having a relationship between the classes when needed.
Okay, thanks for the suggestion. I would try to consider stack overflow. Besides, I would do future videos in english too. Thanks a lot!
The big danger with CMS is that the hackers know their vulnerabilities. So, you have to apply the security patches constantly. This is also true for frameworks, library packages, plugins and the like. So, to build a secure website you have to a) build it without any vulnerability or b) have the vulnerabilities unknown Hackers these days operate campaigns, they target for example wordpress sites and try until they find one which has not been updated for a long time. My advice: build it yourself and check it through a vulnerability scanner https://pentest-tools.com/website-vulnerability-scanning/web-server-scanner That way you will learn how to build a secure website. Read also pages like this: https://www.php.net/manual/en/security.php
Still an error in console about connecting to a localhost web socket &amp;#x200B; &gt;WebSocket connection to 'ws://localhost:8194/' failed: Error in connection establishment: net::ERR\_CONNECTION\_REFUSED
Use `ag`: &gt; ag domain /path/to/project
Why?
Not when a single image processing can use those 16 cores itself.
Its very interesting for jobs which your own cpu is not the bottleneck but lets say waiting for communication/network traffic. So a webcrawler is a perfect example.
As long as this process can only use one cpu yes. otherwise you would use more ressources just to communicate thus the whole process would take longer.
I am on mobile phone right now so I cannot write much, but thanks for you great advice. I will check your links later. Have a wonderful day.
Sorry but if the company is listing a grad position as a senior position thats not a good sign.
This scanner might not be the best, it's just an example, there are others out there.
I think you better look into using JOIN or UNION statements in your database query, and reduce those three queries separate queries into one single query, and then save it as a view if possible.
``` $lxfp = []; foreach($data as $values){ foreach ($values as $value){ $lxfp[] = (array) $value } } ``` First things first use the short syntax for arrays, it's much more readable. Secondly the `stdClass` object can just be cast to an array in this case. Also, if you're bringing this from `json_decode`, simply pass the second parameter as `true` to get it back as an array already.
Were I a betting man, I'd say they're using this: https://www.rubydoc.info/github/tmtm/ruby-mysql/Mysql%2FStmt:each_hash
thanks, will do
&gt; It literally says unidentified index error. It also says literally what index is undefined, which makes a shit ton of difference.
Nice job adam!
Are you using any frameworks? I only ask as this could make your life much easier with this...
Learn to code
javascript
This. Also it stops hiding the actual exception if it's thrown in the `__tostring()` method. I've had nightmare times trying to actually find out what the exception is if a random class in Laravel or Zend just decided to throw an exception.
Just today in Github Satelite conference in Berlin. More details: [https://github.com/sponsors](https://github.com/sponsors) &amp;#x200B; Any early adopters here? What are your experiences?
After variables and how to output, the next lesson is usually conditionals.
This is not a PHPHelp subreddit, but I still reply to you. My guess is that you use sessions to store which user is logged in so I think you have something like this `$_SESSION['logged'] = 1;` or anything else to mark user as logged in. &amp;#x200B; So, why don't you verify this and display button based on this session? &amp;#x200B; `if(isset($_SESSION['logged']) and $_SESSION['logged'] === 1) {` `// logout button` `} else {` `// login button` `}`
I've heard good things about that. Maybe it will be a future video. Thanks.
It annoys me that we're still trying to find ways of fund people working on things for free instead of just having companies pay software licenses.
You mean to make PHP Linux MariaDB Symfony Laravel paid for the companies?
This has a name, it's called corruption. MICROSOFT = **💩** **💩** **💩**
It also uses Behat behind the scenes.
How so? Many developers and large projects already have Patreon accounts. At least Github sponsorships have no fees.
Sponsorship isn’t just from individuals. Companies often feel much more inclined to sponsor a project than pay for a license to use it. The latter tends to feel more like lock-in, and more importantly the developers actually building the software that uses it will often rule out a paid offering and immediately move on to a free alternative.
Sr developer... 4 years backend experience... just getting out of college... Sounds like a pretty crappy deal to work for a company with asinine expectations.
&gt; Companies often feel much more inclined to sponsor a project than pay for a license to use it. No, they don't. Look at the number of companies sponsoring PHP projects and then look at the number of companies paying for PHPStorm.
It's bad karma (or trauma?) from the past. Personally I was invited to the Satellite conference and was in doubts what are they gonna sell/fuck up now. But to my surprise, I visited 3 talks that focused on open-source inside and outside companies and embraced financial support directly to the maintainers. With focus on burnouts, contributors support and minorities. For me it's great direction that open-source community needs. GitHub folks really nailed it today
You don’t ship PHPStorm. If library licenses were based on the number of developers on your team (possible, but I’ve certainly never heard of it) rather than stuff like MRR, number of servers, or number of customers, I could see this being a reasonable comparison.
&gt; (possible, but I’ve certainly never heard of it) I've seen it. And the comparison is fair. Especially when we compare it to composer which no one pays for or private packagist which everybody complaint about being too expensive. There are more than just libraries as open source projects. Also, I've seen a library with per developer costs.
That implies the problem lies within the development community itself; “we” create these free alternatives, right?
In Brazil too.
Gender audience analysis is quite a common practice. And it is not 'incorrectly' assumed, it has an observational error of course, but it is rather small, which makes data somewhat interesting to the observer.
Well, true. I think I discovered in my research of the imagick functionality that I was using through PHP that it *wasn't* multithreaded, so instead I have a minutely cron job that launches a script that runs for ~ 10 minutes, meaning I normally have about 10 cores being utilised by my image processing script.
thanks, you gave me a huge amount of (good) documentation to read!
Oh hey!!!!! Your the guy (or gal) who doesn’t take feedback and when people give you serious criticism you shut down and delete all links related to your projects I see your being downvoted. How about you stop,read why people don’t like this , take their feedback, stop reinventing the wheel and go practice your php somemore?
That defeats the purpose of FOSS. Needs to be free for everyone otherwise what's the point?
As an individual, I'm not likely to want to pay a license for a toy project. As an employee (and manager), I'm happy to spend the company's money to avoid having to re-solve an already solved problem - especially since I can do basic math on the cost of my time. But if there are equal-quality free and paid versions, of course I'm going to pick the free one. This is where sponsorships can work well: it's still free (gets used, adopted, and improved) but there's a clear way to offer stuff like support or prioritized feature requests, or simply a clear thing to put in the budget.
Endtest is spamming up tech subs every day with [multiple accounts](https://www.reddit.com/user/boss_scarbos) and [focused spam posting](https://www.reddit.com/user/dragnea_presedinte) that clearly breaks [reddits self promotion rules](https://www.reddit.com/wiki/selfpromotion.)
&gt; The comparison is fair. Especially when we compare it to composer which no one pays for or private packagist which everybody complaint about being too expensive. There are more than just libraries as open source projects. You're incorrect about people not paying for private packagist. We'll have to agree to disagree about the tool vs lib comparison being fair. I don't want to argue over it; we've clearly had different experiences that influence our opinions on this. &gt; Also, I've seen a library with per developer costs. Cool. I said I hadn't seen one, not that it doesn't exist. If that model works for them, that's great to hear.
Why does it have to be FOSS? I'm not a hippy, I think for profit companies should pay for software.
Out of curiosity, could to provide example of such library please?
Honestly, I've seen it but I can't remember which one it is. It's so rare that I see a library that costs money you would think I would remember but I don't.
[https://github.com/Envrin/apex/blob/master/src/autoload.php](https://github.com/Envrin/apex/blob/master/src/autoload.php) Why are you not using composers auto load? &gt; Finialized (I think), have fun everyone Wait what? Why do you not have actual commit messages? Minor thing, but it helps people understand the flow of the project, the thinking process and the ideas behind why specific features were implemented the way they were. [https://github.com/Envrin/apex/blob/master/src/core/ajax/search_table.php](https://github.com/Envrin/apex/blob/master/src/core/ajax/search_table.php) Indentation spaces, spaces, not tabs. But you have neither here when it comes to the function, 4 spaces from the `class {` and the `}` for all function definitions. I have to ask, are you new to PHP? Because this is code, is what I would consider legacy, there is no PSR here, there is no composer from what I can see. It looks badly designed. I seriously hope no one is actually using this. &gt; Another day, another update These kinds of commit messages make you look unprofessional and like you just don't care about the project. Put some work into meaningful commit messages. &gt; Powerful PHP framework that allows for the efficient, streamlined development of high quality, secure, professional online operations. This is NOT a framework, this is a CMS. I haven't looked too deep into this: [https://github.com/Envrin/apex/blob/master/lib/db/mysql.php](https://github.com/Envrin/apex/blob/master/lib/db/mysql.php) But I would use doctrine. When it comes to trying to write your own DB stuff, **don't**. Even I wouldn't. I would pull in laravels eloquent or Doctrine. Why? Because the stuff thats out there is seriously battle tested by professional PHP developers, not Junior developers. Yes we all have to start some where - but never write your own stuff unless its for private learning experiences only. And even then I would not write a line of code. I would read, ask questions and learn. Where in the world is tests sandiego? (see what I did there?) But seriously, there are no tests. Every "framework" has to have tests. end to end. Every aspect of the framework should be tested. Tests not only show us how to use the API (as well as docs) but also let us see your thought process. [https://github.com/Envrin/apex/blob/master/src/core/tables.php#L21](https://github.com/Envrin/apex/blob/master/src/core/tables.php#L21) This, I think, will cause a run time error. Because you are missing a `*` so, if I am correct, PHP compiler (interpreter?) will process that as some undefined shit. [https://github.com/Envrin/apex/blob/master/src/core/tables.php#L32](https://github.com/Envrin/apex/blob/master/src/core/tables.php#L32) Is there a reason to debug log this? Do we - as the user - care? Let me be honest with you, ok? Are you listening? This "framework" or "CMS" is garbage. It's a mess of legacy code, no standards, no tests, bad commit messages, bad design principles, bad ideas in general and really no thought behind it. Is it a CMS or a framework? Looks like a CMS to me. Even wordpress is easier to understand then this dumpster fire. Heres What I would suggest for you. Get some books on modern OOP, Books on composer, Books on PSR, Books on architecture. Look at things like Symfony, Zenfd, Spring, Laravel, Rails, ASP.net and other top quality, highly used, professionally developed frameworks to get an idea of the architecture, the thought process and the understanding of why x was implemented. Then get your self some books on PHP and learn how the language works. Learn it's quirks, it's nuances and its downfalls. Then get your self a PHP job, start junior. It's where your code base is. And work on both legacy and non legacy applications. Work your way up to senior (in about 10 years or less) and then come back with the experience, the knowledge and the understanding to create your own framework. then finally, come back here and we will take you a little more seriously. You also need some soft skills, learning how to take criticism and when to admit that "ok your right, so how do I move forward". Learn what questions to ask, and what questions to google and for god sakes, stay off of stackoverflow. Some of your code I have seen in stack answers.
No one will or should donate to this for all the reasons I have mentioned in my post.
&gt; No wonder potentials were never getting back to me after I sent message after message and proposal after proposal. Jesus christ, that's insane. I'm sorry what? You had "potentials"? I fear for them. I really do.
Start by generalizing; you write &gt; Using chained curl responses to return the HTML of the requested page, pass that on to a DOM Class Handler which handles the parsing and extracting of sought information. This parsed information is then loaded into a DatabaseClass, which uses the information retrieved from the DOM parsing requests to appropriately store the data into the appropriate Database tables QL database. What I understand out of this is that you want to make requests to different sources, interpret the response and turn that response into an object that can be stored in a database. Am I correct in that assumption? From your example I assume you are fetching products of some sort. If so, I would personally make the interfaces more implementation agnostic; a SourceInterface, a Product - you could argue that this should be a value object which _could_ make an interface not necessary- and a StorageInterface. Now you can have the SourceInterface expose a method called `fetchProduct()` that is to return an instance of Product - or throw an exception - and you would have all the freedom in the world to implement this interface the way you want to. Using cURL, or Guzzle or via a SOAP api or whatever. One implementation per source. Similar with the storing of the retrieved data; expose a method `storeProduct()` and let it rip! Bottom line is that by defining interfaces that only inform you of *what* is done, not *how* it is done you don’t have to worry about the inner workings of the class. You can read more about these kind of things by searching for terms like SOLID, dependency injection and dependency inversion principle.
Imagick can be multi-threaded if the underlying ImageMagick library was compiled against OpenMP. However....OpenMP doesn't seem to work fantastically well with the process manager in PHP. And some people have weird crashes. btw you really should look at using supervisorD to manage background workers. It really is good for that.
Image processing is either going to be limited by the cpu speed, or the memory throughput. Processing those in parallel will not make the processing faster. In fact it will increase the average processing time, even if it theoretically means that more images could be processed in a given time frame.
Hope you find it interesting guys. :) I'm programming PHP for over 10 years, but didn't know about it before.
I am actually figured that part out, I am trying to figure out how to compare these two strings to see if they match and then combine them together. LXFP/151699//Name of Company .LXFP.151699..LB Each Gets returned from a query, and each query contains different information so I need to convert one to the other using regular expressions or something else and I am not sure how.
If your image library can't do multithreading then definitely. If it can do multithreading and you really care about a few (if any) percent of performance increase then you would have to benchmark your specific workload. The multithreading approach could be faster because of caching (if each core works on a different image you can't use the shared cache as efficiently) but that might be offset by the additional synchronization between threads that is necessary for working on the same image. Also if the machine has more than just your image processing running on it then you don't want to use as many threads as you have (virtual) cores for the images - that would lead to frequent context switches and probably thrash your cache.
In my opinion, the 'Acceptance test' part (testing via WebDriver/Selenium) is where CodeCeption is particularly strong. Combined with the Db module that lets you restore a defined state of your database after each test it's the most complete solution I have found for that task. And as /u/pgl pointed out, CodeCeption integrates Behat tests as well.
Slightly off-topic but I'd like to take the chance to say 'thank you' for your fork of the CodeCeption-based Symfony Demo project over at [https://github.com/pgl/symfony-demo](https://github.com/pgl/symfony-demo). I looked up a few bits regarding namespaces and integrating CodeCeption with a Symfony app on your updated fork. So... thank you!
You're welcome! Glad you found it useful.
I like it, thank you. I'll definitely look into this and do some experiments with it, see if that's the best route. And yes you are spot on right with your assumptions. &amp;#x200B; &gt; Bottom line is that by defining interfaces that only inform you of *what* is done, not *how* it is done you don’t have to worry about the inner workings of the class. &amp;#x200B; Trying to wrap my mind around that. I mean I get it in theory, but my mind goes blank when trying to apply it to my existing (off the top of my head anyways)... I'm sure because I've never messed or played around with it much before. &amp;#x200B; Issue was, mainly, I wasn't sure which direction to look into to best achieve my goal/end result. Would be great to have a direction, but I guess that comes with the territory trying to figure things out on your own :P. Interfaces do sound promising, I'll definitely give them some more work thoughs. &amp;#x200B; Really like the FetchProduct, StoreProduct, SourceInterface interface ideas and all. Will be in my mind as I figure this out. I made a few interfaces / class implementations, got an okay understanding of them. Still haven't looked into traits much, don't really think they're the ideal thing to use though... I could be wrong. &amp;#x200B; Thanks again.
Are you connecting to the VPN yourself via AnyConnect, or asking how to use PHP to create the VPN connection? Either way, you have the same problem. The VPN is an application layer below PHP, so there isn't a "php" solution. What you are going to have to do is to run the command line version of AnyConnect and make the connection. You can make your php app do that for you. Rather than answer how, this SO answer is pretty solid: https://superuser.com/questions/649614/connect-using-anyconnect-from-command-line#837753 Once the VPN is connected, then you can make your call(s) to the external service.
So I just poured into Codeception's composer.json, and sure, it uses https://github.com/behat/gherkin, for parsing Gherkin, for those anal enough to need it. But it definitely doesn't "use Behat behind the scenes." I've thoroughly investigated its code about a month ago, and it uses Facebook's WebDriver and PHPUnit.
https://codeception.com/docs/07-BDD
Compare this to Behat tests (which are split between plain text and methods with crazy Regex annotations, etc.) and tell me which you'd prefer: $I-&gt;am("refunding Zuora Account $zuoraId..."); $I-&gt;goToTheAccountsPage(); $I-&gt;goToCustomerAccount($zuoraId); $I-&gt;refundAllPayments($zuoraId); $I-&gt;refundAllCredits($zuoraId); In my experience, lay people can understand well-written Codeception tests exactly as well as they can Gherkin files.
You know a project has significant maintainer problems, in 2019, when they have their own custom autoloader... https://github.com/Envrin/apex/blob/master/src/autoload.php In fact, I have no idea why classes are named like `html_tags`. I can't tell if this guy is Not a Real Developer or not. Right on the cusp, I guess.
&gt; I have to ask, are you new to PHP? Because this is code, is what I would consider legacy, there is no PSR here, there is no composer from what I can see. It looks badly designed. I seriously hope no one is actually using this. I think he's one of those "I have FIFTEEN YEARS EXPERIENCE" PHP "devs" who still code like juniors but think they're the shit.
Wow, I have +10 years in PHP too and didn't know about that haha thanks for sharing.
 &gt;&gt; Why are you not using composers auto load? It does. If it didn't, obviously the system wouldn't even load. &gt;&gt; Wait what? Why do you not have actual commit messages? Fair point, and will start using them. &gt;&gt; Indentation spaces, spaces, not tabs. But you have neither here when it comes to the function PSR-2 specifically states 4 spaces, not tabs. I actually prefer tabs mysql, mainly because sometimes I'm working in python which requires tabs. Granted, you can get me for not putting indentation on every line after the class declaration, but considering it's one class per-file, I don't really see the egregious offense here. Code is still very readable, and no reason in say a 1200 line file to add eztra indentation to ~1190 lines with only a few lines at the top and the bottom most line being left out. Aside from that one ingraction, it follows PSR-2 specs to a T: https://www.php-fig.org/psr/psr-2/ &gt;&gt; /lib/db/mysql.php file Nope, I'm happy with it. I dislike things like PDO, as it takes say 6 lines of code to do what you can do in one line of code just as securely. I'll be happy to eat crow if and when a report of SQL injection comes in (assuming the DB library is used correctly), but for now I'm happy. Just because it's a little different than you're used to doesn't mean it's wrong or insecure. &gt;&gt; Why? Because the stuff thats out there is seriously battle tested by professional PHP developers, not Junior developers. I've been basically full-time in bitcoin / crypto-currency for the past 7 years. My main client owns a good number of bitcoin related operations, plus has a bit of a target painted on his back, hence is very aggressively and relentlessly attached by highly skilled hackers on an almost hourly basis. Trust me, I've been through the ringer when it comes to skilled Russian hackers who are hell bent on getting into your system. Not saying there isn't security vulnerabilities as it's not yet time tested, but wouldn't be so quick to pass me off as someone who doesn't understand what they're doing either. &gt;&gt; Where in the world is tests sandiego? (see what I did there?) But seriously, there are no tests. Every "framework" has to have tests. end to end. Every aspect of the framework should be tested. Tests not only show us how to use the API (as well as docs) but also let us see your thought process. The /src/core/test/ directory is the bulk of current tests. You are right though, still need to finish tests for the additional packages (users, transaction, support, etc.). Documentation for unit tests at: https://github.com/Envrin/apex/blob/master/docs/testing.md &gt;&gt; https://github.com/Envrin/apex/blob/master/src/core/tables.php#L21 Oh, thanks for letting me know, and no, it didn't throw an error. All fixed though. BTW... here's an example of why the commit messages aren't the greatest -- what kind of commit message do you use for small modifications like that? &gt;&gt; Is there a reason to debug log this? I don't know, because I'm an idiot. At the time I was just quickly going through file-by-file, mindlessly adding in those debug lines.
You're telling me that you tried selling this dreck and didn't even do the most basic QA?
You know what would certainly help? Invoice. Loads of companies are willing and able to support OpenSource projects, just need invoice. I think on SubscribeStar companies supporting people are able to get invoice for that, but generally, any company that wants to support OpenSource would happily do so if they could get invoice to put into expenses. That's all it'd take for some.
Dammit! I've been coding PHP since v2 in 1998 and I just now found this out?!
Invalid.
Never even considered to use it for that purpose ... mind blown
Ah, OK, my mistake, sorry.
Let me just spare you all the effort and show what OP does to people with criticism: [https://www.reddit.com/r/PHP/comments/9879re/apex\_framework\_feedback\_requested/e4hrktl/](https://www.reddit.com/r/PHP/comments/9879re/apex_framework_feedback_requested/e4hrktl/) &amp;#x200B; I am not wasting my time looking at the next iteration of the same turd, but I would be amazed if the issues in the previous thread are fixed instead of hand waved away. In any way people who respond like that on feedback (both security and otherwise) should IMO be down voted into oblivion when their next spam post comes up to prevent innocent people from even getting near projects like this.
&gt; Why does it have to be FOSS? Because as an individual act it aids adoption which improves the community and ecosystem which helps quality and because as a collective trend it helps keep the power on the side of developers rather than consolidating behind a few monopolies. &gt; I'm not a hippy, I think for profit companies should pay for software. I'd argue it's more hippie-like to suggest that there is something inherently wrong with letting a for-profit company have something for free.
&gt; It does. If it didn't, obviously the system wouldn't even load. But you have your own autoloader, so if you're using composer - and apparently not properly - you should never need any "autoload class" ever. Any where. At all. &gt; PSR-2 specifically states 4 spaces, not tabs. Thats what I was saying, use spaces not tabs. No respectable programmer uses tabs (in PHP) &gt; I don't really see the egregious offense here. Code is still very readable, and no reason in say a 1200 line file to add eztra indentation to ~1190 lines with only a few lines at the top and the bottom most line being left out. Its apart of some specification if I recall correctly, its also part of good coding standards. You are inconsistent in your "spaces" when it comes to classes, some have it done properly, others do not. Pick on, fight for it and stick to it. &gt; Nope, I'm happy with it. I dislike things like PDO, as it takes say 6 lines of code to do what you can do in one line of code just as securely. I'll be happy to eat crow if and when a report of SQL injection comes in **(assuming the DB library is used correctly)** Note the bold. You cannot assume that. People are stupid, especially new developers. You must create some kind of wrapper that protects stupid people from cutting them selves. If your whole argument is "No I like it this way" then thats bad. Doctrine, Eloquent and a hand full of others, regardless of opinion, have a way of doing things for security reasons. Specifically around inserting, adding, fetching and all the other transactions. You are sacrificing security because you don't like the extra lines of code. &gt; I've been basically full-time in bitcoin / crypto-currency for the past 7 years. My main client owns a good number of bitcoin related operations, plus has a bit of a target painted on his back, hence is very aggressively and relentlessly attached by highly skilled hackers on an almost hourly basis. **Trust me, I've been through the ringer when it comes to skilled Russian hackers who are hell bent on getting into your system.** Note the bold. I don't care if you have been writing code since you were a twinkle in your great great grandmothers eyes. Your code is, sorry to say it, shit. It's insecure, untested, doesn't follow standards. You can't say it follows PSR-X if the whole code base doesn't follow it. Your framework or CMS is deeply deeply flawed and very insecure. I feel for your "client" because your lack of experience is showing. Specifically around things like security which should be number one especially when dealing with any form of currency or money. &gt; The /src/core/test/ directory is the bulk of current tests. You are right though, still need to finish tests for the additional packages (users, transaction, support, etc.). I did not see that. Let's look at your docs. Also all your tests should be at the top level of `src` or out side of `src`. &gt; php apex.php test PACKAGE [ALIAS] &gt; The above will run either, the specific test class specified as ALIAS, or if not specified will run all unit test classes within the package one at a time. Wait what? No, use `phpunit`, why do you need to have some custom thing? You are tying the unit tests to the framework, which should not happen, your tests are designed to test things in isolation of your application and it's environment. Granted there are times where calling a class from the framework like a model for example is ok. Your tests should have a core test class that extends your frameworks test suite functionality to then set up any environment variables or at least bare bones stuff to do things like end to end or unit testing. Look at Laravel for example. &gt; $this-&gt;assertpagetitle("Welcome to the member's area"); No, `assertPageTitleIs` for example. &gt; `asserthasusermessage ` Use camel case properly FFS. I do like that you have your own assert methods, but they should work with me running `./vendor/bin/phpunit` I don't see that written any where. Why should I be forced to use your testing thing? Is there a test class I can extend to have this assert functionality? &gt; what kind of commit message do you use for small modifications like that? Say what you fixed. EG: Fixed issues with comment. Added missing * to the comment section of the `get_details ` function. &gt; I don't know, because I'm an idiot. At the time I was just quickly going through file-by-file, mindlessly adding in those debug lines. Mindlessly? With no reason? Don't do that. Couple other things: - Name spacing: `Apex\Core` not `apex\core` - functions: `doSomething` not `do_something` - classes: `ClassName` not `classname` (this last one may not apply to you) This framework is VERY VERY VERY VERY VERY VERY (I cannot stress this enough) BAD. It's not even a framework, it is an amalgamation of mess. I'm sorry but if you had this on your CV, i would not hire you. If this is how you write production code, god help you and any one that allows this to go live. You need to seriously rethink this whole project. You need to make use of existing components and packages out there and write either wrappers or bridges to connect them. No one, And I mean this from the depths of my soul, should ever use this.
I hate those people, Truly I do. I mean even after 3 years I was writing better code then I was when I started. Hell today I write better code then I did 7 years ago.
Very cool!
I don’t agree. In my company, the same gherkin scenarios are being shared by android, ios and backend developers. They are even written by PM and not the developers themselves. Gherkin is language-agnostic, Codeception isn’t. Also, Gherkin definitely has a much nicer syntax than Codeception. No wonder it’s ported into many different languages. Also, there are a ton of contexts that are built for Behat. Request are being handled much nicer than in the video. The video above, in my opinion, is outdated and does not represent the proper way of testing with Behat. Regarding the crazy regexps, personally I don’t go with this approach. My scenarios are clean from properties and technical stuff. I hide the specifics in the contexts instead of passing them from feature files. Same as your example in Codeception.
 $data = $queryClass-&gt;builder($query); $array = json_decode(json_encode($data), true); $data2 = $queryClass-&gt;builder($query2); $array2 = json_decode(json_encode($data2), true); $pattern = '/(?:\d{4,7})/'; $result = Array(); foreach ($array as $key_1 =&gt; &amp;$value_1) { // if($value['name']) foreach ($array2 as $key_1 =&gt; $value_2) { if((preg_match($pattern, $value_1['CIRCUIT'])) == preg_match($pattern, $value_2['CAT_DESCRIPTION'])) { $result[] = array_merge($value_1,$value_2); } } } dd($result); but it is basically just always pushing cat description onto the end of the array
anyone want to guess the ratio at which this feature has been used deliberately against the number of times it has occured as a 'bug'?
And now it's documented, it's not a bug.
Still around the conference: apparently they are gonna start processing the waitlist soon, but so far nobody (besides demo accounts) has it enabled yet :-)
Spryker used to do that - not sure if they still do.
 &gt;&gt; Composer autoloader Fair point again, and honestly, design flaw on my end. By the time I realized the design flaw, was too far in, and just left it as is. Will add it to the todo list to remove the custom autoloader, and use composer's only. Will take a while to flip that /lib/ directory into /src/core/, but will do. That, and just due to the way Apex packaging and installation works, it will be a symlink in the /vendor/ directory to the /src/ directory, but regardless, the custom autoloader will be gone. &gt;&gt; 4 spaces vs. tabs. As far as I'm aware, there are no tabs anywhere within that code. Everything is indented with 4 spaces, although will admit, I don't add extra initial indentation to all lines within a class file. &gt;&gt; SQL injection We'll agree to disagree, but until if / when proven otherwise, I'm happy with this. So far no SQL injection has been found, and it does check every SQL statement for SQL injection twice -- one internally within the DB library which even allows you to define data types as placeholders (eg. %s = string, %i = integer, %b = boolean, etc.), plus one within the mySQL engine itself when the SQL statement is prepared. Basically, does the exact same thing as PDO and others, but just one one line instead of 6. By "assuming developers use it correctly", all I meant was using placeholders instead of placing variables directly in the SQL statements. Same goes for PDO and others -- use placeholders incorrectly, you're going to open the system up to SQL injection. &gt;&gt; Unit Tests Frist, doh!!! Seriously, those phpUnit assertion methods are camel case? haha, shit. Sorry, I went blind a couple years back so everything is 100% audio based for me now, and I honestly thought those methods were all lowercase. Didn't catch that one. Alright, on the todo list to switch that. And no, it doesn't execute the unit tests within the software. Running them via the apex.php script simply executes the phpUnit binary via system() function, and is just so there's less typing involved. For example, instead of having to run: ./vendor/bin/phpunit --bootstrap src/load.php src/core/test/admin_panel.php You just simply run: php apex.php test core admin_panel &gt;&gt; Naming Conventions There's no right or wrong, and we both know that. It's a simple rule of pick one, and uniformly stick with it.
Holy damn. It's like finding an easter egg now on an SNES game for the First time.
What was really interesting was the performance by version (under Performance)... speed goes down and memory usage increases for the same basic calls.
I think my biggest gripe here is that a closed source platform is trying to look opensource friendly. If they were genuinely interested in opensource they would opensource their platforms.
&gt; Fair point again, and honestly, design flaw on my end. By the time I realized the design flaw, was too far in, and just left it as is. I would take the time to go back and fix that. That one thing would make this "framework" 100 times better. &gt; That, and just due to the way Apex packaging and installation works, it will be a symlink in the /vendor/ directory to the /src/ directory, but regardless, the custom autoloader will be gone. If this is a framework, then all you should be "installing" is, something like what other frameworks do, a simple directory structure that ties, some how to the framework or at least gives a simple "development" environment - Look at laravel or rails for example. While rails makes you kind of stick to its structure, laravel does not. When you do a new project in other you get a new project directory with some core things in there like a model for users, authentication and base migrations as well as a base controller among others. If this is a CMS, the structure should be easy to follow, like WP - themes go here, plugins there. You sort of have that. But it could use more tweaking. &gt; We'll agree to disagree, but until if / when proven otherwise, I'm happy with this. &gt;.&gt; &gt; So far no SQL injection has been found, and it does check every SQL statement for SQL injection twice -- one internally within the DB library which even allows you to define data types as placeholders (eg. %s = string, %i = integer, %b = boolean, etc.), plus one within the mySQL engine itself when the SQL statement is prepared. Basically, does the exact same thing as PDO and others, but just one one line instead of 6. While thats sort of fine. I would fall down to PDO for the actual SQL running and use param binding with strict checking. Bobby drop tables might pay you a visit one day. &gt; By "assuming developers use it correctly", all I meant was using placeholders instead of placing variables directly in the SQL statements. Same goes for PDO and others -- use placeholders incorrectly, you're going to open the system up to SQL injection. It's your job as a "framework developer" to make sure that we cannot stab our selves in the foot. It's not up to me to make sure I use things correctly, your framework should be like "wait what? No." when I try and be stupid. &gt; Frist, doh!!! Seriously, those phpUnit assertion methods are camel case? haha, shit. Sorry, I went blind a couple years back so everything is 100% audio based for me now, and I honestly thought those methods were all lowercase. Didn't catch that one. Alright, on the todo list to switch that. I don't want to discourage a disabled person from participating, but maybe its best to have some one else also look over your code to make sure it's right? I don't know your level of blindness and wont presume to, but it would help to have a second set of eyes. &gt; And no, it doesn't execute the unit tests within the software. Running them via the apex.php script simply executes the phpUnit binary via system() function, and is just so there's less typing involved. For example, instead of having to run: &gt; ./vendor/bin/phpunit --bootstrap src/load.php src/core/test/admin_panel.php &gt; You just simply run: &gt; php apex.php test core admin_panel I would have just created a composer script, so I could do `composer test`. No need for scripts. Again with learning composer and PHP. &gt; There's no right or wrong, and we both know that. It's a simple rule of pick one, and uniformly stick with it. There are right or wrong ways to do it and you know it. camelCase and UpperCase for functions and classes respectively.
Personally I like the GNU GPL. The question you linked 'Can I use GPL libraries in a closed source project if only the output is distributed?' is very misleading. Contrary to the title, the user who posted that title *was* intending to distribute their software. That's why the answer is no. If they had been genuinely intending to keep their software private within their organisation then the answer would have been yes.
Hell I feel like I write better code this year than I did last. Pushing to be a better developer is a big part of why I am a web developer. I'm actually leaving a job in large part because the senior developer doesn't understand things like composer and fights to publish incomplete code to "get points on the board" as he puts it. That's a no from me, dawg.
Im all for "small victories" and "this is a beta feature" (With substance) But Jesus. I feel for you.
You clearly have no idea what you are talking about. Let me show you the door.
It's one thing to release a beta feature it's another to release something "functional" and just say "we'll come back to clean it up later". In my experience, developers rarely come back to it later. That's the whole point of fixing it now, because it's going to be a problem later if we don't.
Link?
I would use grumphp.
Search is something I have a lot of experience in professionally. If you want "blazing fast" then **Sphinx** is the only option, it has outperformed Elasticsearch and Solr in every real-world use case I've tried at large scale. However, the two named above are still more than capable of delivering high performance that is very close to Sphinx. Sphinx powers things like craigslist and thepiratebay so its pedigree is unquestionable, my own experience can back this. &gt;Lucene in java is so cool - but I cannot use it My question would be why? Lucene is a great choice and one of the easiest ones to set-up &gt;Maybe even something I can add via composer. Then TNT search is the only option, its fast however it's not easy to scale as its PHP based so it would take load balancers and sharding to scale properly and to the best of my knowledge you'd have to implement that yourself. I've tested it up to roughly 100,000,000 records in the real world, it still performs well but I haven't tested it at a large scale like I have Sphinx, Elasticsearch and Solr. &gt;I can enter one whole keyword or just the first letters of a keyword. &gt; &gt;If I am unsure I can type multiple words (whole or starts-with) and shrink results: Any of the above can achieve this using something like a prefix length during the indexing phase then the internal engine or the search will probably use something like BM25 and proximity to get you close. TL;DR Sphinx if performance and scalability is your goal. Elasticsearch if developer friendliness is your priority. TNTSearch if the other 2 options are an absolute no go. It's worth noting Sphinx has a native PHP library [https://www.php.net/manual/en/book.sphinx.php](https://www.php.net/manual/en/book.sphinx.php)
Search is something I have a lot of experience in professionally. If you want "blazing fast" then **Sphinx** is the only option, it has outperformed Elasticsearch and Solr in every real-world use case I've tried at large scale. However, the two named above are still more than capable of delivering high performance that is very close to Sphinx. Sphinx powers things like craigslist and thepiratebay so its pedigree is unquestionable, my own experience can back this. &gt;Lucene in java is so cool - but I cannot use it My question would be why? Lucene is a great choice and one of the easiest ones to set-up &gt;Maybe even something I can add via composer. Then TNT search is the only option, its fast however it's not easy to scale as its PHP based so it would take load balancers and sharding to scale properly and to the best of my knowledge you'd have to implement that yourself. I've tested it up to roughly 100,000,000 records in the real world, it still performs well but I haven't tested it at a large scale like I have Sphinx, Elasticsearch and Solr. &gt;I can enter one whole keyword or just the first letters of a keyword. &gt; &gt;If I am unsure I can type multiple words (whole or starts-with) and shrink results: Any of the above can achieve this using something like a prefix length during the indexing phase then the internal engine or the search will probably use something like BM25 and proximity to get you close. TL;DR Sphinx if performance and scalability is your goal. Elasticsearch if developer friendliness is your priority. TNTSearch if the other 2 options are an absolute no go. It's worth noting Sphinx has a native PHP library [https://www.php.net/manual/en/book.sphinx.php](https://www.php.net/manual/en/book.sphinx.php)
I 100% agree
Try `array_filter` instead. For the callback of the filter, use `preg_match` if the current value matches the array. `foreach` is slower vs `array_*` functions and is an example of Imperative vs Functional programming.
 Sounds good on Composer, and I'm on it. Yeah, kind of think WP is what I'm going for, but not so much for things like a recipe site, personal travel blog, etc. Something that supports redis and horizontal scaling via RabbitMQ out of the box, modular, streamlined, proper packaging and upgrades, easily integrate any theme off the internet within 30 minutes vs. playing around with hodgeposh WP themes, etc. Here, this is somewhat of what I'm gearing for: https://envrin.com/cryptosuite It's honestly a pretty simple design. PHP code goes in /src/, TPL templates in /views/, and package configuration in /etc/. I'll flip /lib/ out of there and into the /src/core/ directory, and maybe rename /data/ to /storage/ in case that's causing anyone confusion. Guess I could move /themes/ into the /views/ directory, and get rid of /tmp/ altogether if that helps make it look cleaner. &gt;&gt; SQL Injection Again, it does use param_ind() same as PDO. Again, if someone using PDO decides to opt out of using placeholders and places the variables directly inside the SQL statement, there's nothing PDO does or can do to prevent that from happening. Nah, I'm blind, blind, and never look at the screen. Laptop sites about 5 feet away to the side, then me with a pair of headphones and wireless keyboard. Yes, a set of full-time eyes attached to a technical brain would be great, but that's about $80k/year, which I don't have at the moment. That's also why there's most likely some design flaws currently in the admin panel, and you don't see any graphs / charts anywhere. Working on it. No, there's no strict rules on naming conventions, or if there is now, that's quite new. There's nothing wrong with all lowercase, and I'm sticking with it. Thanks for your time, and appreciate it.
will look into that, thanks for the pointer
I wonder if other languages round functions do this... I'm gonna check.
Cool! Thanks bro
Whoa, thank you for the gold!
Uh, still forest for the trees. If we stick with that kind of thinking the spider example would bottleneck the network card (and probably DoS the host if it had enough links). There is a place and a way to implement these designs properly; no simple example is going to be perfect. The idea is to get developers thinking how they might be able to take advantage of this awesome new tech. Its a learning process, all of this is a learning process but, if the newer developers have no idea what "it" is then they will never have an idea of what is possible. Getting technical at this level is not just flexing your tech nuts - it ruins the conversation / perception of this awesome community. If you have a more appropriate example to give then by all means feel free to contribute.
Man that is a rabbit hole to dive into. 16 parallel processes would spawn 16 threads. If you have single threaded imagick then it is spawned 16 times and all is well... but multi-threaded imagick might storm the cpu as it spawns multiple threads slowing the entire process down.... &amp;#x200B; I agree on the supervisorD statement + a queue manager like Gearman (my favorite) or rabbitMq etc. I worked (well still work) on a document management system that uses Gearman to process millions of jobs per project (some of the test projects I have ran included 10's of millions of jobs). We used supervisorD on each worker node to manage the PHP &amp; Python workers - it is so solid. I had tried some of the parallel libraries at the time and found that it was just easier to manage the number of workers with supervisorD vs writing libraries to manage the number of parallel threads being spawned. I also like this approach because it is also easier for us to grow wide - need more processing power? Just add nodes. ezpz.
Someone who knows his cores vs threads, nice 👍. I get into arguments with people that should know the difference much to often.
Was one of the main drivers behind [https://gitstore.app](https://gitstore.app) → good invoicing and license management that the maintainer doesn't even need o think about.
I’m curious about the “ridiculous complexity” of phpunit... I find it very simple to get up and running and write tests with.
&gt;I too don't inherently care about FOSS, but it's no coincidence that most of the platforms, tools, frameworks and libraries I use are open source. Open source != free in all situations. Depends entirely on the license.
How about we just remove magic methods such as __get, __set and __toString and instead make code that’s clear and understandable to humans and IDEs.
I use it to catch HTTP 4xx errors &amp;#x200B; `if ((int) round($e-&gt;getCode(), -2) === 400) {` [https://github.com/RubixML/Server/blob/master/src/RPCClient.php#L159](https://github.com/RubixML/Server/blob/master/src/RPCClient.php#L159)
Ummm... No, no it's not. &amp;#x200B; I've been playing with Jenkins just this very evening: installing via Docker, running updates, installing plugins, and playing with the \`config.xml\` and \`build.xml\` stuff... it's not "easy" by any stretch of the imagination.
Well, it did take me a few hours to get everything working. It could be easier to setup and lil easier on the eyes. Lemme know if you are having problems with anything in particular, might be something I already had to solve.
Pretty hard for anyone to build a truly secure website amigo. Your best bet is to use a CMS and keep it upgraded religiously and follow the documentations best practices for security. Out of date software is a huge cause behind many security flaws. There are others of course, but updating software is too easy to not do. Did you know the Equifax hack was caused by software that hadn't been updated? Yuck...
Is this CLI only or can it be run through FPM? I recall pthreads was CLI only.
I know. If it wasn't clear based on context that I meant the same thing in context, then I can say so now.
I'm puzzled about why this is a surprise. The most common methods to implement round is something like this (psuedocode), and its completely sign agnostic. double round (double x, int precision) { return ((int)(x * 10^precision)) / 10^precision; } It would actually be harder and less performant to implement round that doesn't take negative numbers for precision, as you would need to include a check for negative precision and then throw an error.