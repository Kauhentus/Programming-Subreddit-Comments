This is good news. 
Yes, that is the idea. MS wants to support the highest patch version of the major release as older patches likely have known problems not worth supporting when it should be as simple as upgrading the runtime for the application in question. This is mainly a notice to those who maintain build and install tools for their teams. 
Well, you'll be happy then That I added tests to the XmlRpc Project now ... [Reflection ftw](https://github.com/Banane9/XmlRpc/blob/master/XmlRpc/Testing/Structs.cs)
Yup. And as excited as I am about newer version of .NET, it takes decades for frameworks/languages to actually "die". I really hate misleading titles like this.
That's a "enterprise developer" site so you have to figure if it takes you a week to fully test against .NET 4.5.2 it will take them 6 months to get approval to run the same test. &gt; And .NET 4.5.2 is backwards compatible to 4.0, 4.5 and 4.5.1, isn't it? Mostly. There are supposedly some security-related breaking changes, though I don't know anyone who has tripped over them.
Yeah really silly question. Most likely won't reappear on the exam tomorrow anyway. 
Nah NOWHERE else. That is all you're provided with. 
You are free to argue whether or not 20 months is "near", but saying .NET 4.0 isn't going to hit its end-of-life is like saying that Windows 95 is still a viable platform because you saw a machine running it in the back office of a coffee shop.
for A go 8+ (Math.Max((ArrayTotal - 250),0) *.1) Then b 12 + (Math.Max(( ArrayTotal -300),0) *.2) You can do your entire chart with that. 
I assumed that they would be getting an array for each month of usage, like a monthly bill. 
Yep, yep, yep. My workplace is steadily getting more concerned. 
Maths. Artificial Intelligence. Machine learning. After 10 years in .NET programming, those topics is where I am aiming now.
I couldn't say. The only user of my project (that I know of) was poached from a competing project. In my defense, the only developer with commit privileges disappeared from Github and Twitter a year ago, so I ended up just writing my own.
Sorry, I'm not interested in testing someone else's code who has no interest in doing it themselves. Instead I'll find something to work on that actually cares about quality.
Not to mention having GOOD tests makes your code self documented. I can easily go in and see what you were trying to accomplish and possibly look for ways that it could be re-factored, using those tests as a basis that I didn't mess something up along the way.
Yes. It is silly to say .NET 4.5 will be obsolete soon when 5 hasn't been released yet. Just patch to 4.5.2 and you will be good until 2020.
I remember having problems with enums. I had to add a attribute to the service contact ServiceKnownType(typeof(MyEnum))] or a [EnumMember] to the data contract
What.. the fuck. We have to rollback to 3.5 or go forward?? Is 4.0 like the lost episodes of Space Quest? Am I missing something or does this sound like they are trying to cover up a big fuck-up? Or they are keeping 3.5 to support older legacy systems and push everything else forward? 
It said in the article that .NET 3.5 is tied to the Windows 7 and Windows Server 2008 R2 life cycle which are both EOLing in 2020. It would seem then that .NET 3.5 has support up until 2020.
&gt; Microsoft has announced an end-of-life schedule for .NET 4.0 thru 4.5.1. First sentence.
You have 16 months to install the update to 4.5.2. Also pray that you are not using the AJAX control toolkit, because that thing is a bitch to get working with 4.5.
Have you [tried this yet](http://zentityframework.codeplex.com/)?
You've probably gone off to bed already but here's i'd read it: You have an array of 5 months worth of minutes. var monthyMinutes = int[]( 200, 250, 226, 440, 110); Calculate for each month what the cost would be for tariff A &amp; B. // Print header Console.Writeline("Month| Minutes ...... for(int monthCounter = 0, mounthCounter &lt; monthyMinutes.lenght; mounthCounter ++) { // insert computation magic here.. Console.Writeline("|{0} ... } 
Not for desktop. 4.0 will run on Windows XP SP3, but 4.5 supports only Vista and newer.
As stated before, you can't really deal with tampering of the data, but that's ok for testing purposes. Also, you can generate a GUID on first startup, and dump it somewhere (registry, file, ...) and use that to link a player (computer) to a score.
MSDN is all you need.
It's also possible your enums are mismatched between client and server. This might sound silly but without seeing the code it sounds based on your description suspiciously like this could be a possibility. Do you have control over the service? If you are not using a WSDL-generated service reference, one test you can try is handling it as a string instead and parsing it in your contract. For example, create two properties, MyEnum of the appropriate enum type and MyEnumString of type string. Decorate MyEnumString with the DataMember attribute and set the name param to "MyEnum" (or whatever the element's name is). Have the MyEnum property NOT decorated with a DataMember attribute, then have its setter set MyEnumString to value.To String, and the getter to Enum.Parse the MyEnumString value.
Xamarin Starter + a simple Socket. Takes 15 minutes to build.
So hammers are always useless then. Every time I try to hammer in a screw it never works well, I hate those stupid pseudo-screwdrivers.
I usually stay with the latest version so I'm fine in this case but it just seems odd :x but I get it now.
Given that XPSP3 is dead like a doornail, and we're talking a date over a year in the future (which even less market penetration for a OS that's going to be 15 years old when the framework runs out^1), I don't really see a real-world problem^2. [1] At the [current rate](http://www.netmarketshare.com/report.aspx?qprid=11&amp;qpaf=&amp;qpcustom=Windows+XP&amp;qpcustomb=0), XP will have around 10% market share by the end of 2014. Likely less, though, because stuff will break and software won't run on XP soon. [2] Businesses depending on some arcane XP-only-software will have to pay premium for development on old frameworks. I'm fine with that. Business running on non-supported Operating Systems are unlikely to give a fuck about non-supported frameworks, though.
I would suggest getting a Pluralsight account. The do course from Intro to LINQ to advanced LINQ Architecture that should give you all the information you need.
.NET 3.5 is staying around due to the fact is the last version using CLR 2. .Net 4.5.2 is the latest greatest for CLR 4.
MSDN also has some pretty good documentation regarding [LINQ](http://msdn.microsoft.com/en-us/library/bb397926.aspx)
Sorry, it was late last night. It's not just the Status field that isn't coming into my code. The object should contain the Status, ErrorCode and ErrorText (if it's a FAILURE; SUCCESS is just the Status field). None of that is pulling into the ItemResponse class in .NET. The SOAP response in Trace Viewer is like this: &lt;soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"&gt; &lt;s:Header xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;/s:Header&gt; &lt;soap:Body xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt; &lt;ItemResponse xmlns="http://xmlns.****.com/wsdl/eShare"&gt; &lt;Status&gt;FAILURE&lt;/Status&gt; &lt;ErrorCode&gt;0x8102001c&lt;/ErrorCode&gt; &lt;ErrorText&gt;Invalid date/time value. A date/time field contains invalid data. Please check the value and try again.&lt;/ErrorText&gt; &lt;/ItemResponse&gt; &lt;/soap:Body&gt; &lt;/soapenv:Envelope&gt; In the WSDL-generated code, I have: /// &lt;remarks/&gt; [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")] [System.SerializableAttribute()] [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://xmlns.****.com/eShare/")] public enum ItemResponseStatus { /// &lt;remarks/&gt; SUCCESS, /// &lt;remarks/&gt; FAILURE, } [System.Diagnostics.DebuggerStepThroughAttribute()] [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")] [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)] [System.ServiceModel.MessageContractAttribute(WrapperName="ItemResponse", WrapperNamespace="http://xmlns.****.com/eShare/", IsWrapped=true)] public partial class ItemResponse { [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.****.com/eShare/", Order=0)] [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] public ****.Services.ItemResponseStatus Status; [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.****.com/eShare/", Order=1)] [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] public string ErrorCode; [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://xmlns.****.com/eShare/", Order=2)] [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] public string ErrorText; public ItemResponse() { } public ItemResponse(****.Services.ItemResponseStatus Status, string ErrorCode, string ErrorText) { this.Status = Status; this.ErrorCode = ErrorCode; this.ErrorText = ErrorText; } }
I wonder if it's failing to deserialize the `Status` field and so the default value is being used (default value being `SUCCESS`) If you change your enum values to be explicitly `1` and `2` (so there is no implicit `0` value) as such: public enum ItemResponseStatus { /// &lt;remarks/&gt; SUCCESS = 1, /// &lt;remarks/&gt; FAILURE = 2, } That if you ran it again you'd find your `Status` field to be assigned `0` rather than `SUCCESS` or `FAILURE`. (just a guess though as I haven't used WSDL-generated code before; I always hand-rolled my WCF)
Hey thanks for the EduLinq reference. That helps.
Man I absolutely HATE the way school presents problems. I sitting here at work (as a Software Engineer) reading this and my eyes are crossing. I'm sure I could figure it out but the presentation is horrible and creates brain resistance. I would probably fail this exam due to the time constraints. This isn't a programming test question it's a reading and comprehension question tilted towards c# programmers.
I partially feel your pain. I recently had to update an old program, which required opening up VS2003 to see how a library worked. (And it did work, which is why I wasn't going to break it by updating it.) I still use VS2010 for most of my .NET work, so even then I'm not bleeding edge, but it did feel a bit...weird...opening it up VS2003 the other day.
Please note that `IQueryable&lt;&gt;` does not automatically mean it's LINQ to SQL. It can also be LINQ to Entities or something else.
&gt; if I were to learn it all over again: do everything with LINQ. Ask yourself, "can I do what I just did, but using some combination of LINQ operators?" The answer will almost always be "yes". Agreed. I would add: Stubbornly stick with IEnumerable&lt;T&gt; when at all possible. Don't end every LINQ query in ".ToList()" or ".ToArray()".
Use the force to snag a rupee out of reach? Works for me!
You're totally right. 
[Use LinqPad!](http://www.linqpad.net/)
Kind of off topic, but as a C# developer, do any of you find working with LINQ sometimes makes debugging incredibly hard? In an old school for loop, you can step in and see exactly what is going on. A for loop as LINQ isn't bad, but when I start seeing incredibly complex LINQ statements with 5 different parts, I find myself just clicking "step over" and hoping it works. Maybe I am missing something obvious though that makes it a lot easier to debug 
&gt; which can screw you if you don't use tolist or toarray appropriately It also can screw you if you use `ToList` or `ToArray` inappropriately.
You can put breakpoints in the middle of a linq expression. You might have to expand a lambda to do it. For example. IEnumerable&lt;bool&gt; uppers = "aSdF".Select(char.IsUpper); IEnumerable&lt;bool&gt; uppers2 = "aSdF".Select(letter =&gt; { bool upper = char.IsUpper(letter); return upper; // you can put a breakpoint in here })
LINQPad is useful http://www.linqpad.net/ Plug - [PSLinq](https://github.com/manojlds/pslinq) is LINQ for Powershell. Follows similar API. So you can try out the feel of LINQ methods using your console
Exactly, I was just trying to make a counter point to /u/homologicus They are very helpful, and should be used but only where appropriate.
I would happily write LINQ queries and then curse myself while debugging. 
I read something about that guy just a moment ago. Apparently he's an asshole. ;)
Linqpad is great. I didn't get it at first but a coworker is using it all the time and watching him prototype stuff and query databases convinced me. We're actually even running linqpad scripts to automate some stuff on the build server.
Working at the protocol layer like that is quite rare. I wouldn't expect it to get a ton of traffic. There isn't anything original about the libraries. They have been written hundreds of times. Most developers have very little interest in understanding the nuance of implementing an rfc to specification. Most developers need very little beyond Smtp.Send(message); and it never goes beyond that. People who need to do things at that layer of the stack have a specific purpose like bounce processing, antispam, or spam. If they need to solve those problems that will either lean on components that service those specific application needs or roll their own. A guy named Dave has a whole series of components through his company advanced intellect that delivers on bounce processing, message classification that cost - I think - about a grand. I'm not trying to get down on your project. With just a cursory review I can't find where you have any competitive advantage. I'm pointing out the reality of an entrenched niche market, existing free components and a general lack of developer interest at the problem space, in the hopes you can identify something that makes your wares stand out. That said, for 14 years now I've been something of an email guy, so I'll check them out, offer suggestions and try to help you establish a competitive advantage that will bring attention your way. The whole email market is pretty bland. Anything new is interesting to me. Cheers!
One of the best ways to learn Linq is to close your sql management studio and use linq exclusively. 
Ideally, a good Linq query doesn't need to be debugged. Linq is all about composition of functional behavior. Performing a set of operations (functions) over a collection of objects. Take object n, perform foo() on n, perform bar() on n, do the same for n+1, aggregate the results, etc. Most linq methods/extensions you'll use are in the Framework, and if you write your own methods/extensions you'll have good unit tests for them, right? The only time I can recall needing to debug a linq statement was when a particular object in a collection was null or contained a null value. But that wasn't a fault with my query, it was the fault of some class giving me bogus data. It's another great reason to avoid null values - no guard clauses or special logic needed, just pass the object through the query and you'll get the right result.
[Here](http://community.bartdesmet.net/blogs/bart/archive/2008/09/14/who-ever-said-linq-predicates-need-to-be-boolean-valued.aspx) is a good deep dive if you want to understand the "theory" of LINQ. 
Cool. Would appreciate feedback from someone with in-depth knowledge of email. And yea, sadly, I know email is kinda bland... so getting people excited about my projects will likely be difficult. I guess the main competitive advantages my stack has going for it are rfc-compliance and performance. My MIME parser is orders of magnitude faster than any of the other fully managed .NET parsers and actually is comparable to the fastest native C parsers (faster if I use Mono's LLVM JIT backend - although the "warm up" cost of that is pretty high) that I could get my hands on. 
Not sure why this has been down voted as that's exactly how it is in most large enterprises. At my place everything is still .NET 4.0 and there is a massive fear of upgrading due to the fact that the new stuff is an in-place upgrade - meaning that all .NET applications (possibly running into the hundreds) would have to be tested against the new version. Saying it's mostly backwards compatible really won't fly.
I have no idea. Though I do find it amusing that SemiNormal got 9 votes for saying "Did you read the article you posted" to the author of the article.
No, I wrote that article in my sleep so I have idea what it says.
Practice here: https://www.codehunt.com/ LINQ-oriented non-spoiler-walkthrough here... http://www.davidbond.net/2014/05/microsoft-research-code-hunt-walkthrough.html
LINQPad is fantastic. It's also a great as "scratch pad" for testing code. Wanna know what "[x piece of code]" does? But can't be bothered to open a new project in Visual Studio? LINQPad saves the day!
Yeah, I was just pointing out that it could be a consideration for some. I'd be happy to see it die completely. The good news is, I'm only seeing 10% of my site's visitors running XP, and it was 22% one year ago. BTW, the site you linked to - netmarketshare.com - has always had questionable data IMHO. If you look at the Wikipedia page on browser share [1], the NetApplications data comes from them. I'm guessing their data comes from countries where XP is more prominent due to piracy. [1] http://en.wikipedia.org/wiki/Usage_share_of_web_browsers#Summary_table
Take the Pepsi challenge. Go one week with no SSMS. It's what made me a complete and total fanboy.
Holy. Shit. You just probably saved me dozens of development hours as we were writing a lightweight parser for incoming messages to our Exchange server (which were just dropped in a folder). If this little library can parse our stuff, I owe you a beer...hell I owe you several beers. And I would love to contribute if I knew ANYTHING about the RFC's...otherwise all I'm good for is code review.
At least you're honest. ;)
Awesome! Glad my library will of use!
Hrrrm. That might indicate that on the client side, it's not recognizing the `&lt;Status&gt;&lt;/Status&gt;` XML tag. Is it possible for you to send an outgoing message from the client-side out and inspect the serialized XML it's generating? I find that's the easiest to see what's mismatched between what the client and server are producing.
haha no trouble, thank you for your suggestion!
 rupees .OrderByDescending(r =&gt; (player.Position - r.Position).Length()) .Take(1)
I didn't reply to anyone, but I updated my original post earlier. It was a namespacing issue in the response that I managed to get the developer to fix.
You can right click on the lambda and set a breakpoint (via Breakpoint -&gt; Insert Breakpoint) or use F9 while the text cursor is in the lambda.
One sad thing to note about LinqPad is that it still uses Linq2Sql, which for the most part has worse support for translating LINQ to SQL compared to Entity Framework. This becomes more apparent as your queries get more complicated. (I have seen a few rare cases where Linq2Sql handles a query better than EF in whatever application.) Still, it's an amazingly helpful tool that takes a lot of the pain out of querying SQL databases.
As has been stated in other threads, "guaranteed not to be atomic" makes no sense, or at least is not different from "not atomic".
Doesn't make a difference. 4.0 assemblies execute on a 4.5 system without changes.
Yes, but it's more important what it is in machine code as generated by the JIT compiler. Also, depending on the situation x += y can be translated differently into IL.
since this is the one you didnt finish, of course this will be on the exam :P is this a beginning course? BUT, im pretty sure you are being asked to come up with the minutes per month on your own. but for sake of argument, lets go with 280 all the way down. your Monthly A column will remain 11 all the way down, and your 5 month total will increment by 11 each row. Same for B, except 12 and by 12. you said the answers are on the back, i'd love to see the answer table.
Are you able to download/use a more up to date version of Visual Studio, even express editions? http://msdn.microsoft.com/en-GB/library/dd264733(v=vs.100).aspx
.xlsx is just a .zip file with XML files inside, but don't read these yourself; only tears can result. &gt; However I am seriously struggling to find a way to do this without downloading an external library? Why not? If you use nuget it would be quite simple as it would be part of the build process. I have **written** Excel files with [EPPlus](https://www.nuget.org/packages/EPPlus/) with great success, and it can read Excel files as well. If you still don't want to use an external library you could use a [database connection](http://stackoverflow.com/questions/15780463/reading-excel-xlsx-file-in-c-sharp) but I would advise against it. It's error prone and it may require setup on the target machine.
unfortunatley not we are not updating for atleast 2-3 months and I am limited on what i may download.
The problem is downloading is not something I should really do however if I can show them how difficult it would be to do this without downloading something external they might change their mind. Apparently i should do it with a database connection but I dont really see how. Im reletivly new to c# and everything I know I have taught myself. so many tears are beeing shed already. thanks for the link I will see if I can make heads or tails out of it. :]
The XLSX format came out quite a bit after .Net 2.0 I would think, so unless you use a 3rd party library, you're going to have a bad time. Have you looked into moving the data directly into Oracle using a VBA macro in the spreadsheet itself? 
If I was tottally honest with you i did not even know what a VBA macro was until you posted this(cheers and ty google too). Currently the way we do things is by using CSV files and importing them into temporary tables to the oracle database, and then writing ORacle commands to move them accross tables. However this is horribly ineffective since it only deals with single spreadsheet tabs and can only do 1 file at a time, not to mention it is slow. Might be worth mentioning that our microsoft office is 2007 and i dont know if it even supports VBA macros.
Use oledb to pull the data off the sheet. All the oledb code looks just like the sqlclient code. There's plenty of sites that will tell you the connection string for xslx. 
Can't you convert the xlsx to csv and import to Oracle?
&gt; You can't read excel spreadsheets with a database connection, that's nonsense. Erm, yes you can. What about Microsoft JET? http://stackoverflow.com/questions/16362703/how-to-read-xls-file-using-oledbconnection-class-or-anything-else
Yeah I had the question on the exam. Just made up the minutes on my own! Lol
It can be LINQ to anything really. As long as the consumer knows how act upon the expression tree. Allows for a lot of extensibility. 
Yeah, it requires the Access Runtime, either [2010](http://www.microsoft.com/en-us/download/details.aspx?id=13255) or [2013](http://www.microsoft.com/en-us/download/details.aspx?id=39358) are probably what you want. I think they can be installed as part of Office too but I'm not sure on that. Either way, the requirement to not use a library is silly. I know there are situations where you have to operate that way, but the amount of code you'd have to write without a library, or these runtimes is too high to make sense in all but the most extreme cases of paranoia.
Without an external library? Create the databases by hand and then use the CONCATENATE() excel command to construct your inserts. Ex: CONCATENATE("INSERT INTO [table] VALUES(A1, ", '", B1, "', ", C1, ") Where A1 and C1 are unquoted values and B1 requires single quotes to insert.
Normally, you'd use the OpenXML API from Microsoft to read those files. I've done this, and trust me - you don't want to code it. It's horrible. You'll come out ahead if you buy a 3rd party library, like the one from Aspose. Expensive, but ultimately cheaper than your time. Regarding OleDb -- running on a 64-bit OS is not a supported configuration, it's 32-bit only. Yes, you can install 64-bit MS-Access and get the drivers, but it's not supported by Microsoft. 
Well, the biggest parts are trying to get the data out of Excel. Given your constraints, which obviously are pretty major, I'd go down one of these routes: * Find a XLSX reading library that you can paste it (not great, but an internal project might allow it) * Use COM to pull it out * Crack open the file via zip * Paste in a zip library to let you do that (way too many projects did this) * Use p/invoke to call the operating system to get to the zip * Once you get it, use the built-in XML reader stuff to parse through it and build up a memory model I presume connecting to Oracle isn't that hard, given a connection string.
Convert the files. You can use c# to open the excel files and convert them. It's not ideal. CSV is probably your best bet? From there, you can parse the data. It's a hacky way to do things, but it can be done. But I'm just going to say: use a library.
Only problem with that would be: if the player used two computers, it wouldn't work. I guess I can't really avoid accounts, even if it is a basic implementation. Thanks :)
I guess you aren't aware that you can add a connection to your strongly typed EF data model and context? http://www.linqpad.net/EntityFramework.aspx Even better, you can view the resulting SQL generated by the query. 
I was aware of that feature, but I wasn't under the impression that this made LinqPad actually use EF. I thought it just picked up the object model. I can't remember where I got that impression. It makes more sense for it to actually use EF though. I'll have to try that sometime.
**End-of-life schedule announced for .NET 4.x** But my headline doesn't instill fear and will get less traffic.
Using Excel interop is definitely not the preferred way to go. It requires Excel to be installed on the machine running the code. I also dunno if it's changed from earlier versions, but the interop code actually has to run an entire instance of Excel to work. 
Which tool are you using to test the wcf service, if you don't mind me asking?
You are correct, from my existing experience of using the office interop, which was some time ago now, the office app you are coding for has to be installed on the machine executing the code.
haha, that happened to me every time.
Use the LINQ to Excel Nuget package and forget about these crazy interops. You can then read it into memory and insert into your database.
NuGet is a package manager that Visual Studio has built-in support for. We use it at work to solve dependencies between different projects and to use common libraries. They should have a pretty good reason to expect a developer today to not use it. It's really easy. Right click on the project in Solution Explorer and select Manage NuGet pacakges. Search for EPPlus and select Install and you are all set.
Post your code for the async/await that just waits 30 seconds. If you're not using it correctly you will still lock a thread, even though you are awaiting something. I could be wrong, but if I remember correctly because IIS uses a single thread to accept a request and expects ASP.Net to return a response on that same thread, no matter what you're going to use up 1 thread per request. If you spin up another thread within a request and use await on that thread, that thread may be shared by other incoming requests.
SQL Server Import/Export tool?
IQueryable allows extensibility. Not LINQ.
Great wee read :) Javascript gets a lot of hate but for some reason, I find it interesting and fun to code in - even when c# is my primary language.
It's interesting. I am an always learning newbie, switching languages on monthly basis. I've tried loving Javascript for the same reason. It reminded me when I first started coding, because I had plenty of "what the hell moments". Some of the things were interesting, mostly because the language felt so "raw" so I felt like a newcommer again. What I disliked more was the experience with browser/DOM. Two weeks ago I jumped back to Scala and I was smiling throughout reading the whole "programming in scala" book. The experience is completely opposite, the language felt like a bag of smart decisions, instead of the other end of scale. I don't know, I can't hate javascript, it's interesting for sure, I liked TypeScript but stil. Any project larger than simple scripts would probably drive me crazy.
Can this handle NDRs by the way? Or do I need something different for that?
Do you mean a DSN (Delivery Status Notification)? Yes and no. MimeKit can parse the MIME itself, but does not have any special handling for DSN's. IIRC, the format of a message/delivery-status MIME content is basically just headers, so you could just try to parse the content as a MimeMessage (ignoring everything but the Headers once its parsed) or as a MimeEntity (and do the same). Perhaps I can add a convenience API for simply parsing headers on my MimeParser class. Update: Just added MimeParser.ParseHeaders() and various HeaderList.Load() convenience methods to load a HeaderList from a stream or file path. What this means is you'll be able to do something like this: var message = MimeMessage.Load (fileName); var status in message.BodyParts.FirstOrDefault (x =&gt; x.ContentType.Matches ("message", "delivery-status")); if (status != null) { using (var stream = status.ContentObject.Open ()) { var headers = HeaderList.Load (stream); // read the DSN key/value pairs from headers } } I'll probably make a new NuGet release on Sunday night or Monday morning (my usual release day).
Javascript is fun in small doses, but when the functions become overly large and start doing complex things, it becomes very unwieldy. It's greatest strength is also it's greatest weakness, it's very unstructured and almost entirely dynamic. What I'd love to be able to see one of these days is a programming language with the object oriented structure of C# with the dynamic properties of Javascript. I'd love to be able to add properties to a class during run-time.
Agreed. I feel like the dynamic nature makes large projects difficult to maintain, especially when the requirements change drastically. I've really wanted to learn some TypeScript though. Even if it just compiles into Javascript, it looks like it gives a few basic things like classes that would organize the code better.
It's easier for me to still just load it as a full message and do some analysis. I guess I was concerned whether or not it would be able to handle a bounce from, say, our Exchange server. That's all! That's awesome though about the convenience methods. Thank you!
No mention of JSON? That's my favorite part of JavaScript. XML is great, don't get me wrong, but I love me some JSON. I mean, MS even added it to .NET: http://msdn.microsoft.com/en-us/library/bb410770(v=vs.110).aspx
C# has that capability, you just have to get comfortable with reflection and anonymous objects. 
typescript? 
To verify that the SOAP request/response was valid, I'm using SoapUI. I'm actually consuming a web service through an Oracle Service Bus. I think my title mentioning WCF is actually incorrect, but that's ok :P
&gt;functions become overly large That shouldn't happen in any language, JavaScript or otherwise.
Is there anything new happening in this project? Because it's really old already.
No problemo. Have fun implementing! :-)
[Elo](http://en.wikipedia.org/wiki/Elo_rating_system)? Not sure why this was posted in /r/csharp though.
Create a bindable property for each listbox, something like SelectedCustomer or whatever it is the collection contains. Then bind this to the selected item of the listbox... &lt;ListBox ItemsSource="{Binding Customers}" SelectedItem={Binding SelectedCustomer}"&gt;&lt;/ListBox&gt;
Just think of something really simple that you could index and search on. Start up a new mvc project using Bootstrap. VS 2012/2013 default to Bootstrap I think and include the js/css for it including having some starter controllers, views, and models with data annotations. I found the pluralsight videos to be decent resources to learn the basics but there are some good tutorials on the Web as well (this one looks good http://www.asp.net/mvc/tutorials/mvc-5/introduction/getting-started) Mvc is fun to learn and you can pick up on Bootstrap at the same time which has an excellent reference website as well. Start with a basic index view for listing your data and an edit view for creating or changing records. You can take it a step further and use entity framework for accessing your data and throw that into a WCF service that you would make those calls from to keep your mvc controllers lightweight. 
Thank you, I didn't know where else to ask.
I'm not really sure, but I think you need twoway binding for a selected item: &lt;ListBox ItemsSource="{Binding Customers}" SelectedItem={Binding SelectedCustomer, Mode=TwoWay}" /&gt;
Consuming XML/web services is always quite rewarding. Have a google around for things like "public data" and you can get all sorts, I even found a live XML feed of traffic conditions for my country doing this.
I've had a go at trying to fix it, but as AngularBeginner said, you haven't exactly made your question clear so I have no idea if it does what you're expecting. using System.IO; // What are the File and SavePath objects? If they're already strings, why are you casting them? using (var myFile = new StreamReader(File)) using (var fileWriter = new StreamWriter(SavePath)) { // I'm assuming you're trying to iterate every line, in which case you can do this with a foreach. foreach (var line in myFile.ReadLines()) { // Unless you need access to myLine outside of the for loop, it can be defined within it. var myLine = (line == LineToChange) ? "Change Line to this" : line; fileWriter.WriteLine(myLine); } } // Don't close myFile manually, the using statement will take care of that. 
I believe you can use "Microsoft.Office.Interop.Excel" (Add reference to project, browse the COM library section) so long as Excel is on the machine you're programming on (sounds like you're in a business that has these sort of things installed but are restricted from downloading stuff yourself). I used Interop Excel as one of my first projects in a job and it really wasn't fun but I did learn quite a bit. My main resource was [this StackOverflow answer](http://stackoverflow.com/questions/9478351/how-to-export-excel-from-dataset-or-datatable-in-c) as the code was close to what I needed. Using this library I was able to read sheets and produce new ones based on database information.
JavaScript is fundamentally different then every major programming language, which makes it absolutely terrible for the minds of beginners. Couple that with the bizarre and incomprehensible DOM API's, major limitations of the browser, and the entire community disagreeing on standards/best practices/everything else...It's a terrible way to learn programming. Akin to learning the basics of human sexual interaction from *Fifty Shades of Grey*.
This looks perfect! Let me give it a try. I think its exactly what I need. I didn't know you could use the 2 using statements right on top of each other, but I never tried it. 
The code does work perfectly *if* the "if" statements are not used. It does exactly what I want it to do. I'm sorry about the formatting, I was unaware that it was that big of an issue. I didn't want to copy and paste the code, as it would not make sense out of context the way it is written. I was just wondering about the general theory of sb.AppendLine() and why it wasn't working in my if statement, so I just typed it in, and since tab doesn't work in the editor, I didn't know how to indent lines. I'm also not sure that it takes that much of a stretch to understand what I was going for.
Also, just started a massive processing project here at work. Probably got several hundred thousand EML files to process. No issues so far; your library has been flawless!
haha, I was in the same boat. I picked up RoR, then tried to do nodejs, django. Then I got a job and was forced to use .NET and I love it. That was over a year ago and I got another job since then. I've built some cool stuff. My current job made me learn Typescript, Angular, Kendo UI, .NET, WCF (scratching the surface here), Android/Java, and we might pick up iOS app dev. I always would switch languages, but once I was forced to use one to build a solution, I instantly became a better coder as well. Now I know the patterns and I am going to pick up RoR with a purpose to build something.
I'm not a complete beginner. I've written simple 5+kloc apps in number of languages and I understand the differences(prototypical inheritance etc). I was not using it to learn the roots of programming. :)
You can just use 4 spaces instead of Tabs.
I'll be sure to indent next time.
Just tried it out. Got it to work. Phenomenal! I am going to use the ? operator all the time now, it's super helpful. I did have to change a couple of things. LineToChange is actually an integer of the line I want to change so I had to swap out LineToChange with the actual string I wanted to use. In order to do this I had to make the var line a string instead. That means that I couldn't use myFile.ReadLines(), but rather create a new string for the file. with string myfile_string = System.IO.File.ReadAllLines(File); foreach (string line in myfile_string) ... Again, I might be sloppy, but it does what I want it to. Thanks again for your help.
No, I meant that JSON is (almost a subset of) JavaScript, not the other way around. Other than the exception that /u/AHKWORM mentioned, you can copy and paste JSON into a JS interpreter and it will work. You can't copy and paste JS into a JSON file and expect that to work. JSON not supporting comments doesn't mean it's not a subset of JS.
I recently purchased resharper and have probably doubled my LINQ knowledge just from the suggestions. I can't go without that tool anymore
Holy crud this thing looks awesome! (closing SSMS now)
Oh, ok. I'm just mad that JSON can't have comments yet people think it is a good data structure for config files.
I'd rather prefer a hosted ElasticSearch solution in Azure... But ok, not a bad developent... They also provide a SDK to query with LINQ.
It's just MongoDB i dont get the difference, even the colllection/user structure is identical. Both are NoSQL and using Json.
Yes, but *this one* is made by Microsoft. Ergo, it's better. Because Microsoft.
After seeing this, I think our dba smokes weed.
This one is usable because it has a real querying mechanism. Have you ever tried to query anything of significance in mongodb? It's nice to be able to easily store data in a database, it's also necessary to be able to get it out again. 
If you're writing complex queries maybe a document DB isn't the way to go...
Seeing how stressed our dba is I'd pity the man for abstaining. 
I always try writing code when I'm drunk. I usually spend the next day trying to figure out what the hell I was doing.
There's no async Mongo C# driver.
This was also announced: http://azure.microsoft.com/en-us/services/search/
Marijuana made you use the SQL Management studio? Omg! Never do drugs!
I don't have time to contribute, but I am absolutely fascinated with AR. What I want to see are fully enabled augmented reality glasses. Microsoft was supposed to be close to having these for the Xbox, and they are buying up patents for AR glasses like crazy (just in the last few months) -- but still no products. I ordered the new Oculus Rift dev kit to try some stuff I want to do, but VR is (in many ways) a far narrower field (mainly gaming) and has potentially crippling issues (inner ear/latency). AR, on the other hand, could impact every moment of our day, eventually. Augmented Reality will replace the way we interact with computers and the world. It will meld technology into the world far deeper than anything before - even smart phones. No more monitors or tying computers to desks -- just a pair of glasses + the cloud. 
That is correct. I'm not sure what the default binding mode is, so setting it to TwoWay just to be sure doesn't hurt.
You have to be *just* the right level of drunk.
Here's a quick primer on the differences between docdb and mongo http://daprlabs.com/blog/blog/2014/08/22/azure-documentdb/
The [Ballmer Peak]( http://xkcd.com/323/) 
[Image](http://imgs.xkcd.com/comics/ballmer_peak.png) **Title:** Ballmer Peak **Title-text:** Apple uses automated schnapps IVs. [Comic Explanation](http://www.explainxkcd.com/wiki/index.php?title=323#Explanation) **Stats:** This comic has been referenced 328 times, representing 1.0607% of referenced xkcds. --- ^[xkcd.com](http://www.xkcd.com) ^| ^[xkcd sub](http://www.reddit.com/r/xkcd/) ^| ^[Problems/Bugs?](http://www.reddit.com/r/xkcd_transcriber/) ^| ^[Statistics](http://xkcdref.info/statistics/) ^| ^[Stop Replying](http://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=ignore%20me&amp;message=ignore%20me) ^| ^[Delete](http://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=delete&amp;message=delete%20t1_cjxdl8p)
Exactly! :)
But now it is. 
I always seem to just slip by the right level of drunk and slam headfirst into stupid drunk. Luckily I've never work on anything important drunk.
I just stay sober ...
[Sando search tool](http://visualstudiogallery.msdn.microsoft.com/06f39a31-20ce-408c-afee-8a02b484db1c) more or less does this I think.
is Lucene.net still being developed? the last release was sometime in 2012
I have been watching it closely, as I use Lucene.NET to implement Sando. I have seen commits in the 4.0 branch very recently. I have seen discussion list emails saying they expect to release a beta sometime "this summer", but when I tried to compile the 4.0 branch there were still a significant number of classes missing (i.e., that still need to be ported from the Java version). So, I think it is still active, but 4.0 might arrive more like end of year.
Absolutely right, Sando does this (and we just released a new, more performant version of Sando yesterday). However, my long-term vision is for Visual Studio to incorporate this kind of search directly into the IDE. My concern is, when I release Sando as an extension, that only a few developers benefit. If something was included into Visual Studio itself, it would benefit a much larger set of developers.
I don't drink to code. I just sometimes code when I drink.
Seconded
Typescript + Require.JS makes it really easy to keep things clean and modular.
Drugs are bad hmkay.
Awesome! I'm glad to hear things are working well.
Do you think the work would justify the gains? (I have no perspective on the work this would take, or the performance gains when searching) It looks like you're familiar with Lucene, perhaps benchmarks might be an appropriate way to make your case?
This is simply too much. You have to start smaller. Just do the first point. Don't even think about anything else. When that works, move to point 2. Don't try to make 1 in such a way that it'll be easier to add in something in the future. Just do point 1. You need a database. If your employer has SQL server set up somewhere, great, use that. If you're installing all this on your local box, use sql express or mysql or some other cheap solution. You're not doing anything that needs advanced features. Don't worry about client-server or n-tier or any fancy architecture. Make a windows app that works. That's all. Then throw it away and do it better using the knowledge you gained doing it once. Then add another feature. Continue until it does everything it should and 3 things it shouldn't. Then start over. And for fuck's sake, keep it simple. Make it work. Make it as simple as possible and do nothing it doesn't have to do. Then, once it works, once it's a tiny bit useful, add to it. 
You make good sense. My experience level is *very low* at this point, so perhaps that is the best way to go about things. No amount of videos or books can take the place of me actually getting in there and trying to do some simple things. Given what you've said, and since I already have SQL Server Express installed, I'll mess with that and then work in using LINQ. Thanks!
As a side note, http://github.com/ is full of projects (for free!) that you can clone and muck around ! Just sign up, explore, and read.. btw, the cloning is called 'Forking' :)
&gt;Create a database of all staff members and their employment info. There probably all already in LDAP (AD) use that, its what its there for... If you're scratching your head or looking up ldap/ad you're not ready. I'm only being so harsh because I'm absolutely tired of shit software made by people who have no business making software. 
Cool, thanks!
Not harsh at all. I'd rather hear the reality. I I agree with you about poor software design. That's part of the reason I want to study, practice, and learn to be better. There are so many hacks who are just coding-by-exception, and it shows. I want to put the hard work of gaining experience and solid skills in first before saying "hey, look at what I made," to the public. Using LDAP is a great idea, although my company does 90% of its operations on paper, so there is no AD service or domain anything like that. I'm lucky there are actually computers there lol.
Honestly, LDAP/AD is a big assumption for many places. In my company (not a small company) it has only been recently that every employee actually had an account with info in it. Most were shells that were useless for anything other than noting an employee with that ID existed. And every time we acquire a new company it usually takes a year or two to get everyone there into our system. So anything that uses employee info has to be able to handle either a manual database entry or AD. I will be glad when our 2008 upgrade is complete next year because we are forcing it on everyone then. 
There are many things like you said that will change as we start integrating it to our lives its the internet of everything that Intel and all of them have been saying for a while. You also happen to see what it can do I'm working with an OS designer right now that is helping in making things feel ergonomic for interface that can change around us. We have been seeing it as everything is an "app" in the surrounding environment and you have the choice on if you interact with the objects.
I would consider myself experienced and think simple and iterative is still the best way to go about things. 
And why is that, for a database-connected GUI application? Sure there's another way, there always is – but this is by far the most convenient way.
Not for a 2nd year CS student that is trying to learn C# it's not. Wtf? "Another way" ... how about starting with the plain jane way before start tossing in all the extras and calling it a "need"
I'm also a second year CS student. OP said he knew Java and the basics of C# – and there's not much else to it. You know how to create a class? You know how generics work? You're good to go. There's an abundance of tutorials for the rest. Do you know what pays my bills, rent and food? The three things above. When I started my job I was thrown in the cold water, had never heard of and/or used these three. You *can* start by making SQL queries, reading them, adding elements to lists in a foreach loop, what have you, yes! But why not learn it right the first time?
Fuck you and have a nice day.
Forgive my ignorance, but could you be more specific about what you mean by that?
This type of thing is usually done using the [curses](http://en.wikipedia.org/wiki/Curses_\(programming_library\)) library. Googling around shows there's a C# wrapper for it: http://sourceforge.net/projects/curses-sharp/
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Curses (programming library)**](https://en.wikipedia.org/wiki/Curses%20(programming%20library\)): [](#sfw) --- &gt; &gt;__curses__ is a [terminal](https://en.wikipedia.org/wiki/Computer_display) control [library](https://en.wikipedia.org/wiki/Library_(computer_science\)) for [Unix-like](https://en.wikipedia.org/wiki/Unix-like) systems, enabling the construction of [text user interface](https://en.wikipedia.org/wiki/Text_user_interface) (TUI) applications. &gt;The name is a pun on the term “[cursor](https://en.wikipedia.org/wiki/Cursor_(computers\)) optimization”. It is a library of functions that manage an application's display on character-cell terminals (e.g., [VT100](https://en.wikipedia.org/wiki/VT100)). &gt;==== &gt;[**Image**](https://i.imgur.com/jKrZcHa.png) [^(i)](https://en.wikipedia.org/wiki/File:Fmli_lu.PNG) --- ^Interesting: [^Ncurses](https://en.wikipedia.org/wiki/Ncurses) ^| [^Terminfo](https://en.wikipedia.org/wiki/Terminfo) ^| [^CDK ^\(programming ^library)](https://en.wikipedia.org/wiki/CDK_\(programming_library\)) ^| [^PDCurses](https://en.wikipedia.org/wiki/PDCurses) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cjy6490) ^or[](#or) [^delete](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cjy6490)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
Except his title is roughly the same length as yours. Depending on what you count, his is one word (or two syllables) longer as read.
Try [this one](http://www.charlespetzold.com/dotnet/) from Charles Petzold, or Mr. Windows as he's better known. It's even free.
It'd be nice if it could produce some stats/charts similar to github's...
Try http://www.reddit.com/r/dailyprogrammer. The challenges are a good way to try different concepts when you are learning a new language. There is also stuff like https://github.com/CoryFoy/DotNetKoans or https://github.com/jtigger/csharp-koans that you might find useful.
Sure no problem. Typically when you have a list of features that long something the user/customer wants or needs will change. It's much easier to deliver your software as you complete a feature. This encourages you to code the most valuable functions first and to start small and build more as you go. Also seeing something tangible that works keeps you motivated. Sometimes you can show this for lack of a better word prototype, to your clients/customers/users and they will say "wow this is great, forget those extra things can we have this now?" And yes they can because what you have works, and you have just saved yourself a lot of time and made clue t happy. Win win. Does that clear things up a bit? 
Check out FacetFlow. We are using it right now and it's working fine. It may be a bit expensive for what you get, and we have plans to migrate to this offering as soon as it's out of beta.
It does indeed. Thank you so much.
Fixing the error in his, here are the comparisons for the words people actually see: end .NET 4.0 near End-of-life schedule announced .NET 4.0 Generally speaking, words that you traditionally don't capitalize in a title don't count against you. **** Commas help too. Consider this recent headline: Oregon sues Oracle, claiming fraud over failed Obamacare website Readers will often see that as just "Oregon sues Oracle". If that catches their attention, they'll skip the rest of the headline and start reading the actual body of the article. If they are borderline, the next phrase will make or break it. And this is just basic headline theory. Back in the days of print they would have professionals who did nothing but write headlines who knew far more than I ever will.
I did. Complex queries on dynamic table (that's why I chose MongoDb in the first place) that has 1.5m+ records. Ordering is super fast, substring (%LIKE%) is like 3-6 seconds. Me and client was pretty pleased with the result. Are you implying that in DocDb I could also store dynamic data (no schema) and could get better results?
It looks very nice. I have a thing for compilers. (down with -&gt;, =&gt; fat arrow for the win :D) The following syntax looks a bit "magical" (to me, anyway): fun where(list, filter) -&gt; [x : x in list, filter(x)]; the comprehension [x : x in list, filter(x)] how about [for x in list if filter(x)]; and fun select(list, transform) -&gt; [transform(x) : x in list]; could be fun select(list, transform) =&gt; [ for x in list yield transform(x) ]; I don't like the name "Mond" (World?). Just my honest feedback, looks cool nonetheless!
I don't think I can do much about the list comprehension syntax without making it a bit redundant. You would write `select` like this instead: ``` seq select(list, transform) { foreach (var x in list) yield transform(x); } ``` I'll play around with some different syntaxes and see if I can come up with something a bit more clear. About the name, if anyone has suggestions, please share!
[Mond with that capitalisation is German for moon](https://en.wiktionary.org/wiki/Mond), [probably quite apt for a scripting language](https://en.wiktionary.org/wiki/Lua#Etymology).
Yeah, do a few RosettaCode entries in your language
Great point. I'll definitely be doing this very soon. 
I read it as "Monde", my mistake. Apt, but doesn't really sound good in my opinion. :)
If any of you enjoy `IEnumerable` as much as me, check out how I [handle input in the REPL](https://github.com/Rohansi/Mond/blob/224ac36bb9b2068b69293c9966de39228b406c71/Mond.Repl/Program.cs#L90-L120).
A few things I'd love to see... 1. Function definition without the "fun" keyword. Eg. var add = (a,b) -&gt; a+b 2. A way to define objects with a custom property lookup function. 3. Support for optional type annotation/containment 4. A very basic ide 5. A priority queue available out-of-the-box 
They're all anchored top left though 
1. I haven't actually thought about that till now. It should be fairly simple to implement. 2. Like [Lua's metamethods](http://lua-users.org/wiki/MetatableEvents)? I want to be able to do some of these in the future. 3. Probably not going to happen. 4. Definitely. What features would you expect from one? 5. I don't think that's up to the language to provide. Might be fun to write one for it though.
1. :) 2. Exactly. Or ES6 proxies. But defined simply as a function that takes a key and returns as a value. 3. I was thinking like python function annotations or using a simple type checking keyword that an ide could look for. The word 'expect' seems like it might work. Eg. expect arg1 == array. It's for the IDE intellisense, not static checking. 4. Syntax colouring and intellisense. For a scripting language the question about how easy it is to embed always comes up quickly. 
[Just finished implementing #1](https://github.com/Rohansi/Mond/commit/6a63e390cc153d2722ac31803b55bfce299569c2). Literally making Mond less fun. 
*The compiler is always right.*
If Kerbal Space Program ever gets a scripting language, they should call it *Mun*.
3-6 seconds? Ouch. I'm running 1.5 million rows through SQL Server Full Text search on a crappy dev box and I get yelled at if my substring queries take more than 500ms. I'm hoping to get a real database server before we up the load to the whole 150 million. 
Just like Lua then.
This is absolutely not true. Compiler bugs are not uncommon. Just most of the time it's the humans fault.
[first](http://i.imgur.com/whorfX4) [second](http://imgur.com/sHqzzR3)
Nice. Will give it a twirl during the week. Can a sequence be defined without the 'seq' prefix too? ie. Does the parser recognise the use of a yield instead of a return statement? I'm hoping so based on the 'Types' page on the wiki making it look like both would be a 'closure'. I'll have a look at how you've implemented your prototype support too. If it can be refactored so that it can be overwritten on an object-by-object basis item two above might be reasonably easy. I know you're not keen on annotations, but I thought I'd share where I ended up mentally leaving the issue anyway... var divide = (a as "The numerator", b as "The denominator") -&gt; yield a/b as "The quotient resulting from dividing a by b" ie. the 'as' keyword is used by the IDE only. The string after the 'as' is used as the variable descriptor in the IDE. Kind of like an inline comment. Eventually people will end up using each other's functions. Perhaps you're expecting a more typical annotation approach using structured comments. An alternative or supplement might be to allow for the use of the keyword 'annotate' so that you could write... var divide = (a,b) -&gt; yield a/b annotate divide as "The quotient resulting from dividing a by b", a as "The numerator", b as "The denominator" With whitespace based list recognition this could happily sit across multiple lines. Again, ignored by the 'compiler' but recognised by the I also wonder, can the 'var' declaration within a for loop be inferred where that variable has not been previously defined? I'm just thinking of beauty and terseness of syntax. Similarly, can a standard 'for' and a 'foreach' both be declared using the 'for' keyword since only one is followed by use of the 'in' keyword? In this instance I'm thinking that the less keywords the easier it is to learn. I love that you've included a pipeline operator, although I do like the look of the f# &gt;&gt; syntax over the |&gt; syntax that you've currently used.
I know, it's just what's generally said :P
How about this? //use of yield during an assignment results in an array var result = for x in list yield filter(x) or //use of yield during a function body or lambda results in a sequence var select = (list, filter) -&gt; for x in list yield filter(x) If you needed to you could perhaps just look for the sequence "= for" in the parser to support the distinction between the above? Now the question for me is whether the following could ever work... var result = for x in list yield map(x) &gt;&gt; filter(x)
I definitely think that having the files in the directory be the files in the project is a good default. Requiring an explicit list of files is a mistake.
AFAIK full text search is different thing because it only supports substring. My queries are usually something like this: -- Pseudo query SELECT * FROM whatever WHERE ArchiveId = 2 AND DateCreated &lt; 24.02.2011 AND Course &gt;= 3.14 AND IsAvail = true AND PoId LIKE "%A4HZ%" ORDERBY PoId DESC I'm not sure you can do this with text-search. Also, doesn't MongoDb text-search works based on dictionary? My words in database are not words at all, they are just random strings.
The SQL Server FTS equivalent is simply... SELECT * FROM whatever WHERE ArchiveId = 2 AND DateCreated &lt; 24.02.2011 AND Course &gt;= 3.14 AND IsAvail = true AND CONTAINS(PoId, '"*A4HZ*"') ORDERBY PoId DESC I use FTS on both random strings (really alphanumeric codes) and normal words. I was actually surprised to learn how much faster it is than normal LIKE expressions. 
Thanks.
And what db are you using? Also MongoDb? I guess I was wrong and thought different about fts.
SQL Server.
Oh but yeah, I can't use it because I have to be schema-less since those fields (like IsAvail, DateCreated, etc..) are dynamically created by user. EAV is even slower.
It's weird that .NET 3.5 is now considered "legacy" to some. Makes me wonder what the 30+ year old main product my company sells and maintains, written for THEOS Corona in it's special dialect of BASIC would be called. "Legacy" doesn't seem to go back far enough. I am grateful that I don't have to work with that source and make changes, because all the comments were stripped ten years ago too. Our new product intended to be compatible is written against .NET 4.0. Doom &amp; Gloom arguments about .NET 4 and Windows Forms don't hold much weight when you are already maintaining a product that is 3 decades old, because by and large customers don't really seem to care about having the latest whizbang framework.
I just wonder how you'll achieve the "add as link" method then. Symbolic links? They're a pain in the ass in Windows and can't be committed to source control.
If you want as as link you can always say without these and with these extras as exceptions to the default.
I think it's just the default that has changed. By the time they release this it will probably be possible to exclude files, create links, etc.
Mongo C# drivers promised to be fully async by the end of this year tho.
I never understood this. When I drink even a little I just want to relax and do nothing. How can one code being drunk?
What's so painful about mklink?
You always have to look up the syntax and open the console. Also you need to specify the exact path. And you **can't add it to source control**.
First of all, please pay attention to properly format your code in reddit AND in your file. Here is the code properly formatted: using System; using System.Collections.Generic; using System.IO; using System.Linq; using System.Text; using System.Threading.Tasks; namespace Read_Text_File_While_project { class Program { static void Main(string[] args) { StreamReader myReader = new StreamReader("Values"); string line = ""; while (line != null) { line = myReader.ReadLine(); if (line != null) Console.WriteLine(line); } myReader.Close(); Console.ReadLine(); } } } Next: What is a `FileNotFoundException`? FileNotFound translated means.. well... your file was not found. So why is this happening? Looking at the documentation for `StreamReader` (http://msdn.microsoft.com/en-us/library/f2ke0fzy(v=vs.110).aspx) we can see that the first argument (in your case `"Values"`) is the path to a file that is being opened. So it tries to open the file named `Values`, can't find it and throws an error (the `FileNotFoundException`). Make sure the file is there. Also note that the path is relative to your **working directory**. The working directory is **not** the same as the directory where your exe is. I think when you run the program from within Visual Studio the working directory is the project directory - but I'm not sure.
Yuck, using JSON for something like this. How it is structured currently is perfectly fine. Having files loosely in a directory be automatically assumed to be part of the project is the same sort of shit Eclipse does.
Try Programming C# 5.0 by Ian Griffiths.
For this you'd use the `System.Diagnostics.Process` class. Execute the command, read the output and show it in your window.
Makes sense.
I'm happy with the idea of auto including files, but the old project file system was capable of doing that. We don't need an entirely new project type.
If you're looking to have a Windows Form that has a ``File`` and ``Edit`` menu and buttons that do things, and then a console (i.e. you're looking to recreate that linked image), you'll want to do [something like this](http://i.imgur.com/eLltGnS.png) Edit: I feel like I should point out that the OP is clearly not after a standard console application, otherwise I would have recommended that as /u/LemonExplosion did.
the default situation is that the files in the project directory are in the project. This should not require enumerating them in a project file. If you want to add a section in a project file to modify this, that is fine with me. The uses I have seen of links were reflections of other deficiencies in the environment.
That's not bad although if I'm not mistaken you can't signal the apps (e.g., to terminate a process midway through) the way you could in an actual console.
I normally hate when people say this, but did even try to find an answer? This took two seconds to google: https://github.com/dwmkerr/consolecontrol Also: http://stackoverflow.com/questions/355724/embedding-a-dos-console-in-a-windows-form http://www.codeproject.com/Articles/335909/Embedding-a-Console-in-a-C-Application
I've actually done a few variations of this. If you're looking to just make a custom shell, you can put a Console.ReadLine inside a loop along with a command parser you've written and some command logic. If you want better/faster control over the console than writeline, there's a windows API call that you can dllimport and use to set the entirety of the cmd window contents (it supports about 10 hz). At that point, you're just using cmd to display text. If you want to do away with cmd all together, you're going to want to create a GUI application using WPF or whatever with a big text box and a text entry box.
Wait, are you sure about that? The **kproj** files are still XML/MSBuild based. 
Have you tried anchoring Top,Right instead of left? It looks like your textboxes are on top of your labels, try anchoring the other side and seeing if that fixes anything. 
OK, fair enough. I guess you'd just capture keypresses and send the appropriate signal.
Yes but it's close enough to true to be a useful maxim for debugging... seems pretty unlikely the OP's problem is the compiler.
I'd guess performance is still pretty poor because you have to actually read all the JSON, not just the columns you're interested in (since it's not predictable on disk the way SQL columns would be). But if you have information to the contrary I'd like to see it.
Of course it's slow as shit. But EAV is much slower. My point is that in my particular example getting faster probably not possible to do faster with code/different db.
There's a ton of downvotes here, so it might help if you give more detail about what you are trying to accomplish. It's likely that a console app that takes command arguments is the simplest way to do what you want, unless you are only concerned with not using CMD. Also, check out the metasploit source. 
Maybe if you cache stuff into memory or use Redis or something like that it could.
Yes, completing basic exercises WITHOUT peeking at the answers is pretty important. They are problems that allow you to apply techniques and skills you've just learned, in order to be able to solidify your understanding and commit it to memory. They also help to build your problem solving abilities, which are THE most fundamental, essential abilities in writing software; as well as teaching you how to think in terms of algorithms. I cannot possibly stress that point enough. Writing GOOD, robust networking code is hard. GUIs are basically a very thin layer on top of actual program logic that tie things together. You HAVE to be good at problem solving in order to write anything that's not trivial.
I created a custom console in C# for a job I had a few years back. It accepted loading custom libraries to add additional functionality related to various job responsibilities. All I really did was use a single RichTextBox for both input and output. The RichTextBox control allows you to mark specific text regions of your choice as being protected or non-editable. Anything before the prompt was non-editable, and anything after was considered input after the user pressed return. Apart from that, I implemented the ability to output formatted text in whatever color or theme I wanted, including images, and made sure to handle certain keypress events myself, and called it a done deal. To my knowledge, it is still being used by the company I designed it for.
I think we all learn differently. I'm having my own issues learning C# (which is why I'm here), but I have dabbled in programming/scripting for the majority of my life (since the mid-90s or so). I haven't done anything terribly complicated, but at the same time I only just recently got a job where it comes in handy. I'm not a programmer specifically, but I am a Security Admin where, for example, Powershell comes in handy to simplify repetitive tasks. My point in this is that I have YET to learn a language the "right" (or perhaps the "academic") way. I lose focus after a few chapters regardless of the language, the reason I want to learn the language, or the book (or video, such as Tabor's C# series). It's like my brain turns off with rudimentary examples that don't seem to have any application in real life. I understand why they're rudimentary, especially at the beginning, but spending six chapters learning a multitude of ways to ask what is your favorite color is not very engaging for me. That's basically how I learned Powershell. Some of my co-workers started messing around with it. With this, I had code to look at that had real world application to my job. One of the co-workers created a basic account creation script that took a CSV as input. After using it for a little while, there were some ways in which I wanted to improve it. In making changes to the script I started learning more about the language. I never really "learned" how to use Powershell, but I'd say I know it pretty well. Of course, I'm not really trying to compare Powershell and C# in terms of difficulty or anything, but I think that's a large part of why learning C# has been a uphill battle for me the last few months. &gt; So onto my question, do basic programming exercises actually help? All that matters is that you are applying what you have learned. If this means doing those exercise, great. If that means figuring out how to apply it what you are trying to accomplish, that's probably even better. That's the only way anything sticks is if you actually use it. Programming isn't unlike human languages in that respect -- you use it or lose it. Of course, doing the exercises is a much more straightforward way of applying that knowledge and getting feedback, so I imagine few people would recommend the latter until you actually have a good foundation of C# knowledge. &gt;If I cannot solve them will that mean I will not be able to make other programs? Maybe? I don't know. If you can't complete an exercise, there's a problem somewhere. Maybe you don't resonate with how they explain the feature, or maybe you didn't pick up a key piece of information about the feature while reading about it. Or similar to me, maybe you don't have the correct context in which to look at that particular feature and it's interfering with you being able to understand it. If you're just reading the book and not actually putting the stuff you're learning into action, it won't do you any good. You won't be able to finish reading the book and say "now I'll program X!" unless you've been trying to code stuff as you go. Really, I imagine you probably will find it difficult to finish the book unless you're continuously putting what you've learned into action.
I created a console in WPF. It's just a canvas with a text buffer. It currently wraps cmd.exe - but it could be sourced by any interpreter. https://github.com/efess/AltConsole
Yes, but it requires some discipline. There are two reasons for doing programming excercises. The first is seeing the pattern. Every programming languages has a different answer of how to solve a problem. How you do it in Visual Basic is different than Python is different than C#. Trying to solve it in that language helps you understand the underlying way that the language addresses a problem. It isn't something that can really be described in one or a thousand paragraphs, but it becomes fundamental to really understanding the language. It is why recent people to the C# from Visual Basic don't have the common event handler arguments (object, EventAgs) but go a different way. It is the same of when to use a event verses an observatable verses the Java-like addListener() calls. The second is mental memory. When you first learn a language, you worry about things such as where the braces are, how to form a `foreach` statement, or the pattern of the event handler. As you do them over and over again, you stop focusing on parenthesis and where the dots go and more on the API calls. You have already integrated the syntax into your memory so you don't think about it. As you go further into the language, you integrate the API into your consciousness until you start seeing it in terms of solving a problem. "Create a button, add events, hook up XAML" because "I need a button." You don't worry about the components of it because you are working on the simple level of "I need a button". Further along, you get into "I need a dialog box" and then you are just going through what needs to be done without having to *think* about every event handlers and API call. You are just making a dialog box and then a form and then an application. Yes, you still type everything, but your *focus* is on the higher abstractions instead of the tiny details of where to put a period or a square bracket. But, that higher abstract still requires you to go through those details until you integrate them into your mental framework. This is why cheating on tests and finding shortcuts doesn't help in the long run. You want to get to that "no mind" point because then you aren't placing a button, you are making an application.
I'd say it is not a red flag if one fails exercises like that. I feel that they can often be very special cases and solving them is often pretty tricky at the start. Also I'm not sure he actually means "Network programming" as actual low level network programming, I could be wrong though but why would he learn C# if he was interested in that? I'd say try the exercises. If you cannot do them try to find a description of an algorithm to solve them then try and implement it in code. If you cannot do that, then find a code example and look at it and then write your own. After you have done this for all exercises you cannot do you will quickly become better.
The trouble is most PowerShell scripts are less than 500 lines and usually performance is not a concern at all so you can easily brute-force your way through a problem.
Personally I would have chosen a for loop as the canonical version of something that novices constantly forget the basic syntax for; at least, I know I did.
please people there has to be someone out there that want's to work on stuff like this. If I had the technical skill to do it all myself I would, but I can't. This requires a team and I'm begging for just one other person than myself to at least talk to about it. Because I'm the only person I know around me that has any interest in this stuff and it's hard not being able to speak with others about this. So I'm asking please, please just someone out there can you help and collaborate with me. 
There's a couple serious problems with this, and if it's for something serious, I'd be hesitant to implement your own scheme. Here's a couple of the issues I see: * You said your concern is integrity of the log files, but AES alone doesn't provide integrity of data. You need to either HMAC your data, digitally sign the log files with an RSA private key, or use something like GCM mode. * If the intruder has access to this machine, there's nothing stopping them from dumping the AES key from memory as the program is writing log entries. Once the machine is compromised, there's nothing you can trust. I think in all fairness, threat models do matter, and it might be the case that if these log files are not of _huge_ importance, maybe a little obfuscation is sufficient to deter an attacker. But I wouldn't call it "secure". 
Everyone has different hangups in syntax. I've been coding in the C family since 1980 or so. Back then, we had to compile uphill both ways in a snowstorm and they didn't have fancy features like `foreach` or classes... or an IDE. But, life has steadily gotten better since. I'm planning on having a for() loop on my tombstone with a `break;` in there.
I understand the concerns regarding the issues you raise. System.Security.Cryptography uses the CryptoAPI's CryptImportKey/CryptExportKey functions which (I believe) stores the keys encrypted in memory. However, as you point out, the key must be decrypted at some point in order to provide the proper crypto operations. This is more of a deterrence than anything else. It's to prevent an intruder from quickly running a grep on the log file and re-writing it without their information once they're on their way out the door. The whole point of the program is for live evidence gathering - it does *nothing* for active host protection. EDIT: Thank you for pointing out GCM. I'll be using CreateAuthenticatedEncryptor for this project.
I guess I'm missing something but what prevents then from deleting or corrupting the whole file? 
The more exercises you solve the better. If they're too easy, ask your lecturer for harder questions. If they're too hard, you need to put more effort in or get some help. Programming is about solving problems. The programming language is just a tool to express your solution. 
It is very troubling that you talk about *evidence* when dealing with *modifiable data*.
Hi, would you like to use my project for this? It covers your use case nicely. http://obscur.me Use a symmetric-only package. As my README says: All data is authenticated with a MAC in the Encrypt-then-MAC (EtM) scheme, which provides strong verification and minimum information leakage. Upon detection of any alteration, all operations are aborted. [In the code example above/before,] the packager performs the following actions automatically: * Creates the symmetric-encryption package, the manifest being configured to use XSalsa20 encryption, Keccak-256 (SHA-3-256) key confirmation, Keccak-512 (SHA-3-512) authentication, and Scrypt key derivation * The package is set up with frameshifting payload layout (default) and a Salsa20-based CSPRNG * Adds a file to a package with HC-128 encryption (random key &amp; IV, default) and Poly1305-AES EtM authentication (random key and nonce, default). Key confirmation and derivation is not used due to the keys being random and stored in the manifest, in this instance. If keys are to be supplied by recipient, then the defaults are Keccak-256 key confirmation and scrypt key derivation. * Derives a package/manifest key (from the supplied one) with Scrypt KDF * Writes it out to the output stream You may use different primitives if you like, these are merely the defaults. A large selection are available.
How about starting the server with a random seed that is stored off-network and then following a process where each event is stored with a hash of the event data. The seed for each event hash is the hash of the seed for the previous event. As long as you're only storing the next seed to be used at any point in time then you should be looking pretty good. You can regenerate what the sequence of seeds should be since you know the log seed. Once you have that you can see whether the combination of event messages and event hashes match up to what they should be. Something like this... Event Message Log Seed Event Hash Next Seed Server Start 372862 CnSiG bt9Tk Event 1 ckTL0 FzMro Event 2 u75z3 xKrzm Event 3 7lzGE Ctq0r Event 4 =hash("Event 4","Ctq0r") =hash("Ctq0r","Ctq0r") The nice thing about this approach is that your key can't be stolen. Alternatively stream your log file (or a sequence of validation hashes) to WORM storage (eg. DVD-R) or off to a separate server designed with a similar purpose (WORM) in mind Edit: aka http://en.m.wikipedia.org/wiki/Hash_chain
The first and last part of your statement does not fit. Having a JSON project file is entirely unrelated to auto including all source files in a directory.
And it's a poor developer who blames his tools.
It sounds like essentially what you want is one way logging where the attacker cant affect what has already been logged. Maybe you could do something like send the logging information to another machine, through a web service or other means. That machine would probably need to be at a different location to be effective, but it could be more tightly secured. That may be overkill or not practical, but thought id mention it.
I guess you could write 1 Eventhandler and point all MenuItems to it, then get the clicked MenuItem from the EventArgs. Now you could make a Select... Case Construct to paste the correct values.
You could have the keywords in a list of some sort, then store the index in the item's Tag property. Something like [this](https://gist.github.com/Measter/39a78ebd00fd420a244b), but less bad.
ChunkWords.Split('--') should give a compiler error. The other approach should work fine. const string sstatic void Main(string[] args) { var words = s.Split(new string[] { "--" }, StringSplitOptions.None); foreach (var w in words) Console.WriteLine(w); Console.ReadLine(); } 
Did you set a breakpoint **after** the `Split` method has run? `Split` will never return null.
Whoever's downvoting you doesn't seem to know that wrapping something in apostrophes is a character literal. So '--' would not compile, but '-' would.
I think the string splitoptions would need to be set to "StringSplitOptions.RemoveEmptyEntries". If not you will get an empty array fill for each double char. Edit: My bad, thought I had read new char[] { '-' } for some reason.
Requirements for the website?
Sorry, was typing without thinking. However given that OP hadn't stepped past where he assigns to a variable with the method, I thought it would be helpful to include code that would get him past it and concretely demonstrate that it had worked.
Good point, thank you.
Angular is correct. You should make sure you're checking the breakpoint after the value has been assigned into your variable. The code above is fully functional (given that ChunkWords contains the string you listed above).
Start reading up on MVC http://www.asp.net/mvc/tutorials/mvc-5/introduction/getting-started
Something tells me you're running into the [xy problem](http://mywiki.wooledge.org/XyProblem)
To be more precise: ASP.NET MVC.
It's so they can force an incompatibility with older versions of Visual Studio forcing everyone on the team to upgrade in lockstep. Come on, that's classic Microsoft.
If you can't listen to things more than 10 minutes, it is hard to find anything suitable to you. Trust me, try to focus on it, else you can't learn anything.
Have a look on Codecademy. This is where I learn't web development. It's free and has tutorials on diffrent APIs, Ruby, PHP, Python, JQuery and JavaScript. http://www.codecademy.com/
A cheaty way to do it, is to register the same event handler for all items and then just paste the title of the item into the code (of course this means that the tile would have to be just the text to paste).
http://www.asp.net/web-forms
That's still pretty broad. Do you have specific requirements? We can point you in the right direction with more information. 
This is key... An "internal web page" may just need HTML.
This is a simple case for a `Where()`-query where you simple filter the elements that do not match what you want. You want the list to contain a specific number. yourList.Where(x =&gt; x.Contains(yourNumber))
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Web content management system**](https://en.wikipedia.org/wiki/Web%20content%20management%20system): [](#sfw) --- &gt; &gt;A __web content management system__ (WCMS) is a software system that provides [website](https://en.wikipedia.org/wiki/Website) authoring, collaboration, and administration tools designed to allow users with little knowledge of web [programming languages](https://en.wikipedia.org/wiki/Programming_language) or [markup languages](https://en.wikipedia.org/wiki/Markup_language) to create and manage website content with relative ease. A robust Web Content Management System provides the foundation for collaboration, offering users the ability to manage documents and output for multiple author editing and participation. &gt;Most systems use a [content repository](https://en.wikipedia.org/wiki/Content_repository) or a [database](https://en.wikipedia.org/wiki/Database) to store page content, [metadata](https://en.wikipedia.org/wiki/Metadata), and other information assets that might be needed by the system. &gt;A [presentation](https://en.wikipedia.org/wiki/Separation_of_presentation_and_content) layer ([template engine](https://en.wikipedia.org/wiki/Template_engine_(web\))) displays the content to website visitors based on a set of [templates](https://en.wikipedia.org/wiki/Web_template), which are sometimes [XSLT](https://en.wikipedia.org/wiki/XSL_Transformations) files. &gt; --- ^Interesting: [^Content ^management ^system](https://en.wikipedia.org/wiki/Content_management_system) ^| [^Enterprise ^content ^management](https://en.wikipedia.org/wiki/Enterprise_content_management) ^| [^Workflow](https://en.wikipedia.org/wiki/Workflow) ^| [^Content ^management](https://en.wikipedia.org/wiki/Content_management) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+ck08jq2) ^or[](#or) [^delete](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+ck08jq2)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
If you need to actually *remove* these elements, you can also use LINQ: myList.RemoveAll(x =&gt; !x.Contains(1));
The compiler is the same - csc, no matter what. Older versions of VS (2010? 2008?) invoke csc directly. Newer versions invoke msbuild which invokes csc. You seem to be saying that you were invoking csc directly, my guess is through a Makefile or such. The question is what command line arguments you're providing to the compiler (csc), such as '/optimize+'. Invoking msbuild with /p:Configuration=release is going to send a bunch of options to csc that tell it to turn on optimizations, and to turn off debug stuff. You could do that your self if you want, or you can call msbuild and specify which configuration you want. FYI 'release' configuration isn't special, it's just the name for the pre-configured build config that every project gets that turns on optimizations and turns off debug stuff; you could theoretically change it to match the 'Debug' configuration if you were so inclined. Configs have a name, and the config says what options to provide to the compiler, and the contents of a config are arbitrary.
If you want, you can use the Developer Command Prompt for VS2013 instead of the default command line. It automatically includes the path for Msbuild, so you can just type: MySolution.sln /p:Configuration=Release /l:FileLogger,Microsoft.Build.Engine;logfile=Manual_MSBuild_ReleaseVersion_LOG.log Related to the performance between VS and command prompt, are you building against Release configuration in VS as well? I believe that Debug configuration includes a lot of extra overhead for debugging purposes.
The main platform thus far has been mono on linux, the windows port (and hence the use of VS) is very recent. The primary build system (cmake) is what we maintain in version control and I manually created solution files for comparison.
Clever. I am getting a syntax error of "The best overloaded method match for 'string.Join(string, string[])' has some invalid arguments I am using .NET version 4.5.1
Not sure what the problem was Fladorius but using the full command from msbuild I got the same performance. Your trick for the dev command prompt is pretty slick though and I will use that in ConEmu. Much appreciated.
VS will set projects to build and target 32 bit .NET by default. If you're expecting to be running 64 bit then I'd check that as well.
Good point, didn't check that. Thanks!
Why? Especially if the guy has Windows Forms experience Web Forms is quite likely the correct thing to do for internal web app.
Go to Bob Tabor's videos on YouTube, this guy is awesome, if you Google C# tutorials, he is first or second guy to come up!
Because its shitty and anyone who has to come behind him and maintain him will hate him and it.
Thanks everyone!
I believe VS default is to build for AnyCPU.
I disagree with your professional and substantiated assessment that Web Forms is "shitty".
Is using files a requirement? If not, what about using a database with authentication/encryption?
Remember that scene in Swordfish where Huge Jackman is getting a blowjob while trying to hack something and has a gun to his head. Something like that. I'd recommend http://www.microsoftvirtualacademy.com and I hear http://www.pluralsight.com/training is good as well.
A mix of knowing Java, and using Unity. Their documentation is pretty good, though I don't know how much of that knowledge will help outside of it. I still mostly just use it for Unity, but I see a lot of value in it for winforms and dealing with hardware on windows. Way better GUI design than Java. Just getting your head around object oriented design and C syntax will get you pretty far I think.
Some combination of reading OSS repos, MSDN, and being an auto-didact.
O'Relley's C# in a Nutshell for 1.0, 20 years of other languages, and a lot of Google-fu.
A mix of books, MSDN, code project, and a LOT of coding and failing. 
I taught myself. I've been a professional programmer for 26 years. I've forgotten more languages than most programmers will ever learn. Essentially, all languages have certain basic constructs, and it's only a matter of knowing the specific syntax and which of the several popular words for the particular thing you're trying to do that language uses, and you can find that stuff fast either by experimentation or asking Mr. Google. So for example, when I wanted to learn how to loop in C#, my thought process went something like this: "Hmm. Does it have a 'for' loop like Java? Oh okay. How about a 'do while' loop? Oh, it's just called 'while', okay. What about a 'foreach'? Oh look, it does have 'foreach', I'll just use that, that's easier. How does 'foreach' iterate over a dictionary? Oh, it does it like Water does it. What's this IEnumerable thing? (*taps at google*) Oh, that's kinda nifty. Now what's the basic construct for a list called? 'List'. That was easy..."
http://www.deitel.com/Books/CSharp/CSharpForProgrammers2e/tabid/1708/Default.aspx
The problem is that you likely weren't passing the Configuration=Release parameter to msbuild, as Fladorius specified above. When Visual Studio creates project files (for C# at least, and problably other languages), the projects are set to build debug configurations by default.
"Programming C# 4.0" is not recommended, too. Just checked.
Well, I started with BASIC and then C and Pascal, so stuff that's not object oriented or is generally lower level, I can handle, even if it's not as fun. The only language I ever got kinda thrown by was a LISP derivative that was, frankly, kinda odd, but once I learned it it was wonderful, and everything I've used since - including C# - has been second rate in comparison. Unfortunately it's kinda a dead language now, so C# and .NET are the best I've found of what's actually available. I'll build a new compiler for that other language sometime. In the meantime, there's C#.
+1 for Pluralsight. MVA has really good stuff for free too, but I'd spend more time on pluralsight if you can pay the sub.
i can see this being useful only if you need to set really oddball build params which most of these can be set in VS as well are you a masochist or do you need to do this as part of a compiler chain, or for a build server? in the case of build server i would reommend learning about TeamCity or similar build server / CI solutions 
Yeah, this. Which will compile as x64 on a 64 bit machine, which *can* run significantly slower than a 32 bit version, depending on many factors of course, and not always the case.
Do you know some of the factors? I know 64bit uses more memory but I'd assumed it will run faster on a 64bit CPU.
What about Haskell? Or F#?
Jumping between Java and C# is trivial. I work with both at work.
I learned it in 99 with a word document describing the spec, notepad and a compiler. 
All JSON will work as JavaScript, but not all JavaScript will work as JSON.
Running the vs2014 vm on azure. If I make an ASP.net vnext project, I get a project.json file. For what that's worth...
Well, I'm not that smart or fast. :P
I second both C# for Absolute Beginners at MVA and Head First C#. Both are fantastic.
&gt; What about Haskell? Or F#? I learned just enough Haskell to decide it's a pain in the ass and I don't really feel like working with it. I looked at F#, and while I understand what they're doing, I'm not interested in programming that way. I spent four and a half years working for a company that made new languages. This made me kind of a language snob. Using one of our languages, I once wrote a major application, that we'd been contracted to write over a course of three and a half months, overnight. My boss left the requirements meeting, phoned me and explained it to me, and when he walked into the meeting with the other contract companies the next morning to divvy up the work he presented the completed application and said "so... what shall we do with all the money?" That's the sort of productivity increase you can get from a really powerful language. Every organization I've written code at - other than that one - has had as its biggest software problem the inability to get software written fast enough. So, developer productivity is my defining criterion for selecting a language to work in. I looked at Python, it's nice enough but I'm unimpressed. I looked at Ruby, it had nice features but the syntax made my brain hurt. I've done Java for years, it's okay but not wonderful and now that Oracle is going around suing people who use it I want nothing to do with it. Visual Basic is an unholy abomination unto god, so I'm not touching that shit. (Seriously, it's just such horrible messy syntax I don't want to waste my time.) C#... it has decent language features, it has tons of supporting libraries... I can work with that. I've recently been building some framework for automatic generation of user interfaces, and with that coming together (almost finished), I finally feel like I'm able to be productive again. 
Fortunately they are separate projects for me. But I dont have choice in the matter. I have to use C# for one project, and Java for our main codebase.
Why hobble yourself by learning an out-of-date version of the language?
Im not an expert in this, I only know it *can* happen. Yes 64 bit code will use more memory as all references are 64 bits. This has a performance cost since you can fit *less* code in the CPU caches. Code that does not do much 64bit operations (and addressable memory space isnt an issue) would only use more memory/cache. x64 has more general purpose registers and may have other benefits to outweigh this, im not sure. The code that is executing is also different as the JITter compiles/optimizes differently x86 vs x64.
Is that all you are getting?
Can you give an overview of what features made you so productive in this language?
It is shitty for a myriad of reasons. I've been working in it for about seven months after a year or so of various MVC frameworks. Most of the following can be alleviated, but only by ignoring any part of the framework which is helpful (viewstate, autopostbacks, user controls, etc...). 1. Routing through the view is stupid and restrictive. 2. MVP pattern encourages mashing together of the view and the 'presenter' because of how it deals with event handling. 3. Works against the stateless model of HTTP in various obscene ways (mostly viewstate). 4. Little to no control over the HTML rendered which makes CSS... interesting. 5. Abstracts way, way too much, in ways which are often surprising. 6. Javascript is a major pain in the ass to deal with. 7. It is slow (especially with AJAX [when I learned how AJAX works in webforms I literally smacked myself I was so shocked]). 8. The page lifecycle is stupidly complex. I understand that it is pretty much necessary for the dev model it promotes, however. 9. Locks you into HTML/CSS; you won't be building any kind of API using webforms 10. Community is near nil. 11. Anything you do end up learning despite webform's abstractions will not be portable to any other framework. It was probably mind blowing in 2002, but it is a relic that needs to be put down. Is it *possible* to build a modern, fast website with webforms? Sure. Is it easy/intuitive? Hell no.
Personally I stick with the command line on larger teams. This is because while both devenv and msbuild both use csc.exe they are actually different build tools. devenv does not handle dependencies in the same way nor does it run additional features in ways many teams need them (Nuget integration with devenv is only partial currently). This becomes a bigger issue as projects become larger and more complex and can create instances where projects build on the command line but not in VS and vice versa. I stick to the command line as on a larger team you often will leverage various CI tools which are often Java based tools that execute commands on the command line. Having VS installed on all your build systems or anything needing to run part of the build becomes a huge and expensive pain. Ideally you want a lightweight build wrapper for the command line work and set it up to not cause problems when working in the IDE. Use the command line build to validate output of binaries (testing, etc) and use devenv when using the IDE for actual coding and debugging.
You make several good points, but: &gt; Community is near nil. Wildly inaccurate.
You might see a speed increase (haven't measured it yet), but I would guess it'd actually be a little slower, as you're using double the L2 cache (since pointers are 2x the size). 
csc.exe is the same, but there are different JIT optimizers on Windows, depending on if it's a server OS or a desktop OS. Not sure about Mono - I would guess it only has one. 
That stems from 100% personal experience. When looking up some issue with webforms, it is usually a stackoverflow question with 5-10 upvotes and 4-5 'well, this is a way to do it I've found' answers, along with the obligatory link to a seven year old MSDN article. When I search for something relating to Rails, Node, Angular, even CodeIgniter, the answers are much more comprehensive (like: "Here are the two or three ways to do what you want, but I like option A because of these reasons..."). Perhaps it is not the size of community but the quality.
Not really out of date, just behind in features for the most part. If you learn c# 3.0, you could then learn the new features/tecniques. But yeah doesn't make much sense to do so.
I transition from VB6 to VB.NET. Then a friend convinced me of how stupid and arbitrary VB.NET was, so I switched to C#. It was an easy transition once I knew VB.NET. I had a little C knowledge from school and other C style languages. 
First of all, try to understand the HTTP protocol, particularly the difference between a GET and a POST, and between data passed in a querystring and in a form. Next, learn the following technologies, in this order: HTML, CSS, Javascript/jQuery and MVC. Presumably you already know something about databases, but brush up on Linq and Entity Framework.
Agree syntax is nothing, the key is to know .NET/CLR and framework internals. I would highly recommend this book: http://www.audible.com/pd/Science-Technology/Refresher-on-NET-and-Software-Design-Fundamentals-for-C-Developers-Audiobook/B00LB7DETU/ref=a_search_c4_1_1_srTtl?qid=1405275203&amp;sr=1-1 If you Google or search reddit you will find some free download codes as well...
I learned a lot myself. A friend of mine runs a software consulting place, and he got me a copy of Visual Studio and access to his PluralSight account, and I just went crazy from there and mainly just jumped right in with a project, figuring it out as I went.
If you prefer books, he also has a book called The C# Players Guide. It doesn't contain too much more than the site but it well worth being in the collection.
Solving a problem like this was probably totally useful back in the 1980's, when your professor most likely had his/her last real programming job.
I tried and it didn't do anything
If this is the Y then please tell me what the X is cause I didn't have any issues before.
Price difference would be a reason.
Indeed, I have a copy but for reasons you stated, I usually just recommend the site.
I switch between Scala and C# (Scala backend, Unity/C# frontend). Its not too bad. I always just miss Scala features when Im in the C# frontend. 
If you're familiar with rake (ruby's make) Check out the albacore gem. It has a ton of useful build tasks including very handy nuget ones. I'm on mobile or I'd link the github repo and some gists. Let me know if you're interested and I will. 
A thousand times this. I get so pissed in job interviews and what not when I'm told that I don't know the language well enough and that disqualifies me from the job. I've been trained to think like a programmer and I've written production code before. All I need is a week to learn how to do it in the syntax you want and then we'll be cooking. 
Same here, I just bought a tiny O'Reilly book on VB.NET vs C#.
IIRC the 64-bit CLR has/had different performance characteristics (closer to the 32-bit "server" CLR), mostly in memory management/GC.
I'm not that smart either, but I already knew C++ and java, among others. My essential point is that C# is basically a very simple language at heart.
Pluralsight is great, but not if you are just starting out. Once you've got a grounding in C# and want to add more depth to your knowledge, its excellent and worth the money.
Yeah, once you get about 5-10 languages, it takes a week to grok just about anything. However, after that, it becomes diminishing returns because you've gotten to "just tell me the syntax and give me an API list." But, the basics are easy to pick up (I fell in love with the event and properties syntax, the reminded me of Dylan), the quirks of the language take longer. Now, after four more full versions, I could see it being harder to really grok the language as a whole.
What I have said to employers sometimes is, "No, I don't know this language. If you hire me, I will know this language before I walk in the door." Usually I don't get the job... and in those cases, that's not somebody I want to work for, because they don't know how to hire a good person. Sometimes I get the job, and those have been good jobs. People who know your language are a dime a dozen. People who are capable of architecting large applications that will scale up to handle billions of records for you are not.
Microsoft also has excellent web pages detailing the API of all the major objects and libraries in .NET, so if you already know Java, you can teach yourself C# pretty easily.
For a more complex application, I could lay out objects in the screen simply by giving them coordinates, create drag and drop simply by labeling the draggable objects as draggable and listing what classes the drop zones would accept, or create a web service merely by writing a method that represents what the service does and then writing one line of code to expose it to the web server. Every object inherited default methods for to_xml and to_html. AJAX was invisible: you could output objects to the browser and they'd represent themselves in HTML, user actions would be reflected as events on the server, and you didn't have to wire any of it up: it was done for you. Saving to database was trivial, the language had three forms of ORM built in. If you had any geographic data, it had effortless integration with several mapping services. For a simpler application, you could stub out an outline of your business logic, and *the language would generate your entire interface for you*, all you had to do was fill in a few methods. Here's an example of me writing the simplest possible web application with AJAX interface. You'll notice that I write it from scratch with 2 minutes of coding (including setting up the web server and starting the application) and 2 minutes of me blathering at you: https://www.youtube.com/watch?v=IT8vVAFXJGw Here's an example using drag-and-drop: https://www.youtube.com/watch?v=PQGY-553m08 Please forgive the amateurish videos, I did them each in one take in the middle of the night.
You might want to try [Protobuild](http://github.com/hach-que/Protobuild) (which I wrote). It's a cross-platform project generation system built for C#. One of the major feature points is that it can synchronize C# projects back into the project definition files, so when you add or remove files in the IDE, you don't need to add / remove them from the definition files manually.
There is nothing better for windows desktop applications.
On the job, when I suddenly needed to write some c#. I was primarily a java programer, with some experience in other languages. The method I used was to fire up visual studio, write some java and correct all errors occuring. Maybe not the most efficient way :-)
I agree. If windows desktop is your target, then it's the best choice.
Thanks for the recommendation, found the link but all the codes were taken. I'll look into the ebook though. 
To be honest i learnt C# from playing around with unity. I started with looking at examples on the forums etc... and then i started to read the documentation and at some point i picked up most stuff and i was fluent in the language. C# is more or less the only programming language i use now if u dont count scriping lanuages like lua or ruby as programming languages.
Metro App sounds like the things Microsoft wants to go with.
Just to be clear I have many years of Web Forms experience and several MVC projects behind them. Your points are mostly good but... 1. I am not sure what you are talking about. The routing engine works pretty much the same. Do you mean that events are effectively actions? Do you know that you can easily post to another form? The MVC way of routing is better sure but with Web Forms you need much less routing anyway. 2. Not more than the MVC pattern. I have seen people do database queries in the view in MVC and I am not talking about the countless hidden lazy loading queries. The problem with MVP is that very few people know about it while MVC is explained a lot to everyone. In fact I think MVP is quite robust and in a way better than MVC. I especially like that the view has its own code behind where you can put significant amount of view code without mixing it with the markup. 3. That's true but why do I care? Especially in this day and age where ViewState is off by default and I can just turn it on on demand. 4. That is very true and in my opinion the most serious reason for Web Form's downfall in the late 2000s. At that time people wanted to ajaxify the websites add jQuery animations and so on and the lack of control over the HTML was a big problem. However if you don't want to do this I couldn't care less about the quality of the HTML and you shouldn't do it either. Just treat it as compiler output. 5. On the other hand abstractions save time. I have not cursed more as a programmer than when I was trying to build a checkbox list with MVC because checkboxes in HTML are just insanely stupid. 6. Not sure what this means unless it is the same thing as the funky HTML. 7. While it is slower than MVC it is very reasonable. I once built a search as you type list of users with Update Panel just to prove a point. Everyone but me was surprised by the performance. My boss made me switch to raw ajax anyway because he held the same narrow minded position against update panels. Update Panels are impressive when you have the type of page that has one grid in the middle and just static (or cheap) stuff around it. If this grid needs filtering, paging, etc. you just put it in an update panel and you are basically done and other AJAX methods cannot be much faster because producing the grid is the expensive part anyway and the amount of additional data sent is small compared to the actual grid. What is more all other methods of doing AJAX are there too so what is the problem? 8. That's true except that I think it could be simpler. On the other hand this thread in particular assumes WinForms experience so chances are the person will handle it better than the abstract rules of the MVC pattern. 9. So what? There is Web API for that. I would laugh in the face of anyone who builds non-legacy API with MVC these days. Oh BTW WCF was OK too but I guess we have to hate SOAP even for non-public, same stack APIs like we hate Web Forms because I don't know... Twitter doesn't use it so it must be bad. 10. That's true and sad. The anti-WebForms propaganda almost killed it or more likely the vocal people left so there are a great number of dark matter web forms developers. On the other hand... internal application. 11. True but in my opinion server-side frameworks for generating HTML are dead anyway. MVC is as dead as Web Forms because people just don't generate the HTML on the server anymore. Just wait until there is a good solution to the SEO problem and as this is their last fortress and they are out. My last app was a web forms app. It had a login page, a logout page and an index page. Total of three Web Forms controls. Everything else was a pile of JavaScript and Web API. I think that component frameworks are better in general. There is great value in being able to package behavior and view together and ship it and reuse it that way, with good encapsulation. However this model is not that flexible when the requirements for the components change every year. In my opinion when the web settles down and the way we build web stops changing completely every year component frameworks like Google Web Toolkit will win as their abstractions will be refined and will not leak because suddenly everyone decided to write JavaScript despite the fact that nobody wanted to touch JavaScript just a year ago.
http://advgencontact.codeplex.com/ I am thinking that is still worth.....
There is nothing wrong with 7 years old articles for things that were last changed 7 years ago :)
I don't know Java; I want to learn from scratch
Not recommended. Essential C# isn't listed; is it for beginners?
if you want to get a metro feel to your project try this http://mahapps.com/
Resource for beginners?
I get this error when i click an item in the contextmenu An unhandled exception of type 'System.InvalidCastException' occurred in TestToolStripMenu.exe Additional information: Unable to cast object of type 'System.Windows.Forms.ContextMenuStrip' to type 'System.Windows.Forms.ToolStripItem'.
That's because you're trying to cast the entire menu, not the clicked item.
I know about the cache lines, etc. I was more interested when you said "...can run **significantly** slower..."
Even then, WPF is mostly based on XAML, and XAML is also used in Metro apps. So learning WPF is a good foundation for Metro apps too.
+1 for MVA. Bob Tabor's course is awsome!
Ahh the line needed to be: int index = (int)((**ToolStripButton**)sender).Tag; Instead of int index = (int)( (**ToolStripItem**)sender ).Tag; 
I wouldn't recommend his books for beginners, they are really for average programmers who want to learn the advanced parts of C#.
I learned on the job with prior C++ experience, but StackOverflow and MSDN were great at helping me get some of the finer points down.
See the sidebar; Rob Miles' Yellow Book is the textbook that is used at Hull University in the UK; you could do a lot worse. But as far as the O'Reilly books are concerned, 5.0 rather than 3.0 of course. 
I used to be so skeptical about WPF/XAML. I always stuck to winforms because markup language just felt wrong in the context of a desktop application. It was only after I got a job that focused really, really heavily on WPF with the MVVM design pattern that it finally clicked!
In Windows 9, Metro apps will run inside a window. Which sort of negates their purpose. 
If this is for coursework (which I suspect it is) then you may be required to do this without LINQ to demonstrate your understanding of the logic involved. public List&lt;List&lt;int&gt;&gt; FilterTheOnesOut(List&lt;List&lt;int&gt;&gt; oldList) { var newList = new List&lt;List&lt;int&gt;&gt;(); foreach (var list in oldList) { if (list.Contains(1)) continue; newList.Add(list); } return newList; } 
I'm on mobile right now so I can't look at your project. Are those namespaces in the same project/assembly as your xaml? If not you need to specify the assembly in the namespace declaration. I don't know the syntax off the top of my head, I usually let intellisense fill it in for me. I'll check when I get to work. 
Just took me a regular afternoon. 
View your References in the project and you will see that a few missing. Open Nuget manager for your project and download missing files. Also, read the Git page at the bottom. It states that you will need to get and compile SharpTox library and copy the dll file across.
Bucky a.k.a. TheNewBoston I fucking love him.
Hey man, thanks for your answer. Those namespaces are in the same assembly as the xaml file. The funny thing is, intellisense filled this in for me too but Visual Studio is bitching about it haha.
What do you mean not recommended?
I am still working on this. Please give us some comments. 
Due with some copyright considerations from my team, we are trying not to use other projects. 
Hey sextagrammaton, thanks for your comment. However, your answer isn't really related to my question. No references are missing and I know what the github page is stating, I wrote that myself. Everything works, including building, except for the designer. 
Think it's been a while since you looked at EF. EDMX is no longer required, and in fact its pretty much frowned upon at this point. You can do everything with code-first, where you just have a simple class entity. You can even do code-first with an existing database, which makes no sense but works really well. Oh and as for complexity of procs/async: context.Database.SqlQuery&amp;lt;Foo&amp;gt;("exec procName @p0", foo).ToListAsync();
Metro apps are still by far more limited in what they can do.
That is really really silly. You want to write everything yourself? Everything? Just check if your licenses are compatible.
Also, that is our fun too. 
**I am** working on this. Please give **us** some comments. :-) Perhaps you should wait until you actually have something to show. There is barely any code.
I taught myself. I've never been to college or university, and I don't have a job writing software for a living, it was just a hobby I picked up when I was still in middle school. I started off with VB.NET when I was 12 and moved on to C# a couple years later (for reference, I'm almost 21 now). C# is now my strongest language with some other less developed skills in a dozen or so other languages, but that's not relevant right now. My method of learning was just to do it. I fiddled around with Visual Studio, created simple GUIs or CLI apps to do whatever popped into my mind at the time, whether it was useful, for my own benefit, something silly, or proving to myself I could do it regardless of what I was doing. Reading MSDN and StackOverflow, as well as looking at snippets from places like DotNetPerls helped a great deal. I never sat down to read a book (physical or otherwise), never had someone lecture me, and never had someone formally instruct me. Not everyone learns the same way, but I'm a firm believer that practical experience is one of - if not the - best learning tools. Learn by doing, and supplement with theory, not the other way around. If you have sufficient experience with a language similar to C#, like Java (please don't lynch me, Java and C# are similar on the grounds of being high-level languages without most the ugly cruft C and C++ programmers get to look at, that's all I meant), just fire up Unity and make something silly like a Pong clone. If not open Visual Studio and implement something you already know (one of my favourite things to do when toying with a new language is to write an unstable quicksort from scratch even if the language provides sorting algorithms in the STL), and maybe even push the boundaries by snagging a few tasks you're not 100% familiar with from RosettaCode and implementing them yourself without peeking at the existing entries until you've completed the task, that way you can see how other people did it and compare your code side-by-side, and see how they differ and how you could alter your approach to help refine it, and thus your overall skill-set.
That was the big feature that MSFT promoted with Metro. Sure, there are other differences, but IMO not enough to be worth learning it. Especially now that Metro is effectively deprecated. 
So I now have downloaded SharpTox, added the project to your solution, referenced it, copied dlls^1 to lib folder and everything works. I can open the XAML without errors and the designer loads fine. I did not change any code. ^1 The only hacky thing I did was in the lib folder. I did not have *libtox.dll* so I copied *SharpTox.dll* and renamed it *libtox.dll* so the build could complete. Sorry I could not offer more. edit: used Visual Studio 2013 (update 2 RC) on Windows 7 Pro SP1 64bit
http://www.accu.org/index.php?module=bookreviews&amp;func=search&amp;rid=892
Incorrect. I've used EF code-first with both stored procs and table-valued params. Haven't personally needed to try sequences, but I'm sure it can handle that as well if you dig into it.
If you try to search for C# 5, you get zero results. This can mean two things: 1) There are no C# 5.0 books out, or 2) Nobody have bothered to review any books since C# 4.0 And since the book review seems to be based on one person only, I'd rather look at the reviews at Amazon, since there is more truth in numbers than in one self proclaimed reviewer. http://www.amazon.com/Programming-5-0-Building-Applications-Framework/dp/1449320414 As you can see, it got ten 5 stars, two 1 stars and one 3 stars. Read all the reviews, especially the bad ones, and make up your own mind. On the other hand, take a look at C# 3.0: http://www.amazon.com/Programming-C-3-0-Jesse-Liberty/dp/0596527438/ref=sr_1_7?s=books&amp;ie=UTF8&amp;qid=1409058702&amp;sr=1-7&amp;keywords=C%23+3.0+o%27reilly It got no 5 star, and have more low stars. Again, read the reviews, and make up your own mind.
I think most experienced programmers prefer **not** reinventing the wheel. I'd rather be working on the problem I'm trying to solve than re-solving a problem another library has already solved for me.
You can still use 3^rd party frameworks and toolsets for business functions, if they meet your functional requirements.
Absolutely, our company relies heavily on wpf. IMO the best/easiest solution for windows desktop applications.
What I tried to say is.. There's not really anything to give feedback to. There is a tiny description text, a screenshot that describes nothing and barely any source code. But even the description text is misleading. Are you writing contact manager system? A contact manager program? Or are you writing an MVC framework? Are you using an existing library to import android contacts, or are you writing a library for this too? The screenshot is too little to even be able to see anything valuable. All I can see is a mostly empty window with an old fashioned design (personal opinion) which now already includes advertisement. Documentation? Non existent. There's nothing more than the description text and the screenshot. Code? Well.. There's no description of the overall setup, so one has to work through that himself. What is misleading is that you have a "WPF" project, but also a "App.WPF" project. Where's the difference? The name indicates nothing valuable. Then you have a *Data* project that contains interfaces (often also called contracts), and a *Serialization* project that contains the actual data classes (also often called DTO - domain transfer objects). I don't see anything serialization related in this project, besides the usage of the `SerializableAttribute`. Then you have a `GroupReository` class. What's that supposed to mean? Did you mean *Repository*? Always make sure you wrote the names correctly. This should latest in the checkin/commit be noticed. Another thing is the file named *Window1.xml*. Really? A default name? Give your stuff always meaningful names right away. And why do you add **obj** and **bin** directories in the source control? They should not be there!
I used to like VB.NET and switcht also over because of a friend. And now if I look at the syntax of VB.NET, I start to think "this doesn't look right" 
Why create a list? Why not use `IEnumerable&lt;T&gt;` and `yield return`?
Works fine for me. Other than some libs missing (libtox.dll is not found) the Designer opens just fine.
Yes, already tried that. I also get these errors on pc's without ReSharper installed.
Win 7, I'm at work so I can't test it under W8. Using VS2013
Thank you for testing though! Do you have Windows 8.1 at home or just 8? It looks like the errors are only occuring on Windows 8.1, yes, this sounds weird.
Another example I ran into over the last several days: Rule objects named "tag" and Tag objects named "rule". Confusing and infuriating all at once!
I have 8.1, I'll let you know...
&gt; Yeah, that's the known concept of our brain's multi tasking. It's hard to do 2 things at the same time no matter what you do [Citation needed] Besides, nobody said they programmed Java and 5 seconds later were typing C# in the same document. They're different languages for different projects or parts of a project. It's not a big deal at all. I have zero problem writing a bash script and then opening up KDevelop and working on a C++ program and going back and forth. What you seem to be implying is that if someone learns to play a guitar, they will not be able to pick up a bass guitar better than had they ONLY learned to play bass guitar. And that's pragmatically false. Learning anything in music builds your understanding of the fundamentals of music theory (even if you don't realize it) and makes it easier to pick up other instruments. The exact same thing applies to programming. The more different languages you learn, the more mistakes you make and learn from, the more fundamentals you learn.
That would be great! Thanks.
Correct all his code, then check it in with the simple description "You're doing it wrong"?
Back when I was using VS2010, I had a personal project written in C /.NET. I was annoyed by the lack of Intellisense, so I got a C# book from the library and converted it to C#.
There is surely no way he could consider this disrespectful!
I hope it's not one of those obscure bloody issues that can only be found on a Google cached version of a forum page whose solution is renaming a file or changing a registry setting hidden deep within the bowels of Windows. Good luck.
Smells like it haha. 
Haha that would be quite a bummer.
**What.** You hacked Windows, didn't you?
I brought it to the attention of our boss, and he wants me to address it with him personally. We do value this sort of thing as a team, and my boss is not a micromanager so being able to organize ourselves and settle any disputes without his intervening is pretty important to our culture and team feel. I agree with this approach as well; if your neighbor is making lots of noise on a weeknight do you immediately call the police to file a noise complaint or do you give the neighbor a chance to tone it down without involving the embarrassment and cost of a police visit? If it becomes a consistent problem or they disregard your requests, it is time to involve the authority.
/u/InvisibleIgnoreMe's response is valid, but there's also the general case of build servers. You shouldn't install Visual Studio on a build server, and instead just use the platform SDK.
&gt; Especially now that Metro is effectively deprecated. wat
That's essentially what I'm trying to do. I want to privately chat with him and just explain some things that need to change in order for us to remain efficient going forward. I don't want to hurt his feelings, make him feel threatened, alienate him (he's a teammate after all, not just a coworker. I should have used that word to begin with), or disrespect him in any way. I know that none of this can be completely avoided most likely because we all take things personally to some extent, especially when the quality of our labor are called into question. So I'm just trying to get tips on the gentlest way I can confront him.
&gt;So I'm just trying to get tips on the gentlest way I can confront him. Start by not making it a confrontation :)
If Windows 9 runs them in a window, the advantage touted to the consumer for Windows 8.x ("Looks just like a tablet!") doesn't matter any more. And if the user doesn't care/can't tell the difference, what's the point of writing Metro style apps? 
Try to get your team lead or PM to implement code reviews.
I'm in the same boat as you. My boss started a WPF app and had to abandon it. I inherited it with zero WPF experience, but was amazed at how simple it was to pick up. I'll go back to WinForms only at the end of a pitchfork.
I self-taught myself C# by "translating" a simple app my company had from VB.NET. This allowed me to pick up the syntax pretty easily, and the switch from VB.NET to C# is pretty trivial.
I would suggest starting some sort of "Lunch &amp; Learn" meetings where you can discuss best practices, coding standards, and outside resources without singling this person out. Then, if they continue you could start some sort of code review schedule and use the meetings as reference points.
That sounds like the json project is primary to me. Thanks.
classic /r/csharp response despite obvious sarcasm :/
EF can handle raw SQL so it can handle anything so long as you pretend you aren't actually using it and write straight ADO.NET code. And you can pretend you are using Code First but still use database first patterns to get stored procs.
There might not be a guaranteed way to not offend. I would say go into it with a positive and open attitude. Bring a copy of the standards and be prepared to explain the reasons for each violation. You should assume that he's just inexperienced or doesn't understand the need for the coding standards. Approach it as a teaching opportunity. From there, you'll find out more. If he truly didn't understand, then he is more likely to take it well. If he's blatantly disregarding the standards then he is more likely to get offended and shunt blame, I'd think. In either case, you come out ahead. Either you begin to improve his coding or you have solid evidence of a bad apple and can approach your boss. Your boss is probably looking to see how you handle the situation. In all cases, be polite and respectful and you'll be fine.
I do this a lot at my current job. I'm a senior-level dev just below management. Treat it like a code review (maybe clear this with your manager first though...). Sit down with him and go through the code you think is bad and **explain why**. I can't stress explaining enough - people tend to react badly to 'this code is shit' but no so much to 'hey you should do this like this for reasons X,Y,Z". You're going to hit his ego either way - but turn it into a learning opportunity. 
"Lunch &amp; Learn" sounds like using the lunch break for this.. Which I'd heavily suggest to not use the lunch break for anything than having a break.
This is solid advice, thank you!
I'm hoping and aiming to move into a senior-level position this winter, so stuff like this is going to be my bread and butter. I'm hoping I don't suck at it!
I am using ConEmu over command prompt. I didn't know about Powershell. You mention it is as robust as bash or zsh, any good links/resources on how to best use it?
Sweet! I will try it out. Thanks
 that was not the only option I missed actually, found a few others on the way too (optimize, unsafe, align etc...). 
 Good point will look into that. Thanks!
The unsafe parameter doesn't do anything other than allow you to write unsafe blocks of code, which allows you to pin objects (prevent them from moving around in memory or being garbage collected) and perform pointer operations. Enabling it doesn't directly improve performance.
Thanks for the suggestion but I don't know much about ruby. I will ask around the office though, thanks for the suggestion.
I struggled with it at first - I think everyone does. I'm very young (24) and had a lot of problems getting the older staff members to respect my decisions/critiques at first. The biggest advice I can give is approach it as a teaching exercise. Developers usually have really big, easily damaged egos - but the good ones love to learn. It's one of the best parts of my job now. 
Doesn't it disable array bounds checking?
Huge usage, web apps are hot but there are somethings you can only do with a complied application. In particular if you want to make effective use of the local hardware to do large computation for you.
EDMX generates simple objects by default now. Your example isn't really code first because it precludes the ability to write the code first and then generate the database from it. Your example is also requires writing more SQL than using the native DBCommand objects that EF supposedly replaces. 
Perhaps not use "violation" as it a harsh term and would get someone on the defensive. the idea is to bring this to their attention in a way that you want to help them out. Help them get better. :) 
Thank you, I will follow these guidelines.
I think this would be amazing for rule based engines especially financial nominal coding strings where authorisation needs to be mapped to specific strings! Good work, I will find an excuse to use this at some point!
We should definitely swap pc's. 
Yes, agree!
No. It is only for enabling the usage of [unsafe code blocks](http://msdn.microsoft.com/en-us/library/chfa2zb8.aspx). You CAN write code inside an unsafe block that bypasses array bounds checking, but of course the issue with that is that the compiler can't and won't check to make sure that what you're doing is valid. I wouldn't worry about array bounds checking anyway, unless you can demonstrate that it is noticably impacting the performance of your application. Remember that premature optimization is the root of all evil.
Explain what you're really trying to accomplish. Are you trying to iterate over the keys in a dictionary? If so. Dictionaries have a member called Keys, which, given Dictionary&lt;TKey, TValue&gt;, is a KeyCollection (implementation of ICollection&lt;TKey&gt;) of TKeys. You'd probably just be better off querying the Keys member with Linq or something.
Don't really need regexes for this, a simple string.Format() would suffice.
 var recognized = myDict.Keys.Any(k=&gt;myString.Contains("!" + k + "!")); Alternatively, var rgx = new Regex("(" + string.Join(")|(", myDict.Keys.Select(k=&gt; Regex.Escape("!" + k + "!"))) + ")"); var recognized = rgx.IsMatch(myString);
I would approach it by saying it's important to have consistency, and follow a convention to make code more readable, especially for contractors or new hires. If you have good reasons for asking him to code a certain way, I'm sure he/she would understand. We happen to have a lot of code reviews, with major features requiring a pull request (and thus require approval). Some good tips here http://programmers.stackexchange.com/questions/23472/dealing-with-co-workers-who-do-not-have-a-consistent-coding-style
That doesn't make sense. Do you mean `Replace`?
They'll run fullscreen on tablets, and with universal apps your app will work on WP8.1 and, at some point, the Xbox One. If your app is only designed to run on a desktop then yeah, Metro might not be useful, but it never was really.
How is this different from your previous question that was answered? http://www.reddit.com/r/csharp/comments/2eeber/search_and_replace_with_dictionary_question/
Nevermind, I misread OP's post. Ignore me.
To be fair, for personal projects I love winforms - ofc with 3rd party such as telerik. Especially because everyone can use it, thanks to mono. If I had to choose between winforms and wpf as a starter, wpf would be the better choice. You have to do so many custom controls from scratch for winforms, it could frustate some dudes.
&gt; Which sort of negates their purpose. That doesn't make any sense. If anything, they'll become more versatile, because you can write one app that can target Metro on tablets, desktop *and* WP.
 * Sometimes the designer don't update fully. Pls press Ctrl+Alt+D or CTRL+Alt+T and check out the Document Outline. Maybe one control is inside another.
'str' in your function needs to get tested to see if it makes it to your function call. The testing is what I am looking for.
Their purpose is to use a non-legacy runtime with managed networking, background operation, and push notifications in order to achieve better security and battery performance. The restrictions aren't arbitrary.
That... Doesn't make much sense. What do you mean? `str` is what you pass in, the string in which the values should be replaced.
previously I had it so 'str' would get tested for a character '!" using Regex. If it contained the character then your function would be called. '!' denotes needing to be replaced. Now instead of a regex, I want to test 'str' if it contains "!key!" and if it contains then replace all instances of any "!key!" occurring in 'str'. EDIT: not using regex to test for a special character and instead checking for !key! itself, made me realize I can probably use your function for the entire thing. The part that confused me is the dictionary does not contain the "!" char to denote a replacement to occur
Having been on the receiving end of this type of a discussion (for slightly different, but incorrect reasons) I can offer some insight on what not to do (however it looks like several people have already given some good do's and don't's): * Don't make it personal. * Provide good examples that contrast what he's done versus what should be done. (e.g., the minification example is a great one). * Bring the documentation that states how things are to go and have him read through it. * Be light-hearted about the situation. It's not the end of the world and he needs to be aware of that too. * (Pretty sure I saw this one before) Don't be accusatory. (May also be too similar to my first point). I think that's all the points I wanted to touch on.
That is exactly what my method does... public string DictionaryReplace(string str, Dictionary&lt;string, string&gt; map) { if (str == null) throw new ArgumentNullException("str"); if (map == null) throw new ArgumentNullException("map"); var regex = new Regex(string.Join("|", map.Keys)); var newStr = regex.Replace(str, m =&gt; map[m.Value]); return newStr; } // Usage DictionaryReplace("foo!key!bar", new Dictionary&lt;string, string&gt; { { "!key!", "hello" } }); // This method call will return the string "foohellobar" Note the second argument, the `Dictionary&lt;string, string&gt;`. The key will be what is looked for, the value is what is being replaced with. So **!key!** will be replaced with **hello**. You can change these values to whatever you want - you can even specify multiple keys and values.
see in my dictionary keys are defined as key. str defines them as !key! what i have working right now is if ( myDict.Keys.Any(k=&gt;str.Contains("!" + k + "!")));// this LOC was taken from 'jpfed' above { string newstr = DictionaryReplace(str, myDict); str = newstr.Replace("!", ""); } So I end up with a LOC to just remove the "!" EDIT: my code is failing right now i have str set as "!r!key" and the conditional is being hit and end up with "rvalue", when in fact I believe it should be bypassed. working issue right now. will post when correct 
Just go full Linus on him. Make it public, schedule a group meeting to directly laugh at the code with the whole group. Accuse him of being dropped on his head as a baby. Tell him that only retarded mongoloids could come up with this code. Delete all the code and then destroy the source control versions. Tell him you won't allow your eyes to be soiled by such filth any longer. Make sure you are wearing Tom Cruise sunglasses during the whole affair. And at the very end, try to high-five him with you standing up and him sitting down, to solidify the hierarchy physically. "I'm only ribbin' 'ya, but yeah, fix that shit, ok BUDDY BOY?" This will earn you incredible respect and possibly bring you into deity status among the unwashed masses in your office. Accept this responsibility. Own it.
"Hey &lt;Coworker&gt;" "What?" "Name your variables properly you jerk" Its all about tone really. 
 public string DictionaryReplace(string str, Dictionary&lt;string, string&gt; map) { if (str == null) throw new ArgumentNullException("str"); if (map == null) throw new ArgumentNullException("map"); var regex = new Regex(string.Join("|", map.Keys.Select(x =&gt; "!" + x + "!"))); var newStr = regex.Replace(str, m =&gt; map[m.Value.Substring(1, m.Value.Length - 2)]); return newStr; } Problem solved.
I could go for 10% of your coding skills. Thank you!
I am using mahapps right now and I absolutely prefer it over anything from the big name companies since it leverages pure wpf. As pointed out, some of these controls, while they give you some good functionality out of the box, has some drawbacks, especially when it comes to performance and styling. Mahapps gives you all the sweet metro look for free and much easier to tweak since you have access to the source code. 
Don't go full-Linus on him. I think that most of us would appreciate some solid feedback on things we could do better. Let's face it, it's a wild world in this industry, we are all bound to be doing at least 100 things wrong. I think a core part if being a good dev is being able to receive feedback/criticism. That said, since it can be sensitive (don't call my code-child ugly!!) It needs to be approached from a logical point. This means the conversation shouldn't be able where we put the opening curly brace, it should be about why we should name things properly and give actual points to why we should do that. Biggest point being is it makes maintenance less if a bitch and it saves time. I've been on the receiving end of these conversations often enough, and though they may be awkward or even bum me out at times, if the guy giving me the feedback takes a mentoring role rather than a scolding role, it's all roses at the end 
&gt;Yeah, that's the known concept of our brain's multi tasking. It's hard to do 2 things at the same time no matter what you do &gt;[Citation needed] [Wiki](http://en.wikipedia.org/wiki/Human_multitasking) &gt; Besides, nobody said they programmed Java and 5 seconds later were typing C# in the same document. They're different languages for different projects or parts of a project. It's not a big deal at all. Yeah that's true, I just wrongly assumed what this is a single project with 2 separate programs, maybe server and client. More realistic example of constantly switching between languages is making a web site where you (probably) need to switch between html, javascript, css and something else all the time. &gt;What you seem to be implying is that if someone learns to play a guitar, they will not be able to pick up a bass guitar better than had they ONLY learned to play bass guitar. No, I'm not implying that. I actually agreed with what you said in the first reply to themcp.
Feedback is welcome. Example expression: IF IStreamProvider IF IXmlDictionary IF IHasXmlNode IF IXmlLineInfo IF IXmlNamespaceResolver IF IApplicationResourceStreamResolver IF IXmlBinaryReaderInitializer IF IXmlBinaryWriterInitializer IF IXmlMtomReaderInitializer IF IXmlMtomWriterInitializer IF IFragmentCapableXmlDictionaryWriter CL NameTable CL UniqueId CL XmlAttribute CL XmlAttributeCollection CL XmlComment CL XmlConvert CL XmlDeclaration CL XmlDictionary : IXmlDictionary CL XmlDictionaryReader CL XmlDictionaryReaderQuotas CL XmlDictionaryString CL XmlDictionaryWriter CL XmlDocument CL XmlDocumentFragment CL XmlDocumentType CL XmlElement CL XmlEntity CL XmlEntityReference CL XmlException CL XmlImplementation CL XmlNode CL XmlNodeList CL XmlNodeReader CL XmlNodeChangedEventArgs CL XmlNotation CL XmlReader CL XmlReaderSettings CL XmlResolver CL XmlText CL XmlTextReader IF IXmlTextReaderInitializer CL XmlTextWriter IF IXmlTextWriterInitializer CL XmlWhitespace CL XmlWriter CL XmlWriterSettings CL XmlCharacterData CL XmlDataDocument CL XmlLinkedNode CL XmlNamespaceManager CL XmlNameTable : NameTable CL XmlParserContext CL XmlProcessingInstruction CL XmlQualifiedName CL XmlSecureResolver CL XmlSignificantWhitespace CL XmlUrlResolver CL XmlValidatingReader CL XmlXapResolver CL XmlBinaryReaderSession CL XmlBinaryWriterSession CL XmlCDataSection CL XmlNamedNodeMap
Course at the community college to start, then OJT along w/google-stackoverflow-msdn-fu
A new console app in VS 2012 -&gt; check project properties -&gt; click build tab -&gt; see Prefer 32 bit.
I've never noticed or even read about this before. Thanx for the correction. AnyCPU is difficult now to define in my mind since I never worried about ARM, only x86/x64
This will be SO HELPFUL: http://www.linqpad.net/ It looks like it is for queries, but it is really just a C# scratch pad. It can run snippets like ths: void Main() { CouponCodes("CouponPrefix", 6).Distinct().Take(300).Dump(); } IEnumerable&lt;string&gt; CouponCodes(string prefix, int randomDigits) { var rand = new Random(); while (true) { yield return prefix + new string(Enumerable.Range(0, randomDigits).Select(d =&gt; "0123456789"[rand.Next(10)]).ToArray()); } } I work as a professional and use LinqPad nearly every week, and would have LOVED having something like it when just starting out. Also, it is really important to READ code, not just write it. If you really want to learn, go find some questions on Stack Overflow and try to answer them. Give yourself about 15 minutes to try to answer each question, and do it yourself, even if someone else beats you to the answer. Even if you don't figure it out, you are likely to see the actual answer show up pretty soon anyways. 
It's tricky because there is no canonical standard for Angular code like there is for c#. I've seen lately that a few people have published theirs on their blog. Maybe you could start one for your team and get input from everyone, including that guy, so then if he breaks the standard you can kindly remind him. Someone already mentioned code reviews, well having a standard you're supposed to follow helps there as well. Then it's also about your coworker's attitude in general and towards you as well. I've worked with people who did really crappy code and when I'd try to suggest some changes they'd seem to understand only to produce differently crappy code. Others readily admit they rushed and are willing to go back and fix things. If you talk to him and he doesn't care, you can always go to your lead/manager or whatnot and explain your concerns.
I don't know what exactly I'm looking for in the Document Outline 
Can you be a bit more specific? What kind of things are you looking to do? Generally I'd suggest you look into WCF as a starting point. 
Yes tcp/ip sockets in c# ISBN: 0124660517 http://amzn.com/0124660517 Short and to the point
Just regular programs such as IRC clients or FTP clients. Maybe something a bit more advanced in the future.
If you want to do any serious network programming with low latency you're not going to have the best of time in C#. But for goofing about and stuff that doesnt need millisecond latency you'll have fun just playing with TCP/UDP sockets in C#. Try looking at Codeplex and Github. Search for Nuget packages as well for a base - good event driven frameworks already developed.
&gt; you're not going to have the best of time in C# How so? Was I wrong to think C# was the idle language for network applications? I tried Socket Programming in C but I was not a fan of all the low level detail, would C be better?
That's really the right solution to this. It makes it more impersonal, it's about the code, not about personality. Barring code reviews, I'd get the person aside privately and explain that I recently struggled with his code, and I wonder if we could have a "private code review" sometime to talk about it for the purpose of helping him improve his coding practices in regard to writing code that others can easily maintain. If he was agreeable, I'd set it up as a private meeting, and discuss one or two of your problems, show the examples in his code and explain how I was confused by them, and then go over a piece of my own code to demonstrate how I would think about doing the same sort of thing. (In this case I'd be trying to show how the names I use are functionally related to their purpose, and how when I reuse a name it always, always has the same purpose. If there was time, I'd work with him to clean up an example block of his code so we could see how it could be much more readable.) The tone I'd try to set would not be "here's what you're doing wrong," but rather "I felt confused and here's what I was confused about," and with the polite implication that *of course* I know he'll want to be helpful in preventing confusion. I'm used to being a senior developer working with less senior people. I try strongly (and generally by outright explaining this) to set an expectation with the junior folks that one of my goals in working with them is to improve their skill set. At my current job I told folks outright that if they want a promotion I will do my best to help them earn it - and we have someone on staff that went from junior to senior under my guidance to prove it. This is truthful, but it also helps establish trust so that I can be frank with them about problems in a context such that they know that my criticism is constructive. 
So I set a tab order and it turns out that the subject box is by the "Attachment:" and the attachment box is the shorter of the two
Hey, C# has do-while! do { // stuff } while (condition);
Thank you. I know I am not doing that good enough. I have to do a lot of stuff to finish it. Firstly, I need a program to manage the contacts for a small group of people. I got an idea, why not to share the codes with other people. Maybe, that will be helpful for someone. Moreover, I read an article about the ways to run an open source. The article is to promote the openness of the projects. The author said we should start to reach out the community at the start of the project. I took your advices, I won't show my projects again until that is mature enough. 
You can tell I haven't needed it in some years. :)
If you're not a fan of the low level detail then C# is for you! But if you're writing some low latency Forex/Trading application...consider C.
Having spent many years writing low-level TCP/IP using BSD sockets in C, I haven't noticed anything missing in C# (other than the fact that I can't poll a combination of sockets *and* random other file/pipe descriptors which would have come in handy) or any reason it would have any higher latency than C. I mean, most of the C# abstraction is simply P/Invoke into the native BSD socket functions. Care to explain why you think there is higher latency in C#?
I don't think I have ever needed it in the end. Almost used it recently... *almost*
Also, this project is to build up a skill set in WPF for myself too. I wish to build some wpf toolkits in the future. 
I think I used it once about two years ago. Once. One of the languages I helped build had only one iterator, and it was foreach. That worked just fine.
Don't bother with him. C# works just fine for network programming.
I use ModernMix too have windowed metro apps on my desktop and it works great. There are apps like Mint or pdf / ebook readers that are great and don't need to be full screen
Sharing and open source is always good, and reaching out to the community also, even in the start of a project. The problem is the lack of information. Even if someone wanted to help you (which quite honestly won't happen, this is a general problem with most open source projects), where to begin? There's no documentation on the problem, no documentation how it should be solved, no information on the requirements, no guidelines.
I took your points. For myself, that is easier to write code, rathering writing up the documentation, because of the language problems. 
Wow, I thought that project was basically dead. EDIT: &gt; •NHibernate now builds on .NET 4.0 Ok, maybe it is still a zombie.
Hey HarryCrumb! Thank you. I thought I had tried everything. Setting build to x86, deleting .suo, re-inserting the lines which gave an error. Nothing worked. Re-adding the SharpTox library did the trick for me. Have a good one.
I'm glad you've fixed it.
Glad you got it ;)
Haha I'm very glad too!
I wouldn't say it's dead. I know quite a few people (as well as myself) who still use NH.
I love that man. Really, it is much better than the big part of the professors I had in my college courses
Agreed, LinqPad is the shit. Buying a license (pretty cheap and company-wide are available) gives completion as well.
Local variables should be lowerCamelCase, by the way.
We have a couple projects that use NHiberate. I'll admit, I'm somewhat glad to get rid of Iesei. I remember when I was trying to package it up for Debian and had a lot of trouble figuring out the license. I know "they" tracked it down, but I always had an uncomfortable doubt about it. Of course, I also wished Microsoft introduced ISet&lt;&gt; when they added HashSet&lt;&gt;. :)
Enterprise projects have to have long term support and a stable platform. They aren't doing it wrong. There are plenty of libraries which are still built for .NET 2.0 or at most .NET 3.5 for maximum compatibility.
Is there any chance you'll later add more fuel-related properties? If so I'd change it to a class. I'm a little baffled about the list of tires though. Are tires going to be arbitrarily added and removed from this vehicle, or is there going to be a fixed number? 
Use `ObservableCollection&lt;T&gt;` or `BindingList&lt;T&gt;` instead of `List&lt;T&gt;` when databinding. They implement change notifications, List doesn't.
Ah, but you refer to "something relating to Rails, Node, Angular, even CodeIgniter..." Yes, vanilla webforms haven't changed much for awhile now, so many current WebForms devs use extensions to Webforms (I'm thinking Telerik here). The community is *huge* and the support is up to date. Yes, Telerik isn't free, but there sure are a lot of Webforms projects using Telerik in LOB/production.
Iesi is still there because nhibernate still requires some collection types that don't exist in .net. Take a look in this discussion for answers: https://groups.google.com/forum/#!msg/nhibernate-development/_NTLpl2R4_o/7DAjUGYV85EJ
Maybe you should make a TireSet or something like that for that. So you can do: `car.Tires.FrontLeft = ...`
Is it a different event? The PropertyValueChanged isn't firing when I'm changing this through the PropertyGrid.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Reliant Robin**](https://en.wikipedia.org/wiki/Reliant%20Robin): [](#sfw) --- &gt; &gt;The __Reliant Robin__ is a small [three-wheeled car](https://en.wikipedia.org/wiki/Three-wheeled_car) formerly manufactured by the [Reliant Motor Company](https://en.wikipedia.org/wiki/Reliant) in [Tamworth](https://en.wikipedia.org/wiki/Tamworth,_Staffordshire), England. It is a small microcar 3 wheeler which was provided in several versions (mk1, mk2 &amp; mk3) over the course of 30 years. It is also the 2nd most popular fiberglass car in history, with Reliant Motor Company being the 2nd biggest UK-owned car manufacturer for a time. &gt;==== &gt;[**Image**](https://i.imgur.com/HzFX8OI.jpg) [^(i)](https://commons.wikimedia.org/wiki/File:Reliant_Robin_Green.jpg) --- ^Interesting: [^Reliant](https://en.wikipedia.org/wiki/Reliant) ^| [^Reliant ^Kitten](https://en.wikipedia.org/wiki/Reliant_Kitten) ^| [^Only ^Fools ^and ^Horses](https://en.wikipedia.org/wiki/Only_Fools_and_Horses) ^| [^Reliant ^Rialto](https://en.wikipedia.org/wiki/Reliant_Rialto) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+ck21fao) ^or[](#or) [^delete](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+ck21fao)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
modulation is always important, especially in OOP, and from my experience, if you have to ask whether to create a new class, you probably should. In this case, however, I don't think so. I just don't think that fuel consumption and tank size belong in the same class. Sure, they both have to do with fuel, but otherwise, they aren't connected and the two values will probably never need to be transferred together. Consider this example, one of your cars' fuel tank will be upgraded to a larger size. With your current configuration, you'll have to change one value in your car (FuelTankSize), but if you use a Fuel class, you'll either have to internally change that car's Fuel's FuelTankSize or, even worse, you might have to redefine the car a new Fuel and copy the FuelCompusion from the previous one. If you're up for a challenge, consider making two new classes: a FuelTank class, that will store the size, the model, year and such, and a Performance class that will include FuelCompusion and other car performance details (I'm not much of a car expert, as you can tell)
ObservableCollection&lt;T&gt; fires the *PropertyChanged* event, not the *PropertyValueChanged* event. Generally the event fired by INotifyPropertyChanged is PropertyChanged and that's what causes bindings to update ... 
Yup, like that would be good :D
It looks like you've gotten plenty of answers from your other threads.
The PropertyChanged event fired by an ObservableCollection&lt;T&gt; is **not** a PropertyChanged event fired by anything inside the collection. You need [an extended ObservableCollection&lt;T&gt;](http://stackoverflow.com/a/5256827/899316) that takes a collection member's PropertyChanged event then bubbles and refires it as something else, in this case a NotifyCollectionChanged.Reset event. edit: then I realize that this post is about PropertyValueChanged. oh well :/
lol, this guy is obsessed with C# vs. Java.
I ended up using a BindingList and creating another event handler. Thanks for helping steer me in the right direction. 
Struggling with this same thing with a self hosted environment. Im experimenting now with a httpContextshiv library. It seems to be close while also handling some things in a message handler. What I'd like to see work is the simple membership provider with OAuth and a self hosted environment using Owin.
For context...im using an angular spa front end, and webAPI 2 self hosted backend. Its close, but id like to be able to use the authorize attributes for roles on the controller methods, but it isnt working.
Things they may ask that are c# specific: Favorite features from newer versions (4.0, 4.5). Read up on vNext. LINQ to SQL. Extension methods. MVC if there will be Web development involved. Entity Framework. Favorite open soure projects. Dependency injection stuff. WCF. WPF. Interfaces. Naturally any concept in OO should be fair game so inheritance, classes, properties, scope, etc so brush up on that.
I'd suggest looking at [ASP.NET Identity 2.0](http://www.codeproject.com/Articles/762428/ASP-NET-MVC-and-Identity-Understanding-the-Basics) for an example of how they do it. If I understand correctly, you're creating an OAuth2 authorization server, and the part you're having trouble with is what to do with the OAuth authorization code? If you look at how they handle it with ASP.NET Identity 2.0, think of a user having several different kinds of logins. One could be a username and password, another could be a Google oauth code, another could be from your authorization server. The Identity framework considers Password, Google and Your Auth Server as Providers, and the authorization code as the Key. One suggestion, OAuth2 is very complex and needs to be done right. I'd suggest testing out your authorization server using a client that's known to be working, like the ASP.NET Identity framework. Once you're sure that's working, you could also test out your resource owner / application code using google oauth, though that might be less helpful.
This is less of a big deal than the other comments, but SelectedTires should probably be List&lt;Tire&gt;, not List&lt;Tires&gt;.
So I opted to not go code first, as I had plenty of other battles to fight. It seemed to work well until it didnt. Im getting bearer tokens via a self hosted API (ie not in a web project with a traditional HttpContext, but accessed from a non asp.net environment via angular (post/get). I have most of the models from identity 2 configured after fighting forever to use an int instead of a guid for an id. I have an authcontext class and usermanager...etc etc... It doesnt seem like I can actually get the roles to be identified via the authorize attribute, although one is rejected if a token isnt passed in the header. Any ideas what I might be missing here?
Deathbedhandjob had a good list but I would also review reference types and value types. Also is a struct of reference types a ref or value type object? What about a list of value types? You can cover a lot of good ground by just investigating questions like these. As for strategy a lot of guys fail at technical interviews because they treat it like a test. Make it a conversation and drive. Show then what parts of c# your are passionate about. Get their attention. Don't be the typical dude that just answers questions without providing context and personality. Finally it's okay to say I don't know but follow that up with some reasoning of what you think the answer is or what specific source you would use to find out.
awesome &gt; poop
1) Visual Studio. 2) The language evolves and gets new features more regularly. 3) It's a lot less verbose than Java. 4) For some things, you *must* use it. There's no option, so it's pointless to ask "why". As for Java, it is Java. It's not necessary to tout it, because it's dominant. It's not necessary to bitch about it, because Java devs will do that for you. They're both fully capable languages that can be used to create great software. I'd say that among developers I know (including myself) with experience using both languages, C# wins slightly. I'd prefer to use it, but I'll do work in Java and it's not terrible or anything. Going between the two is so trivial I hardly consider them different languages; C# is just like the "paid" version with a few nice features. I really don't think there's much of a "vs" war between the two, because its like Free Methodists and United Methodists having an argument, or something. They're the same thing with a few minor differences that only really matter to people who are fundamentalists, and generally aren't actually contributing fuck-all to the community.
What the heck is "FuelCompusion"? Compulsion? Consumption? Confusion? fuel consumption is tricky because it's not just an int: it's a calculation of either a) how far you can go on a given amount of fuel (i.e., miles per gallon), or b) how much fuel you consume given a set distance (e.g., litres per 100 kilometres). And many factors affect fuel consumption: displacement, aerodynamics, tire pressure, weight, payload, etc. edit: ok, sure make it an int. Just add a comment to state what that int represents (distance or quantity)
For entry level positions I'm looking for basic Computer Science skills, the ability to communicate, and the ability to take direction. 
- Abstract classes vs interfaces. When to use one over the other. - Dependency injection - LINQ - Different types of variable scoping (private, public, etc.) - Entity Framework - MVC - Design patterns and how one might implement a layered design pattern in Visual studio.
Have you heard of this? https://github.com/thinktecture/Thinktecture.IdentityServer.v3. That might take some of the stress away.
Isn't LINQ to SQL pretty much dead?
I still use it in some legacy projects. I cant refactor that overnight.
Fair enough it's still in legacy projects but perhaps someone looking for a position is better off putting more time learning about LINQ and EF then LINQ to SQL.
Thats for sure yeah. 
I'd add: Know what SOLID means The difference between reference and value types. TDD/Unit Testing fundamentals. LINQ in general High level understanding of Agile &amp; Waterfall Know the access modifiers for class &amp; properties (private, public, internal, sealed, abstract, virtual, etc) I wouldn't focus as much on specific implementations (LINQ to SQL, WPF/XAML, WCF, Entity framework, for example) for anything more than high level understanding of where they fit in, unless you know for certain what they are using. You are really only going to bring value on these things if you have work experience with them. Ultimately -- know as much as you can and admit when you don't know. Make an educated guess if you can, but tell them it's a guess and explain the reasoning behind it. The ability to make an educated guess and explain the reasoning will probably be a more valuable answer than the right answer, in some cases. 
It's a bit difficult to answer, because it depends on the rest of your code - for example whether or not you're tracking multiple orders, or even multiple students. Track an order using a class, let it have some way of marking it as cancelled - a State enum, or a Cancelled boolean, or whatever. If the card is withdrawn, set its state to Cancelled and update the interface accordingly. Just a thought.
I think that all you need is just an event for CardRemoved or something like this. Then you will just be able to get this event and do what is necessary to revert UI to its original state. It all depends what library or SDK you are using. I'm in the middle of writing a similar program, but it will be handling stationary conferences, so there will me multiple NFC readers that have to communicate with each other in order to keep the database in sync.
FWIW, the one on his list that I've been asked *every single interview in my career* is the OO stuff. Specifically interfaces vs base classes. Abstract, virtual, override. Gotta be lights out with it.
I do have 3 computers running the program against one MySQL Database. So while selecting meals it just counts the amount of meals for that given day one up or down. I do have an order class, which already has events for OnMealAdded and OnMealDeleted, for example. I don't feel like I have to check the state every line of code.. 
ENTRY LEVEL means you don't know anything. You know about things. You know they exist and when you should use them, but your experience is mostly theoretical. They want you to know as much as possible, but they are paying you less because they expect you to learn on the job. Make sure they know you love learning and strive to always get better and that you understand that your job is to learn as well as it is to code. If they only want you to code monkey for them and want to cheap out and pay entry level for a mid level programmer, and they don't expect a new dev to spend time learning, then you won't ever get better, hate your job and be miserable. 
If I wanted to do it with an event, how would I observe the card reader? I can get the adress of the cardreader bei GetCurrentAdress and I can also see via the string that it returns if there is something plugged in or not. But who observes that? Another thread which has a while true loop and if it finds out that there is nothing plugged in it fires the OnCardRemoved event? The API I'm using doesn't give me events or monitors
And if you don't need such a full solution, check out some of Thinktecture's older stuff, which was much more geared towards specific scenarios.
Howdy! I went ahead and attempted to answer your question [on SO](http://stackoverflow.com/a/25552026/1712853). I can respond here or there if you have any questions.
Create a class that implements INotifyProperty with a property such as CardStatus (enum or bool). In that class, create a timer that calls GetCurrentAddress() and update the CardStatus property appropriately. In your master WPF page (main window or something like that), bind it to the CardStatus property, so when it changes to CardRemoved, you can call code to rollback the Order, perform other clean up and return to the Home screen. edit: Instead of CardStatus, make it a general SystemStatus enum, so you can have CardRemoved, Timedout, MachineHasBeenStolen, etc
I think a lot of other posts are missing the point of an entry level position. The thing that made people fail at entry level coding positions at my job was lack of interest or willingness to solve a problem. Solving problems is the core of programming, and if you need your hand held constantly then you're not in the right job. No one expects you to write an MVC framework straight out of college/your first job (for those self educated). Although it does help to know the core principles of programming (conditionals, loops, some OO, etc.)
You have too love this job. It's an awful job if you're not interested in solving problems. If a person is only doing it because it pays well, it won't pay well for long...
To me it's a job I'd do without getting paid if I didn't have to worry about paying for things. But then I see people who do it because they need a job. And not only are they not happy, but they produce low quality work. It works, but it's not maintainable or stable.
If you use Visual Studio (since 2010 professional I guess), you can use the built-in profiler and guide lines on MSDN. It's actually pretty good :) 
I always say if I won the lottery, I'd just start coding for me instead of them. Get someone to pay you a lot of money do do something you love and you'll always be happy. Of course as I am good at math, I don't play the lottery, but you get the idea... 
As /u/butteredthoughtz mentioned, start with fizzbuzz. Past that, maybe farm some ideas from /r/dailyprogrammer. That's a decent amount of small tasks ranging from beginner to intermediate. If you're really desperate, here's what I got from my current company when I joined them as a take-home post interview task. &gt; We’ve received a request to translate our application in to the Hsilgne language, ASAP! &gt;Thankfully our developers have already used good coding practices and localized all the strings (and Hsilgne is just backwards English). &gt;What we need you to do is write a simple application that will take a resource file (like the included sample) and reverse all the resource values like this: Confirm =&gt; Mrifnoc. &gt;Requirements: &gt;1. The application should let the user choose an input file and the output file. 2. The application should generate a new resource file with all of the resource value strings reversed but should not change the names. This whole process involved creating a UI, reading/writing files (.resx files, to be precise), and string manipulation. I banged it out in about an hour or so, so it could be useful for interviews. 
We used FizzBuzz for pre interview screen. We need something more complicated but not something that is going to fry their brains.
I really like this one. If I am ever put in charge of technical interviewing, this will definitely go on the take home test.
My favorite interview technique for something like this is to simulate the work environment. If you do agile, come up with a user story for your coding problem (FizzBuzz is a good start, you may be able to come up with a simple example from your industry) and break the 1.5 hours into 9 10 minute chunks. The first 10 minutes is workshop, the next 10 is planning, then 6 implementation "days" (9 min work, 1 min standup) and then a 10 minute retro. The classic waterfall interview technique (here's a problem, go) is not how actual work gets done and is boring and awful for all those involved. The compression of time into small chunks with opportunities for changing priorities, pair programming, and etc will give you a taste not only of how they go about solving problems and writing code but also how they work under pressure and respond to semi-uncomfortable situations. You can involve as many or as few people in this process for as little or as much time as you'd like. It's actually pretty fun if you have to get 5 done in a day and you'll be able to compare and contrast working with people. Some candidates will be amazing devs but awful at planning, others will be vice versa, and some will embrace the exercise and get way more done than you think they would based on their resume. Then you can pick the people who best match with your desired culture and team needs.
I don't understand how this would be practical, but it intrigues me.
I wonder what the C# version would be..... In the link you posted there's C#, but not using reflection.... static void Main(string[] args) { var x = 2; var y = 2; if (1 == 0) ; { ++x; } Console.WriteLine(x + y); }
That's exactly what I was looking for! Thank you :) For anyone interested, I looked for it because someone said that "Five times a hundred is five-hundred", and I wanted to give him a piece of code that shows otherwise.
At my old place we gave them something like this: Using C# only but any combination of data access, middle tier, and presentation technologies, create an application that: 1. Displays Northwinds sales data in a tabular format 2. Highlights sales under a given amount in red, and highlights US sales in green. 3. Allows a user to filter the data by customer name. We allowed 1 hour for this, with the expectation that: - Junior devs would complete the first requirement and start the second. - Mid-level devs would complete the first two requirements and start the third. - Senior level devs would complete all three requirements. - Tech leads/architects would complete all requirements AND add more functionality or improve performance (eg async operations, web services, etc.) 
 for (var i = 0; i&lt;= end; i++) { if (i % 3 == 0) Console.Write("Fizz"); if (i % 5 == 0) Console.Write("Buzz"); else if (i % 3 != 0) Console.Write(i); Console.WriteLine(); } I wonder how many beginners would have trouble to get what this does. :/
not sure if I understand what you want to acomplish but I think you should read about [this](http://en.wikipedia.org/wiki/Comma-separated_values)
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Comma-separated values**](https://en.wikipedia.org/wiki/Comma-separated%20values): [](#sfw) --- &gt;A __comma-separated values__ (__CSV__) (also sometimes called *character-separated values,* because the separator character does not have to be a comma) file stores [tabular](https://en.wikipedia.org/wiki/Tabular) data (numbers and text) in plain-text form. [Plain text](https://en.wikipedia.org/wiki/Plain_text) means that the file is a sequence of [characters](https://en.wikipedia.org/wiki/Character_(computing\)), with no data that has to be interpreted instead, as binary numbers. A CSV file consists of any number of [records](https://en.wikipedia.org/wiki/Record_(computer_science\)), separated by line breaks of some kind; each record consists of [fields](https://en.wikipedia.org/wiki/Field_(computer_science\)), separated by some other character or string, most commonly a literal comma or [tab](https://en.wikipedia.org/wiki/Tab_character#Tab_characters). Usually, all records have an identical sequence of fields. &gt;==== &gt;[**Image**](https://i.imgur.com/6LACqDJ.png) [^(i)](https://commons.wikimedia.org/wiki/File:CsvDelimited001.svg) --- ^Interesting: [^Tab ^key](https://en.wikipedia.org/wiki/Tab_key) ^| [^List ^of ^file ^formats](https://en.wikipedia.org/wiki/List_of_file_formats) ^| [^Tab-separated ^values](https://en.wikipedia.org/wiki/Tab-separated_values) ^| [^LibreOffice ^Calc](https://en.wikipedia.org/wiki/LibreOffice_Calc) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+ck30zd2) ^or[](#or) [^delete](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+ck30zd2)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
Haha I wish I could do it in a non-retarded format but unfortunately we have to integrate with shit systems. 
I'm kind of sad you mentioned C# because this is the sort of task that's perfect for F# D:
If I understand correctly, you're gonna need to login, store the cookie from the response, and add that cookie to the rest of your requests. See: https://github.com/restsharp/RestSharp/wiki/Cookies You'll probably want to use [WebClient](http://msdn.microsoft.com/en-us/library/system.net.webclient(v=vs.110\).aspx) to POST to the login page. 
I think this is a case of a classic state machine. Are you modelling your domain this way? Can your state transitions occur per key press? I guess more generally, how do you get notified that a state transition has occurred (such as order complete, add new item etc)?
I had my recent candidates write a vending machine simulator. I had several small requirements like it has to use a database, has to have a basic sales report, and fake coins you could insert as well as buttons to vend a few products. They can choose their technology - Windows Forms, WPF or ASP MVC as long as it's C#. I got some really good solutions from them and they all did it slightly differently. I ended up hiring the guy with the best balance between code elegance, understanding of the requirements and polish. Good luck.
The input is completly via Touchscreen. I thing students would go to the terminal and plug their key in just to see how many money they have on their card. In that Situation is no button press or something. I think the approach via timer might be the best 
One of the better interviews I had actually had me refactor a class. Without mention of any issues, or problems. Just given this class what improvements would you make. In a few cases I had to code a pretty simple 2 class thing. I unfortunately don't recall the details (its been a few years) but it comes down to will they use an interface, inheritance or none of the above. In one case I was apparently the only applicant that went Interface and during the conversation part I was asked to explain why not inheritance. One of the places I worked used the change machine concept, but added some written requirements about implementing a specific interface. The number of people unable to do it was astounding.
Well, it's open source now, maybe we can rely on community support?
(disclaimer) I'm the author. EDIT: Author of the post, not the library ;) 
That seems like such a trivial problem, it's hard to believe anyone applying for a programming job would have trouble with it.
Is performance ever so sensitive that I feel comfortable skipping bounds checks? No, not for the code I write.
I would think mid level programmers should be able to do all of this.
I think that gets the Legendary moniker. Maybe it existed, maybe not, no one left still knows if punch cards were real.
 BigInteger
Not so hard to imagine when non-programmers apply for programming jobs because the pay is sweet.
If you want even more and are happy to shell out some money, you could take a look at dotCover from jetbrains. Can't really say anything about the features compared to the integrated, haven't really used the integrated, and the other not at all.
Ohh clever. That took a moment :)
If you use ildasm/ilasm you can change it at IL level!
Use \\ for escaping the bracket in the last link :)
But, more correct.. (as in not overflowing) Yah. Slower than 'normal' integer math, agreed.
Unchecked is used when overriding the GetHash method.
C# can go from emitting 86 assembly up to fully abstracted patterns. Your internet *connection* is going matter **more** in high speed trading than what C# offers.
You can also do this in C# too
Visual Studio is great for profiling applications that can be run from your dev box. If you need to gather info from production machines you don't have typical access to I recommend PerfView.
Typos and misspellings like "rite". What is this, third grade? Junk. Besides that, checked and unchecked are hardly advanced concepts. This post doesn't handle the issue with any sophistication; can you manually check bounds instead? What are the real performance implications? 
Last place I worked with had a fake API that returned some json. Asked candidates to write a command line app to call it, and present data on the screen. Works well as a pairing excercise that you can do in an hour - touches lots of bases.
Ah i understand now, so the only way you get notified of state transitions is via polling the touch screen / card reader api? In that case the timer class sounds like a fair solution. I know this isn't the question you asked but if you didn't already know about it, this really does sounds like you're creating a state machine. I think a vending machine is the classic example of one
Using the check for updates is one way of doing it. Another is being forthcoming with your desire to see how many people are using it and HOW they're using it. For full transparency, you could release the code for your software on GitHub, which would do a lot toward building trust; in addition, you can make it opt-in by providing an option in the settings for your application and allowing users to choose whether to send data to you. In any case, the data you're looking at collecting is called metrics, and it's a pretty big field. There's a lot more you can discern than just how many people are using your application through metrics analysis. With the right setup, you can discern peoples' workflows, what they do in the application, how often they do something, patterns of behavior, how often they use certain features, how they use certain features, and things like that. The data can really help you to analyze what functionality is really useful and things that nobody use, and can help you to decide what is most useful to work on and support (in addition to user feedback, of course).
Thank you very much for a detailed response. 
If you're using Excel 2007 or later, take a look at the [Open XML SDK](http://msdn.microsoft.com/en-us/library/office/bb448854%28v=office.15%29.aspx). I don't know exactly what you mean by "embed documents into specific cells", but I've used the Open XML SDK to generate custom Excel spreadsheets. [Here's a link](http://msdn.microsoft.com/en-us/library/office/hh180830%28v=office.14%29.aspx) specifically about generating Excel spreadsheets.
I have an alternative idea (I use it when I interview people). Give them a piece of code, it could be in a language they have never seen before - which has a couple of deliberate bugs written into it. Print it onto a piece of paper, and ask them to describe what they are looking at, ask them to commentate as they learn more about the program by comprehending the syntax and structure. See if they spot the bugs - if they dont, ask them to see how many bugs they can find by understanding what they see on the printout. You can learn a lot about how someone thinks when you give them this sort of task - and it stops being about how quick they are at regurgitation, and becomes more of a "how quickly can you understand" type task, which is critical for someone new coming into a (likely) large codebase 
TIL you should ALWAYS learn fizbuz since 50% of interviewers use it as their programming example... 
One of my candidates accidentally skipped a question on our automated test (We used interviewzen.com) but later emailed and said they got to the end and realised they'd skipped it but could they do the test again because they knew they could answer it as it was a modified FizzBuzz (I'd changed the requirements for FizzBuzz and changed the words to foo and bar) I let them through to second stage because the test was as much do you recognise this problem (IE do you read coding blogs) as can you solve FizzBuzz.
Good work.
I believe that Java caches the first 256 integers as boxed values (or the Java equivalent), so perhaps via reflection you could modify the boxed value of an integer.
The article doesn't go into much depth, but the default state is set with the /checked compiler option- /checked- shuts it off, and /checked+ turns it on. /checked- is the default setting. This applies only to Integer overflow, (OverflowException) and only between variables at run-time; if you want to use a constant integer expression in an unchecked manner such as casts like "(byte)0x1234" you need to surround the code containing the expression within an unchecked {} block. Float/Double and (possibly) Decimal data types Overflow but they don't throw an OverflowException even within a checked block; instead they either appear to not change or they become NaN- this is due to the rules following IEEE-754 rules for Floating-Point arithmetic. The reason the default is unchecked is because Integer overflow checking is expensive, since it must be done by software. Unlike the FPU, the CPU's Integer operations do not raise a CPU Exception when an overflow occurs (At least as far as I've seen). This means that arithmetic overflow checks literally mean checking both arguments to every integer operation. I+=1 and i++ turn from ~one instruction to several, which would also impact for loops since that is a very common iterator expression. It is typically better to prevent a situation where your integer operations can cause problems through overflow, however. Either by clamping the involved variables or just standard defensive programming. Usually such operations will occur as a result of User input at some level so sanitizing those inputs to fall within the appropriate range might work. If you are experiencing integer overflows though typically the solution is to use another data type. 
Integer overflow checks are disabled by default. If you want bounds checks, you need to explicitly turn them on- rather than vice versa.
Similar to me though I certainly didn't have the back issues of other programming languages at the time. Nonetheless I think I had a good handle on the basic concepts and for the first little while it was a case of me mentally "translating", something like you've demonstrated, "oh, this construct works similar to this other construct I'm familiar with". For a while I had to keep looking up lambda and delegate syntax in the help files, now it's second nature, etc. The work I do is mainly C# but we have parts that I wrote and maintain written in Java and it's all designed to replace and be compatible with 30+ Year old THEOS BASIC Programs, too; so there are a few languages in the mix. 
How is that clever? The code is trying to be misleading.
A clever trick to mislead (which was the point of the challenge)
Got it working with the following: &lt;DataGrid.RowDetailsTemplate&gt; &lt;DataTemplate&gt; &lt;ListBox ItemsSource="{Binding Path=Orders}"&gt; &lt;ListBox.ItemTemplate&gt; &lt;DataTemplate&gt; &lt;TextBlock&gt; &lt;TextBlock.Text&gt; &lt;MultiBinding StringFormat=" Product: {0} Price: {1}"&gt; &lt;Binding Path="Product" /&gt; &lt;Binding Path="Price" /&gt; &lt;/MultiBinding&gt; &lt;/TextBlock.Text&gt; &lt;/TextBlock&gt; &lt;/DataTemplate&gt; &lt;/ListBox.ItemTemplate&gt; &lt;/ListBox&gt; &lt;/DataTemplate&gt; &lt;/DataGrid.RowDetailsTemplate&gt; So the DataGrid ItemSource is Customers then the ListBox ItemSource is Orders, it works out the connections for me. 
You could add a small web browser to your app that displays a page from your website. Turn off all of the right mouse click options and any other interaction so that the user only sees, but can't interact with the page. Then you can use google analytics. Of course this page should not be indexable. For added functionality you could pass a version parameter in your query string and display one page if the app is up to date, and display another if out of date. You could then have a link on that page that directs them to the updated version. 
Yep i was aware of that. Thanks!
Right but from a code perspective. I am being redirected to an aspx web page and the response content is the HTML of that page. The login page has a form on it in aspx, are you suggesting i figure out the POST endpoint of that form based on the HTML response i get, and then post to that? Candidly, that sounds awful and not fun :(
Yea this is a bummer, that's how my school was. Didn't touch c# until I was in a job and wanted to check it out for myself. 
Yeah we used a modified version of FizzBuzz on out InterviewZen online screen: &gt; In the programming language of your choice: &gt; &gt; Write a method/function that accepts two integer inputs and prints out every integer number between them (inclusive) in ascending order on a new line, with the following exceptions: &gt; &gt; * If the number if divisible by 3 print 'foo' on a new line. &gt; * If the number is divisible by 5 print 'bar' on a new line. &gt; * If the number is divisible by both 3 and 5 print out 'foobar' on a new line. It's amazing the number of candidates that can't write loops, although I think FizzBuzz has lost it's value, as every candidate recognised the question, and some even wrote the answer to FizzBuzz rather than answering the subtly different version we asked...
Thanks. I use that for my site and its great, but it won't track when people open my programs. Only when they download. 
I placed the order and will start reading. Many thanks!
Actually it can. See https://github.com/AttackPattern/CSharpAnalytics as one library you can use to instrument your app. I did this for a windows phone app and could tell whenever the app was launched, resumed, a page navigated to, a button clicked and much more.
It's one checkbox when setting up a new project. 
That's great. I didn't know in could build Google analytics into my windows form. Will that show up on a firewall as looking suspicious? I don't want people to think it's phoning home personal data, or behaving like malware. 
I've not done this on a WinForms app myself, but I believe that the most the user would see is the Windows Security alert dialog which asks the user to allow your app to access the internet.
Yeah it's not exactly fun but it shouldn't be too hard. &gt; I am being redirected to an aspx web page and the response content is the HTML of that page. When a request 401's - by default in .NET it will redirect you to the login page. &gt;are you suggesting i figure out the POST endpoint of that form based on the HTML response i get, and then post to that Pretty much. Open [Fiddler](http://www.telerik.com/fiddler) and login. Look at the request made during a (successful) login and copy it. Send a request to that URL using WebClient/HttpClient/whatever, and set the request body to what you copied. I think this involves GetRequestStream() and Writing to that stream. The WebResponse will contain the forms auth cookies. Add this cookie to the RestSharp requests.
I'll give it a go and let you know. Thanks for you help!
You would think. Sadly we regularly encountered so-called senior programmers who could not even complete the first step. 
How come you're sticking to old versions of the frameworks? MVC 4, WebAPI 2, EF6.
It's an older project and I don't upgrade right away. I'm on the new stuff now, but it's not like the technology actually goes bad as quick as it comes out.
not to be a dick, but RTFM. No seriously, MSDN is your friend when learning this stuff. Here's an example of how to get a connection to a sql database: http://msdn.microsoft.com/en-us/library/system.configuration.configurationmanager.connectionstrings(v=vs.110).aspx
I think OP was trying to learn about using Web Services to connect to an SQL Database, not connecting to one directly.
Oh dang, I must have glossed over the 'through a web service' part. My bad! 
[Here's](http://www.codeproject.com/Articles/337535/Understanding-the-Basics-of-Web-Service-in-ASP-NET) a tutorial on Web Services, though unless you're connecting to a legacy service, I'd go with WCF instead. .NET Web Services are mostly obsolete today replaced by WCF and WCF Data Services. [Here's](http://www.codeproject.com/Articles/406096/A-beginners-tutorial-for-understanding-Windows) a good tutorial on WCF. [Here's](http://msdn.microsoft.com/en-us/library/cc668796(v=vs.110\).aspx) one on getting started with WCF Data Services (though just using straight WCF and leaving your data access layer serverside is probably a bit easier for a beginner). I'd also look at using Entity framework to pull data from your database before sending it to your client through a WCF service. [Here's](http://www.codeproject.com/Tips/739164/Entity-Framework-Tutorial-for-Beginners) a resource for that. 
not a problem, I totally get what you're saying. If only I could find an explanation in terms that I understood.
Wow, this looks great! Thanks, I will give these a shot. Just telling me I need WCF (it's not legacy) is an improvement over what I knew.
IMHO, WCF is needlessly complex. I'd go with Web API.
I've been following this project for a while now and I am impressed how well it has been refined. Great job.
Looks like call hierarchy on steroids, pretty nice
No, no no. Here's what you do! class Program { public static void Main() { Int32 x = 2; Int32 y = 2; Console.WriteLine(x + y); //Writes 5 Console.ReadKey(); } } Now, I know what you're saying. "I just tried that, and it wrote 4!" Ah-ha! But that's because you didn't have this struct somewhere else in your Solution: struct Int32 { private int internalInt; public Int32(int i) { internalInt = i; } public static Int32 operator +(Int32 i, Int32 i2) { var value = i.internalInt + i2.internalInt + 1; return new Int32(value); } public static implicit operator int(Int32 f) { return f.internalInt; } public static implicit operator Int32(int i) { return new Int32(i); } } The local Namespace implementation overrides the generic .NET implementation... so presto! Now all addition comes out one higher! :D
I don't have any experience with dotTrace, however it looks reasonably similar to WPA (Windows Performance Analyzer), and here are the standard gotchas I would look for: * Make sure you're running the Release build. I know it's basic, but I've tried to profile the Debug build without realizing more times than I care to admit. * Make sure you don't have a debugger attached. * Make sure the accessors are actually easy to inline. There are a few like DateTime.Now which are actually functions and shouldn't have been properties to start with and some that may have complicated logic and don't inline easily. If that doesn't help and you really want to optimize the program, then I'm sure there are tons of people willing to help if you upload the trace. If you upload an ETW trace (which you can get using WPR - Windows Performance Recorder, it's what WPA consumes), I can take a look.
Web api + Entity Framework is what you need
I've had the same issues. When doing some image processing and not hoisting the Width and Height out of the loop, it killed the performance. I don't remember the exact numbers, but when I made them in to local variables, the function ran more than 8x faster. And the properties were simple field accessors without a set. so for(int x = 0; x &lt; image.Width; x++) .... was much much slower than int width = image.Width; for(int x = 0; x &lt; width; x++) .... From my time googling, it was the fact that the x64 JIT was bad at inlining properties, and the x86 did it a bit better.
Looks like you should RTFP :D
no kidding! haha! 
Sweet! Under what model is it going to be released?
We're not entirely sure. We don't feel as though it would be justified to charge for it while it depends on the separate installation of Microsoft's Roslyn compiler. For now, it will be released free of charge.
Yep.
Yeah should be fine. My computer that I use for development is six years old. Core Duo 2 E8500 3.12Ghz and 4GB of RAM. I've sped it up a bit with an SSD. The rig could be faster obviously but it's perfectly usable. 
It should be more than enough for school.
A toaster could do what you want to do. The biggest issue you could possibly run into is a noticeably long build time. 
Last summer I bought a relatively cheap Lenovo laptop with an i3 and 4GB. No SSD. I expected that Visual Studio would run slow and that I'd have to expand the RAM. It's never happened. Even the builds are fast. The only thing that runs slow is Github for Windows if I'm checking in a large number of changes. When that happens, I just go pour a cup of coffee. 
Check out [Git Extensions](code.google.com/p/gitextensions/). This GUI application work as speed as F1 car.
Looks like a less nice version of Code Bubbles - but at least for VS!
They are both sql server. Localdb is a single user single instance that is run by visual studio. Depending upon how you setup the database configuration in your application, your app might build your db for you given a connection string. E.g. Entity framework code first.
Compiler benefit a lot from cpu cache. The major difference between i3 and i5 is that the i3 has very small cpu cache... 
You can migrate databases, they are effectively files. If you are building a crud win forms app and you expect others to download/install consider going with something even simpler like SQLite. That doesn't really require your users to have any installed prerequisites or installed severs (SQL server).
Funny story about this is that my company uses an IBM mainframe and was exclusive to the US. Now we are branching out internationally and all of our data is Central time. Our solution is to just shut our entire business down for an hour when time changes come around so we don't have funny data. 
Yeah that's actually it, I'm majoring in interface and web design but I found out that I really enjoy programming.
Not sure what your project is, so I don't know if using a database or SQL is part of the requirements, but you may consider storing your data in an XML file instead of a database. XML files are easy to read and write, and portable. They are good for storing small to medium amounts of data. Then you don't need to worry about installing or connecting to a database, instead just drop the file in the directory. 
Hi. It is for a homework assignment and I am required to use SQL Server as a backend. Although XML sounds wonderful.
&gt; This means that arithmetic overflow checks literally mean checking both arguments to every integer operation. Well, not quite; it can check the CPU carry flag after the operation. But it's still expensive.
Can you explain why this is a problem? The [ToString() method](http://msdn.microsoft.com/en-us/library/3hfd35ad.aspx) defaults to using the [G](http://msdn.microsoft.com/en-us/library/dwhawy9k.aspx#GFormatString) format specifier which says that 15 digits will be displayed, which is exactly what it is doing.
I wasn't aware that it was using any type of format specifiers like that. I figured it would take the entirety of value and convert it to a string. Why would it default to something that isn't the full value of what's being converted? That doesn't make sense.
What does "entirety of value" mean? Double uses the [IEEE-754](http://en.wikipedia.org/wiki/IEEE_floating_point) binary format and converting that to a decimal representation can only produce an approximate value. If you require exact decimal values you could consider [decimal](http://msdn.microsoft.com/en-us/library/364x0z75.aspx) instead of double.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**IEEE floating point**](https://en.wikipedia.org/wiki/IEEE%20floating%20point): [](#sfw) --- &gt;The __IEEE Standard for Floating-Point Arithmetic__ (__IEEE 754__) is a [technical standard](https://en.wikipedia.org/wiki/Technical_standard) for [floating-point](https://en.wikipedia.org/wiki/Floating_point) computation established in 1985 by the [Institute of Electrical and Electronics Engineers](https://en.wikipedia.org/wiki/Institute_of_Electrical_and_Electronics_Engineers) (IEEE). Many hardware [floating point units](https://en.wikipedia.org/wiki/Floating_point_unit) use the IEEE 754 standard. The standard [addressed many problems](https://en.wikipedia.org/wiki/Floating_point#IEEE_754_design_rationale) found in the diverse floating point implementations that made them difficult to reliably and portably use. The current version, __IEEE 754-2008__ published in August 2008, includes nearly all of the original [IEEE 754-1985](https://en.wikipedia.org/wiki/IEEE_754-1985) standard and the IEEE Standard for [Radix](https://en.wikipedia.org/wiki/Radix)-Independent Floating-Point Arithmetic ([IEEE 854-1987](https://en.wikipedia.org/wiki/IEEE_854-1987)). The international standard __ISO/IEC/IEEE 60559:2011__ (with identical content to IEEE 754) has been approved for adoption through [JTC1](https://en.wikipedia.org/wiki/ISO/IEC_JTC1)/SC 25 under the ISO/IEEE PSDO Agreement and published. &gt; --- ^Interesting: [^IEEE ^754-1985](https://en.wikipedia.org/wiki/IEEE_754-1985) ^| [^Floating ^point](https://en.wikipedia.org/wiki/Floating_point) ^| [^Significand](https://en.wikipedia.org/wiki/Significand) ^| [^NaN](https://en.wikipedia.org/wiki/NaN) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+ck4zdnz) ^or[](#or) [^delete](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+ck4zdnz)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
It was a simple question. A simple answer would have been nice instead of trying to make me look foolish.
&gt; Why would it default to something that isn't the full value of what's being converted? Because why wouldn't it? ToString() is just supposed to give a string-based representation of the object it's called on. I'm surprised it even gave you so many decimal places! Let's be honest, most applications don't call for that sort of accuracy when displaying the output: As a user, I usually only want to see two or three DP. You can see the example here though for getting more DP: http://stackoverflow.com/questions/3059759/double-tostring-with-n-number-of-decimal-places Don't forget that floating point numbers aren't stored internally as a decimal, so there are no 'actual' decimal places.
He didn't?
You got that reversed. You can represent any binary float in decimal without loss of precision. However you some decimals can only be approximated in binary (e.g. 0.1).
Don't feel bad. Everyone has to learn this (decimal vs. double/float). It was just your turn. ;) I've worked at banks that used floating-point for money values. So wrong. But no one wanted it fixed. Edit: Speeelling. 
I had a similar path. I randomly took an xhtml website development class, oh, about 4 years ago now, and after that I was *sure* I wanted to be a front end developer because my website rocked. Then life happened, I quit school for a while, and when I came back I took both a java and C# course as electives for my Business degree. After taking those I was convinced I wanted to be a programmer. Currently I'm realizing that, although I'd like to have a solid grasp on the .net framework, and begin to learn some mobile development as well, I'm leaning more towards the project management aspects of building technology solutions for small to medium sized companies. How long have you been going to University? My point is there's nothing wrong with changing your major. I've done it 4 times. edit: words ps. Does your school not have computer labs with all the needed software installed?
I'm trying to create a struct similar to BigInteger that will provide precision to an arbitrary length. That being said, when this BigDecimal is instantiated, I would expect the value that I sent it to be accurately represented by a string. In this case, it isn't and I wasn't aware of the formatting specifics of the ToString() method.
Two point regarding that: 1. Computer types seem to regard themselves as teachers, wanting to pass on knowledge that they've learned. So you'll see people do brain-dumps on a topic all the time. 2. We want to save people from doing bad things -- like writing code that we may have to maintain one day. ;) So your assumptions will be questioned, to see if you're trying to fit 8 lbs in a 5 lb sack. And often, there's a 5-line solution to a problem that someone has written tons of code for.¹ ¹ Like the time I wrote a massive configuration file parser to handle multi-value settings. And shouldn't have. 
.NET inlines very conservatively (i.e. too little for most CPU intensive code). In my experience it's best to assume that nothing gets inlined; it's hard to predict what *does* get inlined, so you can't rely on it. If you're in a hot loop just load those properties into local variables before use. That's easier and quicker than trying to figure out the details of what does get inlined. Sometimes you can also manually inline; this can help even when the function is JIT inlined because there seems to be some kind of inlining limit, so by manually inlining one call you may cause a different call that was previously not inlined itself to be inlined. But to reiterate, my guideline is to treat it more like an unusually fast interpreter than an optimizing compiler; .NET code optimizes quite differently from (say) C++.
This is trash; quit spamming it everywhere.
I did. Only took a minute to do.
I chose WPF for the desktop client apps that I develop for the group I work with. I adhere to the MVVM pattern and make use of PRISM, MEF, reactiveui and akavache. I think with Microsoft's renewed focus with the desktop coming in Windows 9 / Threshold, WPF will be a framework that continues to see development over time. If it makes you feel better, Microsoft still updates and supports Windows Forms (.NET 4.5.2 for higher DPI, etc).
Thank you. That is very hepful.
Nice Filip :)
Avoid the stackalloc instruction by using a fixed block: byte[] byteData = new byte[9]; fixed (void* ptr = &amp;byteData[0]) { } More info: http://msdn.microsoft.com/en-us/library/vstudio/f58wzh21(v=vs.100).aspx What are you trying to achieve? 
Thanks! Enjoy :)
Webapi can be tricky if you're new to routing and RESTful service design. Configuring WCF can be a nightmare too though. I guess i'd go WebApi if you're doing front-end work and WCF for traditional data exposition. Kinda makes me miss good 'ole .ashx though 
Could you create a IParameter (for example) interface so that all the methods/actions have the same parameter signature? You could then create specific implementations of that interface for each scenario. Seems like classes to represent each scenario would work well for eliminating the switch, too, since you could just loop through those options and have them check themselves against the current state for a match. 
Options might be, create an abstract base class and cast to specific type like event delegates, use a common interface as sole param and cast as necessary, or take an array of objects as params to the action. Typically in perhaps similar scenarios I would use a config file to bind a given pin event to an implementation of IPresetAction with a single Execute method and maybe use a factory if creation requires something specific. Im not sure if activator will be restricted with reflection tho.
if you can wrap all your (needed) state in some object (ISomeState below), you can do something like this: // store once. var callbacks = new [] { (ISomeState s) =&gt; cb1(s.Field), (ISomeState s) =&gt; cb2(s.Field, "Die"), (ISomeState s) =&gt; cb3("Move along") }; // actual handler var ss = new SomeState { Field="bar", ...); var indexOfCall = FigureOutIndex(); callbacks[indexOfCall](ss); Syntax may be off. Afair ISomeState in callback storage isn't required (valid?) so that's only so you see that you're passing that type var there.
I3 with 4GB ram should be more than enough for students. I've been using a similar laptop for the last few years of my computer science degree and I've had no trouble.
Can't I have some NuGet packages and a VSIX? I shouldn't need to download an executable and *install* the engine.
This question seems to be inevitable, could you compare Paradox to Unity? What is your engine better at? I think you're using a newer version of Mono(async keyword), so that's definitely nice.
Hey, not sure why your question was downvoted. You don't need the explicit cast, you can implicitly cast to void*: void* voidPtr = stackalloc byte[9]; Hope that helps.
fixed addresses (no pun intended) a different problem to stackalloc. Maybe he's trying to avoid unnecessary garbage?
Never used stackalloc, and from the docs I assumed it was a safer new for using inside unsafe blocks. Could you explain more?
I think doing a code kata TDD style will reveal those who are competent. I recommend the [Days of the Week](https://gist.github.com/Romoku/10536643) code kata. It's a pretty simple problem, but anyone not familiar with it will likely overthink it. The kata states: as a user I want to know the number of days in a business week. A business week is defined as excluding days when the business is not open (normally holidays and weekends). The solution is a rather simple LINQ query. The candidate and I will pair on the exercise with them mostly driving. They can use any resource they need to solve the problem. I expect them to be able to setup the testing solution in Visual Studio from scratch and install a testing framework from NuGet. From there they should use TDD to solve the problem. A competent candidate should follow red-green-refactor and grok their testing framework. During the process I will give them hints if they get stuck. The process lends itself to show who is incompetent and who are a bit rusty. The latter will recognize their lack of knowledge and say they they have forgotten, but quickly solve their knowledge gap with Google. The former case will be without a paddle and require a lot of assistance with the basics.
I've never met a graduate that knew anything about unit testing or package management for that matter. I could see this working for a dev with a couple of years experience, but not for a grad.
\#FirstWorldDevProblems
~~But since he's creating an array of value types and not reference ones, that should go directly to the stack too, shouldn't it?~~ Nevermind. Always forget that arrays are reference by default.
We can only hope one day they won't be charging the ridiculous amount they do. 
Repost it to /r/gamedev
The new UI that's currently in Unity beta is actually quite fantastic. Have you given it a try?
http://blogs.unity3d.com/2014/05/28/overview-of-the-new-ui-system/ They have a very nice video showing off the new UI features.
It will always look suspecious, unless you are transparent with it. I had to use a library a few days ago (An incredible trivial one to add) and when I was looking at the git code I saw a home call which would track which users would be using it by various collected meta data of their PC and not only that - it would create a webserver to do so. Somehow no one complained about that, so I guess you could get away with such a thing with no problems.
Wouldn't WPF be a good fit for such a game? What do you need a game engine for?
What is the business model for the makers of this engine?
That sounds utterly horrible. I need a game engine to handle all the actual game-related stuff. A game engine is more than just graphics. Asset management, saving and loading, music, syncing game objects over to the server for multiplayer, etc.
A UI-only game would simply be a desktop applications, would it not? There exist many ways of persisting and synchronizing data for desktop applications. I'm not sure what you mean by asset management and music - loading images and playing audio files is trivial.
Unity seems to be all the rage right now, especially for 2d. This is the obvious question that they, in some shape or form, need to answer. One edge I see is the open source aspect. Will be easier to keep up to date with more recent versions of mono etc. It may end up being Unitys more technical older brother. 
They provide a product that took a ridiculous amount of work to make. Seems logical to charge accordingly.
Thanks :)
Dont you have to pay for unity? Or can i just download it and learn it?
No
You can also use the free version for commercial products as long as you don't make too much. At that point it would a drop in the bucket to upgrade.
I borrowed the concept of a copy constructor from c/c++ In some cases I found that de/serialising was the only way to make sure that I had a true clone with no shared references with the original object.. Of course I'll have to look up the code to see how our data structures couldn't just be deep copied. C# could really use a memcopy() function.
&gt; Of course I'll have to look up the code to see how our data structures couldn't just be deep copied. I tried to cover the essence of it within the article: A deep-copy fails as soon as you reference external objects, like singletons or external resources. Or think of parent-backreferences in a hierarchial tree when cloning a child node! :) In my experience, stuff like this happens a lot, so a pure, fully recursive deep-copy is more a niche case than general-purpose algorithm. &gt; C# could really use a memcopy() function. The protected Object.MemberwiseClone method is pretty near to this, but it's only a shallow copy, which suffers from opposite, yet similar problems as a pure deep-copy. Not usable for general-purpose cloning, although it can act as a high-performance shortcut when dealing with plain old data. &gt; In some cases I found that de/serialising was the only way to make sure that I had a true clone with no shared references with the original object.. Yeah, I've been through this too. :) But when you think about it, the de/serialization approach is mostly just a pure deep-clone in a different shape, and you can get the same issues.
http://msdn.microsoft.com/en-us/library/system.icloneable%28v=vs.110%29.aspx
The ICloneable interface provides an implementation scheme for what I'm referring to as "manual copy", but these are not enough for general-purpose usage and will be bound to provide faulty clones under certain circumstances due to the lack of a central instance coodinating the cloning operation as a whole. Moreover, ICloneable doesn't specify which kind of cloning will be implemented by the class implementing the interface, making it dangerous to rely on ICloneable implementations: &gt; It does not specify whether the cloning operation performs a deep copy, a shallow copy, or something in between. All in all, I chose to avoid ICloneable alltogether in favor of a different approach.
The pricing is definitely their weakest point, especially for indie developers. Which is why they had a trial period where you could sign up for $25/month on a month-to-month basis. That means you can use Xamarin for the period you develop your application, let's say 3 months which would be $75. Hopefully you'll make that up in revenue from your app.
The features the free version is missing are not a big deal, certainly for a learner/amateur. You can export to all the platforms from the free version and release commercial products. If your game(s) earn a lot of money (I think it's $100,000 in a year) you must upgrade to the paid version. 
The WebKit wrappers are all years old, but the CEF (Chromium Embedded Framework) based one whiles more up to date are still a few versions behind. * [Xilium.CefGlue](https://bitbucket.org/xilium/xilium.cefglue) is at Chromium 35 in the source repository. Not sure how stable this one is. * [CefSharp](https://github.com/cefsharp/CefSharp) is at Chromium 31 in the source repository for version 3, but still in heavy development with things like JavaScript binding being developed in a separate branch. Stable version 1 is at Chromium 25. The only Gecko wrapper I'm aware of, [GeckoFX](https://bitbucket.org/geckofx), is at version 29. 
The culture switch helper class is clever :D When I had to have `.` as decimal separator once, I used `.Replace` to do it... Feels so silly now :|
What is the point of bending backwards just to use MySQL? MSSQL express can do all the same, arguably with more sanity ( see for example the 6 year old issue on MySQL SILENTLY ignoring check constraint on tables due to "compatibility" which raises a major WTF flag in my mind), with better integration for small projects. For projects of mediocre size and up - your management will most likely request you to use ""enterprise grade DB"" ( aka pay for delusional peace of mind ) either way.
And even without those issues, ICloneable isn't type safe.
They seem pretty careful about saying version 1.x is completely free to use not all future versions. perhaps they plan to charge in the future.
Let's say A and B share some behavior C. Maybe you would normally have A inherit from B, and implement C in B. Let's imagine instead having a CEncapsulator class that handles the C behavior, and A and B each have a property DoesC of type CEncapsulator. Whenever they need to do C things, they ask DoesC to do it instead. We have composed the behavior of A instead of building it with inheritance. There are a lot of people that think this (favoring composition over inheritance) is a superior approach. In the Unity world, CEncapsulator must inherit from MonoBehavior (which indirectly inherits from Component). A and B must inherit from GameObject. A and B, by virtue of being GameObjects, have a Components collection. Putting CEncapsulator in the Components collections of A and B respectively will give both A and B the desired behavior.
It sounds like that's a way to do it. I have to admit I am not very comfortable with Unity's way, so I'm not sure. To me, deciding who to attack is a separate question from knowing how to apply that attack. So maybe on the GameObject I'd have a TargetOpponent property, a MonoBehavior that kept the TargetOpponent property up to date, and another MonoBehavior that actually did the attacking.
I think you can revisit enums. You would declare an enum called 'evolution' or what have you and then in your house class you would have a property called EvolutionState for your enum. For example: Enum Evolution { StoneAge, MiddleAge, } Then in your house class you would make it { Evolution EvolutionState } Then you could write a switch statement (which works great with enums because you can auto generate switch cases for each item in your enum) Switch..... Case Evolution.StoneAge: do this.... Break; Case MiddleAge: costofproduction = ... Sorry for formatting. On my phone.
You can find a bit more information at http://answers.paradox3d.net/questions/15/business-model.html
this is pretty sweet. I actually have only ever run into 2 types of object cloning in my day-to-day dev. life, a shallow copy and a deep copy. For my deep copy needs, I almost ALWAYS serialize it using JSON.NET; where composition via guid is used, and needs to be fixed, I use reflection to make new guids where appropriate. I have no idea if this is a good approach or not but no one has told me otherwise. 
[I use binary serialization to do the same thing](http://stackoverflow.com/questions/129389/how-do-you-do-a-deep-copy-an-object-in-net-c-specifically). It's not pretty (and it gets super ugly if your graph has cycles), but it works.
oh yeah, that could be nasty for sure. 
http://www.codeproject.com/Articles/624997/Enhanced-Scrollbar
In IntelliJ you can even have a preview of the code around the occurrence, with a feature called Lens http://www.jetbrains.com/idea/whatsnew/img/13/ij13_lens.png
Xamarin and its engineers are largely responsible for Mono, MonoDevelop, and MonoTouch. The company creates a lot of value for the otherwise barren C# opensource community. I think they charge a reasonable amount, but it's clear we disagree on that point.
ReSharper calls it the Marker Bar, [here's a stack overflow thread](http://stackoverflow.com/questions/6083520/marker-bar-for-c-sharp-application) where someone shows how to hack one up using a listbox in WPF which might give you some ideas.
Don't waste your time with this InfoQ shit, go directly to the original article of Alexandr: http://alxandr.me/2014/06/30/loading-all-of-the-things/
Sorry. Could I ask what bothered you about the InfoQ post?
That could very well change. http://www.neowin.net/news/microsoft-might-consider-offering-the-core-of-net-to-open-source-community
I wonder if the data binding stuff in WPF does that..
If you set the scroll bar in VS to show an outline of the file, you can see a preview too. And it shows how deeply nested the code is :)
Also a fair bit of warning - although aleksander's post is a good one, it is a bit out-dated. For e.g. there is no RoslynAssemblyLoader any more, ever since a refactor to reduce dependency on Roslyn. 
Thank you for your time. I think I'm going to keep the switch case statement for now until I understand better. That just seems a little over my head at the moment. 
Thank you for your time. I think I'm going to keep the switch case statement for now until I understand better. That just seems a little over my head at the moment. 
No problem. Good luck! It might just be that a big switch statement is the best way to do this, anyway. 
Agreed. The switch may actually be faster than a "cleaner" solution, but I am guessing that it won't make a substantial difference either way.
Thank you Filip! The vid is a great help for someone starting out in Xamarin :)
Saw this post: http://vincenth.net/blog/archive/2014/08/26/poollie-wk-2014-lessons-learned-from-developing-a-successful-multi-platform-app-with-xamarin.aspx. JSON.Net instead of SQlite looks interesting. Splat and SignalR looks like they're a great help but currently no idea how I can leverage them.
&gt; JSON.Net instead of SQlite JSON.Net ist a JSON serializer. SQlite is a database framework. How do you compare those two?
I'm getting much more done now after cutting down on my reliance on the Entity Framework. Working with join tables in many-to-many tables is easy now that I'm using command objects. I just couldn't get that right with the Entity Framework. I know some people have said to put in a primary key into the join table so it would show up in the .edmx file but that just seems messy to me.
Both can be used for local storage into the device
My advice would be to speak to some game developers about this topic. Essentially, a game engine allows you to do the game part without having to manually implement sound managers and network lobbies and the like. But there's a lot more to it than that.
At this point Microsoft has nothing to lose. They can sell Azure vms running Linux just as easily as Windows.
Yeah I will clear all the needed features with the management first. Although Xamarin also has Nuget, I sometimes miss iOS because of Cocoapods and all those useful open source libraries :/.
Query syntax is sometimes cleaner, but here it's all a wash because of that SingleOrDefault. By the way, just use Single here. The OrDefault version will return null if the sequence is empty, which means you'll get a useless NullReferenceException on the next line instead of a descriptive InvalidOperationException on the line with the actual problem.
I prefer the original myself. 
I prefer using lambda expressions over query expressions; however I believe either is readable. The one thing I would change is to make the assignment of the Inactive property it's own statement. It makes it more clear as to what you are doing. That being said, I would not tell another dev that what you originally wrote was bad.
I'd say go with the second version. If the first version can't be found, it'll return null, and then you try to set Inactive on a null. I'm not sure if you need a null check first. You could try something like this: int id = int.Parse(contractorID); var contractor = db.Contractor.SingleOrDefault(c =&gt; c.ID == id);
Thanks, I will definitely look into that.
I see. Thank you for the clarification on what JSON.Net is :)
Interesting, I've never seen it done that way, thanks. So many ways to do one thing, it's tough to find the one way that does it well :)
That fancy background makes the homepage incredibly slow.
ultimately, if it works, it's not wrong, right?
3rd option: Reformat first line so the dots line up. A little more readable, IMO. db.Contractors.Where(c =&gt; c.ID == int.Parse(contractorID)) .SingleOrDefault() .Inactive = true; db.SubmitChanges(); 
yarp messing about.... not for real... want to know limitations :) thank you! It works well in modern desktop browser though:)
Very nice
I think either one are fine. Smells a bit like this senior dev likes to throw his weight around. 
Just throwing my $.02 in here's how I would have written this. var id = int.Parse(contractorID); var contractor = db.Contractors.Single(c =&gt; c.ID == id); contractor.Inactive = true; db.SubmitChanges(); Each line is doing one thing and one thing only. If something fails it will be pretty obvious why. That being said if I came across either of the ways you wrote it I wouldn't have felt the need to correct you (minus perhaps not setting the Inactive property on the same line as the query). If it's a simple query like your example I would just use a lambda expression since that's very readable. If you have multiple where clauses, ordering, projecting, aggregates, etc. then I would definitely go with query syntax. 
I suggest making use of System.Net.WebRequest class instead of the browser option.
This looks neat at first sight, but this style is probably a bad idea for simple technical reasons: your indent level is now dependent on your variable names. This has lots of negative consequences: you can't (as easily) use some automatic refactoring/indenting tools (since they'll mess up your indent level); you can't use variable width fonts (which have their own downsides, but are generally easier to read); you need to touch every line of a chained expression if you change the variable name; you invite merge conflicts due to the large syntactic changes any renames or refactors may involve; and you disincentivise descriptive names because this style quickly becomes really wide if nested even a single level deep with long names. 
You can save a surprising number of CPU cycles (which may not matter for many apps) and some typeing by replacing the expression-tree based query using `Single` with the `DbSet.Find` method which gets an entity by id. Of course, Single with a filter clause has a shorter learning curve since it follows EF's typical style more closely, meaning it's probably easier to read.
In Chrome it does not.
Nokia 928 on WiFi, not bad stutters just a little when I scroll down the page. Cleared cache and tried on lte cellular, seems about the same
What Os please and what doesn't work?
That's true, but essentially SQLite is just an API for organised local file storage, so if you don't need a lot of complex queries, you could easily do the same with json (de)serialisation and LINQ.
Current Windows version and it's slow. It works, but it makes the website slow.
For me the stuttering seems to be only when the background was dark. At day time it went smooth, even when scrolling. Fancy anyways ^^
Looks and works great on Lumia 1520 with windows phone 8.1 using LTE network.
Ive had a really great time using Google Maps in Xamarin. Placing markers and directions and everything should be fairly straightforward for you. I also think it works cross-platform without too much fiddling. Ive only done geocoding from the device itself, but you should prob do that through Google too - so its reusable across platforms. The limit is 1k, i think. Too little for what i needed it for, but should last you a while. Ive also experimented with Microsoft Azure Wams, which have some kind of partnership with Xamarin, and it is just extremly nice to use in Xamarin. Almost feels like cheating. It handles auth with all the big providers like a charm, and ive also seen some pretty understandable samples of custom auth (with or without wams). You should be able to rock that too. I have no idea how to set up a web-wrapper, so wams was good for that. Also nice for push notifications. I think your gonna have a great time!
Cool idea. Any idea what the price/licensing structure will look like upon full release?
We still aren't sure yet. Probably similar to Resharper or other Visual Studio extensions.
Been following the project since march this year and every dev I've shown it to has been really impressed. (as feedback goes though, most of them commented about the file count "limit" being the biggest concern. But I'm pretty sure you already knew that)
It's definitely possible to incrementally analyze the solution and that's our next development milestone to solve this problem.
Yeah, we really think the benefits of exploring code like this will have the greatest impact when working with large codebases, so fixing this issue is a big priority of ours.
You are very welcome! I'm glad it helps :)
I get a 404 at https://connect.microsoft.com/VisualStudio/RoslynTEST Anyone else seeing that?
Assets are any part of your game. This includes the art, sound, physics, materials, lights, cameras, scripts, anything. If you pop over to /r/gamedev you can learn more, also [Unity 3D](http://www.unity3d.com/) is an excellent engine that has taken the indie scene by storm and recently came out with 4.6. There are lots of resources to help you get started in game dev. If you're going to look into Unity, check out /r/Unity3D for 3D stuff and /r/Unity2D for your 2D stuff. There's also links to other subreddits from those with relevant info on whatever you want to research/get more into. Best of luck!
OK, Thanks
The idea comes from Code Bubbles. http://cs.brown.edu/~spr/codebubbles/
It can't be done, for the system types. The other comments cheat by making your own type that behaves differently, but this is not changing anything. Litterals such as 4 are not prototype objects or similar, in .NET; they are compiled directly to primitive values.
Lumia 930, IE, LTE Loads fine for me :)
Hmmm... maybe my 217 project solution is a bit much...
I can not speak from experience on the browser option. I've used [WebRequest](http://msdn.microsoft.com/en-us/library/system.net.webrequest.aspx) because it requires no user interaction, doesn't require loading any browser, and is OS independent (consider mono). I've used it to automate logins and pull XML data from sites that offer APIs. Check out the [makeRequest](https://code.google.com/p/sharp-voice/source/browse/SharpVoice/Voice.cs#512) function on one of my applications for some sample code. For note, the [WebBrowser](http://msdn.microsoft.com/en-us/library/system.windows.forms.webbrowser.aspx) class looks to be OS independent as well. 
This is cool, but I'm strugling to understand why node devs would tie themselves to Windows to work on their code?
So back when I was a .NET dev, the way I always did it was as follows: pretty much every class had an interface it implemented because I needed to be able to mock them in unit testing. Also, I used the Inversion of Control (dependency injection) pattern, where I would pass interfaces to a constructor. Occasionally I would use an IoC container to map interfaces to their concrete implementations, and use that to handle all my dependency injection. Coding to interfaces and dependency injection are key parts of the [SOLID design principles](http://en.wikipedia.org/wiki/SOLID_(object-oriented_design), and are usually good design choices. In the .NET/C# world, a common convention is to name your interfaces starting with an `I`, so the `Attachment` interface would be named `IAttachment`. Then `Attachment` would be the name of the concrete class that implements it. I don't necessarily agree with that convention (see how Java handles interface naming), but I suggest you follow it if you are writing .NET/C# code, because that's how everybody else does it. So no, don't avoid using interfaces. In fact, I would prefer using them over inheriting from other classes in most cases. Interfaces allow for easy polymorphism and loose coupling in your code. 
I did see the "I" before the interfaces in examples but never realised it was a convention. So I will use it when i actually start coding. I also agree with the not avoid using Interfaces. However what i was asking is the following: Should Interfaces implement other Interfaces, like I did in my example. Or should all interfaces be stand alone. I'm sorry for not being more clear. But is there a convention for interfaces implementing other interfaces or a "best" practice? I would like to hear your thoughts about this, if you have the time.
Is this any different than [Debugger Canvas](http://visualstudiogallery.msdn.microsoft.com/4a979842-b9aa-4adf-bfef-83bd428a0acb)? It looks almost exactly the same and it's free (and will continue to be free)
I think the question you need to ask is, does this interface really need to inherit that interface? What is wrong with having three separate interfaces in this case, say maybe 'IAttachment', 'IMechanics' and 'IVisual', and then have your class implement all three interfaces. One possible benefit from implementing the interfaces separately could be that it is easier to read from the implementing class definition and see what functionality the class delivers. I don't know if this is a general observation, but if you for example look at the collection interfaces of .Net, starting with IEnumerable and proceeding to ICollection and so on, every inheritance adds functionallity onto the basic IEnumerable feature, but in a way that emphasizes its basic functionality of being a 'bunch of objects' (I am using objects here in a metaphorical sence, not in an OOP sence.) So maybe it is worth thinking in a similar fashion with your interfaces. Does AttachmentMechanics expand on the basic functionality of your interface Attachment, or are AttachmentMechanics more separate in functionality, indicating that it should probably not inherit from Attachment?
Damn, Roslyn has a bug that makes it not work with T4MVC. Too bad, guess I'll have to wait for a later version. Looks really cool though and especially helpful to sift through legacy code.
Yeah unfortunately there are a bunch of bugs in Roslyn for VS 2013. We actually have to repair a Roslyn DLL after you download Code Connect or it prevents Intellisense from working correctly. If they release a new version of Roslyn with the fixes, we'll be sure to move to support that quickly.
Debugger Canvas is really cool, but it only works for VS 2010. It is free, but it will not receive any more attention from Microsoft. Two out of the four people who worked on that project no longer work at Microsoft. (Fun fact: one of them was Chris Granger of [Light Table](http://www.lighttable.com/) fame) The biggest difference is that Debugger Canvas works at "Debug Time" and Code Connect works at "Edit Time". Basically, you don't have to be running your code to use Code Connect. You can use Code Connect to add/remove/edit invocations and Code Connect will respond instantly. 
That's bizarre. We didn't test much on the dark theme but this is what I'm seeing with Code Connect + Roslyn: http://imgur.com/RUNnw3H Do you have any other extensions (Resharper, DevExpress etc)? It's possible Roslyn might not be playing well with them. 
Great, thanks!
A custom dark theme. But like I said, when I switch to other themes brackets, parentheses and comma's are still black. Seemingly they ignore the theme settings when Roslyn is enabled
Yes, this was after going through the installation of Roslyn and Code Connect. I just disabled it [Code Connect], and no crashing has occurred yet. :) I'll try to disable Roslyn specifically here in a minute.
Looking at the way you expressed the interfaces above, I think you might be going with too many interfaces. Maybe having an the interface have an additional method that actually does the work of the attachment, possibly called Action().That way you don't have too much repetition of code. Remember that your objects can inherit from multiple interfaces. An object might both modify a game mechanic and have a visual impact, that way you only need to have the object inherit from all of the Interfaces that you need. e.g. public interface IAttachment { Name {get;set;} Description {get;set;} } public interface IMechanicsModifier { DamageMultiplier(); AccuracyMultiplier(); MagazineCountMultiplier(); FireRateMultiplier(); CritMultiplier(); } public interface IVisualModifier { VisualImpact(); TurnOnAndOff(); } public class Silencer : IAttachment, IVisualModifier,IMechanicsModifier { Name {get;set;} Description {get;set;} VisualImpact(); TurnOnAndOff(); DamageMultiplier(); AccuracyMultiplier(); MagazineCountMultiplier(); FireRateMultiplier(); CritMultiplier(); } This way when needing an attachment you only need the IAttachment interface, as the others can be used for global effects that are not linked to an attachment such as a spell or a damage effect. 
Yeah it looks like there might be a problem with Roslyn itself: https://roslyn.codeplex.com/workitem/86 Unfortunately we have to wait for the Roslyn team to fix this. I've voted on the issue, and if you have a CodePlex account you should do the same. Sorry about that.
Gulp and grunt are command line tools, you use them to "compile" client side assets. They have plugins to do things like turn SASS stylesheets to CSS, combine your JS files into one, etc... They are absolutely not tied into using nodejs as a server side platform, you can still use c# for that. Things are changing rather quickly in the field so I guess it makes sense for MS to embrace that and stay current instead of keeping asp.net devs into a walled garden. Although one could argue that a more standardized setup would allow people to focus on getting stuff done instead of battling with an ever growing gulp file...
Lumia 1520 Works really well for me until I zoom in. ...and then it's just... :( Windows Phone 8.1.1 DP.
I'd be wary of using inherited interfaces. Suppose you had the following code: public class CustomerView : ICustomerView public class AccountsView : IAccountView, IView Which one is more readable and understandable? Would you be surprised if CustomerView implemented IView? How would you know unless you looked at the definition of ICustomerView? What other interfaces might it be hiding? In my opinion, it's clearer to the reader to be verbose and explicit, and there is little to be gained by inheritance. In fact, if you wanted to use the ICustomerView for something that was NOT an IView, you simply couldn't. You've tightly coupled the one to the other. This might make sense to do so in certain situations, but with the full awareness that you are closing off an opportunity for later. 
Well that's pretty much the point. I don't see any reason why you would implement multiple interfaces in your class when the two interfaces are clearly related to each-other. An `ICustomerView` is just a different type of an `IView`, so it makes perfect sense to put them together. Inheritance is not necessarily tight-coupling. And it's not about hiding the details behind other interfaces, but rather it's about abstraction. If you needed to use an `ICustomerView` for something that explicitly required it not to be an `IView`, then it would make sense to not have it inherit from an `IView`... or you need to refactor your design to accommodate the base interface. Why are you explicitly excluding `IView` in this situation? If the two types are so closely related, should you really be excluding the more generic, parent interface? If so, in this case you're just introducing another type of coupling - one where something is tightly bound to types of `ICustomerView` and nothing else. Ultimately, these are all architecture decisions you need to make at design time.
I will. I just installed in on my home PC (I was at work before..) I have the same exact issue there... I pretty much have the same addins though (resharper), so that might be a problem. At work I have VS-Pro, at home I have ultimate, so that doesn't matter either. Its too bad. I liked Debugger Canvas, even though it was pretty unstable. Had my hopes up for this. edit: also, my home PC runs on win8.1, and work PC at 7
Good points. 
Some if the toasters out there might be overkill.
The migration fails when I try to open the game project in VS 13 Express for Windows Desktop. :(
The free version lacks some crucial features like fucking ssao and shadows.
This is true. There are cases when it makes sense. IQueryable inherits IEnumerable, for example. 
Great read. Going to give the json lib a spin this week.
lol
Make stuff. Build a portfolio. You say you work in IT? Build a tool to manage helpdesk tickets that does it better than whatever you're currently using.
yeah it's a pretty nice library, I'll talk about it more in part 2 (coming soon)
&gt; Is there anything out there as good but less expensive? No. There simply is nothing out there that is as good - whether it be less or more expensive. Xamarin is top of the art regarding this case.
Couldn't agree more with /u/_ami, if you build something to make your current work easier and share it with people you will learn almost everything it takes to build "business" software. If your looking at a career launching rockets into space, get a phd in math.
As it happens, knowing C# alone is *not* enough to succeed in an entry-level position, **you also need to know a framework or two.** And therefore my advice to you is to to pick a domain that you are interested in, be it desktop development or something else and then pursue the most popular framework in that domain. Once you have decided on a domain - work on meaningful and/or substantial *projects* (as opposed to trivial console applications) and then source-open them for prospective employers to see. **Learn by *doing* and constantly challenge yourself.** If you are lacking ideas for projects then clone existing ones (a Twitter remake is popular) or perhaps resort to [Projects](https://github.com/karan/Projects) - a community driven "list of practical projects that anyone can solve". In my experience, you learn the most by working on relatively substantial projects that take some time to complete. &gt; Insight on how to know what technologies to spend my time learning Clearly C# is the basis for any so called "C# job" so keep on reading that book! In my opinion, it doesn't matter which framework you choose, what matters is that you choose one with conviction and start hacking. The only thing that I would say is that you should choose a framework that is popular. The more popular the framework, the more jobs and learning resources there will be. You can't go wrong with a mainstream technology (such as ASP, WPF or Xamarin) in my opinion. (You can always migrate to another technology at a later date. Personally I parlayed my experience with Windows Forms to ASP.) 
If you are a student you can get the license for a tenth of the price, and if you're working at a small startup you can get it for 20 % off where small means &lt; 20 people and startup is &lt; 3 years, I believe.
I think there should an option to add it on for $10/month. Or even a cost of $50/month.
People always want stuff cheaper. But Xamarin is a fantastic product that offers a lot of stuff that makes your lifer easier. It's worth the money.
Are you asking about what you should learn, or about how to improve your job prospects? Learn by doing: yes, absolutely. Get a job by focusing on what's hot on the market. Based on recent experience of my own, this means, in order of importance: * MVC * jQuery * SQL Server for storage * Some kind of ORM, like the Entity Framework, for the in-between stuff * Angular or Knockout A dice.com or indeed.com search in your area would know better than I would, though. If you're on your own in this endeavor, more than anything, you need to *stick with it*. Program every single day, no exceptions, even if it's just for fifteen minutes.
&gt; Supports VS2010 and higher Thank you flow devs, I was afraid you weren't going to support it.
C# is nice (and my favorite, I started with C# as well) but I guess you need Javascript knowledge these days. Javascript is really easy once you know C# and so are a lot of programming languages as they're all pretty similar.
FWIW, if the monthly subscription Indie pricing works out well, we'll probably be offering the same pricing model for all of our products. We started with Indie to test the waters.
You have your work cut out for you. I have been programming for 15 years and I have hired for my organisation in the past. By the time I see resumes they have already been screened by HR and I am sure education is considered in those. That said if your resume had the techs we are looking for including csharp, SQL, webapi, signalr, agile/scrum methodologies and test driven development I suspect we could overlook the schooling factor. Are you active on LinkedIn? This is quite critical. Good luck
Not arguing with that. It just makes it hard for those that are on tight budgets. 
It's really worth paying for - you save literally hundreds of hours on a large project. The Visual Studio support isn't really that great anyways - you'll be in XS for a significant amount of time. Xamarin is by FAR the best cross-platform native solution available, nothing else really comes close I've found. How much is your time worth? 
I've been looking into Xamarin lately too, and my preferred approach so far is to use VS with Xamarin.Forms to develop for Windows Phone 8 first, then make occasional builds for Android (and iOS if I ever get an iPhone) to test things. The project structure is the same, so in theory (I haven't really done much with this yet), it should be easy to switch from one to the other, and as long as you have at least an Indie license you get to use it all in VS for Windows Phone 8 included. At least, that's how I understand it. So far I'm still using the business license one month trial.
_ami is right. Making stuff for your current job is a good place to start. You learn more when you can find something specific to code for, a task to automate or process that can be improved. Finding those things related to your current job not only can be easy inspiration, but also keep you motivated. You sound a lot like me many years ago. I got lucky working for a smaller outfit, so visibility to management and the owner was easier. I was working a mix between help desk and staging at the time. Staging side I had to maintain system images for a piece of legacy software one of our customers used. One day the old equipment that software required for peripheral communication was discontinued and all the new options no longer supported the old methods for addressing. Everything was dynamic now and the old software program couldn't handle it. The customer was worried they wouldn't be able to replace hardware, but they weren't ready to replace the software package across their thousands of sites, management at my company was afraid we'd lose the contract, but I just saw a fun puzzle to work on. I wrote a tool that would run in dos on start up, get the hardware port addresses and interrupts information then write out a new configuration file for the software to use. Showed it to the boss who then was able to sell the development cost to the client and saved our contract. At the same time I was picking up SQL and other programming knowledge related to the software packages we sold as I was doing support at the time which quickly became second and third level because with what I was teaching myself I could solve problems and provide better feed back to development when issues came up. All this worked in my favor when a development position opened in the company and they gave it to me.
Given that list, I'm definitely on my way to getting a job in SDE. Been playing with MVC and EF a lot the past week or so on a rather simple website.
You can get it for $25/month already.
So iOS on VS is terrible and better with XS?
Err i can't download Roslyn :| &amp;#3232;_&amp;#3232; [Error](http://i.imgur.com/JF2bFcs.png)
http://msbusiness.com/editorsnotebook/files/2011/12/fortune-teller.jpg
Oh my god, it's a Xamarin rep! SIGN MY TITS. Any idea when we'll be getting baked-in F# support?
Though I would not recommend it for general UI development, you should really checkout what else you can do with Unity3d, in terms of non-game development. &amp;nbsp; Considering the acquisition of unityvs, and the release of the tools for Visual Studio for free, http://unityvs.com/, you can pull of some amazing things, and have access to a full physics engine for some exceptional UI effects. &amp;nbsp; The similarities in terms of language syntax between C# and Java though make Java very easy to learn if you already know C# though, and Android Studio (Based on IntelliJ) is pretty sweet https://developer.android.com/sdk/installing/studio.html &amp;nbsp; I completely agree with you that Visual Studio development should be allowed with the Indie licensing model. The previous licensing model supported VS, before they re-branded the supplied version of MonoDevelop as Xamarin Studio....
Agreed. A long time ago in a galaxy far far away..... I started work in a print room at my current place of work. After developing a few internal tools to be used by the staff in the room, in my spare time, I was pulled into a meeting requesting information about what I have done, and can do. &amp;nbsp; Fast forward 6 years. I'm now their Senior .Net Developer :) Go for it buddy. Only you can make it happen. Good Luck.
Do you mean something like: http://docs.seleniumhq.org/docs/appendix_installing_dotnet_driver_client.jsp
We have 16 developers doing iOS development from Visual Studio every day since March of last year. There are glitches here and there deploying to the Mac Build Host, but usually those are resolved by cleaning the solution, doing a simulator reset, and sometimes deleting the mtbs cache when working on different branches of the same project that produce assemblies with the same names, but different contents. It started out awesome, but challenging. Now it's just awesome. Each update at this point is like a little butterfly kiss on my wiener.
As a senior developer, that often does interviews I advise you to look into some theoretical aspects of OOP, because this is the area that usually sets apart self thought developers and schooled ones, if you know how to do stuff, it will not help you too much if you don't know what that stuff is, and why it is done that way, and that will do a lot of harm in an interview. Also look into programing principles, what do they mean, and what and why do they matter. Sorry if any typos sleep through, but I'm on the phone. Good luck and hope you will achieve your goals. Ps: practice, a lot ;-) 
I would guess that an exception somewhere is being swallowed. Can you provide all the related code?
I would add restarting VS too and updating both Xamarin on Mac and VS when there are updates. Also, try running on both iOS simulator and on an actual device because there could be differences on both
Just discovered a bug, on mobiles it calculates the star speed based on screen-size.... on smaller screens the stars are whipping across at CPU cost, time to fix :) thx Mind checking again once I fix that?
Check the value of `OSList` and `comboBox1`.
I know my programming is probably a joke. Still learning :) I'll take advice if you want to give it, too. private void Form1_Load(object sender, EventArgs e) { ////////////////////////////////////////////////////////////// // The user loads the main program Form ///////////////////////////////////////////////////////////// //if the xml is there. load the data if (File.Exists(".\\config.xml")) { //load doc XDocument Cdocument = XDocument.Load(".\\config.xml"); //display apps var patchSetList = from patchsets in Cdocument.Descendants("application") select patchsets.Attribute("name").Value; foreach (var patchset in patchSetList) { listBox1.Items.Add(patchset); } } //create XML if it isn't already there else { XDocument objXDoc = new XDocument(new XComment("Patch Sets"), new XElement("Root") ); objXDoc.Declaration = new XDeclaration("1.0", "utf-8", "true"); objXDoc.Save(@".\\config.xml"); } //create USER XML if it isn't already there var username = System.Security.Principal.WindowsIdentity.GetCurrent().Name; if (File.Exists(".\\"+ username + "\\config.xml")) { //load doc XDocument Udocument = XDocument.Load(".\\" + username + "\\config.xml"); //display apps var patchSetList = from patchsets in Udocument.Descendants("application") select patchsets.Attribute("name").Value; foreach (var patchset in patchSetList) { listBox1.Items.Add(patchset); } } else { XDocument objXDoc = new XDocument(new XComment("User Settings"), new XElement("Root")); //Create the user folder System.IO.Directory.CreateDirectory(".\\" + username); objXDoc.Declaration = new XDeclaration("1.0", "utf-8", "true"); objXDoc.Save(@".\\" + username + "\\config.xml"); } //***** // icon loading starts here //***** if (File.Exists(".\\" + username + "\\config.xml")) { //load doc XDocument Udocument = XDocument.Load(".\\" + username + "\\config.xml"); //***** // start icon 1 //***** //query paths var icon1 = from item in Udocument.Descendants("resource") where item.Attribute("name").Value.Equals("1") select item; //display paths foreach (var path1 in icon1) { pictureBox8.Image = Image.FromFile(path1.Attribute("image").Value); } //***** // start icon 2 //***** //query paths var icon2 = from item in Udocument.Descendants("resource") where item.Attribute("name").Value.Equals("2") select item; //display paths foreach (var path2 in icon2) { pictureBox9.Image = Image.FromFile(path2.Attribute("image").Value); } //***** // start icon 3 //***** //query paths var icon3 = from item in Udocument.Descendants("resource") where item.Attribute("name").Value.Equals("3") select item; //display paths foreach (var path3 in icon3) { pictureBox21.Image = Image.FromFile(path3.Attribute("image").Value); } //***** // start icon 4 //***** //query paths var icon4 = from item in Udocument.Descendants("resource") where item.Attribute("name").Value.Equals("4") select item; //display paths foreach (var path4 in icon4) { pictureBox20.Image = Image.FromFile(path4.Attribute("image").Value); } //***** // start icon 5 //***** //query paths var icon5 = from item in Udocument.Descendants("resource") where item.Attribute("name").Value.Equals("5") select item; //display paths foreach (var path5 in icon5) { pictureBox19.Image = Image.FromFile(path5.Attribute("image").Value); } //***** // start icon 6 //***** //query paths var icon6 = from item in Udocument.Descendants("resource") where item.Attribute("name").Value.Equals("6") select item; //display paths foreach (var path6 in icon6) { pictureBox14.Image = Image.FromFile(path6.Attribute("image").Value); } //***** // start icon 7 //***** //query paths var icon7 = from item in Udocument.Descendants("resource") where item.Attribute("name").Value.Equals("7") select item; //display paths foreach (var path7 in icon7) { pictureBox16.Image = Image.FromFile(path7.Attribute("image").Value); } //***** // start icon 8 //***** //query paths var icon8 = from item in Udocument.Descendants("resource") where item.Attribute("name").Value.Equals("8") select item; //display paths foreach (var path8 in icon8) { pictureBox18.Image = Image.FromFile(path8.Attribute("image").Value); } //***** // start icon 9 //***** //query paths var icon9 = from item in Udocument.Descendants("resource") where item.Attribute("name").Value.Equals("9") select item; //display paths foreach (var path9 in icon9) { pictureBox17.Image = Image.FromFile(path9.Attribute("image").Value); } //***** // start icon 10 //***** //query paths var icon10 = from item in Udocument.Descendants("resource") where item.Attribute("name").Value.Equals("10") select item; //display paths foreach (var path10 in icon10) { pictureBox15.Image = Image.FromFile(path10.Attribute("image").Value); } } else { MessageBox.Show("Error, no user profile"); } //***** // icon loading stops here //***** //load doc XDocument document = XDocument.Load(".\\config.xml"); //clear stuff label2.Text = "Unknown"; label7.Text = "Unknown"; label9.Text = "Unknown"; //fill OSlist combobox1 var OSList = from OSitem in document.Descendants("OSList") select OSitem.Attribute("name").Value; //MessageBox.Show("line 100"); foreach (var OS in OSList) { comboBox1.Items.Add(OS); } //MessageBox.Show("line 105"); var ISOwner = from item in document.Descendants("owner") where item.Parent.Name.Equals("ISOwnerList") select item.Attribute("name").Value; foreach (var ISO in ISOwner) { comboBox2.Items.Add(ISO); comboBox4.Items.Add(ISO); } //fill business owner combobox3 var BusinessOwner = from BusinessOwneritem in document.Descendants("BusinessOwnerList") select BusinessOwneritem.Attribute("name").Value; foreach (var BO in BusinessOwner) { comboBox3.Items.Add(BO); } }
Forgot to say, I bandaided the problem by putting the loop in question below the icon sets, but still wondering why it was broken before and if there is something still wrong, but I just can't see it.
I added whole code above, but was able to fix the problem by moving some stuff around. I'm not sure why that made a difference though :(
Contact their sales and see what can be done. Vendors are sometimes willing to cut a deal for the first year to get you hooked. That's enough to learn whether it's worth buying it for full price after that.
It appears I have a lot to learn. Thanks for the tips, it was really helpful. I've had trouble figuring out how to get functions to work. I came from the world of PHP/MySQL so the protection levels really get me. I'm not sure where to make my functions and how to properly protect them/unprotect them. I'll have to do more research I suppose.
I have only high-school myself. I was hired for my current software developer job based on the Open Source code I contributed to as well as my technical blog. I Imagine the Microsoft C# MVP award helped too, but I got that through the former as well. Basically I liked programming so I did it as a hobby and studied it as a hobby for years, building up a pretty good blob of projects representing years of experience, all of which I could easily indicate what I learned and how I could do it better, and a few times I ended up rewriting stuff. I won't bore you with the details, since a good portion of it was luck. I will mention that the Job I have was not actually advertised. I looked up what local software companies there were and sent letters of inquiry to all of them- so that may be something work looking into also. 
Have you tried replacing the foreach loop call to Items.Add with a single call to Item.AddRange? comboBox1.Items.AddRange(OSList.ToArray()); You can also try surrounding calls to Items.Add (outside the foreach) or AddRange with comboBox1.BeginUpdate(); ... comboBox1.EndUpdate(); This tells to system that you are making changes, don't try to redraw/update the control, until you are done with it.
&gt; private static void In this case, the function would go in the same class (Form1) as we are calling it from. Private because nothing outside this class will ever call it. Static because no variables are needed other that what we pass to it. Void is the return type. In this case we aren't returning anything. At some point in the future, we create a second form, and it also needs to load icons to pictureboxes using an xdocument. Great! We already wrote that. Instead of copying this function to that new form (copy-pasta is bad!), we create a new class called Utility, cut this function from Form1, and paste it into Utility. Now then use a call to Utility.LoadImages on both forms. And it doesn't work... Because it is still private, and now can't be called outside of Utility. Change the private to public, and everything works as expected. (There are a few other considerations, but that is the basics) 
Thank you. I've been reading that things should stay private and I'm trying to wrap my head around that, and how to pass things around if it's private. This is helping! Now to go back and get rid of all my copypasta!
I was always taught to make more comments so I was forcing myself to do it to try and do the right thing, lol.
Check your GUI/Design layer. Click on the buttons and check their properties. Double-check that they're wired to the correct event handler method (`Button2`, `Button3`, etc.). Sounds like they may not be wired up at all. Also, as stupid as it may sound, double-check that "FILE2.bat" (and so on) don't have the same batch code as "FILE1.bat". You can also run it in debugging mode and set breakpoints for the various methods to make sure the buttons are actually entering the methods you expect them to.
&gt; How assine of you to assume that I can't work in any other IDE. Actually I said won't. And there's no such word as assine. You said yourself in your introductory text that the reason you're looking for alternatives to Xamarin is because you can't use Visual Studio. Rejecting a development language/framework because you can't bring yourself to use a perfectly decent alternative IDE is pretty asinine though. Maybe you should try native Windows Phone apps. The market share sucks, and the framework is shite. But at least you can use VS - clearly the most important factor.
Look at the ComboBox event SelectionChanged. I don't want to give you answers of how I would do it, since I'm not designing your solution; however the event SelectionChanged might give you the direction you are looking for.
Comments are a good thing, but my recommendation would be to try and write your code in such a way that it just naturally reads well. Here is an example of something that is not particularly verbose (This is also an extremely simple example): List&lt;Person&gt; matching = new List&lt;Person&gt;(); foreach (var i in items) { if (i.FirstName.StartsWith("Fred")) { matching.Add(i); } } Versus: var peopleNamedFred = new List&lt;Person&gt;(); foreach (var person in people) { if (person.FirstName.StartsWith("Fred")) { peopleNamedFred.Add(person); } } While the functionality hasn't changed, the second one naturally reads a little bit easier. In my experience, usually if you are at a point where you need a comment to describe what is going on, your code is starting to get overly complex. That is by no means always the case, but it is a good indicator to step back and make sure you aren't over complicating the problem.
ok, just tried a few things, and still those five remaining buttons don't do anything, only the first... Just been trawling Google, but I'm not sure if it's something to do with the code now?
Thank you for this. I was hoping someone would give me a direction to go in, instead of an answer
If you set breakpoints in each Button2 .. Button5 method, are they hit when the corresponding buttons are clicked?
Try here instead: http://go.microsoft.com/fwlink/?LinkId=394641 There are some bugs on the Roslyn webpage unfortunately.
Holy jackass you are over a simple typo. Go back to working for a 700 million dollar company and driving a Honda.
 private void CButton(object sender, RoutedEventArgs e) { System.Diagnostics.Process.Start("D:\\_launcher/s.bat"); } private void NButton(object sender, RoutedEventArgs e) { System.Diagnostics.messagebox.Show("D:\\_launcher/k.bat"); } private void LButton(object sender, RoutedEventArgs e) { System.Diagnostics.Process.Start("D:\\_launcher/r.bat"); } etc etc it works! how?! haha, i don't understand. no errors :/ haha thank you soo much in a confused way haha. I was debating doing a thread or a while loop
[Why the form load can't catch exception?](http://stackoverflow.com/a/3209813)
I'm just a Xamarin engineer. That said, I thought baked in F# was already out. If not, it'll be included with the set of releases due out alongside iOS 8.
If there is anyone reading this reddit_thread and wanted to know how I was thinking about a C# thread or can explain how the above works lol, below is an example I found on stackoverflow for thread programming http://stackoverflow.com/questions/2783835/simple-thread-programming/2783856#2783856 ; private void backgroundWorker1_DoWork(object sender, DoWorkEventArgs e) { BackgroundWorker backgroundWorker = (BackgroundWorker)sender; for (int i = 0; i &lt; 100; i++) { backgroundWorker.ReportProgress(i); Thread.Sleep(100); } } private void backgroundWorker1_ProgressChanged(object sender, ProgressChangedEventArgs e) { textBox1.Text = e.ProgressPercentage.ToString(); } private void button1_Click(object sender, EventArgs e) { backgroundWorker1.RunWorkerAsync(); } }
Define an array for each option in box A. On ComboboxA_SelectionChanged event, set the ComboBoxB's Items with a switch-case statement, depending on what was selected in ComboBoxA.
Agree. A good programmer solves problems and can pick up any tools that are necessary.
One thing that will help you a lot is using the [MSDN .Net Framework Class Library Reference](http://msdn.microsoft.com/en-us/library/gg145045%28v=vs.110%29.aspx). It lists all the members of a type, as well as giving examples of how to use them.
Just let me know when! :)
Yes you get the position. Iirc its something like Touch.Position.X etc A quick google will clarify it though. or, you know, read the documentation before asking everyone to work out every little thing for you http://docs.unity3d.com/ScriptReference/Input.GetTouch.html http://docs.unity3d.com/ScriptReference/Touch-position.html 
Well to be fair to them it's a $120 billion dollar company, but I'll take your advice on the Honda. Actually, I owe you an apology - I was in a shitty mood yesterday and just picked a fight for no real reason. You're entitled to your opinion on VS, but I hope you'll give some thought to XS - it's really worth taking another look at - I don't know when you last tried it, but I find it a very capable development tool these days. Don't let my snippy comments from earlier discourage you from giving it another try.
Project created with latest version should be compatible with VS Express
The Entity Framework. 
Learn Entity Framework and Linq. 
Learn SQL / T-SQL. Sure, you can use SQL Server without knowing SQL, but if you don't, you will never know what is going on internally. Learn about databases, generally. Learn to think in sets. T-SQL helps, being a declarative language. Anything by Joe Celko Anything by Itzhak Ben-Gan sqlservercentral.com www.simple-talk.com There's a huge amount of really good stuff out there. Dirty secret - become an accomplished database professional, be employable forever. SQL's been around as an ANSI standard since 1986 and isn't going away in a hurry, despite what the NoSQL crew will tell you.
While EF will make you more productive (at least for small applications - it falls down for larger ones), learning set theory will be the most help over the long term. This will help you understand how joins work. Jeff Atwood has some diagrams to assist: http://blog.codinghorror.com/a-visual-explanation-of-sql-joins/ Why split data into different tables? The idea is that each table then becomes focused on a certain entity and doesn't have any extra data. And that you can uniquely identify each row. This lets you ask for data by the key "Get me the invoice header with this ID"
If you're an audio person, Coding Blocks did two podcasts with a focus on what developers ought to know about SQL: http://www.codingblocks.net/podcast/all-your-database-are-belong-to-us/ http://www.codingblocks.net/podcast/databases-the-sql-see-kwuhl/
I'm assuming you're not the first, and only, programmer at the company. So, the most important thing to learn is whatever the company is using for the application(s) you'll be working on. Beyond that, before you start learning a framework, I suggest learning the basics of writing SQL statements. You can probably pick up the most important parts in a few weeks. Use the 80/20 rule to focus on the most common, and important, parts of the syntax. Frameworks (of any type) are great for getting things done quickly. However, if you want to build a career as a programmer, you'll be much more valuable if you know what's happening beneath all the syntactic sugar.
T-SQL and then ADO.NET. Entity Framework abstracts a lot of this stuff away, which can be good and can be bad. But it's better to first know how it is working behind the scenes. You can still learn Entity Framework later.
This is exactly what I would have said. Obviously you want to learn whatever tools your team is using, but an underlying understand of relational databases, including SQL, is important. From simple selects, updates, inserts, and deleted to more complicated joins, groupings, subqueries, its best to get an understand how records interact and link to one another.
I made this because there was no (at least I couldn't find one...) library for generating configuration files with comments and formatting (i.e. new lines) on NuGet. Also to Play around with the new reflection API. I needed it for the [ManiaNet Server Controller](https://github.com/ManiaDotNet/ServerController) Project. Suggestions appreciated.
I've been working with SQL Server for a long time and more recently I've completed a couple of projects using Entity framework. In my experience Entity framework helps to make simple tasks trivial and complicated tasks frustratingly more complicated and time consuming than necessary. If I must use entity framework I only use it to call stored procedures that I've created in SQL Server. Edit. Also take a look at "Data Access Application Block" in Enterprise library. It will save you some time and help you prevent some common errors. http://msdn.microsoft.com/en-us/library/dn169621.aspx
I hardly see any benefit over XML. Also, GPL license is toxic. Especially in the .NET world, who uses this? And there are no tests (the astounding amount of two tests equals no tests). Why not a pluggable serializer to decide whether you want XML, YAML, JSON or something else?
&gt; Formatting, comments. XML is formatted, only the comments make any sense. &gt; What's your Problem with GPL? GPL is poisenous. Every program that uses GPL must also be licensed under GPL. So it is incompatible with less strict licenses such as MIT. &gt; I'm testing the correctnes of Output and the correctness of the deserialized object, what else would You test? Everything with a lot of different values. &gt; You can extend the SilverConfigSerializer&lt;&gt;; The XML one is just the one I did first. Why is a default serializer within the same project? It should be in a separate one. Also, looking a bit more at your code.. It's messy. You have HUGE methods.
FluentMVCTesting is an awesome library that I stumbled upon, loved, and started contributing to. In a nutshell, it enables you to write consistently fluent and *terse*, type-safe tests against MVC controllers. And so, as where you would have previously have written a test like this: [TestMethod] public void Index_RedirectsToAbout() { var controller = new HomeController(); var actual = controller.Index() as RedirectToRouteResult; Assert.IsNotNull(actual); Assert.AreEqual("About", actual.RouteValues["Action"]); Assert.IsNull(actual.RouteValues["Controller"]); } You could now write a test like this: [TestMethod] public void Index_RedirectsToAbout() { var controller = new HomeController(); controller .WithCallTo(c =&gt; c.Index()) .ShouldRedirectTo(c =&gt; c.About); } As you can see, the test is more terse and does not depend on magic strings which makes your tests more maintainable. The test also makes your intent clear, improving readability. I have also found it to be true that over time, your controller tests become very consistent and pleasant to read and maintain in general (as demonstrated [here](https://github.com/ByteBlast/GoBlog/blob/57b36ecba4c37f9c463fac4f154503d1d0f4046f/GoBlog.UnitTest/HomeControllerTest.cs#L14).) 
Would this work well with the MVVM pattern? I'm more familiar with MVVM at the moment so that would help me understand the code a bit faster. I'll definitely be watching this on github and trying to contribute. The example you gave makes sense to me, so that's a good first step!
Looks interesting and promising. Is there also a version for Web API?
They weren't going to discourage me. I actually went ahead an got the indie package since they won't give me a better deal. I've done more research and everyone says XS is fine, and VS support is getting up there. I also figured that once I start generating income from the apps I make, then I'll upgrade the package.
One thing to be alert for is if you are finding that your CB-B is not updating the items available. I am working through this issue now with my work, and the only solution that worked for me was to create a BindingList to update the combobox. How you do this should be easy enough to look into, so I won't give you the solution.
ADO.Net
Thank you for this
Thank you. This was original thought process when I started. I starting to see that there are many solutions to get similar results.
Thank you. Looking into BindingList now
SQL -&gt; TQSL - &gt; EF/Linq
Try: System.Windows.MessageBox.Show(); Or even MessageBox.Show(); should work correctly (as long as you are in the UI layer)
I'm sorry but I have to respectfully disagree. Commenting your intent is a necessity and, having spent the past three months figuring out comment-less code that needed to have intent documented, it's nightmarish and causes many headaches to not comment at all. Rehcra is right.
Dapper is a good way to get your feet wet with ORMs. 
Ill-behaved ORMs are also a good way to make your DBA angry.
Attach to IIS and Debug is for debugging an ASP.Net page running on an IIS server and debugging it in VS. Attach to Process, is where you attach to a running executable process.
You can compile an executable, run it on another machine, debug it from the local machine. As long as the proper software is installed, which comes with VS.
I agree that it's essential to learn SQL so you know what's going on but I don't agree with your comments about performance. First, performance is not necessarily one of your most important features. For lots of 'forms over data' software, which make up a big proportion of a jobbing programmer's work, it doesn't factor at all. Second, the SQL generated by EF can look ugly but the philosophy here is to let SQL server's query optimizer sort that out. Unless you are hitting real performance bottlenecks, it's not worth worrying about the generated SQL at all (this doesn't mean you don't need to understand sql of course). EF brings significant advantages to development, especially when the database is evolving with the application because you get compile time checking and LINQ to entities is amazingly powerful. I use EF on databases with hundreds of tables and millions of records and the querying is fine using LINQ to entities (as long as we design and index the database well). You need to watch out for bulk inserts and updates but for many of our applications it's just a bunch of users updating a few records at a time and the performance bottleneck here is their typing speed. You absolutely shouldn't write off EF like that without considering what you need from an application. 
per platform, per person, per year
"Attach to IIS" is just a shortcut macro to attach to all w3wp.exe process that are running.
Who knew that the GC actually used resources!!!^^/s This is something that I forget about all the time but it is obvious when ever I am reminded of it. 
It certainly has some overhead. Is it "a lot" of memory? No. Unless you're really pushing the hardware with 3D graphics or something, I doubt you'll notice. You should be aware of the differences between memory management strategies between Xamarin/.NET and Objective C (garbage collection vs reference counting); much like COM interop, novice developers coming from a garbage collected background might leak memory unintentionally. I'm sure a lot has been written on memory management with Xamarin for iOS, but here's one link I think is helpful: http://blog.bluetubeinteractive.com/2013/06/memory-management-pitfalls-in-xamarin-ios-intro.html
_ami Thanks for the reply! -any suggestions on where to start a porfolio eg. github? I see a lot of developers that build .coms to host their portfolio's, I am thinking about starting one to brush up on my html / javascript and learn to add features and content as I go. 
Thanks for the reply. Thats awesome to hear! So what kind of background or experience did you have at that time? 
Great Info! This is what I mean by knowing what technologies to start learning. Fact is so far I have been focusing so much on learning the C# language, .net framework &amp; the principles of OOP that I haven't even put much thought into working with other frameworks. Thanks for the reply!
I would recommend you gain a basic understanding of SQL first before thinking about learning how to use frameworks. If your a complete novice then this [site](http://www.w3schools.com/sql/) is useful for a basic understanding. When you have a basic grounding I recommend reading [this](http://use-the-index-luke.com/) site. For the C# side you're best of starting with something like [Dapper](https://github.com/StackExchange/dapper-dot-net) which has a low complexity compared with 'full fat' ORM's like Entity Framework. Also if you don't already use it, try [LinqPAD](http://www.linqpad.net/). It's a great scratch pad for playing with LINQ &amp; SQL queries without having to fire up Visual Studio. I hope that helps and good luck !
Encouraging to hear that your story relates to my current situation. I worked for another company a few years back in a non-IT position. The company quickly learned what I was capable of which lead to an IT position with them that required the Help Desk to be built from the ground up. I became the go to person for training, documentation, procedures, etc. This led to other connections in the company and with help and encouragement from one of the dev's I was able to get an interview for an open development position, however they could not give me the position due to my lack of experience. 
Yes, this! I introduced dapper into a new module this past week and am loving it. After some code review my co-workers love it too! I even heard a "whoa, thats really cool!". I find that it truly is a kind of best of both worlds. It is also really easy to use to implement the CQRS pattern, which I've also introduced to this module.
Attach to process is usually used to attach to a Windows service or some other installed application.
&gt;sometimes when I use attach to process I don't end up hitting my break point in my controller in my MVC app, but when I use the Attach To IIS button I do. If you want the debugger to hit your breakpoints, you need to have debug symbols available and in sync with the sources you're using. You likely don't know what it is, so I guess it's the time you find out now, Google it. When you attach to a process (or possibly processes when you use "Attach to IIS", and you have breakpoints somewhere, and debug symbols are out-of-sync or not available for your sources, they will become hollow. If you wish to see what modules are loaded in the process in VS debugger, go to debug-&gt; other windows-&gt; modules (not sure about the "UI path" to Modules pane, but it's there). One of the columns shows whether debug symbols are loaded and where they came from. You can influence the places where debugger looks for debug symbols, too (this is somewhere in tools-&gt; options), but you don't normally need this while in development.
The former, sure, I guess. The latter makes me question what you're developing.
Nope. There is a little overhead for the runtime/class libraries, but at times it can even be more memory efficient due to the frequent garbage collection. However, you can help the situation by calling Dispose() on anything you no longer need, or implementing the IDisposable interface in your own classes. As always (as you would with any app in any language) sensible development practices should be used when using memory hogging stuff such as numerous very large images. I've worked on a number of media rich apps in Xamarin requiring video and audio playback, animation, and a lot of big images and never had any issues at all. In fact when running the apps through profiling tools I've often been surprised by how *little* memory they use.
*eat a lot of money
Are you using PCL for all those platforms? Whenever I select all Xamarin.Android or Xamarin.iOS with the Windows ones, it complains that no API would be exposed (rough translation of the German message that it actually says)...
Yes, I am using one PCL for those all. For the methods I am using it is working like excepted. 
My company developed an app that happens to show lists of thousands of entrys, where every element consists of multiple UIViews... no problems. Also running multiple threads and communicating with many servers parallel was no issue. (it is an app for doing diagnostics on large industrial automation systems, e.g. car factorys) We will use xamarin on many more app projects in the future. 
but "db" might change, and you're likely (and encouraged) to follow the same conventions throughout the project, and not all names are that static.
Make sure to update to the newest version. The other thing you may need to do is to copy the Xamarin.iOS and Xamarin.Android profile documents into the specific profile that you want. http://danrigby.com/2014/04/10/windowsphone81-pcl-xamarin-fix/
what do you mean?
It's expensive to buy
I found Nerd Dinner to be less helpful. The View examples show the older MVC syntax, and doesn't show anything about the Bootstrap and Bundlers that are included with the newer projects. There are also the Contoso University examples that show EF and MVC. I would link them, but ByteBlast already did in his reply. I thought [this](http://www.codeguru.com/csharp/.net/net_asp/mvc/using-the-repository-pattern-with-asp.net-mvc-and-entity-framework.htm) and [this](http://www.codeguru.com/columns/experts/test-driven-development-in-asp.net-mvc-architecture.htm) was useful because it showed examples of unit testing MVC controllers. 
My main difficulty with ASP.NET MVC was grasping the model-view-controller architecture itself. I've heard other other programmers say the same, even when learning different MVC frameworks such as Ruby on Rails. That's where the strength of Nerd Dinner lies, IMHO. In terms of technology, it is definitely dated, as it is written in MVC1. However, you can find an MVC3 version on [codeplex](http://nerddinner.codeplex.com/).
Bad. Both are bad. Asserts should always include a message indicating why the assert exists. 
whoah i didn't know there is such site! thanks for the reply, currently im watching some videos in pluralsight but they're so fast that i cant catch up and some terms are not introduced
A blog would be really helpful, does your blog have login features for the viewers?
oh wait does this have an MVC 4 or 5 version tutorial?
The most straightforward way I could think of would be to derive a custom class from System.Windows.Forms.Control and override the OnPaint event, as well as setting some [anti-flickering values](http://stackoverflow.com/questions/8046560/how-to-stop-flickering-c-sharp-winforms) in the constructor. Next thing would be that you probably need a System.Windows.Forms.Timer in order to do per-frame updates, or hook the Application.Idle event for it - more about this [here](http://blogs.msdn.com/b/shawnhar/archive/2010/12/06/when-winforms-met-game-loop.aspx). Alternative suggestion: In case you're trying to get into gamedev using C#, why not use something like OpenTK, MonoGame or SharpDX / SlimDX? Somewhat biased alternative suggestion: In the same case, maybe take a look at [this game development framework](http://duality.adamslair.net)? It's biased, because I'm the developer of it.
Pong in WPF: http://codereview.stackexchange.com/questions/38451/pong-game-in-wpf
Thanks man, That really helped :)
You can get the Graphics object from the parameters when you override OnPaint 
Anyone else having any issues with this such as any search queries resulting in a message of "Sorry, no results were found :(". I cannot figure out what is going on.
You can enable double buffering without using SetStyle. The form has a property called DoubleBuffered, just set it to true in the constructor. (It may be called IsDoubleBuffered, I'm not on a computer right now to check).
I can recommend monogame, once you get past the initial learning (SpriteBatches, etc) it is easy to use. Lots of tutorials left from XNA as well
ccampo is exactly right. It's about abstraction. Implementing an interface is NOT the same thing as class inheritance. The difference may seem subtle at first but it is not. I know they use the same character to denote both but try to understand the very significant differences. What you are doing with interfaces is coding to abstractions or 'contracts'. You are saying nothing about how those properties are implemented, you're just saying that those properties/methods are guaranteed to be there. For example, in your code above, say you want to be able to print the Name and Description of each of your attachments. With your current interfaces, this is simple. Have a method accept your IAttachment interface and it won't matter if you pass in an object that implements mechanics or visual or both. Name and Description are guaranteed to be there so you can get those properties to print them. If you just have the mechanic and visual interfaces and no attachment interface then you must implement two separate print methods with duplicated code in them. Any time you find yourself duplicating code you should be asking yourself how to abstract so that you don't need to duplicate. Why you ask? Say that you now want to change how they are printed. You now have to locate two methods and make that change in both and test that change in both. This is an error-prone process. Duplicated code should always smell bad to you. It may work but you should want to refactor to clean it up. Your interface design here follows the SOLID principals (at least the applicable parts). Good work.
IIS is also an executable process, so it's basically a shortcut. 
Did you recently upgrade to Visual Studio 2012/2013? I found that under Visual Studio 2010 this would not happen, or at least not show during debugging sessions, whilst the same code would throw these ThreadAbortExceptions off under Visual Studio 2013.
When I suddenly encounter Exceptions when I know I've not changed code to cause such things, it has generally been due to using a newer version (or same version reinstalled) of Visual Studio. Some third-party libraries are throwing Exceptions and are dealing with them correctly. Check the options in VS under Debug &gt; Exceptions... about which Exceptions to show or ignore. In my case, I am using a RAR/ZIP 3rd-party library where I pass in a filename and it internally determines if file is RAR or ZIP and proceeds accordingly. It throws exceptions which it catches and proceeds on to the correct decoder but Visual Studio kept intercepting the Exceptions and breaking back into source.
As to "How often do you find yourself tossing together a console application for the purpose of trying out code, "testing" in the sense of seeing what works best, or, possibly, as a means to demo some library of function?" I use [.Net Fiddle](https://dotnetfiddle.net/) for a lot of this stuff nowadays.
ThreadAbortException is thrown on a thread when the Abort method of that thread is called. It's basically a signalling device. It could be that some background thread is getting aborted (perhaps not even by your code directly). Maybe a library got updated and is behaving slightly differently.
[LINQPad](http://www.linqpad.net) works great for this too. It does more than just LINQ to SQL. It's a great little scripting tool for building out console and test apps without going into a full solution in visual studio.
Yeah - I was thinking more along the lines of the little console project built in to a larger solution used to either "test" or demo stuff by others e.g. the "Biggy.Tasks project included in this repo. Agreed on using .NET Fiddle or LinqPad where that makes sense. 
http://cshell.net/ is also a nice app for random testing
Nice!
This link is a blog entry that deals with handling C# Delegates during a fully [automated clone or copy](http://www.adamslair.net/blog/?p=1608) operation. It's somewhat of a niche topic, but I figured it might still be interesting to some of you.
Ummm ... static void Run() { var consoleInput = ReadFromConsole(); if(string.IsNullOrWhiteSpace(consoleInput)) { Run(); } try { var cmd = new ConsoleCommand(consoleInput); string result = Execute(cmd); WriteToConsole(result); } catch (Exception ex) { WriteToConsole(ex.Message); } Run(); } Whut? This function is really awful and fact that this is the "main loop" doesn't make it any better. ... Either that or I am underestimating the C# compiller's ability to unwind recursion.
I wondered about that (the recursion). Any suggestions? I may be missing something really stupid. 
I would probably do a while loop and break out of it when needed to end.
See? I thought I may have missed something basic. Thanks!