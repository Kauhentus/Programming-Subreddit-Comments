.net got a build in JavaScript serializer too, but apparently people don't like it.
Can't you use attributes to change the name, like with the XML serializer? Never really used json, just once and the internal one was enough for that.
I will give it a try and post a follow up on here. Thanks for the tip. 
For what it's worth, I prefer the faster ServiceStack JSON tools. :)
Ooh, email confirmations? Excellent! 
You make it sound like this is something new. You just outlined total standard implementation. If that was your goal, well done. But if it wasn't, I don't understand this post. 
I did not intend to make like this was something new, and instead wrote up my understanding, after mucking about for the better part of a morning trying to make this simple thing work. It appears clear and obvious to those who already know how to do it. It is less so when you have not done it before. As with many things, I try to write the tutorial I wish I had been able to find while googling, trying to figure out why my own code didn't work (in my case, after finally figuring out the basic Ajax call, I was still confounded by the preventDefault() method not working so long as the submit button HTML was tucked within the `using` block. I did not know I landed with the "standard" implementation, because, when you google this, you can find umpteen different ways to do it. Many of which (mainly from Stack Overflow) show only part of the solution (specifically, the part where the SO poster was having a problem). If one is getting started on web stuff, coming from a different background, it can be challenging to know just what you are doing wrong (refer again to my problem with submit button - for the life of me I could not figure out what was going wrong, only that nothing I did prevented the default submit action from firing). Good to know when all was said and done, what I landed with was, indeed, recognizable as a standard way of doing this. 
It's always nice to see these features integrated into VS2013 even though I feel some of these features should have been there from the start. "Move line" is standard in Eclipse for instance. 
Ahh, it's cool man. Frankly, I sometimes worry about this very thing. I mean, it's difficult to blog about anything truly "new" right? I take his point, and I probably should have mentioned in the post that I'm not inventing anything (I often do put that sort of disclaimer in there). They say, "Blog what you know." I try to do a good job writing what I THINK I know. but I am not a pro dev, I'm just a guy with a strong passion for this stuff, trying to learn it on my own with some help from the internet-at-large. Lastly, as I mentioned, it was actually validating to hear this was the "standard implementation." Cheers! :-) 
Memory is memory, even 200k of it. Entire applications used to be smaller than 200k. And honestly, if log4net didn't bundle every single driver into the dll, it'd only be a hair larger than my logger. While log4net is one of my gripes, things like nhibernate and Entity are far, far worse.
This is quite exciting news! :D
There's really no need to move the input button out of the form, to correct the double-submissions "issue". Just remove the click handler entirely, binding to the submit event is sufficient. returning false or preventDefault works fine. Edit: if this wasn't your experience, I suspect you may had issues elsewhere. And frankly, doing this kind of server side and client side UI in the same file, is very complex. 
First off, I would put that copy-pasted index calculation into a variable so it's readable. Then, where does pixelData come from? If it's from Bitmap.LockBits, or some other actual image source, it may contain padding, so use BitmapData.Stride or similar to offset rows instead of width * bytesPerPixel.
Indeed, this was not my experience. I had actually added the click event binding as part of the work-around. Without this, no matter what I did, I could not prevent the default submit event from occurring. I agree, this single-file architecture is less than ideal for most cases. But this was supposed to be a simple example. I would love to know what I was missing. But true story, moving the button out of the form fixed the problem, and nothing else short of that worked. 
It's coming from the CopyPixelDataTo function of a Microsoft.Kinect.ColorImageFrame, so every set of four pixels is R, G, B, and then zero. Each set is from left to right, then from top to bottom. There is no padding. The stride is just the width of the image times 4 for both the pre-image and post-image.
Then it looks like it should work. Check that you're not mixing up width/height you pass into the function or something like that. What does the original image and the output of this function look like?
Ah, fixed it. My height and width were instead mixed up. Thanks!
You might want to post the solution here if anyone wanders here with the same problem. http://i.imgur.com/AonM9nJ.jpg
Still many legacy and even new applications in the enterprise uses ado.net for various reasons. From what i have seen it is more common with ado.net than something else. I would say make ado.net the main thing to learn and then only learn ef when needed. 
You could do the logic in the database first using a stored procedure. And have your C# code call the stored procedure once. My rule of thumb is to try to put the work in the database instead of repeatedly calling the database. There is a performance benefit to this as well. Alternatively, if the tables are small enough, you can load them into a data structure and do the work on the C# side.
1) Read the first table completely into memory and close that data reader before opening the second table. or: 2) Do the join in the database where it belongs already. SQL is a powerful language. if you learn a little bit of it, you should find a way to get the result set that you want in one sql statement. Repeated calls to the database gets slow quickly. The database is likely hosted on a different machine, so multiple network round trips that each return small amounts of data are not efficient, and when the number of round trips gets larger you *will* notice it. Placing your sql statements in a stored proc is usually optional, but from the problem description, this might be hierarchical data (i.e. a tree structure)? If so, that's harder in SQL and logic in a stored proc may be the way to go. 
This is the correct answer. Databases are designed and optimised for this kind of thing and is the correct tool for the job. Using C# for this is like using a screwdriver to open a can of beans. Yeah you'll get the can open, but there's a much better way to do it using the correct tool. Merry Christmas!
What are the advantages over F#?
Somewhere there's a chart that has typical times to do things on a server, e.g. add two numbers, network round trip in the same data centre, typical internet round-trip, etc. But I didn't find it with a quick google this morning. It's worth remembering that a network round trip is still expensive. 
The normal imperative/OO vs. functional advantages/disadvantages.
There is a lot of bad advice in there. 1) Never manually manage you threads (fork). 2) And never block them (join). 99.9% of what you want in parallel programming can be done with async/await, Tasks, and the ThreadPool.
You can do it easily entirely in the SQL statement SELECT * FROM TABLE_B WHERE FIELD_A IN ( SELECT FIELD_A FROM TABLE_A ) **Edit** If you are using SQL Server I *think* you can use Multiple Active Result Sets (MARS) in the connection string. "Data Source=MSSQL1;Initial Catalog=AdventureWorks;Integrated Security=SSPI;**"MultipleActiveResultSets=True";**
Hmmm needs refactoring. The make drink method should not be sipping also. What if a future version needs to make a drink for a friend? :-)
my girlfriend gave me almost the same thing, but mine was for coffee instead of beer, I love it
`Main` method isn't `static`, you can't just let this slide.
That drink doesn't appear to be **DrinkType.Beer**, looks like it needs some unit tests
Also local variable names should be camelCase not PascalCaps. Unforgivable.
aye, Girlfriend.Dispose();
This was what I noticed too. Just finished reading Clean Code and all I can think about are small single purpose methods
Awesome
I like how his girlfriend isn't local.
She's in Canada. You wouldn't know her. 
Source? Please, source.
If (OP.deliver){ Upvote(); }
DrinkType.Coffee would be a better choice for java.
Needs more iterations over the MakeDrink() method. 
var theGoods = new Goods(http://www.zazzle.com/c_sharp_programmers_beer_mug-168594352819968212); OP.Deliver(theGoods); Refactored: Added Goods class for delivering
break; up with her OP. 
Now, forget everything you read from Clean Code and read Code Complete. -- sincerely, all the programmers who have to maintain your code.
Leave it to reddit to ruin what is hands down a pretty cool gift... In reality She is a keeper dude... 
What is with that sticking program logic inside factory method? I mean... come on!
If method naming is any indication, this is most likely C#.
And makeDrink has the side affect of sipping the beer until empty. Someone should have refactored that to haveDrink so the intention is more clear.
Well, that and it being posted in a C# subreddit, should have been a clue. Too much delicious beer last night.
&gt; java &lt;spit/&gt; j/k java peeps :)
Read both. Took useful things from both. Please explain your statement. I'm worried I've gone and done a bad thing. 
Cup&lt;T&gt;
Sip with or without pinky?
this.Upvote(); Edit: oh wait now I'm upvoting my own comment, never code tired, kids. 
I skimmed so I may have missed it but is there any material on why to use NUnit over the build in Visual Studio Unit Test framework? 
I'm probably not too much better of a programmer than you, but here's what I've noticed from glancing over the code... * None of the public variables need to be public * The whole update method doesn't need to be in a try catch block. Could delete the block completely and put the stuff in using in a try catch finally * Instead of changing the cursor and possibly blocking the UI thread, put the web access into an async method * I think the for balance for each loop could instead be done with LINQ * Variable names Balance and _Balance could be better. Technically it should be _balance, and those in combination imply a public property and backing variable * The update text method can be replaced with a short circuited conditional if statement * File.Create().Close() appears to be incorrect usage/syntax * I'd probably wrap the stream writer in a using block All in all it's not bad or anything. Just keep up the work! edit I was wondering why I was answering vb questions in a csharp sub. Oh well. 
It doesn't sound like it, no. Only your source code should be under source control (in your case git), not the binaries. Your repository should contain you source code (which it looks like it does) but you should exclude your bin, obj and probably publish folders using a git ignore. Basically, after cloning the repository/pulling the latest changes any files and folders that will be recreated as part of the build process shouldn't be under source control. With regard to commits, you should make small commits as you make changes to the code. Each commit should, ideally, be a single change so you have a clear history of the evolution of your code base. For example, users might report three separate issues with your app that you investigate and determine are bugs. It's tempting to fix them all at once, commit then release a new version. However, the best practice is to fix and commit each bug individually. You then have the ability to publish some, all or none of the changes, you can revert individual changes and the whole history just becomes easier to manage. Once you've committed a set of changes and you want to make them publicly available you should push them to the "central" repository. Other people will then have access to them, can pull them, make further changes in their repositories, etc. When you want to release make sure you have the latest changes, bump the version number and commit then tag that commit (I use names like "v1.0.0.0", "v1.0.0.1" for tags, just to make it clear which version was published. Then publish wherever you're publishing to and push your version number and tags. If you need a branching strategy I highly recommend [this](http://nvie.com/posts/a-successful-git-branching-model/). It's complicated at first glance but very powerful. With all this YMMV, YGWYPF, etc, etc, find what works for you but bear in mind source control is really a history of your source and not binaries. It should contain only what you need to build the project and get it in a running state, it shouldn't include every version of the site you've ever built, but should allow your to restore the source to a point where you could build a version of that site.
Clean Code is compiled by Robert Martin, a software consultant/company owner. It promotes sort of drive-by "consultant coding" or write-only code. Your code looks nice, but is a nightmare to maintain. Clean code is not the same as good and maintainable code. Clean Code is written by many people (all consultants in Martin's company, I believe). The quality of the chapters varies a lot - if I remember correctly, then for example, exception handling chapter was much better than the others. And in a lot of cases, they try to offer one-time solutions as universal, "works everywhere" best practices. Imagine that you have to check if a file exists, then open file and read its contents - normally it would be roughly ten to twenty lines, depending on various checks etc (please note, just an example!). That would be *A Bad Thing* according to Uncle Bob - even though the length of the method is reasonable according to the normal coding practices and it does basically one thing - it is way over the magical three statements limit, so you would end up with many private methods "doing just one thing" - along the lines of DoesFileExist(), OpenFile(), ReadFile(), CloseFile(). Splitting your code in so many small methods is pretty awful when it comes to reading, understanding - and debugging - the code. One method is all you need, and depending on your platform/compiler, the small methods may or may not be inlined. Not to mention, you'll end up with far more actual lines of code - to the point where it may be worth start thinking about a new class. And I *really* dislike Martin's stance on comments, "The proper use of comments is to compensate for our failure to express yourself in code. Note that I used the word failure. I meant it. Comments are always failures." No, they are not. There are bad comments, useless comments and so on... but there is nothing that makes understanding code and its purpose better than a good comment. Code Complete has a great chapter on commenting code - what to comment, why to comment, what not to comment, what types of comments are there etc. I think I've had more than average amount of projects I've had to take over after the original programmer/s had left the company, projects from other companies and such. Good and easily understandable, reasonably commented code has become somewhat of a religion for me - I've actually given presentations/lectures about improving code quality. Not that my own code and coding skills couldn't use an improvement - but then again, being a programmer is learning constantly. Like I've written before, "If you are looking at your own code from two years ago and it looks fine, it doesn’t mean you were a good programmer two years ago. Quite the opposite, it means you haven’t grown as a programmer within these two years. You haven’t learned anything." Sorry for the wall of text and not replying sooner - I was away..
Hi, needed to continue here due to character limitations. So, I am making this game as my final project for my coding class, but I am having some dificulties, mainly with : -Helps can only be used once, I know I need to have a bool variable, but I don't know how. - audience help - change question help - when you press enter the program automatically goes to the next question, it can't. Rules: Basic Who wants to be a millionaire rules with additional help, after lever 6 you can change question. Background structure: I have 15 txt files representing the 15 levels, in each txt file the is 3 questions and for each questions there are 4 answers, organized like this: *How many teenage mutant ninja turtles are there?|3|2|4|5|4* The last one is always right, I use the users input to compare it to that. Can some of you help me, or point me in the right direction?
Excellent, thanks.
I agree with your code review, this is mostly about using git and source control with windows forms apps, as i mostly write web apps, but i do appreciate the code review and feedback.
Just curious - are those users' accounts administrator accounts or not?
I think so, but they're both using Win7 with UAC so the processes should only have restricted rights
Create a class called options with properties int phoneFriend int 5050 int changequestion then in the code if(options.5050 &gt; 0) { give5050(question); options.5050 += 1; } else { notify("Noooooo you can't"); } 
I'm sorry, but i never used it. How do I use it? 
I can also make it with bool, can't I ? 
[Link to code](http://pastebin.com/embed_js.php?i=uAefey9V)
You should take a look at gitignore &gt; https://help.github.com/articles/ignoring-files This will help you transferring only needed files. There is also a link for default ignore files. Im using that too. 
It appears you're doing the same code 4 times, one for keys A through D. There's probably a way to refactor this to a single method. Another thing- you only need to do `Random rand = New Random();` once at the beginning of the program; there's no need to reseed the generator. That being said, I'd approach the problem by making an `Answer` enumeration: public enum Answer { A, B, C, D } and a `Question` class: public class Question { public string Text { get; set; } // actual question text public int Level { get; set; } // public int Dinhieros { get { return something; }} // ^^ figure out a way to automatically map the question level (1-15) to the // dinhiero amount, so if question level is 1, dinhiero is 50, // question level is 2, dinhiero is 100, etc etc public Answer CorrectAnswer { get; set; } public Answer SelectedAnswer { get; set; } public string AnswerTextA { get; set; } public string AnswerTextB { get; set; } public string AnswerTextC { get; set; } public string AnswerTextD { get; set; } } All the `Answer`s would be in a `List&lt;Answer&gt;` that was deserialized from a single xml file with the `XmlSerializer` class. As far as the game mechanics go: keep track of what level the player is on, select a random answer of the appropriate level from the answer list, then supply to a method whose sole purpose is to display the question+answer text and take the player input. Once the player has entered something, send it to the appropriate method- one single method for parsing A-D, and methods for the other options (change answer, 5050, etc). Of course there's more but that's the general idea :)
the application is using some webclients in asynchronous mode, and I didn't implement a way of terminating them when the Form is closed. Does this really make the process invulnerable?
I just tested it on my machine and it didn't seem to be a problem, also one of my test candidates reported that the application closes properly now. I didn't change anything related to the WebClients but I may have prevented some stack overflows inside try-catch blocks. anyways, the problem seems fixed, but I'd still be interested in the cause.
dumb question.. did you make and have them use an installer package.. if so does it download/install libraries maybe a .net update.. maybe the machines needed a reboot for those to work... and your users didn't.. just a thought sorry if I am out to lunch. 
((Comment) this.Parent()).Upvote(); * xoxo
yeah same concept applies.
I just downloaded the extension today. It seems really interesting and I'll research it later this week, but could you tell me how it's been of benefit to you?
Do you know what they get if they run "TASKKILL /F /IM yourapp.exe" from an elevated command prompt? I have had weirdness when trying to stop processes when my system was under pressure memory wise, but that was mainly an XP thing. 
the problem doesn't occur anymore, so I can't try it out. But I guess it would do about as much as the task manager with system rights
Not sure what you are talking about here as they are not deprecating any language here. From what I can see, this is based on C# but is intended as a "systems programming" language, so basically an alternative to D and Rust. 
Sure, but when it fails on the command prompt it might give you an error message of some sort.
They have too many languages, and I did not say they were deprecating anything yet but look at XNA, Silverlight and countless other examples of MS pushing something to only abandon it shortly after.
Yep, they make it really hard to decide what technology to use. They have everybody rush from platform to platform. *"Hey, everybody use COM"* *"COM is dead, use remoting"* *"Remoting is dead use WCF gogogo"* *"Everyone use WPF; disregard; use Silverlight with ADO.NET; correction; everyone use MVC with Entity Framework"* 
At least with some technologies you can tell they are going nowhere. Metro was dead on arrival.
Ugh, enough inventing languages Microsoft. We don't need new ones.
I recently had to port an existing program (but just finished app) from Windows Phone 8 to Windows Store (computers and Surface) only to realize that the two platforms differ too greatly. Most of the logic had to be rewritten.
Isn't that what they said they were doing when .NET was launched?
http://joeduffyblog.com/2013/12/27/csharp-for-systems-programming/ is the original article for those who wish to avoid the blogspam.
I could be wrong, but that looks like the same thing. static void Main(string[] args) { // Make sure there is an instance of notepad running. Process[] notepads = Process.GetProcessesByName("notepad"); if (notepads.Length == 0) Process.Start("notepad"); ProcessThreadCollection threads; //Process[] notepads; // Retrieve the Notepad processes. notepads = Process.GetProcessesByName("Notepad"); // Get the ProcessThread collection for the first instance threads = notepads[0].Threads; // Set the properties on the first ProcessThread in the collection threads[0].IdealProcessor = 0; threads[0].ProcessorAffinity = (IntPtr)1; } 
My problem with Xamarin is that Android doesn't have a grid view, so it's almost impossible to layout the way you want.
Yes! That does work. And I'm able to set it now too. Setting through thread just wasn't working. Thanks! I must have screwed up when I was trying to get to it by Process so I was banging my head against the Threads.
Why not? You want to live with c forever? Or program business applications in fortran? Language development is critical to the advancement of computing. 
Why oh why did they have to restructure their pricing model.. still clinging to my $300 antiquated personal license. It's just far too much more now for non commercial usage.
Thanks I'll have a look at it, maybe I can start making apps for android now :)
You're welcome 😊 I am also writing more blog posts in the coming days, stay tuned. And ping me if you have questions, I am always willing to help.
In a given week I probably do about 15 minutes of good solid work... But on a serious note, when I worked in an office as a software engineer (back-end work mainly, but with some front-end crap from time to time) I probably only put in an hour or 2 of serious programming in an 8 hour day, I spent a lot of time researching the best way to implement a lot of stuff and general research making sure we knew what kind of hazards we were going to run into. Looking back I guess I did spend at least another hour helping other programmers work through issues, so... ya... actual coding was very little compared to the rest of the crap I had to do.
Ohhh man, I worked at a web dev company for a while that from the outside looked "hip and cool" you know 8bit Mario painted on the wall over a sweet stencil job, but the boss would literally scold us for talking to other developers for more then 2 minutes... It felt like highschool.
Wow, that is cleaner! Nice!
That's a tough one. I've been "thinking like a programmer" since I got my Timex Sinclair way back in the day. It just kinda happened. One thing you can try is to think of your outcome, then think of all the tasks that are required for that outcome. Then think of all the tasks that are required for those tasks to start, and so on ... until you arrive at the foundation tasks that have to be there first before anything else.
Assume the code you're looking at was written by an idiot. Even if you wrote it. It makes you a hell of a programmer. It also makes you go insane.
Mostly it comes down to 3 things: a) Personal experience b) Talking with other developers c) Reading The first one just takes time. The more experience you have the easier it will be to look at a problem and start identifying the different aspects you have to consider. The second part is a little harder. Talk with other programmers you know about programming. It doesn't matter if it's something like a cool nuget package you've found, a problem you're working on, or a high level software architecture pattern. Talking with other developers is a great way to get different perspectives and can also help your understanding of whatever you are talking about. It can be a little difficult because developers are notoriously stubborn, arrogant and love to prove each other wrong, myself included. The last step really requires the most effort. Read as much as you can from as many different sources as you can. Try and concentrate on the aspects of programming that you enjoy, but don't ignore the aspects that don't interest you. I found a bunch of developers who I have immense respect for in terms of software design/architecture and development processes, and I use things like RSS feeds and twitter to follow them and try to read every article they write or link to. Don't take everything they say as being right all the time, but use all the different information available to come up with your own opinions. 
I'd suggest looking into patterns and practices for software architecture. Programming isn't really different than so many other disciplines and understanding and thinking like a programmer should mean you understand and think in the best practices. Start with [separation of concerns (SoC)](http://en.wikipedia.org/wiki/Separation_of_concerns) .. to me personally that is the most fundamental and important practice in software. You could then look into the seminary work on patterns which was written by the "Gang of Four" [Design Patterns](http://en.wikipedia.org/wiki/Design_Patterns) From there you could pick your poison, there are so many works that have been produced in the last 15 years. Take a look at those authored by Martin Fowler.
Check out Eric Lippert's answer to this StackOverflow question: "How to create the perfect OOP application" http://stackoverflow.com/questions/9444818/how-to-create-the-perfect-oop-application/
For me, there are two main things you need to do: Read code and write code. That's it. Find good examples of code, read and understand. Pick a problem to solve and write code to solve it. Think about what works well and what doesn't.
To be fair, it seems like most code I look at WAS written by an idiot. Some of it was even written by myself.
I would say the opposite. Assume the programmer who wrote it knows what he was doing unless you can prove otherwise. 
Agreed. I don't **immediately** see the point of assuming all code is written by an idiot (which I take to mean incorrect). I've gone through phases where I thought most code I read was from an idiot only to realize that it was just my bias against their style. However, in all cases, if see you do a 5x nested ternary statement, I'm going to assume you are an idiot... or someone who didn't want me to understand what you did... in which case you must be an idiot or a dick.
When I write code, two weeks later I've learned more and any code I've written before then I *could* re-write and improve. For me it's a a never ending journey.
*Why were you so stupid, past-me?!*
I'm not too sure if this counts as thinking like a programmer, but what I've found helpful is that if you're trying something new, don't try it in your project or app. Make a new project and copy the sample exactly. Then, make another project and do the same thing, but modified to do what you need to do in your project. Finally, do it in your project. I've messed up my projects a bunch of times by not trying things out in separate projects. Also, this satisfies the "3 to 5 meaningful repetitions" associated with learning (I still have that drilled in to my head from school).
This comment needs a caveat. *Always assume every line of code has a reason*. A common mistake made by mid-level developers is to slash *"stupid"* code out of programs. Junior developers don't make this mistake because they are terrified of breaking something. Senior developers don't make this mistake because they know better. That code is in there for a reason. If you don't understand why, then don't touch it. 
I don't actually mean that the person who *wrote* the code is an idiot. I'm just saying, don't imbue the code itself with any mystical properties. Code with comments like, "don't change anything this is all very fragile" means that the programmer (idiot or not) wrote some incredibly idiotic code. By looking at it like that it helps demystify the code and actually empowers you to fix the screwup. I'll admit there are some segments of code that are truly awe-inspiring pieces of art that can't be touched. Those were probably written by wizards. But to assume all code is like that (especially code at, say, your own company) is going to make you lazy and complacent.
When thinking like a computer programmer, remember: computer programming was designed to mimic the 'real world' using repetitive algorithmic design. As such, try to break a real world scenario into its smaller subsets. Think of the world as an infinite set of objects working together to achieve a common goal. As an example: We consider a tree to be an object. Taking this a step further, consider a tree to be a set of objects. What are those smaller objects (leaves, color, texture, bark, roots, sustainability, etc, etc). Now that we have smaller objects, how can you break each of the small objects into even smaller objects? Is it possible that all objects share color, texture, sustainability, etc? All of a sudden, you can identify the commonalities between objects. When I was in high school, I remember practicing this breakdown as a warm up. Just a little something to get me thinking in a way that has helped me reconsider the world around me. **I will warn you, however - it is possible to *over think* things.** If you break an object down to the molecular level... well, maybe that's going too far for a simple programming assignment/application. 
One thing I'd like to emphasize is the importance of good OOP practices. A lot of code can be written by just chugging it out, but if you learn to design things from the top down in an OOP way, you'll thank yourself later. Now this depends on the project, but most things these days employ OOP to some degree.
My suggestion? Go read the code of some major open-source .NET applications, such as [Paint.NET](http://www.getpaint.net/).
Try searching Stack Overflow. I always find relevant stuff just by going through the tags for the language/framework I am working in. 
Microsoft has some great material on C# coding conventions. I find that some of the best C# I've seen has come from their projects. C# Coding Conventions (C# Programming Guide) http://msdn.microsoft.com/en-us/library/ff926074.aspx .NET Framework Guidelines and Best Practices http://msdn.microsoft.com/en-us/library/ms184412(v=vs.110).aspx Since most of .NET is open source you can really get down and see some of the way the build/design/comment their core .NET services. http://aspnetwebstack.codeplex.com/SourceControl/latest
I think Paint.NET went closed source a few years back?
"Effective C#" is a great text.
It's now [OpenPDN](http://code.google.com/p/openpdn/), but you can use something like Reflector to get the Paint.NET source anyway.
Download [Juval Lowy's - C# Coding Standards/Design Guidelines](http://www.idesign.net/Downloads/GetDownload/1985). The www.idesign.net site has a lot of other free content on C# Best Practices.
Agile Patterns and Practices by Bob Martin is a great text on writing C# in a way that leads to well designed OO. The .NET Framework Guidelines are also worth reading.
The guidelines, not necessarily the reflected code itself though, ironically.
On an only slightly related tangent, if I never hear the phrase "Best Practices" again, it will be too fucking soon. I hear this phrase at least 20 times a week, and without fail it is always said by either a clueless developer or a salesperson. In the latter case, as an excuse to sell anything to a client (we use javascript, its a microsoft best practice! We wrap dog turds in paper printed with actionscript, best practice!), and in the former by individuals who have heard it so many times, they've imbibed such advice thoroughly. In basically any sentence, the phrase "best practice" is actually short for "go fuck yourself, we're doing it this way, and don't you dare call my bluff you technically illiterate ignoramus."
The highlight of the book are the comments from,the compiler and framework teams talking about how the framework evolved over time.
Ah, cool 
I suggest dotPeek, it recreates projects.
If it works when you have a breakpoint and click Continue, the API may just need a delay between calls. Try adding a call to Thread.Sleep at the bottom of the loop. Just start with 10 milliseconds or so and find a wait time that works. I might try to run this code if that doesn't work. :)
Also, I would cache the deserialized object instead of deserializing twice.
The Main() method is also private...
Hey thanks for the response. Umm i have no control over the api. In the code that i've linked you, i have not done any threading at all. It was my first attempt and it is working when i click continue. After trying to figure that out i was unable to fix it, so i thought i might thread it. But i am unable to do that YET. I'd really appreciate it if you can have a look at the previously linked code see what i'm doing wrong there. Thanks so much for your time man.
What exactly is happening? It sounds like the debugger is pausing due to an exception. If that happens and you can just hit continue without crashing then you may just have the debugger set to break whenever an exception is thrown. A simple test for this is to run the app without the debugger and see if it works. If it does then it's just the debugger. To disable this behavior go to the Debug menu in Visual Studio and choose the Exceptions... menu item. Make sure the exception you're seeing (and all of its ancestor classes, especially System.Exception) are unchecked. Anything that is checked will cause the debugger to break when that exception is thrown, even if it is caught in the code. It's a useful feature when you need it, but annoying when you don't. 
There's no need for you to try it out. Thanks to your suggestion i just got it to work. I feel so stupid that i didn't think of it. :/ I wish i was rich i'd give you gold :)
This document is a godsend for those teams that lack technical management. If you know about fluent interfaces and pushing a dot after the newline, you're well past needing a coding convention document. It assumes you've already been exposed to enough good coding conventions to have your own. 
&gt; things like common idioms, architecture, things to avoid, etc. Don't forget to try out the VS-inbuilt "Code Analysis" and other tools like [stylecop](http://stylecop.codeplex.com/), [CodeIt.Right](http://visualstudiogallery.msdn.microsoft.com/1C883176-E3D2-4279-80C1-D1F3505C31F3?SRC=VSIDE) and Resharper.
Yeah, dotPeek is my goto as well, just forgot the damn name!
You know the best person to help you answer that question? find a mirror. Choose one of your other hobbies and make something related to that. I'm working on a D&amp;D toolset for my games and an army builder app for Warhammer because that's my bag. Find yours. EDIT: of course the other option if you REALLY can't come up with anything is to contribute to someone else's project, poke around on github.
I don't know if this is what you're looking for; but perhaps a "world's most annoying program"? There's a topic in this sub that got me this idea, it had code to constantly change the size of your window, change the title, .. I bet you can be very creative in it and in the meanwhile you'll learn a bit more about the code you're using
that may be a good idea, a exposure calculator for my night-time photography would be nice. A little unrelated, but is there a way to run C#/.NET stuff in a android shell? (Something similar to mono on mac), that would be perfect, since i normally don't have a computer with me on photography trips.
&gt;is there a way to run C#/.NET stuff in a android shell? Xamarin is probably what you're after
When I get bored I play around with [XNA](http://msdn.microsoft.com/en-us/library/bb203894.aspx)
Why not just use a using statement on your WebClient object? Try to avoid Thread.Sleep whenever possible. 
I am not sure if you've heard about projecteuler.net. I suggest giving it a look. Not only will it help you understand how to use C# (granted you solve all problems in C#), it will also improve your abstract thinking and programming skills. Good luck.
That's a great idea. My aim was to make very primitive RPGs, but toolsets for D&amp;D and Warhammer would be even better. Thanks!
Or maybe i start playing ogame again… that game has the potential for some helper programs 
Damn you! I totally forgot about ogame! now I'll have to play again...
You're welcome 
As soon as i get to the UI part of the book i will of course make it. I also could try building a bluescreen fake – had lots of fun in school with the ones i wrote in QBasic.
When I want to learn a new language I work through problems from projecteuler.net
A little off topic, but what is 5e like? I'm a 3.5 player and I hated 4e.
I haven't run a game of it yet. I'm a 3.5 player myself. I just have the beta and haven't really spent much time with the new rules yet. I'm mainly just working on the generic parts of my app (people, places, maps, various tools) that could apply to all tabletop games. At first impression, characters are more well rounded to handle social and exploring obstacles regardless of class. There's a big push to the balancing the "three pillars" (interaction, combat, exploration). I'm excited for it.
Few examples: - make a program that converts your input into UTF-8 code, saves that in a file and then when you open file it converts it into letters - make a program with which you can download all images from website - make TCP Server/Client for sending/receiving files - make a program for keeping track of employees (preferably also make a database) - learn how to work with XML These are just a few examples, but, options are endless. Google if full of them, github, projecteuler etc. Essentially, it doesn't matter what you do, as long as you're doing something. I started out with a simple Notepad application.
Ended up figuring it out before anybody answered and edited post accordingly then. But essentially yes I wasn't saving it. The questions on stackoverflow I found didn't save it and I wasn't thinking to clearly this morning. Thanks though!
Hmm, Interesting thanks guys I'm going to check into this.
What kind of Warhammer helper application are you thinking about? I'm also thinking about replacing my excel sheet and battlescribe for something self made :)
what is your genericwebservicemethod supposed to do? for your genericinput model, i'd probably do something like this: public class MyCustomResult&lt;T&gt; where T : IGenericModel { public JsonResult JsonResult { get; set; } public T GenericInputModel { get; set; } } public MyCustomResult&lt;T&gt; GetJsonData&lt;T&gt;(T clientData) where T : IGenericModel { MyCustomResult&lt;T&gt; customResult; bool serviceResponse = false; try { var excep = this.GetExceptionManager(); excep.Process(() =&gt; { // Make the Web Service call generic. Also the output Model must be generic. List&lt;T&gt; result = GenericWebServiceMethod(clientData, ref serviceResponse); Response.StatusCode = (int)HttpStatusCode.OK; jsonResult = serviceResponse ? Json(new { success = true, data = result }) : Json(new { success = false }); }, MyApp.ExceptionHandling.Constants.UIPolicy); } catch (MyApp.ExceptionHandling.NotifyException e) { // Log Exception Response.StatusCode = (int)HttpStatusCode.InternalServerError; customResult = new MyCustomResult&lt;T&gt; { JsonResult = new {success = false}, GenericInputModel = default(T)}; } return jsonResult; } 
Beginner: Do an assignment as simply as you can. Intermediate: Do it again using Linq. Advanced: Do it again using only functional techniques and no control flow (no if-else or switch). 
Sounds like you need three interfaces : genericInput, genericOutput, genericService. Your main code you provided needs to implement a method that reads a genericService and input, feeds the input to a service, then converts and returns a genericOutput. If you're writing the service you could always try to move this conversion code into the service. (So the service actually returns the generic type, this is what I would do, or even just use a generic for the return type of the method to call the service.) Now pseudo code is as follows Public T GetResult&amp;amp;amp;amp;lt;T&gt;(genericInput input, genericService serv) where T : genericOutput { Result = service(input); T out = new T(); T.dataYouNeed = Result.data; Return out; } I removed your logging and error handling for brevity sake, I'm currently in a cabin in the middle of nowhere and I can't change tabs to read any docs, so I'm only 90% sure that's how you declare a generic with a condition and instantiate the generic... Hope that helps :) Edit: just to flesh out how I said i'd do it; The service would have the following method. Public T GetResult&amp;amp;lt;T&gt;(genericInput in) where T : genericOutput Then from your class you'd simply go T out = service.getResult&amp;amp;lt;T&gt;(in); return out; Totally clean and generic :) also no intermediate data structures. 
First, C# has been around for 13 years. In that time, they've made more progress than Java, a more "stable" language. The Framework itself has gone through 4-5 versions, with very few issues with backwards compatibility. The only language that was dropped was J#, and primarily for legal reasons. Hell, people are still coding in VB.NET and making a lot of money at it. Second, many of the passing/dead technologies to come out of there have been platforms and tools that were written on top of the Framework. Those platforms come and go just like with any other ecosystem. In another 5 years, I doubt we'll have ASP.NET MVC 10, because we'll have found something better and no one will be sad. Does anyone miss Win Forms? COM? ADO.NET? And not just Microsoft stuff, you'd be hard pressed to find someone still doing web programming using Perl and CGI. PHP was hugely popular but is only taught in academia and I can't imagine it will be around much longer either. In 10 years, few people will use Ruby on Rails. In the meantime, a colossal amount of software has been written that wouldn't have been possible without these platforms. Lastly, if you don't like change, you can stick with C and work close to the metal, if you wish. Just don't expect to be on the forefront of new web development. 
Basically battlescribe online.
I've always liked to do lists or task trackers . Whenever I'm working in a new framework I usually make a simple to intermediate level one. For WPF I made an obscenely ugly task tracking app, for web, to do list with some cool client side Js libraries. Each one helped me figure out the UI layer, business logic, and data interactions.
I learned C# specifically because I bought one of [these](http://www.dreamcheeky.com/webmail-notifier) for $1 off a discount rack and hated the included software. I'd wanted to learn a programming language for a while and that was the catalyst for me to learn. From knowing nothing to getting a simple test program running that simply cycled the indicator through various colours took me ~1 week, a few days after that (and some more learning) I had it working for gmail, then I took some time learning how to use the reddit API in C#, etc. Seeing it light up is actually pretty rewarding (that sounds lame, but it's like a physical indication that I'm learning something). Every time I add a new function I think of it as "leveling up" when it comes to my programming skills. I now get a colour-based indicator for Facebook, Twitter, multiple Gmail accounts, and Reddit. I'm currently working on making them time based so that for example if the blue FB indicator is BRIGHT blue and the orange Reddit indicator is DARK orange (not hue, intensity) then I will know the FB message is newer than the Reddit message. Fun stuff. Honestly, even though I wouldn't have bought that thing for $10 if it hadn't been for that discount rack, it's been a TERRIFIC learning tool when it comes to C#. Unexpected but awesome. **EDIT**: I should have mentioned that someone has already [created drivers](https://dreamcheekyusb.codeplex.com/) for that device so it's not like I started from a hardware level. Still had to learn how to utilize those libraries in my own programs, etc. I really am a total beginner, so I consider that an accomplishment :).
They even have a free version for small apps! :D
http://www.nuget.org/
I don't understand! :| Can u explain a bit more please?
I had this problem as well. I started looking at games that I played such as WoW etc, and I decided to make programs for them. Even if it wasn't a popular program, I did it for learning and it actually did help out a lot as it gave me a very high level goal to achieve. 
Ahh. Yeah that didn't work for me. Thanks, I'll try with it later on. Happy new year ;) 
If UI is more your gig, you should look into Windows Presentation Foundation (WPF). It's pretty much replaced the old WinForms way of doing things. One of the big features of WPF is something called data binding. My goto book right now is [WPF 4 Unleashed](http://www.amazon.com/WPF-4-Unleashed-Adam-Nathan/dp/0672331195)... And apparently there's a full PDF of the book [here](http://squadron66.com/files/ufs/RIS600%20-%20Recommended%20books/WPF%204%20Unleashed.pdf). The section on data binding starts with chapter 13.
Ctrl + . Gives menu that usually has option to add namespace. Sometimes it doesn't work though, not exactly sure why but it's simple matter to check reference on msdn
As far as I know, no. Your best bet is googling the unresolved symbol name and searching what DLL it comes from, then adding reference to that (and then repeating until it compiles -- ready to ship!). But you already know how to do that ;)
System.Configuration, why you no in project by default? 
Resolving references is almost free in C#, but still does take time. I think VS team tried to shave as much from compile time as possible. At work we have maybe 250 projects in total to get the product compiled, if every single one has extra reference it doesn't use, it's a lot of time wasted (currently compiles in maybe two hours). Of those maybe one or two does need something from System.Configuration, others use this intermediary if at all.
I like this. I tend to try to rework my solutions to get them to run as fast as possible (shaving miliseconds), I also sometimes try to rewrite the code to be as few lines as possible (which usually involves a lot of LINQ).
If you aren't allowed to use the Dropbox API, what makes you think using a very similar framework from a different company would be allowed? It sounds like the point of the project is to do the whole thing yourself. You should check out the developer center if you think you can use it though. They should have some tutorials. http://msdn.microsoft.com/en-us/sync/bb736753.aspx For the generic question of "How to sync files like Dropbox", think of a version control system except instead of waiting for the user to commit, you have a desktop service running that picks up any change to the file system (e.g. file modified or folder added). Beyond that, you are doing homework and the point is to do it yourself and learn how.
Hehe mysql stored procedures painful. 
Read the question again.. Mysql
On my mobile, but I recommend looking at sparse state machine structures to hold your 'decision tree'. That said what you really want for a MUD is a structure that holds your map - one easy structure would be a Room class which had a Dictionary&lt;Direction, Room&gt; property (where direction is an enumeration - or better a class that uses the static faux enumeration pattern). You could also have an enumeration of items, a description, etc. I would have an IContainer interface implemented by Room and by any object that can hold other objects - this would require an IEnumerable&lt;Item&gt; property. As for building the map, you could load the rooms from disk using serialisation, or you could generate them procedurally for a truly unique experience. These are just pointers, but I hope they help you google some topics to get you started.
Awesome! This is exactly what I was hoping to get, I'll start looking into these concepts. Much appreciated.
new Guy() not new bettor
&gt; Is there a smarter/recommended way to build a decision tree other then a large amount of if/else loops? Is there some recommendation on how to segregate the code? Any recommended references I should look at? Depends on what your decision tree is doing. If you are using the tree as a map then a better way to to build a map structure with player references. Merc/Diku are build on a identity list structure. Each room has an ID. Each movement command is a Direction. Exit is just a simple way of handling special exit conditions, doors spells etc. and isn't fully fleshed out. You have in your engine Player objects which reference who is what. Those player objects get hooked into a GameEntity which is an object inside the game world. Anything that a player says o do the game entity does and the game world reacts. Anything done to the GameEntity is relayed back through the player which maintains ssh connections, authentication, etc. This way your player classes which handle outside connectivity store what object they own and the gameworld itself can be easily persisted. enum Direction { NORTH,SOUTH... }; struct Exit { Optional&lt;Door&gt; door; Room destination; }; struct Room { long id; String name; String Desc; Map&lt;Direction,Exit&gt; exits; }; &gt; Should I start from the beginning in an attempt to make it Multiplayer? I feel I might shoot myself in the foot if I don't start right away making it multiplayer - having to back track through the whole code base to add the server/client guts. If you desire your end result to be multiplayer then yes. Client Server Programming is a vastly different animal than Single process coding. Easiest way I have found to do this is good encapsulation. Make your game world into a separate module that takes commands and returns states. This way you can either spin up the simulation inside the client directly or put it in a server and pass the information through a network protocol. Once you write the engine and provide a communications interface you can wrap that however you like, even saving state becomes infinity easier. &gt; In regards to Multiplayer - I'd like to use .Net to create the client/server infrastructure that will allow it to be played over a browser and/or through API's for learning purposes (instead of a Telnet based service). Can anyone point me to a learning resource that could help with this cause I have no idea what technology to look into (WCF?). If you are creating a mud directly then Your client server infrastructure is pretty much telnet/ssh. You only write the server and connect to it via putty or one of the venerable mud clients(Mudlet, tintin++, zugg, etc.). If you are curious how older muds work, you can download [Smaug](http://www.gammon.com.au/downloads/dlsmaug.htm) which is a distant descendant of the DikuMud codebase. Source: I leaned to program C by ripping apart DikuMud and descendants. I then ran &amp; extended a mud for a good 5 years. [Diku Family Tree](http://en.wikipedia.org/wiki/MUD_trees) Feel free to PM me or respond here if you have questions. I love architecture Design and muds were my hobby project for more years than I care to count.
Now I'm having an issue accessing those fields. I'm trying to have place three labels that will each display the person's name and money. For the first label I wrote: public void radioButton1_CheckedChanged(object sender, EventArgs e) { if (radioButton1.Enabled == true) { label1.Text = bettor[0].Name + " has " + bettor[0].Money; } } But I get an error saying that bettor[0] does not exist in current context. Is the issue with how/where I'm declaring bettor[] or Guy?
I do plan on having a persistent map at this stage to take out some of the complications. The ID method is what I already had in mind but was still planning on just doing a huge If/Else loop to get around. Is all this stuff you are referencing here directly available in C# or will I need to at some point use another set of ... (whatever its called when you bring in other modules) I am not currently far enough along in learning to work out a Client/Server service. I'll have to do alot more research for this. For now I will stick to just a single player local console instance. I'll keep it short enough to not waste to much time before migrating to a multiplayer infrastructure after getting the bare minimum basic workings. Are there any MUD's that you know of that are written in strictly C# for reference? Not sure how close C and C# are actually in language to know if I would understand. Appreciate the offer to help, will most likely be hitting you up soon enough - gonna spend a bit of time spinning my wheels and seeing where I can get on my own. Suggestions thus far in this thread have been very helpful!
You've declared the bettor variable inside the constructor so it goes out of scope as soon as it leaves the function. You should declare it as a private/public member of the Form1 class and initialise it in the constructor
Everything you need will be directly available in the C# standard library. Honestly multiplayer is simple to handle since you don't really need to author a custom protocol or even a client. What I would suggest is breaking your project down into pieces that can be easily built, tested and completed. I have never looked this over (and I'm not actually a C# programmer) but [PolaMud](https://github.com/Polatrite/PolaMUD) is based on diku and written in C#. * WorldEngine - Create your basic room structure, object structure, mobile structure (extends object and is used for players, enemies, neutrals, etc. ) and event queue. The engine keeps an internal timer and a queue of all events. (Events are created by players, Mob AI, Environmental effects, etc). The engine then has one or more threads responsible for emptying these queues and processing events and feeding notifications to attached Entities. Then ticking over to the next turn. This piece once written can be interacted with via Unit tests. * ServiceWrapper - This piece is a simple telnet/ssh server that accepts connections, handles authentication and creates Player Entities that interact with the game world via that interface. * AI Engine - This manages a script interface and uses MobileEntities so the script engine can react to events just as a player would. 
sparse (state machine) structures. Not (sparse state machine) structures. At least I think that is what he means.
What you could do is on the remove event for the listbox, remove that item from DB using EF at the same time.
I've heard great things about this book: http://www.amazon.com/gp/aw/d/1592000908 Might try to find a used copy somewhere (not amazon). Its not C# but you should be able to convert the code and use it as a guide for structure and techniques
&gt; to love databases. Learn SQL. You can eliminate 500 lines of code with a single well written SQL stored I agree that learning SQL is great, but you would still need to "think like a programmer" to write a procedure.
The only reason I am using the Microsoft Sync Framework is because I am allowed to and since I am a beginner, when it comes to making applications, building the entire thing from scratch is not feasible as there are a lot of complex things and I dont have that much time at hand. And how are you comparing a framework to an API? The development center doesn't cover cases with remote sync. thanks
A framework *is* an API. API stands for Application Programming Interface. All frameworks provide an interface for applications to use programmatically. Thus they are an API. An API can be local, such as the Dropbox SDK where you download the jar/dll/whatever and link to it or remote such as the Dropbox REST API. Both are APIs, they just differ in the how (and the Dropbox SDK just calls the Dropbox REST API under the hood). The development center covers your use case. I found it in two clicks (hint, it is under the learn tab). Note that it will NOT give you code that you can just copy/paste and call it a day. Explore, dig around, read, and try playing with some code. Here is the intro on file syncing: http://msdn.microsoft.com/en-us/sync/bb887623 The sync framework is intended for businesses to implement custom synchronization solutions that aren't handled by something like Skydrive Pro, SharePoint, Dropbox, and so forth. Notably, a cursory glance through the docs seems to indicate it uses a Peer-to-Peer architecture while all the others I mentioned are client-server. You are going to need to spend a couple of *days* reading through the docs and playing around. This is not a quick and dirty project and the framework is not simple.
A finite state machine models state transitions and actions on events, a sparse FSM doesn't contain every possible event for every possible state. Missed out 'finite' because I'm on a mobile/lazy (sorry). Wiki Finite State Machine for more info, however (as mentioned) you don't actually want a decision tree, you want a representation of your MUD structure, you can then perform actions based on that structure. For example, each player instance has a pointer to the current room, if that player enters a 'direction' you check of the direction is valid for the room and move to the new room, otherwise you output some kind of error/warning.
Yup, nailed it.
So do you also assume all user input is safe unless proven otherwise?
What is happening is when you sort the the properties, the sortableobservablecollection isn't firing any collectionchanged event. could you try explicitly calling OnPropertyChanged("Nodes") after sorting see if that works?
Override the Add() and Delete() methods on List&lt;T&gt; to update the database?
This isn't exactly best practices per se, but i'd really recommend reading CLR Via C# (4th edition) to get really deep understanding of how the .NET framework and C# language is from the inside.
smooth
What seems to be the actual problem here? When you pull information from a database and use it to populate a control, you don't *want* the list in the db to be auto updated with the state of the control. You don't want to save any changes unless the user says so, and so that's the way it works. Google how to save changes to a db using the entity framework.
Terrible. So this is for beginners. Ok, but, it doesn't start to explain what is going on with the groupby. It assumes that you happen to know that this is in an Asp session, whence the inline HTML bits. This isn't an introduction to LINQ, it's just pointless. What does someone know after this, that you have basic grouping functions in C#?
You will miss out on async and await, but it's hardly important. So you should do just fine with 2010 books.
I guess once I get the basics down, I can revisit all the upgrades and take it from there. Thanks for the swift reply!
What is your programming background? If you are new to .net and/or programming in general, there are an awful lot of things you will need to learn before you should even worry about the differences between vs2010 and vs2013. There might be some changes between the IDE (if your book concentrates on them) but the quick find feature of vs2013 (upper right corner) should find you everything you need.
Visual Studio 2013 and 2010 are just two different versions of an IDE used to write c#. I think you need 2012 or 2013 to do dotnet 4.5, which is what the other guy said. The language is very similar between new versions, ms just likes to add new features like async with .net 4, and linq with .net 3 or 3.5
Of course not. Because I can't see it, it's always different and someone wasn't paid to sit and think about it. Code is different. And I met many people who are trigger happy to change good code they don't understand. 
Mono 3.2 was released in July, and they've done 5 additional releases since then, so I'd say they are still actively developing the framework as a whole. I'm not sure that much has changed in .NET that's WinForms specific since 2.0. http://www.mono-project.com/Compatibility 
I use this for its right click options and for reordering parts of my code. In the right click I often use the "find in solution" to locate the current file in the solution explorer. The reordering I tend to use after some hardcore refactoring that messes the order of my methods, fields or properties around. I like to keep everything consistently ordered. It also has several cleanup options (similar to Resharper's) that work very well. Highly recommended tool.
Could you please explain how is Mono incomplete? As far as I know they support everything in the ECMA standard (up to C# 2.0), plus all the newest features in C# 3.0, 4.0 and 5.0, plus all the libraries in the .NET Framework. There is support even for some purely Microsoft-centric technologies that I would not have expected, such as Silverlight. There is no support for WPF and WWF, which are supposed to work only on Windows and almost nobody uses them anyway. I think they even released C# 5.0 support before Microsoft did. What is difficult to use? MonoDevelop and Xamarin Studio support Visual Studio solution/project files out of the box. You can even compile VS sln from the command line. But if you develop using Visual Studio, just copy "MyApp.exe" to linux and run "mono MyApp.exe" and you have it running.
Actually async comes with .net 4.5.
CodeMaid does not cause any performance problems because it does most of its heavy-lifting on-demand (e.g., when you ask it to cleanup a file). Resharper seems to always be calculating something in the background :)
I'm thinking about installing this but am unsure what the best use cases are.... anyone have any 'recipes' they'd like to share? 
Limited. I've been using VBA, specifically in Access for the last 7 years (and the majority of that has been using Access 2003), and I dabble in CSS and HMTL. What sort of things do you suggest I look into before I even touch the C# books?
Well, okay, I've only worked with monogame and it was horrible. MonoDevelop is a gnarly IDE and MonoGame is badly documented and full of bugs.
I think you'll do good. Just don't assume C# is anything like VBA. It's a lot less forgiving which is a good thing but may seem confusing at first. In fact, just forget about VBA all together and start with a blank slate and open mind.
Ok, but MonoGame seems to be a library with no relation whatsoever with the Mono Project or Xamarin, and it probably runs (better or worse, as you say) on both Mono and Microsoft .NET.
Do you have books that start to desribe how to program in C#? Do they include any info about object oriented programming? The best would be to start with a book that teaches OOP using C#. You could start writing console applications to test small snippets and how the language works. Console apps are also great to try database code, cryptography code, regexes, collection classes, basic i/o, etc. No need to complicate things with other frameworks before you know the basics IMHO. From there you can move on to getting familiar with a broader set of .net/c#. There are many different kinds of applicatipns you can create with c#. For example, you can create console applications, WPF applications (desktop), ASP.NET applications (for the web), windows 8 store apps, windows phone apps, etc. These share the same .net framework features. But they also provide a lot of things that are specific to them. I would you suggest you not jump into these before you are comfortable with the basic language. What kind of programs are you looking forward to writing? I can try to give some more specific advise if you can tell me this.
I'm not sure to be honest. I was assuming that it would be a sensible 'next step' after making applications in Access. I would guess that I'd need to look at SQL Server 2012 at the same time in order to get that fully realised.
I would agree that deep understanding is not necessary. But for XAML/WPF stuff some basic inheritance/polymorphism things are good to know IMO. If one of the OP's book has a few chapters on OOP, that would suffice. And static void main() is why I suggested console applications.
If you want to create database applications, you should look into SQL Server of course. And in C# concentrate on ADO.NET as a data access method. You will find that there are higher level database access frameworks available in C# like LINQ to SQL or the Entity Framework (if we just mention the ones that are by Microsoft). I would recommend you learn them after you are comfortable in accessing SQL Server using ADO.NET and after you have created a few of your own classes to get a feel for how objects work in C#. 
&gt;could you try explicitly calling OnPropertyChanged("Nodes") after sorting see if that works? I will try it as soon as I can. 
I tend to disagree, but I think it depends largely on what you are referring to. I do most of my Development with Visual Studio and my primary testing on Windows-based systems. Actual cross-platform compatibility was an afterthought, but when I decided to give it a go I simply installed Mono and ran the program. It didn't work, but I was able to get it to work by removing Windows-specific features and API calls. The only non-platform related issue was this weird problem involving static constructors which I was able to workaround fairly easily. When I got to actually solving it I simply opened the project in MonoDevelop. I won't try to say MonoDevelop is nearly as preferrable and powerful as Visual Studio, but it's close enough for what I was doing. it sounds more like you are comparing MonoDevelop to Visual Studio, rather than comparing Mono to the CLR. Bear in mind you &lt;can&gt; target Mono with Visual Studio, for example, if you aren't afraid of tweaking your VS configuration).
Looks interesting and useful. My question with any VS extension/add-in is: does it get along with other add-ins like ReSharper? 
I just checked the bugs list: https://bugzilla.xamarin.com/buglist.cgi?product=Class%20Libraries&amp;component=Windows.Forms&amp;resolution=--- and it looks like it is dead.
What are the main advantages/disadvantages for someone already using ReSharper?
&gt; In fact, just forget about VBA all together and start with a blank slate and open mind. This is the best advice.
Any way to configure the context menu items? I like the spade thing, but I really don't need 5 new items in my context menu, it's pure UI pollution.
To be fair, most of those bugs are related to the datagridview, which in windows, is always a PITA, because it's a thin wrapper for a COM control. There are just as many bugs with the Microsoft implementation of it as the Mono implementation of it.
&gt;Install-Package StyleCop.MSBuild
I like Resharper better, even with the bogginess, but hate the cost. So I have Resharper on my work laptop and Code Maid at home. I also recommend AllMargins, it's beautiful.
Wouldn't that cause problems afterwards? When an object is removed from a ListBox, the item after is moved down to take its place, but the same thing doesn't happen in the DB. 
Yeah, I tried doing SaveChanges() after every added, removed or modified object, but I'm going to try not saving until the user deliberately chooses to do so.
Not sure if this will fit your needs but try https://github.com/sjdirect/abot
Looks like what i need, will check it out. Thanks!
I can't really advise you on best practices but a tool I found useful was [Live HTTP Headers](https://addons.mozilla.org/en-US/firefox/addon/live-http-headers/) (Firefox addon, but there will be equivalent for Chrome). It lets you see incoming and outgoing headers. This helps give you an idea of what you need to provide to look like a browser.
In a recent project, we didn't have any explicit reference to anything web-related in our database project. We just defined an Account class (and table) with the information that our web project needed to implement a custom membership provider.
Does this add the bar down the side of the code window like resharper does? Highlighting code issues etc? My company is too tight to buy resharper and for some odd reason won't let me use my own license "in case I leave the company" I know there's other plugins that have that handy little bar, but as yet I've not found a free one.
i think you need to take a look at your design closer, maybe reorganize some things
This didn't seem to make any difference. I feel like the fact that the first item remains the same has some major relevance to why this isn't working correctly. 
Do you *really* want to compile against the Mono framework assemblies? I suspect all you want to do is have a compiled assembly that runs on Mono. If that's the case, you don't need to do anything special. Just avoid using anything that Mono doesn't have, like WPF. You'll be able to run the compiled code on both .NET and Mono.
Oh, thanks for the tip. I didn't realize you can run .NET apps with the Mono runtime.
Like Java, C# compiles to bytecode that can run on any platform that has a runtime. The Microsoft and Mono compilers compile to the same bytecode format.
Think about it another way. Think about what you are testing. If you are testing a property, then you don't need anything. If you are testing some intricate logic, you are going to need a lot more. Think of all the different scenarios your class can be in. Have a separate test for each of those. You now have your "sunny day" tests. Now what happens when things go wrong? What happens if the input is out of range, improperly formatted, or null? Have a test for each one of these AND each combination of these. The key is to be atomic. When I see a test fail, I don't want to see that MyObjectMethod1Test failed. I want to see that MyObjectComputeFooNonAbsoluteUrlInput failed. Every case is a separate test. I can have four public methods on a class and have 30-40 tests without a problem and know there are gaps I probably missed. Other times the class is just a property bag and I don't worry about it. 
I really like this and try to stick to it when I can: http://osherove.com/blog/2005/4/3/naming-standards-for-unit-tests.html
Is there a framework I can use similar to WPF that can run in both Windows and Linux? QT perhaps?
True, but if it is Property { get; set; } then you don't. Anything more has logic and needs tested.
o_o What are you running on? A Pentium III?
The strong recommendation is gtk, I haven't used it but I have heard that while verbose, it is effective and well documented. Winforms CAN work on both, it is not recommended.
Technically, this is only "mostly true," as /u/LHCGreg mentioned about compiling against Mono assemblies, there are some corner cases that things work a little differently (hence why he had to ask "is this what you really mean,") 9/10 of the time it will just work mostly.
I used the same tutorial and here are things that you have to do differently with 4.5 You have to create Profile folder under "C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5" 3. mklink /d Mono "C:\Program Files (x86)\Mono-3.2.3\lib\mono\4.5" 5. &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;FileList ToolsVersion="4.0" RuntimeVersion="4.5" Name="Mono 3.2.3 Profile" Redist="Mono_3.2.3"&gt; &lt;/FileList&gt; 7 &amp; 8. Key: .NETFramework,Version=v4.5,Profile=Mono
I'd really recommend reading Johb Skeets "C# In Depth (Third Edition) to gaining knowledge of the c# language. Excellent book! 
Yes, one test class per class tested. The number of test methods per method in the class varies; a method with only one parameter will probably only need one test method, but you might find a more complicated method needs more tests to be covered effectively.
**For anyone curious here is the code that I'm using. As you can see there's a lot of repeating lines. I imagine those are what I should be creating classes and methods for** namespace Day_at_the_Races { // raceDog1 refers to a picturebox displaying the first dog. It is the same for 1-4. public partial class Form1 : Form { public class Guy { public string Name = ""; // the name of the player public int Money; // the money that player currently has on hand public bool HasBet; // Determines if the player has placed a bet. If they have no bet it is == false. public int placedBetValue; // Stores the value of the player's bet public int dogBetOn; //Stores and checks the dog the player bet on and compares them to the picturebox's int winner } Guy[] bettor = new Guy[3]; public Form1() { InitializeComponent(); // Setting the values for all the fields of bettor[0] bettor[0] = new Guy() { Name = "Albert", Money = 100, HasBet = false, placedBetValue = 0, dogBetOn = 0 }; bettor[1] = new Guy() { Name = "Bob", Money = 75, HasBet = false, placedBetValue = 0, dogBetOn = 0 }; bettor[2] = new Guy() { Name = "Charlie", Money = 95, HasBet = false, placedBetValue = 0, dogBetOn = 0 }; } private void button1_Click(object sender, EventArgs e) { timer1.Enabled = true; // Enables the timer which in turn causes the PictureBoxes to move and the // race to commence } private void timer1_Tick(object sender, EventArgs e) { Random randomizer = new Random(); int winner; //Used to compare against each player's dogBetOn value, if the values match then that player wins string winnerText; //Used to display the notification about the winning dog // These control the rate that the pictureboxes will move across the screen // The randomizer ensures a different "speed" each race // You could increase or decrease the odds of a dog winning the race by // adjusting the parameters for the randomizer.Next(); // dog1 will always win. Just for testing stuff raceDog1.Left = raceDog1.Left + randomizer.Next(10, 15); raceDog2.Left = raceDog2.Left + randomizer.Next(5, 9); raceDog3.Left = raceDog3.Left + randomizer.Next(5, 9); raceDog4.Left = raceDog4.Left + randomizer.Next(5, 9); // Each of the following control how the winner is determined, as well as what happens // when the player has correctly guessed the winner // Once the notification about the winner is display, all the dogs locations will be reset if (raceDog1.Left &gt;= 500) { timer1.Enabled = false; winnerText = "Dog one is the winner"; MessageBox.Show(winnerText); raceDog1.Left = 10; raceDog2.Left = 10; raceDog3.Left = 10; raceDog4.Left = 10; winner = 1; if (bettor[0].dogBetOn == winner) { bettor[0].Money = bettor[0].Money + (bettor[0].placedBetValue * 2); } if (bettor[1].dogBetOn == winner) { bettor[1].Money = bettor[1].Money + (bettor[1].placedBetValue * 2); } if (bettor[2].dogBetOn == winner) { bettor[2].Money = bettor[2].Money + (bettor[2].placedBetValue * 2); } } if (raceDog2.Left &gt;= 500) { timer1.Enabled = false; MessageBox.Show("Dog Two is the winner!"); raceDog2.Left = 10; raceDog4.Left = 10; raceDog3.Left = 10; raceDog1.Left = 10; winner = 2; if (bettor[0].dogBetOn == winner) { bettor[0].Money = bettor[0].Money + (bettor[0].placedBetValue * 2); } if (bettor[1].dogBetOn == winner) { bettor[1].Money = bettor[1].Money + (bettor[1].placedBetValue * 2); } if (bettor[2].dogBetOn == winner) { bettor[2].Money = bettor[2].Money + (bettor[2].placedBetValue * 2); } } if (raceDog3.Left &gt;= 500) { timer1.Enabled = false; MessageBox.Show("Dog Three is the winner!"); raceDog3.Left = 10; raceDog1.Left = 10; raceDog2.Left = 10; raceDog4.Left = 10; winner = 3; if (bettor[0].dogBetOn == winner) { bettor[0].Money = bettor[0].Money + (bettor[0].placedBetValue * 2); } if (bettor[1].dogBetOn == winner) { bettor[1].Money = bettor[1].Money + (bettor[1].placedBetValue * 2); } if (bettor[2].dogBetOn == winner) { bettor[2].Money = bettor[2].Money + (bettor[2].placedBetValue * 2); } } if (raceDog4.Left &gt;= 500) { timer1.Enabled = false; MessageBox.Show("Dog Four in the winner!"); raceDog4.Left = 10; raceDog1.Left = 10; raceDog2.Left = 10; raceDog3.Left = 10; winner = 4; if (bettor[0].dogBetOn == winner) { bettor[0].Money = bettor[0].Money + (bettor[0].placedBetValue * 2); } if (bettor[1].dogBetOn == winner) { bettor[1].Money = bettor[1].Money + (bettor[1].placedBetValue * 2); } if (bettor[2].dogBetOn == winner) { bettor[2].Money = bettor[2].Money + (bettor[2].placedBetValue * 2); } } } public void radioButton1_CheckedChanged(object sender, EventArgs e) { label1.Text = bettor[0].Name + " has " + bettor[0].Money; } private void button2_Click(object sender, EventArgs e) { decimal moneybet = betAmount.Value; int betValue = Convert.ToInt32(moneybet); decimal doggybetting = dogBetNum.Value; int dogchosen = Convert.ToInt32(doggybetting); { if (bettor0Radio.Checked == true) { if (bettor[0].HasBet == true) { MessageBox.Show("Albert has already placed a bet"); } else { bettor[0].placedBetValue = betValue; bettor[0].dogBetOn = dogchosen; bettor[0].Money = bettor[0].Money - betValue; label1.Text = bettor[0].Name + " has " + bettor[0].Money; bettor[0].HasBet = true; } } if (bettor1Radio.Checked == true) { if (bettor[1].HasBet == true) { MessageBox.Show("Albert has already placed a bet"); } else { bettor[1].placedBetValue = betValue; bettor[1].dogBetOn = dogchosen; bettor[1].Money = bettor[0].Money - betValue; label1.Text = bettor[1].Name + " has " + bettor[1].Money; bettor[1].HasBet = true; } } if (bettor2Radio.Checked == true) { if (bettor[2].HasBet == true) { MessageBox.Show("Albert has already placed a bet"); } else { bettor[2].placedBetValue = betValue; bettor[2].dogBetOn = dogchosen; bettor[2].Money = bettor[2].Money - betValue; label1.Text = bettor[2].Name + " has " + bettor[2].Money; bettor[2].HasBet = true; } } } } private void bettor1Radio_CheckedChanged(object sender, EventArgs e) { label1.Text = bettor[1].Name + " has " + bettor[1].Money; } private void bettor2Radio_CheckedChanged(object sender, EventArgs e) { label1.Text = bettor[2].Name + " has " + bettor[2].Money; } } }
Thanks. And I'll probably have to experiment with loops you mentioned. I want the user to be able to search any file extension they type. So the code looks through c:// and //users//music to find an mp3 for example. That way, I dont need multiple options for "search image files", "search audio files." It'll all be under "Search Files".
!) IMO you are doing exactly the best thing you could be doing to learn: writing code and asking questions. 2) Even buttons and labels and such in the end are defined as classes. Typically however, they are referred to as controls.
I used "csEXWB" as while back and really like it. https://code.google.com/p/csexwb2/
Look at the File / FileInfo classes for files, and Directory / DirectoryInfo for folders.
The way I develop on Visual Studio in order to target Mono is that I develop my C# app on a Windows 7 virtual machine running on VMWare Workstation that sits on a Linux host. I do a bit of development on the Virtual and then move the executable over to the host where I run it again Mono/Wine to see if my latest change works in Mono as well.
Directory.GetFiles = http://msdn.microsoft.com/en-us/library/07wt70x2(v=vs.110).aspx then FileSystem.GetFileInfo = http://msdn.microsoft.com/en-us/library/microsoft.visualbasic.fileio.filesystem.getfileinfo(v=vs.110).aspx
I rewrote it so that it reads: public class Doggies { PictureBox doggypicture; } // Skipping lanes for readability Doggies[] greyhounds = new Doggies[4]; greyhounds[0] = new Doggies() { doggypicture = raceDog1 }; Now the error I get is saying &gt; 'Day_at_the_Races.Form1.Doggies.doggypicture' is inaccessible due to its protection level This one I have absolutely no idea where to start but it sounds like I'm trying to access something that isn't declared properly in terms of public/static stuff. 
 static void Main(string[] args) { foreach(string s in DirectoryList(@"C:\windows")) { Console.WriteLine(s); } Console.ReadLine(); } static public System.Collections.ArrayList DirectoryList(string Path) { int iCount = 0; System.Collections.ArrayList oList = new System.Collections.ArrayList(); System.IO.FileInfo oFileInfo; foreach (string sFileName in System.IO.Directory.GetFiles(Path)) { iCount++; oFileInfo = new System.IO.FileInfo(sFileName); oList.Add(iCount.ToString() + ". " + oFileInfo.Name + " (" + oFileInfo.Length.ToString() + ")"); } return oList; }
using System.IO; . . . DirectoryInfo di = new DirectoryInfo("c:\\windows"); FileInfo[] FileList = di.GetFiles(); then you have an array of file information, and you can use string.format for anything you want
oh my god, thank you so much. you are a hero.
This seems like a good starting point: http://www.asp.net/single-page-application
My pleasure
Or you can do something very similar with a web app and silverlight (or CSS and javascript). Desktop vs Web is really a question that needs to be answered by business requirements, of which we know next to nothing about. If it will only ever be run on one PC and they don't have to update it often, then go desktop. If you could have multiple PCs running it or need to update "seamlessly" then a simple web app is a better fit.
If it's a web SPA, try Hot Towel - http://www.johnpapa.net/hottowel/ it uses angular for clientside MV*, and you can use WebAPI2 for the server side controllers. John Papa has several courses up on pluralsight that go over making an app with this template.
Thank you! I did [run across this](http://visualstudiogallery.msdn.microsoft.com/1eb8780d-d522-4dcf-bf56-56f0eab305c2) a couple of weeks ago. Do you know of any samples of this running? I showed my team the MSDN page and it didn't spark much interest.
It really doesn't matter. It will running on our internal network either on a web or app server depending on the route decided. I'm personally pushing for more of a web app (and something like silverlight) mainly because I know I'm going to be writing the admin interface as a web app.
I think a good thing to start with would be to initialize your PictureBoxes as global objects (as opposed to initializing them within a new class), at least I expect that is the cause of your first error. Also you probably want ResetRaces() to be declared under the main class, instead of the guy class. Hopefully someone with slightly more experience will chime in, but until then, I can recommend watching: [Helper methods](http://channel9.msdn.com/Series/C-Sharp-Fundamentals-Development-for-Absolute-Beginners/Creating-and-Calling-Simple-Overloaded-Helper-Methods-10) [Classes](http://channel9.msdn.com/Series/C-Sharp-Fundamentals-Development-for-Absolute-Beginners/Understanding-and-Creating-Classes-14) [More Classes!](http://channel9.msdn.com/Series/C-Sharp-Fundamentals-Development-for-Absolute-Beginners/More-about-Classes-and-Methods-15) The whole series is great (some of it is likely too basic for you), but those seem like the most helpful for your situations. 
I have a similar mapping that uses LazyLoad, but not PropertyRef, so I would guess that's where your problem comes from. Look at: http://stackoverflow.com/questions/4888140/fluent-nhibernate-references-and-propertyref-doing-a-select-with-lazy-load
There is an overload for Directory.GetFiles with an SearchOption parameter. You can set it to AllDirectories to seek in subfolders ;) http://msdn.microsoft.com/de-de/library/ms143448%28v=vs.110%29.aspx
I've heard lots of a good things about Oak in regards to SPAs: http://amirrajan.net/Oak/
You'll have a blast, it's an awesome language and I think the king of IDEs.
I'd go with a webapp, WPF and Silverlight come with a bunch of unique headaches that aren't worth the effort (not to mention questionable future support). I tried HotTowel and i enjoyed using it :-)
Hi, I've recently created an internal build status board for our development team and what I've done is the following: - Simple Azure WebSite (MVC) in the bottom using Azure Table Storage as data store. - WebAPI endpoints for getting data for the different pages. - One landing page where all the magic occurs: - reveal.js (http://lab.hakim.se/reveal-js/#/) to handle presentation (spinning cube stuff) - Knockout for data-bindings - SingalR to push data from the server out to the client, and also trigger stuff on the server - Some javascript to automatically flip to the page in the cube that recieves data. We currently have 3 screens that it rotates between, with each screen showing only one thing (all the guys need to be able to see it, so we run large fonts). The result is pretty sweet :)
If you don't specify the protection level, it's private. So 'Doggies.doggypicture' is private and inaccessible from other objects. I think your code should work if you make it 'public PictureBox doggypicture;'
Would there be any disadvantage to doing the reverse of this? Running a linux VM on a windows host?
Get a free Pluralsight trial and take the Hot Towel course. It's really good.
That is horribly inefficient. The using statement should be outside of the foreach loop. Use Thread.Sleep to prevent the server from blocking your requests due to frequent requests.
Why not just open source it, if you don't have issues sharing it?
I posted this over on /r/dotnet but have you looked at http://www.droptiles.com/? Seems like it's similar to what you built. 
Well there is a lot of things my friend. **** * "else if".You are making a lot of control even if you don't have to.For example ; &gt; if (condition) &gt; { &gt; //Code goes here. &gt; } &gt; else if (other condition) &gt; { &gt; //Code goes here. &gt; } &gt; &gt;In this case if your first condition is right then it won't even look at the else if condition. * Naming conventions... * Classes are not just a storage.You can have methods in it.So use it for your own good.For example ; &gt; public class Guy &gt; { &gt; //Some code &gt; &gt; public void Win() &gt; { &gt; Money += PlacedBetValue * 2; &gt; } &gt; } &gt; &gt;Yes there is an += operator so you don't have to write ; value = value + someOtherValue; * Public fields is like goto.You can use it but you better won't.Use properties instead.For example ; &gt; public double Money { get; set; } * Generic lists are in your command.So you can learn/use these if you want. * Code repeats.Code repeats everywhere :) If you catch yourself copy-pasting some code to everywhere then you can consider writing a method or class for that. * And stop code behind coding.Try creating independent methods and classes.Your code has to be working without button2.
Microsoft have invested recently(ish) in Xamarin who are the big fish doing .net cross platform for mobile, using Mono. I'd personally like to see Microsoft buy them outright and role the whole shebang into Visual Studio. I reckon Visual Studio Express with cross platform would be a game changer for getting people interested while Pro and above would bring in the corp dev's like me.
Web designers are going to cost about 1/5th the price of a c# developer to keep the stuff maintained. Keep that in mind for the future.
I do the reverse because Windows 7 has better support for multi monitor in my setup: 4 monitors with different resolutions spanning two graphics cards.
I'm a big fan of Bob Tabor's C# Fundamentals for Absolute Beginners video cast series on Channel 9. Even after having done 6 years or more of Matlab before getting into C# it was really nice for stepping through basics and covering a lot of ground. http://channel9.msdn.com/Series/C-Sharp-Fundamentals-Development-for-Absolute-Beginners
Thanks. I'll give that a try. Is ordering important? I noticed the code sample has .LazyLoad() before the .PropertyRef() instead of after it.
Why not just make your array dimensions one more than the length of your lists, begin your loops with 1 instead of 0, and end them when i or j is greater than your list counts? Your array element at [0, 0] will be uninitialized, but you'll never use it. 
Awesome advice thank you. I'll play around with it this weekend and hopefully have a cleaner version of it by Monday.
http://msdn.microsoft.com/en-us/magazine/dn451439.aspx Look into the OWIN pipline, everything coming out of MS now seems to be OWIN compatible (Web API, Signal R, and a shitload of security stuff in the latest .net version). I wrote a SPA for my work with a OWIN pipeline backend using nancyfx for all static stuff (html pages, images, scriptfiles etc) Web API for all data and AngularJS as the frontend client application. Once you wrap your head around it it's really easy and flexible to work with. Best of all, if something is not up to par or not to your liking, switch to another module. And you can use the latest features not having to wait for MS to release yet another upgrade of the entire asp.net stack.
Can you post your code?
When I've done things like this, I would use a thread to constantly loop and call ReadLine(). When ReadLine() returns with a string I would raise an event to handle whatever characters it read. Hope that helps.
Currently it looks like this: ProcessStartInfo startInfo = new ProcessStartInfo { FileName = pathToEngine, // By default is C:\ChessEngines\...exe CreateNoWindow = true, // Don't create a cmd window UseShellExecute = false, // Don't use the OS shell to execute the program RedirectStandardInput = true, // Redirect the various inputs. RedirectStandardOutput = true, RedirectStandardError = true }; using (Process engine = new Process { StartInfo = startInfo }) { // Start the process engine.Start(); engine.StandardInput.WriteLine(UCIProtocolMessages.Uci); // This is the string "uci" engine.StandardInput.Flush(); char[] raw_output = new char[BUFFER_SIZE]; StringBuilder builder = new StringBuilder(); string testOutput = string.Empty; while(engine.StandardOutput.Read(raw_output, 0, BUFFER_SIZE) &gt; 0) // Blocks on this call { builder.Append(raw_output); testOutput = new string(raw_output); } Console.Write(builder.ToString()); } But I've tried various forms of ReadToEnd() and ReadLine() EDIT: Comment
If you're redirecting both standard output and standard error to your process, you need to read from both of them to keep the pipes clear. If you only read from standard output in a loop, the standard error pipe can fill up. If it reaches the limit and the subprocess tries to write to standard error, it will block until you read from standard error and free up some space. If you're only reading from standard output, this is a deadlock. Could this be what's happening to you? edit: It might also be blocking waiting for input.
So the issue is, Reading is looking for an EndOfStream which is not happening since the exe is not closing the stream, but just awaiting inputs. You need to set markers to look for when to manually stop reading. I checked out the shredder exe, assuming that's the one you're using. I set a marker to look for "uciok" to break the stream reading. You need to use the streamreader to know when to terminate reading. The other, and probably better solution, would be to use asynchronous reads via engine.BeginStandardOutput and cross call to terminate. static void Main(string[] args) { Process[] wb2uci = Process.GetProcessesByName("wb2uci"); foreach (Process p in wb2uci) p.Kill(); RunEngine(); } static void RunEngine() { string pathToEngine = @"C:\Program Files (x86)\ShredderChess\Shredder Classic 4\wb2uci.exe"; ProcessStartInfo startInfo = new ProcessStartInfo { FileName = pathToEngine, // By default is C:\ChessEngines\...exe CreateNoWindow = true, // Don't create a cmd window UseShellExecute = false, // Don't use the OS shell to execute the program RedirectStandardInput = true, // Redirect the various inputs. RedirectStandardOutput = true, RedirectStandardError = true }; using (Process engine = new Process { StartInfo = startInfo }) { // Start the process engine.Start(); StreamReader reader = engine.StandardOutput; //System.Threading.Thread.Sleep(2000); engine.StandardInput.WriteLine("uci"); // This is the string "uci" engine.StandardInput.Flush(); StringBuilder builder = new StringBuilder(); string marker = "uciok"; bool NeedsInput = false; while (!NeedsInput) { string line = reader.ReadLine(); builder.AppendLine(line); if (line.Contains(marker)) NeedsInput = true; } Console.WriteLine(builder.ToString()); Console.ReadKey(); 
So, you start this program, send it a single string, then expect it to send you everything else, and then close itself? Because thats the only way your code will work - if the engine program finishes running after you send it the uci string.
Order shouldn't matter. I may have linked the wrong thing earlier, here's a better link: http://stackoverflow.com/questions/604373/lazy-loading-not-working-for-many-to-one-relationship-when-mapping-to-a-non-key/3832579#3832579
Thanks. I figured out that this wasn't even my main problem :/ Thanks your tip did help me though.
Source?
Pluralsight is worth the money even after the free trial. Best training investment I've ever made
Don't really have any sources, I was the lead programmer at a company for a few years and spent a lot of time hiring programmers and web devs for projects (company had no HR team) picking up a web dev with decent skills right out of college/highschool is a lot easier then finding anyone with c# ability right out of either of those.
one of the better resources (see sidebar) is the C# Yellow Book, by Rob Miles of the University of Hull. Yes, it's a textbook, but it is a textbook for C#, not a CS textbook. While it says it's made freely available to Hull U students, it's freely available, gets updated once a year and just generally rocks. I am converting myself to a C# guy from 10 years of a VB guy and VB6 and VBA before that, and I have a copy open on my third monitor as I write this .. Jon Skeet's books are superb, as are his posts on stackoverflow.com, but a lot of them are way beyond beginner. Other posters have noted that C# is a lot less forgiving than VB(A), and they're right. In order to avoid tears of frustration you need to take some time to really understand the .NET type system, and to understand that strong typing rather than the Option Strict Off with Variant types really is your friend
I find it easier to map an Action to the OutputDataReceived / ErrorDataReceived events and handle output that way. Check out the code on this page, helped me a lot: http://csharptest.net/532/using-processstart-to-capture-console-output/ Also this page on the same site explains some of the issues: http://csharptest.net/321/how-to-use-systemdiagnosticsprocess-correctly/ I use a slightly modified version of that I've not run into any blocking issues yet. Seems quite robust.
This looks really cool! I know I am going to use it a lot, and I shared it with the people that I work with closely who also deal with Windows Phone and Windows 8 development. Thanks for sharing it!
I'd have figured a listbox might have been easier. Rather than fiddle about with replacing the \n, I'd have split the whole thing into an array and created a List&lt;string&gt;, the loop through the array, add to my list and databind the listbox to my list... It's another way to go at least...
Well the initial experiment was to see how I receive the information, hence why the text area. Ultimately though I will be creating a list but then I'll be performing other tasks on the data and just need to display whether or not it passed or failed. Thanks for the tips though!
Any and all feedback is welcome! Check out the source or build it and try it out for yourself. Thanks!
I am not sure what you mean by VGA pass-through. I am using VMWare Workstation 10 and the VM settings have the 3D Graphics checked. The performance is quite good on the VMs. I am running the latest Ubuntu and Elementary OS but I don't play games at all, only do software development and such (youtube works fine).
I just have VMWare Workstation 9 so far. VGA pass-through from a Linux host is currently a nightmare to me because of the AMD/Nvidia driver situation on Linux. It sounds good though, if youtube works great on your guest. I may upgrade to 10, but still, since I have a Linux host, it might not work as well for me.
Thanks. We're going to try out the John Papa courses.
I like naming my test methods "verb" style: CanImportCsvFileFromEmail CanImportOneCsvFile CanImportWholeDirectory ThrowsWhenFileSizeInvalid
Edit, Removed: Thinking of another QuickPDF
What? 
It really depends on what each of the methods do... a a general rule, I would have 6 test for class A. For each method I would have a good data test (i.e I feed the method good data, and verify the expected result), and I would have a bad data test (i.e I feed the method bad data, and verify the handling) For me, I have a unit test class for each class that I write. If it is a very large class (such as a database access class), I would split up the unit tests and group by functionality.
ughhh I find var so lazy... 
Question. State.cs isn't sealed, so shouldn't the private members be protected, is case someone wants to inherit from state.cs ?
This will come in handy. I am on my phone at the moment and cannot check. Is this API portable?
What the hell... Where were you literately two months ago when I needed this and had to settle for Doxygen!?
I have yet to try it out but this sounds promising!
Uhh fancy, gonna look at that tomorrow ^^ Dankeschön ;)
It's only a code snipped wrapper around the .NET API
I don't know how you can expand it, but IntelliSense already got templates for classes, indexers, etc. I'm on crap internet atm, so I can't look up the link. Edit: looks like it loaded while typing. But I don't know what you could do with it either.
I should have clarified. My question was referring to the .NET API yes. And now that I've had time to look. I see that Crypto is not supported in the PCLs.
The main version (https://github.com/steelbreeze/state.cs) does use a generic version of the Transition class, but also needs a non-generic version as there are two types of transition, those triggered by messages and those triggered by the the entry to a state (the latter known as completion transitions). This implementation removes the need for two separate implementations of the transition class through the static methods (one generic for message triggered transitions and one non-generic for completion transitions); these then create the necessary type checks. So the result is less duplicate code and a smaller API for consumers. 
I think some of the style cop stuff is a bit over the top...
The stuff xamarin is selling for &gt;200$ for free? Definitely a game changer.
Well the title of this post is misleading then, if it's not available on WP Edit: ok ok, misunderstood that, it is available on WP 
I did not say that this API is not available in Windows phone. I said it's not supported by Portable Class Libraries. Which are used to target more than one device (ie: WP8 and Windows 8.1 tablet). You can indeed use this Api when writing a windows phone app. You just can't have it inside a portable library. 
Ahh, ok. What about PCLs only targeting windows (phone) 8? 
Working on an update with the appropriate protected interface... Just making the private's protected is not really appropriate as I do not want to let sub-classes interfere with the base operation of the state machine, but I will implement some protected methods that they can override as specific extension points.
To sad :( Is this solution opensource? Or are you able to tell me how big the solution is? This way I will search a comparable opensource project to test it myself. The biggest project I tested so far was "nrefactory". Thanks!
Try it and tell me what you think :)
I could be tempted to let it take a look at one of my biggest solutions. At the last line count it was up to 90,000.
I should test that. I'm not sure. 
Unfortunately not open source. But I can tell you it has about 60 projects in it (whether that is a good idea is out of scope of this thread!). Still it may be worth you looking at optimization. redgate ants profiler has free trial (I am not connected to them).
[Sandcastle](https://shfb.codeplex.com/)?
Would be nice to see some screenshots!
At the time I create sharpDox, Sandcastle was not able to create diagrams. Don't know, if this changed. Also it was not trivial to create custom output formats. Creating new output formats for sharpDox is really easy!
Give it a try! I'm very interested in your experiences :)
Thank you for the information! I will create an issue for this and set it to priority one for the next release.
Here you go: http://imgur.com/a/l5rUk
I'm not sure what the data from this API looks like, or which methods you've already tried, or what your actual problem is. However, I used JSON.NET yesterday to get data from a multi-tiered JSON string (dictionary inside an array inside a dictionary), using a JObject and the SelectToken method, documentation here: http://james.newtonking.com/json/help/index.html?topic=html/SelectToken.htm Hope this helps!
This looks pretty cool - I think I'll try it out some time!
If your matching curly braces won't fit on the same screen, it's time to refactor.
This. I've run into this problem before and this is in my opinion by far the most effective solution.
The actual parts about code are ok, but I think, that you have to follow a certain syntax for the summaries on properties and constructors can be unfitting sometimes 
Well every subreddit has an RSS feed (http://rss.reddit.com/r/csharp/new for example) and you can use this class to consume such a feed : http://msdn.microsoft.com/en-us/library/system.servicemodel.syndication.syndicationfeed(v=vs.110).aspx After taking in the feed, fix that data onto your UI, and then use either a webbrowser (System.Windows.Forms) or a third party browser (geckosharp, webkit sharp or my personal favourite cefsharp which is chrome for C#) or you can just consume the data raw and feed those comments into your console app. If you're dead set on using the console app, use webbrowser and you can use the documenttext property to get the raw html.
I don't understand how to utilize what you're telling me to do.
So first, get the data you need (the easiest way is to consume an rss feed, using the url I provided and the class I provided which itself has examples of how to consume an RSS feed. MSDN is actually a great resource). Secondly, filter just the bits you need (Urls) to create the links then use a webbrowser to fetch the data from that url and parse out the comments into your console.
Which properties or methods of SyndicationFeed am I using? How do I access the url to get the feed? How am I supposed to filter the urls once I get them? I'm almost as beginner as they get. This is my first project outside of the Udemy Programming for Complete Beginners in C# course.
I'm on mobile now so I'll post a sample tomorrow... But read the Syndicationfeed sample. Copy/paste it into visual studio and play with it. Learn by exploring!
[FMOD Ex](http://www.fmod.org/fmod-ex/) Give this a try. Comes with a C# Interface too.
Does the interface support ASIO? If so, check out this: http://www.codeproject.com/Articles/24536/Low-Latency-Audio-using-ASIO-Drivers-in-NET . The driver for ASIO is intereting. It's a COM interop that can issue commands to your sound card (or audio device in this case). Many devices support it and it's probably the first route I would go down.
Thank you for testing! Chrome has some limitations, if you try to run the documentation on the local file system. I will add both problems to the issue list for the next release. 
If you want to interact with the site itself, an RSS feed will not do. I suggest you start looking into an API (there's this one that was posted here a while ago: https://github.com/SirCmpwn/RedditSharp ) It brings a test project that you can practice with. Also If you're just starting out, I suggest you get some of the basics first... Before jumping onto a reddit console client... The links on the sidebar are useful, check them out. 
 if (right == true) newX = 1; if (right == false) newX = -1; if (down == true) newY = 1; if (down == false) newY = -1; You do know about boolean values and if-else-statements, right? if (right) newX = 1; else newX = -1; if (down) newY = 1; else newY = -1; Or even better use ternary operators: newX = right ? 1 : -1; newY = down ? 1 : -1;
&gt; WinForms itself is dead Depends on the app/customer/specifications/environment etc, etc. 
 You could do something like this public struct Mp3 { public int Id; public string Brand; public string Model; public int Mbsize; public double Price; public Mp3(int id, string brand, string model, int mbsize, double price) : this() { Id = id; Brand = brand; Model = model; Mbsize = mbsize; Price = price; } } static void Main(string[] args) { Mp3[] arr = new Mp3[] { new Mp3(0, "GET technologies.inc", "HF 410", 4096, 129.95), new Mp3(1, "GET technologies.inc", "HF 14422", 4096, 139.95), new Mp3(2, "GET technologies.inc", "HF 22131", 4096, 149.95), new Mp3(3, "GET technologies.inc", "HF 1231414", 4096, 159.95), new Mp3(4, "GET technologies.inc", "HF 14141414", 4096, 169.95), }; } 
Nice video. Is that some sort of skin for visual studio? I like the look and want to try it out. I use 2010 5hough, looks like 2012/2013 here.
It's a dark theme for VS2012/2013. It's built-in.
It is the dark theme which is available in VS2012/2013.
I wondered why he would need to use a thread in the first place, you can do all of the calculations, monitoring of keypresses, etc, in the loop that moves the ball.
Structs can be stored in arrays and other collections, just like any other value type.. int[] arrayofInt; mp3[] arrayomp3; Is there any particular reason why you are using structs versus classes ? 
ok, good to know, thanks. I would really enjoy watching someone building up a well structured WinForms application. I am familiar with some asp.net project structures but I've been wondering what would fit well for WinForms, especially when it comes to making a standalone executable but using multiple projects within the solution (that would require to have the dll-libraries at the same path where the executable is, right?) Thank you! *^(edit for wording)*
It makes coding so much better with the softness on the eyes. Reminds me of 1994 when I used to dial in to an atlantic.net shell account and telnet in to my favorite MUD. 
hmmm
Especially when it comes to games multithreading isn't a thing you want to do, if you don't really need it.
Either that or he/she really needs the toilet! 
And not a single unit test was given that day. ;-) Fun video!
It make my eyes feel much better and makes your code look badass. Even if you dont have build-in dark theme it is definatly worth trying to find it or set it up by yourself.
Not bad, but you're (assuming that OP is the one that made the video) using C# like it's java (syntax, getter/setters with functions)
I love ternary operators
This, precisely. I think I did my best learning by failing and figuring out WHY I was failing. If something works the first time, you just assume that's how you do it. If something fails a bunch of times, you know WHY that's how you do it.
I'm working on a template/sample structure using AngularJS and MVC + WebAPI. It's super early so I haven't released it yet but if you shoot me a PM with your email I can give you git access to it. You might find it interesting.
Looks like they opened vlc half way through the video.
:(
I was texting.. actually.. xD
This is great. I have learned from this.
[Went back for a screengrab and found that OP is well stocked on vids](http://i.imgur.com/mmf4718.png) Sorry Liam :)
Is this really the only way to run background task on azure. A full VM can be expensive.
http://stackoverflow.com/a/2754674/426422
If you peek at the source of mscorlib, which is where Console object comes from, the Write method is coming from the TextWriter (set by Console.Out). This ends up created via internal call to GetStandardFile method within the Console object. Perhaps you could use Console APIs directly: http://msdn.microsoft.com/en-us/library/windows/desktop/ms682073%28v=vs.85%29.aspx
16 bit DOS api should still be available in 32 bit winders. It was just dropped from 64 iirc. Whether or not undocumented functions like this would work is another question....
I don't like razr, it make me feel like a PHP programmer (edited: I'm programming with PHP). I do really enjoy ASP .Net webforms using the MVP (Model, View, Presenter). To me it's no brainer... One of the things I do like about MVC is how it automatically convert form values into objects, and viceversa. But I find a document on MSDN that help you to do kind of the same with ASP .NET webforms (http://msdn.microsoft.com/en-us/library/aa478957.aspx). In my particular opinion the way to go is: MVP, Dapper dot net, and the binding stuff I just mention. 
Err. If you're doing it so that console ends up scrolling, you're doing it wrong. Basically what you need to know is ANSI console controls. This means that when you're printing out text, you embed special codes to printed string, that is interpreted by text-output of dos/windows and can set colors, move cursor, set title of window; quite many different things. In practice what you have is that you write escape code so console sees that a command is incoming, then parameter(s) and what command that is usually closing. For example: "\x1b[30;41m" will set colors to black on red. As long as you pass many commands at the same time, this is fast enough for unix nethack type of display update. http://www.termsys.demon.co.uk/vtansi.htm
first create a Mp3Player class, with the 5 properties you need. Then create a List&lt;Mp3Player&gt; and have fun with LINQ :)
The 16-bit emulator (WOWEXEC) and DOS virtual machine was dropped in 64-bit versions of Windows. DOS has never been nativly supported by Windows NT though the DOS interrupts were supported it was just for compatibility. Also you cannot invoke interrupts in CIL since it's a platform implementation detail.
Create a Mp3Player class : class Mp3Player{ string Id {get;set;} string Brand {get;set;} ... public Mp3Player(string id, string brand...) { Id = id; Brand = brand; ... } } This allows you to create Mp3Player objects like this : var mp3Player1 = new Mp3Player("1","GET Technologies","XM600","ETC","ETC"); ... When you have created several players, you can create a list and add the players to it: var mp3Players = new List&lt;Mp3Player&gt;(); mp3Players.add(mp3Player1); ...
 void Main() { List&lt;Mp3&gt; players = new List&lt;Mp3&gt; { new Mp3("1", "ACEM Inc", "Model 101",16, 4.99), new Mp3("2", "ACEM Inc", "Model 201",16, 5.99), new Mp3("3", "ACEM Inc", "Model 301",16, 6.99), new Mp3("4", "ACEM Inc", "Model 401",16, 7.99), new Mp3("5", "ACEM Inc", "Model 501",16, 8.99) }; foreach (var mp3 in players) { Console.WriteLine(string.Format("{0} - {1}: {2} @ {3}", mp3.Brand, mp3.Model, mp3.MbSize, mp3.Price)); } var player2 = players[2]; Console.WriteLine(); Console.WriteLine(string.Format("{0} - {1}: {2} @ {3}", player2.Brand, player2.Model, player2.MbSize, player2.Price)); } // Define other methods and classes here sealed class Mp3 { public Mp3(string id, string brand, string model, int size, double price) { Id = id; Brand = brand; Model = model; MbSize = size; Price = price; } public string Id { get; set; } public string Brand { get; set; } public string Model { get; set; } public int MbSize { get; set; } public double Price { get; set; } }
Summarised as "Good judgement comes from experience, and the best experience comes from bad judgement".
&gt;internet is unfriendly to programmers that are trying to master this art of beautiful C# I think the internet is unfriendly to programmers who appear to want all the answers handed to them on a plate.
I apologise. The questions you are asking are about basic code constructs, so I am curious why you are finding things so difficult ?
Lists and arrays are covered in any basic c# book, and should be covered in any introduction to C# class that is taught..
Try RedditSharp from nuget...
What language have you used most ? &gt;until i had to start using constructors and stuff, i never met it never used it and it is killing me. Have you used an OOP language before ? Java ?
this.
This takes me back! 
Not really bothered, but I'm glad you know my name for some reason :)
Glad to hear it. I'm essentially in the same boat haha.
Hey, I like this idea! :)
Hey thanks, I'll fix that right away.
Sorry to necro an old thread, but NodeList is your backing ObservableCollection right? I also imagine that it takes in a "Node" object, and that Node.Update changes the time stored in the object? see [this](http://stackoverflow.com/questions/1427471/observablecollection-not-noticing-when-item-in-it-changes-even-with-inotifyprop) ,I think that might be your issue. 
http://msdn.microsoft.com/en-us/library/system.net.sockets.tcpclient(v=vs.110).aspx That's it !
I had an assignemtn to make an FTP client in c# in my data comm class, the main ones I used were using System.Net.Sockets; using System.Net; using System.IO; those will allow you to make a tcp client and save files. 
Do you want to implement the FTP Client protocol from scratch? Because .NET already has classes for accessing FTP servers and dealing with most basic needs. There are also a ton of libraries on NuGet for FTP connections. If you really want to do the whole thing using Sockets and TCP transfers then by all means, it will probably be a hell of a learning exercise. ;)
&gt;no contraptions needed for such OOP....you can work with classes if you want I think you need to go back and study your foundations.
Then modify the code .
This will be required reading in that case: http://www.ietf.org/rfc/rfc959.txt Brings back memories.. I wrote an FTP server for a Psion 3 using VB6 and OPL back in my university days
Thanks i'll try it out in a bit :)
Thank you for the comment! I really appreciate your commend and constructive words! I like the idea for the type pages and think I will implement this. Regarding your points about the index page and diagrams: Are you talking about the html documentation? Did you try to use firefox to view it? There should be a navigation and the diagrams should use OpenSans (included by css). Unfortunately there are some limitations while using chrome to show a local html documentation (Already an issue and will be changed in future updates). Thanks again!
No problem! Ah - of course: I was using IE11 (I know, right), so that doesn't seem to be working either. 
Here is a link to the pdf: http://static.squarespace.com/static/5019271be4b0807297e8f404/t/52ca85ebe4b04a45ef2c9c97/1389004267685/Rob%20Miles%20CSharp%20Yellow%20Book%202014.pdf
Can we have the class code please
Are they not the same? Object &lt;--&gt; json ?
Ohh no. I don't want to remove/replace the 'has' part.
No. I pass the c# object type to a generic serialization class like this: Newtonsoft.json.jsonconvert.deserializeObject&lt;MyObject&gt;(json); This sits in a jsonDataLayer class, not in MyObject class.
I was able to get it to "work" it now updates like its supposed to but the interface still gets all blinky. Even when its only updating every other second instead of 3 times per second.
Can I see the definition for MyObject?
I'm typing this by hand on a phone, so bear with me! Public class MyObject { Public string name {get;set;}; Public int age {get;set;}; Public CustomObject customObject{get;set;}; Public int height {get;set;}; } CustomObject just has 2 string properties
JSON.net should handle this exactly how you are trying to do it, https://gist.github.com/anonymous/8359170 this sample works correctly. You should double check accessibility on all of your classes used for serialization because they MUST be accessible outside your assembly or JSON.net cannot find them via reflection.
I met the author a couple of times during Open Days at Hull. Nice bloke. Gave me a free copy of his book back in 2006. 
The issue here was that this was all done from an Ontology. I fixed it though thanks.
WPF or Winforms? Might consider using the Task Parallel Library ( http://msdn.microsoft.com/en-us/library/dd460717(v=vs.110).aspx) to update the time Use BindingOperations for cross thread acess. 
Windows Store Apps, I don't know if they are considered WPF exactly but its really similar to it.
Duh. In the title. Windows Store apps use XAML but isn't WPF. Task Parallel Library does exist in Windows Store though. 
Wierd, thanks for the confirmation.
I tried that and no joy, thanks for trying.
Have you tried [DataObject] and [DataMember] attributes?
This works for me with the provided JSON. Also, I notice in your comment example the properties are lower case - properties should be upper! MyObject.cs: using Newtonsoft.Json; public class MyObject { public string Name { get; set; } public int Age { get; set; } public int Height { get; set; } public CustomObject CustomObject { get; set; } } CustomObject.cs: using Newtonsoft.Json; public class CustomObject { [JsonProperty(PropertyName="attr1")] public int Attr1 { get; set; } [JsonProperty(PropertyName="attr2")] public int Attr2 { get; set; } } Edit: Specifically, the following works: string json = "{\"Name\": \"bob\",\"Age\": 42,\"CustomObject\": {\"attr1\":1,\"attr2\":2},\"Height\": 200}"; var result = Newtonsoft.Json.JsonConvert.DeserializeObject&lt;MyObject&gt;(json); Debug.Assert(result.CustomObject.Attr1 == 1); (I stripped the array bits around the JSON because I couldn't be bothered to encase it in an array). Edit2: Also, the [JsonProperty] bits aren't needed, I just always use them when a property's name isn't identical to the corresponding JSON object.
Probably some mistake in your object definition, try http://json2csharp.com which I used along in https://gist.github.com/StormReaper/e734b1908df2b937ead2
Have you tried naming through attributes? I notice both upper and lowercases being used. Public class MyObject { [JsonProperty( "Name" )] Public string name {get;set;} [JsonProperty( "Age" )] Public int age {get;set;} [JsonProperty( "CustomObject" )] Public CustomObject customObject{get;set;} [JsonProperty( "Height" )] Public int height {get;set;} } 
&gt;Parameters &gt; &gt;input &gt;Type: System.String &gt;The string to search for a match. &gt; &gt;replacement &gt;Type: System.String &gt;The replacement string. &gt; &gt;Return Value &gt;Type: System.String &gt;A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged. 
How can i make it replace the original string? :| Thnx for the reply btw.
http://pastebin.com/Pgs1kEMa *I did not test the code, but this should do*
Can you try to serialise then to XML and back again.. I have had issue with the newton soft in the past. This is just to rule out any structural issues with your class definitions.
Yeah that seemed to replace the original when i added the line= and removed the \b from the regex. My input file is [this](http://pastebin.com/2rRLGmAu). I've tried to do the regex as: "\b(?:is|are|has|a)\b" "\r(?:is|are|has|a)\n" "\n(?:is|are|has|a)\n" "(?:is|are|has|a)\r\n" **EDIT:** and this doesn't work either "(?:is|are|has|a)\n" It does not seem to work!! And when i remove the \b then it doesnt work like i want it to. How can i make it remove the word if it's EXACTLY like that word on a single line. Thanks for your time man.
Use something like this to write, learn and test regex patterns :http://www.ultrapico.com/Expresso.htm
use "\\\b" instead of "\b". see this for escape chars: http://msdn.microsoft.com/en-us/library/h21280bw.aspx you can use the char "@" to not use any escape chars.
I don't know about Newtonsoft.JSON however in the past when I've deserialized a JSON object I just dump it into a Dictionary&lt;string,object&gt;. From there you can instantiate your object from the dictionary. Not the most elegant but works pretty well.
It looks like you might be navigating to the file via network fileshare instead of going directly to your C drive?
Take a look at the Path class: http://msdn.microsoft.com/en-us/library/system.io.path%28v=vs.110%29.aspx
yeah i have a user who has done this and causing me problems 
Yeah the path class and fileinfo class both don't convert it for me, unless I missed something.
Well I hate regex personally - maybe some simple string manipulation?
Quick and super, super dirty: var split = FileName.Split('\\').ToList(); split.RemoveAt(0); split.RemoveAt(0); split.RemoveAt(1); split[0] = split[0].Replace('$', ':') + "\\"; var finalName = System.IO.Path.Combine(split.ToArray()); 
[Eric Lippert's](http://ericlippert.com/) blog is good for expanding your programming horizons. In case you don't know, Lippert was one of the senior developers on the C# team until about a year ago.
Thanks, I'll add it to my list.
Fuck them blogs. Mindless trivia and random drivel. Read code from projects that do things you consider hard but interesting. Contribute.
Not all blogs are mindless and random. Some (maybe most) are, and those are the ones I'd like to avoid. Where do you recommend looking for source code?
&lt;Scott Hanselman's blog&gt;(http://www.hanselman.com) is well written and he posts lots of examples of what he's done with new versions of stuff that (usually) comes out of MS. He's not ideal for learning programming principles, but I find him great for introducing new features in .NET I wouldn't otherwise have known about.
Best way would be to use management apis to lookup where the share actually points. 
Never use anything in system.string for path manipulation 
I have yet to find an FTP implementation that doesn't fall down in production for this reason or that reason, even paid ones. I'm implementing it myself because I no longer trust that the various library authors are competent.
For display purposes
Thanks!
If you have MSDN, get the free [MSDN Magazine](https://msdn.microsoft.com/subscriptions/manage/), it comes in print or PDF. Also check out the [DotNetCurry (DNC) Magazine](http://www.dotnetcurry.com/magazine/) There is also [Visual Studio Magazine](http://visualstudiomagazine.com/Home.aspx) There is always http://blogs.msdn.com as well
http://www73.zippyshare.com/v/59815849/file.html exported my feedly opml if you're interested
Just subscribe to the following RSS feeds Chris Alcock's 'The Morning Brew' and Alvin Ashcraft's Morning Dew Sign up for the CodeProject newsletter of your choice (I subscribe to The Daily Build) and you will have more than enough to keep you busy 
He also does a good podcast. DotNetRocks is another good one to listen to.
Ah, thanks a lot. I'll check that out.
Look at quartz.net. I just implemented it in my last web project, works just fine. And its free! Not dependant on hosting provider at all (I did host it on Azure though, non VM).
Perhaps something dirty like this? string s = "\\localhost\\C$\\@GMT-2014.01.10-15.21.59\\Users\\Public\\Testing\\MyText.txt"; int folderIndex = s.IndexOf("@") + 24;//time stamp length is constant. int driveIndex = s.IndexOf("$"); string readablePath = s.Substring(driveIndex - 1, 1) + ":\\" + s.Substring(folderIndex, s.Length - folderIndex); Response.Write(readablePath);
I'm half tempted to write a nice set of wrappers for YEPPP, (It's a beautiful idea but the way data gets packed is just weird,) but that's kinda bitchwork.
SQL Server 2012 express is great for developing your applications if you choose and the integration is great with VS. It scales to 1GB RAM per instance and 10GB sized databases, which is a good 'stepping stone' especially when working your way up from ACE/JET Databases.
I'm on my phone so I can't write out and test a lot of code but this is what you need to do: Launch the command line program almost as you have but in a new thread. Also in that thread after is has launched, instead of saying p.WaitForExit() do the following loop while (!p.HasExited) { String stdout = p.StandardOutput.ReadToEnd(); Thread.Current.Sleep(1); } The call to ReadToEnd returns a string that you can build together or add as an item to your list box. I will type an explanation of why you have to do it this way if no one beats me to it before I get back to my computer.
How did you host it? Worker role? 
yield gives me the error: "the yield statement cannot be used inside anonymous method blocks"
I was having a similar problem just the other day! The problem you're having is ReadToEnd() isn't sending an end of stream character, so the method doesn't return. It sounds like you want to use something like private void startMining(string cmdFileName, string argument) { Process p = new Process(); //create a new process for us to open our cmd line program p.StartInfo.FileName = cmdFileName; //use the given file name to seect the correct mining program p.StartInfo.Arguments = argument; //add all the arguments we appended together above into a string p.StartInfo.UseShellExecute = false; //don't use the shell to execute the cmd file p.StartInfo.RedirectStandardOutput = true; //redirect the standard output p.StartInfo.RedirectStandardError = true; //redirect standard errors p.StartInfo.CreateNoWindow = true; //don't create a new window p.OutputDataReceived += new DataReceivedEventHandler(ProcessDataReceived); p.BeginOutputReadLine(); p.Start(); } private ProcessDataReceived(object sender, DataReceivedEventArgs e) { // Process your output here string output = e.Data; } The event handler will fire every time a line is sent to the StandardOutput. Hope this helps.
blargh. Create this method: private static IEnumerable&lt;string&gt; ReadAllLines(StreamReader sr) { while(!sr.EndOfStream) { yield return sr.ReadLine(); } } Then change the call like this: ... p.Start(); IEnumerable&lt;string&gt; readLines = ReadAllLines(p.StandardOutput); p.WaitForExit(); return readLines; });
hmm I get an error saying the process hasn't started yet, so I moved p.BeginOutputReadLine(); below p.Start(); which seemed to work, then I added lbCmdOutput.Items.Add (output); below string output = e.Data but it still does not update the listbox for some reason. Thanks for helping!
even stranger yet, it just gave me an error that output was already used, so I renamed it. there were no errors, but when running the listbox doesn't update. Do we need to tell the listbox to update every time we put something in it?
Yea, I caught "already used" issue that and updated it before you replied. As it is, it will collect *all* of the output from the cmd in the thread, then dump it all to the listbox when it's done. If you want to update the listbox to have it display the text as it's running then we'll need to get a little deeper with delegates and how they work with form controls. See [How to make thread-safe calls](http://msdn.microsoft.com/en-us/library/ms171728.aspx) for some examples. Change *ReadAllLines*: private void ReadAllLines(StreamReader sr) { while(!sr.EndOfStream) { lbCmdOutput.Invoke((MethodInvoker)(() =&gt; lbCmdOutput.Items.Add(sr.ReadLine())) ); } } We're setting the listbox text directly as it's read, so we don't have to return anything anymore. Change startMining: // remove the variable at await await Task.Run(() =&gt; { // remove the variable at ReadAllLines ReadAllLines(p.StandardOutput); // remove the return value from Task.Run // return readLines; // remove the foreach loop /* foreach(string outputLine in output) { lbCmdOutput.Items.Add(outputLine); } */
&gt;Do we need to tell the listbox to update every time we put something in it? Essentially, yes. There are many different StackOverflow questions on this topic: [1](http://stackoverflow.com/questions/17615069/how-to-refresh-datasource-of-a-listbox-in-c-sharp-winforms) [2](http://stackoverflow.com/questions/61421/how-do-i-make-a-listbox-refresh-its-item-text) [3](http://stackoverflow.com/questions/5293539/c-sharp-listbox-update-on-item-change) [4](http://stackoverflow.com/questions/2285178/net-winform-listbox-item-displays-old-value-untill-reassigned-to-itself). If it were assigned to me, the first thing I would attempt to try is ListBox.Refresh() after each time you call ListBox.Items.Add(). If that doesn't work, I would attempt what was suggested in [this](http://stackoverflow.com/a/61719) StackOverflow answer. I find WPF makes this much easier than the WinForms way of doing this...
They can also be marked internal and then add the InternalsVisibleTo attribute to your assembly so that JSON.NET can access the internal members. 
Hmm... if I remember correctly, telnet is very easy protocol (basically just send text through a socket + few other trivial rules), but very similar to SSH, I'd google for an SSH library, I've looked around a while back and there were a couple that looked decent.
Whatever you're interested in making yourself, find out if anybody makes it in C# and if code is available. For example many of the microsoft libraries have their source available if you look for it. Github might even have C# project tagged and sorted by popularity (maybe, I've not looked).
No it actually is just a all you include in your project, make a class file where you do the work you want run on a schedule, then in the global.asax you have it queue up the job. I honestly don't know what goes on under the hood, but it works.
but if there is no active user on the site the process will be killed. Didn't see much from the documentation. I'll need to dig more. Thanks for the info. 
Right. You missed the first step in "Change startMining". Remove the *[IEnumerable&lt;string&gt; output =]* part, you don't need to assign that variable anymore.
I do prefer WPF, but that isn't the issue here. The task waits for the cmd process to complete before updating the list box. It's what was closest to the original question. Even in WPF he would have to tackle cross-threading concerns to do what he needs.
Portaudio is a great deal of fun.
*Here's a bit from linked Wikipedia article about* [***Nagle's algorithm***](http://en.wikipedia.org/wiki/Nagle%27s_algorithm) : --- &gt; &gt;**Nagle's algorithm**, named after John Nagle, is a means of improving the efficiency of TCP/IP networks by reducing the number of packets that need to be sent over the network. &gt;Nagle's document, Congestion Control in IP/TCP Internetworks (RFC 896) describes what he called the "small packet problem", where an application repeatedly emits data in small chunks, frequently only 1 byte in size. Since TCP packets have a 40 byte header (20 bytes for TCP, 20 bytes for IPv4), this results in a 41 byte packet for 1 byte of useful information, a huge overhead. This situation often occurs in Telnet sessions, where most keypresses generate a single byte of data that is transmitted immediately. Worse, over slow links, many such packets can be in transit at the same time, potentially leading to congestion collapse. &gt;Nagle's algorithm works by combining a number of small outgoing messages, and sending them all at once. Specifically, as long as there is a sent packet for which the sender has received no acknowledgment, the sender should keep buffering its output until it has a full packet's worth of output, so that output can be sent all at once. --- [^(about)](http://www.reddit.com/r/autowikibot/wiki/index) ^| *^(/u/poop-machine can reply with 'delete'. Will also delete if comment's score is -1 or less.)* ^| [^(**call me**: wikibot, what is something?)](http://www.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/) ^| [^(flag for glitch)](http://www.reddit.com/message/compose?to=acini&amp;subject=bot%20glitch&amp;message=%0Acontext:http://www.reddit.com/r/csharp/comments/1v0ht6/help_network_buffer_with_c/cenhr2b)
Personally, to keep it simple, I'd just stick with poop-machine's answer and delimit them nicely. Otherwise, look at setting the TCP_NODELAY flag on the sender's socket to disable Nagle's algorithm. I remember seeing a msft article on this somewhere. EDIT: Just in case you're interested - https://support.microsoft.com/kb/214397
Nagle will help, but its not the complete answer. You should send &lt;msg len&gt; at the beginning, then properly buffer. You can still get partial messages and ones that dont fall on packet edges (or both) since those arent guarantees of TCP. If &lt;data type&gt; implies the length, then thats fine too. Additionally you can then do some DOS protection. I hit this on my little C# MMO engine even with Nagle's off. Adding message length to my system and properly building messages from the TCP stream cleared everything up. 
If you delimited each message with a char you would save bandwidth... Once your messages reach a certain length, sending the length would wasteful. 
That is like saying, don't read the newspaper column but stick to the facts and statistics. Opinions do matter and they may give a new insight even for stuff like coding or software development in general.
Hi! New version online! Changelog: * Added tooltips and refresh button in visibility settings * Added member list in type sites * Added constructors in classdiagram * Some performance tweaks * Error with sequencediagrams fixed * Made project name mandatory * Fixed a bug with the logo in the html documentation * Fixed a bug with linkplaceholders in namespace descriptions
I don't think you need to use `ref` on the Bitmap since classes get passed by reference anyways.
Shouldn't IRC crap itself then? Uses TCP and some messages are as short as `PING :ADFHC`. I used StreamWriter and StreamReader for my IRC Bot though, way less hassle than handling byte arrays :D
Github has that for all languages :D
On low level sockets, you can set the TCP_NODELAY flag to disable Nagle's algo, not sure if C# lets you do that. Another option is to pad your short messages with dummy bytes to make sure they flush.
I have an application that uses WinSCP (http://winscp.net/eng/index.php) successfully. It includes a .NET interface. My requirement was for sFTP however.
Head first c# - lots of exercises
So now I'm finally getting the listbox to update, I've changed a few items to make it work but now all that's displaying in the listbox is "System.IO.StreamReader". This is the code I've got: var thread = new Thread(new ThreadStart(() =&gt; { Process p = new Process(); //create a new process for us to open our cmd line program p.StartInfo.FileName = cmdFileName; //use the given file name to seect the correct mining program p.StartInfo.Arguments = argument; //add all the arguments we appended together above into a string p.StartInfo.UseShellExecute = false; //don't use the shell to execute the cmd file p.StartInfo.RedirectStandardOutput = true; //redirect the standard output p.StartInfo.RedirectStandardError = true; //redirect standard errors p.StartInfo.CreateNoWindow = true; //don't create a new window Process[] pname = Process.GetProcessesByName("minerd"); //check all processes and put into array if (pname.Length == 0) //test process name against length to see if it's running { p.Start(); //if not running, start the program StreamReader sr = p.StandardOutput; //read the programs output into a streamreader while (!p.HasExited) //while the program is still running { // if (!sr.EndOfStream) // TODO: This blocks the minerd process for some reason...? { string procOutput = sr.ToString(); // trying to do the control update directly will result in an invalid cross-thread operation exception // instead, we invoke the control update on the window thread using this.Invoke(...) this.Invoke(new Action&lt;string&gt;(s =&gt; { lbCpuOutput.Items.Add(procOutput); }), procOutput); } //else Thread.Sleep(20); // no input, so just wait for 20ms and check again } } else { MessageBox.Show("cgmimer is already running"); } })); thread.Start();
[libcurl.net](http://curl.haxx.se/libcurl/dotnet/) Get latest libcurl [here](http://curl.haxx.se/download.html) and use .net Interop. [C# implementation](http://ramblingsofcode.blogspot.com/2011/08/net-libcurl-using-pure-c.html)
Maybe you can look at the solution I put in the reply above yours? I feel like I'm close now that I'm getting some sort of output to my listbox, it's just not the right output yet
Not sure if you're looking for free or not, but I've used /nSoftware's IPWorks in various forms for over 10 years (.NET, COM, and Java versions). 
I haven't got it working entirely, but I've got it working and outputting to the list box using your code, just not the correct information. Could you look at my [reply](http://www.reddit.com/r/csharp/comments/1uyvx5/questionnew_to_c_and_im_having_trouble_reading/ceo3v3a) and let me know your thoughts? Thanks!
free download: http://www.it-ebooks.info/book/251/ edit: 3rd edition: http://www.it-ebooks.info/book/2885/
I had the same issue recently and picked up "C# In Depth" because I generally like that publisher. It doesn't have exercises, but does have plenty of very well explained examples and provides lots of explanation. Can be dry here and there, but there's a lot of value there. It does a great job covering Async and Delegates (in all their wonderful shapes and forms). I'm not what other languages you feel comfortable with, but my functional experience is mainly from Javascript and I found it easy to connect a lot of that knowledge between the books. Another benefit is that the author is of the Google clan instead of the traditional Microsoft stock, which provides a slightly different perspective, I found. A lot of the .NET documentation and books by MS employees end up being similar, and variety is a valuable thing. DISCLAIMER: Definitely not for people looking to learn "how to code in C#". http://csharpindepth.com/ http://www.amazon.com/Depth-3rd-Edition-Jon-Skeet/dp/161729134X
&gt; string procOutput = sr.ToString(); You're casting the StreamReader object to a string, which just gives you its type name. Change it to `sr.ReadToEnd();` and add a check in there to see if it's empty (otherwise you'll just fill your list box with empty entries in an infinite loop!).
Well today I started using it in my project and it works fine, thank you again :)
So, create a constructor that takes the 5 parameters... or use object initialisers: http://msdn.microsoft.com/en-us/library/bb384062.aspx 
I'm just trying to understand why you appear to be having so much difficulty.
Failed to see the purpose of the program (other than the educational part) - But your update of "lblStatus.Text" does not work as expected, since control is not given back to the UI. The entire DownloadCompleted method is blocking.
I'm not used to repeating myself. But in this case, I will make an exception. You need to read about **OBJECT ORIENTED PROGRAMMING CONCEPTS.** What you are asking is not a **C# question**. It is an Object Oriented Programming question. Read about Objects, about Polymorphism, about Operators and Types, about Overloading, about Constructors (initializers) and Destructors (finalizers), about class Inheritance and Class relationships, about Abstraction, about Dependency, there's a lot to learn and you're going about it the wrong way. You need to understand first the basics before moving onto language specific questions. An operator (+) normally used for adding numbers, can be overloaded to DO something else, the "something else" is defined by the developer according to his or her needs. This is Operator Overloading. 
&gt; visual studio express just makes a template for you to work in beforehand What "template"? If you're talking about one of those built-in templates where they create the basic structure of a typical application, instead try starting a new solution "Blank Solution" and add projects to it; you can structure it however you want. If you're talking about the whole concept of "solutions" and "projects", then you're gonna want to actually start using them. They are there as tools and pretty much the standard way that 99.589% .NET developers use.
Your question isn't very clear, but assuming you want to output the value of the 'supply' field on each mp3 in the list to the console, you just use: Console.WriteLine("Supply: {0}", o.supply); // The placeholder {0} will be replaced with the variable o.supply. Also in these two lines: if (int.TryParse(rawinput3, out value)) { int supplymutate = Convert.ToInt32(rawinput3); the 2nd line is redundant. You're converting rawinput3 to an int twice. int.TryParse will attempt to parse the string and return true if it succeeds, and put the integer value in the out parameter - in your case, the variable called 'value'. So you can just remove that second line (int supplymutate = ...) and change this line: o.supply = o.supply - supplymutate; to o.supply = o.supply - value; 
Well, what counts is, that you're modifying the same object that was passed into the function, in the function. As opposed to structs where you modify a copy, if you don't pass it as `ref` or `out`. ^(explanation for those who might not know)^
Yes pretty much a learning process. I figured the best way to learn is to build something. And I also prefer GUI over CLI if that makes sense. Thats actually a very good feedback, do you know of a good workaround? Just started C# so I am not familiar with threads.
I'll continue in english, for the rest of the readers :) So you can't access 'supply'. Can you access another value? Or property? Can you access o.geefid for instance?
Downloaded this a few days ago, bought the kindle version as well for on the go reading (it's ~370 pages), been a big help to me so far in learning C#. He recommends reading the first two chapters through, but mentions the others can be browsed through as needed from my understanding.
I had tried it as sr.ReadToEnd(); before, and nothing at all would come through, even after the cmd process had been canceled. This is what I've changed it to: string procOutput = sr.ReadToEnd(); if (procOutput == null) { } else { // trying to do the control update directly will result in an invalid cross-thread operation exception // instead, we invoke the control update on the window thread using this.Invoke(...) this.Invoke(new Action&lt;string&gt;(s =&gt; { lbCpuOutput.Items.Add(procOutput); }), procOutput); } I set a break point at the if statement, which it doesn't even hit until i cancel the cmd process, then another at the "this.Invoke..." which it hits, but nothing gets pushed to the listbox. It seems as if ReadToEnd will only give you the output once the cmd process is complete, but I need to be able to have a live feed of the output.
&gt; the supply of any mp3 in the mp3list at this moment By this do you mean you want the *total supply* of all the mp3s in the list after updating it? If so, you could use the [Sum](http://msdn.microsoft.com/en-us/library/bb534734(v=vs.110\).aspx) Linq method: int totalSupply = mp3list.Sum(mp3 =&gt; mp3.supply); // 'mp3' here is just a variable, like 'o' in your loop Console.WriteLine("Supply: {0}", totalSupply); Make sure you have at the top of the file: using System.Linq; (It's probably there by default if you created the class in VS.) Or a more traditional way is to initialize `int totalSupply = 0;` above the loop, and add each updated o.supply to the total within the loop. Then you can print the total after the loop is complete. 
Also a good way to get that core understanding when your pull request gets rejected.
Perhaps this may help (I haven't view your source I'm afraid). http://msdn.microsoft.com/en-us/library/ms171728(VS.80).aspx
If you create public get properties on the class member variables you are interested in, then you can do: if (int.TryParse(input, out x) { if (x &gt; 0 &amp;&amp; x &lt; listofMp3.Count) { mp3 target = listofMp3[x]; Console.WriteLine(mp3.ProperteyIWantToOutput); } } 
Check out limilabs. 
thanks! will check 
I would use BackgroundWorker - Very easy to use..
One thing to note about source version control is that you should avoid uploading any binaries. You can create a .gitignore file in your project root to filter out any files/directories matching a pattern. You can look at https://help.github.com/articles/ignoring-files or just google for more info. If you want to make an easy downloadable version available to the public you should use the Releases feature.
&gt; and i can't find the right syntax for RETRIEVING an VARIABLE from a CLASS from a LIST That is because you can't retrieve a variable from a class, unless that variable is declared public (bad idea), or it is exposed to the outside world via a method or property. The code I submitted, gets the object from the list.
Creating "Breakable Toys" is a great way to challenge a new programmer or a programmer learning a new language. [Check this out for a bit of inspiration](http://chimera.labs.oreilly.com/books/1234000001813/ch05.html#breakable_toys). I only briefly scanned over your code, but as others have suggested, explore using threads. Make it your goal for your application to be completely non blocking.
if you want to get an instance of mp3 that is located inside a list you can use the indexer like this, mp3list[i].supply, where i is the index. This also works inside a for loop. If you are using a foreach loop you just use the temporary variable defined in the header of the foreach loop. for(int i = 0; i &lt; mp3list.Count; i++) { Console.WriteLine("Supply: {0}", mp3list[i].Supply); } or: foreach(mp3 track in mp3list) { Console.WriteLine("Supply: {0}", track.Supply); } You should always read the info Intellisense gives you when you place your cursor over some code or google the msdn documentation of the classes you are using. 
Actually I think you should look at the async await pattern. Its available since NET 4.5 and will replace backgroundworker constructs. http://msdn.microsoft.com/en-us/library/hh191443.aspx There are some easy tutorials out there.
Yeah Head First C# is great. I have the 2nd edition which is uses WinForms. I believe the newest edition uses WPF.
I need some expert help on this one
please remove the "cloudapp.:" part of the link (reason: http://msicc.net/?p=3929). thanks!
please remove the "cloudapp.:" part of the link (reason: http://msicc.net/?p=3929). thanks!
FTP is an incredibly simple protocol, you can prolly write a library yourself.
&gt;then in the global.asax you have it queue up the job doesn't the scheduler run into issues when the app restarts? 
I finally got this working, using the suggestions for threading from +/u/gsuberland and the demo code from [here](http://http://stackoverflow.com/questions/12566166/how-to-asynchronously-read-the-standard-output-stream-and-standard-error-stream) It's finally doing what I need. Thank you everyone for your help!
sr.ReadToEnd() should work as you had it, sr.ToString() is definitely not going to work. Are you positive your console app is outputting to the screen in real time, and isn't waiting until it's done to output? Keep in mind with no Thread.Sleep you may be adding many blank strings to your list box. Try adding if (!String.IsNullOrWhiteSpace(procOutput)) check before adding to the list box. ReadToEnd() may return a blank string if there is nothing (which is different than the null you are checking for!). I don't have a whole lot of other ideas, as I have very similar looking code of my own that does this. The only difference is that I read directly from p.StandardOutput and I don't assign it to a variable, but I would be surprised if the process was assigning itself a new stream object each time. But who knows.
This book just influenced me to get windows 8.1, no regrets so far; not sure what all the anti-windows 8 was about.
Came here to say this. I strongly recommend this book to anyone who wants to learn C#.
A string delimiter is a simple answer, but depending on the data you are sending, you mit want to look into serializing your data with JSON. It will take more initial setup but give you far more flexibility in the end.
None that I have personally experienced. For context I am running a pretty simple job that checks one database table and compares is to some other data, then spits out a csv, every 15 minutes. So if I have a restart for some reason and the job runs twice in five minutes, it will probably be fine. If it runs twice in less than a minute I may get some issues, but give it another 15 minutes and I'll have my clean data.
ha! I didn't realize they had an FTP component. I've used their mail component and it's pretty good. Their email address parsing leaves a bit to be desired, but other than that I've had a good experience with them. 
Pointers, you say? http://imgs.xkcd.com/comics/pointers.png I would recommend that you get a copy of LinqPad. It is a scratchpad for C#, so you don't have to create a new project each time you want to write some code. It's really a Linq scratchpad, and marketed as a Linq to SQL tool, but it's just so much more than that. http://www.linqpad.net/
[Original Source](http://xkcd.com/138/) **Title:** Pointers **Title-text:** Every computer, at the unreachable memory address 0x-1, stores a secret. I found it, and it is that all humans ar-- SEGMENTATION FAULT. [Comic Explanation](http://www.explainxkcd.com/wiki/index.php?title=138#Explanation) **Stats:** This comic has been referenced 5 time(s), representing 0.06% of referenced xkcds. --- ^[Questions/Problems](http://www.reddit.com/r/xkcd_transcriber/) ^| ^[Website](http://xkcdref.info/statistics/)
Are you working on Desktop Applications or Web Apps? 
My advice can sound strange but I actually always admired "C# Language Specification" as a complex knowlege system expressed in a clear and consecutive way. It gives you a full understanding and has everything except actual CLR base class library. Sure a thing to have a look at, not as boring as you expect at all.
&gt; You can just skip over stuff that you already understand (generics, for example) It is worth having a look at the differences in things that you do understand. C# does generics better than Java does. The generic type is not erased by the compiler. 
My personal go-to project when learning a new language is to implement an anagrams program. I have a massive 480,000 word dictionary and the task is to find all word anagrams. (I use the algorithm of storing each word in a hashmap indexed by the sorted letters of the string, so anagrams get stored together). It has worked well for me for getting a good handle on new languages at my own pace.
Found an algorithm/implementation on [StackOverflow by Danylo Fitel](http://stackoverflow.com/a/15690431/1269654). I haven't used it so I can't comment on bugs/issues/performance though the author states that it takes a "tiny amount of time". It's in Java, but it should be easily portable to C#.
enum?
Yes. DrinkType is an enumeration, not a class.
Ya, enum. An example of how it could be useful is enums as flags (see [combinable enums](http://www.dotnettoad.com/index.php?/archives/11-combinable-Enums-bitfields.html)). Basically, passing DrinkType.Beer is just a handy way of telling the MakeDrink method to act a certain way. For example, imagine the Drink object has a property 'Glass'. Then passing Drink constructor DrinkType.Beer could set the Glass to 'Mug', and passing DrinkType.Shot could set Glass to 'ShotGlass'.
I figured it would be useful to do something like that. I had just never heard of enums before, and I'm still not sure what the syntax for setting something like this up would actually be. Where is the enum DrinkType defined? in the namespace itself? Within the Drink class? Would it just look like this? enum DrinkType { Beer, etc. }; edit: Never mind. With some experimentation in Visual Studio, I was able to pass exactly that Glass property that you mentioned into a Drink class using an enum defined directly within the namespace. The discovery of these enums should help clean up my code a lot in the future. Thanks!
As someone with mid level C# experience , I can only make one suggestion - Learn to use LINQ. You will love it and will cut down on so much code..while making things a lot less complicated. 
I apologize in advance for forcing you to click through the target link to another blog site. I could only have the full article in one location, for SEO reasons, and I wanted to direct Reddit to my blog, not my employer's blog. Anyway, I wrote this post about yield. Yield is something that I have found amazingly useful after wrapping my head around it. Hopefully you'll find this article useful. I welcome discussion on the topic. Please keep criticism civil. Thanks
From the top of my head, start with a random number, go next cell and generate a random number excluding the numbers which arent allowed anymore. (Generate new number if the number isnt in the allowed range. Dunno if I'm missing something there.
I had a feeling using the word "pointers" in this context would be trouble. :) I assume that pointers in C# are more like Java (objects, that is) and less like C++? I love the freedom you get in C++... it's the freedom of juggling chainsaws, or something. If I never have to worry whether I'm de-referencing something correctly again I'll be okay. Thanks for the suggestion for LinqPad. I'm not anticipating a huge amount of SQL right off, but it should be useful
Desktop, at least to start (though of course, there's the siren call of tablet -- does that count as desktop?). I have Visual Studio Express 2010... from what I've read there's a big split between desktop and web that happens in the 2013 version, is that right? Other gotchas I need to be aware of?
Yeah, I've encountered lambdas and dependency injection already... not sure I fully grok those, but it'll come (this is what happens when you leave the trenches of software engineering, kids). Good resources for grasping these better? I've read a little bit, but haven't yet seen a solid example of dependency injection, for example, that makes me go "oooooh, of course." Yield return sounds *very* interesting. Is this done using multi-threading, or is it just part of the language somehow? I'm doing lots of event-driven work, so ["reactive extensions"](http://msdn.microsoft.com/en-us/data/gg577609.aspx)? I found some good info about it [on Stackoverflow](http://stackoverflow.com/questions/10011369/reactive-extension-rx-tutorial-that-is-up-to-date) -- looks like it's related to Observer/observable, so it shouldn't be too hard to grasp. Agreed tho on debugging hell. I do a lot with autonomous agents, where I almost always end up relying on telemetry and logging to figure out what's going on inside them at runtime.
Lambdas aren't really dependency injection. I would say DI is more about large components been switched in or out. Such as logging endpoints etc. Lambdas more about when you have something that you do the same way, but with a different subtly to it. The simplest one would be if you had a collection of people and wanted the total age. people.Sum(x=&gt;x.Age); Rather than write the same logic for summation, you can quickly re-use the existing one. Yield Return is an iterator pattern that compiler generates for you, it effectively produces a state machine. Yup the Rx is that one, there are some good examples on how to get started, but honestly it's very easy until you start having streams which are either long running or using any kind of scheduling.
&gt; Rather than write the same logic for summation, you can quickly re-use the existing one. So would the introduction of iterators be an example of this, rather than having to write the same old for loop with minor changes for what you're iterating over? &gt; Yield Return is an iterator pattern that compiler generates for you, it effectively produces a state machine. Sounds very interesting! To give a little more of my dinosaur context, I got into C++ programming in the mid-1980s -- before v1.0. I got *out* of it just about the time the STL was coming into vogue. So when I went back to Java I had some re-learning to do, and it feels sorta like that now. It's fascinating seeing these changes and additions that give you a lot more leverage when programming!
Think of what to use an iterator in an extremely obvious example. public IEnumerable&lt;int&gt; MySuperExpensiveCalculationMethod(); So this funciton produces a series of numbers, but what if you only care about the first 5 of them? As its an IEnumerable, it could be implemented so it does no calculation at first, it simply returns the 'Itterator Object' (and implementation of IEnumerable&lt;int&gt;). Only when you start too look at the enumerable, does it do any calculation. You call MoveNext() and the calcaultions starts producing one value. If the consumer only wnats the first five values (and the function sometimes will calculate upto say 100) you can obviously save a lot of time. What makes this good in C# is it's so simple to do. public IEnumerable&lt;int&gt; MySuperExpensiveCalculationMethod() { var i = 1; yield return ComplexySlowMethod(i++); } So the idea is that ComplexySlowMethod would only be called 5 times in this code. MySuperExpensiveCalculationMethod().Take(5); I'm explaining this badly....
Well, it's getting me pointed in the right direction -- and if nothing else, this kind of thing helps me avoid the ancient programmer anti-pattern of "use every language as if it was C." :)
MVC4/5 or WebForms or Webservices are the bread and butter really of the .Net Web side. Loads of stuff to learn about there, MSDN has great documentation, and an area which they don't supply enough information will give you enough search terms to locate a good tutorial or walkthrough to figure it out. The code is pretty similar in both for learning purposes a simple console app for desktop to play with code is handy or a simple asp.net web form application would also be simple to get to grips with the web side. MVC is based on the Model (Data structure) / View (Display of the data structure to the user) / Controller (The code which populates the data structure and passes it to the View for display) design. It's a little different to web forms but once you get the hang of it, it's very easy to maintain. The VS 2012 or 2013 for **web development express** is a separate IDE to application 2010 so you could run both side by side on your machine, I do. Hope that wasn't to confusing, I'm not the best at explaining things. 
You should read a book like "C# in a nutshell" or "Essential C#". Discovering everything by trial and error is exciting, but probably counterproductive.
Could be a thing if hats what your into. Maybe a little S&amp;M coding while your at it ;)
`DrinkType.Beer` could also be a static instance of `DrinkType` public class DrinkType { public static DrinkType Beer = new DrinkType("Beer", true); private DrinkType(string name, bool isGood) { this.Name = name; this.IsGood = isGood; } public string Name { get; set; } public bool IsGood { get; set; } } It's a pattern I'll use occasionally when I want something "enum-like" but a little more fleshed out than an enum (e.g. properties, methods, etc..)
Pretty long...
Thanks! MVC is something I first encountered as a way of thinking in Smalltalk in about 1986 or so, IIRC. It always surprises me that it's become more than (what we now call) a design pattern. As you can tell by my comments here, I really do feel sort of like Rip van Winkle coming back to coding. It's pretty cool -- a bit like suddenly entering the future, even if a lot of the past has been forgotten. :)
Check out the File.ReadAllLines method. You might also want to go with a stream oriented approach if you are going to be processing very large files. Then you'll want to use either Regular Expressions to find patterns in your lines if you're allowing that, else you'll want to simply use string.Contains(KEYWORD) and run through each line looking for each keyword (nested for/foreach loops) Edit: You may also consider abstracting your functionality away from your interface. The gist you've provided seems to attempt to do the processing on the UI thread, directly in the button action/event handler.
It's even easier in a sense, the tools are there so you actually have to do *less* work. If you have the basic existing knowledge and experience of what you want to do, and you understand programming logic and the project life cycles. The rest is just syntax and awareness of the tool set your chosen environment provides. You will be up and running inside a month, mate. Just examine a few of the trees don't try to look at the forest all at once.
Indeed, if you specify constructors, you cannot initialize the object without calling one of those constructors. I'm struggling to see any advantage to this. Static methods break OO conventions just as much as breaking encapsulation.
Thanks a lot for the feedback, really appreciate it! Yeah that makes sense. I think I'm going to have to look up regular expressions though. I have another question if you have time. I'm probably going to use streamwrite to write the lines into a new text file. But I'm not the only one who will be using the program, so I can't specify a destination for that text file. How would I create a button that the user can click on and browse for a destination that they would want to the file to be created in? 
edit: removed code What your going to need to do first is to check if you can parse the textboxes to integers, if you can you should determent if the **FROM** value is greater than the **TO** value. Then I would loop it from the **FROM** value to the **TO** value and add the number to the combobox If the **FROM** value is not greater than the **TO** value you just have to reverse the loop. I hope you understand, im really bad at explaining.
http://msdn.microsoft.com/en-us/library/sfezx97z(v=vs.90).aspx
Appreciate the response! Is there some kind of property or resource I have to add? I'm getting errors for Regex, RegexOptions, and outputFilePath saying they do not exist in the current context. And ReadAllLines has an error that says: Error 1 'System.IO.FileInfo' does not contain a definition for 'ReadAllLines' and no extension method 'ReadAllLines' accepting a first argument of type 'System.IO.FileInfo' could be found (are you missing a using directive or an assembly reference?) 
If you're using ASP or ASP.NET WebForms you can create a click event for each of your submit buttons. Inside the click event you can use [Response.Redirect](http://msdn.microsoft.com/en-us/library/ms524309%28v=vs.90%29.aspx) to take the user to either App 1 or App 2. If you're using ASP.NET MVC then inside your controller you can use [RedirectToAction](http://msdn.microsoft.com/en-us/library/system.web.mvc.controller.redirecttoaction%28v=vs.118%29.aspx)
Couldn't she have the property be readonly? That way it could only be set once at construction /initialization EDIT: you could not use an auto property and have a backing field that is readonly accessed with a setterless property. This would achieve the encapsulation we want but you'd would lose initialization syntax sweetness 
 using System.Text.RegularExpressions; using System.IO; That's all I need to run it. Also, it's System.IO.**File**.ReadAllLines, not System.IO.File**Info**. And the other guy that replied is right too. For very large files this could impact performance on your UI thread, so you may want to use an async method with await Task.Run(() =&gt; { code I posted earlier}); or something like that. (This will require an extra method for appending a textbox however) public void appendTextBox(string value) { if (InvokeRequired) { this.Invoke(new Action&lt;string&gt;(appendTextBox), new object[] {value}); return; } textBox.Text = value; }
It's easy for me to criticize. I often think I should resurrect my old blog, so kudos to you for doing it. Actually, a DAL would be a great example. I guess I just would want to see a compelling example that shows off the feature. Every time I've run across a yield statement in the wild, it felt like a case of "look at the neat trick I can do" instead of an improvement.
Nice first attempt.. Why would I use this over rolling my own ?
Well if you have two separate sites that each have a login form that access the same database... you could have one user log in on one site, once you have validated the users information on the database, capture the users ID or unique reference. Then using the current datetime and concatenating it with the userid, encrypt that combined string using one of the .net encryption methods out there, and then redirect to your second app passing the encrypted datetime + userID to app2 in a URL parameters. (You could even open this link in a second window, so you have the two sites running side by side) App2 could then receive the encrypted string, decrypt it, check the datetime string and compare it against the current time, if it is with in a minute, take their userid and fetch the users logged in profile and continue onwards as usual. I'm using the datetime here in this example so that the user or another party cant just copy the URL with the encrypted string and use that instead of logging in from then on. You could also throw in some unique data to salt your encryption also. Just an idea off the top of my head.
I'm not sure how to answer that, why would you roll your own when a tested solution is available for free?
are you disposing of the motor controller properly ?
This is the event that's called every time one of the motor's position changes. public void getPosn(object sender, PhidgetPositionEventArgs e) { if (Mode != 3) return; //if (!e.m_complete) return; //UI update for switch conditions Input0.IsChecked = stepper.input0Chk.IsChecked; Input1.IsChecked = stepper.input1Chk.IsChecked; Input2.IsChecked = stepper.input2Chk.IsChecked; Input3.IsChecked = stepper.input3Chk.IsChecked; //Angle updater currPos = e.m_position; //currAngle = (currPos2 + currPos - 90000) * angleConv; //CurrAngle.Text = currAngle.ToString(); t = time.ElapsedMilliseconds; //Moves the cam to the initial position. if(start==true&amp;&amp;(stepper.input0Chk.IsChecked==false&amp;&amp;stepper.input1Chk.IsChecked==true)) { start=false; stepper.SetVelocityRpm(0); stepper.IsEnabled=false; Initialize(); } //Condition for angle 0 of cam if (prevAngle == 0 &amp;&amp; t &gt;= time0) { check0 = false; time.Reset(); prevAngle = 1; direction = false; stepper2.SetVelocityRpm(speed * 1.5 * ratio); if (find == false) { angle = angle150; move = true; } } //Condition for angle 150 of cam else if (prevAngle == 1 &amp;&amp; t &gt;= time1) { check150 = false; time.Reset(); prevAngle = 2; stepper2.SetVelocityRpm(speed * 1.5 * ratio); direction = false; if (find == false) { angle = angle300; move = true; } } //Condition for angle 300 of cam else if (prevAngle == 2 &amp;&amp; t &gt;= time2) { check300 = false; time.Reset(); prevAngle = 0; direction = true; stepper2.SetVelocityRpm(speed * .5 * ratio); if (find == false) { angle = angle0; move = true; } } //Checks for mechanical error after a 100ms delay if (check0 == true&amp;&amp;t&gt;100) { if (stepper.input0Chk.IsChecked == true || stepper.input1Chk.IsChecked == false) { go.Content = "ERROR 01"; Stop_Click(null, null); } } if (check150 == true&amp;&amp;t&gt;100) { if (stepper.input2Chk.IsChecked == false || stepper.input3Chk.IsChecked == false) { go.Content = "ERROR 23"; Stop_Click(null, null); } } if (check300 == true&amp;&amp;t&gt;100) { if (stepper.input3Chk.IsChecked == false) { go.Content = "ERROR 3"; Stop_Click(null, null); } } }
This is what's called every time the other motor's position changes. public void getPosn2(object sender, PhidgetPositionEventArgs e) { if (Mode != 3) return; //Angle updater currPos2 = e.m_position; currAngle = (currPos2 + currPos - 90000) * angleConv; CurrAngle.Text = currAngle.ToString(); //Sets initial angle positions. if (find == true) { if (angle150 == 1000 &amp;&amp; stepper.input2Chk.IsChecked == true &amp;&amp; stepper.input3Chk.IsChecked == true) { stepper2.SetVelocityRpm(speed * ratio); angle150 = currAngle; time.Start(); } if (angle300 == 1000 &amp;&amp; stepper.input3Chk.IsChecked == true) { stepper2.SetVelocityRpm(speed * ratio); angle300 = currAngle; time.Start(); } if (angle0 == 10000 &amp;&amp; stepper.input0Chk.IsChecked == false &amp;&amp; stepper.input1Chk.IsChecked == true) { stepper2.SetVelocityRpm(speed * ratio); angle0 = currAngle; find = false; time.Start(); } } //Returns motor to original speed once it reaches the angle specified. if (currAngle&gt;=angle &amp;&amp; direction == false&amp;&amp;move==true) { move = false; time.Start(); stepper2.SetVelocityRpm(speed * ratio); if (angle &lt; 300) { check150 = true; } if (angle &gt; 300) { check300 = true; } } if (currAngle &lt;= angle &amp;&amp; direction == true&amp;&amp;move==true) { move = false; count++; Count.Text = count.ToString(); time.Start(); stepper2.SetVelocityRpm(speed * ratio); check0 = true; } }
The code I'm fairly certain is causing the memory leak is the fact this is triggered very often and I don't know how to reclaim the memory from events as I'm not very familiar with c#: stepper.PositionChanged += new PhidgetPositionEventHandler(getPosn); stepper2.PositionChanged += new PhidgetPositionEventHandler(getPosn2);
Nothing obvious in either of those. Either break out the profile, or stick more code somewhere public (pasting into reddit is probably impractical)
No. You can't use the readonly keyword with properties, only fields.
I need to provide an accurate angle measurement of the motors so I can stop the motors in the right positions. So while the life test is occurring, if a switch is not triggered when expected the program stops. Edit: Is there a way to delete each instance once their function is completed without losing the event handle? Such as by using -= or dispose?
I need to retain the motor controller throughout the test.
You didn't answer my question. Normally you only need to register event handlers very rarely. Once registered, and event handler will keep being called, every time the event is fired. I'm going to need to see more code to be able to figure this out for myself - the whole of whatever class the getPosn and getPosn2 methods are taken from, and the lines around those two events.
Memory allocated by those events should get garbage collected unless you are keeping references to them. Or you have discovered a bug in the library you are using.
Or why would I use yours instead of using the framework concurrent dictionary... I'm not trying to be hostile or anything, but just to encourage you to think about where the "value add" is in this library, over using the standard framework. As it stands, IMO it looks incomplete... some observations: * The TIL is a good idea, but there is not auto delete thread, no events to tell you that an item is deleted. When the TIL expires, you get default(T), which in the case of an object would be null, but what if you where using ints, or some other value type? The library should throw a CacheItemTilExpired (or similar) exception. The same with if the key is not found, it should return a CacheKeyNotFound (or similar) exception * the second Get() is badly named, as it offloads the actually get to the func parameter, it should be renamed to Poll() or Call() or Execute() or similar, as that is what is fundamentally does. * There is no indexer you cannot go purse[key] = value; * IMO the MemoryStorage should be marked as internal and sealed the user of the purse doesn't need to know it's implementation. * There are no summary comments on any of the public interfaces. A user shouldn't have to look at any demo code, the intellisense should tell them enough to go on. * Is the library CSL compliant or not ? Now if the library did some of: * Stored the items encrypted in memory * Stored the items compressed in memory * Allowed the Purse to accept a ICache on it's constructor, so I could implement my own storage Then it might be worth taking a look :) I hope this helps
Could the call to Initilise() after the set to inital postion be an issue as well ?
Unless it's doing something particularly talented, I wouldn't have thought
Ahhh, yeah...that is true. But as far as the syntax goes, if you're just trying to learn what you can and can't do, the generics are fairly similar.
Well if he means the events trigger often then that is not a problem. But if he means that he registering event handlers often then that is a problem.
Thanks for the response. Using the out-of-the-box login page and Asp:Login, this didn't work. My &lt;asp:login&gt; control is calling a necessary event at onloggedin, and tying the two buttons to click events seemed to bypass that, thus resulting in not being logged in. I did find a way to get it done though, see edit. Thanks again.
One nice thing about her method is that the factory method names make it very explicit what you're supposed to call in the event of success or failure. If there were just two different constructors, it may not be immediately obvious which one you should choose.
Yeah, I've really very little idea what he's doing - a lack of code doesn't help. The main cause of memory leaks I've seen in C# are due to not de-registering event handlers, which is why I'm suspecting these... But it's a guess.
Initialize() only defines variables, with logic to only check for valid inputs from the user and no arrays/for loops.
Yeah, this was my first impression as well. Betcha those are set somewhere fun, getting registered over and over and over until memory bloats! Edit: Another thought that I had- I had a memory issue where, timers kept going. Turns out, if you didn't dispose of them manually, they kept going. (This was my case: Main application would fire off a winform which had a timer. The form did stuff, and when the timer elapsed it was supposed to close the winform and start a new one with the same parameters. Except after the first elapse, it would fire twice. Then four times. Once I added a winform.formclosing =&gt; timer.dispose everything cleared up!).
Is it possible that the above-referenced code is being called multiple times? If so, every time those two lines are fired, you are adding an additional event handler to the PositionChanged events. That could certainly lead to ever-growing memory consumption. Ensure that you are only assigning your event handlers once.
Only once when the program is loaded. Edit: The two functions I linked are the only parts of the code that occur more than one time.
I only register them once.
There goes that lead. Right, all code in a pastebin, please. We're wasting our time guessing, otherwise.
There's quite a lot of information out there if you are really interested, but probably the main source of information would be http://www.setbb.com/phpbb/?mforum=sudoku
To debug it, I had the timer write the current time to a file, with the window handle. When I did that, it crashed trying to send a handle for a form that was disposed. So I had it save the handle to an int first, then write that out. Well they kept firing for hours. Turns out there are three types of timers. The one I was using was exempt from GC as long as it was running. Just telling it to stop would have worked as well.
~~http://pastebin.com/uTdhLSQD~~ http://pastebin.com/WZ24wriQ Code without unused function calls. However, there is not much to the code aside from those two functions.
Didn't realize that the unused region would paste over, let me resend another link.
http://pastebin.com/WZ24wriQ Code without unused function calls.
System.timers.timer I believe it was. 
Ah, fun! That's the one I use... I'll have to look into it, thanks
Yes, use a memory profiler! This is what they're made for!
I'll check, but I hope not as that was code given to me from a previously functional program with similar specifications.
I'd prefer some syntactic sugar to object initializers that allows setters to be 'read-only' so that they could only be used during initialization. Rather than requiring constructors for every use-case. [/Hopes for C# 6]
Is it possible that the garbage collector is severely hindered enough to not destroy the completed events? That would make the most sense to me as this computer is quite outdated and the processors use while the program runs is at 80%.
I would also suggest this. It has extensive examples for learning every feature of the language that you can browse, run and edit very easily. 
If it helps, Win8 work station, 64 bit, Visual Studio 2010 Professional targeting .net 3.5 and 4.0 (I use an older version of CEFSHARP, requiring the mixed mode assembly) and I never stop the timer. 
Yes, and yes. It really depends on what I'm doing and why.
An event firing is more or less just a method call - apart from the normal clearing up that needs to be done after a method's been called, there's nothing that needs destroying. There's no such thing as a 'competed event' which needs tidying up. That event-firing code is fine. Can you post the results of the profiler in full? I won't New able to look until tomorrow, but someone else might spot sometime
Simple rule when it comes to event handlers: every `+=` should be matched by a `-=`.
I would have to make a new profile as I didn't save it, but I also don't have time to do it today. However I did set it up on a high end computer and there was no increase in memory as the program ran, so it wasn't the fact there was spare memory. I would just put it on another computer, however, the only computer I could use to do so is my personal laptop and this program needs to run for at least a week straight.
My guess is that if you directly consume a static method, then the class that handles that method is inflexible- not decided by dynamic dispatch. So, for example, you might normally like to take your dependencies as parameters in your constructor; that way, just by passing in an instance of a subclass or implementation of the appropriate interface, the behavior of that instance of your class can change. Pretty neat. To allow behavior like this for behavior that lives in static methods, you would have to wrap them up as instance methods on another class, which is kind of a messy run-around. TL:DR; static methods make it easy to directly couple classes. For some people, too easy.
&gt; My guess is that if you directly consume a static method, then the class that handles that method is inflexible- not decided by dynamic dispatch. How is that different from a constructor though? &gt;So, for example, you might normally like to take your dependencies as parameters in your constructor; that way, just by passing in an instance of a subclass or implementation of the appropriate interface, the behavior of that instance of your class can change. In this case, you take your "dependencies" as parameters in the static method. Again, I don't see what convention is being broken here.
Best tip ever: right click on the area with an error and select "resolve" to automatically add what is needed to run the code at top of page. 
In the _PreviewMouseDown events you are creating new ValueSetEventHandler's every time. Shouldn't you only create those once as well?
I really only have one method of learning projects. Find the entry point of the main program and work backwards from there.
 for(index = 1; index &lt;= limit; index++) { while(possiblePrime &lt; limit) { if (isPrime(possiblePrime)) // Check is current number possiblePrime is prime primes.Add(possiblePrime); // Add if true possiblePrime++; // Increment until prime number is found } } } doesn't need the outer loop: while(possiblePrime &lt; limit) { if (isPrime(possiblePrime)) // Check is current number possiblePrime is prime primes.Add(possiblePrime); // Add if true possiblePrime++; // Increment until prime number is found } Also, how long have you let this program run? It might take a few minutes to actually finish the calculation. 
I let it sit for an hour while I got some lunch. It definitely hangs and I don't know why. A bit of googling showed that several other people have run into the same problem, but have not found a solution. 600851475143 takes a little over a second to solve and 600851475144 take ~30 seconds to solve. EDIT: solve times were off.
Ok, well there's now nothing particularly obvious - you're going to have to use a memory profiler. It's probably something outside of this code.
I would if it were not for the fact that the program works flawlessly on my laptop. I think you're underestimating how fast the getPosn and getPosn2 is called. The motor is moving at 100 rotations per minute and a getPosn call is called every step of that rotation which is approximately 1000 steps per rotation.
Based on a quick read of the code you posted: Looks like you will also need to post the StepperWindow code.
When you do that you're telling the runtime to call your handler every time the position changes. You should only have to set that once. And then when the program ends (to be neat &amp; tidy) un-set the handler with a -= call: stepper.PositionChanged -= PhidgetPositionEventHandler(getPosn); What the deal is is that PositionChanged is a delegate, and as soon as you add to it a second time it gets turned into a linked-list. The more times you add to it, the longer it grows. 
That's sort of the thing with Project Euler. If you try to brute force it without a complete understanding of the issues, it can take hours (or thousands of years :O). If you ask the question the right way, it usually takes mere seconds. For instance, I asked wolframalpha.com about [600851475145](http://www.wolframalpha.com/input/?i=600851475145), and it told me that there were only two prime factors of 600851475145 - 5 and 120170295029. 120170295029 is greater than the square root of 600851475145, so you're considering it not a prime even though it is.
&gt; 120170295029 ~~[This number is actually not prime.](http://primes.utm.edu/primes/lists/all.txt)~~ There is actually a [proof](http://stackoverflow.com/questions/5811151/why-do-we-check-upto-the-square-root-of-a-prime-number-to-determine-if-it-is-pri) that states any number is not prime if there are no prime numbers less than the square root of the number in question that factor said number. EDIT: I am become error.
[not so sure about that](http://www.wolframalpha.com/input/?i=factors+of+120170295029) What about perfect squares? 
I just focus on the work given to me on the job I need to do.. work on the method or whatever, ask questions as they come together. Once you start doing that you now understand that piece and you move on to the next. Eventually you learn how it all comes together.
How do you interface with the controller? This smells like an unmanaged driver. 
USB and the driver is from the manufacturer: Phidgets
I'm willing to bet your problem is around that area. Check how you Dispose of he object. Does it implement IDisposable? You did mention you hold a reference to it for the entire life of the application. I would make sure you have up to date drivers. My money is on a shit driver implementation. Oh, and get a profiler. 
&gt;When the TIL expires, you get default(T) That's not true, if the item is expired your callback function will be called and the stored value will be updated. &gt; the second Get() is badly named, as it offloads the actually get to the func parameter I agree it could be named better, I don't like Call or Execute since they downplay the main purpose of the function which is retrieving a value vs executing a function. so maybe Fetch() is a better name? &gt; There is no indexer you cannot go purse[key] = value; Shouldn't be hard to add. &gt;There are no summary comments on any of the public interfaces. https://github.com/kayone/Purse/blob/master/src/Purse/ICache.cs &gt;IMO the MemoryStorage should be marked as internal and sealed the user of the purse doesn't need to know it's implementation. good point &gt;Is the library CSL compliant or not ? I'll have to check. &gt;llowed the Purse to accept a ICache on it's constructor, so I could implement my own storage Already supported and even mentioned in the blog post. &gt; Stored the items compressed/encrypted in memory Completely outside the scope of this library, Purse is supposed to be extremely fast and light weight. Edit: I suck at formatting 
 You have to learn the system from three different angles. 1. Your current task: Do you have a requirement document and a clear explanation of what you are maintaining/supporting/developing? 2. The system as a whole: Ask if there is documentation. Do they use XML (sandcastle) to document their API? Is there a architectural map of the system? 3. The user: Who are your typical users? What are their roles? What are they doings day to day with your software?
Huh, I've never seen the L suffix on Longs. TIL... Thanks, exercise!
I think he meant # &lt;= sqrt...
Hey OP, it looks like you should learn yourself some [foreach](http://msdn.microsoft.com/en-us/library/ttw7t8t6.aspx)! Instead of all your for(index...) loops, just do something akin to foreach (int knownprime in primes) { /* Eat your tonails */ } Edit: Another thing: you create 'root' by casting from math.pow(...) to long, but then send 'root' as an argument to FillPrimes, which expects doubles. You can get away with it in this case, but it's generally good practice to keep your types tight. Also also (as brought up by more_exercise), the for loop in for(index = 1; index &lt;= limit; index++) { while(possiblePrime &lt; limit) { if (isPrime(possiblePrime)) // Check is current number possiblePrime is prime primes.Add(possiblePrime); // Add if true possiblePrime++; // Increment until prime number is found } } doesn't actually do anything. It should actually massively slow down your code. Edit 2: OP, you have a horrendous logic bug. See the code near your comment "// If num is greater than all numbers in the primes List, then num is not prime" Now, remember what the biggest number in your primes list is? Well, it certainly can't be bigger than the square root of BigFactor. What happens if BigFactor *is* prime, **and is also bigger than the square root of any other BigFactor's that the program has tried before**? Big spoiler: [your program will never, ever think that BigFactor is prime.](/spoiler) Edit3: Also, OP, you would be wise to do research on Project Euler problems before you try them. For example, you would have discovered [Eratosthene's Sieve](http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes) had you googled "Fast way to find primes", or something like that. This particular algorithm would have saved you buckets.
In some languages, it's required or else the number gets truncated to a 32-bit integer or the compiler complains. Funnily enough, the compiler complaining is the better option.
just for giggles, comment out all the code in your own event handler and see if memory use continues to rise.
Not to be a stickler, but why with all the other options out there?
I'm on my smartphone and reading code is horrible. But I am certain that the solution to this problem is not as complicated as you have made it. A complete soiltion is boring so i will give you a few pointers: * You should read up on the sieve of erastothenes. This a nice and very quick method to generate primes up to a certain bound. * There is a way to figure out an upper bound for the prime factors of any given non-prime number. Happy hunting :-) * If you generate all the primes lower than the bound received from the above function. You can traverse then in reverse order and find the first number that divides your number! It's the largest!
Hey makes sense, I just gotta ask. Thanks for sharing and valid reply.
....unless the object whose event you're subscribing to is shorter-lived than yourself 
Do not apologize in advance - make it better instead. Either post directly to the blog post, or post the entire post in your blog.
You don't need to check if even numbers are prime. After 2 they definitely aren't. Also you only need to check up to sqrt(n) to determine if n is prime.
Look at the trees and not the forest.
&gt;When the TIL expires, you get default(T) &gt;That's not true, if the item is expired your callback function will be called and the stored value will be updated. public TValue Get(TKey key) { ..... if (value.IsExpired()) { _store.TryRemove(key, out value); return default(TValue); } ..... } 
If there is only one keyword it would be more efficient to just use a while statement to read the file one line at a time and then use string.contains to determine if there is a match. This totally eliminates the need for regex, improves speed and reduces the amount of memory used (the entire file isn't stored) it could also easily be moved into an async thread to prevent the ui from locking on a really large file. Also, to OP, use openfiledialog to specify the location where the file should be read from. 
Also, by clicking on an error that is missing a reference and pressing ctrl period VS should automatically give you an option to add the necessary references! 
I had a colleague use this pattern extensively in our code and it was a nightmare. I don't see why she isn't using an interface to mask the accessor. Instead of the static method returning public static Result&lt;CoolThing&gt; Fetch(...) Why not extract: public interface IResult&lt;TThing&gt; { bool IsResult { get; } string ErrorMessage { get; } } and return that instead, from a factory? No need for "static" constructors at all and you keep encapsulation and don't hinder testing. 
I'm not checking if even numbers are prime. 2 is the first number that any possible prime is comparable by and if it fails that test against 2, it won't continue testing any other number.
This is true, but it is immediately tested by 2 and found to not be prime.
Try setting the TextBox's UndoLimit property to 0 (so no undo history is kept), by default it is set to -1 which will try to use available remaining memory. I remembered seeing something [similar to this stackexchange post](http://stackoverflow.com/questions/3336908/textbox-text-leaking-memory-in-wpf-application) a while back that had a similar problem. It is on a whim, but you set the text property in quite a few places in your code. Let me know if this helps?
I fixed it for you: private bool checkPrime(long num) // num holds the current bigFactor of the original number { int index; for (index = 0; index &lt; primes.Count(); index++) { if (num == primes.ElementAt(index)) { return true; // If num is in the list of primes, it is the solution } if (num &lt; primes.ElementAt(index)) { return false; // If the number at the current index of the primes List is greater than num, then num is not prime } if (num &gt; primes.ElementAt(primes.Count() - 1)) { return NaiveIsPrime(num); } } return false; // Sole purpose of this line is to make VS happy } private bool NaiveIsPrime(long n) { if (n == 1) return false; if (n &lt; 3) return true; if (n % 2 == 0) return false; long target = (long)Math.Sqrt(n); for (long i = 3; i &lt;= target; i += 2) { if (n % i == 0) return false; } return true; }
Can't post the same thing in two places. There are SEO penalties if you do that. I want Reddit pointed to my blog, not my company's blog. But I guess you're right ... I may as well just post to the employer, because it's less annoying than a click through. 
 public string SomeProperty { get; private set; } Readonly.
You still have the same logic bug. If you can't figure it out after pondering things for a few hours, let me know.
Mistitled - should lazy initialisation. Lazy loading means something quite different to me.
The program increases in memory use very rapidly when the function calls that are being repeated shouldn't be taking up additional memory.
I never knew about this. I will give this a try as the CurrAngle text box is changed quite frequently enough for this to be a problem if its history is maintained.
I'm fairly certain I know what the problem is and I'll be tackling it this evening when I get back home. I appreciate the help! :) 
I should have done this awhile ago. The same memory problem occurs when I comment out my class handlers.
So you're seeing a performance hit after 2 (ish) hours? You can ask the garbage collector to clean up with `GC.Collect()` but it's not guaranteed to do anything.
The longest test ran for 1 hour. I didn't know there was a performance issue until I tried running it again without restarting the program. The tests got shorter until incorrect operation and then I realized there was a performance issue when the GUI was unresponsive. Prior I just thought there was calibration issues. I'll try GC.Collect(), however, based on what I've read it would seem the GC should have become much more intensive when all memory is beginning to be page filed. I may have to rewrite the code to have less feedback when the position is not changing or being changed.
Seems like a decent idea... Assuming a 2d-array, one could basically say something like... "array(0,0) = some value from 1-9, continue on this row assigning all values as long as it's not already on this row in the array. Then for the 2nd row down to the 9th, check every other row's value for this column before assigning the value" This assuming a 9x9 grid containing 9 3x3 grids
I see now that this won't actually ensure that the 3x3 grids are valid...
That's normally my way as well, but with MVC(ish) code, there really isn't one main entry point. Typically I'd go to the master page or the default.aspx, and start looking at Page_Load methods, but alas, that is not the case here...
You can do a couple of things, the first and most common being a background worker, a second method would be initiating another thread using something like "Thread myThread = new thread =&gt; //stuff" and a third method would be using the new to net 4.5 async hotness. You can Google all this stuff for some more info 
sorry, I thought you are talking about the overload that takes a function, I'll fix this in the next release.
Lazy initialization is 1 strategy for lazy loading. [Lazy loading](http://en.wikipedia.org/wiki/Lazy_loading) I would agree that lazy initialization would be a better term to use since lazy loading is typically referenced in EF when performing lazy evaluation.
*Here's a bit from linked Wikipedia article about* [***Lazy loading***](http://en.wikipedia.org/wiki/Lazy_loading) : --- &gt; &gt;**Lazy loading** is a design pattern commonly used in computer programming to defer initialization of an object until the point at which it is needed. It can contribute to efficiency in the program's operation if properly and appropriately used. The opposite of lazy loading is eager loading. --- [^(about)](http://www.reddit.com/r/autowikibot/wiki/index) ^| *^(/u/jacerhea can reply with 'delete'. Will also delete if comment's score is -1 or less.)* ^| ^(**To summon**: wikibot, what is something?) ^| [^(flag for glitch)](http://www.reddit.com/message/compose?to=/r/autowikibot&amp;subject=bot%20glitch&amp;message=%0Acontext:http://www.reddit.com/r/csharp/comments/1v9td6/complete_guide_to_lazy_loading_in_c/ceqhc53)
I fixed the problem in another comment tree. Someone suggested calling GC.Collect() and this significantly improved memory usage of the program. It's currently been running for 6 hours and only at 140MB of memory use whereas before it would get to 400MB at one hour.
It's very strange how often it is not mentioned, however I don't necessarily frequent the forums where that would be mentioned. I noticed it on accident by treating it like microsoft word/chrome etc does with a spelling error and I saw the word "resolve" and I hit it and it fixed it...I was like "mother of god..." Before I had any idea how to code, I used to look for code snippits to edit, and I was only able to use the code where people entered the "using..." part for me. This opened up new doors for me to use any code I found and thus helped me learn to code even more since I had working code to manipulate and play with. I also have a manager who has coded in that language for more than 10 years who had no idea...He played it cool when I showed him, but I'm pretty sure he was thinking "doh..."
I think we in the .NET community tend to think of it in terms of the EF usage, but that the actual term is more in keeping with the author's, and with the referenced articles. 
May be useful to someone. Sorry I didn't read properly! 
Glad to hear you got it sorted.
Yep, basically...always wrap your Page_Load in if(!PostBack).
There is also [Effort](https://www.nuget.org/packages/Effort.EF6) - which executes on an in memory db.
once you have been fighting with this bug for several hours you learn from it, that's how I learned it. Since then that's the first thing I implement :)
This is pretty basic, but when I first went looking for how to do it, it was not 100% intuitive. Would love to hear if I have done anything stupid here. 
Haha yup. First time I've written anything in C# so I spent a good amount of time fighting stupid bugs and combing MSDN.
Thin wrapper around ConcurrentDictionary&lt;T&gt; - like it :)
As a dane, I'm not sure how to pronounce this. Cool project I'll look into it.
he may just wanted to have the 'o' look [spacey](http://i.imgur.com/sNQL40D.jpg)
I'll check it out with my team. Thanks
That would assume all the people who work on it have a local DB installed, which may or may not be the case. 
Obviously Pis trøm ;)
Yes, and it's MVC inserted into a traditional ASPX solution, so a hybrid of stuff. Extremely confusing. 
Remember that ? can be part of the ternary operator, the null coalescing operator, AND can mark types as nullable. That is surely the key to this little puzzle.
Just like it's spelled, although the strøm came from the Norwegian word for stream (current) and it's just a dash through the o different from the German word. Used that because PiStream would be kinda boring and the other guy who more or less had the idea and does the Linux testing is from Norway and I'm from Germany ^^
Nope, I explained it to the top post of this thread :P
And what does that mean? :P Explanation for name is under the top post of this thread
So use "? null :" With code added before or after the "? null :", and then remove the "null" and have the code compile ? 
I don't know if this is helpful but I found [this C# example code](http://stackoverflow.com/a/9103264)
Ahh, i see.
Sounds fun. I live the whole MVC approach. It uses C# too?
Post your code so we can help.
You need to store the oauth info you get back. You're going to either have to use a WebBrowser control and catching data from it or parsing XML and auto sending the YES links href data back.
1) You can make them "feel" like a member variable while still containing logic. Say you're writing a class that has a network connection. Typically Port will be an accessible member. What do you do if the user changes port mid-execution? You'll need to shut down the old connection and spool up a new one. So instead of exposing a member variable, you have to write a set function: void int SetPort(int). Then you'll need a getter so they can see it. int GetPort(). Or, in C#, you can make that member a property. It cleans your code up nicely, and Port = 80 is much more readable to me than SetPort(80) 2) Access levels (Read/Write only properties). What if you wanted to take the set function above away from users, but use it yourself? Well, you can write the same setter/getter functions above, or you can write public int Port { get; private set; } Your class is cleaner and you keep the native feel of the assignment operator. Now from the "consumer of the class" has a Port field which is read only. 3) For a member of a class to be serializable, I'm pretty sure it has to be a property. 4) Interfaces can define properties, but not member variables.
Fields are just variables embedded in a class/struct. While it's true they are usually hidden from the outside world, it's perfectly legal to have public fields: class Person { public int age; } var p = new Person(); p.age = 5; Console.WriteLine(p.age); // 5 Fields can be read from and written to (get and set) just like a normal variable. Properties, on the other hand, let you specify exactly what happens when they are read and written. The way the Person class now, the age could be set to anything: p.age = -42; Maybe you don't want negative ages, so you hide the age field (make it private) and only let consumers change it via a property: class Person { private int age; public int Age { get { return age; } set { age = value &lt; 0 ? -value : value; } } } var p = new Person(); p.Age = -5; Console.WriteLine(p.age); // 5 Often times, you don't care about changing how a value is get/set, you just want your class to have that value. That's what auto-implemented properties are for: class Book { public string Title { get; set; } } is the same as class Book { private string title; public string Title { get { return title; } set { title = value; } } } Properties are a nice little feature of C#. Java is a similar language which doesn't have them, so instead people write methods getXXX(); and setXXX(value);
Properties can also have calculations in them. So Age could be a dynamic calculation based off a birth date. Pretty much no absolutes :)
Clearly the way to solve this is to run the C# parser in reverse until it generates the sequence!
Oh I like MVC a lot! Just don't like how this mega-project was organized. Yeah, C#, do they still make vb.net? ;)
The good thing about properties is that you can have pretty much anything in the accessor methods. For example, if you have a class containing a Dictionary&lt;string, int&gt; values; field, you can have the following: public Dictionary&lt;string, int&gt; PositiveValues { get { return values.Where(kvp =&gt; kvp.Value &gt; 0); } } (It will be readonly, since it doesn't have a set method. So Dictionary&lt;string, int&gt; someVariable = anInstance.PositiveValues; will be valid and anInstance.PositiveValues = someVariable; will throw a compiler error.) Or if you have some fields private int anIntValue; private double aDoubleValue; .... and a DateTime lastChanged; field, you can do something like: public int AnIntValue { get { return anIntValue; } set { anIntValue = value; lastChanged = DateTime.Now; } }
Someone still uses it :) maybe
And the [original tweet](https://twitter.com/vreshetnikov/status/413379258283597824). Some hints appear to be: * "??" is a single token (not allowed), "bool?" is of two tokens "bool" and "?" (allowed) * Think about expressions.
&gt;Properties are a nice little feature of C#. Java is a similar language which doesn't have them, so instead people write methods getXXX(); and setXXX(value); Interestingly, properties in C# are converted to get_XXX() and set_XXX() methods when you compile. Which means that if you're doing something that needs higher performance (say, drawing) you should avoid properties because of the function call overhead.
My take on it is that the general difference between *fields* and *properties* is intent. Fields are used to imply class level variables and are for use internally in that class. Properties are used to imply external access to the class. By structuring your class in this manner you can tell by a quick glance how the class intends to be used.
Functions may get inlined. Trivial properties even get inlined across assemblies negating any function call overhead.
Properties are literally syntactic sugar for getter and setter methods. They are idiomatically identical to having void SetValue(SomeType value) and SomeType GetValue() methods. Fields are variables attached to an object or class (in the case of static fields).
A good analogy I heard is to consider a car. The volume of petrol in the tank would be stored as a field - your car doesn't indicate how many litres are actually available. You may have a Car with two private fields - fuelTankSize and remainingFuel - important to the car to function, but not important to you as a consumer. You would then have a property of PercentageFuelRemaining - this would be a calculation of remainingFuel / fuelTankSize. Properties are aspects of your object interesting to those consuming it. Fields are aspects of your object that it requires to function. Fields are also often initalized in the constructor, in the sense that the Object you're creating wouldn't meet the criteria of being that object without these parameters (fields). People use properties, especially mutable ones, too much, and should consider exposing methods to modify fields rather than just exposing a property.
No, I was trying to stay as basic as possible. I will check it out now, though! 
I just inserted it in text. Thanks
Hrm, This sounds along the lines of something I need to do
Not overly. I don't want to use an anon authentication. I'm thinking of buying an imgur licsenese for my startup to use. So i'd like to use my own auth to do what I need to do.
why is "??" not allowed ?? "?" + "? null :" = "?? null :" My reading of the tweet and the page indicates that this is allowed
&gt; if you want to make only the getter public. In older versions of C#, some programmers considered it best practice to make all fields private and make a property for each, but there are some subtle situations where this can actually cause problems. I would recommend using just fields until you find yourself actually needing properties. While it's true that there are *some* circumstances in which properties can cause degraded performance, such cases are incredibly tiny corner cases. Most simple property accessor/setter code will get inlined anyway. The idea that someone should default to public fields is quite ill-advised. You are *far* more likely to run into a situation where having something defined as a field will bite you than you are to run into a situation where having something defined as a property would cause a problem.
C# noob here too. As an old/recovering C++/Java programmer, the syntactic sugar is a welcome thing in many cases. Just to be clear on this, the custom with properties is to upcase the first letter of the name, as with (and to my knowledge *only* with) class names? And if you use the syntactic sugar, to refer to what's stored in a property (as from within a method in the class it's contained in), you use the property name too -- there is no separate internal member variable (unless you go to the steps of creating one on your own, thus undoing the brevity of the "get; set;" construction?
I think your best bet would be to use Array.Copy, in combination with manually creating the different arrays that you need. byte[] array = new byte[25]; byte[] newArray1 = new byte[7]; Array.Copy(array, newArray1, 7); byte[] newArray2 = new byte[8]; Array.Copy(array, 7, newArray2, 0, 8); Something like that.
&gt; This is why developers should have offices with doors that close (and the company should have hard and fast rules about violating that closed door, with the exception of building fires and maybe strippers). There's one big office at my workplace. Everyone has a desk in this massive office: sales people, credit controllers, admin folk. Everyone as well as us developers. If I want peace and quiet during a work day, I have to listen to a podcast or two via my phone and headphones. Because of this, I agree with you completely.
I've seen different styles of naming conventions. The current one that is used by my office is: Property: VariableForSomething Field: _VariableForSomething But there are various other styles that are acceptable. If you use the implicit get/set methods, then you do not need a private backing field. And yes, if you decide you want to use a field in conjunction you'll need to implement the get/set manually. e.g.: Public Class A { public int SomeVariable { get; set; } } Public Class B { private int _SomeVariable; public int SomeVariable { get { return _SomeVariable; } //add misc logic in here set { _SomeVariable = value; } //add misc logic in here } public void SetVariable(int SomeValue) { _SomeVariable = SomeValue; } } static void Main(string[] args) { A a = new A(); B b = new B(); B b2 = new B2(); a.SomeVariable = 5; b.SomeVariable = 6; b2.SetVariable(7); Console.WriteLine(a.SomeVariable); Console.WriteLine(b.SomeVariable); Console.WriteLine(b2.SomeVariable); } Output: 5 6 7
You can use Linq. var source = new byte[100]; var firstChunk = source.Take(10).ToArray(); var secondChunk = source.Skip(10).Take(5).ToArray(); 
Ask if you can expense a pair of noise cancelling headphones. I end up in another world with mine. Though prepare for people to throw pens and shit at you to get your attenion.
That's a fantastic idea. I don't mind getting hit by a pen or whatever, if it means that I can get my work done without getting distracted by Mavis' daughter's spelling bee results which, for some reason, need to be shouted across the office for everyone to hear, punctuated by folks laughing and shouting.
I like this approach because I think it's a bit more readable, but for raw performance, Wiezy_Krwi's solution is probably going to be a bit faster. I would also personally create some constants in a wrapper class around the initial byte array that takes in the array in the constructor, processes them, and chunks them into properly named properties using the aforementioned constants. Perhaps a lookup/dict on the name of the block of bytes.
Before I switched to 100% remote work, I used to leave my headphones on (giant ear cans) regardless of whether or not I was playing music, so that people would feel bad for interrupting me.
So many words. http://i.imgur.com/PtMx9GJ.png
This does not make any sense.
I think it might be a joke. I'm not sure, though.
awesome, this one looks slightly more efficient than the other method, but I'll be giving them both a go on Monday! cheers for the response!
I actually threatened to quit this week because of several noise complaints by me going mostly unnoticed. It is not acceptable for more than 4 hours a day that I should be able to hear other conversations while I am working. This was actually causing a ton of stress for me, and just made me end up working 12 hours a day (4-5 at home) to try and meet deadlines. I am now sitting in the an abandoned basement office area of a skyscraper to actually get my work done and it is amazing. My stress is down a lot and the urge to scream at everyone is pretty much gone. I will NEVER work in a noisy environment again. Being forced to come into the office when you have no meetings and when you can be more productive at home is enough, but being forced to endure constant interruptions is enough to drive you crazy.
I can't see it, I get redirected to some kind of login form.
Microsoft has their own [Captialization Conventions](http://msdn.microsoft.com/en-us/library/ms229043\(v=vs.110\).aspx) What you said is correct. With regards to sugar, yes, you use use the property name. There is technically a member variable associated with the property, but it's generated by the compiler, will be named something crazy, and you're not even supposed to think about it anyway...
Maybe... he's the joke?
Ah, sorry, I should have explained what I meant there. The problems I was thinking of were semantic issues with modifying the fields of structs returned from properties (that is, you can't do it) or the inability to pass properties as ref or out arguments. As you mentioned, the performance cost of properties is quite low. As for fields coming back to bite you, I can't really think of a good situation where that's the case, as you can almost always just change a field into a property.
If you're modifying the value of a struct to begin with, you're already into some perilous territory. There are certain cases where that level of control is needed (normally in high-performance graphics development), which is one of the corner cases where that's true. And yes, it's true that you can't pass a property as a `ref` or `out` argument. No argument from me there, that's definitely an issue, though *most* functions that use `ref` or `out` arguments could *probably* benefit from a structured return value type anyway. But that's a discussion for another day. Anyway, here are a couple of reasons why changing a field into a property after the fact can have unforseen issues: * Consuming code must be recompiled. *Probably* not a big deal, especially if this is an internal library, but it's still a consideration * Any reflection-based code that deals with that member will break Additionally, fields cannot be used with any data binding mechanism that I'm aware of (WinForms, WPF, or ASP.NET MVC). They all require properties.
LINQ is almost never the most efficient way to do something. Often the performance implications aren't significant, but for this I would definitely stick with Array.Copy.
Care to post your benchmark code? I just gave it a shot, and I'm coming up with ~50-80x faster for Array.Copy with the following code: private static void Main() { const int CHUNK_LENGTH = 16; byte[] data = new byte[CHUNK_LENGTH * 2]; byte[] chunk1 = new byte[CHUNK_LENGTH]; byte[] chunk2 = new byte[CHUNK_LENGTH]; Random r = new Random(); r.NextBytes(data); Stopwatch sw = Stopwatch.StartNew(); for (int i = 0; i &lt; 102400; i++) { chunk1 = data.Take(CHUNK_LENGTH).ToArray(); chunk2 = data.Skip(CHUNK_LENGTH).Take(CHUNK_LENGTH).ToArray(); } sw.Stop(); Console.WriteLine(sw.ElapsedMilliseconds); sw.Restart(); for (int i = 0; i &lt; 102400; i++) { Array.Copy(data, 0, chunk1, 0, CHUNK_LENGTH); Array.Copy(data, CHUNK_LENGTH, chunk2, 0, CHUNK_LENGTH); } sw.Stop(); Console.WriteLine(sw.ElapsedMilliseconds); sw.Restart(); for (int i = 0; i &lt; 102400; i++) { Buffer.BlockCopy(data, 0, chunk1, 0, CHUNK_LENGTH); Buffer.BlockCopy(data, CHUNK_LENGTH, chunk2, 0, CHUNK_LENGTH); } sw.Stop(); Console.WriteLine(sw.ElapsedMilliseconds); }
The most jarring question I get is my manager walking up and asking "what are you working on." He wants to know the client/job. I don't even know what the larger problem is that I'm trying to solve at that moment, and I have to completely unwind my mind to figure out what I'm doing in the context of what he's asking.
You're right. I looked back through my test code and I had a bug (.Take() without .Take().ToArray()). Fixing this bug it is more in line with your test. 
It's easy to overlook just how streamlined Linq can make this kind of thing. If I understand right, I think this is all you need. return Source1.Concat(Source2).Concat(Source3).All(n =&gt; Validate(n)); There's nothing wrong with IEnumerable&lt;IEnumerable&lt;int&gt;&gt; in my opinion. There's a bit of code smell there but if it's the most straight forward and efficient way to accomplish what you need then it passes the most important test regarding good vs. bad practice.
I'm stuck between loving all the tools and capabilities current languages and IDEs give us... and trying hard not to worry about what's going on behind the curtain. :) ETA: New capitalization conventions. Joy. I can handle picking up new syntax, tools, etc., but capitalization? We should really have a programmer thunderdome at some point to settle the question once and for all.
Good clarifying info. Thanks. I'll note that having just now peeked at Microsoft's [Capitalization Conventions](http://msdn.microsoft.com/en-us/library/ms229043.aspx) they say, "Do not use underscores to differentiate words, or for that matter, anywhere in identifiers." I'm not going to follow that either. :)
I wish that worked. Where I work, I get about ten minutes of peace after putting headphones on before I'm interrupted with something. It pisses me off a bit to be honest, because I can leave the headphones off and put up with the noise, and no body will bother me all day.
More often than not, it's better to have the tools than not. If you really want to know the behind-the-scenes of C#, John Skeet's book, *C# in Depth* gives a very good tour of the language, from where it's been to where it is now, and what goes on behind the scenes.
I think those logic problems with the names on the horizontal and the vertical with grids connecting them might be better. You have to keep a decent amount of information in your head to solve them... If Suzy is older than her boyfriend and Hans is ten years younger than her and her favorite color is purple....
I know I missed a lot of things, but I was asked to create a starter course for students whether they are becoming programming majors or not. That's why there's some important things missing, e.g., threading. It gives a good introduction, and if you want to continue, you can learn about the other things afterwards. I also made sure that both courses covered as much as possible the exact same material in both C# and Visual Basic. If you see mistakes, please let me know so I can create an update video!
I think this belongs in /r/unity3d, but onto the problem, are you aware OnGUI() may be called more than once per frame in Unity? It's a common gotcha and their documentation only mentions it in passing. For this reason it's best to only run code for specific GUI events in OnGUI(). http://docs.unity3d.com/Documentation/ScriptReference/MonoBehaviour.OnGUI.html
Ah, I wasn't sure since it's supposed to be C# anyway. Thanks though!
I don't disagree with you
I highly doubt that this would come preinstalled onto SteamOS... My guess is that it would not be impossible to install, but it'd be surprising if it came with the OS.
Your first problem is that you thought it would be a really great idea to post a screen shot of the code... 
wat
AH, I WASN'T SURE SINCE IT'S SUPPOSED TO BE C# ANYWAY. THANKS THOUGH!
Why exactly would it not work? Steam OS is based on Debian Wheezy. If mono isn't in the repos (highly doubtful), then install it from the Debian repos. There's a desktop mode in Steam OS where you can do all your normal non-gaming tasks, so open up a terminal there.
While sitting in the couch watching TV and surfing reddit on my laptop I stumbled upon this post.
Even more terse, you can make it: return Source1.Concat(Source2).Concat(Source3).All(Validate);
Mono is a default in a lot of installs now so it could be, even if it is not by default it might end up on the system due to installing a game running Unity3d requiring .NET.
I am not familiar with that DLL, but given that it is Silverlight, which is deprecated, I would not use it. I think there is a version in .NET 4.5 in the System.Json namespace, but I'm not sure: http://msdn.microsoft.com/en-us/library/system.json.jsonobject(v=vs.110).aspx That said, I wouldn't use either of those. I would highly recommend using Json.NET (previously known as Newtonsoft.Json): http://json.codeplex.com/ Json.NET is a lot faster, has a bunch more features, and integrates invisibly into pretty much every framework under the sun. To answer your original question, to add a DLL: Right-Click the project -&gt; Add Reference -&gt; Navigate to dll (either locally or in NuGet).
I spent a while struggling with JSON as well and most of the provided libraries are terrible. Right now im using System.Web.Helpers.Json like so &gt; // Json.Decode creates a dynamic object that is navigable exactly like the json structure &gt; dynamic jsonObject = Json.Decode(jsonstring); &gt;// So now you can do fun stuff like this &gt; string name = jsonObject.name.ToString(); &gt; // Or if you want to retrieve a list of objects &gt; var dynlist = ((IEnumerable&lt;dynamic&gt;)jsonObject.listobject).ToList(); If you want to use it in winforms you'll need to add the reference to System.Web.Helpers Edit: here's an example of a method i use it in. This retrieves the current list of Twitch.TV ingest servers http://pastebin.com/Q2isgHKx
Json.NET is industry standard. You should definitely learn it and use it always. The native JSON parser, ie JavascriptSerializer, is a very slow and inefficient.
Gotta love the JIT compiler. :D
Yeah that's a damn good point. I mean that's not even unnecessarily terse, it's just simpler. I tend to forget that not all Linq extension functions have to be lambdas.
Json.NET is what is included in MSFT packages now. All of the Azure libraries use it.
ok
Yes
How completely unhelpful you are! Congrats. You've achieved the asshat award!
wat
AH, I WASN'T SURE SINCE IT'S SUPPOSED TO BE C# ANYWAY. THANKS THOUGH!
You should use pastebin or stack overflow. 
I'm not looking for someone to write the code for me. Just look at the image and tell me where I actually went wrong. Also, posting it at a screenshot wouldn't be the first place I went wrong. It was the last thing I did, so technically it would be the last thing I did wrong.
I think you're after something like this: public partial class Form1 : Form { DinnerParty dinnerParty; public Form1() { InitializeComponent(); dinnerParty = new DinnerParty(); } public void CheckBoxFancyDecoration_CheckedChanged(object sender, EventArgs e) { if (CheckBoxFancyDecoration.Checked) { dinnerParty.SetHealthyOption(true); } else { dinnerParty.SetHealthyOption(false); } UpdateCost(); // ADDED } public void numericNumberOfPeople_ValueChanged(object sender, EventArgs e) { dinnerParty.NumberOfPeople = (int) numericNumberOfPeople.Value; UpdateCost(); // ADDED } // ADDED void UpdateCost() { LabelCost.Text = dinnerParty.CalculateCost().ToString(); } } This isn't how I would do it, but it should point you in the right direction.
Awesome thanks man. I'm on the bus now but I'll be able to play around with it a bit more later tonight and I'll probably have some more questions. 
Just trying to point out that OP could have left his life story out of the topic and just said "Great youtube channel covering a wide range of c# topics."
I disagree, the keywords 'preparing for an interview' sometimes trigger doubt in peoples confidence they know the ins and outs of their profession, I think it might make people click the link where without it they would have browsed onward and forgot about it.
Well, I have to say, I've spent the afternoon playing with Json.NET and I _absolutely love it_! I've really just scratched the surface of what it can do as I'm just using the Parse() method to pull out a few values but even that just seems easier than some of the alternatives. I can't wait to dive into the meatier stuff.
http://i.imgur.com/7o8IpAl.gif
touche.
I disagree. I know the ins and outs of what managers want to hear in a networking job interview, but no clue when it comes to the programming side. I think it would be good for nubs like myself 
Or a xna game like terraria
So much this.
Wait... what are you disagreeing with again?
You are making the right choice. Json, which is used in REST, is becoming the most popular alternative for webservices and simple datatransfer in general.
I don't think he said what you think he said.
YAYYYYYYYYY!!!!! :D
its likely available in the debian repos (though not the most recent versions) as well as buildable from source from mono-project.com. You may also be able to use the launchpad.net repos to get the latest version compiled under the ubuntu repos. I've used https://launchpad.net/~ermshiperete/+archive/monodevelop to do .net under ubuntu. It may work if you point your debian repo sources to use it.
I would recommend you post this question to Stack Overflow. It is much better at getting answers to problems such as these.
I posted there, too. No replies yet though.
Yeah that was one of the first things I checked, the connection is fine.
In your model for ExchangeSessions, what type are you using for OpeningTime, ClosingTime, etc.?
Found this on stackoverflow which sounds similar to your problem: http://stackoverflow.com/questions/19957127/how-to-map-time0-to-datetime-with-entity-framework-6 
If this is a development database I'd suggest you this: Delete the database, let EF recreate your model. To detect the changes in your model it does not compare the current database structure, but rather a binary value stored in the __MigrationHistory with your data model. It is **very** easy to fuck something up with this.
You should really take a look at Newtonsoft.Json (aka Json.NET). It's the defacto standard for handling JSON in C#. It's also being used by all modern Microsoft libraries, and the api is very simple.
Technically true, but that means as much as saying IE6 isn't deprecated yet (soon!). I believe support for Silverlight 5 will continue until 2021, but I would not code anything new in Silverlight. And I especially wouldn't link to a Silverlight dll outside of the Silverlight context when there are better options available.
e: nevermind. 
So it still builds but whatever ProductVersion.targets does doesn't work? You can debug by using the [Message](http://msdn.microsoft.com/en-us/library/6yy0yx8d.aspx) task. &lt;Message Text="SomeProp=$(SomeProp)" /&gt; Cranking up the msbuild verbosity might help too. Is it possible the import order changed, especially the order of your code relative to Microsoft.CSharp.targets?
Readability is worth some performance ;-) I will keep your approach in mind, but these kinds of code structures are always very specific, so (as already mentioned in the thread elsewhere) I would construct a nice wrapper (method or class, depending on frequency and complexity), and that can have some ugly code, as the rest of your code base is not affected.
Yes, not to mention MonoGame that is successor of XNA since MS shut it down.
Unfortunately HTML5, JavaScript and CSS mixture is still far away from being a better option than Silverlight.
I can't seem to find any log generated by Csharp, also with verbose mode I am not finding anything ( I am still digging though, will post solution if I find it :) )
[BinaryReader](http://msdn.microsoft.com/en-us/library/System.IO.BinaryReader.aspx) &gt;The BinaryReader class provides methods that simplify reading primitive data types from a stream. For example, you can use the ReadBoolean method to read the next byte as a Boolean value and advance the current position in the stream by one byte. The class includes read methods that support different data types. 
SOLVED. We switched to a new machine and I forgot to install Microsoft Build Community Tasks https://github.com/loresoft/msbuildtasks/downloads In conclusion so far the .csproj files work the same
That path is a shadow copy (AKA "Previous Versions"), that would make the file in that path, and the other path different if the files changed between the shadow copy and now! Does your user intend to open the previous version of the file or the current one?
If after this you still want the current file, use pathString.Split(Path.DirectorySeparatorChar), check if it's a shadow copy path (localhost, drive$, @time), pick out the drive letter and path from there, and recombine using Path.Combine().
If your timer is running too fast for your device, you should moderate it based on the device response. Stop the timer after you send request, start timer again when you receive the response. You can also combine this with a semaphore to let you have a maximum of N outstanding requests if processing one at a time is not fast enough for you.
You could potentially use the async and await keywords that are available. Here is an example that simulates 5 requests with a random wait time of 1-8 seconds. Each execution is spun off into a separate thread to mimic multiple requests. I will caution you on this approach, when you start getting into threading and async calls it can get... hairy. Be aware that in this example I make NO accounting for race conditions, which you will need to do if you take this approach. If you are using windows forms for your project you WILL need to invoke back to the UI thread before updating the values in your UI. I am not sure how that works with WPF, but I am sure there is some sort of invoke or dispatch you will need to use. public partial class Form1 : Form { public Form1() { InitializeComponent(); for (int i = 0; i &lt; 5; i++) { Task.Factory.StartNew(DoQuery); } } public async void DoQuery() { string result = await SerialCommunication(); PublishResult(result); } private void PublishResult(string result) { if (InvokeRequired) { Invoke((MethodInvoker) delegate {PublishResult(result); }); return; } textBox1.Text += result; } public async Task&lt;String&gt; SerialCommunication() { var r = new Random(); var random = r.Next(1000, 8000); Thread.Sleep(random); return Path.GetRandomFileName(); } }
&gt; when you start getting into threading and async calls it can get... hairy Yup. I wanted to bash my head against the wall when I found how heavily Metro apps use async and I couldn't effectively debug them with VS2012...I made it a point to get VS2013 when it came out just for the improved async debugging although I do resent MS a bit... &gt;I am not sure how that works with WPF I'm using Forms although the Invoker does exist in WPF, or you can use BindingOperations.EnableCollectionSynchronization in .net4.5+ Anyway, I like your approach although I'm using a library I wrote to query the serial port, and I haven't added any async functionality in yet because I use the library on .net 4. I might as well add async in considering I've just dropped Windows XP support(I've had issues with the async targeting pack on that note) . 
its hard to say what a user might do, but I have to be able to handle valid files they through at me. Interesting insight into the file though.
I use something similar in a 3.5 project that can't currently be upgraded, and needs to call out to several different external sources (hardware, files, web, etc). I disable the timer at the top of the elapsed / tick event, and then re enable it at the end of the event (in a "finally" just for safety). This prevents the timer from re-firing if the event takes a long time, and it self regulates speed based on the length of the external calls (I run this one at a 100ms tick). 
My boss is a developer. He send an email Monday at 5:00 am asking for what the team is working on that week. Due Wednesday at noon. Things may not be perfect where I am, but that is ideal. 
Kathleen Dollard gave an interesting talk on dotnetrocks recently about Roslyn. I am definitely looking forward to seeing what it can do, though she was selling it like mvp's do. Is that blog mainly focused on vb.net or does the author plan on covering csharp too?
This is something that the Reactive library would be very good at solving. I read [Intro to Rx](http://introtorx.com) in half a Sunday (more or less). // forgive any errors, I'm typing this without a compiler // somewhere, not in the GUI layer var o = Observable.Create(obs =&gt; { // there are better ways of killing an observable sequence, but this *is* just example code... while (not_done) { var val = RS232Instance.GetValue(); obs.OnNext(val); } obs.OnCompleted(); }); // elsewhere in your GUI code o.ObserveOnDispatcher() .Subscribe(val =&gt; { // update GUI using val // note that 'val' here is the same 'val' as above in Observable.Create }); I would say I'm somewhere in the "intermediate" level of Rx programming, so there may be a better way of doing things (especially considering I know nothing about your particular app), but this is how I imagine things will work.
That entire string is 1 token, not the colon then null than question mark token sequence.
I've always wanted to learn Rx...I'll give it a shot. 
yes, to what?
What was the purpose of this post? Is there a question in there? Do you want to share some code? Do you need help? That's what everyone's wondering...
I think you missed the point, or maybe question, I am not sure. Maybe you are after some type of recognition?
Hi John Snape! I'll have to check this after work cause you got audioooooo
No. Edit: Maybe.
Its only required IE 10 since RTM (or very shortly after). This removes that requirement as well.
The .NET framework provides a few classes you can use to do this. From most to least popular: * [WebClient](http://msdn.microsoft.com/en-us/library/system.net.webclient.aspx) * [HttpWebRequest](http://msdn.microsoft.com/en-us/library/system.net.httpwebrequest.aspx) * [HttpClient](http://msdn.microsoft.com/en-us/library/system.net.http.httpclient.aspx) * [TcpClient](http://msdn.microsoft.com/en-us/library/system.net.sockets.tcpclient.aspx) Each one of these classes is capable of consuming a RESTful endpoint. How much flexibility you need and how much the API provides is up to you based on the type of class you use to access the resource. IMO the top two options tend to have the best methods for consuming a RESTful API. That said, other REST API's may be better suited to consumption, it is important to note that some API's just reuse the classes above, take a moment to read some of a project's source to understand what is going on before running to use it. [This recent blog post should help some as well](http://blog.anthonybaker.me/2013/05/how-to-consume-json-rest-api-in-net.html) 
I'd definitely go with HttpClient. I wrote an OData wrapper using it within a couple of hours of learning of it. 
oh, ok, thanks. I will try it then. 
Same as /u/hdsrob, I am using 2010 on my Vista laptop with no trouble. I tried to backdoor 2012 on there once and didn't have any luck.
Fuck it, spending $50 on that book is idiotic: http://kickass.to/beginning-visual-c-2012-programming-v413hav-t7000992.html
Why are you using a deprecated OS may I ask?
lack of ££ and $$$ and €€€ 
ok, thanks for the confirmation. I will try to download and install tomorrow.
Yes, you can. Also there are certain things that VS2008 does, but 2010 and 2012 do not do (notably Compact Framework 3.5 development)
If you've got the basic structures of the language down (if statements, for loops, foreach loops, Generics, LINQ, classes and inheritance) then you are ready to dive into MVC. One area you may stumble on is database access. You may want to spend some time brushing up on Entity Framework. But that can also be learned at the same time as MVC. 
Great! I put a lot of work into the courses (VB and C#) and hope you learn a lot from them! Thank you!
Ah "Consuming" is the word I am looking for. I need to Consume the existing endpoints on their server. I know about those classes in the .Net FW i usually would use HttpWebRequest and thanks for that Blog post it was informative. Would you know why my senior would have suggested using WebAPI for this task? (I know you cannot use it fort this, but maybe there's some architectural insight I am missing) 
My largest leaps of knowledge have been the times that I've jumped into a project without knowing anything more than what I wanted to create. Hop into the fire and treat any obstacle as a learning experience. The forge makes the iron malleable, but being struck against the anvil is what shapes it. So go for an MVC tutorial. Maybe you need to strengthen yourself in a few parts of the language. Maybe that's good, but not your OOP skills. How will you know until you try? How will you know what areas to improve until something highlights them for you?
Yep, sure. The course I focused on dedicated about half the time to OOP principles (inheritance, abstract classes, interfaces, static members, etc.). Any good MVC tutorials?
If I were you I'd get stuck into a project and use Just In Time Googling to learn things as you need them. On an unrelated note you can consider a delegate to be the variable type you use to store methods. There are a few other things to know (delegates are multicast, what happens when exceptions are thrown) but I think that's the main gist.
Probably doesn't want .svc in the url :) &gt;Here's a snippet of code I wrote to consume a service if you want it. //Contact the webservice private string GET_JSonResponse(string Operation) { string JSonResponse = ""; try { //set up request string url = apiURL + Operation;//WEBSERVICE OP CALL HttpWebRequest GETRequest = (HttpWebRequest)WebRequest.Create(url); GETRequest.Method = "GET"; GETRequest.Headers.Add("user_key", user_key);//authenticate user_key in header for access (login) //send request HttpWebResponse GETResponse = (HttpWebResponse)GETRequest.GetResponse(); Stream GETResponseStream = GETResponse.GetResponseStream(); StreamReader sr = new StreamReader(GETResponseStream); //read response JSonResponse = sr.ReadToEnd(); } catch (Exception ex) { //capture error lastErrorMsg = ex.Message.ToString(); } return JSonResponse; }
oh damn, you guys are the most helpful people I have ever met. Cheers.
Why don't you order it from Japan, when you don't lack ¥¥¥?
Looks pretty good, I am working on a project right now where I could use this.
LOL
Hi Flaccidicus, I am looking to implement some string search enhancements like Soundex support, Levenshtein support and fuzzy searching, so it is definitely in the pipeline. 
Glad to be of help. You can download the package from nuget currently. Simply search for NinjaNye.SearchExtensions. Remember to keep checking for updates though as it is still a young project.
I will once I get a license sorted out (in the near future), so please feel free to fork the project and get involved. I'll update my blog when and tweet when I finally get this sorted
You might want to include some comments about performance tuning for your queries... if it's possible... Just looking at the length and string substitutions, I'm curious what the query / execution plan is going to look like... with large tables, I would wonder if the query would end up crushing the server.
For consistency, I'd change the signature for SearchOneField (field, then search term) to the same order as SearchMultipleFields (term first, then fields).
actually... no longer sure... the multiple syntax options (multiple terms / one field) almost make consistency difficult.
I have been contemplating that but there is also a SearchMultipleProperties (term first, then fields) method I agree the Method signatures do need further thought. Then once you get into the Enumerable extensions I add StringComparison into the mix...
Yeah, it is a real headache... If you have any inspiration, please let me know
I use [RestSharp](http://restsharp.org/) to access a rest server written in Delphi. It is very flexible and still very easy to get started with. I highly recommend it. WebAPI is a server framework. It is actually an extension or specialization of the MVC framework specifically for making REST services. And yeah, you can't write clients using it.
You'll want to do this in your event function: var dbCommand = new SqlCommand( "UPDATE Employees SET StationAssignment = @StationAssignment WHERE ([Employee ID] = @ID);", new SqlConnection("YourConnectionString") ); dbCommand.Parameters.AddWithValue("@ID", 6); dbCommand.Parameters.AddWithValue("@StationAssignment", null); dbCommand.Connection.Open(); dbCommand.ExecuteNonQuery(); dbCommand.Connection.Close(); If you plan to do anything non-trivial with your data, you'll want to look into the [entity framework](http://msdn.microsoft.com/en-us/data/jj200620) and skip the sql commands. 
Sounds to me like your issue is with connecting from C# to SQL. Look into System.Data.SqlClient.SqlCommand and SqlConnection. Can't go into details as I'm on my phone. 
I'm going to be curious of your impressions of visual studio after you get used to it. Every time i try to do lamp I feel like I've entered the dark ages (and don't flame me, i realize 1000s (millions?) of people are quite happy there, i'm not trying to knock it)
Hello dregan: I inserted your script into my event function. The following came up in my error list: Error 1 The type or namespace name 'SqlCommand' could not be found (are you missing a using directive or an assembly reference?) Do I need to declare SqlCommand someplace??? Thanks again - Pavilion 
You need to include the System.Data.SqlClient namespace to use these clases: using System.Data.SqlClient; generally, if you don't know where a class is defined within the framework, you can google the class name to find out. EDIT: Also, you will have to replace YourConnectionString with the connection string to your database, for the northwind database, it may be something like this depending on how you have it set up: Data Source=.\\sqlexpress;Initial Catalog=NORTHWND;Integrated Security=True;
Just to keep terms right, ASP.NET will certainly not teach bad habits. I believe you are referring to web forms. [Here's a little image to help distinguish.](http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Making-Web-APIs-with-ASP.NET-MVC-4-Beta_BEA5/image_04e87be2-544a-4de4-bcdd-e97d206c45bb.png) 
Touché. I was thinking of/referring to Web Forms.
Or use [Dapper](http://code.google.com/p/dapper-dot-net/) if you want to keep using SQL but make it easier to use parameters and map query results to classes.
I wrote a little service which uploads an image via the API. You can see the source here: https://github.com/brpeanut/Snippur/blob/master/WindowsImgur.Core/Services/ImgurService.cs First thing is the make sure all them headers are set right. I'm assuming it's sending you to the front page because you're sending a GET instead of a POST. Also, I'm using "Client-ID", opposed to "Client_ID". 
There is actually still a very high demand for VB. Source: A very recent (last few weeks) round of interviews.
I'll give this shot. thanks
The null reference is certainly the connection string. If you mouse over the ConnectionStrings dictionary that you referenced above while debugging, it's likely that you won't find a "LocalDB" key. You need to decide or figure out how you are going to connect to the northwind database. The example connection string I posted assumed that the north wind database was hosted in SQL server. Do you have experience connecting to this SQL database on other languages? If so, how would you do it? This isn't a CSharp issue, it's a connection string issue.
Dregan - thank you. You're right it's a connection string issue. Sorry I figure that out after posting. So... the Northwind Database seems to be local. When I set up Visual C# 2010 Express, I researched how to use Northwind with it. In following instructions, it seems to have put Northwind right in Visual Express. Within my solution pane there is a database icon with Northwind.sdf next to it. As I mentioned earlier - the string you offered earlier triggers a whole slew of errors. So ... if Northwind is local (within the solution itself) how would I define the connection String?
VB6 .... My Vista install is a VM for a client, and I have a few more months of development before completely retiring their VB6 code (the end of an 8 + year migration). They have 20+ third party COM components, and at least a dozen .NET ones. The COM bits make it beyond painful to set the environment up (some of the vendors don't even exist anymore). Once we retire the VB6 code, the .NET stuff will all go to a new Win8 VM. 
Then you need to change it. Remove the parameter (decimal TotalCost) and declare the variable in the function. like this: public decimal CalculateCost() { decimal FoodCost; decimal TotalCost = 0; 
This subreddit has programming challenges of varying difficulty that might be helpful: http://www.reddit.com/r/dailyprogrammer
You've got a couple problems here. First, you're calculating the cost in the setters. public bool SetHealthyOption(bool Healthy) { if (Healthy == true) { CostOfBeverages = 0; CostOfBeverages = (5 * NumberOfPeople); } else { CostOfBeverages = 0; CostOfBeverages = (20 * NumberOfPeople); } return Healthy; } Instead of calculating the CostOfBeverages here you should just be storing the value of Healthy. Second, take a look at your CalculateCost method. Notice these lines? if (SetHealthyOption(true)) if (CalculateCostOfDecorations(true)) No matter what the user has specified you're overriding their value and setting it to true. &gt;Why do I have to put a 0 in for CalculateCost()? The reason you have to pass a 0 into CalculateCost is the method signature. public decimal CalculateCost(decimal TotalCost) Because the method is asking for the argument TotalCost. Since the method immediately sets it to zero you can remove TotalCost as a parameter and just declare it inside CalculateCost.
Download Server management studio for db work as well
Sounds like you are missing the Json.Net library. 
I was not aware of this project. I normally use NHibernate for legacy databases that don't support the Entity Framework but this looks like a much simpler solution that is still supported.
PluralSight.com has a ton of great tutorials for $30/month. It's a worthy investment for anyone who wants to become a serious programmer.
Maybe your instructions have you doing some really weird requirements but, and not to be a dick, the logic you're using to come up with this seems really weird. edit: I couldn't figure out everything based on what you've got there but this is pretty close.. Where did you get the totals from? Based on what you got a single person with both unchecked should be: 25 (food for one) + 5 (unhealthy beverage for one) + 30 (added cost for not fancy decoration) + 7.5 (unfancy decoration for one) = 67.5
how would you say xamarin compares to vs? I'm kind of interested in doing some C# development for android or Linux or something. 
what do you mean by "every time I try to do lamp"? 
I was being a bit facetious, but I'm sure there are projects out there that still use it, they just seem to be few and far between. I spent 10 years at Microsoft and we never once used it, or any groups that I worked with. My understanding at the time was that it really was for legacy apps written in VB. 
Linux Apache MySql Php Occasionally I have to help with or update a few files within this realm. I don't do it often, but it seems like every time I do, I need to get this patch and that patch to be current. Maybe if thats what I worked on everyday instead of VS/MSSQL/IIS, I wouldn't feel that way, that's why I am sincerely interested when people are headed the other way... do they feel the same about visual studio? 
DinnerParty.cs: using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; namespace DinnerParty_Form { class DinnerParty { private bool healthy; private bool fancy; private int peopleCount; private decimal costOfBeverages; private decimal costOfDecorations; public DinnerParty() { costOfBeverages = 5; costOfDecorations = 7.5M; healthy = false; fancy = false; peopleCount = 0; } public DinnerParty(bool Healthy, bool Fancy, int PeopleCount) { costOfBeverages = 5; costOfDecorations = 7.5M; this.Healthy = Healthy; this.Fancy = Fancy; this.PeopleCount = PeopleCount; } public decimal TotalCost { get { return CalculateCost(); } } public override string ToString() { return TotalCost.ToString(); } public bool Healthy { get { return healthy; } set { if (value == true) { costOfBeverages = 20; } else { costOfBeverages = 5; } healthy = value; } } public bool Fancy { get { return fancy; } set { if (value == true) { costOfDecorations = 15; } else { costOfDecorations = 7.5M; } fancy = value; } } public int PeopleCount { get { return peopleCount; } set { peopleCount = value; } } private decimal CalculateCost() { decimal TotalFoodCost; decimal TotalDecorationCost; decimal AdditonalCosts; if (Fancy) { AdditonalCosts = 50; } else { AdditonalCosts = 30; } TotalDecorationCost = (costOfDecorations * PeopleCount) + AdditonalCosts; TotalBeverageCost = (costOfBeverages * PeopleCount); TotalFoodCost = PeopleCount * 25.0M; Total = TotalBeverageCost + TotalDecorationCost + TotalFoodCost; if (Healthy) { Total = Total * .95M; } return Total; } } } 
Form1.cs: using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows.Forms; namespace DinnerParty_Form { public partial class Form1 : Form { DinnerParty dp; public Form1() { InitializeComponent(); checkBox1.Text = "Healthy"; checkBox2.Text = "Fancy"; label1.Text = "$0.00"; button1.Text = "Calculate"; dp = new DinnerParty(); //dp = new DinnerParty(true, true, 12); //label1.Text = dp.TotalCost; } private void checkBox1_CheckedChanged(object sender, EventArgs e) { dp.Healthy = checkBox1.Checked; label1.Text = dp.ToString(); } private void numericUpDown1_ValueChanged(object sender, EventArgs e) { dp.PeopleCount = (int)numericUpDown1.Value; label1.Text = dp.ToString(); } private void checkBox2_CheckedChanged(object sender, EventArgs e) { dp.Fancy = checkBox2.Checked; label1.Text = dp.ToString(); } private void button1_Click(object sender, EventArgs e) { label1.Text = dp.ToString(); } } } 
http://en.wikipedia.org/wiki/Recursion
Check out Microsoft Virtual Academy!
Have you looked at the links in the side bar?
I haven't, unfortunately I was on my phone when posting this. Thanks though, I'll be sure to check them out
I'm using Roslyn (CTP) in a small personal project. It's surprisingly featured right now.
I tried being a bit more verbose to demonstrate how to do various things. &gt;plus you had the healthy beverage costs reversed. Whoops! Figured the healthy ones would be more expensive! 
Of all the presented features, ?. by far looks like the best reason to upgrade. Finally an elegant solution to the cascaded null checking problem.
Is Roslyn included in Visual Studio 2013?
No, but IIRC they did mention that VS 2013 makes it easier to change the compiler, which is why they were waiting for it to release another preview.
&gt;Figured the healthy ones would be more expensive! I was thinking the same thing until I realized perhaps unhealthy = alcoholic. 
[mmmm beer](http://media4.s-nbcnews.com/j/streams%5C2012/April/120412%5C322737-tdy-120412-simpson-beer.blocks_desktop_medium.jpg)
YESSSSS
First, create a class called Sphere. It will need a Property/Field to hold the radius (I would name it Radius). It should have a constructor that takes in the radius. I would store the radius as double type since the .Net Math library uses double often for its return values. In your Main method I would use "Console.ReadLine" to read in a line from the user, prompting them first with Console.WriteLine to describe what you want. the "double" type has a method called "TryParse" that returns a Boolean (true/false) value if it was able to read in the value as a number. Then you can create a new Sphere using the value read in from Console. If needed I can provide documentation on how to use C#'s features.
I would love if you could provide the C# features.
Is C# your first language? In any case, when I was learning to program whenever I was trying to lean a new language I would build a pong clone. I would avoid the use of a "real engine" for now and just use a standard WinForms solution using [Graphics](http://msdn.microsoft.com/en-us/library/system.drawing.graphics.aspx) to manually draw the ball / paddles. Let me know if you need any additional help.
[MSDN](http://msdn.microsoft.com/en-us/library/x9afc042.aspx) is your best friend when it comes to documentation about C# and .Net. All of the things I have talked about in terms of C# language features are covered in this series of articles. As for [Console.ReadLine](http://msdn.microsoft.com/en-us/library/system.console.readline.aspx) and [Console.WriteLine](http://msdn.microsoft.com/en-us/library/system.console.writeline.aspx) Read through the class documentation carefully. Everything you do going forward will depend on your knowledge of how to properly build a class.
I am really happy with your reply. One of the best methods for learning programming is to seek out helpful resources yourself. If that person is still stuck with the basics, I would hope that they would ask more direct questions with help if necessary. Coming from a self taught programmer, you do others no help by just "providing code."
Play around with unity 3d. If you're serious about games development which is extremely competitive industry then you want to learn c++ direct X and open gl eventually. 
tl;dw please?
I usually hate how much "providing code" is done on this subreddit as well. I know from my first post, most developers would just imagine the code immediately and assume that I was "providing it", however from where I believe dictatorboy is in his classes, I believe it to still be an exercise in programming, even given the step by steps in English.
* They've completely rewritten C# and VB compilers in their own (respective) language. * There is a new API for code analysis, which you'll be able to use for custom refactoring actions or code contracts, that are actually enforced by the compiler. * No big new language features, several small ones instead. A lot of syntactical sugar. * Introducing "?." which is essentially a null ptr check shortcut. "objA?.stuffB" means "If objA is not null, evaluate objA.stuffB, otherwise the statement is null". Can be used cascaded. * "Primary Constructors", which is syntactical sugar that lets you avoid declaring trivial constructors such as "Point(int x, int y)" * Private-Set Autoproperties, assign in conjunction with the Primary Constructor thing. * void Method(params IEnumerable&lt;stuff&gt;) {} * something.GiveMeValues(out var x, out var y); // &lt;-- actually declaring x and y here * LINQed Property getters, if you're too busy to write Property { get { return stuff; } }
Is there still a way to use the coupon? I don't find a textbox where I can use it. It's not that I refuse to pay for it, just interested.
I'll be back later tonight to post some more questions and clean things up. The code is going to be incredibly sloppy because I'm trying to teach myself how to write and for the most part I don't fully understand the projects I'm working on. The puzzle in the book is as follows Cost of food = $25 * the number of guests If they choose the healthy option Cost of drinks = $5 per person and a 5% discount on the total cost If they do not choose the healthy option Cost of drinks = $20 per person If they choose fancy decorations Cost of Decorations = $15 per person plus a flat fee of $50 If not Cost of Decorations = $7.5 per person plus a flat fee of $30 What I'm likely going to do is just go back a chapter and start from the beginning. I had to take a few weeks off when I traveled and I feel like I forgot some core concepts that are holding me back in trying to work with this one. I'll be going over everyone's comments tonight and playing around with it but unless I can write this on my own, and know why I'm writing certain lines and what each line does, I'll likely just go back a Chapter and freshen up on the basics of classes and methods. 
I'll extend it to the end of the month tonight.
Within c#, learn about generics, design patterns and unit testing. Html, css and JavaScript will keep you employed for years to come. Of course, for games you need different skills entirely as another poster said.
This coupled with the new JIT (RyuJIT) and possible native compilation via ProjectN, is just great.
I hope the examples I and the other poster provided get you set in the right direction! 
I would suggest you try to design your own game engine. Stuff like Unity is great and highly powerful and all, but if your goal is education and not producing an end product, then nothing beats figuring out for yourself. I made the mistake in the past of focusing entirely on game development with the Unreal Engine, and in the end I was entirely dependent on it and unable to do much of anything without it. I stay away from engines like that these days and I think I am better for it. I agree with /u/phibred on this. Just use WinForms and Graphics and start simple. Let me know if you have any questions! :)
Thank you very much! You're a legend amongst men.
Do you want to draw one or create a representation of the concept of a sphere in memory or do you want to calculate aspects of a sphere such as volume?
You can't, it's a programming language not a 3D printer.
In my experiences and for my needs, it has been really much the same as VS. I find the UI to be a little more elegant as well; however, I have experienced more than a few odd bugs. If you can use VS on your platform — and if you can afford it — it's probably best to do do.
Hi John Snape ,I was waiting for an excellent C# training course, and I realized it was on educator.com. So time to renew my subscription. I have a question though, will the c# course, after my completion, with dedication, prepare me to enter into the Android/IOS field.I will also purchase a book on Mono. I already have Xamarin installed, in visual studio 2013, but I read that C# is necessary.
yes, die powershell!
i dunno. it doesn't allow enough control to specify what to use instead of null for me for each object. maybe i'm weird, but i'm fine with null-coalescing all the way out: string baz = ((foo ?? new Foo()).bar() ?? String.Empty;
You can do this with `dynamic` I think, but it's got a large overhead.
I've played around a bit with Unity 3D so far, I've been interested in turn based games for a long time so I made a simple turn based game with textures and simple GUI code. This could be a lot of fun to practice with. Thank you so much!
C# is the first language I've tried to learn on a serious note. I took Ruby in school, I've done HTML5/CSS and a little PHP also. That sounds like a good plan for me, thank you so much for your suggestions! I really appreciate it. 
Unreal Engine is what they offer in the first year of the games development college I'm looking at, they cover "basic" understanding of Unreal Engine in the first year, and the graded unit is to create an island which you can explore and to have an interactive feature such as opening a door.. Designing a game engine sounds like a challenge, so i'm definitely up for giving it a try. Can you give me a direction to look for starting something like that? Edit: Forgot to say thank you! Thank you for the reply!
Note: I'm using Microsoft Visual 2010 at the moment, I'm building a program which will download and install files in a directory...I may sound slightly silly as I imagine that's incredibly easy for all of you, but playing around with Microsoft Visual, WinForms and console projects has been a lot of fun so far. Thank you all so much for the advice and suggestions, I really appreciate it. 
I think that's quite what they meant. More that parts of the compiler are now shared.
The latest CTP is still from Sept 2012 or something isn't it?
He did say that eventually you could pick and choose to use either features in either language
Yep. They even said it was going to be in 4.0 at PDC 2009 (I think), but it does what I needed it to do and much more.
Maybe you're thinking of the [Actor model](http://en.wikipedia.org/wiki/Actor_model), in which actors communicate over message queues. You can easily implement your own actor model in C# using the TPL.
#####&amp;#009; ######&amp;#009; ####&amp;#009; *Here's a bit from linked Wikipedia article about* [***Actor model***](http://en.wikipedia.org/wiki/Actor%20model) : --- &gt;The **actor model** in computer science is a mathematical model of concurrent computation that treats "actors" as the universal primitives of concurrent digital computation: in response to a message that it receives, an actor can make local decisions, create more actors, send more messages, and determine how to respond to the next message received. The actor model originated in 1973. It has been used both as a framework for a theoretical understanding of computation, and as the theoretical basis for several practical implementations of concurrent systems. The relationship of the model to other work is discussed in Indeterminacy in concurrent computation and Actor model and process calculi. --- [^(about)](http://www.reddit.com/r/autowikibot/wiki/index) ^| *^(/u/green_transistor can reply with 'delete'. Will also delete if comment's score is -1 or less.)* ^| ^(**Summon**: wikibot, what is something?) ^| [^(flag for glitch)](http://www.reddit.com/message/compose?to=/r/autowikibot&amp;subject=bot%20glitch&amp;message=%0Acontext:http://www.reddit.com/r/csharp/comments/1w05n1/help_with_c_design/cexi8d4)
Reactive Programming and event driven modeling might be a useful approach as well you can take a look at the Rx extensions as a good start. http://msdn.microsoft.com/en-us/data/gg577609.aspx
The 'colour' object in your DBPart class is null. When you do 'new DBPart()', that initializes all the properties of your class to their default values, which for objects (like colour) is null. You have 2 options. You can create a default constructor in your DBPart class that initializes 'colour' to a new dictionary, or just initialize colour to a new dictionary on the same line you are declaring it.
So my general answer for JSON is don't ever parse it manually. Use something like JSON.net (http://json.codeplex.com/) to handle it for you. It will allow you to think in objects instead of wire formats. It will handle updates to the JSON representation without affecting you. It will be extendable everywhere in your code. And you avoid a ton of tedium.
It really isn't that hard, I have a basic game layout that I tried to start developing a couple weeks back, and you can have a look there. Do note: I am not by any means an expert at this, but the general idea that you can see in my code is definitely something you can use to build a pong game. Feel free to download it's source, I know the "game" isn't much right now, but it's about the core mechanics here. https://code.google.com/p/explorer-game/
Sorry for late reply, I just noticed I had a reply, not a avid user of reddit. I'm not saying there's anything wrong with your opinion. But like I say it sounds like you haven't used it based on what you wrote. If you said you didn't like the way Nancy solved problems I probably wouldn't have replied. But if someone else comes along, reads your comment, and assumes "OMG NANCY IS BAD" when its not. You can write terrible code in any language or framework, as you're probably aware. It's entirely possible that we could make your Nancy app faster than your MVC one, and vice versa. :)
Err, no. It's like comparing brainfuck with c++. Yes they are both more difficult to use than python, and both are touring complete. But one of them is a brain dead piece of crap. 
It looks a bit like json.net with the JObjects and stuff.
Problem with this is that there's no fail-fast (and maybe I misunderstood how it would operate). With your version, if `foo` is `null`, it will construct a new `Foo` object simply to call `bar()` on it. Furthermore, it doesn't tell you what you're going to get (who's to say what `new Foo().bar()` returns? Is it `null`? Is it `String.Empty`? Is it `"ASDF"`?) In fact, only in the case that `bar()` returns `null` will it return the right-hand side of the null coalescing operator. With the new operator: `string baz = foo?.bar() ?? String.Empty;` as soon a null reference is found in the chain, it aborts executing the rest of the expression and proceeds to evaluating the right-hand side of the null coalescing operator. It doesn't instantiate a new `Foo`, it doesn't call `bar()`, it just determines that `foo` is null, therefore the operation returns `null` and thus evaluates the right-hand side. So your code actually executes more along the lines of: Foo tempFoo = foo ?? new Foo(); string baz = tempFoo.bar() ?? String.Empty; But the new null propagating operator executes along the lines of: string baz; if (foo != null) { baz = foo.bar() ?? String.Empty; } else { baz = String.Empty; } While in a simpler case such as this which only chains once, it becomes much more powerful once you have to chain further down: `string baz = foo?.bar()?.someProperty?.GetTitle() ?? "Untitled";` The equivalent normal code would be: string baz; if (foo != null) { var barTemp = foo.bar(); if (barTemp != null) { var somePropertyTemp = barTemp.someProperty; if (somePropertyTemp != null) { baz = somePropertyTemp.GetTitle() ?? String.Empty; } else { baz = String.Empty; } } else { baz = String.Empty; } } else { baz = String.Empty; } A similar null coalescing approach might look like: `string baz = (foo ?? new Foo()).bar() ?? ----` and now I stopped because I don't even know where to go because I would either have to repeat the expression (could be major performance hit) or instantiate some new instance of whatever type `someProperty` is. Personally, honestly, maybe I've been really lucky in terms of the architecture/design/quality of the software I've worked on, or the intended usage/purpose of that software, but I don't see myself having the need to use this new null propagating operator. Most of the application design is already nicely structured around not having nulls (or if there is a rare null, it's considered "exceptional", a bug, and we let the program fail so we may fix it) and reducing the need to chain as deeply as `foo.bar().someProperty.GetTitle()` which in itself tends to be a code smell. I know I'm talking about the "ideal" case; sometimes it just doesn't work out that way and this can really simplify developers lives. I can see myself using it even in simple cases where there is a quick null check or chains once as in `foo?.bar() ?? ""`; So maybe they can play around with the syntax a bit, but I think it's a step in the right direction to avoid having to write nested `if` blocks just to make the code and null checking as efficient as possible. EDIT: Regarding "more control", you can always stop/start the null propagation wherever you wish. For example, assume if `someProperty` was null you wished to instantiate your own: string baz = (foo?.bar()?.someProperty ?? new MyPropertyType("someDefaultArgument")).GetTitle() ?? "Untitled";
This would be the way I'd do it. You get your strong naming/typing/inference of parameters, on the calling side you get your standard variable declaration on the left, return values (which even the speaker admitted that `out` parameters are an "old" style and not very forward thinking), and assignment styles. No hunting for variable declarations _in_ method arguments. There might be some corner cases with how anonymous types are handled cross-assembly or how updating DLLs might break other code (especially if the API provider changes the _order_ of the anonymous type property declarations), and maybe a few others. One usability issue might be the fact that they're immutable. Whereas using the `out` method, you get a true local variable that you can write/update/change: myPoint.GetCoordinates(out var x, out var y); if (x &lt; 0) //clamp to 0 x = 0; If you did it with an anonymous return type: var coordinates = myPoint.GetCoordinates(); if (coordinates.X &lt; 0) coordinates.X = 0; //error "AnonymousType#1.X cannot be assigned to -- it is read only" Plus there's the whole bit of performance where you're essentially instantiating a new reference-type object, initializing it, and returning it, just to access its properties. While minimal, there's something to be said about unnecessary stack/heap access and memory allocation when compared to just using `out` parameters. This might be a bit of micro-optimization though, and some of it likely mitigated by the JIT compiler. So anonymous return types would be nice for read-only scenarios and ones that aren't ultra-performant. This likely encompasses the large majority of practical scenarios and I think doesn't pollute the C# language much; it maintains consistent as it is read and is written largely the way the rest of the language is. EDIT: However, I get that using the `out` method is a very "low hanging fruit". For the C# language and compiler teams, it's relatively simple and doesn't "rock the boat" much. It's very trivial to update the IL code generation routines, the intellisense and scope tracking and whatnot. There are far fewer corner cases to handle and very few language ambiguity (if any) concerns to address.
Not sure what you're asking for here. Are you essentially looking for API designers to specify (in C#) that they, as developers, promise to not create a breaking signature change to that method/parameter in future versions/releases?
got it! thanks very much!
like cadoc7 mentioned, use json.net as your parser. Another tool I love to use is [json2csharp](http://json2csharp.com/)
Relative article: http://tinodidriksen.com/2003/05/06/but-can-you-make-pong/
Update to Visual Express 2013 if you can (it's for free). Way better than 2010!