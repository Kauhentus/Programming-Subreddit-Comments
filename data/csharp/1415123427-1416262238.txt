Visual studio express for web, free azure hosting, and a git/github account and you are all set.
Personally I'm a big fan of KDiff3
Just as important as learning the language syntax etc, is learning a framework. A very popular framework with C# is .NET/XNA (for games usually). 
At these days there are enough video tutorials about basics of C# out there. No excuses that you need to read a book anymore :)
On their Web page it states that it is limited to 10 tables. Is this true?
That is a limitation of the new "free" version. You want the old really-free version. This is the one.. https://github.com/ServiceStackV3/ServiceStackV3
Wait, are you saying my name is Scott or are you signing your post?
No problem! Have fun! :)
If (youDoNotLikeATechnology==True) Then DoNotUseTechnology(); //Don't see why this is a hard concept. There's tons of stuff Microsoft does and other languages do that I hate. I'm //not going to waste my time ranting and raving as to why they suck. I've got better things to do. 
She'll never trust you then... Visual Studio is the IDE, not the app she has to write. 
There is a race condition. You don't see it because he isn't showing the console app code where he calls the function in a loop without using await.
Dhurr, I'm a blogger: void Main() while(true) DoSomethingAsnc(); //this won't make threads, right?
you youDoNotLikeATechnology is false, then you **like it**, just saying...
As always - break the problem down into manageable pieces. - Create a 2 x 2 array - verify two-dimensionality in the debugger with Quick View - Input a number for the size, change the array creation to use this size instead (*m* x *n* size now) - Write code to loop through the array, putting 42 in each cell. Verify in the debugger - Change the 42 to a random number 0-100. Verify in the debugger. - Write code to loop through the array and find the largest value. Verify in the debugger. - Write code to loop through the array and display each cell: m, n, value. - Alter code above to right-align the numbers - Review code to ensure it meets the professors standards. 
Wow! You're awesome. And after looking through our chats, when I asked her what they're using to write their code, she said "Visual Studios"... so I only know what I was told. ;) And I'm talking to her now, but she's not doing great in that class, it seems, and she wants help with another one. :/
It's a reference to [Austin Powers.](http://www.youtube.com/watch?v=ibyq_7xMKq0)
well, that's easy you want a XAML Form for it?
Also: once one learns the keyboard shortcuts, Windows 8.1 is (IMHO) the best thing since Windows XP. It feels light, fast and does what I want. Read: The OS gets out of your way so you can do what you want. The only downside I've had with Windows 8 (and I believe 7 does this too) is a change in the network stack. You cannot (easily) capture packets that go to localhost. So, tracing communication with Fiddler or such, against your local machine, is a no-go.
Udemy.Com has some really good courses and a lot of them are free, that's where iam learning c# at the moment.
Giving her the answers won't help her learn the material. What is she going to do during a practical exam? Are you going to be allowed to sit next to her and surf reddit for the answers? If you are not familiar with C#/Visual Studio, etc., then any amount of fakery, while it may impress her in the short term, will blow up in your face when she realizes you actually have no idea what you are doing.
I totally agree... the thing for her is that she took this class because she thought it would be "fun to learn some of this stuff". Now it's too late for her to withdraw and there are issues if she fails it. Overall, she's made some pretty dumb mistakes but, if I can help her pass it, she won't have to worry about it again. If she weren't a close friend of mine (and feeling terrible about it already), I would have simply told her that she'll just have to deal with the consequences of her dumb choices.
I wont give you the answer as someone already gave a valid one, but now that you have it try and teach her this stuff. If she is asking you then you must know something to help her. What i usually do is after class spend a few hours helping those in my class who needs and wants help with programming by teaching them how to do it. Just remember to make sure they understand what you are teaching them before you move on otherwise they end up learning nothing. 
is it not int.TryParse() or int.Parse()? I've never used Int32.TryParse before but of course it could be what you need to search for in the Microsoft Documentation.
When someone in our class asked about goto our Teacher immediatly said "Never use that until you fully understand it, and even then dont use it" or something those lines :D
I would recommend [The New Boston Tutorial Series](https://www.youtube.com/watch?v=x_9lfHjYtVg&amp;list=PL0EE421AE8BCEBA4A). Although it isn't Bucky who does this series, it is very good. 
How is that different from writing a regular function that mutates a global variable without synchronisation and then calling it from a parallel loop? 
&gt; There is no shared engine for this. Tasks? 
The point being, once you understand it, you know to never ever use it.
Trust me, you do NOT want to work with Sharepoint. It has to be one of the most poorly written APIs I've ever had to use.
It's not. The original author doesn't understand why his code doesn't work and is blaming the wrong thing.
Fixed hahaha.. Didn't debug it
try /r/homeworkhelp
Every university I know of (through my or my friends' experiences) has a tutoring program. Depending on how your university runs it, she may be able to get access to down-to-earth, step-by-step explanations to the material. She won't pass if she doesn't at least understand how to do the basics. Plus, on the bright side, once you understand the basics, she may enjoy what she learns. Any programming language is really a tool to complete tasks, simple or complex. She may find that writing an algorithm that returns a desired result brings a good amount of satisfaction. . Look at your university's tutoring resources. I was never a tutor, but all of my math/computer sciences buddies were. I saw plenty of people who had absolutely no idea what they were doing become competitive students who could fight for their grade. The only way you can fail is to stop trying harder.
Tasks and async/await are completely different things. Async/await USES tasks, but it is implemented in the compiler using a CPS-rewriter. Both compilers do this differently.
Follow links in side bar. Also: http://www.microsoftvirtualacademy.com/training-topics/c-app-development and www.pluralsight.com
I remember coding the luhn check myself in js back in the day.
Here's another one... Using the follow declaration: int [ , ] anArray = {{34, 55, 67, 89, 99}, {22, 68, 11, 19, 45}}; What would be the result of each of the follow output statements? 1. Console.WriteLine(anArray.Length); 2. Console.WriteLine(anArray[1, 2]); 3. Console.WriteLine(anArray[0, anArray.GetLength(0) â€“ 2]); 4. Console.WriteLine(anArray[0, 2+1] * anArray[0.0]); 5. Console.WriteLine(anArray.Rank);
This is pretty awesome. Me and coworkers wanted this quite badly! 
Another vote for beyond compare. You can even configure Visual Studio to use it as your diff tool.
Yeah, except most of the time tutorials suck. They only ever scratch the surface and aren't nearly as insightful as books can be.
Except that books scratch the surface and pluralsight tutorials are more insightful right now. Yep silly world. Why not both?
I learned C# and Java by going onto /r/dailyprogrammer and essentially throwing myself in the deep end. I found the two languages to be remarkably similar to be honest...
You do need to pay for the newer versions but it is more than worth it, especially when you compare it to the mess that is WCF. It is one of the most well thought out and put together frameworks out there for .NET.
Has anyone here used [Semantic Merge](http://www.semanticmerge.com/) and if so, what are your thoughts?
Senior software engineer / tech lead here. I think you should learn to crawl before you learn to tap dance. Write a few C# programs before you try to dive into Sharepoint development. If you know Java, you'll pick up C# pretty well, but it does have its differences and you'll need to learn them to be good in the language, and you should probably do that with something simple before you involve complex APIs to Microsoft products.
I did a while ago. Seemed cool but was too limited. No support for changes across files which just wouldn't work for me. They were working towards it. I think in the end, semantic merge or a tool like it will mostly end the need for normal 3 way tools but it still has a ways to go before that happens.
I've been using DiffMerge for years. It integrates well with every VCS I've used (SVN, TFS, git). It has very easy to use keyboard shortcuts. The color coded line comparison is fully customizable. It also meets your FREE criteria. Check it out. 
http://nancyfx.org
Unfortunately, most tutorials are like step 1 in this picture: http://i.imgur.com/ij2aemX.jpg Which would be fine, but then they expect you to be at step 2 afterwards. Its like teaching a language by going 'this is a verb, this is a noun, this is how you conjugate a verb and this is how you combine words to form a sentence. Now here is a dictionary, congratulations, you can speak French'.
Great site. Spend the money if you have it.
Same thing. In a 64-bit build maybe int resolves to Int64, but it works the same.
Oh, haha. Yes, it was intended to be 0,0.
You have access to an internet device, yet you can't just put those into various [online c# compiler](https://www.google.com/search?q=online+c%23+compiler) nor [Android-based compiler](https://play.google.com/store/apps/details?id=com.gregshackles.csharptogo&amp;hl=en)
ServiceStack went commerical somewhere around end of 2013, beginning of 2014. The lead dev Demis Bellot is from what I've understood working full-time on the framework now and you also get commercial support. As someone who has a license I have to say that it is well worth the money (it's cheap compared to a lot of other stuff). Demis is very quick at answering questions and the development rate has imho been going at a very high rate, we've been getting a lot of updates this year and each new release has often contained some cool new useful feature that makes working with the framework nicer and smoother. The release quality is very good. While there is the occasional bug (bug-free software is a dream) Demis is usually very fast at fixing the bugs after they have been reported and reproduced and he also often publishes interim builds on MyGet which you can pull down and use while waiting for the next official release. The framework is top-notch to work with, much better than the hot mess that is WCF and must better designed and more complete than WebAPI (which IMHO is too little, too late) - and it usually performs much better. With the addition of commercial support ServiceStack is a real pleasure to work with. Not to mention...when was the last time you had a question about ASP.NET WebAPI or WCF and could actually get into contact with the lead dev on WCF/WebAPI and ask them questions? :) Nancy is a good alternative as well, but I feel that it fills a different role. ServiceStack is a full stack framework which contains the tools you need for a full application - all closely integrated with each other (but easily pulled apart and replaced if you don't want to use parts of it). Nancy takes the other direction and just provides you with the absolute basics and then lets you add more stuff on top of it. I feel it's mostly a matter of taste (and how your project is structured) which direction you prefer. Also, if we look beyond services to some of the other things that servicestack includes: ServiceStack.OrmLite is a fantastic high-performance ORM (EF and NHibernate are totally horrific) for people who actually care about what queries you send to the database. ServiceStack.Text is a great library for serialization/deserialization into different formats and very often benchmarks extremely well if you're looking for high performance JSON serialization/deserialization. ServiceStack.Redis is a really good library for working with a redis nosql database. 
It is very worth the money. Great tool, not only for comparing files but also for comparing or updating complete folders. I also use it regularly for deployment tasks.
&gt; When I generate a method stub, why does the c# compiler use the local variable names for method params that are exactly the same as argument names? I always try to keep it diff, least of it is to use camelcase. Is there anything different in that when I'm using REF or OUT? Visual Studio cannot read your mind, and the only thing it has to go on is the variable names. For ref and out there is no difference in naming convention. &gt; I declared the Lines, Columns and DailyFileArray[,] in the Main but it also works if I declare it in FileArray class. What's better? Declare it as close to its usage as possible. if it doesn't serve any purpose to Main then it shouldn't be in main or vice versa. &gt; In Both the methods within FileArray class I use string lines to readfile with streamreader. I declared it outside the methods but within the FileArray class. Then before closing the method block brace, I set line=""; This way I just use it in the second method. What's a better way for this? Same thing here. Declare variables as close to its usage as possible. If it doesn't serve any purpose outside the method, then why is it there? &gt; In Main, I sent a call to both methods in the Class FileArray. Initially, I tried to construct new object FileArray and then within that Class I changed both methods to overloaded class constructors. Both ways of doing it worked after some pain, which one is easier to get used to? You originally used methods to do some computation, but switched to constructors? It depends on what your code does. Constructors should construct the object. In my opinion constructors should generally not fail (although this at times tough to avoid) and should construct a completely usable object if possible. Methods should use the already constructed object. But it is up to you. Do what you think works the best. You however shouldn't end up with objects that serves no purpose after construction. &gt; After I create this 2d array, how can I store it easily for simple recall later to do some calculations? I tried to google C# database creation and manipulation and got kind of over-whelmed by all the links and everyone of them was doing it different ways. So quite simply, where should I start? You could just store it in a binary or text file instead of using a database. It would be a lot easier. &gt; I just finished the chapter on exception handling. How common is to use those throw and catch keywords to manipulate actual data or program files rather than just catching errors? Uncommon. Exceptions should be exactly that: exceptions. They happen when code cannot continue to run. Exceptions are also computationally expensive, so if you can avoid an exception being thrown, (such as using TryParse instead of Parse) you should.
not that anyone would bother looking at the sidebar before posting, but maybe we should add http://www.blackwasp.co.uk/csharpobjectoriented.aspx there.
I am confused can you not just visual studio for free on any platform?
Most of these checks could be done with regex alone as well. public int CheckScore(string password) { var rules = new[] { ".{1,}", // Password is one or more characters long ".{4,}", // Password is four or more characters long ".{8,}", // Password is eight or more characters long ".{10,}", // Password is ten or more characters long "\\d", // Password contains numbers "[a-z].*?[A-Z]|[A-Z].*?[a-z]", // Password is mixed case "[!@#$%^&amp;*?_~-Â£() ]" // Password has special characters } .Select(rule =&gt; new Regex(rule)); var matches = rules.Select(regex =&gt; regex.Match(password)); return matches.Sum(m =&gt; m.Success ? 1 : 0); }
Yeah, dunno, the code in the OP seems like a lot of work for not that much return.
&gt; Async/await USES tasks Right. Tasks are the shared engine. 
Agreed. I'm going through the Accelerated C# by Scott Allen on Pluralsight right now, it's fantastic. Everything makes quite a bit of sense. I already have a couple of smaller regular projects planned (well, converting them from Java to C# as an exercise) and plan on learning things like LINQ before I delve into Sharepoint.
I've got it, I love Pluralsight.
It's already working .... sort of and it's not a homework, i just do this for fun. well, i can calculate up to 11 people because when i try to calculate 12 people he blows the maxrange of 80 * 10^28 .# bad programmed xD
You should learn Linq *immediately*. I didn't even bother with a book, I just started coding, inferred a few things from the default code created when I create a class, successfully guessed at what some stuff was called and some syntax, and googled a few things. It's close enough to Java to be able to do that.
I'll start that as soon as I finish the Accelerated C# course (some time today). Thank you for the advice!
Also checking password complexity is a little harder than that. You should also have a ready source of dictionary words and treat matches as low entropy. Keepass does this, for instance. 
To get more accurate result it could try to estimate number of actual information bits in password like [this project](http://www.codeproject.com/Articles/4721/Secure-Coding-Technique-A-Better-C-Password-Dialog) does.
Why does it top out at 10? That is not a long password. 30 or 50 chars is a long password.
&gt; You want the old really-free version I don't want the old really-free version of ServiceStack. Unlike the new, expensive version of ServiceStack, and current versions of Nancy and ASP MVC WebApi, it does not have built in support for async...await. Or an upgrade path to them. It is a dead end unless you're going to buy the new, expensive version of ServiceStack. 
[**@gakera**](https://twitter.com/gakera): &gt;[2014-11-05 13:50:09 UTC](https://twitter.com/gakera/status/529994075613986816) &gt;hey [@googlechrome](https://twitter.com/googlechrome) awesomebar guy! "c/\# ..." is NEVER something I want to input! Why you hate C\#? [*pic.twitter.com*](http://pbs.twimg.com/media/B1rqzYOIYAADSpC.png) [^[Imgur]](http://i.imgur.com/YIvaLiG.png) ---- [^[Mistake?]](http://www.reddit.com/message/compose/?to=TweetPoster&amp;subject=Error%20Report&amp;message=http://reddit.com/2ldgos%0A%0APlease leave above link unaltered.) [^[Suggestion]](http://www.reddit.com/message/compose/?to=TweetPoster&amp;subject=Suggestion) [^[FAQ]](http://np.reddit.com/r/TweetPoster/comments/13relk/) [^[Code]](https://github.com/buttscicles/TweetPoster) [^[Issues]](https://github.com/buttscicles/TweetPoster/issues) 
omy, that's my twitter profile pic, I hope you like it lol :P 
You can avoid this by making sure you preface your query with a `?`. [See example.](http://i.imgur.com/2TkKHPg.png)
This has been a pain in my ass for a few months now since the auto-correction was introduced, I've taking to searching for a topic and then appending the language cause of this :| I think it has to do with some fix-up for URL fragments (from the URI parsers-side) making its way into the search even though no protocol has been specified...
Yea I do that too sometimes. I think the Chrome devs should optimize this scenario away, it's crazy how many times it bugs me. 
And hitting CTRL+E will auto-prefix your query with "?" to make it that much easier.
Or just use .net in your search instead of c#- the vast majority of the time this will give you what you are searching for anyway.
I just prefix the search with a space atm
It's been fixed for v40 of Chrome. Been watching this issue for a while now! https://code.google.com/p/chromium/issues/detail?id=409845 Either wait for 40 to be released in the stable channel or switch to the dev build.
YAY thank you :D Any ETA on 40 you know?
As far as I know it's roughly every 6 weeks for a new major release. 38 came out 7th October so it will be after the new year most likely.
What happens if you combine the data context calls into one single call? var pos = dataContext.PurchaseOrders.Single(p =&gt; p.ID == purchaseOrderId).PurchaseOrderItems.Where(i =&gt; FK_PurchaseOrder == purchaseOrderId)
[keepass](http://keepass.info/) also shows an estimated number of bits of entropy in a password. 
If you call .ToList on the collection, do the counts change?
One more reason to DuckDuckGo
Even better: CTRL+T, CTRL+E New Tab, Start Query. Pretty neat.
Not really, unless they have a browser?
More even betterer: CTRL+(E|K), &lt;type query&gt;, Alt+Enter. This just consolidates creating a new tab and pressing enter.
We've fixed a lot since the last release. For starters, there should be no limit on project size. Also, hold &lt;ALT&gt; to highlight the relationships between nodes. It makes it much easier to understand what's going on.
Well private vs public, plus you get the rest of tfs features for project management and very good built in support
You can select your search provider in Chrome settings, however the suggestion of C/# is still there in the list. I'm not really seeing a problem in this whole thing though. It does give one odd suggestion, but it doesn't autoselect that one for me. 
While I agree with this idea, keep in mind that 'aaaaaa' and 'abcdef' will give the same result for the information bits when using the solution from the linked article. You could also look at things like [Shannon entropy](http://en.wikipedia.org/w/index.php?title=Entropy_(information_theory\)) to take another angle. Basicly you compute how well your password could be compressed. Obviously, 'aaaaaa' compresses a lot better than 'abcdef'. 
Wow this is really great, a big improvement on the last update
I have a subscription. It's.. okay. I oscillate between disabling and enabling it in Visual Studio. It's a novel product, and I haven't found anything quite like it, but it's really quite limited in what it does. There's many times where I bypass it and go straight to my regular diffing tool. I'm not a fan of the open source text diff tool bundled with it, so I rigged it up to use Beyond Compare whenever I need a plain-old diff. 
Yea that's what I meant. It autoselects it sometimes for me, as for the term in the screenshot. For many common terms it doesn't, so it doesn't happen all the time, but when it does it's all the more annoying. 
How is the table structured? Is each column in each row separated by commas or tabs. I had to do something similar once. I read the text line by line and then created a new array object for each line separating the line text at (white space, comma, tab, or what ever the deliminator is) for each object property
How does "CorrectHorseBatteryStaple" score?
.net is less descriptive as it also includes VB, F#, and more
I'd guess it's an html table, i.e. a PITA to parse without additional libraries.
Yes, but my point was that 99% of the time this will give you what you want. VB/F# really aren't used as much as C# and much of the time your issue will be with the .net libraries and not the language.
Well, if you'd be fine with contributing to projects, I've got a few that I'm working on. My github is [here](http://github.com/Banane9) if you want to take a look (specifically Iris, ManiaDotNet/ServerController and the OpenTerra stuff) I'm also wanting to work on a Terraria clone (the OpenTerra thing) because the original has *horrible* code. Shoot me a pm if you're interested :) /shamelessSelfPlugEnd
That doesn't hold true if you are looking for something about the c# language itself like polymorphism which is unrelated to the framework
Sure it does: https://www.google.com/search?q=.net+polymorphism returns mostly the same stuff as https://www.google.com/search?q=c#&amp;q=c%23+polymorphism And I'm sure you can contrive examples where this isn't true- but for most things it will be.
I usually search C# even when it's a general .NET issue because Google treats .net URLs as a match. Plus people refer to C# more often than .NET in questions. Either one works fine, though. I don't think Google hates C#. Well, other than the address bar guy...
The Yellow book by rob miles has some good information and explanations about things. I'm currently being taught by him.
Alright, so here's a [sample](http://i.imgur.com/PaLj13J.png) of what the table looks like. /u/Banane9 below is correct, it actually sends the logs in HTML format, not plaintext.
This is fantastic. I cannot applaud Xamarin enough for reaching out to the future generation of developers. 
You are failing to understand the distinction between a compiler and a library. The compiler has to do crazy stuff to `async` methods very similar to how `yield return` works. Both the C# and F# compilers have to do this crazy-ass transformation, and they both do it completely differently. The C# compiler uses the the `.GetAwaiter()` method for `await`, NOT TASK. It just so happens that Task has `.GetAwaiter()` and compiles correctly. You could just as well use your own task class, C# wouldn't care and the code would still be compiled as async code.
I love how websites leave Country fields blank as if you can pick other countries, but then have a limited selection of states to pick from.
Alt enter opens a new tab, that's sick. My workflow would be ALT+D, &lt;type query&gt;, ALT+Enter
Yeah thanks Xamarin but I'm not a student in the US...
Is there a way to get Xamarin free for foreigners? 
And.. what's your question?
So subscription level in Xamarin Indie. While I appreciate this, my only gripe is lack of VisualStudio support in that plan. I don't feel like paying $68 extra compared to indie plan, especially since I don't need "email support" or "business features". 
Use your own data structures instead of fiddling with arrays. Define a class that represents each row in the CSV. You can reason about the data using Linq. Don't worry about performance or memory pressure until it actually is a issue. 150000 rows with 25 columns is not what I would consider a big dataset. You are looking at something that takes tens of megabytes. If or when performance suffers you should consider moving to a database, but don't get ahead of yourself.
Still only returns two rows. If I change the 3rd row's name from "NAME" to "NAME "(with a whitespace) all three lines are returned.. I wonder if there is some sort of duplicate removal that I'm not aware of(that in this particular case ignores the primary key).
Sadly.. No, still the same result with just two rows.
As a student the business level costs $99 per year and licence. But Xamarin studio isn't that bad, really. 
Well, I'd suggest you use for example the html agility pack to parse the rows into a data structure and then loop over it to see if there's anything interesting :)
hi again i just went through the source, but there is really no such send method which returns something, or is there?! :) in most cases the messages are not in this alignment where there has to be an answer of some kind. it's more like independent channels over which the participants fire and forget. so if you want that behaviour to request and await the response (which makes sense of course), you'd have to wrap it in some kind of async method yourself, correct?
[CLR via C# (4th Edition) - Jeffrey Richter](http://www.amazon.com/CLR-via-Edition-Developer-Reference/dp/0735667454/ref=pd_sim_b_8?ie=UTF8&amp;refRID=0VKV7C1JZV69QFE3PYWS) Good book to start with. 
Yeah but they ask for a state and it's mandatory to kill up the form... Edit: Yes I totally meant to kill up the form
&gt; You need a completely different type system, where you can gain access to an object only after locking a mutex AND you can no longer use the references after unlocking it. &gt; This requires region-based borrowed pointers, which the CLR obviously lacks. That sounds like it won't perform very well, though. For the race condition in the article, it should be obvious if you know what async does, that this code may run concurrently, thus you can't just modify fields like he does. Interlocked.Increment etc. or mutexes must be used manually.
With the state issue (Australian here) I used chromes inspect element to change the sent data to Queensland instead of one of the states. Don't know if it was successful but I'll let you know. By the way, didn't just change the text, it had ~~state ID or something of the like~~ "data-value" Update: They got back to me, it went through all good, and the email said I was from queensland. Worked a charm.
Yes! I ran into this issue several times! Thanks for the info! /u/changetip 1000 bits
Start with this course over at the microsoft virtual academy: http://www.microsoftvirtualacademy.com/training-courses/c-fundamentals-for-absolute-beginners?prid=ch9courselink
The Bitcoin tip for 1000 bits ($0.38) has been collected by *lazlo_uk*. [ChangeTip info](https://www.changetip.com/tip-online/reddit) | [ChangeTip video](https://www.youtube.com/watch?v=_AnfKpypMNw) | /r/Bitcoin
SIMD definitely catches my attention. 
Read in a second value and use it accordingly. What's your issue? What did you try? Or do you just ask for a solution on the silver spoon?
Learning the IDE is part of the battle. I'd get familiar with that first. Then just read up on the basics of OOP as it pertains to C# with the yellow book. The CLR via c# is a great book to have with you at all times. I like to just start on a project that interest me when learning a new language. Every problem you'll probably confront is solved somewhere on google. MSDN has really good documentation of the language, but you'll find many of your answers on stack exchange. Word to the wise.. Take time to understand the solution to your problem. For example you google something like "how to iterate over a datagridview" you'll immediately find the exact answer you are looking for, and sometimes you can literally copy/paste and make almost no changes to the code.. This really helps you get off your feet and get moving, but if you take the time to understand the code and how it's being solved I think you'll learn faster on top of being able to just solve the problem w/out having to go back to google or your code the next time it comes up. Take each problem you confront as a rabbit hole to understanding the language and this is where CLR via C# comes in handy.
&gt;to kill up the form whoa whoa whoa
This is probably going to be a gateway drug into their $99/year Business edition offer for students.
eh? A PurchseOrderItems partial?
&gt; But they are ***often***^[citation ^needed] used as a language feature to hide horrible code. Which is why they should be rocketed into the sun. In my entire professional career, I have seen precisely one instance of a region being misused to hide horrible code (The developer used 4 regions within a single function body, because he thought it would be easier than creating subroutines). The developer was subsequently publicly flogged and never made the mistake again. On the other hand, I have seen thousands of files where regions are used to efficiently group logical blocks of code and make much more readable files.
Yep. I had a public partial class PurchaseOrderItem that contained a public override bool Equals(Object obj) { ... } public override int GetHashCode() { ... } that was plain wrong. Apparently, .Equals is called when adding an item to a EntityCollection and if the collection already contains the item you try to add, it is simply ignored.
Oh, really? That's not too bad. Thanks!
Just put any state. 
Amen. I don't understand the hate for regions. *But, Carl64, it allows shitty developers to hide shitty code.* Then I suggest you quit hiring shitty developers because I can guarantee it isn't regions making them write shitty code.
You can get an immediate response to a message by doing a `Send()`, then `ReceiveMessage(bool dontwait=false)` (blocking call) There are obvious pitfalls to this, but I ended up using it in such a manner that it was not detrimental to my performance or reliability.
Seriously... I love regions... constructors, properties, public methods, static methods, interface implementations... They all get regioned in my code, and i teach any junior devs under me to do the same. Makes opening a file glorious when ctrl+m+l x2 and i can see all the different regions and find exactly what I'm looking for.
Get this shit out of here.
Yep. And with Resharper/VS you can keep them consistent throughout files. I wish I had a tech blog so I could complain about people complaining about regions. 
You know that code isn't really hidden right? I can still look at it pretty easily by expanding the region.
I may be in the minority here, but I am not a large fan of LINQ. It has some good uses (querying hierarchical data rather than flat result sets is probably the best reason), but so many people misuse it and poor implementation can lead to *abysmal* performance. Seems like people treat LINQ as the silver bullet, but it's not that powerful. 
If you dump your code, it's doubtful you will get any help. I suggest breaking your problem down into smaller pieces and implement it part-by-part. If you're looking for help developing this, perhaps you should engage with /r/learnprogramming or /r/programmingbuddies.
Depending on what you're planning on doing with it later, you probably want a class to represent the individual pos/ current data points, and then store them in a list?
Something similar to this? public class Pos { public int x { get; set; } public int y { get; set; } public int z { get; set; } } public class Position { public Pos pos { get; set; } public int current { get; set; } } public class RootObject { public List&lt;Position&gt; positions { get; set; } }
Did you miss the &gt; **While I appreciate this** part?
So because it's free it can't be criticized? That's not how it works.
We do the same thing, but we strongly (e.g., want a long-winded reason why) regions within methods. Grouping methods and properties? Great. Inner methods? Refactor.
Thank you for the criticism, Mr. The Rapist.
If you are selecting data out of a set in the traditional manner by creating a list to hold the selected data, then writing a loop to loop over the data, then inside the loop adding records from the data set which match your criteria to the list, then you are wasting a lot of valuable programming time and making code that's harder to read and maintain versus just writing one line of LINQ. It doesn't have to be the do-all-and-end-all of programming to be really useful. Yes, it's perfectly possible to write LINQ with abysmal performance. I can also write for you a FOR loop with abysmal performance if you really want me to, or a LINQ statement with superb performance. Writing code with abysmal performance is bad programming. Don't blame the API, blame the incompetent programmer. Just because LINQ can't prevent you from doing something stupid doesn't mean it's not useful. You're supposed to be a professional and write code with consideration toward how efficient it will be, test your code to ensure it works and with reasonable efficiency to meet requirements, and make adjustments when it fails to do so. I recommend learning LINQ right away for the following reasons: * It reduces programming time, thus increasing the efficiency (and value) of the programmer. * It makes your code shorter and more readable versus loops to select stuff. * It permits you to get data from Entity Framework and other data interfaces, without which you're reduced to awkward methods using ADO.NET. * It is the universal method of querying data in C#, allowing you to write one set of statements which can be used to query data against in memory data, an entity framework, nhibernate, LINQtoCSV, or a variety of other data sources *without necessarily having to know what kind of data source it is or where it came from*. The universality of it also means you can learn just *one* syntax for querying data and use it throughout your software, rather than having to learn a different API or syntax for every type of data source. * If you learn how, you can use it to reformat your data in interesting and useful ways. For example, this morning I wrote a LINQ statement that queried some data out of my database in a complex manner and then formatted the results into HTML. 
I put in a real country and fake state and it was ok
I like regions. I don't like when they're used on every goddamn file, like this... #region members private readonly IMyThing mThing; #enregion #region Constructors public MyClass() : this (new MyThing()) { } public MyClass(IMyThing thing) { mThing = thing; } #endregion #region Methods //...the methods #endregion That kind of use doesn't really clear anything up. I do like using them for when a particular pattern is used on an object that really doesn't add anything aside from being there to facilitate easier use, like the Disposal pattern. #region Disposal // disposal pattern here, ~40-80 LOC depending on resource use #endregion Once that's implemented, it's never actually used by anything explicitly, so using a region to make it go away is useful to me.
 number = Convert.ToInt32(Console.ReadLine()); You may want to Int.TryParse() that, in case the input isn't an integer.
That's Mr. Therapist to you.
I find it weird that your post reads like you speak English as a second language but among other things you use "some1" instead of someone. I doubt anyone would take the time to help you if you dump the code (it's impossible to help you without seeing your problem / code) because you didn't take the time to properly write the request.
I personally disagree. I've never been as frustrated with code editor behaviour as I've been with Xamarin Studio. Even Eclipse and Netbeans do better in that aspect. I don't mean intellisense, but things like auto-formatting.
so many harsh redditors its unreal
Does this require vs ultimate edition?
hahahahahahah so true
No it does not. It does require VS "14" or VS 2013 with the Roslyn compiler, though.
It's not necessarily bad _per se_. This kinda gets into the debate about whether functions should have a _single_ return/exit point or if they're better off more readable by simply aborting or returning multiple values in multiple places. (Generally speaking, the answer is _it depends_ :P) In _this particular case_, I think you would be better served by the `else` block. The `return` call is kinda buried by the rest of the clutter and is easy to miss it and misread the function flow.
Wait a minute. This comic made you laugh? What, you think it's some kind of joke!? This is serious business.
From a programming principles perspective a function like this shouldn't need to worry about things like how to display a validation message etc. What if next month you decide putting this on a website is what you want? Separation of these responsibilities makes this easier.
Thanks for the reply. A big part of my concern is just that READABILITY. On the other hand too many nested IF statements looks messy as well.
I don't think this is a bad practice, but at a glance and without knowing the rest of you code you seem to be inconsistent with it. The first if: if (txtIP.Text == string.Empty) { MessageBox.Show("IP cannot be blank"); } Seems to be functioning as an error check/exit condition just as the second if is, where it is basically saying if some condition log message and quit. Would something like the following make sense: if (txtIP.Text == string.Empty) { MessageBox.Show("IP cannot be blank"); return; } By doing a return; here you would avoid executing, possibly unnecessarily, any code after the if..else. Also, isVpn is a boolean so you don't need the == true: if (isVpn == true) is the same as if (isVpn) For if (isVpn) { ... return; } else { ....code here. } VS. if (isVpn) { ... return; } ....code here. They are functionally the same, because in either case the "...code" will only execute if the if statement resolves as false due to the return. That being said, the else might make it a little more easier for humans to read, but really that is just a matter of preference.
There are a few ways. The easiest would be to add another prompt for the second value. You could also use just one prompt and say "enter two numbers larger than 0 separated by a space", then parse the entry into two variables to use in your computations.
Thanks, will check out Code Clean. I do have Code Complete 2 on my list of books to read. I guess this method was a bit more convenient for my workflow to stop execution and avoid a exceptions.
Ya, I think this might not be the best example this is just one the simpler ones to post. Below is a larger subsection of my code as you will see I use the IF...RETURN to avoid further execution and avoid exceptions. You might have a heyday with this if (txtHostIP.Text == string.Empty) { ShowMsgBox("Host IP Address cannot be blank."); } else { //Dispose of any prior data //stored in instance of hostInfo hostInfo.Dispose(); hostInfo.HostIP = txtHostIP.Text; hostInfo.UserID = txtUserID.Text; //Check for VPN bool isVpn = false; foreach (string s in vpnScope) { if (hostInfo.HostIP.Contains(s)) { isVpn = true; WMI = false; break; } } ToggleControls(false); if (btnConnectGrant.Text == Button.Connect) { txtConsole.Clear(); //Check connection to host before proceeding. if (IsHostAlive(hostInfo.HostIP) == false) { ClearForm(true); return; } try { adTasks = new ADTasks(hostInfo, this, false, false); if (isVpn == true) { //VPN Host this.WriteToConsole("--VPN User--\n"); remoteTasks = new RemoteTasks(hostInfo, this, WMI); } else { if (adTasks.CheckConnectionWMI() == true) { //WMI OK - use GetInfoByWMI() WMI = true; remoteTasks = new RemoteTasks(hostInfo, this, WMI); } else { //WMI FAILED - use GetInfoByService() WMI = false; this.WriteToConsole( "WMI Failed to connect. Using Script method.\n"); remoteTasks = new RemoteTasks(hostInfo, this, WMI); } } //Reset form if inner exception occurs if (remoteTasks.Exceptionthrown == true) { ClearForm(false); return; } } catch (Exception d) { this.WriteToConsole("--Failed to connect to host--"); eventLogs.LogError(d); ClearForm(false); return; } //If hostInfo.UserID blank, update with //current user logged onto host pc if (txtUserID.Text == string.Empty) { txtUserID.Text = hostInfo.CurrentUser; hostInfo.UserID = hostInfo.CurrentUser; } WriteToConsole(string.Format("IP Address: {0}", hostInfo.HostIP)); WriteToConsole(string.Format("Online with: {0}", hostInfo.HostName)); ToggleControls(true); btnConnectGrant.Text = Button.Grant; btnRemoveDisconnect.Text = Button.Disconnect; } else if(btnConnectGrant.Text == Button.Grant) { //Clear list of current admin's in ComboBox //comboAdminList.Items.Clear(); ToggleRadioControls(false); ToggleControls(false); if (txtUserID.Text == string.Empty) { txtUserID.Text = hostInfo.UserID; ClearForm(true); txtHostIP.Text = hostInfo.HostIP; txtUserID.Focus(); btnConnectGrant.Text = Button.Connect; btnRemoveDisconnect.Text = Button.Remove; ShowMsgBox("User ID cannot be blank when granting rights."); return; } else { //Update user ID in case it's changed hostInfo.UserID = txtUserID.Text; } try { adTasks = new ADTasks(hostInfo, this, isProductionEnv); if (hostInfo.UserIDExists == false) if (isProductionEnv == true) { ClearForm(true); btnConnectGrant.Text = Button.Connect; btnRemoveDisconnect.Text = Button.Remove; return; } } catch (Exception d) { MessageBox.Show(d.ToString()); ClearForm(false); return; } if (hostInfo.AdminRightsExist == false) { DialogResult result = MessageBox.Show(string.Format( "Are you sure you want to grant {0} admin rights for {1} hours?", txtUserID.Text, timeSpan), "Targ 2.0", MessageBoxButtons.YesNo, MessageBoxIcon.Question); if (result == DialogResult.Yes) { adTasks.ManageRights(ADTasks.Add, timeSpan, WMI); } else { WriteToConsole("Cancelled adding rights..."); } } else if (hostInfo.AdminRightsExist == true) { DialogResult result = MessageBox.Show(string.Format( "User {0} already has Admin rights on {1}.\n\n" + "Do you want rights to be removed in {2} hours?", hostInfo.UserID, hostInfo.HostName, timeSpan), "Targ 2.0", MessageBoxButtons.YesNo, MessageBoxIcon.Question); if (result == DialogResult.Yes) { remoteTasks.CreateRemovalTask(ADTasks.Add, timeSpan); } else { txtConsole.AppendText("Cancelled adding rights..."); } } //End of btnConnectGrant scope, set back to intial state
Thanks for the Tip, i've used it in the past but sparingly.
He's not at all going 'What, that's ALL?'. He just says he's annoyed by the fact that the whole package still requires a substantial annual fee. Which is understandable, because A in exchange for the educational license Xamarin receives your personal data. And B if the point of the educational license is for students to become familiar with Xamarin studio, then why not give them access to the whole package? Second of all, if everyone just goes 'oh, it's free, thank you. And because it's free I'm not going to voice my opinion, because geez, I do not want to appear ungrateful.' Then how can Xamarin improve their service? It's still up to them whether they consider it a valid opinion.
I'm surprised you're the only comment here that's got this right. Beyond that, given the context of the examples, I think the ir/return this is the wrong approach anyway. When used for validations, to bail out of processing, a better design is to throw an exception here. Putting these two ideas together, what you really want to do is instantiate an exception object here (either use the standard exception class, or subclass for yourself), set its text to that message and throw it. The calling code should be in a try/catch block, so it'll catch the exception, read the text in it, and decide how to display it (in a message box? output text to the console? whatever's appropriate at that UI layer, but not down here in the guts)
Argh. No. Please no - [Using exceptions for flow control is a classic anti-pattern](http://c2.com/cgi/wiki?DontUseExceptionsForFlowControl). They should be for really exceptional things like "The network connection died in the middle of reading" or trying to access a class that's in a library that doesn't exist - something like that. Business logic decisions like "Is this user permitted access" or "Is this a real IP address?" should be in some kind of validation method, and return some kind of useful information (usually - unless this is a security function, in which case returning useful information could assist an attacker). Throwing exceptions can cause other problems too. What I was trying to get across when I was writing this on my phone on the bus this morning was that: If you follow SOLID principles, then Seperation of Concerns should tell you that separating your Validation and 'Doing' codes is a good thing. If you want to return something more detailed (like a reason for failing validation rather than simply true/false) - then a ValidationResponse object or something like that is perfectly fit. And finally perhaps more directly answering the question: Returning early is a good thing, generally. It makes writing tests easier, and it stops code further down from returning a 'success' when 'fail' was intended. 
Ignoring the more fundamental philosophic design points made by others, at your level I think that a simple If.. return pattern is the answer to your question: { If (invalid condition 1) { display message; Return false; } If (invalid condition 2) { display message; Return false; } Do things as all conditions are valid; Return true; } This results in clean readable code as you don't have nested if statements or else statements. You just have some logical conditions that must be met to continue.
No, I only cringed at the silliness of switching to *PHP* for something like that. PHP is the epiphany of a shitty language.
&gt;I am writing an application at work that remotely manages Temporary Admin Rights. My honest opinion as a systems administrator is that you should be doing this with powershell.
And its a good habit to get into since it ports to other languages (read: Java) whereas == doesn't always
Not to mention that throwing and catching exceptions is extremely slow, and forces use of try..catch more often. Using them for flow control in any significant way will impact performance heavily.
If you have to nest more than two levels consider making a function to do something inside there. Always think about what might be more readable if it could be a separate function with a useful name.
I agree wholeheartedly. Nested if's are not evil, but do make the code harder to read.
What I would recommend is to not surprise yourself. Returning from a method in a seemingly random place is not inherently bad, but in turn the method can't be too long, or have too many unrelated paths you return from. Otherwise you'll have no idea why your code does things and end up constantly stepping through it with the debugger.
No its not For all the people down voting me research it http://yoda.arachsys.com/csharp/exceptions2.html
Don't use (str == String.Empty), use String.IsNullOrEmpty(str) (Or String.IsNullOrWhiteSpace(str)) 
&gt; Argh. No. Please no - Using exceptions for flow control is a classic anti-pattern No one said you should use exceptions for control flow. Exceptions are thrown when preconditions aren't met or an unexpected state is met. In this case the precondition is that the host is not a VPN client. The method cannot do anything reasonable in that case, and should throw an exception. You don't have to catch that exception in the calling code, because it will not happen as long as preconditions are met. The exception being thrown would be a clear indication of a bug to the developer since the caller should have checked if it's running on a VPN client before calling the method.
find a single problem, and ask for help. in a lot of cases, merely phrasing your question properly will lead you to an answer.
imo, the best way to learn something is to do it. therefore, find something that annoys you, and write a c# program that makes it less of an annoyance.
&gt; Preconditions like the user inputting incorrect information (IP being blank), or validating the state of the machine (i.e that it's on a VPN or something like that) should be considered a 'normal' use case. Normal use case for the application but not for the business logic. Invalid IP address passed to the business logic is a programming error since it should have been addressed before it reached that point. Therefore an exception is reasonable to throw.
That benchmark is severely flawed. It has no call stack for the exception to unwind and uses the wall clock to measure time.
EDMX is deprecated and won't be available in EF7. Avoid using it if you can.
You'll see people say that if you know JAVA you'll have an easy time getting into C# - but I'd advice some caution. We work mostly with the Micrsoft platform (including sharepoint), and we've hired a lot of JAVA programmers over the years. A lot of them take quite a while to acclimatize. It's true that they can all immediately work with C#, but most of them end up writing JAVA in C# rather than writing C# - which is quite a bit different since it among other things means they don't take advantage of the .NET toolset. Most eventually learn, but some never learn. Best way to learn C# is to use it though. Eventually you're bound to get stuck on a problem and seek help on the internet, and when you do that you're going to stumble upon C# solutions which are inherently different from your previous experience.
This reminds me of Java-only developers who will often talk about how Operator Overloading causes crappy code. It is an amazing coincidence that the language features that cause shitty code tend to not be in the claimant's pet language.
if you're validating strings for empty or null before inserting you can just do if(string.IsNullOrEmpty(string_xpto))
Good advice, this is generally the way to do it. I'd add that you can never trust the correctness of any incoming field and that all data must be validated as much as possible at the presentation layer but unfortunately revalidated at the business/server layer. Pass as much of the burden on to the client. 
does that also work for DBNull ? I learned only yesterday that DBNull != null in C# . 
im rather new to mvc. does that mean to validate it in the view so that the model has less work ? 
thanks ill add that to my parse method. The excel doc has 46 columns so i have a lot of typing to do \o/
ah. thanks.
All you need do is your own test to see the performance. The whole point is not to use exceptions for control flow unnecessarily. They should be for exceptional situations. The case below is obvious of course, this is just a test. Output outside debugger, in release mode: No exceptions: 17 ms w/ exceptions: 2994 ms 0 No exceptions: 24 ms w/ exceptions: 3011 ms 0 const string notAnInteger = "test"; const int numTests = 100000; int dummy = 0; do { Stopwatch sw = new Stopwatch(); sw.Start(); for (int i = 0; i &lt; numTests; i++) { if (Int32.TryParse(notAnInteger, out dummy)) { dummy++; // do something when successful } else { // do something when not } } sw.Stop(); Console.WriteLine("No exceptions: " + sw.ElapsedMilliseconds + " ms"); sw.Restart(); for (int i = 0; i &lt; numTests; i++) { try { dummy = Int32.Parse(notAnInteger); dummy++; // do something } catch (FormatException exc) { // do something when not } } sw.Stop(); Console.WriteLine("w/ exceptions: " + sw.ElapsedMilliseconds + " ms"); Console.WriteLine(dummy); } while (Console.ReadLine() != null);
FYI, if the `TryParse` fails, `myvar` will automatically be assigned `default(&lt;type&gt;)`. You shouldn't need to assign a value on the bad-parse case unless you want to assign another meaningful failover value. All you need is: &lt;type&gt; myvar; &lt;type&gt;.TryParse(field, out myvar); (Though likely you'll still be using the `if` conditional to handle a bad parse; good chance that you want to report a bad input.)
Doubtful, but you can always write up your own utility method to include the `DBNull` check: public static bool IsDBNullOrNullOrEmpty(string value) { if (String.IsNullOrEmpty(value)) return true; if (value == DBNull) //not sure on the DBNull syntax here return true; return false; } You can also write this as an extension method and/or with a better name (mine is a bit verbose for demonstration purposes).
Ahhh, ya learn something new every day :)
DBNULL is not the same as c# null, so if this is going into a database, check for dbnull. Also, make sure you escape single quotes. If you're adding values to the dB using parameterized queries, you're okay. If you're concatenating strings to update/insert you need to check the string for sql injection protection. (escape single quotes etc ). Don't be Bobby Tables.
did some research. It's: if (value == DBNull.Value)
The validation code might take a while to run. Which means that's a very good candidate for the new async pattern. Even so, if processing the file could take longer than the HTML timeout, you might want to move it to a Windows Service that accepts input from a MSMQ, and have it report completion status via DB table (so the user can refresh the page to see 40% done.. 60% done.. etc) 
Did you try using "SqlBulkCopy". It is more efficient, quick and will take care of null automatically. If it is loop you are using, apply this in conditions. &gt; if (!Information.IsDBNull(values) { }
Be aware that this is listed as **free** in the Visual Studio Gallery, but it is **NOT FREE**!
May I offer a related comment? - ditch regions. They're awful. - don't `if (isVpn==true)`. Simply `if (isVpn)`.
Love it :-)
Same thing...I created a Public Method this is used when my Main Form is passed to another Class to allow writing to the output textbox/console. Just needed to update that to make it uniform. public void WriteToConsole(string message) { if (message == "CLEAR") { this.txtConsole.Clear(); } else { this.txtConsole.AppendText(message); this.txtConsole.AppendText(Environment.NewLine); } } 
And the correct way would be to choose trial and let the user choose at first what they want to use, and not this sneaky bullshit.
What tools have you used? I recently tried JustCode, didn't care for it that much.
It's not sneaky. It says it openly in the description with some bright red text to draw attention to it. It is free for non-commercial users. Sneaky would be if it said free but was actually trial software which expires and forces you to pay for it, which it is not.
Thanks for the suggestion. While currently I have been focusing on learning/developing in C#, that's why I chose it to develop this solution. I know a bit of batch scripting and more VBscript - I have yet to get started with PowerShell and I know it has plenty of advantages over normal scripting. The original solution for our company was built by our Assoc IT Director in VB .NET. But I hope to get started with powershell soon to take advantage of it's capabilities compared to batch or vbscript.
I don't think anybody is panicing this is a fair warning as using it commercially is technically breaking the law. With the price being $75 per user I think many people will have a particularly hard time rationalizing the purchase to management, considering you need to license your whole team to use it effectively. It's a good thing this exists though, I've been waiting for some intelligent handling of tabs and aligning for a while now, may be it'll get picked up.
You have a good point, and I agree to an extent. Let me talk about my own experience. I was a Java programmer (among many other languages) when I was asked to switch to C#. My employer had all Java people, and we were all asked to switch to .NET, so we basically were coding Java one day and C# the next. The whole department. We definitely did some "writing Java in C#" for a while. That said, we got stuff done, which was really the important part at the time. I found that my biggest errors were: * I didn't find good info right away on C# iterators (a coworker gave me an out of date book to use as reference) and ended up using old style iterators when I could have just been using foreach. That went on for about two weeks and I felt really stupid about it when I learned C# had foreach. * I didn't realize the importance of LINQ right away, so I didn't use it nearly as much as I should have. This problem went away more gradually, because the more I used it, the more I came to understand why I should be using it. * The boss made us go with nHibernate instead of Entity Framework. (I have serious complaints about both, but I think we would have gotten things moving a lot faster with EF.) With a number of years of hindsight, I think we did pretty well at making the switch. But then, we were all quite good programmers, and picking up another language was no big deal. &gt; Most eventually learn, but some never learn. That's true of any language under any circumstances. There are a lot of people working as professional programmers who really shouldn't be, because they don't have the logical thought processes to be able to write quality software. One odd thing I've noticed: I find a much higher percentage of people working as .NET developers are just plain *bad at it* than for Java or any other language I've ever worked with. And, most (not all, but most) of the ones who are just *bad at it* are career .NET people who have never done anything but Microsoft programming. I'm really not sure why this is. &gt; Best way to learn C# is to use it though. Absolutely. True of any language, programming or otherwise. 
Appreciate your input. Do you omit regions all together and just systematically group like methods? I have begun correction my bool evaluations, thanks.
hmm datetime fields not working. I know this as the first 6 rows have no value inserted in the datetime field and the 7th row throws an exception for datetime i used &gt; if (row[19] != DBNull.Value) { double d = double.Parse(row[19].ToString()); item.DateSupplierOutsourced1 = DateTime.FromOADate(d); } Edit: All I had to do was item.DateSupplierOutsourced1 = (DateTime)row[19];
Lol, I think this is excatly why I have these IF...RETURN's in place because I had to step through code and provide some sort of fix. While again everything was working, def not easily read code paths. I refactored some code last night and looks much cleaner so far. Thanks!
I don't this it's good idea. Your code is looking well, but commits to VCS is ugly: in fact you change single line of code, but you got all neighbours strings in diff. 
And you're introducing tabs again. Clever would be to just see "hey, there's a space and a comment on each line..."
Your experiment suggests that *having* a try/catch block makes the code slower. But I hope you're not advocating that we should write all of our code free of exception handling logic. In the real world you're *going to* have those try/catch blocks, for system errors if not for your own. So the *net* cost of having your own exceptions is nothing.
&gt; hard time rationalizing the purchase to management I don't know about that. The [average software engineer's salary in the US is $94,000](http://www.indeed.com/salary/q-Software-Engineer-l-United-States.html) I guess the average length of employment at a firm is around 3 years, so let's say the average employer of software engineers spends an average of $300,000 on an employee over the length of their employment. A developer tool doesn't have to save that much time before it starts saving a customer money, and I think this tool will save most users some time.
From Microsoft's own **Best Practices for Exceptions**: &gt; Throw an InvalidOperationException exception if a property set or method call is not appropriate given the object's current state. &gt; &gt; Throw an ArgumentException exception or a class derived from ArgumentException if invalid parameters are passed. http://msdn.microsoft.com/en-us/library/seyhszts%28v=vs.110%29.aspx
Ha! I don't think you realize what kind of budget most managers have to work with. Budget for hadware/tools/etc. is completely different from salaries. It isn't as simple as you state it. Not nearly.
&gt;you need to license your whole team to use it effectively I just wanted to point out that this tool gives you the option to convert to/from spaces on saving/loading so individuals can use it independently of their team if they want to.
The repeater is very lightweight and easy to use, also giving you great control over the actual markup and a small overhead. I've used it a lot and still do. If you want more functionality though, a ListView is the one to go for. Edit: He's actually doing the repeater markup wrong, something I am having to refactor after a co-worker left a pile of crap webforms app behind him. He's putting the table markup in the &lt;ItemTemplate&gt;, when he should be putting the table opening tag in the &lt;HeaderTemplate&gt; and the closing tag in the &lt;FooterTemplate&gt; tag. What he ends up with is a separate table for every row of data, instead of one table for the lot.
I didnt mean to say that just having a try/catch block makes it slower, its the throwing of the exception that makes it slow. And yes, exceptions are valid and should be used where appropriate. Using them for control flow is what precipitated this.
(sorry if this is redundant or you know already) So regions were introduced in VS 2003 to help hide boilerplate auto-gen'd code; code that you didn't write, but that the frameworks created for you. So the region construct allowed you to collapse code in Visual Studio. IOW, it was created to hide code. Fast forward to today where the mindset is: keep your classes small. If you have code that needs to be hidden, ask yourself *why?*. Is it unrelated to the purpose of the class or the current method? Does this code truly belong here, or in another class? If it's a chunk of code in a large method, then the problem is that you have a large method that should be refactored into smaller methods. VS allows you to collapse methods without the use of regions. Blog post: [Visual Studio Regions Make Me Cringe](http://blog.json.codes/software-development/visual-studio-regions-make-me-cringe/) 
Personal salary, especially in the US (wtf, are there no programmers outside of US?) is completely irrelevant in this case, the price for the tool is half the price of Resharper while you can't even really explain what it does to the management except "well, it's nicer formatting". With no recommendations of the tool(aka advertising) and zero market penetration you're looking at a very slim chance of getting this tool anywhere except personal Hello World projects for quite a long time. This may fly with some managements but certainly not mine, for better or for worse.
In C# editor for example; a single Ctrl-K-D(Format Document) will fuck up any and all spaces you might've wanted to use for alignment
Saudis write like this. some1 = "someone", 7lik = "halik", 7bb = "habibi" and so on. 
Instead of putting everything in the if statement, try this: public void getResponseCode() { if (count % 5 != 0 || count == 0 || count == 1) return; try { //Check Server Response Code statusLabel.Dispatcher.BeginInvoke(DispatcherPriority.Send, new ThreadStart(() =&gt; statusLabel.Content = "Checking Server Response 1")); HttpWebRequest webRequest = (HttpWebRequest)WebRequest.Create("http://pattersoncode.ca/resources/debug.php"); webRequest.AllowAutoRedirect = false; HttpWebResponse response = (HttpWebResponse)webRequest.GetResponse(); responseLabel.Dispatcher.BeginInvoke(DispatcherPriority.Send, new ThreadStart(() =&gt; responseLabel.Content = (int)response.StatusCode)); Thread.Sleep(100); if ((int)response.StatusCode == 200) { responseLabel.Dispatcher.BeginInvoke(new ThreadStart(() =&gt; responseLabel.Foreground = Brushes.DarkGreen)); } statusLabel.Dispatcher.BeginInvoke(DispatcherPriority.Send, new ThreadStart(() =&gt; statusLabel.Content = "")); setupTheWatch(); } /* CATCH EXCEPTION For HTTPWEBRESPONSE.GETRESPONSE(STATUSCODE) */ catch (WebException ex) { statusLabel.Dispatcher.BeginInvoke(DispatcherPriority.Send, new ThreadStart(() =&gt; statusLabel.Content = "Checking Server Response 2")); responseLabel.Dispatcher.BeginInvoke(DispatcherPriority.Send, new ThreadStart(() =&gt; responseLabel.Content = ((HttpWebResponse)ex.Response).StatusCode)); statusLabel.Dispatcher.BeginInvoke(DispatcherPriority.Send, new ThreadStart(() =&gt; statusLabel.Content = "")); setupTheWatch(); } //END GETRESPONSECODE METHOD }
Just trying to understand your intention... execute the method only when the count is a multiple of 5 (meaning the "count != 1" clause is superfluous?) EDIT: I have no idea what the issue is, but the general idea seems off to me. If you only want to call the method sometimes, only CALL it sometimes, don't make it so it only WORKS sometimes. 
Don't see anything wrong that jumps out except casting an enum to int to check against magic number if ((int)response.StatusCode == 200) should be if (response.StatusCode == HttpStatusCode.OK) As for the hanging, place breakpoint at the if, see if it hits. If it does you can see the values. If it doesn't, and the application hangs you can pause via VS and see the different points at which your threads are stuck with Debug-&gt;Windows-&gt;Threads, you can catch most hung worker threads from there. As a general note applications generally don't just "hang" - they hang at specific locations that are most of the time really trivial to track down, just check the debugger, the .NET one is simply amazing.
Make sure you close your requests/responses. They can cause weird behaviour if left open.
If you have this installed for non-commercial use, you get this window: http://i.imgur.com/PoFHfm0.jpg It's not closable by normal means, it's forced on top of all windows, and you cannot interact with VS for the 60 second duration. Yeah, unless you seriously want to spend $75 on this, don't bother. 
Thats the issue, the breakpoint wasn't showing me anything. But I fixed it by using a TimeDifference instead of count being divisible by 5, and moving it outside the method. I also took your advice regarding HttpStatusCode.OK.
No joke, we use an "enterprise Java framework" at work and the plugin to integrate REST HTTP calls and JSON serialization costs $26,000 if you want to use it in production.
Thats the issue, the breakpoint wasn't showing me anything. But I fixed it by using a TimeDifference instead of count being divisible by 5.
If the breakpoint isn't hit that also shows you something - you don't reach it, so you need to put it earlier in your call tree, time difference is also a solution I suppose
Not that I've seen. You can start a separate tab group, but I'm not sure you can have the same file open in two groups.
Nope, it hit it and started going through the code, but crashed anyway without telling me why. Yeah the time difference is working out much better for me (Mainly because something was causing count to double every time)
Break button on a keyboard? oO... I guess it's been a long time since I've used a Windows PC :P 
I suggest you read up on .NET's garbage collector. Unless your dataset(xml files) are very large, or there is a huge amount of them and you intend to keep them in memory that's not even a valid concern; a couple of parsed xml files in memory shouldn't cause any slow downs until GC gets them. As alternative do the parsing once, store in convenient format - and query that instead of xml file, it can also bring other benefits(indexing, full text search etc) if you need them
Unless you need to manually edit the XML files in-place in the folder, serializing the data is a workable option. The slowest part of this program will be disk I/O, followed by parsing the XML. Serialization will cut down dramatically on loading the data, as it is not plain-text that has to go through a parser. As far as the concern of reading the XML and causing the program to slow-down from not discarding the read file when a new folder is selected: That won't be your bottleneck. Disk I/O will be the slow part of this, followed by the XML parsing. If you can load all that info into RAM and keep it there, then the program will be much more performant. If you're talking millions of folders, then you'd need to build a smart caching mechanism: something that will remove less-used objects from the cache to reduce memory footprint. Again, using serialized objects written to disk and pre-loading as much as possible up-front will make the program snappier. If you're dealing with millions of folders, consider separate worker threads to load/save the objects to disk asynchronously to the UI.
I don't understand. Are you talking about having two tabs sets per screen?
I know there are still WebForms apps all over the place, but isn't there enough documentation already? I realize this is a 1.5yrs old article, but this material has been covered repeatedly by many sources.
Why can't you use a database for this?
If you've ever used vim, I'm talking about how it handles splits. Basically each tab can have as many splits as you want, and they are "contained" in that tab (aka I could have a "Model" tab, where the left side is the .cpp file, and the right is the .h).
You can, for C# files at least. If you go Window -&gt; New Window, it will create a new tab that works just like any other and can be moved between groups. Does not work with UI design files though (like Xaml ones).
So... It's not really free.
I thought this too! It may look nice with many lines over another like this... But really, when do you have so many lines like this over another? Odds are that your method does too much in this case.
I would suggest rather then reading the files every single time a folder is clicked on, loaded them once at program startup and maintain a FileSystemWatcher and handle the events of changes to the file and reload them then. How are you parsing the XML files? If your just parsing the text in your program I can't see a problem with File.ReadAllText(), take a look at the documentation here: http://msdn.microsoft.com/en-us/library/ms143368(v=vs.110).aspx Then all you need to do is make sure you handle the exceptions it throws correctly.
Idea #1: a mobile app similar to the android app "Out of Milk" which is a grocery/shopping list app. But a bit better, where you can create a local database of items using a barcode scanner from the phone camera. I recently started using this app and it seems it only recognizes american items (barcode). I thought it would be neat if you could add items to a local database. You would scan a barcode - it would maybe check an online web service for the product - return "no match" - ask if you want to store it locally - then give the item/product a name, category and a perhaps a price then save. So next time you scan the barcode it checks the local database retrieves the name, category and price. I've never programmed for a windows phone but one concern might be the file size of the local database. Don't even know if a windows phone is allowed to have a local database (perhaps SQL Compact?).
I'm also loading a 200x200 image for each folder to show the user which item that folder represents. Not sure if it'll be wise to load over 300 images.
Bad idea without providing a fully user-friendly front end for the editing. All it takes is someone to delete an = or " and the XML becomes invalid. Trust me, we went through similar. If you are doing this you should not trust users to open the XML directly and should create your own program for editing it. That also will allow you to ensure proper serialization and standardize it so it reads much more efficiently. 
Hrm, good point. Thanks.
Will the images be changing? Or just the files?
Thanks. Oracle is so far behind the times.. I've found out that Oracle has a client in beta that just started supporting EF6. Despite going through the painful process, I still couldn't wire it up properly and reverted to EF5.
Because my dev environment doesn't have direct access to the final DB, I'm attempting this trick. Have all the expected tables in one schema in my dev box. After migrating to use the mix-schema database, rely on synonyms. Seems to be working.
Of course that code is going to be slower, its actually doing something (creating the exception for you to view) instead of doing absolutely nothing (empty else code). Try logging both to a file and report those results. Also its still junk code because people won't be causing 100,000 exceptions in a loop like that, or are you saying each exception will take 30 micro seconds to handle? You must not have read that blog post because it agrees you should use TryXXX and check values before trying. I was trying to say that performance is not a reason to not use exceptions. &gt; **If you ever get to the point where exceptions are significantly hurting your performance, you have problems in terms of your use of exceptions beyond just the performance.** &gt; &gt; In other words, in cases where performance is an important criterion for deciding not to use exceptions, there are other criteria which would also suggest avoiding exceptions for those cases - and those criteria are probably more important than the performance. &gt; &gt; Sometimes there are things you can do about excessive exceptions - check whether an operation is valid before trying it if you're the caller, provide a way of testing validity before the call (or using the TryXXX pattern as per TryParse) if you're the callee. Sometimes the API you're using doesn't provide the appropriate calls, and that's where you could end up with exception-based performance problems you genuinely can't avoid.
Update: Xamarin is now FREE for students, and has special pricing for educators: http://blog.xamarin.com/xamarin-for-students/
Problem with the form. Should work now :)
Xamarin is now FREE for students (http://blog.xamarin.com/xamarin-for-students/)
Only one image will be displayed, but the image will change depending on which folder is selected.
[The Break key](http://en.wikipedia.org/wiki/Break_key) is not unique to M$ Windows.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Break key**](https://en.wikipedia.org/wiki/Break%20key): [](#sfw) --- &gt; &gt;The __Break key__ is a key on a [computer keyboard](https://en.wikipedia.org/wiki/Computer_keyboard). The Break key originated with 19th century [telegraph](https://en.wikipedia.org/wiki/Telegraphy) practice. While the Break key might no longer have a well-defined purpose, it can be used by software to switch between multiple login sessions, to terminate a program, or to interrupt a modem connection. &gt;Because the break key will send a software [Interrupt](https://en.wikipedia.org/wiki/Interrupt) halting the flow of code, the Break key is also called the Pause key. It can be used to pause some games, such as *[Deus Ex](https://en.wikipedia.org/wiki/Deus_Ex)* and the *[Call Of Duty](https://en.wikipedia.org/wiki/Call_Of_Duty)* series. &gt;==== &gt;[**Image**](https://i.imgur.com/YTiEp2U.jpg) [^(i)](https://commons.wikimedia.org/wiki/File:Key_break.jpg) - *Break/Pause key on PC keyboard* --- ^Interesting: [^Scroll ^lock](https://en.wikipedia.org/wiki/Scroll_lock) ^| [^Computer ^keyboard](https://en.wikipedia.org/wiki/Computer_keyboard) ^| [^Prison ^Break ^\(season ^1)](https://en.wikipedia.org/wiki/Prison_Break_\(season_1\)) ^| [^Print ^screen](https://en.wikipedia.org/wiki/Print_screen) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+clw51er) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+clw51er)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
That's definitely better as a temporary measure, but I wouldn't consider it a full solution. One thing I didn't note was that because it forces itself on top of all other windows, it can interrupt anything else I'm doing if I have VS open in the background. That's a bit excessive. 
Yeah. I did web forma development for the past 3 years, then I got a chance to do MVC. It's miles better
http://www.amazon.com/gp/aw/d/1430242337/ref=mp_s_a_1_1?qid=1415400001&amp;sr=8-1&amp;pi=SY200_QL40 I would recommend this book 
Performance is not a reason to not use exceptions when they should otherwise be used, I agree with you on that. And yes I saw the article mentioned most all of these points, but you still seemed/seem to be saying what originally started this discussion, namely using exceptions for the simple control flow OP was doing. Maybe if it were a framework or other situation. You would be surprised. For my job I have refactored tons of production legacy code out of using exceptions in just this manner. It was/is a framework/data layer and the custom formatting of strings and control flow heavily used exceptions unnecessarily. Think reading hundreds of thousands of records and performing formatting. Also on startup hundreds of exceptions were being thrown increasing start up time to take 30-200 seconds.
I would just load and cache all the images upon application startup, unless you could see there being a few thousand more folders in the near future?
Hrm, could do that. Can I just Google "c# image caching" or is there a more technical term?
What /u/otac0n is trying to say I think is that the compiler emitted code is not the same as what you would write if you naively used Task (in either the C# or F# code, and on top of that the C# IL is sufficiently different than the F# IL) ... If you had: internal static async Task&lt;int&gt; MethodAsync(int arg0, int arg1) { string result = await HelperMethods.MethodTask(arg0, arg1); return result.Length; } You might think it is the same as this internal static Task&lt;int&gt; MethodAsync2(int arg0, int arg1) { return HelperMethods.MethodTask(arg0, arg1).ContinueWith(r=&gt;r.Result.Length); } Which conceptually it is, but the compiler doesn't care enough to optimize that far and so goes for a much more conservative (and thus correct in most cases) approach like this: internal static async Task&lt;int&gt; MethodAsync3(int arg0, int arg1) { var statemachine = new MethodAsync3Machine { Arg0 = arg0, Arg1 = arg1, Builder = AsyncTaskMethodBuilder&lt;int&gt;.Create(), State = -1 }; statemachine.Builder.Start(ref statemachine); return statemachine.Builder.Task; } class MethodAsync3Machine:IAsyncStateMachine { ... MoveNext method containing unrolled continuation sequences equivalent to the contents of MethodAsync, SetStateMachine method } (very familiar code you would notice if you recognize how yield return works) For more information: http://weblogs.asp.net/dixin/understanding-c-async-await-1-compilation And he is saying that the await lines don't actually care for whether or not they are awaiting for a `System.Threading.Tasks.Task` or something else, only that whatever it is has a method called `.GetAwaiter()` which returns a `TaskAwaiter` structure. This has 2 implications you may care about: 1. calling some fractal callstack of async methods that call async methods down the rabbit hole is going to use up heap just like the IEnumerable yield return callstacks. 2. There may be other types that meet the await semantic requirements (indeed there is `ConfiguredTaskAwaitable` for example) which could be useful (you use this structure when you append `.ConfigureAwait(false)` to an await call). These lead to the guideline that for simple cases you are probably better off writing the TPL method continuation form from pre-C# 5 if you can or expect that your method is going to be used somewhere deep in an async call stack. Using async isn't bad per-se, but you should weigh the complexity of the code you would write without it vs the overhead of using it.
Use a boolean array to track the bits. Its the most badass.
This is exactly what I was trying to convey.
You might want to ask Mads. He had this for typescript with js in a separate window only for that tab 
Who's Mads?
WPF
Probably [Mads Kristensen](http://madskristensen.net/).
If by Command Objects, you mean an SqlCommand, then they're not really comparable. A SqlTableAdapter uses SqlCommands internally to perform it's operations. If you're learning, then I would suggest that you start with SqlCommands - these are the lowest level objects and without a doubt, the fastest. It will also give you good exposure to how ALL upstream abstractions work. You'll write the SQL yourself, which helps you to understand many of the principles that will become important later. TableAdapters are the next level up - a light abstraction/helper object that eases working with DataSets. They use SqlCommands internally, and are used to group commands working with a single table together, e.g. select, insert, update and delete. They are extremely helpful when working with datasets. Entity Framework and all other ORMs still use SqlCommands behind the scenes, but are a very high level abstraction - The objects you work with don't always have to match the backing table in sql server. So, I'd say, first learn to use SqlCoonnections and SqlCommands. Then work with SqlAdapters - You'll gain a lot from working with the low level objects before moving onto an ORM. ORMs make your life easier, generally, but knowing the basics will stand you in good stead for a very, very long time! In regards to performance and system resources though, with SqlCommands and Adapters, It's not something you'll need to worry about - It's when you start using ORMs (EF being one of the slowest, Dapper the fastest) that you'll need to think about performance, and then only if you're building a high performance application. Differences in speed are measured in the hundreds of milliseconds, so until you're building something that's accessing the database hundreds of times a minute, then it's a non-issue! If you're interested though, here's some speed comparisons: [Link](https://github.com/StackExchange/dapper-dot-net#performance)
Since you are going with straight SQL, I recommend using Dapper, a micro-ORM, plus a CQRS-style pattern. It looks something like this: public class Foo { public string Col1{get;set;} public string Col2{get;set;} public string Col3{get;set;} } public class Queries { private IDbConnection Conn {get;set;} public Queries(IDbConnection conn){Conn=conn;} public IEnumerable&lt;Foo&gt; GetFoos(FooQuery fq) { return conn.Query&lt;Foo&gt;("SELECT Col1, Col2, Col3 FROM dbo.Foos WHERE Col3 IN @col3s", new {fq.Col3s}); } public void AddFoo(Foo fooToInsert) { return conn.Query&lt;Foo&gt;("Insert (Col1, Col2, Col3) VALUES (@col1, @col2, @col3)", foo}); } }
I think that should come later - OP is still learning, so starting with the basics will help more than starting with an ORM - no matter how good it is (and Dapper is awesome)!
That feature just converts normal tabs to spaces. This extension adds [elastic tabstops](http://nickgravgaard.com/elastictabstops/) and can optionally convert them to spaces when saving.
Intellipaat is the perfect web site to get into new technologies and have a hint of the main and newest projects around big data, open source... The material is really well organized and easy to understand and go through.
A binding needs a DataContext to work, so trying to set the DataContext via a binding won't work unless you have a property to bind to on the default DataContext (i.e. the code behind of your page) If you don't have this then you should see a binding error in your output window. Why do you care about doing this anyway, given that you have already got it working with a nested element?
IPC (Interprocess Communication) is one option, yes. It's tricky, though: You have to take into account, depending on the languages and applications, things such as memory alignment, memory pinning, endianness, etc. Have you heard of IronPython? I've never used it, but it might be worth investigating. 
If you wanted to use an attribute directly, you could add your VM as an application resource and use DataContext="{StaticResource someKey}", though I think your original approach is easier.
Thanks for the reply EscapeLizard. I haven't heard of IronPython before, no. It looks like a custom implementation of Python for .NET. It's cool, but I was wondering if there's a more general way of doing it, where you can use code from two diffirrent languages and with some kind of 'glue' make them work together, without having to modify their core implementation or the implementation of their language. Maybe I should look into IPC as you mentioned.
You might be able to use that library with IronPython which you can definitely call from C#
Nice! That would, I assume, allow me to use the VM across multiple pages. I appreciate the input.
You can call functions directly from .DLLs with a [PInvoke](http://msdn.microsoft.com/en-us/library/aa288468%28v=vs.71%29.aspx). I find that this is a neat solution if you want to use some librarys. If you specifically want to use OpenCV in C# you could look at [Emgu CV](http://www.emgu.com/wiki/index.php/Main_Page) a .Net Wrapper for OpenCv which uses PInvokes. 
I don't think he would want to use a web API for calling a different language on the same computer...
I thought you take the "the" out of "Psychotherapist" ;)
Thanks, my bad. I edited it.
You can use something like Mvvm Light or another ServiceLocator to bind to. That way you can do `DataContext="{Binding MainVM, Source={StaticResource Locator}}"`
Hah, a web API stood out as a possible option for me as well. I'm a web developer (by day) too.
Happens to all of us :)
1. Learn about p/invoke. That allows your C# code to call any C code. This is good because virtually any language can "export" C functions. Way too low level and "manual" though. I personally would **never** do much of p/invoke. OpenCV has C interface. 2. Learn C++/CLI. This is good because it removes the manual aspect of p/invoke. OpenCV has C++ interface. 3. Learn COM. This is good because virtually any language on windows is able to produce COM servers, and .NET provides easy integration with them. COM is not easy though. Not interesting for OpenCV. 4. You can do IPC, but why would you do that with OpenCV is beyond me.
Lots of bad or inaccurate advice here. * If you're calling to/from a .NET language, direct calls. This works with VB.NET, F#, C++/CLI, and all the Iron* languages. * If you're calling C or C++ code, you can use P/Invoke for high performance applications. * In the general case, **use Apache Thrift**. It's designed exactly for this use case, and covers something like 25 languages.
P/Invoke is the proper way to interact with ordinary native DLLs. IPC is one option, but there's also ZeroMQ, which is a transport-agnostic communication bus and is supported across many different programming languages and environments.
Could you post more of your code to a [Gist](http://gist.github.com)? It'd be easier to see what's going on :)
&gt; but I was wondering if there's a more general way of doing it, where you can use code from two diffirrent languages and with some kind of 'glue' make them work together There is no universal way to do this for any two languages ever. Even with something like IPC, there's different ways to do IPC on different OSes, and some languages might not have the proper library support for doing IPC.
Oh. We have pattern called "Method" for that particular use case. You probably never heard about that.
This is just flat-out wrong. You can absolutely run multiple languages in the same process -- it's either going to be interpreted or compiled to native, regardless of the language used to write it. C# is especially flexible in this regard because you can: * inject a DLL or codecave which uses the CLR hosting API to start the CLR in a native process, or * load MSCorEE into the process and then just call a managed function. The CLR will automagically start and jit the function just like if it were a standalone process.
I should have been more specific. You can't run multiple standard *runtimes* in the same process (CLR, python interpreter, jvm).
Constructors in C# are not defined with return types, so change it to public Rook (string txt)
Constructors can't have any return type, remove void and it should work for you.
Now it says An object reference is required for the non-static field, method, or property 'Console_Application.Rook.color' 
To set the color member, use this.color = txt; or just color = txt;
At the risk of being pedantic, it is *possible* to have multiple managed runtimes in the same process. They all boil down to libraries which can be loaded simultaneously. Some very large enterprise code has to handle interop with both the CLR and JVM in-process, which is why horrifying things like [this article](http://www.infoq.com/articles/in-process-java-net-integration) exist. :P
That's some strong black magic. Nice find!
`&lt;Class name&gt;.&lt;Member name&gt;` is the convention for accessing static members. You want to access an instance member from within your constructor, and the convention for that is `this.&lt;member name&gt;`. This can be shortcut to just the member name (i.e. no need for `this.`) if there are no name collisions with local variables or parameters.
Heh, can I read your mind? :P Alas, as you say in German "Kommt Zeit, kommt Rat" (literally translation: Comes time, comes advice), so good luck! :)
Use: this.color = txt; Or just: color = txt; Rook.color would make sense if your class and the color variable were both static, which they are not. Rook is underlined in red because you have not instantiated a variable called Rook, and there is no static classed called Rook either.
Fair, I see now he didn't mean command objects in the CQRS sense, but as a synonym for "SqlCommand".
/u/vilavek has the correct answer, but you're also going to have a problem with inheriting from two classes `Piece` and `Piece_Props`. Unless of course, they're interfaces. In that case the convention is to put `I` in front of it, making it `IPiece` and `IPiece_Props`.
To be clear, make sure that if they both ARE classes that you are trying to inherit from, that you either inherit from the lowest level up to the next. You can inherit in a chain, but not inherit from two base classes at the same time. So if Piece_Props is at the lowest level and is the base class of Piece, then just inherit Piece and you should be fine. If they both are classes, and you can't inherit in a chain, then you're going to need to make one of them an Interface rather than a class. And then, when you do so, you should rename it with an I in front like /u/sacroiliac mentioned. You can inherit from many Interfaces, but only one base class. Think of it like this: You can have a class called Car, and then have a class called Truck that inherits Car. And then you can have a class called Ford_F150 that inherits from Truck. You can also have an Interface called IEntrances that has properties Door and Window. That could then be inherited by both class Car and class House, even though those two share nothing else in common. Stupid example, but it always helped the idea stick in my head.
Only *color* has to be static
Thanks for the info. I personally was only using it to easily navigate my code with less in the way, not really thinking big picture. I suppose I could use the VS drop down to navigate between methods as well. 
I've been using [PInvoke](http://msdn.microsoft.com/en-us/library/aa288468%28v=vs.71%29.aspx) lately as well it's awesome
If you're interested in different ways of doing stuff like this, what I tend to do in real applications is to find the view for a particular viewmodel by convention and have another component hook them together. e.g. imagine you have a convention whereby Application.FooViewModel should be the datacontext for Application.FooView, then you could have a service from which you request a viewmodel and it figures out what the view should be, creates the objects and sets the DataContext appropriately. This works really nicely if you have a [dependency injection container](http://en.wikipedia.org/wiki/Dependency_injection) that can automatically resolve your viewmodels for you.
You're better off just writing the complete file new. Way easier too.
Resharper. Best productivity utility ever.
yea but if i do that wont i have like a million txt files in my folder...if a new file is created every time 
Most file systems nowadays allow you to replace an existing file with a new file.
aw :D thanks i'll try that then :) 
Well, technically you *implement* the interfaces and don't *inherit* them :)
If all you store in the file are the scores, you can do this: var scores = System.IO.File.ReadAllLines("highscores.txt").Select(uint.Parse).ToList(); scores.Add(newScore); System.IO.File.WriteAllLines("highscores.txt", scores.OrderByDescending(score =&gt; score).Take(MaxScores).ToArray());
Piece_Props is a interface. 
&gt; var scores = System.IO.File.ReadAllLines("highscores.txt").Select(uint.Parse).ToList(); How is that a valid .Select() call?
`.Select()` expects a `Func&lt;TSource, TResult&gt;` as argument. TSource in this case is string and TResult can be anything. Since `Func&lt;&gt;` is just a delegate, you can pass in functions directly as well, instead of wrapping them in a lambda. This is equivalent to: .Select(strScore =&gt; uint.Parse(strScore)) But without the additional layer of the lambda inbetween.
Also see http://www.pinvoke.net/ for a lot of code you can just copy/paste to use in your .net programs.
Very interesting. I only know a little about delegates, but I think this makes sense. In this scenario, TResult would be uint, right?
yup, exactly!
Specifically what you asked for is: http://msdn.microsoft.com/en-us/library/aa711474(v=vs.71).aspx
I use Chrome for browsing and development and this has been a terrible thorn in my side. This is great news that v40 fixes this!
I have used PDF4NET from O2 Solutions for years and love it. I'm not sure what others' opinions of it are, but I find it very easy to use. Check it out!
The error is still their. Even after I explicitly declared display as public. Keep in mind all my piece classes (King , Knight , Rook ect.) all inherit from a main class called Piece 
Your display attribute has no modifier to show how accessible it is. The standard in C# when it is not explicitly stated is private, which means the console write line can't access it. You need to make it public. The standard in Java by the way is package protected. Also if you like to learn something you can encapsule the access to that property. Public string Display { get; private set; } This gives you access from outside of the class but you can only change the value inside of your class (via constructor for example). That's C# way of getting rid of all the standard getter and setter 'spam'. 
You're defining the member "display" in "Knight", which makes the member "display" a unique attribute of a "Knight". It's also private, so you wouldn't be able to access it outside of the class anyway. "board" is array of "Piece" - which has no knowledge of your derived classes (such as "Knight") You probably meant to define this in class Piece, so it could be used by all pieces - and have each class that inherits "Piece" set it.
So I should have the variable "display" in Piece.
So what you said worked ( I think) but Console.WriteLine(board[7, 6].display + "test"); even though it should also write bk only writes test and does not write anything else. 
Did you leave "display" inside Knight? If you did, you would be setting the "Knight"'s display member which would hide the one defined in "Piece" when your "Knight"'s constructor tries to set it, it ends up setting its own. Your "Piece" class would have an empty "display" property, which would account for the behavior you're describing. Are you using the debugger? You can get a lot of information and visibility to how your data objects are being used by using VS's powerful debug and run time tools.
I know my question here is totaly out of sense but what exactly does this mean? class Knight : Piece , Piece_Props What is the defenition after : I already saw it for something like class Main : Form Is it just a reference? Sorry again and thanks :)
He's using a base class and an interface. Typically interfaces are prefixed with "I" so it should be "IPiece_Props" C# classes can only have one base class, but multiple interfaces. Interfaces basically force your class to implement certain properties or methods, while base classes (such as "Piece" here) allow typical OO inheritance and abstracted code.
I think you would benefit from using Direct2D. Try using it via SharpDX as it is a managed wrapper for the entire DirectX library. If you end using it, feel free to PM me with any questions!
Github pages is free. You can host static content or generate a site using Jekyll. http://jekyllbootstrap.com You can use Google's prettyprint library for highlighting. Probably not the solution for something data driven.
While there are a few things to take issue with your code, why do you feel it is coming out as a double?
It's a bit hard to guess what you expect vs what's coming out, I'm willing to take a stab in the dark the .ToString() method with your system's culture isn't giving you expected output... Use a format string instead? http://msdn.microsoft.com/en-us/library/fzeeb5cd(v=vs.110).aspx
That was my thought. It probably is a misunderstanding of decimal and double with tostring 
That is like inheritance. Knight is inheriting the piece class by doing Knight : Piece and it is implementing the interface Piece_Props
You have more issues than that. Please read: http://msdn.microsoft.com/en-us/library/f2kd6eb2.aspx 
I figured it out. It had nothing to do with the output coming out a double, it was coming out a decimal. It's because I was multiplying the daily increase by the starting number of organisms, when I should I have been using the current population. I figured it out. Sorry to waste all of your time, but I appreciate it regardless!
The file I'm reading has info like so: Philthey, 123.45, 11-9-2014 Where: * Philthey is employee name * 123.45 is amount paid * 11-9-2014 is the date I am to assume there are an unknown number of employees, so creating an array of a specific size is right out.
see: http://www.reddit.com/r/csharp/comments/2ltfug/read_file_of_unknown_length_output_to_array_help/cly0sbv
see: http://www.reddit.com/r/csharp/comments/2ltfug/read_file_of_unknown_length_output_to_array_help/cly0sbv
Considering each line is one object, what you need is an employee class, the other code I gave you, and a csv to employee parser. Then instead of a string list you have List&lt;employee&gt;. Dynamic arrays are a pretty basic and important programming concept, so I suggest you google a bit about basic data structures. Lists and Vectors are the 2 most important one (for most cases).
Since that comment probably isn't very obvious to the op, what you mean is if (decimal.TryParse(dailyIncreaseTextBox.Text, out dailyIncrease)) { } else { MessageBox.Show("Daily increase must be a valid percentage."); dailyIncreaseTextBox.Text = ""; dailyIncreaseTextBox.Focus(); } could be rewritten as if (!decimal.TryParse(dailyIncreaseTextBox.Text, out dailyIncrease)) { MessageBox.Show("Daily increase must be a valid percentage."); dailyIncreaseTextBox.Text = ""; dailyIncreaseTextBox.Focus(); }
Thank you for the good explanation till now I only used inheriting in Java so from what I read now the : is the same as extends in Java class MySubClass extends MySuperClass Need to take a deeper look in it but this helps a lot because I had no idea what to search to get some more informations about this 
Not to be mean, but the problems with your code are entirely the same as they would be in Java; they aren't language related. Anyway, others already answered.
&gt; Like can I throw a WPF control on a Windows form and draw to it? Yes. you're looking for an [ElementHost](http://msdn.microsoft.com/en-us/library/system.windows.forms.integration.elementhost.aspx), which sounds like the best approach in your case since all you're looking for is &lt;Grid&gt; &lt;Circle/&gt; &lt;Rectangle/&gt; &lt;/Grid&gt; which is way better than any "drawing" code you might come up with.
Thank you for the suggestion! I will look into it. Once I have the final WPF drawing, is there a way to export that to a n actual rasterized image file (like a PNG)?
My response was applicable to both questions.
http://stackoverflow.com/questions/4560173/save-wpf-view-as-image-preferably-png
That's a good point, and you're right. I assumed he would have to loop through every line any ways to turn it into an object or parse it, and that learning a few basic (simpler) concepts in the meantime (dynamic sized DTs, loops) would be good. But yes, even then, it would be better to just ReadAllLines and then just foreach through the result. :)
Well, I guess yours would make sense when you can't fit all of the file into memory at once :)
Very helpful, thank you!
I don't get it. What am I looking at?
I don't get it either.
Pretty much, showing the way I learned most practices and fixed early issues
Without code it will be hard to tell exactly what the problem is. My guess is that you create a new db object before calling SaveChanges() and the project object that you are modifying was retrieved from a different instance of db. If that is the case you would need to get another instance of the project, make whatever changes you want to the object, then call db.SaveChanges(). PM me the code if you need more help.
You have to do tableRowData[rowIndex] = new Dictionary&lt;string, object&gt;(); Otherwise there won't be an instance of dictionary there to add to. :)
Thank you! I have changed my data accessing class from static to non-static. Now I no longer get that error! I get an UpdateException but I believe I can fix that one on my own. Edit: I had been declaring lots of db's not knowing that would cause an issue because almost of all my apps don't modify lines, they only create new entries.
creating new db's isnt necessarily an issue. You just have to do it correctly (data contexts are actually designed to be used for a single operation and then disposed of when you are done). This lends itself quite nicely to the repository pattern which I would recommend using if you are working with LINQ. Each method in the repository would handle a single action (get projects, update project, delete project) and the DataContext would only be alive for that action. Below is a simple example. public class ProjectRepository { public List&lt;Project&gt; GetProjects() { using (var db = new DataContext()) { return db.Projects.ToList(); } } public void UpdateProject(Project newProjData) { using (var db = new DataContext()) { var proj = db.Projects.FirstOrDefault(p =&gt; p.Id == projectId); if(proj == null) return; //throw an error would be better trying to update a record that doesnt exist. proj.InjectFrom(newProjData);//helper method that will copy property values from newProjData to proj that have the same type and name. db.SaveChanges(); } } public void DeleteProject(int projectId) { using (var db = new DataContext()) { var proj = db.Projects.FirstOrDefault(p =&gt; p.Id == projectId); if(proj == null) return; db.Projects.Remove(proj); db.SaveChanges(); } } } I believe you could make the repository static if you want and it should still work. Are you using any sort of Dependency Injection? 
Cool thanks for sharing. I didn't realize there were issues with the XDT code base and mono.
to upload excel files , I use the filehelpers library. Give a try , super-easy http://filehelpers.sourceforge.net/ 
To elaborate, /u/efess has the right idea here. public string display; Is defined on "Knight", but it's not part of "Piece". OP didn't include the definition of "Piece" but it should probably have... public virtual string Display { get; protected set; } while "Knight" should have public override string Display { get; protected set; } Alternatively, if nothing special happens with Display and only the constructor sets it, it could exist ONLY on the base class without an override, and without the need to be virtual. Tangentially related: This example was based on Style-Cop guidance to not expose fields as public but to use properties instead. Also, as others have mentioned, it's a defacto standard to prefix interface classes with "I" to make it instantly clear that they're an interface, not a base class.
We understand why that the content is of an unknown length, what we don't understand is why you MUST have an array as opposed to another data structure (ie, List&lt;T&gt;) which is already much more dynamic. If you MUST have an array, and you can't determine the number of items before hand (because you can't read the whole file and count newlines for example), then you can include [Array.Resize](http://msdn.microsoft.com/en-us/library/bb348051\(v=vs.110\).aspx) within your read loop. But I don't recommend that approach at all. I'd still prefer to read each line, convert it to my business object, then shove it in a List&lt;T&gt;. Anybody who REALLY wants an array after that can just call .ToArray() on the list.
Based on MSDN documentation, WriteAllText () overwrites existing files, but WriteAllLines() creates a new file? (And might throw if the file exists?)
Well in java, I've never had such problems. 
In addition to this, if you want a quick way to fill a collection or array, I would suggest looking into [Extension Methods](http://msdn.microsoft.com/en-us/library/bb383977.aspx) if you haven't already. They're super useful for tasks like this. I also wrote a quick demo that uses some extension methods, you can look at/run it [here](http://ideone.com/XPtGX5).
 grep -Ev "^\s+#[region|endregion]" old.cs &gt; new.cs Horse is just a noob at Linux...
Yea, it's a rare thing these days.
You could try [C# Object Initializers](http://msdn.microsoft.com/en-us/library/bb384062.aspx). But 40 fields... Wow.
Well, I'm reading a csv file and it has 40 columns. So each one becomes a field for every rowObject. I'll checkout the link. I think I've read that page, but new day, new perspective. I'll give it another go.
Look up separation of concerns
It sounds like you need a dictionary instead of 40 fields... Or even just a list?
Agreed, it doesn't sound like you're using fields in a way that they need to be fields.
I haven't reached the topic of collections. So I'm just trying to do this with what I know. Is it just impractical to do it like this or impossible?
Try [CsvHelper](http://joshclose.github.io/CsvHelper/). Also, the formatting help tells you how to use code tags - 4 spaces before any text. Please fix your post.
I have been using fileHelpers (which is same as or similar to csvHelpers I think) to read and write files. I didn't know it could help with creating objects. I'll go have a look. Oh, great! I've been trying to figure out how this works. 
I used to know a Michael Cale who worked at Staples. That's not you, right? I googled the topic and it seems like it is more to do with programming in general than c#. I bookmarked a couple of pages and will have a look tomorrow. thanks.
Well, yeah, that's the convention. But it does smell Hungarian notation and doesn't make a lot of sense when you only have async methods. I'd say use the suffix if either of the following applies: 1. You are developing an API for consumption by others. 2. You have both sync and async methods for the same thing. Otherwise you can skip it. But be consistent within your codebase. Either use the suffix everywhere or nowhere.
To directly answer your questions: 1. The objects are constructed onto the managed heap. C# runs on the .NET Common Language Runtime, which uses a managed memory model. Objects on the managed heap _can_ be garbage-collected when they are no longer referenced, but not necessarily immediately. Ultimately, you don't know when it will be deleted. In your case, you lose the reference but they probably don't get deleted. You should add them to a List. 2. The Collections library contains a collection called a Dictionary, which allows you to store objects with a Key. If your names are not unique, you can also store a List of KeyValuePair's, which simply associate a Key with a Value. 3. You probably won't be able to use a for loop to assign from your array to your class' fields, unless you store them as an array within your class. I'm not sure exactly what issue you're having with variable naming? Just use different variable names...
If you're still a newbie this is pretty rough stuff. But once you figure it out you open up a lot of neat tricks.
[Here's a gist I wrote](https://gist.github.com/GeirGrusom/fdf2861f11513271469a) that should work for OP. It doesn't properly handle escaped values, but it should otherwise work fine. It assumes that each header corresponds to a single writable public property on `T`. publi class CsvRow { public string Name { get; set; } public decimal Price { get; set; } } var deserializer = new CsvDeserializer&lt;CsvRow&gt;(); var allRows = deserializer.DeserializeContents("Name;Price\r\nFoo;100").ToList(); It also obviously has overloads for stream and file reading as well.
A few words about general debugging strategies: When an exception pops up, the debugger pauses when the exception happens. In the case of a null-reference exception, you will want to inspect everything on that line before stopping the debugger, looking to see which variable is null. A null reference exception normally happens when: - You never assigned a value to a variable (it is null by default and you never assigned it). - You are using the result of a method / getter which returns a null value and don't check for it (an example is IEnumerable.FirstOrDefault(...)). - Somehow something which at one point was assigned to an object got overwritten with null. It's often (as it was in your example) somewhat obvious to see that no object was ever assigned. If stumped, it's a good practice to... - Put the cursor over the offending variable - Use 'Find all usages' or 'Find all references' to see if there is ever an assignment either to null, or a lack of an assignment, or an assignment to a method / getter which might return null. - This might be further investigated by putting breakpoints before assignments or a few lines before where the exception gets thrown, inspecting and following calls (Step Into) and single-stepping. - In general (not in your case), you may need to build up a general idea in your mind of what method calls what, accesses which member in other classes, etc, and follow that through as well. The stack trace panel can help here also, to show at least the last branch that caused you to get to where you are. 
Impractical, pointless and obsolete. But possible.
Yep, that's what I had in mind. Except I would use Microsoft.VisualBasic.FileIO.TextFieldParser. It does a great job at handling escaped values in CSV files. Even weird stuff like line breaks inside a string.
I was unaware of that class. Thank you.
If we could have back the time that was lost because Microsoft hid that class we could have built Skynet.
I've seem a similar issue when I'm debugging asynchronous methods that calls other asynchronous methods, sometimes VS2013 gets lost and stops tracking the breakpoints stops so my app freezes as if I had stopped in breakpoint and VS2013 returns to its regular state, the only solution is stopping the application.
Depends if you code for yourself or future developers
Future developers always. 
 Enumerable.Range(4, (7-4) + 1); http://www.dotnetperls.com/enumerable-range . . Edit: But you're clearly a beginner, so you should learn how to use loops too: for (int i = 4; i &lt;= 7; ++i) { // Use i here... }
Okey thanks ! But if I do like this = Enumerable.Range(start, end); how do I do if I later want to use the difference in some sort of function?
Look at the return type of the method. Look up enumerations.
You said yourself: Every method in the **class** is async. But usually a project is much larger than a single class. Keep your style consistent across projects, or even across solutions. And for sure not all methods in your project are async.
Enumerable.Range returns an IEnumerable&lt;int&gt;, so you can foreach over it: IEnumerable&lt;int&gt; values = Enumerable.Range(4, (7-4) + 1); foreach (int value in values) { answer += 2 * value; } If you don't know what a foreach is, google it (but you should be able to tell from the example more or less). Alternatively, use the for loop in my original answer. These are important concepts to understand.
Enumerable.Range is not start-end; it's start and the amount of numbers you want. If you call it with 5 and 10, you'd get numbers 5-14.
I would say keep it, but at the very least include it in the name of your object if you drop it from the method names.
As /u/EscapeLizard suggested, I would recommend learning it with loops. Use a for loop to count from one value (x) to another (y). Then with each item within the for loop, multiply it by the specified value and add it to a running count. The example below is a for loop. Try to use what I said to put the relevant code within the loop. for (int i = x; i &lt;= y; ++i) { // Use i here... } Good luck!
You sound like you basically want to serialize a instance of "Person" to a human readable file. Take a look at the XmlSerializer class of the .NET Framework, or even the Nuget package JSON.NET.
I would append Async to the class name rather than all the methods inside it.
Okey I did a while-loop like some suggested, but I can't see where I did wrong. http://paste.fvck.se/8887d7659ca9ec79fca146fda4947283
while you should probably be using a for loop as others have stated, I'd point out that this can also be done in a simple equation. Look up 'summing a sequence of integers'. ..often with mathematical problems, someone has already simplified it down a lot more than code will :)
yeah I did do a while loop now. But I can't seem to get it working. http://paste.fvck.se/8887d7659ca9ec79fca146fda4947283
Ideally you would want every method to have Async suffix, but if you're absolutely sure none of the methods of the class will ever be non-async, you can just name the class [something]Async so it stays obvious that way.
I seem to be misunderstanding, why are you returning a string? What exactly are you trying to do?
You may want to use a DataTable.
System.Runtime.Serialization has everything you need. :)
serialize it to json. more or less readable.
"Impossible" is a very rare word in the world of programming, but I think this has "impractical" written all over it. 40 fields in one class is a lot. There's really no sane way to initialize 40 fields all at once. (There are plenty of insane ways though.)
This may seem silly, but make sure you're in Debug and not Release. I had some issues with the debugger and I wasn't paying close attention to which mode I was in.
Nugsly has it right. Use a CSV Parser, don't re-invent the wheel. Also, you might not need to initialize all 40 fields. You could make each property an accessor (e.g. public foo { get { return row[18]; set...} } ), and then just pass in the row from the CSV to the constructor. Lastly, CSV (and Excel) files are notorious for duplicate values when they are dealing with a hierarchy. So you may not need all 40 values in one object, you may be dealing with a hierarchy. &gt;anytime I try to construct any object with new keyword, I just get lost I think if we go after this, things might clear up. A class instance (e.g. use of the "new" keyword) represents a *single* object (e.g. one of many). That object could be anything: a person, a physical item, a thought, or a data structure. The Properties of a class are specific things it *has* (names, titles, children) while Methods represent what the class can *do* (walk, run, drive a car, etc.) Static members of a class represent those properties which are common to *all* member of the class, while instances of a class represent things which are unique to each item. For example, take a Person class. This represents anybody on planet earth. What is common to *all* of them? Things like "Planet they live on", "How they get around (e.g. walking)", etc could be static members. However, not everyone on the planet shares the same name. So trying to store a their name, age, height, gender in a static property doesn't really work. They have to be unique per person So we make the things like Name, age, height, weight, gender, hair color, etc. instance properties: public string Name { get; set; } So now we have a class that looks like this: public class Person { public static string PlanetTheyLiveOn { get { return "Earth"; } } public string Name { get; set; } } So what about the "new" keyword. It's just a way of specifying that we want to create an instance of an object, and customize the unique properties in that instance. **important** The rule of thumb is that any property that is required for an instance of a class is set in the constructor. The mandatory properties can be set by 1-passing the value into the constructor as a parameter, or 2-default values can just be set directly. For example, a Person may not have a default name ("John Doe" won't work in China), but we all have a default age of 0 when we're born. Let's say for our example, that a Person has to have a name, then we want to add a constructor that takes a "name" and sets the "Name": public class Person { public Person(string name) { Name = name; Age = 0; } public static string PlanetTheyLiveOn { get { return "Earth"; } } public string Name { get; set; } public int Age {get; set; } } Does that clear it up a little?
Essentially a cross-platform framework to configure and draft [office space modular wall systems](https://www.google.ca/search?tbm=isch&amp;q=office%20modular%20wall&amp;gws_rd=ssl) with realtime 3D viewing and detailed BOMs/costs right down to each screw and labour task.
Serialization... However if this class might be updated in the future be very careful in your implementation. 
No problem but I probably shouldn't go into detail as it is a commercial system. If you're looking for a good platform for 3D programming and visualization consider [Unity3D](http://unity3d.com/); it does a good job of handling the nuts and bolts of the 3D and you can focus on content generation.
Couple of things I would think about 1. Unless there is some reason not stated here, use a List&lt;string&gt;. 2. Since you know nothing about the size of this file, you have to handle files which contain enough records to run out of memory when reading them into your list. My suggestion is to read in batches and then apply whatever process you need to on that batch, empty your list freeing up space, and read in a new batch. These batches don't have to be small, you could do 300-500 lines at a time. You can keep your StreamReader open during this time and just block your reading loop until the process finishes with the current batch. Here's a quick example http://pastebin.com/zu5sF6ke
Try using the [`is` operator](http://msdn.microsoft.com/en-us/library/scekt9xw.aspx): if (board[X, Y] is Bishop) { }
I pulled this off stackoverflow. private DataTable GetDataTableFromCsv(string path) { DataTable dataTable = new DataTable(); String[] csv = File.ReadAllLines(path); foreach (string csvrow in csv) { var fields = csvrow.Split(','); // csv delimiter var row = dataTable.NewRow(); row.ItemArray = fields; dataTable.Rows.Add(row); } return dataTable; } I would use a list instead of a DataTable. If you're into file IO and 40 field classes I would go ahead and take the time to learn collections and LINQ, you'll find yourself using them every day.
Thanks for being so detailed! I totally get the idea of Objects. I've read a lot on the topic, but I don't have enough experience so I struggle with implementing the whole package. I've only taken up programming for this particular personal project of mine and it is way beyond my level. I trade options and I have a system that I implement manually but it takes a lot of hours and isn't consistent. I have a lot of ideas written down that I want to implement but even getting anywhere close to testing is proving pretty hard. &gt;important The rule of thumb is that any property that is required for an instance of a class is set in the constructor. Yah, I was just wondering about that earlier today. So, you are saying I should pass the whole row to the constructor. Within the constructor definition in class, I'd create the property One{get{return fieldOne;} set{FieldOne = lineArray[1]}} OR, can I just run a for loop in the setter? Or Maybe copy the passed lineArray to a var localFieldArray. Then withinthe constructor I could run a for loop setting each value to a field? Even thought, I won't do something so messy, as I figured out an easier way, I'm just wondering if it is still possible like this? 
How different would a DataTable be from a 2D array? I'm able to make a 2D array pretty easily but don't know anything about DataTable class yet. 
Once I pass the line to the constructor, do I have to set each field one by one or can I just use a property that assigns the lineArray to an array of my fieldnames?
I just read generic collections today. So I'll try out the dictionary collection tomorrow. So I'll have some followup questions by tomorrow.
So many things wrong with this...... In many comments you point out the software is free for personal use. I call bullshit. Sure I don't have any legal obligation to pay for this tool as long as I use it for the purposes you state. But don't think for one second that means there is no cost. Your free version requires users to pay with annoying popups that cant be closed until a certain amount of time has passed (glad its no longer 60 seconds but even 1/2 a second would be too long). These popups occur every 4 hours as long as VS is open. Not only that but they appear on top of all windows even if VS isnt in the foreground. Seriously WTF!? When I first saw the price I honestly thought there must be features that I am missing. Seriously what were you smoking when you set the price at $75. Do you think a business would spend that kind of money per developer for something that will save them maybe an hour of work a year? A business will perform a cost benefit analysis to see if making a purchase is worthwhile. And I can say confidently that the cost does not meet the benefit your tool provides. Ways I would consider using this tool: 1. Make the price &lt;= $10 2. Remove annoying popups in free version a. Either ask the user if they would like to purchase on install and never again or b. Ask the user on 2nd run and never again. This allows the user time to review the software to see if they like it and if so make the purchase. If they dont want to purchase it why is it necessary to ask them if they are sure 6 times a day (every 4 hours)
I don't think you'd need to code this yourself. What requirements do you have that you'd need too?
The first thing that comes to mind is using a a websocket to have real time video chat. Here is a blog post that did exactly what you need. http://xsockets.net/blog/tutorial-building-a-multivideo-chat-with-webrtc
If I had to guess, this line: TextBox fName = dataGrdEmployees.Columns[1].GetCellContent(dataGrdEmployees.SelectedItem) as TextBox; is returning `null`. Run it through the debugger and make sure that `dataGrdEmployees.SelectedItem` isn't `null` and that it's a `TextBox`. Barring that, still use the debugger and trace back where the problem is; validate all your data and objects and values are what you expect them to be. See ["What is a NullReferenceException and how do I fix it?"](http://stackoverflow.com/questions/4660142/what-is-a-nullreferenceexception-and-how-do-i-fix-it) for more general information on this error and how to fix it.
Heh, yup, it's null. Now I gotta figure out why haha. Thanks for pointing that out!
Any particular reason you aren't just passing the values contained within the text boxes as strings, rather than the entire text box object? Also, use the Cells[].Value property to get the string. I made a dgv with 3 columns for this demo. class TestClass { public string Value1 { get; set; } public string Value2 { get; set; } public string Value3 { get; set; } } private void Form1_Load(object sender, EventArgs e) { DataGridViewRow row = new DataGridViewRow(); row.CreateCells(dataGridView1); row.Cells[0].Value = "Test1"; row.Cells[1].Value = "Test2"; row.Cells[2].Value = "Test3"; dataGridView1.Rows.Add(row); } private void button1_Click(object sender, EventArgs e) { TestClass tc = new TestClass(); if (dataGridView1.SelectedRows.Count == 0) return; tc.Value1 = (string)dataGridView1.SelectedRows[0].Cells[0].Value; tc.Value2 = (string)dataGridView1.SelectedRows[0].Cells[1].Value; tc.Value3 = (string)dataGridView1.SelectedRows[0].Cells[2].Value; string szFmat = string.Format("Value1: {0}\nValue2: {1}\nValue3: {2}", tc.Value1, tc.Value2, tc.Value3); MessageBox.Show(szFmat); } }
&gt; Any particular reason you aren't just passing the values contained within the text boxes as strings, rather than the entire text box object? No, not in particular. The thought crossed my mind but I wasn't sure if it would be better that way or not. &gt;Also, use the Cells[].Value property to get the string I didn't know about that one. Thanks for showing it to me! I will test it out. 
Oh, now I remember why, I didn't know how to pass the row info so that it knows what row to grab from. Would it be something like this? newWindow(datagrid, index) with the constructor accepting the datagrid and an integer value of the index?
There are a few ways, but one of them is how I did it. 
Ok cool. Thanks again!
One of the spell checker extensions, cause I'm not so good at speeling :(
Could someone chime in with 2c worth on why or why not this implementation is or is not good/better than MS's? Thanks in advance.
[Viasfora](http://viasfora.com/)! 
Resharper has become my best friend. It is basically a collection of everything that is missing in VS. With a little configuring it helps enforce code quality and even has handy functions to convert for loops to linq statements. Plus it has its own set of plug ins you can add to it that add to its awesomeness. I am not affiliated with jetbrains, I just really like their product. 
[Encourage](https://visualstudiogallery.msdn.microsoft.com/1f3afebb-06c7-4b77-a54f-eb2f0784008d)
Probably not, but I choose to only code with it so I'm not certain.
* Productivity Power Tools got some handy helpers like converting a file to be all tabs or all spaces, or copying DLL references. *Free* * CodeMaid is nice and easy for cleaning up code. Not as configurable as ReSharper for reordering, but *way* easier to configure (drag and drop). Also gives a handy outline of the file with function complexities. *Free*
VsVim
It adds to productivity but it can impede also. Remember when you open file from 2 years back when you did not had resharper? 73 warnings. Now you must fix them all!
[StopOnFirstBuildError](https://visualstudiogallery.msdn.microsoft.com/91aaa139-5d3c-43a7-b39f-369196a84fa5) - A lifesaver if your huge solution fails to build with a bazillion errors. [ResXManager](https://visualstudiogallery.msdn.microsoft.com/3b64e04c-e8de-4b97-8358-06c73a97cc68) - Great for translations. [VsVim](https://visualstudiogallery.msdn.microsoft.com/59ca71b3-a4a3-46ca-8fe1-0e90e3f79329) - Yes! Impress your friends and throw away that mouse! You don't need it anymore.
Don't leave home without it.
TL;DR version of the article: It's faster by about 10 times.
[CodeMaid](https://visualstudiogallery.msdn.microsoft.com/76293c4d-8c16-4f4a-aee6-21f83a571496) is an open source Visual Studio extension to cleanup, dig through and simplify our C#, C++, F#, VB, XAML, XML, ASP, HTML, CSS, LESS, SCSS, JavaScript and TypeScript coding. It makes the code so much more readable.
Resharper. [ReAttach](https://visualstudiogallery.msdn.microsoft.com/8cccc206-b9de-42ef-8f5a-160ad0f017ae)
I mainly use Resharper and CodeMaid, but boy is Resharper making my VS slow. I don't want to go without it though :(
Can you name one? I have been looking for a good one for ages. I too have terrible spelling. My comments read like an idiot wrote them I'm sure :(
Exception Breaker: https://github.com/ashmind/ExceptionBreaker
There's more information from the author in his /r/Programming post at http://www.reddit.com/r/programming/comments/2lyf8f/fast_immutable_vectors_in_c_10x_faster_and_90/ More specifically, [his comment:](http://www.reddit.com/r/programming/comments/2lyf8f/fast_immutable_vectors_in_c_10x_faster_and_90/clzbnr0) &gt; The main reasons why this is fast are: &gt; &gt; 1. It uses a high branching factor n=32, so a tree with 1 million elements is only 4 levels high. &gt; 2. It uses structs to avoid unnecessary pointers. A Vector&lt;T&gt; is effectively represented as a T[][][][], with the depth of nesting depending on the height of the tree. Without structs you'd have an extra pointer dereference in between each level. &gt; 3. Normally in a tree you have to check whether you are at an internal node or at a leaf at every level, but because this tree has uniform height you don't need to check anything. To convince the compiler of that fact it uses the way the CLR specializes generics to avoid any unnecessary dispatch. This is kind of hard to explain, but the simplest versions are only ~120 lines of code. I may do a more in depth post about how the type structure works out and how the CLR specializes that.
LOL
Yeah, yeah... we all know that type. "Coding is art", C# is a pain, Windows is for retarded people... he's so superior now that he's coding erlang on a mac using nothing but vi. Visual Studio? Are you insane? He doesn't need intellisense, he's much better than that. It's so boring, they think they're so unique but in the end they're all the same. "Open Source", "Blogger", "Speaker", "Activist", "Vegan" + Hipster language like Haskell, Erlang, Scala... Current position of hipster developers on my disinterest curve: over 9000
What on earth is the value of this post for the C# community?
it will probably change the landscape of computing. seriously big news. i've been waiting for this for so long
How would this impact the Mono project?
The guidelines where I work state that all developers own all the code. So if we see something wrong we should fix it like we would fix our own. Every old file I open has problems so I just fix it as I go. I still consider it productive because I'm improving readability and reducing stupid errors a little bit at a time.
It means that they'd able to freely pick on parts of the class libraries to include with Mono pretty much verbatim. Some parts won't be portable and the existing implementations will stand, but it'll go a long way towards platform parity. It also completely removes the white box/black box issue since they'll be able to legally reference MSs implementation of the class libraries which could speed up development. The big thing that'd really benefit Mono is the JIT engine. If that's also open sourced then Mono could also get a fairly major performance boost.
Wait, just makeing sure I understand.... the entire .NET source code is now open-source? And can therefore be ported to Linux/UNIX/MacOS etc? Even possibly Android? So, in the future, C# apps may be cross-platform? If true... wow.
Yep. Both the new .NET Core framework and the .NET Reference framework are open source. Also, some .NET apps already are cross-platform. Since .NET applications are just CIL wrapped up in a PE executable, you can run them on both Mono and .NET if the required libraries are available.
Historically the Mono guys would reimplement all of the .Net code from scratch. As some of the recent ASP.Net pieces have been open sourced, the Mono role has changed to working on compatibility fixes in the Microsoft open sourced code. I'd expect that trend to continue. Mono will still be around, but they'll be focusing on patches to the MS code and Linux/OS X specific stuff instead of producing libraries that almost but not quite duplicate the MS functionality.
They'd have taken over the world if they'd made this decision a decade ago, but it's still a big step forward.
Android support is a given, if only because of Xamarin. It will give Xamarin (and Mono and Unity3D and many others) better hooks, but I also wouldn't doubt that you'll see Microsoft have their own way to build for the Dalvik (Android) engine. There is a lot of room for someone else to be price competitive with Xamarin, especially now that you can fully use the Visual Studio IDE and everything below it for the work. 
Miguel de Icaza stated that they'll be integrating the code into Mono: &gt; We have a project underway that already does this. We are replacing chunks of Mono code that was either incomplete, buggy, or not as fully featured as it should be with Microsoft's code. [Source](http://tirania.org/blog/archive/2014/Nov-12.html) I feel uncertain right now as where lies the future of Mono. 
As /u/PhonicUK mentioned, it improves it because they can now borrow code for things that they don't support well, etc. See this post from Miguel de Icaza for more info: http://tirania.org/blog/archive/2014/Nov-12.html
First off you have to have a good understanding of how they wrote the application, did they try to use as much functionality built into MVC or did they customize everything. Did they write testable code, for instance did they implement inversion of control using something like a dependency injector which allows you to mock out/stub out things like the database, logging, etc... ? If the code isn't testable it makes it a lot harder to add after the fact tests. My suggestion is to make the code testable first then start writing the tests, and make sure everything you add on is written to be testable. I.E. use interfaces whenever possible, pass dependencies to classes instead of having the classes create them, etc.. Here is a few suggestions on places to start. http://www.asp.net/mvc/overview/testing http://stackoverflow.com/questions/9220990/unit-testing-asp-net-mvc-4-apps-thoroughly
It may well be the death of Java. I can't see why you'd pick that stack to build your project around when you can now leverage Visual Studio/C#. It also may weaken and/or end Google's control of Android. If C#/Visual Studio become the de facto way to build AOSP (Android Open Source) or variant (eg AOKP) projects, then who really has more control over the direction of Android? It's a bold move, and a smart move, on Microsoft's part.
Ah, licenses... http://www.visualstudio.com/products/visual-studio-community-vs &gt;Hereâ€™s how Visual Studio Community can be used in organizations: &gt;An unlimited number of users within an organization can use Visual Studio Community for the following scenarios: in a classroom learning environment, for academic research, or for contributing to open source projects. &gt;For all other usage scenarios: In non-enterprise organizations, **up to 5 users** can use Visual Studio Community. In enterprise organizations (meaning those with &gt;250 PCs or &gt; $1MM in annual revenue), **no use is permitted** beyond the open source, academic research, and classroom learning environment scenarios described above. Oh well, the .NET framework is MIT licensed, at least. (https://github.com/dotnet/corefx)
I like this one: http://vsspellchecker.codeplex.com/
Meh. I'm totally cool with large, profitable companies having to pay for Visual Studio.
ReAttach looks very interesting. I will check it out. Thanks. 
Will definitely look into this as I'm doing some multi-platform things. Thanks.
Apologize if this is a noob question but does this mean that Apache will be able to run .NET applications now without mono?
Whoa, great news. Hope it's not a one time publicity stunt. Having profiler, code coverage and plugins for free certainly won't hurt.
Try installing SQLite using NuGet https://www.nuget.org/packages/System.Data.SQLite
Thanks for pointing this out. After looking around I think this is the only way I want to blog. It's not 1,2,3 - but for all you get, it is worth putting in the effort. Besides that it's also a marketable skill knowing about how git works. 
I've tried that, along with using NuGet to add it to all projects and just the one, all of the tests result in the same error.
&gt; i writ â†„oad fixed
I've got it to work with some unoffical sqlite dll, but That's not's not really a fix. I'll check back and see if this helps if it does I'll ask for your paypal email.
C# is by far my favorite language. Can't wait to see what comes out of this news! So many apps to be written!
The framework was mostly already open source I thought. Today it was announced that the runtime was open sourced. Did I get it wrong?
[Download link for Visual Studio 2013 Community Edition](http://www.visualstudio.com/news/vs2013-community-vs) I had a trial of ultimate on the box I attempted to install this on and had to uninstall ultimate before installation could continue. It would seem that the community edition is quite literally a renamed visual studio ultimate? I would love to be able to be privy to Microsoft's long term vision here because this just seems amazing.
Portions of the framework were open source already, but most of it was only open sourced for reference. The license didn't allow you to do anything other than read it. Now (some of) the core parts of it are licensed under MIT. I don't believe the runtime has been open sourced. Although someone mentioned in this thread that RyuJIT and the garbage collector is being open sourced eventually.
hmm?
I never expected this to happen. This is huge.....
darn.. and I just chipped in $500 for VisualStudio2013. sucks.
If the Apache team wanted to build to allow .NET. Someone still has to build around. More likely, MONO will now be able to catch up to where .NET is right now and run on par. 
What is 1MM? Million? Million-million? Mega-million?
I'm interested to know what everyone thinks about this project. The URL is http://cshtml5.com/ 
Damn, I wasn't expecting an MIT License.
FYI they opensourced the foundation of .NET, which they are then going to use to build a cross-platform .NET framework. So it's not entirely open source yet, but it is going to be.
Well, Java won't die, lots of legacy shit uses it. But C# is objectively superior in everything. Maybe the only thing I have missed from Java since I switched is the `&lt;? extends Base&gt;` notation for generic parameters like `Class&lt;? extends Base&gt;` (Java's equivalent of `Type`). C#'s analogue of it is the `where T : Base` notation, but that doesn't work for `Type` because it's not generic in the same way. 
I laughed, actually. Not sure if it's a spambot gone wrong or schizophrenia.
M is the Roman Numeral for 1,000. MM is 1,000,000. You'll see it written that way in some business functions. 
You won't be able to use Community edition for non-open source projects though. So I'm guessing you still made the right choice.
Do you mind explaining what you mean here? I'm more familiar with how generics work in C# but not how they work in Java. What don't you like about the C# implementation? 
Fantastic! Now I just gotta figure out a way to convince the upper echelons to upgrade... :P
He would be able to if his team is 5 devs or less.
Git is perfect for this because it's decentralized, and more people have github accounts than codeplex accounts. Also, you don't know what their internal process is like. I'd guess they use TFS internally and then use a tfs-&gt;git bridge.
You might be able to use the VS Community Edition for free.
As I understand it, in Java you could create something like this: public static whatevermethod(Class&lt;? extends SomeBaseClass&gt; classtype){ //classtype is a Class instance which represents a Class that extends SomeBaseClass } In C#, though- Type is not a generic type, so you cannot use it this way. Thing is, I'm pretty sure you can get the exact same effect by just making the method itself generic: public static void someMethod&lt;T&gt;() where T: SomeBaseClass { Type classtype = typeof(T); //classtype is a Type instance which represents a Type that inherits SomeBaseClass } The difference might be half-attributed to Java having Type erasure at compile time.
&gt; VS Community Edition You mean Visual Studio Express? If so, no dice. We are definitely using Professional-only functionality (Xamarin integration comes to mind, not to mention several other extensions)
As I read this, it doesn't *include* the Xamarin tools for Android development. It just provides a platform into which those tools can be plugged in. And those tools are rather expensive.
Dalvik is being replaced by a new run time that runs in parallel with Android 4.4 called the Android Runtime...ART(?) (or something like that). Supposedly they are going to drop Dalvik entirely with Android 5. I think the big feature on the new one is that it can essentially pre-compile apps rather then wait for runtime. I'm talking way ahead here, so believe nothing I just wrote without checking into it yourself. 
I don't think this goes as far as you want it to. AFAIK, the openness doesn't include the non-core libraries like WinForms, ASP.Net, etc. So plain console apps might rely on all open stuff, but most real-world apps will be using some non-open libraries.
Oh hey, look at that! Yeah, that might work out! I'd definitely like to get a better idea of how this compares with Professional going forward. Did they essentially cannibalize the "Professional" SKU for typical C# development? Can't find much information; maybe it's just a bunch of secondary tools (e.g., publishing, database management) that isn't handled? Exciting!
I'm not sure, I'm getting ready to install it now and see what's up.
Well, as I saw on their blog post today what they are calling .NET Core 5 will include ASP.NET, the Native (Windows 10) application stack for desktop and mobile. There are a lot of hooks that Windows as an operating system will still have and require that other platforms come up with equivalent libraries but it seems that the biggest parts of the framework will become completely open source. [Here's the blog post](http://blogs.msdn.com/b/dotnet/archive/2014/11/12/net-core-is-open-source.aspx)
&gt; Mono will still be around, but they'll be focusing on patches to the MS code Does "embrace, extend, extinguish" count if it's replaced by open source software? :P I think this is great. Instead of splitting effort between two codebases that attempt to be *clones* (rather than a fork) we can focus on making the same code run on all platforms (true cross-platform!)
Exactly how is this going to be enforced? I'm assuming it doesn't automatically upload all your code to GitHub or has some mechanism to count how many other people are working with you on a project.
I believe that Haskell calls those "Type Classes" and I would love to be able to use them in C#.
Sounds like he just read one of Paul Graham's Rants/Essays. I found Paul Graham to have some interesting points to be made but the fact that all of his "objective assessments" invariably (and completely accidentally of course) coincided with what he knew and what he was doing was a bit hard to ignore. Paul Graham's Rants really serve as a significant seed for this sort of cultural self-importance.
I haven't looked but Roslyn might support it and if not, Roslyn will be easily extensible enough that adding that into the compiler might just be very easy. Although it probably will not get included in this upcoming Roslyn release the Roslyn development team are taking suggestions from the community at the moment on improvements or issues with the .NET languages. You'll at least get a great response from in the know people as to why it should or should not be added. For more info see: https://roslyn.codeplex.com/ EDIT: Spelling and a thing.
I spend a lot of time in LINQPad so I don't have much choice there, but when working on a real project ReSharper is key.
Just a couple questions for context... what are your 40 fields on your class named? What sort of data are you trying to model in your class? That may give us some insight as to whether or not using a 40 field class is the right solution in the first place.
Does it come with all the debugging tools? If so that is really great
With microsoft buying up UnityVS and adding mono into the test framework for Roslyn I wouldn't put it past them to start supporting these platforms directly.
$1M would be a thousand. It's not really an issue for numbers that size but $1MM takes up a lot less space than 1,000,000 on a spreadsheet or other financial document which can be nice for readability. 
Ah. I see now. Thank you.
$1MM != $1,000 $1MM = $1,000,000
Don't do that, there are lot of MVVM framework in HTML today, and JS is not that horrible, you can even have the comfort of type with Typescript, don't settle on half-assed barely working solution.
Yeah. Got that. Misunderstood, someone already corrected me. Move on.
Well timed.
Well, Xamarin is free for students, cheap for indie developers and costs less than 1 month worth of pay for professionals for a 12 month license. I don't think the price is something to complain about.
ASP.NET already has its own open source project. It is fully open source and available under the Apache 2.0 license.
No. .Net Core is a limited set of libraries that cover stuff like immutable collections, SIMD Vector math, and some XML stuff. Lots of other .Net Framework libraries are still closed source, although the stated goal is to have the whole thing open sourced in time for the Build 2015 conference.
Good talk. Thanks for taking the time. Kind of a conversation ender tho... nothing really to add to that... 
It's not like they already took over the world with closed-source software in the first place...
.Net reference framework is not open source. You can browse the source for reference purposes only on the reference source web site, but you are not allowed to recompile and redistribute it for other platforms. http://referencesource.microsoft.com/license.html They do say though that the goal is to open source most of .Net by Build 2015.
Yes, it is. https://github.com/Microsoft/referencesource/ Assemblies like PresentationFramework aren't currently open-source, but the core framework and runtime are (or will be, the source release is being staggered).
No not at the moment, but in a couple of years maybe. They are not open sourcing the entire .Net framework now. The Core library contains some less often used classes, like immutable collections and some other slightly obscure stuff. The new Roslyn compiler uses immutable data structures a lot, and since they open sourced that, it makes sence to open source the supporting libraries for it as well. This is a first step towards open sourcing the entire .Net framework, which they stated should happen by Build 2015.
Note that .Net Core is not the whole .Net framework. It is a very small library that only contains some lesser known data structures, like immutable collections, which happens to be used a lot in the Roslyn compiler. But they said they would eventually open source most of .Net.
VS Community with all the features of Ultimate?! Hell yeah. Feels like christmas.
What version of visual studio and .net framework are you using? I started an empty windows forms and did the NuGet install targeting both x86 and x64 and works right out the gate (VS 2013, framework 4.0 and 4.5). Here is what it automatically added for references/packages if it helps: http://i.imgur.com/3DHXQ7Q.png One thing I would try is manually loading the dll. That way you know exactly which dll you are referencing and can control things more easily, and maybe get better handle on the problem? You can hook up the AppDomain.CurrentDomain.AssemblyResolve event for when/if it tries to load referenced assemblies. http://msdn.microsoft.com/en-us/library/ff527268.aspx Edit: Also it put two folders in my bin\Debug directory "x86" and "x64" for the SQLite.Interop.dll Ah, packages.config may be better: &lt;package id="EntityFramework" version="6.1.1" targetFramework="net45" /&gt; &lt;package id="System.Data.SQLite" version="1.0.94.1" targetFramework="net45" /&gt; &lt;package id="System.Data.SQLite.Core" version="1.0.94.0" targetFramework="net45" /&gt; &lt;package id="System.Data.SQLite.EF6" version="1.0.94.0" targetFramework="net45" /&gt; &lt;package id="System.Data.SQLite.Linq" version="1.0.94.1" targetFramework="net45" /&gt; 
I haven't tried it yet but the concept is appealing. I'm in the process of building a node-webkit application and if this works I might use it. I wonder what their pricing structure will be once it comes out of beta. I just subscribed to your channel btw.
Yes, it is an appealing concept, but in my opinion mostly for the cool factor. I can see a big use for legacy silverlight apps, but would it actually be worth avoiding writing a brand new app in html/js? As far as pricing structure, I'm not aware of one yet, but you never know. Thanks for the sub btw.
I agree with hokkos, I wouldn't suggest ignoring JS. You might want to wait until ecmascript 6 which is probably going to help you like JS. But, doing web dev in a non web language is pretty neat.
The mono project will incorporate all that juicy .NET code (which is leagues ahead of most of the mono reimplementation) mono will still be around and strong, maybe stronger, microsoft wont be accepting pull requests from the community just yet because they have a very high standard for backwards compatibility and testing so i imagine mono will become .NET plus community additions and then the good stuff the community contributes will be rolled into vanilla. just a guess though. 
Ok I tried CDrawer Wave = BG as well as CDrawer Wave = Graph.BG Both do not work either It's unfortunate it has to be a parameter, there would be no issue if I could just call it within the method :(
Yayyyyyyy. \o/ 
If you have access to a client machine, I would try and run the dependency walker on the application. http://www.dependencywalker.com/ It might be that it is dependent on another version of the .net framework that you may have installed, but may be missing from the client machine. The other thing to keep in mind is that when you have native code library being loaded, the architecture of the exe is very important. The Any Cpu default is very very bad. I would suggest that the exe is either built as x86 or x64. This should prevent running the application as x64 and loading a library that is x86 only.
As stated above, appears to be equivalent to Professional, not Ultimate. So you don't get the Ultimate only features.
Wow, that's pretty impressive. If it was only an Android emulator for Visual Studio, that wouldn't be nearly as good.
All the features of professional I think. Not quite Ultimate edition, although most people are probably going to be just fine with that.
I'm not sure i understand what you're asking here. But seems to me you're trying to pass an object of type CDDrawer to another method? private void Wave (CDrawer wave) { // do something with wave } private void mainMethod() { // create proper instance of CDrawer class CDrawer myDrawer = new CDrawer(); // Call method created above Wave(myDrawer); } Is this what you're talking about doing? maybe i'm missing something here?
Yah essentially, my issue is that &gt;private void Wave (CDrawer wave) would not work for me, it kept saying that it expected a definition. I will try again though, perhaps I am just too tired atm, or VS is just a jerk :P
You understand that the syntax for a method definition is; access_level return_type MethodName (parameterType parameterName) Here is a simple example of creating an instance of a class, and passing it to another method to be used. Granted this isn't the best example, but hopefully gets the point across. public class Person { public string Name {get; private set;} public int Age {get;set;} // Constructor public Person(string name) { this.Name = name; } // Example Method public void Speak() { // do code here to speak } } private void mainMethod() { Person person = new Person("Socmonkey"); makePersonSpeak(person); } private void makePersonSpeak(Person somebody) { somebody.Speak(); } So is CDrawer a type (class/struct) like Person above or another method name? Posting a more complete copy of your code would help.
Today's big announcement gives me hope for a full-featured cross-platform build system. :)
Graph is the variable that I am supposed to add as a parameter for my new method. Graph is the name of the type that the Graph variable is contained in I am on my desktop right now and my laptop seems to think it shouldn't respond to me. So off the top of my head: static private void Graph() { CDrawer Graph = new CDrawer; [code to draw the axis on the background, just some for loops] } static private void Wave (CDrawer Wave\*, [some double parameters]) { [code to draw a sinusoid] } *This is supposed to call the first method, but I can't call Graph or assign to it in the parameters, it seems Also I have changed the name of the variable Graph to BG (for background), but that did not help *CDrawer is a variable type, it brings up a console window that displays the graphics that have been coded for. It ~~uses~~ is accessed from the GDIDrawer method, but "using GDIDrawer;" means I can just use CDrawer in my program
Sounds like you're trying to call a method from within the parameters of another method. You cannot do that. static private void Graph() { CDrawer Graph = new CDrawer; Wave(Graph, doubles1, doubles2); // &lt;--- this calls the 2nd method (WAVE) passing Graph along to it to be used. // Draw axis code } static private void Wave (CDrawer wave, [some double parameters]) { // you can now use wave variable to call methods, or read/write properties/fields. e.g.; wave.Something(); // code to draw sinusoid, which i'm assuming needs CDrawer for something? } Without seeing your code, to see which way you're flowing from method to method, it's hard to determine. But you cannot call a method directly within a parameter of another method. You can only pass data between methods to be used within.
https://dotnetfiddle.net/qghKMs here is some example code..
I can't imagine living without CodeMaid now. Code reorganization and cleaning is amazing. My company doesnt have the money for ReSharper though.
can you post your final fix when you figure it out, please?
C# doesn't have type erasure, java does. This is actually a huge fault in java.
Downloaded the DLL at the bottom of[ this page.](http://blog.tigrangasparian.com/2012/02/09/getting-started-with-sqlite-in-c-part-one/) 
"open source .NET will be expanded to run on Linux and Mac OS X in addition to Windows." So, it sounds like they're going to do the leg work and porting it. Does that mean we can expect a .Net installer for Mac OS X and Linux anytime soon? I'm looking forward to installing .Net apps on my Mac, however it will work. Edit: Yes, they're planning on creating a runtime for OS X and Linux.
&gt; they are going to drop Dalvik entirely with Android 5 I thought Android 5 is already released. 
for $1200, you can get MSDN premium for a year.
I totally did not see that coming :)
A lot of people have mentioned CodeMaid. Looks like I will have to try it ;)
What are the differences between VS 2013 Pro and Ultimate? 
&gt; You won't be able to use Community edition for non-open source projects though. Wrong. &gt;Hereâ€™s how Visual Studio Community can be used in organizations: &gt;An unlimited number of users within an organization can use Visual Studio Community for the following scenarios: in a classroom learning environment, for academic research, or for contributing to open source projects. &gt;For all other usage scenarios: In non-enterprise organizations, **up to 5 users** can use Visual Studio Community. In enterprise organizations (meaning those with &gt;250 PCs or &gt; $1MM in annual revenue), **no use is permitted** beyond the open source, academic research, and classroom learning environment scenarios described above.
http://www.visualstudio.com/en-us/products/compare-visual-studio-products-vs.aspx 
Must be somewhat tricky for them to implement. A lambda leads to creation of classes and methods and cached delegate instantiations and what not. It's largely a "compiler feature".
Not yet I think.
Hallelujah! Praise the Flying Spaghetti Monster! I have been waiting and hoping for this feature ever since I saw LINQ the first time.
True, but I think it was obvious in the last 5 years even that open source software and tooling was booming, and Microsoft has started making very rapid shifts in that direction to bring developers back to the MS stack.
Ah. That explains a lot. - Running Server 2012 R2 as workstation OS - Running SQL Server Enterprise - Shared copy of VS13 with most of my friends Good Guy Microsoft doesn't hassle broke college students for sharing copies of expensive dev tools. As long as nothing is changing, I'm fine with the current setup.
You can calculate a 2D index from a 1D index with this method: public Point ConvertTo2D(int index, int columns) { return new Point(index % columns, index / columns); } edit: I may have misunderstood your question. How is tile 6 equal to [5, 7]?
So long have I waited for this. Mono has been okish at best, but now c# will truly be cross platform. I feel like I could cry ;-;
Sorry I didn't do a great job of explaining as it's hard without visualising the game board. I quickly made this template of the game board: [image link](http://i.imgur.com/7DU8Vvq.png) So the start position (position 1) in the array would be: [0,7]
 x = index % 8; y = index / 8; if(y % 2 == 0) x = 7 - x;
This is so awesome. I'm really excited to see what kinds of projects that people start because of this.
Thanks for the quick response, could you just quickly run through that code?
It turns a 1D index into a 2D index, and if the row is odd, it inverts the X value.
They're not finished committing code yet, like I said. The source release is being staggered.
How would I implement this into a movePlayer method? The number to move by is a result of a dice.
Now all we need is Resharper Communityâ„¢
By incrementing the position by the result of the dice throw?
I can't wait to see improvements on Mono. I've been using Xamarin Studio (got my student license!) and while the IDE still needs a lot of polishing I'm impressed so far on how you can create products for iOS/Android/Windows/Mac and possibly Linux through Mono I should add I'm still learning C#. I know other languages, but seeing stuff like this? It brings excitement, being an enthusiast and all.
Yes, it can and will be ported to Linux and Mac. In fact it's Microsoft which will be doing the official porting. That's what they announced yesterday at the conference I am at.
GUI frameworks are not part of the news. WPF and WinForms are not being ported. And neither is the full .NET framework. If the library works with Mono (you need to test), then you can use it under Linux. If not.. Then you need to hope that they will re-implement their library using the .NET Core framework. A lot of third party developers like James Newton King (JSON.NET) are already doing this.
So no need for MSDN subscription?
All code you use will have to be cross-platform. There's almost certainly no way Telerik's controls will be. For one, the WinForms implementation in Mono is incomplete and buggy, and the source for the .NET implementations of WinForms and WPF likely will not be open-sourced, so there would be no way to port them.
Select() your data into an anonymous type: var myNarrowProjection = db.SomeModel.Where(whatever).Select(m=&gt;new {m.thisProperty, m.anotherProperty); The generated sql is smart enough to just SELECT what was Select()ed. At the end of that, depending on how many rows you expect to get back, use .FirstOrDefault() or .ToList() as appropriate (what you've got so far is an IEnumerable, which would be a little unconventional to store in this.SomeProperty).
If your grid is bound to an array then you can just iterate through the array; any changes you make in the grid will be reflected in the array. If you don't have a reference to the array then you can get it by casting it from the itemssource - i.e. foreach(var item in (grid.ItemsSource as Array&lt;MyObject&gt;)) item.Save(); or whatever...
As for which is selected.. depends how you are implementing it. The grid will probably have a selecteditems collection as well which you can cast again to the type you are working with. Probably need more details to give a proper answer.
ah. well it's a good step in the right direction anyway. 
If your player is moving forward in a linear fashion, would it not be easier to work with that simple movement and then convert the position on the board if the board needs to be visually updated? Also, why not just use the indexes of the 2D array (where 64 is position[0,0] ) to make the programming easier and then store the "game value" separately? If you make a cell class for each cell on the board, you could give each cell it's assigned number once and never worry about keeping track of position again. If you must stick to your current implementation, then do the math that Sarcastinator has provided for each position. If this is a personal project, I think there are easier ways to make this work based on your short description. 
On mobile now can post a solution to this when I get home. Recently ran across the same problem.
You're just causing yourself pain if you're working with WPF and not implementing MVVM. If you're accessing things in your view from anywhere other than view, you're doing it wrong. It took a long time before I believed this in my bones, but since that revelation, my WPF work has gotten 10 times cleaner.
I'm very happy with ZenDesk for helpdesk and OnTime for defect management
this board (I'm gonna call it chutes &amp; ladders board) is very complicated for computers to work with since every row goes in a different direction, and so I would avoid representing it with a 2d array, I recommend you either: * as /u/Azphael said, treat your board as a line (1d array), making movement smoother and simpler to visualize, it would be simpler to translate a number to C&amp;L board coordinates then the other way around * forget about the board all-together! my guess is most of your board will be empty anyways so just store your players in an array (set maybe? if you're adding new players during the game) with each player remembering it's number, again, getting the coordinates from a linear number is easier then translating coordinates to a number 
I only just watched the video. When you showed the generated files, it looked like about maybe 4MB of js files which were included. That's pretty freaking gigantic for a simple web application...
Personally, I've been hoping for Edit-and-Continue support with lambdas for a long time. A pretty high percentage of my functions today have one of lambdas, async or dynamic in it, which has slowly made Edit-and-Continue less and less useful. I'm really happy they're working on this now. :)
Same here. I actually got the email from the uservoice website. 
No, they don't need to.
Right there with you. I'll take intermediate evaluation for now though. It's a pain to edit in temporary variables just to be able to examine values during evaluation.
I've almost forgotten about E&amp;C because of issues like that.
Not yet.
Never. That's why we have NuGet. The 3rd party provider just need to provide a version for each framework. Mono, .NET, .NET Core. Or a portable, if that suits the need. With all the upcoming stuff you'll be able to easily compile for multiple target frameworks at once.
You need to think about return types when you call split. Split doesn't operate on the string itself, it returns something. You're not capturing that return value. http://msdn.microsoft.com/en-us/library/tabh47cf(v=vs.110).aspx
They don't **have** to be portable libraries, but it's handy.
What exactly are you trying to do? Is the goal here to split the string into parts using the space as the delimiter? Or are you trying to just remove the space?
Not that I don't think List or Dictionary would work for these situations but using polymorphism would be so much better. You can do something like this ; public class Player { public List&lt;Weapon&gt; Weapons { get; set; } } public class Weapon { public string Name { get; set; } public float Weight { get; set; } public float Damage { get; set; } } public class Gun : Weapon { public int Ammo { get; set; } } public class Sword : Weapon { public float Length { get; set; } } When you want to add a weapon to the Player, you can add it like this ; Player player = new Player(); player.Weapons.Add(new Gun()); player.Weapons.Add(new Sword()); And you can distinguish these weapons like this ; foreach(Weapon weapon in player.Weapons) { if(weapon is Gun) { Gun gun = (Gun)weapon; //Do gun stuff. } else if(weapon is Sword) { Sword sword = (Sword)weapon; //Do sword stuff. } }
All I'm trying to do is remove the space from the string "Input"
NCrunch is really awesome at helping write TDD code. Having that little green logo spin at the bottom left really helps me, especially as a junior learning. I can see real time what I have broken, and when my tests work.
If you want to take a string like "Hello World" and turn it into "HelloWorld", you don't need the .split call. You need string.replace: http://msdn.microsoft.com/en-us/library/fk49wtc1(v=vs.110).aspx Here though, you still need to think about how the function works. C# strings are immutable; once they're created they cannot be changed. That's why the replace method is not void, it can't operate on its own memory, it needs to create a copy of the string and return it. Notice the function signature in the docs: public string Replace( string oldValue, string newValue ) The "string" ~~after~~ BEFORE Replace denotes its return type. When the function is done doing the replace, it will return a new object, of type string (in this case), with the specified target substrings replaced with the specified new substrings. tl;dr you need to have something like this: input = input.Replace(" ", "") that will take input, replace all instances of the space character with nothing, and return and reassign the generated output of Replace to the input variable.
As you have it written, each instance of `foo` already will have it's own `fooArray` instance. Your question asking if `foo` inherits from another class seems irrelevant. Maybe you can word your question differently or show some code demonstrating what you want to do with it? EDIT: That is (putting aside the fact that `fooArray` is `private`), having the below code will output false: foo f1 = new foo(); foo f2 = new foo(); Console.WriteLine(f1.fooArray == f2.fooArray); // outputs false; they are different arrays
I was going to say exactly this, but you beat me to it. Also dynamic variables means something completely different which I don't think would be a good idea for this scenario: http://stackoverflow.com/questions/2690623/what-is-the-dynamic-type-in-c-sharp-4-0-used-for
GitHub ain't bad.
&gt;Hopefully, youâ€™re already shivering at returning those nulls. I don't understand this surge of articles with the general scent of "fear the mighty null which will molest your dog and raise exceptions"... Null is fine. It's a value that represents something: no valid reference. It makes sense in some contexts, it doesn't in others. If you return a null instead of empty collection for IEnumerable return type you should stab yourself in the eye with a fork repeatedly. If you return a null where it makes sense you simply have to handle it. Now I admit I may be ignorant on some usecases, so if someone can enlighten on the occasion I'd rather reimplement Tuple with my own interface and class, avoid using a proper logging framework(when do you not have access to windows event log for example? On WinPhones?) and all that just to avoid a potential NullReferenceException that would be 100% my fault for letting slide through without exception handling, I'd be grateful.
Agree. Fogbugz is simple and easy to use. It's also free for (I think) up to 3 registered users, which you can activate and deactivate for different projects. Works really well for me with side-projects at no cost. Also relatively cheap for larger projects where you need more registered users. It's like a homegrown spreadsheet/email system with just enough rules to know where you are. After that there's JIRA etc., which is excellent and is my main project management system in work. But that has more significant cost over a certain (10?) number of users. Try FogBugz and see where you are after that, imho.
This is the biggest thing that keeps me from using lambdas- having to make the decision that I am giving up E&amp;C on that routine.
I have been using E&amp;C more or less constantly for over a decade with no real issues. The 2 biggest issues were no E&amp;C in x64 and with lambdas. They fixed the x64 issues in VS2013 and hopefully the lambda issue get fixed eventually. E&amp;C is a *massive* productivity booster and one of my favorite features of the Microsoft stack going back to VB6 
Just looked into Fogbugz and was really impressed by the pricing and features, and that they host it. Showed my boss it and hoping for the OK! Thank you /u/jhartwell and /u/Silures !
GridViews only show a calculated subset of the data which is applied to the grid formatting. Each time you change the page, it does a post-back and loads the next page from the data set but it does not update anything unless you explicitly program it to. Thus, when it redraws the client controls, they "forget" the CheckBoxes and their statuses, and you have not saved a record of that anywhere. The most commonly used solution would be to place the GridView in an UpdatePanel. Then make the CheckBox in the grid column fire a post-back which then updates a boolean field in your dataset or a dictionary of {rowNumber:boolean} mappings if you cannot change the dataset. Either the dataset or the dictionary you use needs to be stored somewhere for persistence through postbacks. This solution would cause a larger number of partial postbacks, but seems to be the most widely accepted solution for using with a GridView.
There are already structs for non-nullable immutables, iirc uservoice had the type! suggestion in good standing and ?. operator is coming soon to clean up some of the null checks. &gt;When a method returns a Either&lt;Customer&gt;, I know it could fail... &gt;I either (a) assume it isn't null and get burned when it is... With a monad you know you could fail and you handle it, but you're not going to case (b) with regular nulls automatically and simply handle the case of null just in case it fails like you do with a monad? IMO this linq-lookalike is being lazy in a bad way - it comes to solve a problem but instead complicates it over a few null checks, a matter of taste I suppose, I just hope I won't have to deal with such code. 
&gt; With a monad you know you could fail and you handle it, but you're not going to case (b) with regular nulls automatically and simply handle the case of null just in case it fails like you do with a monad? Not exactly sure what you're trying to say here, but IMHO monads make it clear when you need to check for a "missing" value whereas reference values aren't clear when you need to check for null (and sometimes clutter the code) and when you don't need to. I agree though, that unless you have language support, a lot of this just ends up cluttering your code and sometimes just makes debugging and the code itself more difficult. But that doesn't make me like null any more, it just makes it more convenient to use.
I'm not sure why, but my current project hasn't been compatible with Edit &amp; Continue for about 3 years. I miss it like hell. :(
There is never a use case where the dynamic type is a good idea, its an abomination.
Same here. I vaguely remember using edit&amp;continue &gt; 5 years ago, but it never even occurs to me anymore.
What you have done gives each instance of foo it's own fooArray. It would only be shared if fooArray was marked static. Your second question doesn't make much sense. Inheriting from a class doesn't preclude the child class from having its own set of fields and properties. Maybe you meant it the other way - other classes inheriting from foo? If so, you would need to mark fooArray with the appropriate accessibility modifier. By default, what you have written would be marked as 'private'. Alternatively, if you did mean 'inheriting from a previous class that had it's own 'fooArray' object - then you would need to use the 'new' keyword to indicate that you wanted to 'hide' the previous implementation. Generally, this is not a good idea.
I love dynamic/ExpandoObject, but I do agree that the idea of 'dynamic' strongly contrasts with the idea of a strongly-typed language. Still, I have found a few uses for dynamic that make me glad it exists.
The pricing in minutes confuses me. If I am running an azure web server and no one is looking at it am I still being charged?
For single-developer shops who haven't hit it big (yet) ... this is absolutely huge news. Just finished installing. Once I make my first million, I'll be happy to buy a real copy ;-)
based on the rest of his code, he's trying to detect palindromes. Here's the definition of a palindrome: A palindrome is a word, phrase, number, or other sequence of characters which reads the same backward or forward. OP: string.Split returns an array. You should store this array in a variable, the iterate over the array and reverse each element. Also, it's not as simple as what you are trying, unless this is a homework assignment. Consider: A man, a plan, a canal: Panama. This is a palindrome, but your approach would fail here. 
as a sidenote to this - being able to use lambda functions in the immediate window is a HUGE feature for me.
I donno, I'd argue that an array of objects is basically the same concept. And I've for sure had good reason to use them, from time to time.
It is already in source control. I am looking for a help desk solution rather than a bug tracker (Use trello for that currently)
I'd say avoiding it unless you need it is a good practice, but there are plenty of valid use-cases for it. Primarily COM interop and interop with scripting languages, but there are others.
It will evaluate each statement. if you only want one to be evaluated, use if (blah blah) else if (blah) else if (blah) else 
Thanks, if I do it like this will it do both of the ones starting with if if (blah blah) else if (blah) else if (blah) else if (blah1 blah1) else if (blah1) else if (blah1) else 
It will not check any other ifs after one was true. If the first one was false and the next else if is true it will run whatever is inside and then break out of the else if chain. However I would advise against else if chains because they're a lot less readable than a switch case.
I don't really understand your question, so here's an example: bool thisIsTrue = true; bool thisIsFalse = false; if (thisIsTrue) { //These statements will execute } else if (thisIsFalse) //not even looked at { //These will NOT execute. } else if (thisIsTrue) //not even looked at { //This will NOT Execute because the first one would } else //not even looked at { //this won't happen because the first one was true } if (thisIsFalse) { //This is false so doesn't enter } else if (thisIsTrue) { //This WILL execute } if (thisIsTrue) { //this WILL execute too, since it's a new if }
Well, if it works that's great :D
The weapon should rather have an `abstract` DoStuff method and be called on the items in the list. No need for type checking and mixing features.
Check if the text recognized by the server is "blue" and set the object color to blue then?
Luckily for you, this is a program, and you can test it for yourself! In your debugger, put a breakpoint and single-step the program. When you do that, you can see for yourself what the flow of the program ends up being, and also what the states of the different variables are at every step. Additionally/alternatively, you can output strings to the console which will also let you know. Using the debugger is a useful technique, and it will help you to answer questions for yourself in the future.
Aye - I remember using E&amp;C back when I was still writing VB6 15-ish years ago, but I can't remember E&amp;C working since I made the jump to .Net. Not that I'm hoping for a return to VB6.
Also a pro tip for indexing: class foo { int[,]fooArray=new int[8,8]; public int this[int a,int b] { get{return fooArray[a,b];} set{fooArray[a,b]=value;} } } now you can use indexing on your foo object like so: foo x=new foo(); x[1,5]=10; just a nice trick that C# lets you do. 
FTFY private void button1_Click(object sender, EventArgs e) { char[] charArray = textBox1.Text.ToCharArray(); Array.Reverse(charArray); if (new string(charArray).Replace(" ","").ToLower() == textBox1.Text.ToLower()) label1.Text = "This is a palindrome."; else label1.Text = "This is not a palindome."; } I'm not sure if you're familiar with a ternary operator, but you can use it to replace that if else statement like so(to impress your teacher): label1.Text = "This is " + ( (new string(charArray).Replace(" ","").ToLower() == textBox1.Text.ToLower()) ? "" : "not" ) + " a palindrome.";
http://i.imgur.com/Nce7jU9.png
An even more pro tip, considering multidimensional arrays have performance degradation: class foo { int[] fooArray = new int[8 * 8]; public int this[int a, int b] { get { return fooArray[(a &lt;&lt; 3) + b]; } set { fooArray[(a &lt;&lt; 3) + b] = value; } } }
Yes. But you can Deallocate certain services which means that they are "off" and you are not being charged for that service. In Azure the idea is that you get charged for producing upstream data and for having allocated services. If I have a Virtual Machine that is on but doing nothing I still pay the full rate of that VMs tier because they have exclusively allocated resources to me that other people can't use. Deallocating a service like a VM means that they free up that CPU &amp; RAM for other people to use. When you do this you loose your IP (You should be using a DNS name so that should not be a big deal) But since you are no longer reserving resources you no longer pay for them. Then when you need to use that service again you can just start it up and away you go. Generally an exception if Disk Space which you only pay for what you use, and even if you deallocate the service that uses that Hard Drive you still pay for the storage. Unless you are hosting Media files it will be unnoticable though. If you are running a website that has peak times that require a higher tier you should consider using a schedule for [Horizontal Scaling](http://www.slideshare.net/GetCSense/how-to-scale-up-out-or-down-in-windows-azure-webinar). Example: 2 cheaper workers when you are at peak and only 1 cheaper worker every other time. Rather than paying for one normal priced unit the whole on/off peak just to be able to handle you peak loads. Websites in Azure are Technically VM instances. As I understand you can even Remote Desktop to them. TL;DR: You pay for what you reserve, not what you use. More Information: http://blogs.technet.com/b/uspartner_ts2team/archive/2014/10/10/azure-virtual-machines-stopping-versus-stopping-deallocating.aspx Sorry if any of that was confusing. If you need any more help feel free to ask. You can also ask on [ServerFault](http://serverfault.com/) where Azure employees are known to lurk and answer questions.
Too many ifs? Use switch. Theres generally something wrong if you're doing so many conditional statements. switch (aThing) { 1: { output = true; break; }
The compiler might optimize it in a way that when the first one triggers then the second one doesn't, and when the third one triggers the fourth one doesn't. But without optimization it will go through all of the ifs.
This. The action of the weapon is unique to the weapon so it should be abstracted inside the class of the weapon. This allows you to change any weapons action without affecting other code.
Sure. I work on a community project that uses Digital Ocean for their hosting and overall that seems to be cheaper than Azure. What I have noticed at least is Azure provides some great features that make working in the cloud easier. As far as websites go the company I work for could never let go of Hot Swapping. I'd keep an eye on Azure at least. They've continually dropped their prices and they do offer free credit under certain circumstances. You might find the same time next year or even earlier that they are cheaper again. Azure &amp; other major cloud providers seem to be in a little price war at the moment.
Alright, finally figured it out. I had been putting in the right code but was trying to call the function before it would update the strReceiveUDP to what i said, and now it's after and works perfectly
I've been able to install 2012 and 2013 on other drives as well, though I'm not sure how many of the 6 trillion components they install alongside the IDE actually end up in the target directory.
What? You don't like a text editor written for nodejs running in a packaged webkit that weighs 100MB?
Why is it worse? Aaaaaa will be brute forced quicker.
It's less frequent so if somebody tries to crack password for online service, there is better chance that auth attempts rate will be limited. If we talk about a leaked password database... well, chances are most of passwords will be cracked in reasonable time with any modern GPU anyway (and salt will not help much).
None basically...
jesus lol, finally. yes, what he said. use *switch*
I've gotten around this by copying my visual Studio folder to my ssd and creating a symbolic link from the original location. Only hitch is if you are doing an update copy all the files back first or you get major issues. 
Thank you. Wondered why the hell I was downvoted for suggesting the sane.
Just an FYI - there's also an image on Azure if you don't want to risk your main dev box. And if you're an MSDN subscriber you have free Azure credits. I did this yesterday - really easy.
I teach college CS and I would dock multiple points for using a compressed if statement using the ternary conditional operator like this one because it obfuscates the check whether it is a palindrome (the main goal of the problem) in an instruction that seemingly only affects the UI. Never optimize at the cost of readability.
Pretty sure they have VM images for it, too.
Probably. I didn't want to run a VM locally since Hyper V chews up battery on the Surface Pro 3.
a cross platform wpf-like framework would be the BEES TITS!! hope that is coming
Looks like you might need to pony up for an msdn sub for support. You could always post this on StackOverflow. The bottom line is that this is the wrong place to post for support.
This really belongs on a Visual Studio list or group. Here's a helpful link http://msdn.microsoft.com/en-ca/library/scff9c7c(v=vs.90).aspx You're really going to have to do something similar. 
Fair point. Merely pointing out options.
Are you really, really sure that your back buffer is 1920*1080? Because that error usually happens when the rectangle you specify is bigger than the available area.
I had no idea of that. Does it apply to 64 bit windows? Also, ColorData[] is an array, not an object, are arrays really included in that limit? Each colour is 16 bytes (4* float) so 16 bytes. 800*1000*16=12 megabytes, so way under the 2GB limit. So definitely not exceeding that!
Yes, definitely using it correctly. That's why I included the sample code for a 700x1000 rectangle; that works perfectly therefore I have the syntax and usage right. If I was using different types wouldn't the GetData call fail? Note it's a generic, I've got &lt;Color&gt; in there so that also ensures the types are correct...
I didn't know they had a performance degradation. Good thing you pointed that out because I'm writing a sudoku guessing algorithm and I was using [,] style arrays. Gonna make the switch. Edit: poor OP. We're probably confusing the shit out of him. 
Well, unless you're up against it already with performance, I wouldn't worry too hard. There's some info here: http://stackoverflow.com/questions/468832/why-are-multi-dimensional-arrays-in-net-slower-than-normal-arrays And yes, I was just adding to the conversation for everyone to see, not just to confuse OP :)
You really shouldn't be doing this anyway (Plugins should not be modifying the toolbar themselves, if users want it there they should be it it there themselves - if they are using VS they should be able to do this anyway) but you can do it fairly simply, I can't find the c# example but [here](http://msdn.microsoft.com/en-us/library/ms165627.aspx) it is in VB.shit. FYI VS uses the old office toolbar system so a good place to look for help if you can't find anything is the Office 2003 reference.
Screen resolution != your XNA window/backbuffer resolution. For the cases you are exposing, I am almost entirely sure that you XNA back buffer is being created at 1024x768 or 1280x720. That's why using 800 or 1000 for the rectangle's height is failing.
https://azure.microsoft.com/en-us/marketplace/partners/microsoft/visualstudioultimate2015preview/
Here is the code in question: internal unsafe static void GetAndValidateRect(_D3DSURFACE_DESC* __unnamed000, uint* pdwLockWidth, uint* pdwLockHeight, Rectangle? rect) { if (__unnamed000 != null &amp;&amp; pdwLockHeight != null &amp;&amp; pdwLockWidth != null) { *(int*)pdwLockWidth = *(int*)(__unnamed000 + 24 / sizeof(_D3DSURFACE_DESC)); *(int*)pdwLockHeight = *(int*)(__unnamed000 + 28 / sizeof(_D3DSURFACE_DESC)); if (rect.HasValue) { if (rect.Value.X &gt;= 0 &amp;&amp; rect.Value.Width &gt; 0 &amp;&amp; rect.Value.Y &gt;= 0 &amp;&amp; rect.Value.Height &gt; 0) { Rectangle value = rect.Value; Rectangle value2 = rect.Value; if (value.Left + value2.Width &lt;= *(int*)(__unnamed000 + 24 / sizeof(_D3DSURFACE_DESC))) { Rectangle value3 = rect.Value; Rectangle value4 = rect.Value; if (value3.Top + value4.Height &lt;= *(int*)(__unnamed000 + 28 / sizeof(_D3DSURFACE_DESC))) { *(int*)pdwLockWidth = rect.Value.Width; *(int*)pdwLockHeight = rect.Value.Height; return; } } throw new ArgumentException(FrameworkResources.InvalidRectangle, "rect"); } throw new ArgumentException(FrameworkResources.InvalidRectangle, "rect"); } } } It seems to me that it will throw only if your rectangle is larger than the underlying Direct3D surface, so I think /u/r2d2rigo is correct.
Check out [Project Euler](https://projecteuler.net/) to get used to the language.
Maybe because he's got two variables that he's testing in the if statements? I didn't downvote you.
Two variables, with four different Ifs affecting two different output variables. Two switch statements would suffice. One for aThing and another for otherthing. Makes it much more readable.
 Orderedlinkedlist[] Oll = new OrderedLinkedList [26] String str = "ABC"; Is this all one thing or are you missing a semi-colon between them two?
VS Community supersedes Express, but it's much more than a rebranding. Visual Studio Community significantly expands the features available to free users. I'm not 100% sure what is included yet, but Community is equivalent to at least Professional, if not Premium/Ultimate.
Community is Visual Studio Pro + Plugins so quite a step up from Express. If you've been coding c# without Resharper your head is going to explode once you start using it
&gt; Oll[j].insert(str); By specifying j in brackets, you are referring to "item at position j in Oll". In this particular case, that would be index 0. However you do not appear to have *initialized* your list elements to anything, you have only specified that your list can hold 26 elements. So when it attempts to perform an operation (.insert) on Oll[0], the system returns null, and you can't call a function on a null object. A simple check would be if(Oll[j] == null) { // Initialize item in list } Oll[j].insert(str); Simple item types like int, string, etc automatically initialize when declared as an array [] thanks to the language specification. However, classes you define do not automatically initialize unless you design them that way. You must call the constructor to initialize list objects on each object in the list.
Sorry, I missed the semicolon
Thank you, I'll try this when i get to my computer. That makes sense too. 
Resharper is by far one of the greatest collection of tools I've ever had the pleasure of using. Think of every complaint you've had about visual studio and resharper basically implemented/fixed said complaint. Go watch the promotional video for it on the jetbrains site to see some highlights.
For those who thought WPF was dead :P
I haven't heard the term DLR in years (although I do use ExpandoObject occasionally). Is it still a thing or is it rolled up into something else?
If you're a student they just made all their products free. You can sign up with an academic license. A buddy of mine emailed them asking if there was any other discounts they could apply because he couldn't afford it and they sent him back a slightly discounted rate. Totally worth it imo.
VS Pro supports plugins, so I'm not sure what you mean by "+ Plugins". Resharper is getting less and less relevant with each version of Visual Studio. In VS 2010 it was a godsend. These days, the only thing head exploding about R# is the performance hit.
It's a guessing algorithm, so yeah, it's a huge performance leech.
I thought only ultimate had plugin support, my bad
thanks for this link! /u/changetip 333 bits
Express has no limits. You can have everyone in a major corporation use it and not pay a dime. Community is only free for open source and small teams/companies, the people who couldn't necessarily afford it otherwise.
First infection rule. Once any part of a given edition of VS hits your hard drive, it all has to go on that drive.
strings are null by default. What he means by "simple objects" are `struct`s
I've always found it hard to get any meaningful info on VS extensibility... But the one place to ask questions and (maybe) get answers is the official forum: https://social.msdn.microsoft.com/Forums/vstudio/en-US/home?forum=vsx
Strings are null by default because they are the only built-in data type that is a reference type. That has to do with allocation space required for strings due to their potential size having to be on the heap rather than the stack. However, Strings were implemented with value type semantics in C#, even if they don't inherit from System.ValueType. Thus, they behave like a value type and do not require initialization. Edit: My original post was grossly simplified mostly for the OP's benefit of understanding, not trying to be combative, sorry!
They don't really have value type semantics, they're just immutable. Goes so far as that two strings that are the same will be references pointing to the same memory :)
How many people out there are scrounging for space with their Surface tablets?
You never change the value of changeValue so passing it by reference doesn't do anything.
You have to change the parameter, you're just declaring a new variable. So you'd want: { int coins = changeValue / coinValue; changeValue %= coinValue; return coins; } Feel free to ask for further clarification :)
I want to backup your comment to underline it's significance. I was using Visual Studio Online with VS Professional, mainly for VS Pro. For this I had to pay 41,22 euro per month. With the community version I basically get the functionality I need for free. So that is an almost 500 EURO per year gift from Microsoft. Pretty sweet. 
Yes, and straight from the horse's mouth: &gt; Q: How does Visual Studio Community 2013 compare to other Visual Studio editions? &gt; &gt; A: **Visual Studio Community 2013 includes all the great functionality of Visual Studio Professional 2013**, designed and optimized for individual developers, students, open source contributors, and small teams. http://www.visualstudio.com/en-us/products/visual-studio-community-vs
The functionality I need btw is, running unit tests (free alternative is Testdriven.net), performance analysis, SQL server support, both Web en Windows application development, tfs and git support, the plugins how can you live without the plugins. Again, this is a very sweet gift from Microsoft. 
In case anyone comes back, I have figured it out, and it looks something like this: static void Main (string[] args) { CDrawer Canvas = new CDrawer(); Graph(Canvas); Sin(Canvas); } static private void Graph (CDrawer Graph) { //executable code } static private void Sin (CDrawer Wave) { //executable code } I do not know why it wouldn't let me create a CDrawer parameter without defining it before. Perhaps I should have just cleaned the solution, hard to say
ah sorry that I missed this! What you have described here is essentially how it ended up working. I do not know why it was having issues with only putting "CDrawer wave" in the parameters. I think I really was just far too tired. 
Also... ToLower and == for string comparisons. :( 
Still a little hazy, this pass by variable, pass by reference may be the death of me haha, So I ran what you said, and it works, but Im not sure I still understand the concept of pass by reference..
If the library is pure .NET than you will usually be safe unless it makes a lot of assumptions. If the library makes calls into Native DLLs you might have trouble. Some Libraries provide both .dll and .so binaries though; I was able to use BASS.NET from both Windows as well as Linux by changing the manifest to include information to tell Mono where to look for P/Invoke, but it was far from straightforward or automatic. I wish we were using Telerik or any .NET Reporting framework. I have a license but so far the company appears to have taken the "use the cheapest alternative" route so we're having to deal with innumerable complications and garbage because that alternative ended up being Jasper Reports. If our stuff was Java it would be great, but everything is C# EXCEPT for the reports which shell off a separate program which is somewhat silly.
Yikes, why would you want to avoid js?
Because it's only used in web browsers and from what I heard it's not a good language in itself (bad performance/syntax).
You want to do web dev, but a language that works in the browser is a negative for you? That does't make a whole lot of sense. But I will tell you this, javascript/jquery are frequently the cleanest/easiest solutions. If you don't have that tool in your toolbox, you will have a difficult time.
One major issue my team has with using Resharper is when it is used to help clean up code that was written without it. We end up having the "annotate" feature of VS just full of resharper's small changes that make hundreds of lines of code look slightly different. We have a hard time finding who wrote what code, and how old it is. We have to do more version control searches to find what we need. Seems nitpicky, but it can be a big deal at times.
Pilchie is looking into it. 
 static void Main() { int a = 1; //a is now 1 methodB(a); //a is still 1, passing a value type simply passes the value to the method. Consider it like taking a copy of a. methodA(ref a); //a is now 22, using ref passes a pointer to a to the method which means any changes will update the original a. //Consider it like telling the method where it can find a in memory. } static void methodA(ref int b) { b = 22; } static void methodB(int c) { c = 4; }
You're right, he was correct. Turns out even though I was setting the Displaymode to be 1920x1080, and even though a stepthrough of the code showed that displaymode was indeed 1920x1080, when I examined the viewport (After reading r2d2's hint) the viewport was only 1024x768. So it looks like XNA is only changing the viewport to match the displaymode after Draw() has been called at least once. One question: How did you get that code, and can you step through it? Is it available for debugging? And thanks for your help!
As others have said elsewhere, Resharper really had most of the wind knocked out of it's sails with VS 2013. VS 2013 is phenomenal right out of the box.
&gt; These days, the only thing head exploding about R# is the performance hit. VS has all those refactoring options?
&gt;Goes so far as that two strings that are the same will be references pointing to the same memory :) They *may* be, but don't have to be. object a = "abc"; object b = new string(new [] { 'a', 'b', 'c'}); Console.WriteLine("a.Equals(b) : {0}", a.Equals(b)); // true Console.WriteLine("a == b : {0}", a == b); // false
So does it means I can install it on RAMDISK and trash my ramdisk when new version of VS available. 
Yes, you can. The most important thing that no course really teaches you, is to think like a programmer. To do this, you need to program. Soo, simply program, do your stuff, it wil help you. This goes for any language, not just C#. Maybe I repeat myself, but the most important thing to do when learning programming is to... program!
Awesome! Do you know any good websites or videos for beginners? I'm really eager to learn.
It certainly is possible. I recommend you to work your way through several tutorials and work on some small projects.
Alright, thanks.
What kind of projects, though? I'm just wondering.
I'm learning this way too. I've found some good opensource projects on SourceForge and GitHub that I've submitted changes to and had my code accepted with only minor changes (and usually guidance on why).
Oh, amazing. I'll definitly look into being part of projects.
How I did it mostly was to think of tasks which could be made simpler. An example was a tool I created for work which wrote down text using predefined text templates using simple button presses (I had an array of buttons left at the window which filled the text box on the right with meaningful content). I could edit the text blocks using a json configuration file and instantly reload any changes I made through that file. I also had planned to extend it to do some basic analysis and also do certain tasks through mouse macros but then I quit. You could also try some challenges like "Make a simple Telnet Server" or "Count all words in a text file and store the result in a separate result file".
1) Client apps don't talk to cloud storage directly. While storing your data in Azure is fine, I'd still put a web service (possibly hosted in Azure) in front of your data rather than having your clients access the data directly in Azure. Read-only access to BLOBs would be the only exception. If you ever need to change the schema of your data, having clients accessing your data directly will make it impossible to update your schema until you've updated all your clients. Also, someone could disassemble your client app to get the storage account keys and generally screw up your data. 2) Cloud services are not ultra-reliable. There will be periods of down time, slowdowns, and general flakiness. Pay attention to the SLA. *Pay attention the the Retry Policy settings in code* for the client libraries. And, of course, monitor your outgoing calls to the cloud services so you know they are causing your failures *before* your customers are bugging you about your service being down. 3) Shard your data carefully. Possibly geographically. If you have millions of users and are latency sensitive, you'll want a cloud storage account in each geographic region and you'll want users to be tied to the storage account in their home region. But mobile users can change regions!
Rephrase your question and have a think what you could only learn offline. Not a whole lot!
I learned a lot through the internet, but I recommend buying a book on C#. After messing around with C# and having somewhat of an idea what I was doing, the book helped me a lot in understanding what exactly was happening.
It's definitely possible, I'd say I've learnt more from the one internship I did and the countless hours spent on fun projects for myself than the past two years in university combined. Like other people have said, follow tutorials, think of projects that you'd find challenging to make and useful/fun to use. All I really have to add to all this is that /r/dailyprogrammer is awesome to get some regular practice in.
Next year, as part of VS 2015.
I've never used this site, but I've heard good things: http://www.microsoftvirtualacademy.com
Use the internet and buy one good book for quick reference and further explanation on tough topics. I like professional C# and the .net platform, but read reviews and see what might work for you Also check out pluralsight, that have awesome online trainings 
Thanks guys for all the good tips. :)
I'd say that's how most programmers learn practical software development. edit: practical
There are no official information. Around April/Mai 2015 is likely. Support for VS12 (aka Visual Studio 2013) or earlier is very unlikely.
Several months ago I actually started writing a 'soundboard' app using a 2D UI and Unity. It was going quite well, outside of a slightly uncomfortable startup time. Unity lends itself to animations and so forth, so if one wanted to put in the effort, they could craft a visually interesting, cross-platform, non-game application. Just beware of the networking limitations on Unity Free.
The answer is always "depends". It depends heavily on what app is going to do exactly. Generally architecture is some HTTP-based API hosted in azure that connects to SQL Azure database, does app-specific logic and returns response. /u/RiPoint is pointing out that clients apps should not talk to cloud storage directly; while he is not wrong but he is not entirely correct. If you need to upload some large file, client app could be given permission (SAS token on Azure Storage) to upload its data directly to storage. Have done it before and is great solution because it offloads you API servers from doing "proxy" work. I have been working for more than 3 years now with Azure technologies and I bet you can do what you need using these technologies. I suggest you look into Hosted Services (those give you uptime SLA), Azure SQL (relational databases) and Azure storage (file/blob storage, non relational data, queues) with these 3 building blocks you can build a almost anything.
I did it and I'm not very smart. I'm sure you'll find it a lay easier than I did. Like everyone says learn by coding. Thing is a side project or throw away idea that you can make an app for. It may go well and turn into something productive as well.
A subscription to something like pluralsight.com would help, but the key is in the first response.... practice. I recommend taking on small projects and build up. If you are going the C# direction then maybe Windows phone or Windows universal apps would help, since those would also serve as public examples that potential employers can see. The hardest job to get will be your first one, so having verifiable output will be a way to get your foot in the door. Also.... Know what SOLID means, understand unit testing (TDD), and be familiar with waterfall and Agile. No one should expect you to be a pro in these areas, but they are a part of many modern software development.
They are making it open source and they they won't ship it with their free SDK ? What the fuck...
Yes, they announced that for **now**. So people start jumping more to Visual Studio. I expect a VS2015 Community edition, once VS2015 is done. It would not make any sense to announce the Community edition, but then not release a version for 2015 with all the great updates that the IDE will bring.
Of course, that's how most people learn it, right? At least it worked well for me.
Keep a reference to the MdiChild, and change its Title property.
TIL nobody learned much of anything before about 1995
Self taught coder here - I knew how to code well before I went to college. Learned everything with google and tons of trial/error. In my opinion those who are self taught are generally much better developers than those who simply did it in school because it paid well. Self taught programmers have a passion and motivation for what they do. Their job is not a means to an end, instead it's their new school/playground where they can have fun and learn at the same time.
Also, find a mentor if you can. The internet won't catch logic issues you are making. I'd be willing to look at some of your code if you'd like. If interested, pm me for my email
Do you enjoy math? If so, [project Euler](http://projecteuler.org) will provide tremendous experience in logic and optimizing code. You must however have a fairly stable grasp of the language you use.
err.. no. Visual Studio is an IDE, not an SDK.
You need more details. 
By far the best answer! We, as programmers opposed to architects for houses, have the privilege to immediately test our stuff. :) 
http://www.codeproject.com/Articles/724245/But-How-Do-I-Learn-ASP-NET There is a section on C#, and also use pluralsight if you have some money to spare. If you're a student then Microsoft dreamspark offers free 90 day trial to Pluralsight.
This is still unclear IMO, the *ref* keyword has a use for reference types in that it actually causes the reference to get passed by reference. This is a subtle point that often catches people out if they're not familiar with the semantics of how parameters are passed in C#. If we imagine a call to a method that has a parameter that is a reference type then the parameter is passed by value, it's just that the parameter is a reference to the object on the heap. Once inside the method you have the original reference to the object and a new reference that has been created inside the method. These two reference both point to the same object, so changing a property through one of the references means that the underlying object is changed when it is accessed from either reference. However, if you change the reference itself within the method then the other one is unchanged. See the sample code below: using System; namespace Test { class Program { static void Main(string[] args) { var obj = new object(); SetNull(obj); Console.WriteLine("Object is null: {0}", obj == null); Console.ReadKey(); } private static void SetNull(object obj) { obj = null; } } } The Console.WriteLine will output false there as you're changing the reference inside the method (which is a copy) and not the original reference. Now, change the parameter to have the *ref* keyword and it will output true. This is because the reference itself has been passed by reference, so there is only one reference to the object. When it's set to null within the method then it's null outside the method too.
You need to describe your problem, not state it.
Keyword being *only*.
Simply put, I can't C# and do not know how to add the physics engine and use its assets.
Hey, I forgot to say that I can't do this :( Projectile inherits from my GameComponent class, a long with everything else that gets drawn onto the screen. public abstract void CheckPositions(ref GameComponent check);
OK, at least we'll all clear here that you don't actually want help.
Maybe you should try /r/learnprogramming instead?
Just do anything you have a need for, no matter how simple or if it already exists. I find having a vested interest makes me more likely to finish a project.
I'll just throw myself to the bottomless abyss. Geronim^o^^o^^^o!
It's also good to practice coding *with others* in a team setting. That is just as important if you plan to pursue it as a career. Software development is as much of a personal skill as it is a technical skill.
... Why?
Yup, I forgot about this case. Might well be, that I did, because I try to avoid using ref as much as possible. But there might be scenarios that might need it. Thanks for adding this.
So he can create a projectile in the tower and add it to the list in game1.
I learned all online. What helped me was having a goal and then doing whatever research necessary to get it done. I started by building a grid view displayed real time currency exchange rates for multiple countries. It gave me quite a bit of exposure. I have seen a lot of people learn C# by building a simple windows form.. like a calculator. 
But why static? That's a really bad idea. Avoid static.
To answer this question it would be good to know on which occasions your element position can change.
I would create a static ProjectileManager class. Then you can just expose the Game1's list of projectiles to that class either by passing a ref to the list in an Init() or similar. Then the towers just call ProjectileManager.Add() or FireAt() or whatever. A second thing I'd suggest would be to make all your calls take lists/arrays not single objects. Your game will thank you when you implement multi shot/multi target etc. similarly, it's going to be faster at some point to do something like Draw(list) instead of foreach (var x in list) Draw(x)
Thank you for that. Self-study entails self-doubt and a comment like yours was all I needed.
I learned it myself. Now I study computer science at an university, and everbody that is a good programmer learned it by himself. 
Instead of and array, try use a dictionary instead. That way you can mark the user input element with a known key value and keep track of it. 
Iterate over the array to find it. then you have the index. int i; for(i = 0; i &lt; array.Length; i++) if(array[i] == myItem) break; //i is now the position of my item How do you store a reference to your item ? You can't find an item in an array if you don't have its value / reference. If your array is an integer array, why would you put a separate value that you want to track into the array instead of keeping a separate variable ? 
Whys that?
A word of advice: there is a difference between doing exercises and doing a real project for real people to use. Take on the latter as soon as you can, and have your code reviewed. You'll find your skills only really start improving and becoming relevant once you do this. Additionally, I highly recommend the book "head first: c#". This book got me started six months ago, and I'm now working on a live project for my employer.
Me too. Something I always found helpful was doing a problem and then seeing someone else's code for doing the same thing
Yeah, why is that? 
You might do it if all you need to know is where that value ended up. In that case, I would put everything in object wrappers, then sort, then use reference equality to find the position. 
Yes, of course. There are many many great FREE resources like msdn, c-sharpcorner, channel9, microsoftvirtualacademy, stack overflow, many YouTube tutorials... But the most important thing is practice everything you learn. I especially recommend Bob Tabor's video courses on channel9 or microsoftvirtualacademy. Good luck! ;)
http://stackoverflow.com/questions/7026507/why-are-static-variables-considered-evil
http://www.reddit.com/r/csharp/comments/2mfbji/class_design_question_for_a_small_game/cm412ht.compact
Oh god, why? You really want to suggest this solution? Also this will give a wrong result when the object is not within the array.
Note that this is O (n), so do this sparingly. 
It's the only way to find an object in an array if you don't use hashtables / dictionaries etc. Also obviously this is just a short example without any safety checks. You would probably also nullcheck the item &amp; the array before doing this.
Check out some example scene graph libraries. I don't have the code in front of me, but something like WaveEngine... You have an EntityManager that manages your game entities. When you add an entity to the EntityManager, there is a property on the entity (Tower) to hold the EntityManager. So something like this? public abstract class Entity { public EntityManager EntityManager { get; set; } } public class EntityManager { public List&lt;Entity&gt; Entities {get; set;} public void Add(Entity entity) { entity.EntityManager = this; Entities.Add(entity); } } public class Tower : Entity { public void CheckPositions() { var projectile = new Projectile(...); EntityManager.Add(projectile); } }
If it's sorted (as it is, according to OP) a binary search would be better. And that's only O(log2n).
If it is just a single value that you need to keep track of: add it to a variable instead. Then, only add it to the array if you write the array back to disk. You'll save CPU from having to look it up.
You might want to use a list here. Then use a binary search to find the position of the element and insert it at the specific position. ##Warning, this assumes that the list is already sorted! static int InsertPoint(List&lt;Point&gt; points, Point toInsert) { int sectionStart = 0; int sectionEnd = points.Count-1; while(sectionEnd - sectionStart &gt; 1) { int checked = (sectionStart + sectionEnd) / 2; if(toInsert &gt; points[checked]) { sectionStart = checked; } else { sectionEnd = checked; } } points.Insert(point, sectionEnd); return sectionEnd; } WARNING: this might be incorrect, I just improvised it. Also, the Point class has to implement the comparison operators. However, since a collection of them was sortable, it's implied.
Why roll your own binary search, when it's [already built in](http://msdn.microsoft.com/en-us/library/w4e7fxsh%28v=vs.110%29.aspx)? int InsertItem(List&lt;Point&gt; points, Point item) { int insertPoint = points.BinarySearch(item); if(insertPoint &gt;= 0) // Item already exists in the list { // Insert or throw depending on whether // duplicates are allowed } else { // Binary search returns the bitwise complement // of the nearest index if the item isn't found. insertPoint = ~insertPoint; points.Insert(insertPoint, item); } return insertPoint; } 
Ah, cool. I suspected it. Anyway, I'll leave my solution up just to demonstrate how binary search works.
&gt; It's the only way to find an object in an array It was about looking for the index. Also this is only the only way if you have no clue about the language and the framework.
IndexOf does the same thing. OP does not seem to be that well eductated about C# and someone else already posted IndexOf, so I thought I might as well show him that there is nothing really quicker than O(n)
I've never personally or professionally had any problems with them. But i get what they are saying.
The reason I say wrappers/reference equality is it guarantees that you find the position of the instance of the value you care about. If there are duplicate values, anything that is not checking reference equality or using some similar approach might be wrong. 
Have you read through the [official docs](http://msdn.microsoft.com/en-us/library/ms173109.aspx) on class vs struct yet? Take a look, if you still have questions just reply and Ill be happy to answer.
WPF is awesome. Yes, go learn it.
You are correct. Classes pass by reference and structs pass by value. Here is a good article that explains when you may want to use structs instead of classes: https://stackoverflow.com/questions/521298/when-to-use-struct-in-c It wouldn't be a bad idea to make your shopping cart implement IEnumerable. However IEnumerable has one large catch to it that you need to be aware of. IEnumerable is lazy evaluated, so the underlying method is not executed until the collection is enumerated (calling ToList,ToArray, looping over it, etc). So if you passed IEnumerable up all the way from the database layer you can actually pull a DB connection with you.
To be honest, I haven't seen WPF used much professionally, however I still think it would be a great way to learn. It can also be great exposure to different development patterns, such as [MVVM]( http://en.m.wikipedia.org/wiki/Model_View_ViewModel)
Alternatively, you could go straight to "Windows Store" (XAML) apps.
Isn't Visual Studio made using WPF? 
It's used a **lot** with Fortune 100 companies for data visualisation. I'm sure I heard from somewhere at Microsoft that it's used on the trading floors too. You know those photos and videos you see with hundreds of people running around and all the big screens showing fancy graphics? Yeah those ones
I'm pretty sure neither winforms nor wpf are cross platform compatible. 
Face palm. You're right. I'll see myself out...
The alternative is GTK#, and I'm pretty sure using it violates the Geneva Conventions.
Because we have /r/learnprogramming already.
Well true, but one common post would remove all the clutter better and wouldn't be as harsh imo
There is [QtSharp](https://github.com/ddobrev/QtSharp). The binding generator isn't complete, but it DOES produce working, though incomplete, bindings. It should be much nicer to use than Gtk#, which is pretty much an abomination.
WinForms is pretty much cross platform compatible. It is one of the worse parts though. 
Yes, definitely. While parts of WPF are a true pain in the ass (advanced data binding, for example), I don't really want to go back. I only use WinForms at work for small internal tools or to test something.
If you eventually also want to do web development, I'd vote for WPF. The MVVM design pattern is much closer to MVC than Winforms MVP, and there are web MVVM Frameworks out there, so it provides some cross-experience in a way. 
Do we really think "Windows Store" will be around much longer?
It's not fair that you are being downvoted. There are still a lot of organizations supporting WinForms apps. WinForms was the standard for over 10 years. There is a lot of legacy code out there.
They should be downvoted into oblivion. If i was to ask a question here, it would be because i had exhausted every single other resource available to me. I'd come prepared with a list of every search I'd submitted to google, everything I'd tried, and then ask my question. 99.9% of the questions asked here are done so out of laziness and are thinly-veiled, "do my homework for me plz kthnxbai" requests, which should be disregarded out of hand.
Use a separate boolean value for score possible
I think they are really good at separate things. Winforms is still great for viewing data and manipulation it. The way winforms apps work for a user is also very easy to understand for a user, its been around for a long time and people just get how to use it. Your point of it being simple for you do get things done is a very important point. On the other hand, wpf provides a much richer visual experience and third party controls really can bring a lot to the table. There are really good frameworks out there to help too, e.g. caliburn.micro. One thing that I think is really nice about wpf is XAML. You can manipulate that, Winforms is not nearly as easy to manipulate in the fly.
Do you, you know, work on anything but websites?
The major drawback of WPF is that Mono doesn't really support it for cross-platform (e.g., it doesn't work on Linux and Mac). Originally, Xamarian/Novella said they weren't going to implement it due to the complexity of implementation. I haven't seen anything to the contrary. Not saying it isn't, but their recommendation is to write model classes and then do a OS-specific front end. Even with WPF being open sourced, it may be built on something that isn't easily ported. Then again, it might be.
Why wouldn't it be?
How to do shit tutorials. Step one, Don't name your variables with anything meaningful. Always use single letters. if(x &gt; y &amp;&amp; i &gt; p) _x = x * y is a great to confuse people trying to learn and generally make your code unreadable. Step two. Don't bother with microphones they're pointless, why not just use the webcam that cam free with the computer. It doesn't matter if the volume spikes then drops to a whisper every 3 seconds. That's why they built volume sliders right? 
Feels like it's going to end up like silverlight and XNA. A dead end platform. 
If there is a need for a desktop application, then sure I'll write a desktop application. I have developed lots of strictly server side libraries too. However, anything written that leverages web technologies [Html5, javascript, et al] is by default platform agnostic, and that is why I prefer Web technologies. 
I don't think it was announced that WPF was being included with the .NET source release. And, even if it were, it is heavily, intrinsically linked with DirectX, so a complete port to a non-Windows platform is nearly out of the question.
Not really. Much of .NET will likely be easily ported over, but things like WinForms won't be, because they are thin wrappers around core Win32 functionality.
That might explain why you don't see much WPF.
Fair, but we don't know if it always stays sorted. Just that he needs to keep track of its position.
I meant wpf, which I think would be less tied to win 32 since it's based in .net? Idk.
Dammit, I already bought this book on the 5th from Amazon, It would have been nice to get it for free but it was worth the 30 bucks. Being a pretty short book and not going into extreme details was a plus. It made it an easy weekend read that went into just enough details to show you basic design principals when designing software systems in a scrum environment. Showing you how to use dependency injection and the benefits it brings. How separating the functions of a class into interfaces and using the interfaces for dependency injection leads to extremely adaptable code so that you can keep the velocity of your scrum sprint up. Being a recent graduate from college this was a great book as an introduction on how to design software and would recommend it to anyone else recently out of college. I also just bought the "architecting applications for enterprise" book but haven't got a chance to sit down and read it. I will be watching this sub more often for opportunities like this now. 
Winforms are not going anywhere. A lot of products and companies still use win forms. They're not going to rewrite their code just because someone has come up with a new design pattern. Paul Sheriff http://www.pluralsight.com/courses/building-mobile-web-sites-web-forms-bootstrap-html5 talks about it. You can do everything in winforms just like you can do in mvc or any other design pattern. There isn't a design pattern that is an "End all Be all solution" They're really just a way to organize code. There will be another design pattern next week too! Plural sight has a course that talks about twelve or something like that and it keeps getting bigger. When it comes to design patterns you should pick the one that best fits your solution and your situation. I like using win forms. 
Asked to do it in one declared variable haha. I really thought about doing that. I even considered making each one its own object with a get set for the value and for its bool, but supposed to make it work with just one variable lol
Bloomberg was hiring for wpf devs recently.
I work at an investment bank. The risk management apps here are WPF. So arr some of the trading apps. We do have a lot of winforms kicking around too though most of those systems are in maintenance mode. There is a lot of LOB apps in WPF.
How about using a bitwise value?
That's not how booleans work. Booleans can only represent two values: true, or false. You could use a bool? (Nullable&lt;bool&gt;), which means either the value is null, or it is true or false, but that can be really hacky. You would be much better off using a more appropriate data structure.
Favorite comment in a good long while!
Ended up using a bool array. I shall find out tomorrow whether its an acceptable process for this project. not sure why i hadnt thought of it before.
There are directx -&gt; openx (gl/al/etc) compatibility layers
XNA'S only dead because Microsoft's not supporting. If they did, people would still be using it
Not in large enough numbers unfortunately. I liked XNA. I made a simple game with it, but the community is small. I think they made the right decision to throw their lot in with Unity. 
I'd also vote for WPF. I don't know many companies out there that still develop WinForms for new applications.
&gt;Things i need help learning: &gt;â€¢How to create a database and store information in it http://msdn.microsoft.com/en-us/data/ee712907#getstarted is where you can get some tutorials on Entity Framework. If you're asking some of these questions, that may be your safest way to start unless you are required to use something other than SQL Server for your database. &gt;â€¢How to encrypt/decrypt information such as passwords This is a nuanced question. There are a number of different strategies you could use, Based on the requirements you've stated, it sounds like you'd want Symmetrical encryption for the passwords you're storing in your password manager. I would suggest that your application's password i.e. the one the user enters to verify themselves is stored as a hash rather than as a symmetrically encrypted password. Better yet, you could (Dare I say, SHOULD) use the user's password itself as part of the key for encrypting/decrypting the password. The value of that is that if someone breaks open parts of the implementation of your program, the user's data is still relatively safe. http://www.codeproject.com/Articles/10154/NET-Encryption-Simplified &lt;-- Probably a good place to start. If it looks annoying, that's because encryption is an involved process and one that is not just rushed through. &gt;â€¢How to encrypt/decrypt a database I'd argue that if you follow the above, encrypting/decrypting the database is a redundant exercise that would cause more problems than it could hope to solve. &gt;â€¢Unrelated and not needed but would like a how-to on using google translate or similar services to translate text from a rich text box Got nothing on that one. 
QT is pretty good too.
Wow thanks for all the effort seriously thanks so much :D I don't know how much it will help because I can't work on it until tomorrow but this should get me onto the right track thanks :)
Hmmm... In what way is it more hassle than WPF? And, in what way is WPF incentivized?
Very few libraries work (database is a wasteland) and no one uses the Windows Store. WPF works well and is simple to develop for.
The only way you could do it in a single variable is by using a bitmask and bitwise operation. Each bit in the bitmask is a bool value
This is why I use winforms exclusively, that Linux development.
Never had problems with databases, myself.
I would say that the posts you gave as example would be good examples for what can stay. They encourage discussion and aren't asking how to fix some silly exception.
Plus the fact that Windows Store apps are a godsend for people with touch displays.
I'm using Windows Forms and WPF professionally. Let me tell you, that I simply do not like WPF at all and would never ever recommend a friend to use it. 1) It's far too complex. There are always multiple ways to do the same thing. This leads to a complete mess if multiple devs are involved, because everyone has his own style. Forms on the other hand is very uniform and a piece of cake to grasp in no time. 2) Haven't come across a simple and nice to read WPF book yet. They are boring and easily cross 800 pages for the basics. It sucks, because the learning curve's far too high. In a company it's really impossible to get everyone to the same level. 3) Debugging is a joke. Something doesn't render? Ow well, it's a shame that databinding is not type safe at all! Or maybe you forgot a setter? Most bugs will only appear only at runtime. So much pain.... 4) You can't do something in the designer? Oh well, be prepared to use only xaml instead! At least thats the common advice on stackoverflow and in forums... Say farewell to code completion and embrace the oh so great msdn docs.... not! 5) Oh the startup time just increased by a factor of 4? Well, that was your decision, right? 6) Need a ribbon? Oh well, the .Net one just sucks, so be prepared to use a custom made one in codeplex. Naturally buggy and unoptimized. The same problem for most libs out there. 7) WPF will never be cross platform. Better spend your time on something you can reuse. I could go on and on, but i guess you get the picture...
Huh? You can make a WPF app that looks exactly like WinForms app. In fact, that's the default. Only if you *want* you can go crazy with customization. I don't think typical user knows (or gives a damn) which technology the app uses. And about the visualization... WPF makes customizing every control easy. For example, making customized list box in WPF is just a straightforward task. Not so much in WinForms (last time I tried it, it was OwnerDraw/OnPaint all the way). 
* Multi-theaded debugging (may have disassembly in debug as well, but not as useful) * Plugins (checkout Productivity Power Tools (free), and also the ReSharper and NCrunch trial) * Version control. Visual Studio Community has built-in Git support. You should still teach yourself git in CLI (if you haven't already) in PowerShell and posh-git.
The git support was the first thing I noticed, seems fantastic for basic git tasks. I've used git-bash quite a bit, you reckon it's worth learning powershell and posh-git as well?
Using [fluent ribbon](http://fluent.codeplex.com) right now. it's more customizable than the default one. But it increased startup time considerably.
thanks. i played with a ton of different configurations. i was considering just doing it with the C++ ribbon
Imagine what this would look like without auto-properties ( Í¡Â° ÍœÊ– Í¡Â°)
&gt; It's far too complex No it's not. It's just *"simple, simple properties and INotifyPropertyChanged"*, but your procedural winforms mind can't understand an OO paradigm. Please go back to GW-Basic from the 60's. &gt; There are always multiple ways to do the same thing No, there aren't. There's only MVVM. Period. If you're doing anything else, you're a retard. it's your fault, not the platform's. &gt; This leads to a complete mess No, it doesn't. It produces simple, testable, maintainable, UI-agnostic code that can be reused on other platforms such as Android. Please show me how you do that with retarded winforms. &gt; Forms on the other hand is very uniform and a piece of cake to grasp in no time. Until you need to change 1 pixel from the default, horrible stuff. winforms doesn't support anything and is totally worthless, unless you want your app to look like it's the 90's. &gt; Haven't come across a simple and nice to read WPF book yet I haven't either, though I don't give a fuck. books are worthless and all you need to know is MVVM. &gt; Debugging is a joke No, it's not. You can't debug a declarative language like XAML because it's declarative, but your procedural mind can't understand that. Go back to GW-Basic from the 60's, please. &gt; Something doesn't render? I'm not even sure what you mean by this. There's no such thing as "render" in WPF. As opposed to retarded worthless winforms, you don't need stupid hacks like that "owner draw" retarded crap or the like. Everything is declarative, but your procedural mind from the 60's can't understand that. &gt; it's a shame that databinding is not type safe at all! DataBinding, by definition, is decoupled. However, Visual Studio helps in providing completion features for DataBinding, provided that you have specified a proper `{d: DataContext}`, but since you're totally ignorant, you don't understand that. &gt; maybe you forgot a setter? I'm not even sure what you mean by this. do you mean a property setter in a VM/Model? do you mean a `&lt;Setter/&gt;`? Anyways, it's an ignorant thing to say, your model/VM should be designed properly regardless if it targets WPF or a fucking console application, but since all you know is stupid platform-specific code behind, you don't know how to do that. It's your fault, not the platform's. &gt; Most bugs will only appear only at runtime. So much pain.... So will in other platforms if you code like a retard. winforms is totally useless and does not support anything. No advantage there. &gt; You can't do something in the designer? Yeah, I'm pretty sure the winforms designer will let you do a WHOLE lot of things.... Please..... You can do exactly the same things in the WPF designer as the winforms one, anyways, most of the times you don't really need that, because typing `"{Binding MyModel.Person.LastName}"` is much faster (even more so if you have autocompletion) than going thru endless "designer" screens in order to achieve the same, but your VB6 mentality can't understand that, of course. &gt; be prepared to use only xaml instead! XAML is great, it's a declarative way to create an object graph, no more than that. It's used throughout several different platforms, and it's even used for non UI-related stuff such as Workflow Foundation. But your procedural mind from the 60's can't understand declarative stuff. Please go back to your cave. &gt; Say farewell to code completion I'm not sure if you're a fucking troll, or a retard. Visual Studio provides code completion for both the WPF object model, your custom objects, and VMs thru {d:DataContext} as I mentioned earlier. If you can't get this to work it's because you're an ignorant. It's your fault, not the platform's. &gt; so great msdn docs No. There's StackOverflow for that. &gt; Oh the startup time just increased by a factor of 4? Well, that was your decision, right? No it doesn't. A complex WPF GUI will outperform an equivalent winforms GUI, simply because winforms is retarded. It doesn't provide any support for UI virtualization and it doesn't allow a rich UI. Sure you can do 1-textbox only UIs and it will run somewhat "faster", but try to create anything serious that doesn't suck in winforms. &gt; WPF will never be cross platform. Neither is winforms. You're totally fooled if you believe winforms is cross-platform. It's tied to Win32. And it SUCKS when running on other platforms like OSX. &gt; Better spend your time on something you can reuse. Which is precisely why you can't do retarded winforms. winforms code is totally winforms dependent. All my WPF ViewModels can be reused in mobile via Xamarin with no changes. Now please show me how you do MVVM with winforms.... Please. I could go on and on, but i guess you get the picture... Oh, and BTW, please show me your winforms version of [this](http://www.istartedsomething.com/20091124/razorfone-conceptual-windows7-wpf-multi-touch-retail/).
&gt; Fucking asshole. Hey, on behalf of /u/ZuBsPaCe, right back at you; there's no need for that kind of crap here.
Alright. Removed it. Momma.
If you've used git bash it'll be largely the same, but posh-git gives you a quick status in the command line as well (showing which branch is active, and how many files are changed, or not tracked) It looks like [this](http://i.imgur.com/wUr07w4.png) on my development machine. The terminal I use is ConEmu. edit: posh-git not post-git.
I would second that you should not expose objects via a setter property, that you demand in a constructor! [Mark Seeman](http://blog.ploeh.dk/about.html) gives great advise, when to use which kind of injection in his (execellent!) book about dependency injection. Iirc does he state, that property injection is usefull, if you have a "good local default", which means, that you can create within your constructor one default object, that **can** be exchanged during runtim via a property. To be honest: I use that seldomly! It is quiete usefull for legacy code, where you don't have constructor injection and you can't easily change the existing API. There you can expose those objects and make them changeable; especially for unit testing :-) I think Roy Osherove calls this "extract and overwrite". So it makes less sense to demand an object via constructor an make it interchangeable through a property...
If it were down to me, I'd have most of the direct-code-question posts removed. I think there are better places for *most* of them, like stackoverflow and /r/learnprogramming. And a huge majority of the questions are things that have been asked and answered a million times before in the history of programming (like [this](http://www.reddit.com/r/csharp/comments/2mgdvk/how_to_get_the_position_of_an_element_in_an_array/) or [this](http://www.reddit.com/r/csharp/comments/2matp2/can_i_get_a_little_basic_coding_help/) or [this](http://www.reddit.com/r/csharp/comments/2m9ck1/c_how_do_multiple_consecutive_if_statements_work/) or [this](http://www.reddit.com/r/csharp/comments/2m9fju/coding_help/) or [this](http://www.reddit.com/r/csharp/comments/2m7p1k/how_to_make_it_so_each_instance_of_my_class_has/) or [this](http://www.reddit.com/r/csharp/comments/2mbuwu/help_understanding_pass_by_reference/), or even more useless, like [this](http://www.reddit.com/r/csharp/comments/2meqtd/how_to_add_a_physics_engine_to_the_code/). And I didn't even get off page 2 of /r/chsarp :D). Edit: I get that you're trying to foster newbies to C#, but from what I can tell it's a one-way relationship anyway; where we tend to help first-year uni students with their homework or hobbyist game developers on their first Unity3D program, and then they're off again. I don't want anyone to think I'm being rude about newbies; that's not it at all. I guess it just depends on who the target audience of this sub is. /r/dotnet is, for the sort of thing I want, a higher quality... But it tends to be all enterprise/web oriented. I'd be happy to help out pruning the help posts in a kind way if it's a matter of time.
That looks quite useful, I'll definitely look into it. Thanks for the input :)
Git is very slow in visual studio. Outbreaks like 2 minutes to load the history just to check the history of one file.
I am finishing university right now, where I had VS Professional for free, but now will move to the Community version for my personal development. What are limitations of the Community version in comparison to the Professional?
openmp
This is very small service you are creating with 100 clients, you have many options here. You can use azure hosted services for that. If you have never worked with azure and want to get started with Hosted Services then you should read this: http://azure.microsoft.com/en-us/documentation/services/cloud-services/ If you have some experience with asp.net websites you can run your app like website. You may want to do that because app is such small and website technologies will be more familiar to you. If you want to go website route read this: http://azure.microsoft.com/en-us/documentation/articles/web-sites-dotnet-get-started/
For me is the extended features like Tools for Office that I'm mostly excited about!
Use SqlParameter instead of manually inserting your values. Now. And look up what SQL Injection is. The error occurs because your query starts like this: update status set (isOflfline... The fields are not put in brackets with an update statement. http://www.w3schools.com/sql/sql_update.asp
Productivity Power Tools works in community? 
If you do any form of web development, Web Essentials is brilliant. Personally I can't live without Resharper, but that's a ~$80 investment (which has been paid back over and over in productivity). 
Why shouldn't it?
I normally use mysqli in regards to SQL Injections
For my really big project, I've doing the dual front end approach, but I like Gtk# (for the most part) and Qyote still hasn't gotten stable enough with their latest rewrite. I've also tried Awesomium and a few others, but I can't find a "perfect" cross-platform GUI yet. Not one that lets me writing my own text editor.
This is all interpreted as I understand the assignment as written above. The bit about arrays is poorly worded. As per your questions: &gt; I'm not sure about this part , what am I suppose to do? Have you worked with arrays yet? See example [Here](http://www.dotnetperls.com/object-array) You will be creating a class to represent a 'compartment'. You can then create an array of Compartment objects to store inside (this is effectively your Warehouse). From there you will be able to add/remove/edit existing warehouses in the array. Your compartment class will consist of the properties listed above (product code, description, etc...) &gt; Also , is it easier to do this assignment by using SQL ? Well... If you want the data to save you would usually store it in a database but I don't see anything in there saying you have to use a database. I would definitely get clarification on this one. It could also be stored locally in a JSON or XML file. Have you guys covered code interacting with SQL servers yet?
Jumping on the bandwagon for ReSharper. Wonderful piece of software.
It's the completely untrue implication that WPF isn't used much professionally. In essence, you're being downvoted because your experience isn't relevant, as is made evident by the fact that WPF is used widely in professional development. I didn't downvote, just offering and explanation.
Jesus fuck are you a caustic, horrible person. Go fucking die and never come back here.
And we could also call snake oils homoeopathic remedies. It seems to be trading some overhead for unmaintainable code, which I don't think is a better trade. 
Extensions.
VS Community is the professional version :)
Alright I think I know what to do now but how do I modify the comparment items with user input ? 
Alright I think I know what to do now but how do I modify the comparment items with user input ? 
What have you tried?
Sure. I'll delete my reddit, Stackoverflow, Facebook, Hotmail, GMail, and Skype accounts right NOW if you prove me wrong and prove me that winforms is an usable and sensible choice for Windows desktop development targeting machines from this century as opposed to worthless 486 DX2s running DOS 5.0 Nice deal, huh?
None of that matter in light of how unbearably terrible your personality is. No one likes you. Go away.
Licensing. &gt;Q: Who can use Visual Studio Community? &gt;A: Hereâ€™s how individual developers can use Visual Studio Community: &gt;â€¢Any individual developer can use Visual Studio Community to create their own free or paid apps. &gt;Hereâ€™s how Visual Studio Community can be used in organizations: &gt;â€¢An unlimited number of users within an organization can use Visual Studio Community for the following scenarios: in a classroom learning environment, for academic research, or for contributing to open source projects. &gt;â€¢For all other usage scenarios: In non-enterprise organizations, up to 5 users can use Visual Studio Community. In enterprise organizations (meaning those with &gt;250 PCs or &gt; $1MM in annual revenue), no use is permitted beyond the open source, academic research, and classroom learning environment scenarios described above. http://msdn.microsoft.com/en-us/visual-studio-community-vs.aspx
&gt; No one likes you Your sister does ;)
In what way would you say this code is unmaintainable?
While I don't like his plan, I find ORMs to be a maintenance nightmare on their own.
Do you have source about he C# 6.0 primary constructors being put on hold? I couldn't find it in my initial Google searches. **EDIT**: Found it: https://roslyn.codeplex.com/discussions/568820
Page 8 of Microsoft's [.NET Technology Guide for Business Applications](http://go.microsoft.com/?linkid=9832707). I'll also note that this guy has already had 2 of his prior reddit accounts deleted for spitting out the same crap.
LOL. So a picture showing all of the available .Net technologies?? Nice. Now please give me one technical reason to choose retarded worthless winforms instead of WPF for desktop development, IN 2014.
Fantastic piece of software, once you use Resharper you can't go back to using vanilla VS.
Looks like it was deleted, anyone able to provide a summary? I'm really curious what the alternative that he proposes is. EDIT: Looks like it's back up, was getting 404 errors for a while.
Can't write unit-tests against SQL. Edit: disregard please. My comment is stupid.
Personally, I've switched to MicroOrms, and away from Entity Framework and NHibernate style ORMS. A few base classes, some configuration, and a little code generation and you have a very agile system. But, the author is talking about hierarchies and a number of other issues...not sure why he hasn't switched over to an object database. Relational isn't the only game in town.
So... ditch a 3rd party ORM in favour of an equally complex custom built solution ?? (or did I miss something)
If not fully switching, I'd say that it wouldn't be a bad idea to at least learn it. That way you would become comfortable with XAML, and even if Microsoft for some reason kills WPF like they did Silverlight, then you will be prepared for whatever replaces it. On the other hand, Microsoft still endorses WinForms alongside WPF for developing desktop apps. I'd say that a switch would be advisable if Microsoft pushes hard to have WPF as the true and complete replacement of WinForms, but they don't seem to be doing that.
Depends. If this is a console application you will require some sort of loop. In the loop you will do something that allows the user to add/modify/delete. If it's a windows form application you will generally apply the changes when you click submit/add/update/etc... To change items in an array see the example I listed again. Your array is an array of "Compartment" objects. You can access the object based off it's position in the array using indexes. For example, if you have an array called Warehouse that holds Compartment objects you can get the first element of the Warehouse array by saying: Warehouse[0]; and you can access its property by saying: Warehouse[0].MyProperty; This will give you the value for the first elements property. Knowing how an array works you should be able to apply your own critical thinking to decide how you want to loop through or send/receive information.
Yes, sometimes, nosql is a better solution, I just wanted to provide a pattern for when you're dealing with a relational database (for whatever reason)
Program.MyMethodName(myParameters, ...); 
I totally did just that and haven't missed it. It's entirely possible.
//here is your method in Program.cs public void Method() { //your code } //here is your code in Form1 private void button1_Click(object sender, EventArgs e) { Program clsprogram = new Program(); clsprogram.Method(); }
Works, I use it on my Community.
Can you please post your code? Use paste-bin or the likes. We have no idea what your methods looks like. Are they static? 
I'm not sure I can be any simpler. What are you stuck on? 1. Do you need help creating the event for your button? 2. Do you need help creating the static method in Program that will be called from your event? 3. None of the above (did I misunderstand the question)?
- DirectX debugger - Parallel debugger - Profiling tools - Plugins - Macros - More expressive static code analysis (specially if you also do C++)
AND visual studio suddenly feels much more responsive &amp; fast! But I learned many new things with ReSharper though its slows VS down a bit 
I keep hearing about this Git, any good resources to get quick idea on how to use this &amp; setup VS? Thanks. 
It's not just MS's term; [that's what Select() and SELECT conceptually do](http://en.wikipedia.org/wiki/Projection_(relational_algebra\)). That's why I called the result "myNarrowProjection".
This is the easiest and cleanest way to do it. But heck, you don't even need that much eloquence...you can commit horrible programming atrocities and use values as indicators. Since this is a scoring game where possible valid scores are [0-n], every int value could simply be initialized to -1, where (value &lt; 0) representing unassigned. Excuse me while I go wipe the nasty off now for eve suggesting that. 
I've always thought that the point of an ORM is that the user doesn't have to get involved with the heavy lifting of writing SQL statements, connecting to the database, mapping from database objects to dto objects, etc. Granted some ORMs are better than others... but in your article you skip over the whole heap of code required to actually read/write a record to the database. You've just provided the skeleton of an event bus, which, in terms of total code length, is a small percentage when compared with the rest of code required to actually do something. Also, the method your are advocating suggests that it would be unique for each database/application. Anyway, hopefully you can sense where I am coming from, and why I am questioning why you would advocate such a procedure?
My visual studio online pro license is $45 a month where the basic is $20. If I don't need a pro license I can save $300 a year. 
Web Essentials works in the express version since not too long ago. Just need to have update 2 or 3 I think. 
1-4: select the button -&gt; properties -&gt; click the lightning bolt (events) -&gt; find "Click" 5: double-click the space on the right to generate a method stub in 'form1.cs' which will run when you click the button 6: call the method you wrote in 'program.cs'. `Program.DoStuff();` And no, that's really not the standard way to write an OO program. :)
[Read chapters 1-3 for a very well made editor-agnostic explanation of Git](http://git-scm.com/book/en/v2). 
Right click on the solution, select startup projects.
As if it was that simple. Many thanks for your help, you have saved me a rather sheepish meeting where I couldn't get it to work.
I hear this a lot, but I always uninstall it after a couple of days. VS has advanced a LOT since rs was needed, resharper is pretty much just doubling up on built in functionality these days.
I think if people actually spent a little time with a quality micro-orm, they would never go back. I subclass from petapoco database and let t4 create my models. In the subclass, I override all the exposed base hooks for logging, exceptions, performance profiling... and it's so much faster than any other solution out there. The only downside is you are in charge of hydrating your domain and doing your own joins... but I actually like that level of control and visibility. No 'magic' or auto-generated sql. I can step through and actually UNDERSTAND exactly what is happening 100% of the time in my data access. I'm sure others like dapper, massive, simple data have pros and cons, but I am in love with petapoco.
&gt; The point I'm trying to make is that writing SQL statements is not difficult, it's more lines of code, but it's simpler code and more explicit. One my rules is, the more code I have to write, the more bugs in the system. Thus, the less lines of code, the less can go wrong, and the faster I can reach my deadlines
Problem two, as its two different projects how can I call code in the other project? The one I recieved contains the GUI and now I need to be able work with my classes in the button form behind. Do I have to do something with the namespaces?
My preference is to use a JSON based configuration file that is used to generate the tables and domain object. The generated code also handles the mapping code. I also keep joins to an absolute minimum, but sometimes I handle those with views. I've looked at petapoco, as well as massive, and wrote my own (FluentAdo.net). In the end, I liked dapper...but that doesn't mean any of the others are wrong.
There is a delete button.
Add new reference from the GUI project. You should see your other project listed as an option to reference 
You don't need either now. Community is free.
Is there a convention as to which project should have the reference to which?