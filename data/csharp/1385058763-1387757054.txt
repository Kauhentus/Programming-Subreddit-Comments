Assuming this is winforms, (not sure about WPF) but TextBox.Text will never return null. It will return an empty string if nothing is inputted. I would use String.IsNullOrWhitespace since that covers all your scenarios including empty and just whitespace.
Can you elaborate on this? It looks like a match made in heaven but I want your perspective.
How big was the application, how many procs? Did you ever run in to memory issues like their site suggests can happen? Any gotchas?
There's quite a few ways to do this. Are you working in multiplatform or just windows? If you are using visual studio the easiest quickest way is to make a new winforms project. There will be a visual editor you can use to create your ui and you can attach code to elements. It's quite nice to use IMO. As far as I know winforms is portable to other desktop platforms via mono but I've never tried. Another option if you want a more multiplatform friendly GUI is to use the GTKSharp stuff in the mono project. Personally I find it difficult to use compared to winforms.
Fairly large application; I'd say roughly 20,000 LOC (server-side). Overall I believe we have 350-400 stored procedures. As for memory issues, I personally haven't run into anything like that, but that is most likely because I made sure that my connections are being properly disposed. A typical service class looks something like this: https://gist.github.com/jpsullivan/7587899 As you can see, there are two types of stored procedure execution going on here. The first kind, which is shown in the `GetUsers` method, simply utilizes a static class called Current to query the `sp_GetUsers` SProc, which returns an enumerable of `Users`. if you need any simple parameters to pass in, you just do what I did in my example. In the second example however, the steps are a bit different. I am now adding in DynamicParameters. I'm doing this because in this example, I have an output parameter, which cannot be accessed using the aforementioned method. This style is very much like the old ADO.NET way of life, but that's okay in my opinion. As for the mysterious `Current` class, this is a class that I nabbed from this project: https://code.google.com/p/stack-exchange-data-explorer/ It is an application written by the creator of Dapper, Sam Saffron, and it's a great example of how to write an ASP.NET MVC application that utilizes Dapper. The only differences between this and my implementation are that the DAO's are static in Data Explorer, whereas I am using a "service" type of approach where I let Ninject handle all inversion of control. This decision was made to make unit testing and integration testing much easier. Hope this helps!
Well, it's not exactly clear what you want... So you have a text file, there are 'D' characters in it and you want to separate the text at the 'D' disregarding line breaks? I don't know how you managed to arrive to a 2D array from a text file... What I would do in your shoes: //Import the file String fileContents = null; String[] separatedData = null; try { using (StreamReader reader = System.IO.File.OpenText(fileName)) { fileContents = reader.ReadToEnd(); } //Get rid of the line breaks fileContents = fileContents.Replace("\r\n", ""); //Assuming the text is in Windows format. //If it's Unix then you should use \n. //If it's unknown, replace \n-s then the \r-s separatedData = fileContents.Split('D'); //You could convert it directly into a List&lt;String&gt; collection too } catch(Exception x) { //You shouldn't really do Pok√©mon exception handling, but now it's OK... Console.WriteLine("Shit happened: {0}", x); } if(separatedData != null) { //Do your data processing here, whatever you want }
I regularly have to stop myself from just commenting: "Just type it into your IDE and see what happens. That's called learning"
.
Unless someText is null, at which point you get a null pointer exception, which sort of defeats the purpose of IsNullOrEmpty()
I have more experience with WPF than WinForms, is there any example where WinForms is a clearly better choice than WPF besides the learning curve?
Yeah this guy is right. Not only is it brutally simple there are a ton of walk-through.
OP - Elmah is excatly what you need. You drop it into a project and within minutees you have a website that captures error automatically. By default it stores them in memory, but you can easily store the errors in a database(you just supply a connection string). You can set it up to email or tweet you if an error occurs. That's just as easily set up. I had a few large sites with elmah configured to email me and it worked flawlessly. Elmah-R is a great way to connect multiple websites to a single elmah site https://bitbucket.org/wasp/elmahr/wiki/Home The downside to elmah is that it's old and no active development has happened in a few years. A product I really like is [Raygun](http://raygun.io/) it's not free, but you get a great error reporting mechanism that requires little to no setup. You literally drop two lines of code into your web application.
To be honest, I can't really think of any clear advantages for Winforms. Occasionally WPF can be frustrating. Every once and a while, the XAML parsing exceptions make it seem like black magic is interfering with my code. And some of the trickier binding scenarios can be difficult to debug. But all in all, I would choose WPF every time.
I'd agree with this. Winforms is nice and easy to get your feet wet with and is a good place to start. But then once you get a taste of data binding and styling in WPF there's no going back. Once you're ready to have a play with WPF a couple of good resources that helped me were [this data binding article](http://www.codeproject.com/Articles/26210/Moving-Toward-WPF-Data-Binding-One-Step-at-a-Time) and [this styling article](http://wpftutorial.net/Styles.html).
If you need nothing more than few buttons (like for simple utility) WinForms is faster and easier. Also it's easely invoked from console application. I always write our internal utilities as console utility which shows window if no options are set.
[WinForms is supported by Mono.](http://www.mono-project.com/WinForms)
Good point. I guess you'll have to do `( someText == null || String.IsNullOrEmpty( someText.Trim() )` which is just messy looking.
I was able to do this somehow with WPF, but I can't figure out how I did it. /shrug Ninjedit: It was something to do with the app.cs file, I think.
I'm not saying that it's not possible, for winforms it's just more obvious and simple.
If elmah isn't what you're looking for (though it is pretty sweet), you can add a global.asax to any web project by right clicking the project in the solution explorer, then going to add &gt; new item &gt; Global Application Class. From there all you would need to do is add your code to the Application_Error handler. You can access the last thrown exception by calling Server.GetLastError(), and do whatever you want with it.
You can do grids in WinForms with the TableLayoutPanel and docking your controls. You can also do custom controls, but the difficulty curve vs WPF is multiplicative (simple custom controls are generally easier than WPF, but advanced custom controls are much harder). In general though, WPF is far better. * Simpler and more powerful data binding * Can override the style for every control very simply, so it's trivial to make a good user experience * Logical layout for controls * Encourages MVVM architecture, which helps in testing your forms and separation of concerns
Ultimately Application_Error will be called. You handle that until you figure out the rest.
1. API. Windows Forms uses Native Windows Controls. These controls accept and respond to standard Windows Messages for those controls, so you can extend their behaviour where the controls themselves do not provide a feature, additionally, since it uses Standard Windows Controls, your Application actually looks like a Standard Windows Application. 2. Compatibility. Windows Forms Applications can be run on Mono. WPF Applications cannot. Of course if you use any API methods as above that won't work because on other platforms you aren't actually using Native Windows controls there. 3. Discoverability. WPF is not discoverable. You can't step through XAML; it relies heavily on dynamic typing, so you get far less intellisense. I Created one Application in WPF by choice. It was a Full screen application so I figured the graphics scalability would be a good plus, and the application requirements meant I didn't need native look and feel. Every step of the way I encountered problems with discoverability. I knew how to do X in WinForms, how do I do it in WPF; I would spend some time in Microsoft's Garbage documentation, but make no headway. Then I would do a Search and find that I was not the only person with this issue, and the responses would provide help in the form of some strange, completely opaque magic XAML to be pasted somewhere. And even that didn't always work. Another thing that makes me veer FAR away from WPF is the Designer is a piece of trash. The Windows Forms designer is responsive- from 2008 through 2013. But if I open one of my WPF projects? Apparently my Quad Core with 8GB of Memory is simply not enough. I have to sit around and wait for the designer to decide to actually let me do anything. And every action involves me waiting around for the completely separate designer process (wtf?) to do what I requested. The only 'workaround' is to not use the designer, but that defeats the entire purpose of Visual Studio as a RAD tool. I have the fight with the designer every step of the way. And when I'm not fighting with the designer, I'm waiting for it. One of the bigger problems I have with WPF is that it requires you to dump almost everything you've learned about Win32. Your experience dealing with ListView Notifications and Messages and subclassing? Nope, throw it away. Throw everything you know about Windows-based Message pumps, and how Windows and the DWM handles controls... and it's replaced by a Direct3D layer that is quite visually different from the standard UI style. Now, all your answers for how to do those things you already know how to do either requires you to make some special subclass of an existing control, a new control entirely, or apply some set of special style logic to it. Or, usually, google it and past some magic XAML into your application while some WPF snob tells you how much you are missing out by not spending 5+ hours trying to recreate features you could do without a second thought with Windows 95 Common Controls.
Mine is [Miniprofiler](http://www.nuget.org/packages/MiniProfiler/), an MVC (primarily) performance measurement tool by the StackExchange guys.
What you should do is find a way to compare statements. If you cache SELECT * FROM X WHERE var1 = @val1 AND var2 = @val2 and use strings to compare statements , this won't be cached: SELECT * FROM X WHERE var2 = @val2 AND var1 = @val1 even though it will return the same results.
For the solution to your problem see the other replies. I assume that you want to show the message box as some form of validation? Don't. Look into validators instead, which is a much better and user friendly approach. 
Automapper, EF, log4net, elmah, linq2csv
You use something called a JFrame. Just search "how to use a JFrame" and you should be fine.
Use "Environment.NewLine" instead of "\r\n" and you won't have to worry about Unix\Windows differences.
NUnit, Unity
I don't use NuGet. Tried it once, and it got wedged where it would neither remove nor complete a partial install. Annoying beyond words. 
Yeah I've got a text file which has multiple 'D's in it between the D's is other information which I would like to keep and display in command prompt eg, D:543892734092348:D:2347234980 343434:D:23423444 I would like to split them up and display it like this D:543892734092348 D:2347234980343434 D:23423444 so the code will retrieve the extra data that's on the line below and display it with the corresponding D If that makes better sense Thanks for the help too!
NuGet does have quirks, but the benefits greatly outweigh any issues. Besides, a lot of the issues it used to have has been fixed.
You already ruled out a null value with your first statement, so [...] || someText.Trim().Equals(String.Empty) would be better imo. Still looks ugly though xD
NuGet feels like a tool that got popular a year before it was ready. I've been using it for 2 years and I've seen all the issues I've had with it evaporate. I suggest giving it another try - I wouldn't go back to a day before I used it anymore. If you're interested in seeing a non-dev use of NuGet, check out Chocolatey Nuget ( http://chocolatey.org). It's like a Windows version of the Linux apt-get command.
It took a lot of fiddling around to find the right menu (why the fuck is every context menu different, but only subtly o___o). But I got it. Thanks!
SignalR, Entity Framework, ELMAH, Boostrap, Knockout.js, DefinitelyTyped (TypeScript) LINQKit is the coolest library you haven't heard of. You can mash-up expressions using it. I find myself often needing it at some point. I used to like ValueInjector and Automapper but think they're unnecessary cruft in most applications. It kind of kills clarity in apps and I think ignoring mappings, rather than specifying what you want mapped, is an anti pattern. It prevents you from having to write some "extra" code, yes, but if you break out your mapping into a separate function then I'd say the extra code is pretty well controlled and doesn't rely on reflection/context over configuration so much. Using custom type converters in AutoMapper is a very valid solution, though (how many of you actually do this vs reflection though?). Features like this have a lot of merit, but the default behavior of these libraries is just too lazy and unclear for me.
NLog, Ninject, Knockout, EntityFramework, Command Parser Library (or CLAP depending on what style I want), Breeze... 
RavenDB, moq, reactive extensions, signalr... few things are better
Love many of the packages posted above; two others that pretty much end up installed on every project: * [NSubstitute](http://www.nuget.org/packages/NSubstitute/) * [Fluent Assertions](http://www.nuget.org/packages/FluentAssertions/)
.
This.
Well its about damn time. Always wanted something like this. *upon closer inspection: meh
If you're looking for a way to quickly run snippets of code, LINQPad is great for this. http://www.linqpad.net/
I think I'm in love.
Premium version is also worth it.
Works on mobile =Whaaat?! :)
Fatal Error: Error while unloading appdomain. (Exception from HRESULT: 0x80131015) That doesn't look like Hello World! 
ideone is also quite good
1. Did you open the port on your firewall? 2. Did you configure port forwarding on your router? 3. Does ping to your dns name works?
The firewall was the issue. You are amazing, thanks!
I'd start with frameworks, specifically, ASP.NET MVC, backed by Entity Framework, do both code first (lucky you, you get to write an app from scratch) and data first (you have a dataset, write me a UI). Polymorphism, abstraction of shared functionality, interfacing (properly), From the UI perspective, know razor, ajax, and especially jquery. Just on the theoretical side: generics, anonymous methods, tuples (which leads to functional programming and immutability), extension methods, and object lifetime. 
You might not see the advantage of classes and objects until you actually have to use it in a project. A book that teached me a lot about the advantages of OOP is "Objects First With Java - A Practical Introduction Using BlueJ". Although it has it flaws and is written for Java it still gave me a solid understanding about how important OOP is and why you should use it when you code.
I would say this is the perfect complement to data structures and algorithms, but this is different. You need, IMO, at least a basic intuitive grasp of O(1) vs O(n) and when to use a foreach or a binary search.
* CLR via C# by Jeffrey Richter * C# in Depth by Jon Skeet * The Art of Unit Testing by Roy Osherove You asked specifically what to study for deeply understanding C#. From personal experience the first is going to give you tremendous insight on how the other big part of this ecosystem works (the VM), and trust me as C# is a higher level API of the VM this book is top priority for you. C# in Depth is a "C# puzzlers"-like book, presenting amazing subtleties and corner cases that will help you understand the semantics of the language better (e.g. what closure semantics has C# adopted?) and the third to guide you through the unit testing world (emphasising on the *professional* part of your question).
Hate to bring the negative but graduates with computer science degrees are having trouble finding jobs. Some finance jobs have programming components to them you might have trouble moving to professional programmer with an economics degree. The best way to get a job would be to intern while in school. Everyone else gave good book recommendations.
Here is your example using C# instead of Java: public class Character { private string _name; public string Name { get { return _name; } set { _name = value; } } } ... Character character = new Character(); character.Name = "C# Developer";
And if there's no logic in the get/set blocks beyond retrieving/setting the variable, there's a shorter notation: public string Name { get; set; } You can also set accessibility modifiers: public int Age { get; private set; }
Indeed. But I see waaay too many people who don't know about the shorter notation, they might as well learn it now.
Where are you that CS majors can't find jobs? Most major markets are facing full employment and it is really tough to fill open positions. I can't imagine any place that traditionally hires entry-level developers has stopped doing that, there are too many jobs to fill.
I didn't know longer notation existed for a long time. I thought that if you wanted to do longer notation, you created a method for each. But I also haven't NEEDED logic in mine, so I've never done that either. public/private type name { get; set;} that's always worked well for me.
Unfortunately, the longer notation is needed for INotifyPropertyChanged support (unless you're using IL-rewriting stuff), so WPF apps are riddled with long-form properties that have no real logic. :(
MVC .NET
Is there a reason you think someone shouldn't learn model first EF as well?
&gt; You should probably learn wpf and .xaml ~~and .xml~~ pretty well if you want to get work They are good to know, and I love WPF and how it has benefited windows desktop development. But I am seeing far more opportunities in web development (ASP.Net/MVC) than with WPF.
If you're developing something that is brand new, I would argue for model first. Mostly because your models will change as you develop. Once you get to a point where you consider the product in an alpha stage, then you can create your data stores to be in line with your models.
That's always been true. The hardest part of being a software engineer is starting your career. Unfortunately, in the beginning, it is still a lot about *who* you know rather than *what* you know. People need to learn networking.
Where would one find this information? Edit : &gt;when to use a foreach or a binary search. Specifically, where would these come into conflict?
There is a vast repository of knowledge that is accessible via computer or smart device. The name escapes me at the moment, but I believe it is a series of tubes.
prop &lt;tab&gt;&lt;tab&gt;
Or just use the null coalescing operator: (someText ?? string.Empty).Trim() == "" This is syntactic sugar for: (someText != null ? someText : string.Empty).Trim() == ""
Rijndael is **not** the same as AES; in fact, AES is based upon Rijndael. They are not interchangeable.
ECB mode is a bad choice for any block cipher. [Wikipedia explains it well](http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Electronic_codebook_.28ECB.29). The tl;dr is that for the same key, identical plaintext blocks will produce identical ciphertext blocks. More secure modes such as CBC introduce the concept of an Initialisation Vector (IV) which helps aleviate some of the issues that ECB suffers from. Unfortunately, CBC is flawed when used in a MAC-then-CBC construction, due to padding oracle attacks. The more modern modes, such as EAX and GCM, actually include authenticity as part of the mode of operation, therefore providing greatly improved security over CBC.
As a pentester and reverse engineer, I agree. It's absolutely trivial to load up your code in Dis# or dotPeek and work out what your obfuscation mechanism is, or what static encryption keys you used. Even if you run it through a decent obfuscation engine like Dotfuscator, I can still pull the IL and method reference tables out and work out what you're up to. At the end of the day, if I care enough, I can break it. If you want it to be secure, keep it out of my hands (e.g. store it server-side).
+1 on learning unit testing. It's the one thing that most devs suck at, but it helps team productivity a lot, and saves a tonne of work in the long run.
What they're alluding to is just linear search vs binary search. The trade off being having to keep your data sorted all of the time.
Maybe where you live that is the case. I can put my resume up on monster and dice and have 12 interviews tomorrow. You go to pretty much any of the major software hotspots (Seattle, houston, salt lake city)and there is a PLETHORA of jobs. Jobs that require a developer are being created at record rates, and there are fewer graduates than ever. This means that the job market is actually growing. The big problem is that you have a ton of graduates with CS degrees that haven't learned a language, or programmed much of anything. So they have all of the theory, but none of the application. If you spend just a little time learning a language, and become even somewhat proficient in it, you can find a job easy.
Test driven development. 
Nah. Just made a little joke about being able to do research.
I think in a lot of cases just understanding waht your program is actually doing sets you apart from many of your peers.
It's outdated but I found *Learning C# 3.0* tremendously helpful in learning and understanding OOP (not just in C#, but the concept... I initially tried with *Intermediate Perl* and thought it was just a totally inscrutable concept).
I cannot recommend CLR via C# enough. Ever since I read the book, I've been able to answer 95% of C# interview questions.
I think that's a little too narrow-mined of a viewpoint. I've worked in all 3 and they all have their merits. Model first was especially useful for working on some research and development projects involving many people who are in the STEM field but don't program. They could look at the edmx model and understand how their model could map to the physical database. Because this was a research project the requirements would change profoundly often. Model first was a huge time saver for this particular case. These people could even submit model proposals I could look over. Once the overall model and prototype began to be agreed upon then we can switch over to another approach (if that is at all needed). As for "mess of a model creator". That's obviously opinion and I don't agree in the slightest. 
If you can't read the whole books definitely read these chapters. Code Complete http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670 Chapter 3. Measure Twice, Cut Once: Upstream Prerequisites Chapter 5. Design in Construction Chapter 6. Working Classes Chapter 7. High-Quality Routines Clean Code http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882 chapter 3: Functions chapter 10: Classes
Be wary though if you need a lot of joins. In my experience the MySQL driver for entity framework is horrible at optimizing the queries. I've had simple tables with 1000 records making the entire application slow down to a crawl with EF, while if I write the queries myself it runs without a hitch.
MahApps.Metro ! I'm always using it when working with WPF.
Not really, especially in the C# world. It's all about design patterns and strong object oriented skills. Even basic knowledge of things like MVC, MVP, MVVM (MV*), dependency injection, mocking, and unit testing will make you stand out among your peers. Also, you need a strong understanding of the tenets of OOP (abstraction, encapsulation, inheritance, and polymorphism). Professional .NET development is all about code readability and maintainability, considering the .NET framework handles most of the heavy lifting for you. Source: I'm a professional .NET dev, and I just came back from a MS conference that was all about this stuff.
That's good news. Do you think these companies would hire an econ major? The op was talking about graduating with one
I dunno really. I don't know much about the curriculum. They definitely hired math, physics, and chemistry majors who had programming experience though.
well that's something I would love to be wrong about.
See, I'm all about right tool for the job and a visualizer for your ORM isn't the place, imo, to be defining your database schema. If you are working with non-technical people, i can see its use.
I can see your point but you could also say that about code-first and defining a model as part of a class definition. Especially if you are using a model-whatever approach to designing a piece of software. From that perspective the only really pure way would be database first.
MonoDevelop is no more. Its Xamarin Studio now.
one of the caveats tho on the mac, windowed forms all run kinda weird since there menuing system is so different 
What are you trying to do? I love Python, but one thing that sucks about it is packaging. Also, GUIs can be a pain in Python. Xamarin and Mono should be able to handle most of your cross platform needs, but if you really need full system interoperability, then using .NET may not be the best option.
Anything that uses the standard libraries seems to work fine, but as soon as I start adding libraries (the project I was trial-testing on depended on a QR code generator, SQLite, and Newton-JSON, and I was having a lot of trouble getting those running on Linux, so that made me worried. Perhaps I just was just trying to solve the immediate errors that cropped up (hundreds) instead of actually stepping back and making sure that the versions of the libraries I had worked outside of Visual Studio. Perhaps I'll take another smack at it, but I've really seen a LOT more support, guides, and help docs for Python-related scripts, so it's a tough call. (I just don't want to end up fighting an uphill battle the whole way through, which could happen with either option)
It's essentially a Point-Of-Sale app, so mostly forms for data input, SQLite for data storage (ideally with an easy way to switch to another database driver in the future, but I'm trying to keep the application easy to deploy, so without having to install an SQL server) From my research, PySide is a really good wrapper to the QT library for Python, and StackOverflow has lots of Q&amp;A's, so if I run into issues, solving them shouldn't be hard. QT looks pretty decent on all platforms by default, and I'm hoping to write up custom styles, which are supported too. (I don't want to delve into writing a GUI for every platform just yet, I don't think I'll get a lot of adoption on anything other than Windows, but if I do in the future, I can always add another gui if I keep the core and the UI separated enough) For packaging, PyInstaller seems to be a nearly one-click solution that makes binaries for most platforms and happily works with PySide. Overall it sounds like C#/Mono can do everything I'm asking for, but it just isn't as widely used, which worries me in case I run into trouble or want to do something where the library doesn't easily work across platforms.
Why not Java? I like C# far more, but I don't use Mono; it just feels too handicapped. IntelliJ IDEA is also a fantastic IDE, and if you use ReSharper it should feel quite natural. A friend has been racing about Scala, so that's on my list to check out. It just feels so much more natural to me to target the JVM when going cross platform out of the gate. 
Java's an option but I've never used it. It sounds like a lot of people say to avoid Java unless you have to because it's quite bloated and has a lot of syntax quirks, so the recommendations tend to be to work in other languages. But I do understand that Java is probably kind of cross-platform, I just can't imagine that there are no other good (easy and effective) options (although it's looking more and more like it). I'll take a look into it though. Thanks.
Java and C# have very similar syntax. The standard API is quite similar too. Java FX is kinda similar to WPF. Remember C# was once based off an old java implementation Microsoft made named j++ later to be named J# after the Microsoft/Sun lawsuit. 
&gt; It just feels so much more natural to me to target the JVM when going cross platform out of the gate. Except Oracle does not give a dam about mobile OSs and leaves to third parties, like the RoboVM guys, to provide native compilers for platforms like iOS. At least Microsoft supports Xamarin's efforts.
&gt;At least Microsoft supports Xamarin's efforts. Mono has been around for years and Microsoft announced their partnership with Xamarin last week. C# is a great language, but Microsoft is struggling to keep it relevant.
To add to what /u/tamrix said, take what people say (particularly about programming language choice) with a grain of salt. Java gets a lot of hate because for a couple reasons. They built a lot of rigidity into the language to keep programmers from shooting themselves in the foot - in my experience, this os a good thing. You can always fuck up architecture, but a large scale Java application is likely to be much more organized than, say, a vanilla Javascript application of the same complexity. Also, Java is big in enterprise, so you have a lot of shitty hacked-together legacy code that people have to maintain written in Java. And, though I haven't worked on this kind of stuff for years, the first few versions of Java EE were pretty goddam convoluted. Allegedly they fixed this eventually, but I don't know personally.
except for that part where writing java is like smacking your face into a knife.
Given that it now has official support from MS as well as from Ximarin, I'd let that counterbalance the lack of obvious wide-spread usage (though I think it is being used more widely than is disclosed, mostly as a competitive advantage as well as in enterprises which never sees the light of day).
&gt; C# is a great language, but Microsoft is struggling to keep it relevant. Funny, the gaming industry seems to have other opinion. Most of the tooling that was coded in C++/MFC or C++/Qt, is nowadays done in C#/WPF.
In order to fix that you need to use some UI library that is not Windows-specific. e.g. QT, Gtk#, etc.. It's really not MS problem that other OS have different menus you know.
According to [wikipedia](http://en.wikipedia.org/wiki/MonoDevelop), Xamarin studio is a rebranded version of Monodevelop. The [MonoDevelop home page](http://monodevelop.com/) doesn't seem to think it's no more, either? Having said that, I'm not a MonoDevelop user, so haven't been keeping close tabs on the news.
Java might have been a bit better than C# 2 / .NET 2.0 at the time the latter was released. Nowadays it's not even a contest, C# is waaay ahead.
And you know, so many ASP.NET Websites, and Windows Store apps (The C#/XAML ones), and so much more.
No, Java doesn't avoid shooting your own foot. For instance, there are some semantically valid types that can't be syntactically represented. 
I used Newton JSON recently in Mono, it is important that you target your .net app to .net framework 4.0, and that you have the most recent version of Mono installed (the one that you can apt-get in Ubuntu is really old). If you do that it works flawlessly (I think its unit tests pass on linux)
Using the newest version of mono/MD is always a good idea. The mono ecosystem is improving very quickly and many distros seem to be having trouble keeping up. It's unfortunate that many people are getting the wrong idea about mono just because they're using a super old version. The cross support it has for many major nuget packages etc in recent versions is really quite impressive. I was able to write/port a nontrivial aspmvc/servicestack application recently and, aside from still needing a little dll-copy magic, it was really quite intuitive. I tried several distros to see which would become my mono VM, and I ended up having to build mono, monodevelop, and xsp from source nearly every time. Mono is never going to get anywhere is the experience is like that....maybe it's time to become a package maintainer.
If you're using Ubuntu, you should definitely use a PPA (third party repo) because the official package is seriously out of date.
Do you have experience using Qt with C#? If so, could you recommend a tutorial someplace? I'd like to give it a try but it looks like they don't easily combine.
I've used vanilla ADO.Net and NHibernate with SQLite, and I've had no major problems with it so far. As long as you configure your ORM to use the SQLite dialect and are aware of the limitations of SQLite, there should be no problems using it on Mono.
Which PPA do you recommend? Last time I used Ubuntu, mono was still a core package, and so was at least a year behind for the sake of stability.
Last time I checked, there were working Qt bindings, but they required a lot of "glue"; things like Qt events are/were completely separate from .NET/C# events, etc.
Jesus, Iv been programming for quite a while and just looking over that assignment makes me hurt. Good luck :)
C# 2.0 supported events, generics, properties and anonymous methods. Java has managed to climb up to be able to support generics. .NET 2.0 was technically superior to Java and for the most part still is. The developers of Java are extremely conservative, and will avoid any alterations to the run-time if possible. Which is for instance why Java's Enum is such a clusterfuck. They're going to implement anonymous methods now I think, but I'll bet you that they will implement it into the parser and not into the run-time. I'm guessing they will create an interface which will be used to instanciate an anonymous class and pass that object as a reference. Basically, if you write : object a = () =&gt; "test"; it will probably be parsed into something like object a = new AnonymousClassMethod() { public object[] Call(object[] p) { return "test"; } } or something similar.. The JRE does not support delegates, and it's unlikely that they will implement it where it belongs. (In my opinion)
Enums are actually one of the few nice things in Java compared to C#, IMHO. C#'s enum are really flags; that's useful when you need flags, but often you don't.
Apparently [badgerports](http://badgerports.org/) is maintained by one of the mono developers, so that should be good
It seems pretty outdated. 2.10.8 was released December 2011...
Sounds like you need an image recognition library. http://stackoverflow.com/questions/9727579/c-sharp-image-recognition-library 
Ah, yes that was it, the space. Thank you. And would using an XmlSerializer, make it easier, or is it just better practice?
&gt; The ' ' character, hexadecimal value 0x20, cannot be included in a name. You kinda posted the solution yourself. Also you should read up on XML a bit if you are trying to use spaces in the name of XML-elements. &lt;Phone Number foo="bar"/&gt; is clearly not going to work.
Both. All you're doing is (hopefully) persisting a `Contact` object whose properties are all the related fields- name, address etc. The framework provides support for serializing objects into XML, json, and others. So why bother hand writing every single element when you could instead call a serialize method and let .net do it for you?
Alright, [this one](https://launchpad.net/~directhex/+archive/monoxide) is also listed as maintained by the mono team on Ubuntu's PPA list 
Much better C: 3.2.1 is pretty recent (July)
IMO, make it a manual process first. 1. Take a picture. 2. The user enters details (date, mint mark, other) 3. Check against database After you get the basic application working, then start concentrating on the OCR part. This way you can at least get a working application going. And, at some point, the OCR will fail to read a proper date, so your 'plan B' process will already be mostly in place for that condition.
Let's look at the obstacles to OCR and see if we can clear them. One problem is that numbers are raised or indented features on coins. Depending on the lighting conditions and resolution of your photographs, it may be the case that even (e.g.) the number "1" is not merely a vertical line, but a bright vertical line on one side of the ridge and a dark vertical line on the other side of the ridge. The number 6 will have neither a continuous highlight nor a continuous shadow, so this might be hard for an OCR program that's just looking at thresholded data to figure out. Lighting effects are approximated in "emboss" type filters by convolution. Therefore, it's not unreasonable to try to recover the original surface height information with deconvolution. Not sure if deconvolution code is already available for .NET. If a consistent lighting system can be used for each coin, you may be able to deconvolve with the same kernel for each image. I don't know whether OCR software is any good at dealing with varying orientations of the characters to be recognized. If not, then *after* deconvolution, another thing to try is (assuming your coin photos are perfectly centered on circular coins) polar-to-rectangular coordinate conversion. I mention this because the numbers on coins may not be printed in a straight horizontal line (rather, they might lie on a circular path), and may therefore have widely varying orientations. Doing this transformation means that, as long as the printed characters are printed along circular paths whose center lies at the center of the image, the orientation of the transformed characters will be constant.
Actually, that's a good idea! It'll be easier to have a manual process to add to. I'm going to get on that!
You would need some form of computer vision. Possibly object detection. Check out the library OpenCV, it has hundreds of different computer vision algorithms you can use to extract information from images. I'm not sure if it has c# bindings though. 
Good thought. I'll be honest, I don't know loads about image processing, that makes sense though! To G^O^O^G^L^E
We run an 8 figure ($$,$$$,$$$) telecom company on Mono. Works great. Telecom is ridiculously latency and performance sensitive. Mono has real money behind it now that Xamarin's mobile business has taken off. People have outdated opinions about how Mono is "limited" and whatnot, but they're wrong. While their focus on mobile doesn't directly serve our enterprise use, Xamarin having a source of revenue and that revenue being based on having a working cross-platform .NET implementation AND the recent press release in which Microsoft and Xamarin are teaming up AND the fact that Microsoft just changed the license for their aftermarket components and libraries to one that allows Mono use AND the fact that Microsoft has been open sourcing their components specifically for Xamarin's use such as ASP.NET, Entity Framework, etc. So Mono has Xamarin, a company with revenue behind it, and Microsoft behind it. Worst case all paid development stopped today and we'd have a solid C# 5.0 / .NET 4.5 platform available under the GPL and the community and enterprises that rely on Mono would have to continue to support it. Mono is in no worse a position than any other community driven language/runtime combination. http://xamarin.com/pr/xamarin-microsoft-partner http://arstechnica.com/information-technology/2013/11/xamarin-and-microsoft-join-forces-to-take-visual-studio-to-ios-and-android/ 
Mono feels handicapped.... compared to Java? Java which is only now getting closures? There must be a hundred languages you could have said that I would have thought "good point", but Java?
Sounds good. Focusing on cents would help reduce the patterns to match (if you go that route), such as the large date and small date 1960 Lincoln, or the "fancy 5" 1865 Indian. BTW, not sure if [this](http://csis.pace.edu/csis/masplas/p15.pdf) helps, but it looks at automated Lincoln cent grading via image histogram comparison.
I do know that tesseract requires the bitmap to be a certain size to be effective. I had a project where I needed to OCR a screen capture. I wasn't guaranteed that the screen size would be sufficient for tesseract to recognize the text. I ended up having to convert the bitmap to monochrome (doesn't matter what two colors you use as long as there is enough contrast) and then re-sizing the bitmap if it was under the minimum (I determined the minimum through trial and error).
Your link has actually reinforced my idea for my grading strategy. Thanks!
I've read that OpenCV has a wrapper for JS and C# but I don't really see how it can be useful to me. AForge which is a similar library has shape recognition feature but because of the font the only numbers it would would be able to recognize would be 1, 4, 8 and 0.
Java's enums represent a fixed number of objects inheriting from a common base class nobody else can implement, and whose values you can iterate over. Sometimes that's exactly what you want. C#'s enums are a wrapper over integer types. Sometimes that's what you want, for flags, but most of the time some more type safety would be nice; currently any number can be casted to any enum even if the enum doesn't declare a member with that number.
I think you can make a project template that does all of your setup for you: http://msdn.microsoft.com/en-us/library/vstudio/xkh1wxd8.aspx
A local NuGet repo could handle steps 2 and 3 for you.
I've had problems with the Ubuntu repositories keeping up with the latest mono releases and ubuntu releases, [so I've learned to compile it from source](http://stackoverflow.com/a/13424880/1031859). I haven't seen any repositories with 3.x packages for Ubuntu 13.10 (saucy) yet. The 2.x releases were rather limited in the features they supported (especially in ASP.NET features), but the latest 3.x releases are much better to work with. I use mod-mono so I can run ASP.NET applications in Linux. I've written a few MVC3 and MVC4 applications, using WebAPI, [PostgreSQL](http://npgsql.projects.pgfoundry.org/), SQLite, and a [membership provider](https://code.google.com/p/pgprovider/). Log4Net and/or Commons.Logging for log files work just fine as well. One application I've written is an MVC application that uses a C# library I wrote to interface with Minecraft's RCON interface. It can send commands and parse the responses for display on the web, such as showing who's online, who's whitelisted, etc.. It allows me to remotely manage one or more minecraft servers with ease, even on my mobile devices. All of this while keeping the minecraft servers vanilla. The only ASP.NET feature I've really had any issues with is the "bundlers" and LESS compilers when working with Bootstrap 3. I've since learned it's easier to pre-build the CSS using Node.js modules like recess. Regarding IDE's, I've used both MonoDevelop and Visual Studio 2012. I personally prefer VS when I'm on Windows and then publishing to Linux, but MonoDevelop is maturing rather quickly and I wouldn't have a problem using it if I were developing on a Linux desktop. It's also worth nothing that [Unity 3D] (http://docs.unity3d.com/Documentation/Manual/HOWTO-MonoDevelop.html) includes a version of MonoDevelop, and supports C# for cross-platform development. Overall, I absolutely love using Mono/.NET on Linux. 
Alright, there's a lot of stuff going on in that assignment but I took the time to read and understand it and I seem to have a pretty good idea of what's going on (maybe). If you have some specific questions about the assignment I'd be glad to help.
The C5 Generic Collection Library for C# and CLI! https://github.com/sestoft/C5
Don't get discouraged, it seems like a bitch, but what you're being asked isn't that crazy. If I were you, I'd start with the ComputeAlpha problem. public class ComputeAlpha { public ComputeAlpha(double span, double amplitude) {...} public double GetValue() {...} } Hold onto the values in the constructor, follow the math in the public method. Once you do this, it will be obvious how to implement CreateTable, even if not exactly easy.
Wow, Newton's method in an introductory c# class? We didn't get into numerical methods until a 400 level math class (numerical analysis). You can do the program from everything given, but it's also nice to have an understanding of Newton's (a.k.a Newton-Raphson) method. Be careful with choosing alpha values, I'm not positive but your results might diverge if they're outside of a certain range (e.g. 0 &lt; Œ± &lt; 0.5). I hope this helps.
Absolutely, by myself I could not make a perfect coin grader. Coins are too unique to perfectly analyze them every time. However, I think with the date checker, grader and an eventual rare variety checker, I'll be doing well enough to weed out anything worth examining by hand.
XmlSerializer would make it easier as you can have all the info stored in an object and pass the object to the XmlSerializer, which will write the XML for you. The format of the XML can be customized by adding attributes to the class that you want to serialize. If you can live with less flexibility in the output XML and have to serialize types like Dictionary you can also use the DataContractSerializer. 
OpenCV is generally considered the standard for (free) computer vision. Developed by Intel initially. It certainly has all the tools you need to perform the recognition but you would most likely have to build the model yourself. If AForge has some sort of "detectTextInImage" method then that could be the better way to go. If you get stuck and have to go lower level then I would go with OpenCV. I've had some pretty good success doing facial recognition and object detection with it. 
Coming from Java, studying LINQ and WCF have given back to me most for the time spent learning.
Thanks for the info, I'll probably try detectTextInImage tomorrow. OpenCV looks like more work than is needed.
Recognizing and counting coins is a classic computer vision problem. But transcribing the content on a coin takes this to a new level of difficulty. Lots of good points raised by other posters. I totally agree that you should focus on the simplest aspects first, maybe just the db of coins. But you might find this an interesting resource on some of the computer vision approaches to this problem, which would help you understand the value you can get out of something like OpenCV: http://www.cs.bath.ac.uk/~mdv/courses/CM30082/projects.bho/2005-6/zhang-l-dissertation-2005-6.pdf 
If you know C#, powershell really isn't another language. It's really more of a scripting view of the .net runtime with nearly C# syntax. Certainly all your knowledge of the .net libraries is 100% applicable. You can actually load C# code into powershell scripts and run it, maybe that's what you need - http://www.wiktorzychla.com/2012/05/easy-way-to-become-powershell.html
Wait I didnt mean that function exists. I just mean if the library has something like that specifically it would be better than OpenCV for your purposes. Sorry if I was unclear. 
Is there an opinion to scan the coins on a flatbed scanner? It seems that the variations in lighting from a camera might make it more difficult to extract the text. You might look at an app like kofax vrs which is included with some scanners, or an alternative.
Basically, stop using commerce server.
This is not an assignment. This is an unfair, low-level, self-esteem massacre. I did the same stuff when I was in college but we did it in C/C++. I feel bad for you and your classmates. Make a friend or two and do it together. 2 of you ingest liquor while the third drives the development. Trade chairs every 30 minutes. Rinse and repeat until you can't type anymore, it's done, or you're all passed out. Don't listen to that. Start thinking about methods and classes you can use. Draw a picture and make notes to map out a plan before you ever start coding. Don't start until you know the plan. Map it out and fill in details later.
How are you actually attaching the json data to dbcontext? you can actually make attached thin objects in dbcontext by simply creating them without fetching from DB. var so = new SomeObject { Id = KnownId}; context.Attach(so); so.ChangedProp = jsonObject.ChangedProp;
What you're talking about sounds more like a sum type than an "enum". Enum *is* a flag. It's a type safe form of the old C convention of having a set of constants that were just a predefined number. Calling a totally different thing "enums" just confuses everyone and makes it harder for people coming to Java to work out what is going on.
C#'s enums aren't really type safe. You can cast anything to any enum, even implicitly so if it's the value 0.
If you're looking for type safety, why bother with a language that is so hampered by null when there are languages like Haskell out there?
I answered you there but I'll repost here. Try this: this.reportViewer1.Reset(); this.reportViewer1.ProcessingMode = ProcessingMode.Local; this.reportViewer1.LocalReport.DataSources.Clear(); this.reportViewer1.LocalReport.DataSources.Add(dataset); this.reportViewer1.LocalReport.Refresh();
Yep: https://www.rescuetime.com/
wow, that was fast! Thanks!
 &gt;while (reader.Read()) You are reading it already. The reader at this point will contain the results of the select statement in your SqlCommand
.
Hi Nuzz604, Federico from the Codealike team. I can confirm that Github is failing, we are working on it, as we speak. We werent able to replicate the issue with Facebook though. Can you contact us at info@codealike.com to investigate this issue further?
What exactly are you trying to do with Commerce Server? 
It seems to all be laid out pretty clearly in the "skills measured" section. Everything there is extremely straightforward. If you're feeling overwhelmed by what's laid out there, you probably shouldn't waste your money.
You can disassemble the code to check the difference. Here's my guess. offset++ is making a side-effecting change to a variable that is outside the scope of the loop. This might make the compiler less aggressive about loop optimizations. The second batch of code is all inside the loop. The compiler will compute (((w * someNumber) + x) * 4) only once using common-subexpression elimination. And then it can safely make more aggressive optimizations. Try this code: int offset = 0; for (int w = 0; w &lt; bmpToReturn.Width; w++) { for (int x = 0; x &lt; someNumber; x++, offset = offset + 4) { var temp = offset ; sum[w * 4] += row[temp++]; sum[(w * 4) + 1] += row[temp++]; sum[(w * 4) + 2] += row[temp++]; sum[(w * 4) + 3] += row[temp++]; } } 
They should both be thread safe. Or you could just make an instance of the logger static and use it that way if this is just a run and done type app. I believe both NLog and log4net have async loggers as well if that would help.
Really great idea. I haven't gone through the whole tutorial, but I always learn best when I am doing a real application of something. I will probably go through this tutorial to give myself additional OOP training. Edit - well I went through the rest of it, looks like it's incomplete, no C# programming there at all.
If you're using the Commerce Server namespaces, you shouldn't have to use command line scripts... unless I'm totally misunderstanding what you're trying to do. I've written apps/services that automate things with CS; more specifically Marketing Manager. Really, what it boiled down too with what I was just data manipulation. 
1. Instantiate and show forms 2 and 3 from form 1, passing a reference to form 1 (`this` keyword) to each. 2. Make the items you need to change on form 1 accessible by declaring public properties with getters and setters. 3. Store the reference to form 1 in a member variable in forms 2 and 3. 4. As needed update the properties on the stored reference to form 1 from forms 2 and 3. Quick example: class Form1 { public string Stuff2 { get; set; } public string Stuff3 { get; set; } public Form1() { Form2 form2 = new Form2(this); Form3 form3 = new Form3(this); form2.Show(); form3.Show(); } } class Form2 { Form1 _form1; public Form2(Form1 form1) { _form1 = form1; _form1.Stuff2 = "Form 2 stuff"; } } class Form3 { Form1 _form1; public Form3(Form1 form1) { _form1 = form1; _form1.Stuff3 = "Form 3 stuff"; } }
So you have the class file with the account class. And then you have another source file (probably Program.cs with the Main method). Is that where the code to create the Account object (into variable account) and then call the Json code is located? Because it looks like you're trying to do that operation outside of a method. Account.cs: Has the public class definition Program.cs: Has the Main method that every Windows executable has, with the creation of the account object and serialization. 
In that example, you wouldn't put that code into a view/cshtml file. It would be sent to the view as a model or viewmodel and the cshtml page would only know what that viewmodel is and then display it. The views in MVC should be as "dumb" as possible.
Hi. I'm the guy who's writing the tutorial. You are correct, it's not complete yet. I was hoping to have a few more of the sections published before anyone started looking at it. I'm currently editing the videos for the next couple of sections and should have them up by this weekend.
Just to expand on this, the reason this is happening for OP is that after Form2.Show() has finished (when Form2 is closed), it will be disposed, so the data that was being used to populate the label will no longer be there.
Thank you for the reply. All the above code is in the view page (test.cshtml). Apparently I have no idea. Visual Studio did not auto-generate these and I cant seem to google a good resource on specifically creating/using them. Do you know of a good source that overviews this stuff?
The problem is that you are defining a class in your view file. This causes the whole class definition and your object definition to become statically linked to your view. The compiler sees the Account variable as a static thing that can never change and this results in the compilation error when you reach the code that tries to take a static object where an object variable is expected. (In the serializeobject call.) When you define a new class, you should put it in a separate source code file. The rule of thumb is, one class per C# source file. The VS Solution explorer has a context (right click) menu option for creating a class file. You should use that to create classes most of the time. Conceptually you are trying to put C# code in a view and that is not what a view is supposed to contain. If you are used to PHP, you may be familiar with SMARTY templates. Views are similar to templates. They should contain mostly HTML and maybe a little bit of logic, like simple loops, to present data from your model. The model is the object that represents the text on your website that changes from presentation to presentation. The model should be the end result of your controller action method. MVC takes care of transfering that object to your view so you can use it in your presentation. Most of the code in your example should be part of your action method in your controller. You can pass the result string as your model or you can put it in the ViewBag dynamic object as a property.
sorry, google is not helping either, since i just do not even know the words i could use to search.
You're going to have to be a little more descriptive about what you are trying to do
i have 2 arrays -&gt; int[,] that should look quite similar when shown (looked at). they look kind of like the graphic linked. and now i want to know if they are similar and if they are, how much they do differ from each other. i hope this makes more sense.
Thank you for both replies. I will check out the tutorial link and run through it.
Cool, i signed up to the email notification list. Really good idea.
that would be a way to visualize it. but i need to compare it. i need my program to tell me something like: "they have the same form, but the difference has a factor of 0.0342"
Ah I see. In that case, how do you plan on getting to your "difference" factor. I.e. You could easily iterate the differences between each matching column. But say you have two arrays where only one value is different, then how do you want to weight it? Seems a trivial programming exercise, but until you are a bit more specific on your aim it will be hard to suggest much.
i need to know if the form, the picture of the arrays "look" similar. very simpliefied example: array1: 5,0 0,10 array2: 5,0 0,10 they are both identical, easy. array1: 5,0 0,10 array2: 2,0 0,5 they are not identical, but similar array1: 5,0 0,10 array2: 0,5 10,0 nope. this is still easy to do, but the problem is the blur/fuzzieness of the data. this is why i need to know if there is already a function for this 
You're delving into descriptive and inferential statistics now. .NET does have the Charting library which offers some of this. This sort of data is better analysed using something like R, but if you're set on C#, look into the meta-numerics and math.net libraries. My preference is meta-numerics. You can also take a simpler road and generate a contour plot of the percentage difference between each column or something like that. There is also a library called RDotNet which bridges .Net and R quite nicely if you want to quite deep into data analysis.
 var first = new int[,] { { 1, 2 }, { 3, 4 }, { 5, 6 }, { 7, 8 } }; var second = new int[,] { { 9, 8 }, { 7, 6 }, { 3, 4 }, { 1, 2 } }; var toGraph = CountPoints(first, second); ... var otherGraph = CalculateDistance(first, second); #Compare by count - makes the height of the bars according to the number of occurrences of that point List&lt;Tuple&lt;int, int, int&gt;&gt; CountPoints(int[,] first, int[,] second) { var results = new List&lt;Tuple&lt;int, int, int&gt;&gt;(); var merged = first.Union(second); foreach(var point in merged) { var x = point[0]; var y = point[1]; if(results.Any(t =&gt; t.Item1 == x &amp;&amp; t.Item2 == y)) continue; var z = merged.Count(p =&gt; p[0] == x &amp;&amp; p[1] == y); results.Add(Tuple.Create(x, y, z)); } return results; } #Compare by distance - makes the height of the bars according to the average distance from other points List&lt;Tuple&lt;int, int, double&gt;&gt; CalculateDistance(int[,] first, int[,] second) { var results = new List&lt;Tuple&lt;int, int, double&gt;&gt;(); var merged = first.Union(second); foreach(var point in merged) { var x = point[0]; var y = point[1]; if(results.Any(t =&gt; t.Item1 == x &amp;&amp; t.Item2 == y)) continue; var z = merged.Select(p =&gt; Math.Sqrt((p[0])^2 + (p[1])^2)).Average(); results.Add(Tuple.Create(x, y, z)); } return results; } ------- These are just two ways you can compare them. For "likeness" you may actually want to implement a mix of count and distance. It really depends on what metric you want to use for the height. ------ EDIT: Union-ed
if you look at the graph and would say "hey, these two look similar"
{1,11}, {2,22}, and {3,33} have a similar pattern but aren't necessarily similar {0,12}, {3,45}, and {6,78} have a similar pattern but aren't necessarily similar {1,5}, {34,170}, and {13,65} have a similar pattern but aren't necessarily similar You REALLY need to refine your concept of "looks similar" and come up with a concrete solution to how you want to compare two sets of numbers.
i would have no problems in using r. played around with it a while ago. does r have any functions to directly compare that data? or can you give me a few pointers where i should look? (so i can at least ask a better question the next time ;) "You're delving into descriptive and inferential statistics now" oh-oh, this sounds "fun". ok, i will have to look this up in wikipedia first.
Your image is a 3D chart. The position of the bars is simple, that's just x and y (your array values). What needs to be determined is how high each bar is. Basically you need a way to turn int[,] and int[,] into double[,,] &gt; it looks like you are only comparing the corresponding cells, but not the "whole picture" here. First, you haven't defined HOW you want to compare anything. *What is the result that you're looking for? What does the different bar heights in your original picture represent?* Second, var z = merged.Count(p =&gt; p[0] == x &amp;&amp; p[1] == y); takes *every* occurrence of that (x,y) pair, counts them, and makes that count be the height of the bar. var z = merged.Select(p =&gt; Math.Sqrt((p[0])^2 + (p[1])^2)).Average(); takes *every* point, calculates the average distance from every other point, and makes that distance be the height of the bar. In both cases, "the whole picture" is being looked at.
There are functions that compare and compute matrices, yes. Not something I've had to do in R, but not hard from memory. It depends how meaningful you want your data to be. If you just want a basic interpretation, go down the contour plot route. R can do this without too much mucking around. Hardest part is probably importing your data. If you want more than that and want to put your fancy pants on, you can delve into inferential statistics. :)
You might want to look at implementing some kind of statistical tests for independent sampling. If the sets are "similar" they may have been chosen from the same population, the probability of which you may determine from a t-test of some kind: http://www.statsoft.com/Resources/Support/STATISTICA-Q-A/Analyses/Commonly-Used-Statistical-Tests
ok, i think i understand. the numbers are normalized against each other. minimum is 0 and the "picture" consists out of values from 1-100 so i will compare between something like {0,0,0,10,50,20,5,0,0} and {0,0,1,8,50,25,7,0,0} 
From your explanation, it sounds like you want to first normalize your data and then sum up the differences between corresponding points, maybe using a squared norm or any other you find suitable.
It's working right now for me using GitHub.
Like others have said, you really need to refine your idea of "similarity". When a person sees two things as "similar" they have some criteria, even if they're not conscious of it. You might also try dividing one by the other to see if they differ by an integer factor? 
Because the value is larger than the max of an Int32 its being typed as a Int64. Integer literals: http://msdn.microsoft.com/en-us/library/aa664674%28v=vs.71%29.aspx When you try to assign that to a Int32 you will get the error. Have a look through the other value types and chose one that suits the numbers you are using. Int32: http://msdn.microsoft.com/en-us/library/5kzh1b5w%28v=vs.90%29.aspx Int64: http://msdn.microsoft.com/en-us/library/ctetwysk%28v=vs.90%29.aspx UInt64: http://msdn.microsoft.com/en-us/library/system.uint64%28v=vs.90%29.aspx Hope this helps :)
It certainly does but now I'm running into another issue. For simplicity's sake I've shortened the code to show the problem I'm having. I'm trying to set it up so when I click on myButton the text for myLabel will change to "Hello World". When the code appears as: private void myButton_Click(object sender, RoutedEventArgs e) { int x = 0; int y = 0; long z = 600851475143; string result = ""; for (x = 3; x &lt; z; x = x + 1) { y = x; } myLabel.Text = "Hello World"; } The text for myLabel does not change. nothing happens in the app. However when I delete the (for) statement the text will change. What is it about the formatting that is preventing the text from changing? What I'd like is to have the (for) statement executed, and the myLabel.Text to display the result. I think I have the math right on my original code but I can't get myLabel to display anything and I'm completely baffled as to why. 
Well you are trying to loop 600 billion times. That is probably going to take a few hours of processor time at least to finish the loop and get to the statement where it will assign your hello world text. I presume that you intend to eventually "Do calculations" inside that loop - just be aware again that this really is a massive amount of iterations and will take a hell of a long time, particularly if you introduce a complex algorithm at each step.
The loop would take a while to process, but most importantly the loop continues to increment x until it is equal to z. Because x is an Int32 and therefore has a max value of 2,147,483,647 the loop condition can never evaluate false so the loop will run forever ~~or you will get a error (Overflow Exception) for trying to assign a value higher than 2,147,483,647 to an Int32.~~ As the Int32 will rollover to Int32.MinValue Try this: long x = 0; long y = 0; long z = 600851475143; for (x = 3; x &lt; z; x++) { y = x; } myLabel.Text = "Hello World"; Here is a table of the Integral types for c# http://msdn.microsoft.com/en-us/library/exx3b86w.aspx Edit: swapped a word :), Edit to correct point made by Pharylon
Upvoted you because it's important to know this, regardless as to what the original issue was, but as others have said, trying to use numbers greater than int.MaxValue will cause issues if you are handling them as ints. As for the original question, yes, try using longs.
You could perform principal component analysis and then dot product the most explanatory components from each to see the similarity distance. 
just wanted to say thank you everyone, i am now working through all the tips you gave me. i think i now have a few good ideas how to do it! (still need to try if they work)
[Here's a basic method to get primes](http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes) Though it seems that you might be better served getting a list from the internet. 
Also, since you want the largest one smaller than your 600851475143 and you know that 2 is a factor of it, you can cut your loop in half and make it only compute up to 600851475143 /2 . (you can reduce the number of iterations even further) Edit: Adding another hint to save you a few cycles: Don't increment by 1, increment by 2. Reason being that you **know** that any multiple of two is invalid and doesn't need checking ;). Again, there are even more ways to make your program solve the problem faster 
Thanks for the help. I didn't get a chance to tinker around as much as I would like to last night but hopefully I'll get some more time this morning. I'll undoubtably have more questions so thanks in advance. This subreddit is awesome I've only been trying to learn programming for about a week and this place has already helped me out immensely. 
If you are interested in the right way of doing a computation intensive problem like this, grab the CUDA SDK and parallelize the algorithm
Something you can do to lower it, after putting the correct type, is to only go up as far as the number you want to factor divided by 2. It will get done in half the time and the results will be the same since 2 is the lowest factor you could have.
Thats what worked for me :) Thanks a lot! Im still a nub and I started this project to learn c#. Im rebuilding the whole thing the 3rd time now. Im getting better :) First thing i found out is to take more time to prepare the project :) Im so used to just sit down and develop by programming, so this is new to me. Better to sit down and take your time to plan before you write a single line of code. So thanks for all your guys help posting here. P.s.: can you tell me how to solve it better? you mentioned there is a better way to have a "information input forms".
exactly. You just get this problem when you have more than 2 forms that should keep the information for later. So in my case i was stupid and have 4 different forms on which i collect different information. Next time i will just make 1 form to collect information, with less graphic on the background image. So better to have a basic graphic form and overlay it with images, so you can change that 1 form to your needs. am I correct? :)
Usually, I'll write an object that has the properties I'm looking for (maybe and int for age and a string for name, for instance), but that also contains a form that will show and hide on demand. Perhaps something like public class informationClass() { private int _age; private string _name; private form _displayForm; public informationClass() { // sane values _age = 1; _name = "Bob"; _displayForm = new form(); // form is defined elsewhere, informationClass acts // as a wrapper for it } public ~informationClass() { if(_displayForm != null) { _displayForm.Dispose(); } } public DialogResult getInformation() { // get the information from the user, and store // it. However, it's up to the calling method as // to what we do with it DialogResult result = _displayForm.ShowDialog(); _age = _displayForm.ageField; _name = _displayForm.nameField; return result; } // get and set method for _age public int AgeField() { get { return this._age; } set { this._age = value; } } // get and set method for _name public string NameField() { get { return this._name; } } } This is only a quick and dirty design, plus I'm on my tablet (with autocorrect on, apparently). The idea with this class is that it's a wrapper around your form. The class itself can stay alive for as long as you needs it, and the user can re-input that data at any time, by calling getInformation(). I don't know which languages and techniques you've come from, but yeah you'll have to learn to sit and design how you want something to interact before bashing it out. You'll get to a point where you can bash out something like this (only more elegant) without too much thought, but you need to figure out how to get there first. One step at a time, fellow developer; you'll get there, trust me
I'd be tempted to use a tabbed control box. It let's you have tabs for common controls. Look at the Windows file properties window as an example. All of the common properties are grouped onto a single tab. The access properties, for instance, (read only, archive, etc.) all sit at the bottom of a specific tab. I would design a multi paged input form like that for several reasons: * it'll be easier to manage (you can get to controls via dot access on the tab page they are located) * the user knows what to expect (they've seen it before) * it's part of the recommended Windows design philosophy
I suspect most people doing cross platform web services are on ServiceStack or Nancy.
That is a neat idea, why did i not think about that before :(
&gt;the loop will run forever or you will get a error (Overflow Exception) for trying to assign a value higher than 2,147,483,647 to an Int32. As far as I can tell, it would run forever. Why? Because when you increment an int past 2,147,483,647, it rolls over. Try this: int x = int.MaxValue; Console.WriteLine(x); //Writes 2147483647 x++; Console.WriteLine(x); //Writes -2147483648
Sweet, I was not sure off the top of my head what the result would be. Thanks :) - Will edit above with correction. Is the same true for a uint, or will you get a OE?
Yep :) very informative. I was aware of the nature of the binary representation of integers but was not sure how it played out specific to c#. http://msdn.microsoft.com/en-us/library/system.overflowexception%28v=vs.110%29.aspx The above article describes a OverflowException being thrown when an operation produces a value outside the range of the type it returns and was the root of my original question. Is the exception thrown but the operation producing the overflow is allowed to continue?
Server Core editions still run a UI - they just show a console window. You can still RDP to them, but, again, all you get is a console. The point of Core isn't to reduce resource usage so much as to reduce attack surface. I have a Server 2008 R2 server running on an Amazon EC2 T1.Micro instance (Burst to 2 CPUs, 640MB RAM), IIS, MVC, PHP, MySQL and a few instances of Wordpress running just fine. It's not handling much in the way of traffic, but it's enough. I can't imagine a Server 2012 instance being much heavier. 
Once you have a little more experience with Visual C#, you'll start to see these kinds of things. I'd recommend looking at the way that Windows (or other user interfaces) get the user to input data. UI design is **very** big business, software lives or dies by it's interface. There's a book called The Design of Everyday Things [amazon.com link]( http://www.amazon.com/Design-Everyday-Things-Donald-Norman/dp/0465067107) I'd recommend. It was suggested reading on my CS course (almost a decade ago).
If you want to run your application on very low-end hardware, you could give linux with mono a try. The linux system could have a much smaller footprint than a full Windows Server install. MVC3 is fully supported: [have a look here](http://www.mono-project.com/ASP.NET)
Here's an example from that link: int value = 780000000; checked { try { // Square the original value. int square = value * value; Console.WriteLine("{0} ^ 3 = {1}", value, square); } catch (OverflowException) { double square = Math.Pow(value, 2); Console.WriteLine("Exception: {0} &gt; {1:E}.", square, Int32.MaxValue); } } // The example displays the following output: // Exception: 6.084E+17 &gt; 2.147484E+009. The key is on the second line, where it calls the **checked** keyword. That enables overflow checking. So instead of the overflowing bits just getting cut off, it throws an exception. By the way, I just thought of an even better example to demonstrate how ints and other primitive types are just underlying bit values. Try this: int[] intArray = new int[1]; Console.WriteLine(intArray[0]); //Writes "0" You might think it would return a null reference exception, since we have a totally empty array of ints. But the memory assigned to each integer is uninitialized... so it's all 0s. And that makes the integer value a zero!
I wish Microsoft would just buy Xamarin and roll it right into Visual Studio. C# is already seen by some as a much better cross platform solution than Java which has always laid grand claims to its portability. I think extending its cross platform reach by acquiring Xamarin would strengthen the markets it historically does well in and open up new ones.
Can you paste your loop code?
Any reason why you're not using a foreach instead of worrying about the length? If you reference the file names you're reading from the file, it should work the same as if you were hard coding the files, there is nothing special about the fact that the files are in the debug folder (the same folder as the program presumably) or that the names are coming from a streamreader. Just get the file names as strings and pass them to the picturebox class when it asks for the file name. Really your main concern is to keep track of the controllers for the list of files that you have in that string array. Going back to the foreach question above, you should be doing something like, foreach(filename in filenamesarray) Controllers.add(new controllerpicbox(filename)) Then you can reference controllers[n] to get the right picture and/or move through your pictureboxes and show/hide the picture control you need.
This is the code I have right now, sorry if some of it doesn't make much sense: private void Form1_Load(object sender, EventArgs e) { ReadFile(); } private void ReadFile() { try { string fileName = "contestants.txt"; DataLoad(fileName); PutUpControls(); } catch (Exception) { MessageBox.Show("Error reading from file", "Error"); } } private void PutUpControls() { for (int i = 0; i &lt; stringArray.Length; i++) { //and this is the first place I get stuck, because VS says //stringArray doesn't exist in the current context } } private void DataLoad(string fileName) { fileName = "contestants.txt"; StreamReader sr = new StreamReader(fileName); string s = sr.ReadLine(); while (s!=null) { CreatingArray(s); s = sr.ReadLine(); } } public void CreatingArray(string s) { string[] stringArray = s.Split('\n'); } 
Thank you, that was really helpful, although I still can't get the loop to see the filenamesarray. You can see my code in a reply below. &gt;Any reason why you're not using a foreach instead of worrying about the length? The reason is that whenever we created dynamic controls in class, the teacher used a for loop instead of a foreach so I just assumed it was better that way. I'm really not good at programming. 
Thank you very much, it works now :)
Yes you can call a method with "void". Void is the return type for the method. The console outputs should work just fine if you're calling the method. Another approach, though not a very good one, would be to change the return type to `string[]`, add all of the strings to an array, and then use a `foreach` loop in the main method to write them to the console. It would be helpful if you could post the method itself.
 You absolutely can call a void method. You have something else going on. Post the method.
I think OP means if you had like &gt;public **void** MyMethod() &gt; { &gt; //Do some stuff &gt; }
Hoping this is the right subreddit to post this in.
Useless includes are hardly a problem. They're both standard and it's nice to have them included in case you want to use LINQ extensions or `StringBuilder`.
I'm not sure what you're asking. Are you trying to launch an EXE from your own c# application? if so check out http://stackoverflow.com/questions/181719/how-to-start-a-process-from-c Or if you are trying to reference an exe program. If it is .net, you can do that as well. Just add it as a reference. There are a few other things you can do with EXEs, but you need to clarify what you are asking for us to help you.
I really want the ?. operator too!
I'm looking to embed the program. Similar to how dreamweaver has a code/design view I'm looking to embed an application within a windows form app. So essentially: On Form Load -&gt; Open/Start "Program 1" -&gt; Open/Start "Program 2" http://imgur.com/nCDKdbk They would both be displayed open and running inside the windows form rather than outside windows. 
Is the application you are trying to embed a .net app? If so, you might be able to accomplish what you want. If not, its going to be extremely hard if not impossible.
Looking at it you have a good start. Pretty similar to what I am also doing. One thing I can point out is that to make sure you account for all issues with the server. Server timeout, *.net split, Nick taken, Nick needs identifying, possible ghosting of used nick, nick registration, differences between server messages from server to server. Also, i would move your hard-coded commands within the main project to a plugin, since that is where all the other commands are located. I don't want to distract from your thread, so msg me if you want to take a look at what i've done for some ideas.
Depending on your coding experience, this might be a little too ambitious. You should be able to launch a process, or find an existing running process, get its window handle then using the win32api you reset its parent handle to one that you control. i did a quick google and found the following: http://www.codeproject.com/Articles/23064/Window-Tabifier - this does as described above, and puts apps inside of tab pages http://www.codeproject.com/Articles/9123/Hosting-EXE-Applications-in-a-WinForm-project?msg=4320724#xx4320724xx - basic example of how to do as described http://social.msdn.microsoft.com/Forums/vstudio/en-US/1d7bd916-9bbe-4c76-b9a0-8306159035a1/faq-item-how-to-retrieve-a-window-handle-in-visual-cnet?forum=csharpgeneral - general info on win handles good luck. If you start coding and put it on github then i'm sure people here would be willing to help when you get stumped. Just make sure you don't ask people to code it for you, try doing it yourself first.
Sounds good, just fork it on github :) PM me for Skype info or on IRC I'm on esper.net as Banane9
The commands in there are all that modify the state of the Bot (join, part, nick, quit) or that require information the plugins don't have at this point (help, plugins, about) I agree that I need to add more server stuff. I pretty much only focused on esper.net because I tested it there and I was able to identify with nickserv by writing pass in the stream when initially connecting. I didn't see what the *.net split looks like as a message yet. Do you know how it looks or where those are specified?
Thanks for the new operator :D The users in the channels are saved as strings because I don't need any information about them. The users the Bot knows more about are saved in the Users dictionary with a string key and user-object. I don't know what other strings you could mean, right now.
*.net splits will look just like a tcp stream disconnection. Basically just poll the connection to see if you are still connected to the server. And then you can have a reconnect function called when it detects a loss in connection to the server.
Replying to save cause I'm a shitty coder on mobile 
Good find, I haven't seen the last link or heard of the handles but I thumbed through the two code project links and took a look at their demo which opens IE outside of the form. I'll update any progress I do make if any at all. I figured it would be an ambitious project to undertake but the challenge is what makes it fun haha Thanks!
I had a similar annoyance. I was serializing some persistent application settings to a file, and I didn't like the fact that if you opened the file in notepad, quite a few plain text strings were visible. It was not a serious issue in my mind, but was a minor annoyance that I wanted to fix. My basic solution was to simply run the streams through GZipStream (using System.IO.Compression). Probably not the most elegant solution, but it was relatively simple and worked for me.
Windows forms, Math, Convert, String and List classes.
ASP.NET, ADO, Web API, WCF
I haven't used, nor seen used much Windows Forms in over 5 years.
I always go back and forth on that point in my designs and, to be honest, I'm not really happy with either (but I'm *more* happy with using abstract base classes). If you design your plugin API using interfaces, then you can't expand the API in a backward-compatible way without introducing new interfaces (implement IPlugin in a v1.0 plugin, or implement IPlugin2 in a v1.1 plugin). Not only is this a non-sustainable approach (are you going to have IPlugin523 some day? You will if you don't invest considerable effort in making sure each rev of the interface is comprehensive!), but it makes the host side of the plugin architecture more of a mess because you're constantly having to check and cast between interface types. But on the bright side, you enable much easier mocking and testing, and a very sharp separation between the code that comprises the host and the code that comprises the plugin. If you design your plugin API using base classes, you enforce a class inheritance hierarchy on your plugin developers that they *have* to stick to. The flexibility of your plugin API goes down because you're cutting off a lot of potential scenarios at the knees. (Does your base class inherit from MBRO? Should it?) But on the other hand, by having a base class, you can contain a lot of the complexity of down-level support within that one class and keep your host simple. You can provide default implementations if you want to offer a wide plugin API where a plugin author might only really want to add logic to small parts of it. You can offer functionality right in the plugin's execution space that might otherwise be unfeasible over some sort of plugin remote API because it'd be too chatty or too slow.
Linq.
Yes, as is, with the Abstract class and virtual implementations all the plugin author has to do is inherit from it and override the HandleLine method that gets called every time the bot receives a line that isn't from the Server. I pass it some Information about the user and they pretty much only have to think about their code since the command is normalized to the one in the config so you can just use a Switch on it. Also, I don't think you can define Events and delegates in an Interface just like that, can you?
No worries.
So do virtual methods. And as /u/drysart explained it requires more complicated code in Host and makes it easier and faster to develop plugins for since the developer doesn't have to worry about implementing methods that don't Change anything to him.
Looks nice, besides all the weird #if !NET_3_5 statements. I wonder how the performance is in comparison with [LinqToCSV](http://www.codeproject.com/Articles/25133/LINQ-to-CSV-library)
I also recommend checking out Josh Close' CSV helper. A super versatile library that allows for some advanced processing features such as custom type converters and partial object mappings both to and from CSV files.
An interface can declare events using separately declared delegate types, yes. The main problem I have with interfaces is that their versioning story is pretty weak.
Maybe someone could do a benchmark between this library, [LinqToCSV](http://www.codeproject.com/Articles/25133/LINQ-to-CSV-library), and [FileHelpers](http://filehelpers.sourceforge.net/).
Linq is a useful part of the language, but your answer is simply confusing for somebody who is learning C#. Although I love Linq and use it everywhere I am able to, it mainly acts on collections, so the rest of the situations are solved happily without Linq.
The book "Design Patterns" by Gamma, Helm, Johnson and Vlissides is usually considered the bible for design patterns.
I'm a newbie learning the ropes, should i concern myself with Windows Forms or focus primarily on WPF?
I used the 2nd method with controls :) Thanks 100 times for that, made my button work much more easy :) ### public void button_off(string set) { ### int set_number = Convert.ToInt16(set.Substring(3)); string label_name = string.Format("add_" + set); string pictureBox_name = string.Format("pictureBox_" + set); string groupBox_name = string.Format("groupBox_" + set); ### this.Controls.Find(label_name, true)[0].Text = "ON"; this.Controls.Find(pictureBox_name, true)[0].Show(); this.Controls.Find(groupBox_name, true)[0].Hide(); ### switch (set_number) { case 1: set1_show = false; add_set2.Enabled = false; add_set3.Enabled = false; add_set4.Enabled = false; break; case 2: set2_show = false; add_set3.Enabled = false; add_set4.Enabled = false; break; case 3: set3_show = false; add_set4.Enabled = false; break; case 4: set4_show = false; break; } } Works perfect :) 
If you're very new, just stick with the Console or use LinqPad PanelManager. If you really need to do client-side buttons and forms, WPF isn't any harder than Windows Forms from a design-first, event-handler logic driven (e.g. default design) perspective.
 Enumerable.Repeat(item, 1); There you go. Now you can use LINQ on everything else. ^^^\(just ^^^kidding)
Ah, you will get the error if you had written: String b = "Sup!" + a.ToString; but as you've pasted: String b = "Sup!" + a.ToString(); It compiles correctly and works as expected
ohhh, sorry, yeah I didn't realise that pressing compile would remove the error message, my bad.
No probs, anytime mate.
On my machine it compiles and works as intended (and fails as expected when inputting a non-numeric string). I would of course clean up the code (you need only using System; - all others are unnecessary), and I would probably use Int32.TryParse instead of Convert.ToInt32 - to avoid exception.
Where is the Linq in LinqToCSV? Isn't that just parsing a file then using Linq to objects?
Pretty much.
If you have an error and you think you've fixed it, hit F6 and rebuild your solution to see for sure. 
I use Windows Forms daily at work; the product is a B2B application. It is still out there.
No question. Keepass, an app I use daily, is WinForms and will likely never change. I help maintain a legacy MFC app and there are thousands more still out there. I'm taking about new development.
ctrl + shift + b Good stuff :) 
That's not a *.net split btw ... *.net split are a loss of Connection between the Servers of the Network.
Has anyone used this before? I'm curious as to what level of c# you need to be for this to benefit you
Thanks!
Thanks!
It looks like you're using VS2012 or 2013. I use 2010 but I imagine the fundamentals are still the same. For a forms application, there are really 3 main code areas you're concerned with. the program.cs file is the main entry point for the program and it pretty much just launches your forms application. There is a forms.designer.cs file filled with code generated by the VS UI (like if you drop a button onto your form, code would be added in this file that actually creates the button and sets the attributes to values you assign in the properties window.) The last bit of code (and probably the segment you're after) is the form.cs file (or Form1.cs in your particular cas.) This is where code is written when you program events and other program logic (like when you double click on a button and it creates a method stub, this is the file where that happens.) You can access the last two files I talked about by locating them under 'Solution Explorer', right clicking them and selecting 'View Code.' Does that help? If not, take a few screen shots of the greyed out pages and let me see them. 
Double click either on a button or a checkbox, this should give you code behind that control.
Having used both iTextSharp and other libraries, the best API I've used to generate PDF files is PDFsharp. PDFsharp is also under a BSD style license, whereas iTextSharp appears to be straight-up GPL. If GPL is your thing, more power to you, but with the Affero license, you have some openness requirements to conform to.
We use iText in a Java application. Works great.
Yeah, also use PDFSharp. Really nice PDF library
I'm not sure what your question is, but if I look through the course syllabus it looks like [topic 13] (http://www.csulb.edu/~hchuynh/is340/Topic%2013-WindowsForm-part-III-b.pdf) is pretty much what he's asking you to do. I would start with that project and modify it to meet the requirements of your assignment. The hotel reservation demo isn't much different from the coffee shop i.e. IrwinHotel.cs is like the order and ReservationSummary is like the cart.
This is a terribly executed cry for help. You should try harder -- not just at your final project (that as well, more on that in a second), but at asking for help with your project. I understand you're a student, and a beginning student at that. That is not my beef. But this is what I see: * Final project. So then there's been others right? I'm guessing there was at least a first project, and then probably a few ones in the middle there, before you got to the final one. * You have an A on the class, which presumes that you got As on the projects that you did. I dunno. Maybe you aced the tests and the projects didn't count for much. I guess. Could happen. * Oh yeah, and your teacher doesn't like you. * You give absolutely no indication, anywhere in your request, that you understand the what an XML file is, or that you don't "call from" an XML file, or even that you understand what problem you are trying to solve. * You don't ask a cogent question. If you asked something like, "I'm having trouble iterating through a list of nodes from this DOM", or "why can't I get this price to change when I update the quantity field" then you know, you'd show that you're at least trying to pull your weight here instead of, you know, trying to get someone to do your homework for you, which is kind of what it looks like (nobody is saying that you are trying to get us to do your homework for you...wait yes, yes I am. ME. saying that). * The assignment PDF was clear, concise, gave you some (hopefully unnecessary) google tips, prof seems like a good guy. So that's what I mean when I say try harder at asking for help. Thank you.
Not pissed off at all. The internet is not the serious business that some would have us believe. Here's my advice to you: *Start* I know, that's underwhelming isn't it. Let me take it a bit further. *Start with one tiny thing you're not sure how to do.* So for example. You know how to make a form display, right? You know how to make that form display some rows of information? Ok so do that. Do you know how to create an array of strings, preload the strings with test data, and have those strings display on the form (one row for each string)? If not, start there! Ok so now you've just gotta replace that mockup data (the preloading the strings with test data) with data you've got in an XML file. Just make a simple xml file that's just &lt;testdata&gt;&lt;text&gt;string1&lt;/text&gt; &lt;text&gt;string2&gt;&lt;text&gt;&lt;/testdata&gt;...make your program read in that file and display string1 on row 1 and string2 on row2. Make that work. Now it's time to build up the complexity. Make your XML file hold more information--item,price,taxable ... make your form display it. You're getting there. You may think that in order to program, you need to have sort of a grand plan of how it all fits together before you start. And actually, you know, you kind of *do*. But not now, that's for when you get good. For now, just *start*.
Which then results to every connection to said server being dropped.
Why would it?
because since the connection is made to each server, then the server disconnects from the network, each connection to said server would also be disconnected from the network.
Have you written any code for this project? Can we see what you have so far?
There are so, so many ways to get data to and from XML in .NET. I hate to be that guy, but honestly, some very simple Google searches should give you a plethora of information. Even if you don't understand it all, use it to get a technical plan of attack in order, then come back when you have specific questions. I don't mean to be harsh, but you will never be a successful engineer if you don't learn to be resourceful, and this honestly doesn't require a ton of looking to get answers on.
Outside of simple control flow statements: Linq, Lambdas / anonymous delegates, Task Parallel Library, ASP.NET MVC, and WCF - for me, in that order. I use most of those every day.
You can keep a running average without having to maintain the entire array being averaged. You just need to keep the count of the number of items currently in the average. The author's average operator would get very expensive over a large number of elements. Input | Ct | (in-avg)/ct | Avg ------|----|------------|----- 4 | 1 | (4-0)/1=4 | 4 5 | 2 | (5-4)/2=.5 | 4.5 4 | 3 | (3-4.5)/3=-.166 | 4.333 20 | 4 | (20-4.333)/4=3.917 | 8.25 5 | 5 | (5-8.25)/5=-0.65 | 7.6 You can extend this concept to weighted average by instead of dividing by ct, multiply by new-item's-weight/new-total-weight
Of course, for reading CSV there is also [Microsoft.VisualBasic.FileIO.TextFieldParser](http://msdn.microsoft.com/en-us/library/Microsoft.VisualBasic.FileIO%28v=vs.110%29.aspx)... but then again, a lot of C# developers seem to be afraid of that namespace.
From the link: &gt; If you are a .NET oriented web developer who is curious to find out what lies beyond the Microsoft provided frameworks, then this book is for you! It‚Äôs beneficial to have a good knowledge of C# and .NET, as well as a basic working knowledge of HTTP. If testability is important to you, and you‚Äôre looking for a lightweight, code focused approach to building web applications, this book offers you all the guidance that you will need.
I'd be really interested in a comparison to FileHelpers. I use it a lot; particularly as it's hooked in to RhinoETL.
I've used it. Unless you don't have a requirement to run on Linux (Mono) you're better off with MVC5+/WebApi2+ in my opinion. They advertise it to be "lightweight" and "can run with just a few lines of code". You can do same thing in MVC3-5, create empty project, add Global.asax and run your controllers. In MVC5 you don't even need to define your routes, just enable attribute routing. I think argument "you can make it up and running using 3 lines of code" is just as stupid as "you can create a blog under 5 minutes". It doesn't tell anything about the framework IMO. **Good** - Runs on Linux (Mono) - Great for small projects - More dynamic than MVC (if you need that) **Bad** - More dynamic than MVC (means it's slower, still faster then NodeJs tho) - Large projects get messy pretty fast (subjective) - Many modules that you plug-in are out of date since they are not updated as rapidly as Nancy itself - AFAIK async support is not as good as MVC5
Thanks for the info. I've heard a lot of good things about MVC. With my limited abilities it seems there's way more support for it if I run into a snag. 
&gt;With my limited abilities it seems there's way more support for it if I run into a snag. Yes, everyone who knows something about C# most likely knows something about .NET MVC as well. But Nancy has [chat room](https://jabbr.net/#/rooms/nancyfx) that is pretty active, they help a lot of people there.
When you remove the item from the listview it will no longer be selected. So just switch the two lines: contactList.RemoveAt(contactListView.SelectedIndex); contactListView.Items.Remove(contactListView.SelectedItems[0]); 
It looks to me like you are trying one too many times. If you empty out the list and then try to delete item 0, there won't be an item 0 and you'll get that exception. A simple fix would be to check the number of items in the SelectedItems array before doing the Remove. Since you didn't show us all your code, I can't make any suggestions beyond that.
Yeah, that makes sense. Thanks for the help.
Is "someNumber" a constant value? If so, the compiler may be "unrolling" the loops as an optimization. If the value of the index of the row reference can be known ahead of time, it's faster to repeat the code with the fixed row index value than to perform the computation over and over. Whereas using "offset++" requires that the running program look up the value then compute the new value, then assign it back to the original variable. This is slower than a static value. What makes a program easy for humans to understand is not necessarily the most efficient means of accomplishing a task.
Assuming that someNumber can vary, then the other difference here is that "offset" is a variable which must be stored in memory (RAM), while the calculated index results is stored in a CPU register long enough to use it then throw it away. Saving the result to RAM (moving the value from a register to the stack or the heap) costs more than performing a few simple calculations and then discarding the result.
Have you designed your classes so that they can be de/rehydrated or are you serializing a graph? If you're going the latter route, you could do worse than using Protocol Buffers ([protobuf-net](https://www.nuget.org/packages/protobuf-net/)). You're currently using XML so you already have.
My thoughts are to: 1) Use a database 2) Break up the 6 MB file into several smaller files.
This question you've asked is too broad to give a thorough and concise answer. For one thing, there are many competing goals of serialization. For example, you want files to be as small as possible, but you also want the serialization/deserialization process to be robust. You can write out the bits of a class's data to a file and get a very small file size, but reading the data back out of the file will be highly error prone. Likewise, you can use XML serialization to get very high reliability, but at the expense of a lot of extra data in the file. Another factor is human readability. If you want your game to be mod friendly, you may want to keep the data in a format that is (at least somewhat) human readable. The result is that there is not "best" way to serialize data. If there was, we wouldn't have a bajillion different ways to do it in the first place. It's also hard to say whether 6mb is even particularly large. I don't have any games installed on this machine to check, but IIRC it's not terribly uncommon for save data in complex games to reach into the dozens of megabytes per save. You should do some research on what's available, and pick something that works for you.
I would use a CSV formatted kind of like a database table, you just have to make sure your delimitor is not one that would be found in the data you're dealing with. 
1. Why would reading bits be error prone? Do our machines actually make mistakes at this level? 2. The 6MB is a figure I compare to the game I'm emulating. A map of thousands and thousands of tiles, is only ~7MB. The map I saved was much smaller and about the same size in MB's. This data doesn't need to be human readable, since its purely the raw tile data. Other information, like sprite categories, and all the game data, should be. Suppose each time had only 4 values. A data value, an x, y, and z. The data value can be either a string or int. If I gave you that information, could you guess at what would be an 'acceptably good' way of saving and loading the information?
1. I planned on using a database to store player information, which would probably be in the hundreds of megs, or even gigs. But tilemap data shouldn't exceed.. 20MB at most. 2. Why does breaking up the file increase readability? (I assume)
De/rehydrating? I'm not sure what you mean by that. I've set the classes so that all the information can be xmlserialized out into the xml file, directly from the object and its sub-objects, and then reverse the process for the read. I'll read up on protocol buffers when I get the chance. Ty. 
Another term for serialization/deserialization of objects. If your graph is serializable, protobuf will generate vastly terser representations of it than an XML serializer will.
From your last paragraph it seems like CSV format would be worth considering. [This article](http://typecastexception.com/post/2013/09/25/C-Query-Excel-and-CSV-Files-Using-LinqToExcel.aspx) covers some of the details and shows how straightforward it can be. I also recall some C# projects on GitHub and some Code Project articles cover reading CSV files, sorry I don't have the links to hand. EDIT: Found [another article](http://procbits.com/2010/10/11/using-linq-with-csv-files) which might be more directly focused on your needs.
I ended up just re-installing the program and it took care of the problem. Thanks for the advice though!
&gt; Why would reading bits be error prone? Do our machines actually make mistakes at this level? It's not error prone at the computer level. Rather, it is error prone at the programmer level. If you serialize a class as nothing but the bare bits that make up its data fields, you will have no warning if you accidentally try to deserialize data from the wrong file, or if you somehow get your stream position misaligned and start reading one byte off, etc. &gt;The 6MB is a figure I compare to the game I'm emulating. A map of thousands and thousands of tiles, is only ~7MB. The map I saved was much smaller and about the same size in MB's. Depending on the age of the game, it's not terribly unlikely that the original game's programmers went with the bare minimum bits to a binary blob method. There's nothing inherently wrong with this method *as long as you are very, very careful*. It used to be that disk space and IO speed were absolutely premium commodities. These days, the former is dirt cheap, and the latter, while still often a bottleneck, is fast enough that it is often worth taking the more robust and "fast enough" solution. In fact, it wouldn't be a bad idea to open up the original game's file (first in a text editor, and if that's unintelligible in a hex editor) and see if you can figure out how they're doing it. &gt;Suppose each time had only 4 values. A data value, an x, y, and z. The data value can be either a string or int. If I gave you that information, could you guess at what would be an 'acceptably good' way of saving and loading the information? This is more of a personal or small group question. If you're working on this game with other programmers, you should all talk about the alternatives and choose one that you can all work with. If it's just you, then you should have the same discussion with yourself. XML, CSV, binary, SQLite (or another local DB solution) are all possible options. I agree with madman that CSV might be a good mix of compactness and simplicity. That said, you might also look to see if you can optimize your XML serialization. If all you are serializing is a set of data structure containing those four values, I would expect that the XML would already be relatively compact. If you're seeing an order of magnitude difference in size per tile, chances are your XML could be more efficient.
*cough* [Newtonsoft.Json](http://www.nuget.org/packages/newtonsoft.json/) *cough* You can serialize things just as easily as with XmlSerializer, it supports dictionaries (if I remember correctly), and JSON is **much** smaller than the equivalent XML. The only thing I'm not to sure about is the speed. I think it performs about as well as XmlSerializer, if not faster... but don't quote me on that one.
The idea behind breaking up the file is to reduce what needs to be loaded into memory at all times.
First off, thanks for taking the time to write this. You have no idea how grateful I am to people like you, in this wonderful community. When you mention that I should be 'very very careful', I'd only have to be careful that my read and write methods are correct, right? Because once I have the data in memory, its not in bits anymore, its back to an int array or whatever. Right? Also, I think xml is very wasteful, considering how much data I have. I mean, if I have 1 int and 3 floats for each tile, then I'm going to have almost as much meta-data in the xml file, as actual data. Thats why I'm considering other methods of storage. I'm going to explore some of these ideas, and I'm already looking forward to tomorrow. Can't wait to try some of this. 
That regex works... you can test it [here](http://gskinner.com/RegExr/) heres your problem: Regex.Replace(s,s,s) returns a string so var replacedStr = Regex.Replace(word, @"[^\w\s]", ""); should work nicely.
&gt; When you mention that I should be 'very very careful', I'd only have to be careful that my read and write methods are correct, right? Because once I have the data in memory, its not in bits anymore, its back to an int array or whatever. Right? Right. Unless there's a library I'm not aware of, to go the binary blob route means you are going to be directly reading and writing bytes from a stream. When writing that code, you have to be very careful that you are reading and writing the correct bytes. As long as you don't make any mistakes, this will probably give you the best file size and the best speed, since binary parsing is quite a bit simpler than text parsing from a computation standpoint. The tradeoff is that you are exponentially more likely to make mistakes with this method vs. practically any other method of serialization. Personally, I'm not really opposed to binary serialization, but you better have unit tests to verify that everything works. &gt;Also, I think xml is very wasteful, considering how much data I have. I mean, if I have 1 int and 3 floats for each tile, then I'm going to have almost as much meta-data in the xml file, as actual data. Thats why I'm considering other methods of storage. It is wasteful. But it's also safe. The nature of C# tends to attract developers who prefer to err on the side of safety though, so you're unlikely to find many people here who tell you that direct binary serialization is a great idea. That doesn't mean you can't do it anyway though.
See I always use JSON.Net, it always has some sort of something in there that lets you do a thing.
you don't need to read an entire file into memory, you can just read part of it into memory. That is, after all, why we use streams to represent files.
You had 1 problem. Then you used RegEx. Now you have 2.
As adam8797 said, [`Regex.Replace`](http://msdn.microsoft.com/en-us/library/xwewhkd1.aspx) does not alter the string directly, but rather returns new altered text. Looks like your problem is solved. Just in case you need further help with C#'s use of Regex, check out [regular-expressions.info](http://www.regular-expressions.info/dotnet.html). The site has simple tutorials on how many languages implement Regex. Well, as simple as Regex can be, I suppose. Disclaimer: I'm not associated with that site in any way. I just find it incredibly helpful.
* The compiler automatically translates the plus sign concatenations in Append() methods to chained Append() methods. * The compiler automatically translates the concatenations using plus sign to use StringBuilder. Only time the compiler will not convert plus concatenation to StringBuilder is when the concatenation is done in a loop. Who claimed that? First time I heared such nonsense. **Edit:** Well, I was told Java does something like this, so for a Java programmer this probably does not look like nonsense at all.
Agreed, the author wasted the readers time on supposedly common myths that sound more like his/her own misconceptions.
I'm not sure this will work with the free version of Unity. Looking into it. Thx. 
I am sorry that you felt I wasted your time. I use my blog to share MY mistakes and solutions, so I guess you are right when you said his own misconceptions. I started with Java where string concatenation is indeed converted to stringbuilder in compile time. I felt obligated to provide links so here they are (Yes they clearly says Java and I know) http://docs.oracle.com/javase/specs/jls/se5.0/html/expressions.html#15.18.1.2 http://stackoverflow.com/questions/4648607/stringbuilder-stringbuffer-vs-operator http://stackoverflow.com/questions/7586266/is-chain-of-stringbuilder-append-more-efficient-than-string-concatenation Again, I know the links are for Java. But I for some reason thought these applied to csharp. I am sure many have also. I will also update my article to include these links and explanation that these misconceptions came from Java. Thank you for helping me write better articles. 
I'd be curious to see how much actual difference there is between stringbuilder and just using +. I use + pretty much exclusively, and have never seen a performance hit. Admittedly, I don't generally do millions of string concatenations at a time.
Thanks for your respond. You could update your blog post to include the comparison with Java so that non-Java folks like me can see where those thoughts come from. 
You're using String.Format wrong. You can see an example of how it's used [here](http://msdn.microsoft.com/en-us/library/txafckwd.aspx). I would suggest looping over the items in the list, and using a [StringBuilder](http://msdn.microsoft.com/en-us/library/system.text.stringbuilder%28v=VS.100%29.aspx) to create the output. 
Just wanted to update this thread. I tried xml, csv, and binary files. Same test with X tiles: Xml: 16KB Csv: 6KB Bin: 8KB I read up on why Binary might be bigger than CSV, and you are all correct. Binary is probably not worth messing with. CSV seems clean, simple, and all around-perfect. Also, using CSV, each tile is AT MOST 50 bytes, so I can store 100,000 tiles in 5MB. Which is absolutely perfect. Thanks again everybody for your help!
First: People.ToArray() gives you a list of object Person in an array. You need to create an override ToString method on Person: public override string ToString() { return String.Format("{0},{1},{2}", firstName, surname, job); } Second: There's really no reason to use a StreamReader here since you're parsing a file line-by-line. The File.ReadAllLines method is your guy: foreach (var line in File.ReadAllLines("somefile.txt")) { var lineSplit = line.Split(','); var person = new Person { firstName = lineSplit[0], surname = lineSplit[1], job = lineSplit[2] }; people.Add(person); } Finally: If you're looking to output all of the people as a single string, you must either use a StringBuilder and iterate over all of the Person in your People or there is some LINQ that would probably help: Console.WriteLine(String.Join(",", people.Select(p =&gt; p.ToString()).ToArray()));
Yeah, I realised that I was trying to format a list of objects as a string. So I found a much simpler solution to just loop through the list and print out each object like so: foreach(Person p in People) { Console.WriteLine(p.firstname + p.surname + p.job); }
This blog post was worth reading just to discover Eric and Joel's excellent pontifications on the Schlemiel algorithm!
Isn't it weird calling `SetItem` on an immutable collection? What about read performance? That's the whole point of having goddamn immutable collections in the first place - concurrent reads. I think OP missed the point of immutability completely.
One way to improve the performance of `SetItem` would be to set the capacity of the collection. Not sure how well that would work.
I don't know if there is an official rule on job ads, but I would like to chime in to express my distaste for them. There are already dozens of other ways for people to seek employment. This subreddit should be a developer community, not a job board.
Unless your company has offices all over the world or they finance relocation, it would probably only be interesting for a small portion of users here.
Are you interested in an intern? 
There are some things that you may want to clean up in your code, this accomplishes what you are looking for using constructors, usings, and string.format. Check out the comments for more explanations public class Person { /// &lt;summary&gt; /// Person Constructor /// &lt;/summary&gt; /// &lt;param name="firstName"&gt;Passed in first name, which will be set to the Person object's first name&lt;/param&gt; /// &lt;param name="surname"&gt;Passed in surname, which will be set to the Person object's surname&lt;/param&gt; /// &lt;param name="job"&gt;Passed in job, which will be set to the Person object's job&lt;/param&gt; public Person(string firstName, string surname, string job) { // maybe you want to do some validation on the things that are passed in if (string.IsNullOrWhiteSpace(firstName) || string.IsNullOrWhiteSpace(surname) || string.IsNullOrWhiteSpace(job)) throw new ArgumentNullException("Arguments must all be defined"); // this refers to the property within the object this.firstName = firstName; this.surname = surname; this.job = job; } /// &lt;summary&gt; /// An alternate constructor, which handles the splitting and validation inside of the person object /// &lt;/summary&gt; /// &lt;param name="lineItem"&gt;the line from the text file&lt;/param&gt; public Person(string lineItem) { // validate this is not blank if (string.IsNullOrWhiteSpace(lineItem)) throw new ArgumentNullException("lineItem cannot be null or blank"); // verify line item contains a comma if (!lineItem.Contains(',')) throw new ArgumentException("lineItem must contain ','", "lineItem"); // split into lineArray string[] lineArray = lineItem.Split(','); // make sure we have enough vars if (lineArray.Length != 3) throw new ArgumentException("lineItem must split into 3 fields", "lineItem"); //assign this.firstName = lineArray[0]; this.surname = lineArray[1]; this.job = lineArray[2]; } public string firstName { get; set; } public string surname { get; set; } public string job { get; set; } /// &lt;summary&gt; /// override the default ToString with a custom method to display in the format you wish /// &lt;/summary&gt; public override string ToString() { return string.Format("{0},{1},{2}", this.firstName, this.surname, this.job); } } public class Reddit { public static void populateList() { // initialize your list List&lt;Person&gt; People = new List&lt;Person&gt;(); // lets make sure a file is there if (File.Exists("names.txt")) { // open your streamreader with a using statement, this will dispose the resources when completed using (StreamReader sr = new StreamReader("names.txt")) { string lineItem; // read the line, assign it to lineItem // if the line exists, lineItem it will not be null // peek is an expensive command, it should not be used while ((lineItem = sr.ReadLine()) != null) { // use a try in case there is dirty data within the text file try { // instantiate a new person by calling the lineItem constructor // add to the people list People.Add(new Person(lineItem)); } catch (ArgumentException ex) { Console.WriteLine(ex.Message); } } } // when this line is reached, the memory from the streamreader is disposed // print everyone to the console for (int i = 0; i &lt; People.Count; i++) Console.WriteLine(People[i].ToString()); // stop Console.ReadLine(); } } }
Have you looked at pluralsight?
I have. I'm uncertain if that's what I'm looking for. I might do their trial, but it is still not a walkthrough of creating a full program, even a basic one. That would not justify $30 monthly to a company I have not heard of before this week, so it's a tough sell. I'm wanting something hands on, more than just getting very generic examples like public static void DoSomething() { //DO SOMETHING } It's sort of like wanting to be able to work on a car, but the information available is how a transmission works rather than doing things TO the transmission. :) The above-mentioned RPG tutorial helped because it put things in terms I could understand by example. The tutorial created a hero class, a monster class, spell classes, etc, so the example above gets replaced by: public static void FireBall() { Console.WriteLine("You are seared!") } ...and it works, because I suddenly see the puzzle pieces for what they are. I can wrap my novice head around that. I know the larger picture of what is supposed to happen, so now I have an objective to go after. 
You say that like Regex is inherently a bad thing.
In general, I believe that to be true- though there are specific cases where RegEx's are appropriate. However most of the time they are simply not the right tool for the job, and on top of that they are very difficult to maintain/debug if they are not exquisitely commented (which they rarely are) and they are usually much more heavyweight than a procedural alternative. In particular- they often get used as a poor man's lexer/parser and there are far better solutions for those patterns.
pluaralsight has a ton of walkthroughs. You just have to do them at the same time the presenter is doing them. Anytime I do something on pluralsight, I follow along with visual studio and always end up with a complete program
great thanks everyone. I figured out couldn't hurt to ask.
I don't knew if they're looking for interns. you can certainly email HR. I haven't met any since I've worked there. 
1. Clone a copy of the RedditSharp Repository (or download the zip file). 2. Open the solution in VS and compile. 3. Copy the RedditSharp.dll to your own project's directory. 4. In your own solution, right click on your Project and click Add Reference. Browse to where you put the RedditSharp.dll file, and click OK. 5. Wherever you want to use RedditSharp, put 'using RedditSharp;' at the top of the file (with the other using statements), and just init a new Reddit object. If the project has a Nuget package, you can replace Steps 1-4 with 'Right click, add Nuget Package, search for/install the correct package' 
I can only give basic info now, but it's simple: Get the redditsharp DLL. In your project you need to add a reference to that DLL. Really just search for "how to add reference visual studio, etc etc" Once you have the reference added you will be able to see it pop up in intellisense. See his examples, I'm sure it's RedditSharp.[something] Good luck.
I've had really good luck with csharpdemos on youtube, he does pretty good work. Quite long video series. There are quite a few good ones on youtube.
Im starting to work with PdfSharp and I'm running into the issue that it does not like to work with 2008 SSRS reports.
I also started on learn vs .net to learn the language. I personally found it great but it didn't go into some points in depth enough for me to understand properly. Right now I use a combination of pluralsight and apress professional c# any time I need to reference anything and it's helping me. There is a really good c# video series by Jon skeet. Pluralsight is more geared up for people who already know how to code and want to get up and running on a skill quickly in my opinion. The examples are contrived so not what you have asked for but they are detailed enough that I manage to implement them in projects of my own devising.
Just had a second look and noticed that the code in the artical is about keeping an average of the last N items, rather than all of the items, in which case I don't have any problem with the code used. 
Is there a way to set capacity on an immutable list or dictionary? I don't see one in the MSDN docs, and my limited understanding of the way immutable collections are commonly implemented makes me think that "capacity" probably doesn't even apply.
Gonna check this out when I'm at my computer again :)
Now that makes me want to use Azure, but I don't know what for :D
Hmm, that still doesn't explain why it worked with others...
If my secret Santa is reading, this would be a nice gift.
*Classes are reference types; structures are value types.* Remember really what you're learning is .NET. C# is just the high-level tool you're using to manipulate .NET around. If this doesn't make sense to you, then you need to take a break from C# syntax and take a step back. If you have experience in another language like C or C++, then you may find [this helpful](http://www.charlespetzold.com/dotnet/), I recommend it a lot even though it is very out of date. It's not a big deal that it's out of date; everything in there really still applies, except for the versions of stuff that he tells you to download, and he references VS2005 a lot. But don't worry about that. The fundamentals are the same.
Or he can change his string.Format() to string.Join().
Congratulations on the new job! There's so much you're going to learn about C# and what you can do with it, just take your time and remember that there's almost always a library that already solves what you want to do. If you want, I can hook you up with a copy of my book C# Smorgasbord ( http://www.amazon.com/C-Smorgasbord-Filip-Ekberg/dp/1468152106/ ), just send me an e-mail at mail@filipekberg.se. That is if you like books of course. I can also give you a week trial for a Pluralsight account, there's a bunch of great courses on there that will really get your deep into C#, I have a course on MSIL for the C# Developer, it teaches you what happens when C# is compiled and how to take advantage of that. Just let me know if you're interested :) Good luck on the new job!
What are you using to display the graphs ? WPF ? Winforms ? Html ? 
Not sure what else you've looked at, but you might check out Channel9: http://channel9.msdn.com/ 
Here you go [Link](http://www.c-sharpcorner.com/UploadFile/mahesh/gdi_plus12092005070041AM/gdi_plus.aspx)
Have a look at itextSharp. It is the best documented pdf creation library and is pretty fast although it has some quirks, for making larger pdf I had to create several smaller pdf and then join them to get the format I wanted.
I am in the same boat. This Azure stuff looks so cool, but I don't have anything that can use it right now.
Are you into Minecraft? Because then I might have something.
Thanks a lot, I'll look at it. It seems pretty good.
Winforms.
90% of work done in applications is acting on data, and in most cases, that means collections of some sort. If you find yourself doing a lot of loops with conditionals, you could probably refactor to an equivalent linq statement. Does that simplify learning C# as a language? Not for the basics, but it's one of the best features of the language that will provide a lot of benefit later on. 
Start with any C# tutorial. Once you've grasped the basics, learn LINQ. Many people recommend a book like "Essential C#" which was co-written by guys who worked on the language. Unless you're writing something specific like games, 90% of applications these days is working with data. That means databases and web services. If you already know SQL, get into Entity Framework (which is where LINQ skills will shine). For web services you can get in WCF. Finally, regardless of your platform, start looking at ASP.NET MVC. Even if you've never done web development before, you'll need to think about doing it because Windows 8 apps are shifting towards the HTML/Javascript model. 
A quick google search (https://www.google.co.uk/#q=itextsharp+fill+form+fields+on+existing+pdf) seems to say yes
This was just posted the other day and should be a great start: http://typecastexception.com/post/2013/12/02/C-Generate-and-Deliver-PDF-Files-On-Demand-from-a-Template-Using-iTextSharp.aspx
&gt; 1) You use structs for performance when stored in arrays. (see also When are structs the answer?) This is a consequence of structs being value types. &gt; They behave different from "normal objects" (reference types) under assignment and when passing as arguments, which can lead to unexpected behavior; this is particularly dangerous if the person looking at the code does not know he is dealing with a struct. This is a consequence of structs being value types. &gt; Passing structs as arguments is more expensive than classes. This is also a consequence of structs being value types. 
I'm not entirely sure what you mean by that. You shouldn't need a PDF library for SSRS, you can just export reports as PDF. At that point, you'd use the report designer to handle any fancy graphical stuff. If you're trying to embed a report, there might be some stuff you can do, but I honestly haven't tried it. The first thing I'd look into, however, is a webservice call to get the exported PDF and experiment with that in PDFSharp.
Just wanted to say, this is super nice. I'll have to buy your book since I am also starting a .NET job.
They are fairly basic but by no means obvious or trivial. When you start working with LINQ to a greater extent you soon realize how few bugs you write. Simple things like: this.anEnumerable.Any(x =&gt; /*Some condition..*/); The alternative (foreach loop) bloats your code and prone to silly mistakes. . 
http://ayende.com/blog/164740/immutable-collections-performance-take-ii He explains his needs better in a follow up post. The future list of posts hints that he takes a different direction based on their needs. Possibly something using versioning instead of immutability. Still, O (log n) for *sequential* reads is too slow for very large data, when the same operation on a mutable collection is O(1).
Learn how to test your code properly, search for 'c# test driven development tutorials'. The industry uses this a lot
Well said. Probably the one I use the most.
Fight smarter not harder and don't allow best practice and other OO terms you've had beaten into you head from schooling detract from whatever it is that you're trying to build. Also, I'd recommend building library that you use for handling input and logging output for the programs you build at this company. I have one that will selectively write to the console, a text file, send emails, read xml files, etc and I use that same library in every one of my programs. Keeps me from re-inventing the wheel and makes it easy to trouble shoot when something goes wrong. 
If you don't know it already, cram SQL and read about SQL injection attacks. Skim through ADO.NET (System.Data) examples and System.Collections.Generic.
1. DO understand that you know nothing. 2. DON'T think that you know everything, even if it seems right. 3. DO understand that you will always know nothing. * Get to know .Net frameworks ins and outs. * Learn how generic classes and methods work. You'll probably end up creating some of your own. Even if you don't, you'll probably end up using some library that does. * For the love of all that is holy, learn LINQ. Also know that if you *really* need speed then avoid LINQ. * Use NuGet. * If you can get ReSharper, do so. It will hint at code changes to make things more efficient.
Isn't this an example of an anonymous delegate? For example, one of my applications uses this sort of delegate on a winform. When that winform closes, this code re-opens it (it's supposed to always be open). If I ever needed to re-assign the event to a different delegate, yeah I would obviously need to (different types of weapons in a video game, you could use a delegate to switch between them on keypress or something like that) but would what I'm doing be considered bad?
&gt; If I ever needed to re-assign the event to a different delegate, yeah I would obviously need to That's the case that I'm talking about, otherwise it's great
WHEW! Panic mode whenever someone else looks at my code. At our office, I'm the only one that touches my code and as long as it passes the requirements set down by my boss, he's fine with what I create... but then when I do personal projects and put them up on git people can cause me to hyperventilate with what I do wrong!
Learning to spell "industry" is key... #rimshot - Sorry, I'll see my self out...
&gt;The alternative (foreach loop) bloats your code and prone to silly mistakes. . I think this is a gross exaggeration for any non-trivial iteration of a collection. A foreach adds two lines (one for the foreach and one for the closing "}"), other than that, everything else is going to be the same between the two. Can you provide examples of silly mistakes that can occur with a foreach? I'm genuinely curious because the ones I can think of are for for loops and not foreach loops.
For this particurlar example it will add some local state. In general more state implies more chances for you to mess something up. I agree with you though, my original statement might have been exaggerated. I should probably have stated it in more neutral manner. 
Thank you, I hope you enjoy the book and that it helps you at your new job! I'd love to hear about it! If you want, I can hook you up with a week trial of Pluralsight? If you want that, just send me an e-mail.
Sure, that'd be great. Thanks. :)
If you can, find a mentor or someone who might be willing to at least do code reviews. Tut's are great, but they only show you one way and sometimes don't explain the who's what's and whys like a person can. You may initially get a lot of "what are you doing here" and "why are you doing it that way, there is an easier way", but that's where you'll learn...
&gt; Also, in industry, what are some key points I should look into in terms of C# - anything from cool libraries through to Do's and Don'ts? **TL;DR**: Ask questions, document and test everything, look to other professionals in your area for guidance, learn to speak confidently, and in a few years make sure you're where you really want to be. Welcome to the industry. If I had to start over again these are the types of things I would do to make sure I have a good job in 5 years or so. This advice also takes the perspective that you don't really need to learn the nuances of a 'language' what's important is learning the patterns that can be used in all languages. These first recommendations are things to do on the job: **First**: ask tons of questions. One of the biggest downfalls of developers of all skill levels is making assumptions about what the program is supposed to do instead of asking someone who knows. Find an edge case? Ask some questions. Don't know what a co-worker's function does? Fire off an e-mail or go ask them (depending on the culture of the office). **Second**: Document and test everything, especially as you're learning. If it takes you more than 5 minutes to figure out a screen of code, add comments explaining what's going on. If you have to step though a function more than 2 or 3 times to figure out what's going on, create a handful of unit tests to run though things and verify your assumptions. I've never seen a project with too many good unit tests or comments, be the person on your team to write them. Next are things to do outside of the job: spending a few hours a week working on your career outside the office will help you build up your skills and network in ways that you couldn't do at work. **Third**: Find a professional group in your area. The ".NET users group" is one that's free and available in most areas. Try to go to about 2 meetings like this a month. This will introduce you to a lot of patterns and techniques that experienced people think should be used more. Learn more about these techniques, try to apply them to your work. Additionally this has added benefit of giving you a chance to meet other people in your city who are actively trying to get better at programming. **Fourth**: If you have time on top of this join a Toastmasters group. This might not seem important to programming at first, but bear with me here. It will make you more comfortable in various aspects of you job, like leading a meeting, asking questions, and interviewing. Additionally if you can get good at coding and speaking at the same time, or coding and diagramming on the whiteboard at the same time, it will be a valuable skill. Plus the more confidently you speak, the smarter people will think you are. It might not seem fair, but it's true. **Finally**: For the next couple of years you're going to be happy just showing up and getting paid for programming. After two or three years step back and find out if you're really where you want to be. In two to three years you should be making at least 25-50% more than you are now; is your company giving you these raises, have you had to fight for them? Are you getting the mentorship you want? Do they respect your personal time or are you putting in 14 hour days? Do you get enough different things to do? Are you being pulled in too many directions? Figure out what you want, and if your current job isn't giving it to you this is the time to step out and find it. 
Grab a book on MVVM and MVC. The sooner you learn dependency properties, ICommand and data binding, the better you will be off.
I gotcha. Its just good to get other peoples eyes on your code in my opinion, but hey, if it works it works!
Oh, all eyes are on my code. Plus the internet helps, I can always break out my code that I know is causing the problem and ask questions even if I can't post the source directly. Especially here people are really helpful.
&gt; If you have experience in another language like C or C++ On the off chance, know of a good resource to go the reverse (C# to C++)? I'm interested in learning more about C++ (possibly). Or will the book you linked suffice? Just curious.
Be careful of the licensing limitations if you decide to go with iTextSharp
You still need an if statement and a break to achieve the same result. Now the real gain is that .Any is a library call so others can quickly digest its meaning. An expanded foreach statement takes more time to read.
I am amazed noone has stated the freakin' obvious - Learn the business you are in, become a domain expert. whether it's Identity Management or Chicken Processing, learn it backwards. You'll write better code when you understand the business, and you'll get noticed by your non-coder colleagues (ie management). I am a competent and well regarded .Net developer, but am more highly regarded because I have 27 years of experience in treasuries, both bank and corporate. 
What about C++/CLI?
I don't really know anything about C++/CLI, but it looks like that would have a similar learning curve as learning any other CLI language (from C#). On the other hand, you might also not get some of the benefits of learning native C++, exactly because it is a CLI language that runs in a virtual machine and therefore abstracts you from the hardware. But like I said, I don't know much about it.
Well, my advice in general is to check out a few frameworks and pick the one that suits your way of thinking and working best. For instance check out Nancy, FubuMVC, OpenRasta, Simple.Web and MVC. You can probably get an impression of each by playing with them for a few hours each. If you're embarking on a larger projects that is likely time well spent up front.
This sounds like you've read a few things and never actually used it. * Dynamic != Slower * Large Projects are often less messy than MVC * Async support is as good as MVC, not what what specificly is wrong with it?!? * Many modules aren't really* needed. And don't need to be updated to work with newer versions of Nancy. I wrote a plugin on V 0.16.0 and use it in a project with 0.21.1 and it works as well as the day I wrote it. The only good feature MVC5 got was AttributeRouting.
For my project that was written in Nancy and then got ported to MVC5 there was speed difference so I figured only reason is that Nancy is more dynamic. Nothing wrong with defending your project. But this is my subjective POV.
I'm really interested in your MSIL course. 
Yeah, me neither. I'm sure someone must. :) I've generally read the suggestion it's good if you want to bridge .NET assemblies with native stuff though.
Thanks :)
Here's a link to it: http://www.pluralsight.com/training/Courses/TableOfContents/msil-csharp-developer If you want a training pass for 1 week, send me an e-mail, I have a few left!
C++ memory management is a breeze with RAII. It's beyond me why it wasn't even mentioned in the college course of the language that I took...
for fun or profit?
Look through Github/Codeplex and go though the source code for some of the more popular projects. You should be able to pick up a few ideas based on how they approach testing. 
C# orange book I believe
This looks promising. Here's the link I found for anybody interesting. Hopefully this is what you mean, /u/AtticusVulpes. http://www.csharpcourse.com/ Thanks! 
this is from 2005 http://msdn.microsoft.com/en-us/library/ms973842.aspx 
Precisely what I meant! Enjoy! 
Fun
Java was the language I learned initially as well, and honestly the only thing I used was the microsoft C# reference. The differences are so small that you can generally jump right in
A nice new site is http://up-for-grabs.net/ - has lots of issues in popular .NET projects that are easy to get started with. Though these projects might not be in a similar area to what you're looking for, it can be a good thing to branch out and play with entirely different types of problems.
This looks awesome. Instantly bookmarked :)
var myValue = default(String);
Agreed - Using visual studio (and learning WPF) will take you more time than moving from Java to C#
As you posted on this subreddit, I assume that you are on Microsoft stack for software development. If you would like to contribute to the opensource projects that are mainly written in C#, you can take a look at to the [list](https://www.codeplex.com/site/search/openings) on codeplex which is basically Microsoft's github like platform where many developers look for other developers to join their projects. I am almost sure that in half an hour you will find a project that needs a developer with an exposure to TDD. If you have some interest on music, mobile app development (for Windows Phone 8) and would like to know how TDD stuff works, let me know. One more developer to help us with the unit test coverage would be cool.
Fewer interfaces and factoryfactoryfactories to learn. ;) No need to declare what exceptions get thrown in a method. It's String**builder**, and it becomes worthwhile to use (from a performance standpoint) after you concatenate 6 or so times. 
I don't understand - are you new to C# and Visual Studio? So far as Agile - you can do maintenance work using Agile -- your team creates a user story ("When a user clicks the "Add address" button, it takes too long"), and then breaks that up into tasks and assigns an estimate to each. So far as performance improvement, buy an analyzer (I like the one by JetBrains, but there are others), exercise the application, and look at where it tells you the app is spending most of its time. Clean that up so it runs faster. Repeat. 
http://msdn.microsoft.com/en-us/library/ms228602(v=vs.90).aspx This page highlights differences in syntax from Java and c#
No, I've been working with C# for nearly a year now. I'm looking at improving my/our coding standards and learning better practises (we don't use any kind of design patterns, for example. Everything is hard-coded for the purpose) rather than retrospectively trying to fix things
For a real succinct synopsis : https://github.com/adambard/learnxinyminutes-docs/blob/master/csharp.html.markdown
Worth mentioning event (un)subscription is not threadsafe. I've known experienced devs who've moved to C# to find this out in a bad way.
To clarify we are definitely doing the legacy codebase from scratch; to give you an idea of just how out-dated it is, it uses .NET 2
With TDD, you write tests before you write your code. So lets say you have a method to return all departments that start with a given letter from a database. Before you write the function you'd write tests that verify that the method does return the correct items, that it returns null when no items are found, and it throws an ArgumentNullException when you pass in a null string. Because you set up your tests before you write your code, you know exactly what this method needs to do and how it should respond to problems. With a good naming convention you can also easily see how it is behaving. If you name it something like Method_ReturnsCorrectItems and Method_ThrowsNullException and Method_ReturnsNull you can quickly see that the method is behaving as you expected it to each time you run your tests. If you aren't familiar with it look into nSubstitute or Moq and NUnit.
[I don't want to tell you this isn't something you should do, but can be tough to pull off without tears.](http://www.joelonsoftware.com/articles/fog0000000069.html)
I would use design patterns judiciously in your case, since you're dealing with a lot of legacy code. Something that will help is identifying utility methods and getting them organized into one or two assemblies by themselves. The key part is making sure they have no other external dependencies other than the framework itself. Having any dependencies will make reuse very difficult. Afterwards, identify any dependencies on 3rd party libraries and isolate them behind a facade and maybe a factory so that you can swap it out in the future when they ship a new version with breaking changes. 
Yeah, C# is my thing. I would help but I have had bad experiences with mobile dev before (Android is awful)
You're not gonna find a full tutorial exactly for what you're planning to do. Which sounds pretty complex btw. Instead, you should identify several key parts of what you're trying to achieve. And attempt to find tutorials that explain the basics of that. For instance, when it comes to the database. Find tutorials on how C# can be used to read and write from databases. What data is used in the tutorial shouldn't really matter. However, what should matter is how data is read and written. Same for the other parts that are unkown to you. Spend an afternoon to find out how exactly C# can communicate over the internet. There are several different ways, Sockets, WCF, custom libraries and one might be better suited than the other. Concurrency is another important aspect, if you're writing a server that has to handle multiple clients you're going to have to work with threads / async methods. To ensure that multiple clients can be handled at the same time. For subjects like this you should try to identify what exactly you need, then you should attempt to search for technologies / tutorials on how you can achieve those goals. Another thing that can help you on the way is figuring out what exactly your application should do. You mention account support, what does that mean? Should a user be able to register as well, should there be a system with which passwords can be reset? What kind of interface is available to the user (Webpage, WPF, Windows Forms, Console)? By answering questions like this you get a much better overview of what you're going to need to implement the whole system. When it comes to the concrete implementation I'd try and use WCF as much as possible. I don't have any experience with it but from what I read it should be able to abstract some of the complexity of writing client / server systems away.
This sounds a lot like Jabbr. It's essentially everything you listed that you need with a lot more. And it's available on GitHub https://github.com/jabbr/jabbr It's probably a bit bigger than you were thinking but it's a Nancy web app which uses SignalR for websocket communication so everything is instantly pushed to clients. If that's too big then there's tons of tutorials on using SignalR to make a chat application so that's where I'd recommend where you take it. It also has a .Net API so you can consume SignalR services from iOS, Android, Windows Phone or anywhere else really. It's also a lot easier to use than WCF. I should add as well that Jabbr is really active with C# devs and lots will hang out there and answer any quick questions you have. It's available at jabbr.net
Thank you so much for your reply! &gt; For instance, when it comes to the database... I'm actually fine when it comes to this part, I guess I should have specified that in the OP. &gt; Spend an afternoon to find out how exactly C# can communicate over the internet... I've been doing that for a couple days actually which is why I came here for some human direction (as opposed to search engines and boards). I'll be using sockets, specifically a list of client sockets in WCF. I'm not sure if that's good or not but I'm going for forms application as opposed to a asp.net solution. But that seems like it could be easier... &gt; Concurrency is another important aspect... Yeah this is what I was hoping to achieve. &gt; account support... Yeah I'll be (hopefully) using forms with all of the usual items like register and password reset. As mentioned yes I'm attempting to use WCF with this application. It may be I should just start putting a few things together and then come back for specific help, which seems to be the overarching point you're making. Thanks a bunch for your reply and breaking this into parts is certainly what I need to do first.
...you're starting green field development with web forms instead of MVC? TDD and web forms are not exactly BFFs.
I really need to sleep right now so I'm gonna keep this short, if you want to I can expand on this some more tomorrow. Using demo applications to test specific cases (for instace, can I send text between two applications with wcf) can be a really good way to get familiar with individual aspects. Secondly, breaking down development into bite sized chunks can be useful as well. E.g. Decide that phase one is building a server on which a client can register, log in and reset his password (to test this you can use a hard coded console application). Doing this will ensure that you do not start working all over the place and never really complete one feature.
Update the textboxes through a MethodInvoker using a delegate. This will run the code on a separate thread from the panel moving so both can be completed in tandem. this.Invoke(new MethodInvoker(delegate() { textBox1.Text = fl2; textBox2.Text = fl2; Application.DoEvents(); }));
No, we're migrating to MVC. Web Forms was what was in the architecture when I joined. I have been in the job now for approaching 4 months but I';m pretty much the only person who actually does programming right now (my colleagues manage data or general it problems). MVC is what I am familiar with, and what the outsourced company wants to use. EDIT: Greenfield?
how do i implement this into the code then? I have mulitple buttons, will i need a methodinvoker in each button method?
Thanks for the reply, again! Yeah, that is great sound advice. I'll try and break this down a bit and work on a little at a time. As a student I tend to look at the overall product and have it all figured out at once, I guess that's a habit I need to break. Thanks for the advice!
Also I didn't say I would be using TDD in this project - just that I was interested in TDD and I didn't get much room to try it inside of work :3
No. All C# 4.0 features are supported including: Dynamic binding support Generic type variance Optional parameters Named arguments All C# 5.0 feature are supported including: Asynchronous programming support Caller info attributes http://www.mono-project.com/CSharp_Compiler
You may. I sometimes wrap my UI update in a separate method and just call that from the button clicks. That way you only have one place of code running the delegate, but it really depends on how the other buttons fire their code. There are a couple of different approaches you can take, but I believe that running the UI updates on another thread is what you're after.
My buttons all feature multiple while loops that move panels around. Would it be possible to implement a timer, that checks and updates the textbox's status per tick, during the loop?
http://www.asp.net/signalr/overview/signalr-20/getting-started-with-signalr-20/tutorial-getting-started-with-signalr-20
Thanks for the reply! Someone linked me that unfortunately it's entirely in code that I don't understand and am frankly scared to undertake learn a whole new language at this point. But the app looks amazing and looks a lot like I'm going after (minus running in a browser). Perhaps I should realign my project? Interesting choice to make though...
this.Invoke does NOT run it in a separate thread. It in fact runs it on the UI thread, which is the same thread the button event is happening in. You cannot update any UI elements from outside the UI thread because windows forms controls are not thread safe. If this does update the textboxes, it's because it runs the delegate, then refreshes the window before it returns from .Invoke().
If you don't use the transitions code linked above and you are using .Net 4.5 try replacing thread sleep with more async friendly code. private async void button4_Click(object sender, EventArgs e) { switch (panel5.Top) { case (30): textBox1.Text = fl2; textBox2.Text = fl2; DateTime now = DateTime.Now; while (panel3.Left &gt;= 35) { await Task.Delay(30); panel3.Left -= 3; await Task.Delay(30);... }
Cool, I just did a course for cross platform development and it said to target c# 3. It was a recent course, no idea why they said this now.
I found Roy Osherove's Understanding Test Driven Development video pretty helpful on http://artofunittesting.com/
system.windows.forms.timer is a timer that invokes the "tick" onto the UI thread so you can do updates like you suggested.
Nice code example from 2002.
[Greenfield](http://en.wikipedia.org/wiki/Greenfield_project).
So some other people are covering different aspects of this, but I wanted throw this in. Never block threads. They are expensive and you should not be managing them. And Thread.Sleep() (or anything that blocks a thread) is an evil function that you should never use. Use a timer or async/await instead. Never, ever, ever, block on your UI thread. From the user's perspective, they will not be able to do a single thing with your UI until that function finishes. And that function will take two minutes. From the user's perspective, clicking the button will freeze the program for 2 minutes. And if they try do anything (like say close it, push another button, type in a textbox, etc.), Windows will notice that the UI thread is not responding and ask the user if they want to force close it. This is really, really bad. Don't do it. For your specific use case, you are looking for a timer. Either System.Threading.Timer or System.Windows.Forms.Timers. I prefer System.Threading.Timer, but that introduces the overhead that you will need to worry about the SynchronizationContext.
Look into rabbitMQ too. Offline messages are painless with it. 
override the ToString method
If I understood the question well, this seems the good answer.
I think you misunderstood your assignment. The assignment says that your method should return a struct. Instead you are printing output (which is not what was asked). Also there is no easy way to print the entire mp31 struct. So you have to do value by value (just like you already did). So your method should be something like public MP3 CreateMP3() { MP3 mp3 = new MP3(); mp3.price = ... ... return mp3; } Then you can create a method called PrintMP3 (which is what you already have) that calls CreateMP3 and prints the data; public void PrintData() { MP3 mp3 = createMP3(); //print logic here Console.WriteLine("ID = {0}", mp3.Id); .... }
It sounds like you're supposed to `return` the initialised mp3 from the method that creates it. ie: void Main() { var mp31 = option2(); // Output mp31 values to confirm the creater method works. Console.WriteLine(); Console.WriteLine("ID = {0}", mp31.ID); Console.WriteLine("Brand = {0}", mp31.brand); Console.WriteLine("Model = " {0}, mp31.model); Console.WriteLine("MBSize = {0}", mp31.mbsize); Console.WriteLine("Price = {0}", mp31.price); Console.WriteLine(mp31); } public mp3 option2() { // Create (instanciate) an MP3 struct. mp3 mp31 = new mp3(); // Initialise the struct. mp31.ID = 1; mp31.brand = "GET technologies .inc"; mp31.model = "HF 410"; mp31.mbsize = 4096; mp31.price = 129.95; // Give it back (return it). return mp31; } 
Did you change the method signature to have the right return type? I've edited my post to give a more complete example.
I've added comments to the post above to make it more obvious what's going on. This is a method signature: `public mp3 option2()` If you want to return a value from a method you need to specify the return type, which is the second item (mp3) in the example above.
That's because everything is returned the same way. With the `return` keyword.
console.writeline prints the output to the console. This is only possible with console applications. Methods can return values, this happens in memory inside the application. For instance if you create a method that does: return 1 + 1; that method would return an integer with the value 2. The same can be done with structs or anything else. I think that's what your assignment means.
I think you got your assigment wrong, but you are on the right path. The way methods work in C# is quite easy. First you specify the accessor: for instance public meaning that the method can be accessed globally. Secondly you specify the type of object the method should return, for instance public int means that your method should return a whole number. A void means that he method should not return any values. Your print method is a good example of a void method. It does something, but it doesn't return a value in memory to be used elsewhere. The third part is the name of the method for instance: public int SumTwoNumbers. The last part are the method parameters which specify what values you need for the method to work, for instance public int SumTwoNumbers(int firsNumber, int secondNumber). The body of the method SumTwoNumbers would be: return firstNumber + secondNumber. With the method looking like: public int SumTwoNumbers(int firstNumber, int secondNumber) { return firstNumber + secondNumber; } Methods are used for all sort of things, like I mentioned doing some calculation. It's always generally better to split methods based on what they do. For instance if your assigment says that you have find the total price of all MP3s in a playlist, you would usually make a method which does the calculation, returning the total price and a seperate method which takes the total price and prints the outcome. Know that graphical or web applications don't use Console.WriteLine() and they have their own way of showing the results. Mixing print/presentation logic with the actual calculation is bad. I would suggest you read up on how types, objects and methods work. http://msdn.microsoft.com/en-us/library/ms173114%28v=vs.110%29.aspx http://msdn.microsoft.com/en-us/library/ms173114%28v=vs.110%29.aspx
It's a type, you named the variable mp31 struct mp3 { public int ID; public string brand; public string model; public int mbsize; public double price; } You want to make "option2" a method which returns type "mp3". So the method signature should be "public mp3 option2()". In your example you had "public void option2()" - void means it does not return anything. There is no difference in this example between just printing out the text, and having a method returning it and then printing it out - the output is the same - but the methodology is different and that is what you will be marked on.
From http://www.dotnetperls.com/struct Structs are custom value types that store the values in each field together. They do not store referenced data, such as the character array in a string. So essentially you made a struct called mp3, which also makes it the type mp3. From http://msdn.microsoft.com/en-us/library/ah19swz4%28v=vs.90%29.aspx Structs may seem similar to classes, but there are important differences that you should be aware of. First of all, classes are reference types and structs are value types. By using structs, you can create objects that behave like the built-in types and enjoy their benefits as well.
It's just a matter of semantics which you will grasp eventually. Like some other redditor posted: Try making a struct, and then print that struct with .GetType().ToString() and look at the output. It would probably say something like: Assigment.MP3
The key thing to realise here is that struct isn't a type. A struct is like a class. So whilst int, double etc are types, they're actually structs called int or double. In that way, you can make your own types by using the struct keyword. This means that struct Cake {} creates a new type available called Cake which you could create like Cake cake = new Cake(); In the same way, you've created a type called mp3 and you've filled it up and now you need to return it. So by saying return mp31, you're saying that this method is designed to pass the created mp3 back to whoever called the method in the first place.
There's no reason you can't build a WinForms app, as I said there's a .NET client available so that you use SignalR services on desktop and mobile.
What do you mean by 'return mp31 does not give me the list'?
What are you using to study/learn C#? If you want I can point you to some books/websites which have helped me a lot.
 struct MP3 { public int ID; public string Brand; public string Model; public int MBSize; public double Price; public override string ToString() { return string.Format("ID: {0}, Brand: {1}, Model: {2}, MBSize: {3}, Price: ${4:#.##}", ID, Brand, Model, MBSize, Price); } } public static void main() { MP3 myMP3 = CreateMP3(1, "My Brand", "Model #1", 3, 14.99); Console.WriteLine(myMP3); } public static MP3 CreateMP3(int id, string brand, string model, int mbsize, double price) { MP3 m = new MP3(); m.ID = id; m.Brand = brand; m.Model = model; m.MBSize = mbsize; m.Price = price; return m; }
You are not forced to use VS. VS is just very handy and makes learning easier. You can find a few other IDE's such as MonoDevelop that can do C#. Also you can call the C# compiler from command line and use notepad (although I wouldn't recommend it right now). Generally it's smart to create a seperate .CS file for each new class/struct you make. This makes things clearer and easier to organize.
It should work. You are nothing doing anything magical. It's just have to make sure your assignment is correct.
Ah.
I can't make head or tails of that source, it's just too far above my skill level at this point. I looked through it all though, are you familiar with the project itself? Are you a committer perchance? 
I started watching this but quickly realized each segment was an hour. That's a lot of time I'm not sure I can commit to. However, I was expirimenting with some unit testing (in general) last night. As far as I grasped, this is what I should be doing (Note: Module = many classes performing one function all together) * Module inception ("I need a module to do this") * Sketch functional requirement spec for module * Think of a "good place" to start (in terms of classes) * Write a unit test for that class * Write interface for that class * Write a bare-bones implementation (so the UT passes) * Write unit test so that it passes with the BB implementation * Write the actual logic of the BB implementation Rinse and repeat for each class in the module. Then I realized that each unit test should be focusing on testing the functionality of ONE CLASS - every dependency should be injected, and every dependency in a unit test should be mocked (a la Moq) When you write a test that isn't using mocked dependencies, you're actually writing integration tests. Am I right in this line of thinking? :$ My other question was, for the purpose of all testing (but mainly integration testing), do you ever test against concrete classes? And how would you handle cases like Dependency injection; would you write a test for each concrete class, then? One would assume that we don't care how each implementation handles it, only that the implementation passes the test. Edit: Example of my current testing. The 7ms port method was a red herring (~~no~~ every pun intended) https://31.media.tumblr.com/c0a6cd74023932ccb49b11986df504a4/tumblr_mxjdf2nDaU1ssoi6no1_1280.png
See this is what I was wondering - would you want to have a test for each possible outcome - in your example, ReturnsCorrectItems, NullException and ReturnsNull, or not? And if so, how would you know what was the "correct items"? (assuming you would have some sort of state in TestInitialization. I was writing a unit test earlier for my IConfigurationLoader and I got stuck. I knew I wanted to test the loading of a memory stream into that class, but I didn't know how to test it because in order for me to test that, I would need to know how the memory stream should be formatted (Yaml, Xml, Json, w/e) - or create a mediator which would translate Yaml into a MemoryStream, or Json into a memory stream, etc. What would my approach be in this situation? (I think I just answered my own question)
Sorry I'm not the best person to answer this, maybe somebody else can chip in. It's not something I do much of, I only got an overview of it.
I'm not a contributor but i did end up getting my head around the source to get SignalR to work with Nancy. Bear in mind Jabbr is just an implementation of a chat application using SignalR. There's a lot of guides to creating a chat application though. Here's one on the ASP site http://www.asp.net/signalr/overview/signalr-20/getting-started-with-signalr-20/tutorial-getting-started-with-signalr-20 And here's another tutorial to creating a chat application with a console application http://ruchirac.blogspot.co.uk/2013/03/connecting-net-client-console.html
I recently had to perform a File system task and, just like you, had to add a short timer to accomplish my task, the file system is always throwing shit around. I'll check out your lib, look useful. Good job!
Thanks for your replies, again! Even though some of it looks to be a step or two away from what I wanted to work with (initially) the examples do seem pretty damn cool looking. I don't think I would have stumbled across SignalR without your suggestions so thanks a bunch for that. I think I'll have to slap together a prototype and see what if it's something I want to utilize. I've been in a sort of analysis paralysis for a couple days now and it seems the best way out of that is simply starting to tinker with something. If you're interested I'll let you know what I come up with!
I actually found the solution to this shortly after asking here. HtmlToPdf.Options.StartColumnIndex = -1; will make the second column follow the StartPosition.
I'm starting to think /u/traxgod is actually a cunning troll.
Yea you would want each of those 3 tests because if you change your code you need to be able to run those tests again to make sure your code is still behaving as expected. I do my data access using the repository pattern so I have an IDepartmentRepository that defines things like Query, GetById, GetAll, etc... Then I have a DepartmentService which has my GetDepartmentByName method. I want to test that method so in my test class I create a mock of my DepartmentRepository and inject that mocked repository into the DepartmentService. That mock has an in memory list of items I add myself. Since I added the items myself, I know what should be returned from the method. For example, if I add IT, Administration, Admissions, and HR I'd know that the method should return one of those departments by name. I code my test to return the IT department by name so I can compare my expected value to the actual value returned, and if they are the same I know my code is working. In my CanReturnNull test I'd ask for a the department 'NoDepartment' and I'd expected null to be returned since NoDepartment doesn't exist in my mock repository. And then for my CanThrowNullException I'd just pass in a null string and assert that the test throws the exception I expected. I've never tested memory streams so I can't give advice on that but it's basically the same. Figure out what your expected value will be and make sure the actual value is that when your tested code is done. Your mediator idea would probably work.
Possible, it didn't ruse my jimmies though. So no good.
Yes VS is a very nice tool. The book I would recommend is: http://shop.oreilly.com/product/0636920024064.do Also available in Amazon. And the website I used (although I had C and Java knowledge) is DotNetPerls and http://www.tutorialspoint.com/csharp/index.htm. I would also suggest using MSDN (Microsoft Developer Network) for general reference.
If going fluent, why not go all the way? Add .Success and .Fail calls that take a result parameter. Seems silly to do the setup as fluent and the result as imperative. It is neat. I like it. I may have to steal this for optimistic concurrency retries. 
good idea, i might actually extend it. 
While it's just the basics to get started, I always appreciate this link for comparing different languages: http://dada.perl.it/shootout/echo_allsrc.html
In addition to what others have said: It looks like you're forgetting how method signatures work. The **void** is saying that method *option2()* doesn't return anything. If you want it to return an integer, then you'd have to make it look like public int option2(){...} Similarly with your mp3 struct, you need to specify that the method is going to return something of type mp3: public mp3 option2() { //... your other stuff here return mp31; }
return mp31 -- returns a variable (struct) of type mp3. if -- public mp3 option2() { ...; return mp31 } -- then mp3 aMp3 = option2(); Debug.WriteLine(aMp3.ID.ToString()); Debug.WriteLine(aMp3.brand); etc. 
Fair enough. The project I snagged this from is 5+ years old and was required to run on .NET 2.0 / old Windows XP machines. lol
Story time : I used to be a teaching assistant, and my code sample is the solution proposed by one of my student when his code would fail on a locked file writing.
Haha! Well it works in databases assuming all queries on the table youre mutating data on are short lived so your joke was taken seriously. But yes that is a bad file system solution :)
"dynamic" is not a feature of C#, it's an unfortunate necessity for compatibility reasons.
Sharp develope
Duffy works on Midori. A managed language with strong emphasis on safety and performance close to C is not a future version of C#, it's for the Midori base language (a now-unavailable MS job posting gave it a name: M#). Most of these keywords are too complicated for the average programmer, and not very useful for most programs anyway.
Here's my retry: // general-use methods class General { public static T LoopRetry&lt;T&gt;(int maxAttempts, Func&lt;T&gt; operation) { int attempt = 1; while(true) { try { return operation(); } catch(Exception ex) { if(attempt &gt;= maxAttempts) throw; } finally { attempt++; } } return default(T); } public static void LoopRetry(int maxAttempts, Action operation) { int attempt = 1; while(true) { try { operation(); return; } catch(Exception ex) { if(attempt &gt;= maxAttempts) throw; } finally { attempt++; } } } } #Usage: var result = General.LoopRetry(3, () =&gt; service.GetSomeAnswers()); ------ Pass whatever you like as the lambda, it will try until it is successful or you've surpassed *maxAttempts*. (unless maxAttempts = int.MaxValue, but I didn't really need to worry about that). It works really well because you can put whatever customized logic you need in the Func or Action and keep the actual looping / attempting "clean". It looks like OPs also specifies an action for the catch block, which isn't a bad idea, but (again) I didn't really need to worry about that. Also, it could be called like this for equivalent logic: var result = General.LoopRetry(3, () =&gt; { try { return service.GetSomeAnswers(); } catch(Exception ex) { Log(ex); Thread.Sleep(TimeSpan.FromSeconds(30)); throw; } });
Shit, you're right. That's what I get for not copy-pasting. Fixed.
Also it doesn't respect max attempts. While(true) should be while(attempts&lt;=maxattempts)
you may need to include System.Threading.Tasks. 
Would this work? // general-use methods public static class General { public static T Retry&lt;T&gt;( this Func&lt;T&gt; operation, int exceptionsAllowed = 1) { while ( true ) { try { return operation(); } catch ( Exception ) { exceptionsAllowed--; if ( exceptionsAllowed &lt;= 0 ) { throw; } } } } } 
I would prefer flipping it around and saying: public static T LoopRetry&lt;T&gt;(Func&lt;T&gt; operation, int maxAttempts = 3) { .... } then I wont have to type the ",3)" if that would turn out to be my most often used value while it still gives me the freedom to run it either 2 or 100000000 times
It's just a preference. If you take my last example and put the loop count at the end: var result = General.LoopRetry(() =&gt; { try { return service.GetSomeAnswers(); } catch(Exception ex) { Log(ex); Thread.Sleep(TimeSpan.FromSeconds(30)); throw; } }, 3); Then the '3' looks like it's just floating there, and feels like it gets lost after the lambda. You can use named parameters to get around that, but I'd still rather not.
Dynamic is very useful for things like MS Office interop, but it has other uses beyond that. I've seen some nice examples for navigating XML DOMs for example.
YES YES YES YES 
During my time as c# dev, I never tested interfaces. Like you said, "what's the point?" Interfaces provide no implementation and thus, what is there to actually test? This just reminds me of why I can't stand TDD. I understand the philosophy, but as a developer you can spend so much time wondering if you've got complete coverage before you've written ever a tiny amount of actual application code.
I actually like TDD. It's made my code a LOT cleaner already, however I'm still just working out what to test and what not to test, so. :')
TDD is intended to get the developer to focus on and capture behaviors. Interfaces do not contain behaviors. Interfaces are germane in that they allow Dependency Injection and lose coupling. 
I understand this much; so how would you suggest I inject a type into a test? I was thinking making it abstract and having a concrete implementation for the test implement some kind of CreateInstance() method. However that seems pretty overkill if I am sure there is only gonna be one concrete implementation of IRedditPostManager.
most of the time I write a abstract test class for the interface and then create a concrete instance that may or may not add extra tests. the pros are that I can add other implementations for the interface with ease, use the generic tests as documentation and can concentrate more on the expected behaviour rather than thinking of the implementation example: https://gist.github.com/toeb/7899256
Interesting. All I've done right now is make my original test class abstract and have an abstract method to "GetConcreteImplementation". Should do for now. Thank you for the gist. :) https://p.linode.com/8259 Obviously I can see a lot of duplication coming out of this approach so I might just make an abstract test base class that has a generic parameter. 
Make an abstract class for interface tests. Subclasses of that should test implementations of the interface. This is nice because (for the properties that ANY implementor of an interface must respect) you only have to write the test once, even if you have several implementors.
&gt;are these sort of mini-questions accepted on this subreddit? I certainly don't mind them. Go for it, and if others do mind, they can always downvote.
happy cake day :)
Supposing the implementer has dependencies - inject with mock objects, right? My only concern with this approach is that the Tests project then needs to have a reference to the System.Web.Mvc project (assuming my IRedditPostController class is actually a contract for an MVC controller) EDIT: nvm just occured to me why IRedditPostController being an mvc controller is dumb
Funny enough, the people I know who really understand it best are the ones who are least concerned with coverage. The philosophy to follow is "Red, Green, Refactor". Write a test. This test is red, because it fails by default - you have no code yet. Write the minimum amount of code to make this test pass. Now it's green. When everything is green, look for a chance to refactor and do so. Make sure all your tests are still green, then repeat. Because interfaces are non-functional, they fall under a refactor step. You should already have the tests you need to make sure your code passes, so there is no need to test the interface its self.
Thanks! TIL my cake day.
I hope one day I too spend so much time on reddit I forget my cake day :P
Thanks! Hopefully many more to come...
Cool. As someone who is constantly trying but getting frustrated with programming...it's always good to hear from those who are experts on how they think.
Only test public members. You should be exercising private / protected stuff via public stuff. 
No more complicated than generic invariance or async.
I think adding annotation to every part of your code specifying whether stuff is immutable, isolated, readable or writeable is much more complex than being able to use async or generic variance. And both of the features you mentioned are complicated enough; how many times do you see people on StackOverflow asking why treating an array of strings as an array of objects is bad? Or people whose code is a mess because of `async void`?
Are you using the DataSource property and pass a collection of objects to the comboBox ?
*sniff* Thanks man. U have no idea about my Ramen addiction. 
Please, don't use it in production ;) 
All of these are things I might've used back when I was fifteen because it looks *cool*, but these days I really wouldn't want to see them in any application I used.
You will love this : http://www.reddit.com/r/csharp/comments/1k8mxd/i_accidently_the_whole_application/
Looks like you have 2 different DiosJogadores objects here: jog = new DoisJogadores(jogadorTempUm, jogadorTempDois); DoisJogadores novoDois = new DoisJogadores(); novoDois.ShowDialog(); You're setting the values for jog but then you're using a default constructor for novoDois, which does not take any parameters. Perhaps you do not even need novoDois, and it should be: jog = new DoisJogadores(jogadorTempUm, jogadorTempDois); jog.ShowDialog();
The progressbar was pretty cool!
I forgot to add this to the post: private DoisJogadores jog; But the problem isn't in that form because the values get to the other form. :\
You need to assign the data source to the combobox MyComboBox.DataSource = myDataSource; You then need to databind the combobox to reassign the data MyComboBox.DataBind(); As a side note, if AppendDataBoundItems is set to true on the combobox, the new data will appear after the old data in the combobox.
I believe the problem is that you have 2 instances of DiosJogadores, each contains their own jogador1 and jogador2 strings. This line: &gt; jog = new DoisJogadores(jogadorTempUm, jogadorTempDois); sets your 'jog' instance and uses your constructor that accepts 2 strings, and sets the values of jogador1 and jogador2. From the code we can see above, this 'jog' instance is never used again. However, this line: &gt; DoisJogadores novoDois = new DoisJogadores(); creates a new instance of DiosJogadores called 'novoDois' and sets it using the default form constructor which does not accept any parameters, and therefore never sets jogador1 and jogador2. You are then opening 'novaDois' which still has no values set. 
Monadic Null Checking! HNNNNG i need that right now!
I bought this book and feel it will aid everyone. Been using C# off and on since it came out till now and learn some new tricks
Very excited about this one as well. I do have a question though maybe you know. Is the following syntax correct? String str = Employee?.Address?.Street ?? "Default"; I Presume if any one of those is null the str value will be "Default" does that sound correct?
I like the using a lib will give you those static methods as if they where within your current namespace. I do wonder what occurs if I import two libraries that both have the same static method signature. Does one trump? Does the compiler throw an error then when you don't explicitly reference one lib vs the other?
Yes if Employee or Employee.Address is null then you don't take Employee.Address.Street but "Default" instead
I would assume it would be the same as currently with non static methods and it would complain about ambiguity.
IMO, reorganize your data structure, it's almost backwards. The list of persons is fairly static, but the dates are not. In a data table rows are easy to add, columns are not. So you want to keep your static portion as columns. An even better way would be to break it apart more and normalize it: Table Person PersonId | Details... :--------:|:-----: 11231 | ... 11232 | ... 11233 | ... Table Class ClassId | Details... :--------:|:-----: 101 | ... 102 | ... 103 | ... Table Attendance Id | Date | ClassId | PersonId | Duration :--:|:----:|:-------:|:--------:|:--------: 1 | 12/11 | 101 | 11231 | 8.0 2 | 12/11 | 101 | 11232 | 4.0 3 | 12/13 | 102 | 11231 | 5.0 The last table is most important, the other two are really only there for normalization. So, when you need add a new attendance record: var ds = // your DataSet var table = ds.Tables["Attendance"]; var row = table.NewRow(); row["Date"] = sourceDay; row["ClassId"] = sourceClassId; row["PersonId"] = sourcePersonId; row["Duration"] = sourceDuration; table.AddRow(row); // may be inaccurate, it's been a while since I've worked with DataSets/DataTables And then when you need to examine attendance: var ds = // your DataSet var table = ds.Tables["Attendance"]; //date specific var attendanceByDate = table.AsEnumerable() .Where(row =&gt; row["ClassId"] == sourceClassId &amp;&amp; row["PersonId"] == sourcePersonId &amp;&amp; row["Date"] == sourceDay) .Select(row =&gt; (decimal)row["Duration"]) .Sum(); //one persons total attendance for the whole class var classAttendance = table.AsEnumerable() .Where(row =&gt; row["ClassId"] == sourceClassId &amp;&amp; row["PersonId"] == sourcePersonId) .Select(row =&gt; (decimal)row["Duration"]) .Sum();
So that was the easy one. What is the result of this: int faceValue = Deck?.Cards?.FaceValue; Is faceValue now null? Is it a compile error? I presume compile error.
There is no big difference between a file with the extension .txt and .xml. It just shows what the format is of the content inside. So if you're writing XML to the file it's smarter to use .xml because the user can see the content inside is XML without looking in it. Also useful if the user has a special editor for .xml files.
If the data is hierarchical then XML can add value but otherwise the only real difference is that straight txt will tend to be more compact.
you're missing the ?? "Ace of spades"; at the end
Feed a sine wave based in current time into some logic of beeps
That is the point. If you don't have the null-coalescing operator what occurs? Compile error?
0 im guesing
Here is my code: var dataSource = new BindingList&lt;Language&gt;(); for (i = 0; i &lt; 256; i++) { dataSource.Add(new Language() { Name = i.ToString(), Value = i.ToString() }); } comboBox1.SelectedIndex = -1; this.comboBox1.DataSource = null; comboBox1.Items.Clear(); this.comboBox1.DataSource = dataSource; this.comboBox1.DisplayMember = "Name"; this.comboBox1.ValueMember = "Value"; this.comboBox1.DropDownStyle = ComboBoxStyle.DropDownList; this.comboBox1.Refresh(); 
.DataBind() is not a function I can call from combobox. When I try it, I get this error: error CS1061: 'System.Windows.Forms.ComboBox' does not contain a definition for 'DataBind' and no extension method 'DataBind' accepting a first argument of type 'System.Windows.Forms.ComboBox' could be found (are you missing a using directive or an assembly reference?)
Yes, I posted my code, can you look at it?
OK, I found an error: ex {"Cross-thread operation not valid: Control 'comboBox1' accessed from a thread other than the thread it was created on."} System.Exception {System.InvalidOperationException} The weird part is it happens at a weird place: comboBox1.DataSource = null;//works comboBox1.DataSource = dataSource;//works comboBox1.DisplayMember = "Name";//works comboBox1.ValueMember = "Value";//throws error 2nd time this is run. 
Found partial solution: this.Invoke(new MethodInvoker(delegate() { })) I needed to encase comboBox.ValueMember line in that... Weird arcane stuff the very start of using C#...
I'd hope for a NullReferenceException
Now it still won't update, though the code runs without errors... Ok the real solution is to encapsulate everything in delagate... Now it works. Phew. This syntax isn't easy.
Thank you for the help! I just can't seem to find how to set up the basics such as actually making it send a request to the server. I never really got into this kind of stuff before (using external data from a site in my application ).
I'd assume it would compile time error (like int i = j as int) you could either do int? facevalue, or give it the null coalescing operator.
I really quite like the inline declarations for out params. It just makes a lot more sense to me for out variables to be in the declaration (and therefore the same scope) as the method call. Question though, what happens currently to an out parameter if an exception is thrown after assignment but before the return. I.e. what are Bar and X? public int Foo(out string Bar, out int X) { Bar = "test"; X = 101; throw new Exception(); return 1; } 
I had some trouble at the start too, but you can google "rest call c#" or something like that. Then you get a basic function on wich you can continue to work on. Like I said, its not so hard when you got the basic "codey" stuff already done for you (I myself wrote it down from the webpage instead of ctrl+c'ing it. that way i got "into" the code stuff). Instead of intergrating it into your application directly, make a new project to test it out before you proceed, so you have all your I/O's sorted out so you could easily intergrate it with your current project. If you want you could pm me and i'l send over what i made for Twitter. I know this works because i use it almost every day, but i think they have a different oauth than twitter (im not sure as i havent made anything for reddit yet, but the basic http get/post call should be somewhat the same) Good luck! :)
Or null for nullable types (also guessing)
:), I can remember thinking marquee was the best HTML tag in the world. Oh how far my UI design skills have come (not very :))
So do I! For now, you can simulate it with some extension methods: public static TResult NullOr&lt;TInstance, TResult&gt;( this TInstance instance, Func&lt;TInstance, TResult&gt; accessor ) where TResult : class { return instance == null ? null : accessor( instance ); } Used like: var str = Employee.NullOr( e =&gt; e.Address.NullOr( a =&gt; a.Street ) ) ?? "Default"; Though you need to create several versions of the method if you also want to do the same thing with nullable structs. This approach also creates and executes a lot of delegates, which isn't the fastest thing in the world. 
faceValue literally can't be null because it's an int. This is a compile time error, guaranteed.
You get to say your app "leverages the enterprise synergy". You get to confuse anyone who wants to look at your files. You get to add more complexity for no apparent reason. You get to use XML dom parsers to read the file! ...You can tell I don't really like XML. It is a tool for some things, but the majority of what people use it for can be replaced by something much lighter. For example, JSON parsing for config files.
crosspost from r/dotnet
The default - i.e. default(int) in this case - 0. For reference types that would be null.
The best book I read was C# Primer Plus, its from 2001 but it got me real up to date on C#. The syntax hasn't changed much so you should be able to follow along easy. He also makes funny references to aliens and such
I started with the Pro C# book from Apress. It definitely makes quick work of the very basic concepts (the various loops are covered in about 2 pages). It does dig into the basics of OO programming but out of a 1300 page book, all that is done in less than 50 pages. Here is the latest edition: http://www.apress.com/9781430242338 (I have no association with apress other than being a customer)
these are all great additions tho dont know how often i would use a few of them still want to see extension properties but judging from some of the comments i have read from the language design team this may be a pipe dream 
Type it into youtube and get tons of results: http://www.youtube.com/watch?v=e2obCXEuAVg Its easy.
They forgot to use 'while(true)' before the window size for-loop ^^
I dont get the actual layout you want but you should really go with WPF (XAML). Its really simple XML-like structure and you can easily place multiple controls inside panels to get what you need. Depending on the layout you want you could go with a simple Stackpanel, Listbox/Listview or a Gridview. I havent done any printing stuff yet but would probably go with some kind of export instead of printing the actual UI.
First off, printing? Ahaha you're on your own there, printing is always a bitch. Store all your data in some backing class, bind it to the xaml file, then export it to something else that prints it for you. As far as the layout goes, here's an ugly version in WPF I put together in ~10 minutes MainWindow.xaml: &lt;Window "x:Class=YourNameSpace.MainWindow" &lt;!-- blah blah blah --&gt; xmlns:local="clr-namespace:YourNameSpace"&gt; &lt;Canvas&gt; &lt;Label Content="Schedule - Week of: " Canvas.Left="128" Canvas.Top="39"/&gt; &lt;Label Content="[Data]" Canvas.Left="252" Canvas.Top="39"/&gt; &lt;Label Content="AM:" Canvas.Left="190" Canvas.Top="63"/&gt; &lt;Label Content="PM:" Canvas.Left="402" Canvas.Top="63"/&gt; &lt;StackPanel Orientation="Vertical" Background="Bisque" Height="305" Width="521" Canvas.Top="94" Canvas.Left="10"&gt; &lt;local:GridBox /&gt; &lt;local:GridBox /&gt; &lt;local:GridBox /&gt; &lt;local:GridBox /&gt; &lt;/StackPanel&gt; &lt;/Canvas&gt; &lt;/Window&gt; UserControl GridBox.xaml, inner section: &lt;Grid&gt; &lt;Grid.ColumnDefinitions&gt; &lt;ColumnDefinition Width="85*"/&gt; &lt;ColumnDefinition Width="194*"/&gt; &lt;ColumnDefinition Width="152*"/&gt; &lt;/Grid.ColumnDefinitions&gt; &lt;Canvas Grid.Column="0"&gt; &lt;Label Content="Day" Canvas.Left="21" Canvas.Top="10" /&gt; &lt;Label Content="Date" Canvas.Left="21" Canvas.Top="36" /&gt; &lt;/Canvas&gt; &lt;Canvas Grid.Column="1"&gt; &lt;ComboBox Canvas.Left="10" Width="174" /&gt; &lt;ComboBox Canvas.Left="10" Width="174" Canvas.Top="22" /&gt; &lt;ComboBox Canvas.Left="10" Width="174" Canvas.Top="44" /&gt; &lt;/Canvas&gt; &lt;Canvas Grid.Column="2"&gt; &lt;ComboBox Width="142" &gt;&lt;/ComboBox&gt; &lt;ComboBox Width="142" Canvas.Top="22" /&gt; &lt;ComboBox Width="142" Canvas.Top="44" /&gt; &lt;/Canvas&gt; &lt;/Grid&gt; really though you should program this to be a better programmer and have her use an excel template
There is clearly an "X". That is cooler. Also, use what makes sense for the data you writing. Xml is just text until you parse it. Is all that overhead worth it?
Thanks! Just seeing that gave me a bit better of an idea how to proceed. I'll need to figure out how to give the grid cells a border, but I'm sure I can google that. I thought about just doing an excel template, but there are a few problems with that. One, she's pretty...lets say...technologically challenged, so I need something with as little margin for error as possible. Maybe excel would be fine for that, but I'm not sure and I've never designed a template that way. Also, her computer is like 10 years old and it would probably take an hour for it to open Excel or OpenOffice anyways. Lightweight was a goal. But most importantly, I just decided to do it for a project to work on my programming. I've just never worked with GUI stuff outside of super basic options panels, so I wasn't really sure where to get started making a spreadsheet-esque grid.
Honestly, you should probably just use excel... make up a template she can use and done.
I agree - in my experience, if a user is asked if they want to close a program that is not responding 95% of the time they're mad at it and say yes. So if you purposely design your program to freeze up the UI for more than a fraction of a second you're asking for it to be closed with prejudice at that point by the vast majority of users.
But then there's JSON. NET and ServiceStack... 
The built-in XML serializer is also horrible though.
Class initializers does not work for read only properties.
If you want light weight you should go with winforms. Find a design pattern that mitigates some of the less convenient aspects. WPF has a steep learning curve even for experienced front end developers and has a lot more features than you need.
How about one of the free online time trackers? A quick google has turned up [Toggl](https://www.toggl.com/) does that fit?
C# in Depth by Jon Skeet
XML has a lot of advantages over plain text files: - There's an uniform structure - You can use an XML schema to enforce rules on the data (e.g specific values must be present) - It's more readable than dumping objects in a txt file - You don't have to write the serialization/deserialization yourself (although the standard xml serializer is a bit outdated compared to the recent framework). 
C# in Nutshell is basicly a language reference + good practices = must have. As someone who also used to code in Delphi, You will grasp C# 3.0 and earlier versions in no time (assuming that You knows Java as well). Later versions of language are from different realm though.
[CLR via C#](http://www.amazon.com/CLR-via-C-Developer-Reference/dp/0735667454) and [C# in Depth](http://www.amazon.com/C-Depth-3rd-Jon-Skeet/dp/161729134X/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1386853457&amp;sr=1-1&amp;keywords=C%23+in+Depth) I don't recommend C# in a Nutshell - I don't think it adds any value that you can not find on MSDN
http://www.ilovefreesoftware.com/05/featured/free-employee-scheduling-software.html
Short answer: it depends on what data you are using. Long answer: XML is used to display hierarchical data and is recognized by most legacy systems. JSON is preferred these days. Both are mainly used as a data-interchange format, which makes JSON more or less better because it's a lot smaller and more compact = faster. The only place I see XML being used anymore is in the visual studio configuration files - and even then I'm starting to see YAML more and more.
Is this a school project?
&gt; Randoms are calculated on the current time Hang on, really?
Instance your random outside of the loop and call the Next method on it inside the loop.
No. He just needs to keep an instance of the `Random` object and call `Next` on it for each new random value.
How else would you be able to let a computer give you a random number?
There are plenty of ways, it's not considered wise to use the time as your seed because it's so easily worked out.
Test it yourself add a thread sleep from atleast 20 ms in the loop and it will generate new numbers
Is this saying that two separate calls of Random in C# 19ms apart will generate the same number?
I think one of the simplest ways to describe it is as a reference to a function. All that you know is that it accepts certain input(s) and returns a certain type of output. Beyond that, you don't know anything beside you can call it as if it was a function. This is extremely useful for any kind of API or library. You can also use it in your everyday code to make a function call whatever function you want. Hopefully that helps a bit!
This is correct.
Think of a delegate as a parameter. A really common use would be dependant injection. Imagine you didn't know how the logging on the system would work, so that than just include log4net or monologger on each function you made somebody inject a logging function. Do you defined a delegate delegate null log(string x); Now when you code if you wanted to log you'd just write Log(stringToLog); Now all you need to do is assign a function with the same method signature as your log delegate, and whenever you calls log() it will now call that function. It has a lot of use in event architecture, dependency injection. It's basically a variable, but instead of being an object, it's a function. As a note I'm walking on my phone, so pardon any spelling mistakes.
Delegates are a pointer to a fuction. Or if you prefer a delegate is an object that holds the reference(ie address) and signature of function. I don't personally use them a lot but there is one situation where I use them all the time. UI programming in windows forms. So our customers use on a Windows Forms App on their local machine referred to as the Client. When some heavy lifting needs to be done we send a message to our server using the remoting object infrastructure. When the work is complete the Client receives a message from the Server saying its done. Often times that message is received on a thread other then the UI thread. To break that down a little more... When a User Interface is redrawn because you clicked a button or updated a grid or draw a pretty picture it all occurs on the UI thread. A message from the server can arrive on pretty much any thread. Part of processing that message is to update our grid with some visual que to indicate to the user that the process is done. But what happens when you try to update the UI (the grid) from a different thread then the UI thread? What if the UI thread and the Message thread try to update the grid at the same time? All sorts of mayhem that's what! So to prevent mayhem between these two threads there is a very common design pattern using delegates. Here is the short hand of it. // Declare the object that will hold a pointer to my method private delegate void MessageHandle(CommunicationData data, EventArgs e); // My method for handling messages protected void ServerMessageHandler(CommunicationData data, EventArgs e) { // Check if we are not on the UI thread if (myWinGrid.InvokeRequired) { // Create an instance of the object that points to this method MessageHandle messageDelegate = new MessageHandle(ServerMessageHandler); // This will pass my delegate object back to the UI thread and invoke it with the params this.Invoke(messageDelegate , new object[] { data, e }); } else { // Since we are on the main UI thread we can update the grid. We are now thread safe! UpdateGrid(); } }
not sure I just know if there 20 ms sleep in it then it will generate an other number, whatever ppl don t know how it works clearly I also never said that it was the best solution however all the hate I ll just delete this post
We use delegates in this way in lots of the applications we write. Almost anything that raises a message from a non UI thread, that needs to interact with the UI, will need to go get passed through a delegate to set the UI. For us, this includes messages sent through sockets, events raised from background workers, input from serial ports, some timers, etc. 
It's a great book, but assumes you already know C# and want to know how/why key features of the language work. It's great for understanding the language in-depth but not for people new to the language.
Yup that is essentially the most useful thing about delegates is getting things back to the UI thread. Do you use them for anything else? I haven't seen them used much elsewhere.
Yes
We've all heard that computers work in 1's and 0's. But take a moment to consider what that means. Yes, your data is obviously in binary - signed big endian integers, floating point decimals, ascii or unicode character strings... But every instruction your write, every operation done is also stored in binary. You could take a program executable, throw it in an image file as the content data, and look at it as a picture if you wanted, because the only difference between instructions and data is that instructions are loaded into the Control Unit of the CPU, and instructions from that control unit cause data to be loaded into registers. What does this have to do with delegates? They are (one of) the grammar(s) that allows C# to pass around functions the same way you pass around data. The power in this is immense. * Any time you're working with events, an "event handler" is a specific group of delegates. * Any time you're working with threads or tasks you're working with delegates. * If you work with linq, you're using delegates (using another name and another grammar - I just call them all function pointers; but then I was raised on C++) * Say you're writing a library that graphs functions. Do you want to have one function to draw for f(x) = x, another for f(x) = x^2, etc? Of course not. You want one function for drawing, and to pass the function to draw in like a variable: delegate double f(double x); Any time you have code that needs to perform an action, but you don't know what it will be in the context you're in? Delegates. They are as fundamental a building block in language as objects. So much so that just like there are Object Oriented languages, there are also Functional languages which are based off this idea of the delegate.
I ran across this article which was a nice refresher. http://codetunnel.com/blog/post/introduction-to-linq-part-i-delegates
So let's see your code so we can give you some guidance instead of giving you the answer :) 
Close. The seed for a random instance is calculated on the current time (by default). But the generation of the random numbers is not affected by the time after the initial seed.
I do use async delegates to call some long running, blocking functions that need to run in the background. This is usually in Windows Services or other places where a BackGroundWorker isn't appropriate. 
I did, I already made a small notification app to check my email account and show a balloontip message if I have an email, but I want to read about the language too. I like to sit on the toilet and study :-) So far, I think the language is closer to Delphi than to C++. Anyway, same guy (Anders Hejlsberg) "made" both, Delphi and C#.
The only reason I asked for the answer is because everything works except for the random number thing. I'll post the code a bit later, when I get to a computer
I think of them as single method interfaces 
I'm definitely saving this, this is possibly one of the coolest things I've seen so far in my short time of learning C#
{ random1 = objRandom.Next(1, 7); random2 = objRandom.Next(1, 7); player1 = player1 + random1; player2 = player2 + random2; lstResults.Items.Add(Convert.ToString(player1) + "\t\t" + Convert.ToString(player2)); control++; } ehhh formatting don't know how to put code on reddit properly lol 
They are useful for event programming and for implementing rebindable keymaps Using a hashtable
You're close, but no cigar! You need to do the comparisons separately like so: while(player1 &lt; 100 || player2 &lt; 100) Then you're checking each, and then it evaluates the boolean result. 
Function pointers.
Hugh?
Que?
It works better than before, but seems to be only choosing one of the players per click. Its supposed to be like a race to 100, but then it ends up being like this. http://imgur.com/zdvVgKh 
you need to use &amp;&amp; Your loop works if at least 1 of the players is below 100. if u use &amp;&amp; it works till 1 of the players reaches 100
I think the best way to understand the purpose of delegates is an example showing you what you have to do if you don't have delegates. I have been painfully reminded of this after helping a friend with her homework in Java. So let's say you have a list of Person objects. Person is defined in a library you do not control. You need to sort the Persons by zip code. List&lt;T&gt; already defines a "Sort" method, but it doesn't know how to compare Person objects by Person.ZipCode. You have to pass in a **delegate** that compares two Person objects. In modern C#, if that's the only place you're going to use it, you'd just define that delegate using a lambda expression and it becomes a single line of code. listOfPerson.Sort( (a,b) -&gt; a.ZipCode.CompareTo(b.ZipCode) ); Without delegates or lambdas, like in Java until very recently, you have no option other than to pass in an object implementing the Comparator interface. public class PersonZipCodeComparator implements Comparator&lt;Person&gt; { int compare(Person a, Person b) { return a.ZipCode.compareTo(b.ZipCode); } } // later, in the function where you want to sort your list Collections.sort(listOfPerson, new PersonZipCodeComparator()); So delegates let you pass in a single function rather than having to create an entire class just so it has a single function to be called.
&gt; crazy seeing you here! Why? 
http://msdn.microsoft.com/library/system.timers.timer.interval%28v=vs.110%29.aspx check the exceptions section
The schema bit is a real selling point for me. I can't tell you the number of times I've gotten into a disagreement with another party over whether or not a flat file "was well formed." With XML, it either validates against it's schema or it doesn't. 
ohhhh OK. I didn't know where I knew you from. Yup I'm a .Net engineer. I also frequent /r/dotnet, /r/aspnet and /r/programming (although much less)
Upvote for calling it an interface. Really the best way to easily describe it.
pretty good for typing with your feet
Thanks, it works now :)
I've got a Pluralsight account and have followed a lot of K Scott Allen's stuff but not tuned into your stuff yet. I best check it out! :) Thanks
Looks like noone mentioned that events are delegates. You create a delegate in your object and call it every time your object throws an event. Later you can bind any method from any object with proper signature to instanse's delegate and those methods will be called on an event happening. That's an in-build realisation of a listener pattern. Another thing to be mentioned is that delegates are multicast. You can combine delegates of the same delegate type like a = b + c, and both functions bound to b and c will be called. So, your event may call multiple handlers. Sorry for my English :)
Others have described what a delegate is, so I'm just going to describe the used case that we've had for them in the past. Basically, imagine that I have a list of objects that contain Quantity and Price. Depending on the customer, they may want the table to display Quantity, Price, or Total (Quantity * Price). Each of these can be separate delegates and you can just use conditions to decide which method to use. This is useful if you are going to need this in multiple places in code. On top of that, let's say that the price is in USD and the unit on the quantity is lbs and the customer wants then in CAD and kgs. You can have a method (stored in delegates) for metric units and one for standard units. You could also have a method for USD and CAD. Then, you take all three levels of calculation, select the appropriate delegate, and then run your entire list of objects through all three selected delegates. This allows you to only have to do the if/else/switch statements at the beginning to select the logic that you would like to use and only executing them once rather than having to nest the logic within the if/else/switch statements and executing those statements in a loop. This tends to be more efficient (if you are running the calculations a lot), but it also makes the code more readable. Rather than your code reading "if this currency do this conversion else if this currency do this conversion...else do nothing", it will end up reading "convert the price to the proper currency" and then you move onto the next step. Generally, I avoid delegates per se and just go straight to classes that implement interfaces the method described in the delegate, but the concept is very much the same. Sometimes I will use lambda expressions, but that's mostly just to get something working and then I go back later to convert it to a more generic method on an object.
That's only a problem for cryptographic random numbers (for which you shouldn't be using Random anyway). For the vast majority of cases it doesn't matter (and can even be beneficial) that the seed is easily replicated.
He's not doing crypto so the normal System.Random generator will work fine :) The default constructor uses Environment.TickCount as the seed value. Loops run really fast which means looped instantiations of Random types within them will have the same seed.
In C# single quotes are used to encode a single character. For a string of characters use double quotes. string x; x = "true";
Thanks! Will try it that way, glad you helped out.
This is probably the best explanation in the thread. Most other responses do not satisfy the "simple way" part of OP's question. Start reading at "The easiest way that I have found to wrap your head around a delegate ..."
 Let's say you want to add 2 numbers: int Compute(int x, int y) { return add(x,y) ; } But now you want to make this more general and do *anything* with 2 numbers: int Compute(MathFunction doMath, int x, int y) { return doMath(x,y) ; } But what is MathFunction? It tells you what kind of delegate goes here: delegate int MathFunction(int a, int b) ; Now you can pass in any kind of function to Compute: Compute( add, 2, 1) == 3 ; Compute( subtract, 2, 1) == 1 ; Compute( multiply, 2, 1) == 2 ; There's lots of crazy advanced stuff you can do with this, but first you should make this example work. And step through the execution to see how it works. 
Others have explained what delegates are, here's a real-world example: I use a message-handling API to pass messages between nodes in a system. The messages take the form of an object: eg FooMessage. When I set up the messaging API, I pass it a delegate to my HandleIncomingMessage function that accepts a FooMessage, and returns a message processing result. The writer of that API has no idea what my code does, they focus purely on transporting messages. My code doesn't need to know anything about how messages get to it, it just processes the message. This allows decoupling of components - they know nothing but the contract. I can now easily write unit tests for my own message handling code, without needing to go faking complex network behavior. It also means that if I switch to using another API, I only have to fix up that glue-layer that assigns the delegate. 
RedditSharp is a pretty nifty reddit api wrapper that can help you out.
Awesome - just from the name of the link it sound promising :). I've been googling this since yesterday and it seems like 99% of the "beginners" guides assume you know another language already. Thanks!
Excellent. The more stuff I have to read the better :). Thanks for the recommendation.
Relevant reddit post: http://www.reddit.com/r/csharp/comments/1spxap/can_anyone_explain_c_delegates_to_me_in_a_simple/
In this case I would anonymously implement the interface, still verbose but less so than declaring a whole class 
(my code is in vb.net, but I'll give a real world example of something I just used this in. I have a program that downloads files from an ftp. they have other files in the folder and other folders as well. The ftp dll returns, from GetList() a list of objects - links, folders and files.. But what I need is the following: in the root give me all objects that are length 6 and type of folder. (edited to remove the starts with 4, that's something else I was thinking of). in the directory I'm working, give me all objects of type file. So I wrote the code to look like this: ' function for filtering the results of the ftp list to directoris only and 6 digits in length. Dim fnDirectoryFilter As Func(Of System.Net.FtpClient.FtpListItem, Boolean) = Function(i) i.Type = FtpClient.FtpFileSystemObjectType.Directory AndAlso i.Name.Length = 6 ' function for filtering the results of the ftp list to files only. Dim fnFileFilter As Func(Of System.Net.FtpClient.FtpListItem, Boolean) = Function(i) i.Type = FtpClient.FtpFileSystemObjectType.File Dim FolderList As List(Of System.Net.FtpClient.FtpListItem) = ftp.GetListing("/root/").Where(fnDirectoryFilter).ToList For Each folder As System.Net.FtpClient.FtpListItem In FolderList Dim FolderName As String = folder.Name Dim BaseFolderFTPDir As String = "/root/" &amp; FolderName &amp; "/" Dim FileList As List(Of FtpClient.FtpListItem) = ftp.GetListing(BaseFolderFTPDir).Where(fnFileFilter).ToList For Each theFile As FtpClient.FtpListItem In FileList .... Next Next edit: added C# code (ran it through a vb.net to C# util, so it may not be 100%) // function for filtering the results of the ftp list to directoris only and 6 digits in length. Func&lt;System.Net.FtpClient.FtpListItem, bool&gt; fnDirectoryFilter = i =&gt; i.Type == FtpClient.FtpFileSystemObjectType.Directory &amp;&amp; i.Name.Length == 6; // function for filtering the results of the ftp list to files only. Func&lt;System.Net.FtpClient.FtpListItem, bool&gt; fnFileFilter = i =&gt; i.Type == FtpClient.FtpFileSystemObjectType.File; List&lt;System.Net.FtpClient.FtpListItem&gt; FolderList = ftp.GetListing("/root/").Where(fnDirectoryFilter).ToList; foreach (System.Net.FtpClient.FtpListItem folder in FolderList) { string FolderName = folder.Name; string BaseFolderFTPDir = "/root/" + FolderName + "/"; List&lt;FtpClient.FtpListItem&gt; FileList = ftp.GetListing(BaseFolderFTPDir).Where(fnFileFilter).ToList; foreach (FtpClient.FtpListItem theFile in FileList) { .... } }
I've used delegates so that a consumer can get a custom filtered ObservableCollection of objects without having to jump through hoops with a complex 3rd party cache API. The implementation took a Func&lt;T, bool&gt; or a delegate. The Func&lt;T, bool&gt; implementation just created its own catch all delegate that respected the constraint provided by the function. This gave consumers on the view end a very easy way to grab a filtered observable collection without constantly asking LINQ to filter the list into some local copy that must be maintained. If they needed more power than a simple field filter they could pass a delegate and take control of all operations on their ObservableCollection. It sounds a bit odd and complex until you start dealing with the challenges of getting a continuous query from VMWare's Gemfire cache server to behave properly with WPF controls. Basically the implementation hid away all the complexites of dealing with the cache server and it's odd way of managing a continuous query. As far as WPF was concerned it was just a repo class that returned working ObservableCollections that were pre-wired (properly so WPF does not crash out or have odd threading issues) to self update as needed.
http://www.dotnetperls.com/ I found it worthwhile to take one certification class in the basics of .Net (I used VB6 years ago and was trying to work my way back in) and I was very fortunate that my instructor was a long time contractor using .Net, mostly C#. The most useful thing I learned from him -- other than being forced to do all the basics in one semester -- was finding my way around Visual Studio and setting up my environment properly. Another thing I learned in that class was the value of having a durable development environment (after a virus messed with my stuff half way through the semester). I bought a copy of VMWare Workstation 9 and put minimal Ubuntu on my laptop as a host (and hardened it by removing unneeded stuff like IPV6, and unsecure software) and ran minimal Ubuntu and Windows 7 images for development and backed up the original images after installing all the software I'd be using and running updates. I haven't had any time-sucking catastrophes since. My last job, I had Lynda.com for free and found a bunch of their videos useful. There are lots of other services and youtube videos that are probably just as helpful.
I fully second this website. Its my go to website for learning about things c# related. They explain things very well, their examples all make sense and are quite practical. Overall awesome site.
Thank you!
Don't take it too hard if you think these are complicated. Experienced programmers sometimes struggle with them too. You do need to understand what they do and how they work, but some people do struggle.
Yep. They're basically [Java anonymous classes](http://stackoverflow.com/questions/355167/how-are-anonymous-inner-classes-used-in-java) but without the hassle of needing a class/interface to implement.
Think of it like a variable for a function. A classic example is the Sort method of a dictionary object. I know sorting is a lot easier now with LINQ, but before LINQ sorting with a delegate was the easiest way to do it. So how do you sort something when you don't know what's in it? You don't know if it's a number, or a string, or some custom class. You write a delegate. You tell the Sort method *"hey, execute this function, pass it Object A, and Object B, and I'll do the rest"* Then you can write your own function for comparing A and B to determine which one is larger. Delegates are also critical for working with old fashioned C++ Dlls. C++ is full of function pointers. Delegates are how you work with function pointers when interoping with old style DLLs. 
Maybe execution code
I love MVC, even though Web Forms have caught up and gotten rid of a lot of junk and overhead I'm still hopelessly biased towards MVC.
The new hot topic is SPA. I love it a lot more than MVC. 
Web forms may have Improved but it still strikes me as a framework trying to hide the fact that its a web framework from the developer. MVC is simple, intuitive and doesn't get in your way or try to hide the fact that you're trying to build a web app.
What is so much easier in Nancy that is hard to accomplish in MVC? I did one big project on it and didn't liked it at all. IMO the bigger project, the messier nancy gets.
Can't really remove the post back cluster fuck 
Those are not mutually exclusive. Did you mean that you would rather implement the server side of an SPA using a framework other than MVC?
I'm a noob, and I would just press Reset on my PC. :D
Actually, you can get rid of them entirely by using MethodInvoker (it cleans up your code file a little by not having to specify the delegate member). public void Method(int param1, int param2) { if (InvokeRequired) { BeginInvoke(new MethodInvoker(() =&gt; Method(param1, param2))); return; } this.Width = param1; this.Height = param2; } 
So far I've found testing to be significantly easier. Especially testing controllers. Also I found the authentication stuff significantly easier in Nancy than in MVC4/5. It doesn't even require Entity Framework. I'll admit that the project I'm using it on isn't huge but it's big enough and I'm finding that it's actually a lot cleaner than equivalent projects I've done in MVC have been.
First MVC is a good choice for what you're looking to do. That said, the web side of .Net has been interesting the past couple of years if you look outside of Microsoft. There are a number of alternative frameworks out there: NancyFX, ServiceStack, FubuMVC, OpenRasta, etc. More are out there but I can't remember their names off the top of my head. Anyway, Nancy, FubuMVC, and OpenRasta are the closest to MVC. All are pretty nice but I would lean towards Nancy or perhaps Fubu based on what you want to do. ServiceStack, on the other hand, is more an alternative for Web API than MVC and would be a good pick for web services.
You can have your server side in MVC + WebAPI, and then your client in your favorite flavor of SPA framework.
I started a new job in January this year. My previous job was 10 years of Web Forms and I thought it was then end-all for .NET web. My new job forced me to throw all of that out the window and write a from-scratch MVC app (plug-in hosting framework). I'm now using MVC 5 and I must say that it does work very well. The Razor templating engine is probably my least favorite part, but that's primarily due to the fact that I'm so ingrained with web form practices and abilities (interweaving HTML and code just makes me twitch). The stark separation between code and markup was far wider than I thought, and is certainly miles apart from Web Forms. However, if you want to unit test your UI logic code, I think MVC would facilitate that more than Web Forms would (though I admit to being out of the loop on current bleeding-edge Web Forms tech). EDIT: You mentioned IoC and DI - I use Unity alongside MVC with zero issues. I even have MEF running side-by-side with it. ;) **TL;DR: MVC is fantastic for making .NET web applications. Microsoft's ASP.NET MVC (available from nuget) is a first-party framework that works well and is constantly improving.**
I am in the minority that thinks .net MVC 1-5 is *just ok*. 99% of my gripes with it come from the default routing. I have never once had to do something with .net MVC routing and though "man, this is way better than route mapping in any other framework". I much prefer sinatra style routes. I haven't investigated any of the other MVC frameworks for .net, mainly because I can't use them at work...
Sounds like it might be what you want.
My favorite thing about MVC is how models can automagically move between javascript and the controller.
You have to really know your javascript to do this effectively.
Yes, forget WebForms, that is all that needs to be said.
Nothing in MVC requires Entity Framework.
[**@jonskeet**](https://twitter.com/jonskeet): &gt;[2013-12-13 06:43:20 UTC](https://twitter.com/jonskeet/status/411385831476428800) &gt;Manning Deal of the Day December 13: Half off C# in Depth, Third Edition with code dotd1213au at [*manning.com*](http://www.manning.com/skeet3/) ---- [^[Mistake?]](http://www.reddit.com/message/compose/?to=TweetPoster&amp;subject=Error%20Report&amp;message=http://reddit.com/1st32i%0A%0APlease leave above link unaltered.) [^[Suggestion]](http://www.reddit.com/message/compose/?to=TweetPoster&amp;subject=Suggestion) [^[FAQ]](http://www.reddit.com/r/TweetPoster/comments/13relk/) [^[Code]](https://github.com/buttscicles/TweetPoster) [^[Issues]](https://github.com/buttscicles/TweetPoster/issues) 
&gt; or try to hide the fact that you're trying to build a web app it sort of does, but in a good way: generally you don't have to mess around with form data or URL parsing - objects and parameters just sort of show up to your controller method. but there is nothing spooky or clunky about the abstraction, which is why it's so much easier to work with than web forms.
Microsoft has a huge doc on the different products and techs they recommend you use. While WebForms is still supported and will be for the foreseeable future, Microsoft has stated that if you want to build a new site it should be based on MVC and WebAPI where possible and falling back to WebForms and WCF only when you need to for a particular reason. Further I would advocate for the use of MVC, IMO it is a superior platform for development of dynamic data-driven web applications. Now if you are making a bunch of basic pages with maybe one or 2 web controls that do any real work, WebForms may be an easier to use option. EDIT: Not really understanding the downvotes here. Look I let this shit slide in other subs but this one is supposed to actually be an informational discussion. If you as a developer do not have the stones to stand up for your contrary opnion and actually talk about it then stay the hell off the downvote button. I get reddiqute is dead for most of the site. For subs like this is should be adhered to. If you desire to bury things you do not like you are the exact kind of developer this industry does not need, please go back to flipping burgers. 
Out of curiosity, can you cite an online source for this guidance? I'm interested, mainly because I've had a similar discussion earlier today.
Managed to dig it out of our company Dev chat logs: [InfoQ Summary](http://www.infoq.com/articles/Microsoft-Stack-2013) [MS 2013 Tech Stack PDF](http://go.microsoft.com/?linkid=9832707) 
Hey Rob One thing I did to start learning was to just download C# Express and begin to fiddle with it from there. I would basically make my own GUI's (drag and drop) and begin to toggle with the commands. Anything from making a button click prompt a user asking a question, to executing lines of code to a console, so on and so forth. I even made an experimental web browser with full buttons and support. I had a screenshot button that would screenshot the webpage I was on and save it to a predetermined folder under my documents. Also, if you can find any tutorials online that have more than 10 steps, to do some complicated things such as image editing, look at those. I used to take snippets of others codes and try and get them to work with any of my projects. It's kind of a hacked way to learn, but I did all of this before I started to really learn. That's just how I started out, at least.
Strict TDD says write tests first always. In practice, a mixed approach is probably more common. Try strict first, and switch if you lose traction.
&gt; runs on mono not an endorsment. mono is 1-2 orders of [magnitude slower](http://www.techempower.com/benchmarks/#section=data-r7&amp;hw=i7&amp;test=json&amp;l=2) than msft's CLR. 
Tests first, hence 'test driven'.
I don't run it on mono but its nice to know its possible...
My project uses kendo ui, backbone js, knockout js, signal r, and require js. This is all for the ui stack. 
I'm glad to hear that! I will have to give it a look, myself. Another thing I find to be fun is to try and translate logic into another language. Really pick apart words. When I say language I mean spanish, french, german, etc. If you're unfamiliar with any, then don't worry about it. But I like to read through logic in French (as i'm brushing up on it) because it makes me sit down and think about what I'm really reading. Weird, I'm sure, but I'm a weird guy.
A little misinformation here. While MVC is much more robust, easier to test and abstract, those documents provided suggest not using webforms for a single purpose, mobile. Nowhere else in any of those docs does it suggest that you should choose MVC over WebForms. In reality over 75% of development is still done in webforms (and 90-95% when I talked to the Microsoft alumnai at Mix11) The only thing being dropped is Silverlight. &gt;While even old .NET staples like WinForms and Web Forms have found a place, RIA containers such as Silverlight and Flash are definitely out. As you can see in figure 5-15 (below), Microsoft doesn't want to wait around for Silverlight 5's planned 10 year lifecycle. They intend to squeeze out RIA containers by the end of 2015. Webform dev does suck, I'm the first to admit it, but it has its advantages, a huge userbase, lots of examples and stability. Much easier entry level technology too.
WebForms isn't going anywhere, it's a huge robust ecosystem that drives a tonne of toolage and support. Not to mention it drives more sales of Microsoft server products, which really is the kicker for Microsoft. It makes them money.
&gt; mainly because I can't use them at work... Why is this? Are you worried about the lack of support?
&gt; Microsoft has stated that if you want to build a new site it should be based on MVC and WebAPI where possible and falling back to WebForms and WCF only when you need to for a particular reason Not going anywhere, but kinda implying you shouldn't use it because Microsoft says so. According to those docs avoid webforms only if you're building a mobile site, and even then its suggested only on the infoq site. And on that I disagree, the latest bits are using bootstrap in the default examples and with a mind on your viewstate you can probably pull mobile off too. 
Care to elaborate on this? Are you referring to something new to MVC5? Whenever I need direct model access via javascript, I've always just output the model in a script tag by converting it to JSON. Are you suggesting there's another way?
&gt; Are you worried about the lack of support? Not at all. More often that not .net MVC is fine, and everyone is already pretty familiar with it. There just isn't a compelling reason for us to switch, especially since we are moving away from .net for new projects.
The web server is slow as fuck, someone's already started a ground up rewrite - http://forcedtoadmin.blogspot.co.uk/2013/11/servicestack-performance-in-mono-p2.html?m=1
Telerik is just wrapping up a great 30 day blog series of TDD. Here's day one: http://blogs.telerik.com/james-bender/posts.aspx/13-09-09/30-days-tdd-day-one-what-is-tdd
&gt; There just isn't a compelling reason for us to switch I think the feature set of some of the alternative frameworks is a good enough reason to switch but like you said, ASP.NET MVC is a fine option on it's own. &gt; since we are moving away from .net for new projects Can I ask why? 
Wasn't aware, thanks. Seems like a new library pops up every few days.
Have you tried compiling them and see which gives you errors? I can tell you the first is wrong. The keyword "class" is only used to define the class. The second might be correct, but I rarely use arrays, so I don't know offhand what the syntax for declaring them is. In your last example, you are calling a function named Field_to_edit() that is defined inside the Guy class. I don't think that's what you want. I think you want to set gamblers[i]'s Field_to_edit member to "Ex". To do that, you'd use: gamblers[i].Field_to_edit = "Ex.";
Awesome thank you. I'm editing a starter code so it give me errors regardless of what I do. I could try making a new program and running stuff in there to get proper error messages.
That is one way. Sometimes, I just make a javascript anonymous variable for the $.post parameter, with only a subset of the viewModel and volla, MVC takes what it can get.
 Guy[] gamblers; gamblers = new Guy[3]; Would be the correct way. Think about it like if you were doing a string array. String is a class in the same way that Guy is a class. So String[] creates an array of strings the same way that Guy[] would create an array of guys. Also of note, you could make that declaration on a single line. I understand that it's sometimes useful to declare something in your class variables then assign it later, but Guy[] gamblers = new Guy[3]; is perfectly acceptable as well.
I'd call it the loop body.
I agree. The only time I use arrays is if the size is always going to static once created, or if I'm passing it back out to a COM object that doesn't support generics (even then I build a list, and return List.toArray). 
Yep.
While I've only just read about Nancy, it seems like it's comparable to MVC in the same way that Sinatra is comparable to Rails. Building just the bare minimum to get you by for a quick and easy API is going to be much faster (thus easier, in a way), though not as clean. Once you start needing more than just a simple CRUD API, it's time to go ahead and use the full-featured framework. I've been sticking to Sinatra with Mongo for really quick single-page apps that only have to read / report data, and maybe input data from time to time (think a blog, or a photographer's portfolio), but if I can get that accomplished in .Net just as quickly, I'd rather stick to the languages I really know and love like c#. Gonna have to give Nancy a shot this weekend.
duh, I see now. You don't need the finally block though you can just increment if you don't rethrow in the catch block.
could also be interesting to have it accept T where T: Exception to catch only custom exceptions.
Thank you! Small problem but it's a huge help. I'm going to take another shot at it tomorrow AM.
Pro tip for computer science in general: isolate the problems you have into more manageable subproblems. Then do it again until it's as simple as possible to do what you want, but no simpler, to paraphrase Einstein (I think). This starts with compiling your code, in small, separate parts if need be. 
True
A block.
You should create enough that your tests will compile. What I like to do is write my tests as if things did exist, then use resharper to generate enough so that I can get the test to compile. Usually this means a lot of NotImplementedExceptions to begin with. This approach is good because you end up writing code that is more testable because you write it so that the tests can run.
Can TDD be applied to game development? I have a hard timr visualizing how I would cobstruct th√© testcases
It can also provide a more readable alternative to reflection, in some case
You can also declare what objects will go in the array when you initialize it: Guy bob; Guy steve; Guy joe; ... Guy[] gamblers = new Guy[3] { bob, steve, joe }; I believe you wouldn't even need the three there because if you don't specify how many objects will be in the array, the number of objects it can hold will be equal to the number of objects you assign it at initialization. I also saw that the Guy class has a String Name field. You could even give the array new values while setting the Name field like so: Guy[] gamblers = new Guy[3] { new Guy() { Name = "Bob" }, new Guy() { Name = "Steve" }, new Guy() { Name = "Joe" } };
It can be, but keep in mind that writing tests of graphics, UI, and threading is more complicated than in other areas. TDD mainly helps with keeping your other objects, the ones that drive those systems, testable. 
Haven't even heard of List&lt;&gt; yet. I have very very little programming experience and am still learning the basics. What is the benefit of using a List rather than an array?
Haven't got the slightest clue what it is but I'm writing down everything people mention that I haven't heard of so I can look it up later. 
A generic List is great but he should focus on the basics of OOP first. Then when he understands a simple array move into something more modern.
Fyi: Try to avoid directly indexing into an array (the [1]) without at least doing a null check first. Meaning that if your array only has one element at [0] then [1] will throw an error when you attempt to get [1].Name since [1] is null and you cannot get .Name of null.
You should consider using a javascript console for some of this basic OOP work you're doing. If you're in chrome, hit f12 and select the far right tab that's named "Console". This will allow you to input one line of code at a time. Try something like this: var my_array = []; my_array.push("One"); my_array[0]; etc.
What I'm thinking of doing is just advancing in the book without completing the project to get some more information on programming in general while workings on bits of the project on the side. Right now I'm making a "new" program to try and figure out how to set up the RadioButtons for the big project. I think if I just work on getting a workable code for each little segment, say 1 a day, I'll be able to get it eventually. 
Have the button do an Auto-Postback or wrap the radio button in an update panel. Bear in mind, neither of these are particularly good ideas these days. Depending on your scale it will most likely work fine. But if you want a more true "ajax" feel, look into ASP.NET MVC or better yet, angular.js or knockout.js Hope this helps.
Because you can do this (say, in a console application): class Program { static void Main(string[] args) { List&lt;Guy&gt; guyList = new List&lt;Guy&gt;(); guyList.Add(new Guy() { Name = "Gary" }); Console.WriteLine(guyList.Count); // 1 Console.WriteLine(guyList[0].Name); //Gary guyList.Add(new Guy() { Name = "Ray" }); foreach (Guy dude in guyList) { Console.WriteLine(dude.Name); //outputs: Gary (newline) Ray } Console.WriteLine(guyList[0]); //also outputs Gary } } class Guy { public string Name; public override string ToString() { return this.Name; } } edit: Also, it's more forgiving, as you can see I did not specify the size of the List, merely that it would hold those objects. I can add objects to it, and iterate them using a foreach loop (as opposed to a For). I can also access them the same way that you'd access them in an array, so you aren't really *losing* anything. edit edit: You can also have fun with Linq: var x = (from p in guyList where p.Name == "Gary" select p).FirstOrDefault(); Console.WriteLine(x); // Gary
Well, I'd argue that storing objects in an array isn't really the basics of OOP. To me, this seems like more of a data structures question, which is typically taught after the "basics".
I lump OOP in with data structures in my head. I wouldn't disagree that they are technically different but it all falls under the umbrella of "how am I going to store this data".
This. but change: dollars.cash = dollars.cash += 1 To: dollars.cash += 1; Or: dollars.cash++; 
Subtle attacks weren't necessary dude. There were millions of vb6 devs they had to onboard into .Net and WebForms was the perfect method to. It was almost exactly like vb6 at release, remember the gridlayout? The bad developers were there before you and will be here long after you are gone. Microsoft understands that bad developers buy their products too. Some even then learn to become better programmers. Most don't. I'd rather someone pickup webforms over php, I can't believe you would even suggest that. Makes me think you haven't coded a webform in your life. Webforms is managed code and not scripted. I'm pretty sure you mean old school asp. Microsoft really doesn't care as long as you build with studio, on a windows os, for a windows server. It looks like they will even settle for one of three. Or none and an xbox. As a guy who is hired to make sense of huge investments in webforms by corporations this kind of drivel is hurting the ecosystem because there are huge investments in webforms and skills in this paradigm are still in high demand, especially in government. Rewriting in another better method is sometimes not an option.
Yeah I just noticed I had the radioButton's text determined by the radioButton and not the button1. Now what I'd like to do is create an array that has contains 2 instances of Money. Each instance contains a different cash amount and I want the first radio button to display dollars[0]'s cash value and the second button to display dollars[1]'s cash value. I've written: namespace Testing_RadioButton { public partial class Form1 : Form { public class Money { public int cash = 50; } Money dollars = new Money(); public Form1() { InitializeComponent(); Money[] dollars = new Money[2]; dollars[0] = new Money() { cash = 50 }; dollars[1] = new Money() { cash = 100 }; } public void radioButton1_CheckedChanged(object sender, EventArgs e) { } private void button1_Click(object sender, EventArgs e) { dollars.cash = dollars.cash += 1; radioButton1.Text = "Joe has " + dollars[0].cash + " cash on hand "; radioButton2.Text = "Bob has " + dollars[1].cash + " cash on hand "; } } } But I get an error saying: &gt; Cannot apply indexing with [] to an expression of type 'Testing_RadioButton.Form1.Money' Does this mean I'm typing in the wrong code to access the data in dollars[0].cash? 
&gt; Money dollars = new Money(); You are trying to use dollars variable as an array but you have not initialised it. Try this: Money[] dollars = new Money[2];
Made the change. Thank you. 
You are first initializing dollars as a single money instance then you are trying to change it to an array.
Yes, because a javascript console is immensely helpful for running C#.
It amuses me that you think there is some fundamental difference between running javascript in a console and writing a C# program when attempting to learn the fundamentals of arrays. Code is code.
Could also use an ArrayList - since it stores data as objects you can have 3 objects of Guy and 4 objects of Greyhound in the same array. It dynamically resizes. The downside here is you'll have to caste it to use those objects in the array later. You could also reference those objects like if(object is Guy) { do something } 
VS has had native support for property and method creation in a TDD manner for several years. No need for resharper there.
&gt; If you asked how to drive a car, would you be happy with someone telling you to ride a bike? Transportation is transportation! If someone asks what "cake" is in Spanish, do you tell them it's "g√¢teaux" in French? Foreign language is foreign language! Your metaphors, while amusing, have zero relevance to the topic at hand. What we have is a new programmer looking for help within a specific language's forum about a fundamental task to all programming languages. Attacking me for encouraging him to use more than one language as a learning tool comes across as either zealotry or stupidity. Its a shitty programmer that only learns one language. The sooner this person realizes that there are multiple syntax options for accomplishing the same thing across different languages the sooner they will become a decent programmer. And that is the last time I'm going to post about this with you because, quite frankly, I don't appreciate your naked aggression within a very simple help thread.
I'm really new to C# (as in just learning it) and just finished a great series of videos. [Here is a link](http://channel9.msdn.com/Series/C-Sharp-Fundamentals-Development-for-Absolute-Beginners) to the video series I've been using, you'll want to check out video #9 (last one on the first page). After you understand how the videos work (meaning the methods the tutor uses) move on to the later ones that deal with collections (video #21). Those videos are only around 20 minutes each so it's worth watching both. I'm not sure how long you've been using C# but if you're still learning (or have questions about a specific function that is addressed in that video series) I can't recommend it highly enough. /u/Cylons recommended it to me and after many false starts trying to learn C# from books/random websites I can say without a doubt that it is probably *the best* introduction to C# that exists.
I don't know what your form looks like but you might want to use required field validators and compare validators instead. This will give you the added benefit of performing the checks on the client side and preventing a round trip to the server.
TDD is a way of designing software, but by using testing. Why would you be testing the graphics/ui anyway? You should be unit testing them, any other testing would be integration/acceptance testing, and you wouldn't be testing graphics much more than seeing if the window opens. This is not a restriction limited to TDD but testing.
aahhh , thanks for all you help guys, i figured that one up! :D
Sorry, I misunderstood your question
I've made similar observations myself, and I certainly don't work efficiently when I'm forced to grind away at a problem. The only time I'm doing good and sitting for long stretches of time is when I'm lucky enough to get into the zone. Most other times I solve a fragment, walk away for a while to do something else and mull over the next part. Seems to work well, and it's easy to pull off as a ~~freelancer~~ software consultant.
A (generic) list is more versatile. You can add objects as needed, and not worry about how many are required upon initialization, so you will never have null objects, unless you explicitly add them, unlike a uninitialized array. BTW, since C# arrays actually inheritc the type IEnumerable&lt;TSource&gt;, you can do the same Linq queries (as in smdaegan's example) with arrays. However, with a fixed size array, if you forgot to fill all elements in, you could get a null reference exception. I highly recommend checking out generic types (and methods), including List&lt;T&gt; - they are some of the more powerful aspects of C#. Once you understand generics, you can make your own generic types and methods.
Issue is that VS requires metric ton of space on the boot drive. If I uncheck every single checkbox: http://i.imgur.com/RpCGqQW.png So I can't install it on the drive I use for EVERY other non-OS application. I actually cannot isntall it period. I have no way of cleaning out the C: drive.
If you have less than 3GB available on your boot drive that is a problem. While the operating system is running it creates virtual memory space and needs several gigs of free disk space to run properly. 
Why can't you clean C:\ or make it bigger? 3.5GB on C:\ is not a gigantic ask for an IDE.
I am aware of that. What I meant is whether there are some functional workarounds around this issue (as people are complaining about this all over the internet) or I am just not trying C# until I buy a new HDD. I have no way of freeing that much space on my OS-only SSD.
Because I simply cannot? 3.5GB is surely way more than any other IDE ever asked from me (NetBeans, Eclipse..) or there was no issue installing it on different drive. My SSD leaves me with something like 4GB after the windows installation.
SSD performance drops rapidly for writes when the drive is that full, just FYI. How small is your SSD?
I've never seen anyone else complain about this. If you have, it is probably because you found people complaining about it because you searched specifically for people complaining about it. The fact is, you just need more space than you have. Either clean up some space or you will need to buy a new hard drive. 
Your boot drive is simply too small. That is the problem. No need to continue looking for a solution other than to get a larger drive whenever you have the ability to. If developing is truly something that is important to you, you'll find a way. Personally, I am uncomfortable if I have less than 80GB (or less than ~10%) of free space on my boot drive. As Hardrive pointed out, SSD performance is impacted with as little free space as you already have. I would listen to hard drive advice from someone with such a username. 
Shows 30GB.
Well obviously. You don't really find specific information unless you're searching for it. Fact is, I need more space for one specific application that doesn't allow alocating its files elsewhere. This is the first time I've had to deal with this.
3.5gigs is not that much, obviously. The problem is that it forces boot drive. I've never had to install anything that would require this.
Well, my boot drive is simply too small for Visual Studio that for whatever reason requires to sit its files on it.
Yea, kind of lame to not allow changing paths. I think you'll run into other (non Visual Studio) problems with such a small drive. So I assume you have a storage drive. One thing you could do is create a virtual machine and store the virtual drive on your storage drive and install Windows and VS on the virtual machine. 
Don't confuse your reality with an objective reality. Don't abuse the word "most" 
Then I have a lot to be thankful for, and you should be looking for a better job, safe in the knowledge that such places exist. we are both talking about a reality, probably both subjective to some extent. 
That does seem like the only option unless I want to buy hardware to accomodate for IDE, yeah.
Member overloading is useful when you can accomplish the same purpose using different input. I don't know exactly what the code is doing in the example you gave, but it looks like there are least a dozen ways to do the same thing. The methods will be different, because they take different input. Think of it this way ... You could have two methods called GetById. The first might take an int, and the second might take a string. The version that takes a string might just check to see if the string can be parsed, parse it to an int, and then call the first method. So logically, you're doing the same exact thing in both cases. You're just allowed to pass through an int, or a string representation of an int. This is a good example of member overloading. 
Oh wow. You might be able to save some space by disabling hibernation or turning off or moving your page file.
Take DateTime for example. You can create one from just a year, month and day or you can also specify the hours, minutes and seconds. Both options create a DateTime object but in a different way.
Hmm. I had hibernation, but I forgot about the page file. I tried to move it, that atleast frees enough for Visual C# 2010, which should be enough for my learning purposes atm. Thank you.
The DateTime constructor is an excellent, and I dare say the best, example of constructor overloading in the default class libraries.
Well.. thank you kind sir.
Delete your pagefile
Yeah, this is a better example than mine. The most important thing to remember is that properly overloaded methods will accomplish the same tasks, but using slightly different input. You COULD have an overloaded method that accomplishes different tasks, but that would be the wrong way to use overloads. 
VS is kind of more extensive than those though...
If there were no other variables such as scope creep or unreasonable deadlines I would have no problem judging a programmer by outputs only. Unfortunately many programmers don't work in ideal situations. At a previous company I worked at I would constantly clash with upper management on deadlines. I would estimate a project to take 5 months and they would want it in 3. We would compromise and settle on 3. What am I supposed to do with 3 months to implement a large project from scratch? At first I would simply scrap everything I knew about proper coding and just destroy myself and my team to meet the deadline. Then eventually I learned this was counterproductive and began doing things properly and drastically missing deadlines. From the outside looking in our team sucked. We were either delivering bad (buggy) code or delivering good code late. When I left that company I took several people with me. If you were to blindly look at this same team of people we would appear to have been a band of morons at one place and a brilliant well oiled machine at another. My whole point is that when you judge a programmer you need to look at more than just the outputs because sometimes the outputs are influenced by things out of their control.
Hi, I'm learning C# as my first programming language as well. Thanks for the pointers. So, if I'm understanding correctly, the .NET Framework is pretty much just a library of classes and methods to make my life programming in C# easier?
Eric Lippert indicated that they were actually partially implemented, but due to how WPF's dependency properties were implemented, the two could not exist together. http://blogs.msdn.com/b/ericlippert/archive/2009/10/05/why-no-extension-properties.aspx
C# is built on the .Net framework. It's required to develop in the framework, and some version of the framework is "targeted" with any C# project, meaning that you can access any part of the framework just by linking the library that you need and calling the methods or accessing the objects in it. Any program you make will also require the .Net framework to run properly, so make sure that any computer that you copy your final .exe to, it has the appropriate version of the framework installed (or Mono, if you aren't targeting windows)
Tip : Try using generics.
I don't really see how extension properties would make your problem any better (please note: I am not a fan of extension methods, I can see why they are necesary, but I think most implementations have a better solution). DTO's are lightweight entities that you create to send to a client. If you have data on your server that you need to send with the DTO in order to use that data in your client, just add a property and you're done. If you have data on your client that you want to use where you use your DTO's, you are probably better of making a view model and using that instead. I feel that extension methods can create a lot of clutter, when used inappropriately. You are of course welcome to have you own opinion, but the way I see it, adding extension properties on top of that would not make things better. You could just slap a base class on your DTO if you really insist on not having double properties on your DTO's. The way I see it, that would undo the whole point of DTO's, because you are creating non-lightweight data holders.
Your post is now three lines of text and five lines of complaining about downvotes. Is that really what you want us to read?
Thanks. The example code actually looks very similar to mine. Instead of wrapping the list in a class, my ConsoleMenu class require a list of IMenuItem. Works in a very similar way. Just need to figure how to prevent the user from implementing the IMenuItem instead of the other two. Can an interface inherit from abstract class ? If so, I could make the IMenuItem into an abstract class.
Is there a reason you want an interface or abstract class? The reason I mentioned that you should look at how Winforms implements menus is because there is only MenuItem, not 2 different classes/interfaces.
My goal was to practice interfaces and since I usually add menus to my homework assignments it looked like a good idea.
I totally agree with the theme of this article, and I have definitely seen, as I'm sure many other developers have, the phenomena of bad developers getting a lot of credit for 'working hard'. I used to have an insane boss who would yell at people for not having "Their hands on their keyboards at all times". Luckily I think he learned his lesson when our entire 4-man development team (out of an 8 man start up) all quit within 2 weeks of each other. 
What is a delegate? A delegate is a strongly typed pointer to a function. As a developer for only a few (4) years I can tell you that the only times I've realistically used delegates has come up twice: When I am manually attaching event handlers to dynamically created controls. In order to attach the event handler you would do something like: MyControl.OnClick += [delegate name]. Or you could do something like "New DirectoryInfo("[path]").OnFileChanged += [delegate]" to create a file system monitoring service. The other instance was when you want to spin off processing threads so that your UI doesn't lock up during processing. You would create a thread and then pass in the delegate in the constructor for the thread. 
I've seen your numerous replies. Suck it up and buy another HD. If you don't want to do that then install windows on your other drive and boot up conditionally to it when you want to use that IDE so that you can install VS on your 'media drive'. You're in the CS field somehow. You're using an IDE which costs $200-$1000 per copy. You're probably a nerd like me. You can find a way to make this work. 
Have you heard of generic collections? You can create a collection of any type. List&lt;T&gt; var strings = new List&lt;string&gt;(); var ints = new List&lt;int&gt;(); var widgets = new List&lt;Widget&gt;(); 
"Human readable" is a weak argument for Xml. Having a well structured schema that can be validated, as well as great tools for serialization are much better reasons for using Xml.
YES! Have you ever tried communicating with a web service with a poorly documented (or undocumented) flat file? (I once had to reverse engineer a flat file format coming back from a network device over telnet. I would have **killed** for Xml.) Xml schemas are essential to good web services and other forms of data communication. Saying Xml is just another file format is just plain ignorant.
With C#, you also get the benefit of the Linq to Xml framework classes. Being able to construct Xml quickly and easily without concatenating strings is very useful. Even more useful is Linq to Xml's ability to **query** an Xml document. Rather than having to parse a bunch of strings, you can easily identify which portion of the document you want and manipulate it with Linq. That is something you cannot do with a flat file, and I'm not sure that it's possible with JSON (I could be wrong). http://msdn.microsoft.com/en-us/library/bb387061.aspx
Will probably change to abstract class because when the interface define the MenuItems list there is no way to instantiate the list automatically (No constructor), so the user will have to do that. Unless, it is okay to let the user do that? This is what i mean: SubMenuItem item1 = new SubMenuItem(); item1.MenuItems = new List&lt;IMenuItem&gt;(); Only that way he will be able to add items to that sub menu. Thank you for your help =)
Hmm, any general guidance on how to implement it using an interface ? The requirement at the moment is only to have the ability to add a sub menu option and an action option. Just have one interface that define everything i need to have in the MenuItem ? (title, list and action)
Not helpful.
I agree
To output to the console, you can use the Console static class. It has methods like WriteLine() which writes a string to the console and follows that with an automatic "return" for a new line.
Generic Collections dont have much to do with Method Overloading though.
I'm not sure what you mean by "txts" - do you have 15 different questions, and you need to show each one in turn?
you can use a do while loop to check if the user answered this level's question correctly.
Not helpful but this just looks like someone fishing for homework help. Telling them to speak to the TA or professor is the right advice, not doing the homework for them.
Why don't you just format your questions as lines in a single text file? It would make everything far easier for you. Then your code looks roughly like: while line = file.readline() { //turn line into question/options/answer array //write question/options to console //accept answer from user //if given_answer != actual_answer { break; } } //display score, or whatever If you're looking for specific syntax help, google will get you your answers far faster than reddit.
You could just put it in the projects "root" namespace? 
A pointer in the right direction or nothing would be appropriate. If they need help from the Professor or TA they will ask them without being told to.
Lecture format is the most worthless way of learning to program, I learnt more from google on the topic than I did all my teachers through college. This kind of attitude you are dropping here is just silly.
You can add the using statements to the default template of a new class. I also think Resharper solves the problem for you.
Not in C#, no. This is only an option in VB.NET projects. You're kinda stuck with the using statements. The comment in this thread regarding the templating works very well if you want to take the time to set it up.
You can actually define any class in the global namespace simply by defining it outside of a namespace block. It is then automatically imported into any other file in the same project, and if the global class is public, then any referencing project also imports it automatically. I would have to check Framework Design Guidelines, but my guess is this is Not Recommended. :-) It should solve your use case, though. EDIT: words
yea, I might go the template route. Would be nice if Microsoft offered a web.config setting or something
yea, I'm not sure about that. I'd rather go with modifying the default template or just using the namespace I'm extending. Thanks for the reply.
I might go this route. the only drawback is having unused using statements.
Another point for Resharper. It removes and sorts all using for your whole solution at once.
The common practice is to put the extension methods you use a lot into a "toolbox" project. Then they're just one using statement away. 
we do this as common practice at work and works wonderfully and many of our project templates have the usings in the class definitions now as well 
and auto adds the usings when referencing a new class, which is very helpful since the resharper intellisense searches the entire project not just the namespaces referenced in the current file 
I think some others have effectively said this, but there are subtleties that may not be totally clear. The closest you can get is putting things like that in the root of your custom namespaces for the best chance that they're automatically available. It works across projects and assemblies. Here are some contrived examples: Assembly: MyStuffExtensions.dll namespace MyStuff { public static class StringExtensions { // Use it like this: // var msg = "my value is {0}".Format( val ) public static string Format( this string format, params object[] args ) { return string.Format( format, args ); } } } And you can use it like: Assembly: SomeTool.exe (references MyStuffExtensions) // Notice I'm not explicitly using "MyStuff", but the extension is available using System; namespace MyStuff.Applications.SomeTool { public class Program { ... public string GetErrorMessage( Exception e ) { "SomeTool encountered an Exception:{0}{1}".Format( Environment.NewLine, e ) } ... } } And if you have different root namespace somewhere, you can at least get to your extensions easily if you "using MyStuff" Assembly: AnotherTool.exe (references MyStuffExtensions) using System; using MyStuff; namespace OtherStuff.AnotherTool { public class Program { ... public string GetErrorMessage( Exception e ) { "AnotherTool encountered an Exception:{0}{1}".Format( Environment.NewLine, e ) } ... } } Hope that helps.
What about json? File formats are like tools. Use the right one. XML is just one format among many. XML is very wasteful if you have size constraints. But you totally reverse engineered a flat file that time, so I don't know. 
Also configuration files changing the behavior of a code file is a bad idea. Templates or ReSharper is a better solution.
Best practise is to have a separate namespace for extension methods. If you're writing domain specific extensions then I would keep those in another separate namespace to the general extensions. Guidelines also state **not** to add extension methods to the same namespace as the object they are extending: &gt;**DO NOT put extension methods in the same namespace as the extended type unless it is for adding methods to interfaces or for dependency management.** http://msdn.microsoft.com/en-us/library/dn169395(v=vs.110).aspx Keeping your extensions separate prevents you from getting conflicts if the guys who wrote the original object decide to add a method with the same name as your extension, and also prevents other people from importing your extensions by accident.
Namespaces help you prevent naming collisions. If you put everything into a single namespace you're not using them for what they were intended.
Project is a class library with the target framework .net 4 (project restriction) I tried to change the reference of Microsoft.Office.Interop.Excel to a lower version (was using 14.0) but the problem still appears when i build the project. Fixed: I was missing a reference to Microsoft.CSharp. I didn't knew i needed it ..
You could create an extension property for Array called Count so that it would become consistent?
There are several extensions for hiding the menu bar. I use VSCommands, and have no toolbars pinned, so all I see is the titlebar and document well. Also, you can always hit `Shift-Alt-Enter` to go into full screen mode, which removes the titlebar and much of the surrounding chrome.
Shift Alt Enter seems really good for now. Will try to work with it like that, big thanks!
I used Kendo for the first time recently, it definitely made a few things quite easier. I'm still getting used to referencing images and static paths correctly in MVC. 
Well fuck me, WCF is already getting outdated?
The purpose of configuration files **is** to change the behavior of code, but I do understand your point.
I don't know how this changes with Rosylin, but this is because of the Dynamic Binder. Currently in C# for the compiler to be able to compile anything that has "dynamic" keyword.
Yes, poorly expressed from my side. Any code file with all dependencies fulfilled should both compile, and work identically no matter where it is placed. We don't want [csharp.ini](http://www.php.net/manual/en/ini.list.php).
You can also write: string x = "true"; 
Screw everything about the AJAX Control Toolkit.
To save you a bit of vertical space, there's the [Hide Main Menu](http://visualstudiogallery.msdn.microsoft.com/bdbcffca-32a6-4034-8e89-c31b86ad4813) extension which will collapse the "File/Edit/View...." menus until you press "ALT".
Not really. Here is the story: * WCF had poor support for REST but due to the nature of the design WCF can support REST * As a result the WCF team started with a REST extension to WCF * Due to design differences between REST and WCF itself it was determined that implementing a RESTful framework on WCF would be more work and trouble than it was worth. * The WebAPI project is created to implement a RESTful framework on top of ASP.NET using similar concepts to what is seen in the MVC framework * This of course leans itself more naturally toward a REST implementation and developers seem to like it * The current recommendation is that if you want to do REST and know you will only ever do REST style integration the WebAPI is quicker and easier to work with. If however you need more portability with your message format and/or transport used (say the same service supports REST and RPC) then WCF is the way to go.
Thanks, I was really unaware of it. It's nice getting a some more background on the development that's been happening.
Awesome read, thanks! It might be cool to have a graphic of this process. 
I'm sorry that I will not answer your qustion directly. However I would suggest using a C# Twitter Library (via nuget or download) A quick search turned up : https://github.com/danielcrenna/tweetsharp and http://linqtotwitter.codeplex.com/ I hope this helps :D 
I don't know if this is good practice, but you can also use `var` `var x = "true";` and the compiler will know that `var` really means `string`. http://msdn.microsoft.com/en-us/library/bb383973.aspx I use it when I'm initializing a bunch of variables at the start, so it all looks nice and pretty with var instead of `string`, `int`, `Dictionary`, etc. Again, not sure how accepted this is in the real world. Just a hobbyist so far.
They're also to help organize things. We have a "heartbeat helper" class that we use in nearly all our services to make sure it stays up. A "StringHelper" class that has a lot of extension methods such as .TrimToMaxLength() and .RemovePunctuation(). We have a SQLHelper for various interactions with databases and a ErrorLogging class that does some custom work on that end. So, how many different using statements should we put in? It's actually not that big on the grand scale of things, and simply adding it to our projects is simple and effective. Most of the classes have one or two extension methods total, and separating them out would just make them harder to navigate.
You could use Fiddler to check if it makes a good request.
this sample has an extractor for binary files stored in office docs http://code.msdn.microsoft.com/office/CSOfficeDocumentFileExtract-e5afce86
I took a quick peek at the ModelFormatting project; I like the concept! Definitely a lot more descriptive than the traditional `String.Format` method. Couple thoughts: * consider moving the logic out from the `ModelFormatting.Extensions` class and into a `ModelFormatter` object whose individual elements can be tested (consider moving the various searching, reflection, and other tasks into their own classes as well to be individually tested). This will also open the door for specialized implementations of the `ModelFormatter` if you wanted to extend its functionality. * consider updating the API to pass in an `IFormatProvider` (which usually translates to a `CultureInfo`) such as in this [`String.Format` example](http://msdn.microsoft.com/en-us/library/system.string.format%28v=vs.110%29.aspx#Format5_Example); especially if this is used for emailing, this should allow consumers of your library to custom format dates, currencies, numbers, etc without having to change the thread's current culture. This can be useful for automated emailers sending mail to users with different culture settings. * consider having an option/overload to have the formatter throw an exception when a flag is not found. Since there is no compile-time checking of the `{MyPropertyName}` flags, and from what I can guess reading the code and tests, it would just ignore it and format keeping the "{MyPropertyName}" literal in-place. This can make it prone to error when there is a change of the class property name but not the corresponding format/template text, and can also lead to the possibility of sending emails with incomplete information. I understand why it's left as it is, but it might be nice to have the option so developers are informed immediately about the mismatch. * I'm not 100% positive from the tests, but it seems if you have an escape to keep them in, that is given "asfd {{MyProperty}} zxcv" it will get converted to the exact same "asdf {{MyProperty}} zxcv" with the double curly braces intact. Would you consider converting it instead to "asdf {MyProperty} zxcv" instead? This would make it consistent with the `String.Format` behaviour and allow developers to distinguish between flags that they want processed and flags that they want included. * I can see the precedence rules for favouring the format modifier in the template text over what's defined in a model's attribute in the `GetPropertyKeyFormat` method, but I didn't notice a test for that and it'd probably be worthwhile to have. (Maybe I just missed it, if so, sorry) * Considering how heavy on reflection this is, it may be worthwhile considering having an option to build a `ModelFormatter` bound to a specific type when constructed. Upon construction, it can do a single pass inspecting all the model's properties and attributes and create a fast-access lookup table for all possible properties and formats that may be used in the text template. Then when processing some text, all the repeated reflection work that is done in `FormatModel` and in `GetPropertyKeyFormat` is replaced with a quick `Dictionary` lookup. This can be very useful when formatting many thousands upon thousands of emails based on the same model. It's a pretty cool idea overall, and damn, I wish I was bright enough to have thought of it. Great that you included tests for it, something I should be far, far more mindful to do. I bookmarked it; I suspect I may need something exactly like this in the very near future!
Unfortunately that's exactly what I'm doing. The files will be extracted as oleObject1.bin (or 2, 3, 4, etc.) The .bin file is a Compound Binary file following MS spec. However, I don't want oleObject1.bin - I want someFile.pdf - which is contained within oleObject1.bin.
This is exactly what I was looking for! Thanks a bunch! &gt; consider moving the logic out from the ModelFormatting.Extensions class and into a ModelFormatter object ... Yap totally agree there. The project was created as just a set of extensions (hence the nuget package name) and has evolved as such. &gt; consider updating the API to pass in an IFormatProvider... That is a good idea. Never really considered other CultureInfo, will probably add this in the next update. &gt; I can see the precedence rules for favouring the format modifier in the template text over what's defined in a model's attribute in the GetPropertyKeyFormat method, but I didn't notice a test for that... Good Catch! &gt; Considering how heavy on reflection this is, it may be worthwhile considering having an option to build a ModelFormatter bound to a specific... This is actually brilliant. I haven't considered efficiency, but you're right, it is heavy reliant on reflection and reflection is quite expensive. Thanks again for looking over everything! I think I have a lot to consider. If you are using the package down the road and need other features implemented feel free to submit an issue or fork/pull-request as needed! 
var task = Task.Run(() =&gt; { throw new WTFDoPeopleUseLambdasForEverything.com(); });
Because they're cool. The only thing cooler would be to combine Lambdas with DI, but that may cause a coolness singularity which destroys the interwebs. 
There is a method that pulls the original out of the bin. The whole structure of the binary is explained on the page and in the source.
Is there any difference between a Lambda and a Method in IL?
not really. lambdas (and anonymous delegates!) are just syntax sugar for anonymous class creation, the lambda itself is compiled to a delegate that points to a normal function. when you create a lambda, a closure is created for you with all the locals you access in the body of the lambda, as well as the method itself (why you can access variables outside the scope of the lambda). you can create lambdas a runtime though, and this is where my head starts to spin. behind the scenes the runtimes is dynamically loading the newly created types and invoking them. 
Splitting your classes into different namespaces would allow you to import only the things you need, which would cause your using block to convey more information about your class. For instance `using Toolbox.SqlHelpers;` tells you more about the class underneath than `using Toolbox;`. Having an expressive using block is a useful Litmus test on the state of the code following it - a really long using block suggests the class is doing too many things and should be split up. A SQL related using in your business layer could show that some data access code has managed to sneak in. You may or may not find that useful but I find it reassuring when my using statements are in good order.
yea, I'm getting the company to spring for a license
This is where I have to step back and say hold the heck on. While its 'cool' because its new, is it really furthering the cause of reliable, readable code? How do you step through a lambda to debug it? Does it have a place in enterprise level applications or is it just new 'nifty' syntax that all the cool kids are using?
I was trying to have a hand at authenticating on my own first. I found the fix and I'll post it.
Even cleaner without MethodInvoker: public void Method(int param1, int param2) { if (InvokeRequired) { BeginInvoke(() =&gt; { Method(param1, param2); }); } else { this.Width = param1; this.Height = param2; } } 
It's no more and no less reliable. It's much more readable when you need to pass a short expression to a function. Instead of writing a function that accepts everything you might need, storing it in a class and then referencing it in the call, you just write a single expression and pass it as a lambda. Of course, in production code I wouldn't pass a lambda to Run(), but I used it in this snippet, for example (MaxBy is a method from a 3rd party moreLINQ library): var furthestPoint = points.MaxBy(o =&gt; halfPlane.Distance(o)); Try rewriting this with a delegate and you'll see that the code is much less readable.
I'll agree with that, but I don't think putting a class with (say) one extension method into it's own namespace is productive. Ultimately, it's a YMMV situation, but my feeling is if you only have a dozen tools, you only need a toolbox (one namespace with several tools). If you have a hundred tools you may need a tool cabinet (ie, multiple namesapces).
Why the downvotes? If i'm missing details please ask. 
Just wanted to give you a heads up: I decided to create a Format Cache, allowing the developer to register a model type so the system parses the format ahead of time. Created a test to check the timings, here is the result of 200,000 formats: http://i.imgur.com/Of7L5qX.png 
Why dont you check if the traps collection already has this trap? And what do you mean by taken? Taken by a trap? Or by some other object?
By taken I mean if the coordinates that have been generated for the new trap have already been taken by another trap object.
Maybe try [Handbrake](http://www.handbrake.fr)? It's free and open source. I have used it in my .NET projects, I can look for my source code using it. 
Handbrake is a pretty good program, I use it on my desktop, however I need something I can control from an .net site. 
I've done it using an ASP.NET web site. Would you like me to post the source code? Edit: I should mention that it uses the CLI version of Handbrake, which you run as a Process.
Sure or in a PM, How well does it work for you? Basically I need something that can take any format and convert it to something HTML5 streamable. How did you manage the queuing so you didn't get bogged down with too many conversions? 
What everyone else is saying. traps.Any(t =&gt; t.xPos == trap.xPos &amp;&amp; t.yPos == trap.yPos); if that statement returns true, then the trap is taken.
Sorry about the wait, had to VPN into the office :P [TranscodeJob.cs](http://pastebin.com/7eh0y7B0) [TranscodeInfo.cs](http://pastebin.com/Pp9P94WX) [VideoQuality.cs](http://pastebin.com/px3YMqQu) Excerpt from the readme: **Class Library Flavor** Simply import the project into your solution, include a reference to it in your project and add `using VideoTranscoderLibrary;` to the top of your code file where you will be referencing the project. The class library expects two classes: - a `TranscodeInfo` class that expects a `FileInfo` object that represents the input file and a `VideoQuality` `enum` value that represents the intended output quality. - a `TranscodeJob` class that requires a `TranscodeInfo` object in its constructor. Here's a sample: var transcodeInfo = new TranscodeInfo { InputFile = new FileInfo("testVideo.mkv"), OutputQuality = VideoQuality.High, }; var job = new TranscodeJob(transcodeInfo); job.Start(); *Edit: I should also mention that you'll need to change the hard-coded path to the Handbrake CLI executable. And feel free to change around whatever you want...this code was put together really quickly for one purpose at work.
Thanks for the source! I'm going to give it a try. I can see how you go about coding the one video, but how would you queue a job stack so you don't have too many running at once? Thanks again for your help! 
Probably by spawning multiple processes on their own threads, or queuing a number of them, or a combination of both. Might need to rework the callback functions if you explicitly spawn threads. *Edit: to prevent too many at once, you may need to make your own queue specific to that, or maybe the .NET library has something built-in? Not sure, sorry... So far I've had ~10 users at any given instance using the converter on the site and I haven't run into any issues. Then again the server we have is a beast...hopefully this helps or provides a starting point!
Rather than storing the file in the database, store it on the file system of the server, and save a link to that file in the database. Saving files directly to the database (especially 3D files, which I assume are quite large) will cause the size of your database to rapidly increase and require additional steps to serialize and deserialize the file, rather than just opening it.
Jupp, overriding the Equals Method would be the cleaner way and would enhance the readability.
Depends on your requirements; you can either render it on the client side for 3D interaction or render it on the back-end and ~~sent~~ send the resultant image to the client. I did a quick search and [SharpGL](http://sharpgl.codeplex.com/) has .obj loaders for your backend. You can use [ThreeJS](http://threejs.org/) for rendering on the front-end.
Yeah, the chance that you will hit a previous trap twice in a row is very small. This solution shouldn't really create any real overhead.
This was going to be my suggestion. GL (both Open and Web varieties) are designed specifically for displaying 3d data. SQL database stores the location of the file while Open/Web GL displays it on the native apps or webpages respectively.
I wonder what was wrong with their design? It seems like a fairly straight forward concept - I wish he'd gone into more detail.
I'm not sure what that had to do with the above post, but there is already Enumerable.Count() in System.Linq.
Why'd you link to the third page?
I've never heard of SharpGL before. I did a quick search to provide some information to OP. I'd hoped others would chime in with better solutions/links if need be. What would you recommend to replace SharpGL?
This is my vote. I love LINQ, but the suggestion to override Equals is the true winner here. traps.Contains(trap) is magically succinct.
OpenTK I guess. It has a better code base, but is no longer maintained. I'm working on an alternative personally, but I haven't published it yet. In that wrapper you simply define an interface for the required extensions (or just use the interfaces supplied) and the wrapper will automatically provide an implementation. It also has a opt-in exception handling scheme. Since it relies on interfaces, the code can also be tested. The reason I started with this is because SharpGL has such a poor implementation and OpenTK is no longer maintained.
Good luck on your implementation. I've not worked on code for ages. Your implementation reminds me of what Mono is doing for their new(er) UI framework where it will use different back-ends depending on the platform. As for OP's question, I looked for .obj loaders. I did not pay attention to the rendering part of it.
Yes. The compiler allows you to have methods with the same name but different parameters and doing this is called overloading a method. For instance. Console.WriteLine(""); and Console.Writeline(); will both print a blank line on the Console but one accepts a string parameter and one does not. 
Thanks for the tips, I've been following a video series and am progressing at a rate I'm happy with!
Uh, hey. Try Tesseract.
haha. Hey. That is what I was thinking to use. Wasn't sure if there were any others out there worth using. 
I've used Project Hawaii for a Windows Phone 7 app though i'm not sure if you're able to use Hawaii outside of Windows Phone though.
+1 on Tesseract. I've used it for a whole bunch of stuff and it rocks.
Perhaps I am misunderstanding, but you would not usually have that kind of control in C#. You create a Thread, and the CLR/OS determine where the thread runs. Which core/processor the thread runs on is an implementation detail.
/u/0xffff1 is correct in that the OS controls which processor the threads run on and it is better at automatically load balancing your work. What you're referring to is known as [processor affinity](http://en.wikipedia.org/wiki/Processor_affinity). Specifically for what you're asking, have a look at this stack overflow post: http://stackoverflow.com/questions/2510593/how-can-i-set-processor-affinity-in-net
You should look into the Task Parallel Library.
Try using the [WeakEvent pattern](http://msdn.microsoft.com/en-us/library/aa970850%28v=vs.90%29.aspx). I have not used it myself so do a bit more research on it. Personally, I would use IObserver and IObservable for notifications instead of Events but I think these may also need WeakReferences
What do you mean when you say the object is **deleted**? Do you mean when the object goes out of scope and eventually garbage collected?
I think it would which is why I also said it may need WeakReferences as well.
C# does have [destructors](http://msdn.microsoft.com/en-us/library/66x5fx1b.aspx)
Sorry, fairly new to C# from years with C++: Yes, I mean when it goes out of scope. 
&gt; Specifically I am interested using multiple processors rather than threads. Threads run on multiple processors if they are available. The operating system automatically takes care of that. Further, Microsoft's Task and Parallel classes also take into account the number of processors available in terms of how many threads are created.
[Edit] Affinity was what I needed. Thanks to you and sextagrammaton for clearing up my confusion.
This is what I was looking for, thank you!
They aren't the same, though - C++'s destructors are called when the object is deleted or goes out of scope, whilst C#'s are called only when the object is finalised. So putting the unhook in the destructor in C++ would work fine, in C# it won't. :(
When you're looking at parallel programming, you need to be aware of concurrency concepts. One important thing is Race Condtions. Given this piece of code: private int _balance = 1; public void AddToBalance(int value) { _balance = _balance + value; } Thread 1 calls AddToBalance(5). Thread 2 calls AddToBalance(7). After both are complete - what would you expect the result to be? 12? Not necessarily - it's not possible to predict. Why? Because threads can execute in any order, and can execute at the same time. This is because the OS (and even the CPU) can re-order or pause execution of a thread at any time - you have no control over these things. One possible way for this to occur is: Thread1: Read value of _balance - 1 Thread2: Read value of _balance - 1 Thread1: Add 5 to previously read value (1) - 6 Thread2: Add 7 to previously read value (1) - 8 Thread2: Set _balance to 8 Thread1: Set _balance to 6 _balance will be set to 6 in this case, but depending on the order of execution it could be 6, 8, or 13. To guarantee that balance can't be updated while we're working with it, we can use a lock - there's many ways to do this. One way is to use the lock() syntax in C#. public void AddToBalance(int value) { lock(_balance) { _balance = _balance + value; } } This changes the above operations to look like so: Thread1: Obtain lock on _balance Thread2: Obtain lock on _balance Thread1: Lock Obtained Thread1: Read value of _balance - 1 Thread1: Add 5 to previously read value (1) - 6 Thread1: Set _balance to 6 Thread1: Release lock on _balance Thread2: Lock Obtained Thread2: Read value of _balance - 6 Thread2: Add 7 to previously read value (6) - 13 Thread2: Set _balance to 13 Thread2: Release lock on _balance This is important in other scenarios too - for example: - checking if the balance is above the requested amount, before permitting a withdrawal. - checking if an item is in a dictionary before try to add it, or access it (if other threads can add) Note that in scenarios where you're locking a lot (lock contention) - it may be better to go with a single-threaded approach with no locks. There's other potential issues too - if you're trying to obtain two locks, all code must obtain the locks in the same order, otherwise you will end up in a dead-lock. 
That is true, I did not think far enough down the line. If your system is long running then you would not run out of memory because the finaliser would execute and you can do your clean up but your application will memory bloat up to that point. Weak References (Weak Event Pattern) will also result in the same scenario as above. I cannot think of anything else so it looks like either use IDisposable (which your colleagues do not want) or call your custom cleanup code for the object. Either way, you're going to have to do it manually.
Very interesting and useful information. I have heard of dead locks but didn't really get the context until now. Thanks!
No worries. Further reading on [Race Conditions](http://en.wikipedia.org/wiki/Race_condition) and [Concurrency](http://msdn.microsoft.com/en-us/magazine/cc163744.aspx) There's a lot of information on Stackoverflow on this too. You should get familiar with the concurrency objects in C#. The newest thing is the Thread Parallel Library, which is a bunch of helpers ontop of the lower-level functions. These are extremely useful - for example, spinning off your For-loop that does some computation? // Define your for-loop in a method with all it's inputs. public string ComputeAndReturn(int i) { // do whatever in your for loop with the values passed in return "hello from " + i; } // ...inside the method you call your for-loop from: var task1 = Task.Factory.StartNew( () =&gt; ComputeAndReturn(1)); var task2 = Task.Factory.StartNew( () =&gt; ComputeAndReturn(2)); // do some other work here while waiting, or maybe spin off more tasks Task.WaitAll(task1, task2); // Wait for them to return Console.WriteLine(task1.Result); Console.WriteLine(task2.Result); 
The first question you should ask yourself is "why am I doing this". You are making every call much more expensive. Is it worth it? What value do you hope to get from it?
http://www.albahari.com/threading/ highly recommended for everything threading
I am not sure I understood your question. If you want to log every MVC controller action call, implement IActionFilter that logs the calls, and either add it to global filters or decorate your controller/actions with the attribute. Do your logging in either OnActionExecuting or OnActionExecuted methods - and if possible, have your logging asynchronous (dead easy you are using NLog).
Lots of people use Log4Net or NLog as their logging frameworks. If nothing else, they'll give you some good ideas if you want to roll your own. I don't think either has specific writers for MySql (check on this), but you can certainly implement your own custom writer. 
If you are using .net web services, you can inject behaviours into the endpoint that will handle this task. 
really just want to see what methods are used, how often they are called and really what kind of data is being passed. last project I worked on we just dumped some data into a mssql database. basically, once I create the methods and we start letting other people use them, we would like to be able to come back and give statistics on it.
Generally var is acceptable to use inside methods where it is self contained. If you'll be passing that data around to other methods at any point you should probably be giving it a type. This allows other programmers to quickly tell what sort of data is flowing where quickly (especially helpful if the method has overloads and you're not sure which one it's calling) That being said, as a hobbyist unless you're contributing to open source or working in a group, it's really not important as long as you understand what's going on.
The weak event pattern is a trap. It forces subscribers to hold onto their subscribing delegate so that it's not garbage collected, but there's no good way to communicate that need. You will have endless bug reports caused by events appearing to not fire.
Check out Puma.NET as well.
This. If you're making threads yourself, you will get it wrong. The TPL makes doing stuff in parallel really easy. For example, you can use "Parallel.For" instead of a regular for loop and get parallelism without any extra effort!
Don't make threads yourself. Use the Task Parallel Library. 
Threads run on processors. Every program runs on threads. There's no good way to control which thread gets run on which processor. This is a job best left to the OS. It sounds like you want to run programs which will take advantage of multiple processors. You can either create threads yourself, or use the Task Parallel Library. Creating your own threads is a dicey proposition. Chances are, you will get the implementation wrong and wind up with deadlocks, race conditions, or worse. The TPL is designed to make it easy to write code that will run tasks (threads) in parallel and will automatically schedule which threads get created and run on which processors that are available. The TPL abstracts away the heavy lifting of creating threads so that you can focus on getting work done. An easy example is a simple for loop. If the contents of each iteration are independent, then changing your code is a breeze. Instead of: for (int x = 0; x &lt; someCount; x++) { // do stuff } You do: Parallel.For(x =&gt; { // do stuff }); There's lots of good info here to start: http://msdn.microsoft.com/en-us/library/dd460717.aspx Here's a great free book on patterns using the TPL: http://msdn.microsoft.com/en-us/library/ff963553.aspx I also found this book very useful as a tutorial: http://www.amazon.com/NET-Parallel-Programming-Experts-Voice/dp/1430229675/ref=sr_1_1?ie=UTF8&amp;qid=1387554175&amp;sr=8-1&amp;keywords=tpl 
Very interesting - thanks very much for taking the time to write this. I am rapidly going off the idea of events altogether, except, as you say, for UI forms where they work well. Using "a simple list of delegates" as you suggest, a la Java-style listeners might be a much better approach. I'll give it some thought over the xmas holidays. Merry Xmas to all who replied!
+1
If you are controlling your object's lifetime in some way (ie, you know when the object should have gone out of scope/been deleted in C++), then you will have to call *something* akin to `Dispose`. In my current project, I'm using `Observable.FromEvent`to listen to events, and storing the resulting `IDisposable` in a `CompositeDisposable`. Then I override `OnNavigatedFrom` and that is when I do `allDisposables.Dispose()`.
&gt; Don't make threads yourself. There's a number of scenarios where creating threads yourself is still the recommended approach. 
It's actually changed now!
Much improved!
Sort of answered my own question, though I'm still testing the solution: * Download the source code for Google Client API * In the DotNet4 project * Remove the logger class * Remove references to log4net from NuGet * Optionally remove all of the projects with Test in their namespace * Optionally remove any platforms that you don't use (Ex: WP, WinRT) FOLLOWUP: No, this doesn't work. Unfortunately the only way to download the adsense library seems to be by way of NuGet, which tyrannically insists on overwriting the custom libraries with the google versions from NuGet. Ugh. FOLLOWUP 2: It appears for my use case, Google AdSense's API flat out won't work as it requires a physical person to log into our account. We have to report to external entities who can't have access to things like payout information.
This is what I would of suggested, but I do have to ask why you consider log4net "heavy"? When configured right, it can be pretty lightweight and very useful.
good work
Load the csv's, generate the namens, and use http://sqlcebulkcopy.codeplex.com to bulk insert all the names. They talk about 1m inserts in 6 seconds. I you dont want an extra library you should give more details about the way you do inserts and your data model (relations, fks etc). You should be able to get way more than 100 inserts per 10 seconds.
That is an awesome Library and looks like what I need!! I have been reading up and I am doing direct inserts, I can speed it up a bit by parametising my insert but even then they reckon that I can only get about 50% more speed out of it, which would reduce this to 5 seconds. using the stop watch I am getting 100 inserts in 9.44 seconds....here is the code I am using, I just copied it direct so please ignore some of the writelines, they are there for me to see that things are running... // Create stream reader pointed at the csv file. StreamReader Sr = new StreamReader("National.csv"); // String created to hold our lines as we read them into the database. string csvLineIn; // begin loop through each line of stream reader. Stopwatch sw = new Stopwatch(); sw.Start(); int numberofInserts = 0; Console.WriteLine("Adding Nations to Database"); while (!Sr.EndOfStream) { // tokenise the line. csvLineIn = Sr.ReadLine(); csvLineIn.Replace("\"", "\'"); sqlCommand = "INSERT INTO [Nationality] " + "(" + "Nation" + ", Ranking" + ", Abbreviation" + ", RankingPts" + ", Tier" + ")" + " VALUES " + "(" + csvLineIn.Split(';')[0] + ", " + csvLineIn.Split(';')[1] + ", " + csvLineIn.Split(';')[2] + ", " + csvLineIn.Split(';')[3] + ", " + csvLineIn.Split(';')[4] + ");"; sqlCommand = sqlCommand.Replace("\"", "'"); // Execute SQL statement. executeNQSQLCommand(sqlCommand); // end loop numberofInserts++; } sw.Stop(); Console.WriteLine("Number of Inserts: {0}", numberofInserts); Console.WriteLine("Time elapsed: {0}", sw.Elapsed); Edit: should have added that this is not inserting the names, this is another table in the database that I am adding in from a different csv file. I got LOADS of csv files :-/ lol
yeah I think Zbonk's library he linked to will do what I need. My issue was literally with the rubbishy performance on the inserts and maybe trying to speed that up or increase the speed of the random name generator if there was no other alternative. I was getting a 10 second time for inserting only a 100 records and I was cringing a bit at the thought of the time it would take to do 10k inserts! :-/ thanks for your help :) 
At init, generate a list of 10K random numbers. Using the above technique, these are the names. Store the 10K numbers in your database, it may be faster than storing text. Also, consider using a datastructure like an array of records rather than a DB. Presumably you don't need to do sql searches on all people with last names starting with "AR%" and first names ending with "%FUB", after all. 
I might have to yet, I haven't thought that far into my solution tbh. I was kind of dealing one step at a time and the first thing was to load the names into the database. At some point, I am going to want to display the data associated with a particular name however and that will require a search on the name I think. I could always store the index of the array as the primary key of the table with the data then the names in an array and just return the index of the array, although even thinking about that now that seems silly as it would have to iterate through each element of the array to find the correct name. :-/ I am sorry, this is all still a bit new to me and I am kind of learning as I go! :-/
just read that link, so in that situation all the inserts are 'stored' until the commit is executed whereupon they are all pushed through in one hit? Or are they executed first then they are just 'saved' in the db? does the rollback mean that the database keeps a copy of the changed data incase the inserts are rolled back? sorry if these are really basic questions.
Sounds like NIH
Use Sharpen to help learn
Transactions are totally managed by the db itself, the begin and end methods are pretty much wrappers around begin/end transaction SQL statements. How they actually work is a complex subject but for working with them you can indeed say that the inserts are all send directly to the db but only saved (committed) on the db when the db recieves an end of transaction command.
Thanks for all your help with this. It is most appreciated.
Statements like this are why I get hired so often. EDIT: To elaborate, the methods I use are tried and true. They're methods that have been used since long before things like log4net, nhibernate, etc. came about. While they aren't as easy, they're faster and smaller than these types of frameworks. That's not to say that many of these types of frameworks don't have good use cases. If you aren't dealing with massive traffic, they're a great way to get from point a to point b quickly.
So much so that I'm looking for a pre-written library.
Depending on what framework the old dev was using, it could be as simple as modify/save/refresh, or it could be quite a bit more complex. You really haven't given us much to go on here.
What is the source JSON and error you get?
You may need to cast to a entity object. Collide((Entity)personObject); Can you post your code somewhere?
Currently figuring out how to post it, pastebin is looking quite good. I've tried casting, it gives no solution.
The best way to do this is get it as a JSON representation, which in your case can be found by clicking the "Get as JSON" link and using the resulting URL. Then use something like the [JSON .NET](http://james.newtonking.com/json) library to parse it into an object which your application can use.