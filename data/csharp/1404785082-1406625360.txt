Also need to point out that the civic is a sound purchase because of the abundance of parts. Proliferation is just as important as practicality.
As Eldorian said, a class/properties may be the way to go to represent a card. Then you could store the data however you want (linq to sql maybe?) You might even go deeper into the rabbit hole and create a card interface. Then you could strongly type different cards that might have unique properties. I guess it depends on what the ultimate goal is.
Also might be worth learning how overall windows messaging works. The link provided in the other comments are great starting points. Here's another to to keep you busy http://msdn.microsoft.com/en-us/library/ms818547.aspx
Doing anything in CSS makes me want to throw my computer out of the window.
I'm a 2 year bizspark user. What's this bizspark plus? I love bizspark! 
I agree with your assessment of of not using a database, especially for someone clearly just starting out and not really understanding classes or data models. As professional devs we have these tools in our toolboxes that we instinctively reach for, like databases, when confronted with problems that seem to fit the mold. But this doesn't call for it. A simple repository for cards and the ability to add new ones via some other interface in the app would work fine. One would simply, as you say, deserialize the files on startup, and if new ones are added, serialize them all to file again after each add.
also should be noted that using json.net with models makes it easy to upgrade to a database or webservice later since the models can mostly be reused with WebApi or EntityFramework 
&gt;I agree with your assessment of of not using a database I'm not sure I agree. The GP's point is that it's overkill. Sure, but if you're going to learn how to interface with the database API, you're going to want to start with a simple, familiar example. This is perfect. It has relatively straightforward basic data, with a limited range of types. It's something that would be extensible later if he wanted to add player information, scores and stats etc. And he would get a chance to practice the fundamentals on something he understands and could use, rather than some pointless hypothetical example. Sounds ideal to me.
Yes, it is just an automation of that.
Thanks for that. I did mean to change the variable names before I posted but I must of forgot. 
Just point the shortcut to the output in your bin/Debug or bin/Release folder for your solution and it will keep up-to-date.
Right-Click the executable -&gt; create shortcut. Drag the shortcut to the desktop.
Oh right that's what you meant. Will it update every time I press save or do I have to rebuild the solution?
You have to rebuild. Saving your project only does just that, saves your project. EDIT: If you're making changes to the code yourself though, I can't imagine why you wouldn't have eventually built the solution to run and test your changes.
Thanks a lot for the help.
Saving the project only affects the source files. You'll have to rebuild the project in order to overwrite the executable.
Don't bother, it's pretty much impossible, there are some custom themes available but they're all shit. I gave up trying to get VS 2010 in a usable state with a dark theme that doesn't have random bright white bits.
You can also have a post-build step that copies the built files to your desired location. Look at the project properties page.
Also, if you build your project it will be automatically saved
Yeah why not? Put your code up and see what people have to say
We are waiting :)
[Registering interest]
Thanks for all the willingness :) The project is not work or school related. Its for a racing league for a racing game called Project CARS. I'm the only one developing it and I'd like to try and improve its size and structure to make it more manageable for 1 person.
That's great to hear. Hopefully the subreddit can help me improve my coding :)
The guy doesn't even grok *objects* yet. I'm not sure foisting an entirely new language and server configuration upon the guy is the right thing to suggest at this point. I think structured plain-text files are far more of a reasonable suggestion for that reason if nothing else.
Did you consider throwing it up on GitHub, CodePlex, or Google Code? Might make it easier for people to view it, and for yourself, provides some code versioning control.
Wouldn't mind glancing over it.
You rarely learn elements of coding in isolation. It's not that much of an ask. He can sort out his data structures until he's comfortable with the idea and then start to explore different storage paradigms. It's hardly like he's going to need to learn complex joins or obscure SQL commands.
I pretty much agree with you in a general sense. When it comes to an object's _state_, I'm in the no-nulls camp. Most of my objects tend to be immutable and null checks are performed in the constructor. (EDIT: I don't even bother with the "NullObject" pattern; I think it's a cop-out and tends to sweep the error/incorrect code or design under the rug.) However, some utility methods I'm ok with returning nulls. Things like `Get` or `FindOne` methods where I'm expecting to get either the requested item or `null` indicating nothing found. Though, I'm increasingly finding these methods buried as internal implementation details or replaced with deferred yielded `IEnumerable` which I would have 0 entries and if I wanted only 1 item, I would add a `FirstOrDefault` (or whatever is appropriate for the intent). Most public-facing APIs I create I try design to guarantee to not return/work with `null` values. Only low-level stuff (WCF, serialization) or 3rd party libraries tend to still have nulls, but I try to abstract these details as much as possible from the front-facing APIs. 99% of the time I find that simply making `null` values _impossible_ to assign to object states makes code so much more refreshingly simple. Having an unhandled `NullReferenceException` thrown is a rarity and usually only happens during development when I did something boneheaded. I can't remember the last time I got one in production.
That's not really an answer, but I give up.
I'll take a look
If you want to publish a self-updating program to users, check out [clickonce](http://msdn.microsoft.com/en-us/library/t71a733d.aspx).
Cool, I'll try and upload it via Google Code. Never done it before but I'll have a go.
A friend and I are working on a project. We got rejected the first time around. They wanted an email address from our own domain (not a hotmail/gmail/etc). I didn't actually fill out the application, my friend did. He talked to them, and explained what we do, etc. They gave him some sort of reference code, and had him apply again. We got in on that try. I would encourage you to contact them to ask for feedback, and maybe help them understand what you are doing. You might have to apply once more, but if you are legitimate, they ought to see that and help you get set up. Keep at it, and good luck!
If you pit it on github instead you might get a couple of others willing to help out.
[This article](http://wootstudio.ca/articles/why-you-got-denied-from-bizspark) seems to outline quite well what you must do to qualify for BizSpark and what you can do if you're rejected.
Github is more preferred than Google Code.
You can create a simple batch file that will call **msbuild** to compile the project, and then execute the generated executable. It's easy, look it up.
/r/codereview/
When I last read the requirements they did not want people to be doing contract work or to be making web-sites for other companies using BizSpark. The program is intended for creating products, services and with some finesse you can talk your way into open-source. Contact your local Microsoft preacher and see if they can hook you up with a referral code.
Launch the site with another browser :D
I have several web apps running on multiple servers behind an F5. We have 2 different solutions for different apps. 1. For some of our apps, our developers upload to an FTP directory that a separately authorized person then manually deploys to the multiple servers via remote desktop. This person always makes a backup of the current directory before over-writing the contents with the new build for archiving purposes. 2. For other apps, the IIS on each server is pointing to a common NAS directory. Therefore, one upload to that directly updates all sites at once.
If you want to test your performance server side I recommend DotTrace by JetBrains, the same developer that brought us ReSharper. This tool is phenomenal.
I like the secondary solution. I'll see if I can get that implemented here at work. That seems like the best/easiest/quickest solution for me. Thanks!
I used web deploy. Its gives you a package that can be deployed to a target server or servers. We had a fleet of 100 servers that we kept in sync with this tool. Azure uses a modified version of it as well so its good to know. http://weblogs.asp.net/scottgu/automating-deployment-with-microsoft-web-deploy http://www.iis.net/downloads/microsoft/web-deploy 
This is the correct answer. [MSDN article on msbuild command-line syntax.](http://msdn.microsoft.com/en-us/library/ms164311.aspx)
I haven't tried it yet but [this](http://octopusdeploy.com/) looks very promising.
this would be the way I go. Note: I often wrap my build scripts with powershell 4 as the deployment steps (copying files, editing registry, etc) are often easier in powershell rather than creating Code UsingTasks.
ahh, interesting!
I'm already using web-deploy and looking through the links you sent, I feel that I could easily modify my current process. Thanks for the links
Thanks for taking the time /u/AngularBeginner. Its my first time putting something on a repo so I was unsure exactly what was needed to go up. :) Will I need to use get; set; for all my "Objects" ? The pCarsAPIv5Object.cs was given to use by the coders of the racing game so its a little out of my hands however I'll see if I can make some of those changes. I'll look at the other comments about the ApplicationVersioning and GEC.class. About the GEC class, I'd started to code it and then stopped so it might even be used again at a later stage in the development but thanks about the deleting unused coding. You raise an interesting point about one project. When adding a new project in Visual Studio do I select empty project or class library? So you think having one project for GUI, one for application tasks and a third for database calls is better? I've not heard of either DI or IoC so I'll have to research those. Yes, I've never written a unit test before. I'll need to look into how to do that as well. Thanks for your brief look though :)
You are on the right track. There are a number of ways to go from there. If you have the infrastructure in place to push enterprise software you can use that mechanism with a bit a powershell. You could also leverage any other delivery platform you may have. In a pinch. lacking other infrastructure a powershell script with a configuration file listing all the servers will do the job. You could go with a Chef/Puppet kind of thing but for a simple web app deploy that is overkill. There are also a number of commercial products though I would be wary of spending money until you really understand the problem. 
To expand, DI and IoC are two of the five SOLID principals. You should get to know all 5 principals and you should definitely learn how to write unit tests. 
I work for higher ed, what's money? But in all seriousness, a couple solutions in this thread have been helpful. I think the biggest suggestion for me was somebody who said they use a network share. It's an idea that I think is good, and can probably pull off. Another suggestion I saw was from one of the links above. &gt;Deploying Across a Web Farm &gt;Web Deploy can be used together with the Microsoft Web Farm Framework to enable automated deployment across a web-farm. You can install and configure Web Deploy on a primary server in a Web Farm Framework cluster – and the secondary servers within the web farm cluster will then monitor and clone any applications you deploy with it. This allows you to use the exact same steps as above to deploy sites and applications across any number of machines within a web farm in an automated way.
Web farm deploy may work, have not played with that much so I can't really vouch for its success or not in real terms. Yes you can use a fileshare (this is an old method that still works well) with one proviso. You cannot have any writeable files in your application (say a text based persistence store or a config file or something) as you will have contention between the various application servers attempting to write to the file.
it doesn't, it's all database driven and just returns json to the screen. But, I'll keep that in mind and see what else I can work with. I don't want to request extra storage space if I don't have to.
Or right click -&gt; send to -&gt; desktop (create shortcut) 
Even better :)
Thanks I'll put it there as well :) 
Also, you shouldn't really suffix your class file names with "object", etc. Unless that's part of the name.
Here where I work we have two load balanced servers and we're running some FRS software to keep the sources in sync. I just publish to one of them and the other gets the changes.
Thanks!
I can tell you that I was juggling pointers, writing b-trees, and implementing complex combinatorial algorithms before I ever touched a database.
This is probably what you want. http://msdn.microsoft.com/en-us/library/system.numerics.biginteger(v=vs.110).aspx 
Thanks I'll try that :)
An [int is only 32 bits wide](http://msdn.microsoft.com/en-us/library/5kzh1b5w.aspx), so you can't fit a 512 bit number in it. http://stackoverflow.com/questions/22821444/most-efficient-way-to-store-and-retrieve-a-512-bit-number As for generating them, [Random](http://msdn.microsoft.com/en-us/library/system.random\(v=vs.110\).aspx) lets you generate bytes (8 bits) and ints (32 bits), you should be able to figure out how to put the bits together to get however many you need.
However it's not going to get you random numbers to do that you probably want to generate multiple ints together as bytes or generate randome bytes
You can attach the profiler to an arbitrary executable - you don't need to click start and wait for it to happen to open some web browser for you. In particularly, you can attach it to your asp.net worker process. Also, consider perfview - it's free, and quite fully featured.
I'm glad for you.
Someone wanna explain? 
Don't forget the no-that's-not-a-typo pricing of sql server. I'd certainly recommend seriously evaluating alternatives to that. Postgres or even sqlite might well suffice for many workloads, and the price difference even in small deploys can quickly approach an extra developer (of course, that really depends on many factors).
Perhaps. But you'll be paying through the nose in three short years - don't blindly choose bizspark without at least looking at alternatives.
IntelliJ is better in many regards (seeing as it's written by the makers of resharper, that shouldn't be surprising). Of course, it's also worse in many; but VS isn't without competition, in any case.
What's wrong with replication? We use DFS without any issues.
Be careful: .NET's random number generator is [not very good and won't be fixed](https://connect.microsoft.com/VisualStudio/feedback/details/634761/system-random-serious-bug). Furthermore, and even more critically it's pseudorandom, not truly random. The reason I bring this up is that 512 bits is one of those numbers that comes up in various security-and-cryptography related applications. I don't know what the OP is doing, but he may well need truly random numbers, not predictable pseudo-random numbers (that aren't even necessarily well distributed).
First an "int" is really a System.Int32 which is 4 bytes (32 bits), no where near enough to hold that. Theres also an Int64 which is 64 bits. If you really want a "number" than as machinesarewinning stated BigInteger will work. If you are doing any kind of security/cryptography you shouldnt use the Random class (because there are more secure options), and you will probably need those 512 bits as a byte array. Here is a different way you can generate random bits and convert them into a BigInteger: private static byte[] Random512Bits() { using (RandomNumberGenerator rng = new RNGCryptoServiceProvider()) { byte[] bytes = new byte[64]; rng.GetBytes(bytes); return bytes; } } To Use: // bytes byte[] bytes = Random512Bits(); // as Base64 encoded string Console.WriteLine(Convert.ToBase64String(bytes)); // as BigInteger Console.WriteLine(new BigInteger(bytes)); 
 int.Parse('512-bit int') wat 
The System.Random class isn't for crypto anyway, there is a separate class for people who want cryptographically secure random: [System.Security.Cryptography.RandomNumberGenerator](http://msdn.microsoft.com/en-us/library/system.security.cryptography.randomnumbergenerator%28v=vs.110%29.aspx).
Looks like my SSMS instance after a loooooong day...
What is the problem that you're trying to solve? I get the impression that you are going about it in the wrong way. What do you think random.Next() and int.Parse() do?
(s)byte too
This question came up a lot lately, just go through the submissions of the last days in the "new" category :)
Your confusion is just for show I think. It is painfully obvious what OP was thinking. Or maybe you're not so smart.
It's disappointing that the highest voted comment in this discussion is just a snide remark, and people who have offered genuine solutions have half the vote count. Hopefully this will be redressed.
You know, I wondered at that for some time, too. But then I realized, really, there's so much 'magic' going on in frameworks, that it's not completely unreasonable to think a framework might implement the facilities to do something like this: parse the input and produce a value. Search engines do it. F# 3.0 type providers get close to something like this. The only reason we dismiss it so easily is because we know how this particular system works or doesn't work.
Even if the OP put in a 512-bit long numeric literal, it still won't work as it'll be way longer than an int. var r = int.Parse("1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012"); // 152 digits, give or take System.OverflowException: Value was either too large or too small for an Int32. 
Xamarin is your best bet. Check it out at https://xamarin.com
I just posted an example of what OP should do, which **joshjje** had also posted (he gets an up-vote!). Use the random number class from the Crypto namespace.
And what does SSMS have to do with ORMs?
Yeah... I get that ORMs save you time in your code, but I still have to dive into the database sometimes and ssms looks like this. I guess it makes some stuff less error prone so you don't have to drop down to fix things all the time. Maybe he meant migrations (as a part of ORM)?
DotTrace. You could have loaded 8.1 into a VM or found an existing VHD (like VS 2013 + 8.1) into hyper-V
what are the other three? Sorry I am new to these stuff.
You need to go through the Python tutorial.
We know what the OP thought the whole line of code might do. I meant more about the low-level details. But on re-inspection I think I understand. Before, I thought the OP literally meant the string "512-bit int". Today was a hangover day...
You too should check out the posts of the last days, there were a few asking related questions. That said, I think the most suggested one was Head first C# or so.
I think we do just send us an email (sales@octopusdeploy.com).
* The surface tablet runs windows 8(.1) * you can use Xamarin for iOS/Android development in C# * you should get a modern Visual Studio version. The express ones are free. * why don't you start by making a windows (phone) 8(.1) app first?
Why don't you just start with a solved puzzle and perform random moves to shuffle it? As long as you only perform valid moves in the shuffle, it will be solvable.
WPF I think.
Ta!
If you want to develop in C# for the ipad you will need osx somewhere to do the compilation. Some people develop in windows vm inside of an osx machine, others just have a mac mini on the network. There are other, free, programming environments that allow developing for the ipad but you would need to look those up for yourself. Xamarin is awesome but not cheap.
Checking it out now, thanks!
If I understand correctly you are thinking an array has some disadvantages in leaking secrets that a 512 byte integer wouldn't? I actually think the reverse would be true since you can securely zero an array, but not an integer on the CLR. Also BigInteger uses arrays internally.
Sorry what's DTOs? 
Data Transfer Objects.
I'm not really sure what they are but I would assume those are my UserObject etc? Should I be removing the static from those classes?
This is the truth.
Because that's inconsistent in how complex the shuffle is and slow depending on the size of the puzzle. I did that before I reworked it and it worked fine, but if I really wanted a thorough shuffle on the max size puzzle of 19x19, I could potentially be sitting there for a while. I had set up conditionals to set how many legal moves it would make in the shuffle initially depending on the size, but it turned out that a 4x4 shuffle was taking 10 seconds to shuffle and a 4x5 puzzle was taking 2 and the the 4x5 shuffle was far less thorough than the 4x4. The way I currently have it set up guarantees that every shuffle regardless of size takes just as long and is just as complex.
www.csharpcourse.com has the book best suited for the job (if that link doesn't work, google 'Rob Miles C# Yellow Book'). It might seem like you can jump straight in but it's always better to start from scratch because you don't know what could be different. I went the other way around (C# to C++) and it was a much better idea to learn from the beginning than try and adapt which I'd tried before. The language isn't just different, the framework is different (how do you include libraries? How do you write to console? How can you manage objects?) EDIT: please tell me that you're going to be using Visual Studio for this by the way
It's been about a year since I've played with SignalR, but I think this article pretty much sums up my memory of how we dealt with this issue. http://kevgriffin.com/maintaining-signalr-connectionids-across-page-instances/ 
Dotnet Perls website has good short, simple coverage of the basics. Microsoft Virtual Academy has (free) video courses on C# from beginner to advanced.
Thanks, but as I stated, this solution does not work since signalR 1.0
http://www.codeproject.com/Articles/65183/Buffer-BlockCopy-not-as-fast-as-you-think
Exactly. (You probably want to use the concrete implementation RNGCryptoServiceProvider of the RandomNumberGenerator base class). If you don't need security, you probably want a mersenne twister. I'd only use the builtin Random when you want some variety and don't care too much about the distribution of numbers, and don't want to bother importing a mersenne twister.
Do you have to support multiple distinct sessions per client logon? I'm assuming you've got some IUserPrinciple thing going on? If so you can maintain your own mapping of SignalR connectionIds to user principles. So in a hub you can have a property like: User User { get { return ((MyPrinciple)Context.User.Identity).UserModel; } } Is an example of what I'm doing, here I've got a model object called User, a custom IPrinciple called MyPrinciple which has a property on it called UserModel that erm, gives me my specific model type of User. That way I don't worry about connection Id at all.
Technically yes, but make sure that it is what you want. And the proper encapsulation syntax would be protected static BaseManager _instance = null; // This should be a property though You would only be able to have one implementation of BaseInstance at any given time in your code base. So you will need to choose to have a GameManager or a SoundManager. You cannot have both. &gt; ... in the parent class certainly doesn't seem right. That'd be one variable for every single derived class! (I think) The you don't want it in the base class. The base class should be ignorant of sub-classes and be able to exist and function regardless of the implementation. That is the whole point of abstraction layers. If at some point later you want to add a new Manager, then you need to change the base class and that breaks your abstraction and is bad code. Also, if you do move it higher, then make sure all the calling code calls it as BaseManager._instance and definitely not GameManager._instance or _instance.
As far as iOS apps on Mac OSX go: You can make iOS apps with Unity3D and c#, but there's a bit of ramp-up time learning the Unity stuff. If you're just starting out this might be tough. I know it's possible to use c# directly in XCode and the Cocos library, as I have a friend who's doing it in his studio's games. However, I have no idea how they're doing it. Google probably knows. The "quickest" way to get iOS apps going on a Mac is to use Objective C in XCode. But man I *hate* Objective C! You're mileage may vary... Sorry I just don't know much about Windows development any more.
http://www.codeproject.com/Articles/703634/SOLID-architecture-principles-using-simple-Csharp
&gt; So you will need to choose to have a GameManager or a SoundManager. Yeah that's what it looked like to me. :( Ok, like I said it was mostly academic because I'm just nerdy that way. 
I think this is the way I may go. I'm trying to decide whether I want to use Windows VM on osx or Mac Mini on Windows. Either way, it seems like it will be a bit more expensive than I originally anticipated. I just contacted Xamarin sales, since it seems like they are willing to give new beginners a decent price (hopefully). Thanks again! 
&gt; Why "cryptographically strong"? You explained *what* cryptographically strong means, but not why OP needs true random numbers. I doubt OP it doing anything with cryptography.
And LINQPad.
wow, the c# compiler going open source and switching from i'm guessing c++? to c# is pretty nuts. Make me curious if the switch we'll mean slower compile times (kinda depends if they're embedding assembly I would think) but no idea really. Maybe they'll talk about it later in the vid. Thanks for sharing. wow .net 6 looks awesome I gotta say.
I would suggest migrating to the latest SignalR (not using 1.x). Then give the documentation a read: http://www.asp.net/signalr/overview/signalr-20/hubs-api/mapping-users-to-connections That will show you how to consistently map users to connections and the various ways to handle that in multiple server scenarios.
Does anyone have any more comments about the code? Thanks for all your help so far!
Can you send me what items are actually in your list? Can you send what your controller and view look like? The line you posted works fine in the example I set up, so it has to be something else.
Edit: this is wrong, see replies There is a flaw in your formula, here's an example of the broken puzzle: 1 2 3 4 5 0 1 2 0 3 4 5 They both satisfy `width % 2 == 1 &amp;&amp; inversions % 2 == 0` but the second one isn't solvable. So this isn't a width vs height problem, but the lack of the blank tile position in that side of the formula. If you look at the wikipedia article for [15 puzzle](http://en.wikipedia.org/wiki/Fifteen_puzzle#Solvability) it says: &gt; The invariant is the parity of the permutation of all 16 squares plus the parity of the taxicab distance (number of rows plus number of columns) of the empty square from the lower right corner. Looks like you are pretty close, just a few tweaks.
Convert to the List&lt;string&gt; to an array and then serialize the array. In the C# codebehind: public string[] entries = entrieslist.ToArray(); public JavaScriptSerializer jsSerializer = new JavaScriptSerializer(); In your javascript code: &lt;script&gt; var a = '&lt;%= this.javaSerial.Serialize(this.entries) %&gt;'; for (var i = 0; i &lt; a.length; i++) { console.log(a[i]); } &lt;/script&gt;
Why do you use `.ToArray()`?
It will mean faster compilation times. With the new architecture it was easier to introduce big changes. In the future when the source code is compiled it is not written to disk anymore - it's kept in the memory and used directly from there. Currently the assembly is written to disk and then read from there - which is horribly slow, even on SSD.
Oh wow, that'll be awesome.
&gt; I guess you don't have to. It's not only "you don't have to", it's more like "you shouldn't do this". It's just a waste of computation with absolutely no benefit. &gt; Just thought it'd make it easier to work with since it's only List&lt;string&gt; and not List&lt;sometypeofcustomobject&gt;. This doesn't make any sense. Instead of `List&lt;T&gt;` you just get `T[]` which is not easier to use. 
I'm not sure what you mean here? I clearly need to just learn how to do profiling with .NET. If you have any handy guides that would be amazing ;)
What's your server-side code? If you're using MVC you can use a JsonResult: public class ControllerOfDoomController : Controller { [HttpGet] public JsonResult GetSomeDoom() { &lt; do things &gt; var model = resultOfThings; return Json(model, JsonRequestBehavior.AllowGet); } } On the javascript side you can call the action straight from JS (via jquery $ajax or $get, or $http in angularJs, or whatever tool you're using) and assign it straight into an object and start reading properties. Bonus points if you replace the default MVC JSON parser with the one from Newtonsoft (see http://james.newtonking.com/archive/2008/10/16/asp-net-mvc-and-json-net)
you don't need to use Json.Parse var jslist = @Html.Raw(JSon.Encode(@Viewbag.MyList)); formatted from my iphone so don't hold that against me...
Octopus is awesome! We use team city to build and package, then trigger octopus.
I'm trying to figure out the best setup. It's looking cool, need to figure out how to do the building and packaging then deploy.
10 seconds for shuffling 16 pieces? Exactly what did you do there? O.o
Multiplied the width and the height, then raised it to some exponent based on the product, for a 4x4, it was cubed, for a 4x5 it was squared. 10 seconds aren't exact metrics, but it took a lot longer to shuffle a 4x4 compared to a 4x5. It would be nearly impossible produce an accurate algorithm to determine a consistent amount of random moves. The current setup guarantees consistency.
Well, you're looking at 4,096 moves for the 4x4 vs. 400 for the 4x5 like that... But I still don't see why it would take awfully long. It shouldn't be all that computationally expensive.
djgreedps advice is good. Dotnet Pearls rock! If you just wanna have a reference with step by steps, these 2 sites have also helped me alot when ive been stuck: Very basic stuff: http://csharp.net-tutorials.com/ And quite a bit more in depth: http://www.tutorialspoint.com/csharp/
I researched this a lot a while back, and it seemed to me (at that time, at least) that Xamarin was basically the only way to go if I wanted to write in C#. Objective C makes me dissy, so i went that route. Im mostly writing Android now, because im not set ut to run the iPhone stuff through a mac yet. But the cross-platform boost from Xamarin.Forms seems to work nicely, and supposedly its not very hard to compile it with a mac mini on the network. I do have friends that claim im a moron, and that its far better to learn Obj C, buy a mac and use their excellent freeware, though. So it might be worth looking into that... When it comes to Xamarin, their not very nice on price. 300 per platform is pretty steep. There are supposedly free alternatives that work, but they all seem very complicated and with a sub-bar end product to me. The Xamarin apps come out feeling real native. Its a little bit of a learning curve to use it in the beginning though. Feel free to PM me if you get into trouble, 
I would think a single page application would solve these issues as well (loading view content into a single page). I've been working on a new Angular SPA app. Initially I started out in MVC (ASP.Net), but decided to go Angular for the UI instead using a selfhosted api project. I had intended on using signalR to bubble up events from the windows API Service, and probably chat as an after thought, but haven't re-implemented this in the new SPA UI yet. Does anyone else have experience with SignalR and single page apps (or more specifically Angular using UI-Router)?
One solution would be to store the instance in an abstract property overridden and backed by a static field in the descendant class. Downside is that you need an instance to access it, though. Another possible solution is to make a generic `BaseManager&lt;T&gt;` and implement descendants like `GameManager : BaseManager&lt;GameManager&gt;`. That way the field will be specific to the generic type argument, but it'll probably complicate further inheritance (e.g. a `MultiplayerGameManager : GameManager` would use the same instance field).
&gt; I really wish would stop treating null as anything other than undefined values that are unexpected This weird treatment of nulls comes, I think, from the misconception that exceptions == bugs. This is the sort of thinking that leads to empty catch blocks. Obviously this is wrong - if something should not be null and it is, throw an exception using asserts or whatever to document this, and fix the problem at its root. Otherwise 15% of your code will be null checks and unexplained behavior will never quite be a bug with any one method, because there is no place where the buck officially stops.
Pretty cool! I clicked this link because I recognized this photo from Caliburn.Metro
Ive been using something from codeproject: http://www.codeproject.com/Articles/28064/Global-Mouse-and-Keyboard-Library
I couldn't have said it better. What you describe has happened to me.
Thanks Keyzer. I may use you as a resource every once and a while as I try to learn a new system. I'd be more happy with coming out with a better product in the end as well. Hopefully the learning curve isn't too difficult. One of the things I noticed is that with Xamarin, only the Business License offers Visual Studio support, and that is much more expensive. Do you think that is worth the extra $700. Also when it says that the license is per developer, per platform. Does that mean if I go with the Indie license, I have to pay $300 per year for Windows android development + 300 per year for iOS development + $300 per year for windows + 300 for Mac making it $1200 for the Indie and $4000 for the Business license?
there are slides linked from under video. 9 pages, but I think the message is clear.
Some of these new language features solve some of my greatest pet peeves with this (and many other languages) and I cannot wait to be able to use them! Is there an ETA on when we might see C# 6 in the real world?
Im using the Indie version and work in Xamarian itself. Its pretty OK, espescially after the latest patch. Feels pretty much like VS. The work is all the logic in the OSes. Android is a nightmare of activities and fragments and initialization of viewmembers. Its real enjoyable when you get into the flow, though. The apps look so darn good when you test them on a phone. I got an Android one for testing, because the emulator isent all that. The extra 700 were definetely not worth it to me. I dont need System.Data.SqlClient and the support isnt that much worth. There is a 30 day free trial for all platforms. I would run that, write my app, and then see if you use anything you wont get in Indie. I doubt it. Also, if you want to work in VS the express edititon wont do. So you will have to shell out another steep sum for the pro edition there. The pricing is indeed per platform. 300 for mac, 300 for Android and 300 for iPhone. 900 total. 600 for iPhone and Android. Windows and WindowsPhone is best written in VS, i guess. PS. If your gonna do apps connected to Databases, i strongly recommend checking out Windows Azure Mobile Services. Good, good stuff and very easy to use. Free to test. 
You are cool. Thanks :)
Slide 7: http://view.officeapps.live.com/op/view.aspx?src=http%3a%2f%2ffiles.channel9.msdn.com%2fthumbnail%2fd36bf2a2-c061-47f3-8dc1-d08ac0a9e239.pptx
Excellent. Lots of really interesting stuff.
It didn't need converting to an array, but the front-end call works, and your answer made me realise I needed to make entriesList a public string. Thanks for the help!
i wouldve thought it would be worth having hearthstonecard as an abstract class and then inheriting it using classes such as GenericCard, RogueCard, MageCard, PriestCard etc. your card type i feel should be an ENUM(creature, Spell, secret, weapon) also dont use an array of string to return values like that, it can get pretty gnarly when youre trying to read your code and ofr other people who didn't write this card its going to be even worse. try naming stuff like this: private string _cardName = "Preparation"; private int _cost = 0; private string _cardDescription = "Return a friendly minion to your hand. It costs (2) less." private CardType _cardType = CardType.Spell; this allows readability for your code and helps to implement the functionality of the cards. if you need help with ENUMS check out this link: http://msdn.microsoft.com/en-us/library/sbbt4032.aspx
Thank you /u/xample9 :) /u/xampl9 is correct I am using it for cryptoraphy, Im trying to implant RSA in C# (for learning purposes), and just out of Curiousity /u/nemec, why make the assumption I'm not using it for cryptography?
Telnet isn't designed for file transfer. You may be thinking of ftp or scp. Telnet is for providing a terminal on the remote server through which you can do stuff on the command line. The best you can really do with telnet is cat the stuff to the terminal and then copy and paste it, but that's only going to work with raw text files. I've never used it, but you could try [WinSCP](http://winscp.net/eng/download.php) - they have a .net assembly/COM library, and it seems to be reasonably frequently maintained.
[SSH.Net Library](https://sshnet.codeplex.com/) might be just the tool you need for just about every operations remotely. Give it a try.
http://stackoverflow.com/questions/390188/c-sharp-telnet-library Has a couple libraries you could use to help.
He probably wants ssh which comes with sftp and typically installed on Linux computers.
Bob Tabor's series there I thought was pretty good. I dove in straight after that and haven't looked back. Though the one thing I believe he doesn't quite clearly cover - and it's important - is that while value types are default passed by value, reference types are passed by reference!
The C# Yellow book has everything you could possibly want
[Black wasp](http://www.blackwasp.co.uk)
Check out [Microsoft's Virtual Academy](http://www.microsoftvirtualacademy.com/training-courses/c-fundamentals-for-absolute-beginners)
Hey, that's neat! Mine is kind of similar, but less involved. I should consider adding some of these features.
Well, if I read correctly, it is also available on mac (silverlight for mac) &amp; linux (moonlight) these days... (didn't know that) But still, it feels as if it doesn't have enough "mass" behind it, and since it isn't used all that much I don't bother with installing it. If there is a website that requires it, but I don't really need that website, then bad luck for both of us, it still won't be installed. If there are enough people thinking like that, then acceptance becomes much more difficult. (additionally; depending on your location/situation, you might not be able to install Silverlight altogether on the machine you're on...) Also, can't HTML5 do all (and more) of what Silverlight is doing?
I don't get what's wrong with initialize syntax. I think it's much more appropriate for initializing read-only collections. Edit: I mean member fields with the "readonly" token. Not read-only types.
We have String.Empty for a reason. Allowing null means you now have to check for null. But it also means you don't know the difference between "normal nothing" and "something has gone horribly wrong". 
It's annoying enough that they basically designed a new language feature to make it easier to deal with, the [Null propagating operator](https://roslyn.codeplex.com/discussions/540883). Soon you'll be able to write code like: var x = GetCustomer1()?.extraRef?.name?.Length Each ?. checks for null before attempting to access the property/method.
`String.Empty` does **not** represent an absent but optional string. It is a string with nothing in it, which is distinct from `null`, which is no string at all.
I agree with you. They are different. The point I was trying to make is that allowing null values for a string is undesirable, in my opinion for the same reason some don't like String.Empty. Imagine a Customer object with property MiddleName. Not everyone has one. How is String.Empty different from null in this case? If I check for String.Empty, it is a safe way of saying "there's no useful information here". If I have to check for null, am I saying that the person doesn't have a middle name, or that the variable was left uninitialized by mistake? Suppose you say that String.Empty is not nothing and could result in the code thinking there is a MiddleName where none exists. How is null better in this case? It's the same argument coming for a different direction. I guess I'd rather deal with valid values than null. Or you can go the extra mile and not use primitive values for properties that are optional. 
I would say having no middle name[s] would be a good case for null. Null means 'nothing', whereas String.Empty sorta implies that he has a middle name but that his parents were descended from whitespace.
You can use an abstract generic BaseManager to achive what you want. BaseManager: public abstract class BaseManager&lt;T&gt; where T : BaseManager&lt;T&gt;, new() { protected static T _instance; protected static void SetInstance(T instance) { if ((_instance != null) &amp;&amp; (_instance != instance)) { return; } _instance = instance; } public static void CommonFunction() { // Your code } } SoundManager: class SoundManager : BaseManager&lt;SoundManager&gt; { public void Start() { SetInstance(this); } } 
This will be your best bet: http://channel9.msdn.com/Series/C-Sharp-Fundamentals-Development-for-Absolute-Beginners Hope that helps!
Null is a state, not a value. That part of collections, it makes writing code easier that theres always a list. As you can just use a foreach etc. so yeah makes some stuff easier. Also , really? Null delegates? Why? WHY WOULD ANYONE DO THIS
&gt;Using null for a collection is evil. If a class has a property that's a collection, create a daggum blank collection! I wish NHibernate would listen to this. And Hibernate, because apparently that's why NHibernate does it.
The point is the null object pattern, and the null reference exception. If every type had one of these, you'd not need to do so much if (x != null) checking.
I can help fill that void.
&gt; If there's no Action&lt;string&gt; to be performed, don't pass in null to methods expecting an Action&lt;string&gt; parameter, but an empty action: Uh, no. Calling a delegate isn't exactly cheap, especially if it requires parameters that need to be constructed. And having a fake delegate is going to be a pain in the ass when it comes to debugging because you can't examine it.
&gt; Also , really? Null delegates? Why? WHY WOULD ANYONE DO THIS The same reason people overly abbreviate names. Laziness. ";" is a lot fewer keystrokes than "= () =&gt; {};"
Example please
Well we got our new system back in 2004.. so since then I guess. Yes, it is my job and sure, I don't mind noobs, sometimes I feel like one. Google has all the answers... sometimes it's the question that needs to be refined.
&gt; Also, I still can't find any satisfactory explanation of what the deal is with the [code in brackets] in code samples I see online. When I put them in Visual Studio, it has no idea what to do with them! Please post a link with this.
Oh to fill out our little resume here, I actively use: C#, Java, C, C++, VB.Net, VB, ASP.Net, ASP Classic... of course HTML/CSS/JScript. Dabbles in many, many more. I've also been trained in Fortran, Cobol, RPG, Assembler and, of course, Basic. I started using computers back in 1981, TI44a was my 1st, c64 2nd, c128 3rd. My 1st computer language was CBM Basic my seconds was assembler. Clear as mud?
You should be using `string.IsNullOrEmpty(value)` anyway - seeing `if (value != null &amp;&amp; value != "") {}` makes me a grumpy reviewer.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Amdahl's law**](https://en.wikipedia.org/wiki/Amdahl's%20law): [](#sfw) --- &gt; &gt;__Amdahl's law__, also known as __Amdahl's argument__, is used to find the maximum expected improvement to an overall system when only part of the system is improved. It is often used in [parallel computing](https://en.wikipedia.org/wiki/Parallel_computing) to predict the theoretical maximum [speedup](https://en.wikipedia.org/wiki/Speedup) using multiple processors. The law is named after [computer architect](https://en.wikipedia.org/wiki/Computer_architecture) [Gene Amdahl](https://en.wikipedia.org/wiki/Gene_Amdahl), and was presented at the [AFIPS](https://en.wikipedia.org/wiki/American_Federation_of_Information_Processing_Societies) Spring Joint Computer Conference in 1967. &gt;The speedup of a program using multiple processors in parallel computing is limited by the time needed for the sequential fraction of the program. For example, if a program needs 20 hours using a single processor core, and a particular portion of the program which takes one hour to execute cannot be parallelized, while the remaining 19 hours (95%) of execution time can be parallelized, then regardless of how many processors are devoted to a parallelized execution of this program, the minimum execution time cannot be less than that critical one hour. Hence the speedup is limited to at most 20×. &gt;==== &gt;[**Image**](https://i.imgur.com/BKTl6fB.png) [^(i)](https://commons.wikimedia.org/wiki/File:AmdahlsLaw.svg) - *The speedup of a program using multiple processors in parallel computing is limited by the sequential fraction of the program. For example, if 95% of the program can be parallelized, the theoretical maximum speedup using parallel computing would be 20× as shown in the diagram, no matter how many processors are used.* --- ^Interesting: [^Parallel ^computing](https://en.wikipedia.org/wiki/Parallel_computing) ^| [^Gustafson's ^law](https://en.wikipedia.org/wiki/Gustafson%27s_law) ^| [^Speedup](https://en.wikipedia.org/wiki/Speedup) ^| [^Gene ^Amdahl](https://en.wikipedia.org/wiki/Gene_Amdahl) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+citoz1s) ^or[](#or) [^delete](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+citoz1s)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
Have you looked at existing configuration management software? [Puppet](http://en.wikipedia.org/wiki/Puppet_\(software\)) [Chef](http://en.wikipedia.org/wiki/Chef_\(software\)) etc. If you still want to roll your own, definitely use SSH/SCP, Telnet is antiquated and not secure.
2.75 (4 votes) there has been a bug for a while making it not as fast as it could be on 32 bit systems but that's been patched now, for large arrays it's still the fastest thing
I didn't had the time to look to all the code, but I noticed that you let your collections exposed to the user. You should use read-only collections. In example, in Atlantis.Net.Irc.IrcClient.cs, public List&lt;char&gt; Modes { get; private set; } should be replaced by something like public ReadOnlyCollection&lt;char&gt; Modes { get { return modes.AsReadOnly(); } } Where mode is actually a List&lt;char&gt; Same thing goes for all types of collections, so that members like Add() or Remove() are not exposed to the user. Overall your code looks great!
Wow, so it seems like my 2 options are to buy Xamarin business for 1000 and VS (non express) for 700, or just get Xamarin for 1900. I think my answer for both might be no thank you. lol. If Xamarin studio is pretty intuitive/ similar to VS, I think I may start with that. But like you said, if I cannot do database queries with xamarin studio, I will definitely check out Azure. It looks like I have a lot to learn, so I will keep this info in mind as I begin.
300 for Xamarin iOS is enough to build apps for iOS in Xamarin. If you wanna go cross-platform, which kind of is Xamarins biggest advantage, it gets expensive. I would do the 30 day trial on the full package and see how you like it. To use Xamarin is very similar to VS. Only the layout stuff is very different. It would be if you did apps in VS too, though. 
 string.IsNullOrWhiteSpace(value) 
Not to be a dick or anything, but OP literally says in the source that he/she just watched the C# Fundamentals from Bob Tabor and is asking for other sources to expand on.
You have to have specific references in order to access specific attributes. [Attributes Tutorial](http://msdn.microsoft.com/en-us/library/aa288454%28v=vs.71%29.aspx) Edit: For example, if I create an "asmx" file for a web service. My web service methods within them should have the **[WebMethod]** attribute which is referenced by: System.Web.Services using System.Web.Services; [WebService(Namespace = "http://tempuri.org/")] [WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)] public class WebService : System.Web.Services.WebService { public WebService () { } [WebMethod] public string HelloWorld() { return "Hello World"; } } I found the answer above on [Google](https://www.google.com/#q=c%23+class+method+attributes)
This isn't always good practice. If you do game dev with Unity3D, allocating an array that's not used is bad, causes GC at runtime which is also bad. 
Maybe better for international accessibility, but worse for searching the data. Names can be represented as fairly rigid structures in many parts of the world.
I don't think this guy works on systems that are strapped for resources... null is super handy when you don't need to waste memory creating objects...
No, compilation from C# to IL.
Like every guideline, it applies in general, but there are specific performance-critical cases that must be optimized. If you need to optimize but want to avoid null collections in your public API, you can use a singleton read-only empty collection or IEnumerable instead, and create a real one if elements need to be added. Tiny bit more work (returning "Foo.Empty" instead of "null"). 
Why is it worse for searching the data? In a database you create an ordered index for the name parts, and just do something like `SELECT namepart FROM names WHERE person_id = 1234 AND name_index = 1`.
Ctrl+M, Ctrl+H a.k.a. right-click &gt;&gt; Outlining &gt;&gt; Hide selection will collapse the selected lines, and let you show/hide them just like #region blocks and class members.
Um... private readonly List&lt;int&gt; whatever = new List&lt;int&gt;();
Oh, that is incompatible with DataContractSerializer because it bypasses your initializers. But I don't see what it has to do with the conversation at hand.
This is the way I tackle it. In general it is folly to try and integrate tools like this. Rather use an orchestration toolset. Now if you want you can have powershell cmdlets or whatever you like kick off the automation but at the very bottom of it, if you are making changes in Linux you should likely be kicking off a shell script of some sort in that platform rather than trying to command it from .NET through a watched terminal. 
Ah. I see. I don't use that.
P.S. Double check that. I can't rember for certain if it bypasses constructors and initalizers or just constructors. Fun fact: If you try to write an illegal initializer, VB will rewrite your constructors to do what you are trying to acomplish. For example: //legal in VB dim _order as new Collection(of Order)() dim MyOrders as new ReadOnlyCollection(of Order)(me._orders) //not legal in C# Collection&lt;Order&gt; _order = new Collection&lt;Order&gt;() ReadOnlyCollection&lt;Order&gt; MyOrders = new ReadOnlyCollection&lt;Order&gt;(this._orders) 
If you're really using telnet, don't, it's awful insecure. And VNC viewer? On a remote machine that's a server? Just use SSH.
Linq. So many loops, gone. 
You want to use C and not BASIC?
I can write a program without integers or arrays, but I'm not cheating. I'm making a choice among available options. C++ developers do this all the time because they don't need every feature of the language and sometimes can complicate designs. I worked at a C++ shop long ago where templates and macros were forbidden, for example. 
[Snippets](http://www.dotnetperls.com/snippet) in VS 
Not necessarily. If you only ever expect *one* real delegate to be listening for that event, adding an empty delegate by default is twice as slow as leaving it null by default. This only matters for performance-sensitive code, but there *is* a good reason. &gt; The cost for raising an event with an empty delegate is roughly twice that for raising it with a null check first http://stackoverflow.com/a/171200/564755
Are you suggesting BASIC? Why? There are plenty of better languages to start with. What does C have to do with all of this?
Do you want to learn C#? Do you want to make a game? Do you want to learn to make games? What are your priorities?
ReSharper saves me ridiculous amounts of time. It earns its keep at least weekly for me. I despise VS without it now. As for patterns, Dependency Injection or IoC is crazy powerful, even with zero unit testing. 
Nicely done! I'll definitely check this out,
I really want to learn DI and IoC related stuff but don't know where to find help on it. Can you point me to some good resources? Thanks :)
Any .Net Native news for desktop?
While that is true, keep in mind it is a very *very* ***very*** low cost. That's like arguing you shouldn't split your large programs into separate functions because a function call incurs overhead. In that guy's benchmark, its only an extra 5.62 **nano**seconds per call. I've known too many people who would avoid patterns like the empty default event handler just because they read somewhere once it has worse performance characteristics.
Well, you can still use a `Maybe`. The `Nothing` shouldn't take any space at all.
Expression tree introspection isn't unique, but it's rare in mainstream languages, sure. I mean, it's kind of LISP's claim to fame, and LISP actually did it a lot better and more easily than C# (C# expression trees are quite limited).
The ruby example in particular isn't all that similar because most iterators aren't lazy (and due to legacy I don't expect new lazy iterator API to ever really be as common as the older eager interface).
When it all gets compiled down, [initializers are part of your default constructor](http://i.imgur.com/INmojhw.png). Internally, DataContractSerializer uses [FormatterServices.GetUninitializedObject](http://msdn.microsoft.com/en-us/library/system.runtime.serialization.formatterservices.getuninitializedobject(v=vs.110\).aspx), which as the name suggests: Does no initialization whatsoever. Also if you want extra proof, I accidentally ran into this issue at work earlier today because was transplanting code from a class without DataContract into a class that did.
 if (RevertToSelf()) { if (LogonUser(userName, domain, password, LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT, ref token) != 0) { if (DuplicateToken(token, 2, ref tokenDuplicate) != 0) { tempWindowsIdentity = new WindowsIdentity(tokenDuplicate); impersonationContext = tempWindowsIdentity.Impersonate(); } else { throw new Win32Exception(Marshal.GetLastWin32Error()); } } else { throw new Win32Exception(Marshal.GetLastWin32Error()); } } else { throw new Win32Exception(Marshal.GetLastWin32Error()); } Could be: if (!RevertToSelf() || LogonUser(userName, domain, password, LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT, ref token) == 0 || DuplicateToken(token, 2, ref tokenDuplicate) == 0) throw new Win32Exception(Marshal.GetLastWin32Error()); tempWindowsIdentity = new WindowsIdentity(tokenDuplicate); impersonationContext = tempWindowsIdentity.Impersonate(); Blame crappy formatting on my phone...
also possible for network share. Just replace the local directory with the network share e.g. \\\\servername\\folder 
Why not? I´ve tried it and it works. You got any error message?
If you're writing a command-line tool, don't do the argument parsing in C#. Do it in PowerShell and call your C# functions from PowerShell.
 Enumerable.Empty&lt;T&gt;(); or public static class ArrayData { public static T[] Empty&lt;T&gt;() { return EmptyType&lt;T&gt;.Value; } internal static class EmptyType&lt;T&gt; { internal static readonly T[] Value = new T[0]; } } Neither of these will thrash the GC like creating a new array all the time would.
It will not work on a file share that is not hosted on a Windows machine.
Test driven development. Such better product quality, no reoccurring bugs.
I suspect it won't work with samba and/or windows NFS drivers. Windows native shares should work. edit: actually samba should work aswell, but...
My most used shortcut is by far the Ctrl+K+C and Ctrl+K+U combo for commenting out things.
Some minor things I noticed at a very quick glance: - You mix tabs and spaces. Stick to one. This is very nasty. - An interface has a `Dispose()` method, but does not inherit from `IDisposable` (e.g. `IModule`). - You have inconsistent naming. Sometimes it's `camelCase`, but sometimes it's `split_by_underscore`. - You have duplicate assignments, e.g. in `Configuration.cs` you have your fields pre-initialized, but within the **only and default constructor** you overwrite the pre-initialized values. This will probably be optimized by the compiler, but still a not nice thing. - You sometimes have very long methods, like `ProcessLine()` in `Configuration.cs`. - Your `ToBoolean()`-extension method is rather misleading. I could understand that you'd want to easily make "yes" or "no" too a boolean value.. but shouldn't things like "foo" rather throw an exception? It can't be logically made to a boolean. Right now the method is more like a `EqualsYes()` method. - You have empty classes, like `ModuleLoader` or `ExitCodes`. Remove them. They're for later? Still remove them until they're actually used. - Some types have a `Dispose()` method but do not implement `IDisposable`, like `ModuleManager`. - You have inconsistent formatting. Sometimes you have a block around a single method after an `if`, sometimes not, even tho you check the same thing in both. Stay consistent. - Have **always** proper checkin comments. Comments like **idk** are just useless. But in overall you seem to have a very good code quality. I did not dive into the details, but on a glance it looks good.
thanks for all the responses guys, im starting to think that SSH would be a much better alternative than telnet. ive found a library to use and i guess ill just get stuck in!
We used this in an application and in the end just went with a polling system that has been a lot more reliable. If you are going to use it look into this: http://msdn.microsoft.com/en-us/library/system.io.filesystemwatcher.internalbuffersize(v=vs.110).aspx &gt; If there are many changes in a short time, the buffer can overflow. This causes the component to lose track of changes in the directory, and it will only provide blanket notification. 
Lists are definitely a good approach here, you should use an ArrayList that contains other ArrayList that will represent either the rows or columns, as long as you keep all your lists the same size, you should be able to treat your data structure as a growing matrix with constant access and edit time (however, growing will take longer than a regular ArrayList would since you would have to increase all the the other ArrayLists to match the first's size) EDIT: /u/martheen gave a good solution as well, the "coordinates in a set" solution is very good for a mostly empty matrices, for example in easy minesweeper, where only one in ten of the coordinates contain a mine (you can assume that if a coordinate has not been entered into the set, that coordinate is empty, thus if many of your coordinates are empty not keeping their data would really save space) also, with hashsets, growing your grid would be trivial. however for dense matrices with lots of different values, even hashsets might take a while and would actually be slower than my nested list solution at getting values, but as mentions before, growing the nested list will not be expedient. so there's really no one good answer here, the question is do you intend to read and grow your array more than read from it? how blank is it going to be?
Now that seems overly complicated :x
If you find it too complicated, just stick to large pre-filled 2D array. Any other solution (List in List, custom class etc) have near-equal complexity
What's exactly your problem with lists and arraylists?
That's awesome. Thanks for the link!
I don't understand your problem, an arraylist is essentially a regular array with the added functionality of growing, and they're just as fast. and how exactly would add cells one at a time? your grid won't be rectangular if your sub-lists will be of uneven size... EDIT: this problem has no common solution because of the complicated way computers handle reallocation and store 2D arrays, essentially it's just like regular arrays but remembers the length of the rows (so when you access cell [2,5] in your 2Darray the computer translates it to cell [2\*(row length) + 5] in a regular array where your data is really stored. so that means when you want to increase the array's size, it would have to insert a lot of blank spaces at the row's ends to keep the grid square. Now, increasing a regular array's size (or reallocating it) is easy since you just have to add empty slots at the end, so what most computers do is when you build a new array, it keeps a few data slots ahead of the newly built array free, so that reallocation will be quick without having to actually re-record the entire array into a new spot. But in a dynamic 2Darray, that quick and simple solution is no longer viable since you're gonna have to add empty spots **in the middle of the array**, and that demands that most of the array will be re-recorded anyway, that will make reallocation a time (and space) consuming chore, so the most popular solutions involve splitting the grid into tiny pieces that can be handled individually. My nested arrays split the grid into manageable rows while the hashmap solution splits the grid into individual cells (with the added bonus of disregarding most of them)
Download Unity and (assuming you have a Windows PC) Visual Studio Express (there are multiple versions of this depending on what platform(s) you want to program for). Then follow some Unity tutorials while also learning to code in C#, which you can use Visual Studio Express for. There is a huge amount of info online. I recommend Microsoft Virtual Academy if you want to learn the basics from watching video tutorials (you can follow along and code in Visual Studio). It's free. I'd suggest learning the basics of programming before trying to make a game. Build a few small, simple programs and understand the basics. If you have a smartphone/tablet you could build a simple app for that. For Windows platforms you can use Vosual Studio. iOS/Android have their equivalents (though you'll need a Mac to code for iOS).
The whole article is already based on an wrong habbit: var accountID = 3; var account = FindAccount(accountID); var accountName = account != null ? account.Name : string.Empty; Why even take a replacement value, when you can't find an account? You can't possibly have an account name when you don't haven account - so you're already handling this case wrong and poorly.
Good point, thanks for the feedback.
Why convert it to a one dimensional array instead of pulling out what you need out of the 2D array? Seems like an extra you don't need but that's hard to see if that's true without seeing some code. Is it something you can post somewhere?
alt-shift-F10 when you have the blue suggestion box to open the dropdown, while tedious combination, it's easier than hunting for mouse. I use F12 (go to definition) a lot. Also shift-F12 (find all references). One thing is that you should have project references for go-to-def work (versus .dll references). Despite how basic and retarded it is, builtin profiling tools are invaluable (if you have access to anything else then even better). Beats guesstimating any time. Unfortunately few of my coworkers believe me in this so they end up cooking up fuckup solutions to problems that don't even exist. Refactoring/F2 renaming. It took me a long time to start trusting this one, but as long as your solution is sensible it works correctly. 
Well first of all i'd have to go the 1D route, which is not all that important, but still slightly annoying. And then i'm not even sure if it helps me all that much. Sure lists can grow but... what do i do in this scenario: Say my list is 100 items long, representing a 10x10 space. Now what if i need to add an item at [5, 11] ? I can't just set it. I can't just .Add it, because, going the 1D route, that would mess up the order of items and thus making the whole list sort of useless. Even .Insert doesn't work if i recall it's functionality correctly. How would i even tell the list that it needs to expand now, other than using .Add which is not all that helpful if i want to keep the array feature. By that i mean the ability to use the index of an item to calculate its neighbors and what not. However, there is always the option of using a list of lists, which would give me the same power as a 2D array. I still don't know how i would tell them to expand when i need them to. But as i said, i haven't really used lists for anything fancy, so everything other than .Add and .Remove is unknown to me :P In other words, for everything that needs to use indecies i used arrays, for everything else i used lists. So that might explain why i'm so confused right now.
Option&lt;T&gt; should be a struct though.
You're falling into the early optimization trap. The only way to actually know which is better is to build it both ways and benchmark each. Just pick an approach and then if you decide it's not performing sufficiently well, try the other approach and compare. You might find that it's plenty good enough already. 
How about a list of dictionaries? The lists could be columns so that would be easy enough to get your x value. The dictionary is like this MyDic(int, val) this way you have an index for your y. In my head ,this seems easy to follow. 
Yea that's good advice and what I'm currently doing. Figured I'd tap the great minds of reddit to see if I was missing anything obvious here (granted, it's hard for everyone to comment without code). Thanks!
It should be noted that LINQ can be slower than a loop. In one function I cut execution time in half by replacing a pair of Where() calls with two manually constructed List&lt;&gt; using for-loops.
Do you gracefully handle a loss of connectivity to the remote server and if the requested directory is on a remote server, do you respect the 64k buffer limit?
Crap. You just need to know how to use it. It is anything but unreliable. I have system running 24*7 which has successfully FileSystemWatched well over a million files over the last few years. On a network share. The problem everyone experiences is that they think it's a FIleSystemWatcher. It isn't. It hooks into a lower level thingy, and events get fired several times for what appears to be a dingle event to the outside world. That's what freaks people out - when you create a file and multiple events get fired. For the hell of it a couple of days ago I implemented a bunch of FileSystemWatchers. All they were setup to do was Given a watched folder, and a file called *.txt, move it to another folder Then I created 100,000 random files, dropped them randomly in the watched folders, and watched as 95% of them got moved to their intended destinations. The 5% that didn't work was because the file was still being written (and was therefore locked) when the IO.Move occurred. Filesystems are a bitch, but now the fault of fsw. The FileSystemWatcher buffer is fine for normal operations. Before you go spreading fear and discontent, why not check out the [source code](http://referencesource.microsoft.com/#System/services/io/system/io/FileSystemWatcher.cs)? 
Running into this myself here recently - can be non trivial performance hit as data gets big.
That's a new one for me, thanks!
I found this page on the same web site: http://www.entityframeworktutorial.net/EntityFramework6/addrange-removerange.aspx It looks as if it has the answer to my concern about non-unique rows in the database tables. It also has links to sample code, which I downloaded.
Yea i thought about that too. I'm gonna need some time to figure out how good/bad this solution is. There are a few things that need to be considered. I think this will be the way to go though. Well, either this or just a big pre-filled 2D array. Need to think about it for while, there are quite a few things to consider. I haven't completly worked out what i'll need, so naturally its hard to decide on a method. 
&gt; Unity Is Unity for 3D only? I'm interested in 2D games, and have been checking out Monogame. Any opinion on Monogame?
How do you know what name_index 1 is going to be? If I where trying to get a list of given names, would I search index 1 or index 2? It would not be possible since I would not know what the order is (surname, given name; given name, surname; given name only). 
That's why I said you'd use an ordered index. +---------+---------+-----------+ | user_id | name_id | name_text | +---------+---------+-----------+ | 1 | 1 | Dave | | 1 | 2 | Alan | | 1 | 3 | Smith | | 2 | 1 | Laura | | 2 | 2 | Brown | +---------+---------+-----------+ For forename, it's just `SELECT name_text FROM names WHERE user_id = ? AND name_id = 1`.
You can develop 3d and 2d games in unity
I love the neatness of LINQ, I just wish there was an easier way of debugging it.
Memory is not as expensive as you might think, and using RAM is almost always faster than repeating a process, or worse saving out to I/O. If you're doing a very large number of these and there is a good chance that some of these calculations could be repeated, you could cache the results in a hash table. This only works if the hashing algorithm produces a unique value for each set of inputs and it is much faster than performing the actual calculation. And you don't have to store the original data after you perform the first calculation. You may not be able to cache the entire calculation, but you may find some steps can be easily cached. Have you thought about using parallelization techniques? You can use the Task Parallel Library to greatly speed up CPU intensive jobs, assuming you have multiple cores. Just doing a simple Parallel.For could get you a big boost. 
A friend of my is constantly telling me to use LinqPad for that purpose. You can dump the results at each point, but yeah I agree. If I need a particularly complicated Linq Query I generally break it into smaller ones so I can see each step clearly.
Parallelization techniques are definitely on the radar but the first step is just completing the algorithm. I haven't used hash tables before but will look into that as an alternative - I've always been interested in learning more about them.
http://www.gametutorials.com/ These guys just went from a pay model to free with ads. Might be worth checking out. 
I'm a bit puzzled with a few newer articles recently about how nulls are bad or harmful. Null in some cases has really significant value. But, I'm a data guy. I love databases and working with data. My code purposefully accounts for nulls all the time and I adequately defend against nulls where necessary. The other day, I read an article where someone on Twitter was upset over an API call that returns a collection returned a null instead of an empty collection. From a data standpoint, there's usually a significant reason for that. As long as its properly documented, I don't see the issue with doing that. Maybe I'm just nutty...I don't know. If you want to avoid nulls, make everything structs and don't let them be nullable.
You can't really know how many operations something exactly has, because you don't know the processor too well. The best (and only sane way) would be to actually profile your application using a profiler which will measure the execution time of your methods. Find bottlenecks, change them and see if your change actually made sense and improved the speed. Then also execute your unit tests and integration tests to make sure your application still works correctly.^^^we^all^know^you^don't^have^tests.
Except for the dynamic resizing part, which a 2d array can't do at all and which is the entire reason all that extra complexity is there in the first place. Why not just a use a single integer variable if you're going to completely ignore the requirements?
Good solution. I wouldn't have gone down the Coordinate&lt;T&gt; path, though - use a Dictionary&lt;Coordinate, T&gt; at that point, I think. Particularly because the item isn't taking part in GetHashCode() or equality checks.
I wouldn't worry too much about it. Operations like that are abstracted and (typically) dependent on the available CPU architecture. For example, there is a [fused multiply-add](http://en.wikipedia.org/wiki/Fused_multiply%E2%80%93add#Fused_multiply.E2.80.93add) instruction which combines a multiplication, addition, and rounding in a single CPU instruction. There really isn't much from a C# level to optimize to take advantage of this (this is up to the just-in-time compiler and the operating system/CPU architecture available on the client machine) and in some cases your clever code may in fact be less efficient. (EDIT: Just in terms of the concept of thinking of multiplication like an iterative addition is not really correct; most mathematical operations can take advantage of bit-shifting operations, or are implemented in very efficient manners on the CPU core. Even going that low, you have other issues of latency between the various levels of CPU cache, memory, the instruction sizes, 32bit vs 64bit architectures, and so on.) When it comes to .NET optimization, typically the most gains are algorithmic in nature. That is, it's not so much the arithmetic where gains are made, but in redesigning higher-level designs to avoid excessive iterations, or object instantiation, or excessive garbage collection, or multithreading blocking/overhead issues. A good piece of advice is to not think too hard about small micro-optimizations as often our assumptions about what is and what is not "fast" or "slow" can be incorrect. Instead write the code to be the most readable/maintainable/flexible, then identify _real_ bottlenecks in the running application that negatively affect users. In addition, the use of code performance profilers tools is greatly encouraged as they'll very quickly help you identify the culprits of the bottlenecks rather than leaving it up to trial and error or guessing.
I've used them before, but fair warning I could never get them to work properly on Windows 8 or Windows Server 2012. My understanding is that you now need to use something in the Windows.Storage namespace. Instead of doing that I've been migrating everything I had on FSW to pollers. There's less fiddling and less chance of a buffer overflow that way.
Eh? How so? string.IsNullOrEmpty() is there for a reason too. EDIT: Like Matosawitko said 21 hours before me...
You should check out the Big O notation: http://en.wikipedia.org/wiki/Big_O_notation What usually costs the most is iterations.
Things like this at the top of a class: private bool temp; ... WTF is that? "temp" needs a better name, or at least a comment.
Aye, my degree's in mathematics so I'm familiar. I'm trying to bridge the gap between between the idea of an algorithm's time vs the code's. I may be able to write an algorithm in linear time, but you could really do some damage with inefficient code anyway. This had kinda came up with another thread where I suggested Linq was a nice substitute for loops. I know that for loops are cheaper than foreach, but how Linq fits into there is a bit of a question for me. When I first started coding I was working with large datasets from excel files and looping through them. I found Linq and not only was the code simpler but it ran much faster. It came up later though that that's not always the case. And that's just one example, there may be tons of other areas that I'm using a strategy that should be replaced and I'm not seeing it. Rather than S/O each piece I might think is inefficient I'm hoping to broaden my knowledge on it.
You are concisely describing big O notation. Unfortunately I don't know of any great free courses on this subject, but you were correct in your assumption that it's something you usually learn in comp sci classes - usually one titled 'algorithms' or something similar.
This sounds really really much like a case of **premature optimization**, especially the case "loops are faster than LINQ". With modern processors like today the speed of code is less and less significant. But on the other hand the algorithms get more complex and bigger. So most of the time it is more important to value explicit and readable code over raw performance (e.g. LINQ over loops). When you actually have a feeling that your code does not perform well enough you profile it. If not.. Who cares. It runs, it's readable, that is what counts. Premature optimization often leads to messy and unmaintainable code.
Just a temporary variable because the module system isn't 100% - I want to allow "`LoadDirectory`" to (re)load [new] modules at runtime. **I haven't figured out how to do this yet**, so I just set a temporary boolean flag to back out of calling `LoadDirectory` again after it's been called once.
Configuration does indeed some refactoring. I was porting a C++ class from an open source project to C#. "`ToBoolean`": Makes sense, thanks. Will update that. "`ModuleLoader`": I had thought I deleted that, guess not. `ExitCodes` is future use, soonish. `IDisposable`: I suppose that actually makes sense. Thanks! Tabs and spaces: example? afaik, I think this might be git converting `tabs-&gt;spaces`. &gt; You have inconsistent formatting. Sometimes you have a block around a single method after an if, sometimes not, even tho you check the same thing in both. Stay consistent. I haven't decided what looks better :( Some things like `if (condition) throw ...` look fine, whereas things like `if (condition) foo = "bar"` looks odd (and I think I did use some of that from R# suggestions (oops). --- Thanks for the suggestions!
Could you create a class that will first, hold the value that you want to put into the grid and then two fields, one for the x and one for the y. Press all the things as arguments to that new class' constructor and then less it all into a single list, using lambdas to address any particular element?
&gt; Tabs and spaces: example? afaik, I think this might be git converting tabs-&gt;spaces. Just look around on your github, it's much more clear there. Like *Configuration.cs, line 76*. You clearly see that the variable name is much more left than all the other code. Also the bracket after the try is too far right. That's why I prefer spaces instead of tabs. :-)
The main point was that no matter what you use it for `temp` is a bad name.
Is this what you mean? public string ReturnSwNum(string toCheck) { Regex find = new Regex(@".*(?="")"); Match swNum = find.Match(toCheck); return swNum.ToString(); } This will allow you to call ReturnSwNum anywhere in your code and the value can be used. example: string returnMatch = ReturnSwNum(stringToCheck); Now you can use returnMatch below that line somewhere. 
You want Base64 encoding probably
http://sscce.org
Don't use ArrayList. Use List&lt;T&gt;. Non-generic collections should be considered deprecated. If you ever actually and truly need a list of Object, then List&lt;Object&gt; will spell that intent out a lot more clearly than ArrayList. 
Yes you can use bit manipulations to control each bit in a byte and pack them together like you want. It depends on what you want but read up on bit masking in C# and the following may help: A couple of built in .NET classes that may be sufficient for you that do this: [BitArray](http://msdn.microsoft.com/en-us/library/system.collections.bitarray%28v=vs.110%29.aspx) [BitVector32](http://msdn.microsoft.com/en-us/library/system.collections.specialized.bitvector32%28v=vs.110%29.aspx) Custom implementation of a BitStream with more info: http://www.codeproject.com/Articles/12261/A-BitStream-Class-for-the-NET-Framework 
I've heard of TDD but I've never seen it in action. How does it differ from traditional development, and what is traditional development?
I think this is getting hung up on my bad/confected example and missing the real point of the article. You can substitute a more real example if you like. What about a method that wraps an Entity Framework query which ends in FirstOrDefault()? Every call site has to remember to check that the return value isn't null before doing anything with any of its properties. I threw the FindAccount() example together to be as self-contained as possible and not distract from the point too much, but it seems it had the opposite effect.
This is a great place to use the Flags decoration for enums. [Flags] enum MyValues { NoValues = 0, Value1 = 1 &lt;&lt; 0, // Bit shift operator Value2 = 1 &lt;&lt; 1, Value3 = 1 &lt;&lt; 2, // And to go for the extra sugar, you can group like this: Value1AndValue2 = 0x011, Value1AndValue3 = 0x101, } private MyValues checkboxValues, private void Form_Load(object sender, EventArgs ea) { Checkbox1.Checked = checkboxValues.HasFlag(MyValues.Value1); Checkbox2.Checked = checkboxValues.HasFlag(MyValues.Value2); } The only variable is the underlying type on the enum and you get to use the enum to enforce that any change of your constants is covered by the compiler. Flags enums are the shit.
Unless you're really, really tight on space (I really doubt that) then just store your whole setting class as serialized json. Really.
Yep. We pipe the output of filesystemwatcher to a buffer and have another thread check to see if it can aquire a file handle. Once it can get a handle it releases the file into the processing queue. TPL and Dataflow make this set up easy to deal with. 
Are you trying to convert string to int? If so, wouldn't you want to use Int.TryParse instead of .ToString() ?
I added my code, perhaps I should put it inside of a function
*places hands behind back, faceplants into desk* thanks!
You should just be able to get rid of the "return" and add a break; ... Match AppSwNum = FindNum.Match(line); swNum = AppSwNum.ToString(); break; ...
Are you trying to actually exit the method you're in or just get out of the while loop? If it's the latter, get rid of the return but keep the rest of that line. The next line would be: break; This will exit the while loop leaving swNum available for the scope of its declaration.
&gt;and if not my ideas are any good, what are a good idea? Unless you have a compelling reason to save space, I would not do this. As other users pointed out, bit flags and BitArray are good tools for achieving this.
Yeah, I made heavy use of it on multiple projects a while back (I think that was even .NET 1.1 days) for processing a lot of files without issue. The best way I found to use it was when the event fires, add the file path to a list, queue, or even database, checking to make sure it's unique when it's added so you don't get duplicates. Some other thread would actually read through the collection and do any processing on the files. If the file was locked, the thread would just skip it and try again later when it finished processing the rest of the files.
You could possibly do ini files. http://www.codeproject.com/Articles/1966/An-INI-file-handling-class-using-C It has sections, then lines. For example would be structured like [Scores] Addition=5 Subtraction=3 Multiplication=7 Division=7 I tend to use ini files for configuration.
Is there any more documentation for this? I can give this a shot for sure. 
Good stuff, holler if you have any questions man.
&gt;Is there any more documentation for this? Look at the tool bar of links on the left side of the screen. Its a table of contents.... here is the top level to using the user settings section. http://msdn.microsoft.com/en-us/library/bb397750(v=vs.110).aspx
I just want swNum to be available globally with its new value EDIT: I edited my code above
oh! just do this: string swNum = ""; the compiler just wants to be sure that it will at least have SOME sort of value. You can even do string swNum = null; and the compiler will be happy :)
Wmi has this functionality...
SOLVED!!!!!!!!!!!!!! 
[LINQ to XML](http://msdn.microsoft.com/en-us/library/bb387061.aspx) [Basic Queries](http://msdn.microsoft.com/en-us/library/bb943906.aspx)
 try setting string swNum = ""; That should fix your unassigned local var problem, I think it's saying that because if the while loop never triggers, the variable is technically assigned but it doesn't have a value and yet you're trying to send that variable into Lines2.Insert even though it could be technically null. If it is = to "" however, it might be enough to trick it into shutting the hell up. If you're wanting a 'global' variable to use in other places of your class. Outside of the current method you're in, inside the class definition. Make a public (or private) type named swNum and remove the variable declaration inside the code you posted. That will allow you to use it in other places in the same class. class CurrentClass { // This is called a field btw public string swNum = ""; Then whenever you change the value of swNum in any place inside that class, it'll be changed there instead of inside some method where it only is inside the scope of that method, meaning, it can only be used inside that method (like what is happening now).
forgot to change this line in your code above :) return swNum = AppSwNum.ToString(); to swNum = AppSwNum.ToString(); break; glad you got it working :)
This is a library I've been working on for the past couple of weeks, while written in C# it's usable in any .NET language. Basically it allows you to embed arbitrary data into a PNG file while leaving the PNG file visually the same.
[Symbolic link](http://www.howtogeek.com/howto/16226/complete-guide-to-symbolic-links-symlinks-on-windows-or-linux/) to the rescue!
This would honestly be a better choice than my suggestion, seeing as MSVS has integration with XML.
+1 for LinqPad. Wonderful stuff.
Symbolic link will help a lot but it can still be an issue, as not everything goes into the visual studio folder and it is hard to symbolic link things like system32.
Sym linking specific files seems a positively horrifying idea, especially on the scale of something as big as visual studio. Note I did say the symbolic link would be of help, just that he may still have issues. So I agree that it is worth doing ... I'd be skittish of trying to symbolically link files into something like system32, especially in regards to security concerns (the sym link will be protected by that protection may not extend to the actual file outside of system32). I know with my last computer I had a spiffy but small SSD and even doing the symbolic linking for things like "my documents" could be a painful.
&gt;The code itself is just meant to be an addition script that when you reach a score of 10 it breaks and you've completed i That's not what happens with the code you've provided. Your code will ask 10 questions and quit. 
You may be able to force the installer to install your files to a specific directory (on a different drive) by forcing the install from the command line. The utility is called msiexec. See the MSDN of msiexec [here](http://msdn.microsoft.com/en-us/library/aa367988%28v=vs.85%29.aspx) and take a look a [this SO question.](http://stackoverflow.com/questions/8839978/install-msi-with-msiexec-in-a-specific-dir) I remember Visual Studio downloading a lot more stuff during the install, I don't know how doing the command line trick will affect that. And I don't know how we can give msiexec *two* install paths. Note that Visual studio may still assume that the files it installs are on C:, so the build config might be screwed up out of the box. But AFAIK all that should be configurable later by changing your project settings. Nevertheless, I recommend you stick to the default installation settings as fiddling around with this will be a huge waste of time at best and a complete failure at worst --during installation *and* when setting up projects. 
The reason it requires space on the System drive is because it needs to install system components. Shared runtimes like the .NET Framework (and Visual Studio includes several targeting packs, so essentially separate versions of the framework). There are also several packages that are shared between Visual Studio,SQL Server, Office, IIS, and the Windows SDK. Those go on the System Drive in a predetermined location. The bulk is probably the WIndows Installer and package caches, which are installed to a specific package folder. A lot of these could be argued as being something that should be configurable. I personally disagree. While configurability would be nice it would just add yet another thing to go wrong at the OS level- What if the registry key storing where Windows Installer packages are get's deleted or corrupted and the location lost? We already have enough problems with Windows Installer, we don't need another one. And the shared component installations could go to a different location that you set and be stored in the registry and then all those other components that share it would know where it is- but then it's rife for a lot of the same problems that happened with COM, which practically worked exactly that way. A lot of them also have to consider Security. Those components are shared and more or less should always be available, allowing it to be installed to another drive would allow it to go on a removable drive as well as drives that have different security settings, or which are per-user; for example it would allow installing to a network share, and especially with roaming profiles that isn't going to be consistent between users. 
Interesting explanation.
Some, but I've got the OS running from the SSD which was my primary concern. 
What annoys me is you have problems if you run as a regular user and only use a separate admin account to install things; like, plugins won't get installed or documentation.
&gt; The reason it requires space on the System drive is because it needs to install system components. This is the key point here. Your OS just got bigger. &gt; allowing it to be installed to another drive would allow it to go on a removable drive You can (iirc) specify that you can only select non-removable drives when prompting the user for a path. But this is a side issue. You're installing additional components to the OS, having them in some place other than the OS drive means they're on a different availability level than the OS. 
The new motherboards by Intel do soild state caching 
That's persistent between shutdowns? I'm not too familiar with the concept. But you would think it would be equally useful for the OS then.
It's just a raid 1 with the most accessed data. 
&gt; A lot of them also have to consider Security. Those components are shared and more or less should always be available, allowing it to be installed to another drive would allow it to go on a removable drive as well as drives that have different security settings, or which are per-user; for example it would allow installing to a network share, and especially with roaming profiles that isn't going to be consistent between users. So call it "advanced" instead of "custom" settings. Or wait, even better, only make it available via command line (in a simple, sensible and documented way) switch. As idiots would still complain that stuff stopped working after they did stuff they didn't understand. I personally think you should just ignore people being idiots (like installing shared components on a removable drive and wondering why stuff stops working without it) but I can see how a company might now want to take that stance. Just give users some option do do things in a sensible (for their environment) way, even if that way is not available via GUI. PS: Yeah, I know, it's expensive. :(
Sym links and visual studio. Considering that VS can't handle them (if you open a source controlled project via G:\Work instead of C:\User\Work it tells you it can't connect to your VCS…) Too bad symlinks are such a new technology.
Oh. Well OK but that's only useful once you've paged everything into memory at least once which is what the SSD is gonna help most with.
64GB aint enough son, 128GB or go to sleep.
Can't go to sleep. That requires 16GB of free space!
The dictonary ! I always forget about that thing. This is great, however i'm not entirely clear on what that extension does. What does deaultable mean in this context ? I guess there is some problem with the dictonary i am forgetting and this is the solution for that problem. Though i'd like to know what that problem is :D Edit: The code also produces two errors: 1. "Cannot create an instance of the variable type 'TValue' because it does not have the new() constraint" 2. "Cannot convert null to type parameter 'TValue' because it could be a non-nullable value type. Consider using 'default(TValue)' instead." Since i'm not even sure what the code is supposed to do, i'm not sure what the problem is :P 
Disable some Windows Features, many of them are unnecessary, not sure if it will free up a gig of space though.
I wonder if it is installing SQL Server express on the C drive. If so, manually installing that first on F may help.
No, Unity is also 2D. I created my latest game, Clowntraptions, a 2D physics puzzle game, in Unity. I've never tried Monogame, so have no opinion on it.
Brain dump from past experiences here.... You're gonna take a performance hit by being in a VM instead of running bare-metal. If you're doing this inside an OS (ie: VMware Workstation or Server), expect to take ~15% hit on cpu and memory performance. If you do it via ESX(i), it'll be reduced; probably around 10%. You will find that your biggest bottlenecks are disk and getting data to/from the source (db?) Those VMs should all be on separate SSDs with high IOPS ability (think Samsung EVO drives) Hyperthreading and logical cores won't help you for the most part; at least not in my experiences with TPL. You need cores, lots and lots of real cores. And lots of memory; swapping equals death. If it's multiple machines, use MPI (System.Messaging) or one of the messaging mutations. Pay attention to the other posts, there's some great info there. Source: Had to write a couple highly-parallelized apps for clients in the Finance field. 
While running in a limited privilege account has merit for the overwhelming majority of computer users, you really shouldn't be developing or configuring your system that way. I often run with a standard user account for Facebook and email. But when it comes to making the bacon its a huge mistake. Mostly I run server skus of windows. I frequently rdp back to the same box with one account while working using another.
Why is it "a huge mistake?" Other than the fact I was unable to install help docs and some other things like that I never had any problems (although that was eventually enough to switch). There's no reason to be root all the time; very few things your software does ever need it (and having it encourages bad practices that require your users to run the thing with privileges as well).
I think the huge mistake is installing dev tools on a system you apparently don't have permission to elevate processes via UAC. You have to be intentionally disallowed UAC for the things you're describing to be happening by your sysadmin.
I like this idea. It's like a prison pen-pal system for aspiring coders!
No you don't. The account you're using to elevate has to be the same one for it to work. So you can log off and log on as an admin and do it, but you can't do the normal thing where you are logged in as a normal user and then provide a domain administrator's credentials (anyone with local admin rights really) to the UAC prompt to elevate. Most software doesn't have this problem.
[**+Paushali Mandal**](https://plus.google.com/108671707052232349765) [_2014-07-12T05:15:23.533Z_](https://plus.google.com/108671707052232349765/posts/FK1mZh8QSfV) &gt; &gt;A one-stop solution for developing cross-platform applications for both iOS and Android using Xamarin! &gt; &gt;You can download a sample chapter here --&gt; [http://bit.ly/1kcQan9](http://bit.ly/1kcQan9) 
&gt; but you can't do the normal thing where you are logged in as a normal user and then provide a domain administrator's credentials (anyone with local admin rights really) to the UAC prompt to elevate. That's not the normal behavior. Your IT department are being dicks if they know you're a developer.
I'm part of the "IT department;" I have a domain administrator account and can change whatever I want (small company; occasionally have to do sysadmin crap). I'd prefer to use a regular domain user account and only escalate when I want to make system-wide changes. There's nothing "abnormal" about this; it's recommended practice. The problem is sloppily developed programs that can't cope; this is something of a blind spot for VS in my opinion. The whole "running software as an admin" thing in Windows is a relic of the past; canvas some Unix devs and ask them how many run their IDE as root at all times. e: Besides all this none of this explains why it is a "huge mistake" to run VS without elevated privileges. Why do you need them, exactly?
Result looks pretty good :) Gonna look at the code later.
The need for a static variable can be eliminated by changing the design a bit. They are in general best avoided.
An Option type like this, of course, just creates the new problem of remembering to check HasValue. A problem almost equivalent to the problem of nulls. 
IQueryable is almost 100% non-magical. The only magic is that a lambda can "cast" to both an expression tree and a delegate. That is: that's the only essential compiler feature. 
It sucks to write, and \n works almost everywhere. 
I think the main point is not having to reason or think about threads, since it's managed for you. 
Yes, but "just" is an incorrect word to use when you have nested code with loops and state and awaits in the middle. It's quite non-trivial to convert that to continuation-call code, and the result will be fugly. 
ty, didn't really want to use instances but i figured something different out
Now do the same for WPF :P New stuff shouldn't be using Winforms really.
Thanks :-) The code is okay I think. I only messed some part up because of special cases that I found out later. Had some problems with the form height too.
hehe guess I should try that. I'm actually still using winForm most of the time, just like it more. Even if WPF is a bit more flashy and flexible I guess.
Much wrose with MyDocuments, MyMovies, MyMusic etc. Microsoft like forbids using its own standart solutions for home library management.
Questions! * How much redundancy is in this? * What would happen if say the image was opened in an image editor and then re-saved? * What about converting to another non-PNG lossless format and back again? * And a lossy one like JPEG? * How much data can you store in say the 754×553 image sample you used?
The recent xamarin update broke their android build system.. it's expensive and lacks QA. Even though I have written an app in xamarin, I would seriously not recommend it for one/small dev teams.
A really big advice: ***** **NEVER EVER STORE CREDENTIALS IN YOUR SOURCE CONTROL!** ***** You store credentials in an application file that you publish together with your application - but you absolutely never ever store them in source control. I would suggest you to change the password of your email account as soon as possible.
Yeah, I wasn't 100% certain that this would compile... In this context, the DefDic class is a dictionary of dictionaries that, when you try to get a value for a key that doesn't exist, doesn't return null. Instead it creates a new dictionary, stores it and returns it. So when you set up a grid, it has 0 elements. Then when you add an element, say grid[3][5] = "element", it would first create a Dictionary&lt;int, string&gt;, insert it for the key 3 then insert "element" into this newly created dictionary at key 5. But alas, that didn't work properly. I'm not so experienced with C#'s template structure, so there was this chance. OK, let me try to fix it. public class Grid&lt;TValue&gt; : Dictionary&lt;int, Dictionary&lt;int, TValue&gt;&gt; { public Grid() : base() { } public new Dictionary&lt;int, TValue&gt; this[int key] { get { if(!this.ContainsKey(key)) { t = new Dictionary&lt;int, TValue&gt;(); base[key] = t; } return base[key]; } set { base[key] = value; } } } And then you create the grid this way: var grid = new Grid&lt;StoredClass&gt;(); where StoredClass is obviously the class you want to store at the coordinates. You can still access and set the elements like you would with a 2D array, except that negative coordinates are also valid. (Defaultable would mean that instead of returning null for keys, it returns a default value. Say, a dictionary of &lt;someKeyClass, string&gt; returns "n/a" instead of null). (Also, nomenclature: this is not an extension, this is a subclass. An extension would be like this: public static class DictionaryExtension { public static TValue GetOrDefault(this Dictionary&lt;TKey, TValue&gt; dic, TKey key) { if(!dic.ContainsKey(key)) return default(TValue); else return dic[key]; } } Which you could use like it was a method of the Dictionary class but it's just syntactic sugar.)
Doh! I forgot to remove them! I've done so now :)
Ah, yeah, I edited the code from above and forgot that I haven't defined t yet... ooops. As for why anyone would still use arrays - this solution has a much larger overhead. You said that memory is not a limiting factor so it's not a problem but arrays are still more efficient. Especially if they are densely populated. It should be pretty easy to overload the indexer to use [x,y] instead. Well, if the indexing operator supports two input values. Basically, in the Grid class add: public new TValue this[int x, int y] { get { return this[x][y]; } set { this[x][y] = value; } } Again, not 100% that this works but worth a try. You're welcome! When I first had to do something like this, I had to do it in C++, it was a bit less programmer-friendly. C# is much more pleasant.
Well, for videos specifically, try channel9 (free) or pluralsight (they cost, but there's a trial).
Hey there, * As of now there is no redundancy information. * As far as opening and resaving as long as the pixels that hold the information are not altered the water mark should persist. The pixels used are randomly distributed. * Converting to another lossless and back , though I've not tried it, should persist the mark. * Lossy might be a different story, again if the pixels holding the data change... * The math works out to be (width * height * 6) / 8. This gives the max number of bytes. Each watermark has about a 5 byte header. 1 for type and 4 for length. So about 312,721 bytes total for the dimensions of the image I used. Any questions or suggestions I'm happy to hear! Edit: added the actual # of bytes for the dimensions listed. Edit2: I've removed the restrictions on EncryptedWatermarks (that they couldn't be nested, and that they couldn't be used inside a CompositeWatermark). This is thanks to the refactoring done yesterday on the extraction API.
I'm [in the exact same boat](http://i.imgur.com/Ajbxbmg.png) * Empty %temp% often * Run Disk Cleanup often and choose to remove all but the latest restore point * I have a [script](http://forums.cnet.com/7723-19411_102-378338/delete-all-event-logs-at-once-in-windows-7/) that empties out all of the Windows event logs (run it as an administrator) * Redirect Documents, Downloads, Music, Pictures, Videos, etc to the D: drive * Symbolic Link AppData\Roaming\Apple Computer (iTunes and crap) to the D: drive * [Disable Hibernate](http://www.nextofwindows.com/how-to-disable-hibernation-in-windows-8-to-gain-disk-space/) since this is a desktop * Install everything I can on the D: drive instead of C: * Run WinDirStat regularly to hunt down things that could be deleted or moved On a "clean" system I'll have about 15GB free on my primary drive. After I install updates, Office, and Visual Studio this is what I've got. Someday I'll bite the bullet and get a bigger SSD, but not yet
&gt; // And to go for the extra sugar, you can group like this: &gt; Value1AndValue2 = 0x011, &gt; Value1AndValue3 = 0x101, That's not binary, that's hex, these values are not equal to their name. If you want to combine two, you should use the logical OR, i.e. `Value1And2 = Value1 | Value2`. Also, the `Flags` attribute's only point is to make a nicer `ToString()` representation, it's not actually needed. 
Oh cool, i'll try that tomorrow. And as i said, its not all that memory intensive, i think i'll gain far more by using this than i lose. Not only in convenience, but maybe even in performance. After all, i'm pretty sure an actually filled 50x50 dictonary is far better than a mostly empty 1000x1000 array. Yea good old C++. Everyone told me to learn C++ instead of C#. So i did some research. And after i found out about garbage collection i closed the case :P I'm not dealing with high-perfomance stuff here, so i see no reason to even consider C++ since C# is much more convenient and just as capable. Anyway, thanks again :) Its creepy how much one can learn about programing without seeing an end :D
Performance.
Well, OK. But VS startup can be slow too.
Yeah it just seems unreasonable to expect VS to install on a drive that small... Something has to give - either you use a larger HDD as your system drive, buy a bigger SSD, or just don't bother to install Visual Studio. 
In the mail sender, the properties that modify collections is kind of weird. I think consumers of a class should expect properties to honestly represent their type. The "Attachments" property in particular looks kinda strange. Personally, would have something like EmailSender.AddAttachment(Attachment newAttachment) instead of the property. This has some context to it, so I know that somewhere within this EmailSender class I am adding an item to a collection instead of just setting a property. EDIT: Same case with the "From" property on the main sender. You are using property setters like methods to modify the MailMessage.
Thanks! I'm checking Channel9 now, I remembered Microsoft has that one for free :). Pluralsight looks good too. Thank you! :)
I went through the same kind of process as you. I came from a native iOS background (Obj C) and switched to Xamarin. I used a mishmash of the following: * Head First C# (O'Reilly Media) - pretty much gives you the basics. Can be a bit slow with the numerous analogies and examples it tends to use, but you can skim bits of it to get to the main points. * C# in Depth by John Skeet - everyone I speak to pretty much seems to revere this as the C# bible, and they're not wrong. That said, you kinda need to know the basics of the language before picking it up, but then it'll teach you just about everything you need to know. * Microsoft's own docs and videos - they have a massive amount of material and some of it is pretty good. Usually it'll show up when you google a particular topic. * Xamarin's own docs - they often give a good indication of which parts of the .net class libraries you're likely to be using most often. * Stack Overflow - I mean who doesn't return to this constantly? * The Xamarin Official Blog - Often has pretty good little tutorials of new and interesting problems. There was a good post about async-await a year or so ago, which frankly if you're a half decent code gave you just about enough information in a few paragraphs to get up and running with it, and do 90% of what you need. I also signed up to Xamarin University and took the Certified Mobile Developer exam just to add another string to my bow (or rather line on my resume). I found it quite interesting and useful, although you could certainly self-learn the same stuff given enough time. It's also $2,000, so probably not something to consider unless you're being paid for by your company or are pretty serious about a professional career focusing on Xamarin. As an existing iOS dev, you'll have no issues with Apple's own frameworks, as they'll mostly be second nature. I don't really know the kinds of things you want to know, but if you have any questions I'd be happy to (try to) answer them.
Yeah, I learned how to do this in Comp Sci II.
But how else do you set the From property in the MailMessage then? If I set it to: set {_m.From = value;} The compiler complains that it can't convert to string to type Mail.MailAddress.
Pluralsight is a goldmine. Definitely worth the price for a professional.
Visual Studio doesnt even need to be on an SSD, just put it on a regular HHD and your project files on the SSD.
I'll second pluralsight as well. If you can spare the money, go for the subscription. Pretty much any time I need to ramp up on something new it is there.
My point is to make it a method and not a property setter, because you aren't really setting a property on the EmailSender. So instead you could have EmailSender.AddFromAddress("some@email.com"); And you can convert it to a MailAddress inside there
&gt; Microsoft Virtual Academy Thank you! That site is stacked with free goodies! :D
History rewrite.
If there is, I haven't read it. To be honest, despite the reading list, probably 80% of what I learned of C#/.net came through just implementing and learning as I went along. I picked a project, implemented as much as I could (very little at the beginning) and then as soon as I hit a "how the heck do I do that?" stumbling block, started googling and consulting docs until I found a good solution. Repeat ad infinitum. Then at the end of the project I went back and refactored some of my earlier code based on what I'd learned along the way. Then move on to the next one. After 2 or 3 projects I felt I had a good enough grasp of the basics to be able to take on most stuff that got thrown at me. Not that this is anything original. I'm sure many (even the majority of) developers probably take the "learn as you go" approach to developing, rather than trying to understand an entire language/framework from books before getting started.
Not if someone has already pulled. 
It was silly of me to include it. So where should that data go? In the Resources file in VS?
&gt; Also, the Flags attribute's only point is to make a nicer ToString() representation, it's not actually needed. *My life has been a lie!* Thanks for clarifying that one. &gt; That's not binary, that's hex, these values are not equal to their name. If you want to combine two, you should use the logical OR, i.e. Value1And2 = Value1 | Value2. Good catch. That's definitely the way to do it. In related news, I may need to add a 0b... compliment to 0x to Roslyn like in GCC.
For me, the biggest question would be, what kind of APIs does Windows have to allow you to get a list of the playback devices and adjust the volume for them, if any? I'd probably then mock up something UI-less (like a console app or something) to get a list of the devices and print them out, or change one to a hard-coded volume or something. Once I felt comfortable with doing that interaction with Windows, I'd move on to the UI. Does that help, or did I totally miss the point of your question?
The main point is to avoid callback hell. As I mentioned, it doesn't even necessarily need multiple threads. The feature is one of the highest requested features for Typescript, which targets the browser, where multi-threading doesn't even exist. async and await are useful not in cases where you want multiple threads (ie CPU intensive work), but in cases where you simply don't want to wait for something else (file system, DB, networking).
MONO will be essentially pointless in a year save for maintenance of existing codebases 
That's not what Microsoft is saying.
What they're saying doesn't really matter, Winforms is terrible for high-DPI displays and they're becoming much more commonplace. And from a design perspective its much easier to build your application 'properly' with an MVVM design.
How come you're swapping, anyway? Seems like Swift can do a lot of what C# can do so far. Do you just wanna write apps for more than iOS? :)
@lju977 There's a fix for that. Google the error message and open the link on the forums. I can't remember exactly but you just have to transfer files. @NorthboundFox Best bet is still learning Android/Java. It's free and you got multiple resources. Xamarin is expensive unless your office buys you a license then go for it. You still have to be familiar with Android anyway if you use Xamarin so I would suggest testing the Xamarin trial and unless you have a license, start learning Java and Android and publish your apps. Good luck! :)
Not really swapping. Just looking to port my iOS apps to Xamarin.iOS and then Xamarin.Android then Windows Phone. I'm not really dropping Objective C as of now but if I get better at C# and Xamarin, I'll use it so that I don't have to switch languages all the time which takes time and lots of research. I also realized that since I'm gonna learn Unity anyway to make mobile games, might as well take a shot at learning C#.
"new DateTime()" doesn't give you the current time, DateTime.Now does. Also, check out the custom DateTime format strings: http://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx
When I got my new display (1440p) Windows set my DPI to something non-standard, so all my company's applications (C#, WinForms, intended to replace an ancient BASIC system from the 80's) Looked terrible. Looking into it though I was able to get all our programs to look respectable by simply making them DPI Aware with SetProcessDPIAware(). It worked surprisingly well. We don't use WPF for a few reasons. The main reason being that I don't think any of us except myself have actually used it, the second is that the C# program has been in development since around 2003. That's a long lifecycle but it was on a backburner until recently- most developer effort went into supporting and applying feature and change requests to the old system. I can do simpler things in WPF (though I haven't for a while and would have to look everything up again). The main issues I have with it is that the Designer is RIDICULOUSLY slow. Slow enough that it completely destroys my productivity when I use it. Another is that a lot of components have no WPF equivalent. It's usually easier to make your own component thankfully but I personally don't see why I should have to recreate components that have been a staple since VB6. Another issue is that in adopting WPF you abandon multiplatform support while also making it difficult to impossible to use P/Invoke reliably. By P/Invoke I mean you cannot, for obvious reasons, send ListView Notifications to a WPF ListView component. Basically the ListView API and surrounding information that I've become familiar with and learned the ins and outs of for over 10 years is now obsolete, with no obvious replacement. That said, there are reasons for the changes and the main one is the ubiquity of arbitrary content. Expanders can have absolutely anything in the Header and the Expanded Portion; Items in a List can literally contain even more components that handle those items. It is immensely powerful for creating very fluid interfaces with very little work. Putting a button, checkbox, or other controls into a ListView Item is dead-simple, doing the same with the standard Windows Forms control would certainly be a nightmare.
 DateTime.Now.ToString("HH:mm") [DateTime.Now](http://msdn.microsoft.com/en-us/library/system.datetime.now.aspx) - gives you the current time ("Now") [.ToString](http://msdn.microsoft.com/en-us/library/8kb3ddd4.aspx#H_Specifier) let's you format the Date (in this case HH=24 Hour format, mm= minutes) 
I wouldn't ever advocate modifying an existing WinForms application to be WPF, only for new applications. It has to be said though that SetProcessDPIAware() only gets you so far. Any owner draw components or anything involving images will also need rewriting to be DPI aware. I'll certainly give you the designer issues though, inside VS they can be somewhat on the clunky side - although its not so bad of you do any visual work in Expression Blend instead. I went down the route of using sufficiently fast machines (SSDs *really* help the WPF designer) to make it a non-issue. Cross platform isn't really an issue, if you adopt a MVVM model then all of your backend and logic is platform independent and you can simply add platform-specific frontends as required with minimal overhead (I've gone down this route for Windows/MacOS apps). I'd hardly say WinForms is really cross-platform, it looks terrible on anything other than Windows. WPF is a bit of a different animal. As you said, some very complex controls can be built very trivially with WPF that would be far more effort to implement in WinForms, but then some straightforward things can be very tricky to get right.
Sweet! Thanks for the list!
Yeah I got lucky with SetDPIProcessAware() for most of the program in question. We have our own Controls but they still worked without any revisions, not sure if they were DPI aware or if it just happens to work, and since it's more business-management images aren't very common as static elements (they appear in other elements such as ListView icons but that seems to scale well). &gt;I'd hardly say WinForms is really cross-platform, it looks terrible on anything other than Windows. It looks fine on Linux running via Mono to me. Though if you want it cross-platform you can't use P/Invoke which pretty much removes a lot of advanced capabilities from controls such as the ListView anyway. &gt;I went down the route of using sufficiently fast machines (SSDs really help the WPF designer) to make it a non-issue. I have an SSD, i7 4770K@3.5Ghz, 16GB RAM and the WPF designer still performs poorly for me in both 2013 and VS 14 CTP2.
&gt; tens of thousands of entities Good luck. For path search the "best" is generally A\* :)
I was confused for a moment. Everyone I work with abandoned the designer for WPF so long ago that I almost forgot it existed. Some use Blend, but most just hand-roll everything.
You could always combine the two. Have the fsw turn the poller on for the next x minutes. Then the poller can sleep / die off AMD it wakes / is created by the fsw.
Good point. But i no longer work for the company that needed that :P It's their problem now xD
This is is also a [pretty good book](http://www.manning.com/seemann/) on the subject.
Also, if OP wants to keep a reference to the DateTime object, they could do: DateTime moment = DateTime.Now; String currentTime = String.Format("Current_TIME={0:HH:mm}", moment); 
What engine are you planning to do this in? If its Unity3D You're going to hit the physx limit at a bout 1/4 of that among other things. 
Actually this isn't a custom made game. I'm working on a private server for a game called Conquer Online.
Nah it's not like devs work in a vacuum. Of course they've talked about that and there's high chance Xamarin is working with Microsoft. Unless Microsoft has other plans, like releasing Visual Studio with the ability to make Android and iOS apps using C#, I think they've collaborated to accomodate those changes.
Err bullshit. They're not replacing mono, they're **SUPPORTING** mono. It's going to be more relevant than ever. &gt;Microsoft is fully integrating Mono and Linux into their build environment and test matrix, and is actively working with the community to make Mono a first-class platform for hosting ASP.NET. - Source: http://www.eweek.com/developer/microsofts-next-asp.net-release-runs-on-os-x-and-linux.html#sthash.To02TNAd.dpuf And so far they've only commented on ASP.NET. Mobile dev is a massively different undertaking requiring a very different approach, which Microsoft has announced no plans for. 
You're probably going to need to dig into WinAPI which is pretty low level stuff especially coming from a C# background. If you want to do it for Windows 8, then it may be a bit easier since you can plug right into WinRT.
Just use the list. When you want to do something with an array index, just call .ToArray() on the collection and work on it as an array. And if you need to pluck something out of the collection by index number, you have a number of extensions to work with such as .ElementAt(int) and RemoveAt(int);
they are they have already talked about this and has been openly mentioned in several of the vNext presentations scott hanselman talked about it at build as well as david fowler and has also been mentioned in a couple of the Channel 9 vNext talks 
i dont think thats true at all, considering that they are basing most of the cross platfrom tech on apache cordova, it may be easier and more efficient for JetBrains to implement their toolset they adding som much to VS and making it stupid easy to implement code quality plugins that a lot of companies may go against spending 1000's on these tools and write the rules them selves.... 
The audio subsystem has seen alot of change in recent Windows, so I'd definently research the latest API, and go for that. It's supposed to be quite capable, though I don't know what kinda of API it exposes, the UI is confusing enough, so I'm sure the API is gigantic.
Warning: Falling into the trap of using stored procedures for everything is an anti-pattern that I frequently have to untangle, and while I commend you for learning, do *not* use stored procedures when you can avoid it.
Seconded. Once had a code base that used stored procedures for every single operation. It was hell.
OK. Can you recommend a tutorial web site or book that covers what you think is better than stored procedures? I've been trying to use LINQ to Entities but it seems limited with what it can do with relational tables, particularly many to many relationships.
What do you mean by limited in many to many relationships?
I've been trying tutorials like on this page, for add records to many-to-many relationships: http://www.entityframeworktutorial.net/EntityFramework4.3/add-many-to-many-entity-using-dbcontext.aspx But I wind up with problems with non-unique rows or the join table having fewer rows than it should have. If you can recommend a tutorial that can help with that I'd like to see it. I've got the latest entityframework. Thanks.
Would you mind explaining a bit more about why it was hell? Our application at the office is a new MVC5 app with its backend running pretty much through SProc's, and I haven't found the workflow to be that bad at all. However, that's where my interaction with the db ends. I assume you're referring to issues when a query breaks or needs modifications?
My issues with stored procedures: - Parameters. You have to send in every argument as a parameter. So, if you want to add an extra one you have to change your C# code *and* change your stored procedure code. - Management. We had five database servers, so every time we changed a stored procedure we had to run an ALTER statement on five different servers as part of the deploy. A horrible mess. What do you consider to be the positive side of running everything through stored procedures? If I want to run a SELECT on a table why would I use an SP for it?
You're looking for an orm. You want to model data objects to your relational tables. EntityFramework is MS orm currently. 
We use sprocs for all but the simplest of queries at work. Deploys are scripted, so altering (actually dropping and recreating) sprocs doesn't create an overhead. It also provides better visibility for our DBAs. They are more easily able to provide code reviews, it makes it slightly easier to perform profiling (and track down the user who wrote a bad query), and it gives them the ability to perform an emergency fix off-hours without having to get the developers involved (or at least having to get them to do a code fix and deploy).
The execution plan for stored procs will also get cached which will give them an advantage over straight sql. 
I can't suggest anything for your sql stuff but recently I started approaching learning different languages slightly different than I've done in the past. I used to create a new form/script/class every time I was learning about a new concept and I realized that if I did it all on one project/page using multiple classes and whatnot in the same project, I'd have all the resources in front of me to look back at previous work I've done. This is something I've never really done before or heard from anyone to try but it might be worth doing in your approach. I know it's sorta unlrelated lol, but something to think about doing. I'm loving it personally. Keeps me motivated to see all the previous work I've done too in some strange way.
On the face of it, one is a mutable array, and the other is an immutable text string.
Think of a char array as a bunch of scrabble tiles. Easier to move around, etc.
A char[] is an array of characters. You can change the individual characters of the array without allocating new memory space as you would with a string. A char[] can easily be allocated on the stack instead of the heap. Allocating a String on the stack is impractical. Edit: This is more C, not C#: A char[] does not have a length, and a String does (it's an object with a length field). So if you pass a char[] to a function/method, it will have to know the size by doing the process itself, or by passing a length too. A char is a primitive data type whereas a String is an object or class.
char arrays do not have any of the String methods such as Substring, IndexOf, Split, et cetera.
&gt; A char[] does not have a length, and a String does (it's an object with a length field). So if you pass a char[] to a function/method, it will have to know the size by doing the process itself, or by passing a length too. This is true of C (and possibly C++ - I am not sure) arrays, but in C# an array of any type [does expose a Length member](http://msdn.microsoft.com/en-us/library/system.array.length%28v=vs.110%29.aspx), which is O(1).
Get a ELI12 understanding of string internment, and that will get you a good base theoretical understanding. Otherwise:ITT: all good examples EDIT: [good O'Reilly article](http://broadcast.oreilly.com/2010/08/understanding-c-stringintern-m.html)
Whoops. That's right.
Array certainly has a .Length property. Char is a value type. char[] is an System.Array, inheriting System.Object, and therefore a reference type. It's no easier or harder to allocate on the stack than a string. (Check out http://blogs.msdn.com/b/ericlippert/archive/2009/04/27/the-stack-is-an-implementation-detail.aspx)
Use stored procedures only if you need to. Avoid using it for things which can simply be done in the application layer. Feel free to use it if you think you can optimize a weak link in your logic through push down to the db. Sometimes your network or RAM (or whatever) is a limiting factor which makes it better to let the db server do the computation for you.
You can think of String as a wrapper around char[]. A wrapper class/interface may add or remove functionality of the underlying "object", and can also be used to keep an interface constant while being able to change the underlying mechanism.
parametrized queries are also cached. There really is no difference now between the two in this regard
Why? 1) security 2) optimisation if you need to add a new field you STILL need to change your code base even of you do inline selects. 
That depends a lot on the details. What is being sent, if there could be more than 2 devices, what the devices are and so on. A very easy way to set up a database for something like this i Windows Azure Mobile Services. I recently set up an app using it, Xamarin Android, and i write stuff to the same database using a WinForms program i wrote. Works like a charm! 
What optimization? SQL server has been able to auto optimize parameterized queries, such as those created via ado.net for ages. This optimization may have had merits a decade ago, but is wasted effort these days. It's cargo cult programming. Don't believe me? Test it. Benchmark it. It's completely wasted effort.
I wasn't necessarily rooting for using SProcs, more so just wondering where the pain points were for you. I'm personally okay with our workflow because the less I have to dive deep into the database, the better. That's probably a cop-out answer though, and your points are very fair. Even I have run into a situation where we have had to change both stored procedure and backend code due to a bugfix.
Stored procedures are meant to be more complex than that. You're doing SQL and sprocs a disservice by reducing it to simply that. But - to simply answer your question -- database systems can build execution plans on sprocs -- so it's smart enough to make it that your simple select will be more performant, because it's able to cache an execution plan. Really, though -- if you have database work, do it in the database. Don't pull something from the database, change it in .NET and put it back to the database. Have the DB do the changes for you.
What is "textselectrangea" vs. "richtextboxfile"? Why is the GIF showing a messagebox with a 0 while the code given does not? (I assume this is for debugging purposes but it makes the gif useless as it's not executing the exact code given) Looks like in the 2nd nested conditional you're checking textselectrangea.GetPropertyValue(TextElement.FontWeightProperty).ToString() == "Normal" OR textselectrangea.GetPropertyValue(TextElement.FontWeightProperty).ToString() == "{DependencyProperty.UnsetValue}" while in the elseif 2nd nested conditional you're only checking richtextboxfile.Selection.GetPropertyValue(TextElement.FontWeightProperty).Equals(FontWeights.Normal) Why?
I am very new to c# so some of these are just noob moves. 1. the 0 shows the number of characters selected 2. that is an error that occurs when 2 different types of text decoration is being selected in one but this only happens in the first if statement 
textselectrangea is the text selected and richtextboxfile is the actual richtextbox 
and just a note the if statement is completed correctly in order the first time but the code that is meant to be triggered is not.
it literally just gets set on a mouse up on the richtextbox like this textselectrangea = new TextRange(richtextboxfile.Selection.Start, richtextboxfile.Selection.End); but this isnt important for the not longer than one selection where it just uses richtextboxfile.Selection.ApplyPropertyValue(TextElement.FontWeightProperty, FontWeights.Bold); 
C# in Depth by Jon Skeet http://www.amazon.com/dp/161729134X/ref=cm_sw_r_udp_awd_RW1Wtb0QDS63T
Amen to that. We just joked that the only stored procedure you need is the one that is passed a string with an @Exec statement. They've caused a major headache on our most recent project to say the least
They can build execution plans on normal queries, too. And sure, for complex stuff you'd use an SP but 90% of all DB operations are CRUD. No need for SPs there.
You should make the entire solution and project available somewhere so we can try it. Remote debugging based on a small extract of the code actually running and the output of a program that looks to be running different code generally doesn't get anywhere. This is likely why nobody has really put much effort into their responses on stack overflow except to ask more information.
You need to run Visual Studio with elevated permissions if you plan on attaching a debugger to IIS. You normally don't have to though since there is a debug server built into VS. It operates somewhat differently however.
Why do you even need to do this? Just build the project inside VS Studio and add some installer code and shortcutcreating code, then your end users will always have the right shortcut. After that you can expand on the project by publishing it to an ftp and include an auto-update feature.
I like Stupid easy, so i will look into WCF, thanks for your help.
I also use them for frequently changing logic functions, far easier to change that on an SP than to deploy a new MVC5 build.
(I'm not really sure how roslyn works but) you could compile the compiler code in a regular C# compiler and get a regular program (.exe) that's just machine code and compiles C# code. obviously compiling compiler code with itself will cause a recursion error
&gt; how can a language like C# have a compiler written in it's own language? [It's actually fairly common](http://en.wikipedia.org/wiki/Self-hosting). &gt; Also isn't that sub-optimal? Not really. You can write a compiler in any language you want. Some even claim that a compiler isn't complete until it is self-hosting. &gt; Isn't bootstrapping a requirement? Yes. Which is why the C# compiler originally was written in C++.
But it does all these things too for parameterized queries. That's the point: there is no point to sps for use cases where you don't interpret and react to data inside the sp and branch based in it. There is zilch difference apart from the network payload of the query itself, which is usually dwarfed by the Ethernet frame-size anyway. If you're too busy, it's because you are creating extra work. And now you don't have time to validate that this extra work actually provides any gains. Congratulations. You are now a perfect cargo cult programmer. Be proud.
That was my first thought (though I love C# dearly). You would be on a steep learning curve just because you MIGHT want to make Android apps in the future. I would recommend learning Swift first in the comfort of the iOS API, which you already know through ObjectiveC &lt;spits&gt;, then transfer your skills to C#, which would be much easier once you know Swift. Even if you never transferred, you would know a language that's guaranteed to be bankable for years.
Actually it will be much faster as I understand it. They're changing from keeping files saved/io operations done directly from the drive; to doing it all in memory. It will run faster, compile faster, etc. (I think VS will be completely in memory when it's running). At least that's how I understood it.
It's an implementation of the [Maybe monad](http://en.wikipedia.org/wiki/Monad_%28functional_programming%29#The_Maybe_monad) which will be a compiler feature in C# 5. The advantage is that nulls propagate instead of throwing a null reference exception. It should return a `Perhaps&lt;T&gt;` with HasValue set to false if you try to access a field on a null reference.
The actual compilation will be indeed slower, but as you said: it's now all done in memory. Also, due to the new infrastructure, multiple processors can be utilized much better to get faster results. Compilation itself is slightly slower, overall process is faster.
No they don't -- not unless you're extremely careful about how you build the ad-hoc query, and I never see a person who doesn't take advantage of leaving the database layer in the database layer - but then also take the time to use *executesql* in their adhoc. http://www.sqlshack.com/sql-server-query-execution-plans-basics/ http://www.scarydba.com/2009/10/05/ad-hoc-queries-dont-reuse-execution-plans-myth-or-fact/ This all goes without even talking about layer abstraction. Keep the data work in the database. I am not sure what you're working on -- but in the world I live in (enterprise, global development) -- 90% of my database operations are *not* CRUD. That's more of an SPA style situation, smaller apps or sites without a lot of complex business logic. I welcome the days I get to do simple CRUD operations for a task. :-)
You're also not on the right mark. It's not parameterized queries that is doing it for you. Paramaterized queries wrapped in *executesql* command is what allows SQL to cache the execution -- because you're coming at it the same way as prior. To be clear - it's not the parameterization. It's that your statement gets called using *executesql* on your ad-hoc query. http://www.scarydba.com/2009/10/05/ad-hoc-queries-dont-reuse-execution-plans-myth-or-fact/ Congratulations, you're a condescending ass - without merit. Be proud.
You can't. Structs are initialized with default values for their fields. Make `Defintiely&lt;T&gt;` a class if you don't want that.
In this case "default values" means essentially zero'd out; I have a suspicion that even with default parameterless constructor injected into the IL, the runtime would (should?) ignore it anyway as it (in theory) shouldn't have _anything_ in it to _execute_. A default `struct` initialization consists basically of allocating the memory and nothing more. Making it a reference-type class unfortunately brings back the same `null` problem in that now your `private Definitely&lt;object&gt; myField` field itself can be null throwing null reference exceptions when attempting to access it.
So it's a compromise?
On the contrary, it's a win-win. The old C++ compiler was architected as your traditional single-pass, single-threaded compilation program. As such, it didn't really take advantage of the last decade explosion of multi-threaded platforms. Like most multi-threaded algorithms, in theory, the new compiler takes more of a hit in management overhead, but makes up for it by taking advantage of immutable state shared by multiple processing threads. It also takes advantage of the immutable states by allowing for on-the-fly compilation (while you're coding for IDE usability/productivity enhancements) and reusing those compiled bits later. In practice this _first_ public release has compilation times comparable to the old compiler. While your mileage may vary, it generally won't be significantly faster or slower. Meanwhile, it's expected going forward that as computers gain more CPU processing threads, and and the architecture allows for easier updates for optimizations (if warranted), I would bet that, in time, the new compiler will overtake the old C++ compiler in almost all cases. And like I said, compilation time is really only a small part of the whole application development lifecycle. The new compiler allows for better integration with IDEs (and not just Visual Studio: Xamarin has already demonstrated its integration with Xamarin Studio), faster turnaround on compiler fixes, faster iteration on C# language features, user-submitted language features, easier development of custom user language refactorings, style-enforcement, etc.
This link shows a basic template for executing an SP in C#: http://msdn.microsoft.com/en-us/library/tyy0sz6b(v=vs.110).aspx It's quite a complicated topic - not because the technology is complex in itself, but because there are so many different ways to achieve the same thing, each with its own pros and cons. For a beginner I would stick with normal SPs, ADO.NET (connections, commands, parameters, data readers). I would stay away from ORM including the ADO.NET DataSet and DataTable stuff. The reason being these add an extra layer of abstraction to the data access layer and it's better to start with the fundamentals.
Isn't that what they did with real generics, as real generics can be 'ValueTypes' they allow you to say that this data is always of this type. The problem is that structs have to [have empty constructor support](http://msdn.microsoft.com/en-us/library/aa288208(v=vs.71).aspx), classes do not. (Classes also can have constructors ignored via some voodoo put in for serialization libs). In the context of OPs request. You can always have a default value for a flag, this means you could do something like: public struct Definitely&lt;T&gt; { private bool hasValue = false; /// &lt;summary&gt; /// The contained Value. Guaranteed to be not null. /// &lt;/summary&gt; public readonly T Value { get { if (!hasValue) throw new Exception("nope."); return _value; } set { _value = value;} } /// &lt;summary&gt; /// Creates a new instance of the &lt;see cref="BetterThanNull.Definitely&amp;lt;T&amp;gt;"/&gt; struct with the given value. /// &lt;/summary&gt; /// &lt;param name="value"&gt;The not null value.&lt;/param&gt; public Definitely(T value) { if (value == null) throw new ArgumentNullException("value", "Value can't be null."); Value = value; _hasValue = true; } public static implicit operator Definitely&lt;T&gt;(T value) { return new Definitely&lt;T&gt;(value); } public static implicit operator T(Definitely&lt;T&gt; definitely) { return definitely.Value; } } } Excuse the formatting, I hate working in markdown. But anyway you could do it like this, but I'm not sure you'd want too. I think a better way of solving this is by linting, as this does not have the advantage of a monadic solution. ReSharper has a [NotNull] attribute that lets you achieve this kind of Linting rather easily.
Assembly?
I'll second this. There's no good reason to use any kind of "flat file" these days. It's so easy to create structured data with Xml or Json. 
Try: string myString = string.Format("{0:N}", 1234.56); Output: 1,234.56
Egyptian Hieroglyphs.
[It's still a culture thing! I made this to demonstrate:](https://dotnetfiddle.net/zdsrXP) A handy list of all the different cultures effects on 1234567.89 Culture is Afrikaans, the number looks like 1 234 567,89 Culture is Afrikaans (South Africa), the number looks like 1 234 567,89 Culture is Albanian, the number looks like 1.234.567,89 Culture is Albanian (Albania), the number looks like 1.234.567,89 Culture is Alsatian, the number looks like 1 234 567,89 Culture is Alsatian (France), the number looks like 1 234 567,89 Culture is Amharic, the number looks like 1,234,567.89 Culture is Amharic (Ethiopia), the number looks like 1,234,567.89 ..... Well you get the idea, people use different digit groupings. Sadly some countries use Month Day Year, which just makes no sense at all!
Look at "the Numeric N format specifier" on this page: http://msdn.microsoft.com/en-us/library/dwhawy9k(v=vs.110).aspx it's about 5/8 the way down the page. There's a lot of useful stuff on that page, but that Numeric N formatter is probably what you're looking for. jxlarrea mentioned that as the solution too. But you can read about it more on that msdn page if you want.
Yeah, let's just ignore whatever the *user* of the machine has set as preference, right? :p. Output meant to be consumed by the user should of course always use the current culture.
Great answer! Also, thanks for thinking the code analysis API's are worth noting - as an intern, I worked on these, and it's cool to see people actually interested/excited in them.
While I love C# and program in it for a living, I do envoy several features in Swift. Try that one as well ;)
Well, this would kind of defeat the purpose :/ Also you can't have field initializers in structs, but bools are defaulted to false anyways :) What's the linting about?
Well, according to the spec it calls the parameterless constructor of the struct, it's just that normally they only ever have an implicit one. At least that's how I understood it..
Yup, it does that when using the Select method, but it's not possible to do it when the Value is used.
I've had increasingly slow customer service over the past year.... is this site completely abandoned now or has someone had some interaction with the team?
Yup! When you have a specific output format that you are trying to match, say a CSV API or similar, it's VERY important to do so. Myself I always try and specify the locale if I can, as mostly with the code I write I'm wanting to be specific, rather than regionalism. Imagine if we woke up in a world which everyone used the same format! How great that would be. If it was MM-DD-YY however I would feel really conflicted. Sort of if everyone decided to speak only Welsh.
This book: [Head First C#](https://www.google.com/search?safe=off&amp;espv=2&amp;q=head+first+c%23+filetype%3Apdf&amp;oq=head+first+c%23+filetype%3Apdf&amp;gs_l=serp.3...0.0.0.75980.0.0.0.0.0.0.0.0..0.0.chm_loc%2Chmss2%3Dfalse%2Chms2min%3D10%2Chms2max%3D10%2Chmtb%3D120%2Chmta%3D1440%2Chmrde%3D0-0%2Chmde%3D1-0%2Chmmpp1%3D1-0%2Chmmpp2%3D1-0%2Chmffs%3D10000...0...1..48.serp..0.0.0.xxcqlWPzDNA) I've found to be awesome getting started into creating things that are USEFUL. Note: Link is to PDF filetype google search. One link is from nextweb.googlecode.com--that's the one. Related, where I found that book: awesome blog post by Nico Schuele, ["Teach Yourself to Code with C# and .NET"](http://www.nicoschuele.com/posts/teach-yourself-to-code-with-c-and-net) . Good Luck! 
Linting? It came from a tool for C called Lint, which I think came from the idea of a Lint Trap in a washing machine / tumble dryer. It's the filter that catches all the fluffy bits of crap your clothes shed, so it can't get anywhere dangerous. Linting is a case of finding things that are legal in the language, but bad from a design/patterns/usage/buggy point of view. A classic example is the == in Javascript, it almost always gives the wrong answer for most use cases, so people might have a lint rule to ask people to justify why they are not using ===. FXCop in .Net allows you to enforce style rules, as well as conventions. Resharper with the NotNull attribute provide a mechanism for this, as it will provide a warning if ever you try to pass null (or a possibility of null) to a method argument that has the attribute.
Good advice, thanks!
Oh man I thought this was about having a strongly typed API across HTTP (by generating typescript files to represent the server). I've been working on an implementation of just that because I couldn't find anything, I was gonna be half mad when they beat me to it. Anything that adds in more static typing and less magic across this bridge is awesome though, so happy to see this.
WebAPI or SignalR makes this even easier without the bloat that comes with WCF.
Its a sample size of 1, but 9/10 of all the code I've found on codeplex has been shit. I avoid it like the plague.
Yes.
Roslyn is still on Codeplex. https://roslyn.codeplex.com/ I wouldn't say it is dead, but it certainly is not number 1.
I have a small draft on paper, but I wasn't able to think of everything that I needed to before I started coding. My question was mostly how to come up with more of these little things before I started coding.
Put more thought and effort into planning. Map out the big picture, then refine the plan until it's more detailed. It won't be perfect every time, but you'll get better at it. 
How do you know when it is detailed enough to start coding?
You've posted on Codeplex very recently. Do you normally get replies from Admin quickly?
When you run out of things to plan.
The web essentials addon for VS will generate TypeScript interfaces from classes automagically. 
I wouldn't even consider using SF anymore, seeing that they bundle malware with their downloads, or something.
You make some pretty broad assumptions. Not every dev is bad at SQL. Not every shop has need of a DBA. Not every system needs hyper efficiency. Don't let perfect be the enemy of the good.
I've been burned by MS dev support once with XNA.. not falling for it again with codeplex.
Jon Skeet did a [good writeup](https://msmvps.com/blogs/jon_skeet/archive/2008/12/10/value-types-and-parameterless-constructors.aspx) on this. Bottom line: turns out you can inject it, but it only gets called sometimes based on the _way_ the value-type is declared/instantiated. Doesn't work for fields (as you were hoping with your library); mostly when you call the constructor directly (that is, `new Definitely&lt;T&gt;()`).
Can you simplify the problem any with specialized linear algebra or numerical analysis libraries like ALGLIB? 48x48 isn't exactly a large matrix, as far as modern computational linear algebra goes. You should be able to manipulate around a million of those matricies simultaneously with just a couple gigs of memory and a 32 bit OS.
You're done when you can write the code for any piece you don't have a more detailed plan for in under 5 minutes. If you're looking for more guidance on how to do this stuff, read Code Complete http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670/ - it's written with C in mind, but translates perfectly well to most software projects. Especially chapter 9 - Pseudocode Programming Process.
I still see plenty of new projects on Codeplex everyday, as well as regular new releases of useful projects. So I think the whole "it's dead" thing is premature.
It varying between the custom one and some Default one is Kind of weird... And it means my Project won't work for That :/
I might be able to simplify the problem at some point. The issue is that the overall algorithm isn't that complicated (some division and then simply taking some averages) so there aren't many 'complex' areas I could optimize or simplify. I'm in a holding pattern right now as I have some questions on what was done on the previous model
It gives me the same output, even with the CultureInfo.InvariantCulture paramater. 
&gt; The C# example of 'asynchronous calls' doesn't use async/await, poor comparison Because then it wouldn't look so good in comparison anymore: class AsyncDemo { static async Task&lt;int&gt; Adder (int a, int b) { return a + b; // Poor demo, because there's nothing async here } static async Task Start () { int sum = await Adder(4, 5); System.Console.WriteLine ("Addition completed"); System.Console.WriteLine ("Result was: {0}", sum); } static void Main () { Start (); /* wait */ System.Console.ReadLine (); } } --- class AsyncDemo { static async int adder (int a, int b) { return a + b; } static async void start () { int sum = yield adder (4, 5); stdout.printf ("Addition completed\n"); stdout.printf ("Result was: %d\n", sum); } static void main () { start (); /* wait */ stdin.read_line (); } } I removed the delegate, because it was not present in the vala code. I also removed the `using`-directive as well as the `MainLoop`, and I made the bracket-style the same. Now you have it absolutely equal, and neither version is shorter. --- **I love it when people want to show comparisons, but then don't use the same case on both sides.** It nullifies the point and disqualifies the comparison.
There aren't many good ways to do so on your own. You ideally want to grab at least a couple of the potential end users and: 1. Brainstorm features. 2. Filter the brainstormed features down to a what's often called a "minimum viable product" - the smallest possible feature set that will result in a useful piece of software. Once you code that software and use it in real life, you'll learn a lot more about what should go into the next version.
Can you post your code as a dotnetfiddle ?
Ok i will have a look at those then. Do the both work without needing to setup a webserver, since i would like to avoid that? 
Sometimes just starting a project is the most daunting part. Like what is said elsewhere, brainstorm and set the parameters of this application ahead of time. It'll be tempting to dream up a lot of gee-whiz features and what not, but avoid that - instead, keep it simple, and don't let it 'grow' too much. Especially at your skill level, the last thing you want is an app with too many arms and legs, so to speak.
Yes, when something is broken, which has happened about 10 times over the past two years, they've been pretty quick to fix it until recently. That's just my feeling though... haven't gone back and looked at the tickets.
If you look closely, that document must have been written years ago. One of the code comments says `Argument default values, available in Vala, planned for C# 4.0`
I was referring to the escaped lizard. :-) But yeah, that document is **ancient**... Even tho it was last edited last year.
If WPF still means writing XAML then avoid it. Windows Forms may be dated but it is simple and gets the job done. Feel free to downvote if you can post the XAML for displaying a bitmap.
Yeah, sorry about that. And this is still only the _Microsoft .NET runtime_ we're talking about. No idea what the behaviour is for _Mono_ runtimes (or its derivatives such as Xamarin or Unity). Perhaps ultimately the best is to still default to code contracts, static analysis tools, good unit test coverage, and good application design. In my application design, I simply _assume_ that `null` values aren't used, and if they are used somewhere, they're handled as close-to-the-metal as possible before feeding them into the rest of my application API. If a `null` value is passed around, it's caught early (say in object constructors or method code contracts) so it's easy to debug. Ultimately, it greatly simplifies my code development and don't even have to wrap objects with a `Definitely&lt;T&gt;`; my API doesn't deal in `null` and the methods fail fast if they did, so I don't need to validate such things at compile time. I've thought about doing what you did with `Definitely&lt;T&gt;` taking advantage of value-type non-nullability and I'm glad to see someone followed through on it. It's a shame that it _almost_ works. Who knows, maybe they'll add some support for it in C#7 (for example, nullable value types are specially handled by the C# compiler, so maybe they'll add special handling at compiler time to avoid having to significantly alter the CLR)
Definitely - planning is everything. However, there is a place for experimental bits of code during the planning phase even if you throw them away. I start with a big picture plan, try and predict the hard bits, and then code them in isolation (preferably as unit tests). Iterating between top-down and bottom-up in this way limits surprises further down the line.
You can use WPF without writing a single line of XAML. XAML is just compiled to C# code too.
I agree, but imo, if you are a developer that aims to position yourself in the mobile market, you can make more than $600/week. You could pay the license easily and you still have the whole year to make more money.
No you need a webserver for all of those, you can easily get a free azure website to host these. Or use something like parse , firebase or azure mobile services for an automatic backend. Those 3 won't require you to setup a webserver they do it for you.
ELMAH is very good!
log4net
Just looking into switching from NLog to Serilog. Going to use Seq to manage logs from multiple services.
Indeed they do. They even have an [API wrapper for .net](https://github.com/RallyTools/RallyRestToolkitFor.NET).
It depends. Elmah and Glimpse are both good for web sites. Otherwise, for anything else I've used both log4net and NLog. Both are very customizable. 
Do you use it for all your error handing? Are there any problems you ran into using ELMAH?
Ditto!
I followed the instructions here https://github.com/RallyTools/RallyRestToolkitFor.NET/wiki/User-Guide and am getting an error "the type or namespace RallyRestApi could not be found. C# did an autocomplete for "Rally", which I added "using Rally;"
I think declining support is another good indicator of 'deadness', and other people in this thread have been reporting lengthening support response times.
So 9/10 of a single CodePlex repo is bad?
Not if you wanna use WPF anyway.
log4net is standard, mostly because it's flexible about what you do with the data logged. It works well in general, but does require quite a bit of text in the .config file. Elmah is good for websites. But remember, [don't configure it to leak sensitive info remotely](http://www.troyhunt.com/2012/01/aspnet-session-hijacking-with-google.html). If you find that you need more than those, look at things like kibana, logstash, statsd, newrelic. All are good but require time and money and you won't need them if you're at small scale.
&gt; Interfaces with default implementations That'd be great... Sort of realizable with abstract classes though :)
Except you can only extend from one. :&lt;
Well, it'd be clunky, and you wouldn't be able to combine default implementations for two different ones easily, but you could do something like: public abstract class MyInterfaceDefault : IMyInterface { /* stuff */ } public abstract class MyInterfaceAndOtherInterfaceDefault : MyInterfaceDefault, IOtherInterface { /* more stuff */ } public class UsesMyInterface : MyInterfaceDefault { /* maybe change defaults */ } public class UsesBothInterfaces : MyInterfaceAndOtherDefault { /* maybe change defaults */ } Only fails when you want to combine stuff. You'd have to copy the code :/
curious to know what made you move off of nLog
Implementation aside, there's not much to learn if you just want to use them. They implement ICollection&lt;T&gt;, just like List&lt;T&gt;. Lookups (like .Contains()) are O(1) instead of O(n).
http://netcommon.sourceforge.net/
Looking at the assembly one can see that the full qualified name is `Rally.RestApi.RallyRestApi`.
log4net configuration is verbose ... but it's not that hard. I don't think I would call it "muck", but maybe I'm just used to it. I would be surprised to see a config file for an app that was in production use and didn't have log4net stuff.
No. Use Windows Forms if you think it will be better to get the job done, but WPF gets the job done too, it all depends on situation, but my point is - creating WPF application from scratch is as easy and simple if you know what you are doing.
&gt; In IE8 works.. Not sure for 9,10 - I havent this versions.. Here you can download ready-to-go VM images to test different IE versions. https://www.modern.ie/en-us/virtualization-tools#downloads
Quick suggestions: 1. Clear cache (means F12 dev tools -&gt; check "always reload from server" + click "clear browser cache" -&gt; reload (once the checkbox has been set in the menu, you can just F5, it will reload all sources) 2. Check what compatability mode IE works with. I always put an X-UA-Compatible header with value IE=edge.
Sounds like an IE security setting
I've had problems returning a file as well. Ended up having to do it something like this: (I've removed some parts that aren't relevant. And am sure this wont 'just work' for anyone. The method is supposed to get a users thumbnail out of AD from their DN and send it to the browser, all that stuff is what I pulled out. public ActionResult Image(string dn) { MemoryStream imageStream = new MemoryStream(); Response.Clear(); Response.Expires = 0; Response.BufferOutput = false; imageStream.Write(p.Thumbnail, 0, p.Thumbnail.Length); Response.AddHeader("Content-Length", p.Thumbnail.Length.ToString()); imageStream.Position = 0; return new FileStreamResult(imageStream, "image/jpeg"); }
Remove the last parameter, GetFileName(filename). I've found that including that forces the browser to download the file, as opposed to serve it.
This should help you out! [A C# Project in Optical Character Recognition (OCR) Using Chain Code](http://www.codeproject.com/Articles/160868/A-C-Project-in-Optical-Character-Recognition-OCR-U)
No problem!
https://code.google.com/p/tesseractdotnet/ is an option. Tesseract is not all that great. It's pretty old, not very accurate, and not super fast. However just for a home tinkering project, it might get you what you want.
Thank you for the recommendation, from what I'm reading it's originally developed in C++ (which I'm more familiar with) so it serves me greatly.
I've used Google Tesseract via C#, works very nicely
somethig like string url = "http://sharepoint.mywork.com/sites/mysite" using (SPSite site = new SPSite(url)) { using (SPWeb web = site.RootWeb)) { var list = web.Lists[0]; foreach(var item in list.Items) { Console.WriteLine(item.DisplayName } } } no promises this code compiles but that's the most basic example. To explain this sharepoint is broken up into Farms -&gt; WebApps -&gt; SiteCollections(SPSite) -&gt; Sites(SPWeb) -&gt; Lists -&gt; ListItems(files or other things) let me know if you have more questions Edit: totally forgot you might want the client object model ServerRelativeUrl = "some path to a file" using (ClientContext context = new ClientContext(SiteUrl)) { //the object we want to load File file = context.Web.GetFileByServerRelativeUrl(ServerRelativeUrl); //the properties we are loading context.Load(file, item =&gt; item.Name); //load data context.ExecuteQuery(); Console.WriteLine(file.Name); } 
I found that often the best way to know if your implementation is SOLID is to write the unit tests for it. For example, if you want to test the PreferencesThing class, you could run into an issue because of the dependency on PreferencesStorage() : if it needs a file, the network, whatever, it will be hard to write. So PreferenceStorage should implement a IPreferenceStorage interface, that you would mock during the tests. And your class constructor or GetThing method would take a IPreferenceStorage parameter. In a strict SOLID approach, I guess that even the ObjectSerializer could be considered problematic. That being said, keep in mind that SOLID is an excellent way to structure your code, not a magical hammer. Use it wisely. I would recommend (if it has not been made) reading http://www.amazon.com/Agile-Principles-Patterns-Practices-C/dp/0131857258 which goes in length on those topics. Also, anything else by Robert Martin (uncle bob) is usually a good reference on the topic. 
Thanks for the quick reply /u/zebishop. I haven't actually called PreferencesThing.cs (silly name I know, I'll change it) yet but I assume your comments would also apply to GetProfile class and Get() method within it? Should it be having an interface as well? Called IUserRetrieval or similar? What's so problematic with the ObjectSerializer class? Does it need an Interface to make it easier to Unit Test? I'll look into that book. I've never heard of Uncle Bob/Robert Martin. Thanks! 
So there's two different paths you can take depending on whether the code you're writing is running on the SharePoint server or not. If you're not running on the SharePoint server (which was my case) then you need to use SharePoint Web Services. You can do that by adding a service reference to "&lt;site url&gt;/_vti_bin/lists.asmx" and then using the get_list_items() method to query a particular list and get the results back as XML. Since this is SharePoint, I'm assuming that you're in corporate environment with a corporate domain. That was my case and the hardest part for me to figure out was how to do automatic authentication with the server using the current user's domain user account. (i.e. my users can use my app without having to put in their username and password) This is the method that did the trick for me. It bypasses the "normal" way of creating a connection by specifying it's own httpbinding, which allows you to set authentication options for the connection that are otherwise unavailable. static public ListsSoapClient GetListService() { var remoteAddress = new System.ServiceModel.EndpointAddress(_webServiceUrl); System.ServiceModel.BasicHttpBinding binding = new System.ServiceModel.BasicHttpBinding(System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly); binding.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Ntlm; binding.Security.Transport.ProxyCredentialType = System.ServiceModel.HttpProxyCredentialType.Ntlm; binding.MaxReceivedMessageSize = 70000000L; binding.ReaderQuotas.MaxStringContentLength = 819200; binding.ReaderQuotas.MaxBytesPerRead = 819200; ListsRef.ListsSoapClient listService = new ListsRef.ListsSoapClient(binding, remoteAddress); listService.ChannelFactory.Credentials.Windows.AllowedImpersonationLevel = System.Security.Principal.TokenImpersonationLevel.Impersonation; listService.ClientCredentials.Windows.AllowedImpersonationLevel = System.Security.Principal.TokenImpersonationLevel.Impersonation; return listService; }
Uncle Bob is the guy that "invented" SOLID, so he's a pretty solid reference on it :p Before I answer your question, again I want to emphasize that following SOLID at every occasion might lead to a huge and complex application. If your application is small, not subject to much change, violating all the SOLID principles can be the proper decision (as long as it's an informed one). The interfaces serves various purposes : - it make sure that you don't depend on the implementation (~LSP) - it helps you focus on the responsability of the object (SRP) - it gives extension points (~DI/~OCP) I used ~ to mean that it's more or less the incarnation of the principle (experts on the topic might disagree with me). Bonus for all that, it makes testing via mocking really easy. Why is ObjectSerializer problematic ? It's not per se. But it's a hidden dependency of your class. It means that if tomorrow your application needs to evolve and be able to deserialize JSON instead of XML, you will have to change the code of your class (and thus, you violate the OCP principle, as your object is not open for extension). If you pass an IObjectSerializer, then you remove this hidden dependency. But again, maybe your application will only ever support XML, and you can leave it like that. It really depends on what your goal is. And you're right about the GetProfile class, it should (theorically, again) take interfaces as parameters. Should they be on the constructor or the method depends on the object usage : if the storage can change everytime you Get() it, then it needs to be on the Get() method. If the storage won't change for the lifetime of the object, you can put it on the constructor (and same goes for the serializer). 
I've used this in the past. It was good enough for basic usage. I don't think I'd use it as a resource to learn OCR, but for basic tasks it works well enough.
I know this thread is old, but to condense further... private void button_Click(object sender, EventArgs e) { (Button)sender.Text = clicks ? "X" : "O"; clicks = !clicks; this.check(); }
For reference as you're learning and in case anybody doesn't know the [?: operator] (http://msdn.microsoft.com/en-us/library/ty67wk28.aspx). 
If you're looking at doing anything serious I'd suggest the tool chain we use. We use [Abbyy Finereader](http://finereader.abbyy.com/) to process the image and the output is then dumped out as an XML file with all the confidence information and this is then processed by our app. This has the advantage of allowing us to have multiple separate OCR servers feeding into a central processing application where users review the OCR output, correct where necessary and this is then passed down the line to another app where a different group of users work on the data (combined with some other sources)
I use OCR for my AI WIP project, it reads directly from the screen using tesseract http://kpf.io/?p=58 and this is how I use it in my project https://bitbucket.org/awesomeKT/nohands/src/b64b77d69943217eec81fe2d7c10ad6afd0c5949/NoHands/Sense/visionData.cs?at=master
It depends... what's the OCR for? What kind of OCR? Depending on the criteria you most likely won't be able to use anything free and you absolutely won't be doing your own library. OCR is pretty complicated shit. I would look at Leadtools, Abbyy, and Omnipage to start.
The contribution list mentions this as a quality criteria: &gt; Actively maintained (even if that just means acknowledging open issues when they arise) But violates this within the list.
Which link you thing is bad? You can open issue on github to discuss
Are you referring to me? If so, then please reply to my comment - not to your posting.
Yes. Seems like my mobile app cant do this, sorry :) 
I don't github, but do you want to list my project NSspi? \[NSspi\]\(http://sourceforge.net/p/nsspi/) - Implement Windows Integrated Authentication across any communications channel
Thank you, but let's wait until you reach first stable release at least.
fyi it has been a year since I've had my hands dirty with SharePoint but, don't ever use list.Items in a foreach. It enumerates the list on every iteration. Yeah..... 
I was just pointing it out as it wouldn't be obvious to him.
We're working on a tool for Visual Studio called Code Connect (http://codeconnect.io). We're releasing a beta in August. Would you like us to add it then or wait until we've released a final version?
You can never fully trust external data. Ever. No matter what language you're using. A while back there was even a post about the "IM wars" and how Communicator was faking AOL signals so that AOL users could chat on Messenger. Best bet is to just put in some fast sanity checks server-side.
Unfortunately it's ugly, website is better choise :( Is there anything functional and with some design which won't make people cry?
For Logging, Serilog is missing.
Reddit Is Fun. Reddit Sync.
I'll amend that by saying "Do enough of the basic oldstyle ADO pattern so you understand the basics of what is going on. Understand WHY parts of it are so painful. Also it will let you troubleshoot anything that you have a weird edge case with when using an ORM since it's a very similar pattern. But after that, learn to use an ORM, BECAUSE they provide an extra layer of abstraction. A good ORM means you have strongly typed objects for operations, which gets really handy as your applications start to grow and you start having to maintain an ever-larger hand-coded Data Access layer. ADO.NET is still good for calling certain Procs and functions if your ORM isn't good at dealing with that sort of thing (I'm looking at you, ODP.NET. I'd rather deal with Devart's awkward dialogue text, it was still a more intuitive experience to configure a Store Function to map out to my Entity model.)
Please take a look at some of [my projects](http://github.com/Banane9) as well. Notably the XmlRpc and SharpQuadTrees one :)
Yea, that's what racing games like TrackMania do for official scores as well.
looks good, added
The basics of using Entity Framework 6 to display and edit data in an ASP.NET MVC 5 application. http://www.asp.net/mvc/tutorials/getting-started-with-ef-using-mvc 
I recently ran through this tutorial and found it very helpful. It doesn't go into much detail, but does give a solid idea of the basics of Entity Framework (and thus LINQ) and MVC, I'd recommend it.
&gt; will most likely buy Resharper (is that still the best VS AddIn?) Pretty much, yeah. &gt; MVC 5 seems to be the way to write modern web apps? Or should I be looking at Razor? MVC5 is a framework. Razor is a view engine. MVC5 uses the Razor view engine. &gt; I'm pretty confident I want to start with Entity Framework. Entity Framework is a good choice, but make sure to also check out micro ORMs like Dapper. &gt; HTML/CSS were never my strong suits, so if there's any additional tools or web ui interface libraries that could assist in making a website that doesn't look like absolute crap [Bootstrap](http://getbootstrap.com/) is a very good library for CSS which you should check out. It is the defacto standard currently (but there are alternatives). &gt; Testing....not a huge focus, but if someone could recommend what is generally considered the most mainstream testing tool/platform it would help. The most mainstream testing tools are either *mstest* or *nUnit*. The bleeding edge would be *xUnit* which is actively maintained (the other two are not anymore) and offers plenty of good features that you won't find in the other two. With additional libraries like *AutoFixture* together with *xUnit* you can reduce your boilerplate code for testing to a minimum. But probably the most important thing about testing is to **start right away with it! Don't delay it!** Testing will not only lead to less bugs, but also to a better overall architecture of your application. &gt; can one get by on Subversion, or should I bite the bullet and learn git? Nowadays you really should learn GIT. It's not that difficult, the Visual Studio integration is alright (but still far from great). --- Another principles you definitely should look at are **Dependency Injection** and **Inversion of Control**. Don't wait with it. :-)
:D 
Let's wait until your projects will become mature and get good community
I'll add that for source control you can get a free visual studio online account (for up to 5 developers) (which can optionally use GIT).
Hey thanks for your reply! Ill try these out today and Ill post the results. I am using VS2012 and Sharepoint 2010.
Thank you for your reply. The SharePoint server will indeed be on the same domain as the app and I will most likely use a username created specifically for use in the app which has access to the specific list. I am going to try using the suggestions from all of you and then I'll post my result or follow up questions. You guys are saving my life. 
&gt; Telerik UI for MVC, this comes with a bunch of helpers for razor which will make life a little easier This sounds like the kind of thing I'm possibly more interested in, I can guarantee I do not have the time to read books on CSS any time in the near future, so any "cheating" I can do to get a reasonably functional and attractive looking UI is what I want to go with for now.
Learn Visual Studio has some great training videos for like $150 for a life time membership. 
I think you'll need to post the reading part of your code. Because usually unfinished write is just seen as the reader getting stuck in read operation. So to me it looks like at some point you do something that ends up reading stream as far as it goes and then handing that off as closed to your reading code.
I recommend you go through a couple Bootstrap tutorials. It's the default front end framework with MVC5, and it's awesome. But you're not going to just "figure it out" playing around with it. It's not complicated or anything, it's just something you need to devote maybe a day to. 
&gt; It's the default front end framework with MVC5 Thanks....this is exactly the kind of "should be common knowledge" (but isn't, to me) advice I am hoping to get.
Just build something. 
Kendo mate.
We use the telerik MVC wrappers, though most have been transitioned to using just the cor js libs. The wrappers are great, it is worth at least demoing. 
Adding to what the top comment said, git is what you should end up learning, but since you already will have a pretty full plate of things to learn, I use TFS online (free until you get more than five devs in there). Just use that for now, it has a practically zero learning curve.
It's something I've done before at work, although I was allowed access to the web.config. We use similar AD code to pull back domain users, that's easy enough, but we've only used that for actual authentication once (a long long time ago!), so I'm not sure where you can hook it in. Normally you'd inherit from one of the MembershipProviders, but that's initialised from the web.config. 
Do you know of its any good? I'd be happy to pay a reasonable annual fee to another company that specializes in it (MS often does a half-assed job of this sort of thing).
The whole purpose of Windows/AD authentication is to use already obtained security token (Kerberos/NTLM) and not to ask users for credentials. I'd recommend to leave that up to IIS where you need to enable Windows authentication and disable the rest. I think all browsers support GSSAPI now so this is enough to work with Windows SSPI (they pop up login dialog and do not send credentials in clear text). Once you setup IIS authentication your Page.User.Identity.Name will contain Windows login and Page.User will be of WindowsPrincipal type. Now you need to perform authorization be querying your SQL table and AuthorizeRequest event is the best place to do this (if you can afford some refactoring try to move permission logic to AD groups - they will naturally map to user roles which is perfectly supported by .NET role security model).
We use it where I work and it seems fine although admittedly we don't use all features. It's free for up to 5 developers for commercial use so it was an easy choice for us.
Have you considered using WCF over a named pipe instead of using System.IO.Pipes directly? A lot of the overhead is built for you that way, and you'll have the flexibility to move to different communications channels and authentication schemes...
This is the way to go. If it were me, I'd enable Windows Authentication only (removing Basic/Anonymous) from the IIS website instance -- and then add these folks to an AD group that are allowed access to the site (talk to your network administrator). The code in the site checks to see if the domain user belongs to the AD group. If it does, you're in. If you don't, 404 them. Get rid of the sqlmembership business entirely. 
&gt; proprietary I'm pretty sure there was another one of those on the list when I read it. &gt; CodeMaid is still 0.7 So what? It's stable and great.
Well, without some publicity and other people using it, that won't happen.
Sounds interesting. Also, you might want to keep an eye on some of the ASP.NET vNext stuff. They have some command-line build and package, as well as project file that is json, that is separate from MSBuild. It might be an indication of where Visual Studio is heading in some ways, but also might be something you could leverage. Some info here: https://github.com/aspnet/Home/wiki/Project.json-file
Friendly suggestion: take this up with the support guys at Microsoft. If you don't want to google around to see if anyone solved your issue, then MS support will be able to help. /r/csharp is more of a discussion forum for sharing news and techniques, best practices, etc about C#. This is more of an IT support question. Good luck.
you are right, but i already found a random key on the internet and it worked. I guess it doesn't even matter at this point.
Oh man, don't get me started on SF... Yeah their adware, it's so petty of them. They have sunk to a new low with that. I registered for the first time on their site to ask a question in the Notepad++ forum just the other day ... they require a 10 character password, I sh*t you not! My pet-peev'o'meter was going crazy. The most I'd ever seen required before this was on GoDaddy which is 9 chars. I mean is this a VPN into The Pentagon or an open source hosting service? I only mentioned SF because they were the original open source repo hosting. But those days are long gone for them.
FYI, you can get the professional version for free at dreamspark.com if it's for educational use!
Nice. I used a custom built C# console application that would do pretty much the same for my custom usecase but it seems Cake covers most of my needs and is already in C#. Will definitely check it out!
Sweet! If you have any questions or thoughts, don't hesitate to open an issue or write to me directly and I will try to help you the best I can.
Interesting. We use nant but I don't love it. Would like to have an alternative script-based solution. This looks promising. Can't tell from the source if it easily extensible. Can it scan a folder for types implementing a ICakeCommand or something? I see there already is a dependency on Autofac so it could be easy to do.
Yes, it is extensible to some extent at the moment, but there's more functionality for extensibility planned like referencing scripts in NuGet-package and registering custom services for scripts to use via *ICakeContext*. Any ideas are more than welcome! An example of implemented extensibility is script alias methods. All built in functionality is implemented this way. 1) Create a project and reference the NuGet-package *Cake.Core*. 2) Implement an extension method for *ICakeContext*. using Cake.Core; using Cake.Core.Annotations; public static class MyMethod { [CakeMethodAlias] public static int GetMeaningOfLife(this ICakeContext context, bool myVar) { return myVar ? 42 : 0; } } 3) Put the compiled DLL somewhere in your repository. 4) Reference the compiled DLL with the *#r*-directive in your script, and a method will be generated in the script context. #r "tools/MyExtension.dll" 5) In your script you can now call the method by simply writing: GetMeaningOfLife(true); 
They rebranded it recently, its "UI for ASP.NET MVC" now. http://www.telerik.com/aspnet-mvc
Very interesting. Since the whole kendo effort was an attempt to escape from the MVC niche. 
Question from someone who regularly sucks on Microsoft's teet: What's the point of doing this when you have tools like Visual Studio that build projects and solutions for you?
because MSBuild kind of sucks to deal with. 
This looks pretty sweet, let me know if you need any help.
Thank you! Any help is appreciated! Even just trying it out and reporting bugs, issues or coming with ideas/suggestions are more than welcome :) 
Cool, I'll try porting an existing msbuild script, and take a look at the existing GH issues when I get a chance.
Nothing in VS makes you use TFS. I've been doing C# and C++ in Visual Studio since 1997. I've never used any other MS product other than the VS Express,Standard,Pro, or Premium SKUs. Never even looked at TFS. I've used NAnt and MSBuild, both of which just use the VS .sln file to do the compilation.
This is a Rake like build system, as opposed to using NAnt or MSBuild. Just depends on what you want to do. Only issue I see with this is that it will have a huge uphill battle against NAnt and MSBuild since both of those systems have a large base of tasks.
It's not a competition. I'm just trying to build something that I would like to use myself. Both MSBuild and NAnt is XML based (to my knowledge) while this is C# based.
&gt;Nothing in VS makes you use TFS. I know. We use Git for everything. I'm not saying you can't build on your local machine with Visual Studio or on a remote machine with Visual Studio. I'm saying we use Bamboo servers at work for our continuous integration builds. Those servers can then use whatever tool they want to kick off whatever build method we want to use. &gt;What's the point of doing this when you have tools like Visual Studio that build projects and solutions for you? I may have poorly read the post I responded to, and bringing up TFS seems silly at this point, but I was mainly trying to address the question of why one might go after tools like this. I'm sure you know this, but just because Visual Studio can build a project does not mean tools specially made to streamline build processes are not useful.
Sorry, but we're trying to create list of awesome software which follow our rules, this list is not for PR. Anyway, you always can create pull request where your links can be discussed
You're right, there is link to resharper which is proprietary too, but i'm thinking about removing it. Please, drop a few lines to https://github.com/quozd/awesome-dotnet/issues/4 where I want to discuss this question. Maybe we'll add other proprietary software. 
Thank you, I'll review this links and update our list tomorrow.
Honest question: is it really much better than using psake? I mean, you have helper methods to run xunit and msbuild but it can also be done easily in powershell, doesn't it?
Of course it can. You can also do the same thing with FAKE or other build automation systems that's not psake. The article states the reason why I built Cake...
Sure, you build cake because you want to script your build with c#. That's fine. My comment meant something like: convince me to switch from psake to cake.
I see no reason to convince you. If you enjoy psake and think that it's the right choice for you, then I see no reason for you to switch. It's no competition, just an alternative :)
I'm going to do the same with one of our psake scripts :-)
Exciting! As I said before, tell me how it went! :)
Cool, it has the same name as a tool that does the same thing in CoffeeScript.
If you stay away from `HttpConext.Current` you'll be mostly fine. You surely can wait for "*VS2014*", but that will probably be released mid of 2015. vNext is still a very early alpha.
You should post this on stack overflow
How so?
To my knowledge PVC is a port of Gulp. Gulp is pretty different from a "regular" build automation tool since it uses a stream based plugin model, so I guess that PVC would be a good choice if you're a fan of that :)
Ah. Cool. I had no idea.
There's a 30 day "trial" before you have to register it... But it stays free :)
Whats also interesting is that the "UI for MVC" is just a server side wrapper for kendo ui. Even the html helpers are @Html.Kendo()...
You're too early.. But httpcontext is changed a lot 
The surprising inefficiency of their web server. I think we killed it.
Yes, I've tried all day to read that article. :&lt;
[Google cache to the rescue](http://webcache.googleusercontent.com/search?q=cache:t3j7n0-J_bcJ:msmvps.com/blogs/jon_skeet/archive/2014/07/16/micro-optimization-the-surprising-inefficiency-of-readonly-fields.aspx&amp;hl=en&amp;strip=1) 
Holy lack of CSS, Batman!
It's all good. Thanks for the link!
Just let it load, it does eventually get there. Anyway, the gist is that a readonly field is accessed more like var field = GetField() than var field = this._field .
Yep. I know some of those words. ELI5, dependency injection?
Giving the class instances of other classes it depends on, usually when first creating an instance of the class. 
You'd think with the increasing focus on read only and immutable, this would be something they optimized for.
Very irritating that the new BCL immutable library is 4.5 only.
OP was asking about controller builders (such as [DefaultControllerFactory](http://msdn.microsoft.com/en-us/library/system.web.mvc.defaultcontrollerfactory%28v=vs.118%29.aspx)) which is responsible for creating an instance of a controller after the route and controller type has been determined.
Could you do like below, or is it cheating? int val = 123456; String.Format("{0:N}", val / 100D);
Controllers have nothing to do with routing.
* [Scott Hanselman's Blog](http://www.hanselman.com/blog) * [Morning Dew](http://www.alvinashcraft.com) * [The Morning Brew](http://blog.cwa.me.uk) * [Jakub chodounsky's Blog](http://chodounsky.net/) * [WindowsAppDev.com](http://windowsappdev.com) * [2000 Things You Should Know About C#](http://csharp.2000things.com) * [Dot Net Pearls](http://www.dotnetperls.com/) * [Iris Classon](http://irisclasson.com/)
Thanks
Thanks
You seem to understand the basic idea behind MVC, so your problem is with DI. I would recommend these two blog posts to understand dependency injection in the context of MVC. The explanation is about as simple as I could make it, it targets absolute beginners. [http://www.buenadigital.com/blog/2014/01/10/Dependendency-Injection-in-ASPNET-MVC-Part-1-Introduction](http://www.buenadigital.com/blog/2014/01/10/Dependendency-Injection-in-ASPNET-MVC-Part-1-Introduction) [http://www.buenadigital.com/blog/2014/03/11/Dependendency-Injection-in-ASPNET-MVC-Part-2-Basic-Implementation](http://www.buenadigital.com/blog/2014/03/11/Dependendency-Injection-in-ASPNET-MVC-Part-2-Basic-Implementation) 
This seems to have gotten much better in VS2013.
Definitely The Morning Brew, Chris is a great guy and is usually open to questions as well.
It builds controllers ;) Something has to create instances of your controllers. But you may be wondering why you are looking at it. Why is this class is exposed as something that you can swap out? It is to help you use tools like [MS Unity](https://unity.codeplex.com/), [Castle Windsor](http://docs.castleproject.org/Windsor.MainPage.ashx), [StructureMap](http://docs.structuremap.net/), [Ninject](http://www.ninject.org/), [etc](http://www.hanselman.com/blog/ListOf-NETDependencyInjectionContainersIOC.aspx). so that they can create controllers by calling a constructor with lots of parameters, putting the right values in there. They are very useful when your application grows past a moderate size and you want to keep it testable and having fairly small classes. These are all good things. Your next question may be: ELI5 what is an "[IoC](http://en.wikipedia.org/wiki/Inversion_of_control) container". Or if you really don't care about any of that, don't worry about it and keep on using the default controller builder.
This is also a good technique for anyone who has to use Visual Studio Express and cannot have conditional breakpoints. 
So, with Dot Net Perls, is there a starting point? Or is it more of a reference guide and not a tutorial per se?
I posted on SO; I run into this issue a lot with my work, so I'm curious as to why the solution posted there did not work for you.
it does in my applications
No, it does not. The routing mechanism takes controllers in account - but it does nothing with them and they're not required.
What's the point of controller action in MVC if no route is pointing to it?
There is none, because that is how the system is built. But still, you're mixing responsibilities. Controllers have nothing to do with routing.
yea i think it was good enough explanation for eli5
Since this is primarily a subreddit for *programming*, namely in C#, I would recommend posting this elsewhere. (Regardless of where you've been most...)
I replied to you with an update... not quite there yet and my attempts to solve the error has failed. FYI I tried without the single quotes around the {0} but that just made it go back to column not found.
Put a breakpoint on your filter line or break it up into multiple lines so you can see the actual value that comboBox1.SelectedValue is getting when you are running this. Learning what all your variables are at runtime will help you diagnose your issue. If I had to guess from the error, I'm guessing it has to do with the SelectedValue's datatype. The datatype of Value is going to be "object", so it may be casting it to the wrong thing implicitly. If you want it to be a string, you should use .ToString(), so: comboBox1.SelectedValue.ToString() If you want it to be an int, you should explicitly typecast it: (int)comboBox1.SelectedValue
Tried both of your suggestions; didn't work. Got a cast error on the (int) declaration and the same new error on the .Tostring Here is the value: http://i.imgur.com/IohrDjy.png I've redded out a company name in there as it is one of our real client names, essentially I need to reference that first 1
Well just from looking at that debug screenshot, you should be able to get your value with: comboBox1.SelectedValue.Row.ItemArray[0] or some such. Obviously you won't be able to cast an array of items or a DataRow into a string or int before diving down into it. I find it odd that that ValueMember you are setting is not actually working. Maybe try calling a .databaind() on the combobox at the end of your form load and see if that makes the selectedValue actually get the value we are expecting.
Wouldn't let me reference the ItemArray like that.... I think the best approach at this point is to rewrite the code from scratch and see what happens. I'm going to populate the combobox from a different example. Thanks for your help so far, it's much appreciated.
This was it!! Thank you so much. In the end it required the selectedindex changed to 1 and the properties re-ordered as you had found.
Great, glad I could help. I went ahead and put the same answer on your SO post so people with the same issue can solve their problems if they find your question in the future.
Register on [Code Project](http://codeproject.com)
I am a senior software engineer with 26 years of experience. In my career, I have never seen a role-based security implementation that didn't end up being kind of a disaster. *Every single time* the client wants to customize things far more extensively than basic roles permit, leading to hundreds or thousands of roles required to meet their demands, which is just unworkable. If the roles are pre-defined, that's worse, because then it'll never be able to meet needs. In every case where the client said "oh, no, really, we just need like three roles and that'll be plenty," they've always turned out to be wrong. Best practice is to implement a security model that uses users, groups, and privileges that can be assigned to either. You know, like Active Directory or LDAP. Then provide tools to allow authorized power users to administer the setup effectively, and some defaults that they can alter and/or clone as needed.
Oh you mean like "super_duper_insanely_awesome_super_admin_god_mode_user" is the only one who can access this one function which was absolutely left out of the requirements
Check out claims based authorization, that's more of a newer/friendlier model. Think texture has good write ups on it, as well as developers of indentity server( on mobile, but will post a link later, it's on github though if you want to check it out) Edit: thinktecture not think texture (damn autocorrect)
If you don't get any love here try /r/ProductManagement (although it's got a low subscription rate) or /r/software.
No, they usually pull something more like: Them: "well, we have 64 different features, and any given user might need any possible combination of those features, so please just create one role for each possible set of features." Me: "So, you want me to create 4,294,967,296 roles in your security system? Okay. What do you want to name each one?" Them: "Uuuuuh, maybe we didn't think this out enough..."
I found /r/management via blind guess - I'm sure google could get you further results.
No, but close /r/cscareerquestions
Know your product. Use your product. Talk to customers, talk to people that use your product. Listen to your senior/lead engineers. When one of them walks into your office with a really sick look on his face, be prepared to let that really cool new feature you thought up drop a couple priorities so they can fix some architectural issue. Get to know your lead devs and managers. Most devs that have been around a while do understand things like business value. We have different perspectives on where it lies and how to get to it. I'm not saying we're always right and sales/marketing/product managers are always wrong, but sometimes when we say "hey give us some time to refactor" it really is a good idea. A bit of patience means that it'll be MUCH easier and faster for us to add stuff later. I know, you need to show results this quarter. But part of your job as product manager is to manage the costs that the product incurs. Effort towards reducing operational costs or maintenance costs can often be THE best course of action. It may not be as sexy as a couple new features, but it means you get to add MORE features next time around and lowering the costs associated with supporting the product, whether that's support calls or broken SLAs or what-have-you.
I got fired from a project once for the project manager steadfastly refusing to understand an important concept with authorization, so perhaps this gem will benefit you. The key to understanding authorization decisions is that there exists some granularity of the system beyond which you won't want to decide whether or not a user has access. This (and this was what was steadfastly ignored) is **application specific**. There have been many devs who have implemented security in the past, and gotten it wrong, and some have lived to tell about how they would do it right. All of these point out this most atomic level of authorization decisions, and the word I like best when talking about how to represent a decision at this level is a "privilege". The privileges in a system *(whether to be able to read all records, read some subset, be denied when requesting read of perhaps one specific record, or be permitted to ask the system to perform some logical operation like compute an aggregate or answer a yes/no question even when I'm denied access to specific details)* can be encoded in a variety of ways: custom storage in a db table, using a secondary system to store them (e.g. LDAP or an Identity Server), or some combination. Today a popular method is to represent privileges as claims in a claims management system which also provides claims about the identity of the user (used for authentication decisions). It is also possible, when using a secondary system or a library which provides storage of privileges, to map existing, often well known privileges (e.g. read, add, modify) to privileges in the system. However, except for very simple systems, this will often be insufficient in itself, and become a source of maintenance pain in the future, since authorization is such a deep cross cutting concern. In my experience, the best layer to create privileges on is the domain level. By decomposing the domain into entities, groups of entities, and operations, a very flexible system which is robust to future policy changes can be created. [Rhino Security](https://github.com/ayende/rhino-security) provides an implementation of this model based on NHibernate, but the idea can be ported easily since it is straightforward. Don't be fooled by the lack of ongoing coding to this library (as our naïve PM once was). It's basically "done" and doesn't really need anymore.
It is very ugly to say the least but the content is good.
I'd also recommend taking a look through here http://workplace.stackexchange.com/
Yea, know that one... Just figured a more general one would be better, seeing that he wants to move away from programming :)
That repetitive classes thing raises a red flag for me....if you are seeing a lot of very similar classes it may be a sign of larger problems.
I would add knockout or angular to the list as well
It's not quite what you asked, but there are a bunch of great .Net flavored podcasts: Nice list here: http://thesoundof.net/ My favorites: * [Dot Net Rocks](http://www.dotnetrocks.com/) * [Hanselminutes](http://hanselminutes.com/) * [Coding Blocks](http://www.codingblocks.net/) - but I might be a bit biased here :)
Scrub that, get the linq to excel nuget package and away you go!
hold on from what I see I though linq to excel was only for pulling data from an excel table can this actually pull from an SQL query and then export that in an excel sheet ?
It's tough to see what you're really trying to do here. Is it possible the answer is to use something besides checkboxes? Does each checkbox represent a distinct property? What do they represent? A bit more info is needed to get any kind of decent answer.
Maybe consider reading up on the [builder pattern](http://en.wikipedia.org/wiki/Builder_pattern)? Are you able to be more specific about what each checkbox controls? I'm assuming you do not have a piece of paper with 23! different tasks that need to be implemented by your program.
There are 2^23 = 8388608 possible permutations of 23 binary switches (checkboxes). What do you mean they do different stuff for each permutation? I am guessing you do not have a spec with 2^23 different behaviors detailed... As that would indeed be preposterous. If you have a spec for what each checkbox _itself alone_ does, then you have reduced it to 23 disjunct if-cases. If the checkboxes represent a collection of radio buttons (mutually-exclusive choices) then it is reduced to 24 cases: 1 for a sanity check (exactly one button is true, rest is false, else error) and 23 for each individual choice.
Do you mean 23 factorial as in 23 * 22 * 21 * ... down to 1 which is 2.5852017e+22. If so your client probably doesn't have that many different behaviors. Get more definition from your client. If the ! just meant 23 (O my gosh!) then that means only one of the check boxes is checked at a time. Use a radial list. If it's anything else you need to provide more information here. 
makes sense, wish I could do that for this but it is calling for excel xlsx format only. 
Radio Button List. Only one can be chosen at a time. You would only need to find the selected one.
It's a roundabout route but once you've got the CSV object you *can* pump that through an xlsx converter. I'd try to keep the excel stage at file level as much as possible.
Look in to [ClosedXML](http://closedxml.codeplex.com/). I used it once in a project and it worked well.
Another vote for "your checkboxes are supposed to be mutually exclusive, make them RadioButton controls instead", here. If they're not, then it really does seem like your client is asking for an if statement with 23! combinations, and that is mental. Is there a problem with just having an If for each check box, and perhaps having a boolean flag for whether it's been ticked for other related checkboxes to check against? Can you break the list into some shorter lists to make it smaller? Can you tell us a bit more about what's being tested on this page so we can tailor the answer a bit better?
Use a [bitmask](http://en.wikipedia.org/wiki/Mask_\(computing\)#Uses_of_bitmasks) maybe? Does this client **really** have 23! possible combinations of options? Or can you do some logical grouping where if option A is selected in group 1 is selected, group 2 is unavailable, or only certain options in group 2 are available? If there are mutually exclusive options, use radio buttons and not checkboxes. You might end up with a combination of the two.
The checkboxes are basically criteria. CheckBox1 corresponds to Item1 from a webpage, CheckBox2 for Item2 from the same webpage, etc. If everythin matches the criteria then a method is called. Additionally there is supposed to be option to give him a choice to "add" `&amp;&amp;` and `||` (and/or) to the if statement
Based on your description, it looks like you should be using RadioButtons (like others have suggested) instead of CheckBoxes, especially if all you're doing is checking each one for false and then caring if only one is checked...unless there are combinations for having multiple checked.
Sounds like you are filtering data and the end result is presenting what gets through the filter?
Maybe you need a truth table then?
Pretty cool. You might want to work on some form of visualization like [WinDirStat](https://windirstat.info/).
could you figure out which combinations of criteria call the method? you can add all the selections up into a 23-bit number (bitmask) and only call the method for the ranges you need. that should break it up quite a bit. also, how different is the stuff that happens from the checkbox? could this be passed into the method itself and handled there?
So what is the criteria? is it only certain combinations of checkboxes? 
The criteria could be any of the 23! possible variations - whatever the client decides to check/uncheck. The web page does not remain the same at all times.
Sounds like you want something like a PredicateBuilder, to create a specific predicate depending on the checkboxes?
first of all, you can say if(checkBox1) or if(!checkBox1) instead of writing == true / == false. e.g. if(checkbox1 &amp;&amp; !checkbox2 ... &amp;&amp; !checkbox23) Otherwise, if you really need to call a different function for each configuration of checks, you will also have to check for each individual configuration. If you could post the actual code you have, I could maybe help you more.
The fastest way is to make a 2-dimensional array (of type Object in VBA, not sure about C#) containing all the data and write it to the Excel Range containing all the necessary cells. This works way faster than looping through cells. EDIT: Example in VBA: &gt; OutputSheet.Range("A1", OutputSheet.Cells(UBound(OutputArray, 2) + 1, UBound(OutputArray, 1) + 1)) =OutputArray EDIT2: You can access Excel Range object directly from C# using Microsoft.Office.Interop.Excel.dll http://www.microsoft.com/en-us/download/details.aspx?id=3508
Do you have a good C# example of this ? 
Maybe prodID used to be an int, then someone changed it to uint and didn't remove the other code?
&gt; Each combination could call the method as long as it passes the criteria. &gt; The criteria could be any of the 23! possible variations I'm not understanding something... do you test the checkboxes against themselves? Or is there one Admin who determines the criteria, that is then checked against the other users input?
Should be something like [this](http://pastebin.com/Arccc1Wq) (not tested, and limited by my knowledge of C#)
only thing I need to do is adjust for it to read the results of my sql query. All I need to do with excel is write to it.
Write your sql query results to a 2-dimensional array (cellsarr in my example). And make sure you reference Microsoft.Office.Interop.Excel.dll and add &gt; using Microsoft.Office.Interop;
This is likely it. OP, do you have a version history on this file?
Doesn't csc.exe have something akin to `-Wtautological-compare`? 
I'm already using microsoft.office.interop so I will give that a shot see if I can get it going. 
Making sure an unsigned int isn't negative is more insane than sane.
Is there a compiler warning on the code? If not, there should be. If there is, well--ignoring compiler warnings leads to this.
Epplus will do this for you without needing Excel installed (and faster because it does everything in the actual xlsx sheet). http://epplus.codeplex.com/ or Install-Package EPPlus
change of plans, seems like it be best to go with csv, is there a way to do with without a library? 
It should throw a compiler warning, IMHO, or maybe trigger a warning from a static analysis tool.
What version is this in? ^(for us who are lazy)
Great idear
well i haven't really thought about versions but i guess something like 0.7
After I pressed the save button I thought, crap this probably is totally off topic. I had a moment of weakness. Sorry. This is a small biz by design (really, just me and a few non technical employees.) So I do all the product stuff and own it all. I've been in this space for a long time and would like to feel I still innovate. This is my career (I'm 'old' if you're in your 20s.) "Often, I find its better if a product manager isn't overly familiar with the tech stack" I don't know, man. Maybe I was too laid back before, but this strategy really slowed me down and I feel my tech investment really suffered. I can see wire-framing up a project might be a wast of time but I don't want to be that hands off anymore. From now on I will expect a code pre/review, not that I could code wisdom, but seeing what hoops the engineer has to jump through to do what I wanted, at least gives me the option to help them take a different approach. What I did when I finally did a code walk-though I kept thinking, "Crap, if I knew it was going to be that big of a hassle, I'd would of said, don't do it." 
Visual Studio/.Net version ;)
Thanks. I was going to ask! This is actually is kinda of a grey area. I guess it shows the lack of interest in product management and why they are the first to go in a RIF. ;) 
I'm not getting away from programming given I enjoy it (like gardening or home-brewing) and since I'm funding this enterprise. I'm just trying to optimize how I can help or better direct the engineers now that I realize that I'll be 90 before I release my next revision of my service. 
http://www.codeproject.com/Tips/165548/C-Code-snippet-to-send-an-Email-with-attachment-fr
There's that word repetitive again. I'm not an extreme engineering veteran, but when you see repetiveness you should think about abstraction. Maybe you can make the classes all inherit from an abstract class. The other solution is move more into the db, which it sounds like you're doing. Always happy to do an evaluation on what you've got
You can watch the status of the web call with [Fiddler](http://www.telerik.com/fiddler) and see what's going on with it.
 uint x = 3; uint y = 5; uint lessThanZero = x - y; lessThanZero = 4294967294 
The idea of a technical specification pre - commitment on a work item and code reviews on shelf is great, but ultimately not necessary in a traditional product manager role, more a lead system architect or a project manager role. Like I said, you'll have to be a bit of both being a small business owner, but I think you might want to decide which to ultimately focus your attention on more. If defining the product feature requirements, researching its marketability, viability, forecasting ROI/CvB is what you need more of to sell more, worry about that more and the code architecture less. If you feel like you'd get a better return on investment through better code, focus on best practices, ooa&amp;d/design patterns, etc. so you can mentor your developers toward the architectural solution that'll deliver in your budget and timelines. It sounds like the thing you're primarily concerned about is code quality/efficiency, which might put you more in the latter, more "project manager"-ish camp. This may be better, as you can contract folks to do the research and viability reporting for cheaper than a full-time PM. Anyhow, if you want some help/resources, hit me up.
Also, if getting down to brass tacks is more your thing, you could outline the specific problem you're experiencing with those repeating classes a bit more. I'd be glad to help on that and I could point you to resources that explain the methodologies behind it. Show you where to "learn to fish", so to speak.
Depending on how old and big the code is, you can likely find stuff like that. Just ran into some equally silly code today that looked similar to this: if (stringVariable == "bar") { ... } else if (stringVariable == "bar") { ... }
You know..I read this in the voice of sexual harassment panda.
Shouldn't it be called *Used Space* if you're displaying the sizes of the folders/files? &lt;/nitpick&gt;
Check out ANTS profilers, its commercial but theres a free trial, its a great profiler. Would allow you to profile your code to see how long each line takes. You can also use EQATEC profiler which is free, but not nearly as feature rich.
You can also just host the page locally and do a request to the locally hosted webpage. This should tell you how much time is spent on non-downloading operations. 
What is "do x", "do y"? Are you building a query? If so, read /u/AngularBeginner's answer
You read as bytes then use bitshifting eg. &lt;&lt; and &gt;&gt; to move those bits around. Or you could read the range that you're interested in and then wrap the byte array in a BitArray : http://msdn.microsoft.com/en-us/library/system.collections.bitarray(v=vs.110).aspx The use of bit-level protocols is highly discouraged, as you can see - it leads to large problems in endianness, really just generally portability.
Uh oh, you broke Math!
That's our guess. This stuff is pretty old and pre-dates our SVN repository.
struct + BinaryReader will do that.
FWIW, the C++ feature doesn't quite do what you described. Bit fields allow you to designate how many bits will be used for each field of a struct, but it can't be used to change the fundamental size of a single variable. The architecture of the CPU dictates the number of bits you can work with as a unit, and for all modern architectures today that unit is a byte. That means at the CPU level you can't work with a piece of data smaller than a byte. Any language features like bit fields have to be implemented with that restriction. So for instance a struct in C++ with a just a single bit field of 1 bit would still take up a full byte in memory. If you try to read from a file into that struct you still have to read a full byte at a time. If you need to break that byte apart then you have to do bit manipulation (shifting and masking), and even then you're just converting one byte into another (presumably one that is either 0 or 1, but still a full byte at least). As another example, consider 24-bit audio files. I had to write a parser once to deal with streams of 24-bit PCM data. There is no 24-bit data type in C++, though, because there is no 24-bit register in a modern CPU. To parse the data I had to read 32-bits of data at a time and then manipulate the data so that each set of 3 bytes was copied into a new 32-bit value with the high byte being zero. The language didn't do that for me. I had to do it myself. 
The checkboxes aren't really the issue here. Creating queries on several checkboxes is the easy part. What you need to provide is some mock representation of what happens inside the if-body. There are possible solutions: * Code generation (using System.Linq.Expression) * Single method invocation * Multiplie method invocation If there really are 23! possible *different* if-bodies then your only realistic option is code generation. You would simply make a hash of the checkbox states (For example aggregate all states into a int) `states.Select((b,i) =&gt; new {State = b, Index = i}).Sum(item =&gt; item.State ? 1 &lt;&lt; item.Index : 0)` Assuming states is an enumerable with all the checkbox states. Then you create a `Dictionary&lt;int, Action&gt;()` and lookup the delegate. If it doesn't exist, you obviously have to create it: var consoleWriteLine = typeof(System.Console).GetMethod("WriteLine", new [] { typeof(string) }); var expressionBody = Expression.Call(consoleWriteLine, Expression.Constant("Hello World!")); var exp = Expression.Lambda&lt;Action&gt;(expressionBody); var action = exp.Compile(); lookupDictionary.Add(hash, action); If you have a more easily generalized form that would save you a lot of time though, but more information is needed on what is going on inside the if-body.
We had an example of this in our system. Huge code base (way too much code. Serious bloat.) and we were using int32 for Ids. ~15 years of high volume usage meant we were fast approaching 2^31 Ids. Some of our system is OLD. Doesn't support int64 old. So we looked at using uint to double our capacity until we replaced the really old parts. In the end we didn't go for that option, but I can easily imagine there would have been many instances similar to OP crop up because of that.
I clicked your upvote arrow twice, for providing the two best options. For the baked-in choice, BitArray is the way to go -- it's in all flavors of .NET. But to be a well-rounded developer and add some knowledge to your bucket -- understanding bit-shifting is a good thing to know. http://stackoverflow.com/questions/4854207/get-a-specific-bit-from-byte
My point stands, roll your own parsing code eventually breaks. Why not use something meant to mediate between the realms of domain objects and data files? More power to you though, I suppose.
I understand the reasoning although we are all about no libraries in code just makes it easier. This code is working just fine in testing so unless we absolutely have no way to do it without a library we can get it done 
Interesting. Sounds like a terrible case of NIH syndrome. My experience is that no libraries makes things much harder as the scope of businesses, systems, and/or requirements grow. 
Have a look at [MiniProfiler](http://miniprofiler.com/), once it's hooked up it'll tell you exactly where the time is being spent.
We are small lead engineer and I agree time will come for some libraries but for right now we are running just fine without them :)
I wrote something for this a while back. You can find it here with tests included: https://gist.github.com/kthompson/1ef7924e4a48bb2bb304
The node is created as a 2 dimensional array. You should correct the XSD file and regenerate the classes, so they are created as lists. The problem with XML to XSD generators are, that they mostly produce garbage.
Yeah I see that but the problem is the xsd looks OK to me. Here's the snippet about the node in question: [node](http://i.imgur.com/BD5tgrf.png)
Oh my god! You're working with OXI's Profile v4.0 message! This is fuckin' hilarious. I have a class generated that should help you out tremendously. Do you have Skype? I can talk pretty quickly over that.
So one problem I fixed is that many of the nodes had a maxOccurs of unbound (which shouldn't be), I set that to 1 and now I get a one-dimensional array. Still stuck on how to create and add to the parent class instance.
The XSD file is fine. XSD.exe seems like to favor arrays instead of lists and also combine elements to multidimensional arrays. Because formlesstree4 has the classes, i won't look further into it ;)
Well I totally appreciate you even looking into it and I did get it sorted out. Thank you!
Hi! Can you add my library for asynchronous WebSockets? http://vtortola.github.io/WebSocketListener/ Thanks!
There is a microsoft example of asynchronous file IO. http://msdn.microsoft.com/en-us/library/kztecsys.aspx Hopefully this can help.
Yep. The async and await keywords will be your friend here. You will need .Net version 4.5 or later.
Try with Memory mapped files http://msdn.microsoft.com/en-us/library/dd997372(v=vs.110).aspx
Maybe Helios is something you're looking for: https://github.com/Aaronontheweb/helios
Thanks for the recommendation! I haven't used the async and await keywords yet, but now I have the perfect excuse to do so. Using async, await, and CopyToAsync(), it did improve the performance immensely. It consumed a great deal of the system's memory, but it did merge all of the files within 25 minutes. Unfortunately, though, the Java guys still win out by 2.5 times.
Thanks for the link! Unfortunately, in order to match java.nio, it looks like I might have to do write something a little more involved, including the usage of a memory-mapped file or a managed block of memory.
If you have multiple output files, are you able to process them concurrently? Assuming that you can make a concrete match between a set of input files and a corresponding output file, spool up a separate thread for each output file and hand off the sets of input files.
&gt; Unfortunately, though, the Java guys still win out by 2.5 times. Did you actually try the java way of doing it on the same machine? The java guy can claim he did it in ten minutes, but the time comparison's only valid when they're both run on the same machine.
Just curious does this machine use an SSD? 
I have stopped playing these games with co-workers. Claim all you want, unless you can show me a working sample than can run on more than just "your machine" then all you are doing is talking. So far in this situation I see: * You with a working, tested implementation and some fixes to speed it up immensely vs * Someone who SAYS they can do it faster With my lead hat on take a guess which side I might fall on. Esp since I am going to bet that for this operation the difference between 10 and 25 mins is not the biggest concern here more than ensuring the process is completed correctly. Your working IMPL would have to be utter garbage for me to deeply consider claims from another resource who clearly is not tasked with the work.
Yeah, my next step is to try and reproduce his results (or, in the case that I'm hoping for, to debunk them). I'm dubious as well. Unfortunately, the difference in performance does matter. I wish that it didn't.
His machine does use a SSD, but we're hitting a shared drive over the network for reading and writing these files. I am, at least, going over the network. And he claims the same...but we'll see if that is actually the case.
It *might* be faster to copy them to yours, do your work, and copy them back. It's at least worth a try. For example, when I edited the tags on music files over the network, it was quite slow, but locally it was *way* faster.
Separate *threads* would be too much, tasks would be better.
Make sure you run a performance profiler such as ANTS. You may discover that you're problem isn't I/O related at all, but rather something else that you are doing. Also try to avoid using LINQ in performance sensitve code. It relies heavily on delegates, which are much slower than non-virtual method calls. Especially when the calls are slow and could be in-lined by the JIT compiler.
Sounds like a good execuse to try out TPL Dataflow. 
Very cool, didn't even know that library existed. Will have to check it out.
Run both programs on the same machine. That ought to settle it, although there's the matter of whether your co-worker's code is also correct. If it really is slower you should profile it.
or PLINQ
Try an [ebook](http://www.ebook3000.com/Programming/General/Pro-ASP-Net-MVC-5--5th-edition_212916.html) then github has wonderful projects.
Yes you are absolutely right. Today, I had an coworker explain this to me today. He writes embedded code in C. Thank you for the detailed explanation!
I could help you out here and there.
Seq is great.
Hmmm...well, the two programs are only prototypes to test I/O performance between the Java platform and the .NET platform. So, there isn't much going on at the moment. However, I suppose that it would be interesting to run a profiler, just to see... Interesting point about the LINQ stuff. That's good to know.
http://www.reddit.com/r/programmingbuddies http://www.reddit.com/r/learnprogramming
I Don't know what to try, because I only know how to get the value of a CheckButton on a button click, I only know how to get the value when the CheckButton is clicked.
Malwarebytes Anti-Malware warning
You should probably start by reading some C# and GTK# tutorials then.
Can you please give a couple of examples of github projects i can look into ?
Did you just copy-paste the example from http://www.mono-project.com/GtkSharp:_Buttons#Toggle_Buttons ? Is your problem understanding how they get a reference to the button inside clickedCallback?
I don't know what your output is like, but is it possible to partition the work in such a way that you can write N output files and [cat](http://en.wikipedia.org/wiki/Cat_%28Unix%29) them together once processing is finished? Assuming you're not doing the processing entirely in memory right now and writing to a file as the final step. Also, if there's any sort of algorithmic work going on, maybe your coworker found a more efficient algorithm?
So. You're going over the network... and you wonder why his faster? Every time you open those files to merge them, the contents have to be sent 'over the wire' to be stored in memory. The work YOUR code is doing involves download time as well as merging. If you want performance, do it on the same machine for fuggs sake. 
I would like to know which client sent the data.
Cool. The way I started was just downloading Microsoft's sample apps and modifying and reverse engineering them. My first app was a sample RSS reader where I just changed the URL and colour scheme.
C# isn't checked by default, but your lessThanZero would obviously fail in the if-statement OP provided.
Thank you so much!! 
&gt; although there's the matter of whether your co-worker's code is also correct. not to mention whether it exists. More than once I've had people claim that "X Language only took 5 minutes to do that" only to discover, when I ask for the code that they were "only hypothesizing"... Regardless of language an implementation that exists is going to outperform one that doesn't!
Glad you came here to say that instead of answering his question.
&gt; Also try to avoid using LINQ in performance sensitve code. I'm sorry if I'm picking something out of context, but that can be terrible, terrible advice. The performance hit between a call virt is minimal, but compared to the cost of say memory allocation it can become significant. This is before we get into the inherent benefits from a parallelisation perspective. Given that in this case the biggest bottleneck by far will be network IO, I fear this would be a micro-optomisation, which would reduce the ability to properly leverage things like Rx, which would help make a faster process overall. 
That wouldn't be the first time that I made such a mistake, but this time, I wasn't so foolish. :) Unfortunately, the debug build and the release build had similar results.
Thanks for all the suggestions here (especially in regard to BufferBlocks and TPL Dataflow). I'll be sure to check those out.
*dafuq* do you need his PayPal for? Edit: Ah. Paying. I see.
This is how I taught myself MVC, but it is a little outdated at this point. It's based on Linq to Sql and MVC2 and the input validation is a little wacky. Still an easy read with good fundamentals though. 
Maybe this would be useful: http://www.codeproject.com/Articles/12261/A-BitStream-Class-for-the-NET-Framework
I'll take your word for it, Dataflow came out a year after I stopped working on projects where it was applicable.
Does your client send a GUID?
 void OnClick(object sender, EventArgs args) { Debug.WriteLine("box 1: {0}, box 2: {1}", cb1.Active, cb2.Active); } 
I looked through OpServers code based, I'm surprised by it. Personally seeing models, etc scattered all over the code base doesn't seem elegant to me. :( Models/Security/SecurityProvider.cs why would you bury that inside the models folder? meh personal preferences I guess. 
May be [this answer](http://stackoverflow.com/a/11523266) will help you?
Yes! Thanks a lot!
Thank you, Yeah I've found Monos website helpful so far. Out of curiosity any idea why there are no books on GTK#?
Hmm, to be honest I haven't looked at it in a while. I'm going to have to agree. Upon its initial release I remember things being in much better order. Nonetheless, regardless of file structure, the code itself is still high quality imo.
Read the book and find out?
Awesome, thanks for posting. I've forwarded it to some of the architects at my workplace. There is a lot of scattered knowledge online about how to diagnose and fix .NET performance problems, so it's good to see a consolidated reference.
I downloaded the sample chapter. The book looks very interesting, and thorough. I've added it to my seemingly never-ending list of books to get, even though I should probably be angry with you. Just this morning, I started creating an outline for a C# optimization guide. :)
The book looks great. Unfortunately, the prices on Amazon UK for the hard-copy are ridiculous as usual. $23 in the USA, but £22.50 in the UK, which is more like $38. Even if you count VAT at 20%, that's still an excess cost of $11 (£7).
I was just saying to a coworker, how I'd really like to get a deeper knowledge of the CLR in regards to performance. There are tons of blog posts around "don't premature optimize" or string concatenation this way vs this way is better etc. While I think they are probably all correct in their own way, there isn't a great concise source I have come across related to performance in .Net. Just ordered a copy from Amazon!
This looks very helpful. I know I've had plenty of struggles with performance tuning in .NET over the years, and some guidance would be nice in this area. One question - I'm a bit surprised by this statement: &gt;One of the decisions we made early on was to embrace .NET. This was a decision not to be taken lightly, especially at Microsoft. At the time, there were fewer people who were .NET experts--we would have to become those experts. We took the plunge and have not regretted it one bit. I guess I expected Microsoft to strive to be the industry experts in their own framework. Can you elaborate on why Microsoft doesn't "eat their own dog food"?
If they embraced .NET in its' infancy, I can understand why there would be some resistance by certain individuals.
Save your time and buy a copy! One of the final sections of the book is a short "check-list" like list of things to start with for diagnosing your app's performance. :)
When setting the price of international markets, I looked through existing books and tried to set a price comparable to them. Let me PM you and get your thoughts, as this is in my control.
Went through the free chapter and just bought a copy 5 minutes ago. Looks really interesting and will most definitely help me out in the future.
Hello! I think thats gonna be a pretty easy transition for you, as long as the similar stuff doesnt get mixed up in your head. Very basic stuff: http://csharp.net-tutorials.com/ And quite a bit more in depth: http://www.tutorialspoint.com/csharp/ The last one is probably gonna be great. Good walkthrough, and youll see all the similarities to Java - and prob some of the traps. 
Why are you subscribed here?
They did... it was the cause of the Longhorn reset that ended in Vista. As I've read, many of the user-space applications were written in .Net (which would have been 1.1, maybe 2.0, at the time.) The result was a shiney, but completely unmaintainable/unstable mess. Sadly, this post seems to imply that stigma has persisted for over decade at MS, now.
I think that's part of it, which is unfortunate. .NET 1.1 definitely was not nearly as mature as 4.5 (or even 2.0), but I think .NET probably took some blame for general poor coding practices or mismanagement (I wasn't there--just going off of conversations I've had).
I don't think anyone has a full grasp on what they're doing. You'll be fine. 
&gt; but I think .NET probably took some blame for general poor coding practices or mismanagement From the so called 'insider' stories I've read that was a big part of it as well. Supposedly the core XP/NT team went off to server '03 and Longhorn was left to a lot of 'fresh faces'. But even still, it is a bit of a bummer that there is still an internal stigma about .Net. It's good to hear that that is changing, though. :) 
He literally didn't read past the first couple of words. 
Sounds like the certs are a must..other than that I wouldn't sweat it.
Here's a small, simple, and complete example program that makes 4 CheckButtons and then prints out the value of all of them every time you click one: using System; using System.Collections.Generic; using Gtk; namespace GTKCheckBox { public class Program { public static void Main(string[] args) { Application.Init(); var window = new Window("GTK Check Box Checked Demo"); var buttonBox = new VBox(); var buttons = new List&lt;CheckButton&gt;() { new CheckButton("A"), new CheckButton("B"), new CheckButton("C"), new CheckButton("D"), }; foreach (var button in buttons) { button.Clicked += (s, e) =&gt; { buttons.ForEach(b =&gt; Console.WriteLine(string.Format("Value of button {0} is {1}.", b.Label, b.Active))); }; buttonBox.Add(button); } window.Add(buttonBox); window.ShowAll(); Application.Run(); } } } Example: clicking the second button outputs this: Value of button A is False. Value of button B is True. Value of button C is False. Value of button D is False. Hope this can be of help to you!
Given this example you have provided: &gt; Example: &gt; &gt; if(checkBox1 == true &amp;&amp; checkBox2 == false &amp;&amp; checkBox3 ==false... etc... &amp;&amp; checkBox23 == false){ &gt; &gt; //do x &gt; }else if (checkBox1 == false &amp;&amp; checkBox2 == true &amp;&amp; the rest of the checkBoxes are false) &gt; { &gt; //do y &gt; } &gt; //etc &gt; I would make a dictionary of all the cases, where the key is a case and the value is the function that will run in that case. State s1, s2, s3; // these are your states Action a, b, c; // these are functions for each state // this is a map of your states to your functions var lookup = new Dictionary&lt;State, Action&gt;() { { s1, a }, { s2, b }, { s3, c } }; // currentState is the case you want to check if (lookup.Keys.Contains(currentState)) { lookup[currentState].Invoke(); } 
Just ordered a copy from Amazon, can't wait to check it out!
Does the book get into anything related to Roslyn or .Net Native? I'm curious about the performance impact those will have. Will probably buy it either way!
I do talk about .NET Native, but this feature was announced publicly right before I finished the book, so I do not discuss it in depth. The feature currently applies only to Windows Store applications and is quite limited. However, I do anticipate this technology spreading through the whole .NET ecosystem at some point in the future (we can hope). .NET Native does change how your program is built and the role of the JIT (i.e., none), but things like garbage collection and general use of the .NET Framework all remain the same, and nearly all of the principles I discuss are applicable regardless.
Regarding Rosyln, it is a compiler platform so it won't necessarily impact your programs performance at runtime. There could be some new optimizations enabled during compilation but it would be safe to assume that optimizations you would need to do today in your code would still be applicable, like reducing number of allocations etc.
Could I ask you a question between C# and VB - C#'s twice as fast as VB.... would you have a look at the projects? I'm going to buy the book!
He posted that on another thread as well... I have no idea, but it's definitely spam.
As an ASP.NET MVC developer for the most part, how much will this be of interest to me? I imagine most of my concerns are around my IoC container, and any webserver type stuff?
The entire book market in the UK is extortionately priced, but it's when I see US releases that are mirrored in numeric value (i.e. $20 = £20) that I realise just how blatant it is.
I PM'ed you, but I figure I should publicly state my position on this. The author's price point is fine. It's a reasonable price in an unreasonable market. Unfortunately, the price of hard-copy books in the UK do not track against cost of living or average wage at the same ratio as they do in the USA, despite the fact that both markets import the physical books at almost identical costs. In terms of work hours, it's roughly 1.5x to 2x the cost to buy a hard-copy book in the UK than it is in the USA. Matching the sale price to what the market average is set at is absolutely the author's prerogative. People will pay it. What I object to is the overall pricing model of the British book market. I've been in a position to see what distributors are selling at, and it's offensive. Retail hard-back books you'd pay £20 or £30 for in store are almost always sold at unit prices of below £5, and often below £2. Mass-produced stuff like John Grisham or James Patterson can be sold at £0.30 per unit with a pricemark of £12 or more. The author sees *none* of that fat profit.
Thanks for sharing this and for writing the book, it looks great. I've been waiting a while for a book like this (about .NET perf) to come out.
Yeah this seems to be a general thing, i.e. I've often seen books where the UK price is £20 and the same book is $20 in the US (even though the exchange rate should make them different!) I've always wondered why it's the case?
Massive profiteering by the British book industry. There's almost zero competition around book prices, and I wouldn't be surprised if there's price-fixing going on behind the scenes. I know Apple got in trouble for it a while back.
I read "Pro .NET Performance: Optimize Your C# Applications (Expert's Voice in .NET)" some time ago. I love reading about performance and multithreading, but why do you think I should read yours as well? 
FWIW, I have lowered the prices of UK/EU books a little bit. There are other considerations--if I price it too much lower than comparable books in the category, it can actually drive people away with suspicion. "Well, this book must not be very good if it's so cheap."
As an ASP.NET MVC developer, you still must be familiar with how .NET and the CLR works and this is my focus, and what I felt was missing from the marketplace. I discuss very little about individual frameworks like ASP.NET, WPF, etc.--there are too many. The general CLR behavior discussed, and especially the measurement techniques will definitely apply to ASP.NET and all .NET developers, regardless of specific frameworks.
Computer components are the worst. NewEgg prices are *phenomenally* cheaper than almost anything in the UK, often with dollar figures lower than the price in pounds. If I remember correctly, the nVidia 8800 GTX was about $600 retail on release, whereas it was almost £800 in the UK. Insane price differences.
http://odetocode.com/ http://jeremybytes.blogspot.com/
That is a good point, but does your book provide any guidance about how to figure out which are the right values I should aim for?
I think the book will definitely help you out.
Thanks for providing a free chapter and sharing your experience. Just bought the Kindle edition and looking forward to this weekend.
blogspam
First of all, lines 84 90 96 102 108 do not need *bool* keyword. With this keyword you define new variable with name *playeralive* and set it to False. You don't touch field *playeralive* (i believe you know difference between field and variable). Same with *bool itemgot* in line 68. Now about PropertyGrid. PropertyGrid don't auto-updatable. You need something like *propertygrid1.Refresh()* when it need. 
Yes, of course. You put to the propertyGrid a character instance, but change field of your Form class. 
Hate to do this; How would I do that? I still can't find anything online. I'm sure I've done this before, but my memory is a blank. Many thanks for the help, by the way!
The way you're doing this is not very good and is going to rapidly get completely out of hand as you add more more states and state transitions. I would suggest you model your game in simple classes first without any concern for the UI. Some classes you should think about: * Room - Describes any room you can be in. * Description (string) * AvailableActions (List&lt;Action&gt;) * Action - Describes things you can do. These are your state transitions. * Name (string) - This is what you type to make the action happen. * ActionText (string) - This gets written to the output when you execute the action. * Execute(CurrentState) - This is a method that changes the current state when the action is executed. * Player - Describes the player. * Inventory (List&lt;Item&gt;) * Item - Things you can pick up and interact with. * Description * CurrentState - Keeps track of the current state of the game world. * CurrentRoom (Room) - Where the player is currently. * Player (Player) Your game is a finite state machine. You start from some state then you execute actions to transform the state. Think about it in this context. Build a bit your game like this before you start worrying about the UI. As for UI, the concern of the UI is passing information back and forth between the user the model. So things it should looking for is when properties of the CurrentState change or when actions are executed. When the current room changes for instance, you probably want print out the description of the room you're now in. When you execute an action you want to print out the ActionText. The UI also has to look at the commands you're entering and see if they match any of the AvailableActions of the CurrentRoom and then execute those. The way you have this written current is decidedly anti-object oriented. It's just a big messy stack of conditionals will become more and more deeply nested with much duplicated logic as the number of possible states grow. If you've got specific questions, feel free to ask and I'll do my best to make you understand. I can probably give you some code snippets if describes some scenarios too.
Thanks for writing this - Once I've done this base work (We were only meant to do about two options, it was mainly to show if we can do XML reading/writing), I was planning to rewrite it completely (for fun). I've saved this so I can return to it in the future. Thanks! :D
No problem. Just drop a reply or PM me if you need more info.
This is a weird subreddit to ask this question in. You can use either cookies or `localStorage` in browsers. http://diveintohtml5.info/storage.html
You could serialize your form data to a JSON string and then use [HTML5 Local Storage](http://diveintohtml5.info/storage.html) to store it in the browser to upload later. The code snippet below shows how you could store the data for multiple form submissions. var json = localStorage.getItem("data") || '[]'; var data = JSON.parse(json); data.push({ formField1: document.getElementById("formField1"), formField2: document.getElementById("formField2") }); localStorage.setItem("data", JSON.stringify(data)); 
* [Fabulous Adventures In Coding](http://blogs.msdn.com/b/ericlippert/) pre 2013 * [Fabulous Adventures In Coding](http://ericlippert.com/) post 2013 * [Bart de Smet's Blog](http://community.bartdesmet.net/blogs/bart/Default.aspx) also has a very good series on [the essence of LINQ](http://community.bartdesmet.net/blogs/bart/archive/2010/01/01/the-essence-of-linq-minlinq.aspx)
Try using and appcache.manifest file in the project.
To answer my own oldass question, it isn't as deep as I would have liked but [Metaprogramming in .NET](http://www.amazon.com/Metaprogramming-NET-Kevin-Hazzard/dp/1617290262/) by Jason Bock and Kevin Hazzard has some discussion of them and some other cool stuff. It's got more breadth than depth on most of the topics it covers though.
The good news is the new compiler is open-source, so *you* could have a look. The bad news is you're confused.
string[,] declares a 2-dimensional array. See http://msdn.microsoft.com/en-us/library/2yd9wwz4.aspx. 
just out of curiosity, is this SQL statement known ahead of time? or is determined at run time? 
2d array concept came from the older days when everyone would use the array-of-arrays for this problem. I.e. int[ ][ ] arr; the limitation was there was no way to ensure each sub-array had an identical item count. C# introduced these [,] rectangular arrays to enforce uniformity
Regarding asp.net design there is no concern with sticking this in page load, but as I've now mentioned web forms are quite obsolete.
There're no replies yet, and I have been mulling it over so I figured I'd propose it to the group for comment: I suppose in the MVC/WebForms role, the "root" object of the dependency chain is the Controller or Page. So, if I had an object that acted as the root of my procedure and call a run method on it after resolving it in a Service Locator like manner, then there is only one explicit resolve, and everything else below that is injected. What if in the WorkerRole entry point/main method, I call my code to build my container, and as soon as the container is configured, enter an infinite while loop that gets messages and events then immediately resolve a "root" object inside of my loop for each message/event? This seems like it should work and would keep from having more than one service locator call for each message processor.
Statements like this make me weep for my profession.
Have you checked out ninject? It has a nuget package to start out on asp.Net mvc aswell. Maybe play with that before you write your own implementation. 
Yep, this is how I do it. The WorkerRole is really light and basically builds the container in OnStart, and within the "infinite" loop in Run, it resolves the service from the container and executes it e.g.: using System; using System.Diagnostics; using System.Net; using System.Runtime.Remoting.Messaging; using System.Threading; using Microsoft.Practices.Unity; using Microsoft.WindowsAzure.ServiceRuntime; public class WorkerRole : RoleEntryPoint { IUnityContainer container; public override void Run() { Trace.TraceInformation("Entry point called"); try { while (true) { Trace.TraceInformation("About to do stuff"); var service= container.Resolve&lt;IYourService&gt;(); service.Run().Wait(); Trace.TraceInformation("Done stuff!"); } } catch (Exception e) { Trace.TraceError("Gah! " + e); } } public override bool OnStart() { try { // Set the maximum number of concurrent connections ServicePointManager.DefaultConnectionLimit = 12; container = new UnityContainer(); // Configure container here return base.OnStart(); } catch (Exception ex) { Trace.TraceError("Couldn't start worker role: " + ex); return false; } } public override void OnStop() { try { if (container != null) container.Dispose(); } catch (Exception e) { Trace.TraceWarning("Couldn't dispose of Unity container: " + e); } base.OnStop(); } }
It depends on what you're looking to get, but I do think IoC/DI can be helpful in all sorts of projects. It's not necessarily a huge help for locating that top-level object that hosts all your meaningful code, but the ability to consume dependencies for all of the classes that your top-level class needs is where the value comes in. Increased testability, etc... One thing that I have used in the past is an IoC registration/configuration that scans assemblies for types that implement an IWorker interface. Then in the worker role, I get all instances of IWorker and start them. 
&gt;...string[,] holidays = new string[13,32]... Creates a multidimensional array of strings that's 13x32. If you've never used a multidimensional array before, consider the following: new string[6] looks like Index | 0 | 1 | 2 | 3 | 4 | 5 ---|---|---|----|----|----|---- Value | ␀ | ␀ | ␀ | ␀ | ␀ | ␀ | and is an array with a single dimension. When you instead use new string[13,32] you end up with Indices | 0 | 1 | 2 | [...] | 11 | 12 ---|---|----|----|----|----|---- 0 | ␀ | ␀ | ␀ | ␀ | ␀ | ␀ 1 | ␀ | ␀ | ␀ | ␀ | ␀ | ␀ 2 | ␀ | ␀ | ␀ | ␀ | ␀ | ␀ **[...]** | ␀ | ␀ | ␀ | ␀ | ␀ | ␀ 30 | ␀ | ␀ | ␀ | ␀ | ␀ | ␀ 31 | ␀ | ␀ | ␀ | ␀ | ␀ | ␀ This is useful because if you use the first number (along the top in the table above) as a month and the other number as a day, you can set holidays like the line in the Page_Load method. --- &gt;Does it just mean that each item in the array will be 2 values separated by a comma? The data for the holiday (e.g. "Left-Handers Day", "Valentine's Day") is not necessarily 2 values, just the index (e.g. holidays[8,13], holidays[2,14]) used to access it. &gt;Is there a better way to write this? Better for whom? If you're just trying to dive into a new hobby like programming, this is perfectly fine. Once you're more accustomed to the language, it's pretty simple to read and use. Drawbacks to consider: you now have a 13x32 array where holiday[0,0] (doesn't make sense in the context of month/day) and holiday[2,30] (February 30th) are perfectly valid. If I were performing this particular task, I'd probably read and store holidays as their [ordinal dates](http://en.wikipedia.org/wiki/Ordinal_date) and convert to [Gregorian](http://en.wikipedia.org/wiki/Gregorian_calendar) as needed. &gt;I'd like to be able to update the list of holidays without having to add code manually and ideally from a popup window on a button click. You have a few separate problems to solve here: 1. Display the popup to set (and probably also edit and delete) holidays 2. Store changes to holiday data 3. Read stored holiday data so it'll display properly on the calendar at load time As you go along, break up each task into sub-tasks and it becomes more manageable. &gt;Is it possible to just add a formatted string to the Page_Load method? I'm not sure what you intend here. Are you talking about storing CSS within Page_Load that will change the background color for a given date?
I think... you chose the wrong hobby.
You might be looking for something like https://github.com/proactima/AzureWorkers
if you're trying to calculate 1-2+3-4+...n (which, by the way is just -n/2 for even n and (n+1)/2 for odds n, so you don't even need loops) and display it on a control called txtResultSeries, then this code should work, assuming the function btnSeries_Click is properly bountd the the button event. Of course it would help if you would tell me what the problem is... also: I'm happy to help you on this one, but in the future, consider looking your problem up on [stack overflow](http://stackoverflow.com/) first (odds are someone already encountered your problem and solved it) and if you don't find a solution, stack overflow is where you should post programming questions.
You're pulling the length of the value from the text box rather than the actual value. So you'll need something like the following: int valueInputByUser = (int) txtEntry.Text; for (int i = 0; i &lt; valueInputByUser; i++) { // Whatever calculation } txtResult.Text = sum.ToString(); } However, there's a large flaw with this. If I were to input "abcd" or anything that's not within the range of Int32.MinValue and Int32.MaxValue it'll blow up. So you really need something like this: int valueInputByUser; bool wasParsedCorrectly = Int32.TryParse(txtEntry.Text, out valueInputByUser); if (!wasParsedCorrectly) { MessageBox("Unable to parse entered value into valid integer"); return; } for (...) { ... } } There's **A LOT** of ways to convert strings to integers. For reference: http://msdn.microsoft.com/en-us/library/bb397679.aspx http://msdn.microsoft.com/en-us/library/f02979c7(v=vs.110).aspx
I have searched everywhere, and this was a last result, but in the future I will make a stack overflow account and post there. Thanks! Basically, If I enter a number into txtEntry textbox, then I click the btnSeries to display the alternating series result in txtResultSeries. So, for example, if user enters in 5, the series should go 1+2-3+4-5, and will display -1 in txtResultSeries.
Small side note. No need to declare i outside the scope of your loop since you aren't using it elsewhere. So for(int i = 0;...). Not integral to this particular function, but still good practice. 
&gt; int valueInputByUser = (int) txtEntry.Text; This line will throw an exception no matter what the text is. That's not a valid cast. 
I like that, the comparison with a dialect is one I've not one I've heard of, but that makes a lot of sense. 
Sorry, I've been holiday and I've clearly missed something.. MVC6 is now a thing? Dammit, I've only just got to basic grips with 4. Anyone want to throw me a link? Fuck you time
Good catch.. I wasn't even thinking about struct to object (or vice-versa) casting thing.
Hi! Here is some of everyone's answers compiled together, with a little async bonus (so your main form doesn't 'freeze' while performing a lengthy calculation). private async void btnSeries_Click( object sender, EventArgs e ) { int valueInputByUser; var wasParsedCorrectly = Int32.TryParse( this.txtEntry.Text, out valueInputByUser ); if ( !wasParsedCorrectly ) { if ( Debugger.IsAttached ) { Debugger.Break(); } Debug.WriteLine( "Unable to parse entered value into a valid integer." ); return; } Debug.WriteLine( "Calculating..." ); var answer = Task.Run( () =&gt; { var sum = 0; for ( var i = 0; i &lt; valueInputByUser; i++ ) { if ( i % 2 == 0 ) { sum += i; } else { sum -= i; } } return sum.ToString(); } ); this.txtResultSeries.Text = await answer; } 
You can cast structs to objects and vice versa just fine. But you can't cast a string to an int (or any number for that matter), you have to parse it.
No need for switch statements, all you need is modulo and add/subtract. `y = (x - 1) % 4 + 1`
My two cents is that any time I see this pattern: if (simpleCondition) val = oneval else val = otherval It should be condensed down to: val = (simpleCondition) ? oneval : otherval Like a good story, conciseness is invaluable. 
Thanks for the awesome answers everyone. It was really driving me insane that I couldn't figure out what it was. As a few of you suggested I am looking into the MVC model now I looked at it previously and it seemed sort of confusing but I am going to take another look at it. 
Yah, agreed.. for *this* calculation. :) Just hoping to spark the async/await light in /u/BardaT 's mind.
Correct if mapping 36 to 4 is a requirement. If not, the simplest answer would be just x % 4.
all numbers greater than 4 would be mapped to a number 1-4. A table would look like this. So if a 7 is the result, then 3 will be displayed. As will 11. It is basically a "wraparound" 9 10 11 12 5 6 7 8 1 2 3 4 
Are we really doing this kid's homework? Perhaps it would have been better to help the person understand how to get to the solution rather than doing it for them.
Build your own control or just add images manually directly to a flow layout panel.
Yeah I used the mouseclick event on the slider to get the X and Y coordinates of the mouse and give the slider a value based on the coordinates.
they have said there WILL be breaking changes with vNext but the extent of which is not yet clear it is a Major version release for .net so this will be expected the extent of what you will to manage the changes will depend on what your app will be using there are major changes to HttpContext there are also mojor changes coming for both how the MVC controller and WebApi stacks will work as they are being merged to remove the need to develop features twice based on 2 request paradigms 
in short it is too early to tell yet 
Part 1 deals with a one-to-many relationship. I'm trying to find out about how to solve this problem of reinserted existing objects in a many-to-many relationship in the MS SQLServer database. Or can I find the answer to this in one of Julie Lerman's books or online videos? Thanks.
I'm curious, are there any sections in your book that would help debugging/diagnosing when native images load the CLR and hang/perform slowly? I'm thinking specifically about Outlook, loading .NET add-ons. Maybe a section about windbg and how to use it to diagnose problems? Thanks!
We need more info to help you. Is this a web app? Desktop app? Are there primary keys on the database tables? 
Have you checked in the list of [other articles she's published to msdn](http://msdn.microsoft.com/en-us/magazine/ee532098.aspx?sdmr=JulieLerman&amp;sdmi=authors)? Maybe one of those answers your question even without being the actual article you're looking for. Also, do you have any evidence that she's actually written that article yet? All I see is an "I plan to write this" message. 
If he's looking for an answer to this question, in the absence of knowing where to find the request article, i figured that I'd contribute from my experience writing context-disconnected mvc-ef apps.
If you're doing many to many, why not use a referential lookup? If both tables have primary keys, then create a mapping table with foreign keys to each table and a composite primary. The issue that you're running into is that you're most likely spinning up and setting referenced ef objects with values, where you should be looking up the reference from the database.
I'll see if I can get Julie on to answer this.
I'm in a very similar situation as OP here. I'm a rising Sophomore in college with more experience in Java than is reasonable for a typical college Sophomore. I am for the summer and have nothing better to do, so I'm helping someone out with a huge project they're working on in C#. &gt;As of now, I have no idea of C# - OP **Learning the C# Language with Java Experiance** Have you seen Microsoft's guide "C# for Java Developers"? (http://msdn.microsoft.com/en-us/library/ms228358(v=vs.90).aspx) It is very helpful, and it is worth spending an hour or two to read the whole thing. For anyone who doesn't know Java and checks out that guide, ignore the remarks about what Java can't do, most if not all of them are not true anymore. &gt;I don't even know the difference between C# and .NET - OP [**.NET Framework**](http://msdn.microsoft.com/en-us/library/z1zx9t92.aspx) As I understand it, the .NET Framework is a collection of pre-made tools and constructs that makes your life as a dev easier. It lets you interact with various parts of Windows, and it provides data structures and algorithms so you don't have to waste time writing boiler plate code. It's like the collection of packages in Java that included things like ArrayList, HashMap, Swing, and System.out.println. **What I still have trouble with** I've been at it for two days now, which I know isn't a whole lot of time, but I would say that I have a pretty good grasp of the language itself. It's more or less exactly the same as Java. What I am having trouble with is that I do not know anything about best practices and I do not know enough about coding conventions. I don't know if "best practices" is the best term for it, but here is an example of something I have been having trouble with: Windows forms let you easily create and interact with windows in a way that is comparable to Swing in Java. There is a graphical interface in Visual Studio there is a graphical window designer that automatically generates code. Where should I put my own code so other developers won't get lost in it or frustrated? Is there anywhere online I can find answers to questions like that?
The post is a link to the article...
In "XmlRpcMethodCall-0Params.cs", method "ParseCallXml", the line "paramsElement.Add( reversedParams );" resharper 8.2.1 is showing the error "Co-variant array conversion may cause exception on write operation".
In "XmlRpcDateTime.cs", method "GenerateXml", can be written as " var date = string.Format( "{0}{1}{2}T{3}:{4}:{5}", this.Value.Year, this.Value.Month, this.Value.Date, this.Value.Hour, this.Value.Minute, this.Value.Second );
Thanks for that. I'm using the database first approach. I've got a join table with a composite primary key, made up of the foreign keys. The join table doesn't show in the .edmx file, so it just shows as a many-to-many between 2 tables. It just seems strange that a straightforward answer to this isn't easily available. I'm sure lots of developers need to work with many-to-many relationships. I've been tearing my hair out with trying to avoid non-unique insertions. But I'd be happy to buy one of Julie Lerman's books if the answer is in that. She seems quite good at what she does. Thanks.
Wouldn't this be easier: var date = this.Value.ToString("o"); ...per [this](http://msdn.microsoft.com/en-us/library/zdtaw1bw.aspx) MSDN article? Or am I missing something? EDIT: Disregard. Realized the format string is different.
A nice example to write your first unit test. I'd invest 1 hour learn how to create and use unit tests on a method that has a clear input(5) and output(-1).
Thanks, changed That :)
Thanks, changed it to That. It's `Value.Day` instead of `.Date` though :) Found anything else?
Looking forward to reading this one. Good work! :)
He actually made that way more complicated than it needs to be. For instance, you can load an image with this: Bitmap myBmp = new Bitmap("wherever/the/file/is.jpg"); Why do you need all that steamreadbytearrayyermom() stuff?
Ah, didn't notice the Date-&gt;Day. :) A few of the methods in BaseStruct can be made static. FaultStruct.faultCode and FaultStruct.faultString can be made readonly. These suggestions are showing because Resharper highlights them. It is a really awesome program with a free trial.
Yea, I guess I could make `makeMemberElement` and such static... I'm not using the R# trial because when it would be over, I couldn't live without it. So I'm waiting till I can get it... ;)
&gt; if this is your first time working with extension methods be sure to put the Extensions class in Extensions.cs in the root of your project or it won’t work Err, no. Seems like it's *your* first time using extension methods. The class they're in only has to be in a namespace available to the compiler. I.e. it has to be in the same one as the class where you want to use it, or you have to add a `using` for it.
Yea, the article made other errors as well, see my comment.
You site is cool man :) Keep up the good work.
I haven't personally dealt with it, I do the front end. We have a similar situation where most of our model classes can be expanded to hold custom user properties. We use a combination of shooting json up to the middle tier, and from there they do stuff with ExpandoObject. Not sure on the details, but worth looking into.
I kinda looks at this and thought to myself "why would you do that", but then remembered I am working on a project that does something similar. Here is how I would have my models: public class Customer { public int Id { get; set; } public string Name { get; set; } // something I would always want to hold about the customer } public class CustomerValue { public int Id { get; set; } public Customer Customer { get; set; } // Depending on the ORM you're using you may want to // configure some FK relationship public string Key { get; set; } // Field Name public string Type { get; set; } // Data type public string Value { get; set; } // Data } Basically storing the data as a key value pair. If you wanted to populate a "model" when you created a customer, I would recommend creating a model which essentially is a template and then select it at runtime: public class CustomerValueTemplate { public int Id { get; set; } public string TemplateName { get; set; } public string Key { get; set; } // Field Name public string Type { get; set; } // Data type public string Value { get; set; } // Data } Hope this helps.
&gt; R# trial because when it would be over Aye, I've had that separation anxiety. :P Awesome product.. so helpful!
There are two good Optical Character Recognition API's: the [Microsoft Office Plugin](https://compilr.com/forum/optical-character-recognition-c-using-ms-office-compone) and the [Asprise one](http://asprise.com/royalty-free-library/c%23-sharp.net-ocr-api-overview.html) 
 using System.Xml.Linq; var doc = XDocument.Load(pathToXmlFile); var urls = doc.Elements("media:content").Select(element =&gt; element.Attribute("url"));
Thanks. I'll correct.
You can but I needed to scale it and return image stream in 3 (or more) different dimensions. The round-trip is Load the original Scale serve, end the request That probably wasn't made clear enough. I'll adjust the copy. Thanks for the feedback.
I got a C# programming job with zero C# programming experience. I did have a lot of experience programming in general and in C, C++, Python, Perl, SQL, Java, etc. And I had useful knowledge of the problem domain. And this programming is a library, so our users get an API and documentation as their user interface. This means the fact that I still don't know ASP.net or WPF is not an issue. Programming is a broad area and some parts of it are being outsourced. Some areas are less likely to be outsourced. 
I for one had only a little c/c++ experience and got a job in asp.net/c# development as a junior, learned it fairly fast , in 2-3 months.
As long as you know the syntax and have an understanding of ASP.NET WebForms and MVC you could get an entry level job. But you'll also want to know some SQL, jQuery, AJAX, HTML/CSS, and enough to maneuver around the .NET framework if you want to keep that job for more than a month. 