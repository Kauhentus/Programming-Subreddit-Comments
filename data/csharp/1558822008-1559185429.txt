Once you leave a message with the smtp client its upto the internals of the actual mailserver in how fast it delivers/empties its queue. A faster smtp client wont mean you get your mails delivered faster.
Project does not compile with VS2019. I get a bunch of "Could not locate the assembly" errors. After looking at the project I see that instead of nuget references projects have hard references to DLLs. It is not a good way to do it. Deleting references to DLLs and adding nuget packages instead would make ths solution much more easy to build with no need to keep DLLs in github repo. &amp;#x200B; By the way I was unable to find nugets containing SummarizationEngine.Infrastructure.dll and Summarizer.Core.dll. Where are they from?
Just took a look and you are right. He even called Wikipedia an ultra left-wing website. Yikes indeed.
&gt; I don't see how this is any different from CircleCI There's no need to create your own Dockerfile, and CircleCI will cache the images you pull since it's the one pulling them, instead of a script doing it in an ephemeral build container. It is true that you can use docker-in-docker on just about any CI provider; CircleCI just lets you skip a layer. &gt; Azure Pipelines also allows you to install a build agent on your PC, so that you can use it as a build host. Travis CI makes their build agent available as well, and if you're using a docker-in-docker approach it's a moot point altogether. The point is that because CircleCI pulls the image of your choosing and handles some common tasks like cloning your repository and setting up environment variables for the build, you can effectively just write a single bash script to execute your pipeline and run it. I know you can argue that doing `docker run` is the same thing but I'd disagree.
I suppose it would evaluate and discard the RHS. But I could see people arguing for it to abort without evaluating it. What's the normal order of operations here?
A very simple simple sound synthesis software: [https://github.com/TomaszRewak/WaveDotNet](https://github.com/TomaszRewak/WaveDotNet) In this project I've focused mostly on the editor which I've created using WPF.
It's a compilation error so I guess undefined? I don't think there's an obvious answer as to whether the right hand side should be executed, which might have side effects, so probably the best choice not to allow it.
var = null sets the *variable* to null, ie no address, it doesn't destroy information at the memory address it used to point to. It's just to tell the GC that "no variable is pointing at this memory location anymore, feel free to re-use it," it does not mean that the data disappears. It might stick around for the lifetime of your process, if the GC feels like it.
&gt; I added some manual GC into it which kept it down to respectable numbers but I don't feel like that should be the final solution This is a terrible thing to do and mostly a terrible way to think. You're in managed land **this is outside of your scope**. A .NET vacuuming up memory and GCing when it sees fit **is fine**. Let the GC do what the GC does itself. If you try to control it you'll much more likely fuck it up than do anything good. Get out the memory manager when you've got a memory leak or a bug (e.g. the lack of dispose on the image is a serious memory bug) but outside of that, how your application appears to use memory **is outside of your scope**. You're managed, you don't think in terms of memory anymore. If you need to (e.g. image processing) then you can still create very efficient code, especially with the new stuff (e.g. spans) recently added but you do need to ask yourself if you are still using the right tool for the job at that point. Sorry to be a bit harsh but thinking that running GC.Collect() is a good thing to do should result in an Exception.
Yep. A lot of people have this really weird idea about business software, but the fact is that the only thing that matters is whether it works for their business. It doesn't matter if it uses Modern UI, is a "responsive" web app, or uses the latest technologies if it doesn't actually improve the way their business runs. I work for a company that makes POS, Inventory, etc. style software. Our software runs on Windows. The current product was started in 2001, so it uses Windows Forms. We have plenty of competitors that have responsive, modern-technology-standards-based Model-View-Controller style software. They probably see the software that many of the companies in our specific niche are using- our biggest 'competitor'- which looks like [this](https://i.imgur.com/7Q9cAOK.png). and figure it will be like taking candy from a baby. Probably no different consideration for those that have switch to our newer product. They figure- Make it a modern reflective web app using responsive design principles, adhering to SOLID design standards and test driven data-driven agile development scrum strategies, and people will flock at the mere mention of their name. I can only imagine their surprise that the people using that software care first and foremost about their business and want to reduce the cost of doing business. They aren't exactly going to be jumping on the chance to throw money at you for upgrading their software and hardware, the countless man-hours of training as well as the data migration you figure they should do themselves just because this new alternative uses "modern design". It turns out that a Windows Forms based application that mimics that 'competing' software's behaviour as well as possible paired with full data migration from the old system tends to be a lot more agreeable to business needs than software which basically bullet-points some modern technologies. The kicker here is that because of this, that software in the image is our main "competitor"- and I have to put that in quotes, because that's the software *we released in the 80's*. for decades, Our biggest competitor has literally been ourselves. We can migrate all the data to our current system pretty much effortlessly on the customer's part and we still have a hell of a task convincing customers to switch. Hearing about yet another confident startup giving a proposal is like hearing about a mock execution. I particularly like the ones that are rude during their demos. Yeah, that's a hard choice for our customers I'm sure. Do they move forward with this new company that has existed for like 2 years and says the way they've done business for the last 30 years is stupid and whoever doesn't want to move forward is a moron and they 'need' to upgrade, yet cannot actually give anything but silly technical arguments and dodges questions about the existence of basic business features, or should they stick with the company they've been with for decades with whom they are on a first-name basis with like all the support staff and even some of the actual developers to the point where they call in for support and end up talking about 'how the kids are doing' with a developer while that developer fixes a bug they literally reported during that phone call? Yeah, hard decision.
Half a mb? Half a gb? That's not terrible.
C# isn't the rolls royce of performance, but it's at least a very good sports car. Use it well and you will reap the benefits of the language doing the hard parts for you. Get good at spotting memory leaks, use predictable patterns, don't store things you don't need, implement IDisposible, etc. There's also deconstructor methods but I think they can be completely avoided in the language, though they could shine when you're dealing with native library inter-operation, if ever.
i know
Sorry to be that guy, but there is a well-established Discord server linked in the sidebar with 6000 members: [https://discordapp.com/invite/ccyrDKv](https://discordapp.com/invite/ccyrDKv)
&gt; If this is not correct, what’s the best way to do this? Code that is actually readable and maintainable. Not everything needs to be an amalgamation of lambdas.
Using GC.collect() and me realizing that this should not be the solution along with attempting to use the diagnostic tools unsuccessfully is really what got me to post this in the first place. Looking at the snapshot with untrained eyes was not helpful at all. Not being able to filter out meaningful data resulted in my cry for help.
My personal preference is not to use remove like this... I would just overwrite the original collection with a filtered subset to minimize complexity.
As you come to write more .NET apps you'll note that many of them (even those without .dispose() bugs) will display similar memory hungry behaviour. Its just a case of the system only running the gc and deciding to release memory when necessary or convenient. As a general rule, treat the GC as a wave, something to flow with as opposed to something to fight.
&gt; In general, stick to small memory foot print, short lived class instances as frequently as possible. That’s very surprising—is C# faster at allocation somehow? Or is the overhead of allocation only applicable to opening new sections of memory, not reusing current memory?
FluentValidation i think is what you are looking for
The major benefit of using async in a console app (`async main`) is that you can use the same async library code in the console app that you use in the desktop/web app without dealing with the boilerplate to start the async stuff.
Allocating something isn't nearly as expensive as deallocating it, especially if it's on gen 2
Here is another article that explains [garbage collector design](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/garbage-collection.md). A big part of the reason why short lived objects are _fast_ is because gen 0 is very small. GC runs really fast in gen 0. So fast it’s hardly any slower than if you could just do it yourself. Gen 1 is bigger so it takes longer to collect but it’s still not too bad. Objects don’t promote across generations unless they survive collection. If they are short lived, they don’t survive collection so they cost little to clean up.
Why wouldn't you refer to a path relative to the executing code though?
As someone that likes to in line as much as possible, it's always important to ask if someone can reach your code and read it without having to quietly pause, furrow their brows, squint then whisper to themselves "where.. x.." hover x to see what x is, etc. It's good to know HOW to write that kind of code fluently, so if it's just a learning exercise for OP, cool. But in production it needs to be chunked up until a balance of readability, sugar, and performance is achieved. The above code is too much sugar.
Your code does not do what you expect. SourceDirs.RemoveAll(x =&gt; listSelectedItems.Any(c =&gt; c.Name.Equals(x.Name) &amp;&amp; c.type.Equals(x.type));
Lambda is cool and all that, but sometimes a for loop can be faster and more readable. Also .Contains might be helpful in this scenario if you stick with Lambda. (On mobile otherwise I'd have a crack at rewriting it)
You guys might have a point, but I find lambdas to be more readable (once I understand how to make and read them) than equivalent multiline nested foreaches (what I had before.) And yea, this is just a personal project where I am trying to learn and automate some tasks.
Look into Task.Run() for an easy way to execute stuff on a worker (non-ui) thread.
Here's a compromise between the clarity of LINQ and a for loop. I'd agree that the RemoveAll is easier, but when you nest lambdas the way you have it gets very confusing. If you need evidence, refer to the title of your post. If you're dead set on LINQ for this, use query syntax. for(var c in listSelectedItems){ SourceDirs.RemoveAll(x =&gt; x.Name = c.Name &amp;&amp; x.type == c.type); }
No problem. There is tons of free learning out there too. Once you’ve got a bit of practice under your belt I recommend CodeWars.com for code katas. It helped me learn how to solve various (close to real world) problems and also see how other people solved the same problems.
“Might”? Lol, your code is completely unmaintainable.
Qartz works just fine, I belive redundancy should be "hand made" in a scenario like this where you would setup a monitor for the servers and distribute the workload among peers from a central location.
The \`SummarizationEngine.Infrastructure.dll\` and \`Summarizer.Core.dll\` are another project of mine that depend on them. (Located [here](https://github.com/GuyARoss/Summarizer.Net)) Currently, all required dlls for the project can be found in the distribute folder within the repo directory. Also, sorry about not having a NuGet package open yet. Was going to that sometime next week when I get the time.
I have to agree with majority this code isn't as straight forward as it might seem. And I don't think it does what you think it should. I'd probably just use a for loop to minimize overhead.
Not sure if your setup could work with this? https://www.triggercmd.com/
I don't think that does the same thing as the code in the OP. Your code requires the SourceDir entry to have the same Name and Type property as a single listSelectedItems in order to remove it. OP's code will remove an item from SourceDirs as long as at least one entry in listSelectedItems has the same Name and at least one entry in listSelectedItems has the same Type, but they don't have to be on the same entry. e.g., with the inputs (pseudo code) listSelectedItems = [ { Name: "File1", Type: "txt" }, { Name: "File2", Type: "pdf" } ] SourceDirs = [ { Name: "File1", Type: "pdf" } ] Your code would leave SourceDirs as is but OP's code would remove the entry.
I guess for quartz I thought from the reading I've done you could set it up to use a shared repository such as a db and run multiple schedulers. My thinking is the scheduler would be able to call the function needed from either setup.
As a rule of thumb: * if it is a complicated LINQ that's pretty important, I use the Query syntax. * if it is a fairly simple LINQ that's less important, then I use the Fluent syntax. HINT: if you have Resharper, it can convert them back and forth for you.
Hangfire is amazing. The jobs just work. Hooks well into stuff like serilog. The only issue in general is keeping the site live. If is sleeps the jobs don't run.
Yes you are on the right path
Use MailKit instead. And use Hangfire to put the mail sending in a background job.
Well even though I was one of the people advising against using so many lambdas in one line, I don't know that I'd call it unmaintainable. First off, his code wasn't going to work, and u/quentech did make a post below where the code would work, is in-line, and I feel it's readable enough. I guess it depends on whom you work with too. The team on my last project, I would not leave quentech's code in there. They'd definitely ask me about it later. My current team? No problem.
It's called null coalescing assignment and will probably be in c# 8 in later revisions. &amp;#x200B; [https://blog.ndepend.com/c-8-0-features-another-glimpse-future/](https://blog.ndepend.com/c-8-0-features-another-glimpse-future/)
No, without the ? in the middle.
It's definitely not a prefered method over what you suggest, just wamted to mention I got it to work this way in the past 🙂
Hangfire is nice and easy to roll out.
I went for the nuget package in the end but now I'm getting a load of runtime errors from Nez.Core I cant figure out :| I might just stick to vanilla Monogame for now.
There's a Nuget package for DotMemory which will allow you to measure allocations and deallocations. I'm pretty certain it works without owning dotmemory as it runs on our build servers. VS has good tools built in these days, but it's easier to isolate things in a test. &amp;#x200B; You should never (never say never) have to manually invoke GC, you need to figure out what's being allocated at such an alarming rate :)
example: public class MyClass : IDisposable { private bool disposed = false; protected virtual void Dispose(bool disposing) { if (!disposed) { if (disposing) { // called via myClass.Dispose(). // OK to use any private object references } // Release unmanaged resources. // Set large fields to null. disposed = true; } } public void Dispose() // Implement IDisposable { Dispose(true); GC.SuppressFinalize(this); } ~MyClass() // the finalizer { Dispose(false); } } &gt;If a destructor has been invoked, all resources still need to be cleaned up. However, in this case, you know that the destructor must have been called by the garbage collector and you should not attempt to access other managed objects because you can no longer be certain of their state. In this situation, the best you can do is clean up the known unmanaged resources and hope that any referenced managed objects also have destructors that will perform their own cleaning up.
You should only declare a finalizer if your class owns unmanaged resources such as OS file handles, and you can't or don't want to use use `SafeHandle` for whatever reason. In general, finalizers should not be relied upon and should only exist as a backup in case a consumer of the class doesn't correctly dispose of the objects. If your class owns child objects that implement `IDisposable`, then your class should itself implement `IDisposable` and call the dispose method of any owned child objects. https://docs.microsoft.com/en-us/dotnet/api/system.idisposable https://docs.microsoft.com/en-us/dotnet/standard/garbage-collection/implementing-dispose
I'm not sure I understand this reply. Does this mean I should not call `.Dispose` in Class `A` that is using that disposable object at all and instead write a destructor for the disposable object?
But the problem is that I'm trying to decouple my classes so the consumer doesn't have to worry about this one case out of hundreds that has to dispose its disposable field. It is something like this: `IOperation[] ops; foreach(op in ops) op.Run()` If I implement `IDisposable` on this one alone then that code has to add an `if(op is disposableCase)` to call its `Dispose()` and that makes things ugly.
you can but with knowledge that finalizer/destructor can be called when objects are destructed already, so `Dispose(..)` is calling with `false` argument. Better is to use `IDisposable` only - with `using`.
Using `using` would dispose of it in place, my disposable item is a field that needs to be used in multiple functions so I can't dispose of it in one of the functions. If it was only used once then of course I wouldn't have had the problem to begin with.
if you use destructor, you should remember that other referring objects can be destroyed by GC already, so their usage may be dangerous. But if you will not use such objects or you are sure that they exist - no problem. Btw, you can always do explicit `Dispose()` call - like in C language without any GC: you keep references (objects), use them, then call explicitly some own function `remove_unused()` which will deallocate references which are not needed more. You can do the same in C#: mark unneeded objects with some flag and then to dispose marked objects.
There isn't (or shouldn't be) any point in calling another type's dispose method from a finalizer. If the child object owns unmanaged resources then it should already have its own finalizer that'll run regardless of the parent class. It's not pretty, but the safest solution is to have `IOperation` inherit `IDisposable` in that case and have an empty `Dispose` method in the operation types that don't need it. That's also how `IEnumerator&lt;T&gt;` does it, even though most enumerators don't have anything to dispose.
If you make account on [Microsofts's dev essentials](https://visualstudio.microsoft.com/dev-essentials/), you'll get 3 months free subscription to Pluralsight
What is your background my friend? &amp;#x200B; I am asking because you asked for more advanced course in one of the comments.
Op expects name AND type to be equals to source. OP's code also doesn't work. But if op wanted name OR type, you just have to replace &amp;&amp; by || .
My advice: don't guess or ask on reddit/SO/wherever, but write soms unit tests. Then debug the ones that fail where it's not immediately obvious where the mistake is. The sooner you make a habit of writing UT's, the better.
Would you open source your program on gitlab or GitHub or something? Makes it way easier to talk about. And maybe I can also learn of some of the pitfalls of memory management.
I'll check them out
Then wrap each of the functions in an enclosing using.
I know C, then HTML CSS and JS, plus other stuff for web dev
Haven't read all replies, but here is the general idea: You want to control when you dispose IDisposables, that's why the pattern exists. You don't control the finalizer at all, it might not ever happen! By using the IDisposable, Dispose functions and the using pattern, you gain control back.
TL;DR: don’t use destructors/finalizers.
Don't rely on the finalizer being invoked. It doesn't has to be invoked. https://ericlippert.com/2015/05/18/when-everything-you-know-is-wrong-part-one/ https://ericlippert.com/2015/05/21/when-everything-you-know-is-wrong-part-two/
I feel like I've gained a significant amount through just talking about the abstract ideas. I'd rather keep the discussion focused on how I'm letting 3Gb of orphaned bitmaps build up instead of disposing them properly.
&gt; But the problem is that I'm trying to decouple my classes so the consumer doesn't have to worry about this one case out of hundreds that has to dispose its disposable field. Would you rather have a couple of extra lines of code, or a memory leak?
That’s correct but isn’t what I was saying. You’re probably replying to the wrong post. I was saying that using an if condition to compare against null generally doesn’t work in C#. string s = “”; if (s) {} // won’t compile This would work in many languages because it would either be treated as “if s has a value”, “if s points to a valid memory address”, or similar. It doesn’t work in C#, unless your type specifically supports it.
Good point. After reading the replies here I've decided to change the code around to call it in one of the functions. Didn't know I can't rely on destructors.
&gt;Sdk="Microsoft.NET.Sdk.WindowsDesktop" thank you, setting the SDK to that was all I needed!
I'd say unless you're writing framework code with new features then feeling the need to create destructors is code smell or at least a hint of bad design.
Post the xaml code
How about you take a moment to fully realize how LINQ is useful: It's deferred execution. This means a variable holding a select statement does not cause any extra memory usage, until it is iterated. So instead of creating silly one-liners, create a new variable holding your filter, name it properly so that anyone immediately understands what the filter does. Then use it in a remove call.
 SourceDirs .RemoveAll ( x =&gt; listSelectedItems.Select(c =&gt; c.Name).Any(x.Name.Equals) &amp;&amp; listSelectedItems.Select(c =&gt; c.type).Any(x.type.Equals) );
 SourceDirs .RemoveAll ( x =&gt; listSelectedItems.Select(c =&gt; c.Name).Any(x.Name.Equals) &amp;&amp; listSelectedItems.Select(c =&gt; c.type).Any(x.type.Equals) );
Some questions from a UWP newbie: * Shouldn’t the event handled be unsubscribed from as well? * Is this a solution in need of a problem? You’re allowed to pass parameters via ‘parameter’ just use a nested class inside your control for strongly typed parameters e.g. MyPage+MyPageParameters.
If your calling code doesn't know if the objects it's getting are going to be IDisposable then it should assume they are. It's the responsibility of the calling code to clean up after itself. If (myOperation is IDisposable disposable) { disposable.Dispose(); }
Definitely yes on the event unsubscriprion. That will cause a memory leak.
Very good questions &gt; Shouldn’t the event handled be unsubscribed from as well? Indeed it should, and that's what the first like of `OnNavigated` does. &gt; Is this a solution in need of a problem? True, however passing parameters to a method is much more convenient than having to write a new parameter class for each view. But this actually enables many other scenario: For example the view can now have custom events and the parent view can handle them easily. This can also be done via the messenger/mediator pattern, but I find this to very nice for simple cases.
I was addressing the stated goal, not the incorrect code.
I think the right side would be evaluated and then you'd get a null reference on the assignment. Yeah, that has to be it because a side effect of the right side could change the nullness of the left side.
The runtime allocates a large chunk of memory ahead of time—zeroes it out and gets it ready for consumption. Allocating an object is simply the act of incrementing a pointer on the object heap. This is why it’s so much faster than directly calling something like malloc().
Does the `init()` method runs after 'this.initializecomponent()'?
Yes, because \`InitializeComponent \` is called from the constructor. This is the order of the methods called: 1. Constructor 2. InitializeComponent 3. OnNavigatedTo 4. Init 5. Loading 6. Loaded
Please correct me, but shouldn't the \`frame.Navigate(...)\` method runs until \`Loaded\` method ends, then followed by \`page.init()\` method?
I don't really think an extension method is right here because it looks like you're invoking a method on an object that could be null, which one would expect to throw a NRE. You don't really want to make that pattern something that your brain sees as ok.
That's what I feared at first too, but if page1 consists of this code: ``` public sealed partial class Page1 : Page { public Page1() { this.InitializeComponent(); Loading += Page1_Loading; Loaded += Page1_Loaded; } private void Page1_Loaded(object sender, RoutedEventArgs e) { Debug.WriteLine(nameof(Page1_Loaded)); } private void Page1_Loading(FrameworkElement sender, object args) { Debug.WriteLine(nameof(Page1_Loading)); } protected override void OnNavigatedTo(NavigationEventArgs e) { Debug.WriteLine(nameof(OnNavigatedTo)); } public void Init(string param1, int param2) { // Initialize the page Debug.WriteLine(nameof(Init)); } } ``` This will be the output: ``` OnNavigatedTo Init Page1_Loading Page1_Loaded ```
What's a chance of it being a race condition instead? can you add a 100ms delay for the `init()` method and check the result again?
I just signed up for it; it is only a month trial. Still useful though! &amp;#x200B; There is also a 2 month trial of DataCamp which has courses for R, Python, and ML.
SQLite.
You can use a queue service to queue mails and have it pop each off in a background and work the queue down.
Here are the cases: * If the method calling \`Navigate&lt;&gt;\` is synchronous and \`Init\` is synchronous, then \`Init\` will always be called \*\*before\*\* \`Page\_Loading\` * If the method calling \`Navigate&lt;&gt;\` is async void and there is \`await Task.Delay(100);\` between \`frame.Navigate&lt;&gt;\` and \`page.Init()\`, then \`page.Init()\` always starts \*\*after\*\* \`Page\_Loaded\` * If the method calling \`Navigate&lt;&gt;\` is async void and \`page.Init()\` is async and returns Task and is being awaited, then \`page.Init()\` always starts \*\*before\*\* \`Page\_Loading\` and finishes \*\*after\*\* \`Page\_Loaded\` As you can see, only in case 2 \`Init\` is called after \`Page\_Loaded\`, and that's to be expected because that's just how async works: it doesn't block. If you make \`Page\_Loading\` async void and add a 100 ms delay, then \`Page\_Loaded\` starts before \`Page\_Loading\` finishes. But you can also do your own tests to be more sure
SQL: \- SQLite \- Firebird \- MySQL \- PostgreSQL \- VoltDB \- SQL Server Express
Do you mean ordinary asp.net? This is kinda easy
SQLite. Nothing else that I know of.
Does it show x:Uid in this particular text block? It should so. Then you can edit an appropriate string in the resx file which contains resources. It should under Strings/&lt;language&gt; folder. There you will find an entry with a corresponding Uid
The filesystem?
If it is a small application with one type of data try using a flat file to keep things simple. If you need relational data at a small scale SQLite is a great option. If you need the data store accessible by multiple clients or with a large data footprint then something like Postgres or other major relational database would serve (I would also look at introducing an API but that is beyond the scope of this question). Ideally start as simple as possible until it causes an issue and then get more complex as it becomes required.
Other than what has been mentioned there's also [LiteDB](https://github.com/mbdavid/LiteDB) if you want to go the NoSQL route.
Woops, you are totally right. You would need to use a static method and pass the object as one of the parameters.
How sophisticated does it need to be? You could just use a JSON file and encrypt the values yourself (AES-256 or something).
Thanks, they must've changed it, I haven't used it in a while. I have to admit though, that I abused that free trial with fake emails for a very long time.
The finalizer is expensive and has issues. You need to make it idisposable
Yes but no. If the finalizer isn't invoked, I have much bigger problems. And once I fix them, it **will** be invoked. The articles are correct technically, but a poor way to go about things.
No it didnt you fucking moron
&gt; correct technically, but a poor way to go about things What is this supposed to mean? Pretty much the only advice in the articles on how to go about things is "It is therefore very difficult indeed to write a correct finalizer, and the best advice I can give you is to not try." Eric Lippert knows what he's talking about; this is not a poor way to go about things. I don't think I've written a single finalizer in over a decade of professional C# use.
If it is windows only ESENT is integrated with windows. You can try this. https://github.com/microsoft/ManagedEsent Otherwise if you want SQL or other platform support SQLite is a great choice
You're downvoting me just because I disagreed about whatever with Lippert, I think. You're also arguing something entirely different. OP claims that finalizes might not run. My point is, yes, but **if they don't**, there's **way** bigger problems with the code. When these are solved, finalizers do run just fine.
SQLite with EF
It depends on the data, because you haven't given enough information. You said, "it should be difficult to read through text editors or encrypted" But WHY? What kind of data is it?
Why not write a unit test and see for yourself?
I still don't see what about the articles makes them "a poor way to go about things". Not ever running is only one thing that can go wrong. The best general advice about finalizers (and the advice that applies to this thread, I should note) is to avoid writing them. It doesn't take some massive defect in the code to prevent a finalizer from running. An OutOfMemoryException can do it A deadlock in one finalizer can do it. But then, even if they do all run, most of what these two articles are about is pitfalls that arise *while they're running*. These pitfalls do not make it impossible to write a correct finalizer obviously, but they make it very difficult. The good way to go about things is to not write them if you can avoid it, wouldn't you agree?
Either full framework or core running in IIS. Keep alive settings haven't worked for me.
Saying that finalizes won't run is a poor way to think about things, that's what I am saying. Getting an OOM when in a finalizer is a **bug** in my code (finaluzer is **cleanup**; what kind of cleanup allocates anything?!). Locking whatever in a finalizer is a **bug** in my code. =&gt; It's my fault that the (other) finalizers didn't run, I need to fix that. And once I do, finalizers **do** run. Hence, when Lippert says that they might not run - yes, but he is missing the bigger picture / going about things the wrong way.
Makes sense.
Why don't you just make A disposable and do it in the dispose method?
First question you should ask yourself; what kind of data is it? heavily relational, then go with SqlLite or another relational DB type. If not perhaps some No-sql flavor like LiteDB. Question 2: Do you want to use an ORM, then check support for that ORM &amp; DB combo. Question 3: Does the DB have encryption built in or do you see yourself encrypting the data yourself? Whichever DB path you select, dont tie your selection tightly to your application; your calls to the database should be against an interface so that if you happen to change DB in the future, your application and tests will not even notice b/c they'llbe unaware of HOW the data is stored - you could even start with simple text files on disk as storage. Happy coding.
Some of these aren't ideal since you'd have to have them installed. That may be fine.. might not be. OP didn't give enough information.
&gt; Getting an OOM when in a finalizer is a bug in my code (finaluzer is cleanup; what kind of cleanup allocates anything?!) It's not OOM inside the finalizer, and it's not the finalizer allocating anything. It's OOM in the program and then the jitter might need to allocate memory to compile the finalizer when it tries to execute it. &gt; Hence, when Lippert says that they might not run You keep talking about "might not run" when very little of the Lippert articles are about that scenario. I know that "might not run" is what the parent comment mentioned, but 95% of the content of these articles is not about that, and yet you keep saying that Lippert is missing something. Every C# expert will tell you to avoid writing finalizers if you can. Are they all missing something or going about things the wrong way? No; writing a finalizer when it's avoidable is what's going about things the wrong way.
Entity Framework provider for ESENT. I thought it might be a good idea to see the internals of ESENT, used by Active Directory, Registry etc. And since it's internal to NT architecture, it might be an alternative for SQLite on Windows desktop applications.
This will depend on how much data, what data you want to hold and how fast you want to retrieve it.
More this than any other reply. OP: you need to be more verbose on your requirements if you want a more detailed reply. There are so many differentiating factors on this that nobody can really be sure what you need.
Aka SQLite
No
You could always encrypt JSON. I've always used Newtonsoft JSON. Here is an article that explains how to do it https://docs.particular.net/samples/encryption/newtonsoft-json-encryption/
If the finalizer is invoked, you already screwed up. The only time it runs is when you forget to call Dispose. It's a fallback for bad code.
Just stick it in blob storage
If you're using SQLite in a performance-sensitive context, try my library: https://github.com/zmj/sqlite-fast
use Costura.Fody
Why? EF has a supported provider that works well. Unless you can post tests that prove your "performance-sensitive context" in contrast to the providers supplied by EF you're not going to win the hearts of many SQLite users.
How's that gonna help anyone?
it embeds dependencies into the library or binary
years of really basic stuff. print hello world to the screen. now make a loop that keeps printing it. make a number guessing game. draw a pixel on the screen. draw a line.
By doing things
Thank you
What framework is the project targeting which is referencing your.netstandard project? Could be this issue if it is.net 4.6.x https://github.com/dotnet/standard/issues/481
So you throw a nuke on what most likely will turn out to be a slight misconfiguration of project files?
What does the project look like that is referencing the project and what does the project referencing the newtonsoft.json package look like? Can you post the two files (maybe anonymize your namespace names etc. If you are constraint by company rules)?
I’m actually just going to unsubscribe from r/csharp because I’m just an idiot. all I ever do is try to help but I’m never good/smart/helpful enough for anyone. everyone, including you, already knows everything. you help the guy. I’m done trying to help
Here's the best documentation I can find. https://xunit.net/docs/shared-context It would appear that `IClassFixture&lt;T&gt;` is what your looking for, but you do not need to worry about having a second constructor.
Don’t mind they guy, he has his head so far up his ass
Yeah, always keep your vision in mind. Know your vision. Know the future. Just be omniscient.
Oh yeah, that’s a great point. Roslyn was cutting-edge in that regard: it was a total rewrite so that it could be completely modular and reusable by third parties like us. I used it to replace CodeDom for .NET code generation on a project of mine.
Some of these comments, honestly. Ignore the trolls. I'd recommend you buy a book or download one about C#. Start with tutorials, simple stuff and build on it. There's plenty of examples online and YouTube is also a good source of knowledge. If you can afford to pay, try pluralsight website. It's really good for content and I'm currently going through their Angular course. Once you feel comfortable, try building a simple project like a command line app. It doesn't matter what, but keep practicing your skills and using the knowledge you learned. More importantly, stick to one language at the time ;) https://www.amazon.com/Ultimate-Beginners-Guide-Learn-Programming-ebook/dp/B07PFW5T7Z/ref=zg_bs_697342_3?_encoding=UTF8&amp;psc=1&amp;refRID=P5ZRY4WT4362QYPFFV79 https://www.amazon.com/C-Depth-Jon-Skeet/dp/1617294535/ref=zg_bs_697342_5?_encoding=UTF8&amp;psc=1&amp;refRID=P5ZRY4WT4362QYPFFV79
Watch youtube tuts and do lots of stuff
But you weren't trying to help the guy. You suggested to someone who seems to be rather new to the .net world (seeing as he doesn't know that small errors in flowing dlls through a project tree are quite common here and there), that the unqualified answer to his problem is using an entirely new framework and a component that is reweaving the pe32 compile output of a csharp project. You didn't ask for more information and while you were at it you suggested something that will most likely will result in type mismatch exceptions or something similar once he has to do more with the json.net APIs and the rich ecosystem around it. Don't insult me like I am the mouthy asshole know-it-all for asking you to be more specific about the direction of your help, if you obviously have no real intention to help him/her.
You can jump in pretty easily on Microsoft’s site. Just google C# tutorials. But much like learning a real language you need a place to practice, leaning in a vacuum by reading a book will not get you very far. So find something you wanna do and try making it. Doesn’t have to be complicated, like outputting text you type into a console into a text file or something like that. You can easily google different parts of it, like writing to a text file in C# or reading text from a console program. Those should be everywhere. I would argue against learning about things like Dependency Injection, or Separation of Concerns at the very beginning. Once you start learning more you’ll run into issues and then you will actually realize why those things exist. Right now they would only confuse and complicate things for you. Running through simple exercises will help you learn the syntax and rules pretty well. Also feel free to DM me, I learned through the help of tons of people and I love teaching people what I’ve learned. If you get stuck reach out. Though I challenge you to try and solve problems on your own because a trait of a good programmer is the ability to learn and adapt. But honestly sometimes things are documented poorly or confusingly. I don’t think I’ve ever worked on a project where I was excited about jumping into documentation to learn a system haha.
Are you coming from another language? Or is this your first?
You have any good starter tutorials for this? I keep running into dead ends on Google/YouTube.
You should get away from thinking about setup outside of the test. It's an anti-pattern that couples your tests together and makes them harder to understand. Start with a method to build your SUT. When you find common setups, expand it or move to another class which can create your SUT in a more declarative way, leaving the test easy to understand without coupling like you get with a single "setup." The constructor and IClassFixture interface allows you to use a fixture to give you common methods. I use it to provide myself access to a test DB or HttpClient methods for integration tests with great success.
I missed the first line of `OnNavigated`, thanks.
Are you from the WarWizard gaming forum? Sorry, I had to.
*"This is a prototype under active development. Use at your own risk. Expect bugs and breaking changes."*
Redis. Simple and easy.
Yep, it will do everything you need as long as you're not going too advanced.
Lmfao it's been a while since I've seen that.
Excellent advice! I especially love point 3. After cloning a repo and following the README, it is infuriating if a project won’t build or the test suite won’t run or pass. Just to clarify point 2: you mean reference NuGet packages or other projects in the same repo not check in NuGet packages (*.nupkg files), correct?
RavenDB. Very low friction to develop and change your object model
I did a lot of things that used programming logic that weren't actual coding. Using the trigger editor in Starcraft 2 as a part of making custom maps. Creating crazy formulas in Excel. Later I did some python with the book "automate the boring stuff". It's a good book but I didn't finish it. Ultimately I need a goal to learn coding. Now I'm making a game in Unity. Unity uses C# and I've learned a lot. Though sometimes I wonder if I'm missing out on any fundamental knowledge or mind set since I didn't learn from school or with a book. Most of it has been learned by googling specific issues, or trial and error.
Regarding #2. Just adding references to nuget package in the project works fine. Visual Studio or dotnet command line tool can retrieve proper versions of nuget packages. No need to add anything extra to the repo. So no nupkg files for publicly available nugets.
Yeah I want to learn c# so I can use unity, I’ve made a simple game with it.
and many people have made the mistake of using "advanced" database features, only to find they are trapped in maintenance hell.
I recommend Quartz .NET
I am taking an online course at a local college. I tried udemy for python but I realize I needed something that would put more pressure on me to keep learning. It's a noncredit course but I'm just doing it to learn a skill. If I like it, I'll enroll in the intermediate c# course next. It's 6wks long for $120. Sure there are cheaper alternatives but if I get this language down then it's a great investment.
Been a while since I've seen that actually. People started doing that and I had no idea what was going on. It was a troll of a troll. I had never heard the OG one before.
You're trying to fully encapsulate the other DLLs? It's not that comment I think. Look at embedding the DLL and extracting at runtime?
This is why my personal stance is to incorporate a CI pipeline as early in the process as possible. Repeatable builds will save you sooo much headache down the road.
Use any open source SQL framework and Dapper.
Yes I was about to comment the same thing about #3. When people clone something, they really like to have it build with very little effort. If you’d like to have other people contribute to your project then this is a major step.
Depends how much data. Easiest would be json or xml encrypting/decrypting the stream. Json real easy if you want to change stuff later on.
Well I am referring to stored procedures and complex triggers
Well then sql of some description it is. Just need to make sure it handles triggers and proceedures. Not all of them do
I don't have the full context, but I assume you're going to iterate SourceDirs after this line of code executes to remove the selected files by name? If that's the case, I would filter out your collection and not mutate SourceDirs. The important part of Linq is the q part stands for query. What makes this approach helpful is that you can easily unit test this sort of filtering logic and apply it to other collections you may need to perform this on.
There's a lot of good beginner YouTube channels. Brackey's is great!
Yeah I’ve done brackeys, he kinda helps.
Thanks Lloyd. Can you say why. I'm interested into he reasons. Tx Ash
I have to disagree with your point. This post solves a problem of making the code more clean. We use a unified setup for shared context, for something heavy that should not be re-initialised. It's a legit case, because we want tests to be **fast**. I am well aware how to do both things: case setup and suite setup. But it seems to me that both are impossible, since both are done through public constructors and XUnit did not support more than one public constructor.
Because `A` is going to be used abstractly and other classes like it don't need to be disposable so it doesn't make sense to make this one disposable either.
Yes, but that was not my question and I specified on my post that I am aware of this. In the docs they don't mix both cases (setup for test suite And test case). They either run a method once per class or for every test method.
&gt; Initialize repository with README I remember [this SO answer](https://stackoverflow.com/questions/19982053/how-do-i-add-an-existing-solution-to-github-from-visual-studio-2013) said you shouldn't initialize with README. This is VS 2013 and I've always stuck to it, has this changed?
The fact that you view your tests as having "suites" that need \*setup\* in the same way shows exactly the flaw I'm talking about. &amp;#x200B; The NUnit philosophy is wrong. You should not be doing that. Ever.
If I have a client that need to connect to dB, I don't want to recreate connection every time. I totally agree that normally it's not needed. Another example- UI tests. You don't want to open your app once and keep running test cases for a single target within a suite, with teardown to reset the state after each case. There is no wrong or good approach here, you just eliminate steps, which have no reason to be re-called.
1. Watched videos to learn basics for beginners like the video in sidebar titled "C# Fundamentals: Development for Absolute Beginners". 2. Started coding. Which means I started projects that I liked and each time I encounter any issue I search on Google and usually find an SO answer that helps me. 3. Shared my code on GitHub and got some feedback, also a couple of times posted here and asked for reviews/feedback/guidance and got good pointers that helped me a lot.
Yeah, and I'm pretty sure I've already asked you that before. I think I'm hilarious for some reason, despite all evidence to the contrary.
I honestly do not know. Maybe the reason is the use of Git plugin with visual studio. &amp;#x200B; In any case README is important. It does not matter how it is created.
Started using powershell at work to automate tasks, once I was familiar with that, I was asked to do projects where C# was a better tool. Was an "easy" transition.
I'm unsure what you are trying to do. Can you be more clear?
I need to display lists of data in certain ways (which I call display types). I have a different user control for each display type, and they all have similar methods. I want all of these display types to inherit from one class that has all of these methods
Where is umbraco?
Do you have any sample code on what you're trying? To calculate this, you'll need the following: - StartTime - Any Pauses (start and finish) - EndTime Subtraction will work fine, just make sure they're all in the same time-zone.
Don't have the code rn but i can post it tomorrow. &gt;Any Pauses (start and finish) so i should also count the pauses? and the pauses should be on another field right?
We should consider implementing deep learning algorithm for this project
Umbroco is still not for .Net Core.
Yes. You have a start and end time, and a list of pauses. Using that, you will be able to determine how long a task takes. You don’t want to count the paused time so you will need to subtract that.
Make an interface that contains the signature and such of the method, implement that interface
But how? My user controls already inherit from userControl
Classes can implement as many interfaces as you want. If you want to do inheritance then create a class that inherits usercontrol . Then have your two user controls inherit that class
Yeah, stupid me :-)
&gt;After a push to Github do a test: clone repo to an empty folder and make sure that it can be built. Use CI/CD that will build and start tests on your app instead of doing it manually.
I don't think it has, creating the repo with a readme always caused me problems on the first push. The solution I found to this was either a) create the readme on your local machine and push it later or b) start at github (which I usually do more often now). Create a repo with readme, a license and .gitignore, clone it to your machine, create the solution in the repository, add the code and then push.
You can only inherit from 1 other class, but you can inherit as much interfaces as you want (as long as the class implements the interface ofc). But your question is still to vague to give any specifics.
How about StartTime, EndTime, TimeElapsed (Also maybe, InitialStartTime, if that's neccessery) Where `StartTime` would be a start Time, `EndTime` would be the end (e.g Pause) and `TimeElapsed` would be TimeSpan: `Substract`(StartTime `From` EndTime) Each time EndTime is assigned, you take EndTime-StartTime and add it to TimeElapsed and reset StartTime.
Last time of my contribution to open source AngleSharp I added some minor fixes and tests without building a project, lol, cause it was hard to build it locally. So much unresolved dependencies and problems with building scripts just made me contribute without running own code :D Pull request was accepted. After accepting I figured out how to build solution, but it was funny anyway.
Github is fine. But I rather use azure devOps which triggers an automatic build and tests for each pull request.
And blockchain. We need more chains.
What I've always done is to create the repository on github, copy the link, push code to that link then add ReadMe and License via github and then pull them to my local solution. That way License is the default so I don't have to copy anything, and ReadMe has preview so I can write the markup properly and avoid mistakes.
Obviously multiple inheritance. C# supports that. Lol don't trust me
can you expand on "too advanced"?
But they do need to be disposed because of that property. If you have to dispose something you should really use an IDisposable.
I used to think a simple task that can be tracked or automatized by an app, so I could start thinking about how to do it. You can start with a to-do list app, and add more features as checks for completed tasks, set an archived task list... so you can learn by doing stuff!
The code is the easy part, getting someone to find a repo is what I find impossible. Marketing open source software projects is as hard as commercial software.
What do you mean by GitHub sponsors? I have been begging GitHub for almost a year to provide advertising so open source developers can make money from open source. &amp;#x200B; I used to code an extra 50 hours trying to earn one extra free trip to Starbucks than the month before. Based upon my salary and hourly rate this is pretty dumb (pennies per hour), but it was code I was going to write anyway. &amp;#x200B; As for C# not being a "good" language, I strongly disagree. I based my career on Microsoft 20+ years ago, and I have watched a bunch of "fad" languages come and go. I was offered pretty good money to learn Cold Fusion and some other langues before C# came along, but with Microsoft behind something there will always be companies that need Microsoft skilled developers to build and maintain systems. &amp;#x200B; All that being said, I am very worried about my career after 20 years, because if you do are not constantly learning new skills you get left behind quickly. The AI C# robots are probably coming only a few years after self driving trucks, and then we can only hope are robot overlords will feed us.
Will I be able to use the designer?
You just made my day the @themistik. I just read about it here: &amp;#x200B; [https://searchsoftwarequality.techtarget.com/blog/Software-Quality-Insights/GitHub-Sponsors-pledge-to-OSS-developers-sparks-debate](https://searchsoftwarequality.techtarget.com/blog/Software-Quality-Insights/GitHub-Sponsors-pledge-to-OSS-developers-sparks-debate) My really long emails to Git Hub paid off! &amp;#x200B; First I woke up at 2:30 AM thinking I had to work today, and then I found it is Memorial Day and I feel like a kid and school was cancelled. &amp;#x200B; Now I find out about GitHub Sponsors, and it is not even 4 AM. I will do the dishes and go jogging before the sun rises today. &amp;#x200B; Now I have the same problem as a tree falling in the woods. Even with ad revenue, if no one finds your projects than 0 times times money per ad view is probably not a very high number. &amp;#x200B; What a glorious day it shall be.
GitHub is where it's at for collaboration. You can use [Azure Pipelines with GitHub](https://github.com/marketplace/azure-pipelines).
Didn't you heard the news about GitHub Sponsors ? I never said C# was a bad language. In fact, I even say : &gt; So I'm a C# dev, and I really want to specialize into C#. It took 3 years to finally choose the language I wanted to focus on, but I'm 100% sure this is the language I want to work with. I doubt I'll choose a language I find bad as a specialization.
Add a license!
Why exactly do we need a checklist for that? Shouldn't that be common sense?
This might be the A - B - C reference problem. It basically says that if B =&gt; C and A =&gt; B then A =&gt; C. So in other words you need to reference Newtonsoft.Json from A (your other project) as well. Alternatively you can use something like Costura.Fody to embed the reference in B (your dll).
(also u/Manitcor u/mashedpotato78) So I also changed my viewmodel list property to: private ObservableCollection&lt;Measurement&gt; _inspection; public ObservableCollection&lt;Measurement&gt; Inspection { get { return _inspection; } set { if (_inspection == value) return; _inspection = value; RaisePropertyChanged("Inspection"); } } and I started to be able to change collection itself do e.g. this Inspection.Remove(Inspection.First()); and it worked, but clearing the view of Count property still didn't. So I ended up with ugly method called after each operation changing item's properties or assigning new collection to my Inspection property: private void AsignAndFilterCollectionViews() { FaultsCollectionView = new CollectionViewSource { Source = Inspection }.View; FaultsCollectionView2 = new CollectionViewSource { Source = Inspection }.View; FaultsCollectionView3 = new CollectionViewSource { Source = Inspection }.View; FaultsCollectionView.Filter = item =&gt; { var f = item as Measurement; if (f.Group == "O") return true; else return false; }; FaultsCollectionView2.Filter = item =&gt; { var f = item as Measurement; if (f.Group == "P") return true; else return false; }; FaultsCollectionView3.Filter = item =&gt; { var f = item as Measurement; if (f.Group == "C") return true; else return false; }; } I feel I should do it different way.
You can avoid using unsafe in #5 with Span public void WithStackAlloc() { Span&lt;VectorStruct&gt; vectors = stackalloc VectorStruct[5]; for (int i = 0; i &lt; 5; i++) { vectors[i].X = 5; vectors[i].Y = 10; } }
Thanks. Fixed now
Nice, didn't know this existed. Thanks.
I laugh every time; for a while it happened a lot. Now it is pretty rare so I get a chuckle. I legitimately thought there was some forum... &gt;_&lt;
&gt; Do not add any compiled binary files like dlls, obj files, and executables to the repo. Use Nuget packages or reference projects in the same repo. Here's my go to gitignore for NetCore projects: https://github.com/dotnet/core/blob/master/.gitignore Here's a repository of gitignores in a variety of technologies: https://github.com/github/gitignore
Well, there's two .NET providers in core for SQLite... the Microsoft one and the other one (System.Data.SQLite, version 1.x). At the moment, the other one is better.
For #2: Actually you add compiles to the repo under releases
The count property does not notify so if you have it wired to your view you wont see it change properly. If you need to keep track of the "comings and goings" of your collection the easiest way would be to implement your own collection type that inherits the ObservableCollection. You can then override the OnCollectionChanged method of observable collection and update a count property that does support notification. The other way you could do this is by listening for the collection changed event in your VM and updating a count property you track in the VM. I personally hate event wiring so I tend to go with the wrapper approach myself.
An program to convert IL code in compiled assemblies to new instructions which wil be emitted by ILGenerator and invoked via a DynamicMethod object. Functionally the same, but no reflect-able code.
Just FYI, both VS Code and Visual Studio have markdown extensions that let you do a full pane or live side by side preview.
Its worth noting that often these sorts of techniques are not necessary for decent performance outside of applications that specifically do heavy lifting. I've done a lot of performance tuning in my time as a contractor and for the most part the biggest gains come from stupidity as opposed to micro-optimisations such as these. I only say this to encourage people not to start out an algorithm using these tricks because it will just make your code needlessly chunkier. These techniques should be applied to hotspots ONLY that you derive from analysing your problematic application.
I'm going to apologize if I'm just ignorant here. But why are you writing to tables in a test?
I have a testing database, that is being used solely for stored procedure unit testing. So every test cases I will clear the tables Im using, populate them with test data, then run the SP and doing assertion.
&gt; Shouldn't that be common sense? Ideally, it should be something we don't have to think about. Until then, I appreciate people like OP who are trying to help raise everybody up through education and knowledge sharing.
At this point I think a Cake/Nuke build script (or anything alike), that 1-click builds the entire project, should be pretty much a standard. It's very easy nowadays, to prepare an easy build system for any .Net project.
Take a look at tSQLt, it is a Unit Testing framework for SQL Server.
I really love using the gitignore generator to begin with: [https://www.gitignore.io/](https://www.gitignore.io/)
So your transaction doesnt have to be committed - the data that you add or update during the transactions is available in further queries during the current transaction. For instance in SQL you could do: begin tran insert into mytable(...) values (...) select * from mytable &lt;--this will select the data from previous statement rollback During this transaction, other developers will not see this data in their own queries. So you have the right idea about how it should work. As far as I know, though, transactions are connection/session based, so maybe your library is doing its queries through separate sessions or something.
I already did before, but I want my test data to show in specflow in c sharp code, so business/QA can easily change the test data and add test cases without knowing how to code
o Thanks, that solved one of my concern. However if the **TransationInformation** is the same does it matter if it's in a separate sessions? cause I did monitor the transaction with **transactionCurrent**, and they are the same throughout the whole test case run. It even change status to abort right after the **Dispose()** method is called.
I recently wanted to try gRPC but dropped it again quite quickly. The framework is nice, but the fact that there is no way to generate Protobufs from C# Pocos kind of broke it for me. Rewriting Pocos to proto wouldn't be too bad, but going that direction effectively locks you in that one framework if you don't want to spend a lot of time. So sadly I'm not going to use gRPC until there is a way to do it, even if it would require super extensive and verbose Attributes to support proto generation I would still do it because I can keep my Pocos if I would want to use another lib another time.
IIRC the constructor of the class that contains the tests always runs for each test, even when using IClassFixture. So that constructor (with class fixture, or without) would always be the test case setup. The lifetime of the IClassFixture implementation is shared between tests, so your test suite setup would be in the constructor of your class fixture, and you'd hold state you need to share in there.
You can try it yourself. If I uncomment the constructor, it throws an exception that there can be only one public test suite constructor. https://github.com/Almantask/TestingLessons/blob/master/Frameworks/Playground.Tests.X/ChickenTests.cs
ChickenTestsFixture's constructor would be the suite setup.
Yes, but If I make the constructor which uses fixture private, it doesn't get called. If I make both public, it fails.
You only need the one that takes the fixture. The constructor of the test class still runs once per test. The fixture contains the state that you want to share, so it's constructor is where you would put the suite setup.
"common sense is not that common"
Setting up CI/CD for the first time can be intimidating. It should be the next level checklist item.
Yes. So one constructor is for suite, one for case. Can't I have both?
In NUnit it's Setup and SetupOnce
The easy way is just selecting VisualStudio gitignore when creating repo. Emphasis on easy.
Wow, I didn't know that. Did a search and it looks cool. Thanks.
It should but for some reason C# open source developers screw up these things more often than other languages
&gt; The main caveat is that the data needs to be UTF-8 (or, technically, an Extended-ASCII SBCS like the Windows-125x code pages and such... all Cursively does is scan for _0x0A_, _0x0D_, _0x22_, and _0x2C_ and pass slices around). Soooo does it handle multibyte characters at all?
You can have the same concept, but the setups are in different classes instead of a single one.
This would be the second level checklist. I would recommend MIT license but that is just me. Other developers may have different preferences.
Setup is in fixture class (outside constructor) but in order to use it, I need public constructor within my test suite.
Just do not forget Readme and gitignore ;)
Proper implementation is a bit more complicated. Source must be tagged and outputs should have no unnecessary files. I would not worry about this.
My only line in gitignore is: *
&gt;&gt; The main caveat is that the data needs to be UTF-8 (or, technically, an Extended-ASCII SBCS like the Windows-125x code pages and such... all Cursively does is scan for _0x0A_, _0x0D_, _0x22_, and _0x2C_ and pass slices around). &gt; &gt;Soooo does it handle multibyte characters at all? UTF-8 multibyte characters all have the leading bit set, so they're guaranteed not to clash with the 4 bytes that Cursively looks for, therefore they will pass right through as pure data. I can't speak for MBCS, even those that are supersets of ASCII, because I can imagine that they can legally include ASCII-range bytes as trailing bytes in multibyte sequences.
The fixture class contains your SetupOnce, and your test class contains your Setup. The constructor that takes the fixture is still a Setup, you just take the fixture so you can use the shared state contained in it in your tests. In the chicken example, the Setup is pulling the shared state out of the fixture and assigning it to a member of the test class. The lifetime of that object is bound to the fixture and not the test class, and the same object is passed in again and again for any number of tests.
Ah.. Got it! Basically xulUnit has 2 kinds of setups: one to pass shared context and one to use no context. Thank you for patience, that took awhile to realize.
https://docs.microsoft.com/en-us/dotnet/api/system.net.sockets.socket.select
&gt; 5..... When increasing the number of items from 5 to 100, the difference is even greater – 82ns : 36ns. I think you might be measuring something else (accessing array items instead of allocation) when you increase number of items. The following two give me the same performance: VectorStruct[] vectors = new VectorStruct[1000]; fixed (VectorStruct* vp = &amp;vectors[0]) for (int i = 0; i &lt; 1000; i++) { vp[i].X = 5; vp[i].Y = 10; } and VectorStruct* vectors = stackalloc VectorStruct[1000]; for (int i = 0; i &lt; 1000; i++) { vectors[i].X = 5; vectors[i].Y = 10; }
That looks like what I want. Do you by chance know if I can put some user data into the socket? Like MyClass or numberID?
Interesting... I'll have to do more checks and update the article. you've got a point there
If I understand your question correctly, your thinking at an abstraction layer a couple above the layer at which sockets operate: they’re simply bitstreams. You can read and write bytes to them, that’s it. Making sense of that bitstream is up to you. It sounds like you want to serialize instances of a particular type or class then send that serialized data over the sockets.
I think you may want to change how you are doing this. If I understand correctly, the ID field is returned apart of some query from a database (sqlserver?)? Instead of immediately binding the data to each form component, instead have the database call return some sort of list of objects that can provider some mapping of how these things are related to each other. For example, you can have something like this: private DropDownList GetListData&lt;T&gt;(IEnumerable&lt;T&gt; formControlMapping) { var dropDownList = new DropDownList(); foreach (var mapping in formControlMapping) { if(dropDownList.ID == string.Empty) { dropDownList.ID = mapping.ID; } dropDownList.Add(new ListItem { ID = mapping.ID, Text = mapping.Text, Value = mapping.Value }); } return dropDownList; } private IEnumerable&lt;T&gt; GetFormControlMappings&lt;T&gt;() { var result = new List&lt;T&gt;(); using (var sqlConnection = new SqlConnection()) { sqlConnection.Open(); using (var sqlCommand = sqlConnection.CreateCommand()) { sqlCommand.CommandType = CommandType.StoredProcedure; sqlCommand.CommandText = "dbo.get_some_proc"; var reader = sqlCommand.ExecuteReader(); while (reader.Read()) { //Include your rows from the database here. } } } return result; } The calling code will just call the function that returns the mapping and pass the results onto the second function, which will then return your populated dropdown list. This logic can then be further broken up and thus, easier to be tested (GetListData can simply return only listitems and therefore only perform mapping to a listitem.
How long does each test case take? Seconds or minutes? Depending on the transaction isolation level and the DML statements, once the transaction is open you could have locked rows/pages/tables i.e. affected other developers running their own test cases.
I'm comfortable reading/writing to the connection, but this isn't http, there's some states that is kept alive between read/writes. I need a way to associate the state with the tcp client.
Would it make sense to have separate lightweight databases that are generated on the fly per developer and destroyed on completion/failure (and results logged elsewhere) as opposed to the potential devs blocking other devs during tests?
Again, that’s an implementation detail at an abstraction layer above sockets themselves. And again: you have to make sense of the data - including any state associated with it (state is just data too, after all) - on your own.
on average around couple of seconds. A few bulk testing (over 1k record) takes around 1 minute. I talked to my manager, he also told me the same thing as you said and he suggest we just have a test database for all developer, and pipeline will also have its own db. So I dont need the transaction anymore, but I still want to find out why it's not rolling back
Apologies if I’m misunderstanding, but it seems to me like the “TL;DR” version of your post is: “I wasn’t very attracted to Open Source development when the only return was altruistic, but now that there’s money involved I’m interested”? If that’s the case, you grossly misunderstand the true motivations of Open Source software and the developers that create it.
Thanks for the suggestion I will do some research on that!
&gt; All bytes in the UTF-8 representations of code points that require more than one byte have the leading bit set, so they’re guaranteed not to clash with the 4 bytes that Cursively looks for (or any other ASCII-range characters), therefore they will pass right through as pure data. Ah. Sounds good.
No, this isn't the main reason i'm more interested for Open source, but it's sure a motivation factor.
Interesting information. Please remember not to optimize prematurely. A huge, huge majority of your code does not need to be optimized and doing so will be a net negative for your code base in the long run.
My point is that if you’re truly interested in Open Source, money cannot be a motivating factor. That’s actually the idea behind the Sponsorship program: it’s not called GitHub Bounties for a reason. It’s designed to support monetarily those already doing good work altruistically, not opportunists.
Well, they shouldn't make this, because it will attract opportunists, i'm sure of it
That's not really a valid criticism. You can use reflection to generate proto files from poco classes. If it hasn't been done, someone will end up doing it soon.
That’s your argument? “Let’s not make this cancer vaccine, it might attract opportunistic counterfeiters.” All choices have trade-offs.
So my choice is to support Open Source but to also win some money if I could with my work when people feel I should.
If that’s really your only goal the you should be working on getting an actually-well-paying job at any one of the myriad of Open Source companies or those that contribute directly to OSS. I assure you’ll make so much more money there than you could ever hope to make with sponsorships, and probably be able to have a far more outsized impact in the OSS community as well.
I never said this will be my only source of income. I already have a job and I don't plan to stop anytime soon. Github sponsorships are just bonus.
Not really meant as criticism, just some convenience I wouldn't want to give up for now. I wish I had the time to do something like this, I read a lot of other opinions with similar reasoning by now. Would love to work with gRPC!
Not once in any production system or anything I've worked on on the side (nontrivial stuff) has GC been a problem, IME, and I _was_ working with it since beta 1.0. The only time I've seen issues is when you weren't paying attention to how long your references were sticking around or I misunderstood how to use the library (TPL Dataflow- which is AWESOME) or it was a native lib wrapped in .net that had a leak (crystal reports report viewer). Am I unusual or are other people missing something that I'm not?
Maybe not answering the question exactly but have you looked at 'dynamic locking' in Windows 10. Tie it to your phone so when it's out of bluetooth range your machine auto-locks. [https://support.microsoft.com/en-gb/help/4028111/windows-lock-your-windows-10-pc-automatically-when-you-step-away-from](https://support.microsoft.com/en-gb/help/4028111/windows-lock-your-windows-10-pc-automatically-when-you-step-away-from) (if you use a low power device you can make the range a few feet...)
There is a feature built into Windows that might help here, it's called a "password"
Yeah that wont work for me. Have no problem if anyone in the house uses it, just not borrow. I consider this the first phase of my security feature. Second would be to figure out how to trigger it remotely.
Ah cool, yeah it's not easy to do this in C# as you'll need to use Interop (e.g. see [http://csharphelper.com/blog/2015/05/make-windows-shutdown-reboot-log-off-lock-hibernate-and-sleep-in-c/](http://csharphelper.com/blog/2015/05/make-windows-shutdown-reboot-log-off-lock-hibernate-and-sleep-in-c/) ) however I don't think you \*can\* interfere with Ctrl-Alt-Del as that's a core signin function in Windows (I \*believe\* it's a core part of the login mechanism). Kind of the reason I mentioned an alternative mechanism.
Yes i know, so does rest of my household. The thing is my mother is the "mother" of the rest of the family. So she just allow everyone to borrow my stuff, because the need it.
GC behavior is irrelevant for 99% of applications. I can only think of one time it mattered at my job. We had a 32-bit application (.NET Framework 4.0), which introduces that 1.4GB (ish) memory limit. We started seeing OutOfMemoryException popping up occasionally, but we knew we were staying well below the limit. The fix ended up being deep clearing our dictionaries: clear the lists inside before clearing the dictionary itself. I dunno why that worked. Simplifies the object graph maybe? We haven't seen the issue since. I'm stepping into game dev with .NET Core today. We'll see how GC handles that.
Of all of the .NET ones I've used or looked at, it's always been the one thats come out on top. For a while FluentScheduler was looking promising but its pretty much dead unfortunately. Quartz on the other hand supports .NET Core, async jobs, dependency injection. Hangfire has always seemed like the odd one out. First it was tied purely to the ASP.NET pipeline meaning everyone was using it inside IIS meaning that it would just die when IIS decided to recycle the app pool. Then they realised this is shit and supported running in proper long running processes like Windows Services. The fact that was an after thought has always put me off using it.
Looks cool! Novice question: can I use this on TSV files by setting the delimiter somewhere?
Tx Lloyd
It sounds a lot like you don't understand how a password works.
The thing is i have no problem when anyone in my household uses my laptop since i have a desktop and i can access when i need it. But i can't do it when my extended family takes i a few kilometers away for a week.
&gt;Looks cool! Novice question: can I use this on TSV files by setting the delimiter somewhere? Not right now, but I think it can be done without meaningfully harming CSV performance. I'll throw an issue on the GitHub project when I get back to a regular PC.
What if each spec step does DB stuff in a using... new TransactionScope(TransactionScope.Required) ? That should force them to enroll in the ambient transaction
I agree with you, but some of the tricks shown here I would just consider best practices. For example, if you know (or can estimate) the size of a list, why wouldn't you allocate it that way? You might as well follow the best practices. On the other hand, some of the tricks are extra optimization work, so can be used only as needed.
Did you look at the WCF converter I mentioned in the article?
Oh sorry I don't go on reddit much Here maxtime =Math.Floor(Math.Log(1+((rate -1)*money/(base *Math.Pow(rate,curren))))/Math.Log(rate)); I realise I didnt calculate base first before divided it
I really like GRPC, and I would be using it for my application API, but there are issues using it in some common C# situations: - The .NET Native compiler has an outstanding bug when compiling projects that use GRPC, so that hoses UWP apps. - A GRPC server cannot be run as an Azure App Service. They recommend using a VM for this. This makes secure communication an annoying manual effort.
\&gt; but i'm not getting the correct data. &amp;#x200B; In what way is the data incorrect? Are the time periods too short? Too long? Is it orders of magnitude off, or is it off by a factor of two or less? Are any of the values you calculated correct?
This article uses the word "deallocate" as if that's something that actually happens, but it doesn't. Objects aren't deallocated, they just don't survive to the next area of managed heap. What actually happens is this: when your managed heap runs out of space (or some other conditions are met), the runtime just looks for all the objects that are reachable, and pastes them into the new area of the managed heap, all squished together. The unreachable objects die all in one go. If you have free memory on your managed heap, allocating a new object is extremely quick: bumping up the heap pointer by the size of the new object. With generational garbage collection, the runtime is even more clever by splitting objects into generation 0, 1, and 2. So if you constantly allocate lots of small throwaway objects, it's only generation 0 that has to be relocated (not a typo), not the whole managed heap. The CLR and JVM are designed for this, this is how they want you to program. If you want your GC to be more efficient, make your program simpler by having a shallower tree of references that it needs to search through to find reachable objects. Don't worry about random allocations of strings or other small short-term objects here and there, just make sure the fundamental hierarchy of your datatypes isn't too deep or complicated. And don't hold on to stuff that you don't need. If you *really* want to be efficient (and these topics are unnecessary for most people!), then learn about cache oblivious algorithms and arrange your program as structure of arrays (SoA), look into existence-based programming, SIMD instructions etc. Structs and classes are both unfriendly to the CPU cache: https://software.intel.com/en-us/articles/memory-layout-transformations https://blogs.msdn.microsoft.com/seteplia/2017/01/05/understanding-different-gc-modes-with-concurrency-visualizer/ https://docs.microsoft.com/en-us/dotnet/standard/garbage-collection/fundamentals
From what I've seen in the past, these freecodecamp courses are basically repeats of courses done by other YouTube channels. They are very well done, and they usually pick a really good teacher to feature for each language or concept. I personally haven't looked at this one but I might go ahead and do it anyway.
Looks like you have a two-byte packet length (so Int16?), a 1 byte message type and the rest is the payload. The payload looks like a text/string prefixed with a 1-byte length (11).
You probably want to use TcpListener &amp; TcpClient or UdpClient and async API's. They'll just automatically continue on awaiting whenever there is data and just share using the thread pool threads.
It never hurts to watch videos and read articles. You'll pick up some here and some there. Eventually you'll put it all together and you'll have some decent skills.
[Personally I like this](https://www.youtube.com/playlist?list=PLmeB_MFz6Y44GpLhDxptC8qx6y6k6TSF2)
Yeah that's what it looks like, but I'm starting to wonder if the \`varint\` is taking place here, I don't know much about it so if someone comes along and can confirm whether this is the case that would be cool, and also explain a bit more in-depth what a \`varint\` does.
What is a Kafka-esque abstraction? Just general nightmare code? I have one client where a developer went on to work for Amazon and all his C# code used Dictionary and Tuple for everything. And this was before the Named Tuple compile time help existed. The irony is the developer works at Amazon on their debugging tools. I often had nightmares my first month on the job that I would joke about with coworkers by saying things like, "Think this problem calls for 5 tuples".
Vue or react if you are interesting in frameworks. If you're good with javascript that's really all you need but I really enjoy working with Vue.
&gt; used Dictionary and Tuple for everything ah, a data processor as I call them. Someone that doesn't tell stories with classes but expects you to slot everything into their head like they do. &gt; What is a Kafka-esque abstraction? Just general nightmare code? I was thinking specifically of this ASP.NET Webforms front-end I once worked on where there were multiple entry points onto the page (the order in which the components rendered) and they all instantiated this list class which had the layer of services baked into it. So basically it did a full db round trip per component. It was okay when there was only a few things to display but they were asking me why it sucked when it had 10k. It was fetching the 10k nine times.
I will look more into Vue...React feels a bit weird but I guess that's cause I just started.
Store it in a `Dictionary&lt;Socket, MyData&gt;`?
If someone wants your code that badly, they'll get it, won't matter if you use obfuscation, I don't obfuscate my code, but whatever code I want to keep private I don't share (especially when written in C#).
You not going to learn properly by reading guides and watching videos, if you really wanna learn C#, start coding in C#. You can obviously use videos and guides as reference, but if you not coding yourself and learning from your mistakes, you'll never learn anything.
If you are looking for video tutorial I wouldn't waste time on Youtube or anything. I would suggest you to get free 1 month of Pluralsight (via Visual Studio Dev Essentials) and go through all courses under beginner: [https://www.pluralsight.com/paths/csharp](https://www.pluralsight.com/paths/csharp)
As a game developer, GC issues are common problems due to the nature of the beast. This guide has some great ideas for ways to cut down on lag spikes due to garbage issues.
Could be variable length int encoding, but you'd have to see more example packets to be sure.
That's fair- games I could see... isn't it mainly use as a scripting-type language in those situations though? Unreal isn't written in C#, as far as I'm aware (C++), but uses it for scripting iirc.
&gt; clear the lists inside before clearing the dictionary itsel That should have been ok- if it's not freeachable, which normally, things wouldn't be in that situation, it ought to be just fine. I'd suspect you have references someone else without realizing it, or that it wasn't pure .net code and was maybe wrap in a .net callable manner behind the scenes... but who knows. Without, let's say the Ant profiler, it's hard to tell for sure. &gt;GC behavior is irrelevant for 99% of applications. right- which is why it feels weird to me that I'm seeing articles like this. I normally only see them on the java side...
Unity is strictly C# these days, they've abandoned all the weird junk which is great.
the core graphics engine is C#? If that's the case, then I'm certain their doing a lot of weird stuff that wouldn't apply to everyday business apps, etc.
Now that you mention it, I'm not sure exactly. In order for things to be buildable to multiple platforms (including webGL) you are actually right that it's a scripting platform that uses C# syntax. At least for some build options. I think it mainly gets turned into C++ since you can use IL2CPP or Mono depending on build options. This has me questioning a lot of assumptions I was making though. I should probably take another pass on how all of this gets finalized, but I am pretty sure they still use GC somewhere along the line because they have profiler data for it.
&gt; stepping into game dev Nice! &gt; with .NET Core Color me intrigued. Does MonoGame support .NET Core? Looks like the last release is 2017?
I'm mapping SDL and OpenGL myself. I'm fairly comfortable with the entire tech stack. I've done a lot in C++ in the past. So, engine from scratch!
"`Dispatcher.Invoke()` will execute synchronously on that thread". That is exact but could be confusing so let's break it down. The call to `Dispatcher.Invoke()` will execute on the same thread. But the lambda (or delegate) inside `Dispatcher.Invoke()` will execute on the thread that dispatcher represents (usually the UI thread). When that execution returns, it will continue on the original thread that called `Dispatcher.Invoke()`. In other word, the calling thread is **blocked** until the delegate/lambda has finished execution. Two cases scenario: 1. `Dispatcher.Invoke()` is called on the same thread than the dispatcher (UI thread), then it is at best useless, because there is no need to do so (the point of a dispatcher is to send the execution of a method/delegate/lambda to a different thread. But worst, in some cases it can cause deadlocks: for example if you also call `Dispatcher.Invoke()` from the lambda (or indirectly through a different method call). In such case, if you don't need to wait for the end of the execution, `Dispatcher.BeginInvoke()` should be used instead. 2. `Dispatcher.Invoke()` is called from a different thread (e.g. background thread). This is the main usage. For example you start a database query in a background thread (because it takes time). Then when the query has finished, you want to update your UI through the viewmodel. If you are not careful and don't do that from the main UI thread, it can cause some binding/animation/etc. to not work (as well as some race conditions). Therefore, you use `Dispatcher.Invoke()` to execute the UI update in the UI thread.
Nice! I was working on something [similar](https://github.com/Beffyman/DsvParser) to make some stuff at work more efficient.
Nice little checklist for newbies to GitHub and/or C#. &amp;#x200B; A few points I might add: * As others have mentioned, it may be wiser to not add the README while creating the repository online, as it may cause some minor issues with the first commit for someone unfamiliar with GitHub source control, which I assume is the target audience for this post. * Don't assume everyone is using Visual Studio. I personally am on Arch Linux and use Rider, while others might be using VS Code, MonoDevelop, SharpDevelop, etc, etc. I usually add the all the "common ignores" to every project, which is good also for anyone who might clone/fork it (`.vs`, `.idea`, **/bin/**`, `**/obj/**`, etc). Your IDE may even include some of these for you if it has integrated source control. * Cloning and testing with each push is extremely redundant, unnecessary, and just plain old-fashioned annoying. There are plenty of circumstances where it is perfectly acceptable to push a commit that cannot even be build, that is what "releases" are for. Those you are what you want to ensure are in good working order. There are services available that integrate with GitHub that can show at a glance the pass/fail status of a project in its current state.
OMG, I can't believe I just learned of this, been doing manually all this time. Thanks:)
Yeah, I can't say that our "deep clear" changes definitively solved the issue on their own. We made a number of changes. We were simply suspicious of the GC with regard to abandoning those multi-level dictionaries, so we added the step to gut them all on disposal. I guess we'll never know. We're moving onto the next major version of that application, which is rewrite. :P
Unity is contributing stuff to C# that solve game dev problems. It's really interesting stuff. While C++ has higher _potential_ performance, it's difficult to coerce the language to generate certain patterns (vectorized/unrolled loops, etc.). Unity has a blog post somewhere showing off a segment of engine code that was ported from C++ to C# because the Unity devs can know with more certainty that it will produce the desired result.
&amp;#x200B; * I never had problems with README when creating repo online. Maybe I just stumbled on an easy way to do it. I usually create repo, clone it and then add other files. * Github provides quite impressive default .gitignore file. Even if it says "VisualStudio" it covers multiple other file types. There is even a section for Rider. If may not be ideal in all cases but it is a great starting point. * Cloning with each push is overkill. I had in mind the first big commit. Sometimes solutions cannot be built at all because of some hardcoded path or leftover project.
That document you have appears to be outdated. This terraria packet library is treating the message length as an int16 https://github.com/tylerjwatson/Multiplicity/blob/master/Multiplicity.Packets/TerrariaPacket.cs
Lol, I just scrolled down on the this thread and say someone mention that VisualStudio option. I have somehow been missing that all this time, and been doing manually. :P &amp;#x200B; The README now or later is very minor, would only possible cause an issue with someone completely unfamiliar with source control in general, might wonder why they can't immediately push code to their new repo. I don't do it that mainly just out of habit from years ago.
I see, very well explained. Thanks
Not trying to discourage you, just want you to go in fully informed. AI is a huge area of study. Even trying to define exactly what you want to do requires more knowledge than the average bear. As long as you understand you're not going to knock this out in a few weekends, then have at it! It's a growing area of study and you'll always be able to use what you learned. C# is fine for AI, and most AI is not particularly system intensive unless you're crunching enormous data sets. I'm not familiar with Kagerou Project, so I can't speak to specifics. If this is just for fun (i.e. you're not trying to recreate Siri or Google Assistant), you might want to check out ELIZA and work on something along those lines.
I have no experience in the health industry. So I don't understand your question.
Planing to work a while on it Ene is basically a virtual assistant with a personality and a body that can move around the screen and across devises.
If you plan on doing a hard coded chatterbot, then C# is great for this. You don't need any special specs, simple bots are not very resource intensive. I recommend you lookup AIML and try to do something similar.
Are you already experienced as a coder, maybe with another language? If you're a complete beginner with no experience or knowledge of coding whatsoever, in my experience those videos of the basics are well put together, yet basically useless. There's no way that 4 hours of non-stop infodump sticks to your brain unless you chop it up in topics yourself, which can be hard given that you don't know the subject and therefore you can't properly gauge when you should stop and review. The best way to learn at home IMHO is to take a proper online course (you can find them for really cheap, or even free if there's some promotion), so that the topics are divided in lessons that make sense, accompanied with exercises; because the real point is: unless you write code yourself, follow allong and maybe experiment a bit, you're not going to learn anything. If you don't do that, it may seem that you're understanding, but you're going to forget everything by tomorrow morning.
Idk Setting AppVeyor for the 2nd time shouldnt be that time consuming
I am not wanting to make a talk box necessary. I am wanting to make a virtual assistant like Siri or Cortana that has a body on my screen and can move around and stuff (to my phone as well maybe?) but also have a personality.
I worked with Orchard a few years ago and it was both a huge PITA and incredibly flexible. The very basic stuff was fine, but the product was obviously evolving at such a pace that the different bits of articles and documentation often seemed out of date and contradicting each other. I hated the fact that everything was based around C# “dynamic” and the CMS didn’t throw exceptions, so a single typo somewhere in your code was enough to have you searching for a reason why something wasn’t working for a couple of hours. Couple that together with some other quirks around not activating modules/displaying widgets on screen and it was quite a frustrating experience. Overall though the project ended up being quite successful. Unfortunately I don’t have any other CMS experience to compare it to, so I have slightly mixed feelings about it. It doesn’t suit my preference for strong typing and simplicity so if I were doing another CMS project today I would definitely be evaluating other platforms, but Orchard Core may be a different beast to the prior versions I have used.
But it doesn’t answer OP’s question, since that API can’t listen to multiple sockets at once.
DLLs are not meant to be standalone like that.
For whatever reason, I seem to see Angular paired with .NET more than React or Vue. At least if you are looking for jobs. Learn modern js and the rest is relatively trivial to pick up.
It's all the same, Cortana and Siri are just talk bots that also support voice input. You will need ML for speech recognition (find a pretrained model if you can), everything else you will need to hard code. The personality and the movements are entirely up to you...
Have a look at Blazor and Svelte. Two of the more interesting projects making waves at the moment.
How about a call chain 15 methods deep, all called `GetResult`? Seen in the wild only last week...
I still haven't been able to [make the C# gRPC client (from the main grpc repo) work](https://stackoverflow.com/questions/55747287/unable-to-make-a-connection-between-trivial-c-sharp-grpc-client-and-server?noredirect=1#comment98373717_55747287) :( This includes OP's example (same error). Since they announced that .Net Framework won't be getting any more feature updates last year, I've been looking to migrate our projects to .Net Core. That means that we would need to replace WCF (used for inter-node communications in this case) with something else and gRPC genuinely seems like a great candidate. Notably, the C# client from the [grpc/grpc](https://github.com/grpc/grpc) repo is just a wrapper for the C-based core. There is a second implementation being worked on, [grpc/grpc-dotnet](https://github.com/grpc/grpc-dotnet), which is going to be completely managed. The server appears to be mostly complete, but the client is still ways off.
Is the Azure limitation a function of the fact that the library calls native code? If yes, take a look at the [managed server](https://github.com/grpc/grpc-dotnet).
Missed the large object heap for strings. Consider breaking them up if over the max size.
So what I'd do: password on your user account, and add a guest account with no password (and no admin rights!). Then add a bootup password to the device (and a BIOS password to prevent changing settings). That way if someone takes the device then they can't start it. If someone wants to borrow it you can start it up, enter the boot password and hand it over.
If you worked with WPF or UWP before, you will like Vue
[GhostDoc](https://submain.com/products/ghostdoc.aspx) Really saves you a lot of time commenting your code. It tries to automatically write your comments for you based on the method name and does this quite well.
Most useful for me are ReSharper and DisposableFixer
I like Visual Assist really much.
Vue pure bliss if you just want dynamic content that is maintainable. Just sprinkle some of it into your .html/.js file and feel good. &amp;#x200B; Also has great support for TypeScript And also there will be a *mostly* compatible rewrite to Vue 3 which will be even faster at "rendering" the DOM, while making the Vue codebase more maintainable and smaller.
[ResX Manager](https://marketplace.visualstudio.com/items?itemName=TomEnglert.ResXManager) [GitDiffMargin](https://marketplace.visualstudio.com/items?itemName=LaurentKempe.GitDiffMargin)
Conveyer by Keyoti lets you debug web apps from other devices over the internet.
Productivity Power Tools: https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.ProductivityPowerPack2017 Technically a bundle of extensions but it's very useful.
[StopOnFirstBuildError](https://marketplace.visualstudio.com/items?itemName=EinarEgilsson.StopOnFirstBuildError) especially if you do some C++/C; with C# compilation is quick enough, but might give a long string of outdated errors.
£100 a year for a documentation tool is a bit much though
Works with VS2019 too, a great bundle
viasfora just for the rainbow braces feature alone.
Open Commandline ALT-SPACE to open a powershell window at the path you have highlighted in your solution https://marketplace.visualstudio.com/items?itemName=MadsKristensen.OpenCommandLine
[File Path on Footer](https://marketplace.visualstudio.com/items?itemName=ShemeerNS.FilePathOnFooter)
Is it? £8.3 a month for something you could be using 3-5 hours a day. It’s less than a modern tv subscription and saves you hours a year of typing out the core bloat.
I've used it and I love it, Although the default colors are awful for dark themed VS
Visual Studio IntelliCode is an experimental set of AI-assisted development capabilities for next-generation developer productivity.
Variable ints are pretty neat. Theres different ways to do variable int encoding. Encoding things is a fun rabbit hole. (I dont know if this is a So, for something like this, you would reserve the top bit of the first 8 bytes. That would indicate that theres another byte of size data. So, from sizes 0 to 127, you can encode size with 1 byte. With 128 to 16,384, you can use 2 bytes, etc. This is all know your data information. If youre going to have a TON of 15 byte packets, with quite a few 128 byte packets, you could reserve the 5th bit to say the size, have those 3 bits available for other things when not used for size, for example if you have packets that send down status, they could actually fit into 2 bytes, size+flags and type. For fixed binary packets like this, I typically encode by message type first. A lot of message types are not variable size, so they can completely omit any bits for size. Its pretty amazing how small packets can get when you really start paying attention to the data you absolutely need, and thats before any sort of compression is applied.
GhostDoc is bad and everyone using it should feel bad. &gt;It tries to automatically write your comments for you based on the method name and does this quite well. Or to put that in a different way, it offers absolutely no useful additional information over what the method name already says.
What does yours look like?
I don't document code for 5 hours a day...
Not all extensions are ported though. For me lack of Custom Document Well is eliminating VS2019 from daily work :(
Can you give further information?
TOP1 extension for me is Custom Document Well, to the point that I cannot work without it. If you don’t like ReSharper (like me) you can try Roslynator + CodeMaid combo. Works pretty well for code oriented features and refactorings. I haven’t yet found a replacement for R# powerful search, but Ctrl+, does the job for now.
Roslynator! I got fed up of R# slowing my workstation down. I'd disabled so many R# features in an effort to claw back some performance but it was still running like shit. And this is on a pretty powerful workstation. The majority of refactoring features and lightbulb suggestions that R# offered, it turns out, are mirrored by Roslynator, and it seems to use a fraction of the resources compared to R#. Also we use NCrunch on our team, and that's been an absolute godsend. It's pricey but worth it, we don't even think about code coverage anymore as it indicates right in the editor what lines are covered and whether the test is passing, failing or running. Oh and it can run covering tests as soon as it detects a change. Like resharper, it comes with a performance price, I wouldn't recommend it on hardware with less than 6 cores and 16GB RAM. Unlike resharper though you can tweak exactly how much resources it's allowed to consume, which mitigates the performance impact on visual studio itself.
Yep, such a simple feature but so useful. I also like how holding ctrl over a code block indicates its parent braces.
It's included in VS2019, I believe.
"bloat" is precisely what it's generating though. £8.30 a month to pick apart method signatures.
&gt; This does not work at the moment Can you elaborate? What is the result?
The free version is fine for our needs.
Sounds like most of the features are going to be incorporated directly https://developercommunity.visualstudio.com/idea/465490/update-support-for-custom-document-well-to-visual.html
Let's say you have a method called GetUsers. GhostDoc automatically adds "Gets the users" as comment. What would you do in this situation? Don't add a comment because the method name is kind of obvious or do you put something else there?
I set a trigger with the BonusRing tag in front of the character at spawn. When the player passes through it, the input remains the same, UI as well
Why wouldn't you like resharper? I personally would go as far as saying that VS w/o resharper is waaay worse. But, to be fair, I switched to Rider a couple of months ago and didn't really use vs19, so I don't reject the possibility of it being a big improvement.
You need to explain "does not work". Are you getting an error code? What is the unexplained behvaior? Null object, infinite loop. What is the problem?
My character passes through the BonusRing-tag trigger and nothing happens, controls remain the same, sorry I am a beginner and struggling a bit with the code
You need to set a breakpoints and figure out which line of code it's not going through. We cant do that from here. That'll isolate which condition isn't being met.
Don't need to add comments that doesn't help. Get the users doesn't tell you anything extra. Either leave it off or mention something not self evident like say this method only returns active users or is cached.
Interesting. UWP is a very problematic platform. Have you logged the bug? I was anticipating that hosting might be an issue. Perhaps kubernetes is another option.
Sounds like a school assignment.
I don't know about that. There are doc generators where it makes sense. For instance, the api docs you can generate in Web API include the url, http method, and comments
I set these three debugs up private void OnTriggerEnter(Collider other) { if (other.tag == "BonusRing") { Debug.Log("Bonus Ring Collision"); GetNewRandomKey(leftInputKey); LeftText.text = leftInputKey.ToString(); GetNewRandomKey(rightInputKey); RightText.text = rightInputKey.ToString(); GetNewRandomKey(downInputKey); DownText.text = downInputKey.ToString(); GetNewRandomKey(upInputKey); UpText.text = upInputKey.ToString(); } } private KeyCode GetNewRandomKey(KeyCode excludeKey) { KeyCode newRandomKeyCode; Debug.Log("Get new Key method"); do { Debug.Log("Get new Key method execution"); newRandomKeyCode = inputs[Random.Range(0, inputs.Length)]; } while (newRandomKeyCode == excludeKey); return newRandomKeyCode; } And [this](https://i.imgur.com/95K3IAs.png) is my Console
OzCode is my pick, great for debugging but it's only free for a limited time i.e. the plugin comes as a trial version, with the option to buy afterwards
API docs are primarily for discovery though and will tell you the signature etc. Someone might not even know the method exists. They are definitely useful. I am specifically referring to method comments like the example above.
so i had to make program for controlling parking lot.it should get,save and shows the information. i will try to explain it as simple as i can. First i have to create 3 classes : Cars , LightTrucks , HeavyTrucks they both should contain: type , brand , model; in constructor actually the input should be like this: parkinglot parkingname1 2 2 2 parkinglot parkingname2 2 1 1 Car Kia Seed Lighttruck Citroen Jumper Car VW Polo Lighttruck Ford Tranzit Heavytruck MAN TGM18 Car Audi А6 Heavytruck Volvo FM12 Print something1 End and the Output should be: parked cars in parkinglot something1: Brand Kia, Model Seed Brand VW, Model Polo Brand Citroen, Model Jumper Brand Ford, Model Tranzit Brand MAN, Model TGM18 Brand Volvo, model FM12 Parkinglot something1 has the following locations: Car 2, busy 2 Lighttrucks 2, busy 2 Heavytrucks 2, busy 2 Parkinglot something2 has the following locations: Car 2, busy 1 Lighttruck 1, busy 1 Heavytruck 1, busy 1 ///////////////////////////////////// so what should it do create parking lot with command parkinglot name 2 2 2 (first 2 = car ; second Lighttruck ; third Heavytruck) after i create 1 or more parkinglots i should be able to enter cars,lighttrucks or heavytrucks. like: car Audi A6 Lighttruck Citroen Jumper Heavytruck Volvo FM12 and then Enter "End" to stop the program or Enter Print parkinglot name like "Print something1" and the program should print "parked cars in parkinglot something1: Brand Audi, Model A6 ; Brand Citroen, Model Jumper ; HeavyTruck Brand Volvo, Model FM12 ; Parkinglot something1 has the following locations: cars 2 , busy 1 ; lighttrucks 2 , busy 1 ; heavytrucks 2 ,busy 1"
so i had to make program for controlling parking lot.it should get,save and shows the information. i will try to explain it as simple as i can. First i have to create 3 classes : Cars , LightTrucks , HeavyTrucks they both should contain: type , brand , model; in constructor actually the input should be like this: parkinglot parkingname1 2 2 2 parkinglot parkingname2 2 1 1 Car Kia Seed Lighttruck Citroen Jumper Car VW Polo Lighttruck Ford Tranzit Heavytruck MAN TGM18 Car Audi А6 Heavytruck Volvo FM12 Print something1 End and the Output should be: parked cars in parkinglot something1: Brand Kia, Model Seed Brand VW, Model Polo Brand Citroen, Model Jumper Brand Ford, Model Tranzit Brand MAN, Model TGM18 Brand Volvo, model FM12 Parkinglot something1 has the following locations: Car 2, busy 2 Lighttrucks 2, busy 2 Heavytrucks 2, busy 2 Parkinglot something2 has the following locations: Car 2, busy 1 Lighttruck 1, busy 1 Heavytruck 1, busy 1 ///////////////////////////////////// so what should it do create parking lot with command parkinglot name 2 2 2 (first 2 = car ; second Lighttruck ; third Heavytruck) after i create 1 or more parkinglots i should be able to enter cars,lighttrucks or heavytrucks. like: car Audi A6 Lighttruck Citroen Jumper Heavytruck Volvo FM12 and then Enter "End" to stop the program or Enter Print parkinglot name like "Print something1" and the program should print "parked cars in parkinglot something1: Brand Audi, Model A6 ; Brand Citroen, Model Jumper ; HeavyTruck Brand Volvo, Model FM12 ; Parkinglot something1 has the following locations: cars 2 , busy 1 ; lighttrucks 2 , busy 1 ; heavytrucks 2 ,busy 1"
I just found the performance drop unacceptable last time I tried it. Have a fairly high spec system (8c, 64Gb RAM, NVMe) but it just made things drag too much (I use R# so maybe it's an interaction?).
I got it by doing this: private void OnTriggerEnter(Collider other) { if (other.tag == "BonusRing") { Debug.Log("Bonus Ring Collision"); leftInputKey = GetNewRandomKey(leftInputKey); LeftText.text = leftInputKey.ToString(); rightInputKey = GetNewRandomKey(rightInputKey); RightText.text = rightInputKey.ToString(); downInputKey = GetNewRandomKey(downInputKey); DownText.text = downInputKey.ToString(); upInputKey = GetNewRandomKey(upInputKey); UpText.text = upInputKey.ToString(); } } But a new problem arose, I can get duplicate input. As in they KeyCode for both left and right can Become "A". I thought this line would solve that? while (newRandomKeyCode == excludeKey);
For me, the performance hit was massive without a whole lot of gain. I'll switch it back on now and then when I have a specific need for it (like easily peeking at managed code), but otherwise it's off. I imagine there are probably configurations I could do to make it work for me, but I don't really have the time to devote to doing so right now.
I second this. "gets the users" from a method called Getusers is just creating spam comments. I'd rather have no comment at all than something as useless as that - it takes up space for no useful purpose.
Yeah, Conveyor is very useful!
Just like the other comment said, it’s slowing VS way beyond usability level. I tried R# on three different computers and every time it slowed it to the point where simple intellisense lookup took 5 seconds. Plus I see nothing useful in R# that I can’t get with other extensions (search is an exception, but I’m no longer in a project that requires god search).
ILSpy. It's amazing. You can decompile and read the output as C#, use multiple language versions... It's amazing. I use it to browse upstream dependencies my team has created, and also to look at .NET.
No because exclude key changes. You would have to have a list of keys to exclude and check each of them.
LiveShare, extreme programming in pairs when at different sites, works very well
Consider r/learncsharp or r/learnprogramming.
The noregions extension. Because, f--- regions.
Code describes, comments explain. "GetUsers" already describes what the code does, so any comment repeating that is utterly pointless. A comment is only required where code does something different to what the user would expect. Otherwise we're just adding comments for no reason.
Yes, you just need to opt-in
Personally, I've had a lot better luck with JustDecompile.
Vsvim is a lifesaver for me.
Wish guys would just read the documentation of the framework, language and libraries they are using and code properly to begin with. Majority of the issues in real applications are not because they are doing &lt;&lt;&lt;rocket\_science&gt;&gt;&gt; but because the code is crap. Slapping optimisations on top of crappy code just makes it worse.​
Hmm, I never thought of a performance cost of r# because my work pc is powerful enough to forget about lags). But in your case, you should at least try Rider. I didn't do the measurements, but it seems logical to assume that it has better performance since it is a standalone ide and not just plugin on top of other ide.
ClaudiaIDE
Vue - it's like React but nice to use.
Great feature, now included in VS 2019 by default.
Resharper ? can't believe it's not at the very top
[IntelliSense Extender](https://marketplace.visualstudio.com/items?itemName=Dreamescaper.IntellisenseExtender2019) allows you to get IntelliSense completion of classes in namespaces that haven't been imported yet (and will automatically add a `using` for it)
You can't just tell your mom that the laptop is not to leave the house? If she wouldn't respect that rule then change the password and say that nobody is allowed to use it any more.
This feature had been added to VS 2019, I think in 16.1
ahhhhhh. A flow Chart would be appreciated.
Have you ever used it on a solution with &gt;20 projects? The performance is unbearable, even on a high spec machine.
I just tried it with the extension disabled and was unable to get it to work. 🤔
I was wondering the other day if it was causing perf issues. How did you diagnose?
[Added in 16.1.](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#net-productivity) You have to enable it in Tools &gt; Options &gt; Text Editor &gt; C# &gt; Intellisense.
R# causes lags on my machine, which is a 16-core Threadripper 2950x, 32GB RAM and NVME storage.
It's because Resharper has _horrible_ performance. It used to be highly recommended, now most people I've read don't use it anymore because it slows down the editor so much as to be unusable.
yeah, it'd have been interesting to swap things to weakref's and see what happened...
https://imgur.com/a/XMdkBSA thats better?
That's odd. I have similar set up, but the processor is i7-something and never noticed constant lags (only some occasional lag spikes)
Yeah, R#'s lags are never constant, but they're never consistent either. You get a startup hang, then it's all gravy for a bit then out of nowhere your IDE will just freeze up for a few seconds. It's annoying.
I had a former colleague install GhostDoc and commit a change where all sorts of methods would get "comments" automatically. Literally the first one I saw was: /// &lt;summary&gt; /// Saves the file. /// &lt;/summary&gt; /// &lt;param name="filename"&gt;The file to save.&lt;/param&gt; public void SaveFile(string filename) { // (this method _did_ contain real implementation details) }
CodeMaid. It's like resharper just free.
Honestly just 'by feel' I've used VS in this config every day so can pretty much tell instantly if an extension is causing issues. The colours it adds are nice but it slows me down...so costs me money...
Oh wow thanks! That's one less extension I need. 🎉
the native decompilator is far better : Tools &gt; Options &gt; Text Editor &gt; C# &gt; Advanced &gt; Enable navigation to decompiled sources.
https://imgur.com/a/TL6fJiy
Tools &gt; Options &gt; Text Editor &gt; C# &gt; Advanced &gt; Enable navigation to decompiled sources.
it has nothing to do with resharper but i also like this one to order my code.
vs has deeply improved its refactor functionalities and included a "navigate to decompilated source" option, while resharper performance are getting worst and worst...
This is my answer too. I love it.
&gt; For instance, the api docs you can generate in Web API include the url, http method, I wouldn't call that "documentation", though. That's useful, but it's sort of an implementation weakness that it isn't automatically there. (It's one of the things SOAP did better. You automatically had the right metadata to generate the needed method declarations.)
The listening is implicit (the infrastructure is doing it for you). There is no need for an API because each call to ReadAsync just continues on a free thread when the data is available.
Compared to the heavy hitters posted so far mine is a tiny one but [ZenCoding](https://marketplace.visualstudio.com/items?itemName=MadsKristensen.ZenCoding) is an Emmet style coding tool that I really enjoy.
CodeRush! Faster and cheaper than R#, extensive code formatter, templates, test runner window, many other features.
Resharper works great for me, but the dev machine I'm on slows down to a crawl when I have it running. I do the same thing and just run it when needed once and then deactivate it again to avoid the dramatic drop in system performance. I'm sure this isn't a widespread problem and I've just been given a garbage system.
Resharper is very much hated in this subreddit
Ah yeah, they also recommend AKS. In either case, manually handling the certs is annoying and difficult to figure out. The UWP issue can be found here: https://github.com/grpc/grpc/issues/18188. I ended up porting my API to ASP.NET Core and creating formatters to use the Protobuf models. This way has been a lot smoother with the rest of the C# ecosystem.
Im pretty sure the native decompiler uses ILSpy to show the implementations
Not even the managed server will be able to run as an App Service: "The HTTP/2 implementation on Azure App Service doesn't support response trailers and ergo doesn't support gRPC. For the time being, you're best is to run on AKS" https://github.com/grpc/grpc-dotnet/issues/174
true but the result is far better than with the old extension
&gt; if you know (or can estimate) the size of a list, why wouldn't you allocate it that way? I can be really pedantic and answer this with "things change", but the answer's really more involved. Maybe the List is deep inside some other component and is an implementation detail. Maybe you start with a large, but sensible default like 50k items. Then, later, as the project evolves, for whatever reason the average size of the list needed drops to 10k. If the List is an implementation detail of some component, it's likely when the change is made, nobody will remember to go change the size default. (And odds are it'll be an external change anyway, so there's nowhere in code to put a reminder comment.) But that feels nitpicky because even then, it takes a contrived scenario to create the situation where "my list is initialized too large" is the thing bottlenecking your app. But then I think about the GC in general and it's just... weird. The nature of the beast is the GC has global state, so anything you do can have potentially devastating impact. Maybe your list allocations aren't by themselves a problem, but in the context of what else is going on at the time they exacerbate things. So long story short, I want to disagree but talked myself out of it.
Add New File by Mads Kristensen is the first thing I install on a fresh install. It’s simple and awesome.
Here's how any, "Can I do this better?" question should start: list all of the requirements, in English. The way your question sits right now, I've first got to read all of your code and transcribe it to English so I know what it does. I'm doing that right now, but it's going to take longer for me to do that than it did to type this response. If I don't know what your code is trying to do, or what its edge cases are, I can't try to figure out a more clever algorithm. And if I have to guess at any part of the way, my clever solution might not cover all of the inputs you need because I might miss an edge case you've already handled.
My code only removes elements from the list that matches the condition :) I don't ask to add more code, just if this is a fine way to write this code part or if I should do it in another way. But thanks anyway.
Yeesh....was he happy with this? To me it just looks like crud...
It is a mess, maybe start by introducing locals. You can also try to verbally describe the flow, and then reimplement this. Many times what's being done in a really shitty LINQ query can be much easier to read and maintain in normal for/foreach loops. Don't get me wrong, I love elegant LINQ but many devs can't write good LINQ queries.
But they need it, their laptop broke, his son has space stds so he needds it more! Not to mention i just want to "brick" my laptop as a "FUCK YOU".
Could you provide an example of how I can do this? By introducing locals? Not sure if I understood... Did you mean introducing local variables and do each steps?
I love XAML Styler, it saves me a bunch of time
Check that you've got the 32bit version installed accidentally?
Download the local DB version and install it.
``` var cateWithPrice = item.FirstOrDefault(s =&gt; s.Name.Contains("Cate") &amp;&amp; s.Price.HasValue == true); if (cateWithPrice != null) { var someThing = item .Where(p =&gt; p.Name.Contains("Cate") == true &amp;&amp; p.Price.HasValue == true) .OrderByDescending(t =&gt; t.StartDate) .FirstOrDefault() item.RemoveAll(x =&gt; x.StartDate &lt; someThing.StartDate); item.RemoveAll(x =&gt; x.Name.Contains("Cate") == true &amp;&amp; x.Price.HasValue == false); } var cateWithoutPrice = item.FirstOrDefault(s =&gt; s.Name.Contains("Cate") &amp;&amp; s.Price.HasValue == false); if (cateWithoutPrice != null) { item.RemoveAll(x =&gt; x.Name.Contains("Cate") == true &amp;&amp; x.Price.HasValue == false); } ``` This made me realize that we are removing items based on conditions, so rewrite the logic like: ``` Fetch items based on condition. Loop items and remove each one ```
 var itemsToRemove = items.Where(condition); foreach (var itemToRemove in itemsToRemove) { items.Remove(itemToRemove); }
Adding spaces between lines might help If you create a function with this then debugging becomes more complicated Short, Bare bones code is fine.
Whenever you write a expression like s.Price.HasValue == true it will resolve to a boolean true or false. So that means you also have to check whether that expression is true, like (s.Price.HasValue == true) == true. But that also resolves to a boolean expression, so...
VSCode Remote, currently need insiders build but since the VS (full) devs broke Linux dev support on 2017 and 2019, I have no other alternative and this has been working quite nicely
Smooth Caret. It makes the cursor movement smooth, like the one in office.
Here's how I transcribed your code: // if there is an item where the Name contains "Cate" and the Price has a value { // remove all items where the start date is less than the latest start date of an item that matches // remove all items that match but have no value } // else if there is an item where the Name contains "Cate" and the price does not have a value { // remove all items that match but have no value } There's a lot to fix here, you're iterating collections many multiples of times. Every `FirstOrDefault()` iterates. Every `Where()` iterates. `OrderByDescending()` iterates *and* sorts. If you pay attention to this specification, you'll see you actually only need to find one item: the one with the latest start date. That's doable in one go. We could use LINQ to sort then filter, but while that saves us *lines of code* it costs us time because sorting always costs us at least `n log n` unless we have a very, very specialized algorithm. So it's faster to just do one iteration to find our target. First, helpers: bool MatchesName(??? item) { return item.Name.Contains("Cate"); } bool HasPrice(??? item) { return item.Price.HasValue; } Now, the meat: // Find the item that has the desired name, a Price with a value, and the latest // start date. ??? latestItem = null; foreach (var item in items) // Don't name a collection 'item'. Name it 'items'. { if (MatchesName(item) &amp;&amp; HasPrice(item)) { if (targetItem != null &amp;&amp; item.StartDate &gt; targetItem.StartDate) { latestItem = item; } } } // Loop backwards so we can remove things for (int i = items.Count(); i &gt;= 0; i--) { var currentItme = items[i]; // If the current item matches by name, we're interested if (MatchesName(currentItem)) { // If it has no price, remove it if (!HasPrice(currentItem) { items.RemoveAt(i); } // It has a price, remove it if it's earlier. else if (latestItem != null) { if (currentItem.StartDate &lt; latestItem.StartDate) { items.RemoveAt(i); } } } } I think this does the whole thing in two iterations. The requirements I deduced are: * Remove all items that have a name that starts with "Cate" and either: * Have no value in Price * Have a value in Price but do not have the latest StartDate.
It's simple, it's almost stupid, but "Add New File", is one of my favorites not already mentioned here. In your Solution Explorer, you can select a project or a subdirectory of a project, hit F2, then type the name of a file with its extension and it will autogenerate an appropriate file (I've only tested this with .cs and .json files so I can't speak for how well it works with other languages). It also works for creating directories.
at the very least this: `item.FirstOrDefault(s =&gt; s.Name.Contains("Cate") &amp;&amp; s.Price.HasValue == true) != null` can be rewitten as: `item.Any(s =&gt; s.Name.Contains("Cate") &amp;&amp; s.Price.HasValue == true`)
Right, this sounds like something MS should look into.
Don't compare bools to true or false to check their value. e. g. `x.Name.Contains("Cate") &amp;&amp; !x.Price.HasValue` is preferable to `x.Name.Contains("Cate") == true &amp;&amp; x.Price.HasValue == false`. (There are people who will argue this. *They are wrong.*) If `Name.Contains()` or `Price.HasValue` are nullable bools (i.e. `Nullable&lt;bool&gt;`), that's different, but also: that is some screwy design. Use `First()` in situations where you know the result cannot be null, instead of using `FirstOrDefault()`. You may also be able to combine calls to `First()` or `FirstOrDefault()` with calls to `Where()` in your LINQ chains. Rewrite `item.FirstOrDefault(/* stuff */) != null` as `item.Any(/* stuff */)` unless you're going to do something with the object `FirstOrDefault()` returns. This is probably clearer and better performing, but you should profile and see what you think. var date = item.Where(x =&gt; x.Name.Contains("Cate") &amp;&amp; x.Price.HasValue) .OrderByDescending(x =&gt; x.StartDate) .FirstOrDefault()?.StartDate; for (var i = item.Count - 1; i &gt;= 0; i--) { if ( (date.HasValue &amp;&amp; item[i].StartDate &lt; date.Value) || (item[i].Name.Contains("Cate") &amp;&amp; !item[i].Price.HasValue)) { item.RemoveAt(i); } } All of this is written under the assumption that this is purely collection-based code, and not EF-based stuff.
Thanks a lot! This helårs a lot!
Yes, but depending on the situation it may not be the best way to address OP’s needs. Anyway, I’d also use async most of the time.
It's probably better to first learn what the intended use is for the languages. PHP used for scripting small websites on Linux / Unix. Makes for a very cheap implementation and lower TCO (small sites only). C# can now be used ALMOST anywhere including Linux and Unix, scalable, web and desktop, etc.. I am not sure why someone would want to learn PHP today, unless there was an existing website to maintain.
I'm always avoid PHP, I really don't like at all, but I say for example, a language more used for website, I'm already know how work with SQL and NOSQL database, know how create websites static dinamic, web application, mobile and backen part too, so I want to learn another language, I see that with C# I can add this language for web development and then I can learn how create other type of project that not are web app or web site, I asked if it's a good idea do it
Modify manifest file to allow visual studio version, enable synchronous extension load in VS and you have it.
The execute file feature is great for right click executing batch files in my solution.
Definitely a R# interaction. I had to choose, and sadly, Viasfora lost.
I find it bogs down VS when opening up a solution, but when it's settled down it's fine. Maybe I'm just used to it now but it's not an issue for me. I still find resharper extremely powerful for refactoring legacy code and the freebies just don't cut it in comparison IMO. However I am looking forward to the day when I can ditch it when VS has all I need natively as it's always a PITA getting my work to renew the licence every year due to the way purchasing works, but that's nothing to do with the product itself.
I just got done following along with this video. It took my a while but it’s worth the look.
C# is a modern programming language, very powerful, with features that support large (&gt;1M lines) development projects. It's widely used, easier than C++, and is what a lot of professional programmers would call a "real" programming language. It's a good choice. You won't hit its limitations any time soon.
Here's how I would write it: ``` // Assuming your original item variable is actually named "items". IList&lt;T&gt; items = ...; // Use HashSet&lt;T&gt; for O(1) complexity for membership checking later. // Use anonymous block to visually separate out the details around how cateItemsToRemove is populated. var cateItemsToRemove = new HashSet&lt;T&gt;( items.Where(s =&gt; s.Name.Contains("Cate"))); { var latestPricedCateItem = cateItemsToRemove .Where(s =&gt; s.Price.HasValue) .OrderByDescending(s =&gt; s.StartDate) .FirstOrDefault(); // Remove latest priced Cate item if it exists from the removal list. if (latestPricedCateItem != null) cateItemsToRemove.Remove(latestPricedCateItem) } // Remove using HashSet built above to efficiently remove associated items. items.RemoveAll(s =&gt; cateItemsToRemove.Contains(s)); ``` Generally speaking I'd probably not include any of the comments actually in the code.
Hi already use nodejs for server side, I do for my last project with React client and a Nodejs server, anyway thanks for the answer
If you like Regions, Regionizer is a C# document formatter, code generation tool and includes an auto commenting system. Regionizer formats a C# document into regions for Private Variables, Constructors, Events, Methods and Properties, and sorts the Events, Properties and Methods alphabetically making it always easy to locate code, regardless of the individual coding style of each member of a team. &amp;#x200B; The code and the install are located here: &amp;#x200B; [https://github.com/DataJuggler/SharedRepo/tree/master/Regionizer](https://github.com/DataJuggler/SharedRepo/tree/master/Regionizer) &amp;#x200B; "Hi, my name is Corby and I am a regionaholic." &amp;#x200B; (crowd) "Hi, Corby." &amp;#x200B; Actually I don't go to meetings; that's for quitters.
The auto-generated comments are pretty worthless, yes. But if you are working to StyleCop style documentation rules - based on Microsoft's API standards IIRC - it is nice to have the boilerplate structure generated for you. I'd argue that the bullshit worthless documentation is more based on those rules than GhostDoc itself. There are options that immediately highlight the auto-generated summary for editing, as well as adding TODO tasks on each comment when auto-generated. I wouldn't want to use it without those turned on. And the options that document whole files or classes are locked behind the pro license, so staying on the free version should reduce the worst abuses.
So my biggest pet peeve about Visual Studio is I often try to resize some of the windows/tabs at the bottom of the editor. Output for example. But I click and wrong place and end up dragging it out of the container, then when I try to drop it back I end up with it in complete the wrong place. So I'll end up with say Debug Console, Test View and Terminal as 3 tabbed windows at the bottom of the screen, then Output in a separate window above that, then the main code view window above that. &amp;#x200B; Any extensions (or built in functionality) to stop that?
Space stds?
ReSharper can be replaced by much better performing extensions. Not worth the price anymore
&gt; What it does is that it just check on some logic to clean-up data in a list. Well, _that_ part is quite clear. * What is `item`? A generic term like that isn't great, and it's also clearly a collection (and probably a `List&lt;T&gt;`, given the `RemoveAll` calls), so it shouldn't be singular. Is it a list of… SKUs? * Best as I can tell, you're checking for "name contains Cate" every single time. So let's start with: var cateItems = item.Where(x =&gt; x.Name.Contains("Cate")); if (cateItems.Any()) { } * This makes the remainder of those two `FirstOrDefault` expressions simpler. You also shouldn't check those for `null` if you're not actually interested in the first item. Just use `Any()`: var cateItems = item.Where(x =&gt; x.Name.Contains("Cate")); if (cateItems.Any(x =&gt; x.Price.HasValue)) { } else if (cateItems.Any(x =&gt; !x.Price.HasValue)) { } * Now things just get messy and puzzling. _Both_ conditions remove items that don't have a price. One doesn't do it as the first step. I'm guessing that's intentional. If so, that can be simplified a lot: var cateItems = item.Where(x =&gt; x.Name.Contains("Cate")); if (cateItems.Any(x =&gt; x.Price.HasValue)) { } // there doesn't appear to be a point in checking anything here item.RemoveAll(x =&gt; x.Name.Contains("Cate") == true &amp;&amp; !x.Price.HasValue); * This leaves the most convoluted statement. I'm _guessing_ the idea here is "remove everything but the newest item". Be bold and have multiple statements. var cateItems = item.Where(x =&gt; x.Name.Contains("Cate")); if (cateItems.Any(x =&gt; x.Price.HasValue)) { var newestCateItem = cateItems.Where(x =&gt; x.Price.HasValue).Max(x =&gt; x.StartDate); item.RemoveAll(x =&gt; cateItems.Contains(x) &amp;&amp; x != newestCateItem); } // there doesn't appear to be a point in checking anything here item.RemoveAll(x =&gt; x.Name.Contains("Cate") == true &amp;&amp; !x.Price.HasValue); I believe that's about it. I may have introduced a few bugs here and there. Please write a bit more about what your code is supposed to do, and don't overdo the lambdas. They don't make your code any nicer or faster; they just, if overused, make it really hard to maintain.
"Find in Solution Explorer"
Google.ca
Replace with any other general illness. Though it was funny.
Google.co.uk
An extension *everyone* should know about? [ShiftScroll](https://marketplace.visualstudio.com/items?itemName=NGPearce.ShiftScroll) To get it to work on newer versions, edit the vsixmanifest Version ([example](https://madskristensen.net/blog/how-to-upgrade-extensions-to-support-visual-studio-2019/) or [example](http://www.visualstudioextensibility.com/2017/01/10/its-time-to-change-the-vsix-manifest-of-your-extension-to-v3-for-visual-studio-2017-compatibility/)).
- Pull Request Extension - SonarLint - Open Command Line
Are there any extensions that show the target framework of a project? We have solutions with a mix of .Net Framework and .Net Core and it's sometimes annoying when you are working with both. Something like a little C2.1 (for Core) or F4.7.1 (for Framework) is what I am thinking but I haven't been able to find. I don't know how to develop extensions or I would give it a go myself!
[Here is a link](https://github.com/tomasr/viasfora/blob/master/themes/dark-light-braces.json) to a viasfora theme that looks better on VS dark theme. Found it on [this blog](https://winterdom.com/2018/06/04/viasfora-updates)
How?
I don't think I'd go quite that far, but it has its detractors, and they have a tendency to be outspoken in their opinions (and they have some pretty valid complaints, FWIW). Honestly, 3/4ths of the reason I still use Resharper is that I'm too figure out what set of free extensions and add-ons covers the features I use, then go about relearning shortcuts, etc. I would still recommend it, but on something of a lukewarm basis, given the cost and licensing model.
&gt;But if you are working to StyleCop style documentation rules - based on Microsoft's API standards IIRC - it is nice to have the boilerplate structure generated for you. To what end? So you can tick a checkmark and tell your manager "look how much documentation we have"? &gt;There are options that immediately highlight the auto-generated summary for editing, as well as adding TODO tasks on each comment when auto-generated. I wouldn't want to use it without those turned on. Fair, though whether those TODOs ever get resolved depends on the team's discipline / on how much management prioritizes it.
If you have VS 2019 16.0, you need to update to 16.1 then **Tools &gt; Options &gt; IntelliCode**
I keep wanting to give it up, but the code navigation short-cuts keep coming back. Then add in Live Templates and a MUCH better Unit Test runner. I mean, VS out of the box has some of that, Ctrl+, gets really close to a couple navigate features, but misses on quite a few points, like keyboard short-cuts.
Removed: Rule 4.
Oooh that does look better
Removed: Rule 4. C# should be fine. It has several third party "AI" libraries that could be employed, and Microsoft provides some decent speech and language services. There's some ability to write something cross-platform if needed, and visualization libraries you can use for your assistant. C# is relatively performant so you won't be hampered by its performance from a _runtime/language_ perspective. PC specs will be dependent on the type of AI processing you employ.
Thanks duderino.
I read about it, but I think it got patched out in 16.1 so I would need to block updates for 2019
Rockmargin
Any live test runner is an absolute game changer if you're working on a project that actually has good unit testing. (Not some legacy pile of junk held together by duct tape, ibuprofen, and raw per of will. But maybe I'm bitter...). I scored an NCrunch license a few years ago. If you are lucky enough to have the "we think or developers are actually worth spending money on" (Enterprise) VS license, then you've had one built in for the last couple versions.
And if you're like me, "I Hate #Regions" is a must-have. It automatically expands #region blocks and changes the font of #region lines so that you basically can't even see them. It's an older, unmaintained extension though so you need to edit the vsix manifest and enable synchronous extensions in VS2019. Only feature I'd add to it is one-click removal of regions.
A small one I really like: [Edizen](https://marketplace.visualstudio.com/items?itemName=Paiden36.Edizen) It keeps your cursor in the center of your editor, so if you use the keyboard a lot, and you press down-arrow for example - Your cursor does not move down, it stays centered. Your code just moves up. So your center focus point is always the middle of your screen.
Read Uncle Bobs "Clean Code" and McLean Halls "Adaptive Code", both books are great. The latter even more so. There are also books focused just on Unit Testing. Just search Amazon for "unit testing" and order descending by rating. It's a good way to learn about most things. One title that's popular is "The art of unit testing", but I wouldn't recommend to start with it. Too many details. Pro tip - Google for "{BOOK TITLE} pdf download" to preview it before buying.
The one thing it did better in terms of navigation was the way it handled "navigate to implementation". MS added it to vs a few versions ago, but it doesn't handle generics well at all. Our code base makes heavy use of generics, and R# always nailed navigating to implementation of a generic interface. VS always fudges it and presents a list of possible implementations.
Re-attach saves me some aggro: [https://marketplace.visualstudio.com/items?itemName=ErlandR.ReAttach](https://marketplace.visualstudio.com/items?itemName=ErlandR.ReAttach)
In 16.1 they turned on asynchronous extension load by default and that is why it stopped working. But there is new setting to allow synchronous load for backwards compatibility.
BuildVision It shows in a concise way what is currently building. On the one hand this helps to understand the dependency relatiinships between projects in your solution and on the other it is so much more interesting to stare at during builds than the progressbar or output window.
So simple but so great. I like it that i can make views (.cshtml) or other types of files (.md etc) easily without doing the bullshit VS dialog "pick a file type" shit
this one? https://marketplace.visualstudio.com/items?itemName=Gweltaz27.IHateRegions
&gt; Actually I don't go to meetings; that's for quitters. stealing this for later, lol
Would like to know it aswell
Lol I thought it might mean that
Hoo boy, this is my passion project. Read the entire post, I'm going to go a little out of order but it makes more sense if I explain this way. The most useful book *on-topic* for me were Roy Osherove's *The Art of Unit Testing*. I think I read a couple of other unit testing books but I think this one was the most useful. But if you read *just this book*, you're going to lack a lot of knowledge. Part of understanding unit testing is learning how to write code that can be tested. I think Osherove (and most unit testing books) do a good job of showing you how to write tests if you already know how to do that, but don't cover learning how to do that. The things that I think were instrumental to me learning how to do this were: * The book *Head-First Design Patterns*. It's about Java, but I think it is the absolute best introduction to the most useful design patterns, when you want to use them, and *how* to use them. * The book *Dependency Injection in .NET*, by Mark Seemann. The parts about specific containers might be obsolete now, but the bulk of the book is about why to use DI and how to use it. * The Bob Martin SOLID principles, which are available online and discussed in zillions of blogs. * The book *Agile Patterns, Principles, and Practices in C#*. Something about the combination of those four things together really made it all click. To write testable code, you have to get used to abstracting out as much as possible so every class/method does something easily tested. It's very unlikely after reading those you'll be able to just start writing good, testable code, so that brings us to the final suggestion: *Working Effectively with Legacy Code* by Michael Feathers. That book is about how to convert code that *isn't* unit tested into code that has unit tests. IMO that's the most valuable way to learn testing. You probably already have some code you know inside and out, so that's the best place to start learning how to *rewrite* towards testability. If you're on a budget, I say go for *Working Effectively with Legacy Code* first. I think with the principles it teaches, you can figure out the rest based on blogs and asking more questions on Reddit.
+1 for NCrunch. My company hasn't updated the license for a couple years now, and I'm considering just buying a personal license to run on VS2019 because i view it that beneficial to my productivity
Just no. Get the extensions you jeed separately. If you just install power tools your VS will run slower. It's so much unneeded bloat in there. Old extensions that have since been replaced by vs inbuilt functionalities.
Useful information. Thanks!
Resharper will give you hints and help you code properly, while CodeMaid will help you keep your code organized (it won't give you hints nor help you code). I personally don't need either, Resharper is extremely expensive.
\+1 on CodeRush.
I think I saw a Rehab is for quitters sign once is what i got that.
There are a number of different ways to compose a Blazor web application. Are you using server side, client side, or client side with Web API? If you are doing pure client side, then I think you could host it on azure blob storage or any static web host pretty cheaply.
See, this proves love is stronger than hate! I am still working on my extension. For every opinion there is an equal and opposite opinion. (the above phrase is actually For every Expert... but it fits).
ReSharper, the only one that makes VS usable
One of our requirements is heavy optimization for SEO. To my understanding client side Blazor is not indexed in search engines. So we are left with server side Blazor.
The nice thing about I Hate #Regions is that it lets you be a regionaholic while I can completely ignore them. I found the extension when working a code base that did exactly what you described and I started getting wrist pains from having to expand every tiny region just to read the file. To me, regions are a code smell. They should hide autogen code, and that's about it. Anything big enough that needs a region to encapsulate them to aid code navigation should be pulled out into it's own class or method. And I hate having to manually expand a bunch of regions every time I open a file.
I equally hate spaghetti code where some code I have to work on has a method here, a property here, a constructor where ever they feel like it. I just like organized code, and regions are the easiest way to do it. This kind of reminds me of that scene in Gotham with the fire girl and the ice man (I don't know proper comic here villain names). To each their own.
any laptop will do
Any would work.. Prefer Win10, an SSD drive, and minimum of 8gb of RAM.. also a largerish screen is nice, but I can deal with docking most of the time.
You can't stop that, but you can use `Window &gt; Save Window Layout` to store the setups you're using most and then you can always revert back to that if you lose window(s)/positions that you want to have.
I'm not sure the requirements for server side Blazor hosting are well understood, as it hasn't been released yet. Its requirements should be higher than normal [ASP.NET](https://ASP.NET) MVC pages, as it requires websockets and stateful sessions, but you might not notice any difference in performance until you start to butt up against RAM or connection limits.
Any rough recommendations of what would be minimum, sufficient and overkill?
Back when I was learning WPF, there weren't many good videos out there compared to other topics. That being said, I did find this one fairly useful, although it does go in-depth about MVVM and best practices regarding architecture: [https://www.pluralsight.com/courses/wpf-mvvm-entity-framework-app](https://www.pluralsight.com/courses/wpf-mvvm-entity-framework-app) &amp;#x200B; If you need something even more basic, start with this one: [https://www.pluralsight.com/courses/enterprise-wpf-xaml-csharp-from-scratch](https://www.pluralsight.com/courses/enterprise-wpf-xaml-csharp-from-scratch) &amp;#x200B; You can get 1-month of pluralsight for free through your visual studio dev essentials account. Let me know if you need help navigating that.
I have an ideapad 300. It was cheap and it works well.
You think resharper is expensive? 129€ for the first year. That's 10.75 / month. The time resharper saves me, is worth it after just few days of use. It's like people used to think SSD's wasn't worth it. Anything that helps developers be productive, save time and increase code quality is most likely worth the money.
Interesting. I think protobuf is a great serialisation technology. At least you could use that. I've used it with UWP for hardwarewallet integration.
Anything that can run vs code is good enough, but ideally you'll have something with an ssd and &gt;=8gb ram
Oh my god, the intellisense completion is finally out! I CAN FINALLY UNINSTALL RESHARPER! &amp;#x200B; A huge thanks to the VS dev team!
Yes!
Also consider if removing items is appropriate or if you would be able to instead add the items you want to a new list. Each time this code runs, which set is smaller: * the number of items to remove * the number of items to keep If for example the number of items to remove continuously grows over time, but the number of items to keep remains roughly the same for the lifetime of your application, it is probably a good idea to get a new collection that you add to instead of removing items from an existing list. Further if both of those things are going to be large, consider a swap algorithm with a final resize step instead of removing items individually. Something like this: foreach (var item in items) // Don't name a collection 'item'. Name it 'items'. { if (MatchesName(item) &amp;&amp; HasPrice(item)) { if (targetItem != null &amp;&amp; item.StartDate &gt; targetItem.StartDate) { latestItem = item; } } } var lastGood = items.Count - 1; // Loop backwards so we can remove things for (int i = lastGood; i &gt;= 0; i--) { var currentItem = items[i]; // If the current item matches by name, we're interested if (MatchesName(currentItem)) { // If it has no price, remove it if (!HasPrice(currentItem) { items[i] = items[lastGood]; lastGood--; } // It has a price, remove it if it's earlier. else if (latestItem != null) { if (currentItem.StartDate &lt; latestItem.StartDate) { items[i] = items[lastGood]; lastGood--; } } } } lastGood++; items.RemoveRange(lastGood, items.Count - lastGood); items.Sort(...); //if necessary (this assumes items is a `List&lt;T&gt;`) You would do this because calling `RemoveAt()` inside the loop results in a `O(n^2)` algorithm, whereas removing with `RemoveRange()` after the loop is a `O(n)` algorithm resulting in the sort operation dominating for a total of `O(n*log(n))`. Again consider that adding to a second list can be done in `O(n)` total (because adding to the end of a `List&lt;T&gt;` is amortized `O(1)`) so if the list was sorted to begin with, adding to a new list may easily be the fastest way (though you could get clever with assigning a sentinel value to the removal spots and merging the list down before the `RemoveRange()` call and get `O(n)` for the removal of items from a sorted list).
Dell XPS 15 i7/32gb ram and a 1tb ssd for work. Similar spec i7 desktop for personal projects. If your working on large solutions using visual studio I would recommend something higher spec as build/compile times can get pretty bad and VS (not code) itself can be demanding.
you can go for a tiny laptop with a small screen coupled with keyboard with minuscule keys. you will be able to use it with ease cuz you c sharp.
But what about logging the bug in the .NET Native compiler?
Good catch! For some reason I can't shake the incorrect idea that removal is fast, like in a linked list.
I have a Lenovo Yoga 910. Its a top of the line super fast machine I love it, 500gig ssd, 16 gig ram, 4K monitor. It broke a month back and i had to go back to my very old Acer Series 3 I5 from about 5 years ago, with a couple of SSD's in it for work. When I left it for the new one it seemed really slow and laggy, the keyboard had random keys not working, the screen seemed washed out, as well.. I thought it would be horrible to use, but plugged into 2 external monitors and an external keyboard its great. So good I might leave it there. It seems that windows, Visual Studio etc have improved so much over the intervening years that even my old laptop can work well as a base. I just havn't installed Resharper on it yet.
Heu I7, 32 GB of ram, 1TB ssd nvme PCI-E 3
Use this. Free and covers all the basics you need to know. &amp;#x200B; [https://www.wpf-tutorial.com/](https://www.wpf-tutorial.com/)
Mine, usually.
Sorry to hear that. That's a bummer.
I always install vscoloroutput right away.
Blazor server side keeps the component state in-memory, so its impossible to guess about provisioning without knowing how much state your components will use and how many of them will be active on a page at a time. Gun-to-my-head I'd probably say something like the following is how I would estimate the RAM needed...but its just a guess: 100mb + ((1mb + ( 3 \* MedianComponentStateSize)) \* NumberOfConcurrentUsers) = Ram Required &amp;#x200B; It would require more if you use scoped dependencies (such as for auth or caching) and the requirements for file uploading, memory cache, and web api calls will all be the same as normal if you use those features of [ASP.NET](https://ASP.NET) Core MVC. &amp;#x200B; If you don't run out of RAM or run into concurrent connection issues, then I would guess the CPU requirements would be similar to [ASP.NET](https://ASP.NET) Core MVC...maybe just slightly higher for the component render tree diffing that the components do.
Old thinkpad T430 running Fedora and VSCode/Rider
looks like that one isnt well liked by vs 2019 so i got this instead https://marketplace.visualstudio.com/items?itemName=DavidPerfors.RegionExpander
Yeah, it's cool. But the feature to expand the background image to the entire editor hasn't worked for me. It messes up the entire look.
At work I use a ThinkPad p51 and X1 yoga. Both seem more than adequate. At home I use my old ThinkPad w530 or MacBook air. Pretty much anything will do although a decent amount of ram helps with visual studio.
I use a Mac, however if you need to run any Windows specific things like IIS, you'll need a Windows computer or a Windows VM. Currently I run my Windows VM on Parallels, and would recommend having 512gb hard drive so you can partition enough hard drive space to your Windows VM. However you can make it work with a 256gb hard drive, but you might be pushing the limit.
Just write your own extension method that accepts an IEnumerable or IReadOnlyList. The way you want it printed out is going to be very different than the way anyone else wants it printed out, so its impossible to have a standard implementation that will make everyone happy.
Is that not quite easy to just write? public override string ToString() { var builder = new StringBuilder(); builder.Append("["); this.Aggregate(builder, (a, b) =&gt; a.Append(", " + b.ToString()), (a) =&gt; a.Remove(1,2).ToString()); builder.Append("]"); return builder.ToString(); } Isn't that vaguely it? Probably better as an extension method tbh. The only benefit of the override is that you could make a list of a list of a list of these lists and it would still print out correctly.
honestly the only limiter is RAM, 8GB or more, and how big the screen size you want (15.6", 17", etc) any kind of cpu is fine for most projects nowadays, unless your solution is like 20+ projects. I strongly recommend windows 10 for Visual Studio.
I’m still on a 2013 MacBook Pro with Windows 10 in a VM.
Yep for our main solution resharper is a massive performance hit and the productivity loss and loss of responsiveness of the IDE just makes it unusable to me. Less than 1 year old dev machine with m2 SSD, 32GB ram, ~250 project solution.
ImmutableList is sealed, so you would have to do it as a helper or extension.
Tim Corey, kudvenkat and Wes Doyle
VIM? Really? OMG that thing is like a zombie, it just keeps living on
just take the source and make your own? Depends on if you already have a bunch of code that demands the type.
I am too! I've been using vi daily since 1981. Well, vim for the past 10 years or so. It's so well-integrated in my muscle memory that it's automatic. Plus my arthritic hands and arms don't do well with moving back and forth between keyboard and mouse. For that reason I still appreciate not having to do it so often. :) --K
It should strictly be an override of object.ToString. This way any external library, external code, or code of my own calls object.ToString it shows a good default representation of a list. I already have cases of a library that calls ToString on nested objects and I want it to work on some type of list
It's kind of risky to implement ToString by calling ToString on all child elements, even an Immutable list could end up transitively containing itself if it's contents are mutable. It's not really a problem if you're just making the class for your own use but if you're making a public library it is the kind of thing you should watch out for. Languages like LISP can print lists this way safely because _everything_ is immutable.
Is there an already existent list library that does it? I dont want to be forced to write the whole implementation of List (plus adapters to json.net and others) just to have object.ToString.
What testing framework do you use for donet core? I'm trying to do linux/windows cross development. I don't have visual studio on linux, but have dotnet core commands. I mainly write in windows/visual studio though.
&gt; I am not sure why someone would want to learn PHP today, unless there was an existing website to maintain. php 7 is pretty neat. Tons faster and also added some type hinting. They are depreciate some old crap in php 7.4. So while not prefect, it's heading in right direction. I enjoy writing [newer] php code, but probably a minatory in that sentiment. As for the 'why' * php is fairly similar to Java/C# syntax, super easy to pick up * Like you said, hosting is super cheap * For small sites, it's easy to get going. You don't need to drag around a huge sdk, toolchain and framework and all that jazz.
No idea. &gt; I dont want to be forced to write the whole implementation I really think you're overestimating it. Just take an existing class and override ToString() or as others said, just write an extension method against IEnumerable&lt;T&gt;.
Any laptop is possible I’ve used a dell inspiron 15R 6 years ago, a thinkpad e550 and now a macbook pro
[Hide Main Menu, Title Bar, and Tabs](https://marketplace.visualstudio.com/items?itemName=Poma.MinimalisticView) to free some vertical screen space. [Disable Solution Explorer's Dynamic Nodes](https://github.com/madskristensen/togglefeatures), so [this](https://raw.githubusercontent.com/madskristensen/ToggleFeatures/master/art/solution-explorer.png) becomes [this](https://raw.githubusercontent.com/madskristensen/ToggleFeatures/master/art/solution-explorer-after.png).
I also use your laptop for development
Derek Banas
It should be easy to make just write a class that inherents from the base class that you want and override ToString to output the string you want.
&gt; I dont want to be forced to write the whole implementation of List Inherit List and just override `ToString`. Or create a simple wrapping class that forwards all `IList` methods except `ToString` to a private `List` instance. &gt; Is there an already existent list library that does it? Picking a collection implementation based on the format of its `ToString` output is seriously putting the cart before the horse. &gt; This way any external library, external code, or code of my own calls object.ToString it shows a good default representation of a list. Look at the way other frameworks that need to stringify various objects do it - like Visual Studio type debugger views, or Forms designer property windows. They don't rely on `ToString` because it's too general. You don't just need a string, you need a string representation for this purpose.
what if u just code the right way?
You'll probably have to derive from one that exists and override `ToString()` yourself. This would be a bad idea for something released as API, such as the .NET Framework types or a NuGet package. Often the `ToString()` implementation is what debuggers call for watch windows or tooltips. Imagine what happens if a list with 50,000 items is part of your debugging session! Worse, you have to figure out how to format each item, which probably involves calling *their* `ToString()`, which might also be an expensive operation that requires asking *other* things... The most contrived case I can think of is a list of objects that list each of their properties where one object contains itself. It's a good way to crash debugger sessions. So library-quality code won't do it. But in your project, you know how big these lists get or how complex formatting their items get, so you're free to add your own code to format them by deriving and overriding their `ToString()`. If they're sealed, fine. Make a wrapper class and override THAT `ToString()`.
I override ToString if I need to inspect a list via Visual Studio to make debugging easier. See the attached screenshot, but basically I do not need to see every property as you mentioned, I make any I do want to see visible. If I need to see more I can expand the list in Visual Studio or modify my ToString. &amp;#x200B; [Inspecting a list of Entity Framework Entities for debugging](https://github.com/DataJuggler/SharedRepo/blob/master/Shared/Images/Overriding%20ToString.png) &amp;#x200B; &amp;#x200B; public override string ToString() { // initial value string toString = "Id: " + Id.ToString() + " Comment Left:" + CommentLeft + " Test Pressure: " + this.TestPressure.ToString(); &amp;#x200B; // return value return toString; } This took all of 10 seconds to override and saves me hours of debugging over a few years so I am sure my company didn't mind me investing in the ToString. You made it seem like a real chore or that you need an extension to do something that takes less than one minute to write.
Just don't make bugs in the first place
I used one of the pro-WPF books, can’t remember the title now sorry. It was basically 1000 pages that started at the beginning and just added a detailed look at each of the sub components building up on itself. WPF is one of the few techs I’ve used that has so much to it that there just wasn’t enough anything online that gave enough detail. This was before online course type websites had established themselves though, so I can’t speak to the quality of any of those
One that turns on.
I do, there's cheaper alternatives that do the same.
I disagree. I don't want to decompile output every single time I navigate to something. Sometimes I just want to view what the damn API is, such as when using third party code.
Never used it. I really like ILSpy though.
oz-code, not free but life changing
You probably have never written a unit or integration test. You need to encapsulate code to test it and regions are the exact opposite.
Why are you so in need of this anyway? This reads like a classic XY problem.
Wes Doyle
This could be also done by extermal tools and set the path to $(SolutionItem) 😊
I'm doing Xamarin work in VS for Mac. I prefer XUnit but have also used NUnit. I'm not quite sure what's available for straight up .NET Core, but when I knew I'd be job hunting I was using MSTest in some ASP .NET Core projects. I don't think the framework matters as much as some people make it seem. I liked XUnit when I used it 6 years ago, but started Xamarin work when NUnit was the only option. Now I'm working on projects with both and I can't remember why I liked XUnit much better. I spent a few months on an MSTest project and same thing. If your testing attitude's right, all of the frameworks are OK.
My guess is that one is maybe using localStorage or something, and the other is using cookies to store the credentials, and that Geckofx persists localStorage, but not cookies. Although, I bet there's a way for you to programatically inject them/extract them, so you might try that. I have no experience with Geckofx, though. I've only used the Chromium equivalent.
ThinkPads are cool
Removed: Rule 4.
Favorite Documents https://marketplace.visualstudio.com/items?itemName=SergeyVlasov.FavoriteDocuments The free Favorite Documents extension lets you create links to frequently used code files and then quickly open them as a group or individually from the Favorites menu. This is a life saver extension when working with a solution with120+ projects.
There is nothing about regions that make them not testable.
You can do C# dev on a Mac?
&gt; The most useful book on-topic for me were Roy Osherove's The Art of Unit Testing. Quoted for Truth. Op (/u/mikedpayne), you want to pick up a copy of this book.
Macbook with windows partition (using bootcamp)
Used to use a MacBook Pro with Parallels. But since I'm a keyboard person, it just wasn't working. Sold the Mac and bought a Surface Pro, and it's been great. i5/16gb/512gb
If you run in debug mode and step through, it should tell you what the error is. Or are you saying it executes fine but the result doesn’t make sense?
Or a Git Bash :)
 The result does exactly what I tell it to do. However in the answer key, with a sample scenario my answers don't match up.
&gt; You can now use a new editorconfig code style rule to require or prevent usings inside a namespace. Anyone who puts their usings inside the namespace brackets deserves something really awful happening to them.
VS Code doesn't seem to handle my C# project well (on windows and linux) so I'm stuck using windows right now. However it didn't seem to break on webpages so I had no problem using ubuntu and vs code for asp.net core &amp;#x200B; So honestly, any that can handle what your workload is. I only do light development on my laptop. 8gb and vs code has worked fine
I've noticed it as well, without R#. The codebase I work on has a lot of holy fuck long files, though, so I don't blame it. Could be their problem as well.
What will you do with all that reclaimed RAM?
https://dotnet.github.io/docfx/ perhaps what you’re looking for?
Yes, you can.
Win 7 with 32 gigs of ram
I have a hunch. Can you post the sample scenarios and answers?
.NET Core is cross platform, and it's been around for like 3 years now. There's also Mono that's been around for a long time
You can install Visual Studio on Mac. Or you can dual boot to windows with BootCamp.
https://github.com/JosefPihrt/Roslynator
https://github.com/tomasr/viasfora
Wow cool but we cant debug a program without seeing the expected and actual output
I've found that I just care about the Power Commands so I've switched to installing just that to reduce bloat. https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.PowerCommandsforVisualStudio
https://marketplace.visualstudio.com/items?itemName=vs-publisher-1448185.ConveyorbyKeyoti
What are some alternatives?
I've learned from Mosh H videos on YouTube and even paid for couple of his courses on Udemy. You could start with YouTube and practice. He mentions his Udemy courses on YouTube quite a bit which is kinda annoying, but I like his language, pace and material.
https://www.wholetomato.com/
https://www.devexpress.com/products/coderush/
I read this post, like we should all post which computers we use... but the comments are a bunch of people just stating it doesn't really matter. So I'm confused... &amp;#x200B; Here's what I've been using for everything, [Asus ROG G751](https://laptopmedia.com/laptop-specs/asus-rog-g751-2/). I have two complaints, #1 it's big and heavy... and #2 it really doesn't have battery life (2hrs if it's idle, lol). Otherwise, it runs nearly anything game wise and robust enough for Virtual Servers and half a dozen IDE's, Languages, and pet projects so far.
I spent far too long trying to figure out why it took a solid 30 seconds to step over each line in one of our processes. Turns out there was a map doing exactly this.
Very true. I'll edit it first thing in the morning. Sorry for that
Buy an MS Step-by-step book and stop thinking about coding and code.
Not Visual Studio, but you can install VS Code.
https://visualstudio.microsoft.com/vs/mac/
Oh, I had no idea.
No big deal, I think it was just announced at Build.
For a bit of design guidance, I would also define your daytime, evening, and yearly costs as constants: const int YearlyPlan = 60 const decimal DaytimeCost = 0.5 const decimal EveningCost = 0.75 Decimal is the generally preferred type for money, but double should be fine enough for what you're doing. You might also get some recommendations to use something like `DAYTIME_COST` for constants, which is also fine but is actually not recommended (I can see the arguments for either, personally). It's also generally a good practice to place these at the top, above anything else, but again that's up to you. You don't need the second set of parens for your daytime hours cost calculation, or any parents for the evening cost calculation. It makes sense for the first set around `dayTimeHours - 10` piece because you want to perform that calculation before multiplying the cost of daytime hours. Without knowing much more, I think this could also be a source of your problem: how often do they get 10 free hours? Weekly? Monthly? Yearly? Referring to earlier, this value should likely also be expressed as a constant.
You can just use JetBrains Rider too
Macbook with JetBrains Rider or VSCode
My company's codebase is gigantic, and VS just can't keep up. I find Jetbrains Rider to be much more performant for huge solutions. And if you're a student you can get a free license.
what is a keyboard person and why does that exclude macbooks?
[removed]
I try to avoid laptops if at all possible
Nah it’s been around for a little bit, but I think it might just be Xamarin rebranded. Not bad though. Think I like Rider better though.
Fuck off with your spam
\^\^\^\^\^
run a whole other instance of VS
No, it's just that some people are vocal about *their* experiences with it.
AceJump, and move the cursor around in one single shortcut. (here's a demo with IntelliJ, but almost every editor has an Ace Jump extension) https://youtu.be/8cgy8ITtsJE
What he said
I've always used [Sandcastle Help File Builder](https://github.com/EWSoftware/SHFB)
Ha ha thanks. Once you get the basics down, here's my secret combo: stackoverflow.com, youtube and talking to myself, explaining the problem as if I were the janitor...
https://en.wikibooks.org/wiki/C_Sharp_Programming
Does this handle code formatting (e.g. `prettier` in js, or `go fmt`)? Been looking for something to handle that in VS.
&gt;Once you get the basics down, here's my secret combo: stackoverflow.com, youtube and talking to myself, explaining the problem as if I were the janitor... thanks sir!!!
thanks!!
There are none.
May or may not be for you, http://shop.oreilly.com/product/0636920027812.do Head first c# 3rd edition. The head first programming book series gets mixed reviews. They are extremely beginner friendly and somewhat repetitive. It has great easy to grasp examples.
Kung fu bow.
It's been around for at least 2 years. I taught an intro to programming in C# and basically the entire class used a mac
For me, CodeRush.
Since your company already use C#, which means there must be various C# projects in your source control. I would say first try to learn the basics of the language such as OOP, keywords, conditional statements, loops etc. After that open the project in Visual Studio start debugging whole day, there is nothing better to see how the experienced devs have wrote that code. At first it wont make much sense but after a while the code will start talking to you. It worked for me and it might work for you. All the best for the journey.
On the other hand, how much time is saved not waiting for it, dealing with it's uncommon-but-still-present issue where the syntax checker cannot see your references but the code builds fine, or dealing with "An extension is slowing down Visual Studio" prompts? And I say that as somebody who has an active Resharper subscription...
Oh really?:) https://stackoverflow.com/questions/125319/should-using-directives-be-inside-or-outside-the-namespace I have other problem: why namespace is indented? It basically means that your code will be always indented for no reason at all. I wish that we could change the indentation rule for it
You should learn what the difference is and then you’ll likely delete that comment...
Removed: Rule 4.
Off the top of my head: dayTimeHoursCost = ((dayTimeHours - 10) * 0.5); This doesn't account if `dayTimeHours` is less than 10 hours played. If the user only plays for 5 hours, it produces a negative result. You would need to clamp the result.
250 projects in one solution? Holy hell.
I had that in visual studio 2017 without r#.
Try Rider. It's awesome in Linux. If you are a student you can get a free license.
 Does this give the same results as yours? static void Main(string[] args) { const double dayHourlyCost = 0.5; const double eveHourlyCost = 0.75; const int dayDeduction = 10; Console.Write("Hours spent playing daytime video games in a week: "); var dayHours = Convert.ToDouble(Console.ReadLine()); Console.Write("Hours spent playing evening video games in a week: "); var eveHours = Convert.ToDouble(Console.ReadLine()); Console.Write("Hours spent playing evening video games in a weekend: "); var weekendCost = Convert.ToDouble(Console.ReadLine()); var dayPlaytimeCost = (dayHours - dayDeduction) * dayHourlyCost; var evePlaytimeCost = eveHours * eveHourlyCost; var finalCost = (dayPlaytimeCost + evePlaytimeCost + weekendCost) * 52; Console.WriteLine("Cost of normal membership: $60/year"); Console.WriteLine($"Cost of casual membership: ${finalCost}"); if (finalCost &lt;= 60) { Console.WriteLine($"Casual membership is cheaper by ${(60 - finalCost)}"); } else { Console.WriteLine($"Normal membership is cheaper by ${(finalCost - 60)}"); } Console.ReadLine(); }
I never used it, as I couldn't see the appeal in dragging my computer's performance down the drain.
Thanks !!!
Amazing !! Thanks
&gt; write a whole implementation ... (plus adapters ...) What? class MysteryList&lt;T&gt; : List&lt;T&gt; { public override string ToString() =&gt; '[' + string.Join(", ", this) + ']'; } That's literally it. It already works with json.net.
Agree.
Here's his YouTube channel: [https://www.youtube.com/user/programmingwithmosh](https://www.youtube.com/user/programmingwithmosh)
Cause of another keyboard layout I would guess. I am using mac and pc in parallel and switching keyboards isn’t a pleasure
[Dell Inspiron 15 (i3/4GB/1TB/Win10)](https://www.flipkart.com/dell-inspiron-15-3000-core-i3-6th-gen-4-gb-1-tb-hdd-windows-10-home-3567-laptop/p/itmf3s32ceh2zxn5). Its an excellent workhorse and puts up to VS2015 along with several other apps like browser, CLI, etc. open at the same time. However, android development is still slow on that, especially the emulation part. I'm yet to try `genymotion` though, think it might improve the speed somewhat.
Mine bitcoin
This, OP. Check this condition, because current logic is flawed.
Surface Pro i7
https://wyam.io/ . Been using it for a while now and it works pretty damn well.
I use -my- laptop.
I didn't even know there were people who do that, but yes, I agree with you.
[Well, uhmm... ](https://marketplace.visualstudio.com/items?itemName=Dreamescaper.IntelliSenseExtender)
namespace is indented because it's not required (f.ex assembly*.cs files traditionally don't have namespace used)
My teammates moved from a desktop to a laptop, and found that a CPU that's faster, but has less cores, is slower than a CPU that's slower but has more cores. In this question it was an older i7 with 4 cores and hyperthreading compared against a newer i7 with 2 cores and hyperthreading. I've had the same experience comparing an older i7 against a newer i5 (4 cores, no hyperthreading). So the more cores the better is my experience.
I do understand that; but consider my point: Most (If not all) code that developer is faced with will be kept inside namespace. Indenting said namespace gives no information whatsoever when all the codebase is within namespace. To be completely honest, I'd prefer similar approach to Java's package - oneliner at the top of the class that defines namespace for the whole file. (And no, I'm not arguing namespace vs package just how it's written, syntactic sugar). I've yet to face a file with multiple namespaces.
I'm guessing the whole multiple-namespaces possibility was done both for consistency (everything but `using namespace` and `#define` have clear area of effect) and to support generated code (that was time of WinForms). Though winforms and `xsd.exe` certainly didn't use multiple namespaces. The namespace indentation eats 4 spaces by default. In general case by the time you're editing class method, you're 12 spaces in (out of general 80 recommendation). That's basically 30 + 30 characters to declare and set something or call a function with some parameter. I really dislike bundling multiple statements into single line so ~30 characters for a function call and maybe a first couple of parameters is ok for me.
[removed]
I learned it from link in another comment. That mentioned code breaking by creating a Math class in a local namespace. However, to me that seems much more preferable to code breaking because an external namespace/library defining a type breaking my code. So after learning I'm even more compelled to put using outside of the namespace.
Agreed. They serve no purpose other than to make it less clear where a using is pulling an import from.
Are you talking about .net core? Wpf? Xamarin? Wcf? .net framework? uwp? Asp.net? Because depending on what you want to do the os will change.
Just out of curiosity, is that win 7 ultimate, enterprise, professional, home premium, or home basic? If it's the latter two your 32 gb of ram aren't being used. Also, why are you running a 10 year old os that's going to be eol this coming January?
We aren't going to change two more than a decade old 1m+ LOC codebase just to conform with everyone else. It's really not bad and you get used to it really quick btw.
This is what OP is talking about: &gt;There is now experimental intellisense completion for unimported types! You now receive intellisense suggestions for types in dependencies in your project even if you have not yet added the import statement to your file. This is literally the only reason I am still using resharper. So exciting!
Guys, i'm getting really sick about performance drop of R# for my vs and MVC projects, one feature that i missing is navigation between controller &lt;-&gt; view like this [https://blog.jetbrains.com/dotnet/2011/12/07/providing-intellisense-navigation-and-more-for-custom-helpers-in-aspnet-mvc/](https://blog.jetbrains.com/dotnet/2011/12/07/providing-intellisense-navigation-and-more-for-custom-helpers-in-aspnet-mvc/) Any extension to help me with this way, or way to navigate back from @html.actionlink to right controller, function. Thanks
I am (among other things) a web developer (I started with the web in 1997): I work on every tier. So I speak HTML, CSS, JS, PHP, Python, C#, SQL, and a pile of others. I know programming languages that are dead now. (X-spec anyone?) Some you've never heard of. (Remember Squeebler?) For over 4 years, I had a job creating new programming languages, so I'm a bit of a language snob. I don't consider HTML, CSS, or PHP to be "real" programming languages. You can't write program logic in HTML, it merely describes how things should look. You can't write program logic in CSS, it merely adds additional visual attributes to HTML. PHP you can write a bit of logic in, but it's primarily designed to augment HTML and hook it up to a database. REACT is, as far as I understand, a Javascript library, so really you're programming in Javascript, albeit with that library. Javascript *is* a real language, although of limited use because it's either running only in the browser or designed to be used only on a web server. You can't write a command line application in Javascript, or at least, not without jumping through a lot of hoops to do it. Python is a real programming language, I just think the syntax sucks. Don't even get me started on Ruby, the syntax is so nightmarish I gave up in about half an hour, I don't intend to hurt my brain with that. C# is based on C syntax (so is Javascript), but object oriented (like C++ or Java) and garbage collected (like Java). I find it has less problems than Java (I can't tell you how much of my life I've wasted with problems with JAR files and the classpath) and that the syntax and the libraries tend to make more sense. So really, while there's no major programming language I *love* now, what I have to say about C# is "it sucks less!" and that's high praise from me at the moment. After learning a little C#, learn some SQL too. You don't have to learn to do anything complex in it, just learn some basic commands. Like 5 or 6 commands will get you through most stuff with most databases, and if you learn it, you'll be ahead of most of the pack of programmers. Then learn "regular expressions", you can use them in a lot of languages, they're very powerful, and most people never bother.
 if (item.Any(s =&gt; s.Price.HasValue)) { DateTime? biggestStartDate = item.Where(s =&gt; s.Name.Contains("Cate") &amp;&amp; s.Price.HasValue) .OrderByDescending(t =&gt; t.StartDate).FirstOrDefault()?.StartDate; if (biggestStartDate.HasValue) item.RemoveAll(s =&gt; s.StartDate &lt; biggestStartDate.Value); } item.RemoveAll(s =&gt; s.Name.Contains("Cate") &amp;&amp; !s.Price.HasValue);
If that was the case wouldn't the logged in user stay logged in even after deleting the cookies? It's not the case (for the 1st website).
If you’re a touch typist your fingers get used to keys being in certain places. Like the ctrl and alt keys, which are reversed on the Mac.
thats neat
Any? I use a HP EliteBook 840 G5 with i5 and 8GB running ubuntu. I develop mono, monogame and .net core using vscode and cli.
It’s enterprise, and a lot of the software my company uses is unstable on 10 so that’s not really an option for us.
I figured that after a few minutes but then I was stumped on what else I could do
I will check it right now
I will also need it, for the next week
Edited the post for this
Done
Dell XPS 13 9380. 4K screen, 16gb Ram, 512gb HHD. Amazing device.
This site is good when you check for solution for particular issue: [https://wpf.2000things.com/](https://wpf.2000things.com/)
Are you coming from Python? It sounds like you're coming from python. Don't use summary text representation as the actual information of your data structure.
 First of all thanks for the answer, I chose C# because I can use to do web application how I do now, so I can add on my CV that I can do web app or Mobile application with C# too, and then because I can used for creating other stuff that not his web application, I already know SQL, I used for my last project
Do not use ToString for the purposes of [serialization](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/serialization/). Please.
I mean, once you start using resharper for it's boilerplate creation and not so much intellisense 2.0 it's a literal godsend. as an example you have just created an interface with 20 methods. Visual Studio tells you to go write the implementation and the 20 methods in the implementation. resharper writes the method declarations for you. you want to use a service, which means declaring a private variable of the service type not to mention taking it in the constructor. VS wants you to write it in the constructor, then declare the private variable. resharper declares it for you at the press of a button after you write it in the constructor. there's tons of stuff like this that makes resharper and by extension Rider really amazing at time saving. not to much the improved intellisense. but Visual Studio's definitely catching up natively.
Basics? The very basics? [Bob Tabor](https://mva.microsoft.com/en-US/training-courses/windows-10-development-for-absolute-beginners-14541?l=cWn0dxwqB_4305632527) Absolute Beginner guides. UWP/WPF, it's both XAML; you'll learn the layout and styling parts. For more WPF specifics, Brian Noyes WPF courses: Data Binding in Depth MVVM in Depth Productivity Playbook Extending XAML applications with Behaviors
Perhaps it is time to amend the 80 char rule. After all, haven't we all a horizontal scroll bar?
Sorry, I'm not sure what else. I tried re-implementing the program using the specified rules and got the same result as you. Wouldn't be the first time requirements are incorrect/ambiguous or the sample inputs/outputs provided are incorrect.
That's also possible. Thank you for the help, nevertheless. I do greatly appreciate it.
I have Pro WPF in C# 2008. That what you are referring to? As far as quality goes, I find the book easier to learn from as other places don’t seem to explain it well enough for me. Just my opinion though.
I changed from PC to Mac a few weeks ago so I get it. I just switched the command and option buttons around which helped a lot so everything is in the "right" place on the external keyboard. I'm still getting used to the other differences but it's going fairly smooth so far.
No problem. Check my ninja-edit on my post though with regards to acknowledging the discrepancy and moving on.
I appreciate that. It helps a lot, and once again, than you.
I agree. I switched from PC to Mac a few weeks ago. It's not too bad though. Mac lets you switch keys around just on a certain keyboard so I was able reverse alt and command keys JUST on the external (windows) keyboard and then physically switch the key caps as well so it matches with mac better.
Actually VS can do a lot of those things in the lastest versions. You should really try VS without Resharper, you will find that you miss less things than you might think.
I've avoided using R# for a long long time and VS can handle pretty much anything I needed it to do or else there is a free plugin (Productivity Power Tools most likely) that can do the rest. I recently switched to Rider because Mac and am really not loving it. Missing soooo many features :(
Yeah, I did an experiment to see if I could just use VS 2019 rather than it and Resharper and I struggled. Some of it was just muscle memory because with Resharper a lot of stuff just happens. In VS 2019 you could have it find the required namespace and add a using, but rather than prompting you automatically you had to press ctrl+. explicitly. Sounds like a tiny thing to remember, but I hated it.
Choose the one that you feel most comfortable with.
Thing is, there are plenty of VS plugins that offer that without the ReSharper bloat. And depending on the VS version, even editor macros.
About the only thing Visual Studio doesn't do these days is auto implementation hash code and equals methods. Hell, automatic interface methods have been in since 2010.
Try out VS for Mac instead. They are working of a common infrastructure.
Inside makes a lot of sense for code generation, although there's actually a guideline on that which suggests all classes should be fully qualified in the code itself, but for application code it means you have to look at the current namespace and the part of namespace on the using statement to know what is actually being imported. The example you cite is an excellent explanation of its benefits, but I'd also want to slap any developer who added a "Math" class to my application. What maths is it? If it's an extension to System.Math call it MathExtensions. Just because we can have multiple classes with the same name and use namespaces to differentiate them does not mean we should. Naming is hard, but not that hard. If you've got your own Math class, and you're using System.Math and your Math class together, I'd probably have moved whatever operation is using both into your Math, wrapping it into one explicit, properly named operation. Then I'd rename your Math to have a domain relevant name. Finally, it's an MS guideline even they don't follow. Create any project type in VS and the using statements will be outside the namespace. Have a look through the .NET Core source. All outside.
Guessing you’ve seen this: https://azure.microsoft.com/en-us/updates/visual-studio-online/?
ImmutableList is sealed. I cant do that.
Yes, it does not however have all of the features I need hence why I am wanting to create my own. WPF and external library support are must haves for me.
I know that Microsoft is [working](https://devblogs.microsoft.com/visualstudio/intelligent-productivity-and-collaboration-from-anywhere/) on a web based IDE. As for how to implement it, other than creating a functional text editor - Your backend should support compiling the code - you can either use roslyn, or something already working like azure pipelines.
Why not use citrix? Basic rdp? Teamviewer? Any kind of remoting is easier to set up than trying to rewrite an IDE
Actually I am currently using Citrix Virtual Apps to host VS 2019 in HTML5. I have been informed however this is against my schools IT policy and I can’t do this.
How can they tell? Use ssh via port 443 and then rdp via ssh. They will never be able to tell what’s inside it...
Impero. It’s a remote screen viewing tool. IT techs and teachers get notified when I log on and they can view my screen. Tbh I just tell most of the teachers it’s a web based IDE and they believe me since they don’t know better but obviously the IT techs have a little bit more experience. I am currently lobbying the director of IT to allow use of my personal laptop on the network, which would allow me to use Citrix uninterrupted but not sure if they’ll want their remote tools on my device as well.
Forgot to mention, I already have experience with Rosalyn so the compiler part should be easy. Text editor however, I have no idea where to start on that. I believe Intellisense is open source anyway as it is used in VS code so I could always start at that point.
To add to my post, even if the school allow me to use VS I’d still like to do this as I do need a decent idea for a school project. I don’t start the project till Jan 2020 so plenty of time to consider what technologies and how practical something like this would be.
I really don’t get how you need to use vs for school but they won’t let you use it?
School uses MDT (Microsoft Deployment Toolkit) to image all of the workstations. Each image has all of the applications required in it. Image is currently around 30 or 40 GB so adding a 10Gb VS environment really isn’t going to work out. Would take ages to reimage all of the machines over the network. I think the main concern is the fact that they block exes from running on student accounts, so you wouldn’t even be able to debug code anyways. They aren’t going to set that up for a single student. They probably have better things to VS code can be ran on the school PCs but that is just not enough for me. Again, even if the school lets me use VS on my personal laptop, I’d like to do this anyways as I think it would be a cool idea and I’d definitely learn a lot more about web and server development.
Ahm so if the school didn’t install vs on the pc they can’t require you to use it. Web and server development is not even going to begin to scratch the surface of what you’re up against, but i wish you luck!
Thanks! I imagine I’m in for a whole world of pain once I get into this..... Thinking of all those null reference exceptions...... To be clear, they don’t require I use VS. I get to pick which language to code my project in and everyone else chose mostly python.
I've been working on a project which includes some elements of an IDE for a couple of years, on and off. You can check it out [on Github](https://github.com/ddashwood/CodingTrainer). It uses [CodeMirror](https://codemirror.net/) to provide the basic browser experience of typing code. This is a great library - looks great, and it's incredibly versatile and extensible, both in how it looks and how it behaves. The code is run on the server, and console input/output has been intercepted to allow the user to interact with their code through their web browser. The code runs in a sandbox on the server, but there are a few issues with how the sandbox works. Things like autocompletion have taken a lot of work. The way I've done it is by customising CodeMirror so that whenever you change your code, it sends the code to the server. The server looks for autocompletion suggestions and errors in your code, and sends them back to the client. Then, extensions to CodeMirror display those for the user. This will probably have scalability issues, but it's good enough for my needs right now. It uses SignalR to communicate between the server and the client. It doesn't support WPF (it's really only for console applications), and you'd need to think about how to display user interfaces. What you're doing is, based on my own experience, going to be a big challenge - but lots of fun! Feel free to ask any questions about what I've done.
Thanks! Can’t wait to get started on this! I think I could get code compiling working relatively easily but the hardest parts are going to be autocomplete and WPF. CodeMirror sounds interesting though and may make things a whole lot easier for me!
Disable Mouse Zoom
Simulate the universe.
I'm so sad that they haven't updated it for 2019 yet
You could look at using an [IHostedService](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-2.2) to monitor your socket. You'll be able to use dependency injection and logging that way. Thread wise things might be different if you're using IIS or running standalone with Kestrel.
Was just about to post the same! Think it makes a lot of sense for OPs case.
It does indeed.
What about the test explorer? It's arguably much better.
Down voted for not properly submitting the link.
We also all have a vertical one. This is not a winning argument.
I must admit that the argument of not indenting the main namespace is a valid one. Admittedly, I think that wanting to have multiple nested namespaces in a single source file is the main issue there? Wouldn't you agree? However, on the subject of line length, I try to remain within 120 characters per line mainly for legibility's sake.
I also work on large solutions , we use r# and I have to disable it when working on the biggest solutions as it just can't keep up. Would like to try Rider out but work policy requires VS.
Also it prevents me from going insane when reading coworker's xaml.
The [Visual Studio](https://www.youtube.com/user/VisualStudio/videos) YouTube Channel is really great on many topics. It might not fit the "youtuber" category, but you'll find a bunch of really useful material.
Ctrl+M+F with CodeMaid installed. Easy to remember too -- "Where are you MF?"
down voted for down voting the post
the answer key is just wrong. .5 * 14 is 7 .75 *15 is 11.25 12 * 1 is 12 so any multiple of these numbers added together MUST be a multiple of .25 which anything having a decimal of .4 is not.
&gt;Now I want to get this information to my ViewModel without knowing about the viewModel. &amp;#x200B; Do you mean you want to get this information into the View without the View knowing about the ViewModel?
If you can't run exe's that aren't installed via the image, how do you expect to run, or even deploy an IDE you could build?
no, ignore the View, this is bound to properties in the viewmodel, that's no problem. But the viewModel callback function from the library of the sensor is in the "sensorService" class that is passed to the viewModel via the constructor. The viewModel can access every function inside this sensorService, that is no problem. But the sensorService uses a library of the sensor and a callback function will send information to this class. Now I have a hard time to understand how I can pass this information to the viewModel.
Moving from Node.js to .NET CORE. Step 1) forget everything Step 2) learn C# Step 3) .... Step 4) profit
Ok, I see why you discussed events now. You're right. Simple solution is to expose an event. The complicate bit is to understand that in WPF there is only one thread that can talk to the UI, so you have to use the Dispatcher to push things from thread A to thread UI. We use async await for this these days mostly. Events are subscribed to and unsubscribed from. If you don't unsubscribe you can get a memory leak and all sorts of other weird issues. This can be a problem with view models because their lifetime depends on the view's lifetime. There are better options, use messaging would be my suggestion, but it sounds like you need to get to grips with events, view model life cycle and Dispatcher first.
Happy cake day.
So, in your sample scenario you wrote "Daytime hours" twice. Assuming that the second Daytime hours was supposed to be Weekend hours, then 14 weekday, 15 weeknight, and 12 weekend hours comes out to $1,219.40 / yr IF weekend hours are charged at $0.85/hr instead of $1. However, given the current rates, and integer hours, there are no inputs that will return a value with 40 cents, as /u/TheAtomicOption said.
1) **Always** represent money as `decimal`. Never represent money as integers, doubles or floats. You can define decimal literals with the `M` suffix like this: `decimal myValue = 10.534M;` Replace all double literals as decimal literals (like 0.75M for the cost of evening hours, etc.) 2) `dayTimeHoursCost` should be calculated like this: `decimal dayTimeHoursCost = Math.Max(dayTimeHours - 10, 0) * 52 * 0.5M;` 3) Try calculating the individual yearly costs **first** and *then* add the results for total cost. This likely won't change the results but it may illustrate problems with the logic. 4) As a matter of personal preference that I think is best-practice, I usually declare variables *when I actually need them in the method* as opposed to declaring them all at the top. This prevents me from unintentionally using a variable before it has been initialized or handled in some way. Basically, I am leveraging the compiler's ability to detect errors (design time and build time) if I attempt to use a variable before it's been declared in code. Try the above changes and re-do the calculations. Not sure if it will help but it might. The second suggestion will correct invalid answers when day time hours &lt;10 but the example you gave uses a value &gt; 10 so I feel as though the results should be the same. &amp;nbsp; Also, are the 10 free hours *every week* or just 10 free hours every year? I believe it would be 10 hours every week, which is modeled in your logic, but it should be clarified.
&gt; The book Dependency Injection in .NET, by Mark Seemann. The parts about specific containers might be obsolete now, but the bulk of the book is about why to use DI and how to use it. There's a new edition of this book that just came out in March. They've changed the title to "Dependency Injection Principles, Practices, and Patterns", but it's essentially just an updated edition of the original.
It's not safe. Use the Windows Credentials Store instead. Don't try to make an own solution.
Yes that would be unsafe. You should also use SecureString for the password field. https://docs.microsoft.com/en-us/dotnet/api/system.security.securestring?view=netframework-4.8
I use App Settings data in some apps and it is real easy. &amp;#x200B; If you want to view an open source project that uses the App Settings to store the last two connection strings (if the user checks 'Store Connection Strings') here is the project. &amp;#x200B; DB Compare [https://github.com/DataJuggler/SharedRepo/tree/master/DBCompare](https://github.com/DataJuggler/SharedRepo/tree/master/DBCompare) &amp;#x200B; DB Compare is part of the Data Juggler Shared Repo, and currently it is all in one large repo. I just updated my Nuget Packages so soon by this next weekend I will start separating the projects, but for now you get all my code if you want any. [https://github.com/DataJuggler/SharedRepo](https://github.com/DataJuggler/SharedRepo) &amp;#x200B; If you just want to view the code involving the app settings, I use a class called 'SecureUserData'. Whether or not it is actually 100% secure as the previous post pointed out, is not a concern to me since this is a tool for developers, and is open source and your own development machine is compromised, you have bigger issues to worry about than how you store application data on your own machine. &amp;#x200B; [https://github.com/DataJuggler/SharedRepo/blob/master/DBCompare/DBCompare/Security/SecureUserData.cs](https://github.com/DataJuggler/SharedRepo/blob/master/DBCompare/DBCompare/Security/SecureUserData.cs) &amp;#x200B; And if you look in the class MainForm.cs, there is a method called SaveSettings line 887: &amp;#x200B; [https://github.com/DataJuggler/SharedRepo/blob/master/DBCompare/DBCompare/MainForm.cs](https://github.com/DataJuggler/SharedRepo/blob/master/DBCompare/DBCompare/MainForm.cs) &amp;#x200B; I modify the class SecureUserData for each project, and when ever a Compare takes place I call SaveSettings, and there I store any values from the UI so it restores next time the app starts. But the end results is after I set all the properties in the SecureUserSettings class, all you have to do to save is call: &amp;#x200B; // Save the settings this.Settings.Save(); &amp;#x200B; Then when the app starts, to load the settings simply: // Create the Settings objects this.Settings = new SecureUserData(); &amp;#x200B; To me this is easier if the user of the app is going to be a developer, but I still think 8 tracks were cool.
I bought 64gb of ram, can I mine now?
Your numbers look right. Is there more than one example? I thought maybe it could be that the 10 hours free was per year and not per week but that would be a higher cost and not less. Somehow they got to $23.45 per week ( $1219.4 /52). If my maths is correct, you therefore need to somehow get .45 from the .75 cents but I can't see a way to get there. &amp;#x200B; In regards to your code, what other says are good improvements, here is what I would do as well (although for playing about probably overkill): &amp;#x200B; 1. Remove magic numbers ( eg constants: DAYTIME\_RATE = .50 so the formular reads: ((dayTimeHours - FREE\_DAYTIME\_HOURS\_PER\_WEEK) \* DAYTIME\_HOURS\_RATE); 2. Validation. You should validate your inputs. very basic example:while(!Double.TryParse(Console.ReadLine(), out dayTimeHours ) ); 3. Handle negative cost. So if the Day time hours is less than 10, dayTimeHoursCost should be 0. 4. Personally I would rename totalCost to totalCostPerYear, then you can remove the comment, 5. Refactor to private methods, the calculation could be its own method, and get input as well:`private double CalculateYearlyCost(double dayTimeHours,double eveningHours,double weekendHours)` `dayTimeHoursCost = (dayTimeHours &lt;= FREE_DAYTIME_HOURS_PER_WEEK )` `? 0` `: ((dayTimeHours - FREE_DAYTIME_HOURS_PER_WEEK) * DAYTIME_HOURS_RATE);` `eveningHoursCost = (eveningHours * EVENING_HOUR_RATE);` `weekendHoursCost = weekendHours * WEEKEND_HOUR_RATE;` `return (dayTimeHoursCost + eveningHoursCost + weekendHoursCost) * WEEKS_IN_YEAR;` `}` `private double AskForValue(string message)` `{` `double value` `Console.WriteLine(message);` `while(!Double.TryParse(Console.ReadLine(), out dayTimeHours ));` `return value` `}`
Thanks for the tip. Never head of windows Credential Store. Are you talking about [this](https://docs.microsoft.com/en-us/windows/desktop/secauthn/credentials-management)?
Exactly. C# can do everything for you. No loose typing like JavaScript loves to do. Now with the announcement of web assembly JavaScript will be a thing of the past. It will actually work on all modern browsers.
Erm....it’s web based? As in, it’s runs in the browser...? Read the post title
Underrated comment, haha. This guy speaks the real truth
make your own list that inherits from ReadOnlyCollection: `class MyList&lt;T&gt; : ReadOnlyCollection&lt;T&gt;` `{` `public MyList(IList&lt;T&gt; list) : base(list) { }` `public override string ToString() =&gt; '[' + string.Join(", ", this) + ']';` `}`
Yep, my bad :)
huh? What is `ImmutableList`? If it's sealed, then that means it's already a class. Just use that one instead.
one of mine refuses to newline attributes, xaml styler saved his life
basically, this article should be on programming circle jerk 😂
WAT.
Interesting. I looked for CodeMaid as an extension and couldn't find it. Is it not supported for VS2015? In the meantime, I'm stealing that key binding for Find in Solution Explorer. Thanks!
The debugger is your friend. Set a breakpoint on the switch then run the code. Check the values of the various Contains() queries. Then check the value of the combined check (all the contains &amp;&amp;'d together).
Already tried... That's how I know that green and brown exist, but I just don't understand why it won't invoke... Maybe I wrote the case wrong? Maybe wrong syntax?
You shouldnt use SecureString [https://github.com/dotnet/platform-compat/blob/master/docs/DE0001.md](https://github.com/dotnet/platform-compat/blob/master/docs/DE0001.md)
`Any()` returns true if there is at least one element that matches the supplied predicate. If there is no element where `Name` contains *both* `"Brown"` and `"Green"`, it's not going to return true, and the case won't be executed. I think you've got a logical problem, basically.
It should be supported. I don't have 2015 installed to verify though :(
Wrong syntax, take a look at the [documentation]( https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/switch). Edit: Add the following example: ``` switch (caseSwitch) { case 1: Console.WriteLine("Case 1"); break; case 2: Console.WriteLine("Case 2"); break; default: Console.WriteLine("Default case"); break; }
Okay C# where is eval?
You probably need to write your own. This should be a pretty trivial wrapper for ImmutableList (which is probably why there isn't a nuget package for it). If all you're after is additional information in the debugger, you look into using [the DebuggerDisplay attribute](https://docs.microsoft.com/en-us/dotnet/framework/debug-trace-profile/enhancing-debugging-with-the-debugger-display-attributes) instead of overriding `ToString()` when you build your class.
You beat me to my response because I had a work email come in.
Get your priorities straight! haha ;)
So OK, here's what I think you're saying. Your Command calls a method on a class that uses an event-based pattern to perform asynchronous work. (Callbacks are basically events, but I'll use callback syntax.) So your type has some method like: public void DoWork(SomeDelegate callback); Maybe with some other parameters, whatever. If we aren't using any kind of framework to help us, the least elegant way to handle this is to handle the callback within the ViewModel, remembering the callback might not happen on the UI thread. So the user knows we're waiting on some async data, you might display a busy indicator. So the basic skeleton is: private void YourCommandExecute() { IsBusy = true; _theType.DoWork(WhenWorkCompletes); } private void WhenWorkCompletes(DoWorkData data) { WhateverYourDispatcherIs.Invoke(() =&gt; { SomeProperty = data.SomeProperty; AnotherProperty = data.AnotherProperty; IsBusy = false; }); } I usually think it's more elegant to expose this as a Task these days. It's not super hard, but you need an extra dependency. It ends up looking something like this, assuming you're using DI and other things that make MVVM less painful. // Your description sure sounds like looking for Bluetooth devices! public class DevicePoller { private readonly IActualPoller _poller; private TaskCompletionSource&lt;DoWorkData&gt; _tcs; public DevicePoller(IActualPoller poller) { _poller = poller; } public Task&lt;DoWorkData&gt; DoWorkAsync() { // Not pictured: throw if _tcs is not null! _tcs = new TaskCompletionSource&lt;DoWorkData&gt;(); _poller.DoWork(WhenWorkCompletes); return _tcs.Task; } private WhenWorkCompletes(DoWorkData data) { _tcs.TrySetResult(data); _tcs = null; } } Now your ViewModel's command needs to be able to support calling Async methods, there are a lot of articles about how to do that. I'm going to assume you've found some version of AsyncCommand. Your VM's command implementation would now look liek: public async Task YourCommandExecute { IsBusy = true; var data = await _devicePoller.DoWorkAsync(); SomeProperty = data.SomeProperty; AnotherProperty = data.AnotherProperty; IsBusy = false; } There's a lot here I glossed over, like how to handle exceptions or cancellations. This should just give you some ideas! Another poster mentioned messaging, that's also a good approach but would be an entirely different post at least as large as this one.
StringComparison.OrdinalIgnoreCase ... Should be using InvariantCultureIgnoreCase
TBH, i use 160 as my rule. The only time it's a problem is looking at it on github. (I just widen the github style because it looks ridiculous on widescreen)
You can submit links as the "title" instead as a link in the body of a message
Dreaded day job! (that enables me to eat and have a place to live and feed my dog). Every time I get ready to quit, I look at my YouTube subscriber count of 42 and go back to work. It was 36 at the start of May, so almost 20% in one month. Joe Rogan look out.
Resharper tanked my performance and crashed so much that i never could actually use it. Nice to see VS almost having feature parity 👌
 *checkedListBox1* seems to be your list of checkbox. By editing its font it affects all checkbox. Is it possible to edit the font of a specific item using `checkedListBox1.Items[e.Index].Font`?
Thanks a lot, going to try this tomorrow right away! I work already with asynchronous methods. This gave me definitely some ideas. &amp;#x200B; And you are right, it's either a bluetooth or a serialport service that implements the ISensorService interface I implemented. For Commands I use prisms delegate commands and I started using asynchronous messages already (but I'm still a bit clumsy with it). &amp;#x200B; Another workaround I started to use is Prism's eventaggregator. The callback method publishes the information about the devices it has found and the viewmodels that are "interested" subscribe to that.
It's called reflections and is again typed in c#
If you make `WhenWorkCompletes` a local method, you can make `_tcs` a local variable rather than a field.
I'm a huge fan of netcore and C# ...but .. creating all those mapping classes ... oh man .. they must really hate their life :))
If you do web development for any length of time sooner or later you will run into PHP. PHP still (despite a lot of people claiming it is over) running the vast majority of the web. Modern PHP with a decent MVC framework isn't really that much different these days than building an ASP.NET MVC site. Slowly they are depreciating the insecure / crap parts out PHP on each release.
Reflections compared to eval are tiny in functionality. I can write (and need to) entire programs in eval, and no they arent typed, property types will be strings for example. Most compiled code I've seen works on strings mostly to escape those typing boundaries and fullfill business logic. Example : do a query builder where user can set things like something (which doesnt even exist at compile time) is bigger than something (which is calculated via formulas typed by user from things that too dont even exist in compile time). And unlimited depth, so formulas using other formulas.
The SO question is not found. What external service would they be authenticating to? Azure? Office 365? LDAP? SAML?
You can use reflections to access other assemblies and you can use it to compile code straight to Assemblies and inject them into your running code... And I've never seen a pattern implemented in eval, that couldn't be implemented as easy in another way. You can write CIL and inject that as well... And both are Turing complete, so there is no actually difference in capabilities, only how hard it is to write.
Thanks
And so what I should make assemblies with every possibility and mix and match? Sorry but that is horrible. And still strings galore. Scripting languages are just better in every way except for small performance loss, which doesnt even matter much in age of 36 cores datacenters.
Some have 32:9 monitors, and almost nobody codes with below 24'. That rule was made when majority had 15' or less.
It can be done at runtime so you don't need to make assemblies that cover "every possibility". C# allows type definition and modification during runtime. I'm almost certain code can be compiled while running and dynamically typed objects are also available.
Can't comment on TCP, but I can confirm that spawning your own background threads isn't really compatible with the architecture or design philosophy of ASP.NET. They will get killed periodically if you try to use them. Best to have anything long running run in a separate service.
Okay I will ask plainly - you really think that's easier and more maintainable than eval?
The question is: do you _really_ want it?
That's exactly what I want to know, and how to do it.
``` switch (elem) { case elem.Any(...): break; case elem.Any(...): break; } ``` That will not work. `elem.Any(...)` is an expression, but `case` must match a pattern (constant and type are the only patterns that exist right now). What he may actually want is something like the following: ``` switch (elem) { case var _ when elem.Any(...): break; case var _ when elem.Any(...): break; } ```
I would argue that dynamically typed languages are inherently less maintainable.
I edited my post and also links. Please take a look also i have found solution but i will be glad check out yours.
Math. Max(0, hours-10)
My need is: &amp;#x200B; * Have a canonical way to print contents of a datatype, including lists, including datatypes which contain lists. * Be able to display the value of a datatype which contains lists (as well as lists) in debugging. * Be able to quickly print the contents of a value without additional effort when programming. E.g when using a logging framework to log info about said datatypes at various points of the program, if I want do a quick Console.WriteLine, etc. * Do all of the above in a compatible way with different external libraries that also print values. Such as: * LanguageExt: When using Records it calls Object.ToString to print the record. It doesn´t work if I use lists or collections inside those datatypes. * ELMAH: When logging an exception you can add information to the "Data" dictionary of an exception. ELMAH then calls Object.ToString of this value and logs it. &amp;#x200B; .NET/C# does not have any IShowable&lt;T&gt; interface or nothing of the sorts, specially one that is integrated with the whole .NET framework and used by the majority of libraries. The only way to get canonical human-friendly display of values is via Object.ToString. In its current state, this contract is broken in .NET, because there is no "canonical human-friendly display" for lists, maps, etc. &amp;#x200B; Is this such an unreasonable request?
&gt; Now with the announcement of web assembly JavaScript will be a thing of the past. I doubt it. Some people really like more dynamically typed languages.
Definitely too loose for me. I like knowing what type of object I'm dealing with. Everything in JavaScript is var x
Or matching the 80 columns of punch cards, maybe?
But I can do the same thing using the Dynamic type in c#, reflection, and or Anonymous types. I can even have a running application load a new DLL with new code to start running.
Thanks for pointing that out, I had not tested it. His error was just the missing \*caseSwitch\* after the \*switch\* keyword, I shortened the rest for better readability and made a mistake... Corrected my answer
Evaling a strong input from the user sounds like a security nightmare and anti-pattern to me. You can dynamically build up a function / query to do anything in C# using expression trees, and it’s much safer.
In the trash where it belongs. The number of real use cases for eval are outnumbered by terrible use cases by 1000 to 1.
You're supposed to figure out what kind of type (int, float, struct, string) you need to store a test score, and then create a stack of that type.
Haha yeah right. What kind of content are you putting out, programming related?
Its used in intranets. No security concerns whatsoever.
Can you do dynamic foo; foo.bar = generic delegate?
oke, then the first things I could copy from the former one where I had to do this : `Create a Stack object inside the Student object, called Grades, to store test scores` which I solved this way : `Stack&lt;int&gt; grades = new Stack&lt;int&gt;` &amp;#x200B; I thought Generics and type &lt;T&gt; is all about that I can store a int or a double in it ?
Nothing except template metaprogramming comes close to flexibility of eval and we prefer managed code. I tried dynamic linq where you can pass strings like foo.where("something = something") but it covers like half of my use cases.
Until there’s an insider threat or an outside thread finds its way into the intranet. Never trust user input.
Here you go. https://tio.run/##xVKxTsMwFNzzFUeGKhnIBxAViSLBAggBEgNicN1HapHYwc9pVFX99mCnQQqtKrpxg2W/e7bv7JN8Lo2lrmtY6QLPa3ZU5dF4ld0p/ZVHkSwFMx6tKayosIngwU44JbEyaoF7oXSSDkTAC7FLNLW4MQYbPIiKMEU8s6bVMbZpflInbi3RqH8bHdzcb6@Fl8XhhLd3CFuMlXCrnFwi2SsHSMGElbCgkiq0S9L9LLvS66TG9BJ1FuRk10Y7b5CTQX@KyQRnB@RO7BFyVjZ0jHuiRZymF7@0BfgONiVlr1Y58j9BSfyhLLteeDx6wx/MLYnP/GSP@NPkv3hkkkYvTjW5HZLhs8HONtLtgtRX62Ze@qD4eoh0H60NCnI5OAx@U9d9Aw ``` using System; using System.Linq; class Program { static void Main() { Test(new Foo { Name = "Brown" }); Test(new Foo { Name = "Brown Green" }); } static void Test(params Foo[] arg) { switch (arg) { case var elem when elem.Any(p =&gt; p.Name.Contains("Brown") &amp;&amp; !p.Name.Contains("Green") &amp;&amp; !p.Name.Contains("Blue") &amp;&amp; !p.Name.Contains("Red")): Console.WriteLine("first case"); break; case var elem when elem.Any( p =&gt; p.Name.Contains("Brown") &amp;&amp; p.Name.Contains("Green") &amp;&amp; !p.Name.Contains("Blue") &amp;&amp; !p.Name.Contains("Red")): Console.WriteLine("second case"); break; } } } struct Foo { public string Name { get; set; } } ```
I'm not sure what your question is, but a stack can contain nearly any type of object. You can use doubles. You can even store class objects. class TestScore { int numberQuestions; int numberCorrect; } Then... Stack&lt;TestScore&gt; scores = new Stack&lt;TestScore&gt;();
thanks For me using Stack&lt;Int&gt; does not feel I use generics i thought Generics is all about not given a type so you can store different types in it so when you have a list&lt;T&gt; you can do something like mylist&lt;int&gt;.Add or mylist&lt;double&gt;.Add &amp;#x200B; but maybe I understand the term Generics not good enough
Don't get me wrong here and I am not trying to discourage you, but you'll probably finish school before you're done with the IDE. I'd rethink this and instead do something more useful, but ultimately it's your decision. So good luck on your path.
(Assuming this is WPF) I would not do this in a callback. I would do this with bindings and converters in the XAML. ```xaml &lt;ListBox ItemSource="{Binding Items}"&gt; &lt;ListBox.ItemTemplate&gt; &lt;DataTemplate&gt; &lt;CheckBox Content="{Binding}" FontStyle="{Binding IsChecked, RelativeSource={RelativeSource Self}, Converter={BoolConverter {x:Static FontStyle.Strikeout} {x:Static FontStyle.Regular}}}"/&gt; &lt;/DataTemplate&gt; &lt;ListBox.ItemTemplate/&gt; &lt;ListBox/&gt; ``` ```csharp public class BoolConverter: IValueConverter { private readonly object _trueValue; private readonly object _falseValue; public BoolConverter(object trueValue, object falseValue) { _trueValue = trueValue; _falseValue = falseValue; } public object Convert(object value, Type targetType, object parameter, CultureInfo culture) { if(value as bool? == true) { return _trueValue ; } else { return _falseValue ; } } ... } ```
You are mixing up generics and method overriding.
You aren't wrong. For some reason I don't like local methods. I wanted them for ages, then when I finally got them I find almost every time I make one, I end up extracting it. Personal quirk.
I disagree. That doesn’t sound like you are trying to discourage me. Sounds like a challenge :) To be fair, I already am doing something more useful. Currently working on an integrated engineering tool for use in the Oil and Gas industry. We use Rosalyn on that to convert the offshore systems code into C# and run it. Really cool stuff. I don’t have creative influence over the project as I’m really just a coder and not really a full developer. I’d like to create something I have 100% control over. One major hitch, I’m not very creative so this is the best “cool” thing I could come up with. I’d like something super challenging and this seems to fit that category pretty well :)
[AngelSix](https://www.youtube.com/channel/UCJ3AxeCHGPZkMi3kRfCuiHw) has great videos on a variety of subject (C# programming, .NET Core, ASP.NET Core, WPF, and other general programming/electronics videos (how to solder, build a custom PC, etc.).
&gt; A common case is scenarios where you do not care about case and locale OrdinalIgnoreCase will be faster than InvariantCultureIgnoreCase and does not take locale into account
Here is a rough definition for an extension method implementation of eval in C#. using System.CodeDom.Compiler; using System.Text; using Microsoft.CSharp; namespace CompilationExample { public static class EvalExtensions { private static readonly CSharpCodeProvider Provider = new CSharpCodeProvider(); private static readonly CompilerParameters Parameters = new CompilerParameters { GenerateInMemory = true }; private const string Namespace = "EvalNamespace"; private const string Class = "EvalClass"; private const string Function = "EvalFunc"; public static object Eval(this string code) { var functionDefinition = WrapCodeInFunction(code); var result = Provider.CompileAssemblyFromSource(Parameters, functionDefinition); var asm = result.CompiledAssembly; var type = asm.GetType($"{Namespace}.{Class}"); var eval = type.GetMethod($"{Function}"); return eval.Invoke(null, null); } private static string WrapCodeInFunction(string code) { var sb = new StringBuilder() .AppendLine("using System;") .AppendLine($"namespace {Namespace} {{") .AppendLine($"public class {Class} {{") .AppendLine($"public static object {Function}() {{") .AppendLine(code) .AppendLine("}}}"); return sb.ToString(); } } } Your needs may differ. If you require the need to write typed classes using eval then just don't use the WrapCodeInFunction call. This is easily maintainable, create it once and just reuse it whenever you need eval. The need to use eval everywhere though probably points towards a smelly design. Here is code using this eval: using System; namespace CompilationExample { class Program { static void Main(string[] args) { var additionCode = @" var x = 1; var y = 2; var z = x + y; return z;"; var additionResult = additionCode.Eval(); var concatCode = @" var x = ""abc""; var y = ""def""; var z = x + y; return z;"; var concatResult = concatCode.Eval(); Console.WriteLine($"Result of executing addition: {additionResult}"); Console.WriteLine($"Result of executing concat: {concatResult}"); } } } Result of execution: Result of executing addition: 3 Result of executing concat: abcdef Sure, eval isn't built in. An abstraction had to be made, but so what? It was a minor bit of one-off work. If that is the kind of built-in feature that makes you think scripting languages are "better in every way" then there's not much point trying to arguing.
There is this app https://github.com/microsoft/SmartHotel360-Website It might be bigger then what you need but that is the only one I know about. There used to be also something called MusicStore but I can't find it now.
If you don't encapsulate into subclasses. How are you supposed to test private methods? Or do you intend to just make them all public/internal?
&gt; i thought Generics is all about not given a type so you can store different types in it There are very few cases where you can do that in C#. Generics allow using almost any type, but you have to specify the type. If you want to store different types then you're doing something wrong.
Removed: Rule 4. Please include the error message and the line it's associated with.
ive worked out that it is not actually and error but it still says on my unity that i have a compiler error but all of my code checks out fine. im still very fresh to coding, idk if im dong something wrong or...
Does Unity report what the compiler error is?
&gt; Imagine what happens if a list with 50,000 items is part of your debugging session! &amp;#x200B; Why would this actually be a problem? If you are debugging and you have a list with 50.000 elements you know the risk that intakes, in terms of performance in debugging &amp;#x200B; &gt; Often the ToString() implementation is what debuggers call for watch windows or tooltips &amp;#x200B; Wouldn't a debugger tooltip trim the result so it doesn't show all the 50.000 elements but cuts it before? Idem with watch windows. What would be the problem if there are potentially large lists for it to print (which would be a very small amount of cases)? Can't it also cache the result of ToString? &amp;#x200B; Why should we suffer in 99.99% of cases just because of this possibility in 0.01% of cases? &amp;#x200B; &gt; Worse, you have to figure out how to format each item, &amp;#x200B; Use default formatting. If you want custom formatting you can overload ToString. Nobody says that System.DateTime should not have a default object.ToString implementation because you "have to figure out how to format it". &amp;#x200B; &gt; which probably involves calling *their* ToString(), which might also be an expensive operation that requires asking *other* things &amp;#x200B; It shouldn't be expensive. Saying it should either print "System.Collections.Generic.List" or be a super expensive operation is a false dichotomy. I just want it to work when a list has 10 or so simple elements (e.g primitive types), I don't want it to *never* work because there exists the possibility of a single case where the operation is expensive or is contrived (like in your example). That is what a good design would be like &amp;#x200B; &gt; It's a good way to crash debugger sessions. So library-quality code won't do it &amp;#x200B; The debugger should be defensive on what System.Collections.Generic.List (and other .NET collections) can print. That solves most of the problems. If you (or an external library) has an object that overrides ToString that breaks the contract of ToString (e.g it prints something big in size, it takes too long to print it, it throws an exception, etc), then it's a problem of that code, not of List nor the debugger; and it also still happens *today* (if you were to do a simple ToString on that badly-implemented object)
On further thought, you don't even need `WhenWorkCompletes` at all. You could just write it like so: ```csharp public Task&lt;DoWorkData&gt; DoWorkAsync() { var tcs = new TaskCompletionSource&lt;DoWorkData&gt;(); _poller.DoWork(tcs.TrySetResult); return tcs.Task; } ```
 [https://imgur.com/a/lMqt2zX](https://imgur.com/a/lMqt2zX)
&gt; I like knowing what type of object I'm dealing with. Of course, I like it too and therefore Typescript came to our aid. Ts is like a types rain that help us to tolerate JS.
I guess writing a wrapper is the best choice, as well as writing "FromImmutableList" and "ToImmutableList" everywhere. &amp;#x200B; Still, I think this work should be unnecessary. Other languages have default implementations for printing lists without problems
Should be using OrdinalIgnoreCase
The one I like to use is the Stack Overflow database ( [https://archive.org/details/stackexchange](https://archive.org/details/stackexchange) or [https://www.brentozar.com/archive/2015/10/how-to-download-the-stack-overflow-database-via-bittorrent/](https://www.brentozar.com/archive/2015/10/how-to-download-the-stack-overflow-database-via-bittorrent/) ) which has a lot of real world data. &amp;#x200B; There are a couple others but nothing like the data volume of the stack exchange sites.
Looked it up again after the first reply, OrdinalIgnoreCase is probably sufficient for matching with the javascript
i don't use resharper anymore because its slows down VS too much for me. but there is nothing that has ALL the features of resharper. jetbrains makes amazing products. for professional development with a top of the line PC with resharper, there is no better development environment for C#...
nothing compares to the features of resharper. there is a reason it's the #1 visual studio extension / development tool for like the past ~2 decades. yes you can install a ton of other extensions to get MOST of the functionality, but you'll never have it all, nor is it certain they will work well together etc.. the refactoring, hinting, code generation, code styling, short cuts. even minor things like the windows/results for stuff like the search results, find references are so much better too. anyone who says otherwise never used resharper to it's fullest, or never used it, etc... you can also just install rider. anyway you can get all the jetbrains products for free with a .edu email. which you can find a way of getting if you're not a student. or your company should pay for. ------ other extensions that are great (some of which you don't install if you are using resharper): - Whack Whack Terminal - Open Command Line - VSColorOutput - Comment Remover - Object Exporter - Power Productivity Tools - Markdown Editor - ILSpy - ReSharper - Visafora - ReAttach - Roslynator
Roslyn, System.Reflection.Emit, Cecil, CodeDom, Flee (or rather https://github.com/pvginkel/Expressions) Lots of options.
It's not really practical in an environment where mutability is the widespread default behavior and lists aren't a primitive type of any sort. I don't doubt that there are still languages that do it, but it seems like a headache. Especially if the objects your list will be containing are mutable.
Thanks. I reopened the post.
Generics is about writing a class once so it can handle any type (`public class MyList&lt;T&gt;`). Instances of that class, however, only handle one type (`MyList&lt;int&gt; myListVar;`). That type is specified as a generic type parameter to the class constructor (`myList = new MyList&lt;int&gt;()`).
Yeah, I mostly mean languages with immutability by default (e.g Haskell). &amp;#x200B; It's weird though that there is not a *single* implementation of immutable lists with this behavior. There are plenty of libraries that attempt to bring immutable values to C# (including ImmutableCollections), but they still forego object.ToString, which makes it frustrating in many situations
We're operating in a land of many assumptions. The APIs I'm used to wrapping like this tend to have a few ways they handle errors. Ultimately the Task consumer is probably expecting you to throw, so you've got to have a way to call `TrySetException`. There are some error strategies, but none of them translate so easily to passing that method as the event handler delegate. For example, the thing I'm consuming at the moment has separate events for when it completes and when it errors. Other APIs might pass an exception along as part of their result data type. I'm sure there are other approaches, you get the drift. Once we expand the problem to have to handle different kinds of errors and/or cancellation, the value of those methods shows. But then I would've had to write an extra page or two and think harder about how many 'i's to dot and 't's to cross in example quality code.
oke, so I have to make a class \`public class myStack&lt;T&gt; \` and then in my code I can do \` myStack&lt;int&gt; grades = new myStack&lt;int&gt;\` &amp;#x200B; so \` Stack &lt;int&gt; grades ... \` is using generics
The Microsoft Visual Studio channel on Youtube has several videos about design patterns: [https://www.youtube.com/user/VisualStudio/search?query=patterns](https://www.youtube.com/user/VisualStudio/search?query=patterns)
Yes, and I am also learning 3D Animation trying to make my videos more interesting (or me less boring?) Here is my channel if you want to visit, and all the code is free so Reddit moderators treat me like I am selling flip phones if I try and post a link sometimes: https://www.youtube.com/channel/UCaw0joqvisKr3lYJ9Pd2vHA I just saw a complete C# tutorial that had 175,000 views in 2 months, so I am going to start making some full tutorial videos. There are so many people learning to code now. I remember watching programming channel 5 or 10 years ago, and the popular ones had 5,000 to 10,000 subscribers. Now some have 500,000 to a million or more.
Your formatting is wrong. &amp;#x200B; public void EndGame() { if (gameHasEnded == false) { gameHasEnded == true; Debug.Log("Game Over"); Invoke("Restart", restartDelay); } }
Come on, why’d you had to ruin it? Winning arguments with code and such. He/she just wanted to troll and argue endlessly and you just put a stop to that.
You have those flipped around.
Wtf do you see maintainable about eval? Writing a whole program in eval lol. It may solve whatever problem you have which could’ve probably been solved in a better way anyway, but calling a bunch of concatenated strings (or templates, same shit) inside an eval maintainable? Delusional
VS should had have this feature for years...
In case you didn't know, you can do multi-line code blocks by indenting each line by 4 spaces or more. E.g.: switch (caseSwitch) { case 1: Console.WriteLine("Case 1"); break; case 2: Console.WriteLine("Case 2"); break; default: Console.WriteLine("Default case"); break; }
Yeah me too. Even C# is too loose at times, for my taste. Stuff like enums and labeled value tuples where the labels are not part of the type.
That hasn't fixed it &amp;#x200B; The namespace '&lt;global namespace&gt;' already contains a definition for 'GameManager' &amp;#x200B; [photo of updated game manager with the extra = that you told me to put in](https://imgur.com/a/tgqfsZI)
Yea the only loose I like is loose coupling.
You don't get to charge as much or have as many customers for your library if you adopt the approach, "Your code is stupid, you should know better than to do this." It's really easy for people who aren't experts to see you do neat things with `ToString()` in your list types, then abuse them for all kinds of other things. Then when it doesn't work, they file it as a bug against you. I know. I've sold libraries to people who didn't have a clue. I've seen things. Let's talk about this one in particular, I don't think you thought through the case as long as you spent yelling because I said, "You can do this, but it's a bad idea." &gt; Wouldn't a debugger tooltip trim the result so it doesn't show all the 50.000 elements but cuts it before? How do you trim the return value of `ToString()` before you call it? You have to call it, wait for it to finish, then call `Substring()`, which takes longer than just displaying the whole thing. The debugger would have to know to check your `Count` property, then it'd also have to know to use some special overload of `ToString()` that holds back, and it'd also have to know how many items is "reasonable". That's a lot of guessing. You can do that with debugger visualizers for your type, but then you have to talk your users into installing extensions. And if you've ever maintained VS extensions you know why you don't want to. This is a bad idea *for a library type*. You're free to implement it in your own types. You might live in a domain where it will never bite you. Congratulations! I lived in a domain where my money was made by *not* letting my users crash VS. If I ever got this as a feature request, I'd instead publish a HOWTO showing how users could derive from my types to accomplish it themselves. I sold rope, not nooses. You're very involved in this and it's just not a good hill to plant your flag on.
Did you acidently make GameManager.cs twice? The Unity editor is picking up two GameManager classes that are trying to define the same functions.
Don't confuse generic types with dynamic types. To ensure type safety, you need to pick a type at some point; for a generic type, at the point of use, you specify the type that you want as a type argument, as in `Stack&lt;int&gt; grades;`.
If you go in the project tab and search for GameManager you should find the duplicate
Yes. If you want to make a stack that you can put anything in, use Stack&lt;object&gt;.
Don’t do that he made you screw up your code. The other guy is right, there’s probably another file present. Or a missing ‘partial’ keyword.
You can execute string as C# code. using Microsoft.CSharp; using System; using System.CodeDom.Compiler; using System.Collections.Generic; using System.Linq; using System.Reflection; using System.Text; using System.Threading.Tasks; namespace GamingBot.Libraries { class RuntimeExecuter { public static object Execute(string code, Type returnType = null, IReadOnlyDictionary&lt;string, Type&gt; fparameters = null, object[] oparameters = null) { string fullCode = @" using System; namespace First { public class Program { public static void Main() { } public static " + (returnType == null ? "void" : returnType.FullName) + @" Exec(" + String.Join(",", fparameters.Select(c =&gt; $"{c.Value.FullName} {c.Key}")) + @") { " + code + @" } } } "; CSharpCodeProvider provider = new CSharpCodeProvider(); CompilerParameters parameters = new CompilerParameters(); // Reference to System.Drawing library parameters.ReferencedAssemblies.Add("System.Drawing.dll"); // True - memory generation, false - external file generation parameters.GenerateInMemory = true; // True - exe file generation, false - dll file generation parameters.GenerateExecutable = true; CompilerResults results = provider.CompileAssemblyFromSource(parameters, fullCode); if (results.Errors.HasErrors) { StringBuilder sb = new StringBuilder(); foreach (CompilerError error in results.Errors) { sb.AppendLine(String.Format("Error ({0}): {1}", error.ErrorNumber, error.ErrorText)); } throw new InvalidOperationException(sb.ToString()); } Assembly assembly = results.CompiledAssembly; Type program = assembly.GetType("First.Program"); MethodInfo main = program.GetMethod("Exec"); return main.Invoke(null, oparameters); } } }
First of all, it is bad formatting to type bool myBool = false; // Some code here. if ( myBool == false ){ myBool = true; // Some code here. } While yes it works, it is best to do: bool myBool = false; // Some code here. if ( !myBool ){ // In case you do not know, '!' basically means flip this boolean value. myBool = true; // Some code here. } But besides that, I would suggest throwing that class into its own namespace. In case you do not know what that means or is, in short, it is like putting a file in its own folder instead of dumping it into `C:\`. This is what it generally looks like when you put a class in a namespace: using UnityEngine; namespace MyNamespace { public class MyClass { public MyClass() { Debug.Log( "Hello from MyNamespace.MyClass.MyClass()!" ); // Some code here. } } } I am wondering if that helps since it is complaining about it already existing. The only other thing I can think of is that there is a duplicate file. Besides that, try using the `f` versions of Unity as those are stable builds, `a` and `b`'s (which I believe stands for alpha and beta respectively and f stands for final) are much less stable and are meant to be used for testing the new features and/or bug fixes. Also, try going to r/Unity3D and crosspost to there since this also seems to be a Unity thing if you have not done so. That subreddit is meant for Unity.
Which one do I want to use? It seems like scoped services is what I want but when I clicked it, the DI said "Scoped lifetime services are created once per client request (connection)." which isn't close to what I want.
Which one do I want to use? It seems like scoped services is what I want but when I clicked it, the DI said "Scoped lifetime services are created once per client request (connection)." which isn't close to what I want.
Nothing wrong with bools, they can even make things more readable if you name them coherently Alternatively there's goto statements to escape deep nested constructs You could make your code more readable if you invert conditions to return early
If you move all the code starting with "for (int posX" into a function, then the function can return true or false. No need for a break in that function since it can return out of the loop. Then the if (isAdded) line could be changed to if (myfunc()) and you don't need the bool variable anymore. This has the benefit of creating a well-named function for the inner loop that describes what the loop does.
In C#, you are almost always going to use a class. You will know when you should use a struct (super rare performance cases for ordinary devs or semantic cases).
Yup. I've been a C# developer for over 15 years and I think I've used a struct twice.
Compared to reflection it is, objectively it's not and I agree
Structs are best when you are trying to keep data in contiguous memory blocks. If you are careful when designing the struct it won't contain any reference values so it doesn't have to jump around in memory as much.
Thanks, but I feel like my code is the same as yours? Or am I wrong?
Could you do an example when you a a list of two elements with property like under where person1 has name Peter and Person2 has name Sarah, in a list of persons. public class person{ public string Name{get; set;} public int Year {get; set;} } I want the first case to kick in if there is a person that is named Peter and Sarah in the list of persons. And another situation the is a list of two persons, this time Person1 is named Peter and Person2 is named Kate. How can I make the switch case kick in for each situation? I feel like my code should work for this case, but somehow it doesn't kick in....
Biggest retail chains in SEE are running on RedHat and Ubuntu. Banks run all imaginable OSes you can think of. ISPs also. Tech companies like Siemens, Ericsson and similar run mostly linux/win combinations and half of job postings are Java/embedded. Only exception are small companies with &lt;500 employees - they seem to exclusively run Windows because entry-level sysadmins for companies like that are cheaper for Windows - guys fresh from college and with few certificates can manage such small networks. That if they have their own metal - if not, its again Linux in shared VPSes and hosting packages.
Could you do an example when you a a list of two elements with property like under where person1 has name Peter and Person2 has name Sarah, in a list of persons. public class person{ public string Name{get; set;} public int Year {get; set;} } I want the first case to kick in if there is a person that is named Peter and Sarah in the list of persons. And another situation the is a list of two persons, this time Person1 is named Peter and Person2 is named Kate. How can I make the switch case kick in for each situation? I feel like my code should work for this case, but somehow it doesn't kick in....
Could you do an example when you a a list of two elements with property like under where person1 has name Peter and Person2 has name Sarah, in a list of persons. public class person{ public string Name{get; set;} public int Year {get; set;} } I want the first case to kick in if there is a person that is named Peter and Sarah in the list of persons. And another situation the is a list of two persons, this time Person1 is named Peter and Person2 is named Kate. How can I make the switch case kick in for each situation? I feel like my code should work for this case, but somehow it doesn't kick in....
Could you do an example when you a a list of two elements with property like under where person1 has name Peter and Person2 has name Sarah, in a list of persons. public class person{ public string Name{get; set;} public int Year {get; set;} } I want the first case to kick in if there is a person that is named Peter and Sarah in the list of persons. And another situation the is a list of two persons, this time Person1 is named Peter and Person2 is named Kate. How can I make the switch case kick in for each situation? I feel like my code should work for this case, but somehow it doesn't kick in....
Could you provide an example for this? &amp;#x200B; Could you do an example when you a a list of two elements with property like under where person1 has name Peter and Person2 has name Sarah, in a list of persons. public class person{ public string Name{get; set;} public int Year {get; set;} } I want the first case to kick in if there is a person that is named Peter and Sarah in the list of persons. And another situation the is a list of two persons, this time Person1 is named Peter and Person2 is named Kate. How can I make the switch case kick in for each situation? I feel like my code should work for this case, but somehow it doesn't kick in....
They have a huge project called "eShop". I've never actually run it so I don't know how detailed the database part is, but I've learned a great amount just looking through it. They have both a monolithic and container - based version, you can find the monolithic version under the same account. https://github.com/dotnet-architecture/eShopOnContainers/blob/dev/README.md
Could you do an example when you a a list of two elements with property like under where person1 has name Peter and Person2 has name Sarah, in a list of persons. public class person{ public string Name{get; set;} public int Year {get; set;} } I want the first case to kick in if there is a person that is named Peter and Sarah in the list of persons. And another situation the is a list of two persons, this time Person1 is named Peter and Person2 is named Kate. How can I make the switch case kick in for each situation? I feel like my code should work for this case, but somehow it doesn't kick in....
You had a mismatched paren, and you were missing the switch expression, but otherwise they are the same. That's my point. It works.
I use them when fast lookup for object is needed and you have huge collections which kill performance if LINQ is used. For example, you have hundreds of thousands of user accounts and you need to find their contact info (contained in user object) frequently - every time their ID pops up in call log. You preload the dictionary with int ID and User pairs - when user object is needed, you can get it quickly without expensive FirstOrDefault(x =&gt; x.ID == someid) call.
The repetition is a little overwhelming at first, but the separation pays big dividends. Plus no one does (or should be) writing mapping logic themselves anymore, there are [many good libraries](https://stackoverflow.com/questions/7052002/alternatives-to-automapper) to choose from, many (most) of which use heuristics (e.g., name/type matching) to auto-map without (much) configuration.
Weirdly, the author of the article talks about using TypeScript, but then for some reason largely eschewing the use of its type system.
You are using generics when you create a List&lt;int&gt;. If you were to crack open the code for List, it has literally no idea that you are giving it an int. It is dealing with T in a generic manner, and supports practically any type you can throw at it. The same applies to Stack&lt;T&gt;. &amp;#x200B; The problem here is you have to choose the data type for Grade, it isn't being given to you. They aren't telling you whether it's a float, or an int, or a string, or if Grade is another complex type like Student which will require multiple related data members.
Until some dipshit on your intranet clicks a link on a hostile external website that hits an internal resource.
This guy gets it.
eval() is not your friend. Stop thinking it is.
No.
The problem is your switch doesnt check something. You have switch The correct syntax is switch(thisThing)
It is nice to see someone at Microsoft moving TO .NET for once. I really can't remember this happening at all since VS moved to WPF all those years ago.
You probably already look at this but hey, in case someone else wanted to read it.. https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/choosing-between-class-and-struct
I can understand the dependency thing, but it seems like a waste of resources when you still want to write TS on the front end with things like Angular. Let your team use their preferred language if its just between TS Node and C#. No one is a back-end only C# developer in 2019.
Your code code doesn't even compile. Also switch is not ideal here. You would be better off using regular expressions.
 [StreamSocketControl.KeepAlive](https://docs.microsoft.com/en-us/uwp/api/windows.networking.sockets.streamsocketcontrol.keepalive#Windows_Networking_Sockets_StreamSocketControl_KeepAlive)?
Yea but there will be way more issues than accessing our app data though. If clients dont care about security we dont too.
just started from scratch and it’s pretty much worked
Eh. Wut
The avoid part is pretty muc all you need to know X AVOID defining a struct unless the type has all of the following characteristics: It logically represents a single value, similar to primitive types (int, double, etc.). It has an instance size under 16 bytes. It is immutable. It will not have to be boxed frequently.
?
goto exit ;)
I don't have much experience working with Redis but I've played around with this for caching purposes before, so I can not really say with confidence if your approach is good or bad. However, for event sourcing, your current approach isn't what I would do as there are better alternatives out there. There are a few downsides/questions I can think of: * Firstly Redis is extremely expensive to host on a cloud platform compared to SQL/ NoSQL databases * Events are a reliable audit log of the changes made to a business entity and they are perfect for analytics. Consider a scenario where you want a dashboard which shows the number of deposits larger than £1000. Now how would you write a query like this with your current approach using Redis? Again, I am not very experienced with Redis, but It looks like you will need to get all lists, and search for a given event type within this list and query the payload which could be complicated and may have performance penalties. * What happens, when two events are created and saved at the same time, can Redis reject one of those events to handle optimistic concurrency issues? You would ideally want an EventSequenceNumber property for this? Example scenario, your account has £50. Two simultaneous requests are made to withdraw £50, how will the system behave? * How will an upgrade of event scheme/migration look like with your current approach? At work, I currently manage a hand-rolled CQRS+ES based architecture. So I've got a bit of experience working with event stores. My first choice would be a hand-rolled event store using a Postgres DB. It will be a simple table with the schema defined below, where there is a clustered index on aggregate ids (to cluster rows with same aggregate id for faster lookups). It will have a unique non-clustered index constraint on {AggregateId, EventSequenceNumber} so two events with the same sequence number cannot be stored (to deal with optimistic concurrency issues). Benefits of this approach with postgress: atomic/transaction support, query json directly on the database, ability to make "global" query as your events are not wrapped in a list, scale, sharding and much cheaper to run to name a few. The schema will look something like this: | **ID** | **AggregateID | TenantId | Payload** **| EventType | EventSequenceNumber | Metadata |** If you're interested, I could mock up a quick implementation of such a store, they are quite simple things to implement once you have your requirements. As for ready-made solutions for event store, have you looked into Marten as EventStore (postgress) [http://jasperfx.github.io/marten/documentation/events/](http://jasperfx.github.io/marten/documentation/events/) There is also this by Greg Young: [https://eventstore.com](https://eventstore.com/) [https://github.com/EventStore/EventStore.Samples.Dotnet](https://github.com/EventStore/EventStore.Samples.Dotnet) NEventStore [http://neventstore.org/](http://neventstore.org/)
structs are when the the values themselves define the object. You could have two Point struct instances that have the same X and Y positions. You would consider them equal, but separate. &amp;#x200B; But if you had two Person objects, both with Name "John", you wouldn't necessarily consider them equal. You could have two people in your system named John. And if one person changes their name, it's still the same Person. So you'd identify the uniqueness with an Id property. So you can change the Name value of a Person object, but the object still represents the same person. Not the case for structs; you can't change the Second on a DateTime and consider it the same date. You've created an entirely new date by changing just one value. &amp;#x200B; It's not always easy to identify, so generally just use class.
"faster"-- CALL. Show me benchmarks.
"Additionally, the code that we were porting specifically dealt with bit masks..." Javascript and bitmasks... as the type of guy who cleans up shit like this-- you fuckers.
&gt;**Is this a good approach?** That's the basic idea. The event objects themselves are generally structured with, like, an "envelope" that contains the homogenous event properties: EventId, EventType, UtcTime, and then a "payload/data" property, which is the data specific the EventType, like "{ "Amount":100 }" or "{"CustomerId":123}" That way, you can always deserialize the "envelope" to some fixed type, and then use the EventType property to choose which type to deserialize the Data property to. Or, you could just use entirely dynamic types. You do you. &gt;My main concern is that I may end up with too many lists. &gt; &gt;In this case we have a list per Account record. &gt; &gt;So, if there's a million of Account records in my SQL Server DB - Redis will have as many lists. Yes, you should have a list-per-account. If you have 1 million accounts, in reality, you've got a really good problem, IMO. But, Redis should be able to effectively handle looking those accounts up. I don't think, in terms of performance, that lists are any different than other data stored in Redis. I know that Redis can have some "issues" scaling beyond certain boundaries, but one of the great things about EventSourcing is that the storage requirements are so generic, you should be able to easily migrate it. &gt;**Also, do you think it'd be beneficial to back up events in SQL Server?** You should definitely back stuff up. In terms of your "system of record", you shouldn't be storing to multiple places. One database is THE database that represents actual, consistent reality. However, upon having successfully stored an event to the system of record, generally it is immediately published to some kind of pub/sub system as well, so that your various listeners can use it to create "projections". You might have a listener that takes the events and sticks them in SQL Server as well, and breaks out some fields, or even pushes data into a full-on db schema representing the Accounts/Payments, or both. That's in addition to say, a listener that is watching for overdrafts, and sending out notification emails to customers. Whatever form your specific use case requires The idea of an Event is "This is something that definitely already happened." It is immutable - it doesn't get changed or deleted. And, if you say it happened, it should absolutely already be stored in the system of record - that's the first, consistent step. After that, everyone else gets to hear about it, and they're maybe a little bit behind, but that doesn't really matter. The aggregate itself, and all the commands it handles, is the only thing that deals with the system of record. Everything else is "eventually consistent" - it get's "stale" data. That might sound bad, but basically anything that a human being sees is going to be stale. By the time you've queried a db and put the data on a webpage for a user to see, that data could have been updated. It's stale the second it leaves the database.
I was going to suggest eventstore. We just started prototyping with it. As someone new to this I was under the impression that you don’t really query your events. They are just a source of truth to build data. If something were to happen or we wanted to create a new type of reporting you just play the events back to build that features database. We are currently building read only domains out of event data and storing it in the most optimal state it is needed. What I mean by that is we have multiple consumers that store some of that data in a graph and some in let’s say a sql db. It just depends on how that data needs to be searched. Since you have exp in this is area is this correct? Sorry op to hijack your question!
Did you even read it? They basically said that ultimately it wouldn't have mattered if they went full node.js or .NET Core. They made the choice to go one direction or the other so they could have the entire team working in one set of languages/tools. They were just providing some information on what they went through because they chose to go .NET Core.
Some people really like JavaScript specifically. I tend to wrinkle my face at those people but it's a perfectly valid direction to go for development and lots of people are doing it.
One way I could see would be to use dependency injection modules I see you use property injection, which I would not recommend. Best way to inject dependency is using the constructor With that being said, libs like ninject allow you to create dependency module where you bind an Interface (or class) to it's implementation. You could then have 2 modules: one that bind a class to it's real implementation and one that bind it to it's mocked object Then when you want to switch between the two, you just have to swap the module, reload the dependencies and voila! Same tests, same code, different outcome On a side note, why do you want to run the same tests? I feel like in the 2nd scenario, what you want is to test the integration between two classes. These are call integration tests and should be a standalone part of your test suit because they can (and will) evolve at a different rate than unit tests. Plus, it can greatly complexity your test suits.. now you know exactly what you are doing but in a few months/year, you or another programmer will stumble against this and will wonder wtf is going on with these tests
Put the test into a helper function that accepts the interface as a parameter. Write two caller functions that pass in either the real object or the moq. Or dependency injection per the other answer
Look at using code-first methodology instead of data-first. Then you can lean better mvc and databases at the same time
Hi, you are correct. Querying an event store is probably not a good approach but it all comes down to your use case and requirements. Ideally, you would have a Projections/Read Models that listen for and consume events when they are created and update the underlying view one event at a time and save it in a read store of your choice for instant query results. And then a query would retrieve that view. To generate a model answer, you would create projections but that would require effort. If you have some analytics dashboards (we use Metabase, highly recommended), that only updates once in a day, is it really worth the effort to go create views, projections, and queries (in CQRS context)? Sure doing the work, means instant query lookups and up to date dashboard on each query. But, on the flip side, writing a simple SQL query on event store that counts the number of events i.e "ClaimsSubmittedEvent" to tell us how many claims were submitted over the last day, week and month is the perfect use case IMO. Sure this query on event store is slow compared to querying the read store and make take longer to run but we're only running it once a day and the guys over at the business end do not need to touch the code to get the analytics/results that need. If the dashboard was public, and performance was a concern, then we would generate a projection and view to store the latest model in the database for those instant lookup results.
And loose women
Nah women that are too easy are no fun.
Ok slightly loose
Structs are for real gansters...
Philosophically speaking, I think integration tests should be a separate project from unit tests. I don't care if this means code can be duplicated. Any solution that tries to share code between them will only get messier as the nature of the tests diverge. Some of software's greatest evils come from making code that looks *sort of* the same but *does different things* share implementations. But what others are saying is a substitute. Make the shared tests functions in a library that both integration and unit tests depend on. They should take parameters that represent the things being tested. In unit tests, you pass mocked things. In integration tests, you pass real things. That maintains enough separation it makes me a little happy. But the *moment* you start using conditional compilation flags or you write an `isIntegration` boolean into it, you take that method out of the shared library.
100% these are the guidelines to follow. Basically, if your type has "value" semantics it could be a struct. Bonus if it's under 16 bytes, as (IIRC) there are explicit optimizations around copying these small structs.
I have built app for writing learning journals. Thanks to it you can track your learning progress and learn faster and more efficiently. In the future you will be able to pair and communicate with your learning buddies. https://www.bettercoder.io/a/learning-journals/lp
there is no elegant solution because you are doing it wrong: good unit tests cant be good integration tests and vice versa; trying to merge the two will bring more mess/harm than benefits. They have different scopes and purposes.
You need to change the C# language version you want to target. C# 7.0 introduced expression bodies for getters and setters, which is not backwards compatible with older versions of C# or visual studio. Targeting the oldest language version you want to support will resolve this. This page provides instructions https://www.codeproject.com/tips/865579/how-to-change-targeted-csharp-version-in-visual-st
Do you need to cache the password? Or would be more secure to cache a token of some sort instead.
I bet some developer looking over the code in the future would have seen it and gone 'ohhhh, struct' and moved on.
I just had a mental image of all the junior developers perking up, ready to furiously fuck up every framework I have to come along and fix.
Thank you!
I'll see, thank you.
You can also add multiple cases to the same result like this: &amp;#x200B; `&lt;/&gt;` case "system.byte": case "int": case "smallint": // Integer return DataManager.DataTypeEnum.Integer; `&lt;/&gt;`
I have two layouts saved: one where everything is on one screen and one which is using both my screens. I can now easily switch with alt+shift+1 and 2
Its comments like these that I think are most helpful to new devs. For example, I love the "frequency of user" bar on the C# design patterns website https://www.dofactory.com/net/factory-method-design-pattern
are both sides using the same padding mode.
I would heavily advise against gotos. But, it is a good way to easily break out of nested loops without convoluted logic sometimes.
We heavily use the following in our game server backend. -- Compile time code generation via [CodeGeneration.Roslyn](https://github.com/aarnott/CodeGeneration.Roslyn). -- Using tiny scripts in config to make a more dynamic config system. -- Loading full .cs files at runtime and allowing them to change. -- Runtime code gen via Reflection and dynamic code generation.
&gt;switch (arg) { case var elem when elem.Any(p =&gt; p.Name.Contains("Brown") &amp;&amp; !p.Name.Contains("Green") &amp;&amp; !p.Name.Contains("Blue") &amp;&amp; !p.Name.Contains("Red")): Console.WriteLine("first case"); break; case var elem when elem.Any( p =&gt; p.Name.Contains("Brown") &amp;&amp; p.Name.Contains("Green") &amp;&amp; !p.Name.Contains("Blue") &amp;&amp; !p.Name.Contains("Red")): Console.WriteLine("second case"); break; } } &amp;#x200B; Is it possible to send a list&lt;person&gt; names into the switch case? Like a list with multiple elements / objects?
&gt;an "envelope" that contains the homogenous event properties: EventId, EventType, UtcTime, and then a "payload/data" property, which is the data specific the EventType, like "{ "Amount":100 }" or "{"CustomerId":123}" &amp;#x200B; Ah, so actually it's Payload section of the event that contains our JSON and it only contains properties that have changed. That makes sense perfectly! I'm however wondering, once we keep our payload data as JSON - what if we at some stage might want to display Deposits / Withdrawals **per multiple bank accounts** where amount is larger than $200? &amp;#x200B; I imagine, for that we need to grab the all of the events data we have in our system that belongs to Deposit / Withdrawal type, deserialize the Payload of each event, filter everything and then fetch the events of interest. This looks like a huge performance killer right? &amp;#x200B; IMHO, the only option seems to be a table in the DB which doesn't contain JSON, but rather has columns per every field of aggregate that may be modified. This allows us to query it using SQL.
For conditional inserts/updates use transactions. &amp;#x200B; Redis is single-threaded and that brings some challenges. For decent performance use async calls. I witnessed 10-fold performance increase when app switched from synchronous calls to async ones.
AES blocks are 16 bytes in size, meaning that an encrypted message should be a multiple of 16 in size. You're getting that error because your ciphertext isn't a multiple of 16. You might be able to pad the data yourself before you decrypt it but it would be better just to properly pad the data when you encrypt it.
&gt;Is this a good approach? No, for several reasons. 1) Redis is an in memory store and not persisted by default. Therefore you need to persist the events in a durable data store. I don't think relying on Redis's persistence is a good idea, so now you've got to have some mechanism for duplicating events just to properly persist them. 2) I don't think organizing events on a "per id" basis is a good idea, for the simple reason of how does a consuming service A) know when a new collection is created, and B) it increases the complexity of how the events are consumed (i.e. a single service consuming events from multiple collections, or multiple services consuming each collection). You're much better off having event streams that are organized on a domain basis and contain all account activity. I'd suggest you look at a durable message queue for publishing events, and having that be the bridge between the Command side that creates/publishes the event, and any consumer of the event (of which there could be many). The consumer should take an event and process it, but ultimately, it shouldn't have to roll up an event stream on a given request in order to get the current state of the data. It should be more "snapshot" focused, and use events to update the previous snapshot of the state.
``public float[] goodInput;``
Except you may want to check out lists. They will probably be better for your situation
the typescript compiler can be used for plain javascript code to compile modern ecmascript to es5 or earlier. Also, the typescript compiler can infer a good deal of static typing from javascript without any explicit type annotations whatsoever, so it can be used as a linter, as well as an editor tool for resolving autocompletion and go to defintition.
You don't query events. When an event is created, you usually publish them. Subscribers will listen for the events and update their respective views and you query the views. Do some research into Projections, Read Stores and CQRS.
Well how would I do it with a list?
Thanks for the answer. Could you insert it into my provided code for example's sake?
&gt; Now with the announcement of web assembly JavaScript will be a thing of the past At least for the time being, webassembly is completely reliant on javascript code for bootstrapping and connecting to web apis. Webassembly is much more useful with minimal runtime languages like C++ and Rust than C#, as any language must upload the entire runtime to the end user, which could potentially cause major webpage bloat for large virtual machines like Mono or the JVM.
Well that would be doing it all for you. Do you know how arrays work?
Somewhat. I know how they work in Python and Javascript, but C# seems to deal with them differently. Beginner programmer here.
Yeah will read up on it all, thank you!