Simply communicating those opinions is not "acting on them." "Harassment" gets bandied about far too often. **Harassment is targeted, repeated abuse of someone**. There's a reason you can't get taken to court just because you tell someone something they don't like. If I tell you, "I think you're fat," that's not harassment. If I I tell you that, and then tell you again throughout the day, and then I keep it up for a few weeks further, that's harassment, and you can take legal action. Which is totally justified. But you can't just suppress opinions that you don't like.
I know I've done this in C# before. You might need to download a Windows SDK.
A micro ORM like dapper, EF will generate enormous and totally unoptimized queries, EF is great for CRUD site with low usage for his type-safety and ease of use, but voat will need to optimize a set of frequently used queries. Also EF makes some optimization impossible [here](https://github.com/voat/voat/blob/e426936d920789f98bcfcd1b85d25719c7638bab/Whoaverse/Whoaverse/Controllers/CommentController.cs#L393) it finds a comment then modify it, it could be done in 1 query.
I never said it was, and I never said opinions should be suppressed. I'm not sure why you're getting all up in arms about it really.
The rounding in c#: 5/3 = 2 It rounds down when 0.5, not up 
I think this functionality is included in the Windows API Code Pack, which you can find on NuGet.
Thanks! Quick question though as I'm new. I know how to install it via NuGet and reference it in the code as in "Using blah blah", but how do I see all the things the API can do? Edit - I figured it out.
Actually on .5 cases it rounds to the nearest even number
Ah! That's exactly what I was looking for. Thank you very much.
`new Guid()` instead of `Guid.NewGuid()`.
The last ) on a statement that's got a few of them. I'll get everything closed except the outside, move onto the next line, see that red squiggle and go, "What's your problem? Oh, fucking parentheses again!" And your thing too, I've got to stop and plan ahead more.
Here's one I see fairly commonly: myList.Where(item =&gt; item.Property == expectedValue).First(); Where really you can just do myList.First(item =&gt; item.Property == expectedValue);
Oh wow, I never bothered to check the overloads of half of the LINQ functions... it just got even better! Thank you!
Our dev team uses a structure like so: Solution Projects (split between data access, front end, and a common library) Models Controllers Views Controller specific folder for views Assets Less/css Core Site Specific Lib (Jquery, modernizr, etc.) Js Core Site Specific Lib Media (Images, PDFs, etc) Configuration Target Environment (Environment specific configs) We have a lot of Config files for several external and internal services as well as a few vendors we SSO to. The config folder may feel like overkill, but it's necessary. 
Haha! I can totally feel your pain. I have myself done this more times that I can count.
That is very common when you stop thinking and mash in a lot of code under a short period of time. The brain; or at least my brain seem to leave out tiny details like those. xD
I can agree, this happens more than I would like to confess. But if you.think about it. Not all tests can be completed until the actual functionality is in place. Most common "problem" is that the code will change a lot during the development that will or can cause Unit tests to not properly match the function you want to test.
Any time you're using integers don't think of it as rounding, it's merely truncating the decimal portion. So even negative numbers aren't rounded down (they would be rounded up) but in my mind is easier to just think of it as truncating (because in the end integers don't know anything about decimals)
Too bad this is mostly an all our none setting as browser support is sporadic for specifying a whitelist http://erlend.oftedal.no/blog/tools/xframeoptions/
I have to say my first thought was "Hey, you probably pirated Visual Studio" but then I read the comments. Wow, they should fix that.
I always remember Steve McConnell's advice in Code Complete: whenever you have a balanced pair of parens/braces/whatever, write the open and close at once, then go fill in the middle. Modern IDEs like VS make that less and less useful, but it's muscle memory at this point.
If you have resharper it will suggest you to change it this way
My favorites are: Ctrl + K, C and Ctrl + K, U for commenting/uncommenting highlighted blocks of code. Ctrl + Spacebar brings up IntelliSense in any context. Ctrl + . on an out-of-scope Type brings up a small menu to choose whether or not to add a using directive to bring it into scope, fully qualify its name, or generate a class with that name. Very handy when regurgitating code into a new file and you need to bring Types into scope.
Confusion when using, and especially converting XElement, XMLElement, XMLDocument, XDocument, XMLNode and such. 
 [DebuggerStepThrough] This causes the debugger to step over a method call when you try to step into it. Decorate your trivial methods with that and F11 through the code that matters, instead of switching between F10 and F11 (which always causes my fingers to get confused and I eventually press the wrong one). It comes in more handy than I thought when I first discovered it. Also, what do you mean by pulling up a console? It sounds very helpful because the watch window doesn't allow lambdas (which eliminates LINQ) and I've been bitten by that a few times.
I've always done the first in the name of being consistent. But I think you just changed my mind....
As other commentors have pointed out, it is a silly question with no context, since in a .NET web job tiny nano-second optimizations and operation restrictions are not going to happen. It was most likely an arbitrary question where they weren't looking for a specific answer. A lot of interviewers will ask seemingly pointless questions like this, when they are really testing your problem solving skills and trying to determine how your brain works. They will of course want to ask a question they will be sure any interviewee has never had to solve before, so that an answer isn't just regurgitated, since they want to watch you solve it. Also, from my experience it always seems that once you come up with a solution, the interviewer will almost always say something like, "What if *X*?" This can accomplish different things, such as helping them determine how you write code the first time (to see if you take into account the possibility of having to change it). Or, to see if you prove why your solution will hold in the stated case. Probably other things as well, but those are the two reasons that come to my mind.
Not returning the result of a method. Common mistake due to a tendency of putting in a default return value after the catch or finally block strait away.
TDD people will tell you that you are wrong. Then again, I have yet to meet anyone who actually does TDD in a real workplace where things change all the time.
All my code has a crapton of recursive method calls.
https://en.wikipedia.org/wiki/Analysis_paralysis If you can consider it a mistake.
Damn, I totally wrote that first version like 6 times today. Guess I need to buy a resharper license.
Agreed, that's a great way to think about it. BUT it's very important you don't assume all languages will do this. Python actually does round to the smallest number (`5 // 2 == 2` and `-5 // 2 == -3`). Not the only language that does things differently, too.
Probably this for me, too. Visual Studio doesn't seem to automatically add the closing parenthesis if there's already one there, even if it's now unbalanced. I'm used to editors always adding that closing parenthesis (which is also a bad thing since they usually add it even when it's not needed -- should be adding them when unbalanced only, IMO).
http://stackoverflow.com/questions/11938151/guid-newguid-vs-new-guid
"this" is the current class. Meaning if you had a class called "Person" and the class has a FirstName property, you could call it via this.Person. There are other uses, but I think you'll get the idea
Lol, never would have known this if it wasn't for resharper. IMHO the first way seems more intuitive and readable though.
I haven't done projects in C++ on VS, but is it possible to rebind? http://stackoverflow.com/questions/25802946/how-to-rebind-autocompletion-acceptance-in-visual-studio suggests so, anyway. Forgive me if I speak out of my reach, as I've been doing c#/vs at an internship for only a few weeks.
Agreed.
Unit tests!!!!
Wahhhhhht
Naming things
Then get in the habit of adding breakpoints every time you modify code.
The bane of every newbie programmer. It's a good learning experience though, even if the only lesson is "look at the documentation before you spend an hour coding"
Is it anything like the Head First Java book? I couldn't handle reading it, it was just a chaotic mess of condescension and horrible formatting. 
As the Readme file in the GitHub repo states, this is a hobby project and it shows. I don't think the author ever expected that it would take off like it did. That being said, there is lots of room for improvement here. I am surprised at the number of low hanging fruit that haven't been implemented that would make a huge difference performance/scalability-wise: caching, bundling &amp; minifying static assets, compressing/optimizing images, etc. If anyone wants to hack on the project, they are actively looking for help: https://github.com/voat/voat/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22
Hi Guys Real quick, first time post into this subreddit and my first blog on programming, i've tried really hard to explain reflection. I am big fan of learning things by understanding "How would I use this? How does this make my life easier, what problem does this solve?" but I just can't nail it down for Reflection, a lot of what i have in my blog post could have been achieved (I think) with data binding. Any constructive comments/criticism appreciated especially where I have mucked up terminology. Also anyone who can put together a succulent sentance explaining exactly why Reflection rocks will be my hero. When I first saw it in action i was super excited especially the "get hold of an instance just by looking at it's name" factor. I know a few times I have wished i could do that. (Incidentally I posted this on /r/learnprogramming I hope that's OK/Allowed to post on multiple subs) 
Except for the possible null ref if there are no elements in the list with a property equal to expectedValue. I would use FirstOrDefault to get around this, then check that the element that's been returned is not null. var elementInList = myList.FirstOrDefault(item =&gt; item.Property == expectedValue) if (elementInList == null) { // fail condition, do something useful // perhaps exit the method with a fail value // or use continue if we're in a loop } // elememtInList is not null, and was found // in the list. We can now do out processing // based on it
Thank you, this is exactly what I was looking for.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Tail call**](https://en.wikipedia.org/wiki/Tail%20call): [](#sfw) --- &gt; &gt;In [computer science](https://en.wikipedia.org/wiki/Computer_science), a __tail call__ is a [subroutine](https://en.wikipedia.org/wiki/Subroutine) call performed as the final action of a procedure. If a tail call might lead to the same subroutine being called again later in the call chain, the subroutine is said to be __tail-recursive__, which is a special case of [recursion](https://en.wikipedia.org/wiki/Recursion_(computer_science\)). Tail recursion is particularly useful, and often easy to handle in implementations. &gt;Tail calls can be implemented without adding a new [stack frame](https://en.wikipedia.org/wiki/Stack_frame) to the [call stack](https://en.wikipedia.org/wiki/Call_stack). Most of the frame of the current procedure is not needed any more, and it can be replaced by the frame of the tail call, modified as appropriate (similar to [overlay](https://en.wikipedia.org/wiki/Overlay_(operating_system\)) for processes, but for function calls). The program can then [jump](https://en.wikipedia.org/wiki/Jump_(computer_science\)) to the called subroutine. Producing such code instead of a standard call sequence is called __tail call elimination__. Tail call elimination allows procedure calls in tail position to be implemented as efficiently as [goto](https://en.wikipedia.org/wiki/Goto) statements, thus allowing efficient [structured programming](https://en.wikipedia.org/wiki/Structured_programming). In the words of [Guy L. Steele](https://en.wikipedia.org/wiki/Guy_L._Steele), "in general procedure calls may be usefully thought of as GOTO statements which also pass parameters, and can be uniformly coded as [machine code] JUMP instructions." &gt;Traditionally, tail call elimination is optional. However, in [functional programming languages](https://en.wikipedia.org/wiki/Functional_programming_language), tail call elimination is often guaranteed by the language standard, and this guarantee allows using [recursion](https://en.wikipedia.org/wiki/Recursion_(computer_science\)), in particular tail recursion, in place of [loops](https://en.wikipedia.org/wiki/Loop_(computing\)). In such cases, it is not correct (though it may be customary) to refer to it as an optimization. The special case of tail recursive calls, when a function calls itself, may be more amenable to call elimination than general tail calls. &gt; --- ^Relevant: [^Escape ^analysis](https://en.wikipedia.org/wiki/Escape_analysis) ^| [^Stack ^overflow](https://en.wikipedia.org/wiki/Stack_overflow) ^| [^Goto](https://en.wikipedia.org/wiki/Goto) ^| [^Mutual ^recursion](https://en.wikipedia.org/wiki/Mutual_recursion) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cscq6bn) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cscq6bn)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](/r/autowikibot/wiki/index) ^| [^Mods](/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Call ^Me](/r/autowikibot/comments/1ux484/ask_wikibot/)
C# 5.0 in a Nutshell
If you're new to C# or OOP, I'd recommend "Code complete" any day of the week. 
AFAIK, all LINQ queries are lazy, so the only difference between the two methods is another function call
Your code is **horrible** formatted. You clearly did not spend much time and effort in this blog post.
Yes. Theoretically you just need to send the same requests as the browser would do. Realistically... It makes not much sense. Most websites (like Facebook or gmail) offer specialized APIs to do stuff. Read up on `HttpWebRequest` and the HTTP RFC.
Yeah facebook and gmail have an api. But my codes need i to access my wallet load online and tracking air fares...
Like I said: Just do the same http requests your browser would do, then read and evaluate the response (the HTML). This is no trivial task.
Got a sample code there? Pls share... When knowledge is shared, knowledge is doubled
Hi there! You can always try and set a goal for yourself to accomplish something that seem fairly easy. Like try and make a simple CSV parser or INI parser. Those seem like somewhere to start to get hang of handling strings. I would also recommend that you try out doing something that you find interesting. About 10 years ago I was a lot into IRC and there for I forced myself to create a IRC Daemon/Server. It was a great experience and a lot of fun. :-) It also makes the learning process a lot more motivating. Whenever you need help or in doubt. Google will always be your friend. If you have any specific questions on how to do X, then reddit can help out as well. There are tons and tons of experienced developers here! :-) Good luck and have fun!!
That sounds great, ill get on it!
If you are going to write your own code for logging in to a website. Then there are two things you need to do. 1. Look how to do a Http POST. 2. Keep the same cookiecontainer between all the web requests you do. After sending a post for logging in, you want to use the same cookies that you get from the login post with any other request you do. Sorry if this is confusing. Haha x) but yeah the key part is assigning the same cookiecontainer on all requests. Next thing to do would be to find out what exactly do you need in your post to actually login. That you can do bt using the developer tools in chrome, Firefox or IE (press F12). Or by using fiddler. I hope this helps! :D
Semicolon after event handler
&gt; When Google is used, number of posts is halved.
There are lists online for programs to make which are handy if you're stuck on inspiration. You could also search for code katas. These are great because they give you the requirements, you just need to tag it, understand it and then try and implement it. 
Using Resharper and it auto adds the semi-colon for me yet I add it myself anyway :p Also writing a bunch of code and then forgetting to call the method wondering why it's not working.... 
Damn, I've done that so many times.
Starting writing unit tests, ending up writing integration tests 
Pressing L instead of ;
&gt;Using Resharper and it auto adds the semi-colon for me yet I add it myself anyway IIRC, ReSharper is smart enough to not add two semicolons in this scenario, so it's not really a "mistake"?
If you compile with optimizations, e.g. a release build, then simple static methods are inlined. Even non-inlined code is optimized by the JIT compiler so I imagine there is effectively zero overhead of that additional function call.
Browse /r/beginnerprojects for inspiration. The sidebar says it's for python but you can create them in any language.
This may be offtopic, but www::mechanize in Perl does that. http://search.cpan.org/dist/WWW-Mechanize/lib/WWW/Mechanize/Examples.pod
I just started using guids... such an annoying mistake to make especially in unit tests.
Sounds like you need an actual senior architect. That's kind of ridiculous IMO. What is his reasoning, if I might ask?
Yeah it is awesome. Makes life so easy, you should bring it to the table with a small POC for extra ammo come raise time. It's actually easier than you might think. 
Imagine a class "Human" with a method "get name()". I am an instance of Human, if I call " this.getName()" I will return "dracanus". In the context of any object, this will refer to itself. Its own private data etc 
Every time I see code that does some date/time calculation that is already in the Framework I want to scream.
Not validating parameters before using them. Mainly an issue on public methods on public classes, but it's an issue elsewhere too.
I completely agree about the Head First series. I got the C# for cheap and have tried to use it as a reference on multiple occasions. Even when I look something up in the index and it gives me the page that it is on, I often can't even find it on that page.
 (new Guid()) == default(Guid) Guid.NewGuid() != default(Guid) // makes a randomized guid
 if (charVariable.Is //looking at the IntelliSense list of methods in confusion No idea why all the character classification methods have been made static.
Yup, I can see some of the mistakes I made when I started out. That's why I decided to help, at least a little bit :)
About that. I've heard Visual C# is different than original C#? Is that true? 
&gt; which is the new API for Store Apps No actually it's simply a new type introduced that runs on everything, including Store applications. &gt; I know I can download full stream, save it into a variable and then write it all to an mp4 file, but that would kill most of the phones, because of the overuse of RAM. What is the best way to do this? You've kind of answered it there, stream it to a file. You don't need to buffer the whole video before saving to file. http://blogs.msdn.com/b/dotnet/archive/2012/06/06/async-in-4-5-enabling-progress-and-cancellation-in-async-apis.aspx
C# is a language. There is no language called Visual C#. In the context above, I'd say that Visual C# means using visual studio to write C# (you don't have to use Visual studio to write C#)
I am getting an error: "operator == cannot be applied to operands of type System.ConsoleKeyInfo" and "System.ConsoleKey" Help? :P
Try using ConsoleKey KeyPressed = Console.ReadKey(true).Key; You're going to have to learn to check the type on the return of functions. Console.ReadKey(bool) return a type "ConsoleKeyInfo" - under "ConsoleKeyInfo" there is a property called "Key" this property is in type "ConsoleKey"
Current instance of the class, not the class itself (which is a Type)
Not a mistake as such, but I've been doing C# professionally for over 10 years, but I still always have to look up the difference between the various classes for reading and writing streams/files whenever I have to use them.
Not mine anymore, but one of the most common ones I see when working with new developers (or developers new to .NET and/or static languages) is failing to initialize collections before using them. E.g.: class myClass { public List&lt;T&gt; MyList { get; set; } } // Elsewhere in code: var c = new myClass(); // Intellisense suggests this and it compiles fine, // but it's a runtime error. c.MyList.Add(new T()); // Or, another common one that's a runtime error if (c.MyList.Count &gt; 0) { } // Finally, another common one: foreach (var item in c.MyList) { } 
True, although I *also* use StyleCop, which takes the opposite position and actually enforces use of "this". So I tend to use it all over the place. It's cleaner IMO - you can tell at first sight that it's a member variable rather than a function parameter, for example. But each to their own.
Nobody has time to do it right. Everyone has time to do it over.
It has a place, imo. But it has its pitfalls, like unsubscribing. Why does it bug you?
YES, that is much better stated. Thank you for the correction. (really, no sarcasm, sorry I missed that)
i recommend using tcp or httplistener for something, you could then interact with your program from your browser, where it becomes easier to make a ui, and its a very easy place to start using async await. if you decide what you want to do and need some help or if you want to make some multiplayer app and need someone to test i will be around 
Very nice. So where do you work... And are you hiring? Lol
Try thinking of something you would like to solve. Maybe there is something that annoys you when you use your computer everyday. Then if you have found something. Think how you would like to solve this and then try to do it with C#. Maybe one of your friends has been talking about a problem, where he/she thought, that maybe someone could solve. Maybe you could be the person to do so. Else i would recommend sites like https://projecteuler.net/. The give you a certain challenge. Hope that this information could help in some way. greetings darophi
I'll test it later
This looks pretty neat. Does this also use an XML config like the Java version?
Ha. It's more or less a supply chain management company for a large restaurant chain. And yeah, we are almost always hiring good devs!
var now = new DateTime() Instead of DateTime.Now :(
Rule #1: If it can be null, it will be null. After 10 years, I still forget this.
Eh. I dislike dismissing something because sometimes people abuse it. That's why we can't have nice things. Anonymous methods are fine, but they need to be used when a) the handler is extremely simple, b) the handler is relevant for the lifetime of the object, and c) there is no reason to make the handler virtual. The unsubscribing issue is actually a nasty pitfall. You can't unsubscribe one at all, too my knowledge.
You can't and it's a common(ish) cause of leakage. I interviewed at a company that described this exact issue and when I pointed out event subscriptions it was like a light-bulb flashed! I've always been much more fond of explicitly subscribing &amp; unsubscribing because it's a safe habit. 
I suppose. Experience suggests that somewhere in a larger project, someone is going to modify some code which makes that leak! But you're point is still valid. :)
Just do a search on Youtube or google. Search for stuff like 'learn C#' or even specific topics. There is a lot out there.
The binding is overwritten by a string in the event. You need to re-create the binding programatically, or better still, instead of `SaveLocationTextBox.Text = dialog.FileName + "\\";` do `myBoundObject.SaveTo = dialog.FileName + "\\";` instead
When you set up a binding, you should never access the Text property directly but do it in the ViewModel. Replace this: SaveLocationTextBox.Text = dialog.FileName + "\\"; With this: SaveTo = dialog.FileName + "\\"; Point of MVVM is minimizing the code-behind so you could utilize the Command pattern (there is a great class component RelayCommand in MvvmLight toolkit).
So basically when you use the This keyword in the class, you manipulate the variables inside the class using that keyword + the ("Name") in the end of the line when you create a new instance of it? Basically for it to be more flexible when manipulating data for an object? What if you have multiple "This" How would that work?
As others have said, you shouldn't be changing the value from code behind like that. The proper MVVM way to do this would be to use a command with your button and then set your viewmodel's SaveTo property appropriately when the command is executed. As you have a two way binding this will then update the Textbox's Text property to the correct value. If for some reason you don't want to do this, then there is a way to update the value of your Text property without destroying your binding. You can use the DependencyObject.SetCurrentValue method to do this. http://wpf.2000things.com/2010/12/06/147-use-setcurrentvalue-when-you-want-to-set-a-dependency-property-value-from-within-a-control/ Replace the line you have in your event handler with DependencyObject.SetCurrentValue(TextBox.TextProperty, dialog.FileName + "\\"); and it should do what you want. I really wouldn't recommend you do this though, the MVVM way is the preferred approach if you want to use bindings. The SetCurrentValue method should really be reserved for when you're building your own controls. 
 if (list.Count() &gt; 0) instead of if (list.Any())
I'm not quite sure what you mean by your first paragraph, but you seem to be on the right track. You never have multiple "this". "this" is mainly for disambiguation within the scope of a class. Say you had a member variable (i.e. a field) called "colour" and you also had a function parameter called "colour". In this example, using "this" specifies that we want to refer to the member variable named "colour" as opposed to the function parameter of the same name That's not the only use though. It can also be used to pass the current instance of the class into other functions, such as this: +/u/CompileBot C# public class Dog { public string Name { get; set; } public Dog(string name) { this.Name = name; } public void BegForFood(Human human) { Console.WriteLine("Woof Woof! {0} is begging for food.", this.Name); human.FeedDog(this); } } public class Human { public void FeedDog(Dog dogToFeed) { Console.WriteLine("{0} has been fed.", dogToFeed.Name); } } Human human = new Human(); Dog fido = new Dog("Fido"); Dog sirBarkalot = new Dog("Sir Barkalot"); fido.BegForFood(human); When you call BegForFood on the instance of Fido, "this" becomes a reference to 'fido', so when human.FeedDog() is called, 'fido' gets passed in. If you were to call BegForFood() on the sirBarkalot instance, "this" would refer to sirBarkalot. I don't know how /u/CompileBot handles classes, so let's try... 
Bulgarian C# book, Fundamentals of Computer Programming with C#.
Reporting back: This extension is really nice. Aside from the bracket colouring which is definitely handy, I like the italics on certain keywords, and also how when you hold CTRL it will highlight the whole code block your cursor is sitting in. Thank you very much, I have a new thing I can't work without.
They're similar, but if you try coding in c# like you do in java, you're shooting yourself in the foot. For exemple, * you should try to replace getters/setters methods by properties. * Learn LinQ to avoid complex loops when manipulating collections * Since you don't have to catch exceptions in C#, errors are less often thrown. i.e. returning null instead of throwing ObjectNotFound * Use Delegates instead of listeners 
&gt; Since you don't have to catch exceptions in C#, u wot m8
Should be pretty easy, just focus on the main differences. Generics, events, delegates, LINQ, properties, indexers, async/await, "using", exceptions, IDisposable, ref/out, extension methods.
He's talking about checked exceptions. Checked exceptions are checked on compile time and HAVE to be handled (either by declaring a method throws an exception, or by using a try-catch statement), otherwise your program will not compile. &gt;C# does not support checked exceptions. In Java, these are declared using the throws keyword, to specify that a method can throw a particular type of exception that must be handled by the calling code. [Source](https://msdn.microsoft.com/en-us/library/ms228505%28v=vs.90%29.aspx).
It's a simple transition, I just did it and it's a nice language. Do yourself a favor and understand what life without type erasure means before you dive into generics. It's better, I'd say, but takes some time to transition. 
You could create a console app does that and then uploads the list to an FTP server. I recently did that myself except I was interested in the MD5 rather than modified date. (Creating a one-way "dropbox" style app for distributing files.)
That's a good idea, maybe a bit convoluted for my particular needs though. I'm thinking I may take a look at creating a simple service. I've been meaning to check out TopShelf, so a good excuse to give it a go. 
Thanks for the heads up im gonna try a different javascript "brush" see if I can find one that works a bit nicer, thanks again! 
you can access the files with the path \\\servername\c$\path\to\files\ where "c" is the drive letter. This works even if the drive has not been shared. but the user account that runs the program needs file access to the files. You could also create a WCF Data Service on the server that accepts the full file path as an argument and returns the file info for that file. This is slightly more complicated (still pretty easy) and is probably the better way of doing it. It can be made more secure and clients won't have to be given file access to the server.
That's hardly convoluted. Install a (S)FTP server, then your client application simply connects over SFTP (there are a few .Net libs for that) and issues a request for file metadata, which includes the modified date.
I'm guilty of all of these at least once: * Using EF when Dapper would be better; using Dapper when ADO would be better. * Coding the details into a project instead of into metadata * Database as a queue * Creating non-virtual public methods * Creating a one-line linq method chain that does everything I need instead of breaking it up so the next dev can understand it easily * Thinking IQueryable and IEnumerable were the same thing * Not passing a CancellationToken when starting a thread * Implementing IDisposable on a managed resource * Using Thread.Sleep instead of FileSystemWatcher * Not logging anything * Using string.Format instead of SqlConnectionStringBuilder * Using regex to validate emails instead of the MailAddress trick
Thank you for your feedback, I noticed this too, I have now changed it to use a different javascript syntax highlighter and it seems to look a lot better. Thank you for taking the time to let me know. 
And if he knows Java 8 he should already be doing the 2nd and 4th point
No, it isn't what I was looking for.
&gt; What is the Repository Design Pattern? &gt; To put it simply, it is an implementation of a brokering layer between the application and a data source You might want to learn the actual pattern, instead of just knowing something is using it without understand the actual pattern.
When you say database, do yuou mean something like sqlite? Or SQL server? How does office handle zipping? Do you try to compress files when zipping? If so, does it cost more in terms of processor work? I assume you would have to redo the compression with every save or at least when office quits?
Good point. Local apps that use db for storage will general use something like sqljte because you don't want to use something that is going to be a deployment issue. Yes. Office zips the file as it saves the structure every time - at least partially - I dont know where we landed there. Last time I saw perf stats on it (circa 2006), the zipping was a small fraction (&lt;10% of the overall CPU time) and from the users point of view, overall perf will generally be faster for large files because IO is going to be significantly faster for most users (and for small files, it just doesn't matter, user perf wise).
Your question is a bit convoluted. First, there's an assumption in there that's not always true. And second, your comparing two wildly different use cases and asking for a common denominator. You could call each xls,doc,ppt it's own database, and interact with the files much the same way you interact with RDMS. For excel, this is obvious. You could even point EF to an excel connection string and treat a file as a relational database. Word data can be indexed and queried , same with ppt files. Creating new records via that interface would be a huge p.i.t.a. But read-only access, go ahead and treat them as individual databases. 
A key lesson in both use cases would be to abstract away the implementation of the data repository to a "business data" layer, and have the logic of your application deal with the abstracted data layer as much as possible. Today you might have an excel file. Tomorrow you might have a database, or a REST service. You don't want tendrils of the data implementation scattered through your application. In addition to the flexibility this gives you, it also gives you the ability to easily test both the data side, and the logic side independently, because you can mock out the other half. Of course, you can take this pattern too far, and there are certainly places where one tier must know about the other and interact with them directly. But minimizing those places has rarely been the wrong choice for me. 
I've written code against the xml-based file library, and it was a huge pain. I can only imagine what it was like to design it and work at a lower level. OP: If you're going to read &amp; write Office files, buy a 3rd party library. Trust me. 
Why do you always have to be such a douche?
You must confuse me with someone else. Can happen, I forgive you.
sorry but I am very lost in what you are saying :( 
Do you know what an [interface](https://msdn.microsoft.com/en-us/library/87d83y5b.aspx) is? Everything you want to render should be able to be rendered through an interface, including the scrolling background.
Interface are peripheral abilities that groups things together I'm guessing he saying to create a render interface that allows everything you want to display on screen to implement to take advantage of multiple inheritance and polymorphism 
Anonymous methods &amp; Lambda expressions if you don't know them yet. And LINQ is a must if you are not familiar 
You are a very good programmer if you can just write this so easy. (in my newbie eyes at least) But yeah, I have heard of "interfaces" and "getters and setters" but I never really understood them or their purpose :/ Thank you very much for writing this code, it looks great, but I am still very lost and probably shouldn't be making flappy bird in the console window yet :P 
Extension methods are syntactic sugar for static utility methods. You can create a class StringExtensions and inside it have a method IsEmail() and instead of StringExtensions.IsEmail(string) you can call string.IsEmail(). You can put extension methods on more than just classes. It gets very interesting when you put them on interfaces--this essentially macguyvers mixins (at least a limited form) into C#. You can now add functionality to any class by implementing an interface. This is how LINQ works.
No they don't get included. It's just a suggestion I find myself making over and over again - if you write new code put a breakpoint at the top of the method. Even if you are doing unit tests you still need to examine the internals of your code to see first hand that it is doing what you expect. Even a quick cursory check to ensure that the variables, parameters, database calls, and output are correct will save so much time. It's absolutely amazing the number of times I've been asked to help debug a problem and the solution was "oh look, here's this completely untested code you just wrote that doesn't behave as expected". 
No, you look for opportunities to be smug prick way too often. 
This is absolutely not true.
Rx using LINQ
Yes, an OOP book would probably be good for me, thank you
I think I see what you mean. I answered about the,mechanism. He asked about a specific pattern used with a mechanism.
Literally in every thread. I can always count on him to talk down to OP for not being as knowledgeable as him or for having a different opinion than he does. How dare someone ask a question that he finds trivial!
Tag what?
Test-Driven Development.
Rx will blow your mind.learn it - even if you don't use it directly, will influence your coding style.
Making a .NET library cross platform. https://msdn.microsoft.com/en-us/library/gg597391(v=vs.110).aspx
How comfortable are you with LINQ, lambdas, dynamic typing, delegates and async? You can read through [C# in Depth](http://www.amazon.com/Depth-3rd-Edition-Jon-Skeet/dp/161729134X) if you want an in-depth look at those advanced C# specific features. If you want to sharpen your overall developer skills, there are a number of good algorithm books that aren't C# specific.
Modifying the collection during enumeration and it could go unnoticed for a while. Sometimes you might not realise, that you enumerate the collection at all: var item = myCollection.First(p =&gt; p.Title == "Reddit");
I personally find the SourceMaking website incredibly useful for learning about design patterns: https://sourcemaking.com/design_patterns
You're right that is a good option. I'm leaning toward creating a simple WCF service to host on the remote server, and have created a hosting service with TopShelf just cuz it seems like a cool "SOA way" to do this. 
i don't know the difference between the system.net.httpclient and windows.web.httpclient. I assumed they had the same api, but maybe that is not the case. I took a look at the documentation at https://msdn.microsoft.com/en-us/library/windows/apps/windows.web.http.aspx, and it looks pretty similiar, but maybe not identical. You should be able to do something simliar to what I suggested, at least. Create an array of bytes to use as a buffer, and then alternate between reading from your httpclient response into the buffer and writing from the buffer to the filesystem. If you want to monitor progress, then you can just keep track of how many bytes you have read from the content of the http response. The http header will include a content length which will you tell you the total bytes of the file. 
I've been making extensive use of data flow and tpl. There is a nugget pckg you need to get for data flow.
What is a typical use case for it?
So, if I just used something like s.Write(await http.GetBufferAsync(new Uri(uri)).ToArray&lt;Byte&gt;(), 2048, 0); it should give the same effect as the example from pastebin, right? But then, how do I monitor progress if I can't assign the return value of async operation... you know?
Write an application using AutoFac to create your buisness objects. It will entertain you.
Edit: Retracted, my tests were not for a sufficiently significant sample size. The provided short-circuits do, indeed, generate primes significantly faster than the naive method, even with CLR magic. ~~Here's some [sample code](https://gist.github.com/wallstop/28f4e4b6c31754749db0) that, very importantly, includes CLR warmup.~~ ~~/* Primes ommitted */~~ ~~Prime generation took 00:00:00.0013827~~ ~~/* Primes omitted */~~ ~~Better Prime generation took 00:00:00.0070392~~ ~~Now, granted, I used generators, but both examples were using generators, so the comparison is still fair.~~ ~~So... the hand-"optimized", many-more-conditionals-and-thus-not-as-simple-as-the-original is slower. Why? Hypothesis: we just added a ton of branching, which the CLR may not be able to intelligently eliminate. This kills [branch prediction](https://en.wikipedia.org/wiki/Branch_predictor)~~ ~~I'm all for short-circuiting when it is a logical thing to do. Maybe I'm biased, but I stand by the "Make it work, make it right, make it fast" mantra. If it's fast enough, then who cares?~~ ~~I'm more of a fan of explicit-ness. I'd much rather deal with code in a code base that followed your original examples, as opposed to the ton-of-branches "optimized" code. Way less mental load, way less bugs.~~ 
That's what happens when you never do it. The more you do it, the faster and more natural it becomes. If "time" is the issue, I'd refer to the amount of time it takes to find a bug that was caused by the nth cascading failure buried deep in some object graph or factory.
Any suggestions?
Algorithms 4th ed Algorithm Design Manual
i thought session variables were a kind of memory snapshot.... thanks anyway
No, they're for storing small data (like tokens) that need to persist across page loads in a session. If you need to populate a view, you need to do that every time a page loads. That data can either come from the server or localstorage. The session variable shouldn't be used for caching arbitrary data, especially large data sets.
Like /u/wallstop I was wondering about such big improvements and ran my own benchmarks for 0-100k with these results: JuniorTest 0: 9592 primes in 00:00:16.6202185 JuniorTest 1: 9592 primes in 00:00:16.5681117 JuniorTest 2: 9592 primes in 00:00:16.6163582 JuniorTest 3: 9592 primes in 00:00:16.6667072 JuniorTest 4: 9592 primes in 00:00:16.6445773 Average: 00:00:16.6239386 JuniorTestOptimized 0: 9592 primes in 00:00:01.5120340 JuniorTestOptimized 1: 9592 primes in 00:00:01.5074460 JuniorTestOptimized 2: 9592 primes in 00:00:01.5097554 JuniorTestOptimized 3: 9592 primes in 00:00:01.5055788 JuniorTestOptimized 4: 9592 primes in 00:00:01.5088144 Average: 00:00:01.5078986 ShortCircuitTest 0: 9592 primes in 00:00:00.8377020 ShortCircuitTest 1: 9592 primes in 00:00:00.7834897 ShortCircuitTest 2: 9592 primes in 00:00:00.7815743 ShortCircuitTest 3: 9592 primes in 00:00:00.7830057 ShortCircuitTest 4: 9592 primes in 00:00:00.7886063 Average: 00:00:00.7841690 SieveTest 0: 9592 primes in 00:00:00.0017578 SieveTest 1: 9592 primes in 00:00:00.0007442 SieveTest 2: 9592 primes in 00:00:00.0007626 SieveTest 3: 9592 primes in 00:00:00.0008210 SieveTest 4: 9592 primes in 00:00:00.0007834 Average: 00:00:00.0007778 The first result is ignored in the average for warmup purposes. JuniorTestOptimized is the same as JuniorTest except I've added a break after isPrime = false. The SieveTest uses the sieve of Eratosthenes and completely blows all the other implementations out of the water, even at 10 million numbers: SieveTest 0: 664579 primes in 00:00:00.0883435 SieveTest 1: 664579 primes in 00:00:00.0822612 SieveTest 2: 664579 primes in 00:00:00.0789792 SieveTest 3: 664579 primes in 00:00:00.0801569 SieveTest 4: 664579 primes in 00:00:00.0787906 Average: 00:00:00.0800470 I just wrote this and it's 4AM so if anyone wants to see my code it's [here](https://gist.github.com/Goz3rr/6e4edaebb937c8a126b1)
I think it's a bit early for any 6.0 books but I've got a book called Pro C# 5.0 and the .NET 4.5 Framework by Andrew Troelsen
In practice? Not much... I think I read somewhere that technically methods are defined within class objects whereas a function can exist outside a class object like in C++ where there can be functions that have no bounding class. But Java calls all their class methods functions - so in practice they have no real distinction.
As stated, the example is just to illustrate skipping unnecessary evaluations. The more practical example was given with prime numbers.
&gt; We don't have functions that are independent of classes in C# No? https://msdn.microsoft.com/en-us/library/bb549151(v=vs.110).aspx
That's not a function. That's an object, specifically a delegate, that acts as a pointer to a method. The target method may either be an instance method or a static method. If the target is an instance method, then the delegate is bound to the object instance that the method belongs to. Func is the name of a class. It is not the name of a language construct. 
Take a look at [this](http://www.codeproject.com/Articles/484616/MVVM-Diagram-Designer) codeproject post.
It doesn't. Just a little worried about where EF7 is headed. 
Didn't know this until a month ago. I love extension methods and it maks your code so much cleaner. 
So changes are made directly to the ViewModel, i see. I was assuming that "binding 2-way" would work whenever i change the Text Property (from anywhere). Then what would provoke the update then? I was always assuming the "TextChanged" Event, but it doesn't look like it from your explanation. 
see?
They're pointers to methods that are part of a class.
Ah.i really have no insight into that. Sorry dude.
It will come with Visual Studio 2015. There is no release date for it announced. Unofficial expectations are several months after the release of Windows 10.
Or the `ConcurrentQueue&lt;T&gt;`.
Static methods are still methods, aren't they? 
No worries. C: 
Huh, TIL. http://blogs.msdn.com/b/oldnewthing/archive/2006/08/02/686456.aspx Thanks for your patience! I knew there was something I was missing.
No problem! Like I said, in the context of C#, and java as well, everything is a method. How they come to be so may be less clear. Especially as things get more implicit and more abstract.
function is a slightly "overloaded" term, if you know what I mean. For example, if I remember it right, in VB there were distinct keywords for creating a method that didn't return any value (sub) and a method that did return a value (function). But, there is another meaning. Func&lt;T, TResult&gt; is shorthand for a delegate that receives a T and returns a TResult. And as a delegate, the differences between a function and a method are more apparent. For example, you can receive Functions as parameters, or return Functions as return values. It's just a delegate. A first class abstraction to address methods that share signature. In that way, I like to think that Delegates are to Methods what Interfaces are to Classes.
Honestly, I thought this was /r/learnprogramming, not /r/csharp, which has its own definition of Method and Function.
Very cool nonetheless, I personally had no idea those few if's would have that much of an impact.
You're right, of course, but I'm wondering if your able to illuminate how this works at the compiler level. Does a static method in a non-static class compile an additional static class that contains the static method? I'm assuming it does, since a static method in a non-static class can't be referenced through an instantiated version of said class.
&gt; if I remember it right, in VB there were distinct keywords for creating a method that didn't return any value (sub) and a method that did return a value (function). Funny. In Pascal it's a function if it returns something and a procedure if it returns nothing.
IMHO, in a large project with many developers, sometimes it's better to focus on consistency and readability over this kind of optimization. And of course when you are chaining a bunch of selectors, it arguably becomes much easier for others to follow with each one on its own line with its own command. 
In C# there are only methods, terminology-wise.
But in books, tutorials and here we all speak of functions. So the term has to be applied to C# too.
Im reading a book called C# Design patterns. Very short and concise, some language tips too.
I think everyone else sums it up really. Static classes everywhere, no DI, poor SRP adherence.
Oh no, you misunderstood me. I mean i have my object implemented the `INotifyPropertyChanged` and it is working correctly. But i want to ask what would provoke the update from the TextBox upon 2-way binding. 
Good idea! I actually like to do that too, and should have done it in my post.
I love that someone downvoted all my comments without providing any other sort of an answer. I'm not misleading you here, this is similar (albeit highly simplified) to the way real rendering systems are designed like WPF and Forms controls: with multiple inheritance and polymorphism.
I don't reference a class library with the .edmx in it. It is all part of a single project. The projects app.config contains the correct connection string. The application also does connect to the DB correctly. I still get the error that the connection string couldn't be found. 
The terms are used interchangeably although sometimes people differentiate a function and a method as a function returning a value and a method not returning a value e.g. void.
 public interface IRenderable { char[,] ObjectGraphic; int[] Location; int Z; } Interfaces can't have fields, this won't compile.
I always thought of methods as a subclass of functions. A method is a function which is a member of a class. I mean, function basically means nothing more than a call where you can put in parameters and get a result back. 
Definitely this, especially if you want to do any UI based work. I would really hate to write a GUI without Rx now.
&gt; it's possible to use class without needing to type the class name before the method, for example If you have a particular class you use functions from a lot... for example: public static class MyHugeLibraryOfStaticFunctionsWithALudicrouslyLongName { public static int Add(int a, int b) { return a + b; } } You can put a "using" directive at the beginning of your class to "rename" something so you don't have to type out the whole name: using M = MyHugeLibraryOfStaticFunctionsWithALudicrouslyLongName; public void Main() { Console.WriteLine(M.Add(2,2)); } As far as I know there's no explicit way to really call a method without specifying what class it is in unless the method is in the class whose scope you are within. C# is very object oriented in the sense that no methods can exist outside of a class, so you always have to tell it which object has the method you're looking for.
Yeah, please don't encourage beginners to write such shit.
Don't forget LINQ is lazy~
Thank you for your valuable addition to the conversation.
I'll second this. Half way through it now. This book has already done for scripting/programming what "The Practice of System and Network Administration" did for systems administration.
* "Microsoft Visual C# 2013 step by step" Got me from "I know PowerShell and BASH" to actually building basic applications that do meaningful things in about a month. * "C# in a Nutshell" has been a valuable reference aid. * "Code Complete second edition" Taught me lots of language independent best practices. * "Concurrency in C# Cookbook" is a book I'm using to help me make a program I'm building more parallel.
I haven't seen the final ef7 yet. Nothing too worrying. I just wonder about support for different databases going forward. That and just want to thank them. While I have only used code first in hello world apps, I love it.
Everyone starts at the bottom. At the same time, not everyone learns from reading a book or doing a Google search. That requires a certain base level of understanding since many articles online do assume a certain skill or mastery (because they are written by people of skill and mastery). My wife can stare at a book for days and not get it, but pick it up in a few minutes if I show her something. Yes, there are questions you know the answer and see repeatedly, but for the one asking, that isn't always the case. You see that in school all the time, the same question is asked over and over, even when they are looking at the books. But when they are ready to ask, they do. But for the teachers, they get the same question repeatedly, time after time even in the same hour because not everyone comprehends at the same time. Or they were focused on something else. Or they didn't realize that the person before them had asked the same question, but phrased slightly differently. So, I know its frustrating, but please be patient with them. They are (hopefully) struggling to learn something. And if you see the hundredth question in a row about the same thing, just move on. Don't downvote, don't rant, just let someone else answer.
&gt; I was just giving the answer closest to his desired goal. He's a beginner. He should not be given the answer closest the desired goal, because he does not know what he should desire.
Another example of this is returning from a function as soon as possible. I can't stand seeing nested logic, with a huge collection of various return statements 100 lines down at the end, as each "else" executes. Instead, list the things at the very beginning that can cause the function to not execute properly (null checks, etc.), returning for each one. Not a huge performance optimization, but much more readable and keeps nesting under control.
Because ToList() forces all elements to be evaluated immediately. But say you had some code like this: IEnumerable&lt;int&gt; x = someList.Select(someExpensiveFunction); int total = 0; total += x.Take(someInt1).Sum(); total += x.Take(someInt2).Sum(); If `someInt1== someInt2== 0` then `someExpensiveFunction` will never actually be evaluated witch is great (performance wise)! If only one of the someItsX is greater than 0, that that is also fine, and only the first max(someInt1, someInt2) elements will be evaluated. The problem is if both are non-zero then you may end up calling `someExpensiveFunction` twice for each element in someList. So say you then decide to use ToList() like you suggest: List&lt;int&gt; x = someList.Select(someExpensiveFunction).ToList() This will make sure that `someExpensiveFunction` is called exactly `someList.Count` times, but now this will be doing too much work in any case other than if `max(someInt1, someInt2) == someList.Count`. Now say you do this: IEnumerable&lt;int&gt; x = someList.Select(someExpensiveFunction).ToCachedEnumerable(); Now you are guarenteed that someExpensiveFunction is called exactly `max(someInt1, someInt2)`
This one optimized the case where you never enumerate ;). Probably rarely worth it, though.
&gt; e you never enumerate ; Well never or partially, or if you do many partial enumerations.
That implies that the `someList` is immutable and that `someExpensiveFunction` is a pure function, which might not always be the case.
To be fair, this is an issue for almost _any_ LINQ query. Performing an initial `.ToList()` isn't safe to mutability/impure functions either. In general, you'll want your queries to run on data that you don't expect to change, regardless of the query. (At least over the lifetime of the queries) So if you can't guarantee immutability over the time period of performing the various cached results, then you may have to consider front-loading the data with a `.ToList()` or introduce locking, or other code changes to ensure correctness.
"That's offensive!" Is no argument. Also, *truth hurts*.
The compiler generates a class that the lambda is a method of :)
This is definitely going to be a future topic. Nesting and single exit point for complex decision structures.
True. For this reason you should generally avoid iterating over an IEnumerable multiple times though, and in my opinion the `CachedIEnumerable` encourages such a non-atomic enumeration.
`Func` is class, instances of which are objects, that store pointers to functions. It is not a function in and of itself, but a way to refer to functions/methods. 
This drops below C# to modifying IL, but you can have methods in .Net outside a class: [Module Initializer](http://einaregilsson.com/module-initializers-in-csharp/)
I know, it's a bit of a mind bender! I assure you it does work. It works because when you use `yield return` you are returning a single element in an IEnumerable. The function that does this will be executed lazily so the function will only execute once you start pulling out values (i.e. enumerating i.e. by doing Sum() or a foreach over the IEnumerable). A subtlety is that if you enumerate more than once, the function starts again from the beginning. Say you had this List&lt;int&gt; _myList = new List&lt;int&gt;(); IEnumerable&lt;int&gt; a() { System.Console.WriteLine("Lets start enumerating!"); _myList.Add(_myList.Count); foreach (int i in myList) System.Console.WriteLine("i: " + i); yield return -1; } Then doing IEnumerable&lt;int&gt; someInts = a(); will not yet print anything. then say you did foreach (int i in someInts) { /* do nothing */ } foreach (int i in someInts) { /* do nothing again */ } foreach (int i in someInts) { /* do nothing again 2 */ } The output you would get is Lets start enumerating! i: 0 Lets start enumerating! i: 0 i: 1 Lets start enumerating! i: 0 i: 1 i: 2 P.S. I haven't actually tested this code, hope it's correct :-|
True but the fact that it is named func is an indicator that the concept of a function is not very strictly defined, especially not by its implementation.
A delegate is neither a function nor a method. It is a typed pointer to a method, which is itself a type. Holding an object of this type does not constitute a method declaration.
It looks to be bugged to me, even when used in a single threaded manner. Consider the case of two enumerators being moved in turn, eg in a Zip function. They'll both iterate past the foreach in cache (as it's empty), and they'll then return only alternate items each. As it stands it's only really suitable if you only ever use one enumerator at a time, which is not really what IEnumerable usually promises. The full solution breaks the "that's neat" factor of it a bit, as you have to recheck cache on every iteration to see if any more elements have been pushed, and also check it again after the last iteration has been completed. Best is to merge it all into the one while loop really.
Yes, really.
Yep. It's missing an i++, but it's pretty much what I was thinking. Whether *that* is bug-free I cannot promise ;), but it does look good to me. EDIT: technically you should call Dispose on the enumerator when you're done with it too. This'd complicate the method again as you can't call MoveNext after calling Dispose, so you'd have to set it to null internally (good, allows the GC to free up resources which may be a whole *other* cache of all the values) and check for null before you use it. Practically nitpicking at this stage, but it we're aiming for technical correctness... ;)
From the documentation of `List&lt;T&gt;`: &gt; It is safe to perform multiple read operations on a List&lt;T&gt;, but issues can occur if the collection is modified while it’s being read. **To ensure thread safety, lock the collection during a read or write operation.** To enable a collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization. For collections with built-in synchronization, see the classes in the System.Collections.Concurrent namespace. For an inherently thread–safe alternative, see the ImmutableList&lt;T&gt; class. The problem is that you're adding to your list from multiple threads, but list is not thread-safe. You either need to create a lock, or use thread-safe collection like the `ConcurrentBag&lt;T&gt;`. But both options only make sense if the operation prior to adding takes **significant** time and is an processor bound operation.
&gt; If someInt1== someInt2== 0 then someExpensiveFunction will never actually be evaluated witch is great (performance wise)! Or you could just put in a simple guard clause and avoid the question entirely. Show me code that calls Take(0) and I'll definitely flag it as a bug.
&gt; Consider prime calculations: No. That's a stupid example. If you want to justify this design you need to come up with a use case that actually makes sense.
It does work exactly like that. It does things in parallel: Parallel.For(0, 5000, j =&gt; { //Make a new game Game game = new Game(); //add the results of the game to the game results collection bag.Add(game.Play()); }); It executes whatever function you pass as third argument. It creates Game instance in parallel. It calls `bag.Add()` in parallel. Multiple times.
Because list is not thread-safe. When it works in parallel, it overwrites each other's values. Most likely you're just having a single value in your list at the end.
OK, changed out List&lt;double&gt; with ConcurrentBag&lt;double&gt; and same result. Very odd.
If you're attempting to store passwords securely then don't use string at all. https://msdn.microsoft.com/en-us/library/system.security.securestring%28v=vs.110%29.aspx
What does the code in the Game class do? Also, why do you need to create a new Game for each of the iterations of your parallel foreach loop? Wouldn't you want a single game instance that you play multiple times? Without seeing what Game does that's just speculation though.
So did you copy this from somewhere? Because you don't seem to understand the basics that are going on here. I would suggest you take a break from WPF data binding for a while and write some simple console programs to get the hang of basic C#. I assumed you had instantiated an *object* of *type* "TestDataList" somewhere in code that isn't visible in your link. You will need to use the name of the *object* you instantiated of *type* "TestDataList." I has assumed you understood that as it's basic C#. It's clear you need to probably work on some basic C# skills before you start doing somewhat complicated stuff like data binding.
The use case that makes sense is _"expensive lazily-loaded values with caching"_. Sorry I didn't come up with a better example of that off the top of my head.
You've got a good eye. I suppose we haven't considered thread safety either. Doesn't the GC dispose of the IEnumerator for you?
If you're using System.Random anywhere, make sure each instance of it has a different seed.
Thank you for replying. It just runs through a series of if/then statements until it wins, loses, or reaches its maximum turn limit. Then it returns 0 if you lose, or a positive integer if you draw or win. I am creating multiple instances because each one will have different parameters so I can compare the results. I tried using the same one and the code became ugly so I broke it off into different instances, much cleaner this way.
&gt;so you'd have to set it to null internally (good, allows the GC to free up resources which may be a whole other cache of all the values) For the sake of this single sentence, setting anything to null for the Garbage Collector does [absolutely](http://stackoverflow.com/questions/2785/setting-objects-to-null-nothing-after-use-in-net) [nothing](http://stackoverflow.com/questions/2926869/do-you-need-to-dispose-of-objects-and-set-them-to-null) on whether or not the Garbage Collector will collect the reference and can be considered a [bad idea](http://stackoverflow.com/questions/3903878/c-should-object-variables-be-assigned-to-null?rq=1). Now, don't get me wrong. There are completely valid moments when you *should* set something to null. I may be alone in this, but, I do not think it's the right approach.
&gt; And i gives me the error "'TestBinding.TestDataList' is a 'type' but is used like a 'variable'" My point is, if you don't know what this error means, you need to be working on something more basic than what you're doing.
I do, it's a static random accessed by each instance. I tested it pretty thoroughly and it does give them all random values. Actually, if I just write the averages to the screen instead of collecting them in a List/Collection they actually produce real results. So I'm getting good data from the simulations, but it's being lost during the collection process somehow.
Make sure your access to the Random instance is thread-safe, because Random is *not* thread-safe. [MSDN docs](https://msdn.microsoft.com/en-us/library/system.random%28v=vs.110%29.aspx?f=255&amp;MSPPError=-2147217396#ThreadSafety)
The function yielding results is expensive. What is the function? Who cares? The code doesn't care about _why_ the function is expensive. And yes, it does help mitigate expensiveness in the scenarios pointed out (avoiding re-execution, avoiding unnecessary additional throw-away execution, lazily executing entries as needed). If you don't have this, then don't use it. If you have this, then use it. Or roll your own that's more efficient/better for your scenario.
Hmmmm. &gt; If you don't ensure that the Random object is accessed in a thread-safe way, calls to methods that return random numbers return 0 This looks very plausible. I will have to test this out when I get a few minutes...
Congratulations, you just hung the server because your enumerator held open a database connection, exhausting the pool.
Can you post the code up? I was thinking it might be some sort of issue with a Random object as /u/nerdshark mentions. Without the code we can't really be more helpful though.
That's like saying LINQ-to-Entites shouldn't exist because it's easy for people to make bad queries, or a `while(true)` loop shouldn't exist because it's easy for people to make infinite loops hanging the thread.
Yep. The only other way (which I'll bet is what SecureString does) is write a small native C++ module that encrypts the string, stores it in a buffer, and overwrites and frees the memory manually once you're done, which you call from C# using PInvoke. That's not something that C# can do directly.
&gt; I am creating multiple instances because each one will have different parameters so I can compare the results. You don't instantiate your game with different inputs though: //Make a new game Game game = new Game(); //add the results of the game to the game results collection bag.Add(game.Play()); Did you intend to feed your `i` variable from the outer loop somehow? EDIT: That is, did you mean to call this constructor: `public Game(int mt, int iba, int ira, string cl)`? Because all I see with your code is running the same simulation every time with the same lack of inputs.
I think your error is in the XAML but I really don't know... I'm horrible at WPF... The only way I ever could figure out how to do it was by code-behind... Your XAML doesn't seem to explicitly reference the instance of "TestDataList" &lt;Page.DataContext&gt; &lt;local:TestDataList/&gt; &lt;/Page.DataContext&gt; &lt;Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"&gt; &lt;Canvas HorizontalAlignment="Left" Margin="20,20,0,0" VerticalAlignment="Top" Width="1336" Height="738"&gt; &lt;Rectangle Fill="#FFF4F4F5" Height="{Binding [0].height}" Canvas.Left="222" Stroke="Black" Canvas.Top="254" Width="100"/&gt; &lt;Rectangle Fill="#FFF4F4F5" Height="{Binding [1].height}" Canvas.Left="544" Stroke="Black" Canvas.Top="254" Width="100"/&gt; &lt;Button Content="Button" Canvas.Left="101" Canvas.Top="47" Click="Button_Click"/&gt; &lt;/Canvas&gt; &lt;/Grid&gt; But, like I said, I really don't understand XAML syntax well at all and when I started trying to learn it I spent like 3 days just trying to do a single XAML data binding and eventually gave up and did it in code behind which makes sense to me, unlike the markup syntax of XAML.
That still isn't ideal since by default Random is seeded with the current time, so games started close together may use the same seed and produce the same random numbers.
In this example you are correct. This is a stripped down version I'm using for testing, the full application does use different parameters, etc. However, due to natural variation even with the same parameters it should return slightly different results. All I'm getting out of the List is 24. Which makes absolutely no sense whatsoever.
You may want to look at using the RNGCryptoServiceProvider to generate your random numbers. Random will likely generate the same "random" number in this case, because random is initialized from the system clock. So tight loops or parallel items will generate the same random number. You can also avoid this by generating a different seed, or using one instance with locking (performance issues here). Check out: https://stackoverflow.com/questions/767999/random-number-generator-only-generating-one-random-number and http://csharphelper.com/blog/2014/08/use-a-cryptographic-random-number-generator-in-c/
**WE HAVE A WINNER!*** Thank you thank you thank you
Can you recommend a way to change that?
I will do this. Thanks!
Exactly, I would expect 147 +/- 2. But 24 every time didn't make sense.
Microsoft finally made SecureString somewhat useful by creating the SqlCredential class in .NET 4.5 and newer. 
Why not use [BrowserStack](https://www.browserstack.com/)?
A graph traversal may be a good example. Say you have a set of N known vertices. Edges are defined through some computational expensive algorithm that iteratively finds the neighbors of a given vertex: IEnumerable&lt;int&gt; NeighborsOf(int index) { /* Some expensive search for neighbors */ } Now say you want to traverse a path through the graph of a maximum depth that may reuse vertices but not (directed) edges. You could do: List&lt;int&gt; GetPath(int start, int maxDepth) { int current = start; List&lt;int&gt; path = new List&lt;int&gt; { start }; List&lt;ICachedEnumerable&gt; allNeighbors = Enumerable.Range(0, N).Select(i =&gt; NeighborsOf(i).ToCachedEnumerable()); HashSet&lt;Tuple&lt;int,int&gt;&gt; visitedEdges = new HashSet&lt;Tuple&lt;int,int&gt;&gt;(); while (maxDepth &gt; 0) { int[] filteredNeighbors = allNeighbors[current] .Where(neighbor =&gt; !visitedEdges.Contains(Tuple.Create(current, neighbor))) .Take(1) .ToArray(); if (filteredNeighbors.Length == 0) break; visitedEdges.Add(Tuple.Create(current, filteredNeighbors[0]); current = filteredNeighbors[0]; path.Add(current); maxDepth--; } return path; } Here the cached IEnumerable is made good use of, because we may enumerate the cached IEnumerable in allNeighbors 0 to many times. Hence we avoid recalculating neighbors and avoid calculating it at all for vertices that aren't visited. There are some optimizations that can be made but this illustrates a use for a cached IEnumerable.
Yup I just used this the other day. It was awesome. Glad they finally implemented it
Thank you for explaining. I was thinking *is this some kind of joke*, but after reading your explanation it actually makes great sense.
That makes sense. I suspect the overhead of the cache may overwhelm the benefits, but at least it is testable.
Like others said it is too early. However, there's http://shop.oreilly.com/product/0636920038306.do in the works.
I think the biggest topic in MVVM is the VM... Just remember that the VM is made to support the view; it's going to feel messy. It can wrap domain objects -- those can be cleaner and more focused/cohesive. I generally keep those two in sync via the VM wrapping and use the code-behind like a controller to take the domain objects and send them off to perform any final business logic that couldn't be achieved in real-time from the VM. But it really depends on the complexity of your app. There are lots of things that can be accomplished in the view/view-model via command pattern, but imo try not to put too much there as it is not its responsibility.
So messy stuff goes in the VM? For example, when I put a method in my Model to load a list of another class, should that go there, or should I be putting that in my VM? 
Not intentionally mess... depends what your definition of messy is. This question, however, is debatable. It depends. For instance, you could have your list load via its binding (e.g. some value updates, triggering the CategoryID binding to update the observable list -- thus updating it automatically and eliminating the need for the method) I'm sure it would be easier to help with more specific questions.
Are you afraid that someone will gain physical access to your machine and snoop the memory?
It would be more accurate to say a static class is essentially a module, as static classes we're a .NET 1.0 feature. (And I still think they were a bad idea. Semantically they aren't classes at all and syntactically it is needlessly verbose to keep putting `static` in front of every field, function, property, etc.)
The only correct answer I've read is: it depends. I've seen just as many compelling arguments supporting database-as-a-queue as I've seen criticizing it. My personal opinion is that there is almost always a better way to do things than using a database. I'm pretty sure that my company has screened developers by choosing only the candidates with no knowledge of a messaging service because we've got database queues everywhere as well. So at my company, the path of least resistance will always be to go to the database for queuing. Managers like the simplicity of going to a database that has rock-solid uptime versus installing erlang, then rabbitmq, then setting up an apache storm cluster, then finding devs capable of supporting it. 
Yes. Would that protect from a heap dump?
I'll have to give it a shot
Being a huge proponent of FXCop and the FDG, I tend to default to static methods until there is an actual use case for allocating memory.
Well if you're interested in learning more about C#, check out ericlippert.com. He used to be a principal developer on the C# compiler team and a member of the language design committee. His blog is called Fabulous Adventures In Coding and he has been posting on it for more than a decade. I have been reading it the last few weeks and have learned loads about the language.
Show us the app.config/web.config file. Remove sensitive info if you need, but we need to see the entire xml element to make sure it isn't malformed. 
You can abstract out some of the 'messy' stuff into an intermediate layer. I found that works pretty well in that it keeps your view model pretty lean and more view centric, while doing most of the heavy lifting on behalf of the vm. With this approach, all that logic is nice and encapsulated, and easily testable. See more [here](http://sdasrath.com/blog/2015-06-12-mtvvm-model-transform-view-viewmodel/) 
Maybe it's naive, but couldn't you just write a random string of equal length to the variable? Presumably the string object points to the same memory location and writing to that location should eradicate all traces of it. You could even write several different strings if you're concerned about any memory effects. I'm more about embedded systems, so my C# is pretty weak. I know that if I were doing it in assembly, I would do what I described. 
strings in c# are immutable, so there's no way to write to that portion of memory.
When you "change" a string in C#, what really happens is a whole new string gets made and the reference is updated to the new version. The old version sits around waiting for garbage collection. You so much as append a single character to it, and you get a whole new string of all of the characters in a new memory space. 
You're pretty fucked then. If they can read process memory, then they can hook shit, they can read the stack, and all shit like that. Basically they can watch for the control's focus, read the Message's coming in the queue, https://msdn.microsoft.com/en-us/library/windows/desktop/ms644943(v=vs.85).aspx and store it themselves without your program knowing it's even happened... No matter *what you do after* in your code, it makes no difference, the passwords got. On the other hand, if it's all about processing things internally, with no user input, sure - SecureString's good. If you need secure passwords when they're being typed in - might I suggest YubiKey? https://www.yubico.com/faq/yubikey/ (Full disclosure, I wrote the Yubico-OTP validation software for VB.) It's a one time password generator, so even if they got the password, it's useless. 
Ok but that changes nothing, i still can't get the rectangles height bound to my data. Does anyone have any hints?
If they have access to process memory, then it's game over anyway. http://www.reddit.com/r/csharp/comments/3aqe3o/how_best_to_safely_clear_a_string_variable/csfn3nz
Not always! C# keeps a list of strings, and it yours happens to exist already, it uses its reference instead. It's called "Interning". --------- TheSpocker... If you want to edit the same string a lot, tens of thousands of times, it's good practice to create a StringBuilder, and set its length to something larger than the longest string you'll use. You can add characters, remove them... copy them, peek characters, all without the string moving once in memory. -------------------- More than you wanted to know about strings in .Net: http://csharpindepth.com/Articles/General/Strings.aspx https://msdn.microsoft.com/en-us/library/ms228362.aspx
The list is fine! It's not used from multiple threads. Look at the code :)
If you actually need the password for something MS didn't support, SecureString is not useful.
With unsafe code, sure. StringBuilder used to use a mutable string internally in that manner.
Strings are not interned by default.
Also: * [C# 6.0 Cookbook](http://shop.oreilly.com/product/0636920037347.do) ("Release Date: April 2015" -- yeah, not really...) * [C# 6.0 Pocket Reference](http://shop.oreilly.com/product/0636920040675.do) * [C# 6.0 in a Nutshell, 6th Edition](http://shop.oreilly.com/product/0636920040323.do)
Are you aware of the fact that you can modify your posting on Reddit after they have been posted? He changed the code since I posted my comment. Before it was a list, not a concurrent bag.
Are you aware of the fact that you can modify your posting on Reddit after they have been posted? He changed the code since I posted my comment. Before an call to Add was done to List from within the parallel.
Just as I was googling combinations of relevant terminology, I came across this; https://www.simple-talk.com/dotnet/asp.net/revisiting-partial-view-rendering-in-asp.net-mvc/ This however, feels like the anonymization bit I was talking about.. but perhaps there's no other way around it?..
You lost me at the anecdote and again at the drop down list. Is the API key the same for all users (i.e. only necessary server side?), if so, you can just create a proxy action method to call out to the API and return the response.
The problem with that pattern just as is, is that it sure.. hides my api key but it wont stop external users calling my mvc app as an api and utilizing my backend api by proxy. I want to ensure that only those actually on the site are the ones using it for its intended purposes. That said... maybe I can get away with it... it would take someone already authorized into the MVC app-sphere to abuse it, but atleast it's less likely to be abused. In this Proxy Action Method, what kind of signature should that action return to make a json response? simply return Json( ... )? 
While probably true, they havent even posted the price yet.
I would not go that far. c# is a nice language, with fastly expanding tools. But don'tforget that java can run on a toaster, so for this reason i think java will rule the hardware related markets ( phone centers, intelligent devices, hell even cars ) for long. I love c#, but i think java will be around in the fure.
Is the class containing your string implementing INotifyPropertyChanged? Whenever I see "xaml" and "event" in the same post, it's always the same issue which is that the poster isn't using ICommand and MVVM properly. One of the nice things about MVVM and INPC is that it forces you into best practices; if you want you field to update on the screen, you have to set it via the public setter, otherwise the property changed event doesn't get called.
Here it is. https://gist.github.com/RudiHansen/ff09d51133ae1d9f03cf https://gist.github.com/RudiHansen/fa4d8013fcfd77f4c65e https://gist.github.com/RudiHansen/4f0779d76a1fd8251392
Indeed, if you want to learn something online, looking at videos about unknown stuff [to you], at least try to have an interested or interesting sound/voice Microsoft virtual academy is kinda funny 
http://blog.pluralsight.com/learning-path-c-end-to-end Since you have experience in RoR it will be easy to pick up ASP.NET MVC. Browse around Pluralsight for tutorials such as http://www.pluralsight.com/courses/aspdotnet-bestpractices-models
Take a look over at /r/dailyprogrammer, there are some great challenges over there.
The Transform layer is the intermediate layer I take it?
Maybe it's just too early in the morning, but other than sharing confg files and syncing value objects, what's the practical business cases of this?
Hmm ok i did not understand any thing of that. Seems i have some more reading and research to do. I will try to read up on icommand and view models see it that helps. But thanks very much for you answer non the less.
Hm. Terms and conditions say “There is no need to maintain any user account by the user. The user can just make payment and download the content,” but I can’t seem to access anything after applying the coupon and hitting “Enroll” without logging in or creating an account.
The point is that you've now established a contract between all objects the inherit from this interface, in that if something inherits from the IRender interface, you know that it has a draw method. So what's the advantage of this? Here's a contrived example. +/u/CompileBot C# using System; public interface ISample { void Print(); } public class FirstSample : ISample { public void Print() { Console.WriteLine("Printing the first sample"); } } public class SecondSample :ISample { public void Print() { Console.WriteLine("Printing the second sample"); } } public class Program { public static void Main() { ISample first = new FirstSample(); ISample second = new SecondSample(); DoThing(first); DoThing(second); } public static void DoThing(ISample sample) { sample.Print(); } } So what this does is allow you to create functions that accept an interface instead of a concrete implementation of the class. In this case, which is simplistic, it lets me write a method that accepts a ISample, and runs it's Print() method, which is a member of the ISample interface. Now it doesn't matter what the actual implementation of the Print() method is in the subclass, but the method that calls it on an ISample doesn't care. It knows it can do it because of the contract you've made with the interface.
Output: Printing the first sample Printing the second sample [^source](http://ideone.com/KVERA1) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20http%3A//www.reddit.com/r/csharp/comments/3alyl0/question_about_oop_and_interacting_objects/csg6uti%20Include%20your%20reason%20for%20reporting%20here.) 
You shouldn't be databinding to variables in your code-behind, you should be databinding to your window's viewmodel. That said, your code doesn't work because your View doesn't have a DataContext. Since you're working with a code-behind, the easiest way is to change your `MainWindow()` method to: public MainWindow() { InitializeComponent(); this.DataContext = this; } The MVVM way would be to create a ViewModel class for your Window and to either bind the viewmodel as its datacontext via the codebehind (see above), or via the XAML. &lt;Window x:Class="test.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Title="TestWindow" Height="350" Width="525" xmlns:vm="clr-namespace:test.viewmodels"&gt; &lt;Window.DataContext&gt; &lt;vm:testvm&gt;&lt;/vm:testvm&gt; &lt;/Window.DataContext&gt; Where `test` is the name of the project and `viewmodels` is a directory containing all the viewmodels.
More than likely you'll need to write this yourself. You're basically asking for nearest neighbors of a 3d matrix give a point. It's likely easiest to make this work with non-jagged arrays, though slower. Perhaps in the Unity forums , or other gaming forums ( specifically those messing with Voxel engines ) you may find some code to work off of. It doesn't seem too tough to write, but just having read over a lot of wrapper code like this, I know the devil and performance is in the 1% detail you don't think about. My gut it to just iterate down X/Y/Z and -x,-y,-z 1/2 distance and throw everything into a new array. But i'm sure there's way to do it far more efficently. MATLAB may also be something to look into. Like Patch/Slice/ISOSurface. Not that you'll be given sourec, but reverse engineering their docs may help you better to understand the problem. 
I'd consider create a new object that wraps your 3d array and then have the indexer to that object always account for an origin offset and size. Your initial object would have the x,y and z offsets set to 0, but you could always create a new object that pointed to the same data, which just had new offsets (and bounds checking based on those offsets.) This would work well if you were okay with keeping the same references, but not quite as effective if you need a deep copy, but you could always also have a .Clone() method for that case. Essentially, create a viewer on the data structure, not a new data structure.
Thanks for the share!
. My gut it to just iterate down X/Y/Z and -x,-y,-z 1/2 distance and throw everything into a new array, This is what I was thinking also, but it may be a bit hungry for cpu cycles, I'm going to give it a shot!
For our big desktop app, we use [Prism with MVVM](https://msdn.microsoft.com/en-us/library/gg406140.aspx). EF is our persistence layer. We don't auto-generate, we use mapping classes to control exactly how we bind to the much older SQL schema. This is a bi-temporal database, so the schema is pretty complicated. If I had a standard SQL schema for a plain old DB, I'd probably use auto generated mapping classes. Everything is accessed via UnitOfWork pattern. the base UOW has notification and authorization services in it. The notification service is used for concurrency mangement, so that distinct UOW's can be notified of updated entities they share. Or in some cases, DB notifications due to triggers or other users. Our Domain Layer is just he POCO's. They are tailored for how the view wants to see and use the data. We have more domain models than we do tables, if that helps you understand. Also there's a lot of string formating in the domain layer for some getters. Our ViewModels are nothing like our Domain models. The view models contains all sorts of necessary helper properties to render the view effiencetly. We'll have properties on the view model like "bool HasValidBillingRule" and that will check against the domain model. Also the ViewModel handles the UnitOfWork, where as the Domain Model is blind to UOW. Also the ViewModel has all the ICommand style delegates to handle menu options and what not. I'm not really sure what the point of the domain layer is if all the action takes place in the viewmodel. IMO, having your domain model as nice simple POCO classes makes your DAL layer so much easier. Also, we may in the future go to a service based middle tier, away from direct SQL connections, and having ready to go simple Domain Layer makes that pretty easy. The View Model really is a model for the view. Not a model for your business data. In the way our Domain Model is setup, the domain objects are pretty dumb. They can't and don't do complicated things like query the DB and determine if a UserName is valid, or if another one exists. That's the UOW's job. And it's the ViewModel's job to ask the UOW to do that. Domain model is just a simplified view of the business schema. We may bave two or three view models that each take the same domain model in a construtor. Hope that helps. 
if you actually have a 3d array of 1x1 blocks and you want to get a continuous subset of these blocks, then iterating over them with a loop for each axis with the correct range is the most efficient way. if you had for example a collection of arbitrary sized and positioned cubes in 3d space and you were looking to find those within a certain 3d area then this would be a more interesting question. if you just wanted to do this in a single linq statement for fun i would suggest var squares = Enumerable.Range(x1 - 2, 4) .SelectMany(x =&gt; Enumerable.Range(y1 - 2, 4), (x, y) =&gt; new { x = x, y = y }) .SelectMany(x =&gt; Enumerable.Range(z1 - 2, 4), (xy, z) =&gt; new { x = xy.x, y = xy.y, z = z }) .Select(xyz =&gt; threeD[xyz.x, xyz.y, xyz.z]).ToArray();
I'm guessing the common mistake you are referring to is forgeting the ) at the end of that if statement? Otherwise, what am i missing? if (MethodThatReturnsBool()) { }
This is nice, but code 39 is one of the worst formats to use. it doesn't support parity and is very susceptible to corruption. We use interleaved 2of5. Honestly, drawing it is nice, but a font is easier to implement, if you have control over the machines running the application. We load the font, set the font face for the label, encode the string for the i2of5 font and you're done. Doing such a thing on a web server isn't always possible, so I can see such a thing having use there.
It looks like: V &lt;=&gt; VM &lt;=&gt; T &lt;=&gt; M
There's the problem. In there under the connection strings, you have '&lt;add name="DatabaseContext"...' And your error message says it can't find a connection string named "MyEntities" so change "DatabaseContext" to "MyEntities" and it should work. 
You want the moon on a stick as well? The preferred additional skills makes me laugh. 
check out dashboard, the courses are there
Well, 1000,1000,1000 is a billion elements, so.... I'd be pretty strict about making sure it's as small as possible. enums default to int, which is 4 bytes, so it may be worth forcing it to be a byte type.
Maybe some assembly language and firmware programming to really be competitive.
We can see why this might come off as being demanding, but the truth is that we use a wide variety of technologies. We understand that this is not everyone's niche, or even what most are capable of, but it is rewarding for those who can and want this type of job. For those interested, it's a challenging and rewarding place to work. 
Blackwasp.co.uk is a good site as well
Thank You. I will add interlaced 2of5 to My Project .
This is what I used for a recent project. It is pseudocode for what is conceptually happening. **FIRST PASS** View event (e.g. deleteButtonClicked(int id)) | v Controller handler (e.g. onDeleteButtonClicked(int id)) | v Application model function (e.g. deleteElement(int id)) | +--&gt;Repository function (e.g. deleteElement(int id)) |&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;See: repository pattern in other posts |&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;Note the application model is not pure like the domain model, |&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;and thus can access services like this repository |&amp;nbsp;&amp;nbsp;&amp;nbsp;| |&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;Here you send some async SQL delete query to the DB |&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;The result of the query will come later v Presentation model function (e.g. setDeletionPending(true)) | v Presentation model event (e.g. deletionPending) | v View handler (e.g. onDeletionPending()) |&amp;nbsp;&amp;nbsp;&amp;nbsp;Here the view will do something like disable the ListView widget or w/e |&amp;nbsp;&amp;nbsp;&amp;nbsp;until the deletion is confirmed v Return to the event loop and wait for more events **SECOND PASS** ... a little while later ... Async SQL query result is ready | v Repository handler |&amp;nbsp;&amp;nbsp;&amp;nbsp;The repository finds out that the row was successfully removed from DB |&amp;nbsp;&amp;nbsp;&amp;nbsp;So it deletes the corresponding element from memory |&amp;nbsp;&amp;nbsp;&amp;nbsp;Note the domain model holds a reference to the element |&amp;nbsp;&amp;nbsp;&amp;nbsp;So it is not actually deleted just yet v Repository event (e.g. deleteSuccess(int id)) |&amp;nbsp;&amp;nbsp;&amp;nbsp;Then it notifies listeners v Application model handler (e.g. onDeleteSuccess(int id)) | +--&gt;Domain model function (e.g. deleteElement(int id)) |&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;Now at last the pure domain model is affected, and can run its logic |&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;The last reference to the element is broken, so it is deleted v Presentation model function (e.g. deleteElement(int id)) |&amp;nbsp;&amp;nbsp;&amp;nbsp;Note no domain model stuff is actually duplicated here |&amp;nbsp;&amp;nbsp;&amp;nbsp;Everything exists only once, and if it is needed elsewhere you pass a reference v Presentation model event (e.g. elementDeleted(int id)) | v View handler (e.g. onElementDeleted(int id)) |&amp;nbsp;&amp;nbsp;&amp;nbsp;Here the view will remove the item from the ListView widget v Return to the event loop and wait for more events 
Spot on.
When your MVC app loads initialize a token for the request could be a GUID whatever, you'll need a token manager to keep track of it server side as well to validate it. Add a cookie or add it as a JS variable on the page. When you request your API send the token not the API key. You can come up with interesting means of managing the life cycle of the token, auto expire/refresh or some other method. Seems like that might allow you to request your API without exposing the API key. But it really sounds like you should look into OAuth bearer tokens.
Payment?
&gt; There is actually a subtle but important difference: exception filters don’t unwind the stack. That was pretty much the biggest advantage I thought.
Misleading title.. Heheh
lol yeah I wish I could change that...
- In ClipboardTimer_Click in [MainForm.cs](https://github.com/Revan114/Clipboard-Assistant/blob/master/Clipboard-Assistant/Mainform.cs), you have a lot of statements that are almost the same. I'd refactor that out to a method, so that if you need to make a change, you don't need to change it in 5 separate spots (which is error-prone) - In many spots in [TaskHandle.cs](https://github.com/Revan114/EasyTaskHandlerClass/blob/master/EasyTaskHandle.cs), you make a check if some string contains the literal *.exe* and then do something. If you want to later change this check to include other possible endings or uppercase, etc., it is again a place you'd need to change multiple times. It may be worth refactoring that check out to a method like `string Sanitize(string path)` which is called every time... then you remove all of these `if/else` statements which are nearly identical, and reduce the total #loc by more than 50%. Example: public static Boolean Responding(string taskName) { var sanitized = Sanitize(taskName); foreach (var process in Process.GetProcessesByName(sanitized)) { return process.Responding; } return false; //Returns false by default } - Not a big deal, but there are cases where you're not using the [MS coding conventions](https://msdn.microsoft.com/en-us/library/ff926074.aspx) (for example, MS recommends lower camel case for parameter names, etc). - It looks like your `EasyTaskHandle` class has no internal state and can be a static class. I am not sure where you expect the name of the process in from in your client code, but if it comes from the [Process](https://msdn.microsoft.com/en-us/library/system.diagnostics.process\(v=vs.110\).aspx) class (for example, as the result of the call [Process.GetProcesses()](https://msdn.microsoft.com/en-us/library/1f3ys1f9\(v=vs.110\).aspx), you might consider adding [extension methods](https://msdn.microsoft.com/en-us//library/bb383977.aspx) to the class, like so: public static Boolean Responding(this Process process) { return Responding(process.ProcessName); } this would allow client code like this: var process = Process.GetProcesses(/* Parameters ...*/).First(); if(process.Responding) { //... } //.... **EDIT**: Actually, strike that about the extension methods in this case. I just noticed that you're directly calling methods from the `Process` class, so it wouldn't really make sense to use your helper class at all in that specific case (doesn't make sense to send in a process, strip out the process name, then find the process by name then call a method on it). I'm leaving the bullet point in anyway as a general point which doesn't necessarily help in your specific library.
Nice click bait title 
[XKCD](https://xkcd.com/138/)
[Image](http://imgs.xkcd.com/comics/pointers.png) **Title:** Pointers **Title-text:** Every computer, at the unreachable memory address 0x-1, stores a secret. I found it, and it is that all humans ar-- SEGMENTATION FAULT. [Comic Explanation](http://www.explainxkcd.com/wiki/index.php?title=138#Explanation) **Stats:** This comic has been referenced 68 times, representing 0.0981% of referenced xkcds. --- ^[xkcd.com](http://www.xkcd.com) ^| ^[xkcd sub](http://www.reddit.com/r/xkcd/) ^| ^[Problems/Bugs?](http://www.reddit.com/r/xkcd_transcriber/) ^| ^[Statistics](http://xkcdref.info/statistics/) ^| ^[Stop Replying](http://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=ignore%20me&amp;message=ignore%20me) ^| ^[Delete](http://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=delete&amp;message=delete%20t1_csgvxk9)
In [TaskHandle.cs](https://github.com/Revan114/EasyTaskHandlerClass/blob/master/EasyTaskHandle.cs), instead of writing: if (Process.GetProcessesByName(TaskName).Length &gt; 0) { return true; } else { return false; } you could just write: return Process.GetProcessesByName(TaskName).Length &gt; 0;
 fixed(char* ptr = password) for(int i = 0; i &lt; password.Length; i++) *ptr++ = 0;
I also kinda liked the idea of using side effects to your advantage. Altough that's very easy to misuse. Especially since he returns false which means the exception code won't run, so the program might continue with some sort of invalid data.
Good to see some recent tutorials on OpenTK, i've started using it for my game, a world random generator previusly developed in ASCII on Console Application and now I'm trying to "port" it on OpenTK. So keep it up because I've found very little documentations on OpenTK online and so far I've only used OpenGL tutorials.
Please do not use sleep. Instead use something like the [Monitor](https://msdn.microsoft.com/en-us/library/System.Threading.Monitor_methods.aspx) class. If you [Wait](https://msdn.microsoft.com/en-us/library/ateab679.aspx) on an object you won't use any CPU time until you tell it to continue by [Pulsing](https://msdn.microsoft.com/en-us/library/system.threading.monitor.pulse.aspx) it. using System.Threading; class Example { static object ExitLock = new object(); static void Main(string[] args) { lock(ExitLock) { // Do whatever setup code you need here // once we are done wait Monitor.Wait(ExitLock); } } static void ExitProgram() { lock(ExitLock) { Monitor.Pulse(ExitLock); } } } This will let your OS properly wake up the thread only when you are ready to exit/continue instead of pushing a syscall every 18 milliseconds. In addition you won't end up with an average 9 millisecond latency for exit.
Running multiple threads concurrently. See: http://www.reddit.com/r/csharp/comments/3aqc1a/concurrency_issue/
That answer was clearly a "not enough". No thanks.
Are you sure you aren't making an assumption based on limited information? Either way, thank you for taking the time to engage. 
In our code, we tend to signal a latch (E.g. CountDownEvent/ManualResetEvent) for similar functionality. Note there is some difference: for example, if you call Monitor.Pulse(ExitLock) (e.g. in a shutdown method) before you wait upon ExitLock, then the pulse essentially does nothing and Monitor.Wait(ExitLock) will still block. With a latch (the *Event classes which inherit from EventWaitHandle), your Wait will essentially return immediately, with a tad more overhead.
what did you decide to do?
And for clarity, "string password = ...;" comes before this. C# is not Java, just because Java has one behavior doesn't mean C# follows the same behavior!
Stack overflow is a forum, not a blog / newsletter… I'll check out the rest though!
I decide to use If Else statements to make a command prompt application that recognises if you are an adult or a kid. Its small steps but im picking it up more!
That's what we are here to find out. ;-) 
&gt;We can see why this might come off as being demanding, but the truth is that we use a wide variety of technologies. To be honest, it seems like you are trying to hire one person to do the job of what 2 people should be doing.
* In EasyTaskHandler, it doesn't look like you're doing any exception handling. For example, what if you try to kill a process but you don't have permission? * In your Running() function, you don't need to do the .Contains() call. You can just do the .Replace(".exe", ""), regardless. If ".exe" suffix is present, it'll be removed, if it's not present, nothing will change. * Combining this with NovelSpinGames's suggestion, you can collapse that whole function into a one-liner: `return Process.GetProcessesByName(TaskName.Replace(".exe", "")).Length &gt; 0;` or, slightly clearer, to me at least: return Process.GetProcessesByName(TaskName.Replace(".exe", "")).Any();
Are you talking about `fb://` links? http://stackoverflow.com/a/25467446/996081
Why don't you just run esntutl directly instead of spawning nested cmd instances?
You should meet with this guy, he asked the same thing: https://www.reddit.com/r/dotnet/comments/3aymrh/sites_like_nshipster_and_objcio_for_net_c/
Absolutely! Im away from my computer but i will share it tonight. WARNING: it is very basic
what he's trying to say is that you do not need to run cmd.exe to call esentutl You can have Process.Start() call esentutl directly, set the working directory, pass arguments for it, etc. The only thing I see you cant replicate is the /k flag for cmd, if you actually need to launch a cmd window and keep the command prompt open after it finishes, you cant do that without cmd.exe
Try subscribing to a tag you're interested in. http://blog.stackoverflow.com/2010/12/subscribe-to-tags-via-emai/ http://stackoverflow.com/tags
Here's an alternative approach: using System; using System.Threading; using System.Threading.Tasks; internal class Program { private static readonly CancellationTokenSource cts = new CancellationTokenSource(); private static void Main(string[] args) { Console.CancelKeyPress += ExitProgram; try { while (true) { Task.Delay(TimeSpan.FromMinutes(1), cts.Token).GetAwaiter().GetResult(); Console.WriteLine("Has it been a minute already!"); } } catch (OperationCanceledException) { Console.WriteLine("Exiting program"); } } private static void ExitProgram(object sender, ConsoleCancelEventArgs e) { cts.Cancel(); e.Cancel = true; } } 
[Link](http://www.martinfowler.com/articles/refactoring-pipelines.html) for those like me that clicked the title three times before I relalized it was a text post. Edit: forgot to answer OP. Yes, I love using pipelines when I can, but it's rarely in Business Apps. I seem to use them a lot more in home brew apps, or game apps, or robotics. I have to say, Unity ( the game engine, not IoC container), turned me on to the power of pipelines with Yield. 
With with PhonicUK and TwoManyPuppies. Run **Esentutl** directly with Process.Start. If you want to capture the output, use Process.StandardOutput to grab it. There's really no reason to run a cmd shell to then run the program, if your not going to be using any of the command shell functionality. You're just asking for something later on to break because of some environment change. 
&gt; Do people with maxed out skill sets really browse reddit programming forums? Let alone apply to mysterious job postings on here? I have that set, and work in NYC, and in Finance. It's not that unheard of. The C/C++ generally comes when you need to wrap some obsolete DLL ( I'm looking at you INTEX) to make it work with you nice modern system. Also, I've poached from Reddit before, it worked out nicely. It's nice because the signal to noise ratio on this sub isn't too bad yet. Kinda like early days of Stack Overflow.
 &gt;b) If you ever *do* find the need for it again, you'll probably write it much more efficiently the second time around, due to having grown in your knowledge and skills. Nail on the head right there
Would this work for an inactivity timeout thread? In my application, I'm mulling over spinning up a permanent second thread that polls for the inactivity time every minute or so, if there is 30 minutes of inactivity I close the application.
I think this is the point of making your aggregate root a value object and serializing that entire object graph rather than saving the data in a cleartext kind of way. Then you serialize and deserialize that without much fuss because... value type. That may be a bit off topic, but I know there are many that feel true DDD does not save object data to the database, only the object itself. If you chose to go that route, this MSDN article covers that exact issue with deserialization: https://msdn.microsoft.com/en-us/library/ms973893.aspx
Thanks for the link! :) Will check it out.
I'll flesh out the configuration a bit more.. It's an Office 365 Sharepoint App that connects to Azure API Management which in turn goes to an internal WCF Service. The Sharepoint App is a MVC hosted on AzureSites that leverages Sharepoint Authentication.. We're trying all these new fancy shmancy tech to make this new MVC App not just as a proof of concept that we can keep private stuff in the private and still use the availability of azure and all these new stuff and all the funsies we can do with that... just that I don't know all the funsies I can do with it so it's a learning process... One of those things is how I can use the sharepoint authentication that the client has already done in the request to a HttpPost Action on an MVC App.
Thanks, I'll have a look =)
We already do that in another project, I was just hoping MVC/Sharepoint would have some built-in features to not have to redo that token-based auth again. I fleshed out the setup a bit more below on another comment... you don't happen to know how I can send through javascript (when making said ajax call) the auth-token sharepoint has given to the client and how I can verify that in the HttpPost Action before calling further down the line?
They do ;-)
example ?
Ok now i have looked a little into the topic, and i found this simple example of mvvm, but i still cant figure out where i should put my code to so it still updates the view. https://github.com/MarkWithall/worlds-simplest-csharp-wpf-mvvm-example Now lets say that in this code, i would like the History field to be updated not one time but two. So i change the AddToHistory method in Precenter.cs to this. private void AddToHistory(string item) { if (!_history.Contains(item)) { _history.Add(item); System.Threading.Thread.Sleep(1000); _history.Add(item); } } Now it does update the history with two lines, but the update does not show up before the actual method is done. And i would like it to update the view for each line added, how can i do that?
&gt; Non-static members are referenced through virtual calls. Virtual calls are very slightly slower than static calls, but the difference is so small that it is negligible most of the time. The difference is rather large, but it's also only true for methods that are virtual (or implicitly virtual: abstract or an implementation of an interface method). The compiler can even then optimize away some cases such as when the method or class is sealed. It's true that the compiler always generates a callvirt IL opcode even for non-virtual calls, but they are devirtualized by the JIT compiler.
I'm aware. I just wanted to say it again, because you can't say it often enough. There are still way too many dumb developers storing passwords.
Great to hear!
No resources, but some advice: learn to use LINQ instead of writing loops. Rx is the greatest thing since sliced bread.
Thanks!
Ok, but how does that work when GenerateSalt() generates a random number?
So far this is just what I was looking for :)
Head First C#. It will repeat some basics you know, but you can easily skip through them. But I wouldn't suggest you this, as there are some fine differences.
yes, that's right.
One thing you'll also want to do is, since you are dealing with unicode, normalize the unicode. Unicode is annoying in that two pieces of text might look the same but have different code point representation. This will cause the GetBytes function to return two different byte sequences and thus two equivalent passwords' hashes won't match
When John is subscribing, he will chose his password ("hunter2") and hit submit. After that, you generate a random salt ("abcde") and store the result of hash("hunter2abcde") in the database AND the salt "abcde". So you have something like this : &gt; username | hash | salt &gt; John | 3F[...]23DE | abcde When John try to log in, he uses his password "hunter2". The software will query the database to get the salt and hashed password corresponding to user John. Probably something like this in SQL : &gt; SELECT hash, salt FROM user WHERE username="John" If the query return nothing, the username is wrong. If the query get something, you now have the salt used when he subscribed. You use the same hash and compare : hash(submitted_password + sql_salt) == sql_hash. If true, John is logged in.
Thats awesome, that worked perfectly, and makes sense once I walk through it myself. Since I am calling for CMD to run in the working folder of my choosing, the argument I am running is the ESENT command. I am still new to this, and thinking of using a write line to "write out" what I want. Thanks a ton. Another question, after I run the argument &gt; processStartInfo.Arguments = "/k esentutl /r rvn /l logs /s system"; I need to run another ESENT command "/p data", once the above command runs. Could i ask of you for some direction on how to execute this?
&gt; There are still way too many dumb developers storing passwords. It's not just the developers. It's the PMs saying "We don't have time to do that, we have passwords required to access our database, that's enough to keep things secure!"
learnxinyminutes.com Read the C# session to get the basics of what the language can do. Then learn as you go, checking the reference whenever you need to. That was enough for me to pick up C#, no books needed. 
Isn't this solved using Encoding.UTF8.GetBytes?
It takes nearly **no** time to implement it properly over the stupid approach. Maybe like 30 minutes. That is time every developer can take.
Ok, so how do I normalize it then?
https://msdn.microsoft.com/en-us/library/ebza6ck1(v=vs.110).aspx
Hey, thanks for the gold! Since you've got the /k switch in cmd.exe, that first window is going to stay open for regular input, but your program no longer has control over it after doing Process.Start. I don't know how you would do the next command in the same window, you'd get a new one for the next esentutl command. Do you really need it to stay open? To run a second one after the first one, you can re-use the existing processStartInfo object, by just changing the processStartInfo.Arguments to "/k esentutl /p data" and then doing Process.Start(processStartInfo) again. There is an issue with starting a process this way, in that your program is able to continue immediately after you start the command window. This means that your next esentutl operation is able to be run before the first one is finished, and maybe that's bad. So you need to find a way to determine that the first one finished, like by watching for the .exe to not appear in the process list. How you would do that is first make your program wait until it can see esentutl in the process list in order to know it started, and then enter a loop that waits until you can't see it anymore. Then you know it's safe to switch the .Arguments as above and start the next one. So, right after your first Process.Start, put this: Process[] p; while(true) { // Note that the .exe extension is not to be included. p = Process.GetProcessesByName("esentutl"); if (p.GetLength(0) != 0) { // Found at least 1 instance of esentutl running, // so get out of here and move on to watching for there to be none. break; } Thread.Sleep(50); } while(true) { p = Process.GetProcessesByName("esentutl"); if (p.GetLength(0) == 0) { // Didn't find esentutl, so get out of here and move on to the next Process.Start. break; } Thread.Sleep(50); } The above first waits to make sure it can see esentutl running, and then waits until it can't see it running anymore. This is regardless of whether the command window is still open by the way. Then you can switch arguments and run the process again. But using the /k switch on cmd, those command windows will still be sitting there afterward. The way I showed above is probably not the best way, I'm still kind of a newbie, but it will work. A better way might be to make a separate method that does the above, but returns a bool that says if it's running or not. It would be cleaner, at least.
I am of the opinion you should be an expert at what you want to do, and have a good idea of how to communicate with the roles around you. If you do not have an interest in devops then knowing the basics of cloud architecture is probably more than enough to excel, you can learn the specifics of whatever cloud you need as you have a project on it. You never know you may be using Amazon instead of Azure for your first project and while the fundamentals would transfer the specifics wouldn't.
Knowing how to configure Azure, the networking side, perhaps AD integration, VPN to corporate network, and other skills, really pushes you into a Full Stack developer motif. Whether or not you want to learn and be agile in those other disciplines, really comes down to where and how you want to work. If you plan to be or remain in a corporate setting, where everyone has their major disciplines, then it's less likely you need to worry about the other parts of running cloud based services. If your looking to walk into a start up, or help out a smaller company ( which doesn't have a more than 5 people in their 'IT' department) than you may want to experiment with setting up your own domain and integrating it into Azure. The deploying applicatyions, with federated sign on to your local AD, as well as external signon to the app to say a SQL back authentication mechanism. And really understand all the layers. Again, if you don't enjoy the systems engineering aspect, then you may want to just focus on being the best developer you can be, and leave full stack for the jack of all trades that like to push the envelope in terms of what they know, and what they can do. 
It depends on what kind of projects and tasks you're working on. If you're doing anything web related, I'd say work on your Azure skills. Microsoft seems to be betting a lot at Azure, and it is the fastest growing division of Microsoft. In my experience with Azure it actually simplified my job and removed a lot of system administration tasks. What used to be a lot of hassle and setting up IIS or databases is now replaced by a few clicks on the Azure portal and some API calls from your code. However, I might be wrong as I haven't done much advanced things with Azure. I'd also love to hear what are the more complex scenarios that every developer should know.
[R#](http://www.jetbrains.com/resharper/)
To make life even more difficult is that the password would then be in memory. I use this snippet to read passwords in securely using SecureString https://gist.github.com/huobazi/1039424
 public static bool Verify(guid ID, String password) Hopefully that is implemented without 4 database queries. Also, `Id` is not an acronym. Further this method is still potentially vulnerable to timing attacks. Here is a better class: public class PasswordRow { public Guid Id { get; set; } public int Iterations { get; set; } public byte[] Salt { get; set; } public byte[] Hash { get; set; } } public static class PasswordProvider { readonly static RNGCryptoServiceProvider Rng = new RNGCryptoServiceProvider(); const int Iterations = 106719; // figure out the maximum delay you can use through benchmarking. Make benchmarking this a part of your update process, or make it configurable. const int Saltsize = 16; // bytes const int Hashsize = 16; // bytes const int MinimumWaitTime = 1500; //minimum delay in milliseconds to wait for verification; should always be large enough that all iterations complete within this time to prevent timing attacks //TODO: implement these static void Store(PasswordRow passwordRow) { throw new NotImplementedException(); } //save to db static PasswordRow Load(Guid id) { throw new NotImplementedException(); } //load from db by id, return null if DNE static void Log(Exception ex) { throw new NotImplementedException(); } //log exceptions; must not throw /// &lt;summary&gt; /// Generates a new password entry and returns the identifier for that entry. Use for registering new users and updating the passwords for existing users. /// &lt;/summary&gt; /// &lt;param name="password"&gt;A UTF8 encoded string containing the password that will be stored. Must not be null.&lt;/param&gt; /// &lt;returns&gt;&lt;c&gt;Guid&lt;/c&gt; that references this password instance in the password database.&lt;/returns&gt; /// &lt;exception cref="ArgumentNullException"&gt;password&lt;/exception&gt; /// &lt;exception cref="DatabaseException"&gt;Storage failure&lt;/exception&gt; public static Guid Save([NotNull] string password) { if (password == null) { throw new ArgumentNullException("password"); } var salt = new byte[Saltsize]; Rng.GetBytes(salt); var hash = GetPasswordHash(password, salt, Iterations); var id = Guid.NewGuid(); Store(new PasswordRow { Hash = hash, Id = id, Iterations = Iterations, Salt = salt }); return id; } /// &lt;summary&gt; /// Verifies that the password correctly matches the row identified by the id. /// &lt;/summary&gt; /// &lt;param name="id"&gt;Id representing the storage location of the password.&lt;/param&gt; /// &lt;param name="password"&gt;A UTF8 string containing the password to verify.&lt;/param&gt; /// &lt;returns&gt;&lt;c&gt;true&lt;/c&gt; if password matches; &lt;c&gt;false&lt;/c&gt; otherwise&lt;/returns&gt; public static bool Verify(Guid id, string password) { var verify = Task.Run(() =&gt; { try { return InternalVerify(id, password); } catch (Exception e) { Log(e); return false; } }); var waiter = Task.Delay(MinimumWaitTime); Task.WaitAll(verify, waiter); return verify.Result; //alternative implementation: if pw fails to verify fast enough; it fails to verify //waiter.Wait(); //if (verify.IsCompleted) //{ // return verify.Result; //} //verify.ContinueWith(t =&gt; Log(new Exception("verification of password took too long"))); //return false; } static byte[] GetPasswordHash(string password, byte[] salt, int iterations) { //normalizing here to keep things DRY; method gets inlined anyway... password = password.Normalize(NormalizationForm.FormKC); var passBytes = Encoding.UTF8.GetBytes(password); var pbkdf2 = new Rfc2898DeriveBytes(passBytes, salt, iterations); return pbkdf2.GetBytes(Hashsize); } static bool InternalVerify(Guid id, string password) { //short circuiting is fine; no need to be concerned about timing attacks here if (password == null) { return false; } var row = Load(id); if (row == null) { return false; } var hash = GetPasswordHash(password, row.Salt, row.Iterations); return Equals(hash, row.Hash); } static bool Equals(byte[] a, byte[] b) { if (a.Length != b.Length) { return false; } for (var i = 0; i &lt; a.Length &amp;&amp; i &lt; b.Length; i++) { if (a[i] != b[i]) { return false; } } return true; } } edit: note, PasswordRow structure doesn't need to be saved in the same db as the rest of the credentials; consider an alternative storage location so to prevent someone who manages an sql attack against your system from getting both the users and passwords...
I was trying to keep it as simple as possible, though I agree with most of the changes you've made. http://dictionary.reference.com/browse/id &gt; ID &gt; [ahy-dee] &gt; noun &gt; 1. &gt; a means of identification, as a card or bracelet containing official or approved identification information. ID isn't an acronym, but both letters are capitalized anyway. Ain't language great? https://msdn.microsoft.com/en-US/library/ms182256%28v=vs.80%29.aspx &gt;'ID' is special-cased to cause a violation of this rule. 'Id' is not an acronym but is an abbreviation for 'identification'. Ah. Guess MS recommends "Id" anyway. edit: Seems this is a bit of a holy war. Use whatever's standard in your codebase, I suppose. --- Where exactly would the timing attack occur in the original method? The pbkdf2 iteration count isn't generally considered to be a secret. (I'm choosing to ignore the "account doesn't exist" case) nitpicks: * I would have used a struct instead of a class for `PasswordRow` * 1.5 seconds is a crazy long default
Allocating several hundred gigabytes of string data seems like a bad idea... Can you treat the file as `byte[]` data? 
If there was a wide sample of `Iteration` values across multiple users, a timing attack would expose those with lower `Iteration` counts. I don't think 1.5 seconds to verify a password is really that long. Most of my clients have it set to 5 seconds in a rather similar method (various auditors come buy and make up some recommended change and when this option comes up this is one they like to impose) ... Our minimum is 500ms with an exponential imposed for failed attempts capped at 15 seconds (default is `(int)Math.Min(500 * Math.Pow(2, attempt - 1), 15000)` but all of those constants are available for the client to configure).
Exactly my thoughts. Clr via c# for all that nitty gritty memory management you've been doing yourself. C# in depth for literally everything cool and awesome about c#
Eh, alright. In theory you'd want to occasionally update the iteration counts for existing users, even if you don't make them update their password (obviously, forcing password resets every so often is best security practice, but nobody likes it, so oftentimes it just doesn't happen): (pseudocode) if (passwordIsValid) { if (row.Iterations &lt; PasswordProvider.Iterations) { var newHash = GetPasswordHash(password, salt, PasswordProvider.Iterations) // store new hash + iteration count } return true; } else { return false; } You could only do that when the user is logging in (since you need the password!), so users that don't log in at least once per iteration bump could still end up with a weaker iteration count than others.
BlockingCollection+Parallel.Foreach is almost certainly the correct way to go parallelizing this. `StreamReader.ReadLineAsync` is intended to allow your thread to go do something else while waiting for the resource to provide the data that it will return (in this case that data is already available by way of the fact that it is a local file). Set maxEntries to be something like processorCount*2+2 to ensure there is always something to work on and not enough to run out of memory. 
I think that's a good thing. Most developers I've met aren't actually knowledgeable enough make informed decisions about patterns and practices. So they are much better off defaulting to what the SA says.
It'll take you a week to get used to C#, you just need to get familiar with the .NET class library. It's much harder to go from C# to C++
https://www.safaribooksonline.com/library/view/programming-entity-framework/9781449317867/ch04s04.html
Buy the complete version for yourself. Honestly quite cheap and has a bunch of cool auxiliary things like dotCover and dotTrace. 
No problem man, the help was great, This is my first project, so any feedback I am super appreciative of. I think I finally figured it out, the best way possible, I am building it to use with a program at work, that runs on a Raven Database, and we use the ESENT cmd to rebuild it without losing any data. I have it finished and it runs great, now I am going to start working on integrating it into a Windows Form program to make it prettier. 
Not to PM's, BA's, SA's and testers. They have to fit in a couple of meetings with the business, add a few lines to the project plan, before that they have to listen to a dev explain to them why this is needed, how it works. Then they need to explain to the business why they are doing this instead of working on making the front-end look nicer. So it gets dropped. Unless you are lucky and happen to work somewhere with a sensible attitude to security.
I believe `BlockingCollection` and `Parallel.ForEach` don't work ideally together because it does a whole bunch of extra locking and buffering that isn't necessary/advisable for this scenario. Using `BlockingCollection` and manually starting some worker threads may be preferable.
I assume that you didn't actually *try* the code. I use this method to process multi-gigabyte CSV files. From [MSDN](https://msdn.microsoft.com/en-us/library/dd383503\(v=vs.110\).aspx): "The ReadLines and ReadAllLines methods differ as follows: When you use ReadLines, you can start enumerating the collection of strings before the whole collection is returned; when you use ReadAllLines, you must wait for the whole array of strings be returned before you can access the array. Therefore, when you are working with very large files, ReadLines can be more efficient."
Just watched his async video on plural sight. Fantastic. 
I have to disagree. If you later find that you need it then it's easy to recreate. And chances are you need something close, but not identical, the the old one.
Do you need to maintain/write error info in the exact same order that the file had the data? Or does the file contain a key that you can use to correlate the data with any validation error it might have? 
My current rules: * hash you passwords * salt your hashes * different salt for each password * re-hash multiple times * store a reference to the crypto algo used (and number of hashes performed) for crypto agility
Why are EF models being exposed over web api?
There is an alternative [Wait](https://msdn.microsoft.com/en-us/library/syehfawa.aspx) method that takes in a timeout. You might be able to do something with that. Perhaps store the time before going into the wait, wait for 30 minutes. On wakeup check how much time has passed since the last command, if it is over 30 minutes kill the program. If it isn't go to sleep for the remaining time. Make sure to have some leeway, the windows timer has an 9ms expected variance in accuracy the last time I checked. 
Tat's interesting, I'm not the OP, but thanks for this info
You are right. The setup code should be inside of the lock. I've edited it to reflect that.
It returns [System.ManagementObjectCollection](https://msdn.microsoft.com/en-us/library/system.management.managementobjectcollection.aspx). foreach (var share in objectCollection) { MessageBox.Show(share["Name"].ToString() + ", " + share["Path"].ToString()); }
I don't think it's safer to hash multiple times. In fact, I think it's less safe. Edit: Wait, I might be wrong actually.
Don't explain it. Just do it. It takes nearly no time to implement.
I'm not sure why you'd do that when FCEUX has Lua support. It's a pretty simple little language.
The other suggested solutions assume the remote machine is Windows and allows you to access WMI on it. There is a [Native Win32 API call NetShareEnum](http://www.pinvoke.net/default.aspx/netapi32.netshareenum) that will let you enumerate the shares on any SMB server. [This stackoverflow question](http://stackoverflow.com/questions/2091126/enumerating-network-shares-with-c-sharp) was on the same subject, and appears to be the only way (other than implementing your own SMB client or parsing the net view command) Note that because this is a Win32 platform call, it won't on Windows RT, Windows Phone, in Windows Store apps, Linux, OSX, etc. 
Regarding IDataReader; take a look at the DataRowExtensions provided by .NET since 3.5. This extensions class takes care of the (un)boxing of (nullable) fields for you. https://msdn.microsoft.com/en-us/library/bb360891%28v=vs.100%29.aspx
Indeed!
My reading may suck this morning, but that looks like it only works for the DataRow type, which an IDataReader does not have.
Thanks for your reply. I ran Process Explorer and the FCEUX emulator didn't have any child processes. However, when I clicked to the 'Threads' tab in properties, [this is what I see](http://i.imgur.com/1WRoUqd.png). The 'Cycles Delta' value for the DINPUT.dll entry will go up or down with keyboard activity, suggesting it's somehow related to the way the emulator takes input. Some more googling led to [this Stackoverflow thread](http://stackoverflow.com/questions/409886/send-key-strokes-to-games) which suggested [this library](https://github.com/jasonpang/Interceptor) as a potential solution. I'll try it out and report back.
I didn't know about Lua. I wrote a C# project with a driver to read in the 'Wiimote' data and some other features like a realtime input graph and signal processing, and was hoping to keep the project contained to just C#. I'll look into Lua and see if there's a way to make the two programs communicate.
`FlowLayoutPanel` is a panel, meaning it hosts/contains other UI elements. Add some `TextBox` controls and set their `Text` property.
If I'm understanding this right, you're just missing something to actually display the text in. You'll need to put something into the FlowLayoutPanel like a Label, TextBox or RichTextBox that will actually hold the text you want to display. Keep in mind though TextBoxes are editable unless you set the ReadOnly property on them.
Use a ReadOnly textbox with no borderstyle, it's just like the same. A tip: Make a new void method, that updates easily the output. eg. public void YourMethod(string out) { this.textBox1.Text = out; } When you call an event by click eg. the current datum, you just use this method. YourMethod(currentDateVariable); 
Ok, so I added a textbox instead, set multiline to **true** and also set readonly to **true** named textbox1 This is the ignorance coming out... I would think you could use textbox1.show("text"); after my arugment and process runner, and it would react like message box, but but it tells me no overload for method 'Show' takes 1 argument 
Yeah I now have a read-only text box up bassically when this argument is running &gt; Arguments = "/c esentutl /r rvn /l logs /s system"; &gt; processRunner(WorkingDirectory, Arguments, FileName); I want to the text box to show "Running Repair" Any suggestions? **Edit I figured it out... I used textbox1.text += "Text"; 
&gt; in fact, I want to make sure Class B is behaving a specific way so that I can test Class A in an isolated way (ie no side effects from B). Write you tests for class B first. If they pass, then you know that you can safely use it while testing class A. No mocks are required and your tests are more accurate. The only time I mock something I when don't have reliable access to it. For example, some random bit of hardware like a warehouse robot. (That was a fun project.)
&gt; foreach (var share in objectCollection) { &gt; MessageBox.Show(share["Name"].ToString() + ", " + share["Path"].ToString()); &gt; } Thank You! This is eventually what worked for me. I just copied the C# portion (even though i don't understand it, eek) and it worked perfectly.
Wasn't sure how point this to a server location, but I ended up using a PInvoke solution. Thanks for this info though, I'll keep it in my back pocket.
You're not really asking an EF question -- you're asking an *EF =&gt; Web API* question. What is 'PutFacultyMember()' actually supposed to *do*?
Ah. If you already have an existing project, it makes more sense. I was thinking you were "just" trying to send input to the emulator.
Thanks for the tip! yeah I finally figured it out a couple post up... I get impatient sometimes lol. Thanks for the tip with the object browser I just used it thanks to you lol
I've used this before, works great https://globalmousekeyhook.codeplex.com/documentation
I do too when I'm coding, just not when I'm typing quick samples from memory on my phone.
I actually read a blog by Eric Lippert where he talked about the compiler's handling of nullables and he said a lot of this is special-cased to generate efficient code, though you are absolutely right that operators are another source of casts that don't work with convert and the idea is the same. That would be a cool way to extend this method in the future.
that gets triggered when you call put api/facultymember/{id} 
Miscellaneous stuff first, some of it being preference. * With WebApi you should not need the [ResponseType] or explicitly returning IHttpAction. Just return `void` and the framework will figure out what that should mean on the other end. * "Put" is a horrible description for a method. Is this an update? Then call it "UpdateFacultyMember" * You should return the object from an update call. That way if the server code changes the object somehow then the client code can see those changes without needing to make GET call to the server. * Why have the ID in the URL if it is in the object itself? Validation, maybe, but that's pretty meaningless at that level. It's just moving data around for the sake of moving it. Ok now. When you're setting the entity state as modified, it's telling EF that *only that entity* has been modified. If you want it to pick up the differences in publications you'll have to loop through them and set them as Added/Modified/Deleted before calling SaveChanges.
Phones are crap for typing. 😊 
some of that is autogenerated by VS. You *do* need the ID as the ID should map to the elements ID (remember it's supposed to be RESTful) so you're saying there is no way to get the update to propagate down the one to many relationship without doing it manually... ugh... When i worked with Hibernate in Java it did that....ugh.... it seems easier to create more api-endpoints to get it working... 
 I think you got the wrong idea of what a "lambda" actually is. The execution time is entirely dependent on the context where it is used. Post example code that contains a lambda where you are unsure about execution flows! Lambdas are always executed synchronously by themselves. Maybe you got confused by seeing code like: await Task.Run(() =&gt; DoSomething()); ...where a lamdas is passed to a thread that executes it.
I am not an expert, but in my opinion, it's a "niche" technology and I would not concentrate on it alone.
Watch out the technology may take off, or it my become another silverlight. Check out what you can get far cheaper on pluralsight.com
Yeah what this guy said. Lambda expressions are just syntactic sugar for anonymous methods. You can pass them around as delegate types, to be invoked later.
Hmm, this might have to do with boxing operations. When dealing with a value type, if you cast it to object, it gets "boxed". A boxed value type cannot be unboxed to any type other than its actual type. This should help demonstrate: int myInt = 5; short myShort = (short)myInt; // legal object boxedInt = (object)myInt; // legal int unboxedInt = (int)boxedInt; // legal short unboxedShort = (short)(int)boxedInt; // legal short unboxedShort2 = (short)boxedInt; // throws InvalidCastException
It's an ORM, not magic. For EF to determine what to add/update/remove it has to inspect your objects. That might work OK for a small case like you're using it for, but what happens with larger objects? With deeper nesting? With circular dependencies? Having any ORM pick apart all those objects, and do it right, would be a fairly complicated bit of code that would take a long time to run. When your moving stuff in and out of your database you don't want long run times. It's better to leave it up to the developer to choose what needs to be updated.
It's been said already, but again, check out Pluralsight. Awesome resource for about $500 for a year subscription - cheaper for basic plans. 
I have it. It is live instructor lead classes so you could ask questions during the walkthroughs. Was it worth it? Individually, not really if you can read documentation and work through stuff on your own. Although it did open some doors when I was thinking about a new job. Where it becomes valuable is for consulting companies that want to become Xamarin consulting partners. I wouldn't get it if my employer didn't pay for it. 
I understand the thought process but for most (smaller scale applications) it would be nice to have that feature for shallow objects. (honestly my entire SPA just needs once API end point and the rest is frontend logic. I would have gone with mongo (because it really is document based data) but instead of running two databases on the same machine I decided to stick to one. 
Wish more people upvoted you. It's key area of importance and value is in the consulting sector of said market.
This is definitely a challenge when using EF in an N-tier application. You receive the entity on the server - that entity is "disconnected", it's not being change-tracked by EF. You basically have to traverse the entire object graph and inform EF which objects are added, which ones are modified, and which ones are deleted. This operation is sometimes referred to as "painting the state". If you search for "entity framework painting state", you will find a number of approaches out there. You may also find this presentation helpful: https://prezi.com/wkj4r1ttwds4/entity-framework-code-first-working-with-disconnected-entities/ One option you may want to consider is exposing faculty and publications as separate endpoints in your API. So, the faculty endpoint will only be for updating properties that are directly on the Faculty entity, and if you want to update publications, that will need to hit the publications endpoint. That may require a bit more work on the client side, but it will keep your server side code easier (no need to paint state).
i eventually got it all worked out by manually painting the state...i thought about going the multi-endpoint but it would complicate the way the app would work. 
I didn't say anything about efficiency… I said lightweight, as in, the most concise way. I see how my title could be misleading, I've edited my post for clarity. My apologies!
See edit. Apologies!
Most concise way is surely not what people understand when you say "lightweight". Lightweight means low memory footprint.
I still don't understand what you want / need / mean, after the edit. If a lambda is dispatched on another queue, who cares whether it's dispatched synchronously or asynchronously, the fact is it's running on another thread/queue/task scheduler/message pump and that fact alone makes it an async affair for the code calling Dispatcher.BeginInvoke. Please give an example or code. 
Couple of points worth mentioning; 1) if you're interesting in developing on Xamarin in the near future, as there is already evidence that certified Xamarin developers command better salaries than non-certified ones (I think you've already seen/guessed this). 2) it's not going to be $2k every year - after the first year, your renewal is done at a discount. I'd expect to see this get cheaper over time, too. 3) from talking to a couple of people who have been through the process, the university includes 8+ hours of one-on-one access to staff developers where you can discuss, plan, debug and critique projects even if they have only a small connection to Xamarin itself (heard examples of people getting help setting up web server message APIs, ASP.Net projects, applications on Azure etc). 4) You can trial it for free for 30 days right now, which is a good way of discovering if the pace and content of the courses suit you. I take everyone's point about Pluralsight (which I only discovered after I'd spent some money at Lynda.com). $2000 is a lot of money to me, but I don't think it's outlandish for a multi-day training course that includes one-on-one access, vendor certification and up-to-the-minute information and content. At the last count there were about 60 hours of coursework. disclaimer: I know several devs who have recently become certified, and I'm seriously thinking of ponying-up for it myself. 
Don't know which language you're using, but here's a C# example: http://www.codeproject.com/Articles/19004/A-Simple-C-Global-Low-Level-Keyboard-Hook 
&gt; Next, I installed Fiddler to intercept and modify the Login page being served on Http. Well, yeah. If you have access to the HTTP stream you can do a lot of evil things. I think better advice for the average developer would be not to have 3rd party javascript on your login page. So no advertisements, no user-created content, and so on. 
Here's the thing about programming (and most other things I guess): Words already have meanings. When you invent new meanings for those words you can't expect people to understand what you're saying. I get the feeling you're just using words like "lightweight" and "synchronously" you've heard other programmers say without actually knowing what they mean. 
While java progressed /r/java/comments/3bawro/java_pushes_ahead_of_c_in_monthly_programming/ 
Garbage in, Garbage Out. The statistics are flawed to begin with, so any conclusion you draw from them is also flawed. Percentages are useless here. Three people, one doing Java, one doing Ruby, and one doing C# web development. All three are using JavaScript.. does this mean that C#, Java and Ruby languages are less popular? No, it means that JavaScript crosses boundaries and pushes the statistics off. Each language in this sample has 1/3 of the market. JavaScript has 3/3's of it. It's not Java, Ruby, and C# having 1/6th of it and JavaScript with half. 
It's hard to isolate all the problems you have and I don't use Entity Framework but here are some tips: 1. Don't use GoTo 2. You could avoid exception here. 3. If you are adding a single element to the list, why don't you use ProductNamesList.Add? 4. You are adding product to the ProductNamesList but trying to find it in productNames list. SaleLog.ProductSoldID=ProductNamesList.Single(x=&gt;x.NAme==saleLog.Product).ProductID;
I'm new, but from my perspective there's a ton of future for C#. Between Microsoft warming up to open source, Mono and Xaramin opening up new platforms, it seems to me like things are just getting started. 
think I just threw up reading that comment
So the expression "Use the right tool for the job" takes a back seat to "Dhurr, lets do everything with ORMs"?
KISS. This guy probably just isn't using it correctly. I don't need my business logic stored inside SQL Server. no thanks
What do you mean by a shallow structure? MongoDb, you say? I'm dreading the idea of having to learning something new from scratch after I've spent so much time time banging my head against sql. The Csv files contain stock market data and I'd just gotten past the first obstable of having my data as objects that could be queried. I wanted to play around with some trading systems but just when I'm about to get started something new falls apart and it takes a long time to figure out a way around it. 
No… I *don't* want the calling thread to be blocked. Queue is an abstraction from the idea of a thread in some languages, which is why I said "queue / thread". Does `Dispatcher.BeginInvoke` block the calling thread? That's why I'm asking, I don't know. void foo() { ... var t = () =&gt; { bar(); … foobar(); // etc }; // insert code to execute t, such that foo will continue running // while t runs on another thread, and `foo()` is not blocked ... } In Objective-C, this is as simple as void foo() { ... dispatch_async(someQueue, ^{ bar(); foobar(); // etc }); ... } 
How complex are your relations?
Check the subreddit mate 
Lol my wife left me last week. Thanks for the laugh my man. 
gee... that almost sounds like an ABSTRACTION OF THE DAL! Your database can have all the triggers that it wants. I don't care. my repository is doing a freaking insert.
Only of you happen to have a one to one mapping between the object you are inserting and the actual tables. 
Used to be xmpp as could add fb friends to pidgin but changed
x-post this to [/r/ProgrammerHumor](https://www.reddit.com/r/ProgrammerHumor) for more sweet karma
I prefer my karma spicy.
Sure. C# does a pretty good job of most windows related stuff like that. https://msdn.microsoft.com/en-us/library/system.windows.notificationwindow(v=vs.95).aspx EDIT: As /u/PhonicUK pointed out the above was for silverlight. Here's for Windows forms: https://msdn.microsoft.com/en-us/library/system.windows.forms.notifyicon(v=vs.110).aspx
Check File.ReadAllLines method.
https://msdn.microsoft.com/en-us/library/s2tte0y1(v=vs.110).aspx Returns an array of strings as the other guy posted.
I'd assume you can always get information from Twitter and Facebook with an HTTP Request or whatever using System.Web has to offer!
Thanks. I'm on my phone. Fixed. 
You can't, for example, have the Twitter web page create a notification but your non-browser application can call the Twitter API without issue.
Further expanding on /u/Timpi's answer, I want to clarify the difference between a browser and an application that accesses the Internet. Any application you make could have access to the Internet. That is to say, you could make an application that sends out HTTP requests and receives information back. It could be something simple, like an application that polls an email server for new emails, and then notifies the user when one shows up. Your browser, whatever it may be, is one of those applications! It sends out HTTP requests to oservers around the world, and then receives information. The difference between a browser and our imaginary email notification application is that, rather than just saying "HEY, YOU HAVE AN EMAIL!", the browser has a built-in engine which parses (which is a fancy word for "makes it easy for you to read") web pages and then displays them to your screen. And so, an application that works within a browser is an in-browser application (in this case, probably built using Silverlight). That imaginary email notification app is an out-of-browser app. It doesn't need a browser to access the Internet. I don't think that I explained all that as well as I could have. I kinda lost my train of thought halfway through. But, if it's still unclear, let me know, and I'd be happy to help.
Well in that case you would use a string to indicate a file path, since that's what he method you're calling requires. If your asking specifically what is the advantage of using System.Uri, you'd get better info from MSDN. That Type contains properties and methods that are helpful. I've never actually needed to use System.Uri, so I'd say Google it and read up on the MSDN docs. As for your slow queries, are you using an index on your primary key? I always use an identity column as my primary key and I know MSSQL adds an index for you in that case (by default). It may cause inserts to be slower but lookups to be fast. I'm no expert in SQL I really just know basics and what I need for my job. 
There is probably a nuget package for twitter and facebook that does all the leg work.
I wouldn't pay for it myself. Certifications like this are generally paid for by an employer. It's not like the A+, Security+, etc. which are basically used as a way of quickly determining job readiness. It's more of a way of assuring a client that the engineers they have working on their application are certified. At least, that's how it is in my admittedly limited experience
Wow thank you for the info! :D Also, is there a better way to use animations in c# than alternating the Form background image with a timer? XD Here is an example of what I did http://imgur.com/5bKLmn8 So this little guy appears from the tray when there is a notification. He moves depending of the type of alert and make a sound that I can mute if I want with the volume button. I removed the form style so we only see the image and not the border. I also use WMPLib.dll for the sound
Literals are though.
Not funny.
So i found the solution, i had to implement await/async on my update method, and if i then make a thread.sleep(1) in my code, the UI is updated with my changes.
 Task.Run( () =&gt; { ... } ); But you obviously mean asynchronously, which is also clear from your ObjC example :). Also, it takes like 20 seconds of googling to find out what BeginInvoke does. It doesn't block the calling read, but it's also not too efficient. Use tasks.
Just a bonus tip: If `thatVariable` is `string` you don't have to call `.ToString()` on it. Just `thatVariable.Replace(...)`
&gt;Setting the program to end whenever either the player or the CPU wins 3 games You can do this by slightly modifying the code in your for-loop. You're pretty well underway, but take a look at this: for (userScore = 0, cpuScore = 0; userScore &lt; 3 || cpuScore &lt; 3; count++) The loop will continue while userScore is less than 3 OR cpuScore is less than three. That means that once either the player or the CPU earns their third point, the game will not end, because the other party still has less than three points. The only exception here, of course, is when both the player and the CPU have three or more points. Your general idea about how to approach this problem, then, is correct, but your implementation is a bit flawed. What you'll have to do is modify the `userScore &lt; 3 || cpuScore &lt; 3` part a bit, so the game only keeps running as long as both parties have not reached the score limit yet. 
'\\\' is 
But it's not obvious to him, hence why he's asking. Don't be an ass.
There are multiple. [Twitter](https://www.nuget.org/packages?q=Tags%3A%22twitterapi%22) / [Facebook](https://www.nuget.org/packages?q=Tags%3A%22facebook%22) / [Reddit](https://www.nuget.org/packages?q=Tags%3A%22reddit%22).
You could look into Amazon Simple Notification Service (Amazon SNS) http://aws.amazon.com/sns/
Very late in visiting this topic, so I'm sorry about the bump. He did indeed spell practises correct, it's the English spelling of the word.
Precisely this :).
Doh! You're completely right - my apologies!
Ahaha nah you're all good you guessed it anyway which is pretty impressive
 String thisVariable = thatVariable.ToString().Replace(@"\\", @"\"); Thanks. I used this and it works. I didn't try the other option as this one seems more readable.
The IntelliSense in my copy of Visual Studio Community doesn't like that. So I have to keep the .ToString().
Two issues: First, The ' (single-quote) is for a character and " (double-quote) is for a string. When using single-quotes, you cannot have more than a single character between them. You also can't do a string/character replace unless you create an extension method on String to accommodate those parameters. So even though you want to replace two characters with one, you would use double-quotes in your replace. Second, the backslash (\\) character is used in strings for escape sequences. So a "newline" character is represented like "\n" and a carriage return is represented like "\r". But because the backslash character indicates an escape sequence, if you want to represent a backslash in your string, you would have to escape that as well "\\\\". So, in your code, your \\\\ is resolved as a single backslash \\. And your single backslash is resolved as an invalid escape sequence because the interpreter is expecting another character to follow that backslash. So if you want to represent a single backslash, you would use "\\\\". If you want to represent two backslashes, you would use "\\\\\\\\". Also, if you use single quotes with \\\\\\\\ you will get a runtime error because the four slashes would represent two characters, and the single quotes denotes a single character. You would have to change those to double quotes. ...Replace('\\', '\'); should be ...Replace("\\\\", "\\"); Another way to do it is to use the literal string modifier (@). By placing an @ symbol before the string, the interpreter will not try to escape any of the characters in the string. So \\\\ would actually be \\\\ and \\ will resolve properly because it is no longer being read as an escape sequence. ...Replace(@"\\", @"\");
What is the type of the variable? 
String
Since we are talking virtual memory, there is no real way for you to read specific memory locations, ~~since they will be different on every single allocation~~ since the real mapping of the memory is handled by the OS (It's too early in the morning for me to get this right!). I guess you could "guess" if they have a specific layout using a custom memory system but that... That's a rabbit hole you don't want to go down. Your best bet is to go through their mod support system which will expose certain data to you (in reality this is a guess, I have no idea how their moding system works). If they allow scripting you can probably setup some kind of rudimentary data exposure to outside processes. Or you can handle it all in game. Like I said, I have never seen their mod support so I don't know what the limits are. Good luck! 
Dang, not a good day for me. I did some research and I had totally skewed ideas of what sync and async meant. I'm so sorry…
Sorry. My mistake. It does work.
'\\\\' is but '\\\\\\\\' is not. 
Look into using EasyHook. It lets you run your own code inside another application, and communicate between your own process and the code that runs in the context of the other application.
Look into CefSharp, which is a C# binding for Chromium Embedded Framework, a framework that allows you to embed a Chromium browser into any application. Specifically, you'll probably want to use Offscreen to make sure the browser window is not visible. Some information on how to use it can be found here: https://github.com/cefsharp/CefSharp the Offscreen package can be found here: https://www.nuget.org/packages/CefSharp.OffScreen/ which can be installed through the Package Manager Console (Tools &gt; NuGet Package Manager &gt; Package Manager Console) in Visual Studio, by entering the command `install-package CefSharp.Offscreen` once you've created and opened a new project. This way, you won't have to use anything like Windows Forms or WPF, which would make things a lot more complicated for a beginning C# programmer. Then, to get started, take a look here: https://github.com/cefsharp/CefSharp/blob/master/CefSharp.OffScreen.Example/Program.cs for a simple example of how to create an offscreen browser window. 
You might want to try selenium with some browser, if you dont need visual rendered ui or just wan to save up on memory try phantomjs.
Create a property that combines and split things: public Stuff[] Things { get;set; } public string ThingsString { get { return string.Join(", ", Things.Select(t =&gt; t.ToString())); } set { this.Things = string.Split(", ", value).Select(t =&gt; new Stuff(t); } } And then use that instead.
`Things` is an array of other `Stuff` objects, and each one has it's own properties, and so on... If I could just create a string from their `Things` property, wouldn't that defeat the purpose of using CsvWriter? And I need to do this for over a dozen classes, each with 1-10+ of it's own properties, I can't really write a `ToString` for each one :/ I'm kind of new to C# though, something in your comment may be going over my head, so bear with me :)
This is how you do it these days, if no API is offered. You use Easyhook or another Injection wrapper to get your code to be called from the target process. Once it calls your stub function, you can have it bootstrap a .net environment, create an ApplicationDomain, and load your assembly. I used to do this for numerous MMO games. I always liked using the environments as the perfect robot simulators. I'd try out AI ideas and pathfinding ideas and what not. With ApplicationDomains you can even get to where you recompiled your C# code, and the game can refresh the assembly w/o you having to restart the game. At some point, you gotta find a good recv/send hook to really have you application wired into the game. That's a whole nother side of game hacking, that normally starts with a static decompile of the game. Or IDA Pro and patience.
So, it looks like there's a little X-Ying going on here. * What is your ultimate goal? To improve the speed of Mono's GC? Or is your goal to produce a fast-running program for some actual business need? * What is the perceived issue? That the GC in Mono runs slower than the one in .Net? Or that the Mono runtime as a whole is slower? Do you have good evidence for whichever one is your actual position? If your goal is to diagnose and improve the speed of the Mono GC, I would start by creating unit tests that put the Mono GC and the .Net GC through similar trails, adding instrumentation to the Mono GC to see where particularly it's slow, and then work on figuring out why it's slow there. I'm not sure that trying to rip out the GC would be a worthwhile or productive endeavor. 
Ok, so that I can work with. I don't think you're going to be able to rip out the GC. I'm surprised Mono even supported the option from the beginning, and if you're really set on going down this path, I would sooner just contact the Mono developers and see what they think. If you want to analyze the GC, then if I were you I'd add instrumentation to the GC to keep track of why its running and for how long. Then use that instrumentation to find out where it could be made faster. Speaking to your overall goal of improving Mono's performance, there are a billion of other avenues to look at. * When you're running a .Net program in any runtime, you're always using that runtime's implementation of the base class library. Maybe some of the slowdown is due to less-than-stellar performance in Mono's base class library. * Why bother analyzing the IL? To eliminate a variable, compile with Microsoft's compiler and run the program in mono. * Have you analyzed the machine code that comes out of the JIT or AOT compiler? Perhaps the Mono JIT or AOT compiler isn't performing the same optimizations that Microsoft's is. In general, I would start with hard, detailed evidence. If you think the GC is slowing things down, write a test case to prove that - make a program that performs some intensive calculation and doesn't allocate lots of memory. The GC doesn't just magically slow down a program - it only runs when there's memory to be reclaimed. In a standard desktop app, you can watch how often the GC runs (for any generation) and see that the collections are very small. I *really* don't think the GC is the cause here, unless you're testing with some application that has a ton of memory churn. If some program to calculate PI runs slow, then you would have a hard time convincing me that the GC is the problem. I would sooner believe the JIT or base class library is the fault. Collect some hard evidence and come back.
I have a project that I have been mixing C++CLI and C#, and sometimes in the C# I started using LINQ and it is nice — nicer than streams in Java. But this one thing I was doing was getting the maximum value in a range of indices — so I would drop a certain amount, take another amount and I would be able to run max. But this loop was about 10 seconds rather than the 0.5 seconds from a basic forloop. Is there any good resources to understanding the performance implications of LINQ so I know what to use it with and what not to?
I used to play a game with some info collection utilities. .. they would take screen shots then OCR the results. A bit crude but I guess it dodges complications.
It's actually for SQL, I'm an intern and they want me to convert these XML files to CSV so they can put it in Excel, then SQL. Thanks!
I'd just go directly from XML into an object and then write out SQL unless they are manipulating stuff in Excel (which many people do). But, the statement is the same, tabular data has to be consistent and what you have is a 0:n relationship between two tables, which means two different "sheets".
I think they're doing stuff with it in Excel too. Boss says he wants it in CSV. So if class A has a 1-* relationship with Class B, I need to have class A in one sheet and class B in another?
Nope, but we know they are planning up to beta7 for release in August. So will be after that, depends how many extra betas they want to do. They have said that they expect the RC builds to actually be release candidates, not another form of beta.
I don't know if your nuget troubles are related to .NET Core and ASP.NET 5 but I'd like to point out that these will not be part of the release and will come later.
Yes.
There are 3 things I am really looking forward to: * Null propagation (`a.?b`) * the `nameof` operator * much improved code analysis Together I think these 3 are going to help users avoid many bugs. Aside from those, debugging is better and web forms seems faster (less startup cost for me at least).
How about a different approach - is it possible to use the Google api client library? https://developers.google.com/api-client-library/dotnet/get_started
Gotcha. Thanks!
What about Visual Studio Tools for Office? I have to support several Outlook-2010 addins, but VS2015 RC don't support this type of project.
Can we order it already?
For Web Forms and MVC - probably not at all since you're doing server side rendering anyway. For Web API + Angular (or any JS Frontend), it's essential. Here is what I am using it for: NPM - I'm only using it to get grunt packages. Just writing in my package.json the files and downloading them. It's exclusively my grunt package manager basically. Grunt - I'm using Jade primarily (google it if you're unfamiliar, it makes HTML non-painful). But also the way my project is organized, I have a folder called Application-Client that contains my website's source code (Angular, JS files, SASS, HTML), and my grunt process is to copy/minify/translate that all into my WWWRoot Folder. So if I deleted everything in my WWWRoot folder (the folder that the site actually runs from), I could re-run my grunt task to rebuild my site from the Application-Client folder. WWWRoot is basically my "compiled" frontend. Of course, I CAN do this all outside VS, but it integrates it all nicely :). (Feel free to ask more questions - didn't know how detailed I should have made this not knowing your skillset/such). EDIT: Forgot to include Bower. These tools confused me at first, but ignoring the configuration/all the BS, this is my current workflow for including JS packages. 1) Open bower.json in my root. 2) Type in "jquery": "*" 3) When I save the file, Jquery is automatically downloaded to lib/jquery. 4) I have a Grunt Task saying "Whenever something is saved to "lib/*", automatically concatenate all "lib/*/*.js" into "include.js". So it runs automatically when it detects that the lib/jquery folder was added. So all I had to do was write one line, and I already have jquery in my project, because I am just including my include.js file in my HTML Head. It's one of those things that saves minutes everyday, which adds up quickly.
That's the only reason I'm still using 2013, I like my power tools.
Perhaps this will help you http://stackoverflow.com/questions/2030847/best-way-to-read-a-large-file-into-a-byte-array-in-c
Need to get a library. I recommend sparrow charting.
&gt; As for GC proof, it is generally well known that GC contributed to impact of performance and overhead and that why I'm investigating that. "Widely known" is not proof. The GC rarely runs during a normal desktop application. If you're not allocating memory, the GC isn't running. Heck, some of my apps can run for hours with only one or two GC runs. I don't take your claims for granted. Heck, just a paragraph ago you said: &gt; I am a person who test things even when things shouldn't be tested otherwise it'd be no different from taking answers from the bible for everything. Be true to your word then - get some evidence first, and then act on that evidence.
Student here. So lets say your "primary" language was in fact dwindling. How does one make a shift in that case? Do you just self teach and do a few side projects to show employers? 
First of all the announcement specifically says .NET 4.6. In addition someone on the ASP.NET team said it during a build session. It was either Scott Hanselman or Damian Edwards but I am too lazy to look for it. I believe it was one of these two sessions: http://channel9.msdn.com/Events/Build/2015/2-687 http://channel9.msdn.com/Events/Build/2015/2-726
I'm not 100% sure what you're asking, but let me try to guess. You could be asking about whether you can do this: public async Task Sync&lt;T, U&gt;() { var repoPairs = new Dictionary&lt;A&lt;T&gt;, B&lt;U&gt;&gt; ... That's possible. Or maybe you want to do this: public async Task Sync&lt;A, B&gt;() { var repoPairs = new Dictionary&lt;A, B&gt; ... and you pass in C&lt;T&gt; and D&lt;U&gt; for A and B. That's also possible. Or maybe you want this: public async Task Sync&lt;A, T, B, U&gt;() { var repoPairs = new Dictionary&lt;A&lt;T&gt;, B&lt;U&gt;&gt; ... Unfortunately, you _can't_ do this. (This is something you could do in C++ with templates, but alas not here.) If the last one, there is a workaround: interface X&lt;T&gt; ... interface Y&lt;T&gt; ... ... public async Task Sync&lt;A, T, B, U&gt;() where A : X&lt;T&gt;, new() where B : Y&lt;U&gt;, new() { var repoPairs = new Dictionary&lt;A, B&gt; ... Thoughts?
I'm just curious, but why mobile? Why not use existing resources on a computer? 
Upvote because you checked and told us.
I think I just found my solution: I need to make the interfaces as IAsyncRepository&lt;out T&gt; instead of just &lt;T&gt; so that I can use more/less derived types. I'll post back when I get a chance to try it.
I have Lynda.com and books, but I travel a lot and are not always able to have a PC nearby.
I don't understand the need to concatenate all js files. I get that you will have less http requests, but isn't it better to use a CDN version of jQuery to reduce traffic?
Have you ever heard of Indexes for the database. Also, look into EF for Candidate Keys. 
Seriously? A goto?
Really want to know this. I'm just about to go in deep in a project that needs this kind of functionality.
&gt; GC have overheads is therefore impacting performance even up to a tiny degree that is a fact even when it's not collecting, not a speculation. This is patently false. The *GC* doesn't incur overhead unless it is running. End of story. If you are not allocating memory, you are not incurring GC overhead costs because the GC is not running, and the mere existence of a GC does not cause magical slowdown. If you want to argue otherwise, please provide a reference. &gt; I was asking if anyone managed to compile Mono without GC just for testing purpose and yet I keep getting barged with questions than answers from this Subreddit And we already gave you an answer - none of us think it's imminently possible. And I gave you a secondary answer - ask the people who work on Mono if you really want a better answer. This is /r/csharp, not /r/MonoHackers, for crying outloud. &gt; Why are you guy so insistent that I have to prove myself to you guys before getting any help? Because you're making wild unsupportable claims without any evidence, and the burden of evidence is on you. If you want us to help you with your problem, prove that your problem exists in the first place, instead of acting like a petulant child who expects us to bend over backward to help you. We help those who help themselves. Again, I re-iterate my position - if you're measuring "40% slowdown" when using Mono (a statement which is meaningless without context), then I would have a very hard time being convinced that it has anything to do with the GC unless you're running a memory-intensive application. If you want to fix that "40% slowdown", I honestly think you're barking up the wrong tree. If *you* want *my* help (I'm not speaking for anybody else here), then convince me of your claims instead of making unsupported unreferenced claims. Post some test cases - it can't be that hard to collect some darn evidence. Do you see 40% slowdown in apps that are mostly CPU intensive (long calculations, perhaps?). Do you see 40% slowdown in apps that are allocating and releasing a lot of memory? If you see slowdown in apps that don't allocate memory, then it is my opinion that the slowdown has nothing to do with the GC, and if you want to convince me otherwise, show me some data that proves otherwise. &gt; I am a person who test things even when things shouldn't be tested otherwise it'd be no different from taking answers from the bible for everything. You said it.
Yes, off course, for method desciption. It does a huge help.
There is no class named "Collection&lt;&gt;" in the System.Collections.Generic namespace, which I assume you have included by default, but there _is_ a class named "List&lt;&gt;" in that namespace. I think your notes are wrong. "List&lt;&gt;" is a good choice here. **Note 1:** You may not want to have a setter for your property. Make the users of your class add and remove items from the collection, not replace the collection. This can help avoid subtle bugs. **Note 2:** There is an interface in that namespace named "ICollection&lt;&gt;". You could use this type for your property as follows, but for a beginner project I'd say you're fine using "List&lt;&gt;". private List&lt;Worker&gt; _workers = new List&lt;Worker&gt;(); public ICollection&lt;Worker&gt; Workers { get { return _workers; } }
&gt;I think C# and dotNet is having a bit of an identity crisis at the moment, with the old clunky systems of the past keeping it from being seen as a language for current times. I'm curious to hear what you think the old clunky systems of the past are.
[GhostDoc](http://submain.com/products/ghostdoc.aspx) is pretty handy for XML comments
There is actually a generic Collection class in the System.Collections.ObjectModel namespace. https://msdn.microsoft.com/en-us/library/ms132397(v=vs.110).aspx That said, I have never seen it actually used in an application. Looks like it is needed more for when you want to subclass the collection and do some custom operations, etc... If all you need is to store a group of items to add/remove from and iterate over, List&lt;&gt; is perfectly fine.
You can generate documentation from the summary tags. It also integrates with intellisense. So amazingly useful!
&gt; redundant Just like the code you described. &gt; But there's an important architectural reason for it Then you have to make the choice -- either your coders will have to deal with following the rabbit hole to get the *real* method or you can copy paste the same comment onto all of them. In my terrible enterprise work I do the former. 
It's ONE of the features, I wouldn't really say it is the main reason that I use it. I do intranet application development, so CDNs aren't really a thing for me. It's more the ease of including the file in my &lt;head&gt; section, while also allowing me to develop in unminified and view minified for the testing. Also, since Angular is client side, I NEED to uglify the code as to not include the raw source. This way I can be using this the whole time to make sure I'm not causing any issues with stuff later on. Also, specifically on that feature, I'm actually writing an application that is going to be usable offline with cached data (as in you're plugged in one minute, the next you lose your connection but can still access the site at http://applicationserver:5000 with data you saved), and part of that is denoting which files I need to include locally for the HTML Manifest. It's much simpler to have one include file cached. Like I said, it's something that saves maybe 1-2 minutes, but that adds up to me. Without it I would have to: 1) Go find the .js files and download them 2) Organize them in my project 3) Include them in my HTML head 4) Make sure they are organized properly for dependencies 5) Add them to the HTML Manifest File With Grunt, I just have a task set-up that does all of that for me. Not a game-changing life-altering thing, but I absolutely think the time I spent putting it together has allowed my project to be better organized and saved me time in the long run. Plus, like I said before, Jade is the #1 feature I use Grunt for. LOVE IT.
Ok, let's see what this article says... oh pop over, bye. 
Is it a web project? If so, setting the below argument may fix your problem: &lt;arg value="/p:DeployOnBuild=true" /&gt;
GhostDoc FTW!
What have you tried and where are you stuck? 
Public, outwardly exposed APIs, sure, document them with intellisense for people who don't have access to the source. You could even convince me that internally scoped methods should have intellisense documentation (although it'd be a hard sell). If your Jr devs are blindly calling methods with unexpected side effects, though, that's probably the fault of the dev who wrote the method and gave it a shitty name. And if you're writing intellisense comments for EVERY method and property in your codebase, that's A) a lot of wasted vertical space, which is going to make the code that much more painful to read (and the important comments that much more easy to gloss over), and B) a recipe for lazy comments.
I would think you would foreach reports.Add() each worker from this.Workers.. ? Otherwise you're reassigning from one type of collection (System.Collections.ObjectModel.Collection) to another type of collection (System.Collections.Generic.List). Use a generic List in both places... List&lt;&gt; also has AddRange. public List&lt;Worker&gt; Workers { get; } = new List&lt;Worker&gt;(); private void payReportToolStripMenuItem_Click(object sender, EventArgs e) { Form2 reports = new Form2(); reports.Workers.Clear(); //if you need to clear this list first? reports.Workers.AddRange( this.Workers ); reports.Show(); } 
To me it makes more sense to have the different events and methods. Either way you have to test that the correct event is fired and received, but the way you describe it now you have more logic to test to make sure the handler correctly figured out what to do. You can put that onus on the type system instead.
It just formats the method and parameter text into sentences. How is that useful other than satisfying the "you should have comments on everything" theory?
Inline comments should be the why not the how and what anyway. They're just as important for when someone is chasing down a bug, find the line or set of lines they think are causing it and question changing it.
Those sound like things that can all be verified with unit tests
We did this too for the development group I work with. There were some grumblings initially from a few devs, but eventually everyone adapted.
It creates most of the comment for you. All you have to do is edit it. 
To format code on Reddit properly, you need to follow these easy steps: - Have an empty line before your code. - Have an empty line after your code. - Have 4 spaces before each code line. Please properly format your code. It's a sign of respect.
They are planning a RC (release candidate) version for November this year (2015). It was said in the last community standup.
Here you go: http://developer.xamarin.com/guides/ios/advanced_topics/binding_objective-c/
Make a pop up, make me down vote. It's like magic! Only fucking terrible! 
&gt;I'm halfway confident I can manage it using the Xamarin resources I was hoping for something more, or aimed a little lower :(
I use varbinary(max) as the server-side datatype. Ado.net can interface nicely with a stored procedure expecting a SqlDBType.VarBinary value, but make sure to set the size of the parameter as -1 for MAX size. From there, simply pass byte arrays to send to or retrieve from the server. To get a byte array from a file, try System.IO.File.ReadAllBytes. 
I hate GhostDoc. Why on the world would I want documentation on a property such as: ///&lt;summary&gt;Gets or sets the Widget Id.&lt;/summary&gt; public int WidgetId { get; set; } I'm sorry, but that documentation is NOT useful at all because it adds absolutely nothing except more comments. I can already tell that it gets or sets the Widget Id because it's called "WidgetId" and has a getter and a setter!
It's not very helpful but it makes it easier to implement mandatory comments via StyleCop as it takes care of the comments for trivial methods/boilerplate.
Formated Code: public interface ICard { } public interface IPackCards : IReadOnlyCollection&lt;ICard&gt; { void Shuffle (); ICard TakeCardFromTopOfPack (); } public interface IPackCardsCreator { IPackCards Create (); } public class PackCardsCreator : IPackCardsCreator { public IPackCards Create() { throw new NotImplementedException(); } } 
Thank you for the solid help, however based on the Tests given, is there any alterations?
OP would have gotten away with it too, if it weren't for that meddling SomeKid420.
I have no experience with WCF, but I would recommend you to test it with [Fiddler](http://www.telerik.com/fiddler) You can easily get detailed information about the response you received from a server. Also, you can intercept your own request, modify it, replicate it or change it on the fly and send it that way. After you get a proper response, use [Fiddler to Code](http://www.chadsowald.com/software/fiddler-extension-request-to-code) extension that will generate your request in VB.NET, C# or Python. Sorry about the "workaround" help. Hope it helps. 
Hi! Sorry for the late reply here, there seems to be a bit of ambiguity surrounding the name here, PushBots and SignalR are not comparable. SignalR is for realtime server-side communication whereas PushBots is simply for facilitating Push Notifications to devices (and more recently, Chrome Web Apps/Extensions). So, to answer your question, go with SignalR ;) Hope that clears up the confusion! edit: Also just a disclaimer, I am in no way associated with PushBots (pushbots.com) I have simply written a .NET wrapper for their API.
I wouldn't start with binding the library then. Just do a quick app to get used to both Xamarin and C# and then read through the guide again. The actual binding doesn't appear to be to difficult to do. Just create and interface and use attributes to bind the methods to Obj-C ones. http://developer.xamarin.com/guides/ios/advanced_topics/binding_objective-c/binding_objc_libs/
great post! too bad some people throw a hissy fit when they see a modal instead of just clicking the X and moving on ;) their loss
Funny thing is, with fiddler in the middle, I have no issues consuming the API. I get responses with my current code. But the code-generator assumes, what I did at the start, that there are no issues with the certificate... but clearly there is. It generates code similar to this BID4 method in my pastebin above.
First and foremost, your async code is **ALL** wrong. What are you trying to do? Just push those calculations to a background thread? Problems: - `async void` - Major code smell. This should only ever be used for upper-most event handlers (e.g. `async void btn_Click()`) If you're not returning a value, you should be returning a `Task` object. (e.g. `async Task bubbleSort()`) - `await Task.Delay` - I assume that you're thinking that this is going to be pushing these calculations to a background thread, but that's incorrect. - `GenerateDatas()` in your constructor - You think this running asynchronously, but it's not. You **really** should review how `async/await` works. I'm sure I could round up some good resources if you'd like. - In my experience, modifying an ObservableCollection on a background thread has always resulted in some kind of exception thrown because it was on a thread different from the thread that the Dispatcher is on. So you may have problems with this. Now that this is out of the way, let's see the XAML. 
Ah ok. I'd say then try use soapui first. That TLS/SSL error can be sometimes confusing and be a number of different things. Check and see if the test cert was self signed for the domain you are hitting and not just for local host. . That would also cause that problem I think. Also basic http binding should work. Avoid complicating and stick to basic. The endpoint seems to be just standard soap. 
Soap UI couldn't load the wsdl.. I don't think it has clientcredential.certificate support? Error loading [https://appapi.test.bankid.com/rp/v4?wsdl]: java.lang.Exception: Failed to load url;https://appapi.test.bankid.com/rp/v4?wsdl, 0 - Found the configuration for using a client auth cert! And it works in Soap UI. 
1. Add the [.gitignore](https://github.com/github/gitignore/blob/master/VisualStudio.gitignore) file for Visual Studio projects 2. Remove the .suo file and the /bin and /obj directories 3. Winforms is perfectly fine, but you may want to look into WPF and Universal App (Metro). Both frameworks use the MVVM design pattern and use XAML. So you can have a Desktop app and Windows store app that have a lot of common code, just a different UI sitting on top. 
Thanks for the code.. I've copied it into my own solution. The bad async code really ... screws things up. I have no clue what's going on. As soon as I took out the `await Task.Delay()` code it ran, to what I would assume, is perfectly. [Picture](http://i.imgur.com/P8cp7Yi.png) I would recommend just taking out your `await Task.Delay()`. If you need it to be asynchronous, I'll see if I can help you write a solution. Also hat-tip for the Sparrow Chart stuff. Never heard of it and it looks nice. 
None of these really seem like reasons not to use parameterless struct constructors, just limitations they have. The only one that seems like a potential gotcha is "default(S) and new S() are totally different things," which does indeed require a shift in how you think about structs, but really it's no different than the way we think about reference types. We wouldn't dream of attempting to use an instance of a class before it was initialized, so is it really a stretch to think the same way about structs?
Yeah, I can. https://appapi.test.bankid.com/rp/v4?wsdl Also, I got it working in Soap UI
Cool..I'm also in the process of learning WPF as well as MVVM - any plans to implement this with MVVM? I primarily plan on using C# for desktop apps only ( as I use PHP for Web dev now ) and am not sure if using MVVM should be my main focus. Just curious..nice app!
That's cool. Haven't checked it out yet, does it show chat in some way as well? This is pretty important on Twitch.
Why did you post this twice with two different titles?
What are the advantages of WPF, besides being easier to work with. I've never really messed around with it. Other than that thank you for the tips!
Have you tried removing and reinserting the moved points instead? I haven't looked at the sparrow chart docs, but other charting libs have this same limitation (won't update existing points, just added and removed ones). 
You *shouldn't* need that to change the UI. Typically anything that changes the UI need to be on the UI's Dispatcher thread. And you don't want to "block" the UI (e.g. making a database call, or hitting a web service). That's where async comes in to play. I assume you'll be getting the data for this chart from a database or a web service. Do you know where exactly? 
This is cool, I like how minimal and functional it is. 
Yep. I sure showed them.
force not-loaded images to also take up space kills that weird jumpiness
Just be careful with this approach as it does bypass Twitch advertising.
I dont think they will do anything, but be careful ;-) Twitch Api Terms of Service 13 Prohibitions f. access any portion of any Twitch audiovisual content by any means other than use of the Twitch Player;
Regarding your workaround: setting aside the fact that assigning to 'this' makes my brain hurt, you haven't solved anything. Any call to default() will still yield a zero-ed struct. Your example called new MyStruct() which already worked fine.
Thanks. I kept trying figure out which semi-colon was supposed to be colon or something.
Thanks.
Are you looking for something like this? https://lostechies.com/jimmybogard/2008/08/12/enumeration-classes/ There's also further explanation around the 45 minute mark in his "crafting wicked domain models" presentation which I highly recommend : https://vimeo.com/43598193
Ahh.. That makes a lot of sense. So.. The problem is that the Sparrow Chart only ever looks at the X and Y values once, which is why when you change them they don't update. The solution is to reapply the items to the collection. Here's my solution, feel free to use it: public class ViewModel { public ViewModel() { Collection = new ObservableCollection&lt;Model&gt;(); Task.Run(async () =&gt; await GenerateData()); } public ObservableCollection&lt;Model&gt; Collection { get; set; } private async Task BubbleSort() { await Task.Run(async () =&gt; { var length = Collection.Count - 1; double swapY; var doSort = true; while (doSort) { // ObservableCollection&lt;T&gt; can only be modified on the Dispatch Thread that they're created on. So we have to marshal back on to that thread. // Realistically, this Dispatcher should be injected with Dependency injection rather than using this. But it works. await Application.Current.Dispatcher.InvokeAsync(() =&gt; { // Based off of what I found with the SparrowChart, it only ever "binds" to the X and Y properties of the model whenever it's first added. // This is the main reason why the original problem was existing. // A somewhat hacky, although I'm not sure if it's the only way to do so, method is to create a new collection that we can modify. // Modify it, and reapply back to the original collection that's being binded against. var newCollection = new ObservableCollection&lt;Model&gt;(Collection.ToList()); doSort = false; for (var i = 0; i &lt; length; i++) { if (newCollection[i].Y &gt; newCollection[i + 1].Y) { swapY = newCollection[i].Y; newCollection[i].Y = newCollection[i + 1].Y; newCollection[i + 1].Y = swapY; doSort = true; } } Collection.Clear(); foreach (var item in newCollection) { Collection.Add(item); } }); // Feel free to adjust these delays. await Task.Delay(500); } }); Trace.WriteLine("Collection sorted"); } // Notice how we return a System.Threading.Task type because it's asynchronous. If we had an actual return type, then we'd return a Task&lt;TResult&gt;. private async Task GenerateData() { await Task.Run(async () =&gt; { var numElements = 20; var rnd = new Random(); for (var i = 0; i &lt; numElements; i++) { // We copy this to a local variable, because the value **can** change between the point in which the InvokeAsync() method gets called. // Typically these errors are really fun to debug (sarcasm), so it's easier to manage at the beginning. var index = i; // ObservableCollection&lt;T&gt; can only be modified on the Dispatch Thread that they're created on. So we have to marshal back on to that thread. // Realistically, this Dispatcher should be injected with Dependency injection rather than using this. But it works. await Application.Current.Dispatcher.InvokeAsync(() =&gt; { Collection.Add(new Model(index, rnd.Next(numElements))); }); // Feel free to adjust these delays. await Task.Delay(250); } Trace.WriteLine("All items added"); }); await BubbleSort(); } } 
`default(Rational)` would give an invalid value. The semantics of `default(T)` will not change. However `new Rational()` could now return 0/1 instead of 0/0. Same for quaternions.
Wasn't this feature removed? https://github.com/dotnet/roslyn/issues/1029
WPF's main advantage is really XAML and MVVM. The MVVM design pattern coupled with the event bindings and declarative nature of XAML means UIs are a lot easier and faster to develop. The MVVM design pattern encourages a much cleaner separation of concerns. You don't end up with business logic in code-behind code, rather that business logic is pushed into the View Model layer which makes it easier to test and re-use. You can end up with code-behind code in the View, but generally that code is exists to handle some view specific functionality (e.g. drag and drop) which doesn't affect the business logic.
For starters, it's generally much easier (and maintainable) to create the interface with because you're using XAML, which is declarative. In comparison to the Windows Forms designer it's much nicer - not only is the WPF designer more polished, but if you don't want to use it you don't have to: you can create your UIs from scratch instead with full IntelliSense support. Another good reason is that it's really easy to customise how your interface looks - whether that's by styling or data templates - you can declare an independent style for each control you want, rather than having to change a (rather limited) set of properties for *every* control.
Sorry .. Those are using statements. Add the following to the top of the file, order doesn't matter: using System.Threading.Tasks; using System.Windows.Application;
The result of decompiling is not valid C# mostly because the compiler does a lot of optimizations on your code. This is especially true with current versions of the CLR. 
Thanks! 
I hate to say it but, why would I use this over the regular twitch browser? Is there any unique feature I'm missing?
All that said, I'm basically a C# fanboy so it would be sad to see developers investing in other ecosystems. But ya have to do whatever helps you get to your end goal. :-)
I fiddled around with these a while ago and kept getting frustrated with trying to integrate with sufficient accuracy. 
http://www.dotnetperls.com/ is usually very good.
How would you compare it to Unity? Which (Unity or MonoGame) would be easier for 2D development?
not using flash
I'd like to also point out that with C# you get to use Visual Studio with its absurd wealth of plugins and utilities. If you're talking about _productivity_, it doesn't get better than that. That being said, I don't think you should be choosing a language based on a fuzzy concept as what is more "productive". Choose the right tool for the right job. Personally, I would also consider what you plan on doing. At least with C# (note: biased), there are a tonne of platforms under the .NET (and Mono) umbrella for you to program for. But really, why not both? Dink around in python and its IDEs for a week or two, and play around with C# and Visual Studio for a week or two. If you're going to be spending a lot of time with them (say, a year or more), then it's worthwhile spending some time getting a taste for both before diving in.
I guess I am a bit confused then... why would they expose stuff in their API that lets you view a stream?
Sorry, that's incorrect. Read it again. It's 100% types and is completely design time friendly. Since watching the above video, I've used this several times. It's cumbersome to set up at first but once you get your sea legs it's phenomenal. It's everything that enums do and more except for being able to switch on them.
For anyone who is interested in learning more into using things like this as I was here were some links I found useful. link to Twitch API he uses: https://github.com/justintv/Twitch-API/blob/master/v3_resources/games.md link to RESTSharp library to get messages back from twitch: http://restsharp.org/ program he uses to pipe stream to vlc: https://github.com/chrippa/livestreamer Looks like there is already some twitch API's already out there though not sure how good they are might help you learn what other people are doing. https://github.com/gibletto/twitch.net/ https://github.com/Zagitta/Zetlon.OAuth.Twitch Also for anyone doing json to c# make sure to use something awesome like this. http://jsonutils.com/ 
They've finally moved their chat system over to html 5. I just wish the video was the primary focus instead of that.
I read it was because they're two different teams, and that chat was easier to tackle first.
thats what the link i posted allows. It automatically generates the C# files to deserialize the json into so you can just paste them into your c# project and then use json.net to deserialize to them. That way you dont have to make them yourselves as he was doing in his case. here you can see the results: https://gist.github.com/battleguard/b9f4c29b28d9c2a80e39
Not everything possible in CIL code can be expressed in C#. Sometimes decompilers will produce illegal code that suggests what the underlying code is doing. Other cases include goto's into scopes (not legal in C#), "methodof", "fieldof" etc. to complement typeof (not possible in C#).
Looks like he's using C# 6
XNA is easier for unity if you like having control. And quicker to learn. But in the long run you might be better with unity due to it being more modular.
It's a good option for devices with lower performance. I usually watch streams with livestreamer/vlc on my netbook. It got 10-20% lower cpu usage (depending on the stream) than watching it in the browser and runs smoothly, whereas the built in player is often lagging/stuttering and also noticeably influences the rest of the system. --- Edit: from the related [livestreamer-twitch-gui](https://github.com/bastimeyer/livestreamer-twitch-gui) project: &gt; When to use &gt; === &gt; &gt; One of the reasons people are having bad viewing experiences on Twitch.tv is the usage of the flash player on their website. With the current generation of web browsers they sadly almost don't have any other choice but using flash for delivering a simple streaming service. There are some platforms and configurations where flash is causing problems though. These problems are low frame rates when watching streams or videos and also the lack of GPU acceleration leading to high CPU + memory usage which can be a big issue especially for mobile desktop devices. &gt; With Livestreamer Twitch GUI you're not dependent on your browser and flash, so less resources are needed. Also all streams can be watched in the video player of your choice, enabling a smooth video playback. &gt; Please have in mind, that by using this application you're bypassing any ads run by Twitch (adblock users also do). If you want to support Twitch or a single broadcaster, please consider buying Twitch Turbo or subscribing to the broadcaster's channel. Thank you!
Yep. Most likely the decompiler got confused about the two declarations on the initialization of the `for` loop and just threw them inside a block lol
don't understand why the shitting thing has to be async in the first place but oh well... My login works like this: User submits the form. Form values posted by ajax from view to controller Controller checks `if (ModelState.IsValid &amp;&amp; DoLogin(model.EmailAddress, model.Password))` to check correct login details. Because I'm querying my web service with/for this information, the DoLogin function which used to be bool, now has to be an async Task so now wtf I'm supposed to return on that is beyond me... Also how that is supposed to be used to determine "login succeeded" or "login failed - incorrect email address or password" is beyond me as well. Also, Google's up to shit over here... Just google... Can you link me an async tutorial? This webpage is not available DNS_PROBE_FINISHED_BAD_CONFIG ReloadHide details The server at www.google.co.za can't be found, because the DNS lookup failed. DNS is the network service that translates a website's name to its Internet address. This error is most often caused by having no connection to the Internet or a misconfigured network. It can also be caused by an unresponsive DNS server or a firewall preventing Google Chrome from accessing the network.
If you just want to see available namespace for your solution just use the object browser included with visual studio.
 User user = await response.Content.ReadAsAsync&lt;User&gt;() don't use .Result You **do** need to await on Content.Read*Async. [Tutorial](http://stephenhaunts.com/2014/10/10/simple-async-await-example-for-asynchronous-programming/)
Listen and understand **THIS**! Wish I could upvote more.
Xamarin is great, but their pricing plans are unbelievably expensive.
Have a look at Route Attributes http://www.asp.net/web-api/overview/web-api-routing-and-actions/attribute-routing-in-web-api-2
What gives you that impression? if the response stream is a valid serialized `User`, `User user = await response.Content.ReadAsAsync&lt;User&gt;()` will work. Edit: `.Result` simply pins and blocks the underlying task on the calling thread. The same task is used when using the `await` keyword. Edit duex: To prove my point, change your code to `string json = await response.Content.ReadAsStringAsync()` and check `json` out. ;)
Which books do you feel most influenced you as a developer? What areas of development do you feel the strongest in? What areas do you want to improve upon?
They're definitely not targeting a hobbyist market.
I made it a point to purchase one book a month and have been trying to work up and down the entire tech stack. The top ones (currently on my desk): - "C# In Depth by Jon Skeet": I don't think you can call yourself a C# developer and not have this book. - "Sams TeachYourself SQL 4th ed" by Ben Forta: This book is simple and easy to read with complete examples on all the basics for SQL. I use it as reference quite frequently. - "C# Design Pattern Essentials" by Tony Bevis: Great examples and helps dive into OO pretty well. - "CLR via C# 3rd ed": I still don't understand most of this book, but I'll get there. - "JavaScript The Good Parts" by Douglas Crockford: Fantastic JavaScript book! Simple and comprehensive. - "JavaScript &amp; JQuery", "HTML &amp; CSS" both by Jon Duckett: A little too introductory for me, but it covers a lot and is a great resource for client side coding. - "Code" by Chales Petzold: A fantastic laymen read on the history of code by one of the industry's foremost experts. I feel strongest currently in MVC and reading code. Most of my time has been front-end, so I am pretty confident there. I'd like to improve my understanding of machine language, C, IL, the CLR and back-end computing. Designing web apps from the ground up is another area I'd like to improve on - how to do architecture "right", designing API's, database optimization, caching etc... in ways that have just the right amount of abstraction.
Do they have a list of namespaces on the page? I use it a fair bit and have never seen a page with that.
Could you tell us some examples of problems in programming (e.g. you couldn't solve something or you couldn't get your head around something) you have experienced during your learning process? 
There's no list of namespaces, but they do have a list of topics along the top. MSDN is probably your best bet for that. You can always use it as a resource for topics to look into on other sites.
The adjusment has been interesting. I've found that most of the skills I had as a scientist were very transferable. Learning through experimentation is an absolute must in software development. Writing and executing code is a trial and error endeavor and you have to be okay with failure and move on. It took me three days to find a simple JQuery error. I had no idea what I was doing and didn't know JavaScript. I was pretty much just adding and removing code and testing it to see what would happen. Learning code is like that. When you don't know what you are doing, that's when you are learning. I still break stuff all the time. The teaching skill--that hasn't transferred well so much. I suppose if Stack Overflow was still new, being a teacher-type would get me lots of rep, but I missed the low hanging fruit questions over there. Jon Skeet has said more than once that he feels like a teacher... I've also found that teachers tend to be a lot more co-operative than corporate people. In the business world, especially in coding, I found my peers respect me a whole lot more if I deliver results quickly than asking a bunch of questions. While peer coding sounded good in theory, I have yet to work at a place that did it effectively. There are a lot of arrogant prima donnas in this field - at least they come across that way (said the noob programmer on the team). As a teacher I want to gather coders together and inspire them to solve a problem together or work on something in a very collaborative way. Although tools like git help with this, the individual effort of the developer, I've found, is a very solitary one. I still haven't figured out how to bring in co-operation into this new career, and God help me if I think I want to go into management to do that...
The hardest time I had was earlier on. The concept of OO and how computers handled data was completely alien to me. I understood logical operations, but thinking like a computer was tough. The biggest hurdle in my learning was wrapping my head around what Getters and Setters were and what they did. For two days I obsessed over Get and Set. I didn't understand what an object was, that there was this box in memory that contained a value (or not). It blew my mind. I had to read about pointers, memory management, and what the hell null was and what values were. And in the context of a class I couldn't understand what the difference between a field and a property was because of this very concept. I had the aha! moment when I realized that properties are "gateways" to fields and that's where the getters and setters can access those field values. All the other challenges I've faced have paled in comparison to the initial hurdle of the basics. The next biggest problem for me was understanding Inversion of Control. I added a new class to a project and a Unit Test was failing. My colleague told me, "use an interface". I had no idea what the heck that meant. The idea of having an abstract object in the code that represented something only at run-time - that blew my mind too. Now I think of interfaces as contracts - that helps quite a bit. Other big challenges were debugging strange behavior in IE8 (or forcing a desired behavior to work in it).
One of the toughest challenges, technically, was to ensure that 1 and only 1 unique identifier would be generated for people in our system, worst case, someone would die. It was a medical system. We were using Entity Framework at the time and I was never convinced I could absolutely guarantee there would never be a concurrency issue with generation. I even tested it successfully with 100,000 hits, but I couldn't guarantee it, so I switched to using a stored procedure that would lock up the table and increment the id seed. A sloppy fix I suppose, but I am certain no one will die from it now. :)
Which is a fucking shame really, I'd love to be able to get some of my libraries working on Xamarin.
I agree -- it took a lot to convince myself to invest money into them. At the end of the day, I realized they're a relatively small company and that they can't cater to low/non paying customers for economical reasons... here's hoping they grow (or microsoft buys them) so more devs can help grow the platform.
That I couldn't say. I learned up to C# 4.0. also. Off hand I don't know of any books for catching up on the new versions. I've been meaning to watch pluralsight vids (disclaimer: I'm a happy paying customer not a rep) on the matter, they tend to do a pretty good job on comparing versions.
&gt; I don't think you can call yourself a C# developer and not have this book. Hopefully this is just hyperbole.
I hear what you're saying, but they've been around for more than 4 years now and seem to be getting bigger all the time. I'm pretty sure they've done the research and run the numbers time after time after time and have come to the conclusion that the tiny number of free to paid converts isn't worth it when some of those will pay for the product anyway if that's th option. Unlike Microsoft, Apple or Google, Xamarin derive their entire income from mobile dev tools. I think sometimes the software development community can come across as a bit entitled. Name me another business that you could set up that will allow you to sell your product to millions of people for $25 a month. There really aren't that many. If developers don't want to charge for their apps, fine. But, that's their choice. Xamarin is a business, not a charity. They have employees to pay, offices to rent, cloud services to maintain and products to develop. From what I hear their business is doing pretty well, and I tend to agree with them that they don't have a great deal to gain from giving their stuff away. It's already free for students, free for open source developers, discounted for small businesses and startups etc.
And as above, you're doing wrong if you're using result in this way.
I don't know WPF, so I can't help you there. But have you set a breakpoint on the first line of atkBtn_MouseUp and actually verified that the code is being reached? If not, is MainWindow actually being reached? If you don't know how to use the debugger, I recommend that you take some time to learn it before you do *anything else*. You must step through your code in a debugger in order to see what's really happening. If you don't do that, you can't even know if you're asking the right questions. It also seems like you're confused on static vs instance fields. You might want to read up a bit on that. Good luck!
Yeah, a bug frustration has been not having the debugger to see if the click event was even firing or the variable was updating at all. Took a break, I'll tackle it again later.
Why not just use an auto incrementing id in SQL? 
You are never seeing the UI update since this check is always false: string addShow = Player.display; if (Player.display != addShow) At that point both values should be equal
Practically, probably. But I was paranoid about this one and considering I was (and still am) pretty green with this, I wanted to be able to have a solution that I could tell my boss I was 100% certain would issue unique IDs. I've read that there is a chance, albeit a ridiculously small chance, you can get duplicate GUIDs under heavy load in .NET. Think about this in a medical setting. Two patients come into two different hospitals at the same time. Both are unconscious and have no id's on them. If the registration system is under heavy load (extremely doubtful - okay near impossible), and if *somehow* both patients end up having the same ID, then there is a chance that wrong treatment could be delivered and a *chance* somebody could die. As ludicrously slim the odds of that happening are, I was just too paranoid about having a solution that was only 99.9999999999999999................% guaranteed. 
It is so you can avoid unnecessary saves, etc. I translated the[ sample on MSDN](https://msdn.microsoft.com/en-us/library/system.data.datarow.hasversion%28v=vs.110%29.aspx?cs-save-lang=1&amp;cs-lang=csharp) from vb.net to c#.. private void CheckVersionBeforeAccept() { // Assuming the DataGrid is bound to a DataTable. DataTable table = (DataTable)DataGrid1.DataSource; DataRow row = table.Rows[DataGrid1.CurrentCell.RowNumber]; row.BeginEdit(); row[1] = Edit1.Text; if (row.HasVersion(DataRowVersion.Proposed)) { if (object.ReferenceEquals(row[1, DataRowVersion.Current], row[1, DataRowVersion.Proposed])) { Console.WriteLine("The original and the proposed are the same"); row.CancelEdit(); return; } else { row.AcceptChanges(); } } else { Console.WriteLine("No new values proposed"); } } 
Console.WriteLine() just writes a newline to the console. You want Console.WriteLine(item)
You have to tell WriteLine what to write: Console.WriteLine(item); WriteLine will print whatever you give it and then a new line. If you give it nothing, it will just print the new line.
The original code is basically saying this: If condition is true, return true. If condition is false, return false. The new code is basically saying this: Return condition, which will return true if condition is true and will return false if condition is false.
Yes. Yes, you were an idiot. But here's the secret: regardless of our experience, we all are still idiots from time to time, missing obvious things. For example, just this week I've spent five minutes trying to figure out why my changes would not show up after rebuilding the web project, only to realise I kept loading a build that was running on another machine.
Are they open source libraries? If so you can possibly get a license for compatibility work. Message me if so and I'll point to form. 
&gt; $25/mo/platform isn't too bad for an indie developer It wouldn't be *if* I could use Visual Studio. Needing to step up to the $83/mo plan to use it is where they lose me. I'm sure they have their reasons, but I hope that changes some day.
I agree definitely. What's REALLY bad isn't that it's $83 a month...it's that stepping up to that plan requires the entire $1000 up front. They could at least offer it for monthly payments. Wanting the $1000 up front kills it for me. If I could plop down $85 per month or something, no contracts, then I'd be in. $1000 is a bit much for something I may use for a month and decide it's 'not for me' and move to other options. I've done their 'trial' version with their crappy IDE and it's well, crappy. If I could try it out with VS, then I might subscribe.
I finally got it solved. With wireshark I was checking the handshake signatures between the server and client. When the Client said hello, it used SSL3, the service responded with handshake failure and with a signature of 0x301 (TLSv1 SSL3), so I removed this line; System.Net.ServicePointManager.SecurityProtocol = System.Net.SecurityProtocolType.Ssl3; and all things just fell into place. It didn't ofc help that they don't follow the RFC for TLSv1 (where it should downgrade to SSL3) but that's a diff issue which I've informed them about.
For the hell of it, here is an alternative way to write this with LINQ: aString .Split(',', StringSplitOptions.RemoveEmptyEntries) .ToList() .ForEach(Console.WriteLine); Or to avoid the .ToList() call use the Array.ForEach() static method: var parts = aString.Split(',', StringSplitOptions.RemoveEmptyEntries); Array.ForEach(parts, Console.WriteLine); Which is particularly frustrating to me for not being an instance method on Array (or at the least an extension method). :)
Ugh...
I am also a self taught C# developer and I had eggs for breakfast this morning...AMA
I think this article misses the point. `TaskCreationOptions.LongRunning` creates a new thread in part so that you can avoid starving the ThreadPool. Given this, the wording &gt; But when an async method reaches an await for an uncompleted task the thread it’s running on is released. When the task is completed the rest will be scheduled again, this time on a different ThreadPool thread. That means that we created a new thread needlessly. is misleading. We created a new thread for a good reason: to avoid clogging up the ThreadPool with very long-running tasks. If you didn't want to do that then passing `TaskCreationOptions.LongRunning` was a mistake, but that doesn't change the fact that it has valid uses.
Ah, you're referring to the case where `await` is used *inside* the task which was set to long running? That's valid, but was not clear to me from the article. Re-reading it carefully I see that it is implied by &gt; An often suggested workaround is to go back to Task.Factory.StartNew, which is perfectly fine for synchronous delegates (i.e. Action, Func&lt;T&gt;), however for asynchronous delegates (i.e. Func&lt;Task&gt;, Func&lt;Task&lt;T&gt;&gt;) but it's kind of hidden! Perhaps some code samples explaining exactly what you're referring to (i.e. `Task.Factory.StartNew` running an async delegate, same with `Task.Run`, etc) would help.
If you do more than a single thing at once (i.e. one during the other) we call this concurrency ([even if it uses only a single thread](http://stackoverflow.com/a/10495458/885318)). If the thread doesn't have any more to do the thread is released. For example this piece of code: Task.Run(async () =&gt; { Thread.Sleep(1000); await Task.Delay(-1); }); Will take a thread from the `ThreadPool`, keep it for a second with `Thread.Sleep`, create a task that will never complete with `Task.Delay` and then be released back to the `ThreadPool`.
Great! MVVM is a good pattern for apps because it separates business logic from the UI in a clean way. It's a complicated process for a beginner especially, though, since it requires you to divide up your app in specific ways and learn more complicated aspects of XAML like data binding and commands. Honestly I'd focus on learning effective C# and features of that and XAML with the setup you have working now (hooking events directly up to ui elements, accessing ui element properties directly like when you do goldText.Text = "blah"). It's not "modern best practice" but there's nothing really *wrong* with it. Unless you are planning to release *this* app as something for others to use, I think that's probably a better first step than trying to understand the nuances of MVVM already. If your plan is to make some kind of game then MVVM and XAML won't really be a good fit anyway, they're great for traditional "apps" but if you want to make games using C# then Unity is your best bet IMO, and for that you'll mostly want to learn C# and the Unity APIs. Up to you of course. As I said in my last post I'm happy to try to help you along if you have questions I'll just have limited availability in the next few days since I'll be out of town and I'll just have my phone. 
Eh, security by obscurity isn't really security at all. And this obscures a pretty minor thing.
Haha, yeah, rereading that line I'm not sure why I used !=. I think I had meant to simply declare an empty string variable. Either way I waaaaay over complicated it in my frustrations and broke everything even worse than I had already broken it earlier in the day. Heh. Everything's working out as I intended it to now thanks to the insight from /r/csharp :D
Wow that's cool, thanks for contributing to the community!
I'm not sure what you're trying to say about the thread release. The asynchronous work isn't being done on the calling thread, it's asynchronous, it doesn't need a thread. The thread was already released when the asynchronous operation began. If you're referring to calling an async method and not awaiting it then sure, the thread is still being used and so is running concurrently with the asynchronous operation.
Wanted to debug a section of code where I thought the bug was, but for some reason my breakpoint wasn't getting hit. What the fuck? After 15 minutes of rebuilding and copying my bits... "Oh, I should probably attach..."
No. [There is no thread](http://blog.stephencleary.com/2013/11/there-is-no-thread.html).
looks like a fun read, thanks.
How could they police that though?
A good dozen prototypes would spark everyone's creative minds.
isnt migrating as easy as installing the runtime? what are the issues?
I call this the another-pair-of-eyes principle. I've been programming for 20 years and still value the feedback from guys on my team with 2 years experience.
check out servicestack for things like this. makes it soooo easy
&gt; too lazy to write them writing unit tests *is* the lazy way. refactoring year-old untested code is a grueling and laborious trek through anxiety.
If I were in charge of Xamarin I would never go down this route. It seems a crazy way too I try and generate a profit. Think how much more work will be involved just finding out who is making money. Lots of apps are given away for free which would mean Xamarin wouldn't get any money at all for the hard work they've done. This debate comes up too often and it's always people failing to understand that Xamarin is still a small and young company. The product really isn't that expensive if you use the indie version. If I didn't have a business license already then I'd probably get an indie license if I were starting out. Sure you can't use Visual Studio but the alternative for delivering a native app is to learn Java and Android Studio for Android and objective-c and Xcode for iOS. I'd rather use a language i know and a new idea which gives me the option to upgrade to VS later (if my app is a success I'll be able to afford the license fee)
VS is a professional grade IDE. Xamarin have given you a cheaper option but without all the bells and whistles of VS support. You can choose to use Xcode and Android studio both using different languages if you want. Or just use a new IDE and a familiar language. 
It's a Java thing. They may have picked it up that way.
Oh god, I had a guy that wrote these all the way down to the *actual* database. Then he argued that it was the correct way to write them. I said oh really? Then fired off the Jenkins build and it attempted to run the test suite with a 1% pass result. *slow clap*
Who? Who makes such a ridiculous mistake? 
http://up-for-grabs.net/#/
you can contribute to Mozilla projects. They have lot of projects including coding, localization and so on. 
Look for any any open source project in C# on google. DNN is a good community. Go to their website and see wether they are needing some help.
Yeah, I get that they're a small company. So was Unity3d when they were starting out. Just to be clear, I'm not asking for a free license. I agree that the indie license is reasonably priced. And if that came with support for VS, I think they'd have a lot more customers. That would mean more money for them.
Last migration we did, from 4.0 to 4.5, wound up being a surprisingly large pain with dependent libraries. 
Each save game could just be its own SQL lite database and you select which one you want to load...
Go for something you actually use (to keep you motivated in the long run), dig into the sources, learn their style and how it works (abstraction, not every detail). If you made id that far, question yourself what your commitment would be.
Great to have knowledgeable people step up to help Voat grow. 
But who would then buy the business edition? I can't see companies buying Business if they can use VS with indie. I also think a lot of people who say "give us VS as indies and we don't ask for support" aren't being truthful as the first problem they hit they'll say "we're paying customers". It seems to me that people want a premium product at a lower cost. I'm happy to pay $1000 for developing iOS apps with VS. I can make they back very quickly. If you're developing freeware then perhaps you should be looking at alternative?
Microsoft makes it money from Windows and Office. Xamarin makes it from dev tools. It would be a terrible business decision to give their product away for free to everyone. I think Xamarin do want as many people using the platform as possible. They've given students free licenses, created Indie and also created the Starter edition. They are potentially going to keep giving away more and more whilst doing this slowly to ensure they don't kill the existing money maker (I assume business licenses). If you've not been a super long time user then you wouldn't know that they used to offer that you only paid at deployment time. They killed this and I can only assume because people were only buying the one or two licenses to ship rather than being honest. I'd rather they focused on hiring engineers than auditors. I'd rather pay for my tools and know that money goes towards making it better than get it for free and if / when I do pay have it go to a team of lawyers 
&gt; But who would then buy the business edition? Any business that's making decent money off their apps. These are the same people that buy pro versions of Visual Studio, Unity, etc. &gt; I also think a lot of people who say "give us VS as indies and we don't ask for support" aren't being truthful But those same people would already ask for support. Except they'd want support with both the platform and Xamarin Studio. And I suspect there's more bugs with XS than with VS integration. &gt; I'm happy to pay $1000 for developing iOS apps with VS. I can make they back very quickly. If you're developing freeware then perhaps you should be looking at alternative? Exactly. And if mobile was my main target, I'd probably be happy to pay for the pro license too. Thing is, there are a lot of people that either are unsuccessful making apps or, people like me, who want to make mobile apps for random things, for fun, as companions to web sites, etc. For these people, mobile isn't their main target. 
&gt; It would be a terrible business decision to give their product away for free to everyone. I get that. And again, to be clear, I'm not advocating for them to give it away for free. I think the indie license is reasonably priced. But no VS is a deal-breaker for people like me, who aren't trying to make their living off of mobile apps. And I get that Xamarin has their reasons. I really do. If that's how the numbers work out, OK. On the other hand, I know several developers like myself that would probably buy in at the indie price if VS support was included. And I suspect there's a lot of us. So, I feel inclined to point that out from time to time when the topic of Xamarin comes up.
If you are trying to build a scalable and reliable solution, you should use a database. Especially if you want to program professionally in the future - it will be good practice and a learning experience you can use. You shouldn't need to wipe the database for each game, you just need to design the database schema to store results of each game/competition. Put some thought into how you would design the db schema, the tables, and relationships. Databases are designed to handle large amounts of data, inserts, updates, queries, etc... So don't worry about the db's performance. Reading files off of a disk and trying to serialize/deserialize objects is going to be a bigger performance bottleneck and is a premature optimization (that won't really optimize anyway). Look at using SQL Server Express, instead of SQLLite. You will find that C# will play better with SQL Server. Also, like you said, generally you won't bring in the entire data set from the db. You just read the records that you need (the teams that are competing), perform your operations (simulate the game), and save them back. With a text file, you don't really have that option, you pretty much have to read in the whole file to find the records you are looking for.
Any project that demonstrates knowledge of: * Object oriented programming * Design patterns * Architectural patterns (MVVM for WPF) * Databases (Entity Framework preferred) * Asynchronous programming * Network programming
Really great advice. It's easy enough to find yourself feeling bored and altruistic on a weekend, but it may be hard to keep that momentum to want to contribute going on. That all said, I think mentoring is pretty cool. You can find it personally and locally, or you can contribute online. I always find it amazing how much I learn when I teach others.
Christ, probably at least 50% of software developers couldn't name a single design pattern outside of singleton.
Thanks this, looks like it will be helpful. I need to do some reading up on this! With the datasets, how is this persisted once the application is closed? so that it can be retrieved at a later point? 
If you want to do something client/server oriented with a central server that keeps track of all the games you use a database like I described. One database would hold all the games/matches/tournaments/players. Having several databases would just be a source of error. I only play quake live so I'll use that as an example. iD software that makes quake live has a central database that holds all players' info. It also holds all matches that was ever played, both active and finished matches. It holds information on what clans users belong to etc along with a shit ton of statistics about hit/misses/deaths/maps etc. All the players use a client (the game you install) that connects to iD's central server to get a list of current game servers. Please note that the servers that hosts the matches and the central server that holds all the information of the users and games are very different things. When a match is stated the game server reports to the central server who is in the match and what kind of match it is (ffa/duel/CA etc). It then continuously reports who leaves the match and who connects. Once the match is finished it reports the final score to the central server. The game server holds no information beyond the current game. Everything is reported to the central server and the central server can shut down the game server and whatnot. The game server and the client doesn't have a database. Only the central server and that database holds information about hundreds of thousands players and matches. If this is something that is similar to what you want then you can use a similar approach. Regarding where to start and if it should be flat file/database/xml file/json/whatever is a matter of your specific requirements and what you are already familiar with. But if you plan something that has multiple clients doing things simultaneously and they need information about other players I strongly suggest you use a database. Or you would have to switch to a database half way through when you realise that your flat file solution doesn't hold up any more. Databases are build around the ACID principle (read up on it if you don't know it) and saves you so much headache in the long run with handling concurrent writes and file corruptions. But if you are not familiar with databases before it will take some reading up to do before you get it right. Handling concurrent users is hard and databases are built to handle exactly that and a whole lot more. 
Thanks again for taking the time to respond. Client/Server is probably not what I am looking for here. The game is intended to be a single player application which gets installed on the users machine and contains everything to play on that machine. I just need to be able to handle multiple saved games on that machine. 
Assuming you are creating a WebAPI project hosted in IIS with ASP.NET 4 you should be able to just serve the content right up. I'd create a content folder and put the .js in there and away you go. If you are using OWIN you'll need to set this up yourself. More up front work, but I think you'd be happy in the long run you did it. Here's an example similar to how I've done it in the past - https://rniemand.azurewebsites.net/host-web-api-and-static-content-using-owin/
So, an ASP.NET website? 
http://stackoverflow.com/questions/1381821/how-to-toggle-switch-windows-taskbar-from-show-to-auto-hide-and-vice-versa
It's like MongoDb?
Sql Server express would be a better option. You could create yourself a database, programmatically, for each save game you'd like and use it to store the current state of your game. Don't concern yourself with files, don't worry about saving changes to the database, SQL server will do that for you. All you need to do is connect to the correct database and read/write the data as you need to. This is not the same as conventional "save files" though, as that would imply the ability to load a particular game from any of the available saves, however what you could do is tell sql server to "backup" the database, creating a '.bak' file that you could choose to restore at a later date.
Don't know why you're getting downvoted. "Design patterns" and giving them names was something that came about after my formal education. I find them useful to explain what I'm doing to someone else, but I've never found them particularly useful as templates to try and fit my logic into.
I'm getting downvoted because this sub is obviously closer to academia than the real world, by real world I mean the vast majority of software development that is getting completed on this planet in exchange for currency. I've been working as a developer for 12 years now and the vast majority of my colleges could not name more than singleton and perhaps factory as being design patterns. Again I would not discourage anyone from learning them, I am not saying they are not useful, I am not even saying that it's bad for a junior developer to have knowledge of them. I'm simply poking fun to some degree at the academic nature of these sort of forums that hold software development to far higher standard that is common/realistic in the world of software development. I would never expect a junior developer to know design patterns. All shops are different, and some are really really strong on architecture, code "quality", cutting edge tech etc. The vast majority of shops are not like that, at least in my experience. BTW I put quality in quotes because quality is a term that can mean different things to different people.
Don't get me wrong, it doesn't mean a junior developer should know everything about design patterns. It means that he is aware of their existence and is TRYING to apply them where appropriate. These requirements are not something a junior developer should KNOW, it's something that is cool to show in your portfolio in order to get employed and that's exactly what OP asked.
The easiest (though possibly not the absolutely cleanest way) is to simply include your front-end code inside your web api project. Your index.html (or equivalent, based on your host) would sit at the root of your project file, alongside your classes/web.config/startup.cs/etc. I'd recommend then housing your front-end specific content within it's own folder in the project (for example; "Client") and ensuring your references within the index.html are updated for that path. Provided your routing has your web api on anything other than "/" (for example, the default of "/api"), your host will pick up the index.html at root and serve your Angular application from it, with no other work required.
I do not really see any use for this code? You can already see your build info and a lot more within VS.
Afaik, it's using Microsoft s built-in jet blue db engine - esent. I think it was used in Exchange and AD in general. .net wrapper for it can be found here https://managedesent.codeplex.com/
WPF. Look up things like balloon window. You can easily tie in events or timers to check for updates in APIs like email or Twitter or Facebook for stuff that would then throw up a window in the corner of your desktop or wherever. Super easy to do. 
I don't think you need a template, but you should probably create 2 separate projects, so you can deploy your front end separate from your API. Yes, they likely will go on the same server, but better to separate your concerns. You may put a blank www or other such folder in the WebAPI project to deploy your front-end code into, but don't co-mingle them during development. Publish your API and then use something like Gulp to build your front-end code into the publish folder where you published your API project. 
Thanks! I think I'll probably just go with this. 
There are places when you can download assets like https://www.assetstore.unity3d.com/en/
A follow up question: It seems like people don't have a lot of expectations for junior developers, OOP and a project seems to be enough. How come in almost every online job posting there is a huge list of qualifications, like knowing front and back ends, SQL, &lt;insert technology&gt;, it seems like there is a huge difference from what I see people say online and actual job postings. I feel confident that I am more than good enough for junior level position but at the same time when I read job postings for these positions it seems like I am way behind. So how does the real world actually look like? Should I just apply and hope that I don't bomb the interview?
My best drawings consist of stickmen so I was concerned about that, I'm a long long way away from creating any real game, but I just didn't want to go through all of this only to end up needing to spend thousands to hire a graphic artist to actually be able to play it. You do have a good point though, I may be putting too much emphasis on it. 
I've actually worked for a company like that but it was a small business. They had a website built in Java (not even with a framework) and their IT department just quit, all of them. They tried to throw on me senior level development job + sysadmin responsibilities and didn't want to hire anyone for more than 40K to do it all, including help desk. So I guess it's more common than I thought. That's unfortunate. So I am guessing the best way to approach this is to apply everywhere and see what they actually need during the interview? It's hard as it is to find junior level positions, everybody wants senior level developers. 
I wonder about using this when the top three links on your sub are about people migrating away from it.
It seems that you have experience, so why are you seeking a junior developer position? It's very common and it will become even more common. Do not apply everywhere, this is one of the common rules you will hear from people who own companies (I attend conferences often). No one wants to hire a junior who is willing to work anywhere. When company hires you as a junior, they are prepared to lose money on your training in order to polish you just like they want. If they think there is a chance of you leaving after you are ready to generate the profit, what's the point of hiring you. They want someone will work for them preferably, more than 10 years. Be passionate, don't apply somewhere you don't want to work.
I didn't mean to imply that I wish to work anywhere, just apply to various organizations and try to filter out those who are not willing to train junior developers but instead trying to fill in position for bargain price. I have experience but not in .NET web stack. I did custom Java "framework" and mostly HTML/CSS, plus Wordpress maintenance. I have experience with Rails and other technologies but I don't have a project to show for it plus I am not a CS degree holder so I don't feel confident enough to apply for anything beyond junior level stuff. I'm currently going through "Pro ASP.NET MVC 5" which I really enjoy and planning on publishing a web app that I had in mind for some time. Once I have it done I think I'll be more confident to apply to some of these jobs. Mostly, I don't know anyone in this field so I have no idea what is required and how things are. Company I've worked for was really dysfunctional and their Web/IT department was ran by a soccer mom who just happened to be with company for 20 years.
The lead IT staff (who actually knows the requirement needs) tries to communicate this with IT management who then tries to communicate this with the HR department to eventually post the position online. Also consider that a company may overstate the requirements of a position to eliminate those who are not confident enough in themselves to apply even though they don't meet the exact requirements. The last time I had a job that I was "qualified for" was back in '97 frying chicken for KFC. If you want a job - put together a resume for it and apply. Ignore the requirements. The worst thing that will happen is they won't interview you for a position. Confidence goes a lot further than skill.
with json.net you could deserialize as a JObject. I don't remember the exact syntax you'd use to navigate to what you're interested in, but simply deserialize it into a JObject and look at what it gives you in the debugger and you should be able to figure it out.
Data Contracts https://msdn.microsoft.com/en-us/library/jj870778.aspx
It's also possible to make a lot of the game before you have to worry about art. Use primitive shapes like boxes and spheres to represent things in your game as you prototype it. Later, once you figure out how to get some art assets (either by making them yourself, buying them, or finding a teammate), you can just swap the assets out with the final ones.
You can also deserialise to a dynamic.
With RestSharp I'm fairly certain the deseralizer will just dump the fields that don't match when creating your object. Just depends on how much the data you haven't defined in your class matters to you. https://github.com/restsharp/RestSharp/wiki/Deserialization You can also just get everything. https://github.com/restsharp/RestSharp/wiki/Getting-Started 
I think they have moved away from that in the latest version. They created their own distributed file system which now functions as the low level storage mechanism for RavenDB.
Will you be participating in the blackout? 
First of all, it is very country dependant question. However, active github porfile(any languages) would be a great plus.
I work alot with valve code - and much of it isn't pretty, and has problems. (But some parts are awesome though)
I don't think you're missing anything. This was probably a decision made by a front end developer who's never worked with a strongly typed language. 
iPackCardsCreate(); not iPackCards Create(); change your function too, all one word
Yeah while your comment is in no way helpful (telling me I'm doing it wrong does me no good unless you're prepared to tell me how it's done right as well) you'll notice that I had figured out earlier how to do it right if you read the comments: User u = await response.Content.ReadAsAsync&lt;User&gt;();
Thanks for all the help guys, I de-serialized it into a jobject and then navigated downward and that seemed to work. JObject json = JsonConvert.DeserializeObject&lt;JObject&gt;(jsonString); var asdf = why["result"].First.First.ToObject&lt;POCO&gt;(); Where Poco holds all the attributes I need.
/r/gameassets - free assets /r/gamedev - Game dev community r/gamedevclassifieds - classifieds for game devs
Side note- That looks like steam api output. There are existing c# api projects, usually open source. Worth looking at, even if it's just to see how they solved it.
Make a game about stick men! 
Yep. Looks pretty much like most Unity C# code.
i suggest taking a step back and learning a bit of c# so you can digest this
Only one link is actually about switching away, and that was for a product using the embedded mode and shipping to clients. Either way, I don't know of any database that has a 100% approval rating.
I would go with something like public bool IsControllerConnected { get { return Input.GetJoystickNames.any(); } } and then another function for identifying the actual controller.
Because the code is intentionally indexing into a possibly empty array, and then if it *is* empty, catching the exception and saying "yup, it was empty, must not have any controllers". A better way of doing it is to just check, "is the array empty or not?" An aside: all by itself, this honestly isn't a *huge* deal. The code is probably only run once at startup, and the performance hit will never be felt. *However*, teaching people this is an acceptable way to do things is such a bad idea, I'm sure the rest of the book is not worth the time it takes to toss it into the gutter. Edit: Oh, also, it's catching *everything*, which is a terrible practice. You should explicitly catch what exceptions you expect.
The code itself is bad, but the explanation that GetControllerNames throws an IndexOutOfRangeException really took this from eye rolling to gutter toss. 
It doesn't sound like OP is making a server game, so SQL Server is the wrong choice. You'd need to install it on every computer that wanted to play the game.
It's openness is both it's greatest strength and biggest downfall. It has such a low entry-level requirement that basically anyone can use it; but in order to make something actually decent you need to know what you're doing. Unfortunately, a lot of people end up releasing stuff that is complete garbage.
Ohh! Ok, thanks!
That would require you to check the input object each time this property is used. Given that the GetJoystickNames method is probably only meant to be used on startup, you'd be better off using a backing field to store the result if it's needed later.
Well, I'm seeing these in the top 3 spots. * Migrating from RavenDB to Cassandra (aaronstannard.com) * In Octopus 3.0, we're switching from RavenDB to SQL Server (octopusdeploy.com) * Would I use RavenDb again? (jeremydmiller.com) [I actually clicked this one and he's talking about how they had to migrate away and musing about whether he'd ever use it again in the first place] I don't know, it's certainly looked interesting to me. Certainly I'd love to have a real object DB and not fuck around with EF anymore. But it costs (I think a significant amount of) money and then checking out the community I see everyone talking about bailing.
It doesn't. Edit: whoever's downvoting, you're an idiot. The method does not throw, indexing the result does. Edit 2: quite a few idiots, as it would seem. :)
true, but then you have to check GetJoystickNames anyway, or some other Unity function. I've never used Unity, so I can't really offer much debate, but I tend to go for simple code first, and then optimization when I find that things aren't as performant as I'd like.
&gt; Oh, also, it's catching everything, which is a terrible practice "Whoops, out of memory, there must not be a joystick connected."
Funny, I haven't used Unity much either. &gt; simple code first, and then optimization when I find that things aren't as performant as I'd like. Good rule! 
There's also no reason for IdentifyController() to be called within DetectController(). It should be called after DetectController() if there was one detected.
OP digested it. Then he got indigestion.
That's not a singleton. More like lazy evaluation with caching. The singleton pattern is when an object is only instantiated once and that single instance can be globally accessed. Can use `Lazy&lt;T&gt;` for an easier way to do this.
You should write a review, no way should that stay at 4/5! Also apparently the guy has been programming for 10 years. I've been programming for 2, I mean wtf has this guy been doing? 
Just because I have a washing machine doesn't mean I don't put any effort into avoiding spills and stains on my clothes.
It covers all the basics needed to program. Please do specify why you consider this as bad content. Otherwise you have no ground to state your reason. Keep in mind every programmming related subreddit recommends constructive feedback.
What the fuck. So much for "exceptions for exceptional situations". You don't need to raise an expensive exception for this. THIS is the sort of shit I keep talking about but I usually get butthurt downvotes from /r/gamedev for pointing out how fucking shit and atrocious Unity is. The fact that you HAVE to use public FIELDS to be able to use the editor is a fucking joke. It literally encourages bad programming practice. Edit: It's fucking atrocious I'm being downvoted for pointing out the obvious. Have a bunch of Java guys started brigading the sub?
Wouldn't it be better to only call `IdentifyController()` if there is a controller to identify? If you *know* there are no connected controllers why would you call a method meant to identify them?
I suggest taking a step back and learning decent programming practices so you can digest why this was posted.
Uh, this isn't Unity's fault. It's the programmers. https://www.reddit.com/r/csharp/comments/3c7f26/hoping_to_learn_a_little_game_dev_i_picked_up_a/cssyvsp
Correct, the last part of my comment tried to cover that, but I may have not been clear enough.
&gt; The fact that you HAVE to use public FIELDS to be able to use the editor is a fucking joke. You can serialize it cunt. [SerializeField] private bool seven = true; 
I saw part of it, if you know some programming its not bad, you won't be a programmer by watching it but if you are only brushing up your skills its useful
You're right. I edited my response 
Blames `Input.GetJoystickNames()` when he's the one indexing the result without checking it. Classy.
Yeah but... less.
And this is what I mean about butthurt. Perhaps if you are so good at it you should go corre the the documentation and terrible tutorials?
And this is what I mean about butthurt
I think `EnumConverter` gets special treatment internally. Edit: [Looks like it](http://referencesource.microsoft.com/#WindowsBase/Base/System/Windows/Markup/TypeConverterHelper.cs,355).
Hmmm, good catch, thank you! Another issue im having is that: [TypeConverter(typeof(FlexEnumConverter&lt;PressStateEnum&gt;))] presents an exception while in design mode, but works just fine when i compile. So for every FlexEnum type, i have to inherit my converter with just an empty class public class PressStateConverter : FlexEnumConverter&lt;PressStateEnum&gt; { } and use the nongeneric TypeConverter [TypeConverter(typeof(PressStateConverter))] just to get it to work in design mode. is there any way around this? i tried to use ITypeDescriptorContext.GetService(...) which also only works when i compile.
"expensive" indeed. I saw a process that was running to completion in seconds go to minutes to complete because a new developer used exception handling as control flow logic, as in the example. I rewrote her code to check for the exceptional case and the process ran as normal. This isn't just bad practice because it reads funny. It effects performance.
Honestly it depends on what you define as hobby, do you want to make games for yourself? If so then just crank out some crappy looking sprites or models and be done with it, you'll get more satisfaction seeing it all moving around anyways. If you want to distribute the game then work with an artist, don't pay them, just do it for fun. Make sure you have a working prototype done, they'll be happy to work on a game you have pretty well programmed since they know people will actually end up playing it, that get's their name out there. The most important thing with doing art for a game and programming at the same time it is to ask yourself the question "just because I CAN do art for this game, does that mean I SHOULD do art for the game?". That's my advice, hope it means anything to you :)
I was offered an opportunity to write a book on Unity shaders. If I wrote a book on shaders, this book would apparently be my equivalent (okay maybe Im being a facetious). So you know what I did? I turned the offer down! Easy. This guy looks like he either didn't when he clearly should've OR was like "I need money, this is eaaaaaasy"
I never thought about the fact that they may help for fun if I already have it programmed. I definitely shouldn't do any art for the game myself, lol. My hobbies are more or less learning things, I haven't thought far enough ahead to decide whether I want to just do it for me or distribute it. 
Are we out of memory? IsOutOfMemory() returns *true*, *false*, and *FileNotFound*
Instructions unclear, no joystick connected.
Can't establish a connection to server. Server must be on that disconnected joystick.
You're not null-checking the returned object from GetJoystickNames - can still throw an exception if the result is null. In C# 6 you could do this (I think): isControllerDetected = Input?.GetJoystickNames()?.Length &gt; 0 ?? false; 
That would be really hard to do as by my knowledge unity didn't exist 10 years ago. 
[I am as surprised as you are.](http://answers.unity3d.com/questions/474716/unity-3d-releases-history-with-release-dates.html)
I stand corrected sir
you may laugh, but ["Fancy Pants Adventure"](http://images.jayisgames.com/fancypants.gif) was a hugely successful flash game that even got ported to the 3DS
as for any type of work, I wouldn't expect anyone to do work completely for free if you plan on commercializing the end product if you just want to do it for fun, I'm sure you will find someone who would like to work on the game with you for free, but if you end up making money with it, as an artist I'd feel exploited in any case, you can ask around in r/animation
&gt; BreezeJS I expect it would, although it's up to the developer to implement the mapping across to whatever data source you are trying to connect to Breeze.
Well technically you can connect it to anything. You just can't use absolutely any LINQ statement with it (although that's a limitation of pretty much every single LINQ data provider, to different degrees).
Put configuration into a base class. Each company's configuration inherits from this. Load it up based on a setting in a configuration file. Use SlowCheetah and its transformations easier. If you really need to ensure that company ABC and XYZ don't get each other's code when you deploy you could split each of their config into a separate DLL which wouldn't be deployed to them. You could just as easily define build configurations saying "when I picked ABC release only build Config.Abc.dll" I think the #1 priority would be making sure when you compile locally for company ABC you know that you didn't break XYZ too. with the compiler options you have almost no way to run consistent builds let alone unit tests. Wiring this up to a CI would be an absolute nightmare. 
http://mahapps.com/ Really cool themes.
Thanks! I'm glad there are some out there, and I like that they have new controls there as well. But I have a huge disdain for metro themes in desktop application, I just hate the look. Do you know of any non metro styles out there?
They have plans to put desktop applications into the Store?
Dekstop applications are already in the store. https://msdn.microsoft.com/en-us/library/windows/apps/dn726767.aspx
When I say desktop application I'm referring to Winforms or WPF apps. I don't think those are considered a Universal Windows App that are found in Windows Store
I just want to clear up that in my answer when I say "distribute" I didn't mean monetize, I more or less just meant put it out there for people to play, definitely don't exploit an artist's hard work for your gain haha.
Just a side note: EntityFramework contexts are designed to be **short lived**. Caching the context is **not** a good idea. Especially not if you modify any date and call `SaveChanges()`.
Approach 1 - Procedurally generated graphics - use math/fractals etc to generate neat graphics ( example, I made this planet using fractal noise: https://scontent-dfw1-1.xx.fbcdn.net/hphotos-xfp1/t31.0-8/894057_600036543405556_2070788765_o.jpg ) Approach 2 - Make a game with simple graphics. Gameplay rules, use a nice looking line art or simple art and don't worry about the graphics (example from a nice android game: http://images.pocketgamer.co.uk/FCKEditorFiles//screen03.png ) Approach 3 - hire an artist, or buy art assets 
You don't have to make a new database for each save game. You just add a "Game" table with ids and then tables storing data about a game also store a column referring to which game it belongs to. 
I've been out of C# for a few years and that sounds pretty cool. Really miss working with it :P
My original requirements where to call a different method with different parameters according to company ABC or XYZ. I think App.Config (and SlowCheetah) fall short to implement such behavior. Build configurations on the contrary allow me just that, inplace, and I can test both just my changing the Build combobox. Quick and easy.
VisualStudio's build configurations are not a hack -- the're a feature. Bottom line, the OP is just a tutorial to configure them. How you *use* them, depends on you.
That's why i did it this way. Recreating the context for each database request would render change tracking more or less useless. I think one of the problems regarding entity framework is, that it's design is increasingly geared toward web development and less towards desktop-apps.
Hmm, as usual I think asking the question has led me to the answer - rather than having a thread spinning around each client, as each client connects I should be creating a new task that loops calling "await client.networkstream.ReadAsynch" on just that client. Then the Task system can handle creating however many threads it thinks is ideal... 
In terms of performance there's pretty much nothing you can do. Rewriting it using something like Dapper will give you an order of magnitude in terms of performance. But you lose all the goodies that make your life easy in EF.
I'm currently not using a transaction to load the data. I use dependecy injection so the data is fetched when it is required by my models.
You should also consider the relations between the entities, nut just the total number of them. EF has to build the model when it spins up and it can get bogged down. It it's not too much trouble, you could try to create a new data context for a specific part/small subset of the application and see if it brings anything worth while to the table.
you are running into model caching, not view generation I suspect. This dude has a fork of EF that supports it. Use at your own risk :-) https://github.com/davidroth/entityframework/tree/DbModelStore
&gt;I'm being downvoted for pointing out the obvious. Have a bunch of Java guys started brigading the sub? You're being downvoted because you're wrong. The method doesn't throw an exception, array access into a zero-length array does. Also, you don't have to use public fields to be able to use the editor, there's a SerializeFieldAttribute that is common knowledge among Unity devs. Maybe you should actually learn C# and Unity before you bash either one.
Yep, Scott Allens videos are the best. + 1 for Pluralsight. I think MVA has some decent ones as well from Bob Tabor, but they are pretty basic.
Thanks for the information !
I would take a look at serializing to JSON. Json.NET makes this easy with the creation of custom converters.
wait...how does source control work great with this? either all your projects are in the same repository or you are doing some magic with submodules. Like, what happens if someone needs to make a branch from one project that includes a change to the CommonLib? Do you branch EVERYTHING or do you rely on each project being part of one super repository?
I'd say the opposite. I've found MVA gives you a good oversight, but perhaps not good enough knowledge to put to immediate use without further research. C9 tends to have videos from conferences, in which they're maybe OK for students but are typically aimed at people in the workforce. Though C9 does have a lot of other content too (like the series linked above, which is clearly targeted at beginners)
There's probably someone that does it different, but usually it would all be in the same repository, so that you can rely on the relative paths being the same for each developer. 
Code Cracker is a open source project that aims to create a free alternative to ReSharper: https://github.com/code-cracker
&gt; I've had good success with a hybrid approach where I manually deal with the performance intensive sections, like reading from the open socket in your scenario, and then packaging up the remaining (generally slower) work into tasks to be handled by the dispatcher. Could you elaborate and provide an example of this? It's interesting, but I can't wrap my head around it with such a short description. 
I feel like I would fail all of your code reviews for the next year
I switched to WPF when it was first released, about 9 years ago!!! Never regretted it. Once you start to understand the power of XAML, databinding and styling... you'll see Winforms as the piece of antiquated technology it really is. More relevant to your question however is the fact that "styling" is one of the major strong points of WPF. You can easily modify or even replace the entire visual style of every control. This goes far beyond anything you could achieve with Winforms (And you don't need Blend to do all this) There are themes out there, but I don't think you'll benefit much from them. (http://stackoverflow.com/questions/260098/any-free-wpf-themes) Depending on whether or not you like the so called modern ui, you can try this: https://github.com/firstfloorsoftware/mui It's not just a theme, but more something like a small framework on top of WPF. When you take the time to learn WPF, what you're really doing is learning about XAML. And XAML is becoming more and more important (again) since it can now be used for WPF applications, Windows mobile applications, universal apps, Xamarin Forms, etc... I started out by reading "WPF Unleashed" (SAMS), it's a good place to start, even today, so many years later. And that's the best advice I can give you: "Take some time to read this book, then decide what you want to do" 
You need to think about what you mean by "high performance". Are you talking about purely reading from the socket, responding to clients, etc. Also, you need to think about your protocol which can have a huge impact. Is it a binary format? Is it delimited or length encoded. Personally, I would just use IO completion ports directly, since that it's what is happening in that readasync call anyway and you can better coordinate things. 
I second this. Does knockout work with windows universal apps/html?
Unit of work and transactions are two completely different concepts. With Unit of work you are not doing "database stuff", you are doing "object stuff" and that stuff is then transparently and automagically translated into database changes. This is one of the core concepts of ORM mapping. If you are thinking about backed database when working with ORM, then you are doing it wrong. Database doesn't even know there is anything happening. Transactions on the other hand are purely database construct. They are sent to database and its database who decides how to handle commit or rollback of transaction. So you can't really compare those two.
Doesn't your code that has a using statement hide resource management from the code that calls it? Do you put a using statement around that too? Is it using statements all the way out to your boundaries? At some point you have to introduce an abstraction or you'll bog down really quickly as soon as things get even slightly complex.
I did see that in my research. The override has to be individually created based on all the objects properties each time you want to do a comparison of this type. I was more looking for something a little more... generic :P
Are you suggesting that /u/ThunderCatsBro just guess their way through C#?
Well... yeah, if you want to consider two things that are not the same to be equal then you'll need to define how you want that equality check to work. At a push you could create an EqualityComparer that uses some reflection to go over public properties of your objects and checks equality that way. You generally want equality checking to be as quick as possible though, so I really wouldn't recommend that approach. Just suck it up and write the code to do the check. If you have ReSharper it can generate that code for you based on what things you want to use for the equality check.
&gt; Transactions on the other hand are purely database construct You can have transactions outside of a database context, though. (In this case it's a DB transaction so your point stands, but generally there are other types of transactions)
Profile your application and with that find where the slow downs are. WIthout profiling, anything is just guesswork and you might overlook an obvious thing that makes your app slow. (EF is rather slow, but not that slow)
I had a positive experience using http://codecentrix.com/. However it only works on IE.
I'm using learnvisualstudio.net, but it's a paid training site. The guy that makes the videos is a heck of a teacher.
We know that programming is full of abstractions. The question is which level of abstraction is acceptable to the developer and the organization. There's little doubt that NHibernate's Session (used to implement the Unit Of Work pattern) is using the System.Transactions namespace under the hood, because it has to in order to commit changes to the database in an atomic manner. And it likely has a using block or a try..finally block to guarantee the transaction is committed or rolled back in the face of exceptions. If using an ORM to do this for you is what you and your coworkers are comfortable with, and it solves the problem in an efficient manner, go for it. But sometimes you have to operate at a lower level of abstraction because your ORM is hiding [critical need to know information](https://www.youtube.com/watch?v=3xeHPdm7e-Y) or is doing the wrong thing. And that's not wrong - it's what you have to do to get it to work. 
Unfortunately the sample code was an extremely simplified example. The real code has multiple large classes :)
With no offense to OP but if he has issues with equality comparison it is probably better that he stays away from structs. 
As far as I'm aware the correct (?) way to do this is to reference the [IEquatable](https://msdn.microsoft.com/en-us/library/ms131187.aspx) interface and do a compare on the objects properties that you want to compare.
If you're comparing the properties, you could just go if (objectOne.a == objectTwo.a &amp;&amp; objectOne.b == objectTwo.b) The problem is when you have 15+ properties and need to do it with 10+ classes :p I was hoping to not have to re-do the same thing 150+ times :)
I agree with selenium. It's great.
Why exactly do you need to have custom equality methods for all of your classes? Just wondering if there's perhaps something you can do differently so it's not needed.
Doing a multi-terabyte database migration / convergence from two different instances of SQL Server that each use a slightly different table layout, each with corresponding classes for each of their tables. For the most part though - Class A of Table A in DB A and Class B of Table B in DB B (Different instances of SQL on different boxes) - Each table has identical column names / data types, although some duplicate data exist (A partial merger a year or so ago), and data is moving from DB B to DB A - Need to check if duplicate entries exist.
I ran into a similar issue when dealing with ActiveX. The website used ActiveX to launch a new window and every API and Application I tested wouldn't recognize/detect the new window. Worse, it wasn't immediately apparent why the new window wasn't being detected, I had to trace a fair amount of JavaScript to find the ActiveX call. I ended up using C# to call an ActiveX wrapper. ActiveX can manipulate IE, parse the HTML, fill out forms, click buttons, and so on. It's also difficult because ActiveX can throw errors that will cause the entire application to crash or simply not return what you expect. Try/Catch wont save you if ActiveX crashes. The Visual Studio COM references are SHDocVw and MSHTML. I don't know of any good tutorials for this stuff, but let me know if you need some help getting started.
Download Resharper and you can have it auto-generate equality members so you wont need to create a massive 15+ property equals compare for 10+ classes. You can get a 30 day free trial. https://www.jetbrains.com/resharper/documentation/help20/AdvEditing/generateEquals.html
 &lt;Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event"&gt; &lt;System&gt; &lt;Provider Name=".NET Runtime" /&gt; &lt;EventID Qualifiers="0"&gt;1026&lt;/EventID&gt; &lt;Level&gt;2&lt;/Level&gt; &lt;Task&gt;0&lt;/Task&gt; &lt;Keywords&gt;0x80000000000000&lt;/Keywords&gt; &lt;TimeCreated SystemTime="2015-07-03T18:57:51.000000000Z" /&gt; &lt;EventRecordID&gt;247922&lt;/EventRecordID&gt; &lt;Channel&gt;Application&lt;/Channel&gt; &lt;Computer&gt;[redacted]&lt;/Computer&gt; &lt;Security /&gt; &lt;/System&gt; &lt;EventData&gt; &lt;Data&gt;Application: Experiment.exe Framework Version: v4.0.30319 Description: The process was terminated due to an unhandled exception. Exception Info: System.InvalidProgramException Stack: at System.Configuration.SettingsBase.SaveCore() at System.Configuration.SettingsBase.Save() at System.Configuration.ApplicationSettingsBase.Save() at Experiment.Program.Main(System.String[])&lt;/Data&gt; &lt;/EventData&gt; &lt;/Event&gt; &lt;Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event"&gt; &lt;System&gt; &lt;Provider Name="Application Error" /&gt; &lt;EventID Qualifiers="0"&gt;1000&lt;/EventID&gt; &lt;Level&gt;2&lt;/Level&gt; &lt;Task&gt;100&lt;/Task&gt; &lt;Keywords&gt;0x80000000000000&lt;/Keywords&gt; &lt;TimeCreated SystemTime="2015-07-03T18:57:51.000000000Z" /&gt; &lt;EventRecordID&gt;247923&lt;/EventRecordID&gt; &lt;Channel&gt;Application&lt;/Channel&gt; &lt;Computer&gt;[redacted]&lt;/Computer&gt; &lt;Security /&gt; &lt;/System&gt; &lt;EventData&gt; &lt;Data&gt;Experiment.exe&lt;/Data&gt; &lt;Data&gt;1.0.0.0&lt;/Data&gt; &lt;Data&gt;5596daa5&lt;/Data&gt; &lt;Data&gt;KERNELBASE.dll&lt;/Data&gt; &lt;Data&gt;6.1.7601.18869&lt;/Data&gt; &lt;Data&gt;556363bc&lt;/Data&gt; &lt;Data&gt;e0434352&lt;/Data&gt; &lt;Data&gt;0000c42d&lt;/Data&gt; &lt;Data&gt;1260&lt;/Data&gt; &lt;Data&gt;01d0b5c221b3fc40&lt;/Data&gt; &lt;Data&gt;[path to]\Experiment.exe&lt;/Data&gt; &lt;Data&gt;C:\Windows\syswow64\KERNELBASE.dll&lt;/Data&gt; &lt;Data&gt;672919b2-21b5-11e5-a21b-b8ca3ad9dd6a&lt;/Data&gt; &lt;/EventData&gt; &lt;/Event&gt;
Selenium or WatiN. If you use WatiN, also install HTML Agility Pack. But Selenium should have everything you need. Selenium is pretty damn amazing. 
This is most likely true.
Then you're better off refactoring your code.
Thanks for the thoughts everyone. I've got what I think is a decent start. Code is pretty simple and multithreading is happening smoothly. Would appreciate thoughts/peer review: https://github.com/jackmott/galaxy/blob/master/GalaxyServer/GalaxyNetwork/GalaxyServer.cs 
As mentioned elsewhere, code generation is your best bet. It's *possible* using reflection, but the performance is going to be terrible and it's unmaintainable.
my apologies, I've since updated the original post..
No problem, I'll take a look at it. I've also updated my original post with a perhaps more easier way of reading/manipulating the data. EDIT: I'm still having trouble following the logic from the original XML you posted to the output text format you desire. In addition to what the generalized format should be, could you do a manual conversion of your sample input XML to the final text format?
Here's a link to a [sample xml file](https://drive.google.com/file/d/0B5g4caR4p-lxeDF1MW9MUHczRWs/view?usp=sharing) And [here's how the output should look like](https://drive.google.com/file/d/0B5g4caR4p-lxWkNZZ3RmYlBhX2s/view?usp=sharing) Sorry, what do you mean by manual conversion? My original method was traversing the nodes and then copy and pasting the values of the attributes I needed to excel for each product before then pasting to a text file.
If you're willing to build it in javascript you should definitely check out PhantomJS http://phantomjs.org/
How are you passing data from the form to your controller action? Are you using WPF or winforms?
This is the right answer. Get both sets of data on the same instance, different DBs, then use queries to compare and migrate data. 
Winforms. I'm not up enough yet to use WPF though I wish I were. In ViewToDatamodel() I'm doing what amounts to just the textFields.Texts and numberPickers.Values to the new cleaningSession data model. I have verified that it is definitely new and null throughout, until assigned. The primary key value is not changed by text fields though, so that the Guid is not editable. That's what makes this so confusing - there is nothing to change the guid. The new record is retrieved from SQL, brought into the view with DatamodelToView() and even saved properly (assuming that I fully dump the event list), otherwise only the first record opened is updated. For reference, here's how I'm flushing the event list: private void RemoveClickEvent(Button b) { FieldInfo f1 = typeof(Control).GetField("EventClick", BindingFlags.Static | BindingFlags.NonPublic); object obj = f1.GetValue(b); PropertyInfo pi = b.GetType().GetProperty("Events", BindingFlags.NonPublic | BindingFlags.Instance); EventHandlerList list = (EventHandlerList)pi.GetValue(b, null); list.RemoveHandler(obj, list[obj]); }
So my first question to you is... are you unsubscribing from the event when you delete cleaningSession? If not, then the event subscriber is holding onto the object even though you think you've gotten rid of it. In effect you're keeping a copy of every cleaningSession in the event subscription and the reason it's reverting to the first one is because that's the first one that subscribed. I'm betting if you pushed your debugger past it that you'd find the next call to be the second version.
Who would you hire? I need to know!
The concept that you're missing is that the subscription itself keeps a reference to the object, not that it's somehow being passed in by value. This is a classic C# memory leak scenario. You're also missing the fact that disposing of an object does not in any way, shape or form cause that object to be dereferenced by anything still holding onto a reference to it. Disposal in the C# world is meant to be used to clean up unmanaged resources (e.g. unmanaged memory, IO ports, etc.) It is not meant to be used as a way to say you're done with an object. You accomplish that by making sure that everything that references that object no longer does so.
We keep the common projects in a separate repository. Occasionally we will branch a common project and manually add the new branched location to a specific solution, but the goal is to keep differences in the common projects to a minimum anyway. As long as relative paths between repositories are consistent on each developer machine, which they are by default, there's no problem. (An advanced note on NuGet reference paths on build servers. [NuGetReferenceHintPathRewrite](https://github.com/jstangroome/NuGetReferenceHintPathRewrite) for the win on each common project.) Not saying you *should* do it exactly this way, but it certainly works well for us and avoids the dilemma posed by the original question.
I believe it's set for AnyCPU, but I'll give it a shot. The fact that it only fails on one system is the strangest to me. It's not even especially different. It's not a old, or new system, just middle of the road, very similar to another one it works fine on. I'm wondering if I just need to completely uninstall .NET and reinstall it.
I'm already on the job...
already did that. 
this is how it's currently set (the system.web section) &lt;system.web&gt; &lt;roleManager enabled="true" /&gt; &lt;authentication mode="Windows" /&gt; &lt;compilation debug="true" targetFramework="4.5" /&gt; &lt;httpRuntime targetFramework="4.5" /&gt; &lt;customErrors mode="Off" /&gt; &lt;authorization&gt; &lt;allow roles="FacultyBioPortal" /&gt; &lt;allow roles="Administrators" /&gt; &lt;allow roles="Domain Admins" /&gt; &lt;/authorization&gt; &lt;/system.web&gt; 
&gt; Use SQL. It's a much better tool for the job. I would if both databases were on the same server / same SQL instance versions :) One is 2005 and the other is 2008 - We're converging, then migrating to 2014 a bit later
my guess is to kill rolemanager element. if I recall correctly it defaults to using SqlServer and the connectionstring defined in the machine.config
Yup that did it. Now its not recognizine that I am a domain admin. so i tried Authorize(Roles= @"MYDOMAIN\Domain Admins") and its prompting me for my credentials however when i do Authorize(Roles = @"MYDOMAIN\Jewdai") things work just fine (even though I am a Domain Admin
I bet Domain Admins" would work
&gt; It has hover animations and such Please don't.
nope: [Authorize(Roles = "Domain Admins")] does not work 
You're being downvoted because you said: &gt; THIS is the sort of shit I keep talking about but I usually get butthurt downvotes from /r/gamedev[1] for pointing out how fucking shit and atrocious Unity is. When this isn't a problem with Unity. It would be like blaming Visual Studio for your infinite loop never stopping. It makes you look like you don't know how to code, it's overly aggressive, and this is /r/csharp so I'm not sure if you're lost.
Haha. It's not like spinning and stuff. All it does it change background colour
&gt; I would if both databases were on the same server / same SQL instance versions If you have the storage capacity on the destination server to migrate the 2005 data over, either as a backup or as an import to an empty database with 2005 compatibility set, neither of these are issues. If you don't have that capacity, look into SSIS Migrations. Worst case scenario if you must handle the migration from C# code, connect to both instances using ADO.Net and handle the migration with SQLBulkCopy. 
Cheers
WATIN is pretty easy. and powerful.
Based off your config, it looks like your roleManager element is missing the AspNetWindowsTokenRoleProvider provider, which allows authorization of AD roles in your web app. So the updated roleManager element would look like this: &lt;roleManager enabled="true" defaultProvider="AspNetWindowsTokenRoleProvider"&gt; &lt;providers&gt; &lt;clear /&gt; &lt;add name="AspNetWindowsTokenRoleProvider" type="System.Web.Security.WindowsTokenRoleProvider" applicationName="/" /&gt; &lt;/providers&gt; &lt;/roleManager&gt;
XamlParseException: B̽̾̅̽́̔̃̑̌̏͒ͨ̏ͨ̏ͣͧ̽̚͏͏̨͓͖̫͙̪̫̻̺̳͔͎͍̲̺ͅļ̶̡͎͓͉̞͍̪̟͍̩̳͖͓̖ͣͯͫͦ̽̾̒ͫ̃̚o̧̲̯͈͓̳͉̲̺̰̎̆ͨ͜͠͞ͅôͨ̍ͭͩͬ̾͒ͥ̋҉̝̦̞͙̘͇̠̟͜͡d̊̏ͮ̇̀ͦ҉̷҉̬̼̳̺̳̬͚̺͎̖̹̲̹̼ ̹̮̫̙̪̱͖̪̜̥̙ͩ̿͒ͪ̄̂̈̄̀̕͝͡͝s̥̮͖̗͉̺̗̲̳ͥ́̿̓͛ͧͦ͒͌̂ͣ̚͢͟͜͞͞ͅà̸̻̻̱̞̟̩̜͔͎ͮͥ̂͢͝c̆̆͗͑̇ͮ̽҉̛̳̹͈͟ŕ̴̡̟͈̰̰̲̖̹̼̱̣̤̜̖̗̜̒̽̆͛̑͒̀ͬ͛ͩ͢͞ͅͅi̶̸̷̛̹̭̜̼̱͍̼͔͚͖̗͗̄̒͒̊ͮͫ̉ͧ̆ͨ͗̔̅̿͜f̸̵̡͙͕͎̙̼̠̖̤̤͓̘̠͕̳͖̅ͫ̄̏ͧͬ̂ͧ̇̿̓̍̇̉̓ͅͅi̛̛͕̝͕̲͚͍͇̰̣̖̳͗̍̄̏ͧ̎͑̒͑ͦ̀̓̂̆́̚͜ͅċ̡̘̘̠̲͎̻̠̗̤̳̰̼̦̭̹̱̐ͪ͗ͤ͆ͤ̾ͦ͆̅̍̈͛̀͟͝͠ë̡̦̮͙̩͖̯̜͓͙̰͖̅̒̿̃̎́͢͟ͅ ̵̨͎̬̩̝̪̖̠̼̹̠̰͕̰̏ͤ̀ͯ͒̆̓ͮ̑̿̾̅̿̇ͯ́̀r̶̴̷̩̥͔̩͚̻̩̞͉̬͎͍ͭͪͯ̆̈ͪ̀̉̀͘e̶̶͚͈̻͔̙͉̪̝̬̥̻̹͈̠ͯ̐ͦͬͪ͢qͨ̾͆̋ͦ͋͐ͣ̃̒̒̉ͪ҉̴̴͖̣̰̥͉̭̘͎̼͔̰̺͉͍͘u̎̄͆ͧͫ͂̑̎ͥ͒͛͢͡͏͉̫͔̞͓̘̣̗̦̺̠͓̙͍̻̞͖į̵̙̼̗͕̞̜͈̺̣̣̦̘̖̤̹͌ͦͭ̾̏̑͊̃̕ȑ̴̨̥͕̮̼̻̪͚͕̹͚̠̩̦̤͈͉̟̔͂͊ͪ̈e͗ͨ͋͋̿ͧ̃͗̃̏̚͡҉̨̤̥̳͍̣̙̗̖̞̜͕̩̣̯͈̮̙̞͠d̶͔̻̱̤̺̯̦̦̣͇̤̊̈͗ͯ̕
Why not?
&gt;but right now they still have to get some things figured out Yeah, like their price plans.
Getting rid of the downvote button is pointless. People can just disable the subreddit style and it's back. Also, keep any styling light. Some sub's styling is garish and over the top and I disable it anyway if that's the case. I would say less is more for a sub such as this.
&gt; That being the case, and if you absolutely despise having to unsubscribe on one end, I'm thinking you could make use of another call-back, to be called by the class to be disposed, which enables it to unsubscribe itself from the event owned by the other class. I'm going to write that and use it constantly.
Do you know of any good tutorials to handle cookies with HttpWebRequests? I get all my transactions (and pending) from my multiple credit cards/banks with Selenium and sort them into a database, but I'd love to move over to a more headless setup so I could just schedule it to run a couple times a day in the background.
Assuming you're using WinForms, is there any reason you didn't just assign the context menu to each of your ListView's? Just set the ContextMenuStrip property to point to your ContextMenuStrip object and then you're done - your ListView's then all use the same context menu and you can handle the events from thereon in
Why not setup a local nuget server and then add the common library as a nuget package? Each project can add the nuget package as required and you can use nuget package versions to control which version they are using or require....
yeah, winForms i'm kind of old-school (c/c++ background) so totally ignored ContextMenuStrip. I literally instantiated the thing in the form constructor... And my sense of aesthetics forbid me to have 4 similar event handlers... will check the MenuStrip out, thanks
2015 is out in 12 days, and it's a free upgrade (for Community at least). I'm guessing no 2013 because it relies on Roslyn (edit: to clarify, Roslyn is integrated into VS2015 for code analysis which other VSIX may hook into; 2013 is still able produce code that uses Roslyn in a program, via the NuGet packages).
Yes, I use MTM (Microsoft Test Manager) and have been authoring automated tests now for a year, starting with Coded UI and DevExpress and now using UI Automation Framework (unmanaged). Firstly, automated tests are expensive to write and maintain. Each build / release has the potential to invalidate tests. For this reason automated tests are best combined with a semi stable product and used for regression purposes. If you have any specific questions will be glad to help. 
I've figured out how to do it. I'm doing it like this but ideally instead of having generic list of string. I want a list of students? so for example instead of list&lt;string&gt; i want list&lt;Student&gt; static public List&lt;string&gt; load() { string path = "Student.txt"; List&lt;string&gt; studentlist = new List&lt;string&gt;(); studentlist = File.ReadAllLines(path).ToList(); return studentlist; }
I dont think this is a job board bud.
It's okay and yeah that makes total sense but the good thing is you're more proficient than me. How would i split the line into a array? sorry if that sounds dumb
Someone told me to post here so I gave it a shot. Is it against the rules or something?
Since vb3. 
Payment range?
Thank you. I've used both your suggestions and it is working fine now. Ignore the bad coding a static public List&lt;Student&gt; load() { string path = "Student.txt"; var studentx = File.ReadLines(path); List&lt;Student&gt; studentist = new List&lt;Student&gt;(); foreach(var s in studentx) { var beforeandAfter = s.Split(' '); var students = new Student(beforeandAfter[0], beforeandAfter[2]); studentist.Add(students); } return studentist; }
Scott Hanselman did a short blog post about it (I'm guessing that's where you found this since he posted it today): http://www.hanselman.com/blog/VSRefactoringEssentialsFormerlyNR6PackFreeAnalyzersAndRefactoringForVisualStudio2015.aspx I haven't used it myself but it looks like it would be worth checking out once VS2015 is released.
Just link the servers, do the migration and then drop the link.
I dont know if its explicitly against the rules, but i do know that the people on this sub probably dont appreciate it.
Not sure you grasp why that I'm suggesting that given the emerging nature of Unity perhaps you can forgive the documentation being a little raw, instead of holding up every flaw for public ridicule.
If all the offers didn't sound like out right scams I wouldn't mind it. 
Visual Studio Step By Step is really good
I dunno, I think having things like resharper is great for new people because it gives you hints on best practices and shows you how to do it.
If you dont have Resharper, then this might be a good option (havent tried this yet so no idea). Other than that I recommend using built in [static Code Analysis](http://blogs.msdn.com/b/hkamel/archive/2013/10/24/visual-studio-2013-static-code-analysis-in-depth-what-when-and-how.aspx) in VS and [Stylecop](https://stylecop.codeplex.com/). These will guide and teach you write good quality code and avoid common mistakes (and bad "style" code)
I don't think that a novice need worry about best practice. My first year or two was far from best practice. Exceptions for those basic practices that need to be embedded early on, like indentation.
Its using Roslyn's build in refactoring support which is super easy to customize and add your own.
How does this sound like an out-right scam, please enlighten me. 
I don't know much about wages in Florida, but that doesn't sound like very much for a good C# developer.
Visual Studio and TFS. Single click pulls down or checks in the latest for every project in the solution, across repositories. I do agree. None of the libraries have 'Common' in the name, and they are split nicely, but they still turn into junk drawers if we don't maintain them. The biggest reason I like it is that I have extension methods and framework-type code that allow me to program much more effectively. There are some noticeable gaps in the base .NET framework.
I gotcha, thanks for the info, would $1000/week be acceptable for a good/decent programmer, as a starting point at least for a certain "probationary" period of a month or so?
Personally I hate custom CSS on subreddits. The site stops being consistent from one community to another and it's pretty confusing.
Are all of the words in your dictionary lower case? "down" will not match "Down" in a String.Compare.
Yes, all my words are lower case =\
I believe the preview of Roslyn could be used with 2013. No that it is production they removed 2013 support. At least that was how I understood it
I mean sure, but the issue isn't that someone capable hasn't done so, more that they don't think it's a big deal. 
How I code nowadays with Resharper: char, char, tab, char, tab, semicolon, enter. char, tab, char, downarrow, tab, char, tab, endline, enter. etc, etc... ctrl k+d. What it can do with linq statements is amazing, but to me the true beauty of resharper is the variable naming suggestions and the almost ai-like improvements to intellisense. My copy of VS at home doesn't have Resharper and i often find myself remoting in to work to work on my personal projects just so i can use it.
Sorry, but you are mistaken.
&gt; Goto https://news.ycombinator.com/item?id=649812 
If you just want to run code snippets, VS 2015 has "Interactive window" that gives you that (available after 20th this month) -&gt; http://blogs.msdn.com/b/visualstudio/archive/2011/10/19/introducing-the-microsoft-roslyn-ctp.aspx 
Another thing to consider is MTM is nothing more than a front end to TFS. The automated test definitions aren't stored in MTM but TFS. Without a) TFS b) a build server c) a test controller d) a test agent Automated tests cannot be run through MTM. However you could run automated tests through Visual Studio, Since you're already asking about MTM, I assume you already have at least VS Premium, which is needed to author these tests. About being time consuming. Writing the automated tests initially doesn't need to be that time consuming, but in my experience the so called "easy record and playback" mechanism doesn't work well at all. But for very crude tests I guess you could do this, and then edit the tests and add manual delays where the test fails at playback. If you go this route, there is minimal upfront coding. The real concern is not how long it takes to write 1 test, but instead how long will it take you to "fix" all the tests between builds. Let me explain. Suppose I have just 5 tests. Now lets say these focused on rapidly changing areas of the application. A test can either pass or fail. Let's say I was a good coder and avoided any false passes. 4 out of 5 of my tests failed, the reason is that the last update brought about new functionality, this functionality may or may not work, but the tests were written for a ui that's changed dramatically and the tests can't find the controls. Now I need to reauthor these tests "fix them". While I'm doing that I have to debug then, and run through the tests. Here it took me longer to reauthor these tests than it would have to test the whole thing manually. Now upscale this by 100, or 200, and you can see the problem. But if your application is not changing much and there are specific business tests you can write that have a longer shelf life, maybe 2 out of 1000 tests need reauthoring between builds as the product stabilizes. This is where automated tests can make your life easier. 
&gt; I'm guessing that's where you found this since he posted it today Thomas Levesque starred the repo on GitHub. He may found it on Scott Hanselman's blog :)
As far as I know, Resharper is far more complete than Refactoring Essentials.
I originaly paid for the "pro" version (at that time the only paying one) for autocompletion mainly. Since then I upgraded to the premium as a way to say "thank you", as they have been adding loads of stuff over the year, with a constant care to improve the software and with 0 bullshit behind. Also, support is great and fast (and provided by the creator of the software). I use LINQPad for so many scenarios that I had to install a windows VM on my work's mac to be able to use it (ok, I'm pushing it a bit, that was not the sole reason). Now, can you use only LINQPad free or an alternative ? Sure. Is it worth it ? I don't think so. If I had to pay for it today, I'd probably go for the developper version, just for nugget implementation which really speeds up things when you use the same libraries over and over or want to try new ones. 
Yes I agree! [direct link](https://github.com/jaredpar/EasyMotion) for the lazy
Definitely, it's a tool I use daily for testing out quick snippets and for querying databases in a nice way.
Definitely worth the money. Intellisense and debugging features are nice to have, but nuget package support was the buying point for me.
im not the only one that calls reshaper a smart ass :-)
Dammit. Updated my resharper license a few minutes ago &gt;.&lt;
Please link directly to the source, not to a poor YouTube video.
But does this support turning for loops into LINQ statements? Always been a very cool feature of Resharper!
I'm still a bit fuzzy on all of this. Does Code Analysis and Stylecop complement each other? I tend to use Stylecop a lot. What about FxCop too? Is that still a thing? How do I integrate it into VS?
Very very quick review for major points. Repeated issues not repeated in list. - Having spaces in folder names is very uncommon and should be avoided. - Don't commit `.suo` files to source control. They are user specific files. - Don't commit the `packages/`-folder to source control. These are build artifacts and are downloaded automatically on compilation. - Don't commit the `bin/`-folder. These are build artifacts that are.. well.. built automatically. - Hardly any code documentation. At all. - Inconsistent usage of blocks for single-liners. - `Form1` is a very generic name. Name it correctly. What form is it? And if it's just the main form, name it so. - Form1.cs, 26: Don't ask for credit in the **summary** description of your class. This belongs to a **license** file. - Form1.cs, 63: This constructor does **way too much**, and is way too fragile (can throw exceptions). Constructors should run and fast and should not fail. - Form1.cs, 112: Don't have nested public classes. Put them in their own files. If they're not needed anywhere else, make them private. - Form1.cs, 160: Inconsistent naming. Stick to one pattern. - Form1.cs, 289: Way too deep nesting. Split it up to multiple functions. Also, following ifs can be combined using the logical **and** operator `&amp;&amp;`. - Form1.cs, 388: Having and endless loop is poor practice. Instead of breaking out of it, have a clear exit condition (boolean variable). - Form1.cs, 411: Proofread your code. What's a `resualt`? - Form1.cs, 426: Magic strings in the middle of the code should be put to constants. - Form1.cs: This class is **HUGE** (in a very negative meaning). Split it up. Don't mix UI stuff and *business* logic. They should be in separate projects. - `Classes`-subfolder: Classes.. What kind of classes? You have a lot of classes. This name is meaningless. - Decipherer.cs: Static is bad, m'kay. You can't test this properly.. which leads to: - You do not have any test. At all. Start with unit testing **NOW!!** You'll thank yourself later. - FormatLeftTime.cs, 16: Consider using the `Humanizer` library that is available on NuGet. - FormatLeftTime.cs, 36: Don't have multiple classes per file. If I'd be looking for `Helper`, I'd definitely NOT look at `FormatLeftTime`. - Mp3ClanTrack.cs, 19: Don't use `IEnumerable`. Ever. You're not writing .NET 1.1. Always use the generic version `IEnumerable&lt;T&gt;`. - Mp3ClanTrack.cs, 19: ... Why implementing this interface in the first place? It makes no sense. (Again: Comments help!) - You're also mixing a lot of data classes (those which just should contain properties to carry data), and classes that proivde actual logic. Now I got tired.
ReSharper can do most of this. I don't think it has any search for your templates/snippets, and instead of some automatic cloud upload, you can just store the snippets in their own layer which is a file. If you keep that file in source control, it'll update whenever you get latest.
Thinkpad Carbon X1 if you do care about looking pro. If you think about programming a same as art, then go with macbook.
Package? You cant access it server-side, but for client-side access just use JavaScript.
[I don't think so.](http://vsrefactoringessentials.com/Features/All) nice feature indeed :)
CompSci student here. I use a Surface Pro 3, and I adore it. High res screen, really nice to use. Can't scream about it enough. Maybe have a look at that?
Should actually have the ability to have multiple library locations, gist, git, TFS, local dir, Dropbox, OneDrive etc. with sub-directories within the library. VS's snippets management is pretty weak, terrible when it's in SQL Server Management but I do like the .snippet XML format. Are there any other common snippet formats floating around?
Look into Dell latitudes. Awesome keyboard (better than current thinkpads), business support, great build quality.
&gt;I would go with mac book air but I work with visual studio so need to use windows. Macs have been able to run Windows for nearly a decade. You can do it in a VM, dual-boot (and both VMWare &amp; Parallels can run your VM off that partition, so you can dual-boot *or* run the VM inside OS X), or run Windows exclusively on the Air.
I use a MacBook Pro and just have a VM on it that runs Windows. Works perfectly. It has the added bonus of basically having the best trackpad I have ever used in my life. The only laptop that I don't like using a mouse with. Otherwise I would look at the Surface Pro 3.
Get a 12" or 13" Mac and install Windows via Bootcamp. The hardware is excellent and if you want to compile an iOS app in the future you can. 
I like using [.NET Fiddle](https://dotnetfiddle.net). It's also nice because it remembers what you did last without telling it to save.
Power cord is good and solid on mine. Only downside is the fact that it's heavy.
The code here seems to be alright, regarding your bug. The name "Tasker" implies you have multiple tasks running at once. Do you have anywhere another `Console.ReadKey`? They would block each other.
&gt; 4 hour battery life Wow.. That's really short.
Agreed. Also, since it's classified as a tablet, I don't have to get it out at security when I go to the airport.
It seems that may be my issue, it never dawned on me that they would conflict. Any advice on how to proceed? Thanks!