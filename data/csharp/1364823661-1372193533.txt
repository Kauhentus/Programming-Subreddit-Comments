Thank you!!!!! :D
Source? I've only heard the opposite?
Neat trick, shows the power of static analysis. I wonder though about Roslyn as I heard some key team members may have gone to other projects/jobs...
How does it compare to resharper?
The bottom line is still that it will get finished and be well supported. They can't afford to miss out on people extending the environment and doing static analysis this easy, it makes C# so powerful. If everyone can solve general problems and share it with everyone else.. that's pretty amazing
For the unbelivers, could you spend a minute explaining the benefit of ripping out my innocent lambdas into a function call? The example you show is surely better served by making a method that simply fetches books, a la "GetBookById()"? I haven't slept in a long time, I'm missing something. I'm very excited about roslyn myself, and kudos to you sir for giving it a whack!
Exactly my thoughts. For me, example just over-complicates everything. Can someone explain how it would benefit?
This has been one of my major dislikes about Lambdas &amp; anonymous methods is that they're leetle beeety functions, but without any possible reuse by other code in the class. 
Sure. It's a good idea because what are you going to do when it's time to change the logic from just getting a book by id to getting a book by id where enabled = true? Paste that three times? And then what if you add effective dates?... Even in a real world repository you could see how a lot of copying and pasting would go on. What if you want a list of books that satisfy that clause instead of just one item (kinda doesn't apply to my example) or you want to refine the clause further. There's a ton of power in moving around that expression. Any time you can reduce copying and pasting code is a win. Also, there are third party libraries like linqkit that can manipulate your expressions but they have to either be in a variable or as apart of an expression that returns a delegate or expression ( it can't be called right on the arrow syntax ). If you separate your main queries you can get benefit right away from such a library.
See my other reply in the same thread
There is still code duplication in the line `var _book = context.Books.Single(expression)` that is in each controller method. Since you now have the new function `BookIdEqualsid` that returns the expression, why not just type the `GetBookById` method that does the query on `context.Books`? Any complicated logic could then be added there. I do agree with /u/gleno that toying around with Roslyn in this manner is kind of cool :-)
Who else besides Lippert has left?
I'm guessing this one doesn't use 1/2 your system resources to show tons of useless crap in the code editor...
Try debugging it first; are you able to? There are issues with installing and uninstalling Roslyn plugins at the moment. 2 of my machines were hit by that bug :( Eventually the plugin just stops doing anything. You can actually attach a debugger to it via regular means. Take my project down, right click the RefactorLambdas project, go to properties, go to debug, and in the 'start external program' path point it to your visual studio install, should be something like C:\Program Files (x86)\Microsoft Visual Studio 11.0\Common7\IDE\devenv.exe Then you can debug :) I stopped trying to get it to work via regular means at the moment. Roslyn does not even support dynamic and iirc won't parse a file that uses it (among a few other features)... Wait until the Roslyn release for this to actually be of benefit in a production environment. 
Taking an assessment for employment... I want to cry. Someone hold me. Tried to even type 'static' into the field.....It does not let you leave if you do not answer the question. Test was riddled with horrible questions. I feel like I'm apart of an elaborate troll. It's a C# test specifically FYI even though it's not explicitly written on this page; not general programmer humor or anything. 
If the questions are as horrible as this throughout I would consider the company's application to have me as an employee a failure. EDIT: That said, I wonder if they were going for "null". In other words, you say "ClassName variableName = null" to avoid actually creating an instance when you declare a variable.
That's a hosted test from a massive company.. type the root URL in
But wait, there's more! http://imgur.com/RKiUGDX How about.. that enumeration has none of the values in the switch? D: They should be ashamed that people are judged by these. 
I'm really sorry, but this is *hilarious.*
That seems like the most likely answer to me, but the term "class declaration" is not ambiguous. They should have written "instance of a class" or "class variable" declaration at least.
I gave the company the benefit of the doubt on Q9. This one though, just wow.
That's the best part. The bug they *don't* mention, could be far more insidious (maybe not for C#, but if this were another language, oh boy oh boy.) Screwing up brackets might just mean you're coming from a different language (I think some Python implementations use round brackets, for instance.) But failing to see that **this** is not **that** can cause all sorts of problems.
Obviously you have to know [US football jersey numbering](http://en.wikipedia.org/wiki/Uniform_number_%28American_football%29#NFL), then you'd know that Quarterback==Eight, RunningBack==Twentytwo, OffensiveLineman==Seventy and WideReceiver==EightyFour. Sadly it checks out.
The answer is D. You will be unable to create an instance of the class that doesn't compile.
After my most recent job search, I have a new rule: No automated skill quizzes. Make me take a quiz, and I end the hiring process right there. The quiz I took was obviously written by someone seeking out the most obscure bullshit in the .net framework. Usually from some set of technologies that plays well in a demo in front of an audience of adoring fan-bois, but would never ever get used in a commercial product. 
They might have meant to say "... is used in an object declaration if..." and meant the answer to be A. 
I don't take automated quizzes either. I don't mind showing my portfolio, github account, share references, etc, but I won't do extra quizzes, I won't spend more than an hour writing an example program(s), won't pee in a cup, won't fill out both an application and send in my resume, won't pay for certification... I think freelancing has spoiled me beyond employability.
But you still can instantiate an instance with a private constructor.
In my case, I've been writing C# code in both high-availability and high-reliability products since .NET v1.1 came out. I have no interest in a quiz. Sadly, I don't do github/kiln because most of my code has been for-hire and I don't own it. My side-projects are *mine* dammit. I've met a lot of people who have gotten the certs, and I've resisted the urge to tell them that they were taken advantage of by Microsoft marketing. 1) It just shows they have good short-term memory, and 2) Everything on them is stuff that Microsoft wants to sell more of, and isn't necessarily anything that will help the customer reach market with a good solid product. 
Well, that's easy. The correct answer is **Leave Test**
This is the answer. EDIT: I say this because I so properly [sic] dispose of classes by setting them to null.
The answer is E.
So glad to read this. I've taken quizzes before and left scratching my head if what I was working on was really that out of sync with everyone else. 
You mean to tell me it's not C-Pound? 
Clearly it's C-NumberSign
Where I work we make the tests... We put obscure stuff in it not to see if the candidates know it, but just to see if they'll admit "never heard of it ? What does it do ? Oh, I use this to get that... Etc."
As an European I can only say : WTF is that ?
I prefer C-Waffle
I miss them every single day!
Goodness this man's website is not mobile friendly, haha.
As far as your ListBox error, I suspect (without seeing all of the code) that your ListBox does not have a datasource and when you call AddRange() you are calling it on a null object. A simple solution would be to initialize the data source with an empty list&lt;string&gt;. An example of this can be found at http://msdn.microsoft.com/en-us/library/system.windows.forms.listcontrol.datasource.aspx
I don't really know if the datasource is needed or not as it works anyway, but thanks for going through the effort of providing a solution anyway. It's fixed now, but still, a valiant effort, good sir! :D
For loops can be tricky for newer programmers for this reason. Next time try using foreach.
Apart from the -1 bug already pointed out, I think that's very tidy looking code. If I were code reviewing I'd raise a couple of minor points: * The m_ notation is a bit old fashioned now - people tend to use a single underscore or omit it entirely. * Concatenating strings with the + operator can get messy so you might consider using one of: String.Format("{0} {1}", row, col); String.Join(" ", row, col); instead of row + " " + col
Ye Olde C-Octothorpe
Did you edit your original post? 
A foreach isn't going to work with `int`s, they aren't IEnumerable: `public struct Int32 : IComparable, IFormattable, IConvertible, IComparable&lt;int&gt;, IEquatable&lt;int&gt;` The only other way of looping without using `for` would have been something like this: int row = 0; while (row &lt; numRows) { int col = 0; while (col &lt; numCols) { Debug.WriteLine("{0},{1}", row, col); col++; } row++; } Which if you ask me, seems more confusing than a for loop.
What exactly is the problem with string concatenation using the + operator? 
There's nothing wrong with a solid while loop. Good for the 'ol brain muscle. I was referring to using a foreach for the arrays, not the int.
Ah, fair enough. I missed the mark on that one. You can't beat a good while loop for logic though. Easier for a newb to learn than a for loop, that's for sure.
Personally I started off in languages like C and Java so for and while are both close to my heart. With that said, foreach is an amazing addition and I lean on it very heavily these days as I've come to seriously appreciate how well it cleans up my code. 
It really depends on your role and experience, but in general the tests are too focused on minutiae instead of actual useful details. That said, you're right that the training *can* have some value. However, my role was as a senior consultant so I knew most of the big-picture stuff from experience. On all three of the exams I took (WCF, ASP.NET, data access), I actually started by taking the practice exams and just focused on the areas that I did the poorest on. This mainly involved specific web.config settings... :| Most of the training materials "teach to the test", which means that you're not really getting a good overview of the subject so much as an overview of the fiddly stuff.
That is the only time I've ever used it, but I always find better ways to implement it. Still, handy to have for that 0.1% chance you may need it!
Yeah its definitely been a rare occurrence, I think the last time I used it was walking a doubly linked list. Which doesn't happen very often these days as I spend most of my time doing web dev.
I absolutely agree with you. CLR via C# is the best book I've read so far about this Language.
No? How so?
What you actually want to be looking into is file I/O and serialisation. You open the file in binary mode, write your data types out in binary into 512 octets so it's easier to determine the end of a row. Then read the entire file into a buffer and cast the bytes back to the data type specified in the header row. Start by reading the entire file into memory and writing the entire file each time. You don't need to "update" the file (computers cache and are fast enough anyways) save it for if you have extra time. There's not much low level to it. It's a pretty common practice to write binary files. If you want it to be a bit more low level I would do this assignment in C. 
i can't read the whole file nor i can update it or rely on cache etc. the assignment requires low level operations and that's why i want to do it like that. 
Okay, I decided to split that method since I realized I needed the array for other things. So first, I created the array and the matrix as instance variables: private string[,] seatMatrix = new string[m_totNumOfRows,m_totNumOfCols]; private string[] seatVector = new string[m_totNumOfSeats]; Then I split my former method into two: public void InitMatrix() { for (int row = 0; row &lt; m_totNumOfRows; row++) { for (int col = 0; col &lt; m_totNumOfCols; col++) { seatMatrix[row,col] = " " + row + " " + col + " Vacant"; } } } public string[] convertMatrixToVector() { int count = 0; for (int row = 0; row &lt; m_totNumOfRows; row++) { for (int col = 0; col &lt; m_totNumOfCols; col++) { seatVector[count++] = seatMatrix[row,col]; } } return seatVector; } I'm keeping the + operators simply because they work for the moment and I really don't feel like redoing that part. But thanks for the tips, I'll keep that in mind for the next project. However, I'm getting the 'cannot be null' exception on the following line again: reservationsBox.Items.AddRange(m_seatMngr.convertMatrixToVector()); 
Well, how would you form a foreach in order to fill up the arrays? I tried using foreach at first but I couldn't get it to work.
Thanks, I do try to keep my code clear. I use the m_ notation because, well, that's how it was taught to me. Also, I'm going to try the option you presented to see if I can manage it. Thanks again!
Yes, you can. If you curious about details you should read up on parameter passing, by ref, by val, etc. http://yoda.arachsys.com/csharp/parameters.html
You can use the [FileStream](http://msdn.microsoft.com/en-us/library/system.io.filestream.aspx) object directly to read/write bytes. I think that's about as low level as you can get. You can also use the [BitConverter](http://msdn.microsoft.com/en-us/library/system.bitconverter.aspx) class to convert types to/from a byte array for writing to the stream.
Are you referring to the Type class? Or an instance of a TextBox/Label? Example of passing a control to a method: private void button1_Click(object sender, EventArgs e) { this.UpdateTextBox(textBox1); } private void UpdateTextBox(TextBox textBox) { textBox.Text = "New Text"; this.SetControlVisible(textBox); } private void SetControlVisible(Control control) { control.Visible = true; }
This. Would just like to add that a great use for passing controls like a text box is extension methods. As an example you could have a hide and show extension method so that a textbox called txtName could be hidden by writing txtName.Hide() instead of txtName.Visible = false. Not a great example but makes for very readable code when used effectively.
Thanks to the both of you. Got it figured out.
C# doesn't really do low level anything. That's, kinda, the point of it as a language. It might be worth checking with the person who set the assignment to see exactly what they mean by low level io operations.
[Read my first sentence.](http://lmgtfy.com/?q=c%23+file+io)
What are these low level operations? All I know of is read from the file, write to the file. It doesn't get any lower than that! And where do you think you're going to read the file to? A buffer! So read the whole file into the buffer. Modify the buffer and write the buffer out to disk. If you want direct disk access bypassing the DMA controller you're asking the wrong questions and using the wrong language. 
The really short version I'd that you'll need to write a method in the thread that contains the control (I guess your main method) for editing/accessing the control, a delegate to call the method, a callback for if the method needs invoking and an invoke checker within the method you're going to call. This msdn article should be a good starting place for you http://msdn.microsoft.com/en-us/library/ms171728.aspx
Thanks but I think it's to do with the location because it doesn't seem to like saving in the temp directory. I'm just scanning through code on a previous project of mine to see what methods I have used
Remove the using() statement from the bitmap in your Fullscreen() method. You're returning a disposed Bitmap. You can leave the using around the Graphics object. Everything else looks good.
http://msdn.microsoft.com/en-us/library/system.diagnostics.process.start.aspx I think of those you would want to use this for starters: http://msdn.microsoft.com/en-us/library/53ezey2s.aspx For the button, in Visual Studio, double click on the botton and it should bring you to the right event.
Using System.Diagnostics ButtonClick function: Process.Start("EXEFilepath"); If you're looking for arguments and additional options, look up ProcessStartInfo object
Sorry had to switch accounts, But what if the person doesnt have the .exe already downloaded, what do i do then? 
What do you mean it gets to sound like a trojan?
google doesn't say anything about the sources quality.
~~How are you initialising seatVector?~~ Just had to scroll up a bit. Judging by your error message the convertMatrixToVector is returning a null value. Why don't you put a break point on the return seatVector; line and see what value is in there?
do you know any good books/resources etc. or is msdn good enough?
I usually find that MSDN is good enough. It has plenty of examples.
That works! Thank you very much
How do I add it to the Install package with c# express 210?
This was a good catch, I was looking at his code and couldn't for the life of me see this lol. (Which in hindsight should have been obvious :P)
I downloaded it, looks really cool. How long have you been learning?
... DeviantArt? 
Unless I'm missing something, I don't want to call it, I want to redirect and monitor another application that's using it. [Hook, not invoke](http://www.codeproject.com/Articles/27637/EasyHook-The-reinvention-of-Windows-API-hooking). 
I made a messagebox show me the value and it just says 'System.String[].'
I love reading articles likes this. I wish there was more resources on how to write better code as being a single developer it can be hard to know if your code is 'good enough' compared to everyone else.
The best resource on the topic of "refactoring your code to aid in unit testing" is the book "[Working Effectively with Legacy Code](http://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052)" by Michael Feathers.
I never really published the source but I still have it. I'm kinda new to this, so any recommendations on sites that I can use to upload it? I know all the general ones (github, sourceforge, google code, etc), but I'm not really sure which one to choose :\
At the time I wrote that program, maybe a few weeks or a month. I never really got into programming hardcore or anything and I stopped a few months after I started due to studies, but it's been maybe 2 years since I first started C#. The program is pretty much abandoned now until I get some random idea or epiphany. 
I'd say I have been learning about 2 years as well At the moment, I'm working on a project called ScrSnap where users can upload full screenshots to a web server, parts of their screen or whatever is in their clipboard I know there are programs out there that does that already but a project is a project 
Any of them will do quite fine. I think github is the most hip at the moment though. :)
AFAIK it's available as a CTP, which installs on VS2012. More info here: http://go.microsoft.com/fwlink/?LinkID=228400 If you look at that link, you'll find this: &gt; “Roslyn” is a long lead project which we are considering for the post-Visual Studio 2012 timeframe. I looked at Roslyn a few years back, but it's always been "in development", I'm sure it'll get released at some point.
I recall hearing about this a while back I think at a VS Live, they were saying it was going in VS2012 but its still a CTP. This feature would open up a lot of doors for integrated analysis tools and distributed compiling.
I think it's still alive and well. There's a couple of Microsoft people I follow on Twitter who keep mentioning something called [scriptcs](//scriptcs.net), which relies on Roslyn.
Uploaded! https://rct2.codeplex.com/ "Notes on commenting within the source: Commenting is very scarce except in the more confusing regions of the code - this is because it was unintended that the source code was going to be released. However, I will be adding more comments and descriptions to the code over time. "
I've heard that they're working on async/await support before they have all of the language covered. Small but important task.
This. Controls keep a reference to the thread they were created on, so this is the way I've typically seen non-UI threads interacting with UI controls.
Thanks for the tip. Looks like a great book :)
Cool! Thanks for pointing me towards that book. Looks like an awesome read :)
Kudos for making this into a useful thread!
You're using visual studio right? Put the cursor anywhere on the following line: return seatVector; Then press F9. You should see a reddish brown circle representing a breakpoint appear in the margin on the left. Start debugging by pressing F5 then when the code gets to your breakpoint it will break and you can inspect your variables. Either by hovering the mouse over them, or by adding them to the watch windows.
I'm using SharpDevelop, I tried using Visual Studio but I kept getting a licence error no matter what version of it I tried. Under the Debug tab, I can click 'Toggle Breakpoint' and the circle you described appears to the left of the return line. Is F5 a hotkey for Run in Visual Studio?
It's the start debugging hot key.
This. Frankly I'm surprised the compiler even lets you return an object declared in a using statement outside of the using block (without throwing a compile time error, I mean). One of the whole purposes of doing a using block is that the object's Dispose method is called automatically - hence why only objects implementing IDisposable can be declared in using statements.
/r/codereview
Indeed, or http://codereview.stackexchange.com/
 static void server_OnMessageReceived(object sender, ClientEventArgs e) { var client = e.Client; string msg = Encoding.ASCII.GetString(client.Message); if (client == null || client.Message == null) return; Console.WriteLine(msg); client.SendData("I heard you! " + msg + "\n"); } I suppose you aren't really asking for comments on the example code in the readme, but the null reference check on client and client.Message is a tad late there. (Edit: What is even a null Message? And isn't it weird that Client has the message? Isn't the Client valid both before and after the message is (valid)? Should Message have Client instead? Or ClientEventArgs hold both Client and Message? I have no idea what I am talking about, because I've just looked at the code above. But it feels a bit weird ..)
I second the suggestion of using a background worker if you are doing short amounts of work on the background thread (Downloading a file from the internet, copying multiple or large files, etc.) However in a case where the background thread is running the application and needs to update the UI based on certain events (Multi threaded server applications, applications monitoring hardware devices, etc.) then I would use a delegate structure similar to the first suggestion. Here are some examples: http://stackoverflow.com/a/661706 http://www.codeproject.com/Articles/52752/Updating-Your-Form-from-Another-Thread-without-Cre http://social.msdn.microsoft.com/forums/en-US/csharpgeneral/thread/30325b69-2e1a-428c-adb8-e22b4f16c4a7/ [EDIT: Formatting] 
Winforms or webforms?
I interpreted the question as being about dynamically loading controls and not creating custom controls. It sounds like he just needs different controls to load based on selections from other controls.
That first part doesn't need any custom controls, no. The second part definitely does. The first part isn't too terrible in winforms, you just execute a bunch of code when the selection changes that manually shows and hides things. It's way less code in WPF to get the same result though. Theoretically it should be more maintainable but the illegibility of xaml can quickly make a mockery of that idea (a huge beef I have with WPF).
I just turned this up with some quick googling: [MVVM: Tutorial from start to finish?](http://stackoverflow.com/questions/1405739/mvvm-tutorial-from-start-to-finish) MVVM is the architectural model that WPF is designed for. It stands for Model-View-ViewModel. The model is your underlying data (data base rows or whatever), the view is display part of the control and ViewModel is logic that informs your view what it should be showing. The ViewModel represents the state that the view is in. It determines this by looking at the data you're working with (the model) and by processing commands passed to it from the view. Ideally the ViewModel shouldn't care about or be able to see the actual control itself. You shouldn't ever have to push or pull a value directly from an instance of TextBox in your ViewModel for instance. The passing of data and commands between your view and ViewModel should be handled completely by data binding in the view/ WPF and MVVM are huge topic by themselves and some of it is a drastic departure from things you might already be familiar with, like winforms. It's mostly a huge improvement though and definitely worth making the time investment in if you're going to be doing more windows UI work.
Thanks for the help lukeatron :)
Erc Lippert mentions working on Roslyn in this post blog, dated Jan 21st: http://ericlippert.com/2013/01/21/nullable-micro-optimization-part-eight/
One thing I see right away is that your getters and setters are unnecessarily long since I think 2.0(?). Nothing incorrect, but you can really clean up your code. This: public TcpClient TcpClient { get { return _tcpClient; } internal set { _tcpClient = value; } } Can be replaced with this, plus you can lose the '_' variables: public TcpClient TcpClient { get; internal set; }
Is crallo the username on your friends computer or on your computer?
My friends
What do you mean hidden extension?
I can go either way on this. He isn't just using syntastical sugar, he is setting these properties up with private backing fields instead of using auto properties, which is a fairly accepted practice. It makes your code a bit more extensible and one school of thought is that properties should only be used to get and set data, not to hold data. That way, if additional code is ever added to the accssessors - say for validation or formatting - then you don't have to change any private methods that hit the backing fields directly. If an auto property was used and you later changed an accessor, you'd probably have to also refractor private methods that used them. In this case however, like I said, I could go either way.
My one concern is the blank catch blocks (I saw at least one in the client class). It kind if defeats the purpose of a catch to leave it blank, you are just swallowing the exception then when you should be handling or at least re-throwing it. If you have some specific reason for swallowing it I would add a comment explaining why, but it should be a really good, specific reason. Otherwise you can probably handle it better. As I recall, Tcp clients / sockets are also unmanaged, so it wouldn't hurt to toss in some finally blocks to clean up things where appropriate.
I might be under thinking this, but one easy route is to add all the controls in the designer but set them as visible false, then change the visible property when appropriate to show them. You also don't have to create controls in the designer - you can instantiate and layout controls programatically just like any other object (i.e., TextBox box = new TextBox()). You could base its starting position on mouse location or just about anything else. This is all the designer does - view the code for the designer file, it just creates control objects and sets properties based on the selections you make in the designer. With a little more event handling you can make your form just about as dynamic as you can imagine.
Are you using the full file name for the application? Like an App.config file is actually App.config.exe
I'm curious about XAML. Haven't had time to really look into WPF, but XAML seems like a good *idea*. What about XAML makes it so illegible? Is it like XML in general where readability is only gained through liberal (largely gratuitous) spacing?
It's dense and includes quite a lot of syntactical marks and repetition. Too many of the characters are completely ancillary to understanding what the code is doing. XML just doesn't lend itself to representing this kind of information in a human readable way. Combine that with the fact that IDE and designer suck major asshole with regards to WPF. The designer can't show you templated data while you're working on it unless you add a bunch of bullshit to the XAML, the ViewModel and often the actual data source. You generally have to run your application to see the impact of your changes, which can be a huge pain in the ass if you have to go through 2 dozen actions just to get to the point where the UI in question is available, then if you need to make some minor change, you have to shut it down, make the change, build, run and navigate back to your UI again. If you screw something up (and you will), most of the time you won't get any kind of warning at compile time nor will you get any kind of informative error message at run time. Usually you'll get absolutely nothing, just a blank space where you're control should be or whatever. Then it's completely up to you to figure out why, probably going through many iterations of the change, build, run, navigate, disappointment cycle. Conceptually it's a massive improvement over winforms. When things work right, it's great. It's way too fucking hard to maintain though, largely due to the difficulty to determine what the XAML is going to do at run time. Super handy IDE features like find all references and go to definition don't work with XAML. Data binding is all defined with strings so you don't get any refactoring support. Basically Microsoft had a good idea and then decided to not bother developing it all the way. I've personally talked to the people who work on that part of VS and they completely dismissed my complaints like I was just some asshole who couldn't possibly understand their greatness. They couldn't even admit that any of these things were problems. A bunch of smug pricks really. Still, all that said, it's the best tool available for the job. Just be aware that suffering is integral to it's use.
C-Hashtag?
Introducing? I've had this compiler installed for a month or two now? Android police covered it a while back. 
At €500 per seat, I'm not sure I see the advantage over Xamarin.Android. Looking at some of their [API documentation](http://docs.dot42.com/Reference/NS.System), it looks like their coverage of the Base Class Library only goes so far. For greenfield apps where you can build in usage of the Android libraries from the ground up, it may not be so bad, but porting over existing code written in C# sounds more painful.
&gt; dot42 is a commercial product that starts at 499 Euro per developer with the usual bulk licensing options. Haha, no.To much of that just trying to develop using Xamarin's.
The advantage, as mentioned in the article in the very first paragraph: "marshalling calls between it and Android’s Dalvik runtime can be expensive"
It was introduced to two other subreddits, but I thought the link should go here too.
I agree, it's pricey, but if you work for a company that is willing to buy a seat, it's worth a look.
Ah, sorry about that. Thought this was on /r/Android
Yeah, I would like to see benchmarks of similar apps written against Xamarin.Android and with dot42 C#, to show both that there is an appreciable difference (and in what circumstances) and what kind of speedup dot42 offers.
&gt; In the traditional approach what would stop us from calling the Mpg method before setting any of the other properties? Nothing. The "fluent" approach described in this post doesn't either. To solve this, you'd need multiple Car types - one on which you may call a certain set of methods to initialize the first properties, another to initialize other properties dependent on the first ones, and so on until a type that only has the method you want to call and is the only one to have this method. &gt; `if (car.Fuel = 30) // doh!` Yeah, that's a stupid mistake. Good thing the C# compiler doesn't allow you to do it. The only way this doesn't throw a compiler error is with a bool - you only get a warning (which is correct; the `=` operator returns its right operant).
You should try extension methods since they help a lot in creating fluent interfaces When I created FluentSharp I was very inspired by jQuery and its fluent APIs
I've done something similar with a database query builder. However, to enforce rules (e.g., you can't execute an update query until you've either added at least one "where" condition, or called the ApplyToAllRows() method), I use interfaces. It was a bit of a pain building the 13 interfaces I needed to enforce the rules I wanted. But I'd say it's worth it in the end.
Yeah multiple types helped me the one and only time I created a fluent interface. I was making my own test double which I wanted to be used the same way the Moq mocking library is used. Basically syntax looked like: myTestDouble.SetUpSomething().ToReturn(something); With a couple of interfaces and classes you can ensure a user must start from a particular group of methods (SetUpSomething first, no access to ToReturn) and then give them context specific options after each method call.
I've done a fluent API myself and in my case I managed to make it so that whatever methods you could call fluently, you would get a proper result. There where actually no calculations done as it was configuring something so its not quite the same case. In this case one way to handle it is to make Mpg() return a nullable int and return null if the car is not yet setup. But frankly its not a great example as a type initiator would work just fine in this case. Where a C# fluent API really shines in my opinion is with generics and Expressions. A better example would be a car component configurator which would allow constructing a car object out of a set of components and configuring each of those components. All strongly-typed and with no magic strings. Then you can have more complex fluent methods like car .SetupWeels(weels =&gt; { weels.Add(new AllTerrainWeels{ Size= 60 }); weels.Add(new AllTerrainWeels{ Size= 60 }); weels.Add(new MudWeels{ Size= 90 }); weels.Add(new MudWeels{ Size= 90 }); });
Try **D**ouble.TryParse rather than calling the method on the parameter. (**d**ouble)
I tried it here and it's working as far as the MessageBox part goes for me. One problem I noticed is that you will never get the value out of the ReadAndValidatePrice() function. The definition of price needs to be "out double price" or else your output won't change outside of the GetDouble() and ReadAndValidatePrice() functions. This next thing is more of a suggestion than anything, but consider setting the number style to NumberStyles.Currency and using a provider (in this case, make a new CultureInfo with the user's locale as the input) in the TryParse function. I admittedly don't know your requirements for the program, but it strikes me as a better and overall simpler way to make the program more robust without forcing any additional work on the user. (Edit) Also, in addition to that, I've heard it's also better to use Decimal instead of Double when handling money because of rounding errors. It's something to seriously consider looking in to if you're making this app for something other than educational reasons. Sorry if this doesn't answer your question.
I don't know enough about SharpDevelop to answer that question. But for the record, I used Visual Studio 2010 and the included compiler.
Do you happen to be running in a culture where the separator is supposed to be something else than what you're typing? Like '.' instead of ',' or vice versa? Try using Double.TryParse(Value, NumberStyles.Any, CultureInfo.InvariantCulture, out result ); instead?
Your message box will always show zero for the value because it only displays when `Double.TryParse` fails to parse the string to a number. What's your input string?
My bad, I misread.
Damn, I missed that. My input is simply this: string priceString = priceField.ToString(); priceField being a textbox. 
Tried the following line: if (Double.TryParse(stringToConvert, NumberStyles.Any, CultureInfo.InvariantCulture, out convertedString)) And I got a 'Does not exist in the current context' error on both CultureInfo and NumberStyles.
You'll need to add a using statement to import them. (Visual Studio has right-click -&gt; Resolve, not sure about SharpDevelop.) Adding "using System.Globalization;" to the top of your file should be enough.
... What string value are you supplying (what does the textbox contain)?
priceField.Text instead of priceField.ToString().
We switched over from winforms to WPF about 2.5 years ago now. We're on our 5th big project with it. Each time we've gotten a bit better at it. The first round time through was a mess and unfortunately we're still supporting it. We're using infragistics, but I'm pushing to get away from it. It's one of those things where we had pressure from above since it was already payed for. They are the source of so many headaches and weird ass impossible to reproduce bugs. I hate it so much. Another problem is the underlying architecture, which I wrote a lot of. The current version is better aligned to the winforms way of thinking. It's tightly coupled to our usually massive databases so it makes doing stuff with it at design time a real pain in the ass. I know exactly what needs to change but I haven't been given time to do any of the work (we're chronically understaffed). This coupling makes unit testing all but impossible. Management considers that a pipe dream though (re: understaffing) so hurray for bugs in production. Those are some of the fixed roadblocks I have to work around. All that said, I still think XAML sucks pretty bad. The resource resolution is a huge, huge problem. The designer has no mechanism to handle anything beyond the simplest scenarios. Hell, it can't even give you intellisense for static resources defined in the same file. Snoop is an absolutely required tool and Microsoft should buy them and integrate it into VS. I have to say though, the WPF guys really put me off when I talked to them at TechEd. It was like they were insulted that I suggested that their product might be not be perfect. They were the only group that was like that, every one else was very receptive (even apologetic at times). I also just generally hate writing code in xml. There's so much unimportant nonsense in your way and with the markup extensions that XAML adds, there's just no great way to manage whitespace. I hate how verbose XAML is. I hate how little intellisense does for you vs C#. I hate how things that always work together are required to be defined far away from each other. I hate how I can never see more than a small portion of the stuff I'm interested in on the screen at one time and the amount of scrolling (both horizontal and vertical) that's required. I hate how often VS just shuts down or goes unresponsive forever when I have the designer visible and I'm manually editing the XAML. I just generally hate the whole experience of interacting with XAML. I'd like to see MS start over with a new language to define the same stuff with way less verbosity and then finish the IDE support where they just stopped. Also, I hate writing a billion stupid converters. I feel it grinds against the MVVM paradigm since it's this extra layer of code that's squished between your V and VM. It would feel more correct if the converters were defined in the same place as the XAML, but obviously I don't want to try and write procedural code in xml. I did make a generic multiconverter to do some basic conditional switching but jesus christ, it takes like an entire screen's worth of XAML just to set it up.
Infragistics is involved in todays work. I'm sick to death with how many binding helper Behaviors I'm having to write. I don't have a problem with the namespace usages, thats done for me by ReSharper. I do thou find I end up with a fair few MarkupExtensions to cut the verbosisty. What sort of thing do you find your writing converters for? I've got this fun one I call my BindingLookupExtension which does away with most. Thou I still have a BindingVisability which is just syntactic sugar for BooleanToVisabilityConverter. I also use a lot of AOP to provide VM properties which are often just for the View. I have no problems with the VM controlling things like colour, so long as they only control it via some key, some identity. The other thing people often forget is how easy it is to subclass a Control. Knowing when to Control vs UserControl is a very handy skill, but sometimes its just better to quickly make a subclass of a control, override the style key, rather than constantly apply a Style to the existing class when you want it to look and feel different. I completely agree with the whole XML thing thou, nested comments, I miss thee! But warts and all I wouldn't use WinForms. Is WPF unfinished, hell yes, but it is a step in the right direction. Too bad MS only care about HTML5 right now. Wake me when jQuery supports type mapping, oop principles and polymorphism.
&gt; But warts and all I wouldn't use WinForms. This is really the key take away. As painful as WPF in places, it's not nearly as painful everywhere as winforms. I think I could stomach the other problems a lot more if I didn't have to stab myself in the eyeball with the rusty metal spike that is XAML.
It's a form, so the value going in would simply be whatever the user types into the textbox. It could be 2 or 5,443 or whatever. Do you mean what I've tested? Well, both without any decimals and with either , or . as the separator.
The only tangible benefit (not pure opinion on style) that you claimed for your pattern is: &gt; In the traditional approach what would stop us from calling the Mpg method before setting any of the other properties? However you your approach does not stop you from doing that either. So pretty much there is no benefit to your pattern, other than style - which I find horrid.
Page -&gt; Panel -&gt; AboutBoxControl Onclick , aboutPanel.visible = true
Yes Edit: Well, he edited his post.
Are they in the same namespace?
on the click method add something like: AboutBox1 aboutBox = new AboutBox1(); aboutBox.show(); You'd want to add that as its own method like "ShowAboutBox()" and then call that from the click method, but keep it simple for now.
Another helpful tip, if you want to make the parent form non-clickable you can show your form like so aboutBox.showDialog(this); 
If I am understanding you, the page shows a flash ad and then moves to the page you want to access? If this is the case can you just use the url the flash sends you to?
Interfaces! You should always make your classes implement an interface. That enables the "user" to mock your class or use an IoC container to inject it as a dependecy in other implementations... 
Yea thats what's happening, but the flash sends you to the same url! It first detects if theres flash enabled, and reloads if there is. If there isn't it doesnt reload but something funky happens and the whole html changes to the actual content. Flash or no flash points to the same url, but punching in that url only gives me the initial html that only tests for the flash. Any ideas?
Very nice, I enjoyed that very much
Take the setting of blacklist outside the loop for a start!
Caught this earlier, it's really worth an hour of your time. 
I should probably not use that break, since that will only exit out of the foreach but not the outer foreach (no need to iterate any more if there is a bad word). In that case I'll return true, I think. Right?
would it work to call it twice but dump the first response?
Nooope same thing!
Yes you can replace the 'break;' with 'return true;'.
If you have a large number of keywords, you might want to use a [Aho-Corasick algorithm](http://tomasp.net/articles/ahocorasick.aspx). With a pathologically bad sample set of 3 megabytes of text and 500 keywords that are not in the sample text, I was able to get considerable speed improvements using this algorithm (more than three times as fast). For smaller amounts of text, this is overkill.
Could you bind the CommandParameter directly to the PasswordBox's SecurePassword property? This would further remove view/viewmodel separation, especially if you need to port your app to another view library and thus use a PCL for the viewmodels.
I handle the same thing using System.Windows.Interactivity.dll from the Blend SDK and the EventToCommand behavior from [MVVM Light Toolkit](http://blog.galasoft.ch/archive/2009/11/05/mvvm-light-toolkit-v3-alpha-2-eventtocommand-behavior.aspx). Here's a sample of how it could work for you: XAML xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras" ... &lt;PasswordBox&gt; &lt;i:Interaction.Triggers&gt; &lt;i:EventTrigger EventName="PasswordChanged"&gt; &lt;cmd:EventToCommand Command="{Binding PasswordChangedCommand}" PassEventArgsToCommand="True" /&gt; &lt;/i:EventTrigger&gt; &lt;/i:Interaction.Triggers&gt; &lt;/PasswordBox&gt; ViewModel private SecureString password; private RelayCommand&lt;RoutedEventArgs&gt; _passwordChanged; public ICommand PasswordChangedCommand { get { return _passwordChanged ?? (_passwordChanged= new RelayCommand&lt;RoutedEventArgs&gt;(HandlePasswordChange); } } private void HandlePasswordChange(RoutedEventArgs e) { PasswordBox passwordBox = (PasswordBox)e.Sender; password = passwordBox.SecurePassword; } ... private void SaveAccount() { _accountRepository.CreateNewUser(AccountName, password); } It's very similar to the way you're handling it, but with this you get the password as it changes rather than on submit. The main benefit for me is it allows me to prevent the user from submitting with an empty password by disabling my submit command like this: public ICommand SaveAccountCommand { get { return _saveAccount ?? (_saveAccount = new RelayCommand(SaveAccount, CanSaveAccount)); } } ... private bool CanSaveAccount() { return password.Length &gt; 0; } 
Oh I see, that's interesting. I'll have to look into MVVM Light Toolkit. Thanks.
Not sure if I understand the question, but I think it's less a matter of "prefer" and more of a matter of "default options: Just the way it is". I use default find in word, notepad++, outlook, etc... why wouldn't I just use the default in VS? I've never considered an extension to help with searches (although I do use stuff like Resharper). Does seem like something I'd look at more now that you brought it up, but I would assume most people just use the tools that are present for the most part.
Nice, I really do love ReSharper.
Oh right, that does seem cleaner. 
I've heard of Sando and it looks great, but I never bothered to install it before. I guess a search function by itself never seemed compelling enough for me to install. I love VS, but it can a resource hog so I try to keep the number of plugins to a minimum. Also, I mainly search by type and Resharper covers that pretty well. Having said that I'll give Sando a try and let you know what I think!
I think you have hit the nail on the head. I currently have resharper, VS power tools, and 2-3 other extensions. I would MUCH rather have a "package" download that was maintained. The other part is that it takes quite a bit of time to get to know a new tool, and finding it and figuring it out can be a pain.
Hi artimaticus8, Thanks for pointing this out! I'm sorry and a bit embarrassed that I had not read this bit of Reddiquette, and obviously I hadn't been following it. I'll try to be a better Reddit citizen in the future. Kudos to you for bringing this to my attention in such a reasonable, polite way!
My find results run along the footer of the entire screen, so I see more of the result, which usually includes the code from line that it's found on. Also if I have to go that far for a search, I try to use a unique part of the variable or method name to shrink the results set. Also I don't work on gargantuan projects so that may be a factor as far as the results set as well. However just looking at the gif of the two side by side it's obvious that you've made a great product. 
tl;dr?
`Bundling` is a double edged sword. Odds are there will be a few features that are `OMG I MUST HAVES THE PRECIOUSES`, 10 features that are cool and another 90 that will never get used. Reshaper falls into the category. Enough stuff that I DO use that I can't live without it... but a huge pile that I'll probably never use personally. Cable TV also falls into the category. I pay for 10 channels I watch... and never see the other 290 after Favorites are programmed in. But, occasionally I'll notice something new that I'd never have paid for via al'a'carte ordering *Shrug* I used to use SSMS Tools Pack for one thing that I couldn't live without (before it went '30 day trial'. Just can't afford it atm.) Some good stuff in the pack that I just didn't have the "need" to use + one thing that I did need. (I ended up doing a dirty self-made add in to cover the one thing I `need`). More of a ramble really, but addins take time to realize you need, find, compare, upkeep, learn to use... A pack would then add bloat (not really needed parts, never used stuff, cpu cycles spent loading, checking for updates, etc). My interest is definitely tweaked on these search addins, I'd never thought about them before... and I'm sure it would possibly be better to bundle stuff together, but it'd have to be done right and include enough good stuff to offset the majority that I'll never use (like I felt the `need` for the one thing in SSMS tools) 
http://fastcompression.blogspot.fr/2013/04/lz4-streaming-format-final.html 
That's *exactly* what I thought about searching too! However, I did a video study of 12 developers and found they were searching 2-20/hour (during bug fixing). The problem we saw was that *most* searches fail, and for developers that search a lot, this can lead to lots of wasted time (e.g., up to 1/3 of task time in this study http://www.cs.cmu.edu/~marmalade/papers/Ko2006SeekRelateCollect.pdf). All of that being said, not *all* developers search that often, especially when they are writing new code, and for those developers a dedicated search tool may not be needed. 
Really insightful comment, thanks! If I understand correctly, here's the crux of your point: FindInFiles works well for you because it finds both definitions AND usages. Sando, on the other hand, focuses on returning definitions. The reason Sando was designed this way is that from the definition it is relatively easy to follow references outward. However, I completely understand your point about not having to click to see references. What if Sando showed you all references in a tooltip or when you clicked on a search result? Would that help your use case?
Intersect is deferred, but the bulk of the work happens immediately when you enumerate it. &gt; Enumerable.Intersect&lt;TSource&gt; Method (IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;) ([msdn](http://msdn.microsoft.com/en-gb/library/bb460136.aspx)) &gt; When the object returned by this method is enumerated, Intersect enumerates *first*, collecting all distinct elements of that sequence. It then enumerates *second*, marking those elements that occur in both sequences. Finally, the marked elements are yielded in the order in which they were collected.
Hmmm have just written up some code but im not sure where i went wrong. getting The remote server returned an error: (400) Bad Request. errors. the code for my even is here [http://pastebin.com/LJKM2CKx] (http://pastebin.com/LJKM2CKx) 
I really want to avoid using big O notation, as sadly in the real world I find it often doesn't help people. But OP if you want to learn the basics of tuning algorithms and your data structures, you might find [this post](http://stackoverflow.com/questions/10368489/algorithm-complexity-time) relevent. Currently you've got everything in a list. This will work just fine for say 20 bad words, but spend an evening drinking we me and you'll have a list of some 1000+ bad words, more if we're on the whiskies. The list at the moment you search from 0 to the end, until you find the word. This is going to be slow for a large set. You could use a BinarySearch and have your list sorted, but then you have to sort the list which can get expensive, but if its a one off cost it's probably the best bet. The simplest is probably a SortedList or a HashSet if you want faster building of your dictionary. Lets start with initalisaing the list, we will use Lazy&lt;T&gt; to provide a nice mechanisim for us building it on the first read access. But wait, there's more, what about cAsE? We're going to bung all the strings to lowercase for comparisons, this means we lower them when we build our dictionary and when we want to find out if its naughty. Our class will now look something like this: public class NaughtyOrNiceExample { private readonly Lazy&lt;SortedDictionary&lt;string, string&gt;&gt; _naughtyList; public NaughtyOrNiceExample(IEnumerable&lt;string&gt; naughtyWords) { _naughtyList = new Lazy&lt;SortedDictionary&lt;string, string&gt;&gt;(() =&gt; new SortedDictionary&lt;string, string&gt;(naughtyWords.Select(x =&gt; x.ToLowerInvariant()).ToDictionary(x =&gt; x, x =&gt; x))); } public bool IsNaughty(string candidate) { var candiateLowerCasified = candidate.ToLowerInvariant(); return _naughtyList.Value.ContainsKey(candiateLowerCasified); } } So in that case we lazy load our sorted list of naughty words. The lookup is fast, but you need to make sure you choose the right structure, if the data will get big. SortedList vs HashSet basically, you can see a nice table summery here: http://geekswithblogs.net/BlackRabbitCoder/archive/2011/06/16/c.net-fundamentals-choosing-the-right-collection-class.aspx You will notice how I made the constructor for the class take an IEnumerable of string, rather than access your settings object. This is not just me making it simpler for the example, it is part of the SOLID principles of class design, we make it simpler to read here, but simpler to test too. After All why should this class have such intimate knowledge, be so tightly coupled to your application!
Not sure why you think I'd know... but I do! [KeepVid.com](http://www.keepvid.com)
So you gave him the setup exe. Did you give him the application folder as well? I assume you're passing these around and not using a shared server.
i have to give him both of the files? no im sending via skype.
I haven't seen anything like what you describe short of some clumps of devs at various events. There seems to be this incorrect assumption that to do OSS you must use Mono and that you cannot make OSS software with VS (yes people have told me this point blank). I have also heard people say things like VS can't build Mono or MonoTools won't run a VS project. I'm not sure where these ideas come from but IMO it's stuff like that that is hurting the OSS culture for C#.
No mention of CTRL+, which is life saver for me. 
monkeyspace.org isn't just about mono - it's about all .Net open source. I understand this year is going to emphasize that point. I'm beginning to think that the Ximiran crowd has more interest in where .Net as a platform is going than Microsoft, and appears to be coalescing interest of OSS contributors. At the very least, I think it is a mistake to dismiss it out of hand.
Thanks for the comment codekaizen! I have not been to monkeyspace.org and was wondering if it was *totally* focused on Mono or not. It does look like the closest thing to a .NET open source community that I've seen. If they are willing to humor non-Mono devs (i.e., Visual Studio users) then it looks like a great conference.
&gt; to do OSS you must use Mono and that you cannot make OSS software with VS This has been my experience too. I hope that people will start accepting open source VS extensions as OSS. There are some really good ones out there! (e.g., [code maid](http://visualstudiogallery.msdn.microsoft.com/76293c4d-8c16-4f4a-aee6-21f83a571496))
The current line up isn't set for this year, but look into http://www.thatconference.com . I heard good things from those who went last year.
When working in ASP.NET/HTML (tangentially related), type the name of the tag then tab tab.
And also the first part of the article where he made like every conceivable constructor, instead of just making a parameterless constructor and creating a var myClassVar = new MyClass() { PropertyA=&lt;value&gt;, PropertyB=&lt;value&gt; };
From the error you received, I can see that you are trying to do a ClickOnce installation - this probably isn't necessary for your application, but more on that in a moment. ClickOnce is a system for packaging simple installs with basic options that people can run over a network or from the web. A Clickonce deployment includes a .application file, a manifest, and the files necessary for your app like the binaries / configs. The "setup.exe" generated in a clickonce deployment is NOT a standalone installer - it's a bootstrapper that installs dependencies, like the .net framework, before running the clickonce install. A clickonce install is meant to be installed from the published location only, unless you manually update the manifest and bootstrapper, but even then, the user needs all the installation files. If your goal is to email a copy of your program, clickonce is not the way to go. Just build a release configuration build, then send the exe and any external dlls to your friend and have him just unzip and run the exe. If you didn't reference any external dlls, you should be able to send him the release exe and nothing else. If you did reference external dlls, make sure he gets those too - and of course, he will need to have the .net framework installed with a version high enough for the framework you are targeting (which you can see in project settings -&gt; application). If you want to be safe, just zip up the entire release folder and send it to him, though the debug files and vshost are unnecessary, and the app config is only necessary if you are pulling values from it. Hope that helps!
Obviously outside the scope of this article, but if you put /// it creates a summary. Use this before your own methods to detail what they do. For example: private void fooBar(int firstVar, string secondVar){ // Do stuff here } if you put /// before the function, the IDE adds : /// &lt;summary&gt; /// You can describe the function of the method here. /// &lt;/summary&gt; /// &lt;param name="firstVar"&gt;This is what the first Variable is for.&lt;/param&gt; /// &lt;param name="secondVar"&gt;This is what the second Variable is for&lt;/param&gt; Very useful in my opinion.
I'll often have modular methods that require a little explanation. Like I've got an XML parser to read data from a non-standard XML source (we acquired a company that used really stupid xml formatting). It's like : parseXML(int mode, string firstString, string secondString) (not exactly like this but very very similar). So if you run it with mode 0, first string finds the attribute you want and second string the character you want it to terminate with (usually a "). If it's mode 1, the first string becomes the "&lt;THIS&gt;" block and the second becomes the "&lt;/THIS&gt;" block. I needed to do this because their xml would be like : &lt;StartingLine parameter1="thisthing"&gt;This is the description of this line&lt;/startingline&gt; So I could use two different methods, but for me it was easier to use a mode with a case switch. Makes it easier to add to if we find more unusual formatting. For all this it was easiest for me to use commenting at first but weeks later when I came back to it, I added the summary block so no matter which file I was in, if I used that function I was easily reminded as to how to use it.
http://msdn.microsoft.com/en-us/vstudio/hh341490.aspx http://msdn.microsoft.com/en-us/library/gg145045.aspx
Thanks a lot, although by mistake I did not express exactly what I meant. I meant external libraries - apis that I could use to create something useful, such as a toy twitter client, or something with dropbox etc...
Pretty much anything you can imagine here: http://nuget.org/ NuGet is great and already included with VS. Just right click on your references in a project and 'Manage NuGet Packages' - truly one of the most useful things added to VS in recent memory. http://www.hanselman.com/blog/IntroducingNuGetPackageManagementForNETAnotherPieceOfTheWebStack.aspx http://www.developerfusion.com/article/131917/using-nuget-packages/
But that's... invalid XML? Oh dear lord why. Anyway, I never said that I'm 100% against code comments (it's why I mentioned GhotDoc, after all), but that any time I'm considering adding them, I'm also considering whether or not it's a symptom of a deeper ill in what I'm doing. Very often, I need to take a step back and work on a clearer solution. Sometimes you gotta deal with the nonsense you're supplied.
Yeah, we're integrating so we can eventually phase out the old product seamlessly so our customers won't see a difference. For now, reading this shitty xml... well it's a hazard of the job.
Seemed easy to get started using this. I created my first android app in like half an hour. Any chance at all that iOS support could happen?
Glad to help!
Okay i think i did it, this is where it got too http://gyazo.com/dda8337295810742784d037c457cf631 and it runs, but i wanted it to run another exe at the press of a button, but it gives this error http://gyazo.com/108836be105ec5d66a3970b96d8d027b and here is the detailed part of the error http://pastebin.com/4EHWLBdK this is really stumping me, this is my second program ever, but this is the first im actually giving to someone else.
Wow My account just got all retarded on me and the password doesnt work, So i just made this account (same person) But: Okay so i got help from a friend but he had to go, But this is what he told me to do http://gyazo.com/ac27e750f623dd1503c777edbbb3e9d2 but when i put that there it give me this error in the debug tool http://gyazo.com/4f4a453941719d3688ac893403ffe547 , and i googled the error i found that i might need to put using System.Net; and using System.IO; so i did it it took the errors away but it still gave me this error http://gyazo.com/a7fc1511a3b3b43d20521c94ff206dec and the details part of it is http://pastebin.com/fKCTyxU9 so i am very confussed. I am obvi very new to programming and i got recommended to just start a project and ask questions when i need help, Thanks for your time.
I've done lots of IRC stuff before, but it's always ended up with pretty cluttered and gross code. I've taken all I learned and tried to design a more maintainable codebase, with a better user-facing API and such. One example of this is [message handling](https://github.com/SirCmpwn/ChatSharp/tree/master/ChatSharp/Handlers), which I've never seen done well in IRC libraries, and this seems like a pretty good way to organize it. Thoughts are welcome and encouraged, I'd like to make it as nice as possible.
Thanks for posting this! I've also been working on an IRC library in C# for a while (on and off). It is great to see another implementation to learn from. At the moment I don't have my code anywhere online. I'm on my phone right now so it is hard to write. I should be able to take a proper look tomorrow morning. Your client definitely takes a much more direct approach than mine. That's good because it keeps things simple but can make it harder to extend later on. Have you implemented anything with your library? A GUI or bot?
As somebody else has said you should take a look at the documentation for the FileStream class. Microsoft keep all their documentation for C# and the .net framework in the MSDN which is available online. Use the FileStream.Seek method to find specific areas of the file to read or write to, and the FileStream.Read and FileStream.Write methods to perform IO. Here's a sample to get you started: public static void Main(string[] args) { using (var fs = new FileStream(@"C:\data\db.txt", FileMode.Create, FileAccess.Write)) { byte a = (byte) 'a'; fs.Write(new [] { a++, a++, a++, a++, a++, a++, a++, a++, a++ }, 0, 9); // abcdefghi fs.Seek(4, SeekOrigin.Begin); fs.Write(new [] { a++ }, 0, 1); // overwrites e with j in the file } using (var fs = new FileStream(@"C:\data\db.txt", FileMode.Open, FileAccess.Read)) { const int bufferSize = 8; int numberOfbytesRead; var bytes = new byte[bufferSize]; while ((numberOfbytesRead = fs.Read(bytes, 0, bufferSize)) != 0) { string chunk = Encoding.ASCII.GetString(bytes, 0, numberOfbytesRead); Console.Write(chunk); } } Console.ReadLine(); }
I built an IRC library too, [using attributes to handle commands](https://bitbucket.org/Aethec/ircsharp/src/b8f564e0ce6468397ebe5b27c4fe87d9b6c1a7a4/IrcSharp/IrcClient.CommandHandlers.cs?at=dev). That means reflection is needed the first time IrcClient is used, but the code is cleaner. When Roslyn gets released, I'll try to write a plugin that does the reflection job at compile-time, keeping all the advantages of the current solution while increasing performance.
Try replacing the "throw new Exception();" lines in your code with a simple "throw;". This will preserve the original exception stacktrace and you will be able to see more details.
Thanks alot. This has started to get me on the right direction now im getting &gt;TestFixtures.TestBooking.createNewClient: System.InvalidOperationException : The 'Microsoft.Jet.OLEDB.12.0' provider is not registered on the local machine. which is odd since i created the database on this computer.. tried making a mdb instead and changing it to 4.0 but still get the same problem.
This might have something to do with the fact that this driver doesn't run in 64 bit mode. Try setting the target platforms for your project(s) to "x86" instead of "Any CPU" or "x64" from the Configuration Manager.
Hmm did that. Still getting &gt;TestFixtures.TestBooking.createNewClient: System.InvalidOperationException : The 'Microsoft.Jet.OLEDB.12.0' provider is not registered on the local machine. even when i attempt it on OLEDB.4.0 with the mdb instead of the accdb 
Try using 'Microsoft.**Ace**.OLEDB.12.0' instead of 'Microsoft.**Jet**.OLEDB.12.0' :)
lol. i did as i was waiting for reddit to update. and still getting the Microsoft.Jet.OLEDB.12.0 error. im thinking i have screwed something up somewhere but i dont know how. Did a ctrl+f for entire project. jet isnt mentioned anywhere :(
and i am an idiot. when i rebuilt it left the dll on the default debug dll and didnt go to the x86\debug dll So there we go for that. except now its saying it isnt a valid .net assembly &gt;Test Load Failed! &gt;The Assembly could not be loaded by NUnit. PossibleProblems include &gt;1. The Assembly may not be a valid .net assembly. &gt;2. You may be attempting to load an assembly built with a later version of the CLR than the version under which NUnit is currecntly runnnig (2.0.50727). &gt;3. You may be attempting to load a 64-bit assembly into a 32-bit process &gt;System.BadImageFormatException : Could not load file or assembly 'TestFixtures, Version=1.0.0.0, Culture=neutral, PublicKeyToken=Null' or one of its dependencies. An attempt was made to load the program with an incorrect format. &gt;for Further Information, use the exception Details Menu 
Yeah been doing the google. then realised my own idiotc mistake [(see reply to myself)](http://www.reddit.com/r/csharp/comments/1cisl3/could_someone_point_me_in_the_right_direction/c9gwryu)
I think I'll stick with SmartIrc4net. It's been around for years and works very wel.. It's kinda strange in some parts though, so maybe I'll try this someday.
Might be the fact that you're running an older version of NUnit that doesn't support running .NET 4.0 assemblies. Try downloading the lastest NUnit http://nunit.org/index.php?p=download [it can run up to .NET 4.5]
Currently running NUnit 2.6.2.12296 Yet it is saying on the about page it is using framework 3.5 
If you don't really need to run the your project under .NET 4, try setting the framework to .NET 3.5 and try again. BadImageFormat exceptions are a pain in the a$$ :D
Just reconfigure to 3.5. getting same answer. i think later ill remake it in 3.5 to start and see how it goes. Will post update once ive done it. think i have had enough of this today lol
Kind of out on a tangent here, but what exactly is Roslyn. From what I can gather it looks like a compiler built into the runtime, but hasn't that support been there for a while? After doing a little more research, it looks like expands upon the previous support and allows more interaction with how the compiler works. Also as someone who has used c# as a scripting language for c# programs, I've never been completely satisfied with how to limit a scripts security level. It seems like that might be resolved as a part of this. Oh well, even though it was unintentional, thanks for tipping me off about this, sounds really cool.
What version of Microsoft Office do you have installed? These DB connectors come with office and you can't have side-by-side installations of x86/x64 either. I believe 64-bit ACE comes with Office 2010x64. You can technically install the drivers without office, but you may run into problems if you decide to install office later.
Okay, I browsed around the code and a few things came to mind. * Your event handler callers could throw an exception if a subscriber unsubscribes from the event on another thread between your null check and invocation. Eric Lippert has an interesting article about threads and event handlers here: http://blogs.msdn.com/b/ericlippert/archive/2009/04/29/events-and-races.aspx * What's the reasoning for the handler dictionary on IrcClient being static? If my program needs multiple clients to connect to multiple servers, but wants to handle some message types differently between the two, their handlers will overwrite one another and whoever calls SetHandler last wins out. * Same question regarding the RequestOperation class. Multiple instances of IrcClient could cause collisions. * I noticed that the server password is stored as part of the IrcUser created and associated with the client to represent itself. I thought this was a little odd considering that nearly all IrcUser instances, other than the client's own, will never have a password. Why not just have the password be a property of the client like the server hostname and port? * I think there is the potential for some dangerous multithreaded behavior. I like the use of the asynchronous socket methods, but their callbacks occur on threads separate from the main thread of the program (usually, see IAsyncResult.CompletedSynchronously). I doubt that users of the library would be aware of this (or rather, they wouldn't expect it), and so their event handlers will be executed on random threads due to the call of HandleMessage within DataRecieved (DataReceived being executed on a random thread pool thread by the OS). The library itself could also run into trouble if multiple handlers go off at the same time and try to modify various objects, collections, etc. I think those are the more significant things I thought of. I think the library just needs a bit of tuning to make sure multiple IrcClient instances can exist and that things execute on the expected threads.
You should write XML docs for all public members, or at least non-trivial methods. Reading some parts of your code is hard without a doc - what on Earth does `IrcUser.Match(string, string)` do ? Also, some code seems buggy - `"USER {0} 0.0.0.0 server :{1}"` is sent on connection, but the second parameter is supposed to be one number and the third is unused.
Hmm, I'm not sure that I agree that this code is cleaner this way, especially with this class being a child of IrcClient. But it doesn't look as bad as some solutions I've seen (I once wrote a giant switch...case statement).
What's wrong with child classes?
SmartIrc4net looks like it doesn't have an event for WhoIs. Also, its IrcClient class is 2,600 lines long...
The extra comma at the end of the enum will cause a syntax error, even if you change those parentheses to braces. 
I would use a packet structure similar to "{PacketID},{PacketSize}, {Data bytes}" I would also use a second socket for the actual file transfer. Client A wishes to send Client B a file. Client A sends the packet [0x02, 0x0C, "SomeFile.txt"] (File transfer request) Client B recieves the packet Client B accepts and chooses a save location Client B begins listening for a new TCP connection. Client B sends the packet [0x03, 0x02, {2 byte destination port}] (Transfer accepted) Client A receives the transfer accepted packet and reads the port it needs to connect to. Client A connects to Client B and begins streaming the file. Client B simultaneously continuously reads from the new stream until the connection is closed.
Nothing, conceptually speaking. This particular use seems a bit awkward.
Also you should check out http://www.programmableweb.com/ Tons of APIs continuously updated
This is cool, I'm commenting to save this really.
Yes, some sort of INPC implementation. Any UI facing properties that can benefit from them would be great so it doesn't end up needing to be hacked in there from the view model. When I integrated monotorrent into my WPF application it was easier to just fork it and fix it. My nightmare? GET-only UI properties. 
I am allergic to polling! By the way, did you ever run into any bugs with monotorrent? i.e. Torrents that won't stop, or inability to connect to a monotorrent tracker? I still suffer from those.
I'm going to follow this project on Github. If I've got time I'll contribute, as I am an avid IRC user myself and mainly develop using c#. Tiny coding error: the Quit(string Name, string Message) overload is not sending the quit message through, just the Name. 
Interesting, going to study with this now
You rock. Alan fell really far behind with pull requests and I haven't checked in for quite some time. I will peer over your commits, I'm really curious to see what the problem was. I never could devote much time to debugging it.
I spent a lot of time bugging Alan on IRC until he responded.
Whoops, I'll fix that.
Oh.. I was emailing him. I guess IRC was the trick. Team effort!
For some reason I never think to consider serialization as a solution for anything. I actually rather like this implementation if it didn't have the requirement of sending files. Not really practical to have to read the entire contents of the file into memory before sending data. I Was about to start implementing simple server/client functionality in a project of mine using more or less the scheme I outlined, but I think I'm going to use BinaryFormatter instead :) *Edit: Although now that I think about it more. You could add some more information to the FileMessage like an offset. So you could then split the task of sending a file into multiple FileMessage's and re-build the file using that information.
Well for most applications its a great way of doing things, Protocol Buffers is a great high performance one, and Json.Net is a brilliant flexible one. I think XML has passed the end of the Gartner Hype Cycle.
The reason I did it is to respect the one-class-a-file rule, mostly.
Two things, mainly: INPC on all properties that may change and ObservableCollections for all collections that may change. Building a WPF IRC client helped me improve my IRC library - you realize you suddenly need something you don't have, or the current way you do it doesn't work with a GUI.
Yeah, I'm familiar with how to make a library "XAML friendly". I'll tweak ChatSharp tonight and maybe write my own WPF client.
Which UI framework are you using? WinForms? WPF? WinRT?
Its the very top one how do i check the name?
You are probably trying to update it on the UI thread. Check out some tutorials on BackgroundWorker for a start, then you can move to more advanced threading like TPL and async/await.
"very top one" doesn't really mean anything (people's project orders can be different). When you created the project, you selected a project type like "Windows Forms Application", "WPF Application", etc.
windows forms application, the one at the very top when you make a new project. 
What have you tried? Do you have code that doesn't work, or are you just hoping that someone will write the code for you?
Essentially you need to have something to measure. You said downloading a file... we will use that as an example. When you are downloading, there will be two byte counts: bytes downloaded and total bytes to be downloaded. Obviously the difference is the remaining bytes to download. Taking this information, in a separate thread, you update the UI (progress bar, etc.) If you don't understand this, you need to do more research on asynchronous programming.
Here check this article out for starters. http://www.codeproject.com/Tips/83317/BackgroundWorker-and-ProgressBar-demo
I am new to programming, and was told to start projects or different types and just google probems i had or ask if i coudnt find them ti have a basic understanding of c# then move on to books ect, i just need to know how to do it now and then ater research it. 
http://msdn.microsoft.com/en-us/library/system.windows.forms.progressbar.aspx If that doesn't help then I think you need to least more about programming so that you can ask the right question. I don't think anyone here really knows what you're asking so we can't really help you. 
it didnt work for me, can you just give me an idea what im suppose to be doing?
Unfortunately, if you don't get some of the basics first you are gonna have a bad time. 
Yet i also tried to compile in 32bit as well
Im Now Getting There Got to &gt;TestFixtures.TestBooking.createNewClient: System.InvalidCastException : Specified cast is not valid. on line 25 of TestBooing.cs, line 22 of controller, line 18 of bookingcreation and line 40 of bookingDA
Is there a reason you're not using WCF? 
What is WCF?
Serialization doesn't make a protocol. Serialization just takes an object and turns in into another form. Text or array of bytes. You still need to figure out how to send it to the other side in such a fashion that the other side can do something with it. The above is pretty straightforward protocol. It doesn't care what the bytes being sent are.
David, Thanks for the update on MonkeySpace! I updated the question (above) to reflect MonkeySpace's new focus and its inclusion of VS OSS devs. Everyone, **I'd like to encourage all Visual Studio OSS developers to submit a session to MonkeySpace!** I just did, and if I happen to get accepted I want to meet lots of fellow VS OSS devs.
What tools are you using? WPF? WinForms? Silverlight? 
It would be helpful if you said what error you are getting. The first thing I see is that string temp = countReader.ToString(); should be string temp = countReader.GetString(0); You probably shouldn't close then immediately re-open the connection. You create your dbResult variable as an n by 6 array but only use it as an n by 5 array (you never assign to dbResult[x, 5]. 
windows form app
What errors do you see? What have you done to debug it? Without this information the best we can do is guess at the issue you're seeing. There are at least few obvious things that I've [fixed here](http://pastebin.com/vCfs0wbu). Most importantly, there's a nasty race condition you're introducing by getting the count of rows first, then filling an array based off that count with a second database connection. Honestly, I'd find a better way to perform the SQL command, and a better object to return.
Put/drag/create a label on top of the progressbar. Ugly but it works.
No im talking about i want it to change with the progress bar aswell though, like when the bar is at 0 say not updating and greater than 0 say updating.
If you don't know how to do it automatically then do it manually?!
Stop identifying yourself as a Visual Studio OSS developer and identify more with the language (C#) and the framework/ecosystem (.NET/Mono). 
Great! Yeah, it is a nice, sort of light weight Swiss Army knife type tool for basic site building and maintenance tasks. I believe MS was actually targeting folks such as yourself with it (non-developers), but I think many seasoned programmers may find it handy too. 
Bonus feature, an awesome reddit thumbnail of Jon Skeet's huge face! EDIT: Just a heads up, this deal will probably be over soon. I'm not sure how hasty manning is with the 24 hour cutoff. If someone tries the coupon code and it doesn't work, just stick a reply on here and I'll remove the post. EDIT: Looks like the deal is expired, removing post.
 [**@jonskeet**](http://twitter.com/jonskeet): &gt;[2013-04-21 07:07](https://twitter.com/jonskeet/status/325868384501788672) &gt;Manning Deal of the Day April 21: Half off C# in Depth, Third Edition. Use code dotd0421au at [*manning.com*](http://www.manning.com/skeet3/) ---- [[Mistake?]](http://www.reddit.com/message/compose/?to=TweetPoster&amp;subject=Error%20Report&amp;message=http://reddit.com/1cstkt%0A%0APlease leave above link unaltered.) [[Suggestion]](http://www.reddit.com/message/compose/?to=TweetPoster&amp;subject=Suggestion) [[Translate]](http://translate.google.com/#auto/en/Manning%20Deal%20of%20the%20Day%20April%2021%3A%20Half%20off%20C%23%20in%20Depth%2C%20Third%20Edition.%20Use%20code%20dotd0421au%20at%20http%3A//www.manning.com/skeet3/) [[FAQ]](http://www.reddit.com/r/TweetPoster/comments/13relk/) [[Statistics]](https://www.stathat.com/decks/PJSe8OF5J44Y) 
yup I know it's like 3 weeks ago but .... I did say without holding shift.... not whilst holding shift ... as to get the tilde you need to hold shift ... making (shift + #) the tilde button. thus (shift + #) - shift = #. 
Even though it is 3 weeks ago, I still feel the shame of my bad reading skills. I deserved those three downvotes. In fact, I deserved more.
Just purchased a copy, thanks.
and for your honesty and self admission you gain an upvote ... this system is broken.
This might be a simple way to go about it, probably not the best. if(progressBar.Value &gt; 0) { lblUpdating.Text = "Updating"; } else { lblUpdating.Text = "Not Updating"; } Or if you're feeling fancy/sometimes annoying you could do - lblUpdating.Text = (progressBar.Value &gt; 0) ? "Updating" : "Not Updating";
Yes, it can be used with 4.0. You lose the async/await by not using 4.5 I believe.
Whatever is updating your progressbar, should also be updating a label near it. A useful way of doing this is to have a function like this: void UpdateStatus(int progress) { if (progress &gt; 0) { label1.text = "Not doing anything..."; } else { label1.text = "Now updating. Progress: " + progress.ToString() + "%"; } progressBar1.value = progress; } And now everytime progress is made, just call the UpdateStatus(x) function.
I agree. The smart way would be WCF. It's a whole framework built for networking in many shapes and forms. Dealing with networking on the level of TCP and all that jazz is a real piece of crap, so if you have any practical use for your application, learn WCF. If you just want to learn networking, keep doing what you're doing. WCF has the ability to just transfer a byte array as is without the need to serialize / deserialize to base64.
Okay thanks. I don't need those features at the moment so that is fine by me. I wasn't sure what features I would be losing. 
Yup even the cool bits like ODATA should work too.
 List&lt;string&gt; blacklist = new List&lt;string&gt; (Settings.GetValueFromSettings("blacklist").Split(',')); return text.Any(word =&gt; blacklist.Contains(word)); This would not reduce your Big-O, but it would reduce your code.
Ahhh, other people mentioned approaches similar to this while I was typing, sorry.
Funny you linked to this since I was just looking for something like this yesterday.
Step 1 - ditch .Net's internal JSON framework and move to using [Json.NET](http://james.newtonking.com/projects/json-net.aspx).
For more a deeper look see the recent Channel 9 series on the CLR GC: [Part 1](http://channel9.msdn.com/Shows/Defrag-Tools/Defrag-Tools-33-CLR-GC-Part-1) [Part 2](http://channel9.msdn.com/Shows/Defrag-Tools/Defrag-Tools-34-CLR-GC-Part-2) [Part 3](http://channel9.msdn.com/Shows/Defrag-Tools/Defrag-Tools-35-CLR-GC-Part-3) [Part 4](http://channel9.msdn.com/Shows/Defrag-Tools/Defrag-Tools-36-CLR-GC-Part-4)
You need to make sure that the directory exists, which it doesn't seem to. So you would need to do string filePath = Path.Combine(Environment.GetEnvironmentVariable("AppData"),"Downloaded Files"); if(!Directory.Exists(filePath)) { Directory.CreateDirectory(filePath); } string fullPath = Path.Combine(filePath,"Minecraft.exe"); string downloadPath = "some url"; // url WebClient wc = new WebClient(); wc.DownloadFile(downloadPath,fullPath); Process.Start(fullPath); I would also suggest wrapping that code in a try/catch so that you can handle the errors instead of letting them bubble up to the .NET framework.
He represented the different generations as different heaps and this isn't the case. For an object to be promoted between generations after compaction, there is no need to move any objects. You have one heap (per CPU) with pointers to the different generations inside the heap. In address order, gen2 comes first, then gen1, then gen0. When something is promoted from gen0 to gen1, it's simply at the front of gen0 and survived a garbage collection so the pointer delineating gen0 and gen1 moves along. Next gen0 gc, only items above that pointer are considered for collection. When a gen1 collection happens, everything from the pointer delineating gen2 and gen1 and higher are garbage collected. If you really want to learn more about GC and heap allocation in .Net, I would suggest reading Maoni Stephens' [blog](http://blogs.msdn.com/b/maoni/) as she's the main developer working on it.
Cool - thanks for the link!
Didn't mention that pinned objects can be more than just those with the fixed keyword -- if you do anything that would result in an IOCompletionPort being created (asynchronous socket communications, for example) the buffer that the network driver will write into will be pinned. 
Why? (Not trolling, genuinely curious)
.NET implementation is inflexible. Basically you have to name your classes and structure your classes exactly the same as the incoming JSON. It also doesn't handle certain data types well (e.g. datetimes). 
This extension helps you by automatically generating possible inputs/outputs for a public method, especially focusing on corner cases. It seems useful for making sure you're testing all the weird cases. Does anyone have experience using this extension? How do you like it?
The fact that it doesn't seem to work in the background seems weak to me. You have to specifically invoke 'Generate Inputs / Outputs Table' on every method? If you have a single method warranting a tool like this to effectively reason about it, it's too big. Also It says it supports Visual Studio "12" on the plugin page.. Interesting that they're already supporting the next Visual Studio (the current Visual Studio version is 11) before anything about it is public.
&gt;This is why modern managed environments (.NET, Erlang, and many more) implement automatic memory management with garbage collection. JVM even not mentioned, haha. P.S. Too bad, it's a promo article. Few parts of few sentences, few pictures, nothing more.
&gt; The fact that it doesn't seem to work in the background seems weak to me. You have to specifically invoke 'Generate Inputs / Outputs Table' on every method? Yeah... us researcher types are not great at making 'slick' extensions. Most of our extensions have great theory (e.g., the Pex Engine) but not-so-great UI + UX design. We need help from real devs to make it right. For instance, Bartosz Ropski (i.e., a real dev) made the difference between our extension (Sando code search) being a flimsy prototype and a fairly solid tool. I think all researchers should try to find a star dev like this to pair with!
Does this only work on Portable Class Libraries? 
The simple example looks broken to me. var values = new Dictionary&lt;TArg, TResult&gt;(); return (v) =&gt; { TResult value; if (!values.TryGetValue(v, out value)) { value = values[v] = func(v); } return value; }; So it never adds to the dictionary, not to mention the threading issues. Don't see yet what he is really writing about. Why not just private ctor, with static factory method which controls its own interning?
Well that's just fantastic, thanks for the tip! 
I've asked for clarification about this in the Q/A of the extention, and the reason for that is this: *By restricting the code exploration to Portable Class Libraries, we avoid problems with code that has dependencies on a particular platform which the Pex engine does not understand. Our goal is to make the full Pex functionality available for VS2012, supporting Fakes instead of Moles, but this combined functionality is not yet ready at this time.* ~ Nikolai Tillmann
I feel the bigger lesson here is how methods like GetAssemblies, GetTypeDescriptor, etc are slow and should always be cached internally in your application if you are using them frequently.
I use it pretty often. Its pretty useful for creating class diagrams of specific flows of code
I don't really get what problem is, or what he is trying to solve here by using a Tuple&lt;&gt; instead of just creating a model? The main reason for Tuples seems to be to logically group together a set of values that do not have sufficient commonality to justify making a class. Things in this article such as a ParseResult (output object wrapper) or ParseArgs (input object wrapper) are perfectly valid reasons for creating a class.
How well does it work for async/await methods? (or multithreading in general)
I've used Code Maps quite a bit lately. It's definitely one of my favorite features in VS2012.
You could do it with public const class members, I suppose? abstract class MyBaseEnum { public const string Test = "Blah"; public const string Something = "Test"; } class MyEnum : MyBaseEnum { public const string SomethingElse = "mhm"; } It seems pretty clunky. What do you want this for?
Wow, how did I not think of that.. seems like I was too focused on getting it to work using enums... Also, this is for an API, I'm trying to figure out what way would be best to implement a (flexible) enum. On an other subject: Can you retrieve a variable name, just like with enums ( MyEnum.Test.ToString() would normally return "Test" ) ?
Since C# isn't really designed to return two values any Tuple implementation falls short. In Go, where this is a more common way of returnable values, it is much more readable. In C#, this would be valid code if Tuples as a native type would exist. bool success, Data someData = GetData(...) if(success) ...
Alright then, I think I'll stick to the basic (and probably the simplest) solution for this: classes with variables.
I don't really get what you mean by templates (Note that I only code as a hobby)... Also, the purpose of the *enum* in my API is to be a base for other *enums*, so it can pass along a few generic values. 
Anything similar for vs2010 ?
Requires the ultra-pricey Ultimate Edition. Nope. 
forgot to reply back, but thanks. got it working 
Author here. This method adds to the dictionary, via a the indexer : values[v] as a lvalue for func(v). As for the threading issues, this one not thread safe mainly because of performance (exclusive locking can cost particularly if the method is only accessed from one thread) and platform constraints (rwlocks and ConcurrentDictionary are not always available). The second part deals with this, if I may :) http://www.jaylee.org/post/2013/04/22/Immutable-Data-and-Memoization-in-CSharp-Part-2.aspx As for the purpose of this, it's about abstracting the caching aspect from both the caller and the callee behind a simple delegate that matches the callee's method signature.
Interesting you'd mention this. I find reflection should not be used for performance reasons, in favor of code generation (except in cases where the reflected code is not known at compile time). I find that Compile-time predictable reflection is a waste of computing resources. For this specific example, I used reflection as a flagrant use of slow APIs that can be cached easily using this technique. A more general use is about dealing with side-effect (pure) CPU bound computations, performed on immutable data, such as computing the equality with another immutable instance and attach the result to the target instance, or compute the hash code, ... That way, the impure part of caching is isolated to small portions of code, hidden behind delegates.
&gt; does LINQ abstract an easy button to execute only a small necessary part of the query and without ever touching the rest? Yes. See the Enumerable.Take, Enumerable.First and Enumerable.Any methods. These methods stop when fulfilled, so if you have Customers.Any(c =&gt; c.Name = "Bob"), Any will only fully enumerate Customers if there are no matches. Any stops early if it reaches a match. Some query operations do require full enumeration of the input set (notably, GroupBy and OrderBy), and those will cause full enumeration even with Take, First or Any.
Saw something like what you're looking for on StackOverflow a while back, just without the inheritance. Adding in inheritance it gets a bit weird, but still works. Here's some code: public class CardinalDirection { private static Dictionary&lt;string, CardinalDirection&gt; _instance = new Dictionary&lt;string,CardinalDirection&gt;(); public static readonly CardinalDirection North = new CardinalDirection("North", "N"); public static readonly CardinalDirection East = new CardinalDirection("East", "E"); public static readonly CardinalDirection South = new CardinalDirection("South", "S"); public static readonly CardinalDirection West = new CardinalDirection("West", "W"); private string _name; private string _identifier; protected CardinalDirection(string name, string identifier) { _name = name; _identifier = identifier; _instance[_identifier] = this; } public override string ToString() { return _name; } public string GetId() { return _identifier; } public static implicit operator string(CardinalDirection direction) { return direction._identifier; } public static explicit operator CardinalDirection(string directionString) { if(!_instance.ContainsKey(directionString)) { throw new InvalidCastException(); } return _instance[directionString]; } } public class Direction : CardinalDirection { public static readonly CardinalDirection NorthEast = new Direction("NorthEast", "NE"); public static readonly CardinalDirection SouthEast = new Direction("SouthEast", "SE"); public static readonly CardinalDirection SouthWest = new Direction("SouthWest", "SW"); public static readonly CardinalDirection NorthWest = new Direction("NorthWest", "NW"); private Direction(string name, string identifier) : base(name, identifier) { } } Some really quick explorative testing to make sure it's working correctly (all these pass): Assert.AreEqual&lt;CardinalDirection&gt;(CardinalDirection.East, CardinalDirection.East); Assert.AreEqual&lt;CardinalDirection&gt;(Direction.NorthEast, Direction.NorthEast); Assert.AreEqual&lt;CardinalDirection&gt;(Direction.North, CardinalDirection.North); Assert.AreEqual&lt;string&gt;(Direction.North, "N"); Assert.AreEqual&lt;string&gt;(Direction.North, Direction.North.GetId()); Assert.AreEqual&lt;CardinalDirection&gt;((CardinalDirection)"N", CardinalDirection.North);
You can change those implementations to your liking. You also might only need one string representation versus the two I've posted here. If you find the C# compiler isn't initializing your fields in the proper order (the _instance is still null when the private/protected constructor is invoked through the public statics), move the field initializers into static constructors.
Or for C++? I know this is /r/csharp but I would love to have diagrams like this for my C++ projects too.
It looks quite good but, in a way, it is very similar to my snippet I posted earlier (http://www.reddit.com/r/csharp/comments/1d1eve/abstract_enum_w_keys_associated_with_strings/c9m0brc). If you don't mind me asking, how is this one different? Thanks!
A commonly used method for associating strings with enums is by using descriptions. For example: enum MyBaseEnum { [Description("Blah")] Test, [Description("Test")] Something, } string description = Enumerations.GetEnumDescription((MyBaseEnum)value);
BackgroundWorker is getting more and more obsolete. At least for me. Look up Task&lt;&gt; .ContinueWith() and TaskScheduler.FromCurrentSynchronization() Not sure if I understood you right but, here's an example that should do what you are looking for. if (listBox1.SelectedIndex != -1) { this._InputBoxContent = (string)listBox1.SelectedItem; zControlStatus(false); var lTokenSource = new CancellationTokenSource(); CancellationToken ct = lTokenSource.Token; Task task = Task.Factory.StartNew(() =&gt; { this._ccc.zFetchWebsite(this._InputBoxContent); } ) .ContinueWith( (pTask) =&gt; { this._ccc.RaisePropertyChanged("Results"); zControlStatus(true); }, lTokenSource.Token,TaskContinuationOptions.OnlyOnRanToCompletion,TaskScheduler.FromCurrentSynchronizationContext() ); } private void zControlStatus(bool pStatus) { this.listBox1.IsEnabled = pStatus; this.button1.IsEnabled = pStatus; this.button2.IsEnabled = pStatus; }
I have use NAudio library to read/write wav files. Once you have the data points, use a charting library to draw them. Important concept to learn: sampling rate. 
So PCM data (or wav files) are points every few thousand times a second. The problem with drawing a graph, is what is relevant. What do you want to see. A 10 second clip at 44.1khz (standard audio cd) will have some 441000 pixels horizontally, or some 200+ retina display iPads. Obviously you want to remove some of those points. But the question is do you just skip some, ignoring them, or do you take an average? Depending on your application, taking an average could be bad, if someone is trying to find a *spike* in the sound, it will be hidden. As for graphing it, if your going WPF take a look at the DynamicDataDisplay, I'd recommend that because it has good smoothing logic, allowing it to coupe with thousands of data points without blowing up!
I have 2012 Professional and thought "Neat, code maps". Then I saw that ultimate cost $5000 ($4500 more than pro). Nope :-(
When using Find in Files one of the things that really irritates me is when I accidentally leave the "Wildcards" option unchecked. All of the sudden nothing matches my searches! We just updated the Sando Code Search Extension (free, open source) to **automatically guess what type of query you're trying to run**, so you don't have to think when you search. **Anyone up for running a few queries on their code (using Sando) and letting us know whether you like or hate this new idea?** We're considering putting more effort into it in the future and want to know if real developers think it's useful....
I have tried this and get the error. "Error 1 'object' does not contain a definition for 'IndexOf' and no extension method 'IndexOf' accepting a first argument of type 'object' could be found (are you missing a using directive or an assembly reference?) I'm guessing it's because the Session variable is an object and not a string.
Yeah, that'll do it. So just cast it beforehand: &gt; isallowed = ((string) Session["groups"]).IndexOf(groupname);
Thanks, this was what I was looking for. I had to change it a little(oh god it looks ugly). isallowed = Convert.ToInt16(((string)Session["Groups"]).IndexOf(groupname)); This is all new to me, thanks so much for your help. I think I need a good reference book to learn more. I don't work for a company that develops software (read no one programs but me) so I only have Google, Reddit, StackEx, and the poorly documented code left behind in a language I'm learning as I go. 
Are you already using http://converter.telerik.com/? It wouldn't have helped in this case since it won't add the convert stuff for you, but in general it can save you a ton of time.
this looks awesome, and I am putting it on my todo list for tomorrow!
Thanks for the positive words... really helps keep us motivated!
Yeah I'm using that to parse out the html document into potential article content nodes and then use some regex magic on the innertext of those nodes to return the correct article content.
Cool. Pm me and I can test today or tomorrow
Fairly simple, I like it.
I'm already used to CTRL+, But I'm willing to give it a shot David.
pm me and we can work it out
I like to use micro-ORMs like Dapper and PetaPoco. I've heard of Massive but have never used it. I am put off by the bigger standard ORMs like Entity Framework, nHibernate, and LinqToSQL/Entities. For the projects I work on I feel like they add too much overhead. I like it when my ORM can handle POCOs and basic CRUD operations. I'm also very experienced with SQL, so I'd rather just go through ADO.NET to do more complicated things instead of trying to find out the secrets of the universe by getting it to work in an ORM.
We use nHibernate. I'd say I have a love hate relationship with it. I love it when it's all set up, I hate setting it all up.
I've used NHibernate, Entity Framework, and an awful home-brewed solution my company came up with in the days before there were any .NET ORMs. For a beginner, I'd recommend Entity Framework hands down. If you don't have a lot of experience with databases, the EF Code First approach does a great job of abstracting away virtually all the details of a database. EF is still pretty immature - NHibernate is much more powerful and provides more features out of the box. I found it significantly more frustrating to get setup, though. If I was learning from scratch, I don't think I would jump into NHibernate until I was comfortable with how an ORM behaves under the hood. Even though Entity Framework is less mature and has some bugs (well, so does NH), I'd strongly recommend it for beginners working in the .NET stack. Want a place to get started? Check out Nerd Dinner (nerddinner.com). It's a functioning web app, but was written by a bunch of MS guys as a way to showcase Entity Framework and ASP.NET MVC. You can download the source code and play around.
I use EF since learning about ORMs /Hibernate. In java and I really like EF. Never found a bug, and you can move to stored procedures when ever you need better or precise queries. 
+1 fellow dapper user here. we're an SQL-heavy shop - Tried EF &amp; NHibernate - it doesn't work well for us: too much overhead plus it's useless to the Delphi guys. dapper has the DataTable speed but very simple to use.
Whatever event handler is updating the progress bar can update the label too!
A thousand times this. Sending a chat message and a file are just two operational contracts. You can build it manually using hard coded message ids or manual serialization as suggested above, or just use wcf and let the framework do the heavy lifting for you.
+1 PetaPoco. Simple to use and does everything I need. If I was doing enterprise work then EF is growing into a good product.
We use Telerik ORM at work. It's free now , has model editing gui and does some advanced stuff but EF is less of a pain in the balls. 
not a bug, but still unfixed in any released version and non-DbContext users are fucked in any case. var list = Enumerable.Range(1, 1000); var res = context.SomeTable.Where(row =&gt; list.Contains(row.Id)).ToList(); This takes insane amount of time to just create that query, SQL server serves it under a millisecond on small tables (50K rows). We have this problem because we have some entities like accounts and not all users can see data for all accounts and so we limit by accountid what we pull from db.
I've used quite a few in the past but at the moment I'm really impressed with [Simple.Data](https://github.com/markrendle/Simple.Data/wiki/Getting-started). It's clean, simple, and smart - the closest thing to magic I've encountered.
Did that get fixed in Magic Unicorn? http://blogs.msdn.com/b/alexj/archive/2009/03/26/tip-8-writing-where-in-style-queries-using-linq-to-entities.aspx
Entity Framework is lovely.
Thanks, looks pretty kick ass! I'll give this a spin tomorrow.
There are some good answers in this thread, ultimately it depends on your implementation. Enums cannot hold string values on their own, but IMO the two best solutions to what you are trying to accomplish - depending on the purpose - are: - If you want user friendly strings to display somewhere that represent the enums, like in a combo box, decorate them with Description attributes and then add a GetDescrtiption extension method that will return the value in the attributes. For a combo box, you can then use the enums as a data source and hook the format event to replace the displayed strings with the descriptions, with the values remaining data driven. Stack overflow has a few good examples of this. - Create your enums, then create a dictionary that uses your enum as they key and strings as values. You can then pull the values out by referencing the dictionary directly, create a static method, or create an enum extension method to get said values. IMO this is better if the strings aren't just for display but the actual data you want to work with, it lets you use the enums as a sort of "data contact" for getting your strings. - I just had another thought - you MIGHT be able to override the enum ToString method also to return your strings from wherever you are storing then (like a dictionary) using the enums, but you may need to subclass the enum type to do this, which I'm not sure off the top of my head is possible (i.e., if the type is sealed, which I don't think it is). An extension method is probably easier.
I feel like adding the larger ORM's to a project simply adds complexity without much benefit as compared to a mciro ORM such as Massive? Maybe it's just because I am also a SQL guy. I love when an ORM can spare me the pain of building out a DAL from scratch. But it seems like one spends a lot of time fighting with them as well. 
I'm confused at why you would want to do this! You have a list, why not just do var myList = new List&lt;Object&gt;(); // Object in this case would be Player // Populate the list somehow here Then you can do myList.Where(x=&gt;x.Name == "Name"); Or if you wanted to get the first value, you could use myList.FirstOrDefault(x=&gt;x.Name == "Name");
You are using Object in your list and trying to access the 'Name' property in that if statament, but you don't have such property in the Object class. To fix that, you should first cast to Player, then you can access the Name property. Also take a look at Linq, as mentioned by /u/mhooper.
I used to use CTRL+ (i.e., NavigateTo), as well, which is a great! I've switched to Sando (ALT+SHIFT+S) instead because I have trouble remembering the exact name of the class I'm looking for. That being said, someone with a better memory may want to stay with NavigateTo, which is pretty slick. As long as you're not using the Solution Explorer to open files I'm happy :) 
Just some preliminary searching, and I am finding it is not looking inside my cshtml files, and possibly any other file that is not .cs? otherwise it is super fast and effective, I am liking this very much, because I currently use Ctrl+Shift+F and it is slow and cumbersome. Thanks [alot](http://4.bp.blogspot.com/_D_Z-D2tzi14/S8TRIo4br3I/AAAAAAAACv4/Zh7_GcMlRKo/s400/ALOT.png) for this!
I like Entity Framework because it is so well integrated into Visual Studio and most of the code is generated for you. I have used NHibernate for databases that aren't supported by EF and it is pretty good as well. 
ORMs actually is a broad category that contains a number of different types of object to model mapping techniques. For instance, you have the ActiveRecord style, the NHibernate/"hide the database" approach, and the micro ORM approach. In .Net there are very few that do the ActiveRecord approach but the other two are pretty common. With everything it depends on what you need as to what you want. NHibernate, Entity Framework, SubSonic, etc. basically the big ORMs give a number of extra features. For instance database generation, database migration, lazy loading, etc. are usually built in. That said, they're generally slow... In the case of Entity Framework, REALLY slow (http://www.servicestack.net/benchmarks/). The reason for this is a mixture of architecture and the fact that unless you write your own SQL, the generated SQL is generic and poor like 70% of the time. Plus people don't understand that the lazy loading is going to generate another 10+ queries to load those 10 properties... So much of the time the frameworks tend towards the slow side. On top of that the products tend to have a lot of configuration (but many have tools/libraries to help with this). Micro ORMs (Dapper, Massive, PetaPoco, etc) on the other hand are less concerned with the database itself and more about mapping what comes back from ADO.Net to the actual object. They're more of a mapping layer that has a basic understanding of SQL. Most will generate SQL for simple queries but are designed more for you to give it the query your want to use. They tend to have less configuration involved, are much faster, and very lightweight. However you don't get the features that the others contain. I've built/worked on about 4 ORMs over the years and can say that as time has gone on that I tend towards the micro ORMs personally. Speed being the main reason. I use my own heavily but also do testing with Dapper, Massive, ServiceStack.OrmLite, and PetaPoco. I've enjoyed them all quite a bit (although they're the only ORMs that I've found that are faster than mine at present so there's a bit of annoyance there as well). Of them all, Massive is the nicest to look through the code. It's actually beautifully laid out and simple so you can understand what it is doing. Dapper is the fastest at the moment and PetaPoco has some nice features like T4 templates. I would try them all out and just see what you like.
Thanks for checking it out! Yes, it currently only searches CSharp, C, and C++ code, but we hope to expand to other languages in the future. 
Custom types are always an option! I looked at your class though and I'm wondering, what is that getting you over a dictionary of string, object? The private set assessors?
The "value" variable is set to contain objects, I want to be able to contain any type of data (See *https://github.com/LouisTakePILLz/ApplicationProfiles/blob/master/SkypePlugin/SkypePlugin/Main.cs* for an implementation of my API). For the private set assessors... well, there's no valid reason for that one :P (Since I can access them directly with the private var).
Yeah, but you can do that with a dictionary too. Dictionary&lt;string, object&gt; - the value is of type object and thus can store anything.
Oh, hmm, well you wouldn't be able to directly see all the existing keys thru the IDE, wouldn't you?
Wow, I'm amazed by all the great answers you have written here. Thanks a lot. I'll take a look at all the frameworks you mentioned :)
Thanks for the compliments, much appreciated! I hope you enjoy it when you get a chance to use it :)
[IDictionary.Keys](http://msdn.microsoft.com/en-us/library/bb337739.aspx) I would just use a dictionary if I was you - so much functionality to take advantage of
I totally agree. For me bigger ORMs are just something extra to learn; I know SQL REALLY well. So for me it makes sense for me to get straight to the point and get the best out of my RDBMS. So I think Petapoco and Dapper are pretty cool for that. I don't really care for learning HQL, I know LINQ reasonably well, but I have to think pretty hard when it comes to writing complex joins and aggregates. One of my original issues with learning something like EF was having to drag back all columns and I know that you can avoid this by projecting into anonymous classes, but a lot of the extra things to learn or do around heavier ORMs seem unnecessary to me. I was also originally worried about the SQL that they generated, but in actual fact, though a little ugly I've found a majority of NHibernate/EF generated queries to be quite simple and efficient. So I don't have anything in particular against larger ORMs, but they're not really for me. That being said, if you don't know SQL an ORM such as EF/NHibernate can do almost all of the database work for you and it'll do a pretty good job too. 
I use NHibernate for any complex project that needs to work on multiple databases where I "own" the schema. That is to say, if a client comes in for a project and their schema was designed in a logically normalized fashion that NHibernate will "just work" with, then it's the winner. I use a mini-ORM (PetaPoco or OrmLite) for everything else, including personal OSS stuff (I use PostgreSQL for everything, so it's still cross-platform, but lighter weight than throwing in NHibernate). Mini-ORMs are especially helpful when clients come in with whacky DB2 schemas and ask you questions like, "what do you mean when you say *foreign key*?" If it's SQL Server only, I will also use SSDT to version control the database. I never use EF for anything, nor would I recommend it to anyone for more than toy projects. For .NET 4, it's orders of magnitude slower than NHibernate, with a fraction of the features. For .NET 4.5, it's still half the speed of NHibernate (judging by preliminary benchmarks), and continues to have only a fraction of its features. I might be less callous if EF at least got batching, but to my knowledge that isn't even on the drawing board, which is frustrating to say the least!
For inheritance, you could create a wrapper class around a dictionary, with a reference to an optional parent instance of the wrapper. During a lookup, if the wrapped dictionary doesn't have the item, call the same lookup on the parent.
Sure you would! Not to mention, the dictionary already has lots of other neat features, and it's been thoroughly tested. IMO go with the dictionary!
I've used System.Runtime.Serialization.Json.DataContractJsonSerializer with great success. If you're familiar with WCF's DataContractSerializer, it's very easy to use, it's very flexible, and it works well.
Nhibernate used to be my go-to-tool for data access, these days its OrmLite. Love it.
Xaml and other .xml files coming next....
Here's a cool article that highlights the importance of having a good search tool, by the guy who makes Code Maid, one of the top Visual Studio Gallery extensions.
We've had similar issues on using Filewatcher to watch for files that were being uploaded to the directory via FTP.
I'm not sure if it's exactly what you experienced, but I thought I'd mention this just in case. From [MSDN](http://msdn.microsoft.com/en-us/library/system.io.filesystemwatcher.aspx) &gt;Common file system operations might raise more than one event. For example, when a file is moved from one directory to another, several OnChanged and some OnCreated and OnDeleted events might be raised. Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events. Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by FileSystemWatcher.
FileSystemWatcher isn't reliable in my experience. If you add a lot of files very quickly to a watched directory, I've noticed a tendency for the watcher to not raise an event for every file added. Example, you add a hundred files to a directory, you'd get between 80-95 OnCreated events thrown (depending on how quickly the files were added to the directory). At first I thought this was because my OnCreated was taking too long, so I changed the method to increment a global counter, and my results were between 80-95 events thrown (obviously ran it more than once). Has anyone else had similar experiences with the FileSystemWatcher? 
It's due to the way FileSystemWatcher is implemented and is certainly a major drawback From [MSDN](http://msdn.microsoft.com/en-us/library/system.io.filesystemwatcher.aspx) &gt;The Windows operating system notifies your component of file changes in a buffer created by the FileSystemWatcher. If there are many changes in a short time, the buffer can overflow. This causes the component to lose track of changes in the directory, and it will only provide blanket notification. Increasing the size of the buffer with the InternalBufferSize property is expensive, as it comes from non-paged memory that cannot be swapped out to disk, so keep the buffer as small yet large enough to not miss any file change events. To avoid a buffer overflow, use the NotifyFilter and IncludeSubdirectories properties so you can filter out unwanted change notifications.
Came here to say this. I do not rely on this class anymore, it's unpredictable.
Yep, I think this is exactly what it was.
Wow, really glad we decided against using the FSW for a process that took files dumped in a share and pushed them to an S3 bucket in AWS in that case. 
Is there a different class you use for the same purpose?
Same here. I really wanted to use this class, but it's way too unpredictable so I just ended up using the tried and true polling interval method.
Ive heard msdn channel 9's got some goodies on kinect.
&gt;I am working on a Rijndael encryption that encrypts files. Why? &gt;is there any way i can make it read it as Byte[] instead of string? Yes, but no one can give you a more detailed answer without seeing your code.
Maybe this will help? http://stackoverflow.com/questions/202011/encrypt-decrypt-string-in-net
ok to try it. PM me.
I worked with Kinect and in my opinion it´s not precise and performs bad. If you want to get involved with it you should look at the examples and the documentation of the SDK. If it´s about gesture recognition in general I would recommend you the [Leap Motion Controller.](http://leapmotion.com)
Well I had a project assigned to me and started playing with the samples that comes from the SDK. Tracking hands was surprisingly easy and worked great. In short: buy a Kinect, get the SDK, check out the samples, start hacking one of them.
Why is this entry not showing up the csharp subreddit ? I am new to the world of reddit so I am not sure if I am doing something that's not supposed to be done. Any help is appreciated
It handles most of your typical database data types. You can map Many-To-One relationships and such. If you mean serializing a list of POCOs, you can just loop through them and do whatever with the repository for that object.
That's a good point, before I had really gotten the hang of C# I looked at the examples and was completely overwhelmed. I never thought about them again until you just mentioned them, these are actually very helpful. Thanks!
I know this is two weeks late, but I just wanted to recommend InnoSetup. It's small, quick to setup and free! Does everything I've needed to do with it.
I'm beginning with C#, not programming in general, but thanks :) 
Add a "name" attribute to the TextBox. I believe the Request.Form collection is keyed from the "name" attribute, not the ID attribute. &lt;asp:TextBox runat="server" ID="txtTester" Name="txtTexter" Text="YES"&gt;&lt;/asp:TextBox&gt; It's been a while, so I might be wrong. I bet there's something on this over at Google.
No need for a new page, just get the values from codebehind button_click event.
Yeah, that's not it. I got it working on two blank pages. What I figured out is: if the TextBox is WITHIN a &lt;asp:Content&gt; block it doesn't get passed as form data (I guess)
As long as the &lt;asp:Content&gt; block was within the &lt;form&gt; tag, it should work...
this is why I'm pulling my hair out... It is. It should work. It isn't. WTF
This shows my code http://stackoverflow.com/questions/16366930/how-do-you-pass-data-between-pages-in-c-sharp-where-the-source-data-is-in-in-an
Need to keep a light footprint. I guess I'm falling back to GET or use the DB.. Not pretty and I'm trying to impress... fml
Im not a expert but you could try viewstate and/or session variables. Viewstate variable persist over pages. viewstate["txtTest"] = txtTester.text; or you could pass the variable in the url, and then on the recieving page pull it from the url in the button try something like: "~/Process.aspx?var1=test /&gt; then in the codebehind on the process.aspx page string x = request.querystring["id"].tostring(); 
Can't use session. Trying to keep light footprint on server. Will check out viewstate, thanks!
im using ado.net, i like sql, and i have full control. of course if i want something done fast i will use EF.
 ltlDebug.Text = Request.Form["txtTester"]; This won't work because the name of that form variable will be something like ctl001$something$txtTester to make the control IDs unique. You can look in the source of the page to see what it is, or use Fiddler to see what's posted or in your second page do something like this: var actualKey = Request.Form.Keys.Where(x=&gt;x.EndsWith("txtTester")).Single(); x = Request.Form[actualKey];
Just a thought: I would specify the form's method as "POST". Also why not just use an input instead of the ASP.NET control? 
Thanks you're right on target. I guess a control inside a panel will add it to a collection which I need to target. I'll have to rewrite that part now, I just used the database which actually has worked well
When you open a file extension with a program (either using 'Open With', or changing the file association so files of that type always open with that program, and then double clicking on the file) what happens is the full path to the file is passed as the parameter to the program. In C#, you can retrieve this path by finding your Main method (probably in Program.cs if you're making a Forms Application) and making sure the parameters are 'string[] args'. Then simply check if args.Length is greater than 0, and if so, args[0] will have the path of the passed in file. An example program that shows a message box containing the path of the file that was opened: static void Main(string[] args) { if (args.Length &gt; 0) // A file was passed in { MessageBox.Show(args[0]); } } 
Cool, thanks! I'll look into it.
Cool! That's cleaner than having to pass them around from Main, depending on the application.
I have to agree. The entity framework only became a "true" ORM since version 4.1. The reason for this was the introduction to the code first or repository pattern, whereas before it was all active record. So Rikkochet is right in saying that EF is immature compared to NHibernate. I prefer NHibernate, especially with implementing session factories. I like the data migration features introduced in EF 4.5 though. 
Til, you rock!
Dice. Almost all the offerings these days are contract. At least in mn. 
Glassdoor. Once you apply for a couple online, recruiters will get a hold of your info and tend to call you all the time with contact positions.
Able to find anything that is part-time?
If you need a ft .net job msg me :)
It depends on the type of companies you aim for. The big enterprise ones are mainly Java and .NET, I hardly seen Ruby or Python being used outside the usual scripting tasks stuff, like build automation or systems configuration.
Really? Where I'm at .NET is in huge demand. (Kansas City)
On the enterprise type of companies I work for, web == ASP.NET == Java.
Louisville, KY is a .net hub. The .net jobs here floweth over.
Mumbai 
The fuck am I supposed to say to that stupid fucking comment that's not just insulting your dumb ass?
lukeatron's response is pretty much spot-on, not sure how else he can word it. Where in the world did you get the notion that .NET is fading? Everything (and I mean everything) that I'm seeing shows .NET is rapidly expanding in almost every sector of the software industry.
.net mvc is legit. ASP is clunky though.
Enterprise.
It's cute how you think big public facing websites represent some large portion of all the software that gets written. Who cares what technology those projects use when they're not representative of the work 95% of the people are doing?
Louisville, KY, too. Extra bonus points if you don't mind traveling as we seem to be the world capital for industrial automation which requires lots of on site travel and setup. That's what I used to do, in fact. 
There are some sweet micro ORMs for .net
ok, my inbox is getting flooded. apply here http://rfer.us/RAXN.i4Py the job is for Rackspace, which is hard to get in, but my name is tied to that url, so it will land you an interview. good luck
By the way, you're awfully sassy for someone who just posted this nugget on another thread: "I graduated with a CS degree in 2009. I feel like I just learned to code this year..." So you're 3-4 years out of school, admit that you didn't know much (and may still not know much) until this year, but you're quick to dismiss a technology that Microsoft is investing billions into, plus other developers who may have decades more experience than you. Kudos, sir. Kudos.
Elance.com is good I hear.
[Elance](http://www.Elance.com) *^if ^this ^link ^is ^offensive ^or ^incorrect, ^reply ^with ^"remove".*
Barbecue sauce!
You just became an adult and spend your time putting websites together and insult people who actually develop software for a living.
What? Are you serious with what you're saying? "No good ORM" - Entity Framework, Telerik, DevExpress, NHibernate, need I go on? You have more great ORMs in .NET than pretty much any other architecture out there. "No centralized source control" - Umm, ever heard of TFS? That comment right there tells me you have never worked on any big .NET projects. "Until recently shitty deployment" - Again, what? .NET has tons of great deployment options, whether it is Windows apps or web apps (IIS). "Shitty community" - ??? There are tons and tons of .NET message boards and communities. I have NEVER had a .NET question that I couldn't find answered in one community or another. "DLL hell" - Seriously, are you even reading what you're saying? Unless we're still in 1999, DLL hell hasn't been a (real) issue since the first version of .NET came out way back in 2002. "Licensing costs" - Go be a hippy then. .NET is for serious companies / developers who are actually willing to pay for a good technology (and this is not to say other techs are bad - there are plenty of great alternatives to .NET. The difference is that unlike you, I can admit it). "Gigantic IDE" - And gigantic is bad why? Visual Studio is incredibly fully featured AND stable. That's a lot more than I can say for some of the other IDEs (Eclipse anyone? What a nightmare that IDE is, and it can't do 20% of what VS can). "Unmotivated user base" - Do you have any source for this? Some of the best applications I've ever used (both Windows and web) are .NET based.
Can always write in .ashx - exceptionally lightweight. As for orm, there's dapper.
PetaPoco!
I can only speak as someone who has no traditional education in .net (I've never gotten a post secondary education). I'm a long time self-taught programmer, figuring out what my needs are and how to complete them. I now work for a very awesome company and they let me use whatever language I feel comfortable in. We try to stay cutting edge, so I have to be able at any time to incorporate some new, untested feature. If it wasn't for C# specifically, and .net at large, I wouldn't have this job. BrazenAmberite is correct in how awesome the entire .net platform is but I need to make one correction. Licensing costs are nil if you are find with using mono, which is cross-platform compatible. In short, Amberite here is awesome and has excellent reasons .net is awesome. 
To hop on the original question; I have been working my way through learning c# and .net and am trying to figure out the best way about landing some part time Jr. .Net Dev work. It would have to be able to be done from home, after hours as I work full time as a Sysadmin. I mainly want to use this to better my skills. I currently am building games in unity using c# and would like to explore the application side of programming. Eventually, I would like to do the full Indie dev thing while doing some contract work on the side to help pay the bills. Any thoughts on were to go to get small gig's that a self taught coder could do?
Dapper !
This seems like a wonderful tool for CSc and SE education but for large scale applications, until it can handle more than a single method, I don't have much of a use for it. I love the idea!
Hmm, not so keen on this solution for the simple reason the .Net code is portable (ie same binaries for both platforms) yet it isn't redistributable for both, as it only bundles the dll for one platform. When size isn't an issue, I prefer to always distribute both sets of un-managed dlls (assuming here we are always talking x86 and x64). Then we get to my main bugbear with PInvoke, DLL HELL. Oh the hours, days, months, well maybe not months, but weeks anyway, I've lost to this pain. A much neater way of dealing with the un-managed loading is to either take responsibility of pre-loading the DLLs yourself. My prefered ways depend on the problem I'm solving but are either: * Just having a static singleton on the class you are pInvoking that will allow you to LoadLibraryEx the dll before the DllImport attribute is scanned. This way you load "x64\Foo.dll" or "x86\Foo.dll" before the [DllImport("Foo.dll")] is seen. The advantage of this is you can force using LoadLibraryEx a 'good' dll search behaviour, this will also make injection attacks harder if you care about security. * Alternatively consider calling [SetDllDirectory](http://msdn.microsoft.com/en-us/library/ms686203.aspx). I'm amazed how many .Net'ers forget this really handly API. You can pretty much just have var myInstallFolderBase = Path.GetDirectoryName(Assembly.GetEntryAssembly().Location); var path = Environment.Is64BitProcess ? "Lib_x64" : "Lib_x86"; SetDllDirectory(myInstallFolderBase + path); This is my prefered behaviour, but you have to be careful with calls to SetDllDirectory as it might interfere with your unmanaged codes dependencies. So calling LoadLibraryEx is probably an easier idea.
[stackoverflow](http://www.stackoverflow.com) *^if ^this ^link ^is ^offensive ^or ^incorrect, ^reply ^with ^"remove".*
I have nearly full code I can give, but question first: Do you know which column and to which row you are reading to? Or is it undetermined? Also where are you on the program? Do you have the excel sheet loaded? Worksheet loaded?
I haven't tried it, but http://stackoverflow.com/questions/15828/reading-excel-files-from-c-sharp together with http://www.connectionstrings.com/excel-2007 looks promising. If you've already tried that (and other things), consider telling the audience what you've tried and in which ways it failed. Edit: Strictly that link is about reading, but it looks like it should be easy enough to modify for writing. Theoretically.
To much help, when you don't give code, doesn't help you learn. So here is code to 'convert' a DataTable into an Excel document. It is a functional example of how to work with Excel. using Excel = Microsoft.Office.Interop.Excel; public static void ExportDataTableToExcel(string reportTitle, DataTable dt) { if (dt == null) return; var xlApp = new Excel.Application(); object missing = System.Reflection.Missing.Value; if (xlApp == null) { MessageBox.Show("Create Excel object failed, maybe you didn't install Excel "); return; } xlApp.Visible = false; var workbooks = xlApp.Workbooks; var workbook = workbooks.Add(Excel.XlWBATemplate.xlWBATWorksheet); var worksheet = (Excel.Worksheet)workbook.Worksheets[1];// Get sheet1 Excel.Range range; //do some formatting for Column DataTypes and AutoFitWidth worksheet.Cells[1, 1] = reportTitle; //Write text for (var i = 0; i &lt; dt.Columns.Count; i++) { worksheet.Cells[2, i + 1] = dt.Columns[i].ColumnName; range = (Microsoft.Office.Interop.Excel.Range)worksheet.Cells[2, i + 1]; range.Interior.ColorIndex = 15; range.Font.Bold = true; } for (var r = 0; r &lt; dt.Rows.Count; r++) { for (var i = 0; i &lt; dt.Columns.Count; i++) { worksheet.Cells[r + 3, i + 1] = dt.Rows[r][i].ToString(); range = (Microsoft.Office.Interop.Excel.Range)worksheet.Cells[r + 3, i + 1]; var colDataType = dt.Columns[i].DataType; if (colDataType.Name == "DateTime") range.NumberFormat = "mm/dd/yyyy;@"; if (colDataType.Name == "Decimal") range.NumberFormat = "#,##0.00"; Application.DoEvents(); } } worksheet.Columns.AutoFit(); xlApp.Visible = true; } 
And when you run this code... what doesn't work? Where is the error? What is the exception? When stepping through the code, what line does what you don't expect? dt.Columns.Add(str); I find this line interesting, reading rows from excel and adding columns to a DataTable. What is the intent? On a style issue, some places you do this: DataTable dt = new DataTable(); and others you do this: Excel.Application appExl; appExl = new Excel.Application(); The second is odd. And I prefer: var dt = new DataTable(); when it is obvious what is going on. 
Almost: Here's complete. string FilePath = "C:\\test.xlsx"; Excel.Application appExl; Excel.Workbook workbook; Excel.Worksheet NwSheet; Excel.Range ShtRange; appExl = new Excel.Application(); workbook = appExl.Workbooks.Open(FilePath); NwSheet = (Excel.Worksheet)workbook.Sheets.get_Item(1); ShtRange = NwSheet.UsedRange; int Cnum = 0; int Rnum = 0; List&lt;int&gt; rowData = new List&lt;int&gt;(); for(int r = 1; r &lt; ShtRange.Rows.Count; r++){ //For the sake of only helping your code, i'm not error checking rowData.Add(Convert.ToInt32(NwSheet.get_Range("A" + r.ToString()).Value2)); } int[] myArray = rowData.ToArray(); workbook.Close(true); appExl.Quit();
About which part? The jobs or my (old) particular job?
Louisville seems to have a few competing controls and automation companies. The two I'm thinking of specialize in conveyor and industrial control systems. There's also the YUM corporation, which I believe uses .Net. Also, there are several smaller companies around Louisville that specialize in .Net programming. Software development jobs are not hard to come by here if you're any good at all. And as far as my particular job was as a software developer for a shop that specialized in airport automation, mostly luggage and baggage. Our software controlled the conveyor systems as well as displayed system status. The biggest project I worked on while I was there was a complete overhaul of the control and monitoring systems of the UPS Worldport, which is here in Louisville. That allowed me to not travel, which was good as I started while still in school on a co-op program, which getting paid during school is super nice. I worked on the data management stuff. Got to write some nifty programs to interface with both new and existing systems. I decided to leave that position after they started sending me to Las Vegas for two weeks at a time. I know it sounds great, but 10 days on, 4 days off gets old. And no, you don't get to see much of Vegas. What I did get to see a lot of was the inside of a partially built airport terminal setting up servers and configuring systems. Now I work at an insurance subrogation company right outside of Louisville working in data management and mining systems. Still C#. Working with systems where you start measuring storage in hundreds of terabytes is pretty dang cool, too. If you are interested at all (probably not) you can read my resume [here](http://jordanwages.com/professional/).
thanks for the reply, but from the msdn documentation it seems that the [webclient object](http://msdn.microsoft.com/en-us/library/system.net.webclient(v=vs.110).aspx) doesn't work for windows store apps. What I'm using is [httpclient](http://msdn.microsoft.com/en-us/library/system.net.http.httpclient.aspx) which seems to be supported.
Finally found the solution on a [blog](http://blogs.msdn.com/b/henrikn/archive/2012/08/07/httpclient-httpclienthandler-and-httpwebrequesthandler.aspx) in case anyone else is interested. Just needed to instantiate an HttpClientHandler that I wasn't aware of, set credentials in the binder and the instantiate the HttpClient object by referencing the handler. HttpClientHandler clientHandler = new HttpClientHandler(); clientHandler.UseDefaultCredentials = true; HttpClient client = new HttpClient(clientHandler); Hope it helps others!
Your extension methods lack the "this" keyword before the first argument.
What does this do that SoapUI doesn't?
SoapUI is .... Soap. This is meant for REST API.
http://www.soapui.org/REST-Testing/getting-started.html
OK, it has moved on since I used it. sb.exe is ab.exe on steroid. If you have used ab.exe and its simplicity, you will like sb.exe even more. There are tons of load running tools there, and some of them. Even fiddler can do similar. So the point of this tool is simplicity.
This is a very good point. Thanks for reading and bringing it up. I had already wanted to do a more extensive series on this topic, exploring other/better options for handling native DLL references. I've done a follow up article giving an in-depth how-to on the "LoadLibraryEx" approach : http://www.devopsonwindows.com/handle-platform-specific-dependencies-part-deux/ What are your thoughts on Assembly.Location vs. AppDomain.BaseDirectory? I think the latter is a better solution as I've been burned a few times by Assembly.Location due to its behavior when "shadow copying" that often crops up in unit tests. Thanks again for your input.
Yeah, I have already been doing that. More or less looking for little gigs here or there. 
Enum.HasFlag was added in 4.0 not 4.5 as stated in the blog post. http://msdn.microsoft.com/en-us/library/system.enum.hasflag(v=vs.100).aspx (I'm ashamed I knew this from memory)
This is my most used utility when I code. I can absolutely recommend this to everyone!
It certainly beats creating a new testProject12 every time you need to try something out real quick.
Insta-buy, thanks!
Linqpad is awesome. 
Cool, but I'd probably never bit flags unless I was trying to save bits at all costs. Even in that case, I'd put it in a transport layer and not use it in my business logic. In my experience, bit flags lend themselves to abuse by bad programmers and are self-limiting to the max number of bits in your architecture. I'd use a list&lt;enum&gt; instead probably
I've combined the two approaches before, because for low numbers of files FSW does work. It's only when a lot of activity happens at once that you need to have an internal copy of the directory contents to figure out what happened.
Well it is payday, so why the hell not.
I'd like to add here that a while back I made a test case for some performance-critical code, and Enum.HasFlag is quite a bit slower than a bitwise AND and a compare. A quick google search brought up this topic which seems to have more info: http://stackoverflow.com/questions/7368652/what-is-it-that-makes-enum-hasflag-so-slow
Bit flags are great for data driven testing
http://www.linqpad.net/Purchase.aspx Cross-database queries and NuGet integration. NuGet integration is definitely worth it imo!
Sorry about the shameless plug but the OpenSource project [OWASP O2 Platform](http://blog.diniscruz.com/p/owasp-o2-platform.html) has a C# REPL that can also be used like LinqPad: [C# REPL Script](http://blog.diniscruz.com/p/c-repl-script-environment.html) The main O2 Platform C# REPL enviroment is also available as a VisualStudio Extension at VisualStudio Galery (see [VisualStudio C# REPL - O2 Platform](http://visualstudiogallery.msdn.microsoft.com/295fa0f6-37d1-49a3-b51d-ea4741905dc2) ) and if you want to see how I use this REPL environment to solve hard problems take a look at [(grab a coffee first) Using AST to programatically create a Proxy class for a WSDL webservice (in this case HacmeBank and Checkmarx ASMX)](http://blog.diniscruz.com/2013/05/grab-coffee-first-using-ast-to.html). Note that I'm not saying that you shouldn't use LinqPad. I also like LinqPad a lot, and in fact here is a video where I used O2 to [Injecting C# DLLs into Managed (C#) and Unmanaged (C++) processes](http://www.youtube.com/watch?v=5Rv1lxV7t4g) with LinqPad being the managed app used as example. I also wrote a while back on [How does O2 compare with LinqPAD](http://blog.diniscruz.com/2012/08/how-does-o2-compare-with-linqpad.html) which should help to position how both tools can work together
you can also run C# scripts online here: http://csharp-repl.apphb.com/
No. You want the [System.Collections.Generic](http://msdn.microsoft.com/en-us/library/system.collections.Generic.aspx) namespace. You should almost never be using classes in System.Collections any more.
Oops--brain fart. Right you are, updated now.
... or you can instal [Roslyn](http://www.microsoft.com/en-us/download/details.aspx?id=34685) and enjoy testing small snipets inside Visual Studio.
LINQPad is a great tool. I found it about 6 months ago when I started learning LINQ for a new project and now my whole team uses it. I highly recommend it.
... or you could use one of these multiple Roslyn based tools (all running Stand-Alone outside VisualStudio): http://social.msdn.microsoft.com/Forums/en-US/roslyn/thread/d459002e-cb18-40fd-b3ce-56db623e2a09 Here is a video of one those tools in action: [Video: Using O2's Roslyn-based C# REPL Script environment](http://blog.diniscruz.com/2012/06/video-using-o2s-roslyn-based-c-repl.html)
Wrap it in newspaper and bury it in the backyard. 
Well in that post you can see that I'm still thinking about what to do with it :) The idea that I really like is to do mass security analysis of those APIs/packages and help to make them more secure (I work in web application security) I also really like the idea to put some (or all) of those packages in Git, since I think that that would be a much better way to consume them One comment that I received after posting it was: "That offline resource would be really good if NuGet.org went down (or for places with not so good connectivity" And more to your question, I have seen some corporate locations where it is not possible to access NuGet.org
I don't see the point. It's like if I download everything on pypi or all Ruby gems or every plugin available for World of Warcraft. And almost all, if not all Nuget packages are on Github or codeplex in the first place. 
It is possible to configure your own package sources in NuGet. My company has an internal source for internally developed libraries. Options -&gt; Package Manager -&gt; Package Sources. Other than creating a mirror for various reasons, I don't see the need to download then entire repo. As for putting them in Git I don't see how that is a better way of consuming them. The whole purpose of NuGet is to make it easy to manage library dependencies in VS. Also, once you download them, you obviously stop getting updates so unless you refresh your mirror on a periodic basis I imagine it will quickly become out of date. Other than an internal mirror or offline usage I don't see much use in this. 
There is one small error in this - he says the Flags attribute does nothing which isn't exactly correct. It makes it so that if you use ToString on a value with multiple bits, the resultant string will display the enum names of the individual bits it contains separated by a comma. Without the attribute, doing this would simply return a string of the integer value of the combined bits.
Shameless plug (I'm the author), you can also do this with WcfStorm.Rest: [Perf Testing REST Services](http://www.wcfstorm.com/wcf/how-to-do-a-performance-test-on-a-rest-service.aspx)
Stop posting your stupid site, there is absolutely no reason anyone should be downloading this from your site and not the developers if anything this should be considered nothing more than spam.
Really? a single 4 line method and a one line constructor is bloat? Everything else in the class is basically just the constructors automatically generated by the Exception snippet. &gt;Serialization only needs to consist of two functions Serialize, and Deserialize... That's exactly what the code in the post has...
It doesn't look like two functions to me. It looks like two functions and some local state in an object that should be purely immutable data. If the solution didn't rely on the protected base constructor in exception, I would write something like this... http://pastie.org/7929053 Note the immutability of the exception and how simple the data structure is.
Why not just extend an existing exception? IMO opinion if your custom exception is inheriting the base exception class you are probably doing it wrong. Imagine you can't create custom exceptions. Pick the best one that fits your needs and then inherit that exception. Create a constructor which fits your needs and override what ever you need to. 
If C# is what people want to code Android on, why not drop Android/Java altogether and rewrite Android in C#? We have seen [OSes written completely in C#](https://cosmos.codeplex.com/). Of course I am trivializing this to no end, but people have surprised us before with programming voodoo...
Further: New exceptions should be rare things. Ask yourself: has my code actually found a new way to fail, or is it just an alias for an existing concept of failure? Code that interoperates with a unique external systems might reasonably have the need for a new exception, but application code really shouldn't. If your library or application code needs to describe a failure state to the caller, then an exception is probably the wrong tool in the first place. For instance, a bad password shouldn't merit any form of LoginException, since bad passwords aren't an exceptional case. They're a normal part of the application code, and any authentication code should simply return a result which describes the success or failure of the operation. Parameter validation is the only application code which should typically produce exceptions, and there are already convenient exception classes for that purpose. This approach doesn't just help you avoid writing a large number of messy and verbose serializable exception classes. It makes the code easier to consume, since it doesn't require paragraphs of text explaining which application failure cases result in which exceptions. Proper sum types are a powerful and convenient way of expressing a set of mutually-exclusive results, and ensuring that the receiving code handles all cases.
This is an optimization question and there's never a single answer to any optimization question. The answer depends on what happens in reality. If you end up frequently making a lot of the same calls every time the application runs then it might be less expensive to do it all it at once up front and cache that data locally, especially if that data is effectively read only static data. If the calls are made sporadically and are lightweight, it might be best to just make them on demand. If the data is static, you can use a lazy load approach where it's cached locally but only after it's actually needed. If the data might change during the lifetime of the application, you'll probably have to make due with loading it on demand and possibly creating a mechanism to manage concurrency so no one ends up overwriting new data with out of date data. Caching would be a bit complicated in this scenario. In the end, your choice will be driven by a combination of demands for user experience and database performance.
The first rule of optimization is don't optimize. The second rule is if you think you really need to optimize something use real world results to guide you in optimizing anything. The first rule is nice. It lets you build things quickly. This lets you deploy quickly and see how people are actually using the solution and how it performs. Once you know all that, you know where the low hanging fruit is and where your time can be best spent. If you try to optimize something that isn't being used. You could spend hours (days) on a feature that doesn't get used much. 
Okay..this makes sense to me... however this is my first time ever doing something on my own with writing this for a database... so should I just follow suit on how it was before me, or do my own thing? 
BTW, Linq to SQL has been deprecated by Microsoft in favor of Entity Framework. Use it, or my preference: old-fashioned ADO.NET calls. 
Premature optimization is the root of all evil. Typically when you begin optimizing for speed, you are sacrificing readability or maintainability. That being said, you cannot improve something you have no metrics on. So write your application, gather metrics on it. When things start getting too slow, or you are getting complaints, optimize to make it faster. That being said the speed of these things really depends on your database and the size of the tables involved. Joins get expensive VERY quickly in a database, but it can often be less expensive than hammering your database with a lot of little queries.
really? Jeez o man. This place is so behind in technology. I will have to look into entity framework now.
thank you for this
Accctually EF is known to have a bit of overhead, and most of the time you just need a simple DAL... I would recommend a MicroORM like Massive, Dapper or PetaPoco. These MicroORMs are a lot cleaner and simpler than EF. I use PetaPoco on most of my projects.
It has not been deprecated. They're no longer enhancing it, but it has not been deprecated. http://binaryguerrilla.com/post/2013/04/21/LINQ-to-SQL-Its-Not-Dead!.aspx
If they're not enhancing it (to keep up with the industry), then it's as good as dead.
Also depending on your case/db, it might be a good idea to consider Stored Procedures... EF doesn't really like a lot of joins and often speed is awful when compared to SP's...
Started using PetaPoco recently and really like it. I've also just coded up my on DA stuff and passed in parameters and the like. This took some adjusting to but I'm really liking it nowadays. install-package PetaPoco is the first thing I do after starting a new solution.
How has relational databasing changed?
Yes and no. If you follow that principle to the letter you might end up making more queries than you might otherwise need to.
depending on what you do - maybe dapper (https://code.google.com/p/dapper-dot-net/) is all you need. for what I'm doing - EF is an overkill.
I'm just headed to negative karma hell, but I disagree. You have a function which you are expected to return a value, but are unable to due to a problem which you can't recover from then throw the exception. &lt;rant&gt;I find too many developers who follow your advice and decide to return null instead. What happens is execution continues on and then throws a null reference error later down the road that has nothing to do with the original problem. If you throw the damn exception in the first place the error report would include details relevant to the problem rather than some obscure error only slightly related to the problem. Memory and CPU are cheap, just throw the damn exception&lt;/rant&gt;
Thanks for the down votes. Care to discuss or just hate the player?
One more vote for PetaPoco!
This is definitely the case with linq and EF, it can generate some terribly inefficient SQL that can be improved by orders of magnitude by putting it in a stored procedure. Weigh all your options.
I'm not a DBA but if joins are more expensive than individual queries, I strongly suspect you're doing *something* wrong. *In general*, I'm pretty sure minimizing round trips to the DB will be the fastest overall approach, so that's a good rule of thumb. Now, whether it's worth the effort to minimize round trips depends on the specific app.
To put it simply, Entity Framework 5 sucks. Try spanning 2 databases with associations. You have to make it look like one database. Linq to SQL on the other hand was written by the language team and is a joy to work with. 
 if (IsDigitsOnly(input)) //Have to pass in the string here. { var a = Convert.ToDecimal(input); //Must declare variable a here, either decimal or var. } Hope this helps. p.s. to reset the Input variable, just assign it to string.Empty or "", but as it is not used again inside the IsDigitsOnly method, it will vanish anyway. You may want to read up on variable scopes, ref and out. 
Ahh so basic. Thanks so much :) But what if I want to reuse the Input variable for another number afterward? I was trying to do that before and it kept telling me that the Input variable was already in use.
Well, *Input* holds a string and not a number. You can't/shouldn't assign it another type (like a number type). If you want, you can put another string in *Input* (after you extracted the number) at any time. But there are situations where it would be more appropriate to use a new variable instead.
Thanks for the extra tips. I'll definitely do some reading
I've been converting it to a decimal inside another variable (a). Then asking for a math symbol or word, plus minus multiply divide. Then asking for another number and converting it to a decimal in (b). just describing it I know it's probably the most clumsy way I could go about doing what I'm doing. It was the only way I could think of though.
Yeah, but you should be alright for a start. After you used Input to extract the number from it, you can reuse it to store your operator and later your second number, if you want. You can just assign to it again, without specifying the type, like so: input = Console.ReadLine();
Ohh that makes sense. If I understand what your saying in relation to what I've done the fact that I assigned input as a variable with string input; is whats causing me a bunch of problems. I'll just get rid of that. Thanks :) I had been trying to do it with static and public variables in the mainclass section. 
That makes sense. I totally had declaring and assigning confused as the same thing. Thanks so much. Hey since you seem pretty knowledgeable I'm going to ask you another noob question. I'm trying to use my IsDigitsOnly method and I need to create a new instance of it in my if statement. How do I create that new instance? Sorry for my ineptness, the whole object oriented thing kind of confuses me at this point.
Thanks I'll try to fit that in. I think I need to go back to the tutorials. I seem to be getting out of my depth. Thanks for all your help.
Well its a balance isn't it. The first example off the top of my head is Dictionary&lt;TKey,TValue&gt;, if you are using the .TryGetValue method, brilliant. If you are using the indexer ie myDictionary["foo"] and "foo" doesn't exist, then throwing is the only cause of action left to you. That's fine. However a programmer who uses the indexer mechanism when he doesn't know with 100% certainty that the value should be there, is an arse. No KeyNotFoundExceptions please! So the functions may need to throw, it might be the only option open to them, but often that is because the wrong interface/signature is being used. The classic one I find is pretty much any IO bound thing, the APIs for them it appear by law have to be ghastly. Generally I use them wrapped in TPL/Rx as these are my current fashions, which mean I end up with a response result, which includes all the actions I'll expect. Great examples of bad APIs which don't handle exceptions well can all be found in System.IO.File.
You need to pass parameter to the calling function like below.... string input = Console.ReadLine(); if(IsDigitsOnly(input )){ a = Convert.ToDecimal (Input); } else { Console.WriteLine ("was not math related"); } Hope this helps
I agree with you. Up vote. 
You know of a good resource to learn PetaPoco? or should I just google away......
Honestly just download it and try using it for something simple, looking at examples on Google. You'll get the hang of it after trying it out.
You should use int.TryParse(). The same method exists on the double and decimal object as well. Unlike Parse, it will not throw an exception if the input is not in the right format, but a true or false. And if it passes the parse, you also get an out value.
If you simply want to make certain an input is a number you are better off using TryParse. Example with a decimal. decimal inputValue; bool isDigit = decimal.TryParse(input, out inputValue);
What's your budget?
NYC, where the head hunters are thick as thieves...
Depending on your project (whether you can include gpl'd stuff or not) and the size of your project, you might be able to get a TeX engine and pump your data into that. 
I use iTextSharp...it's free, open-source and easy to use: http://sourceforge.net/projects/itextsharp/
Easiest and fastest will probably be reporting services. Most other libraries that are free/inexpensive, while good, will require a little bit more time and configuration to get setup and running. My most recent project used rdlc's on a web server to spit out a PDF to the client; also used iTextSharp to do some occasional post processing on the outputted PDF files. This was a very quick and easy setup and was fairly flexible for the needs of the project. In another project I used purely iTextSharp but it took a while to configure all the page layouts and write the code to draw all the lines I needed. This route was necessary because the formats needed were complex. However it is a great library and wouldn't hesitate to use it again. I have used PDFSharp/MigraDocs for a POC to spit out both PDF &amp; Word Documents for an application. This worked fine until we started getting into large documents and the libraries were kinda slow because they used reflection to be able to process multiple formats.
Ha. Well I was going to mention iTextSharp like a few people have, but I wouldn't say it's either easy or fast until you've picked up the basics (the book on it is a life saver). But if you have money to spend then there's a lot of commercial products around. I'd start with what's available on Nuget: http://nuget.org/packages?q=pdf
iTextSharp is licensed under AGPL, which is apparently bad. I was told that if you use a library that's licensed as AGPL in your code, you then have to make your code open source. I'm not sure if this is correct, but it does seem that way: http://www.theregister.co.uk/2011/03/31/google_on_open_source_licenses/ Edit: I would **love** to be corrected on this, as I've gone and spent a bunch of time implementing the iTextSharp library in my own code, only to be told about AGPL at a later point.
[You are not wrong.](http://stackoverflow.com/questions/1762842/is-the-itextsharp-dll-free-to-use-and-redistribute-with-my-web-application-proje/2655113#2655113)
Just finished a module for a project using Aspose PDF. It's alright. It takes a bit to wrap your head around. I actually used it to export html as a string; the big downside for me was that it doesn't fully support CSS so it was incredibly difficult to make it not look like 1998.
A comment elsewhere on this post linked to NuGet, looks like they still have [the last release under a closed-source friendly license](http://nuget.org/packages/iTextSharp-LGPL/) available
I've used this with good success. https://code.google.com/p/wkhtmltopdf/ I generate a template via HTML then run the html through this.
Constructors are just "special" methods, so the signature rules are the same as methods. Method overloading and optional parameters for the most part serve the same purpose. There are a couple technicalities, but the core difference is optional parameters offer a very terse way to provide default values. For instance, imagine you had a `Person` class which, during construction, could take a string argument `name`: class Person { public string Name {get;set;} Person() {} Person(string name) { Name = name; } } Now if you instantiate this like `new Person("grumpychinchilla");`, your Person instance will have a Name already. If you invoke `new Person();`, the first constructor overload is called which does not set the Name, therefore it will be null. But what if you want the default name of any person to be John Doe unless you specify otherwise? class Person { public string Name {get;set;} Person(string name = "John Doe") { Name = name; } } Now, invoking `new Person();` creates a new Person instance with the name "John Doe." And if you DO pass in a name, `new Person("grumpychinchilla");`, C# will ignore that default "John Doe" value and your person will be named "grumpychinchilla". Lastly, you CAN achieve the default value with method overloads, they're just more verbose: class Person { public string Name {get;set;} Person() { Person("John Doe"); } Person(string name) { Name = name; } }
Whew, the syntax is still pretty foreign to me, If im understanding this right, for the first 2 examples your utilizing the new feature of C# 4.0, and then your last example is method overloading, and the difference between the two is simply adding some more syntax? Sorry, I just want to make sure theres no new best practices that totally negate what im learning in this tutorial.
Overloading methods is really good when you can define a base level of functionality then define an overloaded method which makes use of that first method. For example (maybe not the best example since it would be more appropriate to have the method name be LogMessage**s** for the IList case): public void LogMessage(string message) { messageLogger.Log(message); } public void LogMessage(IList&lt;string&gt; messages) { foreach (var message in messages) LogMessage(message); } You have some terminology slightly askew here: default constructors are parameterless class constructors. Optional method parameters (not "default parameters") are different in that, as the name implies, the parameter is optional when making the method call. For example if you were writing an library that uses a fictional web API to download links: public IEnumerable&lt;string&gt; GetLinks(int numLinks = 10) { // fetch and return 10 links; } Using this method, you could simply call it like this var links = GetLinks(); // uses the default of 10 var links = GetLinks(15); // get 15 instead Both are equally valid and useful and you should learn both. Using optional parameters can cut down on the number of methods you would need to write compared to method overloading. ________________________________________________ EDIT: Probably irrelevant to you but if you are writing a class library that is going to be reused which contains optional parameters with default values, there is something you need to be aware of. These default values will be stored in the .dll. If you reference that method in another assembly, but then the default value is changed and you don't recompile you could potentially be using the old default value leading to incorrect behavior. [More info if you are interested](http://www.blackwasp.co.uk/DefaultParameterProblem.aspx).
&gt; These default values will be stored in the .dll These default values will be stored in the *referencing* .dll (i.e. *not* the .dll that defines the method). I think that's what you meant, but it should be more clear.
Default parameters are just syntactic sugar around method overloading. void foo(string a = "hello", int b = 1) { // do something } is exactly equivalent to void foo(string a, int b) { // do something } void foo(string a) { foo(a, 1); } void foo(int b) { foo("hello", b); } void foo() { foo("hello", 1); } There's a slight difference in the intellisense in Visual Studio, but they compile down to the same code.
Thanks, honestly this is the kind of answer I was looking for, however thanks everyone else, I'll remember this thread when I'm feeling a bit more advanced and I will work on pursuing this topic further!
Learn both - you're going to see them both in the wild so you're better off learning how to recognise and understand them now. There's not much to learn: 1. Specify a default value for the parameter in the function declaration. Parameters with default values have to go at the end of the parameters list. 2. When calling the method omit the parameter with the default value if you want to use the default value. It's a good way of quickly adding a variable to a method without breaking existing calls.
Do you necro post much usually ?
His first example is an example of a class overloading a constructor; it provides a empty constructor, and one accepting one string. the second Example uses new language features in terms of optional parameters. This removes the no-arg constructor, but since the argument is optional, the class can still be instantiated by calling it as if it had a no-arg constructor. The constructor will be called with the default parameter (in this case, John Doe). The third example is a compile error. The intent is to show how constructors can be overloaded to provide functionality similar to the second example's optional arguments but that is much longer. The error is one of syntax. The fix would be: public class Person { public string Name {get;set;} public Person(string name){Name=name} public Person():this("John Doe"){} } It is as grumpychinchilla notes, more verbose. In this case, we have the no-argument constructor. you can invoke other constructors by adding :this(parameters) or :base(parameters) to the end of the constructor method declaration, which is what is done here by the no-arg constructor, which essentially creates the same functionality as the optional keywords. moving back, though, how you actually use Optional keywords depends strongly on your use case. The ideal, IMO, is when you have a group of methods that differ only in that they take successively more parameters; each one would, typically, simply call the version that takes one more parameter, which in turn calls the other; in the person example: public class Person { public String FirstName {get;set;} public String LastName {get;set;} public int Age {get;set;} public Person():this("John"){} public Person(String pFirstName):this(pFirstName,"Doe"){} public Person(String pFirstName,String pLastName):this(pFirstName,pLastName,18){} public Person(String pFirstName,String pLastName,int pAge) { FirstName=pFirstName; LastName=pLastName; Age=pAge; } } As we see here, that's an awful lot of code. This is using the conventional approach of constructor overloads. With Optional arguments, however, we can trim it down: public class Person { public String FirstName {get;set;} public String LastName {get;set;} public int Age {get;set;} public Person(String pFirstName="John",String pLastName="Doe",int pAge=18) { FirstName=pFirstName; LastName=pLastName; Age=pAge; } } Much shorter, and it's easier to see the actual defaults, which were strewn about the other methods in the previous example. That said: personally I always write in a style like the first example. I find it more flexible and I've been bitten by the fact that the default values are considered the same as public const's in that they will be compiled into any referencing assemblies. 
In the case of HashMap/Dictionary classes, I often create derived classes in certain instances that allow me to pass a Func&lt;TKey,TValue&gt; that can be used when keys aren't found; then the indexer simply calls that delegate and returns whatever comes back from it. Usually, it's simply creating a new instance of some object, but it certainly saves sanity checks, ContainsKey followed by adding a new instance if needed, and other boilerplate, too.
That's not true. Default parameter values are stored at the call site. If you have // FooLibrary.dll static class Foo { static void foo(string a = "hello", int b = 1) {} } // FooConsumer.dll Foo.foo() --&gt; call site is actually Foo.foo("hello", 1) Foo.foo("bar") -&gt; Foo.foo("bar", 1) Foo.foo(b: 5) -&gt; Foo.foo("hello", 5) This becomes more obvious if you change the default values in FooLibrary but don't recompile FooConsumer. The old default values will still be used.
I have recently used it as well and it was very easy to use and I was able to make 3 different reports in about 2 days. Give it a try.
I haven't checked this, so it's an assumption. I think it gets stored in both: the defining assembly as metadata and the referencing assembly as a inlined constant when the method is called.
Also IMO, it is very easy to screw stuff up with default params. They should be an exception rather than a rule in most applications.
Not everybody has memory to spare. I use these all the time, as lots of my software has to run on embedded hardware. 
EntityFramework is a huge overhead in some cases, so if you are doing a simple task, L2S can be a much better choice. 
This is the best subreddit ever, I won't be shy throwing future questions around in here as the feedback is incredible.
Thanks for correcting me! I really shouldn't code on my phone. I actually started with method overload for simplicity and changed it to a constructor overload to match his request, and I apparently didn't tidy up enough! :-D Rock on. 
Why not System.Net.HttpWebRequest?
Nothing wrong with your code - just ran that snippet and it worked fine. I'd fire up Fiddler and run that in the background, see what's actually happening to your request. Could be that it's erroring out, or it might be something as simple as a port on your web server not being open.
| This becomes more obvious if you change the default values in FooLibrary but don't recompile FooConsumer. The old default values will still be used. This is true of any const, I believe. So my example should be re-written. const string default_for_a = "hello" const int default_for_b = 1 And then use the const variables in place of the in-line consts in my example.
Here's a simple method to send a POST to a URL, with a payload and get the response as a string. You use it like this, string postResponse = Post("http://192.168.1.1", "?data=true&amp;variable1=yes"); Just remember, the 192.168.1.1 address is for an internal address, so it may not be reached outside of your network. The "?data=true&amp;variable1=yes" part is just for an example. You don't need that. You can put whatever variables you need there. Sorry for the crappy commenting, and the bad error handling. -------------- using System; using System.Net; using System.Text; using System.IO; public class HttpPost { public static string Post(string url, string payload) { try { // Create a request using a URL that can receive a post. WebRequest request = WebRequest.Create(url); // Set the Method property of the request to POST. request.Method = "POST"; // Create POST data and convert it to a byte array. string postData = payload; byte[] byteArray = Encoding.UTF8.GetBytes(postData); // Set the ContentType property of the WebRequest. request.ContentType = "application/x-www-form-urlencoded"; // Set the ContentLength property of the WebRequest. request.ContentLength = byteArray.Length; // Get the request stream. Stream dataStream = request.GetRequestStream(); // Write the data to the request stream. dataStream.Write(byteArray, 0, byteArray.Length); // Close the Stream object. dataStream.Close(); // Get the response. WebResponse response = request.GetResponse(); // Get the stream containing content returned by the server. dataStream = response.GetResponseStream(); // Open the stream using a StreamReader for easy access. StreamReader reader = new StreamReader(dataStream); // Read the content. string responseFromServer = reader.ReadToEnd(); // Clean up the streams. reader.Close(); dataStream.Close(); return responseFromServer; } catch (Exception ex) { return ex.ToString(); } } }
Ok, I must be doing something a bit wrong here because I put it in basically just like you showed and I'm getting nothing. My log files aren't even showing an access attempt being made this time around. &gt;_&lt;
My goodness! Try RestSharp, it's a nuget package.
Moxa W407 at the moment. C# micro framework. It is Windows CE underneath.
Use the **Tag** property of a node to store arbitrary information, such as parent ID, or new **Tuple&lt;int,int&gt;(nodeId, parentId)**
For something like this you will likely need to use a payload class on the TreeNode Tag property. What I mean by this is you'll need to create a small class explicitly for storing some data, and identifying each Node. Fundamentally, it would contain simply the data for each of your Data rows. The tricky bit is that when you are looping through the rows and adding new items, you'll have to search for the parent Node for that row. My implementation relies on the ParentNode being defined and added to the TreeView before the children that are added to it, but it has worked for me in testing. The main part is encapsulating the logic to iterate through all the nodes in a treeview recursively into a enumerator function. This was tested on a small form with a TreeView and one commandbutton. The foreach() that goes through the array field would be replaced in your case with the appropriate data access per field, and likely creating your data class at the start of that loop with appropriate parameters: using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Windows.Forms; namespace NodesTest { public partial class Form1 : Form { private class TestData { public TestData(int pNodeId, int pParent, String pText) { NodeId = pNodeId; ParentId = pParent; Text = pText; } public int NodeId { get; set; } public int ParentId { get; set; } public String Text { get; set; } } //static test data. private TestData[] testinfo = new TestData[] { new TestData(1, 0, "ID 1"), new TestData(2, 0, "ID 2"), new TestData(3, 1, "ID 3 Child 1 of ID 1 "), new TestData(4, 1, "ID 4 Child 2 of ID 1"), new TestData(5, 2, "ID 5 Child 1 of ID 2"), new TestData(6, 2, "ID 5 Child 2 of ID 2"), new TestData(7, 2, "ID 5 Child 3 of ID 2"), new TestData(8, 5, "ID 8 Child 1 of ID 5") }; public Form1() { InitializeComponent(); } public IEnumerable&lt;TreeNode&gt; getAllNodes(TreeView tvw) { foreach (TreeNode iterate in tvw.Nodes) { yield return iterate; foreach (TreeNode childiterate in getAllNodes(iterate)) { yield return childiterate; } } } public IEnumerable&lt;TreeNode&gt; getAllNodes(TreeNode tvw) { //iterate through all nodes... foreach (TreeNode iterateNode in tvw.Nodes) { yield return iterateNode; foreach (TreeNode childiterate in getAllNodes(iterateNode)) { yield return childiterate; } } } private void button1_Click(object sender, EventArgs e) { tvwTest.Nodes.Clear(); foreach (var iterate in testinfo) { TreeNode CreateNode = new TreeNode(iterate.Text); CreateNode.Tag = iterate; TreeNode ParentNode = null; //if the parentID is 0, then add it to the TreeView. if (iterate.ParentId != 0) { //if there is a parent, look through all the nodes, and find it. foreach (TreeNode IterateNode in getAllNodes(tvwTest)) { TestData grabdata = IterateNode.Tag as TestData; if (grabdata != null) { if (grabdata.NodeId == iterate.ParentId) { ParentNode = IterateNode; break; } } } } if (ParentNode == null) tvwTest.Nodes.Add(CreateNode); else ParentNode.Nodes.Add(CreateNode); } } } }
Thank you so much for your help man! I'm gonna go try it out and report back! I appreciate your help more than you know. I don't know a lot about tree views and this stuff is killing me. 
Im trying to just redo your code and get it working. I am getting a strange [ERROR MESSAGE](http://i.imgur.com/096KMqc.png) in the code? 
You need to have both versions of the getAllNodes method. Notice how the parameter signatures aren't the same? You've only got the one that takes a TreeView, and you're trying to use the one that takes a TreeNode. Add that and you should be all set.
Today you, tomorrow me :)
I also like PDFsharp
Do you happen to be a student? If so, you can get VS for free from Microsoft DreamSpark
F#?
To be honest, I'm not sure why we "closed" the ".Net Developers" community and funneled everyone into "C# Enthusiasts" (rather than the other way around), but anything .Net related is welcome here.
Looks good! Just joined as well. :)
Joined. :)
joined.
Well after avoiding it for a long time, I'll finally activate Google+ on my account and give this a good try.
These are great ideas, do you want to help executing some of them?
See also [this related reddit discussion thread](http://blog.diniscruz.com/2013/05/how-teammentor-stores-sha256pbkdf2.html) at the [/r/netsec](http://www.reddit.com/r/netsec/) community
By the way, this is done on a Minecraft server written from scratch in C#. [Here's](https://github.com/SirCmpwn/PartyCraft) the server, [here's](https://github.com/SirCmpwn/Craft.Net) the library that powers it. That library has support for networking, physics, a client and server, game save manipulation, etc. There's also a [proxy](https://github.com/SirCmpwn/SMProxy) I've written with it. All open source and cross-platform, of course.
There's still a long way to go. Here's an incomplete list of things I haven't done: * Mobs * Redstone * Crafting/Enchanting/Smelting/etc * Terrain Generation * Lighting If you'd like to, though, you're welcome to contribute. [Here's](https://github.com/SirCmpwn/Craft.Net#contributing) the guidelines for submitting pull requests. You'll join the 20 forks already contributing to Craft.Net.
This is awesome. I've been on the lookout for C# projects to contribute to. I'll meander through some of the code later. If nothing else, it should be interesting. Thanks for posting!
[Here's](http://www.youtube.com/watch?v=l9WzQMNMg68) another cool thing I've done with C# and Minecraft - writing a Minecraft Classic server from scratch in 6 hours.
It's about time you pull your weight around here. Start working. Now git.
Way to get to the source of the issue....
That's insane. It seems like there could be some fun opportunities here in, for example, distributing C# scripts that build you an Enterprise Class D in-game, for example. Also some interesting possibilities a la Light Table: http://www.kickstarter.com/projects/ibdknox/light-table For example you could presumably use this to code in a slider bar to control how fast time progresses, and make that time speeds up/time slows down effect a part of beating levels, that sort of thing.
I might be going out on a branch when i say this but you can go fork yourself.....
This is cool, but I would be very very careful who you give these kinds of permissions to. Allowing someone to execute arbitrary code on your computer is the absolute nightmare security scenario, even within the C# security profile. A warning somewhere around the download link might not be a bad idea. Even just the fact that you allow an intruder to make HTTP requests makes you a botnet wet dream.
Yeah, the docs for this will definitely have very strong words of warning, and you'll have to explicitly set who can and cannot use this command.
It lets you run arbitrary code on your server, so you could basically do anything you wanted.
the client is.
First method called in Main() has a typo. CheckEnviornment()? :P
Pull requests welcome.
I wrote the whole server from scratch in C#. The client is written in Java, but the code here runs on the server.
Nice. What version of minecraft? Is the source available?
Latest version. Source code is liked from the video description.
Well for starters, in just a few short lines of code, you could have the server download a native executable and then execute it, since I imagine you can do way more damage in C/C++ than in regular C#.
This is incredible, I want to see how it works, but how can I use it?
Windows or Linux?
I could clone it, but couldn't open it, it says it was created with a newer version of Visual Studio(mine is 2010). 
[Here's](https://github.com/SirCmpwn/Craft.Net/tree/master/Craft.Net.Client) my client library, which you can use to make bots and such. I'm working on a proper client, with graphics and such, but very slowly. I'm not good with OpenGL.
Check out Manic Digger then if you get into a spot. I think he used SDL.NET (not sure). But again, VERY nice work dude. What version of the framework is this for? If it's v4.0+, you could even add IronPython or IronRuby via the DLR, and actually have an external scripting language for it. Mind is going on the possibilities for this....
This is built for .NET 4.0. It also compiles all the files in `plugins/scripts/` in the same way it does the REPL stuff when it starts up, so you can drop this REPL code into a file and run it on start up. You can even define new types and everything, just by dropping some C# into a file in that directory. You can also load .NET DLLs as plugins, so any IL stuff will work. I'm even planning to have support for Bukkit plugins with IKVM. As far as OpenGL stuff goes, I'm using OpenTK. It's not bad, I just struggle with it a bit. I'll put more work into it since there's interest.
Do that. Create a codeplex project if you dont mind sharing the source. I think this will get alot of attention. Kudos!
It's already in a GitHub repository, it's just private until it's worth a damn.
Is the Java MC server open source? Did you just use that for source? Having Java being close to C# is pretty nice :)
The "Java MC server" you speak of is probably the official server, and no, that's closed source. There's also Bukkit, which is open source, but violates its own license and uses decompiled code from the official server. I created this from scratch, without consulting the decompiled official code. All reverse engineering thus far has been clean room.
Nice one! Have you written a game engine before? You just monitor packets to find the protocol or what have you?
I haven't written a game engine before, and I wouldn't really call this work a game engine. I do monitor packets, though. The connection is encrypted, so I [wrote a proxy](https://github.com/SirCmpwn/SMProxy) that can get in the middle and decrypt it. It then logs packets, and I use this to find protocol changes. There's also a tool called burger that can inspect the official executables and produce clean-room reports of packet structure and such, but this hasn't worked properly as of late.
That is really cool, how did you created that timelapse video?
Just out of curiosity, would this work for F#? It has an interactive interpreter and can be sandboxed.
you might want to read the description of the video. &gt;If you notice that it isn't quite six hours and isn't quite from scratch, it's because the same keyboard shortcut I regularly use in Visual Studio (F10) is mapped by default to cancel recording in **CamStudio**.
I don't play minecraft so I might not be able to appreciate this fully, but I have to say it looks really cool. Nice work.
Hi, I just used your code sample as an refactoring example in Using [FluentSharp API’s to refactor C# TreeView sample](http://blog.diniscruz.com/2013/05/using-fluentsharp-apis-to-refactor-c.html) Thanks
Hi, based on the code sample provided by BCProgramming, here is a refactored version using the [FluentSharp APIs](http://nuget.org/packages?q=fluentSharp) (see post [FluentSharp API’s to refactor C# TreeView sample](http://blog.diniscruz.com/2013/05/using-fluentsharp-apis-to-refactor-c.html) for details on how the script below was created) Here is the script file: var topPanel = "PoC - Populate TreeView from data" .popupWindow(700,400); //var topPanel = panel.clear().add_Panel(); var tvwTest = topPanel.add_TreeView(); var button = tvwTest.insert_Right(200) .add_Button("click me").fill(); var testinfo = TestData.GetTestData(); var nodes_XRefs = new Dictionary&lt;int, TreeNode&gt;(); Func&lt;int, TreeNode&gt; findParent = (parentId)=&gt;{ if (parentId ==0) return tvwTest.rootNode(); return nodes_XRefs.value(parentId); }; Action&lt;TreeNode, int, string&gt; addItem = (parentNode,id, text)=&gt; { if (parentNode.notNull()) { var newNode = parentNode.add_Node(text,id); nodes_XRefs.add(id, newNode); } }; Action populateData = ()=&gt;{ tvwTest.clear(); foreach (var iterate in testinfo) { var parentNode = findParent(iterate.ParentId); addItem(parentNode, iterate.NodeId, iterate.Text); } tvwTest.expandAll(); }; button.onClick(()=&gt;populateData()); //O2File:E:\O2\O2.Temp\5_22_2013\tmpCCF6.tmp.cs And here is the data class file (tmpCCF6.tmp.cs) using System; public class TestData { public int NodeId { get; set; } public int ParentId { get; set; } public String Text { get; set; } public TestData(int pNodeId, int pParent, String pText) { NodeId = pNodeId; ParentId = pParent; Text = pText; } public static TestData[] GetTestData() { return new TestData[] { new TestData(1, 0, "ID 1"), new TestData(2, 0, "ID 2"), new TestData(3, 1, "ID 3 Child 1 of ID 1 "), new TestData(4, 1, "ID 4 Child 2 of ID 1"), new TestData(5, 2, "ID 5 Child 1 of ID 2"), new TestData(6, 2, "ID 5 Child 2 of ID 2"), new TestData(7, 2, "ID 5 Child 3 of ID 2"), new TestData(8, 5, "ID 8 Child 1 of ID 5") }; } } 
So how can I prevent a NullReferenceException? The code is to get the GameObject a player is pointing at, but if they point it to the void, The GameObject is null.
The whole hit.collider.gameObject is from the Unity API, not my design.
Because they are value types. They are allocated on the stack when they are declared, in the same way as the basic types like int, bool, float. When you assign a struct variable to another variable the memory is copied to the new variable. Note that reference types that are contained in the struct are not copied, only the reference is. (And that increases the reference count on that object.)
collider is null
Ok and when does it start? Also with F10?
Are you saying you're not using the Java server supplied by Mojang at all?
with a struct you could also check for its default value default( &lt;&lt;type&gt;&gt; ); ie if( value == default( &lt;&lt;type&gt;&gt; )) //do something 
Correct.
this works with nullable and non nullable types 
That's pretty impressive. Did you decompile either the server or the game or what to figure out what calls the game is making and what the server needs to respond with?
Nope, it's all clean room. Inspecting network traffic and such.
And also has a different meaning for each. For example, default( string ) is null. default( int ) is 0. If somebody passes an int value of 0 to your function, the check will be true, even if you didn't actually want that. Be sure you know what you're doing. And if you need a way to say "no value/unknown value", making your struct nullable (e.g. int?) and checking for null is pretty much always a better idea that using / checking for default( &lt;struct&gt; ). Avoiding designs that need that kind of weirdness is an even better idea, where that's possible.
What do you not like about Visual Studio Express? It's free and it's very good. Otherwise http://monodevelop.com/
Sharpdevelop
It's not a matter of wether I like it or not, but rather that VS Express has certain limitations when it comes to developing professional applications.
Thank you, this seems to have most of the productivity tools that I'm interested in. I'll give it a whirl.
Holy shit, I wouldn't even know where to begin doing that.
Could you post the larger block of code? All RaycastHit objects should have a collider value (which in your case is null). I suspect that you are accessing the RaycastHit object when no collider was detected. Code should be something like: RaycastHit hit; if( Physics.Raycast( ..., out hit ) ) { // This will only be called if Raycast returned true. Debug.Log( hit.collider.gameObject ); } /r/Unity3D would be a more appropriate place for this question.
*occasionally useful rule of demeter 
Aptana?
If you are alone, buy an Action Pack license (cheap), or even better, a BizSpark one (free!). If you are working for a employer, you should make it clear to him that you need VS. If your employer wants you to develop in .net, he needs to take that cost.
You also need Resharper. Okay... You don't 'need' it...but you don't 'need' toilet paper either but it sure makes things a lot better
What are the limitations of the Express editions that bother you?
Like any enterprise tools from any vendor, they don't come for free.
If you want to learn, use the free software. If you want to do it professionally, pay for it as a business expense. Or if you want to learn to be able to work at a place that develops C#, you will have to learn using VS as well as C#. Plus you're not going to have a good time with another IDE.
You haven't given any reasons why VSE (probably the best free ide I've ever used) isn't sufficient. Stick with VSE, or tell us what's missing
"certain limitations"? Sounds like you're trying to make problems where none exist What limitations?
http://xamarin.com/studio
Isn't Ultimate like 13K? [Yep.](http://msdn.microsoft.com/subscriptions/hh442902.aspx) 
Try http://o2platform.com/ http://csharp-repl.apphb.com/1 http://blog.diniscruz.com/p/c-repl-script-environment.html http://blog.diniscruz.com/search/label/O2%20Platform http://blog.diniscruz.com/2013/05/using-fluentsharp-apis-to-refactor-c.html http://blog.diniscruz.com/2013/05/how-to-start-using-o2-platform-and-its.html
Xamarin Studio
if you want nuget visual studio is the only option i know of at this time although i know there are alternate versions of nuget being developed for other ides visual studio is the premiere ide on the market for many languages as of right now 
Sharpdevelop can also debug .NET applications *without* the existence of debug symbol files (pdbs) OR sourcecode. INSANE
I love Resharper. When I get a job I'll actually buy it, already bought PyCharm from them though. 
afaik nuget is a command line tool, you don't even need VS to use it, just Powershell... Edit: also, [this](http://community.sharpdevelop.net/blogs/mattward/archive/2011/01/23/NuGetSupportInSharpDevelop.aspx)
i was referring more to the plugin to browse the feed and install the command line tool is part of the core of nuget and has been used in many other project in interesting ways like teamcity and forks of the project like chocolatey im just saying for a beginner the tooling is already there in express and is easier to use than in alternate ides like mono develop where the tooling is still under development 
Yeah... My bum has been a little painful after swapping back to Eclipse for java development. I want to give IntelliJ a try, as it is made by the same company as Resharper (Jet brains)
&gt; I want to learn C# &gt; VS Express has certain limitations when it comes to developing professional applications If you're still learning then VS Express is more than good enough. What limitations prevent you from using it? I can't think of what limitations VS Express would have that a free IDE would provide.
Visual Studio Express is the way to go unless you really can't use it for some reason due to limitations. If you're doing private business development look into BizSpark which will get your VS Ultimate free for 3 years - http://www.microsoft.com/bizspark/ If you're a student or teacher, check out DreamSpark which is a similar program https://www.dreamspark.com/ As a last ditch effort you could use Xamarin Studio or SharpDevelop.
I like your *anal*ogies :P
Redgate bought the once free reflector and made it pay. I'm sure it's great though, Redgate make quality stuff. 
Well, first that comes into my mind is not being able to set an external executable as the "start action" when you debug. You can only run the debugger on an application project. You are not able to set a library project to be the startup project, nor you cannot attach the debugger to another process. So if you want to debug your unit tests, the unit test project must be an executable.
Urmmm, first rule of developing... "Google is your friend". MSTest is not allowed on express editions, but you can install the very popular XUnit or NUnit... http://stackoverflow.com/questions/3424229/unit-testing-in-visual-c-sharp-2010-express As unit tests are pretty much the only thing you'd want to run for developing a library these should do the trick. 
As a Nuget contributor, let me assure that the majority of its features depend on it running within the IDE, it needs access to the environment to manipulate the projects and solutions and to execute the install Powershell scripts. In fact my biggest problem with it is how difficult it is to use in scripts that run outside the IDE. Edit: To be clear I didn't say which IDE, just be aware a number of more complex NuGets use install scripts that directly access and modify the solution and or project files, and rely on VS.
First of all, most people will not need an edition higher than Professional. Second of all, you don't need to buy it with full MSDN subscriptions, you can get it standalone for around 600€ or the regional equivalent. Which is not that expensive for an enterprise development tool.
NUnit combined with Rhino Mocks is far superior to MSTest anyways.
"Except it’s handy if we use reflection and it changes the output when we print the value."
Here is one of my first attempts at using NuGet programatically outside an IDE: http://blog.diniscruz.com/2013/05/retrieving-nuget-package.html?m=1
Interesting. Couple of points though, the Nuget source code is open source so no need to disassemble the IL. Talking to the Webserver is also trivial - it's basically just an RSS feed and the nupkg files are just zip files (rename to zip to see). Inside you'll find a nupkg file and everything you need for the package. The complexity is to do with the way the project and solutions are modified. Also any install.ps1 scripts (or uinstall scripts) are passed several variables that give access to the VS environment. Hence full installation is only guaranteed to work when run inside a VS instance. I'm writing this on my phone from memory, but the principles are right. 
Oh, I'm not sure if its relevant but I'm running Windows 8 at the moment.
Right?! I use ILSpy, which is made by the same people, it does the first part, debugging CLR DLLs without PDBs. It's pretty basic .NET "decompiling", but no idea how it gets accurate variable, method names etc. Might be worth a look through their code ([here for instance is their code that gets variable names](https://github.com/icsharpcode/ILSpy/blob/master/ICSharpCode.Decompiler/Ast/NameVariables.cs#L162)) to understand it. You can use ILSpy to debug programs as I mentioned with SharpDevelop, but I'm not sure it's a stable release that does this. 
How about a dictionary? Dictionary&lt;int,TreeNode&gt; dictionary = new Dictionary&lt;int,TreeNode&gt;(); TreeNode root = new TreeNode("Database") // "Database Node" add to this if ParentNode not found foreach(var x in whatever_has_your_data) { TreeNode new_node = new TreeNode(x.Name_Here); new_node.Tag = x.NodeID; if(dictionary.ContainsKey(x.ParentNodeID)) { dictionary[x.ParentNodeID].Nodes.Add(new_node);} else { root.Nodes.Add(new_node);} dictionary.Add(x.NodeID,new_node); } treeview1.Nodes.Add(root); 
Resharper? :D
Start from the other end maybe? * Where are you integrating it? * Does the project you're working on have a plugin system? * What's your first goal? (Hello World equivalent - send a UPNP announce) For testing, maybe use Wireshark.
- It will be integrated directly into the server portion of the project, so that all files available using our API will also appear in DLNA. - Not at this point, but we do have an abstract TCP server that I'd like to inherit from for easy reporting and control of the DLNA server's state. - I'd like to be able to browse the directory structure (object hierarchy in DLNA?), and then focus on actual playback. I have used Wireshark in the past for reverse engineering, and will probably do so again. I just need to figure out how to get a DLNA server up and running first.
I don't see the appeal of DLNA. In theory it is clever, but in practice there are so many emerging and evolving codecs that devices are obsolete the moment you buy them. I tried to use the DLNA on my newish Sony flat screen TV, but it just wouldn't play any of my files.
&gt; C# media server project Does it have a name, and is it publicly available?
It does! I just didn't want to shamelessly advertise the project. :) It's called WaveBox, and source is here: https://github.com/einsteinx2/WaveBox It's meant to be a replacement for Subsonic, which is a media server many of us currently use, but are not entirely happy with. We should have a public beta coming up in a few days, once some more work is done on the integrated web UI!
In my experience, DLNA is a huge pain in the ass on the programming side, but it makes sending media to devices like game consoles (specifically the PS3 and Xbox 360) a breeze. A major goal of our project is to provide less technical users a way to stream their media across a network, and possibly over the internet, in a dead-easy manner. If I can put the work in so that a user can download WaveBox, point it at their media library, fire it up, and then immediately begin enjoying that media on their PS3/Xbox 360/other set-top device, then it was worth the effort!
That seems really interesting! Will definitely follow, maybe I'll be able to contribute eventually too. &gt; It does! I just didn't want to shamelessly advertise the project. :) One is allowed to advertise nice open-source projects! (my own rule ...)
But sometimes for some of your devices DLNA is the best possible solution.
Thank you! It's a project I'm very excited to use every day. Just wanted to make sure that it was clear that I am pursuing information, and not just advertising a project. I'll be sure to report back to /r/csharp once the beta is ready. We'd love to have testers, and hopefully some contributers too!
Have you tried Moq? Personally I don't get on with Rhino mocks, much prefer Moq syntax.
It still is better than 95% of other IDEs no matter what language you choose.
the best free IDE you can get is [sharpdevelop](http://www.icsharpcode.net/opensource/sd/). I does everything that Visual Studio does :)
It's so easy to just use IIS that I've honestly never tried anything else, but my understanding is that it's possible. It might be a good sanity check just to try IIS even if that's not your target - it might identify something else that's off... Good luck to you.
I tried it. I wanted to like it because it has some great niceties like a Monokai theme that *just works* with C# syntax highlighting. There is so much to desire when compared with VS2012 though. Xamarin Studio has some function like what R# gives but it is awkward and more difficult to configure properly than it really should be. In 3-5 years it might be good enough to take a big bite out of VS userbase but not now.
My problem is that I am using a version of IIS/ASP.Net that does not have websocket support.
I got Visual Studio 2012 Ultimate for free through my School's MSDNAA subscription what a steal! At work I use VS2010 Pro.
Have you tried using SignalR? It may not give you "true" websocket support but I believe it fakes it for lower versions. 
Have you tried basic network troubleshooting? Can you connect via telnet on localhost to the port you are trying to open? If it isn't open can you write a basic C# code to open that same port and connect to it? If you can connect locally can you do the same from the client machine? If not check firewalls. If so it might be good to fire up a packet sniffer and see what might be happening negotiating a connection.
Yes, please do that! I'll gladly test it.
Check [this answer on stackoverflow](http://stackoverflow.com/questions/2211898/c-sharp-websocket-server) for a simple implementation. Here's also one of [my own implementations](https://github.com/jamessantiago/jamescms/blob/master/jamescms/Services/WebSocketControllers/WebSocketFileTail.cs) of fleck in asp.net. Working with ports you also need to verify the port is open between the client and server. Lastly, if you have an internet facing websocket server you can use this client testing tool: http://www.websocket.org/echo.html
So I am using SignalR, but I keep getting this exception when I try accessing signalr/hubs Server Error in '/' Application. An item with the same key has already been added. Description: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code. Exception Details: System.ArgumentException: An item with the same key has already been added. Source Error: An unhandled exception was generated during the execution of the current web request. Information regarding the origin and location of the exception can be identified using the exception stack trace below. Stack Trace: [ArgumentException: An item with the same key has already been added.] Microsoft.Owin.Host.SystemWeb.Infrastructure.&lt;&gt;c__DisplayClass1.&lt;GetRethrowWithNoStackLossDelegate&gt;b__0(Exception ex) +73 Microsoft.Owin.Host.SystemWeb.Infrastructure.ErrorState.Rethrow() +40 Microsoft.Owin.Host.SystemWeb.CallContextAsyncResult.End(IAsyncResult result) +155 Microsoft.Owin.Host.SystemWeb.OwinHttpHandler.EndProcessRequest(IAsyncResult result) +34 System.Web.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +9629708 System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean&amp; completedSynchronously) +155 Version Information: Microsoft .NET Framework Version:4.0.30319; ASP.NET Version:4.0.30319.17929 Edit: I found that this is because for some reason it tries to add my hub to the proxy twice. Does anyone know why it would be doing this?
You're describing inheritance and covariance which I already understood. What I didn't understand is how you can safely go backwards on that process. What I mean is how can the compiler trust the interface's contravariant method not to add a Dog to the Animal object (since it has write capabilities) when it initially expected a Fish then assume the Animal object is a collection of Fish. But I think I understand it better after reading the SO article that NoHant posted.
Eric Lippert has written a large multi-part [series](http://blogs.msdn.com/b/ericlippert/archive/2007/10/16/covariance-and-contravariance-in-c-part-one.aspx) on contra &amp; co variance. I need to read this series again as I've forgotten the details. p.s. Eric Lippert used to work on the C# compiler until recently.
The compiler doesn't always know. It's possible to get InvalidCastExceptions at runtime. EDIT: Actually I describe casting in both directions. I guess the code sample only goes from derived to base I'll update it.
Thanks for the example.
That SO link and the videos it provides are exactly what I was looking for. Thanks for the explanation. I'm starting to get a much better picture of covariance and contravariance.
You could add a custom-styled data error element and use that to trigger the indication. Look into IDataErrorInfo and friends.
"He" is actually me :) It might be a bit unclear but what I did mean was that it might be useful when you do use reflection to find all the enums that you use for bit-flags in your applicaiton, by looking for anything marked with FlagAttribute. The sentence might read better if I change it to: "Except it's handy if we use reflection. It also changes the output when we print the value".
Why not surround the checkbox with a panel that's slightly larger, then change the panel's backcolor? Then it would appear as if the checkbox was highlighted?
A contravariant method might instead have a constraint `where Dog : T`. This allows you to *put* Dogs in your IList&lt;T&gt;, much like the `where T : Dog` method lets you *get* Dogs from an IList&lt;T&gt;. Covariance lets you fetch, contravarience lets you put.
Open the dll containing Color struct with ILSpy and see what the property accessors do. 
I just looked at it, and rather than storing the colour in separate bytes, it seems to be storing the colour as a UInt64, and then doing a couple of bitwise operations to get the channel value. The UInt64 also is a property. Bitwise operations are pretty fast, so it wouldn't cause that much slowdown. It seems to be the fact that they're properties, rather than what they're doing. [Edit] It seems especially inefficient when using a known colour. It seems that every time you access one of the channel properties, it checks if it's a known colour, then if it is, converts the known colour to an ARGB value. *Every* time. I would have expected the ARGB value to be cached, so it only needs to look it up once.
Just did that, and it went from 0.193 to 0.189 seconds, while the UnsafeColor went from 0.022 to 0.015 seconds. With a read only property the UnsafeColor has a time of 0.158 seconds in debug, while in release it has a time of 0.118 seconds. [Edit] I had a thought, and changed the properties to functions that only returns the backing field. The time taken for UnsafeColor is unchanged from using properties. If the properties are being converted to get and set functions when compiling, then the cost of the function call would explain it.
Tl;dr null is to string as bald is to hair colour
Yeah, well that's what properties are, just getter/setter functions with prettier syntax.
Nice lol. 
I will say that in my own ignorance, I found the article informative, as I did not know that "is" did anything other than check the declared type of the variable itself. 
Same, I learned 2 things: "is" checks the type of the value and not the type of the variable, and that null, although fits in a string, is not a string. Good find!
This extension is awesome, allowing you to paste in strings as comments or quoted and escaped strings. However, it is only available as an Add-in. Someone could get tons of downloads on their VSGallery page if they just ported it to an extension and posted to VSGallery. Someone help us!
G+ has gotten soo much better, more people, more active .. not a huge fan of the new layout but Ill get used to it.
Everything is more obvious in hindsight ;)
Wow, this sounds like a great opportunity
SpaceX is on the list of places I would look if I ever decide I don't like my current job or need to move to that side of the country.
It's perfect for a lot of us in the .NET world. It's not rocket science and you still get to support a company that actually matters. If I hadn't just moved to the east coast a few months ago, I'd be all up on this.
Only skimmed it, but the code is slightly broken. ListBlobs only lists the first 5000 blobs in a given container so if a container contains more, the code won't work. ListBlobsSegmented is what you want. I would say the Azure API is a little crappy for providing a method called ListBlobs which only lists 5000 blobs and without possibility to list more. I'm guessing more than a few people have written applications relying on Azure Storage which has stopped working when there's too manyblobs.
I don't know the specifics but you may not be eligible. &gt; To conform to U.S. Government space technology export regulations, applicant must be a U.S. citizen, lawful permanent resident of the U.S., protected individual as defined by 8 U.S.C. 1324b(a)(3), or eligible to obtain the required authorizations from the U.S. Department of State. 
They're probably hired to make KSP mods. :P If I lived in America I'd apply on the spot. But on the other hand, I don't know if I am ready for such responsibility yet... Space is hard and unforgiving.
Hrmmm... this has pretty much everything I'm doing now minus the freedom to make whatever apps necessary. Going to fire up the old resume and do some major updating.
An old colleague of mine now works for SpaceX. He wasn't exactly Mr. Congeniality, but he was about as talented and intelligent of a developer as I've ever worked with.
Interesting, I was not aware of that little tidbit . . . The post was really just to illustrate how the overall concept might work. Also note that my clever recursive function apparently calls out to azure with each recursive call. I am learning some of this as I go here, and somehow failed to consider whether the API resulted in an eager or lazy load. Another source informed me it is likely a lazy load. Beyond all that, it gets really interesting when you step into the async end of things. However, since the Blob storage model was supposedly designed to break things up for async upload/download and such, possibly the 5,000 blob limit was an intentional design choice? I am off to do some additional investigating. Thanks for pointing that out. 
Not sure what you mean by blob storage model was designed to break things up for async upload/download. When uploading blobs, it's possible to split it up in blocks and upload them in parallell, so can run 10 parallell threads each uploading different parts of the file. But don't see any relation from that to the 5000 limit.¨ I mean, the 5000 limit is just fine. An API shouldn't return a million entries. But it's weird that they provide both ListBlobs and ListBlobsSegmented. There's nothing you can do with ListBlobs which you can't do with ListBlobsSegmented. It's just a bit confusing. 
Looks like a good opportunity. I'm tempted to put an application in but I have other plans... I'm pretty much exactly what they're looking for.
this shouldn't discourage him. the uk is a close us ally. if he is well educated or credentialed enough, they will back him and he will qualify.
Good point. I may add an update to the article mentioning this. 
Mmmm, sharepoint! These guys tried to recruit me before. SpaceX has a rep for burning through their developers out here in LA. And seriously, how awesome is sharepoint!?
Holy shit thank you. Applying immediately
the only thing that's awesome about sharepoint is when you no longer have to deal with it, like taking of a pair of shoes that are 3 sizes too small.
That job ad doesn't look like SharePoint, if they're looking for iOS and GWT experience as well.
&gt;It's not rocket science There's a joke in there somewhere...
I thought I was clever :\
They run the company like a sweatshop, don't let the *SPAAAAAAAAAAAAACE* hinder your judgment. This is true of most PayPal mafia companies incidentally.
Wow, really? That's great, as I'm a Louisvillian.
I also like the feature of converting your code to other languages. I found that to be really cool
Oh I didn't know this. Been converting a small web module from vb to c# using a web site by hand. Awesome thanks! 
My workplace has one license with VS Ultimate for load testing. It is glorious.
I just launched this site hoping it could be of some use to bloggers / people sharing C# on any website or people trying to learn C#. I've been annoyed that snippets are nothing like what we have in Visual Studio even on the biggest websites (msdn, stackoverflow, gist.github). The link is to a list of the prominent features. It can use a few usability shape ups; let me know which are the most glaring, though.
Looks very cool! I would get rid of your test snippets and the "Brian is a poo head" comment on the first real submission. It looks unprofessional. I'll try to submit some stuff when I get the time. 
I think one great feature for this would be the ability to export the snippets into the visual studio snippet format. Something I notice right off the bat is that I'd like to be able to post a snippet that doesn't require all of the boilerplate code. For example, I may want to post a small function or a few lines of code that show how to do a particular operation. In fact I think most of the things I would want to submit are probably that way. 
Agree. I thought the titles were a bit flat.
Android browser denied... Why?
Yeah--sorry I need to make an about page for all devices, even if the app doesn't lend itself to mobile devices and tablets.
Hey, im Alex Ogden. Just added a file compare snippet! csharp.io/#/Home/10
Just leaning C# Thank you kind sir or madam 
You're welcome! Nows a good time to introduce my blog for no reason. I'm male. And here's an example of an embedded snippet http://www.newmodifier.com/2013/05/new-site-launched-csharpio.html and there are some articles about C# on that site.
Beware spam bots. No email account activation or captcha. I like it though, I submitted a snippet :)
http://codeshare.io/hmqga
Something like the snippets execution at http://csharp-repl.apphb.com ? For more details about that CSharp Web-based REPL see http://blog.diniscruz.com/2012/10/web-based-c-repl-key-milestone-in-o2s.html and http://blog.diniscruz.com/2012/10/web-c-repl-now-supports-snippet-save.html If you want to help to make this open source repl environment better, please see http://blog.diniscruz.com/2012/10/next-features-to-add-to-c-web-repl-can.html Btw, I like the idea to export as VS snippets
Take a look at my one: [csharp.io/#/Home/14](http://csharp.io/#/MySnippets) I'm not saying your implementation is wrong, but a byte-by-byte comparison is incredibly CPU intensive and unnecessary for the simplicity that you're trying to achieve.
Whilst that is a very nice site, I despise not having a home page. I don't like when I'm thrown into the deep end with little guidance. I prefer the 'normality' that [csharp.io](http://csharp.io) brings.
Hey! Love the idea, but the design really needs some work: * CSharp.io in the header needs to link back to the home page. That drove me nuts. * Use YouTube's sharing section (beneath the video) as inspiration to format the sharing section underneath snippets. Like people have said, there's no direct flow and my eyes don't know where to go. * The font weight and flow for the information about the snippets is quite poor, and needs some work. Consider having the labels as proper heading, and the information pertaining to them as normal &lt;p&gt; instead of all emboldened. e.g: **Title**: This is a snippet 
Ok, that's a valid point. Thanks for the advice, I agree. I think its still useful full in some way, beginner programmers can take it and play around with it. I'm not a pro myself, just took it from a Utils class from an old program of mine!
By no means was I belittling your work, so please don't take anything away from this other than to possibly learn something new :D I would never want you to feel like someone thinks they're better than you!
Why do you think D is unsuited for web programming?
Last I checked, no libraries for it. Well, I know of some fastcgi implementations that haven't been updated in years and are D1-focused, maybe one or two D2 libraries that are nearly as outdated; and since D has historically been unstable, I expect them to be broken. And that's just fastcgi. You also need to connect to a database. And a REST service or two. And a message queue. And you need to generate UUIDs. Maybe you need some light image processing. And localization. Not to mention unittesting that doesn't suck abysmally (as in, you can execute multiple tests even if one fails), and oh, that requires a dependency injection system and a mock object library. It adds up very quickly to reimplementing for yourself everything that other languages have already. (And mock object libraries require a level of reflection and code generation that I'm not sure D has.) It's the typical case of a marginal language not having libraries for anything you need.
I'm asking because I saw [this talk](http://www.reddit.com/r/programming/comments/1fkr5s/) yesterday, and it looked like an okay choice, at least compared to the C++ web frameworks. He is recommending [vibe.d](http://vibed.org/).
That's looking pretty good, actually. Twelve years and finally D's about where Dart currently is.
I haven't tried it myself, but this looks fun. I have seen Gource in action before and it is neat. Would probably be a fun thing to have in the meeting after a release to see what made it in...
The lack of link back to the homepage is intentional to save resources and ensure speed. A websocket handshake has to take place on each full re-load which is pretty substantial (although still better than the overhead of HTTP requests). You really affect the responsiveness of the site if you continually keep hitting the homepage header to go back. I agree the entire thing is fairly flat. I will embolden the important parts soon. I tried to make it like the new visual studio where only the code "pops". Everyone dislikes the look. I'm not sure what I expected ;)
IIRC it's just an XML grammar. I'll look into it :)
Whilst I completely understand making speed improvements, from a user's point of view, a tiny increase in load time vs. not easily being able to get back to the homepage in a similar fashion to almost EVERY other site is most definitely not a good idea. Plus, I'm not really sure I understand what you're talking about with 'websocket handshake'. Once someone's loaded your page, everything's cached, so any loss in speed that you create by adding a link to the homepage would almost disappear. When it comes to miniscule improvements like this, I think usability is optimum.
Seems neat but... TFS? Really? Who isn't using Git these days?
Do you have some example code?
I use these 2 commands to gource my SVN repo, in case anyone wants it. svn log -r 1:HEAD --xml --verbose --quiet repository-address-here &gt; log.xml gource log.xml -c 4 --max-files 0 --hide filenames --file-idle-time 0 
Wait you want to detect if the image is a single color block? I believe what you need is an image histogram - it maps the distribution of colors/pixels (or something like that, I never delved too deep into image processing to grasp all the terminology). It will definitely allow you to distinguish a solid color block from a regular image
Places that use the features in TFS as a CI tool? You can actually use Git now in [Visual Studio 2012 and the cloud version of TFS](http://tfs.visualstudio.com/en-us/pricing/tfs-information), and TFS 2013 will come with [the option to use Git instead of its native version control tool](http://www.computerworld.com/s/article/9239786/Microsoft_tackles_agile_backlash_with_Team_Foundation_update?taxonomyId=11&amp;pageNumber=2).
TFS with Git is a sexy combination. Me likey.
Not exact code, but idea: void doRequest(string url, CookieContainer container) { HttpWebRequest request = .... var response = request.GetResponse(); container.Add(new Uri(url), respose.Cookies); }
It is also worth noting that if you will be using iTextSharp on a server then you are subject to licensing fees and those fees are around $2000 per license (from what I have heard). It is only free for use on individual computers.
Ah I wouldn't worry about it! It's one of those things I've studied so I should know about it :)
Make sure that the cookiecontainer object is a public member. edit: do you have to pass a container? isn't there someting with references or something where if you pass a parameter it won't actually change the object you gave it, it will simply make a copy of that object?
Cookies are being maintained after that method, here is my test code: class Program { static void Main(string[] args) { var c = new CookieContainer(); var t = new Test(); t.doRequest("http://myUrl", c); Console.WriteLine(c.Count); Console.Read(); } } public class Test { public void doRequest(string url, CookieContainer container) { container.Add(new Uri(url), new Cookie("myCookie", "myValue")); } } Do you mean that the cookies are not being persisted as they come back to the browser? Can you post some more of your code?
if these problem areas are of a known shape (like rectangular) - there are many methods to detect those (I think edge detection is one, and google probably has many other for searches like detecting billboards or shop signs), then you can histogram specific areas
What is the source file format? PNG and JPEG will respond to corruption in different ways. What kind of corruption is it? Are we talking about half the data been set to 0, in one nice contiguous block. Or are we talking about 1 bit every random interval been flicked? If its just a case of missing data (lots of 0s) this is very easy to detect, just look at the number of 0 bytes in the file, that are next to each other (you could do a proper frequency analysis). Most image formats compress losslessly very well, so anything that has a lot of contiguous zeros, is obviously going to be a corruption. Otherwise, start reading the file format specification! JPEG/TIFF is fun, by fun I mean oh dear god the fourier domain strikes again. PNG/GIF are simple, but the most simple is BMP.
I work mostly with JPEGs, guess that I will be having some fun. Thank you for the help/idea. I'll see what I can do with this.
Most of the time they areas are rectangular, minus where in the file the corruption starts. I will look into the edge detection idea as well. Thank you.
Can't wait for this to be done, I'll contribute if I have time. Being able to write plugins in C# will be incredible. Thanks for making this!
Sure thing, I'm glad to hear that you like it.
I bet he has spend a bit too much time with Javascript.
why the hell have you posted that in /r/csharp ?
Ditto, out thought myself before.
I was worried it was going to be one of my SO questions.
I'm a .NET developer at SpaceX. Feel free to ask me questions, I'll answer what I can. The most unfortunate thing I can tell you upfront is this - it's pretty much US only. Rocket technology is export controlled by the US government, and there are so many hoops to jump through for foreigners that we don't usually bother. However, they are very accommodating to people outside of LA. I live in Colorado and they fly me out for a couple of weeks each month to work on-site. I code from home when I'm in Colorado. I'll likely be moving to LA in a few months.
If you're up for answering, I have a few questions: * I know they advertise Agile, but how are projects actually managed? Rigid control, with lots of status reporting, or more loose, with freedom to fail fast and try new things? * What type of projects do you generally work on? * What's the EIS management like? Reviews on GlassDoor and other sites typically are critical of the management structure. * How's the work/life balance? Full-time crunch, or bursts of long hours with normal hours in between? * How often do you actually say "I love my job"?
* Don't feel comfortable giving much detail on that * Internal software, like the projects that run finances, or run the assembly floor, etc * SpaceX is very flat. There are two people between me and Elon Musk. Management is very agreeable. * I work about 50 hours. I don't have much of a life to speak of outside of work, but that's not SpaceX's fault. There's plenty of time for activities in my schedule. * All the time. When I'm in LA, the first thing I do in the mornings is take a stroll around a *rocket factory*.
Thanks for the answers (where you could) and I understand not being able to answer the first. My decision to apply was a good one. Strolling around a *rocket factory* sounds far better than shuffling through a cube farm.
That is pretty cool. I played with a mod that let me program "turtles" in lua that was pretty cool. Do you have anything like that in the works?
Nope. That requires client-side mods, which I refuse to implement. I do all my cool stuff on stock Minecraft.
No interrupts, sorry. How you would do this varies by the type of application you're writing, but generally you would start another thread for your background code, and as long as the thread and the code your keyboard handler did not access the same data (without protection -- never multi-thread without protection!) you're good. 
short answer : you're looking for events, triggered in a separate thread, and a Dispatcher. It is a high level pattern that is semantically equivalent to low-level interrupts (but not implementation-equivalent). Long answer : it's way more complex thant that - I'll let the .NET VM, ASM and JIT gurus explain that.
Sorry, im not sure what you mean by background code. Doesn't the code occur sequentially? Maybe im interrupting the meaning of backround code incorrectly. Thanks
Isn't that poling? Thanks.
The event loop would poll, but depending on how you write the rest of your application the rest of the application isn't really aware of it. Most games are written with event loops so I wouldn't disparage the idea as some how nonperformant. I should add, taking a cursory look through the documentation for windows, it appears only device drivers can register an ISR, so unless you want to replace the windows keyboard driver with your own then event loops are your only option.
Im pretty new and I guess Im not understanding the thread portion. Do you know of any good tutorials on how to program separate threads correctly. There is nothing like that in the languages i have programmed in but im excited to learn the concept. Thanks 
Thanks, i will give it a read. Much appreciated.
http://en.wikipedia.org/wiki/Sing_Sharp Sing# might support that...it's a superset of C#.
http://www.albahari.com/threading/ This ^ is full of win.
Agreed! http://www.albahari.com/threading/part2.aspx Sounds like what OP wants to look into is signaling constructs or event wait handlers.
There's absolutely nothing wrong with VSE, but Eclipse with C++ tools works pretty well too.
Thanks for the info
Perfect, thanks
I don't deal a lot with XML, but I think xml namespace attributes need a colon. Like the first two you have, xmlns:xsi and xmlns:xsd So the xml you are getting might need that included, like: xmlns:LabelService="http://www.envmgr.com/LabelService" Also, I think you need fully qualified URLs for the attribute values.
You don't need the colon for a namespace; using just xmlns="blah" specifies the default namespace for the element. I think it could be the fact it's not a fully qualified URL that could be causing it, although I can't test it right now.
Events for sure. What about a background worker thread that, on complete (which is an event), starts itself back up? Wouldn't that just (essentially) be a secondary thread you could perform other functions on?
* [Async and await](http://msdn.microsoft.com/en-us/library/vstudio/hh191443.aspx) * [Lambdas](http://msdn.microsoft.com/en-us/library/vstudio/bb397687.aspx) * [Anonymous functions](http://msdn.microsoft.com/en-us/library/bb882516.aspx) * [LINQ](http://msdn.microsoft.com/en-us/library/vstudio/bb397926.aspx) * [Entity Framework](http://www.asp.net/entity-framework) C# is based around the notion of creating classes for everything. If you were to start a simple console application, the main entry point would be contained inside a class. 
As far as C# I literally don't know much, but from what I've been reading the syntax is similar to java/php. I have some experience with the ASP.net platform, but with VB not C#. Thanks for the tips though. 
I work at a company that was interviewing a few people for C# and I got to sit in some of them. There were a lot of question about different patterns. Questions like if you had to start a project from the ground up how would you set it up here. Very few syntax questions. Inheritance was a very big subject. When I myself interviewed for an entry level job I was very forthright in declaring what I knew and didn't know. I told them that Google was my best friend, and they were appreciative that I was honest. 
For sure. I'm not really worried about learning the language, its just I literally have 4 days to prepare so its just kinda a lot of to learn in such little time. Google is def my besty 
I'd say Lambda, LINQ and EF are most important in this list. I'd also add [these](http://www.asp.net/mvc) 10 videos on creating an MVC application, they're extremely helpful!
Thanks for the links! They are helpful, I have some reading to do!
Getting a c# job without proper knowledge should be tough, do you think thats a good idea? Yes, syntax is similar, but I think thats not enough to really work with 
Just talk in general terms about object oriented programing. Immutable_object, inheritance, base class, static methods, interfaces then mention things like byte code and the common language run time. If it's entry level they just want to know you have the basic concepts down.
With C#, I'd say review lambdas, LINQ, and the Entity Framework. With ASP.Net get a working knowledge of the basic controls, as well as Master Pages, CSS, and XHTML.
It's entry level, and you've expressed a lack of skills already. Either they believe your past experience may be enough to invest in training you, or they have no intention of hiring you and are just wasting your time with the interview with the intention of hiring someone else (which happens, but isn't as likely). Either way, I would relax, stay optimistic, and spend your time reviewing the basics you already know that asp.net builds upon.
I think some of these are a bit to specific for an entry level position where they know you have no experience ahead of time. Whats your background in strongly typed languages? This is a copy paste from a previous comment I made to a similar question I saw in the past: If they are aware of your lack of knowledge I would focus less on the specifics of C# and more on programming basics, principals of OOP, and what it means to be a strongly typed language... 1. have a strong grasp of the following: if, else, switch, while, do, for, foreach 2. understand how to properly use recursion 3. understand the difference between a reference and value type 4. Know what the following are: Constructor, Property, Method, Member 5. Understand how the class object is instantiated 6. Have a basic understanding of inheritence and interfaces and how they work 7. Have a basic grasp of the following keywords: public, private, class, new, static, void 8. know the majority of the c# primatives (int, bool, long, short, string, etc) 9. Understand how StringBuilder, DateTime, and TimeSpan are used 10. Understand how a string is an immutable reference type I suggest the first four chapters of http://www.amazon.com/C-5-0-Nutshell-Definitive-Reference/dp/1449320104 Also as a note I was in a similar situation, hired as an intern with no c# experience and basic python experience. They know you don't know shit, whats important is when someone explains something to you that you have the vocabulary to understand what they are saying.
Also having the ability to discuss the difference between WebForms, MVC, and ASP classic would probably a good idea...
First, make sure to be honest. If you act like you know C#, a good interviewer will be able to find out that you don't. But if you're honest, showing that you can learn it is a good step. Here are the types of questions I might ask you about: * Interfaces versus Abstract Class * Generics * Lambdas * Linq * IEnumerable / IQueryable * Different ways to do Locks * Extension Methods * Delegates, and Action versus a Func I don't have as much experience with ASP.NET myself, it's been a while since I've worked with it. But I'd ask a few basics about: * HTML * How the old ASP and ASP.NET differ * What a Master Page is * How data binding works * What is Web.Config * What is IIS * What is MVC and why is it useful * What is a Repeater Control, and how do they work Again, be honest, but also make an attempt. I've recommended some candidates that knew nothing about a technology, just because they were honest and they could intelligently guess at how the technology might work, such as "I don't know what a Repeater Control is, but by the name it sounds like it might serve data rows in a similar manner for each row". Even if that guess was completely wrong, but it made logical sense, it still is worth some credit. 
It's too dangerous in the wrong hands and can be slow/cumbersome. That being said, it totally has a place and has greatly simplified/standardized .Net DB interaction and that's pretty awesome as well.
&gt; It's too dangerous in the wrong hands and can be slow/cumbersome. That's true about almost any software framework. EF has some warts, but being able to use LINQ to write data access code is a huge win, as is code-first.
Yeah, well I mean this is an entry-level position and they are looking for someone who is willing to learn new things and work hard. I think they are more interested in my responsive web development experience more than anything. But this would be my first legitimate job out of college, so I don't see anything wrong with learning something new and getting some experience. 
I'll check them out thanks for the feedback!
Oh wow... I wasn't aware that PHP had all three pillars of OOP.... mind=blown 
Lots of people are trying to help here and that's awesome. This is going to not be liked much but I've seen this kind of situation before. Even if you are good and demonstrate an ability and willingness to learn you still have less than a 50% chance at bagging this job. They are asking you in on the off chance that you will blow their socks off and be worth it. Chances are you won't be. If you are running on a budget, don't waste money/time on this one.
You sound like you've got a good handle on the situation - you'll be fine. Best of luck to you.
If it comes up. C# doesn't allow templates. It came up in one of my interviews. 
I looked at it but didn't care for it and so far I almost always use the DAL and do stuff manually except for the occasional lone dropdown list or other control where I use one of the connection controls. I was just taught to use the DAL though, so far that's been my habit.
This is cool. If you want, I can give you the code I wrote that evaluates lambda expressions into sql. i.e. it lets you do Query&lt;Entity&gt;().Where(e =&gt; e.Id == 5 &amp;&amp; e.Created &gt; DateTime.UtcNow.AddDays(-30) &amp;&amp; list.Contains(e.SourceTypeId))
These free resources may help... C# Reference: http://msdn.microsoft.com/en-us/library/618ayhy6.aspx C# Guide: http://msdn.microsoft.com/en-us/library/67ef8sbd.aspx
This is way too advanced for a beginning C# programmer. So much so that it makes me wonder if you're not a troll.
I'm curious about this. Isn't this what other Linq based ORMs already do? What I'd like to really know is if you are able to build and evaluate lambda expressions without a predefined class type which represents the table? I've been looking for a elegant and clever way to dynamically build a sql query string and execute it against a table without without hardcoding the schema into my code.
https://gist.github.com/wcharczuk/5754040 that's the class. you just instantiate it with a type new SqlExpressionVisitor&lt;Entity&gt;(); and then call 'Visit' on an Expression&lt;Func&lt;Entity, bool&gt;&gt; the one thing you're going to need to change is in the constructor, where it assigns 'Members', just pull all the property names out using reflection from the type. this should be pretty trivial and i can give the code for it as well. 'Member' is just a wrapper class i made to encapsulate a bunch of other stuff i have to do for my orm (associated objects, read "sub objects" and child collections etc.)
http://www.hanselman.com/blog/WhatGreatNETDevelopersOughtToKnowMoreNETInterviewQuestions.aspx
I'm not trolling. I'm a C# developer, and I was trying to think about specific things that I would look for in a developer. Sorry for trying to help.
I completely understand, but I'm not going to spoon feed a professional software engineer with "This is how you allocate memory". No, he will be more than capable of learning the basics: this is a list of important stuff I think should be key to a C# developer.
I agree with you about the spoon feeding, buy I still think that some language features and subtleties (like IEnumerable closures when using yield keyword) are more important than libraries (well, it's only libraries).
Sorry if I looked aggressive, didn't mean to, I mainly agree with you. 
Sorry, I forgot to put that I'm working in Web Forms. Thanks for the detailed reply!
I think yes you can copy controls from one form to another. The id's will the automatically defined by VS. You will just have to take care of one thing if you have any click events associated with that control you will have to manually define it in the code behind aspx.cs file else it will throw a compile time error saying "'ASP.default2_aspx' does not contain a definition for 'Button1_Click' and no extension method 'Button1_Click' accepting a first argument of type 'ASP.default2_aspx' could be found (are you missing a using directive or an assembly reference?)" Rest everything should work well. 
My co-workers already think I'm weird. I don't think talking to my computer is going to help! This would be nice for home though.
All i keep getting is, "I didn't quite get that. Please try again." no matter which command I try to use.
English
"debug" "Step By Line" "Step By Line" "Step By Line" "Step By Line" "Step By Line" "Step By Line" "Step By Line" "Step By Line" "restart" hahaha yeah, that would get old fast.
A thought... When you post a multi-part series, link the whole series... Some of us are OCD like that.
I managed to get it to copy. Only took one key chord and three tries to save pressing a key chord....
great tool for open-space offices ;)
Thanks for the reassurance!
a shame it doesn't support VS 2010
Exchange Web Services http://msdn.microsoft.com/en-us/library/exchange/dd633709(v=exchg.80).aspx
interesting. It didn't work on mine, or my friends... It makes a lot more sense than a very large &amp; reputable company putting out malformed XML in a response.. I wonder why my machine is erroring out... hrrmm
I wonder if it works better with ReFS or exFAT (probably not).
It's so they can post the same series several times for max karma.
What is SqlExpressionVisitor? I was having problems understanding it in ORMLite too. I feel like I'm missing a C# concept or something really basic. 
This might be utter madness, but... Assuming the files aren't too high a resolution, you could divide the image into an array or list of system.drawing.bitmaps, each 1px high (or 1px wide depending on the orientation of the image). Then for each "bitmap strip", do something along the lines of: (major psuedocode/drunkcodde ahead) Color col1 = new Color(); Color col2 = new Color(); for (int i = 1;i&lt;=bitmap.width;i++) { col1 = bitmap.getpixel(i,1); col2 = bitmap.getpixel(i+1,1); if (col1 != col2) return false; } return true; So basically your code will check each strip of pixels in the image for a consistent line of just one colour. If the for loop completes then there must be a line consisting of one colour. This is probably a slightly over-engineered solution. It will eat a lot of memory too...
Unfortunately the most important commands such as "Don't crash" "Stop doing that" "Wake up, damnit" and "No no, I didn't mean to click that" are not supported. 
&gt; By strongly typed language you mean when declaring variables you saying int foo = 2; or string foo = "string"; - Correct? No, that's static typing. C# supports both static and dynamic typing, but is in itself stronlgy typed. For the most part. PHP is weakly typed beacuse "1" == 1 == true, and passing "1" into a function that expects a boolean is perfectly fine and will work as expected, since the PHP run-time will assume you want the string expressed as a boolean and will do the conversion silently under the hood. C# does not allow this. Of course, booleans are just an example. C# is both statically and dynamically typed. Using dynamic as a datatype tells the compiler that the type of the expression cannot be resolved at compile-time. But it will still be strongly typed. dynamic theTrue = "true"; if(theTrue) Console.WriteLine("True"); This is an example of dynamic strong typing in C#. The expression should compile just fine, but it will cause an error in runtime since "true" is not a boolean value, and the runtime will do nothing to fix this. There are however examples of implicit casting in C#, and most are based on the idea that putting a smaller value in a larger variable should not cause issues. float myValue = 1; This will work because C# assumes, for some reason, that 32-bit integers will fit into a single precision floating point. I think this is mostly for convinience, as the idea is strictly false. float myValue = 1.0; This will however not work. 1.0 is a double (you write 1.0f to specifiy single precisiion floating point constants) since double precision floating points cannot be expressed accurately in a single precisition floating point variable. You can also infer type in C# variables: var someDouble = 1.0; This will create a statically typed double precisition floating point.
Is the URL registered with the system? If it is hosted in IIS that is taken care of inside IIS config. If it is a self-hosted service, you need to run a command with escalation that will register the URL. That command line would look something like this: netsh http add urlacl url=http://+:port#/servicepath/ user=domain\username Edit: Assuming Vista/2008 and up. The command is different for XP and 2003.
I am writing a desktop application that is not hosted on the server. I had previously been using my account credentials, but I recently got a service login and tried to start using that. It worked with my credentials, but when I tried to use the other login, it failed.
When I first "really" got started using it, outside of school and for an actual usable utility, I started with Notepad++. This way I couldn't just press 'dot' and scroll through a list of options; I had to use the .Net web reference texts but it stuck a lot more. I also got used to creating custom and dynamic UI's by not having the GUI functionality of VSE. Since .Net for windows comes with the compiler, it was just a matter of learning the command line. This really helped me grasp how the executables were put together in the IDE, and let me start with a simple 'compile *.cs' file and slowly work my up to msbuild.
Stopped reading at *"Disclaimer: this books also covers ASP.NET Web Forms, I wouldnt spend time learning it since it’s been deprecated."*
I had a discussion with other .NET developers and i removed it. So you can read the whole post now :D
You can read 4k pages in two or three months. And a good knowledge in one language will help you a lot to pick up other languages.
I managed to get that part working. Now I just need to disable all monitors except the first one.
Just remember that you cannot ever capture the input for "Ctrl + Alt + Delete" because it's hooked directly into the OS.
Maybe not, but unless the user presses all the keys simultaneously, I capture the control, the alt, or the delete and can act on it first.
I made a [tutorial for making a C# key logger](http://www.youtube.com/watch?v=jXQO3XhjWUg), which shows you how to get all the user keys the press You can do what shadow said, you just have to detect the keydown and keyup and store boolean values to know if they are all down at the same time
Look up [Baby Smash](http://babysmash.codeplex.com/), this project allows a baby to smash away safely on a keyboard, and it uses the letters and numbers typed by the child.
Depends what you mean by 'act'. These are modifier keys, so treated in a special way by the HAL. If you want to disbale ctrl alt delete, [try disabling part of GINA](http://www.patheticcockroach.com/mpam4/index.php?p=31) Another way would be to re-map those keys to something less possible: http://vlaurie.com/computers2/Articles/remap-keyboard.htm However, my favourite way would be to check out the example kbfiltr.sys in the WDK (Windows Driver Kit). It shouldn't require much experiance (if any) in writing device drivers, and would allow you to filter the ctrl + alt + delete happily.
By act, I mean lock the screen.
Yeah, your not going to be able to do that from a user mode LL hook. Have a look in the WDK for kbfiltr.sys or a GINA replacement. (The reason why this won't work, is mod keys can not be 'caught' because the thing that catches the sequence CTLRL+ALT+DEL is higher up in the chain than you, you can't hide from it, as you will only know about the DEL key after it has caught it itself.)
I don't know. When I tried pressing any of the keys individually, it worked. Then, when I tried pressing them all at once, it also worked.
Oh, thats strange and bad. I'm trying to think where it is documented, but I swear I've read that no user-mode application should be able to hide CTRL+ALT+DELETE. Same way your hook shouldn't work in a UAC prompt.
It's not that it hides CTRL+ALT+DELETE, its that it locks it before the entire combination is pressed, so that the command combination doesn't bring up the screen it usually does.
Yeah, basically. I just wanted to lock the screen whenever any input is detected.
Oh! I thought you wanted to stop GINA locking the workstation when it was pressed. Yes don't worry, if your in user mode, CTRL+ALT+DELETE you can't mess with.
The series not complete yet.
When I had started working with c#, I had gotten so used to the concept of foreach that i couldn't figure out a simple logic. That's when someone pointed out that all I needed to do was use a for loop. Have always considered 'for' for my loops since. I think we probably get to see such code because most people these days start programming with highly evolved languages.
You could almost come to the crazy conclusion that the two different loops serve two different purposes.
people seem to forget that a foreach is essentially a while loop, not a for loop :P. This is another great example of how programmers are terrible at naming things
No, that's not possible in C#. In Java enums are full-fledged classes (and thus, more powerful).
Is there an easy way to mirror this functionality without making classes for each one?
If you want them to behave as in Java, then you want to make them classes, as Java does. class State { public static readonly State NewJersey = new State("NJ"); public static readonly State Connecticut = new State("CT"); private readonly string abb; private State(string abb){ this.abb=abb; } }
That makes sense, thank you.
A for loop is a while loop too. It is just wrapped in a block that declares a variable and runs the while loop with the given expression, executing the iterator statement at the end of each loop. Foreach is a perfectly reasonable name. There's nothing wrong with naming things for their conceptual purpose, not their implementation. That's the point of higher level languages over assembly. 
One implementation I've been using lately is a custom attribute to decorate an enum value with a string representation as outlined in the blog post below: http://weblogs.asp.net/stefansedich/archive/2008/03/12/enum-with-string-values-in-c.aspx 
You can do some fun stuff with the [Type Safe Enum](http://stackoverflow.com/a/424414/897559) pattern, including implicit/explicit cast overloading.
I think your reading top far into my comment. A for loop lets you declare the variable, the iterator and the completion criteria, a while loop just lets you define a criteria and the foreach loop just lets you define an interable set. Yes they can all be written as each other, but the for and foreach loops are a lot more different different than their names give them credit; it's a very, very common point of confusion when I'm teaching introduction sessions.
We do this on a very large project and it is definitely what you want to do. All the speed and strong coding of enums, with all the flexibilty of a database table. Decorated enums FTW :-)
I don't really see the issue. You use a for loop when you need an index variable and a foreach when you are going through a collection without regard for indices or similar. I was mostly suggesting there's nothing wrong with the name. 
My open source project (Sando search tool) does, and we have gotten good value out of using them. Since I'm somewhat new to the .NET community I was wondering if others used Code Contracts or if it is just used by silly former academics like me....
This is one of the very few things I wish C# had that it doesn't. White Oranges has the right idea. The only real downside is that you don't get the same benefits of auto-complete that you would get if you were using an enum instead. 
I've done something like this before, but I thought that attributes used reflection, and were therefore slow. Am I wrong? Also, I had a thought ... if, instead of StringAttributes, you had an attribute that pointed to a class instantiation, then you'd have an enum that was linked to an actual object. That would end up being closer to the Java way of doing things. You'd get all the auto-complete benefits of an enum, with a ClassAttribute that stores any data for the enum that you'd need. Then you wouldn't have to make multiple StringAttributes if you started needing more than one. 
And I was merely offering the anecdote the the similarity between the names often confused new programmers.
this can be achieved with extension methods and a hashtable. I'm on my phone but there's a question on stack overflow somewhere.
No, you're not wrong. Repeated use of some types of attributes can get quite expensive. If, in this example, the enums are reflected upon frequently, what I would suggest is using some kind of in-memory dictionary to cache the values once they've been used. That said, I often don't bother to do so if I'm retrieving a single value from a single object on a view, for example. If I'm, say, generating a lot of forms using these string values, I'll build out a cached dictionary to build it from.
It probably uses more memory and resources to ensure your latest hardware doesn't feel faster than the old one...
We won't know until a final build I suppose but I thought I saw mentions of performance improvements.
If you got a job, shouldn't your employer buy you both VS and R#? At least that's how we do it where I work. But regarding your question: There still isn't any must have features in R#8, that I know about, that justify a move from 7.1.
Spam. 
&gt; That the game will provide monetary compensation for all of our work; each person who put in any amount of effort into this videogame will receive portions of the profits. 
Im not sure if its official yet, but Typescript support is a big one. 
I really don't see the need for these kinds of addins. Can anyone give me a convincing argument why I should use R# at all?
The features I use the most: * Enhanced intellisense &amp; auto completion * It does a good job assisting with my typing. I used to hate that stuff but when I turned it off I missed it... * I love my little spell check plugin because I can't spell and parsing DOMs is hard. * Having it yell at me constantly when I make mistakes is really nice. * Simple coloring highlights for TODO comments, not implemented exceptions. * Integrates the already nice testing support with DotCover * A bunch of other stuff I take for granted. Odd, I guess I don't really use any of the refactorings. I just like getting yelled at I guess.
In that case I'd say, the tools is not what makes the programmer good. 
I call it "coding on cruise control"
For me, getting reacquainted with C# after a long stint in mobile land (Java/Objective-C) has been much less difficult with the auto suggestions that Resharper provides. This translates into less back-and-forth between my coding partner and myself, at least when it comes to syntax and explicit/implicit type semantics.
I am definitely not as good without my tools. I guess I am a horrible developer. I use the debugger too :(
You still have to steer with cruise control... for now.
Haha that must be a common thing, because the devs I work with who use r# always seem to have screens filled with red wiggly lines that they're ignoring...
That's great . Good thing I got the job mothaafucka. 
Not sure how many will see this, but I ended up getting a job offer which I accepted. Couldn't be more excited to learn a bunch and actually use my education! Thanks for the advice everyone!
I have seen people do this also, totally defeats the purpose. To be fair though I often see it when somebody first tries ReSharper on an old and mangled solution. It's often too intimidating to do anything about it at that point. The same problem exists with Code Contracts and they even mention it in the documentation. I guess most programmers are humans?
 char myChar = 'a'; int charInt = (int)myChar; 
Is this what you mean? [(Link)](http://msdn.microsoft.com/en-us/library/e7k33ktz.aspx)
I'm not looking for the numeric value of the character, but the KeyCode, to use with the Keys enumeration. 
Ah, then benzilla04 has your answer.
No, I don't need the integral value, but the KeyCode. I don't know how to explain it better. If I typecast like benzilla04 suggests, I get the following error message: "cannot convert from 'int' to 'System.Windows.Forms.Keys'"
 List&lt;char&gt; chars = new List&lt;char&gt;(); chars.AddRange("User input"); foreach (char character in chars) { KeyboardSimulator.KeyPress(Here I need the KeyCode of the character); }
KeyboardSimulator is a static class from [Brian Geiman's Global Mouse and Keyboard Library](http://www.codeproject.com/Articles/28064/Global-Mouse-and-Keyboard-Library).
Solved! Thanks for all of the replies, but I solved it by using: foreach (char character in chars) { bool upperCase = Char.IsUpper(character); //If upper, press shift if (upperCase) KeyboardSimulator.KeyDown(Keys.Shift); KeyboardSimulator.KeyPress((Keys)Char.ToUpper(character)); //If upper, release shift if (upperCase) KeyboardSimulator.KeyUp(Keys.Shift); }
With permission I suppose it would be possible to use a companies license for my personal projects. That is not a possibility for me but still just to keep on with the primary part of the topic would it be a good use of my organizations money? Is the upgrade from 7.1 to 8 worth it for my kind of work or not? I did pick up dotCover during the end of the world sale, that was a great deal. I could save for it sure but I could also save for a hardware upgrade. Also if I don't want to pay the $500 for VS 2013 Pro to use it (not sure how much it will be) that would have been a wasted $90. The real question though is if $90 is a good deal for the mentioned features. As an example NCrunch would offer a great deal to me for only slightly more.
I forgot the link! Duh! https://jitjot.net
The blog post is here: http://sbknull.blogspot.com/2013/05/jitjotnet-alpha-release.html 
Also the whole point of the keycode in an enumeration is so that you don't have to use the code directly. The whole idea is that if you need the value for something you would just use the enumeration containing the key code.
What happens for the non-printable characters?
Because the parameter of KeyboardSimulator.KeyPress is of type Keys. So, for example, if I wanted it to press the character A, I could simply write KeyboardSimulator.KeyPress(Keys.A), but since in my case the argument varies from user input, I need to get the KeyCode of the specified character. 
It's true that there's probably a better way to achieve what I'm trying to do, but I wanted to try to make use of Brian Geiman's Global Mouse and Keyboard Library (link to it in a comment above).
http://stackoverflow.com/questions/2898806/how-to-convert-a-character-to-key-code
sure you did, junior &lt;3
Do you mean the ASCII table? [le ASCII Table](http://www.asciitable.com) that should take care of all your punctuation. 
Date Published: 6/7/2013 So not too long ago. Obviously a list of new stuff would be nice. The TOC is 16 pages alone. Guess its off to google :)
Anybody have a diff?
I read through these specifications and I always think it would be the worst to write it. No creativity, just writing specifications/documentation. Feels like it would take forever.
no, it's kinda metaprogramming. you're laying the foundation for the language implementation. it's just programming on next level; and you have the most quirky clients of them all, other programmers.
FWIW this is "just" a specification for already released C# version. I don't know if this is first release of this document or just update, but this is not "new" as it's fully in VS2012 already. C# 6 would've been. edit: http://blogs.msdn.com/b/mvpawardprogram/archive/2012/03/26/introduction-of-new-features-in-c-5-0.aspx 
ah, well I don't know much, but it makes it slightly more interesting :P.
That is just the online publish date, the document has been packaged with Visual Studio for quite some time now. The properties of the above document states that last modification was June 21st last year. I concur on a change log though, it is rather boggling that it isn't standard for a document of this size.
Pretty much http://msdn.microsoft.com/en-us/library/ms171868.aspx (Also, remember that C# 5.0 is .Net 4.5. It's been out for some time now...) edit: And for language features: http://msdn.microsoft.com/en-us/library/hh156499.aspx
LibreOffice/OpenOffice have a doc compare feature in em, if you can find the previous spec.