I'm sad your solution is being downvoted. It's pure genius. I am putting it into prod right now.
Word wrap...finally. I know its such a small thing but this has been my biggest gripe with Visual Studio for Mac. If I'm coding on a Macbook and not in full-screen, it was such a pain. Can't wait to try this out.
really well done!
Doing this on phone, so excuse any typos/psudo code Looks like you are doing three things. 1) count of all buttons not enabled 2) start timer if any button is enabled 3) display message if no timer is enabled. You can rewite this as: Int velha = button1.Enabled : 0 ? 1; Velha += button2.Enabled : 0 ? 1; .... If ( velha == 10) { //Show message } Else { // Enable timer } 
Will they ever create a 64bit version? I mean since nearly most of the devices do got the 64bit Version of Windows I don't think that they need to maintain both versions if they every release a 64bit version :( &amp;#x200B;
Fun little perk...in 2019 you can do your PRs right in VS if you have this extension: https://marketplace.visualstudio.com/items?itemName=VSIDEVersionControlMSFT.pr4vs
&gt; I've seen LINQ used in tutorial videos and they appear to be C# syntax extension for creating queries but haven't used it much to appreciate its advantages over in-line SQL Do you know the differences between c# and javascript? Well, linq is c# (the compiler knows how to handle the data at compiler time), and in-line sql is javascript (no compiler help). 
I just wish they let you more easily remove the button. Right now you have to uninstall / disable the (preloaded) extension but you cannot remove the 'send feedback'button...so if you run without toolbars it still uses that 'row' wasting space...
Unfortunately: &gt; This extension does not support pull requests on Azure DevOps Server It’s not clear to me if they’re saying it’s a temporary limitation?
Is VS 19 free?
I wonder why they don't have small teams bring tooling in to the platform for all common languages. If that language is used by a lot of people and on the Windows platform then it should be in VS as a first class citizen.
Well thank god I've been using reddit without styles for the last what 9 years. So no css affects me.
The community edition is free
Would you be so kind in directing me to the proper place to read about the different versions? Thank you much.
The download link on the article: https://visualstudio.microsoft.com/downloads/
Even if C# 8 had no changes except for the nullable reference types, it would be amazing. Everything else is gravy.
Oh, no you don’t. What was the fix? This ain’t stack overflow.
Keep in mind the only difference between community and pro now is only licensing. Community is for individuals or a dev team of 1-5 people. 
Sorry, it hard to tell where I'm typing. Not used to all this Reddit CSS. All I did was restart visual studio in admin mode and now it works in both non-admin and admin mode. 
Excellent, thank you.
That is fantastic, so basically free for individual coders. 
Please let us know when you modify your posts materially, Good Sir. I will see if you are correct tomorrow because the non-inheritance of environment variables drove me crazy.
And like half of CodeLens for the community edition based on the comparison table. But they don't tell the differences
You can use Thread.Sleep() in your tests to simulate some specific input
https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-options/warnaserror-compiler-option
 not exactly what was being asked for but definitely what I do on all new projects
As someone who frequently has to write COM interop libraries that interface with 3rd party software and devices I've seen multiple cases where Thread.Sleep seems like the 'best' choice. All the functionality I expose must be exposed synchronously and I'm generally limited to .NET 4.0. &amp;#x200B; One example is maybe I'm working with an vendor provided DLL for communicating with a device and find out that if I issue commands too quickly like say less than 100ms apart the device will fail to respond. Now there are alot of ways I could solve the problem of limiting the frequency at which commands may be issued to the device but the simplist and easiest to implement and read is to simply drop in a Thread.Sleep and leave a comment explaining why it's there. I agree it may not be the best solution performance wise but it just works and it's generally very readable even to a junior developer. &amp;#x200B; Now I would never advise using Thread.Sleep and avoid it like the plague if there is any reasonable alternative so I don't want anyone to think they're a great idea or anything (I wouldn't be caught dead using a Thread.Sleep in any of my public code) but when you just need to block a synchronous thread for a small amount of time I think somtimes it's acceptable if there isn't anything else like an event you can use.
That doesn’t appear right. For example, CodeLens is listed as limited for Community, but not for Pro.
Why is it generic? 
To be able to call it from the classes that inherit TSHRequest
Can’t you just return it as TSHRequest?
I did it like to avoid casting in the caller I do something like this now Specific obj = new Specific().SetUp&lt;Specific&gt;();
Change tshrequest to T for the parameter. that way T’s type will be inferred (no need to specify it when calling) and always right (right now if you pass a subtype of it as the generic parameter while passing a tshrequest object the cast to the subtype before the return will fail)
Nicee!! I knew something was wrong, I still think c# could improve its inferring though...
I am basing my answer on the launch video
Unfortunately my team isn’t open to *all* warning as errors, so I’m after specifically the codes related to the nullable references introduced in C# 8. 
I personally like using dapper.net https://github.com/StackExchange/Dapper#execute-a-query-and-map-the-results-to-a-strongly-typed-list You can use SQL syntax where you can learn anywhere (I recommend books) 
Go to the project's "Build" properties, and under "Treat warnings as errors" pick "Specific warnings", and add the relevant warning number(s): https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-options/warnaserror-compiler-option Note, you might need to omit the prefix. For example, "CS0162 unreachable code detected", you need to put "0162", not "CS0162".
I've never seen a parameter value set in the way you're doing it. I'm not sure if it's valid - perhaps try using the .AddWithValue() method or setting the value of the parameter before adding it to the collection?
If OpenGL was a calendar API
&gt; Optionally, if you want only a few specific warnings to be treated as errors, you may specify a comma-separated list of warning numbers to treat as errors. So, figure out the warning number(s) and add those.
I had the preview for about a week or two. Code Cleanup is spectacular
That’s the plan, I’m asking in case anyone knows where to find a comprehensive list of which ones are relevant.
How long does it normally take for extensions to be ported? Or are they all working out of the bat? I've got like 10-15 I can no longer miss.
Meh. No linux support no love from this unicorn.
I don’t think they’d go 64-bit only (not until that’s the only option you can buy), so the odds of supporting both is slim
There are plenty of good reasons. This is how Entity Framework generates code I work on some databases that are too complex for EF, so I’ve built my own class generators using T4
I’m not an expert, but I’ve been down this road many times and my current stable with tools haven’t given me any issues I cache on a per-request basis. So users make a request, I find their permissions in DB, and that is cached for the entire request so I don’t have to hit the DB again However, if they make another request, then all authorization checks are repeated 
I mean just give us a 64bit version, heck is the Mac version 64bit? Otherwise it's depecrated in the next Version of MacOs since that one doesnt support 32bit applications.
Yes
game loop to fix frame rate
I don't think either C# 8 or the nullable reference type feature are finalized, so there may not be a formal list of warning numbers. There certainly isn't one in [the spec](https://github.com/dotnet/csharplang/blob/master/proposals/csharp-8.0/nullable-reference-types-specification.md). *However*, you could probably use [the Roslyn code](https://github.com/dotnet/roslyn/blob/ef24d3fc404a1020709f6140e1f59c47f0eb44ea/src/Compilers/CSharp/Portable/Errors/ErrorCode.cs) as a guide, which seems to indicate that errors 8597-8655 are related to this feature.
var event = new Event() { Date = DateTime.Now(), Description = "VS2019 Launch" }; Calendar.AddEvent(event);
Intellisense is a huge undertaking. I imagine they only invest the time on languages they want to succeed. 
It being abstract isn’t an issue, and I don’t see any issue with its inferring when you literally don’t give it a chance to infer anything. Right now you have to manually set the T because the only potential source for inference is the parameter type, and T isn’t in the parameter type at all. Just make the parameter type T and remove the cast from the return and everything will be fine.
Could you explain this feature?
I’m still so new to this. I remember I did something like this with HTMLAgilityPack. Thank you for the code tho. Gotta learn someday right?
If only there was a decent editing experience for T4. There's just nothing
Ah, this is more what I’m after. Thank you!
By being abstract you can't call setup from a TSHRequest instance so I think the method couldn't break; the inference part is a language thing, c# only infers with the arguments but It could also use the constrains or the return type I think other languages have that functionality.
It takes some of the manual functionality that was in 2017 and combines it all into a configurable, automated feature. It can use VS settings and a editorconfig file to reformat code, and can automatically apply some or all of the fixes suggested by Roslyn analyzers. 
Mac "Visual Studio" is just rebranded Xamarin. It's not an actual port of Visual Studio.
What's the point? Beyond historical reasons, why do we continue these yearly (or every other year) cycles of Visual Studio versions? Is it for when there's enough features that will break old extensions and so people can stay on those versions? Or is it more financial in nature, i.e. by the time companies' contracts expire for VS Microsoft expects they'll be looking to buy a whole new one, instead of just incrementally upgrading the product in place - like they do between their major "releases." So when the time comes, they just branch off from wherever they were and act like it's a whole new thing, save maybe for a few extra features they held off on?
I would stab my own foot for 25 pixels more 
Even if it could infer from the return type, it would still be bad code. You could pass an instance of type A, but provide a generic type parameter of type B (both inheriting from `TSHRequest`). In that case your cast would fail.
It would be strange to do A obj = new A().SetUp&lt;B&gt;() but I guess is possible? Is that what you mean?... I will be making the changes mentioned by Ranarok for the inference to work
Yes should introduce a quarterly release cycle, or even a Visual Studio 365.
Yes, that's what I meant, and yes, it would be strange. But we (or at least I) use languages with type systems to prevent errors at compilation level.
The method parameter would be T, the return dosnt need a cast. A null check would be handy and it could probably all be an expression method. I don't care for comments but didn't see them
Well you should use thread.sleep(x) where x is a value. No value tents to cause excess lag. X can be adjusted to read desired frequencies. You can do most everything doong task.delay() and all the async stuff but if you wany to port to another language then kiss(keep it simple silly) applies. Fundamentally the thing is the same but using system.threading us probably more practical for a non ui system. I think it's just preference. I prefer the old way unless I have to deal with the ui
Why not do this in the constructor for TSHRequest? From the context given, the work you do in this method seems necessary for the object to be in a consistent/usable state, so why not do it in the constructor instead of creating an extension method to mutate state? Even if you don't want to do it in the constructor, I fail to see why this needs to be an extension method rather than an instance method on TSHRequest, since the intent seems to be to call it on concrete classes that inherit from TSHRequest.
Use VS Code. Works in Linux, PC and Mac.
Great! &amp;#x200B; I wish we had more original content like this on Reddit instead of the usual one liner personal blog links directing to some tutorial level 5-min stuff ripped from a book or [docs.ms.com](https://docs.ms.com) which lately have become so many. 
Thanks, happy to hear that :). 
&gt; would it seem realistic to store all the users on such a massive user-base in memory on a website instance? So, again, we cannot afford keeping dozens of gigabytes in RAM, you're right. I haven't dealt closely with caching in SQL Server / PostgreSQL, but I heard this option may optimize performance somehow... What do you think on this one + implementing a bunch of Stored Procedures for method checking user permissions? SPs are extremely fast as opposed to pulling data via DbSet (Entity Framework repository). Is this approach with SPs worth it? Or maybe it will only cause performance issues?
CodeLens is now only partially limited in community. Back in 2017 code lense was entirely locked out. I'd argue that the locked out functionality doesn't even count because its information you get for using a visual studio subscription and using tfs.
Task.Delay is more efficient. It allows your computer to do something else while you wait You can say that it doesn’t matter because these apps are only used by your department, but it’s still a bad habit
Being abstract doesn't prevent this method from being called from a TSHRequest instance. If you mean that because TSHRequest is abstract, a concrete subclass is necessary to create an instance, that's true, but doesn't prevent Setup from being called with TSHRequest as it's generic parameter or anything. Yes, forcing T to extend TSHRequest as you've done does prevent your method from breaking, provided TSHRequest can be cast to all its concrete subclasses. 
How would you make this an expression-bodied member?
I'm not really sure, but it doesn't seem to have a lot of relationship to how they sell it. Having worked for a couple of large corps I have some limited exposure to the VS selling process from Microsoft (aka have sat in a couple of meetings where they've talked through this stuff, but I may be hazy on a few details). For pro and enterprise, they basically sell subscription commitments over a number of years, so you might commit for example to buy 3 years worth of 500 licenses which usually comes with some special large discount for the length of time, and during that subscription period you get whatever version of VS you want. You can upgrade to the latest, or use an older version if it suits you, so 2019 coming out has no impact on you really and you can choose if you want to upgrade your install base. Plus you get all the other bells and whistles like MSDN downloads etc. Basically these days VS is sold more like office 365 to big companies and like 365, you get whatever upgrades come down the pipe automatically while your sub is still active.
This is such a bad idea, it's almost beautiful.
Any notes on what will be new? Not really keeping up rn
I was reading through the new features and the only one that mentioned exclusivity to a specific version was the "snapshot debugger" only being available in Enterprise.
I wish t4 would become a msbuild feature; because right now they are a pain for crossplatform development
Agree. Would bet this makes it into a service pack at some point, with more support. I would HOPE that DevOps Sever API is essentially the same as the cloud variant, so this wouldn't be hard in theory. 
new subscription!
Sounds interesting. I'll give it a look!
It looks really interesting. Thanks for sharing!
You could use regex, then your code would just look something like Regex.IsMatch(input, {pattern that matches on vowels}). If I was in front of my computer I’d give you the pattern too.
What shows up in your richtextbox? You're setting the .Text property to Date[contor] which is used in your where clause, so does anything show up in it?
First of all, let me say, the main way to improve your code is adding unit testing. If you do it, you're ensuring that the code works as you expected and afterwards you can change the way to get it. IMHO.
&gt; Task.Delay is more efficient. It allows your computer to do something else while you wait Not if my code is already properly threaded. Then it's just overhead.
fair doos! &amp;#x200B;
Oh, the PVS Marketing train is starting again.
I don't work for the PVS, I just share the content I find interesting.
This is great stuff, I’m currently implementing APIs with .net core and your content is in line with a lot of what we have worked out by trail and error. The only real difference is ours is only using the Azure stack. Thanks for all your hard work!
Oh and blah blah blah machine learning AI suggestions The pink return keyword is the killer app of the release I'd say though
String in c# has a helper extension method which can do this work for you. I’m not sitting in front of my machine so forgive me if the syntax isn’t quite right. You should be able to just do input.Replace(‘a’,’’) etc. you can just chain the replace commands, or might be able to put an array of characters to replace. Realistically it is likely to be around the same amount of total work on the machine, but it reduces the amount of code and will be easy to read.
Thanks, the whole course is cloud agnostic, meaning that you can use presented tools and libraries on Azure as well :).
There is a setting you can configure in the web.config for this. The problem is that the trailing space breaks the default behavior for how things are found in the “file system” since your route would define a path to a virtual directory. By changing it to a query string parameter, you’ve simplified that path and said, hey the Id is piggybacked and will be consumed later, but not key to getting me where I’m going.
You could just use the Span&lt;T&gt; now. Then you can use it as if it was an array, but without additional allocations.
option 1, LINQ: `var vowels = new HashSet&lt;char&gt;("AaEeIioUu"); names = names.Select(Name =&gt; string.Concat(Name.Where(C =&gt; !vowels.Contains(C)))) .ToArray(); Console.WriteLine(string.Join(Environment.NewLine, names));` &amp;#x200B; option 2 regex something like... `Regex.Replace(inputstring,"[aeiouAEIOU]", "")`
 void Main() { char[] vowels = { 'a', 'e', 'i', 'o', 'u' }; Console.WriteLine("enter a sentence"); var input = Console.ReadLine().ToCharArray(); foreach (char c in input) { if (Array.IndexOf(vowels, c) == -1) { Console.Write(c); } } } &amp;#x200B;
oh okay thanks for clearing that up
Unfortunately pulling in System.memory is not possible and we are still stuck on .net standard 2.0
I've not used Rider for this but I presume you could use a conditional breakpoint to only enter debugging when the failure condition is met.
but i would have to manually repeat running the code in debug mode until the test fails which might take hours
Even if it could infer from the return type, your code doesn’t give it that opportunity, and even then, if it did, it would be more similar to bar (auto in C++) than T. The only constraint the caller of the generic can offer is the parameter type. Not a single language allows the return type to be inferred from outside the function, only by looking at what type is returned from inside the function (like it can infer int if it sees return 6;). As such, for generic types, the only logical possibility is inference from parameter type. Everything stems from that.
Also it can break, imagine this: A extends from TSHRequest and B extends from A (assume both are concrete implementations. Then try new A().Setup&lt;B&gt;(). Still, you don’t want to have to manually provide the generic type anyways right?
A test isn't anything but a function, so you can just as easily call it from a while loop in another function. I'd either setup a test harness or create another test that does so.
I think these releases the changes tend to be less incremental. This is when they'll go in, and completely rework how a feature works, or make a major UI/UX change. This is also when old features are removed.
using System; using System.Collections.Generic; namespace ConsoleApp1 { class Program { static void Main(string[] args) { HashSet&lt;char&gt; set = new HashSet&lt;char&gt;() { 'a', 'e', 'i', 'o', 'u' }; Console.Write("Enter A String: "); string input = Console.ReadLine(); Console.Write("Vowels: "); foreach (char c in input) { if (set.Contains(c)) { Console.Write(" " + c); set.Remove(c); if (set.Count == 0) { break; // all possible vowels were found } } } Console.WriteLine(); Console.Write("Press Enter To Exit..."); Console.ReadLine(); } } }
Removed: PVS is blacklisted.
It's valid, some guy on stack overflow suggested i use Add instead of .AddWithValue as it's possible to get some kind of error in certain cases, so i decided to switch over to Add instead of .AddWithValue.
&gt; in-line sql is javascript (no compiler help). Perhaps we have different definitions for 'in-line sql'. I consider this to be "in-line sql": *string query = "SELECT \* FROM EmployeeDatabase";*
Sure! It's basically a tool that goes through your code and applies any preferences you've specified: For example, if you want most of your local variables to be `var` instead of explicitly defining the type, it'll change `int myInt = 12;` to `var myInt = 12;` It can also sort your usings, remove any unnecessary usings, and apply any other preference you might have. It's great for keeping your code clean
I added a watch on date\[contor\] and it's got stuff in it. 
Yep, it adds the correct text to the richtextbox.
Yes the type being inferred is great and what I want, but errors like A().Setup&lt;B&gt;() would still be possible right? If your variable is of type A it would show an error on compile but if it is implicit (var) then at runtime you would have the wrong type?
I just checked my code and had similar results. However I have another analyzer called "SonarQube" running too, and the VS2019 analysis matches VS2019 analysis. So I think Microsoft finally changed it to simply count lines in files (rather than trying to be smart and cut out blank lines and such). I'm not sure exactly what algorithm VS2017- was using to count lines, but I prefer this new version that more closely appears to follow other industry tool standards.
You can always call the web services directly, render/export as HTML, and display the result. Don't forget to hold onto the ExecutionId and use it to get the report's images/charts. In the past, I've wrapped a WebAPI service endpoint around instances of the WinForms (not WebForms!) reporting controls and used that as a shortcut to do the web service calls to SSRS. This is handy if you have a JS front-end that needs to call up reports. Another method is to have *one* ASPX page in your site, and set it up so that you can tell it which report to run via querystring or HTTP-post variables. Getting it skinned/themed to match the rest of your site can be a little tricky, but there are ways... I've never seen MVCReportViewer (not for a lack of trying to find one, though), but I'd bet it uses the first method above (direct SSRS web service calls).
I had a funny case where I used it to great effect... I had a tool that monitors the status on stuff on a network, but I wanted the timing of the status checks to be configurable in the UI. For example, it would check status of remote windows services every 10 seconds by default, but if you wanted to leave it running for long periods of time, you may want to increase it to 30sec-1min to reduce the amount of logging that might occur. To implement this setting, I just had a background thread that sleeps in increments of 1 second, and just checks if it needs to run again: bool run = DateTime.Now - LASTRUN &gt; SETTING; So you can change the setting at any time and it will immediately take effect without having to kill or spin up new threads. :) Hope that makes sense.
C# 8.0 is not released yet.
True. But it is not done yet.
Case sensitivity?
Generally it's good if you don't depend on implementations of dependencies in a class. You can look into automatic dependency injection systems that makes working with that easier. Examplea are Unity, Autofac or Ninject and some more.
How does it compare to ReSharpers code refactoring?
Thank you, can you explain why? Why is this bad? Is there a .NetCore way of doing this or must I depend on third party tools like AutoFac? Thanks again for replying 
This is especially useless now c# 8.0 is on the way, eg: c# Records: writing this: `public class Person(string Name, string Surname, string Address, DateTime DateOfBirth);` &amp;#x200B; will create this: `using System;` `public class Person: IEquatable&lt;Person&gt;` `{` `public string Name { get; }` `public string Surname { get; }` `public string Address { get; }` `public DateTime DateOfBirth { get; }` `public Person(string Name, string Surname, string Address, DateTime DateOfBirth)` `{` [`this.Name`](https://this.Name) `= Name;` `this.Surname = Surname;` `this.Address = Address;` `this.DateOfBirth = DateOfBirth;` `}` `public bool Equals(Person other)` `{` `return Equals(Name,` [`other.Name`](https://other.Name)`) &amp;&amp; Equals(Surname, other.Surname) &amp;&amp; Equals(Address, other.Address) &amp;&amp; Equals(DateOfBirth, other.DateOfBirth);` `}` `public override bool Equals(object other)` `{` `return (other as Person)?.Equals(this) == true;` `}` `public override int GetHashCode()` `{` `return (Name.GetHashCode() * 17 + Surname.GetHashCode() + Address.GetHashCode() + DateOfBirth.GetHashCode());` `}` `public void Deconstruct(out string Name, out string Surname, out string Address, out DateTime DateOfBirth)` `{` `Name =` [`this.Name`](https://this.Name)`;` `Surname = this.Surname;` `Address = this.Address;` `DateOfBirth = this.DateOfBirth;` `}` `public Person With(string Name =` [`this.Name`](https://this.Name)`, string Surname = this.Surname, string Address = this.Address, DateTime DateOfBirth = this.DateOfBirth) =&gt; new Person(Name, Surname, Address, DateOfBirth);` `}` &amp;#x200B; including the icomparable interface.
I will have to create a course in building monoliths. This microservices bullshit needs to stop.
Go for it, modular monolith is IMHO the way to go :). 
It's free ;)
Thanks. Do you happen to know what the web.config setting is? I've tried `&lt;requestFiltering allowDoubleEscaping="true"/&gt;` but that didn't help, and it's the only one I can find any reference to in my searching.
I did it for flexibility, the object is defined in a class library and only used in another project, the caller project has the information needed for the object to work hence the extension method
Besides free!
What app pool user is your local site using? Does that user have rights to the folder were your config is located?
You may find it easier to use a facade which aggregates these interfaces for anything that can be 'shared' using for example a Base Controller method...you'd then set \*that\* from the Controller itself... e.g., `public ReportController(DependencyFacade facade) : base(facade) { }` Not critical but can make it easier to manage your 'common' services between clients. &amp;#x200B; When using DI also realize that you can avoid using interfaces if you just want to inject concrete types. So with (for example) AutoFac you can do this: `builder.RegisterType&lt;ExcelService&gt;();` Meaning you can directly inject the 'type' without an interface being defined too...though obviously it makes testing a bit harder as you have no common definition. &amp;#x200B;
Lol I'm not sure, actually. I haven't personally used ReSharper (I tended to use StyleCop and then make all the adjustments myself before Code Cleanup). &amp;#x200B; As far as I understand, Code Cleanup doesn't measure your code against SLC guidelines, but more against your own coding preferences that you set in the Options. &amp;#x200B; I could totally and utterly wrong, though
thankyou! you guys are awesome!
System.Memory is .NET Standard 2.0 (1.3 I think) compatible. 
&gt; public class DungeonCreationController : Controller So you mean something like this? public class DungeonCreationController : BaseCreationController Then BaseCreationController would have all my Interface code? Thanks!
You should try to use data adapter and data table, it will solve your problem 
Also bring back static page sites, inline style and script, and separate pages for each screen resolution ;)
Don't see why inline style is good although I don't mind if it is generated instead of repeated everywhere. Separate pages for each screen resolution is a bit too much but separate pages for mobile devices is good. But I won't be doing a front-end course.
Removed: Duplicate.
You should first sober up.
https://www.nuget.org/packages/Ardalis.GuardClauses I’ve been enjoying this as of late. 
Hello! Sorry for late replies. After work I always am a bit lazy and never really answer much! Ill answer your questions later! If I don't, please remind me to
Be careful with ioc containers, make your research and be sure to select one that meets your needs (for example, even if I like its syntaxe, Ninject is slow, really slow compared to others). This is a relatively old post, but check http://www.palmmedia.de/Blog/2011/8/30/ioc-container-benchmark-performance-comparison
Implicit is still compile time and strongly typed, so the error is still at compile time. Are you saying like var x =new A(); x.Setup&lt;B&gt;()? That would cause an issue because you can’t pass an A into a parameter of type B at compile time. 
Ok, I deserve that
Here are two good videos explaining dependency inversion/injection: https://youtu.be/NnZZMkwI6KI https://youtu.be/mCUNrRtVVWY
Buddy, dont worry! No worries! I was able to somewhat resolve my issue using your tips anyway! Now I'm just making sure it was done properly. Might as well do this for the rest of the community xP
How is this more flexible? I'm not trying to be a jerk, I'm just honestly not able to come up with any use case where this is more flexible.
In this case you might have too much stuff going on in one controller. If you're composing operations from all the interfaces (conflict requires a session and schedule, then [u/scottgal](https://www.reddit.com/user/scottgal/) was spot on. &amp;#x200B; Create a new interface which exposes the specific operation. E.g. if you had to do var first = DungeonGenerator.Configure(); DungeonCreationInitiator.StartUp(first); ConflictGenerator.Configure(DungeonCreationInitiator); ... // Actually do something with the character You get the idea. If your controller is only interacting with one of these classes, wrap this all up in a single class and expose the Do something bit as a method on the interface. &amp;#x200B; If your controller IS interacting with all of them, but independently, perhaps consider breaking the controller into smaller controllers. &amp;#x200B; You mention below using a base class for your controller. In this case I'd probably say no (I can't really tell because there's no code, but...). Wrap the code up so you're exposing the specific things you want the code to do and inject that. It isn't clear that putting all your support classes in a base class of the controller would help. Usually it's better to have a service class that manages all the logic and leave the controller as a place to manage access to that service class. &amp;#x200B; Also, nigglely point, you have IDungeonGenerator scheduleGenerator // and DungeonGenerator = scheduleGenerator; &amp;#x200B; This might be a copy pasta error, but it makes it less clear what you're doing.
Isn't it amazing how in every article on microservices the author begins by presenting a false dilemma between microservices and... god forbid... monoliths. I've been writing n-tier apps for years and haven't built a monolith since I figured out how to do it right. Microservices will eventually go the way of REST - another buzzword with a flawed concept. Looking forward to your course! 
Oh ok, now I get it I thought var obj = new A().Setup&lt;B&gt;(); would compile 😅
By letting the caller decide how the uri would be formatted, TSHRequest only knows that it needs a uri not what the uri is, Inside AppHelpers there's logic to format the uri, the caller then decides the host, protocol, port, etc 
Experimenting with client/server architecture with [asp.net](https://asp.net) core webapi. Trying to mimic the ease of development of WCF in a webapi scenerio. Sharing a class library containing the data-contract classes is working pretty well actually, now to experiment with operation-contract classes and client proxy factories. &amp;#x200B; Unless this has been done before and theres some sort of magical nuget package that'll do this for me?
With your current code it would, but once you make the parameter T, it will tell you that you can’t pass a variable of type A into a parameter of type B.
Just made the changes thanks
Are you building/running in the "Debug" profile/mode? I've wasted 5 minutes multiple times for this reason.
this helped me deploy to heroku , thanks 
They are different release branches, similar to Windows insider builds. AFAIK you have to install non-preview versions separately.
&gt; Running in debug mode and configuration. 
I don’t believe there is. They introduced the RC build recently that did have an upgrade path to the GA (which I’ve done and know works). Their intent with the preview build is to keep it as a separate side by side build where they will continue to push preview features, even going forward in time from today. If you want the GA, you need to download it separate.
You mean you don’t program modern applications on your 32?
Yeah if you share Services between Controllers this can help you define common service accessors and / or methods. Foe example I use them to hold different methods for returns, rendering partial views etc...In this code Facade is where all the service methods 'live' and I can therefor inject them using that Facade rather than all individually in every controller (bus careful not to fill the base class up with methods which belong in services as you end up with a n unholy mess (from experience) : `public abstract class BaseController : Controller` `{` `private readonly DependencyFacade Facade;` &amp;#x200B; `protected BaseController()` `{` `}` &amp;#x200B; `protected BaseController(DependencyFacade facade)` `{` `Facade = facade;` `}` &amp;#x200B; `protected WorkbookHelper Workbook =&gt; Facade.Workbook;` `protected ReportHelper Report =&gt;` [`Facade.Report`](https://Facade.Report)`;` `protected FilterHelper Filter =&gt; Facade.Filter;` `protected ResultsHelper Results =&gt; Facade.Results;` `protected MappingHelper Mapping =&gt; Facade.MappingHelper;` `protected TabHelper Tab =&gt;` [`Facade.Tab`](https://Facade.Tab)`;` `protected ExcelService Excel =&gt; Facade.Excel;` &amp;#x200B; `protected IEmailScheduleService EmailSchedule =&gt; Facade.EmailSchedule;` &amp;#x200B; `protected DashboardHelper Dashboard =&gt; Facade.Dashboard;` `protected IUserService Users =&gt; Facade.User;` `protected PivotMetricHelper PivotMetrics =&gt; Facade.PivotMetricHelper;` &amp;#x200B; `protected ChartHelper Chart =&gt; Facade.Chart;` &amp;#x200B; `protected static Lazy&lt;SystemSettings&gt; SystemSettings =&gt;` `new Lazy&lt;SystemSettings&gt;(() =&gt; new SettingsDatabaseService().GetSytemSettings());` &amp;#x200B; `protected JsonNetResult JsonNetResult(object data, HttpStatusCode statusCode = HttpStatusCode.OK,` `JsonRequestBehavior requstBehavior = JsonRequestBehavior.DenyGet)` `{` `return new JsonNetResult(data, statusCode, requstBehavior);` `}` &amp;#x200B; `protected JsonNetResult JsonNetResult(object data, JsonRequestBehavior requstBehavior)` `{` `return new JsonNetResult(data, HttpStatusCode.OK, requstBehavior);` `}` &amp;#x200B; `protected JsonNetResult JsonNetResult()` `{` `return JsonNetResult(null);` `}` &amp;#x200B; `protected JsonNetResult ErrorJsonResult(string errorMessage,` `HttpStatusCode code = HttpStatusCode.InternalServerError,` `JsonRequestBehavior requestBehavior = JsonRequestBehavior.DenyGet)` `{` `Log.Error("Error result returned: " + errorMessage);` `return JsonNetResult(new {Error = errorMessage}, code, JsonRequestBehavior.AllowGet);` `}` &amp;#x200B; `protected JsonNetResult ErrorJsonResult(string errorMessage, JsonRequestBehavior requestBehavior)` `{` `return ErrorJsonResult(errorMessage, HttpStatusCode.InternalServerError, JsonRequestBehavior.AllowGet);` `}` &amp;#x200B; `protected JsonNetResult ErrorJsonResult(string errorMessage, Exception e)` `{` `Log.Error(e, errorMessage);` `var statusCode = HttpStatusCode.InternalServerError;` `if (e is HttpException htex)` `{` `statusCode =(HttpStatusCode) htex.ErrorCode;` `}` `return ErrorJsonResult(errorMessage, statusCode , JsonRequestBehavior.AllowGet);` `}` &amp;#x200B; `protected string RenderPartialViewToString(string viewName, object model)` `{` `if (IsNullOrEmpty(viewName))` `viewName = ControllerContext.RouteData.GetRequiredString("action");` &amp;#x200B; `if (model != null)` `ViewData.Model = model;` `var viewResult = ViewEngines.Engines.FindPartialView(ControllerContext, viewName);` `using (var sw = new StringWriter())` `{` `var viewContext = new ViewContext(ControllerContext, viewResult.View, ViewData, TempData, sw);` `viewResult.View.Render(viewContext, sw);` `return sw.ToString();` `}` }
OK, thanks!
Depends on what you do in your view, really. Generally, no business logic should be put into the presentation layer at all. You could wrap the dependencies in an IDungeonCreator interface that returns the model you need, then use the other dependencies in its implementation. 
A fundamental misunderstanding of the expression "code to the interface, not the implementation". This means that you should only use a library's API (public methods/properties in c#) and not use pointers (reflection in C#) to manipulate the class. That way your code won't break if the implementation changes. What happened is in Java, and later C#, they confused the general concept of an interface with abstract interfaces, the `interface ` keyword. Trying to make sense of the guidance, they then decided that the class's name is an "implementation detail", got scared of it, and went crazy with making abstract interfaces for everything. **** As to your specific question, yes you went too far. Don't create abstract interfaces unless you have a specific need. Some vague notion of DI isn't enough and will just make your code harder to work with. 
Core has its own dependency injection framework, so you don't need AutoFac. It works just as well with concrete classes as it does with abstract interfaces. 
Download the installer, it launchers the now standard edition dashboard, install new version, uninstall the preview. Unlike literally every other version it is very very fast and painless. &amp;#x200B; Seriously it was so fast. I was gobsmacked. &amp;#x200B;
Yes. And other vars within the same method allow hovering/immediate window access. 
Hmmm....that didn't do anything for me. I ran the installer that already existed on my system and it showed Preview 5. I then downloaded the installer from the release page and after a very quick update of the installer, it still showed P5 with no option to update to GA.
The fastest way is: - create a managed array - pin it using GCHandle - use some kind of memcopy to copy all data - unpin the managed array 
Did you get the installer from the VisualStudio main page [https://visualstudio.microsoft.com/](https://visualstudio.microsoft.com/) ? &amp;#x200B; You can't update, you can only install a new version AND uninstall the preview. Or you can uninstall the preview first, the order doesn't matter. I sort of skipped over that because in the olden days it would all go tits up if you didn't follow a very specific order of stuff :) &amp;#x200B;
You could look at building your own custom Linq provider, depending on how often you'll be reusing this
Do you get the same message back if you try to initialize inputs as a List&lt;somethingElse&gt;? Just out of curiosity.
I did. I do not have the option for installing the release version. I can uninstall the Preview, and then I would assume the release install will become available, but I was hoping to avoid re-downloading the bulk of the installation.
Hmm, ok something is going wrong. It won't pick it up through the un-updated installer. it only became an option when I downloaded the new installer yesterday. &amp;#x200B; prior to that I could only update the preview or uninstall it (or do stuff with 2017, but pff, that's so 2017). &amp;#x200B;
Preview is available. I'm using it.
My understanding is the "going crazy with interfaces" is to help unit testing, not because of some misunderstood principle. 95% of my interfaces is for DI, with the very concrete goal of enabline my tests.
I uninstalled P5 and then the release showed up. Unfortunately it's 978MB to download (yay corporate VPN speeds)
Well, you need to check what .Net Standard version you need. Compare your actual .Net version (check standard equivalent) and compare with .Net Core/ Mono version.
I wonder if it's related to the Preview being Enterprise, but my license is Professional....
Very much this. Almost all of the interfaces in our solution have only one implementation, but mocking an interface for your unit tests is vital to making your code much more testable than it would otherwise be.
Mono predates .NET Core by many years. It’s a different implementation of the standard. More information needed as to what you need to learn exactly, but if you are just starting to learn C# and want to be able to use the latest language features I’d recommend you stick to .NET Core.
The inappropriate use of unit tests came later. The interface obsession started in the mid to late 90's. But since you brought up the topic, why unit test controllers? They should not have any business logic. Ideally they just forward web requests to service classes, striping away any web specific details. As a general rule if you find yourself saying "I need an interface to unit test this" your next thought should be "Do I need an integration test instead? Or can I just move this code into a lower level?" 
Properly structuring your code makes it unit testable. Mocks are a bandaid for bad code. 
At some point your code is gonna have to call some other code right? How do you unit test that without mocking?
I don't unit test controllers. 
Is that other code covered by tests? If A calls B and B has no external dependencies, there's no reason to mock B. The whole point of B's tests are to ensure that it can safely be used by other code. 
Since almost everything involves some kind of data, which has to be fetched from the db, almost everything has external dependencies somewhere in it?
Do you happen to have a good article for building non-monolith n-tier apps? 
Is there a primary key field? You can just query to see if the record already exists. I.E. Select COUNT(*) FROM CUSTOMER WHERE ID = '1234' If it is zero, then you just do an insert. If it is more than zero you do an update. 
nowadays if you write an app, its going to depend on a db, an external web service, or both. Usually the idea is that you get some data, process it in the business layer, and then pass it along to the caller of your code or to the db (or both). How are you going to unit test any of your logic without mocks in this case?
Or an external API call, user input or sensor reading... As you say, most code has some kind of external dependeny. 
for learning purposes it doesn’t matter much, stuff you write will run on either, but more tutorials will focus on .net core so that may be easier to get going with
Better not be on production code...
That’s not how that works. Thread.sleep ties up a thread and keeps it suspended, so that part of your CPU isn’t doing anything. That’s not good. No matter how your app is threaded, you are still wasting system resources because your hardware can’t switch to anything else If you use task delay, then the hardware will be turned over to other processes while your app is waiting. 
Unfortunately, this is very wrong. The article calls out missing the NonNullTypes attribute as making all reference types nullable: this is not what happens in any way. Instead, they become what's called _oblivious_: they do not have an assumed nullability. You can freely dereference an oblivious value without getting a warning, and you can pass null to an oblivious parameter without warning. 
&gt; If NonNullTypes(true) is applied, then the feature is fully enabled. All references types are assumed to be non-nullable unless annotated. &gt; The final option is NonNullTypes(false), which is also known as “null-oblivious”. This allows the developer to treat unannotated values as both nullable and non-nullable without any warnings about possible misuse. You can think of it as the ‘don’t make assumptions’ mode. 
1. Service class A fetches the data. 2. A passes the data to business layer B for processing. 3. B returns data to A. 4. A saves it to the database. * Unit test B. * Integration test A * No mocks are needed. 
Managed arrays need to have a specific object header, so there is really no way to simply convert a `byte*` to `byte[]` without copying. Even if you did cast the unmanaged pointer to a managed reference with unsafe hacks, any code consuming the array would break when accessing garbage data where it thinks the length prefix, method table, etc. should be. The most performant options generally are: - Do not convert to a `byte[]`, consume the unmanaged memory as a `Span` or `byte*` in managed code, if you can (re)write the managed code that way and are willing to live with the restrictions - Preallocate the memory as a `byte[]` on the managed side, then pass in the pinned array as a `byte*` to the unmanaged code, if the unmanaged API supports that - Copy the unmanaged memory to a `byte[]`, but use array pooling to reduce the number of managed allocations, if the lifetime of your managed objects makes that feasible
Good code structure: 1. Service class A fetches the data. 2. A passes the data to business layer B for processing. 3. B returns data to A. 4. A saves it to the database. * Unit test B. * Integration test A * No mocks are needed. *** Bad code structure 1. Kitchen sink class A fetches the data. 2. A does the processing of business rules 3. A saves it to the database. Since A mixes code that needs to be unit tested [2] with code that needs to be integration tested [1,3], mocks are required. 
And for some project types, most code should be covered by integration tests. 
&gt; If the NonNullTypes attribute is missing entirely, all reference types are assumed to be nullable until proven otherwise. Again, this is not true. There's no "proving otherwise". If you call a function in an unanotated assembly, you can dereference the return freely, with no warning. And if you're working _in_ and unanotated assembly, the concept of nrt doesn't apply in any way. Nothing is assumed to be nullable or not nullable, it's just a reference type. 
Sorry can't my error I thought it was creating a new thing not setting a value of a thing 
Noted.
It‘s interesting that you mix query syntax (`select`, `from`) and function calls (`.Where()`). What problem do you actually want to solve? Is it about performance or code aesthetics? What kind of quality goal do you want to achieve?
That's awesome! Thank you for the sharing buddy 
very interesting read. Seems like it might be useful for doing fast free bitwise conversions between doubles and longs, but you definitely lose the compiler's helpfulness and type safety.
Use .Net Core. But, if you want make game or gui application, use mono with monodevelop ide. (gui app under linux is build on GTK with GTK#) &amp;#x200B; But to learn and make console app, rest service, web service, .Net Core with visual studio code editor is perfect.
Assuming the typical static Main() method, you have a couple options, of varying (de)merits: 1. Make the variable a static field or property of the class that contains Main() and the method setting it. Main() can then access the field or property after the method finishes. 2. Add a ref or out argument to the method's parameter list. Main() would need to supply the variable, and the called method would supply the value. 3. Return the value from the called method, directly. Main() would capture it in a variable. &gt; is it possible to access it if the function wasn't executed? A field or property is guaranteed to be set the default value for its type if no applicable constructor is available. For the other approaches, this question doesn't really make sense. Consider using r/learncsharp.
 namespace test_console { class Program { static void Main(string[] args) { MyObject newObject = new MyObject().SetUp(); Console.WriteLine(newObject.OBTUri); } } public class MyObject { public string OBTUri { get; set; } } public static class Extensions { public static T SetUp&lt;T&gt;(this T obj) where T : MyObject =&gt; new List&lt;T&gt; { obj }.Select(x =&gt; { x.OBTUri = "changed"; return x; }).First(); } } Obviously done as a joke... but hey, you asked :D. Could also do things such as serialize, manipulate, deserialize, etc. &amp;#x200B; Again... just did this for fun. Please don't actually use this code, anyone, ever.
So I downloaded .net core from https://dotnet.microsoft.com/download/thank-you/dotnet-sdk-2.2.105-linux-x64-binaries (I use the binaries because there are no instructions for my distribution). I now have the `dotnet` command but I don't have csc/mcs. Do i have to download Mono for this after all? Because my distribution provides this in `mono-core`.
The function settings the variable A will have to be returning A. The main method will call this function and expect something as a response. &amp;#x200B; public int MyMainMethod() { .... int returnedValueOfA = mySetAMethod(); .... } &amp;#x200B; public void MySetAMethod() { int a = 5; return a; } &amp;#x200B; &amp;#x200B;
Thanks. I've only watched two hours but it's a great help so far and will be even more in the future.
If you have a working dotnet command from an sdk, then you don't need csc. You can make and build projects with the dotnet command directly (e.g. 'dotnet new' and 'dotnet build'), and its much easier to use than csc.
Are you *sure* the release wasn’t listed in the Installer in a second tab, “Available Installs” or something?
99% sure it wasn't there. All done now anyway, it was actually very quick not counting the download time. The have drastically improved install time.
Actually, [I do](https://github.com/leaderanalytics/AdaptiveClient). Many apps cited by the microservices crowd as being monolithic actually are monoliths and need to be refactored. The problem almost always lies in the service layer. Services, like database tables, are interdependent. Many devs don't know how to make their services both interdependent and independent. They wind up with a "God class" that is thousands of lines of code because they need to make their services talk to each other. I wrote a small client that (among other things) uses a variation of facade patternt to create a ServiceManifest - which is basically a collection of services that can be mocked, etc. You can get the sample apps [here](https://github.com/leaderanalytics/AdaptiveClient.EntityFramework.Zamagon). 
The InMemory DB 100% supports migrations (I use it everyday). You're right that it doesn't support relational database properties such as cascade delete, as these are specific to whatever engine you're using.
I was on RC4 and for the GA I got a notification to upgrade.
[https://www.codingame.com/start](https://www.codingame.com/start)
I hate switchs, so I'll dig that a lot more for sure! And yes, I want both, better aesthetics and performance. To make sure this doesn't affect scalability purposes. Anyway, thank you so much for your answer! :)
thx 
uhhh.. start with an idea you want to create. and get into the thick of it. when you find a problem, research the problem. 
I know but pulling in the nuget is not an option and .net standard 2.0 does not include span
array position of inserted variable -1 something like this for (int z = 0; z &lt; numbers.Length; z++) { Console.WriteLine(numbers[z] - 1); } that loop prints each position of the array and subtracts 1 from the number holding the position
Aesthetics is after a certain level a matter of taste. Performance a matter of reasonable benchmarks and quality goals. You can only make reasonable considerations regarding performance if you know the data you are working with. So you need to optimize the query yourself. Since this is some user input, readable output scenario I guess we are talking about a few to a few hundred or maybe thousand entries so I wouldn‘t think query performance is an issue. Most probably everything around is slower.
Bizarre. Try explicitly defining `inputs` as a `List&lt;whatever&gt;` instead of using the var keyword. I've had a bug where the compiler decided not to infer types properly thanks to some kind of corruption. Also, I'm sure you've tried these approaches, but sharing the results might help: rename inputs declare inputs as a different type of list initialize inputs with a value 
If you want to be "future-proof" use .net core ;-)
This makes perfect sense, thank you
Originally, it was an array. And that wasn't giving me anything either. I changed it to a List for reasons unrelated to the post, but a List just makes more sense. In any case, the array didn't help either.
I'll try swapping out the `var`.
Fair enough, in my case these aren't scenarios where CPU resources are even remotely an issue. But I'll keep it in mind.
A fixed timstep/time accumulator is probably a better option than sleep.
I don't think so, but uninstall it and see if that helps. I'm enterprise on both, but it shows them as distinct instances anyway. The license activation is so far down the line I doubt it's relevant here :/ 
:D
For the DB Password, it's not that bad. You just create a user with specific permissions that the client uses. So mostly read-only access to majority of tables, and then writing for that users data, but of course doing an authorization check of some sort to verify that they can actually put the data in the table, and they have permissions to update the specific data they are trying to CRUD (Create/Read/Update/Delete). There is this video series: [https://www.youtube.com/watch?v=Bq1JhTHlxek](https://www.youtube.com/watch?v=Bq1JhTHlxek) and the github: [https://github.com/AbleOpus/NetworkingSamples](https://github.com/AbleOpus/NetworkingSamples) &amp;#x200B; Basically it works like this. The server just sits and waits for a request on a given port, and will respond or handle the inbound message in a given way. Either just logging to console, or textbox/listbox UI. The client sends out the request and waits for responses or just sends the message. Depending on what kind of command you give it. &amp;#x200B; The server is in a constant loop, \`\`await\`\`ing the event handler to get fired that there is an incoming message.
So instead of having the samurai take the appropriate weapon for the battle the main program picks the weapon for the samurai. instead of changing samurai for new weapons you now change main for new weapons. Just saying! I use dependency injection for testing things. It's nice to inject a photo server somewhere out there to provide the canned responses to drive test cases. Set the example listed here is just a decision on how you develop the software. Who makes the decision on the weapon the main program or the samurai.
I think this becomes most useful when you want to publish a library. Say the Samurai class is within a library, so you don't have access to change the underlying code. The main program still has the ability provide a weapon of it's choice through DI.
.net standard 2.0 itself doesn't include span, but system.memory supports .net standard 2.0 (and xamarin) of course that's moot if you can't pull in nuget packages... but... how does one accomplish something non-trivial in that case ?
They've been migrating modules of VS over to 64 bit piece by piece. My guess is that it'll stay 32 bit till after that's finished and they can focus on the remaining parts.
And the moment you depend on two service classes handling two different datasources? B possibly has to ask several handler to fetch the data it requires to create some kind of model. B asks A for one set of data and B asks A' for another data. How do you do that without mocking queries to A and A'? I mean how should the program flow be in your most simple example? Controller asks db repo to create a viewmodel, db repo retrieves data and asks vm builder to create vm with the data it just fetched? You can‘t be serious about that? That just totally against single responsibility principle. And the moment you need to aggregate two or more datasources possibly in a nontrivial way this will fail and you have uncovered business logic.
Both have their place. The biggest issue is that microservices is a specialized solution that is easy to mess up if you don't know what you're doing. Don't do microservices if you aren't using an event driven architecture, don't do microservices if it has to be 100% durable on first try, and don't do microservices if a monolith works just fine.
/u/kardall, thank you for your reply. I don't want to sound like a dummy, but I understand like... all of this... but my execution was struggling in my brain, but I think my Edit with the other tutorial got me on the right track. I was actually missing the Console.WriteLine that wrote the data that was received on the client, and as soon as I added it with the string that was received, I was good to go. I have a lot to learn, but I am super excited now that I have a foundation to work with... but I am still looking for a ELI5 on sockets with simple examples. The tutorial in the edit is super helpful, but not quite 100%... but damn is it much more than what I've found.
Heck I don\`t even need it to be fully 64bit, my problem is that the designer kind of suffer a lot and you cant work with usercontrols when deploying 64bit aince they wont compile/be detected as an usercontrol and there is no real workaround for this.
Thread.Sleep() does not tie up part of your CPU. It suspends a thread which allows the operating system to allocate CPU resources to other threads. If you are in OP's situation or my situation, writing industrial software (machine control, for example), you will sometimes find you have to create threads that run for the entirety of the application. These are not tasks, they are background operations that are monitoring a hardware device by polling, and they start when the application starts and they don't ever end. The best way I know of to do this is to create a new thread and to use Thread.Sleep.
Everyone starts somewhere :) If you want to really get into this kind of thing in a really meaningful way, you could check out WebAPI in .NET Core. The API I wrote for my software basically interfaces with a database, so rather than having MySql credentials on the client side, they just do a URL Request and get back Json data. All the database query/response is handled on the server software side. [http://prntscr.com/n75eny](http://prntscr.com/n75eny)
Oldie but a goodie. Follow up question, what do most of these IoC containers do to create new instances? `Activator.CreateInstance`?
While aspnetcore is probably going to slowly erode the need for third party DI - I absolutely adore Ninject, and it's extensions and it's binding syntax. Lightyears ahead of other containers - I remember absolutely loving the implementation of conditional and scoped bindings in that codebase. Also, it's a masterclass in error message authoring - I learnt a lot reading it's codebase about ~7-8 years ago. All it's exceptions are beautiful - they tell you what went wrong, what it attempted to do, and even give you hints towards resolution. Every exception should be as good as Nate Koharis.
You are right. Most people here are business or web developers and have never talked to external hardware via C#. If you need to poll, you need to use sleep. I've been doing it for years. It's possible that it's changed and something else is better now, but looking recently into Task.Delay, it does not fit the bill. The purpose is not to delay for a set amount of time, but to allow the OS to ignore our thread for a while, allowing other threads to run.
Agreed, I imagine having a full new installation makes breaking changes much easier since you don't need a migration path for the existing installation in place.
&gt; Controller asks db repo to create a viewmodel, db repo retrieves data and asks vm builder to create vm with the data it just fetched? Yes. The vm builder can be unit tested. One level up the dB repo can be integration tested. It doesn't get much simpler than that. *** &gt; And the moment you need to aggregate two or more datasources possibly in a nontrivial way this will fail and you have uncovered business logic. Cover it with an integration test if you can't extract the merge logic into it's own class. 
But then, why not just take the URI as a parameter in the constructor that the caller has formatted the way they desire? This way you prevent TSHRequest from being in an inconsistent state after instantiation. Generally, I've read that it's bad practice to allow object instantiation that forces the caller to always call some additional method on the object after instantiation but before it's used. This will also allow you to encapsulate your data by making OBTUri public get/protected set. If you want to use an extension method to format the Uri, personally I would do so by making it an internal String extension method, so you could do something like: `obtRoute.FormatUri();` Another option would be to define an IUriFormatter interface that you implement with the details of how to format the uri, and pass that to the TSHRequest constructor. At the very least, if you insist on using the extension method you have above, I think for clarity's sake it should be void return because it mutates object state. The meager cost of one additional line to call Setup after instantiation is worth it.
Lol, nicely done.
&gt; That just totally against single responsibility principle. I don't subscribe to SOLID, it's more superstition than engineering in my opinion. But it is rather clear that the need to use mocks in order to test is a pretty clear indicator that you are violating SRP. 
More or less, they all have some internal definition/assumption about what the "best constructor" is for a class. Then they use reflection to get the parameter types and activate an instance of each parameter type in a recursive process.
I'm a bit slow... Can someone explain to me what's worse about this: var warrior2 = new Samurai(new Sword()); vs this: IKernel kernel = new StandardKernel(); var samurai = kernel.Get&lt;Samurai&gt;(); Bind&lt;IWeapon&gt;().To&lt;Sword&gt;(); As far as I can see, the first one is both more concise, simpler, dependency free, and allows you to make samarai of differing types. I *must* be missing something because if the last line there causes ALL IWeapons to be Swords, that's just bad. 
Well, aspnetcore uses Microsoft.Extensions.DependencyInjection, which is just Microsoft's own implementation. It's actually much less robust than implementations like Autofac or Ninject, 
Oh of course, it's a "bare minimum", but for 80% of people it'll be good enough.
In tiny examples like that containers are always overkill, but as soon as you have any significant dependency graph, or need to manage object life-cycles, then they're a super easy win. Gives you plenty of mobility to refactor code - and as long as you "bind everything to defaults" you can move and manipulate your code in ways that huge amounts of new object creation would get in the way of.
I often run "build a DI container" as a 2 hour code dojo - https://github.com/davidwhitney/CodeDojos/tree/master/IoCContainer loads of fun, and you can implement a very naive container in about 100 loc. Mostly "find the largest constructor, recursively call the largest constructor on each of it's dependencies".
&gt; I use dependency injection for testing things. Testing is one major use-case, but it also lets you extend and recompose your program in different ways. Say your photo server (IPhotoServer) implementation gets photos from Imgur. Well, I could provide another implementation for IPhotoServer that pulls from Google Photos, or Flickr, or Instagram. That's one example of providing novel new functionality without changing the code that uses it... Perhaps now though you want to implement some functionality that does local caching so IPhotoServer works offline - well, you could implement that in all of the existing instance(s) - or you could just build an interceptor class which does the talking to caches. eg: namespace PhotoLib { public class Photo { } public interface IPhotoServer { Photo GetPhoto(string id); } public class ImgurServer : IPhotoServer { Photo GetPhoto(string id) { // code to get photo from imgur } } public class GooglePhotosServer : IPhotoServer { Photo GetPhoto(string id) { // code to get photo from Google Photos } } public class CachingPhotoServer : IPhotoServer { IPhotoServer _intercept; Dictionary&lt;string,Photo&gt; _cache = new Dictionary&lt;string,Photo&gt;(); // very dodgy public CachingPhotoServer(IPhotoServer intercept) { _intercept = intercept; } Photo GetPhoto(string id) { // try geting locally first, and then if not found use the source. Photo photo; if (_cache.TryGet(id, out photo)) { return photo; // cache hit } photo = _intercept.GetPhoto(id); _cache.Add(id, photo); // cache miss return photo; } } } 
Why is Timer more efficient? What if timing accuracy doesn't matter? What if this Timer would need to be run continuously through the life of the application? I use Thread.Sleep() sometimes. I feel like my reasons are right, but everyone here is saying Thread.Sleep is worthless. I understand why it should not be used inside async programming, but that's not how I use it. I also understand that Thread.Sleep(10) could be anywhere between 10-100 ms, sometimes longer. Do you really think using a Timer is better in every situation?
Okay, that's fair. But can I get some examples or explanations as to exactly how? I like how you separate the Bind from the usages of a type, but that could effectively be done with a typedef or binding the types yourself. What is Ninject doing for me here? How does this allow you to manage object life-cycles? Is this example implying the initialization of Samarai/Sword are handled by that kernel? How do you handle that if Ninject is doing the initialization for injected types for you? I generally get the use case and power of a library after reading through their ReadMe and looking at their examples, but this one just isn't explained very well imo. Maybe I need to read up on something but I'm unsure where to start... 
So, the example above is our of order. You create a kernel, register your bindings, then at your point of execution, say in the example of a web app, say "Give me XyzController" - ninject works out the dependency graph and creates / gives you the correct instances. It handles per-request scoping (making sure things are disposed at the end of a request), it handles singleton-style objects like cache lifecycles (say an instance of MemoryCache). A more practical example (let's hope the gods of formatting are on my side here) ```c# var container = new StandardKernel(); container.Bind&lt;ILog&gt;().ToMethod(_ =&gt; { var type = _.Request.Target?.Member?.DeclaringType ?? typeof(ILog); return LogManager.GetLogger(logRepository.Name, type.Name); }).InTransientScope(); container.Bind(_ =&gt; _.FromThisAssembly().SelectAllClasses().BindAllInterfaces()); container.Bind(_ =&gt; _.FromThisAssembly().SelectAllClasses().BindToSelf()); ``` I just grabbed that from an app I maintain that uses Ninject. The programs Main method looks like this: ``` var reporter = Container.Get&lt;IPipelineReporter&gt;(); try { var result = reporter.ProduceReport(); logger.Info($"Report Generated at: {result.Value} ({result.Kind})"); return 0; } catch (Exception ex) { logger.Error("An unhandled error occured.", ex); return -1; } ``` It's a command line tool - notice how basically nothing at all is manually configured? This means I can introduce new classes to my constructors at will, move methods around, refactor to my hearts content, and never have to go and apply changes all the way down my object graph to make sure everything is created correctly, because my container can just "work it out". This scales from tiny tools to enormous codebases, with more value the bigger the codebase. I always know I can TDD out a new class by just chucking IDoSomething interface in a constructor and start driving out the functionality by tests, because the moment I add a concrete implementation, the container will find it and wire it in. 
Testing is a pyramide. In agile sw development and maybe even sw development in general you can‘t cover all use cases in end-to-end integration tests because of exponential growth of possible interactions. I have the feeling you never worked with interacting services.
I mean you don‘t subscribe to SOLID, you claim mocking is useless. Ever considered that your opinion is slightly off to most or maybe all reputable developers? The last sentence is just plain wrong? The point of delegating work to a more knowledgeable instance is exactly SRP. I mean did you ever use a logger?
Me reading 85% of .net related blog posts: &gt; Yeah that's great, you've plagiarized the msdn post... Now please add a couple more paragraphs and tell me how to program the rest of the fucking owl. 
Is REST itself the problem or is it more the problem so many think REST means JSON API behind HTTP verbs?
Thank you.
No it's not. Like the "food pyramid", that's an oversimplification that doesn't take into account the nature of the code being tested. 
Are bandages useless? No, and neither are mocks. But if you don't cut yourself you don't need a bandage, and if you don't have your dependencies backwards you don't need a mock. **** As for SRP, the reason it's delegating is that you have one class that is both handling delegation and handling business logic that you want to unit test. Separate them. 
I'm going to get a lot of rocks thrown at me but: IMHO the problem with REST is that it is a leaky abstraction of the transport layer. Image you call `http://someapi/customer/10` and you get back some http error 400-500 (I don't remember the exact codes). So what the heck does a transport level error mean? Did you format the url incorrectly? Is the server down? Is there in fact a transport error......... or does customer 10 not exist? You just don't know. The other problem with REST is trying to stuff your API into url. `customer/10` is easy but not too far after that it falls apart. 
&gt; and you get back some http error 400-500 (I don't remember the exact codes). So what the heck does a transport level error mean? Did you format the url incorrectly? Is the server down? I would be inclined to agree to some degree. While most of the codes are pretty clear, for the most part the low 500 range is what you will encounter as a 'transport' level error. the 400 range is mostly all application, as is 200. &gt; The other problem with REST is trying to stuff your API into url. customer/10 is easy but not too far after that it falls apart. This is what i was getting at, is REST itself the problem here or is it an everything's a nail when all you have is a hammer problem? sometimes a conventional REST service possibly isn't the optimal solution.
BinaryFormatter emitted type information into the byte stream, so that it could deserialize a specific derived class on deserialization. Other formatters will usually provide some way to achieve the same - many have a setting you can enable to emit type information, or else if your data already includes enough data to differentiate the final type, then you can implement a custom formatter to register with the deserializer of your choice. I like https://github.com/neuecc/MessagePack-CSharp/ personally.
I use Autofac, but this example is a nice way understand the problem and the need for IoC.
Read the error message. It will tell you what the problem is. There might even be red squiggly lines under the code that is wrong
it keeps telling me that debug can't start because the debug target is missing. i googled it and tried everything that was recommended on stackoverflow but i still can't get it to work. the deadline is tomrrow and i'm slightly freaking out because i dont know whats wrong.
Wow thanks for the lengthy and thorough response! Much appreciated! I totally now understand how Ninject can help decouple type definitions from the implementation and how interfaces and dependency injection is useful for refactoring and testing. Yay! One last question: Once you bind a type to an interface, are you stuck with that binding from then on? ie All Samarai are now Sword Samarai? This is good for singletons and global types, but it does kinda limit you in some ways. I guess you can always deviate from framework in those cases? So to clarify, using this type of framework is a benefit for maintenance vs doing injection by hand. Nifty, I'll keep an eye out for use cases. 
Can't give any specific advice, but here are some tools to look into: https://docs.microsoft.com/en-us/dotnet/framework/tools/ilasm-exe-il-assembler https://docs.microsoft.com/en-us/dotnet/api/system.reflection.emit https://github.com/jbevain/cecil
ilasm.exe is what I used last time I was playing with IL code. It's pretty easy to use.
&gt; Once you bind a type to an interface, are you stuck with that binding from then on? ie All Samarai are now Sword Samarai? In this case, yes. But all common DI libraries offer ways to overload this. A few common examples. 1- You bind multiple instances of IWeapon, you can then take a constructor dependency on IEnumerable&lt;IWeapon&gt; and you'll get an instance of each one - which is useful for creating factory-type classes that select different strategies. 2- Conditional / contextual binding - this varies framework by framework, but most of the libs have a way to express conditions. In Ninject you can do _container.Bind&lt;IFoo&gt;().To&lt;Foo&gt;().WhenInjectedInto&lt;SomeParentType&gt;(); _container.Bind&lt;IFoo&gt;().To&lt;Foo2&gt;().WhenInjectedInto&lt;SomeOtherParentType&gt;(); Other frameworks support named conditional binding ("inject this one when the parameter is called A, and this one if it's called B"), scoped bindings ("Give me this one if I'm in a web request") and all sorts of other permutations. 3- You can delegate types where you need to select specific implementations to a factory method, class, provider or lambda (again, varied by framework, but everyone supports this usecase). While not C#, I've recently been working with some Java teams (for my sins) and ended up writing a DI container in Kotlin (which is JetBrains basically writing C# for the JVM), the readme for that is here - https://github.com/davidwhitney/Kotlinject - and touches on some of these concepts.
Can you use something like https://dotnetfiddle.net/ ?
Awesome, glad to know there's supported exceptions to that general rule, though I take it you'd generally want to avoid that as it more tightly couples the bindings to the implementation. I've been meaning to check out Kotlin, good luck with the Kotlinject project! Thanks again for the thorough explanation :)
This setting seems to be gone in the final VS2019 release. However, I was able to disable the enhanced colors by modifying Visual Studio's settings file directly 1. Close VS2019 2. Open regedit 3. Click on HKLM, click File -&gt; Load Hive 4. Navigate to %localappdata%\Microsoft\VisualStudio\16_&lt;random numbers&gt; and select privateregistry.bin. If you get an error saying it's in use, maybe wait a minute - Visual Studio's background services may still be using it 5. Under the key you mounted the hive under, navigate to Software\Microsoft\VisualStudio\16_&lt;random numbers&gt;\ApplicationPrivateSettings\WindowManagement\Options 6. Create a REG_SZ called UseEnhancedColorsForManagedLanguages with the value 1*System.Int32*-1 7. Select the hive you loaded the hive to under HKLM, then select File -&gt; Unload Hive You can also see a reference to the settings path and name in [Roslyn](https://github.com/dotnet/roslyn/blob/master/src/VisualStudio/Core/Def/Implementation/Experimentation/EnhancedColorExperiment.cs) where this feature is currently implemented
I'm glad you found it. You can also customize the colors to your liking via `Tools &gt; Options &gt; Environment &gt; Fonts and Colors`. If you have specific suggestions to make this feature better, just leave feedback using VS.
reason is you didn't study, didn't learn the basics of how to structure code, or how to identify incorrectness through practice. ill only go over the 2nd program because it doesn't do anything without a main function. the public static void GetOutput (paramsint[] numbers) should be public static void GetOutput (params int[] numbers) the for each(intnumin numbers) is so wrong its funny. try foreach(int num in numbers) 
Depends on the extension. Some (probably most) won't require any major porting at all. If there's open source extensions you use, you could always help the porting process :+) I'm sure the visual studio team releases a breaking changes/porting guide for new visual studio versions. (Not sure where though)
&gt; FWIW, I'm tasked to compile a subset of C to a stack-based architecture I defined a course earlier, so the CIL is a really good fit. If this is for a university/college course or something like that - you'd be better off sticking to the path that the teacher wants you to go. C# isn't C, it's a completely different language - just like Java isn't C either. The CIL is quite massive, so while you may be able to to meet the course requirements - you'd almost certainly be better off just sticking to building a C compiler. 
Can you show an example of doing that? (sorry I'm new).
&gt; use a facade which aggregates these interfaces This seems very much like a code smell. It'll make testing a pain in the arse. If this is needed, it's probably because your code is doing too much, and instead should be re-factoring to reduce the number of dependencies. 
It's a good example, but you are describing the use case of an interface not DI.
Cool :).
IL was specifically designed to act as a backend for a multitude of very different lagnauges including... * OCaml * Fortran * C++ * COBOL * Eiffel Adding C to the list wouldn't be a stretch. And CIL isn't "massive", I learned how to write simple programs in it in an afternoon. It was certainly easier than when I learned x86 assembly. 
&gt; To say that it is just a runtime for C#, or even C# like languages, is to underestimate its capabilities and design goals. Perhaps you should go back and read what I actually wrote, because I said nothing of the sort. What OP wrote sounds like they've been asked to write a compiler at uni supporting a basic subset of C - which is pretty common. Taking that assignment and writing a C to CIL compiler, or CIL compiler or anything else is probably not meeting the requirements for the task. 
Stop making sense. 
&gt; I'm tasked to compile a subset of C to a stack-based architecture X86 is a register based architecture, CLR is stack based. 
Too bad it is literally the slowest container out there by a long shot. I don’t know how badly they could have messed that up: http://www.palmmedia.de/Blog/2011/8/30/ioc-container-benchmark-performance-comparison
Or just write the test first. You don't even think about interfaces, you just do it.
STUBS!
Dont use properties in your controller use private readonly variables. You really only need one lets call it a DungeonBuilder that handles the creation of a dungeon. All those interfaces looks confusing and seem pointless. Don't use interfaces, unless you actually need them. KISS.
C# + ASP.NET Core + Javascript and Typescript 
What are type script and asp. Net? 
One of the most useful skills a professional software developer can have is the ability to find information on the internet. Google, StackOverflow, GIT. As a useful exercise find out what Typescript is and what [ASP.NET](https://ASP.NET) Core is.
Maybe a bit overkill for the beginning?
C# is a very nice beginner language. Just try to solve some problem and ideally let more advanced people review your code.
You could always try solving some of the problems from [https://projecteuler.net/](https://projecteuler.net/). Another example is [https://adventofcode.com/](https://adventofcode.com/); each year new problems are added in the lead up to christmas but you can go through the backlog of past year's problems.
udemy, mosh hamadama...something has fantastic courses grab one for 10€ and you're off
Unless they're aiming for slowest IoC container, they don't use Activator.CreateInstance. I believe they're either using LINQ expression trees or IL emit. I've used the former myself occasionally, but I think IL emit is supposed to be faster - see https://ayende.com/blog/3167/creating-objects-perf-implications
Still need Pro for git integration into codelens
Ok thanks! 
I usually prefer actual people to answer my stuff but ok
Ok so typescript is a type of JavaScript and asp.net core is a. Net framework, I still don't get it
Why would it be overkill? I don't really understand most of this sooooo yeah. I know JavaScript but nothing else
Dzięki, szacun za dostarczanie tak potężnej dawki wiedzy. Pozdrawiam
.. P.... Pp. 
Purely speculation, but the uri contract for the echo get has the string as a query string parameter and not a route value, so your follow up call could have the wrong route. 405 might not make the most sense for that though. Also is there any reason you aren’t using a web api for your end points?
Thank your for the response I apalogize, what do you mean with " you aren’t using a web api for your end points "? &amp;#x200B; With " has the string as a query string parameter and not a route value " you mean I should use "/GET1/{s}" ?
Typo? channel.Test1 should be channel. EchoGet1 in your makeGET method
No, Test1 is the API from the one Im calling, EchoGet1 is my API
First off, you're overwriting your Customer object by redeclaring it after your form.CreateObject. Secondly, use the private member variables in your ToString() method instead of the public properties. Better style is to declare your properties like `public string myString {get; set; } // empty getters/setters` The compiler will generate the private members for you, so use this style unless you need to execute logic in the getter/setter. But really what would be cleaner is to return a `Customer` object from your `CreateObject` method, just create the customer object in that method, and return the instantiated and initialized object. There are many other changes you could do to make your code cleaner, but I'm keeping it simple for the sake of this answer.
Great example, my question is, how we are suppose to resolve in code which concrete photo server to construct when I write like IPhotoServer photoServer = what goes here? So type is IPhotoServer, we have set it all, but final touch? I understand concept of writing loosely coupled code but execution of dependency injection is not yey clear to me. If you know of some Github repo please share.
Proszę bardzo :).
Proszę bardzo :). Pozdrawiam
You're thinking about things backwards. What you should be thinking is "what method (C# calls them methods, not functions btw) can I write that will return the value I need inside my Main method". Always think about how to encapsulate your data, and also how you can reuse it (hence the point of methods: Methods encapsulate, and promote reusability). So you're not passing variables ***to*** your main method, you're calling methods ***from*** your main method so that you can use that data. But here's the other thing: The Main method should only be called once during the lifetime of your application, unless you want to tear your app down and restart it. It's the single entry point to your app, so by that definition why would it need to be called more than once? You can pass parameters to your Main method when your app starts up via arguments on the command line, but if you need dynamic configuration data, then that's a whole separate discussion as you'd need to read that in externally from a file, database, configuration file, etc. Which leads to the broader question of *what* exactly are you trying to do? There's probably a much more C#/.Net oriented way to do it that doesn't involve doing it how you're describing.
I'll take usability over speed though. For the vast majority of codebases, instantiation performance is definitely not your bottleneck.
So long as your bindings are defined in one central place, it's absolutely fine to use that as the point of coupling - it's the bootstrapping code. Just be sure to write a covering test for them (reflect over all your types, make sure your container can resolve them).
https://github.com/kahanu/System.Linq.Dynamic/wiki/Dynamic-Expressions
the difference comes in when you have 3 constructor arguments....each with 3 more for them...requiring 3 others. and every one of them sharing the same logger reference. you can either write a 12 deep "new" chain, or you just ask the kernel for one item and it figures all the rest out for you.
/r/dailyprogrammer
Alright, so the first part. Check out Web API, it’s part of the microsoft stack in c# https://docs.microsoft.com/en-us/aspnet/web-api/overview/getting-started-with-aspnet-web-api/tutorial-your-first-web-api Sorry if that isn’t clickable, on my phone and i have no idea how to force it to be a link. Second, yes, that “/GET1/{s}” is very different than “/GET1?s={s}” the first the route is /GET1/{string} the second route is just /GET1 and then the query string is appended. So if your service is sending a request with the full route rather than the query string style then it will not be hit or vice-versa. Does that make sense?
Try this one, the answer marked correct https://stackoverflow.com/questions/13406265/webapi-route-404s-when-there-is-a-trailing-space-in-the-url
There was no specific reason. Someone I work with told me to create a REST service and told me to search for "WCF" and there I went: [https://docs.microsoft.com/de-de/dotnet/framework/wcf/feature-details/how-to-create-a-basic-wcf-web-http-service](https://docs.microsoft.com/de-de/dotnet/framework/wcf/feature-details/how-to-create-a-basic-wcf-web-http-service) &amp;#x200B; It makes sense, yes. Im giving the Web API a chance. Thank you!
One other situation I’ve had similar, is if you are pulling in a .dll from a shared project and have the pdbs so a class in the dll is debuggable and you are technically making edits to a dll file and not a solution file, then it will be optimized away or considered a mismatch, so the breakpoints won’t be hit 
Is it?
*Day Fixed it for you. (Story of a legacy codebase maintainer)
&gt;pulling in the nuget is not an option banking?
To chime in to (game) class design, you would not usually give the samurai -&gt; a sword. You would have a IWield interface and that one could be use to wield anything that implements the IWield interface. For example a shield, that doesn't have attack, but instead a defense modifier. The samurai itself would be a ICharacter interface, where Samurai is an implementation of. We have large codebases in C# and Java, and basically everything is an interface, wired together by modules, lifecycle containers (which DI is a variation of) and implementation. DI gets really interesting for testing., You could create a "RobotCharacter" implementation, that has IMovement interface set to a wild set of test cases. For example, you could create a specialised movement that goes from IWield object to IWield object, picking it up, so you could test if there are any IWield objects that doesn't behave correctly. DI isn't just (dynamic) wiring. Its a way to look at your objects and how to do with the whole design of your project/product, to help you achieve an optimimum at every stage of the development process. Without DI, we couldn't create over 20 different variations of our whitelabel product. Most of the relevant data comes in very late in the build/msi process.
I need to write the program as a windows service. Is it possible to write a WEB API as main service?
On stackoverflow there are actually actual people.
idk why r u being downvoted despite stating the biggest and most universal truth. Being proficent at Google and Google advanced search is very useful skill for everybody, not just people from IT.
Why not simply debug and step trough the code, you'll immediately see where the null value is.
"dt" is null, I don't know how to change that because it shouldn't be?
A \`NullReferenceException\` is thrown when you try to access a method, property, etc. on an object that is not initialized (it has a \`null\` value by default). Judging by the code that would be the \`dataAdapter\` field in your code. You can add a breakpoint on that line and see if that is the culprit. If so, you will need to create a new \`SqlDataAdapter\` object and assign it to the \`dataAdapter\` field before you try to call the \`Update()\` method on it on line 48. 
You need to initialize your dt variable.
You have succeeded where my Google skills failed - thank you!
Don't forget Qml.Net for cross platform desktop UI with .NET Core. https://github.com/qmlnet/qmlnet
Just did that, I am getting the same error again?
Intermediate language steps are a requirement. Sticking to the path my teacher wants me to go, using quads, would be a complete waste of time considering the target stack architecture. While my architecture is Forth-inspired, most students made MIPS clones, so it's reasonable to stray away a bit from the intended path. So, it doesn't make sense to translate to a register-inspired IL if I can just generate code by traversing the AST in post order (RPN). If I can generate valid CIL with a subset of its instructions I'd be happy enough.
Assume you know how to query a relational database, but if not, knowing SQL is an underrated language/skill to go along with your C#.
Thanks for the concern, but there's no need to worry. I'm still going to be doing C subset -&gt; CIL -&gt; Readable assembly -&gt; Machine code. Other students will be using other ILs, so the fact that I might run my compiled code *also* on my PC is a useful bonus.
It's not, i doesn't and you can't always do that. Thanks though!
I think ilasm is exactly what I was looking for, but I'll be checking out all of these Many thanks!
If you think c# fulfills all your needs then go ahead. C# is a wonderful language but its power lies in the rich ecosystem of libraries and frameworks that supports it. So learn the basic syntax and then start learning a framework e.g [ASP.NET](https://ASP.NET) core for web development.
Ah that makes sense, that’s old school, I’ve only been working professionally for the past 4 years. I’ve only heard WCF but never actually saw one.
No problem!
A web api can be hosted in IIS on a windows machine. It can be a standalone app.
[https://youtu.be/GSFRXFI0pKc](https://youtu.be/GSFRXFI0pKc)
Im not entirely sure if it answers my questions, sry. Im new to C# and windows development. My employer want its to be a registered windows service
I think data adapter hasn't been initialized properly? It's saying it doesn't exist. Mabye because it hasnt been created properly?
Removed: Rule 4.
How do I initialise it properly??
Sqldataadapter dataadpater = new sqldataadapter () that format of thing var = new thing() is the way to initialize anything 
That gets rid of the error, but it doesn't save the data grid? 
Okay I get it. The adapter is getting reference from somewhere else? So take out the new and check what's sending it? Since what I think it's doing now is creating a new one. Then destroying again once the loop ends 
Very nice and concise example; this deserved more upvotes.
Sorry I'm new to working with databases like this, its a massive learning curve, I have only one data adapter initalized as of now, but it still doesn't save it.
Yeah the problem looked basic but I have no idea anymore haha
https://github.com/graphql-dotnet/graphql-dotnet I use this. Works well.
There’s: 1. dynamic expressions 2. Using a delegate to control your where clause. 3. You could look into the extensibility functions that parse strings into filters. Also, remember that you can create a queriable from your root object you want to query, then keep applying where clauses as needed. The repository will not be queried unless you call an extension method that has a return type that isn’t a queriable. Good luck. 
I know qmlnet. But AvaloniaUI is in xaml. It's better because it standardizes the code between .Net Core and Framework 4.7 for modern GUI. &amp;#x200B; Under linux, QT is a choice. QT is fun, just see KDE. I like KDE ;) &amp;#x200B; My opinion is that if I had to make a C # application with GUI under linux, I would definitely use qtml (with qtcreator) as long as avalonia studio is not more advanced.
SQL is in my school program, we do it with excel 
As of 8 years ago. A more recent test is needed. Auto map was really slow until version 5 and they got a giant speed improvement. For now Microsoft . extensions.dependencyinjection is all I need for most of my web projects. For console apps /services I still evaluate but so far any defect I have seen is minor enough that commonality of libraries is a bigger gain
Well, I'm more into software development then web development 
Yes, what you want is an event handler delegate: https://docs.microsoft.com/en-us/dotnet/api/system.eventhandler?view=netframework-4.7.2
I think you are looking for a specific type of delegates called Event Handlers. &amp;#x200B; [https://docs.microsoft.com/en-us/dotnet/standard/events/how-to-raise-and-consume-events](https://docs.microsoft.com/en-us/dotnet/standard/events/how-to-raise-and-consume-events) 
 dataAdapter is null, initialization of dataAdapter is not done (before btnSave\_Click is called) &amp;#x200B; &amp;#x200B;
&gt; But AvaloniaUI is in xaml. It's better because it standardizes the code between .Net Core and Framework 4.7 for modern GUI. Qml.Net works on .NET Framework/.NET Core/Mono/Linux/OSX/Windows. What do you mean by "standardizing the code"? Why not Qml.Net on windows?
I think you should start by document you on the difference between .Net Core and C # Framemork. .Net Core is a reboot of the classic C # technology (framework 3.x, 4.x) in open source. &amp;#x200B; But .Net Core (before version 3) does not allow to make GUI applications. Version 3 allows GUIs but only on Windows and xaml. &amp;#x200B; The syntax is the same, but some APIs are different into .Net Core compared to the classic framework. &amp;#x200B; .Net Core massively uses Nuget while the classic framework is provided almost turnkey. The publication of applications made with .Net Core is totally different from the publication on the classic Framework. Applications made in .net Core, can be compiled and published for others OS like MacOs / Linux while those for the classic framework are only for windows.
You probably are looking for events. While they are not an exact replacement for delegates and protocols, they are built for things like click/touch events happening. Here is a Xamarin article that describes how events are similar to delegates and protocols. https://docs.microsoft.com/en-us/xamarin/ios/app-fundamentals/delegates-protocols-and-events
Oh cool
Learn to do it with C# now :) 
Cool
Well, thanks :) 
&gt; Qml.Net works on .NET Framework/.NET Core/Mono/Linux/OSX/Windows. What do you mean by "standardizing the code"? &gt; &gt; Why not Qml.Net on windows? Simply, if I decide to stop the linux / macos support of my application and do it only for the classic framework, it is enough for me to recover the code xaml without other dependences to make the rendering GUI.
&gt; SocialSecurityNumber, FirstName, LastName, Gender, DOB, PhoneNumber I did not make up an good example, not an IT folk, but I think there are primary key fields, for this example, to determine uniqueness of record if SocialSecurityNumber (not ID). My question is NOT about when to use Insert and when to use update, of course I know I need to update when the record already exists. &amp;#x200B; BUT the key part of the question is **Bulk Copy** , so I cannot go with record one by one. Assuming there are already millions of records in the database, and I go over 5000 records one by one, how much time will it take? With bulk copy code, it should take only seconds. &amp;#x200B; &amp;#x200B;
 I did not make up an good example, not an IT folk, but I think there are primary key fields, for this example, to determine uniqueness of record if SocialSecurityNumber (not ID). My question is NOT about when to use Insert and when to use update, of course I know I need to update when the record already exists. BUT the key part of the question is **Bulk Copy** , so I cannot go with record one by one. Assuming there are already millions of records in the database, and I go over 5000 records one by one, how much time will it take? With bulk copy code, it should take only seconds. &amp;#x200B; Moreover, I want the detailed code, not the idea how to do it. I guess I know how to do it (bulk copy), but I don't know how to turn it into code. &amp;#x200B; Thanks.
I'm not sure if there's a subtle difference in the iOS implementation, but as others have said, this sounds like a similar usage to C# delegates. To be clear, the event-raising object isn't 'sending a message' to another listening object (which may be a difference), but running the delegate function that the listening object has given it. The 'event' syntax provides 'add' and 'remove' operations that, in their most-common usage, encapsulate the delegate list from unexpected changes, in the same way that property getters and setters protect field values. More info: [https://csharpindepth.com/Articles/Events](https://csharpindepth.com/Articles/Events) &amp;#x200B;
&gt; how we are suppose to resolve in code which concrete photo server to construct when I write like IPhotoServer photoServer = what goes here? You register it all inside your DI container. The specifics of how to do interception/proxying depends on your container - some let you do it with attributes, but you might want to manually control that. An example of this might be like so (using Autofac syntax - I havn't tested that it compiles/runs so there might be some tweaking of arguments needed): import PhotoLib; namespace PhotoApp { public class PhotoBrowser { IPhotoServer _server; public PhotoBrowser(IPhotoServer server) { _server = server; } public void ShowBrowser() { // do whatever here } } public class App { static void Main(string[] args) { // Begin DI framework configuration var cb = new ContainerBuilder(); // Are we running Imgur? Type serverType; if (args.Contains("google")) { server = typeof(GooglePhotoServer); } else { server = typeof(ImgurServer); } // Are we running Cached mode? If so use the Cache interceptor if (args.Contains("cached")) { // tell the container to use the cache for our chosen photo server cb.RegisterType(typeof(CachedPhotoServer), x=&gt;x.UsingConstructor(server)).As&lt;IPhotoServer&gt;(); } else { // Register normally cb.RegisterType(server).As&lt;IPhotoServer&gt;(); } // register the main app. cb.RegisterType(typeof(PhotoBrowser)); // Register anything else here as necessary... // Build the DI Container var container = cb.Build(); // Resolve the main app entrypoint and dependencies.. var browser = container.Resolve&lt;PhotoBrowser&gt;(); // run the app browser.Start(); } } } 
did you deploy using the above method ?
Web development is a type of software development. Even if you meant desktop applications, web technology is sometimes used there now as well for cross platform capability (e.g. Electron is used to make Slack, Skype, Discord, VSCode, WhatsApp, [Twitch.tv](https://Twitch.tv), etc...). If you make desktop applications, you'll still need to know how to make and consume remote APIs...which will eventually require knowing backend web technologies.
This is all kind of confusing for me, I still haven't understood whether or not I should leans c# or java or c++
Know your Google-Fu! 
I first used Ninject 10 years ago, I think. That same post really helped me understand DI, too. Remarkable how concise that write-up is, right?
Sending a message is an obj-c concept, in c and c# you ‘invoke a method’ As others pointed out, to get multiple targets for the invocation, look at events.
Don’t choose a language. The core OOP concepts are what you should learn. Then you can transfer your knowledge over to any language your employer requires.
What are you talking about? 
Thank you for your reply, so, your solution is with AutoFac code inside. If I would like to make something out of your example I need to get AutoFac via Nugget? I would like to see working example of DI. I want to try to make your example working. I will add AutoFac and try.
We neither, we do not find :) &amp;#x200B; Get a coffee, take a deep breath and tell us everything ;)
Check out the various programming guides on msdn
I love c# but learn TSQL also. There are plenty of good resources to help learn both.
After that learn LINQ but learn TSQL first.
My school isn't teaching anything yet, I still have to wait a few years, its just that I want to learn a new language for fuj
I see. Do you know the language your school will teach?
What’s the point of this? Heroku doesn’t officially support .NET Core so it’s always going to be a third party build pack and the required steps are already available in the build pack information so we don’t need some random blog. https://elements.heroku.com/buildpacks/jincod/dotnetcore-buildpack https://elements.heroku.com/buildpacks/noliar/dotnet-buildpack Etc. 
Thank you! I have three more articles, but they are not translated, i will try to translate them in near future. Also, if you have similar articles to read, you can share. I am interesting in such non-prod examples 
I agree with everyone else, it is Event Delegates you're looking for, but I would suggest also looking into Reactive Extensions. This system turns events into event-streams that can make your event subscriptions much more manageable, more declarative and much easier to use. 
I would recommend picking up a book for writing ASP.NET MVC. This will gives you a somewhat easily consumable amount of materials for building an MVC website, which includes learning about Entity Framework, Unit Testing, ASP.Net, LINQ and probably a few other things I can't remember. 
Took it two weeks ago. Really not that bad
&gt; I want the detailed code, not the idea how to do it. Haha. Yeah, it would be nice to just post problems on the internet and make other people solve them for free. Then you can take all the credit. You are funny. :) You can go through the records one by one. That is not an issue. You can just create a list of strings with all the queries in them and then batch process them. For instance, you could write one function that generates all the queries and another function will batch execute 50 or 100 queries at a time rather than running them individually. 
First of all, C# is a programming language, so you should learn its basics - syntax, reserved words, etc. Then, C# is a OOP programming language, so you have to understand all that OOP principles - abstraction, encapsulation, polymorphism, inheritance, SOLID, design patterns, etc. Then generics, reflection, extension methods, exception handling, delegates (Action&lt;T&gt;, Func&lt;T&gt;), etc. Domain driven development, models mapping (DTO &lt;-&gt; DAO), dependency injection, MediatR, etc. Test driven development (NUnit, XUnit). 
you're right, but some people require to see tutorials to understand how to use some of these stuffs. especially beginners or first timers 
Just learn c# for now :)
Html5,JavaScript, css and SQL, I already know html5 JavaScript and CSS. We will do SQL soon but that's not really my worry. I kinda just wanna make software for fun for now. Like make small games and ect
Well quick question then, how good is it for making games(just as a hobby for now) 
I’m going to have to agree with everyone and suggest Event Handlers. That’s gonna be your Huckleberry. 
It's not that it is all out of date, so much that there's a few new features worth exploring. If it's a good price, treat it like a learning book. Then consider getting a reference or deep dive book for your specific interests to explore more advanced concepts. This might help with providing a roadmap of features to catchup with current C# features. [C-Sharp Version History](https://www.tutorialsteacher.com/csharp/csharp-version-history)
I think you're looking for events with EventHandler but you may be looking for Mediator pattern as well if you want to globally raise events to other classes without explicitly having to subscribe every class to every event. A popular library for this is https://github.com/jbogard/MediatR.
I’m not 100% either on registered windows services either, but I think this may do the trick. https://www.c-sharpcorner.com/UploadFile/b1df45/web-api-self-hosting-using-windows-service/
I am not the person who did not do anything before posting this thread, I have posted majority part of code, I don't think the bulk copy code can exceed more than 10 lines. I do think it is the purpose of forum, sharing knowledge, asking and answering. If not, then what is the technical forum about? It is nothing wrong for you to provide some general comment, but it is not helpful for the person who asks the question. Maybe this forum does not really provide code as solution, but for other forums, it is very common to provide code as answer(technical solution), you may simply check some threads: [https://social.msdn.microsoft.com/Forums/vstudio/en-US/home?forum=isvvba&amp;filter=alllanguages](https://social.msdn.microsoft.com/Forums/vstudio/en-US/home?forum=isvvba&amp;filter=alllanguages) No, not one by one, I already have VBA code to accomplish the task one by one, but that is very time consuming. If you suggest one by one, that is really pull my thread off track. I have made it clear in the title that it is about Bulk Copy question. &amp;#x200B;
I didnt like it at first either but now I kinda do lol
Its great. You wouldn't use it directly but inside a game engine and one of the most popular game engine nowadays is Unity and it uses c# for scripting (code that controls your game).
Damnit...I just switched to C# after a year of learning Web Dev because I'm tired of stacking 5,6,7 different techs to make a working project that's useful. Can one no longer make a useful application with a single language?
Learn the theory the languages will figure themselves out for you. I often have to switch between C#, Java and Javascript/Typescript for work. If you know the concepts the languages will come easier.
So... you want us to do your homework for you? Sorry, but that's not going to happen. But we can certainly give you some pointers! &gt; I know how to declare the array but I dont know how to put random positive and negative numbers at the same time There are two parts to this. First, you need to go through each element of the array one by one. Then, for each element of the array, you need to generate a random number. Which one of these bits are you struggling with? Try a google search for one part or the other. &gt; neither know how to divide them later. This bit is a little more tricky. I assume you need to use arrays, and not lists? And I also assume that you're not allowed to (or don't know how to) resize the arrays? If those assumptions are correct, you'll need two stages. In the first stage, you'll need two counters - one which counts positive numbers, and one which counts negative numbers. (What happens if the number if zero???) Then go through the array, and depending if the number is positive or negative, add one to the relevant counter. Next, make two arrays. The counters will tell you how big each array needs to be. Then you can go through the first array once more, copying items into one of the new arrays or the other. 
Have you figured it out. Can't find it either.
guys anyone using it in production yet?
Do not let the url fool you that article was last updated on the 04.03.2018. 
Well shoot. Still won't be incorrect if they do make a massive update though 
Unfortunately it happens to be part of our problem and based on the number of performance related issues on their GitHub I'm not the only one: [https://github.com/ninject/Ninject/issues/273](https://github.com/ninject/Ninject/issues/273) [https://github.com/ninject/Ninject/issues/276](https://github.com/ninject/Ninject/issues/276) [https://github.com/ninject/Ninject/issues/292](https://github.com/ninject/Ninject/issues/292) etc. etc.
LondonPilot laid it out really well for you. Just follow the steps and you should be all good. Also, never be afraid to google your ass off. All programmers do it, and it’s considered lazy nowadays if you don’t utilize google. There’s never going to be a time where you know absolutely everything about a language you’re using so practice googling the right question. Good Luck on the homework. 
Everyone says "events", and that may be fine and all, but that's not what an ObjC/Swift delegate is. Instead that's an object conforming to some protocol (interface), that you set on another, often system, object. That object will then call it at appropriate times. The protocol can contain multiple methods.
you could read a book on programming in lisp from 1970 and still get a lot out of it for programming in C# today :) &amp;#x200B; Yeah it will be a fine way to start learning, nothing in there will have become irrelevant by now. &amp;#x200B;
How much experience do you have?
LISP is a functional language, more analogous to F# But your point is valid in that certain programming principles are pretty universal like data types, Boolean logic etc. and any intro to programming is useful regardless of which language it introduces to the reader. 
Do you mean server-side JS like Node.js? Otherwise, if you mean client-side JavaScript versus asp.net mvc, those aren't competing things. You can have as much or as little client-side JS with an asp.net mvc app.
Yeah server side js
Yeah server side js
I agree with others. But if you want an alternative, you could use use the observer patern
Perhaps an event aggregator pattern?
I'm a fan of client-side JS frameworks, but there are advantages to server side rendering of html. It may perform better, especially on low bandwidth / low performance clients. You can provide dynamic content, but be certain that the user (especially if it's a web crawler) is going to see the actual html you want to deliver, as crawlers tend to disregard content brought in by JS calls, and that they will see content immediately, rather than having to wait for Dom content loaded and subsequent calls to finish. If you're talking the difference between C#/MVC vs Node/Express, it's just preference. I really like using both. I actually prefer prototyping and developing small services in Node, because the cadence can be faster. But, I often wish the finished product was in .Net because of the performance, static analysis, and testability - which means maintanability. You can achieve the same in Node (other than, arguably, the performance), but the testing/static cadence is better in .Net.
Yes.. C# would be a solid step if you are a MS shop. WPF is slowly replacing Winforms. ASP.NET Core 2.x (Razor) is replacing ASP.NET 4.x Though VB6 to winforms isn't a major technology hop.. totally doable.
C# and .net are pretty commonly used in enterprise, it's a decent choice. Winforms is more legacy stuff these days, though still widely out there. WPF is for windows desktop apps, and will eventually be supplanted by UWP, probably. Xamarin is also a possibility for cross-platform apps. ASP.NET MVC is for web apps. So really, I guess the big question is what sort of applications you're looking to create.
ASP is a web framework. A good one, but I doubt you really “know” JS well enough to do much with it as of now. Typescript is a different flavoring of JS, which, at its core, it’s JS with types. Very nice for large scale web apps, as it clarifies the code to a ridiculous degree. 
Thanks for the insight! Even if we're not a MS shop does it still make sense? We are kind of a mess (non tech company) and have technology all over the place (Informix, Oracle, some SLQ server)
You can, but most of the world is web based now. Sorry. 
From reading up on it, it sounds like the best solution is a c# interface that implements the protocol and an IProtocol or List&lt;IProtocol&gt; in the delegating object.
It's a financial company (think banking, insurance, accounting, etc.) and would primarily be used for internal processes only (reporting, tasks, etc)
If you want to create a value type in C# then you use a struct. Structs are value types, and classes are reference types. You can read about how it works on the [MSDN Struct page](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/struct).
Canadian: I'm a contractor. I was fulltime salary, but since there is virtually no downtime between contracts I opted to be paid for my time. Rather than have to do overtime for no benefit. My current contract has been ongoing for almost a year now. Keeps getting extended, hourly rates here are between 70-110/hour. I don't think I'd ever go back to being a corporate slave.
&gt; the c# programmer cannot create new value types They can, and they do it frequently, but they do it using the `struct` keyword. The relationship to `System.ValueType` is not explicitly expressed. https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/struct &gt; the derivation of value types via System.ValueType is behind the scene compiler magic which does not work like regular inheritance That is correct. It's in the same vein as `System.Int32`, a value type, inheriting from `System.Object`, which is a reference type. 
You can make almost any sort of application with .net technologies - I meant more like, desktop, web app, mobile - etc. That will determine what set of frameworks you'll focus on. Can't make a web app with WPF. 
I had serious performance issues with ninject too. It was around 45 seconds from cold which was just not acceptable. I couldn't justify swapping it out either. 
Yes.. it would make sense. Then again I am pro .NET so I may be biased. 
My advice would be to not use bulkcopy. There are other ways to interact with tables in ways that can scale with millions of rows. Best of luck.
JavaScript is very flexible but because there is no typing it can be very hard to read and know what's going on. Typescript let's you add type information. .NET is the name Microsoft gives to their C# libraries. There's lots of useful stuff in there, and the part that handles network APIs is ASP.NET, for Active Server Pages. Have fun! 
Sounds to me that the event raising object needs to implement an interface that exposes a property of type Action&lt;T&gt;. The listening object can then provide the instance of that action to the raising object. T is then a type that represents the message being sent.
Shrug. Employers usually prefer that their employees can do their job without running for help every five minutes. There is a ton of information on line and you must be able to find it on your own. In addition to documents there is sample code, how to fix errors, configure tools, etc.
Because non-statically typed languages kinda suck, and the larger your team or the longer the applications lifespan, the more they suck. Because the senior developers with years of experience on the back end have that experience in other languages and platforms and Node doesn't offer anything compelling enough to switch.
&gt; WPF is slowly replacing Winforms. Released in 2006 (WPF), that's an understatement.
Hard to go wrong with .Net, especially with line-of-business applications.
Depends on the size, but in general you should prefer sending bigger packet and less often.
While that is a valid thing to do, that only allows a single instance of your Action to be assigned, if another object assigns a different Action, then your instance is lost. The event syntax gives you a safer interface to what is a multicast delegate, i.e. It can process several delegates at once, from different sources. I expect the event's underlying implementation could be an Action type, though, or at least some kind of Action collection. 
WPF with all it's xml is so ugly to work with. So much better to use WinForms with like DevExpress.
I'd switched from mainly desktop apps to mainly web apps a couple years after WPF released and never worked with it much. WinForms and MFC prior was straightforward and productive but good effin luck if you ever wanted to implement a more custom look and feel. WPF seemed to be a lot better in that respect, at least.
No its in the vs 2019 release now just in a bad option area see my other post yesterday: https://www.reddit.com/r/csharp/comments/b954wq/how_to_turn_off_lame_new_vs_2019_color/ seems like you were searching how to disable it too huh? :) have a good one
I have these two bookmarks that you might find useful: [https://github.com/FAQGURU/FAQGURU](https://github.com/FAQGURU/FAQGURU) [https://github.com/charlax/professional-programming](https://github.com/charlax/professional-programming) Hope it helps and good luck with the job!
C ++ ++
More like Microsoft Java tm
Yeah, that’s closer to where it’s coming from, at least. 
In my experience, wpf makes things really interesting. But what are your constraints that require you to migrate? &amp;#x200B; For development, you can start on the classic framework delivered with Windows. Anyway, if your goal is to build a form-based application, then do not worry about .Net Core yet simply because .Net Core don't have wpf support before version 3 (not yet released). 4.7 Framework will be enough. &amp;#x200B; If you are looking for a client/server application like web application, using .Net Core is preferable &amp;#x200B; For code editing I guess you already use Visual Studio. &amp;#x200B; You're lucky, currently there is a book humblebundle dedicated to .Net technologies
Internal processes where alot of inter-communications happens I would say ASP.NET Core in C#, works amazing. But that’s my 2cts and you are more into what’s needed
C2
E
 [https://www.redblobgames.com/](https://www.redblobgames.com/) 
Some junior questions I came across were: - what is an interface? - what is an abstract class? - sometimes will ask 2 above together wanting you to explain differences - SOLID principle - what the different access modifiers are in C# - What is the IDisposable interface for? Maybe trying to get you to arrive at explaining the using keyword or may do this the other way and ask what the using keyword does. - exception handling (basics of try catch) - may want you to whiteboard some code problems in pseudo code That's all I can think off the top of my head. I might come back later and add 
So C Octothorpe?
If you set up cross paths as nodes as well you can make each node implement a list of its neighboring nodes (or the edges to them, whichever fits best for your options). With that it should be pretty much straight forward Dijkstra or A\*. If you go with A\* the heuristic path can be done by implement positions on each node, for example: 1. Select a stat node (maybe an entrance), put that as (1; 1) (or (1; 1; 1) if there are several floors) or 0 if you prefer 2. Either manually or through an algorithm map out the rest of the rest of the nodes in relation to this one. * Could be done counting pixels As for objects in the way, you won't have a problem with that since you're manually putting out the edges and nodes so no edge will exist where it's not possible to walk and nodes will only exist where it is possible to walk to. This way you also avoid all the empty space from matrices and vectors. Hope this helps and good luck!
Where is C Pound? 
As everyone pointed out, Events or Action&lt;T&gt; would be the answer traditionally in C#. However, since this is in Unity, there are a couple of other options to consider. One is UnityEvent classes. Those allow you to serialize callbacks inside the editor, so you don’t have to do everything from code. The other, which from what you are saying, might fit the use case better, is the concept of GameEvents derived from ScriptableObject. There is a [Unity Blog Post](https://unity3d.com/how-to/architect-with-scriptable-objects) about it, and a great talk from [Unite 2017](https://m.youtube.com/watch?v=raQ3iHhE_Kk) about ScriptableObject with all the info on how to implement those. 
Depends what you mean by performance-wise. If your constraint is latency you may want to not fragment UDP, which means you want to stay below your MTU. Also larger "bursts" of packets may bog down your network, so if that is a concern you may want to think about smoothing that with smaller ones.
These links are perfect ! I will take a look, thanks a lot
Ok thank you so my fear of hardcore questions is a bit excessive haha. Thank you for your answer and I stay tuned in case you add more questions 
I've been doing .NET dev for like...2.5 years...and I'm reading this like: O\_O Ha where the heck do you learn / pick up that level of solution complexity? I'm thinking mostly in terms of managing that level of dependency depth. &amp;#x200B; I suppose Game / Framework development requires a lot less fudge-factor than standard web / API / biz-logic -- I'm sure I've just been slow on the uptake since I have to wear so many hats, but still! Ha, I'm craving that knowledge.
Everyplace is different, so still do plenty of prep, but it's a junior role so to except loads of you implies they are just being cheap and don't want to pay a more experienced dev.
Thats what an EventHandler is 
http://devhumor.com/content/uploads/images/February2018/c-animation.gif
15 years ago maybe
Link?
Well, C# events and delegates only perform a single function, where a protocol can contain many. Of course it can be done with many events instead, but it’s slightly different.
The music notation is a bit redundant. The note is already a C#
 You mean like this? : public void CreateObject() { Customer cust = new Customer(); } I'm not sure I understand. If I do It like that I how do I set the strings that will be printed from the ToString from the other forms' textbox output? 
System.Media.SoundPlayer player = new System.Media.SoundPlayer(@"priceIsRightFailHorn.wav"); player.Play();
My recommendation is pick an ambitious end goal and make it happen. Read books, Google and hack your way there. It won't be pretty. Don't worry about that. Over the next 6 months youl hate the code you wrote the week before because of how much you're learning. Pick a website to make. Pick an app to write. Pick a game to create. I also learn far better by doing, and this is, for me, far and away the best way to learn.
Yeah, that's not an artist at work.
[Window.QuickLaunch](https://docs.microsoft.com/en-us/visualstudio/ide/reference/quick-launch-environment-options-dialog-box?view=vs-2017) I haven't been able to set it while ReSharper is enabled.
&gt; I got the impression it was meant his general preference, not his preference for this specific problem. No. I think it was clear that was his preference for that specific problem. The point is that he analyzed what the user expects from the system, and then used the appropriate date type.
And the sharp is on the wrong side for music notation. 
That's how mafia works.
Compiler magic. It's just to give you the benefit of treating numbers like any other object.
**C £**
C cross-hatch
Using the `struct` keyword for new value types makes a lot of sense, yeah. I think I was caught up with the fact, that you can't inherit from structs, but of course that is irrelevant for the creation of new value types with the `struct` keyword. &gt;That is correct. &gt; &gt;It's in the same vein as `System.Int32`, a value type, inheriting from `System.Object`, which is a reference type. If it does not work like regular inheritance, what exactly is inherited by value types which inherit from `System.Object` and `System.ValueType`? I know of boxing/unboxing, but there is probably more to it than that?
Why the C before the note C#? CC# release in 2020
No it's not.
Two weeks worth... I just discovered this stuff. I am transitioning out of the military and this is a prerequisite for a program with Microsoft I got into
That's a matter of taste. I like it.
Not when you're using letters.
I just do not like the idea of loading .NET DLLs into the browser and execute on mono runtime on top of wasm. The whole stack of technology browser/javascript/wasm/mono/DLL opens a lot of security holes and will produce a lot of inter-operability issues. Again full .NET will not be supported and, therefore, you will always have to look for something else to fulfill your needs. From what I read on the Internet, it is already very slow even for a simple example to like printing first few Fibonacci numbers. So I am not planning to go near it anytime soon. I think Microsoft is going in the wrong direction without taking lessons from the web community at large. Trying to run .NET inside the browser is not a good idea. Just like Silverlight and Java Applets, it is a terrible idea. Running on WASM does not make it better. Most likely to fail, in my opinion. &amp;#x200B; JavaScript is the language of the web and if you want to program for the web, there is simply no excuse NOT to learn Javascript. ES6, which is supported in all browsers is a pretty good language. With ES6, you can write code for the web using the same object oriented paradigm as in Java or C#. With frameworks like React and Angular, it is far easier as you don't have to delve into the nitty-gritty details of Javascript. &amp;#x200B; Having said that the Server Side version using Razor components has good potential because all .NET code runs on the server. However, my initial enthusiasm for Razor components faded soon after I created the first application and ran it. The counter button provided in the newly created app did not work and there is is no clue why it is not working. I understand it is work in progress but I expected something as simple as a counter to work. &amp;#x200B; &amp;#x200B;
Instead of event handling, I would recommend you look into [UniRx](https://github.com/neuecc/UniRx). It's free and available on the [Asset Store](https://assetstore.unity.com/packages/tools/integration/unirx-reactive-extensions-for-unity-17276). [Reactive programming](https://gist.github.com/staltz/868e7e9bc2a7b8c1f754) and Rx is great for handling asynchronous streams and pub/sub. Rx is a very mature technology that you can use for general C# (where it got its start) or most other languages including Java and Javascript (React and Angular, for example). There is a bit of a learning curve (a paradigm shift, if you will), but it's incredibly powerful.
I found some references claiming the count is based on the IL. Not sure if they're referring to vs 2017 or 2019 though...
No, it is not. The key is in C major/A minor. 
I know that. I’m just saying that the “C” in front of the sheet music is redundant since the note displayed is already C#, so it reads “C C#”
I missed that. Need to change my glasses so I can see sharp again. 
Pretend you didn't see System.ValueType.
It’s C-pound! 
Make sure you have viewstate enabled You will need to initialize the values during page_init
Dear America. # is not "the pound sign". 
C C Sharp?
I this comedy night? Am I missing something?
You don't need to build an entire graph when doing path finding. You can... But it is not necessary. Instead, you can build a graph as necessary during the path finding. This is much more efficient unless you need to runt the path finding multiple times on the same graph. My project has an example of how to do generic path finding: https://github.com/ZacharyPatten/Towel This method can be used for any form of pathfinding because the necessary functions are abstracted using delegates. Hope that helps.
C++^2
Nope.
Unity C# is an excellent choice. Very easy to learn how to use with tons of resources. C# is a powerful language and you'll be up and running faster than you would be with Java or heaven forbid C++ (I code in all the above btw and C# is my favourite for the majority of use cases) 
“.Net” actually refers to the languages of VB, C#, and F#. Not just C#
This is offensive.
http://reactivex.io 
nowadays - confirmed
 TextReader consoleIn = Console.In; TextWriter consoleOut = Console.Out; consoleOut.WriteLine("Hello Console Out."); consoleOut.Write("What is your name? "); string name = consoleIn.ReadLine(); consoleOut.WriteLine($"What's up {name}!"); Console.Title = name; Console.ReadLine();
You forgot my favorite name for it; "coctothorpe"
Is disabling ViewState and just using html forms and accessing it in the codebehind Request context? The only reason I ask is viewstate/server side controls/that whole part of webforms is kind of an abomination. We have one remaining webforms app and it's a pretty big one, our company intranet. But working on it isn't so bad because we avoid all that crap and just use plain HTML. The code behind/model binding is actually pretty similar to MVC. The only thing we really miss out on is razor/partials.
Yep. You just need to decorate it with this attribute: https://www.learnentityframeworkcore.com/configuration/data-annotation-attributes/notmapped-attribute
Brush up on data structures and recursion. Be familiar with the big O cost of different algorithms. Be prepared to show that you understand OOP, the benefits of compiled languages vs interpreted languages.
Depending on the process you just have to use "Attach To Process" within the debug menu. Depending on the type of process it may be under another name (IIS processes are typically under w3wp for example). The breakpoints will be hit as long as the process that is running matches your source and local pdb files. You may have to open Visual Studio as an administrator and check the box within the attach to process dialog to show all processes. Link: https://docs.microsoft.com/en-us/visualstudio/debugger/attach-to-running-processes-with-the-visual-studio-debugger?view=vs-2017
D♭
D-Flat
C2 
Thanks, I set it to \`Ctrl-Q\` to test it and it works (with ReSharper active). I have the 2019 Preview (which should be the same as the RC atm) and I also deleted \`%localappdata%\\Microsoft\\VisualStudio\\16.0\_4a1a7a3a\\Settings\\CurrentSettings.vssettings\` beforehand. Not sure if any of that made any difference.
Not quite what I'm looking for. I want to move all keyboard input to Title as it comes, leaving the window for output only.
 public Customer CreateObject(parameters...) { Customer cust = new Customer(parameters...); return cust; } You're creating and returning the customer object from the CreatObject method now, which gives you a reference to the Customer object. Then you can pass that object around.
More like "Java That Doesn't Suck" TM
Yes it is
C^2 #
You're going to run out of room in the Title quickly, have you accounted for that? My example was a jumping off point of how to redirect input via Console.In to a stream to do with what you please, but if you need it in realtime character by character, then it sounds like the way you're doing it is the way to do it...what limitations are you running into?
Yeah I know vanilla JavaScript, I never liked the JavaScript libraries like jquery. I have to do some research on typescript. 
 Why is getting answers so hard? Never mind imma just Google this stuff
Well, is making a game with c# without a game engine possible or do I have to use one? 
...why are you using Title as an input buffer?
Typescript is far and away above where you are now. Learn a main language (Python, Ruby, Java, or C#), after you’ve learned it, pick up a web framework, and from there you can begin to learn about items like typescript. 
I don't expect lines with 100+ chars being in there, and it'll be cleared after every ENTER (implemented manually I suppose), so title size isn't a problem.
It's the most easy and neat way to organize a chat-like console app, AFAIK. Another option is to put an input line to the bottom of the console, and that'd require a lot of moving the cursor and other messy stuff I'd rather not do.
This grouping is like Haley’s comet. Once every 76 years...
It's only a hashtag when you use a hash to tag something.
Ok, I will learn c# then, and also, am I a moron for not understanding half of what people are saying here and think they are harsh? 
Uh, while it's possible to make a game without game engine in C#, care to explain why you want to do that? Also, what kind of game it is, anything more complex than point &amp; click would require weeks or months of development for the basic stuff, time you're better off spend in actually developing the game by using game engines. 
Yay something I can understand! I'm not a moron after all! 
Broke, woke, bespoke
Sure you can use C# and Direct3D but you'll be much more productive with Unity and you'll learn much faster. If I understand correctly you have little coding experience - I really recommend using an engine. 
Well I kinda just want to challenge myself and I have time, I just want to do it as a hobby. I'm pretty young, and I also like solving logic problems
Well I will definetly use one, I just wanted to know as I wanted to challenge myself. And well with c# I do have little coding experience but if it turn out to be the programming language for me I will code every day.(If what I'm saying sounds stupid its because I'm tired) 
What does your main thread do if the console input is handled in a background thread?
Chat client object listening routine.
You'll want to check out the Documentation for the Console class, particularly the Methods it has: https://docs.microsoft.com/en-us/dotnet/api/system.console?view=netframework-4.7.2#methods There is a method there that will remove any existing text from the console. :)
When I'm interviewing juniors I care less about your in-depth knowledge of a programming language and more about your attention to detail, ability to learn and problem solving abilities. If you can show me that you learn (and understand) things quickly, then you've already got my attention. Bonus points if you bring examples of where you've learned something and/or where you've bettered yourself without outside intervention. Showing understanding of general programming principles such as design patterns, testing, OOP etc is important but not neccessarily a deal breaker (as long as you can show that you can at least program). As a junior, you aren't there to make a huge impact straight away. You're an investment of the company who are hoping you'll get better over time with mentoring, training and experience. If they expect more of you than just the basics, then they're trying to screw people over by giving them junior wages for non junior roles.
Do you mean it does the network part of the chat? How is that handled? - HTTP, sockets, etc.? I can think of at least one way to do it, but it would depend on which communication protocol your main thread is "blocking/listening" on
That is one reasonable solution, considering that Im probably too deep down the rabbit hole for someone who only recently started with C# ;)
The issue is that you’ve yet to really do any programming at all, and are really overthinking it. HTML is just markup, and CSS is just attributes. JS is scripting, but at the level you’re likely at, its little more than tiny fictions. It’s a bit silly to be asking what language to use when you don’t understand OOP, or any of the frameworks that come with said language. Most languages share the same amount of functionality, but the difference is in the tooling. So asking for recommendations without understanding what the tooling is sounds rather ridiculous. People assume you come in here looking for actual discussion about C#, but you’re a year or so away from really being able to understand what makes C# different from something else. You have yet to even learn how to program, so discussion on what language to choose is silly. 
The last thing in Main is Client.Connect(), and it just blocks the main thread. HTTP POSTs on lower level, but inaccessible from my code.
Just get stuck in and see where it takes you! Have fun
we say cocktothorpe when hr isn’t around 
Ah, yeah, I don't know what library you're using but it looks like it handles all of the network communication for you. There is no other real option besides what you're doing now.
You create and instance of your form and pass it to Application.Run you then create another instance and call a method on that, this won't be the same object that was passed to Run. Also I'm pretty sure run won't return until you close your form. You need to read up on the basics I think and also would be a good idea to learn how to use the debugger as that usually helps in these scenarios 
Check out the side bar of this sub and also r/learncsharp
RIght? It's just bad grammer. See *sharply* again. ^^I ^^mean, ^^nothin'.
Ok
Awesome - thanks I’m in the midst of a career change.
Let's turn all of our attention to this fruit loop Cocteau.
Missing [C# Major](https://youtu.be/VIlMytoc_aY) or [C# minor](https://youtu.be/7bBGXptrjVQ) 
It's not hard. For my job I use google sometimes a couple of times a day to get answers. I sometimes find sample code, I get info on how to configure tools, look up details of library methods.
Wish I could make you believe me that I created this meme and posted it in CS memes Facebook group.
Thanks for the reply. Yes, that's what I needed! Is there a way to have entity assign that property a value while it's building? Like an automatic indexing or assign a value from an output of a function?
OMG Really why haven't you typed your name ?
You’re both correct depending on which country’s soil you’re standing on. https://en.wikipedia.org/wiki/Number_sign 
This guy musics.
Put you name on your memes, And sorry bro i just found it funny so i shared it on reddit &lt;3
 public static void Main() { int c = Sum(5, 8); } public static int Sum(int a, int b) { while (b &gt; 0) { a += 1; b -= 1; } return a; } &amp;#x200B;
Oh oh I know! Code coverage, and support for your colleagues who are more special.
I generally apply the rule of creating separate methods when the function you're writing is getting very long (so for maintainability reasons) or because it can be reused by other functions.. Since I don't see either of those styles being used appropriately, I'd just write it as c = 1 + 3 or.. you know, just perform the calculation myself and write down 4 because I don't need a machine to calculate how much 1 + 3 is for me. &amp;#x200B; Obviously, documenting your code is a **plus**!
Apparently Java developers. That's javadoc not xmldoc. Sandcastle &gt; javadoc
In this instance `1 + 3` would get replaced by 4 by the compiler anyway, so it wouldn't run at runtime. It's not really about typing 4 because "you know what 1 + 3 is", sometimes it's best to leave equations assigning to values, like `int secondsInADay = 24 * 60 * 60;` For example, as it makes it clearer where the value came from rather than just typing 86400. 
C'std've
I know but when you do it too much it isn't good
Why have I never seen this myself before?
Haha I don't know - I always thought whoever named it must've had a good sense of humor.
This uses Linq so it's functional and much more scaleable. /s ``` public static void Main() { var addends = new int[] { 1, 2}; var sum = addends.Sum(); } ```
wikipedia: the source of truth
Wouldn’t it just be C hash? Hashtag being a hash sign followed by a word.
But it’s written, and you wrote it, C number/hash etc. The note would be C♯.
C♯, though.
Those videos don’t know how to write ♯ either, and wrote # instead.
Pretty sure that's SHFB &gt; JavaDocs. Sandcastle w/o SHFB isn't very intuitive. 
"These aren't the data types you are looking for."
Thanks!
Okay, so I was able to Create the Object and then create a new reference object of the CreateObject method which I can then call the ToString from, and now I no longer get the NullReferenceException error, but now the outputs from the textboxes do not print and only the "Thankyou" and "!!" part of the Customer ToString show. Heres what I have: CreateObject: public Customer CreateObject(string first, string last, string address) { Customer cust = new Customer(first, last, address); return cust; } And then making a reference object of the method: Customer cu = new Customer(); string address = cu.Address; string first = cu.FirstName; string last = cu.LastName; Customer c = CreateObject(first, last, address); which is then called as c.ToString(). And then finally in my Form2 I call the method from Form1 with the textbox parameters: Form1 form = new Form1(); form.CreateObject(txtFirstName.Text, txtLastName.Text, txtAddress.Text); Any idea why I dont get my desired output?
Just start actually coding instead of fussing about what you want to use. Download the Visual Studio, create apps while learning. 
&gt; I basically have one class (this is in Unity) handling the receiving of touch events, and I want to have other objects that listen for those events react. Several objects can subscribe to one event
Just a quick question as I haven't undertaker this, could I use notepad++ instead or do I need to have visual studio? 
You can use notepad++, but it’s going to be a pain and a half. IDE’s exist for a reason. Visual studio community is free. 
Yeah but it isn't portable and I really need that, Imma just suffer and use notepad ++
Letting the one meme post through, but all other meme posts should go to /r/programmerhumor
Removed: rule 7. meme posts should go to /r/programmerhumor
Approving this post because it is asking about programming practice, even if the picture is of a dank meme.
C Chik-fil-a Fry
Yup! Its just a regular POCO property. You can do whatever you want to it, however you should question that is in a data entity model, which typically should contain no business logic.
At least use VSCode then. 
Are the pdb files there?
Yeah, people who use `String` instead of `string` really need a strict talking to.
Resetting this keybind seems to work now! I've done it in the past and it didn't but I have updated both VS+R# since I tried.
You don’t need to put the C before the C# note
So i'm not allowed to post memes
If your willing to pay a little bit take a look @ mosh hamadani (spelling?) and is videos on YouTube, PluralSight and his own website. I believe he also sells the for fairly cheap on Udemy. He has some very good courses that are easy to follow.
You don't need to make a new Customer object. Create the Customer object, and set it to the return value from the CreateObject method, like so Customer cu = form.CreateObject(parameters...) cu.ToString(); You're recreating the Customer object over and over, you only need to create it once, and then get references to that object. The Customer object is created in the CreateObject method, that's the only place you need to set the fields. Just a primer on how references work, once you create an object, when you set a variable = (equal) to that object, it's a reference, and not an actual copy. Make sure you have a solid understanding of how reference types vs value types work in C#. A reference is similar to a C/C++ pointer, e.g., you're referencing the object's address in memory, so there's only one "copy" of it (this is a vastly simplified explanation). Just make sure you're not creating more objects than is absolutely necessary.
Those are some awful bug reports.
You're still not explaining what limitations you're running into w/ your current implementation. Going char by char if it's &lt; 100 chars doesn't seem like a bad idea, unless you think you're going to run into issues w/ scalability (e.g. multiple people using it). Since the .Title is a string, you should be able to stream whatever text you want to it once it's captured elsewhere. Do you want chars to be displayed one by one in realtime? Or is there another type of "chunk" that will delimit when text is sent to the .Title?
Me when I'm trying to fish the professor for more marks in stupidly simple programs
Does this work for .net core 3.0?
There are 2 parts to learning C#: * Learning general programming concepts (can be done in any language) * Learning how to make useful applications with C# using modern development tools. While the basic concepts of programming have not changed in the last 11 years, C# certainly has. I would recommend finding a more modern book (2017 at least) or just .. trying to make a functioning website/app/game in C# and learning along that way. 
True XD
Cu
You're using the variable i which after the first loop will be equal to numbers.Length and therefore outside the bounds of the araay (which runs from 0 to numbers.length - 1). The question is why are you using i after the first loop? Perhaps he meant number[j] = numbers[j] - 1? But then you'd need to alter your next statement to print numhers[j] and not numbers [j] - 1. 
`Console.Clear()` before your `Console.WriteLine()` method, but that's going to make it strange since your users would no longer be able to see their input.
C U+266F ftfy
Here? Not normally. 
So where ?
The only thing I can think of is that you need a delegate for some reason. Say shoving it into a `Dictionary&lt;char, Func&lt;int, int , int&gt;`. 
I think there is a coding or programming humor group. 
Okay, that makes sense, thank you so much for clarifying, that was really eating at me lol I guess he did mean j instead of i? So I just print numbers[j] then. using System; using System.Collections.Generic; using System.Linq; using System.Text; namespace Assignment09 { class Program { static void Main(string[] args) { int[] numbers = { 4, 5, 6, 1, 2, 3, -2, -1, 0 }; int i = 0; int j = 0; while (i &lt; numbers.Length) { System.Console.WriteLine(numbers[i]); i++; } Console.WriteLine("...Start Subtracting"); numbers[j] = numbers[j] - 1; Console.WriteLine("...After the Subtraction"); while (j &lt; numbers.Length) { Console.WriteLine(numbers[j]); j++; } Console.Write("Hit any key to close"); Console.ReadKey(true); } } } This gets rid of the exception and does subtract 1 from 5 but doesn't do it for the rest of the numbers, and adding j++; afterwards just gets rid of the first number altogether 
/r/ProgrammerHumor is the best place for that kind of stuff. 
When I declare Customer cu = form.CreateObject(); in my form1 I get an error because the strings first, last, and address are undefined. The only way I could the error to go away was to define each string as one of the strings from the Customer class, but to do that I had to create the Customer cu refererence. Whats the way around this? 
D flat
If you have a portable harddrive you can bring everywhere you go, consider setting up a VM on it with Visual Studio, so anywhere you go you can just run the VM. If you have a PC at home with speedy internet connection and you can get fast internet access wherever you go with generous data cap, install VS 2019 in your home PC, leave it on then remote to it when you're away and wants to code. If you don't have a PC with speedy internet connection, but anywhere you go there's fast connection, [Azure Students](https://azure.microsoft.com/en-us/free/students/), [Dev Essentials](https://visualstudio.microsoft.com/dev-essentials/) and [Google Cloud](https://cloud.google.com/free/) have enough free credit for a couple of months worth of running VS on it (assuming you don't leave the VM running 24/7), that should be enough to give you a taste on whether procuring a PC dedicated for VS is worth it (don't need to be too high-specced). In fact, just sign up to one of the trials I mentioned above, follow [this](https://buildazure.com/2018/12/04/setup-visual-studio-2019-development-vm-in-microsoft-azure-cloud/) if you're using Azure's or install VS like normal if you're using Google's offer. You can get VS up and running in less than an hour. Programming, designing &amp; debugging in VS is far more enjoyable than trudging through bare support of Notepad++. If your situation is where you don't own your own PC or can't install anything on the PC you're using, internet access is non-existent or limited, and you don't have a portable hard drive, well okay, then use [VS Code](https://code.visualstudio.com/docs/languages/csharp), its support for C# coding and debugging is unparalleled if portability is a must.
If you can get through all of keywords and all of operators that'd be a good first step https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/ 
The galaxy brain meme fits better
Thx for responding I,m just doing some experiment to exercise writing code
I have not tried it with 3.0 yet, you can give it a try 
Thanks for your answer! Do you have any recommendations as to where to learn WinForms? The documentation Microsoft's site (that I'm seeing anyway) doesn't seem to be very helpful, and I don't see anything on the sidebar.
building an open source forum with dotnet core https://github.com/veektorh/Forum
WPF is leaps and bounds more efficient. Look up some of the underlying mechanics and it becomes obvious. 
It's transparent and works well in Discord :) Credit to https://www.reddit.com/r/csharp/comments/b9f83u/c_xd/ek42uny/ for the idea.
I didn't like having to call setup after instantiation either, I ended up removing this extension method and modifed the "Execute" method from TSHRequest to receive a delegate. Now you can create the instance and when you need to execute the request I pass the setup method, that the caller defines, and that gets executed before attempting the request. I don't just pass the uri because the caller may have to do other modifications on the request object
"What is the difference between string and StringBuilder in c#?" StringBuilders are used by programmers who think they are smart, strings are used by everyone else. &amp;#x200B;
Nice, yeah, I had meant to suggest the delegate/Func alternative, but it slipped my mind. I feel like it's a good middle ground between just passing the Uri and creating an interface to pass in.
Well i'll see what I can do
I'm gonna have to use the last option as my home computer is an XP and I use mostly public computers like my school and library, thanks for the help btw
Building an ASP.NET Core Web API project to provide a RESTful interface to our .NET SDK for integrating with our software. I started working on it myself when I heard it was a requirement for an important customer pilot / PoC. I turned out a working prototype in a couple days and extended it quite a bit over a few weeks. The pilot is going great and our R&amp;D folks have been inspired to take the official "web api feature" off the backlog for the next sprint. The project has been great for forcing me to get to know web api better, and it's my first experience with automapper and the built-in DI framework.
No worries man I'm glad you enjoyed it 
what is value tuple readonly vs const client side query evaluation (in context of entity framework) what is linq's SelectMany how would you design e.g web app (structure/architecture) 
You said you are supposed to subtract 1 from each element in the array and then print the new result. That means you need to go through each element in the array, subtract 1 from its value and replace the element with the new value. https://dotnetfiddle.net/DnzvDK
What an asshole, he's not even artist 
&gt;Because non-statically typed languages kinda suck what 's the the problem to use TypeScript?
&gt; Several objects can subscribe to one event Yes I know (this is really a feature of .NET delegates). But an event can only cover one function, whereas an ObjC delegate can cover many (but doesn’t necessarily support multiple subscribers).
No that's not possible. You will have to use Readkey.
Enable ViewState for the specific controls you want to maintain state.
What's the background of this joke any new developments in C#?
Thank you for the detailed answer. &amp;#x200B; How would I draw the edges and nodes from the floor plan that I have? That is the only part I am still unsure of.
I think also that pure js spa application on client side would be better, especially for heavy load application. The pitfall could be for mobile client that would have trouble to handle a lot of js code, but honestly, we are in 2019...
[removed]
So you’re basically using Console.Title as a global string variable? Why not just use a global string variable if you insist on doing it in such an ugly way?
Hey bud, still a learner myself but here's my 2c. If your professor used i they're probably expecting you to use a for loop. I'm sure they've covered this, keep in mind the rule of thumb is to use for loops when you know how long you want to loop for, such as here, where you're iterating through an array. while loops are for when you have no idea how long the loop needs to be. You've replicated the behavior of a for loop with your whiles. Just remember that variables declared inside of loops are local to the loop, so unless you're dealing with nested loops you can reuse i when you initialize a second for loop.
Well yes you need the framework installed if you want to run and develop apps. But you should also distinguish between types of dot net. There is a dot net framework and a dot net core (which implements dot net standard). So first you need to know which one you want to use. 
That sucks
Nothing’s good when you do it too much, that’s why it’s too much. 
Why u think it sucks? It's how think works. If u want to use any framework you have to install it first. If you develop on Linux I think u will want to target for net core. I don't think you can run net framework on Linux 
I think i need a new programming language as i cant install anything and use only portable software
You didn't click the link, did you?
Try to assign null to int
e.g ``int`` cannot be null but ``int? something`` can be null. Generally you use ``nullable&lt;T&gt;`` with its shorter syntax version ``T?`` to "allow" things to be null and then access their properties ``HasValue`` Value`` to determine whether e.g input is correct. Nullables are often mixed with coalescing operator like ``var something = input ?? 5;`` where ``input`` can be null
By default, only reference types (C# 8.0+: you have to specify that it can be nullable) can be nulled. If you want to assign null to an integer, you will get an error stating you cannot convert null to int, beacuse its a non-nullable value type. Nullable&lt;T&gt; exists to solve this.
The point of `Nullable&lt;T&gt;` is to allow **value types** to be assigned `null`. By default, reference types are nullable, but value types are not. One example where it is useful is databases. Anything in a database can be null. If you retrieve data from a table and it contains an int with the value null, you can store that in an `int?` but not in an `int`.
Documenting is a plus, yes. Duplicating method signatures in another language in comments is just plain wrong.
Well I guess that bodes the question; Why can't int be assigned the value of null in the first place? Surely it would be simpler to allow that ?
I did, why do you ask?
Because int is a value type 
So I wouldn't be able to assign string to value null either? 
Why? ;)
Type system choices aside, value types are capable of being allocated on the stack rather than just the heap. As far as that goes, reference types are only nullable because they're really a pointer to the object and the pointer is nullable. For an `int`, you have the actual `int`, not a pointer to it. To be nullable, you'd have to choose a bit pattern that you'll disallow (but all are valid values you might want to use) or have an additional pointer (which kind of ruins the whole efficiency point).
`string` is a reference type.
String is a reference type, therefore you can assign it null 
PHP have CodeLobster that's explicitly designed to be portable. jdkPortable is a thing, and both NetBeans and Eclipse can be run as portable app pointing to the portable JDK. Dev C++ is simple enough to run on portable system with even minimal resource.
What about bool?
IIRC stack is faster than heap, so I'd some kind of optimization?
Bool is a value type, therefore it can not be assigned null unless you use Nullable&lt;T&gt;
It's a useful and efficient (!) way to encode behavior in your program. For example, in my game, I have a nullable Vector struct that is a move target for a unit. When it has a value, it indicates where the unit should go, and when it's null it reads as "I don't have a target right now". I could have a separate boolean value for this, but this is more succinct. Also note that the Nullable&lt;T&gt; type is a struct, so it won't cause any boxing and create garbage when used.
Yes, performance is one of the main draws of value types in C#. If you go to C++, you'll see a culture of avoiding heap allocation where possible. For example, `Nullable` there is spelled `optional` and does no heap allocation, instead typically including an extra `bool`. Even that was enough for people to come along and make an extra non-standard type that can yoink one of the values to reserve as "null" (e.g., -1 for `int` in quite a few cases) to avoid storing the extra `bool` and thus improve how many such objects can fit in the cache and whatnot.
Yes. As all the methods needed are provided by default.
A List&lt;Student&gt; should be enough and LINQ provides/List&lt;T&gt; provide all the methods you need. If you want to get a bit more fancy, you can index the students by, say, name, to prevent two students with the same name from being added. The most straightforward way of doing is is to use a Dictionary&lt;string, Student&gt;.
Most senior developers are completely incapable of explaining SOLID, let alone follow it. :) 
`int?` is actually `System.Nullable&lt;int&gt;`
 VScode doesn't require it. If you're compiling C# stuff you might need it. Don't use VScode if you're new. I don't know why you're installing vs code if you "can't install anything"
This was literally one of the reasons they chose the name "C#", [straight from Anders himself:](https://www.computerworld.com.au/article/261958/a-z_programming_languages_c_/?pp=2) &gt; _Why was the language originally named Cool, and what promoted the change to C#?_ &gt; The code name was Cool, which stood for ‘C like Object Oriented Language’. We kind of liked that name: all of our files were called .cool and that was kind of cool! We looked seriously at keeping the name for the final product but it was just not feasible from a trademark perspective, as there were way too many cool things out there. &gt; So the naming committee had to get to work and we sort of liked the notion of having an inherent reference to C in there, and **a little word play on C++, as you can sort of view the sharp sign as four pluses, so it’s C++++.** And the musical aspect was interesting too. So C# it was, and I’ve actually been really happy with that name. It’s served us well.
Removed: Rule 4.
I didn't install it
Hello! Thanks for all your replies
Checkout the [method list (no pun intended :P)](https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1?view=netframework-4.7.2#methods) in `List`s 👍
? 
lovely!
¿
&gt; Also note that the Nullable&lt;T&gt; type is a struct, so it won't cause any boxing and create garbage when used. Well, it will of course cause boxing when needed, like all structs.
Is your floorplan just a straight up image? (In which case it isn't a floorplan), or is it an actual floorplan in pdf format? If the latter then you could use something like pdfsharp to open the file and fetch the objects.
&gt; Surely it would be simpler to allow that ? No, definitely not. Int is stored in 32 bits, and all configuration of those bits encode a valid number. There is no place for "null" in any of that. No CPU has the concept of null.
How about you google: "C# list of value types" or similar, to avoid a question for each additional type? :)
I worked with people who do this. They also didn't allow LINQ, Resharper, or a whole bunch of other things. I think it's something to do with them being VB programmers before.
Learned something new today, that's amazing haha, thanks!
I know someone who would do this from a DDD perspective. They wrap everything into a domain rather than relying on it being a direct expression of the language. Not my cup of tea personally though.
You are so right! You are a monster if you do this: `c = sum(3, 1) //Calls sum method` Instant-reject of pull-request if it's on me. Make sure that your methods do what they say and the need for comments is so much smaller. Only use comments if needed, not because it's a must. how many times you see this: /// &lt;summary&gt; /// Counts the items /// &lt;/summary&gt; public int CountItems() { [...] } Or even this: // Constructor public Class() { [...] }
You are a living legend
If it is in PDF format, you can do as /u/expansiveEdumacation says. As PDF's are built in XML/HTML the elements also contain information on its own position which you can then use. That could be done through, for example, normalizing the position values through an indiscriminative algorithm or relative to a starting point. If you find yourself unlucky with plain images instead you can draw on a copy of the image and let a program digest it to positions. Say if you draw red squares for a node, the program places position when it finds a red square. Those positions can then be saved and used however you like. This does not make out the entire algorithm needed to place out edges and squares correctly but it's something to get started on. It's also important to figure out things on your own. Good luck with the project! &amp;#x200B;
Sorry if I was unclear, I was talking about storing values within Nullable&lt;T&gt; not causing any boxing by itself. I remember being happily surprised by this myself, so it might be relevant to mention. More info [here](https://stackoverflow.com/questions/2865604/where-in-memory-are-nullable-types-stored).
For the first need, try local functions. Same maintainability without method pollution. 
The musical one doesn't make sense, as that would be CC#
Guilty as charged, i frequently code in Java so that's my excuse. 
You monster.
From a UX perspective your idea is just awful. Plain awful. If I ever see a chat application doing that, I will immediately close it and purge its existence from my hard drive. Implementation wise it's trivial. What issue are you facing?
If you are pre compiling your views server side there is not much to worry about in regards to speed. It should be noted that .netcore does this automatically. But let's go through a couple of pros/cons off the top of my head. ##.NET MVC approach ###Pros - you can compile everything so that you are certain it is at least working at compile/design time - all the logic of how things display, including stuff that my require permissions to see, is server side so no leaks are possible. ###Cons - every change is a postback and reload, this can take away from the 'prettiness' of full SPA. - since everything is server side, if you are hosting on a cloud platform this could eat into your monthly bill. ##SPA approach ###Pros - UI logic is run client side from data provided by APIs. This is offloaded to the client and does not need to be processed by expensive servers (if in cloud) assets can be served by cheap CDNs allowing you to save costs at runtime. - it is a bit smoother the way it works and provides a better user experience ###Cons - it is a bit of a pain to do testing on compared to the c# testing frameworks. - you have code based in multiple languages that everyone might not know. - you are relying on third parties that might not be around forever (react). - you are building on an ecosystem that changes its mind once every few months --- All I can say is do some research into what you think is best. If you are looking for stability and longevity you can't go past doing it all serverside. But if you are looking for cost cutting at run time then consider clientside. All possibilities have their ups and downs and the is no "this is what you should always do" anymore - there are just too many tools that are good for specific jobs. Just consider your toolset, your team's knowledge, your team's and products ability to adapt of change is needed, and overall if something will actually fit the scope of what you want with adding unneeded wankdoodlry to the product. 
Nice Replay, thanks, very detailed! It gave me a couple of points to think about.
&gt; No CPU has the concept of null. Well, then's time to create one! (The trillion dollar mistake.)
I’m thinking big O notation is more of a mid-level to senior thing. 
Breakpoints are being hit. Some variables I get the hover/watch capability, but `inputs` and a couple others I don't. Code moves on fine though, so they're obviously populated as expected. Nothing I've tried has fixed it, but I got passed the part that I needed to inspect those vars so I've given up on that for now. If anyone cares what the real reason behind this was, I was performing a `GetMethod(name, inputs)` on a business object and the methodInfo object was coming back null. I had the right number of args in `inputs` so it was frustrating the shit out of me. Turns out I was passing a `long` vs the necessary `ulong`. So that was hours of my life.
I understand putting the operation into a method, but you shouldn't call the method `sum`: static void Main(string[] args) { var producedResult = FizzThing.Produce(new BuzzThing(3), new BarThing(1)); } class FizzThing { public static FizzThing Produce(BuzzThing a, BarThing b) { return new FizzThing(a.Value + b.Value); } //... } The act of encapsulation is not wrong, the problem here is poor naming and shitty comments.
Checked https://github.com/canton7/RestEase ?
Here in Brazil, some people actually use tic-tac-toe to reference the #. Not on C# of course.
Thanks for the replay ! &amp;#x200B; First time I am hearing about that. Their documentation looks great, but have a relatively low DL count on Nuget. &amp;#x200B; I am also not sure what *It won't work on platforms which don't support runtime code generation, including .NET Native and iOS.* implies for Xamarin.Forms. &amp;#x200B; &amp;#x200B;
So I should change the second while loop to a for, and reuse i within that?
Flurl
Thank you! That makes sense. using System; using System.Collections.Generic; using System.Linq; using System.Text; namespace Assignment09 { class Program { static void Main(string[] args) { int[] numbers = { 4, 5, 6, 1, 2, 3, -2, -1, 0 }; int i = 0; int j = 0; while (i &lt; numbers.Length) { System.Console.WriteLine(numbers[i]); i++; } Console.WriteLine("...Start Subtracting"); Console.WriteLine("...After the Subtraction"); while (j &lt; numbers.Length) { numbers[j] = numbers[j] - 1; Console.WriteLine(numbers[j]); j++; } Console.Write("Hit any key to close"); Console.ReadKey(true); } } } This executes perfectly and does exactly what I want it to.
What I'd probably do is use a regex to parse out all the individual numerics and then sort then by each number it pulls out in order. Depending on how accurate you need it to be you could also just sort it by the first number parsed as an int and then by the string. Or just do the first 2 numbers and then the entire string etc.
NUnit's data-driven testing is really the big thing I like about it over MSTest.
The only bad part is trying to put "C#" in search engines. A lot of sites still just filter the sharp. Google is good about it now, but it used to be really hard. A lot of Microsoft product names are super generic from a search-engine keyword aspect. .NET anyone? The entire Office suite.
TL;DR 1. blah 2. blah 3. blah 4. heroku create aspnetcoreheroku --buildpack [https://github.com/jincod/dotnetcore-buildpack](https://github.com/jincod/dotnetcore-buildpack) 5. blah 6. blah 7. blah &amp;#x200B;
Came here to mention this. I was at the C# launch event at the PDC, this story was told on day 1. It's a natural progression. If I recall correctly the language meaning progression goes something like. BCPL -&gt; B -&gt; C -&gt; C++ -&gt; C#
Tough asks there for a junior I think 
MSTest2 supports it as well.
There are plenty of jokes about c# being similar to C++ (it is), but this comment explains a lot https://www.reddit.com/r/csharp/comments/b9n77e/made_a_cplussharp_emote_based_on_joke_from_here/ek61b27/
I completely agree, I now always write my test as I mentioned in the post. Makes everything easier to maintain and extend
C++ has the same problem. You used to have to search "C Sharp" and "cpp" on google until they started catching it. 
&gt; Google is good about it now, but it used to be really hard. But then you try to Google stuff like "C libraries" for your C project and the only results are about C#...
Looks really cool. What tool did you use for creating it?
Warning: I wouldn't call myself a good programmer. IMO, the File class should just have information on the File. The validation should be done by a class that soley deals with validating the file. Now, perhaps you could pass in another class that had the validation rules or logic to the validator. Any of these rules or logic classes would implement an interface and the validator would accept parameters matching that interface. This way you would be able to change those validation rules without having to change the validator or the File classes in the future. Class File{} Class ValdiationRulesFailEverything implements IValidationRules Class Validator takes an object of IValidationRules in its constructor. Validator.Validate(File file) then runs the ruleset against the file and does whatever the IValidationRules that you passed in are supposed to do. If I'm off base on this, someone please set me straight. 
I've been building web apps with asp.net for many years now. What I have found is building pages with MVC and razor works great but you are working with two different platforms in the same code. You write plain HTML mixed with razor helpers with c# code mixed in and JavaScript to ensure the user experience looks and feels nice but also works nice with MVC controllers and views. Any ajax calls to controllers returned partial views, that maybe had to be handled specially for the client to continue working. It turned into a maintenance nightmare. I switched to using a spa, or multiple spa pages, that work independently of the back end. The back end works independently of the front end. No longer were the different languages and concepts mixed together. ASP.net became simpler by only needing to implement API controllers. You can create a restful API, or a custom API if it is only consumed by your one app (which will never hold true in the future). The frontend is able to provide a solid user experience, fetch and push data using axios, and is all written with one technology type. Everything feels cleaner, is easier to test, and easier to maintain. 
I think the thing you want to google for is "natural sort". Id be tempted to wrap up the items in an object, and implement IComparable to determine the order, then use the built in Sort method Obviously thats easier said than done, but that reduces the problem to comparing 2 entries and returning a negative number, 0, or a positive number depending on their desired relative position in the sort. hth
Well, first one. That projects have unit test projects related?. Before refactor anything you must secure you are not breaking anything. Refactor legacies it's like eat elephant, you need to go one bite at time.
The solution is to attach it to the w3wp process, not the iexplorer or any browser process.
The solution is to attach it to the w3wp process, not the iexplorer or any browser process.
That's what I think, but I don't have that kind of experience behind that can support my hunch. Thanks a lot for your comment!
WebForms is actually pretty simple, if you understand how web programming works. A Page (an .aspx file and the class that backs it) represents a web page. It contains a list of Controls, representing all of the HTML tags on that page. (Controls each have a list of their own child Controls, so that's a nested structure. We'll get into that more later.) The Page sits atop a very large underlying structure, but you don't need to know that stuff yet. Just know that the underlying structure raises events as the page is being built. When the page is "loading", the Page_Load event is raised. This is where knowing about nested Controls is important. When Page_Load runs, it also runs the Load event for each of the Page's Controls. Those Controls, in turn, run the Load event for each of their child Controls. This goes all the way down, until you reach Controls that don't have any children. It's depth-first traversal of a tree with custom actions being run at each node. Thus the "page lifecycle" is important, because it tells you the order that each event will be run. Controls can be two different kinds: "server controls" or "user controls". The difference is minor, really. A "server" control is a control that is wrapped up in a DLL and can't be modified without that DLL's source code. A "user" control is a control whose source code is included in the project with the rest of the site's code. Server controls have more strict rules for what they can do, but they can be dynamically instantiated without a lot of fuss. User controls are more flexible, but are harder to use dynamically. The simple way to think of them is: server controls are pre-made controls with limited customization, while user controls are templates for repeating patterns in the UI of your site. User controls are defined in .ascx files. They get placed into pages or other controls in their Controls list. Use them as templates for repeating objects (list item layouts or a header or a small user-input form). They can have their own code associated to them, and they can define events that pages can listen for. The "aspx" and "ascx" pages are XHTML. You can write plain-old HTML in them and they'll work as you'd expect any HTML file to work. You can also add the specialized XML tags for ASP.Net, like &lt;asp:Button&gt;. That's an XML namespace ("asp:") and a class name ("Button"). If you want to use your user controls this way, you can use the @Register directive at the top of your page or control (just below the @Page or @Control directive) to associate your user control with an XML-namespaced name. Then you can use (for example) &lt;uc:MyUserControl&gt; in your aspx and ascx code. The "code-behind" file is the .aspx.cs or .ascx.cs file. This contains the event-handler and other helper code for the page or control to do its work. The main thing to grok here is that the controls you define as "runat='server'" in the aspx/ascx file are instance variables in the code-behind class. So, for example, if you define `&lt;asp:Button ID="foo" runat="server" /&gt;`, your code-behind class now has a variable declared as `private System.Web.UI.WebControls.Button foo;` that gets initialized during Page_Init and becomes available for you to use in any events that occur thereafter. That's pretty much the basics of it. But there's one thing you have to keep in mind. You're used to JS, where things happen actively as the user interacts with the page. ASP.Net WebForms *is not that*. It's server-side. The request is made to the server, the server runs *all* of the WebForms code, and then the server sends back the response. The world you're used to as a JS developer *can then begin to exist* because the server embedded some HTML/CSS/JS code in that response. And if you want to dig deeper into handlers or services, you'll be in much better shape to understand them once you grasp the basics of pages and user controls. But a quick run-down: Handlers are raw request handlers. The Page class you'll become familiar with... it's just a handler. You can write handlers in .ashx files or just a .cs class file implementing IHttpHandler (you can assign it an .axd endpoint in the web.config). Services are pages that serve data in a fixed structure and without a UI. The .asmx service files are automatically SOAP+XML. There are newer ways of making services in .Net, but these old-style ones are dirt simple to set up and deploy, and they work well enough. If you don't know what SOAP is, then you probably don't need these. Just take it slow, build a few pages and user controls in a test project, and experiment on your own with a local instance of IIS. You'll get the hang of it pretty quickly. And then file all of it away into the "don't use this if you're building a new site from scratch" part of your brain.
what kind of application is it even? A website? A webapi?
I've used Refit in a Xamarin application before. As far as I know without directly looking up it should work. If I get back to my PC I can give proper links. It is inspired by Retrofit.
Converting an expression (1-3, 1/5) to a number seems like a hard problem. Are you sure this is what you want? If it is, there are a few ways to go about it. https://stackoverflow.com/questions/6052640/in-c-sharp-is-there-an-eval-function has some suggestions. Given an Eval function that takes a string as input and returns a double (created using one of the methods described in the stack overflow discussion), you might do something like this (untested) var sorted = (from value in values order by Eval(value) select value).ToList(); This sorts by the decimal value and produces the original string value.
I don't see AttachDbFileName property on your connection string. Your connection string is not properly formed.
While this is accurate, most peoples dependency graphs are in the single digits, or double digits at worst. Those perf benchmarks cover millions of instances - and are not remotely like the usage scenarios of containers, which are normally used to bootstrap up code per-request / at runtime. Obviously, important for super super high perf scenarios, but the vast majority of web stuff will hit bigger bottlenecks around IO, networking and web server overhead before the container serving a handful of object instances is going to be the expensive bit.
Google around "Role based interfaces" - that's the jumping off point for this kind of design.
*Video Transcription:* --- c ++ c -H- c # c *#* [*End of Video.*] --- ^^I'm&amp;#32;a&amp;#32;human&amp;#32;volunteer&amp;#32;content&amp;#32;transcriber&amp;#32;for&amp;#32;Reddit&amp;#32;and&amp;#32;you&amp;#32;could&amp;#32;be&amp;#32;too!&amp;#32;[If&amp;#32;you'd&amp;#32;like&amp;#32;more&amp;#32;information&amp;#32;on&amp;#32;what&amp;#32;we&amp;#32;do&amp;#32;and&amp;#32;why&amp;#32;we&amp;#32;do&amp;#32;it,&amp;#32;click&amp;#32;here!](https://www.reddit.com/r/TranscribersOfReddit/wiki/index)
I'll have to check that out, then.
Pro tip, if you don't know the answer don't try to bullshit your way through, just be honest. Sometimes they will ask harder and harder questions just to see your limit. 
In PTBr we can say "C octothorpe"
Definitely - but anyone building a DI/IoC library needs to think about hot-path/high-performance, as this is one of the things that people will look at when deciding on it. Someone using the library will always have a scenario where performance is critical. I cannot recall the exact numbers anymore, but I believe I saw more or less tenfold performance increase when I switched to the expression trees from the original author's Activator use, and this was on a performance-critical path. I did other optimizations on the same time, but that was the worst offender.
A constructor is a special method that is automatically executed when you instantiate a new object of the class. So when you say new Book, you're invoking the constructor and you supply the necessary parameters between the parentheses to construct the object.
Unfortunately it is what I want. Provide the User with the best experience and all that jazz. Thanks! I will give this a try
Parameterized constructors may be a quick path to create a new object. In this case author want to show you both mechanisms. Parameterized constructor instantiation, and prepare and object after instantiation.
Thank you! But are they always needed? Let's say in this example, as I don't even output the "Harry Potter" and "J. K. Rowling". 
Please post the question and result solution, otherwise please delete the post. &amp;#x200B; [https://imgur.com/gallery/f1d0VwA](https://imgur.com/gallery/f1d0VwA) 
Thank you! So how could I output the "Harry Potter" and "J. K. Rowling" part if I omitted the setters / getters?
https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/preprocessor-directives/preprocessor-if
Constructors are used for creating new objects from a class. So in the above, they'd be used for creating a new book object. You'd call them from your main program like so: Book book1 = new Book("Moby Dick", "Herman Melville"); Book book2 = new Book("Transformations", "Anne Sexton"); And what that does, it calls the constructor from the book class with the strings you pass in as parameters. So with above, you would have two new books, one where `book1.Title` would be `"Moby Dick"`, `book2.Title` would be `"Transformations"` , etc... To help illustrate, imagine we changed the constructor to the following: public Book(string title, string author, int yearPublished) { this.title = title; this.author = author; this.yearPublished = yearPublished } Then we would create new books by including the year published in the constructor: Book book3 = new Book("V.", "Thomas Pynchon", 1963); Book book4 = new Book("The Idiot", "Fyodor Dostoevsky", 1868); And so here, `book3.yearPublished` would be `1963`, and `book4.yearPublished` would be `1868`. Constructors are used when you're creating a new instantiation of a class. I hope that helps. 
&gt;When the C# compiler encounters an #if directive, followed eventually by an #endif directive, it compiles the code between the directives only if the specified symbol is defined. Emphasis on **compiles**
Sorry, this might be convoluted, but hopefully this helps illustrate how the constructors were working in the example you posted. 
Well, you are probably correct that it can use InMemory with a project that has existing migrations, but it doesn't run them. Since ef core applies seeding as a migration, I don't get seeded data that way. Yeah, I can just manually load that data in tests but this is an example how InMemory behaves differently from a real SQL database and shouldn't be taken as something that catches real database issues. So the argument is that yes, InMemory db isn't perfect for unit testing but you shouldn't unit test anyway for all the reasons? I have a project that has an InMemory database (ravendb) for most of the tests that catches 90% of bugs and I have a project that has unit tests with mocks AND an InMemory db for integration tests that catches 99% of the bugs. Subjective of course. I am arguing that you can't do unit tests well with InMemory db but looks like the best argument against it is that there is not much value in unit testing anyway.
Ship a configuration file with your server and set it to local = false. Then check in the code whether the config file contains local = true, and if so, bind to local host. 
Yes, an object needs a constructor. But you can make a constructor that literally does nothing. public Book() { }
IMO moving to .NET Core (rather than Framework) would be wise. Framework isn't going anywhere support-wise... but more and more things are .NET Core-only - including some C# language features. In six months or so, when .NET Core 3.0 brings Winforms/WPF/UWP to the table, there will be little to no reason to base new projects on the "full" Framework - it will be the next VB6. Move non-UI code to Core "now", UI code "later".
Yeah, an object needs a constructor. But you can define a constructor that literally does nothing: public Book() { } ...but that'll leave your properties uninitialized I guess.
Constructors are useful to describe intent of what your class instance needs to work. List&lt;T&gt; can be created like: `new List&lt;int&gt;();` and it will automatically resize itself as needed - but if you already know the amount you're likely to put into the list you can get a little extra performance by using its constructor with a number for size: `new List&lt;int&gt;(100);` to skip unnecessary internal resizes. &amp;#x200B; System.IO.FileInfo needs a filename, because it doesn't make sense to create a file object that doesn't have a name. Similarly with your book example - for basic data handling, no you don't need constructors, but would it make sense to have a book without an author? That's a question you have to answer yourself depending on what your app is supposed to do - a constructor would help you avoid mistakenly create book objects that have empty fields.
There are some unit tests, but I don't mess with them. I am not trying to refactor, I'm just trying to gain a better understanding. I work on a group that mainly handles bug fixes.
It's a website. It handles GIS data and logistics (routing products to destinations).
I’m building a microservice high scale family media (photos and videos) where it will import from a import directory, check for duplicates, parse the EXIF data from the photos and sort them into their taken date(note file modify date) it will then store them away into my digital memory box(backed up locally, to NAS and to Dropbox. Eventually I want to push the files through azure cognitive services so I can tag who is in the photo and a little description of what the photo is (girl sitting on beach, your daughter) Want to port it over to the raspberry pi, running in docker and opensource it to be a black box for sorting your family photos.. Want to see how much I can scale it up and how many photos I can process per second... enjoying the project! :) 
Unit test is the best way to know what does or should does the program. The process to build unit tests force you to isolate components and move responsibilities. Unit test is a living documentation.
&gt; Is there anyway to keep trailing 0s in a float/decimal? &amp;#x200B; 1.5 is the same as 1.5000, so the decimal places are not retained by the type. For your application, do what [u/ripnetuk](https://www.reddit.com/user/ripnetuk/) said and create an class or struct that holds the number and the original number of decimal places before it was parsed. You can then use $"{...}" which can format numbers to n decimal places. From memory they're called "interpolated strings" if you want to google it :). It's funny how you forget little things like that :) &amp;#x200B;
&gt; ​Why having an interface for CustomerService class when we are NOT supposed to have multiple classes which inherit / implement ICustomerService interface? 1. You have a crap ton of logic in your controller that shouldn't be there. Stuff that really needs to be unit tested (as opposed to the normally more appropriate integration test), so you need to be able to mock ICustomerService. 2. You are using a crappy DI framework that requires interfaces. 3. You are a cargo-cult programmer that makes interfaces for everything with no understanding of why you are doing it. Basically it comes down to a fun 
tangentially, I saw a great test recently. The programmer was trying to check if something parsed matched the expected result. Clearly the end result was changing a bit and they got tired, so it looked sort of like this: ... var expectedResult = x.CalculateResult("SomeString"); var actualResult = x.CalculateResult("SomeString"); Assert.AreEqual(expectedResult, actualResult); Fortunately it wasn't at work or there would have been much mirth. I know its easy enough to mess up like that, but I found it hilarious :) &amp;#x200B;
&gt;, really. A "server" control is a control that is wrapped up in a DLL and can't b Thanks. I knew a fair amount of that, so that makes me feel better. The instance variables in the code behind is new to me. I prefer to learn from dead tree books, so I can make marginalia, but the resources I have at the moment are all digital. I've started printing a few pages out of difficult sections so I can spread them out and make my notes on them to reinforce the synapse connections. &amp;#x200B;
Nice summary :) To OP XHTML is basically HTML that is valid XML, nothing more exciting than that. It's in the summary above :)
For my apps I always use Autofac. .net core DI framework is just for simplicity here. Is it really crappy? (Microsoft.Extensions.DependencyInjection)
Honestly, I hate DI frameworks. DI is fine, but if you need a framework to do it then I think your design is needlessly complicated. The exception is ASP.NET. Since I don't control when a Controller class is created, I have to use a DI Framework. Thankfully the one that is built into ASP.NET Core just works, so I don't really think about it. 
If the variables are private as in this example, then you would still need the getter to retrieve the values. You could get by without the setter, but then the only time you could set the value of a given book would be when you construct it - i.e. `myBook = new Book("Harry Potter and the Something Something", "J.K. Rowling")`. You would then use `myBook.Title.get()` to retrieve the value of `myBook.title` - note the difference in capitalization, because the lowercase version is private, and can't be accessed directly.
&gt; The instance variables in the code behind is new to me. You wouldn't know it unless you looked at the .designer.aspx.cs or .designer.ascx.cs file. These, along with the corresponding .aspx.cs or .ascx.cs file, make use of `partial` classes to generate code in one file, while allowing you to make changes to the other file. So things aren't always declared in the class in the same file you're working in, but they *are* in the class.
Yeah, it does mean that you have to close single tags like &lt;image&gt;, &lt;input&gt;, &lt;br&gt;, or &lt;hr&gt; with a closing slash, like this: &lt;image /&gt; &lt;input /&gt;, &lt;br /&gt;, &lt;hr /&gt;. With that one change, any HTML will work in XHTML.
It's really great when you decide to test an existing class which has become the dumping ground for a single method from a million services. The method uses half the dependencies. Regardless of how many services you replace with null, the single method always give the same result.
Perfect 👍
I know, work with neglected legacy code is hard. Nobody wants to pay technical debt, the very few intents to get a better code will be forgotten rapidly. The entire team must be on the same channel, quality first then everything else. Easy to say, hard to apply. 
Me too! Awesome work and thanks OP!
You can have multiple classes implementing the same interface. Think of IEnumerable as an example. &amp;#x200B; You're correct that using DI to create a concrete instance rather than map an interface to a concrete type looks the same. The only difference is VersionA of a service and VersionB of a service can both interface IService and you can swap them out using a config change because all consumers expect an IService rather than a Service\[A|B\]. It's basically a feature switch. It's a 2 minute job to switch from injecting a concrete VersionA to injecting an IService. You just sort of get a feeling for it. &amp;#x200B; It helps in testing. You mock the interface set up some behaviours and pass the mocked instance into what ever you're testing. It looks simple at first, but writing tests is as hard if not harder than writing the code. I prefer to test concrete implementations. if you think about it, 95% of your code probably doesn't need to access a database directly or send an email. Where you do need to access a database or send an email, either use messaging/events to decouple the code or use an interface so you can test it without emailing the boss. &amp;#x200B; Most common mistake I see is having a class which provides some static data and it ends up being injected into every class in the known universe. In many cases using a static variable available across the entire application saves a lot of pointless effort. &amp;#x200B; When to use interfaces or concrete implementations is a bit contentious. One group of people say "IInterface IAll IThe IThings", others don't. I used to interface more stuff than I needed to, I use fewer now preferring to use concrete implementations, events and only mocking stuff at the periphery. 
More information would be very helpful, like what framework are you using; WPF, Forms, etc? How have you implemented it so far? What is causing the problem more specifically? As programs consist of many different components and factors that are interacting with each other it can be difficult to deduce what's causing the problem with only limited information. Lastly, you don't *have* to use that approach. You can try to think of, and use, others as well.
Beautifully said :)
Thank you sir, this makes sense now :-)
Thank you very much :-)
Thank you very much :-)
Yap... I share the same view. Curious to see opposite views
I'm not sure if this is right but I tried without constructor and only let properties. This would result in printing the "... Half-Blood" and I would also have to delete everything in Book book = new ...
Do you mean how it shortens the setters and getters into one (two) lines? 
He's using it for two things: 1. Storing the user's typed text until it's ready to send 2. Allowing the user to read their message as they type (e.g. a regular input UI field). from my understanding, what the user types will not appear anywhere inside the console until after they send the message (and Console.Title is cleared)
Oh right! Omg that’s such a terrible UI. 
I'd love to know what that line is.
No.
Let me take a guess. The structure of the app has more to do with grouping classes together based on what type of object they are instead of grouping classes together based on their relationship to each other? Grouping based on type is a very common structure, and is a logical structure but is ultimately not very good for people new to the project. It results in related classes being stored far apart, often in different solutions. This is because they are taking a more horizontal layer approach to organization. The idea being the apps logic is based on layers. At the top you have the UI layer, at the bottom you have the database layer, and in between you have business layers. So it is logical to organize the app in the same way. The problem though is this kind of organization makes sure related classes are separated as far apart as possible. This makes it difficult for a newbie to really understand what is going on. Organizing the app in a more vertical approach where related classes are grouped together would make understanding what is going on easier. So, what I am suggesting is you pick one page from your app, and figure out all of the classes that page depends on. Then do the same for those classes. Keep doing that until you have a nice vertical slice of the app that you can separate out from the rest either literally or mentally. Then study how that vertical slice works. Also, in the future if you are ever in a place where you get to help decide how an app is organized, please suggest a vertical organization strategy instead of a horizontal strategy. It will make managing the app a lot easier. 
And this is the moment you discovered the idea behind appsettings.json
It was described somewhere else but to make it short: interface allows to replace the exact implementation. In 99% of use cases you replace real implementations by mocks in unit tests. If you don’t write unit tests there are only a tiny amount of use cases and hence you can skip the interfaces (KISS/YAGNI).
First of all, `Track st` means that the parameter name is st and its type is Track, like with usual static typing (int x, bool a, etc) In `Track&lt;SERIES_INDEX_TYPE&gt;` you have the class, Track, and the type parameter SERIES\_INDEX\_TYPE with emphasis on parameter. It's a generic so it's meant for multiple classes, but it has to know what kind - type - of class it's using. That is done through supplying the type parameter (SERIES\_INDEX\_TYPE) with a type, just as you have done with the inheritance in `SomeTrack` and `AnotherTrack`. For the same reason you have to pass a type into the type parameter on all use occasions. But how can that be done for `Initialize`? Type parameters can also be applied on methods, like this: public void SomeMethod&lt;T&gt;(Arg arg) { // . . . } The type can be used in several ways, one of which is to provide a generic type argument for a type parameter like so: // Here SomeGenericClass&lt;T&gt; will use the type T as type argument public void SomeMethod&lt;T&gt;(SomeGenericClass&lt;T&gt; genericClass) { // . . . } C# Also provides means to "filter" what types can be used, which are called type constraints and are used like following: // The type T now have to derive from SomeClass to be a valid type argument public void SomeMethod&lt;T&gt;(Arg arg) where T: SomeClass { // . . . } It also allows for multiple type parameters like this (separating with a comma): public void SomeMethod&lt;T1, T2&gt;() { // . . . } An *example* (not necessarily correct or what you need) of your method is: public void Initialize&lt;T&gt;(Track&lt;T&gt; st, SomeData someData) { // Do something with the parameter 'st' // ... } Note that you can only use as much as the method knows of, so if you make `st` into a pure generic parameter (`T st`) with constraints on T to Track you can only treat st as Track. Hope this helps, if you have any more questions feel free to ask, and good luck!
I don't think CORE 3 is that different that learning CORE 2 wouldn't be worth it. On top of that most of the time Microsoft's first iteration isn't all that great and it's best to wait for 3.1 before using it. Thats not to say 3.0 isn't a great place to learn. But give Microsoft's track record I wouldn't release anything in it.
Don’t wait, just start learning. It will be very long proces that never ends...
Upvote for interest. 
You could use a for loop for both. The behavior will be identical to what you have. Since (I must assume...) this is an intro class I don't think your professor will care as long as the program works (but email them, it's their job to help you). You could also reuse i by setting it to 0 somewhere after the first loop, but before entering the second loop.
&gt; Tough asks there for a junior I think &amp;#x200B; Seconded. &amp;#x200B; Unless the company is a leading tech firm (Google, Microsoft, etc.) and the candidate is coming right out of a Computer Science program...some of these items are a bit more intermediate. &amp;#x200B; Ex: * Application Design / Architecture * Tuples (ya they are basic types, but not typically used in basic implementations) * LINQ * Threading / Parallel Tasks
This is incredible. 
Okay, that makes sense. Thanks for the insight!
Why not just place the DLL in the GAC and have a network policy to update it on the computers any time a new one is place on the network?
Core 3 is more about WPF support. Everything you need for a typical website is in Core 2.
I have worked around the problem by creating an ITrackable interface which Track implements. Now my Initialize method looks like this. public void Initialize(ITrackable st, SomeData someData) { ... } Thanks for helping!
What?! Impossible. We all know Solid. ;) [https://media.tenor.com/images/85e225006a2019f92dcb78b8f26c6cf1/tenor.gif](https://media.tenor.com/images/85e225006a2019f92dcb78b8f26c6cf1/tenor.gif) &amp;#x200B; [https://media.giphy.com/media/Gco0ZhHeboXja/giphy.gif](https://media.giphy.com/media/Gco0ZhHeboXja/giphy.gif)
Good to hear you solved it, happy coding!
This is really neat. Does it actually make money or is it more of a proof of concept thing? 
I’ve done something very similar. I made an interface called IFluentValidatable. It contained the basics: void Validate(); IValidationResult Errors {get:} IValidationResult(IValidator validator); And made an abstract class that my other domain classes inherited from. I made custom validator classes for each to house the business validation rules. This seemed to be the easiest and most up front way to get a win for the project. I highly recommend fluentvalidation. Definitely interested in hearing feedback if anyone else has a better pattern here. Cheers. 
I had looked at the GAC a little bit but maybe I did something wrong. When I updated the DLL and then the GAC, the ID or something changed and the other applications couldn't resolve the reference anymore. I'll give that another go and see if it works out better the second time around.
Half agree - definitely an interesting discussion. For a hot path, there's a good chance I'd just build a static factory to negate things like this. Depends on the goals of the library. Surprised nobody has patched up activator all these years - maybe one to crack the netcore source open for and profile.
I'm not a fan of this approach, but there are things you can do. &amp;#x200B; Try MEF which does this exact thing, but only works in .NET Classic not .NET Core if that's important. It does have good error handling. &amp;#x200B; Use Fuslog (google it), a stand alone app from Microsoft.. It has to run as admin, but will show you why an assembly fails to load. Set the logging level to failure otherwise you'll drown. It's amazing actually, it's solved a bucket load of issues for me. &amp;#x200B;
Reporting again: could constructors be compared to something like a blueprint? If yes, then it makes sense but how to I output the book information to the console? Thanks!
If it actually consistently made money, i doubt it would be posted here
Also, even if you don't create a constructor yourself, all classes still have one implicitly. `new List&lt;int&gt;();` runs the `public List&lt;int&gt;()` constructor, instead of the `new List&lt;int&gt;(int capacity)` constructor. You can use constructors without parameters to setup basic state for your instance when it's created. class Book { public string Title { get; set; } public string Author { get; set; } public Book() { Title = "Undefined"; Author = "Undefined"; } } But relatively recent changes allow you to do this class Book { public string Title { get; set; } = "Undefined"; public string Author { get; set; } = "Undefined"; } These two examples are the same thing. The compiler will automatically move the "Undefined" assignments into the implicit parameterless constructor like in the first example.
Lol fair enough. I will try to make it myself either way. 
While the algorithm itself might be correct. This code is littered with things I would consider big no-no’s DoSomethingAsync().Result. Async call in ForEach. 
`BoolConverter.ConvertToBool(1L);` throws... typically truthy/falsy values are defined as ``` public static bool IsTruthy&lt;T&gt;(this T self) { if(ReferenceEquals(self, null)) return false; return self.Equals(default(T)); } ``` Or similiar. You could even overload this extension method with some fancy string parsing. ```
If anything works, go with what you like best or is easiest to implement. Otherwise it would be nice to know the requirements of how the saved file(s) should look like (format, size, etc, anything really)
*Encrypted* json? What do you want to achieve?
Hello! I want the file to be as fast to read as possible and to be unavailable from oudside my application. That's the requirement of my assignment
This! If you have nothing to set or do during the construction phase, you can just leave off the constructor entirely. You can also require input parameters during instantiation, so something like: public Book (string title) { this.Title = title; } &amp;#x200B; And call it with: var a = new Book("My Book Title"); Of course that leaves the Author property null still, and you could add that as a ctor parameter as well. If you DO start specifying parameterized constructors, you are declaring these as the ONLY way to create the object. So with the above constructor, you would no longer be able to do: var a = new Book(); And usually this is a very good thing, because how often do you want to create a book with no title? 
What is this article? 
If you follow the SOLID principles, the "D" stands for: &gt;Dependency Inversion Principle (note "Inversion" and not "Injection") : You should depend upon abstractions and not implementations And the "I" applies as well to your question: &gt;Interface Segregation Principle : Many specific interfaces are better than a single general purpose interface So, in some cases, you could and should have a class implementing more than one interface. &amp;#x200B; And lastly, as some have mentioned already, Unit Testing is a lot easier with interfaces via mocking.
It doesn't show properly once clicked on either. Regardless, it's a bad idea to use a transparent background when it can affect the visibility of whatever's in the foreground. Meaning having it be transparent is fine had you given the shapes a dark outline.
Core 3 is still ~6 months out, FWIW. Start with 2.2 and you'll be ready for 3 !
Wow really? Any source on that? 
Agreed! /u/merdone just start. Every version builds on the previous version. It's exceedingly rare that a succeeding version just throws away a whole set of knowledge that you previously learned. I started on ASP.NET MVC 1.0 and then 2.0 came out a month later. It wasn't any big deal to upgrade my project from 1.0 to 2.0. Sure there were some changes, but they weren't *that* radical. These days, things are rolling along pretty smoothly. The really big changes between .NET frameworks were like 10+ years ago.
Lucky if it runs without deadlocking
What does that mean? 
Why is that bad? 
https://www.reddit.com/r/csharp/comments/b4wsi7/running_c_in_the_browser_with_blazor/ejbaucx/
Probably when two trades occur simultaneously which happens very often because two bots running the same algorithm will make the same attempt to purchase stock/bitcoin/whatever. Then it wouldn't matter how many of these auto trades you run, only 1 will succeed each time where simultaneous successions are more ideal.
&gt; .Result https://stackoverflow.com/a/32239717/1777780 &gt; Async in foreach https://stackoverflow.com/questions/18667633/how-can-i-use-async-with-foreach Also, C# aims to help us by giving us async stream support (`await foreach`): https://csharp.christiannagel.com/2019/03/20/asyncstreams/
Bad execution of a questionable idea. 
blazor Components.
&gt; unavailable from outside my application Is that really the wording? That's really difficult, and practically speaking, maybe not even possible. It kind of depends whether you believe DRM ever technically "works". Because what you'd be required to implement is actually just DRM. 
AFAIK there isn't much new for "standard" ASP in Core 3.0. The big new thing is Razor Components which may or may not be something you want to use at all. Either way you can start learning the other parts and pickup Components later. If you don't expect to use it in production for another half a year, you can grab the 3.0 preview right now.
.Result can cause deadlocks It allows you call async code from a regular, non-async method. If you do this in a winform application, the synchronization context can get deadlocked, and be application will freeze
What does the Dll do? Could you put it behind a service?
Aside from the glaring async issues, you don't have any thresholds on your difference so even a marginal one triggers an adjustment of position which is probably not what you want. e.g. Price is $0.01 above average =&gt; Sell our entire position. Also, if the current price is equal to the Average you are stepping into the block to allocate more of your portfolio, but since the `diff` is `0`your `amountToAdd` will be `-` `positionValue`, `amountToAdd == currentPrice` therefore `qtyToSell == 1`, which is less than any existing `positionQuantity`. End result, you sell `1` every 60 seconds if the price is exactly equal to the average. Probably not what you want. Don't trade with trivial algorithms. 
&gt; ~~blazor~~ Components Razor Components https://www.youtube.com/watch?v=WmDXgO0f-MQ&amp;t=49m
-&gt;C##
In this time and age, you'll be looking at using every async for this case. Without looking at your code is difficult to give many pointers so consider uploading it to GitHub and sharing the link. I'm guessing you'll have a pool of connections and then when you get a message you'll dispatch it back to the pool, also asynchronously. That way you wouldn't be bounding the connections to the processor. Have fun!
Author of the article here. In my short bit of testing, it was slightly profitable with the default parameters. Keep in mind that buying and holding something like SPY is also generally profitable in the long run, so you'd probably want to compare it with that strategy over a period of time before you put too much stake in it. Just wanted to provide a good base to work with!
Because of the way the market works, that's not really a concern - at least not at the level of algorithms that operate through a retail brokerage.
Is this some programming exercise or are we talking about real student data which should not be readable? If I hear student tables and encryptions I automatically read 3rd party db tools. Store the data in an encrypted db and ask the user for credentials during runtime. Never store the credentials as plain string. Be aware that managed applications always are slightly unsafe in such contexts.
Just manually with frames in Photoshop, being a 3D modeler/programmer I'm not very comfortable with any proper motion graphics stuff to do this in a more procedural way haha
By properly I meant the timing. It seems to not wait at the C# portion when viewed on the post but it will when viewed directly. I made it transparent because it works really nicely in Discord, especially the dark theme. If someone wants to adjust it for their own purposes though, since it's transparent it would take but a minute to overlay the GIF on a background color of choice and tint the text frames ;)
Cool, thanks! 
You are correct, you should avoid looping through threads if possible And like /u/pablius5k said; it's a bit difficult to say without more knowledge on the implementation. If you're using the `Thread` class with some kind of server object running you can use async events/delegates to notify the servers about a new message to relay. Alternatively you can create a resources like a queue that removes the item once all servers have checked/sent the message. However, I would personally advise on using `Task`s instead. Use the server only to handle taking in a request and then spawn an unbound task (a task that isn't awaited) that services said request. Hope this helps, if I can get more info on the implementation I'll do my best to provide better/more help!
Sweet. Thanks for the info / intro!
Autofac is fine (it's our preference over some others). The new DI in .NET Core is okay as well. We're still determining whether to use Autofac in .NET Core or not. It's also not 100% binary choice. You can start with .NET Core DI, then move up to Autofac. For web apps (MVC) / web APIs and GUIs, I'd say you always want to use some sort of DI/IoC pattern. It just simplifies things as the project gets more complex. Which usually then means you'll want to use a DI framework like Autofac.
TypeScript helps, a lot, to avoid shooting yourself in the foot. But the underlying technology is still JavaScript / ES6 / etc. which is dynamic and has a lot of quirks. I guess if all you had was JavaScript experience / developers - with no developers fluent in C# / Java / Ruby / Go, then server-side JS would be an okay option. (My personal opinion is that the JS ecosystem via NPM is just too much of a dumpster-fire to deal with on the server. Unless you avoid taking 100s of dependencies and write most of it yourself. Or audit all package changes.)
Which version of C# does it target? There are some really important changes in C# 4.0 and C# 5.0. And C# 6.0 introduced all sorts of programming nice things (syntactic sugar) to shorten up code. With a few more improvements in C# 7.0. Some of the code patterns you had to use in C#4 are no longer needed. Learning some version of C# is better than not learning C# at all. Just keep in mind that you'll want to read up on the new features in the later versions of C#.
.NET Core MVC with either RazorPages (not the same as older "Razor" cshtml files, but similar, somewhat). or .NET Core MVC with a SPA front-end like Vue.js / Angular / etc. Both approaches end up talking to back-end APIs for data management (which we write in C# ASP.NET WebAPI or .NET Core WebAPI). Odds are, you can probably move away from any sort of Windows GUI application (WPF, for instance) and gain device independence by using a web-app.
Indeed, sometimes the best place for complex calculation logic is in a static public method where all the inputs / outputs are passed in and returned. Assuming your logic is stateless (stateful logic gets a service class). I don't let "be perfect" get in the way of easily testing a hairy bit of code in isolation.
By properly I mean that it has a white background no matter what I do. [I use Dark Mode, by the way](https://i.imgur.com/ZbseCco.png).
its just c# , you could have started 20 years ago. go ahead.
IsolatedStorage maybe. using(var storage = IsolatedStorageFile.GetMachineStoreForAssembly()) { // create files here and store in whatever format you want }
[IsolatedStorage](https://docs.microsoft.com/en-us/dotnet/standard/io/isolated-storage) maybe. using(var storage = IsolatedStorageFile.GetUserStoreForAssembly()) { // create files here and store in whatever format you want } It's not a *security* measure, it's a anti-clobber measure. Other processes won't accidentally or purposefully overwrite your data, but it can still be found on the computer. Cool thing with this is that you won't have to worry about authorization and access exceptions.
It gets some hate sometimes but i absolutely love Entity framework. Only exception is when im working with huge datasets and doing a bunch of joins, at that point and only at that point will I write a stored procedure. There are a couple gotchas that arent too bad to learn and change tracking ive seen get messy in a few implementations but I still love it.
By virtue, any referenced DLL becomes part of your source code. Any time source code changes, a build and deployment should take place... Because your DLL change could (and at some point, inevitably, will) cause breaking changes in live applications. Having multiple applications relying on a shared DLL without worrying about building is just setting yourself and your organization up for failure. The proper way would be to encapsulate the functionality into a web api. #imho
You could also start with the asp.net core 3.0 preview. Been working fine for me
double sharp is actually a real thing: https://en.wikipedia.org/wiki/Sharp_(music)#Variants
2.0 really messed with some of the identity stuff. it was good, and after the migration i was happy for the change, but it can be the case that waiting a bit is worth it. but 3.0 wont be out for a long time yet. so just start now. 
2.0 was just such a big change over 1.x. i don't think the 2.x to 3.0 will be as much. most of the changes are new stuff, not messing with the project system, revamping tons of aspnet choices that turned out to be incorrect, etc. I'd say 2.2 is a fine starting point. 
From my previous jobs I've seen datareader assigning row data to new instances of the domain class through ado.net. I've also seen ado.net with automapper and repository and service pattern with dependency injection of both. Lastly I've seen dapper with dapper extensions using generic repository and unit of work pattern. These were all in the web app context. Just curious what else is out there. 
Good human
gottem. 
Blazor is still experimental and has no prospects of being included in the netcore3 release afaik.
Think you're missing NameSpace
What that? Also this is for a unity 3d game
Can you put that in a separate library where you can share that amongst different projects or is it required to be attached to the web project? And if you needed to target multiple database providers what would you do?
What about people who type out System.String (and every full namespace) every. single. time? Plus this. before any local members? Can we do more than a strict talking to please?
Should be the same for Unity but surround your public class with namespace NameSpaceName { Public class Movement.... } https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/namespace
C# classes need to exist in a namespace.
One of your most fool proof options is to make the entry point of your app a power shell script or batch file which goes and collects all the latest dependencies before the app executes. This may have more moving parts but those parts are super simple and easy for future developers / administrators to understand. I have also had success dynamically loading a dll at runtime. Essentially copying the dll at runtime from wherever it is to local and then using reflection to load the assembly. The nice thing about this approach is you can deliver the dll via http or even from a database.
I would be easier to split the images and just swap them tbh
You are really going to need to define "unavailable from outside my application." If you are in an introductory or similar-level course creating this application and you are going to aim for encryption, you'll find that it is not trivial to do so.
Yes, it's certainly possible to have your data access layer in a separate class library. Entity Framework can be configured per project. You can configure a MSSQL server in one project and a MySQL server in another one. And you can use an in-memory database for your unit tests.
cat in the wall?! now you’re speaking my language!
Did you sign the assembly? It has to use strong naming.
Imagine how much fun you could have by compromising one account with write access to the share and publishing your own "special" DLL in its place...
Sounds like you just need a private nuget server.
Maybe you try to write something. You should code if you write code. Ofc. it shows an error if you dont write anything that make sense. Also nobody here knows what your problem is. This title says nothing and the pic shows 2 brackets. Why did you write this brackets? What do you want to do? What is your problem? What did you do to solve your problem? Just try to use google and dont instantly ask reddit. 
I'd have to look it up, but I want to say that dataclasses don't need interfaces and don't need to be tested. A factory for dataclasses seems strange to me, unless it's for object pooling. One of the books I read warned about using DI frameworks. Both from a risk management and because many DI frameworks encourage what the book author considered bad habits. I thought this was interesting. If your object has any logic, you probably want an interface.
The ridiculously, horribly wrong way OP is using async.
No they don't. It's almost always a good idea to write classes inside a namespace, but it's not mandatory!
My new company is full dapper and I must say it would be a nightmare if we wanted to change just a tiny bit the DB. In our last project we also created generic repositories and services with DI everywhere. Finally we end up having to write SQL queries in our repository layers but I think it's because we didn't bring the unit of work pattern in our architecture. I hope my next company won't be like *you don't have choice, you use Dapper" because it's really hard to maintain IMHO. For most projects I think Entity Framework should be enough and once the project is up and running and mature enough, if we want higher performance, use a Dapper repository only for the GET calls to the API (that's apparently how StackExchange does)
Remove the square brackets. It will now compile.
Why is it hard to maintain? Are you using it to call stored procedures? I've always found that the mapper in dapper (hehe) was typically very good.
Pattern: Clean Architecture. Design your app so that business logic has NO dependencies, and your application logic only depends on the business logic. Inject everything else at runtime (or unit test time).
[removed]
No we don't call Stored Procedures but for retrieving data in more than one table we can't simply use out generic repository layer. So either we write a SQL query or we call different generic repositories for the different tables and then we link the data all together in C#... So now we have mixes of SQL queries and complicated C# business logic everywhere in our services. The code would be very hard to understand for a new comer in the project and on top of that we have almost no unit or integration tests. I could see that if we change a little bit the DB it would break everywhere and we won't even have compilation errors to tell us it's broken here and there. Maybe we should have wrote a *perfect* homemade Dapper framework before starting the project but our boss doesn't see it this way. All we wants is just *features features features*
That's a bummer, but I dont think any ORM is going to save you from things like that. If I choose to go with a repository pattern (which isn't terribly often), it's generally a repository for a concept rather than a table. I also highly recommend doing your joins in SQL as opposed to C#. At the bare minimum, you would reduce your complexity and be able to more accurately tune your db.
Linking /u/pablius5k to this comment for the sake of not copy/pasting the same info :) [Here is the bitbucket link to my repo](https://bitbucket.org/mwinzer/trying-so-hard-to-understand-sockets/src/master/) As you can see, I believe I am already using async, multithreading, and sockets. If I could get direction on how to make the current code send to all clients, then why it's bad to do it that way, it would really help to me understanding. Sorry for brief response, I have a 6 month old demanding more crackers :P I will have more time to respond tomorrow, and I thank you both, in advance, for your help.
nobody gets this. you're the best.
Yes I agree now with *one repository = one concept*, I think that's what unit of work is but I'm not sure. I have to dig and learn about this. We sometimes have joins in C# for a simple reason. We use Azure SQL DBs because it's cheaper than a regular SQL server. The only problem with that is we can't join tables from different DBs, that's a limitation of Azure DBs
Entity Framework Core is pretty good these days. Still not a fan of needing to mix attributes in my table definition with other properties in my context itself, though. Easy to end up with a massive dbcontext file. I also like redis.
Cross db joins are a perf and ha/dr nightmare. I feel for ya.
If you're satisfied with your conversion to a floating point for purposes of sorting, you could: 1. Create a class implementing a IComparer&lt;string&gt;, which will convert the arguments to floating point and compare. 2. Store the elements in a SortedDictionary using the above IComparer in the constructor. If you just want to enumerate the keys in order, you can use a SortedList or Enumerable.OrderBy using the same conversion to a floating point.
Saving your data in a binary format (lazy people most likely wont bother to look into a non text file) is more than likely sufficient for a school project unless this is a course/project specifically on security or encryption. If you really want to encrypt your data, you should think about your encryption model, where your keys will be stored (if both sides of the pair are stored with your app, it's kind of pointless). 
You're obviously referring to the fact that methods, properties etc need to be encapsulated in a type (class or struct). Types and delegate need not be members of a namespace although this is recommended. ``` class Foo { static void Main() { System.Console.WriteLine("Hello, World!"); } } ``` Is a valid complete C# console application. No need for namespace. 
I'm sorry I can't test this at the moment, but you might try changing the PictureBox.Padding to Padding(-100,0,0,0) to translate the image left 100 units.
Oh yeah I've heard about elastic queries. But no time to dig into that because we have to ship *features features and features* 😞
Like what were you going to write that starts with square brackets? Well besides annotations but they don’t exist inside bodies. Definitely need a hint at what you were trying to write that the software keeps messing up. Remember your shift key.
SerilizeFiled
A little knowledge is a dangerous thing. 
Don't miss out the second "p" from the C++ search or the FBI will kick your fucking door down
SerializeField? I assume this is an annotation, but it is only usable above member fields, aka variables and properties, not the inside of a function.
Custom version of EF My usual datasets are too complicated for regular EF, so I made my own
the whole pattern for authentication in 2.0 changed, completely rearchitected interfaces. I had to downgrade a SAML2 component from .NET 4.5 to Core 2.1 and 1.1. The 1.1 was painful. 1.1 is missing a ton of xml security components too.
Yeah dbContext file for my current project is huge but man, entity framework is just working so well I'm over looking it
A second vote for Redis. 
Is there any codebase you could link to that does? Would like to see it. 
me 2
yep, it works well!
95% of the stuff I have to code for, EF is fine. It's a simple CRUD statement. Even when I need "massive" data sets, it's like 10,000. The few times I have to work around that, you're right, writing raw sql is the way to go. But that is the exception, not the norm. 
100% agree. Often I need to wait for some external hardware setup time or busy wait for something without smashing a CPU. I do want that thread to just chill for a second. I'd rather explicitly delay the thread with sleep rather than implicitly delay the thread by waiting on an undone task. Using Task.Delay in this case does the exact same thing as Sleep, just less clearly. 
PetaPoco and PetaPoco for .Net Core. I use it all the time. I can write my own sql and still easily populate POCO's (Plain Ordinary CLR Objects). I create a folder called "DTO" and I create classes like "DTOPerson, DTOBook, DTOPermission" etc etc etc and I have a class library dedicated to persistence. I do this in basically every c# data access layer I build because peta poco works with just about every RDBMS. And for my DDL stuff I use the tools of said RDBMS's. So on SQL Server I use SSDT, and in MySQL I use the schema designer tool, etc. SSDT is nice because I can create DatPacs and deploy them with publish operations. If I want to have DDL operations support multiple RDBMS's I use Node Js and something like Sequelize just for ddl. Ideally what I really want is to design a DDL Schema In JSON where I can push JSON schemas out to a database and get it to update, add columns, remove columns etc. My main reason for using PetaPoco is because it's as fast as you can get without doing direct ADO calls yourself. It's close to the metal and still saves you a lot of work, it's crazy fast. If I recall correctly, [StackOverflow.com](https://StackOverflow.com) uses PetaPoco for it's RDBMS layer.
That can’t be in the start method or any method. Only up at the top with your variables. 
That’s exactly what I was going to say
Yeah I think I'll pass on that one, crazy man. 
Can Petapoco construct an object graph without manually defining all the mappings? I used it a while back and it was great for basic queries but couldn’t figure that part out. 
The other pro for stored procedures is that they can be edited live, i.e. no need to stop the application. Worked at a manufacturing company that did the vast majority of the business logic in stored procedures. We pretty much never needed to schedule production downtime. However, executing an ALTER PROCEDURE script could be very nerve-wracking.
Generic Repo pattern dude 
Repository pattern, di, dapper
What do you use instead of repository? 
Or... freq.ToString("G")
The new switch expression would be perfect for this. 
&gt; Switches are evil. You should build a class hierarchy and use polymorphism. -- something I hope never to hear again.
Yep! That is much more optimal. I was playing around with the Quick Actions to see what insanity I would get with certain patterns - not trying to write an optimal method.
not the same commenter, and don't have a specific codebase to link you, but [this](https://www.manning.com/books/dependency-injection-principles-practices-patterns) is an excellent DI book
I wouldn't mind that...
And let's not talk about the horrible use of `Thread.Sleep(60000)` which doesn't take into account the time it took to execute the previous code. And using thread sleeping with async is also bad in itself.
Decoupling! That implies the ability to easily test your code, and easily swap your implementations (first example that comes to mind is the persistence layer, you could change from sql server to Mongo DB for instance) 
Also 100 sharp Or “chash” as I call it at work when I want people to question my sanity
What's the G for? 
Look at this : Clean architecture with Mediatr [https://www.youtube.com/watch?time\_continue=178&amp;v=\_lwCVE\_XgqI](https://www.youtube.com/watch?time_continue=178&amp;v=_lwCVE_XgqI)
I'm not quite sure I understand you, but if you remove the constructor entirely, the compiler will generate a parameterless one, and your object will be as described above - the properties will be NULL. Is it logical to have a book with NULL author and NULL title? Probably not, it makes no sense to have such a book. The constructor is there to enforce the creation of sensible objects. A book without an author or a title makes no sense.
Any value... except of `null` apparently.
&gt; Try MEF which does this exact thing, but only works in .NET Classic not .NET Core if that's important. MEF supports .NET Standard 2.0.
When using a polyglot persistence, we have made the best experience with the unit of work pattern, which cleanly separates our Domain Object Model from any kind of persistence entities. Adding an additional layer of Interfaces to the DOM then supports the Interface segregation principle which makes it very easy to use in all of our Assemblies. Actually, we have a base DOM implementing the interfaces for e.g. for simple serialization in a Controller or Communication via Service Bus or Message Queue. If a service requires a method to work differently from the base class implementation there is simply an overriding the class and / or method considering the open-closed principle.
I did not know that. I actually thought .NET Core didn't have the facility to dynamically load a DLL!
Dapper + Repository Pattern with FluentMigrator for versioning schema.
I don't think this is a good thing necessarily. It may be for your workplace but in my experience having business logic in stored procedures makes an application harder to test. Being able to edit them live means normal software processes get skipped all because the logic can be edited on the fly. The thinking becomes well if it's wrong no big deal because it can be changed again and again and again until it's "right". Stored procedures definitely have their place no doubt about that but I wouldn't say use them unless there's some complex query where performance is the main objective and nothing else will come close.
Technology: ADO.NET Patterns: Repo-Based DAL (DI, UOW) Library: RepoDb, Dapper, (no EF ever)
.NET Core 3.0 will even get the option to unload assemblies (finally).
I would also like to see
Not sure how to link from mobile, but search for ardalis clean architecture, ardalis is the nickname of Steve Smith a well known figure within the .Net community and how many helpful tips regarding code quidelines and practices. His github project cleanarchitecture and the EShopOnWeb sample which i believe he made both adhere to clean/onion architecture, and will probably provide a good base to start from.
Though a method with zwitch/casr/return would be preferable, this is not too horrible if you format it over multiple lines starting with '?'.
What theme is that? It's beautiful!
Built in dark theme in 2019, 2017 looked similar.
[General format specifier ("G")](https://docs.microsoft.com/en-us/dotnet/api/system.enum.tostring?view=netframework-4.7.2)
Oh awesome. Will update to 2019 when I'm back in the office 
I personally love using Entity Framework, and as of late I’ve been doing a lot of abstraction and dependency injection using the Application/Service/Repository pattern. My code has been crazy maintainable so far and I’m glad I started doing it. 
You sound like you know your shit, and your stuff sounds similar to what I usually try to do (although I have a bias against NoreJs. Interpreted code in the backend, really?!). Do you have a public repo I could have a look at?
Ah, I get it now, thanks!
Wow....
I have 2019 and immediately switched to the dark theme and I love it. A few days ago I switched back to the regular theme out of curiosity and the glare hurt my eyes. Went straight back to dark.
You can move every part to another function or file so...
Can’t remember exactly how right now but I did this a month ago. Think you may just need to create a string with the desired DB name in appStartup? Then you need to manually call Migrate-Database and Update-Database and make sure the DB is getting created - probably by wiring up dependency injection. 
By unavailable I meant just not very easily tamperable. The students data will be real,. but it's in teacher's business to secure the data. I just don't want to store them as a plain JSON.
Interesting... Do you know how it works? I sort of remember there being no AppDomain which is possibly why I thought nothing worked :) Honestly though I'm still catching up with Core. I've be in legacy hell with .NET Classic for ages.
It's not a monster. It's just poorly formatted and misunderstood. :( return freq == Frequency.Yearly ? "Yearly" : freq == Frequency.Monthly ? "Monthly" : freq == Frequency.Biweekly ? "Biweekly" : freq == Frequency.Weekly ? "Weekly" : null; ...But what's up with the null?
What are you trying to accomplish? Why would it just be a single DLL? Your ABI may change and you might have to run another program that expects a different version. If a policy changes so that a user loses rights to a share, this is just going to crash. If you must do this, copy the file locally, then load the library. Instead of this, keep copies of dependencies with the deploy of every program. If you all come up with a deploy strategy and set up a NuGet server, you'll eliminate these headaches along with tons of others. 
.NET Core has no AppDomains, that is right. That's why it was / is not possible to unload assemblies so far. But smart people have been working on this feature for a while and it will come with .NET Core 3.0 (later this year). It's likely already part of the preview, but I did not check. I don't know how it works internally, I never bothered to check. But you can perhaps take a look yourself if you're interested. GitHub issue: [dotnet/coreclr#552](https://github.com/dotnet/coreclr/issues/552) and [dotnet/corefx#19773](https://github.com/dotnet/corefx/issues/19773) A sample project: [dotnet/samples/tree/master/core/tutorials/Unloading](https://github.com/dotnet/samples/tree/master/core/tutorials/Unloading) GitHub project tracking remaining work: [dotnet/coreclr/projects/9](https://github.com/dotnet/coreclr/projects/9)
what is redis used for 
onion architecture, ef core 
I might have a poke around this weekend if I can, thank you for the links, it makes it really easy for me to start poking around if I'm not at a computer :)
Oh I don't know, I think the naming would always depend upon the domain. &amp;#x200B; The bit specifically that I was never to fond of was encapsulating a primitive type when it had no other meaning other than that of being a primitive type. Sure, a telephone number has a specific format and rules so don't just use a string, but when a number is just a number... But my colleague disagreed with me on that one. &amp;#x200B; With respect to the original example, because it was just a number I would see no point in encapsulating the 'addition' myself, not unless it inherently brought something else to the table or you had done it as part of a greater design (e.g. it was a handler class or suchlike). &amp;#x200B; But there's many ways to skin a cat so each to their own. &amp;#x200B;
Is performance is the only reason why you use PetaPoco? Or is it the feature itself? Thanks