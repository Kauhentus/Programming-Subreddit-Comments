I have a Linq search extension that uses .Search() if you want to look at that? It covers a lot more than what you are asking too: http://naspinski.codeplex.com
containsIt = fullText.Contains(s); 
There's no need to create an array. Listbox.Items is a collection, so you can do a foreach loop as TakeMeToTheOtherSide suggests. The objects contained in the collection are of the type ListItem. I mention this because TakeMeToTheOtherSide has it as a string, which works. (it knows how to cast to a string implicitly.) However, if you treat it as a ListItem, you have access to both the .Text value and the .Value value. private bool SearchforString() { //if the true condition ever shows up, we can break out //of the foreach loop without searching the rest. private bool containsIt = false; foreach (ListItem li in listBox1.Items) { //search the value and the text. if(li.selected) { containsIt = searchString.Contains(li.Value) if (containsIt){break;}//we can stop searching. containsIt = searchString.Contains(li.Text) if (containsIt){break;}//we can stop searching. } } //if it searches the entire listbox without finding the search string, then it will return false. return containsIt } Potentially more useful than returning a bool would be returning the position within the Items list of the matching ListItem.
The built-in (probably the way you should go) way to do this would be regex. var searchString = listBox1.items.Cast&lt;string&gt;().Select(s =&gt; Regex.Escape(s)).Aggregate((s1, s2) =&gt; s1 + "|" + s2); var regex = new Regex(searchString); var matches = regex.Matches(File.ReadAllText(fileName));
Cool! Let me know if you have any questions about it. I kind forgot to comment it :)
containsIt ||= fullText.Contains(s); if(containsIt) {break;}; //short-circuit logic FTW!
I have literally spent two days trying to find a way to do this on Windows Phone. I'll have to see if I can make this library work for me or if I'm going to have to do some major rewrites of my code. 
I haven't tried this on Windows Phone yet, but I believe it should work. I added a NuGet package for this, so you can just Install-Package AsynchronousBridge from the package manager to get going.
I'm in the same boat, not surprised to see no answers here. I think this is the most difficult period to overcome as a starting developer. I just don't know what to do next
Looking at the code it should be compatible though I may have to recompile for WP. The only issue is I've tried the code this seems to be based off of with no luck fixing my deadlock. 
Why the hell would you do that?!
Money. Pennies and pennies of money. So he can continue using AOL dial-up at home.
Why would that matter? It's all .NET code in the end...
Exactly... why not just compile as a library and link the functionality into the VB code?
What's next? VB6?
We all mock, and the audience in this subreddit is clearly biased, but is there anyone out there who has to use both and actually prefers VB.NET? It may not be you, but a colleague, or someone you know that sings VB.NET's praises? If so, please (/ ask them to) tell us about its beauty?
My step dad was my inspiration to learn programming, the first language I learned was Visual Basic 6, While I was learning VB.Net I found that I preferred C#'s strongly typed language and it just "felt" better even though I was best at VB6/VB.Net at the time. I eventually got my step dad to convert over to VB .Net because VB6 was starting to get old, ocxs weren't that great and I showed him all the great stuff the updated framework had to offer. So he did, slowly but surely. I've been branching off in all directions programming-wise but my step dad has always stuck to his VB.Net, he's now on the latest .Net framework update which I think is 4.5 using Visual Studio 2012 and he's able to make anything in VB.Net that I can make in C#. When his favorite game Golden Tee Golf took their servers offline he was able to make a server emulator for it out of what he knew and it works flawlessly, even receives donations sometimes. People actively use it and I'm proud to say I co-programmed that with him, I used VB.Net because he's OCD about having too many DLLs if he can prevent it. His current project is a couple custom computers he attached to his car (I'm not a car expert.. yet). He receives data through some sort of converted serial port to where he's basically made drivers and custom software for listening to music, controlling certain things about his car, and basically doing all sorts of cool stuff. Right now he's working on when he pops his trunk he makes all of his lights stay on until he locks his trunk again :) He's an amazing guy who's made some amazing stuff and he's always used Visual Basic, I don't think it's so much the programming language you use, it's how you use it. Also, my personal opinion is that VB.Net and C# are probably very similar performance wise. I don't see the big deal with people fighting over it. I wasn't going to post anything because my opinions tend to be down voted but then I saw this and thought I would respond.
PHP is very similar to C# you'll be fine, Download Visual Studio express and get crackin!
Already had VS pro from school ;). but I got the job, thanks for the encouragement!
Awesome, good job. I'm happy for you.
Thanks dude. I've already learned a bunch my first week and I get to play around with some pretty big databases too! Fun stuff
I would rather write IL directly...
Well, how else is the Anti-Christ supposed to run things? It's all VB, VBScript, IE6, and VB.NET everywhere...running on your choice of Windows Vista (pre-SP1) or Windows XP (pre-SP1). He wanted the programming language that runs his future empire to match his character...evil, and painful. 
DLL the c# code and reference it? it's all .net
&gt; Pennies and pennies of money. Haha, nice description!
I prefer C# but VB.NET was certainly easier to work with COM Interop back in the .NET 1.1 days. It handled COM's optional parameters automatically. With C#, you had to pass Type.Missing to all the optional params.
Did you code through the transition of VB to .NET? Sometimes, it felt like you were trying to wrench people through time. Yea, I have seen the mountain of legacy COM+ and DCOM interactions, yet I am unafraid. For C# and managed code doesn't always punch me in the dick.
I started programming with VB.net, and I agree with you, it's good for the beginners. But then I had to learn java, and when I came back to vb.net I was like "wow the syntax is really shitty!". But it's my opinion and it doesn't make it a bad language, I juste hate the syntax. And VB.net always make me think of script kiddies...
Nope never tried in 5 years of programmation. Did I miss something?
I use both. I'd say I prefer C#, but that is because I'm more familiar with it now, With C# I can do lambda's and Linq and all that without any trouble, with VB.NET I'd have to look that up. I've come to realize that my preference really has no objective basis, however, so when learning something new, or experimenting with an idea for a utility class, I try to write it in both C# and VB.NET. 
Actually, which book were you referring to? I recently started working on a legacy WF project and could use a book that could help me discern between poor programming practices and quirks of the language.
I think the [Dataflow library](http://msdn.microsoft.com/en-us/library/hh228603.aspx) might work.
No Delphi is nothing special. I'll give Embaracadero credit for keeping it alive. But i would not suggest going from .NET to delphi unless you want to take a step into the past. If you've been spoiled by VS you will be disappointed in Delphi in general unless you want a different challenge. Though I would like to try their prism product which is supposed to support .NET. 
^ What they said ^
The only absolute truth I've found about programming is that there are no absolute truths.
Word your question in such a way that it won't raise questions such as "what have you tried ?"
I'm in your same boat. I never try to reinvent the wheel though, so I just Google my problem and read the various msdn pages along with reading stackoverflow, 4guysfromrolla, and any other answer your that looks good. I don't think I've ever actually posted a code problem anywhere because they have already been answered. Just consult the Google and all is solved.
http://www.dotnetperls.com/ Sorry, not a forum but really handy.
VB syntax to me looks like Python with massive brain damage
These web REPLs seem awfully clumsy compared to running it on your own hardware
John Skeet got a compile error once. Microsoft issued a patch the next day.
Aaahh ok, I got it!
Yes! You too ?
sim, e voce?
&gt;besserwissers Are you German or is this a German word which is often used in English like kindergarten?
Its like kindergarten. Swedish has borrowed it aswell.
http://meta.stackoverflow.com/questions/9134/jon-skeet-facts
Basically the idea is that Jon Skeet is the Chuck Norris of the programming world. 
Check the [Plotting API](http://ilnumerics.net/plotting-api.html) and the [Scene Graph API](http://ilnumerics.net/scene-graph-shapes-and-buffers.html) Sections in the Documentation. It's also possible to change expressions and generate new output using the [Web Examples](http://ilnumerics.net/ilnumerics-interactive-web-component.html).
NÃ£o. Salvador - Bahia - Brasil
I love the idea, I spend a lot of time outputting data from C#, only to plot it in gnuplot or Octave. I'll keep an eye on this.
Don't get me wrong. I will go to StackOverflow in a heartbeat (and have). Google sends me there anyway. For basic help, you're right, the answer is already there most likely. I love it! But now I am in the tough place where design patterns and proper methodology is important. I'm at a point where the questions I have are now getting to a point where there is no basic answer and lots of approaches to solving the problem. And HERE is where these "helpers" are counterproductive unless they intend to be thorough in their explanation. It turns out more often than not that they want the world to know they have the answer rather than just giving it. I'd be happier if they answer like I do. When I am asked a direct question. I give a direct answer (pseudo is fine) that accomplishes what they were attempting to do. THEN I say, but I wouldn't do it like that, and here's why, giving the better approach. Keep in mind that if you learn best by doing, then having someone derail the entire process with their "better way" is fine only if you give that way. Otherwise, they don't learn anything about their initial approach, and they didn't learn anything new or better from the derailment either. I just walk away with more confusion... oh and a green check-mark. 
Oh I completely agree. Just demanding code is lazy and cheating. I don't contribute unless they show their work. This shows me that first they may understand an answer I give, second that they at least tried something before asking, and last it makes answering easier if I am just correcting their code as opposed to writing it from scratch. If I don't include my code attempt I can't get mad if I don't get one in return. But at this point I only want to see answers from people that actually want to help. All I'm saying is if I send two pages of snippets and errors messages and I am clearly baffled, please don't answer with "I wouldn't do it that way. Just use LINQ. I love LINQ." That bugs me. Why? Maybe pseudo something out please. That's all I'm saying.
This is a great book. Technical but an easy read.
I have been playing around with different methods of doing N-Body simulations and implementing an [barnes-hut](http://arborjs.org/docs/barnes-hut) octree, with just ordinary managed objects and with MathDotNet derived objects. The major obstacle I have found so far is the immense amound of time it takes to create objects. If I use classes to represent bodies and implement position and velocity vectors as classes as well or use the ready made implementations from MathDotNet, up to around 100000 objects are feasible to calculate on. Much more than that and the sorting of nodes climbs to a point where one iteration would take as much time to calculate as the time step of the simulation. It seems at the moment, that the best solution is to create the world as a single object and represent vectors as indices into x*3 arrays. That way memory allocation for bodies becomes an O(1) operation instead of an O(N). The problem I still have to figure out is how to create an octree as a single object and sort the bodies into it. All this is just a hobby project I am working on in my spare time.
minha tia viva la. que tal!
I've been using a combination of accord.net and zed graph. Zedgraph has some really nice zooming properties and is pretty easy to generate some reusable plotting tools. Accord.net extends the normal T[,] 2d array with matrix operations along with a bunch of other machine learning and statistics functionality. I used to use math.net and switched over to accord.net because of its ease of use and mimicry of some Matlab functionality. 
The code is still around, it's here: https://github.com/SirCmpwn/PartyCraft Just updated to Minecraft 1.6.1 today, in fact.
correct me if I am wrong, but they are all only 2D? And they have really limited capabilities in terms of interactivity, speed and flexibility. As far as I know, ILnumerics is the only flexible 3D solution today. 
a .docx in Times New Roman... nice... is a PDF out there?
Awesome!!! :D
Tests?
Group Policy
No, it can't be that easy can it?
Its how I do it.
I am a complete GPO novice, can I add non domain computers to GPO, or can I add the Thin Clients to the domain but still allow the anonymous auto login so I can get this set up right?
&gt; can I add non domain computers to GPO No. &gt;I add the Thin Clients to the domain No, you would apply the policy to the RDS they are connecting to.
Sorry for being dense what is the "RDS"?
Like I said sorry for being dense I was thinking in the GPO / Active directory. My problem with that solution is that I want the RDP icon to connect to the RDS on the thin client which is not currently part of the domain.
Yes, the Debugging part is a major pain and I have brought it up. I have started creating Class Diagrams and Graph dependency diagrams from the code. These will help in the long run for the API integration. Can you please elaborate on the SOC part?
Thanks! I would like to find a solution as it seems silly to drive for 2+ hours just to add a few icons to a few computers you know?
If you're not familiar with re-sharper, it's a great tool for analyzing code and can be used to find and remove unused code as well. Also, Visual Studio's code metrics can help you target highly coupled classes or complex methods for refactoring. Good Luck!
Absolutely. Just a thought but most thin clients have built in VNC you could connect to... it'd be more manual but able to do remotely.
Thanks, I will take a look at the management options available to me and see If I can't come up with something along those lines.
Not the most elegant solution, but you could save/convert files to .xlsx and grab the image streams using the OpenXML SDK. Or if .xls support isn't required then just use the OpenXML SDK entirely, far better and less troublesome than using the interop in my experience, especially on multi-threaded server applications. SDK download link: http://www.microsoft.com/en-gb/download/details.aspx?id=30425
Oh that sounds very messy...
I will look into it. Just an FYI - there's a NuGet for that.
Yeah if I can't I'm gonna flat out say "I'll put an upload button on the following page"
There are several excellent libraries out there for Excel if you want to deal with it on the server side but why not use the scripting built into Excel to submit the data from the workbook to your server instead of them uploading the xlsx?
I've written to OpenXML -- it's a big pain. But if you can put your code in a library for later use, it is a win over the long run. 
Oh wow I never multi-threaded interop before. I have multi-threaded c# talking to native resources and I have multi-threaded c++ to COM but to be honest, I don't know exactly what's going on in interop. I know on a high level its a .net wrapper for COM but don't know what they are doing. If the wrapper implements the threading then it just won't work... Sorry I am thinking as I am typing. I have to go and mess around with this. AND BEFORE I get posts saying that the term interop covers calling native dlls as well, we are talking about excel COM EDIT: this guy explains it. http://social.msdn.microsoft.com/Forums/vstudio/en-US/f38edd9b-34dd-4cc0-bad2-71d42b667477/multithreading-in-vsto 
First, using any Office Interop on a server is not supported by Microsoft, so you are in for some potential issues (such as files not properly closing and then running out of memory). If you don't want to pay for a library, then why not try learning [OpenXML](http://en.wikipedia.org/wiki/Office_Open_XML)? Another option, and I haven't tried this in this context but have done it in other situations when I couldn't implement JMX in .NET is to use a Java library and then run it through [IKVM](http://www.ikvm.net/). It will convert the Java library to .NET bytecode and will allow you to use it in your application.
You should check out the [ClosedXML](http://closedxml.codeplex.com/) library. This has been very useful for some projects in the past. It's basically a wrapper around the OpenXML SDK that makes things much, much simpler to use.
The one thing that I've heard is much better in VB.NET is the handling of XML. They have XML literals, which seem cool but I'm just so use to XMLDocument and XPath that I haven't really wanted to give VB.NET a try just for that.
I haven't had too much need for 3d plotting except in one situation where I used wpf. That was pretty slow though as the points increased. May have to check this out after all....
Sounds like a lot of work. As mentioned, Re-sharper is a great way to *help* analyze the code (certainly with your goal 3.) but the reading and comprehension thereof is still down to you. There is no advice in terms of direction that I have to offer without knowing the specifics of the UoD.
VBA? I feel nauseous. 
From JetBrains, you could try DotPeek 1.1. It can "read" dll and export them to an actual c# projet. This way you could debug. Plus it's free!
Avoid using office interop in a server environment at all costs. Use OpenXML if you can enforce using Office 2007+. If you go the interop route, you're going to have a bad time later.
You can also query An excel spreadsheet as an OLEDB object. http://www.connectionstrings.com/excel
If you don't find a better solution, you can trivially prevent the collision issue by just using a lock around that. static Mutex mtx = new Mutex(); lock(mtx) { // Get clipboard, get data. } 
Looking at the John's first example, instead of calling MethodAsync.Wait() if he had called await MethodAsync() then the title would set just fine. Also looking at your example, can we not wrap it as below? public void OnLoaded(object sender, RoutedEventArgs args) { Func&lt;Task&lt;String&gt;&gt; func = AsyncString; var task = new Task&lt;String&gt;(() =&gt; { var str = func(); return str.Result; }); task.Start(); MessageBox.Show(task.Result); } public async Task&lt;string&gt; AsyncString() { await Task.Delay(1000); return "TestAsync"; } 
I default to the former, personally, but that may be because I also spend a lot of time in javascript and its safer to test for the existence of loosely typed object properties. Its also faster and less verbose, both of which I consider to be important aspects of clean coding.
I've always been under the impression that exceptions can be fairly costly. This is why there are methods like TryParse in Int32 or TryGetValue in Dictionary. That being said, depending on what you are doing, checking to see if the task is doable may be just as costly as the exception that gets thrown when something bad is attempted. I know this doesn't address the issue of "more fitting" but I am generally more concerned with doing what is best for my application.
Generally speaking you throw an exception if the problem is exceptional. If there's a really good chance that something will fail (ex. Invalid password) then handle that in another way (bool, error code enum). 
I agree with this position.
As mentioned by /u/aquacmj82, the exception is certainly more costly than just checking a bool. In single instances, it may be negligible, but imagine looping through a collection of integral indexes into a SQL table (where the indexes may point to records that have been deleted) and detecting the record for the corresponding index. If you wrap the look-up and delete in a try-catch block, and many no longer exist, you'll find yourself sitting through tons of catch blocks. On the other hand, doing a look-up for existence adds a small cost for each index, but then you don't have to worry about costly catches. It really could end up being a case-by-case decision, but most individuals will err on the side of bool checking if it is available.
How about even simpler? Result&lt;int&gt; result = PerformTaskIfPossible(args); if (result.Success) {...} There are some advantages over a separate check for validity: * The Can method puts a burden on your callers, since they are presumed to have checked it. If someone doesn't check it, you'll likely have to fall back to exceptions. * It doesn't multithread well. If it is an atomic operation, you can't safely check on it and trust the result, since that validity could change due to another thread. A single atomic call can check validity and perform the operation safely. * The Can logic will likely have to be run twice, since the DoTask method can't assume that the caller already checked it. This isn't a big deal if it is cheap, but suboptimal if it is nontrivial. * Some operations can only be attempted, and failure detected during execution. These operations can't provide a meaningful Can method. If this is a service interface of any kind, the pair of methods will be chattier than a single method. * The Can method doesn't provide any information about what the issue is. For things like validation logic which needs to be presented to the user, the reason for failure is relevant. On the other hand, a sum type like the imaginary Result&lt;T&gt; can avoid most of these shortcomings, without the moral hazard of throwing exceptions in expected cases. This is overkill for thin POCOs, but for service calls or view model commands it is usually worth it. The result can also contain arbitrary error or validation failure information. Additionally, if accessing the contents of a Result is only done via functional guards, you have a response which cannot be used incorrectly. A special case of this is the C# pattern of Try methods, as in: bool TryParse(string text, out int value)
I've worked with code patterned after #2, and all it takes is one place where the exception wasn't re-thrown or logged, and you'll be there for hours trying to figure out why it's not working. These days, I only catch exceptions at program entry points. That way I know my stacktrace was preserved, the logging &amp; handling code is minimized, and for the most part the code isn't peppered with boilerplate exception-handling code. Doubtful that aspect-oriented techniques can help, because you need the try..catch block to be in the call stack in order for it to be unwound correctly when something gets thrown. 
Will check it out. Although can't it be dangerous for the computer I use it on? Lets say I accidently make an infinite loop? or something newbish.
No, not by usual means. An infinite loop means you just need to kill LinqPad. To damage the PC you'd need to run as administrator and start deleting files in system folders, which you would be able to do much easier from File Explorer. Just don't use obvious methods like `File.Delete` on system files while running as administrator, then it's harmless.
How about: bool TryDoTask() { try { //stuff... return true; } catch (TaskFailedException e) { CleanUpAfter(e); return false; } } ... if (TryDoTask()) { //proceed with task succeeded } else { //proceed with task failed }
You might try Sharp Develop which you can get in a portable version that you could run off a flash drive.
Half the fun is intellisense. Give Visual Studios a shot! Congratulations on picking up the habit. 
oooh oooh pick me, this may help, my lecturer has written a book "CSharp as a first language" ... sound familiar well this is his website: http://www.robmiles.com/c-yellow-book/ on that page you have the last 5 versions of the book it's designed for students learning from the beginning so perfect.
You can also use Roslyn from within your Visual Studio IDE. http://msdn.microsoft.com/en-us/vstudio/roslyn.aspx 
https://compilr.com/ http://www.coderun.com/ide/
Maybe this is a bit different from what you have asked for, but [ILNumerics](http://ilnumerics.net/) allows you to create [3D-Visualizations](http://ilnumerics.net/Visualization-API.html) (Scene Graph, different kinds of 2D and 3D plots) with C# syntax online in your browser.
Still good. It might take some time before I use this, but nice to just get more options on what I can do to learn. Thanks!
Will definitly use this once the youtube channel I found is over. Thanks!
It's really good, he makes it not so boring, light-hearted banter is his way of teaching.
I got it at home, but I can't use it at work, where I have a lot of free time atm. Thanks anyway.
I'd suggest the Mono REPL. You can break out of loops with Control-C, it has instant feedback as you type, and some convience features for the REPL.
Well you can use regular notepad and use the command prompt to compile it, although no syntax highlighting and not drop down menu's as you're typing code so that kinda sucks. I'll have a look for any freebie programs and reply if i find any
https://compilify.net/ http://rextester.com/runcode Those are the only ones I have bookmarked that do C#. If you want to branch out into other languages, Cloud9 works pretty well: https://c9.io/ Also, since you asked about it, Python skews towards web development more now than it use to. It use to be primarily used in the game industry and items like GIS as it was easy to embed into C++ applications. People used it to let end users build extensions, etc. to their application/engine. With Django being fairly competent, it has seen a bit of pick up in the web space.
1. Install VBox portable on a usb/sd card http://www.vbox.me/ 2. Create a VM &amp; image and store it on same usb/sd card 3. Install Windows + Visual Studio + whatever on that VM 4. Profit!!!
That requires installing some kernel drivers, so it's not quite zero impact.
Is remoting into your home computer an option? (It can be done without installing anything on your work computer and we can walk you through setting it up, so the question is just whether you would get in any trouble)
Do you have a home computer? You could setup RDP and simply remote into your home computer from work and code away. I had done it for years, works pretty well.
Feedback is much appreciated, especially if I got something wrong here. 
Can you remote in to your computer at home? I use [Teamviewer](http://www.teamviewer.com/). It's free and works great. You can remote in to your computer at home through their website or download the client. I would suggest using this and getting visual studio installed at home.
Have you looked at: [Microsoft Exchange Web Services Managed API 2.0](http://www.microsoft.com/en-us/download/details.aspx?id=35371) It's not exactly a utility to explore the server, but using this API you can retrieve/explore almost anything with a bit of code on an Exchange server. [Samples](http://msdn.microsoft.com/en-us/library/exchange/dd633710\(v=exchg.80\).aspx)
Its *supposed* to uninstall the kernel drivers after it stops, but yes I see your point. 
I stumbled onto coderun 3-4 months ago and it was still broken; It looks really nice but nothing will compile
Surprised I had to scroll this far to see LinqPad. I have the full version and use it constantly to test out code and I also write a ton of scripts with it. 
Just to expand on this comment. You can get Visual Studio Express edition free. The reason C# is considered "easy" is because of Intellisense. Visual Studio is what's called an Integrated Development Environment or IDE. Visual Studio has something called Intellisense. Intellisnse tries to predict what you are going to type next, and pops up hints. It's not magic. It won't write programs for you, but it removes a lot of the hard parts of remembering function parameters and variable names. It's really good at telling you what mistakes you've made by giving you red squiggles under bad code just like a spell checker. Holding your mouse over the errors will give you hints as to what's wrong. Without Visual Studio C# isn't really any easier than any other language. It's the IDE that really makes it quick and easy to code in. [Get Visual Studio Express here](http://www.microsoft.com/visualstudio/eng/downloads#d-2012-express).
Trying to make .NET work with Office is a good way to make you want to kill yourself. Coding for Excel is a trap. It's a ghetto. Get out. Run.
Except you have to install Visual Studio, and OP mentions that isn't possible.
Finally forked over for the Premium myself... man that NuGet integration is _sweet_.
Intellisense is worth the price of admission alone. Apparently executable .linq files are coming soon, which will make it a scripting powerhouse. Scripting is even a misnomer, since you can basically create ad-hoc console apps. I have LinqPad "programs" that build entire websites - from creating databases, adding default data, and registering in IIS with SSL certs. Doing that with Powershell or VBS would be cumbersome at best. ...so yeah, I'm a huge fan.
Process. Close?
I know that when I do this with winforms and invoke is required in the output handler.
You're going to have to set up some kind of communication between ffmbc.exe and this program, or have ffmbc.exe write information into some external memory like a file or a database and have this program read from it. I just asked a related question yesterday, and it was suggested that I use named pipes. Now all I have to do is learn what they are and how to set them up. I don't know what facilities .Net offers for inter-process communication, but I'm sure there's plenty. I think that's what Windows Communication Foundation is for. I've got a book on that, but I haven't read it.
You need to start another thread that is reading console's output stream asynchronously. Here is example: http://stackoverflow.com/questions/4501511/c-sharp-realtime-console-output-redirection EDIT: I also noticed that you are exlusively calling Process.Close method. Use "using" statement instead - safer that way. using( var process = new Process() ) { // Do your stuff here... } EDIT2: Afterthought - I guess you could also just simply loop to process.HasExited and read output stream similar way as showed in above example without asynchronous reading. (NOTE: I didn't run this code through compiler - just throwing out some ideas here.) using( var process = new Process() ) { // Do your stuff here... while( !process.HasExited ) { var output = process.StandardOutput.ReadLine(); // Do something with output (might also be null) } var textInEnd = process.StandardOutput.ReadEnd(); // Do something with output (might also be null) } 
Not trying to be too weird here but I don't even agree with the question and the concepts behind it. I think you're mixing and matching concepts that may not taste great together. * Validation is validation. * Swallowing errors is generally bad. * Only catch/throw errors if you can actually handle them. * The code should be encapsulated such that the called does not have to know about calling a validation method. why not: DoTask(){ if (!TaskValid()){ return; } try { //do work here }catch(Exception ex){ CleanupIfNecessary(); throw new exception("DoTask() failed",ex); } } Or skip the error handling all together if the calling method(s) have try/catch. You should only implement try/catch at key points in the code such that exceptions down stream will be caught by driver/chokepoint methods() DoTask(){ if (!TaskValid()){ return; } //do work here //skip try/catch..calling method can deal with it } 
The process you're starting may behave differently depending if its stdout is a console or is piped elsewhere. Check what you get if you pipe it to a file from cmd.
Wow, I just graduated from the University of Hull the other day. Small world.
Have you considered that ffmbc could be writing its output to the StandardError output stream? ffmpg.exe and ffmbc.exe write their progress to StandardError and not StandardOutput. You should do exactly what you just did, but with StandardError instead of StandardOutput. This stuff? Stream #0.1 -&gt; #0.1 Press [q] to stop, [?] for help frame= 31 fps=123 q=26.4 size= 98kB time=00:00:01.24 bitrate= 644.3kbits/ frame= 63 fps=127 q=31.0 size= 185kB time=00:00:02.52 bitrate= 601.5kbits/ frame= 93 fps=119 q=31.0 size= 276kB time=00:00:03.72 bitrate= 607.0kbits/ frame= 123 fps=119 q=31.0 size= 388kB time=00:00:04.92 bitrate= 646.3kbits/ Goes to standard error. 
So I did some investigation. ffmbp writes its output to StandardError, not StandardOutput. All woodyallenET needs to do is replace each instance of Output in his code with Error, and everything will work right. RedirectStandardOutput becomes RedirectStandardError, OutputDataReceived becomes ErrorDataReceived, and BeginOutputReadLine becomes BeginErrorReadLine. 
Hahaha I probably know you. I'm going on to masters.
I like and recommend [ideone](http://ideone.com). It has an excellent selection of programming languages including C#
[Here ya go](http://stackoverflow.com/questions/10756690/c-sharp-automatically-answer-calls-in-lync)
Sorry. I don't think I phrased that properly. I meant when someone adds the lync user as a contact.
A client based solution would probably be difficult to implement and maintain. You'll probably want to look at using an MSPL script at the server level to look for the SIP messages that notify user A that user B added them to their contact list, and then send a new SIP message on behalf of user A to add user B to their list. It would be a fairly complex project. 
My fault, read it wrong
No problem. I phrased it wrong.
A commentor on the actual article has (correctly, I think) pointed out that the example in the article does not technically meet the definition of "RESTful." I guess my intent was to show how to build out the "Minimal Web API project in that general direction, without getting into a deep discussion about REST itself. In the comments, though, he provides a host of helpful links. I will probably offer my own thinking on REST in a later article, but be aware, I was not trying to open the REST debate here! :-)
I'm not sure exactly what you're asking for, so... If you're looking for the content of the VmlDrawingPart, you can use the GetStream method (with overloads). If you're looking for the containing node(s) of the VmlDrawingPart, you can use the GetParentParts method. 
You should use webservices to do this. Using email as a way to transfer data should be your last option. 
I agree with this. Also, gmail is not an option I would recommend (if you did go down the email route). If you have a service that automatically logs into gmail, I've had issues in the past where the account gets locked out because it starts requesting a captcha.
I think you have to add your Rectangle inside a Canvas and then place that Canvas inside the Border (if you still want to use a Border). The Canvas allows absolute positioning of other UIElements. To access the position of your Rectangle shape, use Canvas.GetLeft(yourRectangle) or Canvas.SetLeft(yourRectangle, leftPosition). There is also Canvas.SetTop() and Canvas.GetTop(). 
You may want to invest some time into reading up on Azure Mobile services: http://www.windowsazure.com/en-us/develop/mobile/ It's basically a cloud platform that's made to provide the back end to mobile apps, including authentication and storage. And for you specifically, check out the Xamarin Azure Mobile Services Component: http://components.xamarin.com/view/azure-mobile-services/
Very nice! I will take a look into the Xamarin mobile service in a little while, and see what I can find. I appreciate it Catalyzm!
I like to learn by doing projects. Give yourself something you want to make, and then try to make it. It doesn't have to be perfect. When you run into a problem, try to figure it out on your own, and if you get REALLY stuck, then ask here on reddit, preferably over on /r/learnprogramming that's the best place to go with questions like this. /r/csharp and /r/java are more like news hubs and more serious content discussion, but no worries! There are a LOT of questions like this on /r/learnprogramming, so I suggest you fish around there for some more resources.
&gt;How do I store data in a server to be obtained when the user views it, if he is not active? It's called a **data**base for a reason. Everything on a computer is just a series of bytes, most .net types have a way to get at those bytes, and some sort of constructor that will take those bytes back. Then you just need to determine how to figure out what class you need to use. Almost all database engines support a `blob` type, which is specifically designed for storing binary (i.e. byte) data. 
Some extra information would help, such as how you are currently handling your screen captures but the links below should help guide you on library choices and handling combining your images into a gif. http://stackoverflow.com/questions/1196322/how-to-create-an-animated-gif-in-net http://stackoverflow.com/questions/16996744/c-sharp-create-an-animated-gif-image-from-selected-images-in-asp-net http://social.msdn.microsoft.com/Forums/vstudio/en-US/21bbe070-6c87-4f2f-93c4-22f7c1ea1648/creating-animated-gif-image-from-binary-data-using-c http://forums.codeguru.com/showthread.php?349995-Animated-Gifs-in-c-how-to Tl;dr Probably just use ngif library and RTFM. Cheers.
Awesome! thanks for the links
http://www.overclock.net/t/325885/faq-a-beginners-guide-to-programming-c I've used this as a reference for all the basics and then googled as needed. I came from a Delphi background so C# was relatively easy for me to pick up.
I found a way. I don't think it's very effficient but it works. I basically just take pictures of the screen a few times a second and then it turns that into a gif here's the code im using to do it http://pastebin.com/6zqPjjyu
Is it possible to use its visual elements as WPF controls? From a glance it looks like it's WinForms based.
Why a GIF? Are you trying to piss someone off? Video would probably make more sense unless there's a specific reason for a gif.
Where I work the computers and the internetaccess is rather limited. I work at a hospital and they have all sorts of blocking softwares. It might work, but I just think it won't. Thanks anyway (:
Check out something like http://www.insto.co.uk if you are able to use Javascript - it's a websocket framework that makes this stuff pretty simple to do
The site takes forever to load. On the other hand, I like these types of newsletters. Upvoted, but maybe work on the load time? It took the like you posted here about 10 seconds to load, and when I "subscribed, it took another 10+ seconds to process. Also, you might operate this as a "blog" of sorts so that visitors to the site can review past posts/newlsetters. 
I'd recommend looking into [DRY](http://en.wikipedia.org/wiki/Don't_repeat_yourself) You're using code which could be moved into one method and called saving yourself lines and lines of code. 
Considering all that changes is the number used for the seed I would change it to something like the following: private int StatsRolls(int seedVariable = 0) { int baseSeed = (int)DateTime.Now.Ticks; Random random = new Random(baseSeed + seedVariable); int[] dicerolls = new int[4]; for (int i=0; i&lt;4;i++) { dicerolls[i] = random.Next(0, 7); } int minValue = dicerolls.Min(); int Highest3Rolls = dicerolls.Sum() - minValue; return Highest3Rolls; } By using default parameters (also called optional or named parameters), we can cut out the need for your extra code, and we simply pass in a value to seedVariable if we ever want to use something other than the base seed. Then if you want to generate all six stats you can simply do something like: int[] stats = new int[6]; for (int i=0; i&lt;6; i++) { stats[i] = StatsRolls(i); } EDIT: A few edits to clean up unnecessary code. Additionally avoid using var as much as possible, especially in functions with return values as that way you are less likely to try and return an invalid value (which may throw an exception and kill your program).
That's a good start! Thanks, I'll have to dive into that and try to make it work.
Thanks so much! Just what I was looking for.
For the text boxes: Indeed he is. I pulled all that out though and simply dealt with generating the stats. As for the rest of what you said, that is totally valid, but possibly a bit beyond what he was asking for. Using the IEnumerable is really only worth it for making a generic diceroller, which he probably doesn't need if he's simply doing character generation. A strict function that generates and returns the desired array of ability scores is more than sufficient and requires much less knowledge of C# than setting up the IEnumerable.
Don't create multiple Random objects. It defeats the purpose. Each 'seed' will always return the same list of numbers. So in your example, you are taking one number off of each list, then throwing the rest away. The default seed is system.ticks, so you don't need to specify that if you want the default behavior. private readonly Random _random = new Random(); private int StatsRolls() { var dice = new[] { _random.Next(0, 7), _random.Next(0, 7), _random.Next(0, 7), _random.Next(0, 7) }; return dice.Sum() - dice.Min(); } private void Main() { var stats = new[] { StatsRolls(), StatsRolls(), StatsRolls(), StatsRolls(), StatsRolls(), StatsRolls(), }; ... } 
You both have some great advice! So far I've taken the code down to this: private string H3R = string.Empty; public void RandomDiceRoll(int SeedVariable) { int baseSeed = (int)DateTime.Now.Ticks; Random r = new Random(baseSeed + SeedVariable); int Dice1 = r.Next(0, 7); int Dice2 = r.Next(0, 7); int Dice3 = r.Next(0, 7); int Dice4 = r.Next(0, 7); string D1 = Dice1.ToString(); string D2 = Dice2.ToString(); string D3 = Dice3.ToString(); string D4 = Dice4.ToString(); var dicerolls = new int[] { Dice1, Dice2, Dice3, Dice4 }; var minValue = dicerolls.Min(); var Highest3Rolls = dicerolls.Sum() - minValue; H3R = Highest3Rolls.ToString(); } private void RollAllStats() { StatsRolls1(); StatsRolls2(); StatsRolls3(); StatsRolls4(); StatsRolls5(); StatsRolls6(); } private void StatsRolls1() { RandomDiceRoll(0); DR1.Text = H3R; } private void StatsRolls2() { RandomDiceRoll(1); DR2.Text = H3R; } private void StatsRolls3() { RandomDiceRoll(2); DR3.Text = H3R; } private void StatsRolls4() { RandomDiceRoll(3); DR4.Text = H3R; } private void StatsRolls5() { RandomDiceRoll(4); DR5.Text = H3R; } private void StatsRolls6() { RandomDiceRoll(5); DR6.Text = H3R; } private void RollStatsClick(object sender, RoutedEventArgs e) { RollAllStats(); } Which is much cleaner than before. I plan on taking more of your advice and condensing it down further. Being only 5 days into learning C#, this is the part I've had the hardest time wrapping my head around. Thanks for presenting it in such a way that I've been able to understand it. You all have been very helpful. 
I don't know, if you're going to this: int Dice1 = r2.Next(0, 7); int Dice2 = r2.Next(0, 7); int Dice3 = r2.Next(0, 7); int Dice4 = r2.Next(0, 7); var dicerolls = new int[] { Dice1, Dice2, Dice3, Dice4 }; You'd be much better off doing this: var dicerolls = RollSomeDice(4).ToList(); //call .ToList() so you don't re-roll them if you enumerate over them again! If you're unfamiliar with enumerators, then use this function to generate an array of dice values: int[] RollSomeDice(int howMany) { int[] rolls = new int[howMany]; for (int i = 0; i &lt; howMany; i++) rolls[i] = rand.Next(0,7); return rolls; } Now you can get your array of 4 dice with var dicerolls = RollSomeDice(4); Is it worth doing this? 10 years ago I would have said NO. But now my sense is that if you're building a game involving dice, you probably want to extrapolate out the generation of dice rolls for two reasons: 1) because you're going to be calling it from several places 2) generating a good roll may not be as simple as you imagine. There may be other constraints or problems that arise down the line that you haven't thought of yet - and when they do, you can add those constraints and fix those bugs in the dice roller. This is a really interesting article on the difficulty with, what appears to be, a simple problem: how to shuffle a deck of cards: [http://www.cigital.com/papers/download/developer_gambling.php](http://www.cigital.com/papers/download/developer_gambling.php) 
The longer you do this, the more easily you'll be able to spot redundancies. You're already doing great recognizing the repetition that you know you don't want. Here's where you can go with the above if you really want to get shorter (but you'll lose some (a lot) of readability): static Random rand = new Random(); public int GetHighest3() { var dice = new int[] { rand.Next(0, 7), rand.Next(0, 7), rand.Next(0, 7), rand.Next(0, 7) }; return dice.Sum() - dice.Min(); } private void RollStatsClick(object sender, RoutedEventArgs e) { for (int i = 1; i &lt;= 6; i++) ((TextBox)FindControl("DR" + i)).Text = GetHighest3().ToString(); } (Oh, and FYI, your D1, D2... vars aren't used so you can remove those lines)
The only time you MUST use var is if you're doing something with implicit typing like projection from LINQ. The only time you should use var (IMHO) is when you're declaring something wordy: var dict = new Dictionary&lt;string, List&lt;int&gt;&gt;(); rather than Dictionary&lt;string, List&lt;int&gt;&gt; dict = new Dictionary&lt;string, List&lt;int&gt;&gt;(); Other than that, I would never say: var i = 0; over int i = 0; You're adding ambiguity and getting nothing in return. 
Readability for the most part. If you want to avoid the static type checking, then "dynamic" is the type to use. But that can lead to all sorts of runtime errors. Here is something of a debate on the use of var: http://www.infoq.com/news/2008/05/CSharp-var
the big problem I have with var is what happens when you do something like: var number = 125; is that an int or a byte?
Either works honestly, it all depends on preference. XML adds a lot of overhead to the file but can make it much more readable than a plain text document. As long as your program can read and write the files, it should be good enough. Be aware that if you want to obfuscate your saved info you can actually write it as a binary file instead of as plain-text. C#'s library has facilities to do this.
Its an int. From the MSDN page for [int](http://msdn.microsoft.com/en-US/library/5kzh1b5w.aspx) "When an integer literal has no suffix, its type is the first of these types in which its value can be represented: int, uint, long, ulong."
&gt; TextBox tb = (TextBox)container.FindControl("DR" + i); &gt; tb.Text = H3R; This part is returning the error: "the name 'container' does not exist in the current context. Any ideas on a fix? 
WRITE THE TEST FIRST!!!!! For shit sake do yourself a favor and start doing TDD now. It will save you soooo much time and frustration.
Never heard of TDD, I'll have to look in to it. I'm self-teaching myself and frankly most online tutorials are shit for people with zero programming experience. 
Change container to the ID of the control that holds the text boxes. For example the Form or Panel that is the textbox's parent. That's the control that you've got to ask to find the textbox control for you. 
This will execute the DOS dir command on the root of the C: drive and output the results to the console window. Edit: added close class Program { static void Main(string[] args) { Console.WriteLine( Test_Process.Test_Process_Out(@"C:\")); Console.ReadLine(); } } class Test_Process { private static System.Text.StringBuilder oResults = new System.Text.StringBuilder(); public static string Test_Process_Out(string Folder) { using (Process oProcess = new Process()) { oProcess.StartInfo.FileName = "cmd.exe"; oProcess.StartInfo.Arguments = "/c " + "dir " + Folder; oProcess.StartInfo.UseShellExecute = false; oProcess.StartInfo.CreateNoWindow = true; oProcess.StartInfo.RedirectStandardOutput = true; oProcess.StartInfo.RedirectStandardInput = false; oProcess.OutputDataReceived += SortOutputHandler; oProcess.Start(); oProcess.BeginOutputReadLine(); oProcess.WaitForExit(); oProcess.Close(); return oResults.ToString(); } } private static void SortOutputHandler(object sendingProcess, DataReceivedEventArgs outLine) { if (!string.IsNullOrEmpty(outLine.Data)) { oResults.Append(outLine.Data + Environment.NewLine); } } } 
TDD is a great technique to keep you out of Debbuger hell. It also helps you focus on the behaviors you want and not implementation. As a result you typically end up with less code that is easier to change.
Here is what I would do. I would follow each of these steps in order so you can see how to refactor the code. 1. Just create your Random object without seeding it yourself. None of your methods will run at the same time, so they will all be seeded randomly. 2. Move the DRx.Text = H3R calls outside of the method. StatsRolls1 should return H3R and whatever calls StatsRolls1() should set "DR1.Text = StatsRolls1();" Do the same thing with all of your methods. You should be able to remove the chaining in your methods now. 3. At this point, you should have 3 identical methods. Change StatsRolls1 to StatsRolls (or better yet, create a more descriptive name like GetHighest3Of4Rolls). All of your DRx.Text = StatsRollsx() calls should change to DRx.Text = StatsRolls(). You can now remove your other methods. 4. Create a class called Die. The constructor will take in one argument for the number of sides on the die. It will then store that value into a field as well as creating a new Random object and storing that into a field as well. The class will have a public Roll() method that will return the next integer value from the random object. 5. In your class where these methods exist, create a private static method called RollDice that takes the number of dice and the number of sides on the dice as parameters. Create an array of integers based on the number of dice. Create a new Die object with the number of sides being passed into the constructor from your method parameter. In a for loop from 0 to the number of dice, call die.Roll() and store that value into the corresponding index in the array. Return the array. This will allow you to roll as many dice as you need to in the future. 6. The first 6 lines and the 11th line in all of your method can now be replaced with var diceRolls = RollDice(4, 7); 7. All of your D1, D2, D3, and D4 variables are never used, so those lines can be removed (unless you are planning on using them in future parts of the code. The code above (in addition to other code we have created) has essentially been 4 or 5 lines of logic in a single method instead of 4+ methods. Your code will also be much more readable as die.Roll() is much clearer than r3.Next(0,7) and RollDice(4,6) is much easier to understand than the 7 lines that we replaced with it. If you name your methods and classes properly and you try to minimize the amount of code you are putting in each method, you will find that your code ends up documenting itself. As an aside, do realize that you are rolling a 7-sided die with numbers from 0 to 6? If you want to roll from 1-6, then do r3.Next(0,6)+1. If you meant to roll from 0 to 6, then ignore this.
It also looks like a regular 'RichTextBox' (especially because of the font), but the 'Remove' button would make no sense. since you can't really select a line in a text-box and remove it.. i think? Anyway, it could definitely be a listView. To be able to add items to a listview, you have to add columns to the listview first. Right click it in the design 'mode' and select 'Edit columns' and add the number of columns you want. Then, to not have the top bar with the column headers be visible, select/high light the list view in design mode, go to the properties of the listview and set the HeaderStyle to 'none'. You can then add items to the listview doing something like this (seriously though, please excuse my summer brain): ListViewItem item = new ListViewItem(); item.Text = textBoxProductName.Text; //first column content item.SubItems.Add(textBoxQuantity.Text); //second column content item.SubItems.Add(textBoxLatestPrice.Text); //third column content //pseudo pseudo something like double subtotal = textBoxQuantity * textBoxLatestPrice; item.SubItems.Add(subtotal.ToString()); //fourth column content listViewOrdre.Items.Add(item); //add the item to the listview I'm pretty sure you don't need to update the listview when adding items this way, but I could be wrong - I haven't done anything like this for months, but I hope it can help you a little bit anyway :) 
The code below uses TDD - You will need to reference the UnitTestFramework assembly :-) You will do your career NO END OF GOOD by understanding why the following "long-winded code" approach will save your ass OVER AND OVER AGAIN as you write production code. ~~~~ using System; using System.Collections.Generic; using System.Linq; using Microsoft.VisualStudio.TestTools.UnitTesting; namespace Dice_Roll { /// &lt;summary&gt; /// Console demo app /// &lt;/summary&gt; internal class Program { internal static int H3R1, H3R2, H3R3; /// &lt;summary&gt; /// Main class /// &lt;/summary&gt; internal static void Main() { var d = new FairDie(); Console.WriteLine(H3R1 = Highest3RollsOf4(d)); Console.WriteLine(H3R2 = Highest3RollsOf4(d)); Console.WriteLine(H3R3 = Highest3RollsOf4(d)); } /// &lt;summary&gt; /// Returns the highest 3 of 4 rolls, given a die /// &lt;/summary&gt; /// &lt;param name="die"&gt;The die&lt;/param&gt; /// &lt;returns&gt;&lt;/returns&gt; internal static int Highest3RollsOf4(IDieRoll die) { var dicerolls = Enumerable.Range(0, 4).Select(x =&gt; die.GetRollResult()).ToList(); return dicerolls.Sum() - dicerolls.Min(); } } /// &lt;summary&gt; /// The main fair die /// &lt;/summary&gt; internal class FairDie : IDieRoll { private static readonly Random Random = new Random((int) DateTime.Now.Ticks); public int GetRollResult() { return Random.Next(1, 7); } } /// &lt;summary&gt; /// An unfair die mock that always returns the same value /// &lt;/summary&gt; internal class AlwaysNDie : IDieRoll { private readonly int _alwaysGenerates; public AlwaysNDie(int alwaysGenerates) { _alwaysGenerates = alwaysGenerates; } public int GetRollResult() { return _alwaysGenerates; } } /// &lt;summary&gt; /// An unfair die mock that always returns predictable results /// &lt;/summary&gt; internal class Starts1AlwaysAdds2Die : IDieRoll { private int _lastResult = -1; public int GetRollResult() { return (_lastResult = (_lastResult + 2) % 6); } } /// &lt;summary&gt; /// Die roll interface /// &lt;/summary&gt; internal interface IDieRoll { int GetRollResult(); } /// &lt;summary&gt; /// Test class /// &lt;/summary&gt; [TestClass] public class ProgramTest { /// &lt;summary&gt; /// Ensures that the Highest 3 rolls are correctly calculated for all possible values of the UnfairAlwaysN die. /// &lt;/summary&gt; [TestMethod] public void Highest3RollsAreCorrectlyCalculatedForUnfairAlwaysNDie() { for (var n = 1; n &lt;= 6; n++) Assert.AreEqual(3 * n, Program.Highest3RollsOf4(new AlwaysNDie(n))); } /// &lt;summary&gt; /// Ensures that the Highest 3 rolls are correctly calculated for the Starts1AlwaysAdds2Die die. /// &lt;/summary&gt; [TestMethod] public void Highest3RollsAreCorrectlyCalculatedForStarts1AlwaysAdds2Die() { var die = new Starts1AlwaysAdds2Die(); Assert.AreEqual(0 + 3 + 5 + 1, Program.Highest3RollsOf4(die)); } /// &lt;summary&gt; /// Ensures that the FairDie is really fair over 10,000 rolls. /// Note that this one is NOT guaranteed to pass due to the very nature of Random! /// &lt;/summary&gt; [TestMethod] public void FairDieIsFairOver10000Rolls() { // Create a fair die var die = new FairDie(); // Create a tally dictionary var rollValueDictionary = new Dictionary&lt;int, int&gt;(); for (var n = 1; n &lt;= 6; n++) rollValueDictionary[n] = 0; for (var n = 1; n &lt;= 10000; n++) { var rollValue = die.GetRollResult(); Assert.IsTrue(rollValue &gt;= 1 &amp;&amp; rollValue &lt;= 6, "FairDie returns value outside of range 1..6"); rollValueDictionary[rollValue]++; } // Make sure that we got 1000+ tallied against each possible result for (var n = 1; n &lt;= 6; n++) Assert.IsTrue(rollValueDictionary[n]&gt;1000, string.Format("FairDie is not fair. Too few {0}s rolled.", n)); } } } 
&gt; TextBox tb = (TextBox)container.FindControl("DR" + i); Huh. That's just awesome. I didn't know this was possible.
 I don't understand why you would want to. Can you provide an example?
Don't know why you got downvoted. You are correct. If we can teach him ANYTHING, it's to go TDD before it's too late! See my other post ;-)
Hmmm - I ALWAYS use var if it is possible to do so, and here's why... Let's say I have an int RollDice(); method and I'm using it to set a few variables: int a = RollDice(); int b = RollDice(); int c = RollDice(); int d = RollDice(); int e = RollDice(); I later decide to refactor RollDice() to return a byte (using ReSharper, of course!) All I have to do (auto-checked by unit testing of course) is to change RollDice's signature. Ah, but because I used int instead of var, my code is not only gaining the efficiency AND I now have mixed types throughout the code and confusion reigns. Using var is good practice. Many devs do not know how and when to use "??", "/=", "yield" and "unsafe" either. Learn to use them and they will serve you well.
That's an int. (byte)25 is a byte.
It's definitely better to use an existing function when possible. I wasn't aware of the width/alignment parameter, thank you for the hint.
Really this is all a mac vs pc type of debate and both have valid points but I'm still going to disagree with you and here's why: var a = SomethingThatReturnsInt32(); and now I've changed that function to return a double. Now when I do this: var b = a / 10; b is now a double instead of an int (likely with a fractional part). Now I use b somewhere else and the errors multiply as the change to that function propagates throughout my code. My advice is: don't use var in a case like this: var a = SomeFunction(); because on the line that follows, it's not clear what type a is anymore and as you pointed out, it's subject to change if you (or someone else working with you) changing the function's return type. It's better to get a compile-time error and see the issue than have it compile and get unexpected types floating around. By relying on var's forgiveness you're bypassing the safety that static type checking gets you in the first place. 
The mysterious ["Version 4.0"](http://superuser.com/a/610219/209415) still remains on the title page. 
The constructor, methods, and properties all exist in the same declaration space. In that space, the class name itself is a keyword reserved for the constructors and deconstructor use. It'd technically be possible to construct the language to allow you to use it for properties and functions, but the C# spec specifically disallows this, no doubt to try and keep the language distortion free in this respect. TL;DR: Because the spec says so.
Visual Studio 2012 Professional is available for free through https://www.dreamspark.com/ to anyone who has a college email address.
You're on the right track with the ListView. You need to set the 'View' property for the listView to 'Details', and then modify the 'Columns' collection for the listView to include the 4 headers you need to display, (both can be found in the properties for the listView control). After that, adding an item to the list view which uses all 4 columns can be done like so: string[] entryLabels = new string[4]; entryLabels[0] = "Bananas"; entryLabels[1] = "5"; entryLabels[2] = "$3.73"; entryLabels[3] = "$18.65"; ListViewItem myItem = new ListViewItem(entryLabels); listView1.Items.Add(myItem);
Using var can be useful for readability too. What's easier to understand? &gt; var service = new CustomerAccountManagementService&lt;SpecialCustomer&gt;(); or: &gt; CustomerAccountManagementService&lt;SpecialCustomer&gt; service = new CustomerAccountManagementService&lt;SpecialCustomer&gt;(); 
Nevermind. looks like it went pretty bad. http://www.giffingtool.com
Thanks, I figured it was something like this. I couldn't think of any real concrete reason why this wouldn't be allowed.
You shouldn't really be worrying about memory or threading at this point, learn the basics and gradually improve it. For instance, consider changing your arrays to lists - they are a really great feature of C#
In trying to keep with a good interface for the StatsRolls method, specifically so that it maintains a consistent (and unit testable!) output, consider removing the call to DateTime.Now from within the roller method. If you have a method that allows for specification of a seed, the passing the same value should always return the same response. Instead, to duplicate the functionality you've outlined here, you can add the date time ticks in the call to StatsRolls within the for loop
If your new to programming I recommend looking up "Learn Python the Hardway" and after doing that, transition those skills into C#. Python is more welcoming to newbies and tends to have more tutorials and then learning C# afterwards is a breeze.
The words to describe what you want to do are *unitising* and *refactoring*. That should help with your googling. I'll also give you a quick sample to get you started: private void StatsRolls() { DR1.Text = GetRandomStats(); DR2.Text = GetRandomStats(); DR3.Text = GetRandomStats(); DR4.Text = GetRandomStats(); } private string GetRandomStats() { int baseSeed = (int)DateTime.Now.Ticks; Random r2 = new Random(baseSeed + 1); int Dice1 = r2.Next(0, 7); int Dice2 = r2.Next(0, 7); int Dice3 = r2.Next(0, 7); int Dice4 = r2.Next(0, 7); string D1 = Dice1.ToString(); string D2 = Dice2.ToString(); string D3 = Dice3.ToString(); string D4 = Dice4.ToString(); var dicerolls = new int[] { Dice1, Dice2, Dice3, Dice4 }; var minValue = dicerolls.Min(); var Highest3Rolls = dicerolls.Sum() - minValue; string H3R = Highest3Rolls.ToString(); return H3R; } Does that make sense? Feel free to ask questions.
http://support.microsoft.com/kb/319061 is probably a good starting point.
Thank you for your help, it is a ListBox he wants me to use, it is mentioned in the booklet I have. 
I tried that and it went grayscale for some strange reason, I might of done it wrong
Weird, here is loading in a good time. Good suggestion :D
Ah. Today it does load fine. Might have just been a temp thing. Nice work!
Today is the day! Soon I will be sending your .NET Pills :D
If you're just copying the example in the above URL, then that's as expected: // Initialize a new color table with entries that are determined // by some optimal palette-finding algorithm; for demonstration // purposes, use a grayscale. For a colour version, you'll need to need to find the best pallet based on your input image. http://stackoverflow.com/questions/3849115/image-palette-reduction has some details.
Changing a return value from int to double seems odd, but it could happen. You should still receive a compile error if it affected the correctness of the code.
There are several books, blogs and videos that you can use. These books are good choices: [C# 5.0 in a Nutshell](http://www.amazon.com/gp/product/1449320104/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1449320104&amp;linkCode=as2&amp;tag=paulorti-20) and [Pro C# 5.0 and the .NET 4.5 Framework](http://www.amazon.com/gp/product/1430242337/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1430242337&amp;linkCode=as2&amp;tag=paulorti-20) I also wrote a blog post about it. [Resources to become a Ninja: C#](http://pauloortins.com/good-resources-to-learn-casp-net/) 
No, you won't necessarily get a compile time error. That was my point. Let's say you have this code which expects to increase your balance by the nearest $10: int SomeMethod() { return 305; } void Go() { double balance = 15; var a = SomeMethod(); var b = 10 * (a / 10); balance += b; } Balance = $315.00; Now if I change that method to double SomeMethod(). BAM! Balance is $320 and the output of the programmed changed. No compile error and my math expression isn't what it was originally. 
ListView can display columns http://stackoverflow.com/questions/473148/c-sharp-listview-how-do-i-add-items-to-columns-2-3-and-4-etc 
While this is cool and all, you'll get better results by generating code via XSLT. 
I wouldn't roll your own authenticaion scheme if I were you. And I doubly wouldn't store passwords like that, as there's nothing really secure about your approach. Azure has authentication services, which are tailored to mobile apps you might want to look into, which will solve your authentication problem. http://www.windowsazure.com/en-us/develop/mobile/tutorials/get-started-with-users-dotnet/ As for your general approach, it's probably ok in your case to store user data in a table (NOT passwords), but you might want to put more critical data in SQL and use the table for less critical data. E.G. store username + unique id in SQL, then the unique id + blobId pairs in a table for images/messages that are associated with that user, then store the actual messages/images in blob storage that can be referenced from that blobId.
I would also be careful with depending on your own "special encryption" mechanism. I'm not suggesting that you don't know what you're doing, but encryption is a very highly specialized field and a lot of custom encryption techniques are not nearly as secure as the developer might hope. Just a thought though.
Aside from this, how do I go about &gt; As for your general approach, it's probably ok in your case to store user data in a table (NOT passwords), but you might want to put more critical data in SQL and use the table for less critical data. E.G. store username + unique id in SQL, then the unique id + blobId pairs in a table for images/messages that are associated with that user, then store the actual messages/images in blob storage that can be referenced from that blobId. if for say, I do use their built in authentication method?
&gt; password encrypted with a special encryption I have created This is a huge red flag! Encryption is **HARD** problem to solve. Stop and let that settle in for a second. When writing encryption algorithms code goes through many reviews by people who are experts in the subject. Users are trusting you with their passwords and by using a custom built solution you are violating that trust. Please do not do it. Best practices are to salt and hash a password using a hashing algorithm like HMAC or PBKDF2. These have been mathematically proven to take an incredible amount of computing resources to attack. I'd recommend using a prebuilt membership provider as almost everything you need will be done for you. However if you would like to there is a MSDN article on Implementing a [Membership Provider](http://msdn.microsoft.com/en-us/library/f1kyba5e\(v=vs.100\).aspx)
If i use a prebuilt membership provider, what is my next step to coupling user sent data to accounts? 
You have two options. If the data is fairly small in size you can serialize that data and attach it to FormsAuthenticationTicket.UserData field like what is shown in this [StackOverflow post](http://stackoverflow.com/questions/3389387/storing-additional-user-data-in-membershipprovider-formsauthenticationticket). The other option is to store it in a SQL table like you have in your example. Rather than keep all the data that is stored in your membership provider you would have a primary key that you could pull from the [MembershipUser.ProviderUserKey](http://msdn.microsoft.com/en-us/library/system.web.security.membershipuser.provideruserkey.aspx) value. For quick and dirty I would use the UserData. If you ever need to query on any of that I'd go with the SQL implementation. For the SQL implementation I would probably use a simple ORM tool.
what do you mean by 'own Hardware'?
Running the REPL on your computer
If you are looking for a Azure friendly Membership Provider you have a few to choose from: [Azure Table Storage Providers](http://azureproviders.codeplex.com/) [3rd Party (Google, Facebook, LinkedIn)](http://cloud.dzone.com/articles/authenticating-your-users) [Azure Active Directory](http://www.windowsazure.com/en-us/services/identity/) [Universal Providers (Supports SQL Auzre)](http://www.hanselman.com/blog/IntroducingSystemWebProvidersASPNETUniversalProvidersForSessionMembershipRolesAndUserProfileOnSQLCompactAndSQLAzure.aspx) You can also use the Default one, but it will require publishing tables to a SQL Azure instance which can be a pain (and is technically not supported). The nice thing is if you use a provider you can always switch later with no to very few code changes.
This is the question I'm in the process of trying to answer now myself. I've got a REST endpoint in Azure sitting behind http at the moment, and I want to use their authentication and then, I think, put that REST service behind https and be able to communicate in a secure and authenticated manner with the service. This article was where I last left off with the investigation into that...might be a good jumping off point for you: http://www.cloudidentity.com/blog/2013/04/29/fun-with-windows-azure-ad-calling-rest-services-from-a-windows-phone-8-app/
Which of those is the easiest/MONO .NET friendly? I only have experience working in C#, so this whole database/web server stuff is confusing.
Why? I've had experience with both and I'd much prefer C#-in-C# to XSLT
Less code to write, overall. Plus there are features of C# that the CodeDOM simply can't do. This book is a little old now, but covers all three approaches (CodeDOM, XSLT, and just writing to a stream) http://www.amazon.com/Code-Generation-Microsoft-NET-ebook/dp/B004OA7IS4/ 
Or T4 templates. Or Python.
NEVER store only encrypted passwords unless you know how to deal with rainbow tables. If two users have the same password, and get the same hash, then your passwords are still not secure. One easy sollution is encrypting both username in allcaps AND the password. This will automatically ensure unique hashes.
Right, as I said... I have a solution to encrypt passwords. I need to know how to link the UserItem's to the blob database, allowing each user to grab data sent to them and send data to others.
Wait, I don't think I understand. My first reaction to that would just be Foreign Keys.
So when my app updates (looks for new images/text), I search my database for identical Foreign Key == to User's foreign key, and then pull that content to local memory and delete it from my server (or keep it, whatever)? How do i generate the foreign key? Do i just use the ID field shown [HERE?](http://i.imgur.com/q3V8mS3.png) or do i want something more secure/unique?
Unless you *must* do this in C#, you can probably get Microsoft Access to do it a thousand times easier. You can create a report inside your Access DB (the MDB file is from MS Access) and dump an image control bound to your filename, and along with fields for any other data you want to show. Once the report is created, you can print them out. (May require some fudging around to get it to line up correctly though) There's also templates for Microsoft Word and you can use a mail-merge there. Not sure Word will let you template the image though. 
Thanks, I will have a go with this tomorrow at work. I'm not sure if Access is installed on the work computer since it's a bare bones rig with IE and Office 2010 and I'm not sure if they opted to uninstalled MS A by default. Would you know if it will work for double sided cards? I want one side with the basic info and image, and the back side with some other less important info that is still unique to the person. 
It's been years since I've done anything with Access, but I'm sure it can be done. 
Thank you! There's not enough basic information about C# like this around. I'm surprised that Microsoft doesn't have more basic program examples on their site. They should have a basic example of every control being used, but I couldn't even find an example of a using a multiselect listbox and passing the list to a method (in my case, in the DAL).
Thank you too. There will be more posts with resources like this soon. =D
An Azure mobile services table is just a table in an MSSQL database so effectively so you're already storing this all in a SQL database. My recommendation for now would be that you just use the code first approach to Azure as it'll allow you to prototype something really quickly. My approach would then be to create a table called something like Message which stores all your messages and have an object like the following class Message { int Id { get;set; } int Sender { get;set; } int Recipient { get;set; } string MessageContent { get;set; } } You can then link your users and messages using Linq on the client such as messageTable.Where(x =&gt; x.Sender == currentlySignedInUser.Id) to get all messages the currently signed in user has sent. I'd encourage you to use the Azure authentication as it really enables you to do some powerful things on the server side with Node.js.
They are running on my local box (those are windows processes)
The double sided piece might be a bit tricky but should be fine - the issue will primarily be lining up the front and back templates. As long as your printer can handle duplex. If you have to do the whole print one side, then go back and print another manually - you might be better off building two separate templates, running the front -reloading and then running the back.
We used to use the CodeDom in a production ASP.NET environment. The problem is that the generated assembly is never released from memory. We have to cycle IIS to clear these out. Migrated to JurrasicJS for our scripting engine. Pretty Happy with that.
You need 2 tables. 'User' and 'UserContent'. The relationship will be many content items for each user. A one to many relationship. The UserContent table will have a column named 'user_id' (int), or named 'UserID' depending on you naming standards, that points back to the User table's 'id' column. 
I would use the PrintDocument class. 
Exactly what I had sketched up last night. Do they both want to be *Microsoft Azure* Mobile Service tables... or do I want one to be the former (table) and the other to be a *Microsoft Azure* Storage? Storage does blob storage... which seemed more ideal for large scale.
Thanks man, I'll definitely remember this.
I am taking time to make sure its secure.
I believe the people above have a bit to share, which may also help you.
Thanks, I will look into it if all else fails.
Yeah, will just keep playing around til I get it right. Thanks for your responses.
I love ExtensionMethods and use it extensively on the FluentSharp APIs that I have published: - http://blog.diniscruz.com/search/label/FluentSharp - http://blog.diniscruz.com/2013/02/what-does-html-fluentsharp-extension.html - http://blog.diniscruz.com/2012/10/using-o2-fluentsharp-repl-in.html - http://blog.diniscruz.com/2013/05/using-fluentsharp-apis-to-refactor-c.html - http://fluentsharp.codeplex.com/ - http://nuget.org/packages?q=fluentSharp 
Sorry, I don't really know anything about Azure. I always use my company's SQL server. Hopefully someone else can help out in that area.
Thanks for everything else man.
Yes, it works the same way. I log uncaught exceptions in the event handler. 
Just because I know that I tried to throw an exception to get out of a method that had a different return type and would not know that anything had gone wrong and it told me that the exception was not caught.
If this is a webpage just add a global.asax file and use the onerror handler. 
Keep in mind that exceptions thrown in threads still need to be handled. Also, here is nice bit of information on catching exceptions in async Tasks. http://stackoverflow.com/questions/5983779/catch-exception-that-is-thrown-in-different-thread
I am not throwing them in a different thread. Here is a sample to illustrate my what I am trying to do. string foo(int i) { if(i &lt; 0) throw new Exception(); if(i &lt; 4) return "Yay!"; // &lt;-- In my program, it fails out here (If I threw an exception) else return "Other"; } void barr() { try { Console.WriteLine(foo(-1)); // Do some vital stuff that somehow depends on foo(...) working correctly } catch(Exception) { Console.WriteLine("Caught exception."); } }
In your Main() method you can wrap anything you do in try/catch, but even more generalized you can do this: public class Program { static void Main(string[] args) { AppDomain.CurrentDomain.UnhandledException += new UnhandledExceptionEventHandler(CurrentDomain_UnhandledException); //do something } static void CurrentDomain_UnhandledException(object sender, UnhandledExceptionEventArgs e) { Exception ex = (Exception)e.ExceptionObject; //log or otherwise do something, maybe exit: Environment.Exit(0); } }
There is good feedback so far but I would suggest googling this simply because there is way more information to be had. For example throwing and or casting exceptions can alter your results. 
I may add that this document needs to be able to be saved/ printed (whichever is easier)
Alright. As others mentioned, there are "global" exception events you can subscribe to. [`AppDomain.UnhandledException`](http://msdn.microsoft.com/en-us/library/system.appdomain.unhandledexception.aspx) is usually my last line of defense for uncaught exceptions. Driving off course here a bit, but if Java exception handling is anything like .NET, you only want to catch the specific exception you know can occur (MSDN reference will tell you what exceptions methods can throw, too) instead of handling `Exception` and destroying your call stack or handling errors you might not have been expecting.
thank you, maybe you can answer a follow-up question? If I want to connect to a MySql database do I have to download a new library? I'm using VS 2012.
http://dev.mysql.com/downloads/connector/net/ Download that and use the file "MySql.Data.dll" it gives you, reference that to your project Also going to PM you some example code
I don't think you'll need any additional libraries. Although, I have zero experience in connecting to MySql databases, it appears there is a MySqlConnection object that you can instantiate using some connection string. From there, you can use datasets and and datarows to retrieve the data from as you would when connecting to any database. I found the bulk of that information in this [article.](http://www.codeproject.com/Articles/71346/Connecting-to-MySQL-Database-using-C-and-NET)
I think the reason a lot more information like this doesn't *seem* readily available with c# examples is because reading code is a universal (and basic) concept used that is not actually language specific. For your example about passing a multiselect listbox isn't completely language specific either, if you consider the actual topic. (see: Passing a parameter into a method). As for understanding how objects work when using a specific library, well... if the library is commonly used, then there will be plenty of official documentation on how to use whatever object you're looking for. for c#, [this library website](http://msdn.microsoft.com/en-us/library/) can be your best friend.
Wpf or winforms? Also what framework? 
winform and .net 4.0 I think. Whatever visual studio 2012 uses.
Then XML might be a better choice as it more readable. Also, you don't necessarily have to write it manually: if your character is represented by a class (which I cannot think why it shouldn't) you can write/read the XML using XmlSerializer.
I never use Access databases. Can you use Linq to SQL with accdb? EDIT: also can you post what you have tried so far? You'll get much better responses.
Thank you for this, I didn't know global exception events were a thing
this process seems silly, but this will work for you. use ADO.net to read the Access database, loop through and add rows to a new data table. when done point to data table to the data source of your grid. access creates a lock file when opened the folder is in has the proper security permissions for the user context you're app is going to run under. tl;dr: ado.net Â» access file Â» new datatable Â» grid.datasource = [the new datatable] 
Thanks, I'll see if I can get this to work.
Not sure if you already solved this, but it should be quite easy with XAML. Just declare all of your resources in a resource dictionary in a separate XAML file, then create different copies of the file for the different users by customizing the values. From what I understand you have a different package for each customer, so you can just include the appropriate resource file for each package. The rest of your UI can simply refer to the resources you have defined (strings, color, brushes, images, etc) from your XAML UI by name using StaticResource. Hope this helps.
I actually always do the 2nd. Coming from PHP I really love the static types, IDK why it just feels a lot better to me than dynamic types in PHP, and Var in C#
I noticed this method in Form1.cs private bool checkLocale(string localization) { bool returnBool = false; // Return true/false for validity switch (localization) { case "ca-ES": returnBool = true; break; case "da-DK": returnBool = true; break; case "de-DE": returnBool = true; break; case "en-AU": returnBool = true; break; case "en-CA": returnBool = true; break; case "en-GB": returnBool = true; break; case "en-IN": returnBool = true; break; case "en-US": returnBool = true; break; case "es-ES": returnBool = true; break; case "es-MX": returnBool = true; break; case "fi-FI": returnBool = true; break; case "fr-CA": returnBool = true; break; case "fr-FR": returnBool = true; break; case "it-IT": returnBool = true; break; case "ja-JP": returnBool = true; break; case "ko-KR": returnBool = true; break; case "nb-NO": returnBool = true; break; case "nl-NL": returnBool = true; break; case "pl-PL": returnBool = true; break; case "pt-BR": returnBool = true; break; case "pt-PT": returnBool = true; break; case "ru-RU": returnBool = true; break; case "sv-SE": returnBool = true; break; case "zh-CN": returnBool = true; break; case "zh-HK": returnBool = true; break; case "zh-TW": returnBool = true; break; default: break; } return returnBool; } One way to shorten the method would be to re-write it as: private bool checkLocale(string localization) { switch (localization) { case "ca-ES": return true; case "da-DK": return true; case "de-DE": return true; case "en-AU": return true; case "en-CA": return true; case "en-GB": return true; case "en-IN": return true; case "en-US": return true; case "es-ES": return true; case "es-MX": return true; case "fi-FI": return true; case "fr-CA": return true; case "fr-FR": return true; case "it-IT": return true; case "ja-JP": return true; case "ko-KR": return true; case "nb-NO": return true; case "nl-NL": return true; case "pl-PL": return true; case "pt-BR": return true; case "pt-PT": return true; case "ru-RU": return true; case "sv-SE": return true; case "zh-CN": return true; case "zh-HK": return true; case "zh-TW": return true; default: return false; } } However that's still not great. You can do: private bool checkLocale(string localization) { var validLocalizations = new List&lt;string&gt; { "ca-ES", "da-DK", "de-DE", "en-AU", "en-CA", "en-GB", "en-IN", "en-US", "es-ES", "es-MX", "fi-FI", "fr-CA", "fr-FR", "it-IT", "ja-JP", "ko-KR", "nb-NO", "nl-NL", "pl-PL", "pt-BR", "pt-PT", "ru-RU", "sv-SE", "zh-CN", "zh-HK", "zh-TW" }; return validLocalizations.Contains(localization); } At which point you can then move the `validLocalizations` list to a field, so that you don't have to create a new object each time the method is called.
Does it recognise every game? Could you post a guide on how to set it up etc.? Props to you for making this :) upvote to you
wow this is cool. Thanks for sharing. What do you use/need it for?
I use it to control steam and games, as well as giving key binds to voice commands within specific games.
could you give me an example? Why would you need anything from steam while already playing a game?
http://msdn.microsoft.com/en-us/library/ms229042.aspx http://www.amazon.com/Net-Coding-Standards-David-McCarter/dp/1105744744
While out of game you could install or uninstall games, or just control steam like you would a mouse. In game you could say "reload" and it would press r. The big thing for me was big picture mode. When you chat in big picture, it's awkward. This keys you dictate. Oh also this program works when not in focus, so you could install games or whatever without leaving your game
Nice work, this seems like a cool little tool. Be sure to add a licence so that people actually know what you mean when you say 'Open Source'. See: http://choosealicense.com/ Or: http://www.tldrlegal.com/
I'm self taught so I'm not familiar with most of your usual formatting. I've always preferred camel case because it's easy for me to read. I'll make sure if I plan to release source for other projects, to begin with Capital letters. Ending with class was actually a late night mistake. I was debugging and dead tired at like, 4 in the morning and had done that and the next day added code before realizing what I had done. It would've been a meager change, but everything worked so I left it. The Classes folder, or Forms folder for that matter, were just for my organization. I hadn't intended this project to be open source from the get go, so it was just something simple. Making the webclient into an actual object, sure, but the project is very simple and there's no need to overcomplicate. The entire workload is three steps (load JSON, load any override files, start the voice recognition) with just very strongly enforced logic in a loop. I suppose if this were something professional, I could break it out and keep the UI on the form and the rest somewhere else but the UI is really there to know it's running. All this being said I really like your tips and will be noting where my normal practices usually fall compared to these suggestions to help me in the future. Thank you.
I would put them in a Models folder, because they represent the model objects I use and will fill with json data. "Data" is where I might put data access code like the object that fetches data and populates Models. The key really is giving the reader of your code some idea behind the intention of those classes. Often times the reader is you, six months down the line. I know for me it's saved me a lot of time to use conventions like this.
&gt;I've always preferred camel case because it's easy for me to read The .NET standard is [Pascal Case](I've always preferred camel case because it's easy for me to read) which is very similar to camel case with the exception that Class, property and method names start with a capital letter. btw - private variables are camel cased. That helps distinguish them. &gt;Making the webclient into an actual object Even on a simple project, seperation of concerns can be a lifesaver in that it helps you track down bugs and make changes without unintentional introducing more bugs. Check out the [Solid Principles](http://en.wikipedia.org/wiki/SOLID_(object-oriented_design)) This is all more advanced stuff, but it's good to keep an eye on it. And as mentioned good job on open sourcing your project! 
If I end up doing a pull request for this project, do you mind if I use this?
Hey FW, I'd like to help out with this. I've submitted a pull request and I'm happy to take you through it if we can make the timezones match up.
Oh. I've never really used git. I thought that the point of using it was so that other people could do that exactly. Ok well I'll go authorize the request. Feel free to do whatever to it. I only open sourced it because I was 'done'.
Question, will switching it to 'ServiceStack' break anything?
Cool. Well I'm open sourcing it because I was 'done' with it. I just am very busy with life and aside from it getting to the point where I can't think of much to add to it, I figured that people more talented than me could make this into real magic. Maybe someone will come along and fix my noobie mistakes.
I generally prefer MIT to GPL, because it's far less restrictive in the ways that other people can use your code. That said, some people prefer the GPL for the same reason.
No, it's just a personal preference of mine. I just find it more developer friendly than JSON.Net. What do you think of the rest of my changes?
Cool, it's in the current build now (pull request merged, woot!)
I like all the changes you've made. I'm just familiar with JSON.net which is why I used it. If that's more developer friendly, then it'll help anyone else who wants to edit this.
This went from a hour long "I wonder what happens if I add the names from steam games as grammar into a voice recognizer" to this (mostly redditors suggesting things). I know it can be improved from top to bottom, but I didn't have the benefit of planning beforehand to make sure everything was in a good place.
That was super helpful btw!
My hosting provider is having issues on the server, so the link takes a while to load (but it does, in fact, load). I will likely be moving to a different server, or simply over to Azure in the near future. Sorry for the inconvenience. Had I known it wasn't fixed, I wouldn't have posted. Grrr. 
Just a question: why would you want to do that? 
No worries, I don't mean to call out "mistakes" per se. Just offer some advice for improvement, please don't this as a harsh critique. I just think as developers we should look out for each other and offer advice to help us all move forward.
Lol no doubt. I actually reacted caustically to a lot of criticism taking it as people pointing out my faults instead of trying to be helpful. More coffee is needed for me to think rationally! I think the best things I've learned was to break my processing out of the UI (everything I've done has had the logic and processing in the same file as the form, because I'm a visual learner which made things easier) and naming conventions. But re-reading the comments now, I think my code can't be too bad, if the only complaints are style rather than the code itself. I really do appreciate the help!
There are a number of reasons, I might want to do this. These various pointer types are useful for a wide variety of resource management tasks. For example, one might have a dispose method be called whenever a reference counted handle to a file is released.
Oh I'm sure my changes aren't all proper (the generic method to load the right JSON is a little bit hacky) That said, if you're repeating the same (or very similar) code, it's a good sign there's probably an easier way to do it.
But again, there is no file handles in C#: it is all managed objects. I'm just a bit confused on why you want to use pointers and do manual memory allocation in a fully managed runtime.
I'm afraid you can't treat C# like it's C or C++. C# is a memory-managed language with a garbage collector. For the most part, you won't have to care about manually allocating and deallocating objects (though it is very useful to understand how the GC handles disposal). As for a dispose method, the .NET Framework has an interface called [IDisposable](http://msdn.microsoft.com/en-us/library/system.idisposable.aspx) that has a Dispose method.
That sounds a lot like what I have been reading about [rust](http://www.rust-lang.org/). As far as an API goes, I don't think you will get much simpler than new, fixed, and unsafe. Also consider that you have no destructors in C# so unless you have something really clever in mind (please do share) I don't think you will be able to achieve your goals. If you are OK with Windows only perhaps C++/CLI is what you are looking for? Maybe as a mixed mode assembly that can be used by C# although destructors still won't be called by C#.
Yes. I'm planning to do this!
&gt; has anyone come across this and perhaps found the problem and a solution? No. Barring proof of a bug in the core library, assume you have a bug in your code. Since you haven't shown any code, no one can show you where that bug is.
Just bought Xamarin last night. Anyone have any experience with it?
Thanks for posting this. I'm relatively new to C# and this is a part of C# I haven't really been exposed to.
When you say go native what do you mean? Java interop? Xamarin is native and targets the Dalvik virtual machine.
Right, and there is no java, and you can make a full app with Xararin, great and all. But many standard usability libraries like the standard ActionBarSherlock are in java. That said someone was nice enough to port a version to C#. But many of these standard libraries that make the experience for the user great rather than basic, are missing and can't be added. So as I said before I believe Mono is great for bashing out quick apps that use nothing but the most basic of tools and nothing too advanced. But if you want to get a feature rich application that can take advantage of the very shinny libraries out there, it's just not possible.
&gt; and can't be added. Why can't they be added? (rewritten in C#)
Thank you, for reading! Yeah, the web stuff is a different world with a lot of moving parts. 
I don't see why they couldn't be added since (as you stated) Mono targets the Dalvik VM directly. Even so I don't see why native wrapper libraries (targeting the NDK) couldn't be written using the Mono native interop.
I have used it professionally for over a year on a popular app which runs on iOS, Android, and WP7/8. Anything in particular you're interested in?
You can use these java libraries by creating bindings for them. Same thing with iOS apps. They have a lot of bindings that were already created on github somewhere http://docs.xamarin.com/guides/android/advanced_topics/java_integration_overview/binding_a_java_library_(.jar)
IIRC on Android they're running in their own VM, not using Dalvik edit: from the Xamarin docs Xamarin.Android applications run within the Mono execution environment. This execution environment runs side-by-side with the Dalvik Virtual Machine. Both runtime environments run on top of the Linux kernel and expose various APIs to the user code that allows developers to access the underlying system. Both Mono and Dalvik are runtimes written in the C language.
Thanks for clearing that up. That's even more reason why the standard libraries should have the ability to be ported since Dalvik and Mono should have access to the same native APIs barring Google having special treatment for Dalvik that cannot be achieved with native C++.
I just posted this in the /programming version of this post: I was really excited to use Xamarin until I spent 2 months with it attempting to port http://bit-shift.com/icontroldcs/index.html. $300/dev/platform/yr to start on any project of meaningful size. Which doesn't give you Visual Studio support so you have to use Xamarin Studio (VS support is $1000/dev/platform/yr) Updates that constantly break things. Important things, like licensing. Having to translate native concepts to a .NETish way of doing things. You can only activate your development license on a limited number of computers (I think two). I paid for a license, let me run it on how ever many computers (Or VMs) I personally use. I had a prototype up and running pretty quickly with Xamarin since I was able to take a lot of my .NET code and slide it right in. Then my trial time was up and I had to make the decision on whether or not to pay. Everything I just mentioned built up to a point where I was just too frustrated with it and the way the company seems to carry itself. They're more interested in taking your money and restricting what you can do with the product than giving developers a great platform that they want to use. I gave up and went native. Such a shame because I loves me some .NET and I was hoping this would let me develop things on multiple platforms a lot faster and more consistently. Unfortunately it was nothing but headaches. I'm ending up with a better understanding of Android and ultimately a faster application because of it. The learning curve was much steeper going native but once I got over that, I'm cruising just as quickly as if I were using .NET now. If you've got a ton of back end business logic, not much UI, have a team of .NET developers, and money to blow, it might make sense. If you're independent, it's probably worth your time to learn how to do things natively.
Honestly, I'm still too early into using it to have any meaningful questions. I know Obj-C fairly well, but I've started learning C# and greatly prefer C# already. Do you feel limited at all with Xamarin? Do you feel like you are missing out by not using Obj-C?
Thanks. Will definitely take a look at those links.
One of the bigger complaints about the new licensing model is the lack of VS support in the indie package. It's really the only reason for indie devs to want an upgrade but 700$ difference is just too much for it (and that's for each platform). They need to find other features to differentiate the business edition. I can't complain though, I was grandfathered in to the Business plan with the 249$ renewal cost The computer licensing issue is better now that they got rid of that 3 license recycles a year limit. I completely understand why they're limiting the number of installs. I saw enough companies installing dozens of dev workstations while only having one MSDN account with 5 licenses. While Microsoft can afford that cost and make it back on server software sales, Xamarin just can't 
I wasn't an iOS developer previously, so I can't speak to that. I did Android previously. As such, what I can say is that a lot of the new cool Android development features are unusable through Xamarin/Mono (for example traceview only shows you things that happen on the dalvik side, which is largely useless). That said, logging and C-esque style time tracking is adequate for profiling and Xamarin Studio/Monodevelop are capable, if buggy, debuggers. Since Xamarin compiles to native for iOS a lot of the normal tooling works for profiling, stack traces, etc. Everything doesn't though e.g. crashlytics. Edit: Is is noteworthy that you should be OK with the idea of changing native concepts to .NET/C# concepts. You should also accept that some features on one platform are unavailable on another (e.g. volley on Android may work via Xamarin, but it still doesn't exist on iOS). Edit2: Another important note is that you, if you want to write portable code, end up running into issues with UI and distinct platform issues/caveats/limitations/design decisions which tend to be best solved by havng an interface, dependency injection, and a lot more thought than one might hope. The less complex your application the less you have to worry about my second edit. Edit3: Typos
&gt; That said someone was nice enough to port a version to C#. Maybe I'm overlooking something, but my understanding is all Java Android libraries can be used via JNI. My company uses ABS and a couple other libraries with minimal issues after generating bindings with the tooling Xamarin provides.
I love working in MVC, though I think the default routing schema is too rigid - I use [AttributeRouting](http://attributerouting.net/) because it's very flexible and intuitive. Just make sure you have the right version for WebAPI vs MVC Actions (though that seems to be a trend with MVC).
Could you post your control source?
We've been pushing hard to bring PCL support and we're almost there. Hopefully this should be available soon. It's definitely high on our priority list. 
Only two things that I prefer: 1. The **Not** keyword - so much easier to see and read than **!**. 2. WinForms event handling. With a caveat - VB is easier to set up event handling for 99% of cases, but C# gives more control over the few instances where you have to do some really nuanced interceptions.
XML literals are really cool, but I haven't found many good use cases for it yet.
Yes, the projects are released under the apache 2.0 license meaning private use and redistribution is possible without committing back. Only the licensees and correct notices must be applied and pushed forward to the receiver of the source or bin.
It's not the same post. One looks at MVC routing, and one examines the differences between MVC and Web API. They are similar, but not the same. Of course, you knew that, because you followed the link and read the post before commenting, of course . . . ;-)
I would take a look at your code because this sounds kind of cool to take a peek at but the download comes from mega.co.nz. Why not post it to github, codeplex or some other trusted source? A link like this just smells of spam and/or malware.
The car project sounds so amazing. I've been wanting to start tinkering with car stuff for so long. But I've never really known where to begin.
I am a single software developer who purchased Xamarin a few months back for one of my projects and can't recommend it more highly. It really makes cross-platform mobile development a breeze. Keep up the good work guys!
I will upload to github asap
I got my hopes up that this was Xamarin.Android going open source...
No, you get [this](http://serayen.com/csharp-type-infer.png) error.
Thanks, TIL.
You get this: Cannot assign 'null' to implicitly-typed local variable.
So I guess they thought of everything.
Well, if you already know how to handle serial connection IO you can look up something called a [Fusion Brain](http://www.fusioncontrolcentre.com/FusionStore//catalog/index.php?cPath=25&amp;osCsid=f77c4b912914bff67efae3ac31acc666) Or, if you're feeling adventerous you can attempt to make your own adapter. Then, you can send the serial streams to your computer, at first I made it send it as packets to my step dad's computer and he would handle the IO. It's pretty cool, long project though. We're still actively working on it today and it's been 2 years in the making lol.
C# is not Java
1. I do agree with you! 1. I do not agree with you. Hmmm...
This db is currently a POC, but does support - Unit of work / Sessions - Transactional writing - querying - In memory mode - MIT Licence These features are probably buggy and could do with optimization, but it would be great to get some others interested, so we could find those bugs and bottlenecks, and get em sorted!
Not much to contribute to what she is writing, but I just wanted to say: Reading about her carreer makes me feel miserable and like an underachiever (and I felt pretty good beforehand). Amazing!
I learned about it originally from Dan Appleman's 'http://www.amazon.com/dp/0672315904' I wouldn't expect you to buy a vb6 book but he covers it well. The main thing to understand is that the functions come from Window's unmanaged API and the documentation is often written using C++ for examples. http://msdn.microsoft.com/en-us/library/aa288468(v=vs.71).aspx Check this site too: http://pinvoke.net/
thanks for the links, i'll check them out
I'll second pinvoke.net. i haven't done this stuff in years but that site is burned in my memory. Also one things examples never did a good job of explaining (to me at least) is make sure any in-memory objects you pass to unsafe code are set to unsafe mode. If you don't the garbage collector can move objects around and all of a sudden the unmanaged calls are writing to the wrong location in memory. I'll see if i can find an example when I'm not on my phone. Edit: I was talking about the 'fixed' keyword: http://msdn.microsoft.com/en-us/library/f58wzh21(v=vs.80).aspx 
 Dim con As New OleDbConnection("Provider=Microsoft.Jet.OLEDB.4.0;Data Source={mdb};Jet OLEDB:System Database={mdw};User ID={usr};Password={psw};") Dim cmdString = "SELECT * FROM " &amp; TableName Dim cmd As New OleDbCommand(cmdString, con) Dim dTable As New DataTable Try con.Open() var dReader = cmd.ExecuteReader dTable.Load(dReader) Catch ex As Exception MsgBox(ex.Message) End Try Dim bs = New BindingSource bs.DataSource = dTable dgv.DataSource = bs Here, dgv is a DataGridView... any reason why you prefer a DataGrid? EDIT: Oops, thought I was in /r/visualbasic... here it is in C# (auto-translated, might need a few adjustments...): OleDbConnection con = new OleDbConnection("Provider=Microsoft.Jet.OLEDB.4.0;Data Source={mdb};Jet OLEDB:System Database={mdw};User ID={usr};Password={psw};"); var cmdString = "SELECT * FROM " + TableName; OleDbCommand cmd = new OleDbCommand(cmdString, con); DataTable dTable = new DataTable(); try { con.Open(); var dReader = cmd.ExecuteReader; dTable.Load(dReader); } catch (Exception ex) { Interaction.MsgBox(ex.Message); } var bs = new BindingSource(); bs.DataSource = dTable; dgv.DataSource = bs; 
You can add a couple steps to your code. 1) do a post to the login page with your credneitlas 2) SAVE THE COOKIE 3) reuse cookie to post to the memberlist page and get the html now that you are logged in. I use this CookieAwareWebClient class so I dont have to manage the cookie myself, if you use this and you do a second request with the client, it will have the cookie from the first one still. using System; using System.Net; namespace Utilities.Web { public class CookieAwareWebClient : WebClient { public CookieAwareWebClient() : this(new CookieContainer()) { } public CookieAwareWebClient(CookieContainer c) { CookieContainer = c; } public CookieContainer CookieContainer { get; set; } protected override WebRequest GetWebRequest(Uri address) { WebRequest request = base.GetWebRequest(address); if (request is HttpWebRequest) { (request as HttpWebRequest).CookieContainer = CookieContainer; } return request; } } }
Appleman's book is how I learned about API functions. I can 2nd this one enough. That Pinvoke site looks pretty awesome. Thanks!
Have another beer!
Apparently it only comes with VS Retail version, not express. I'm working with express so i dont think il be able to use it
I didnt mean use (it is stand alone though and I think might still come from the windows sdk or something) but what I meant was for you to actually right a simple program that will let you traverse and explore windows and their children via handles. Some places to start looking at this: http://msdn.microsoft.com/en-us/library/windows/desktop/ms633515(v=vs.85).aspx http://www.pinvoke.net/default.aspx/user32.getwindow http://msdn.microsoft.com/en-us/library/windows/desktop/ms633504(v=vs.85).aspx http://www.pinvoke.net/default.aspx/user32/getdesktopwindow.html Hint: The desktop window is the parent of all other windows. 
I think you've swapped Declaring and Assigning in the comments of your example. I like what you're doing though.
I will get you some code when I get home from school in about 3 hours, but addressing the code you just sent, the current flow of the code is this: Form queries database for order numbers of unsent orders &gt;&gt; Form populates combobox with order numbers &gt;&gt; when the index of combobox is changed to a valid order number a more indepth query is done to gather all data on the order&gt;&gt; a new "Order" object called "ChosenOrder" is instantiated and defined using an arraylist that contains the data from the query&gt;&gt; This is where I'm stuck because i need to send this "ChosenOrder" to the various button click events in order for them to use the information of the order to populate some documents. Does the code you posted address this? 
Yes. button_clicked(object sender, EventArgs e) { var selectedItem = orderArrayList.First(x =&gt; x.OrderNumber == comboBox1.SelectedText)); } or button_clicked(object sender, EventArgs e) { var selectedItem = orderArrayList[comboBox1.SelectedIndex]; } the latter assumes the indexes of the ArrayList and ComboBox Items are the same. I'd go with the first replacing OrderNumber with whatever your actual property is called.
http://msdn.microsoft.com/en-us/library/system.io.streamreader.read(v=vs.110).aspx
Sounds like a scoping issue. Please clarify each step if needed: You have an object called "ChosenOrder" which is being hydrated with the event (comboBox1_selectedIndexChanged). In the button_clicked event, you should be able to access the ChosenOrder object. If you cannot, your ChosenOrder is 'out-of-scope' and needs to be moved to another location or possibly the access modifier (public, private, protected) needs to be changed. The most obvious option is to [make ChosenOrder a global variable](http://stackoverflow.com/questions/1293926/c-sharp-winforms-global-variables) (and accessible across your whole app) but this is generally a poor habit unless you really need the object accessible across everything. I come from a web background but here is an example of bad scope in C#: `comboBox1_selectedIndexChanged()` { var ChosenOrder = (Order)comboBox1.SelectedItem; } `button_clicked()` { // This will not work as ChosenOrder is defined in comboBox1_selectedIndexChanged // this method cannot access ChosenOrder because ChosenOrder's scope is limited to the // comboBox1_selectedIndexChanged method. var OrderToProcess = ChosenOrder; } Now for good scope: `protected Order ChosenOrder = null;` `comboBox1_selectedIndexChanged()` { // No need to instantiate ChosenOrder since it is defined above. Just assign the variable ChosenOrder = (Order)comboBox1.SelectedItem; } `button_clicked()` { // This now works as ChosenOrder is accessible to all events and methods // Just handle validation since ChosenOrder is set to null when defined. // Ex: if this event is triggered before comboBox1_selectedIndexChanged, // ChosenOrder can be null which might break this event's code. if(ChosenOrder != null) { ProcessOrder(ChosenOrder); } } 
Something like this: var client = new CookieAwareWebClient(); client.Headers.Add("Content-Type", "application/x-www-form-urlencoded"); var nvc = new System.Collections.Specialized.NameValueCollection(); nvc.Add("username", "ultranoobian"); nvc.Add("pword", "password123"); client.UploadValues(@"www.site.com/login.php") You'll have to see on the &lt;form&gt; what the name= is on the &lt;input&gt; for username and password. that is what the first string should be on nvc.Add()
If you have to do this in a Winforms application, and your backend DB is SQL Server, you could look at hooking your App up to Reporting services. There are some fairly easy to use Reporting Services Components you can drop onto your forms.
Thanks for the response. Had to put this project on hold for now while we look into other options. The server is disconnected in that we are issued with mdb tables /files
Unit testing thread-safety in C# based on a very basic example
I've wanted this for years, it could enable some awesome use cases. You should cross post to [/r/programming](http://reddit.com/r/programming). 
Be my guest!
The only problem with this is it'll throw an exception if the value is null, any ideas how I can deal with this as the file contains a lot of null values?
Maybe start by making a sort of (mini) FAQ with links for people to get started or when they need help. A few helpful ones would be MSDN, DotNetPerls, Channel9. Maybe mention Mono (for Linux and Mac). Also things like good C# books, blogs, news websites, links to the dotnet and aspnet reddits.
See this research on thread-safe unit testing for Java.. http://www.cs.umd.edu/~ayewah/web/pubs/UnitTesting-ASE2007.pdf
I appreciate the input! The sidebar is going to be the first thing I tackle when I have some time, I'll make a post about it so we can collaborate on the best links.
This isn't necessarily the *best* intro, but this MSDN article describes it: http://msdn.microsoft.com/en-us/library/1t3y8s4s%28v=vs.110%29.aspx - Nullable Types (C# Programming Guide)
i'm not sure people are understanding, the combo box contains an order number that is used to do a query to get the 17 properties of the "Order" class which is instantiated as the the ChosenOrder object. It seems like people think there is a link between the chosen index and the object, the chosen index is only used as a parameter to query for the full list of properties that are required to define the object's properties. To make it clearer: 1. The user chooses an index from the combo box 2. The system uses that index ( an order number) to query for the full order data. 3. The order data is put into an array list 4. The arrayList is used to define the properties of an Order object, for the sake of my sanity this object is named "ChosenOrder" Now if what your saying is I can't get ChosenOrder (once again an order object with 17 properties) over to another event, then I more understand your solutions. What this form needs to be able to do is have the user choose an order, and then each of the three buttons effects that order while its selected. What you guys are saying can work if I want to create to do that query to create the Order object in every single button click event, but isn't there a way to simply pass an instantiated object to them instead? 
I really liked WPF when I last used it, which was in 2006. Does anyone know if it's changed much since then?
Here is my code, with database info removed. &lt;script src="https://gist.github.com/anonymous/6134909.js"&gt;&lt;/script&gt; using System; using System.Collections; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows.Forms; using MySql.Data; using MySql.Data.MySqlClient; namespace ShipperApplication { public partial class Form1 : Form { public Form1() { //Connect to internal database to gather unsent order numbers. InitializeComponent(); string MyConString = "server=;" + "uid=;" + "pwd=" + "database="; MySqlConnection connection = new MySqlConnection(MyConString); MySqlCommand command = connection.CreateCommand(); // Define query command.CommandText = "select order_no from orders;"; // Attempt to connect try { connection.Open(); } catch (MySql.Data.MySqlClient.MySqlException ex) { MessageBox.Show(ex.Message); } // Populate datasource from queried order numbers ArrayList orderNumbers = new ArrayList(); MySqlDataReader Reader = command.ExecuteReader(); orderNumbers.Add("Select"); while (Reader.Read()) { orderNumbers.Add(Reader[0]); } comboBox1.DataSource = orderNumbers; // Close connection connection.Close(); } private void label1_Click(object sender, EventArgs e) { } private void label2_Click(object sender, EventArgs e) { } private void comboBox1_SelectedIndexChanged(object sender, EventArgs e) { int selectedIndex = comboBox1.SelectedIndex; Object selectedItem = comboBox1.SelectedItem; string MyConString = "server=;" + "uid=;" + "pwd=;" + "database=;"; MySqlConnection connection = new MySqlConnection(MyConString); MySqlCommand command = connection.CreateCommand(); command.CommandText = "select * from orders where order_no =" + selectedItem.ToString() + ";"; try { connection.Open(); } catch (MySql.Data.MySqlClient.MySqlException ex) { MessageBox.Show(ex.Message); } ArrayList tempOrderStorage = new ArrayList(); // Populate a buffer that holds the order properties if (selectedItem.ToString() != "Select") { MySqlDataReader Reader2 = command.ExecuteReader(); while (Reader2.Read()) { for (int i = 0; i &lt; 17; i++) tempOrderStorage.Add(Reader2[i]); } // Create and define the chosen order object Order ChosenOrder = new Order(); ChosenOrder.OrderNo = Convert.ToInt32(tempOrderStorage[0].ToString()); ChosenOrder.PartNum = tempOrderStorage[1].ToString(); ChosenOrder.Description = tempOrderStorage[2].ToString(); ChosenOrder.Price = Convert.ToSingle(tempOrderStorage[3].ToString()); ChosenOrder.Quantity = Convert.ToInt32(tempOrderStorage[4].ToString()); ChosenOrder.Name = tempOrderStorage[5].ToString(); ChosenOrder.ShipAddress = tempOrderStorage[6].ToString(); ChosenOrder.ShipCity = tempOrderStorage[7].ToString(); ChosenOrder.ShipZip = tempOrderStorage[8].ToString(); ChosenOrder.ShipState = tempOrderStorage[9].ToString(); ChosenOrder.CcNum = tempOrderStorage[10].ToString(); ChosenOrder.BillAddress = tempOrderStorage[11].ToString(); ChosenOrder.BillCity = tempOrderStorage[12].ToString(); ChosenOrder.BillZip = tempOrderStorage[13].ToString(); ChosenOrder.BillState = tempOrderStorage[14].ToString(); ChosenOrder.ExpDate = tempOrderStorage[15].ToString(); ChosenOrder.OrderStatus = tempOrderStorage[16].ToString(); //Activate the buttons button1.Enabled = true; button2.Enabled = true; button3.Enabled = true; } else { button1.Enabled = false; button2.Enabled = false; button3.Enabled = false; } } // Print packing slip button private void button1_Click(object sender, EventArgs e) { } // Print Shipping label button private void button2_Click(object sender, EventArgs e) { } // Verify shipment button private void button3_Click(object sender, EventArgs e) { } // Exit program button private void button4_Click(object sender, EventArgs e) { } } }
Fancy linking them tutorials? Thanks in advanced.
1. Delete `Order ChosenOrder = new Order();` from `comboBox1_SelectedIndexChanged` 2. Add a new line before `public Form1()` and after `public partial class Form1 : Form {` 3. On that new line, add `protected Order ChosenOrder = null;` 4. In one of the button click events, you can access `ChosenOrder` and write code against it. This will get you an Order object called `ChosenOrder` that is accessable to everything inside of `Form1`, including events and methods. `ChosenOrder` is null until `comboBox1_SelectedIndexChanged` is executed and sets the peoperties for `ChosenOrder`. After `comboBox1_SelectedIndexChanged` has fired, `ChosenOrder's` properties are retained. Now when a button click event happens, you can use `ChosenOrder` which will have the properties set in the index changed event.
**Sample Code with my custom Order class** namespace ShipperApplication { public partial class Form1 : Form { protected Order ChosenOrder = null; public Form1() { // Your Code } private void comboBox1_SelectedIndexChanged(object sender, EventArgs e) { ArrayList tempOrderStorage = new ArrayList(); ChosenOrder.OrderNo = Convert.ToInt32(tempOrderStorage[0].ToString()); } // Print packing slip button private void button1_Click(object sender, EventArgs e) { Console.Write(ChosenOrder.OrderNo); } protected class Order { public int OrderNo; } } }
This is the first thing I looked for when I found this place a few weeks ago. Searching through /top has been helpful, but a more visible starting guide would be wonderful.
this sounds super promising, thank you!
Could you just nest a List object for partnums in your order object? You could add as many partnums as you wanted.
How about a List?
Such an easy solution! Thank you!
Also: http://msdn.microsoft.com/en-us/library/gg405484(v=pandp.40).aspx
Yes you can do this using params in the constructor and a list or array. I'm on mobile now so can't give code example but just google params and variable length arguments. I hope that helps! Edit: [here](http://msdn.microsoft.com/en-us/library/w5zay9db(v=vs.71).aspx) is an msdn article on params
God, yes, lists or arrays. Whenever you feel the urge to start numbering your variables it's a good sign that you should upgrade to a List.
A bit late in responding, but I've been using [ssh.net](http://sshnet.codeplex.com/) for all of my ssh/sftp needs.
Sometimes you just get lucky! Also, she sounds very much like an extrovert which I'm sure helped her quickly make the connections she needed to get where she is right now.
expandoobject. I blog about it here http://www.newmodifier.com/2013/02/6-simple-newer-cnet-features-you-may.html?m=1 
I suggest [Dot Net Perls](http://www.dotnetperls.com) as a great place for reference and code examples. This has helped me quite often in my beginning days. Would also like to suggest [C# 5.0 in a Nutshell](http://shop.oreilly.com/product/0636920023951.do). Often I find this easier to pick up than to search MSDN.
Quick glance because I have to go now, but so far everything looks good to me. I did notice that in some cases you use Console.Writeline. I'm guessing this is for debugging. Maybe it's good to wrap that around in region tags and exclude it from non-development builds or use a logger that can be customized.
I'd be interested in helping to moderate and grow this subreddit. Reddit needs to have more dotNet-based programing threads, for some reason the technology is severely underrepresented on reddit compared to the real-world use of it by developers.
I'm curious to know what you hate about dot net perls. Personally I found it to be the better websites for beginners.
Maybe I'm just to focused on my personal needs, but Dot Net Perls pages invariably take far to long to get to the point, and when they do, it's usually not actually helpful to me. When I'm reading a site like .NET Perls or SO, it's because I have a specific problem I'm trying to solve. SO either gets me a direct answer or a link to the MSDN page I need to read far more often than any other source. ^(I also find their layout to be godawful. Ugly and impossible to read efficiently, but I've been told by others that that's just me.)
Add the #C# irc channel on Quakenet. 
I get a lot of cool extensions for VS off of Visual Studio Gallery. Could be worth including... visualstudiogallery.msdn.microsoft.com/
Debug.WriteLine serves exactly that purpose.
You could use an anonymous object: var parts = new { Part1 = "Part", Qnt1 = 3 }; or var parts = new { Part1 = "Part", Qnt1 = 3, Part2 = "Another part", Qnt2 = 5 }; You also have Tuples which are generic and can contain several items. So you can use the Tuple class stand-alone or implement the tuple-class into your own class.
Very good ideas, thanks!
Please don't do the Tuple thing.. Create your own struct/class whenever it is more than just generic stuff and save yourself (and everyone after you) the nuisance of dealing with questions like "oh was it Item1 or Item2 I am looking for? Or was it Item3? What about a combination of Item1 and Item3?"
why did this get downvoted? ExpandoObjects are a way to do that, it just does not fit OPs purpose
When you start to give fields iterating numbers, that is an almost 100% sure bet that you have a problem within your architecture. As mentioned, a simple List would do what you want it to do. Also, you should think about separation of concerns, e.g. break up your class into different interfaces (or maybe in your case an abstract base class), concentrate the things that all your objects have in common into one (or seperate) interfaces (or a single base class) and add the things that make the objects special to dedicated interfaces/implementations
I also had a quick glance. The coding in the overall is not bad, these are some of my observations: 1) You could use the .NET settings instead of your homegrown settings file. The native settings also support per user/per application out of the box and are much more robust. Alternatively I would look at XmlSerializer or DataContractSerializer to write/read the file instead of doing your own parsing. 2) Still on Options class, you could make the Get method generic to be able to pull out the values with the correct types without having to cast or parse from the calling code. Something like this: public static object Get&lt;T&gt;(string key, T defaultValue = default(T)) { if (optionsDict.ContainsKey(key)) { try { return (T)optionsDict[key]; } catch { return defaultValue; } } else { return defaultValue; } } 3) Again, on the Options, when you read values and parse them you have no error handling: this means that if somebody modifies the settings file and puts invalid data the program will crash. 4) In the Helper class there is no reason to have your own random file name generator, just use Path.GetRandomFileName(). Also, even if the name is random there is always a slight chance that a file with that name exists on disk: if that is the case and you don't want to overwrite, you should check for existence and generate a new name in that case. 5) Hard-coded FTP credentials. This made me cringe a little bit: why? This means that to use this feature I have to compile the app myself? Why not have the user enter the credentials in the UI and store them in the settings (encrypted of course)? 6) Most of the classes should be marked internal as they only have use inside of your application and there is no reason to expose them to the outside world. 7) Again, it is a self contained application and not a library, but it is usually good practice to check your parameters at the beginning of the method for null or invalid values. 8) I would look into making a clear cut separation between the encoding logic (put it into a separate assembly) and the UI using interfaces. This way if you, say, want to redo the UI in WPF or Silverlight in the future you can reuse your encoding code without having to redo everything. Have to go to a meeting now, I hope this was helpful feedback.
Forgot about that one. Usually I use NLog and that writes to console on development and to a logfile/service otherwise.
What about NuGet ;)
Thanks for the detailed reply. I have been learning C# for about 2 and a half years so there's bound to be things that I have messed up On note 2, you put the following: &gt; public static object Get&lt;T&gt;(string key, T defaultValue = default(T)) I have seen the use of T before but I dont know what it does so that's why I haven't used it &gt; Hard-coded FTP credentials. This made me cringe a little bit: why? I was planning to add a feature in a later version that would let them user their own FTP. &gt; store them in the settings (encrypted of course) Any suggestions on an encryption method I could use? 
Because it's being seen as blogspam. (Rightly or wrongly.)
I'm going to mention dynamic objects here because I actually like being downvoted.
Oh, I thought you could only use strings and int values for switch/cases 
Also always put a default case in switches.
As a fellow mod of a recently granted subreddit, good luck to you and your new active modship! /r/Portuguese
If we are talking design patterns, this is a site which I would recommend as good: http://www.blackwasp.co.uk/Articles.aspx
You can use a dictionary for a dynamic list of name value pairs in your object. something like this: public class PartsOrder { private Dictionary&lt;string, int&gt; orderParts = new Dictionary&lt;string, int&gt;(); private string orderId = string.Empty; public Dictionary&lt;string, int&gt; OrderParts { get { return this.orderParts; } } public string OrderId { get { return this.orderId; } } public PartsOrder(string orderId, Dictionary&lt;string, int&gt; orderParts) { this.orderId = orderId; this.orderParts = orderParts; } }
^^ this. Your Order object isn't setup to 'contain' multiple Products. You need to change your Order class. Something like this: public class Order { protected Product[] ProductsOrdered; } public class Product { protected int ItemNumber; }
I'm using an array list 
I'll keep that in mind in my next project, but arraylist worked okay here because after the properties were stored they really only need to be used as strings, so regardless they were being casted with ToString(). All in all thanks everyone for the help with this project, it looks and works great and I have high hopes for my my grade. I can hardly believe I finished a project using a language I was simultaneously teaching myself!
Congratulations! Make sure to keep the mentality of teaching yourself as you create new things. I can't tell you how many times I've said to myself, "I need to do X, Y, and Z to finish this project, but I don't know how to do it in this language. I wonder if anyone's done these before?" I learn tons of new nuances every day :)
Have you tried getting in touch with the mods from /r/dotnet or /r/aspnet about working together? These subreddits are not doing so well either.
thanks, I'm gunna try to really learn delegates and event handling next, as that seems integral.
God that site is ugly.
The chapter about comments is mostly wrong tho until it corrects itself in the end: &gt;You should use comments to describe what you are doing, so that when you come back to a piece of code that you wrote after several months (or even just days) you'll know what you were doing. Your comments should not describe what you're doing, it should describe why you're doing something. Your code itself should describe what you're doing. If you think your code needs comments to make it understandable, it needs refactoring. The comments should describe your intention The "How to Make Good Comments" corrects itself a bit, but doesn't quite cover it tho.. 
It's the content that matters.
Depends. I've had to work with fucked up databases and data models and will heavily comment any repositories, query objects, or link expressions to make clear the end goal AND how it is accomplished because of sheer impossibility (at times)to make the code built around a fucked up db read easily.
Classic programmer response :)
I'm not sure that you should be that miserable, if you're learning something everyday as a lot of coders are then you're becoming a better programmer all the time. What is it exactly that you're miserable about? Iris has optimised for MS Certs which you could also do if you think they are worthwhile... an interesting conversation about this here... http://redmondmag.com/blogs/it-decision-maker/2012/06/microsoft-new-certifications.aspx If you have many years of real world experience you shouldn't feel miserable at all :).
.net Developer, Software Developer, Software Engineer..
Not Silverlight, for sure. I think it's already dead.
I'd stay away from focusing a resume around Silverlight due to its lack of prominence. Windows App developer maybe? Or Microsoft App Developer to include Xbox. EDIT: What tech are you using for the 360 app, out of curiosity?
Windows Mobile/.NET Developer
At the very least make it an english page.
Likewise. I've had a better experience with it than SharpSSH.
The question mark makes the data type "Nullable" (this is syntactic sugar for "Nullable&lt;int&gt;"). What this means is that normally an int data type cannot be null - if you try to assign it null you get errors. Adding the ? will allow you to assign it a null value. Why would you need this? Well, it's used a lot with Databases (the ? will make the column "field int null" as opposed to without the ? "field int not null")
Perhaps a more experienced developer may be of more use. This way they can review your code and offer pointers on why you should/shouldn't do something. If you want a "mentor" of sorts - feel free to message me.
I've read this before but not sure I agree. If the default case is to do nothing why include a default: break; Because that will compile to IL exactly the same if you don't include it. Of course you could log that you passed an invalid case or something, but what is the logic behind "always" including a default. 
Here's the main webpage that explains it: http://www.galasoft.ch/mvvm/ I've not done MVVM light, but have done plenty with standard MVVM. With MVVM, you have a "dumb" model (this model should have public properties and methods should be left out); a view (this is the xaml); and a viewmodel (here is what you bind to in the view and where you put your logic for the model). All of the UI stuff (visibility, text, etc.) should be handled in the view itself using Bindings. If you need to convert a Boolean to a Visibility you can use this converter (http://msdn.microsoft.com/en-us/library/system.windows.controls.booleantovisibilityconverter.aspx), if you need something more complex like a "View Name (String) to Visibility" then you have to build something like this: public class StringViewNameToVisibilityConverter : System.Windows.Markup.MarkupExtension, IValueConverter { public String ViewNameVisible {get;set;} public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture) { var s=value as string; return s == ViewNameVisible ? Visibility.Visible : Visibility.Collapsed; } public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture) { //Here is where you should put convert back based on the view's visibility, something like: //if (Visibility.Visible) return ViewNameVisible; //else return "something else"; return null; } private static StringViewNameToVisibilityConverter instance; public override object ProvideValue(IServiceProvider serviceProvider) { if (instance == null) instance = new StringViewNameToVisibilityConverter(); return instance; } }
As far as performance, most any background call should work. I prefer to work with Task&lt;&gt; objects (personal preference I suppose) with something like this: Task&lt;ServiceResponse&gt;[] tasks = Servers .Select(s =&gt; Task&lt;ServiceResponse&gt;.Factory.StartNew(() =&gt; s.StopService(serviceName, timeoutSeconds))) .ToArray(); Task.WaitAll(tasks); responses = tasks .Select(t =&gt; t.Result) .ToArray(); ServiceResponse is just a dumb model that has a boolean result and a string message (in case the task bombs).
I used SDL to create a top down RPG about 14 years ago and it's still in use today: http://lazyfoo.net/SDL_tutorials/
While not exactly a hand-holder, I do like Microsoft's C# Training (already in the sidebar). I also prefer tutorials that cover programming principles along with the language itself for absolute beginners. I would suggest splitting tutorials into 'no OOP background' and 'existing OOP background' so beginners and experiences coders both have resources to get started. **Getting Started:** [CodeProject Into to OOP in C#](http://www.codeproject.com/Articles/22769/Introduction-to-Object-Oriented-Programming-Concep) **Concepts:** [C# Programming Concepts](http://msdn.microsoft.com/en-us/library/vstudio/dd460655.aspx) [Data Structures C# 2.0](http://msdn.microsoft.com/en-US/library/ms379571.aspx) **Free Compilers, VS alternatives:** [MonoDevelop](http://monodevelop.com/) [SharpDevelop](http://www.icsharpcode.net/opensource/sd/) **For Students Who Want To Build With ASP.NET:** [Microsoft DreamSpark](https://www.dreamspark.com/default.aspx), Free Microsoft licensing for students. **Advanced Training &amp; Articles, Not C# Specific:** [4GuysFromRolla](http://www.4guysfromrolla.com/) [LosTechies](http://lostechies.com/) [MVC1/MVC2 NerdDinner Tutorial](http://www.wrox.com/WileyCDA/Section/id-321793.html) [Scott Hanselman's Blog](http://www.hanselman.com/blog/) [Scott Gu's Blog](http://weblogs.asp.net/scottgu/) **VS Addons:** [Resharper](http://www.jetbrains.com/resharper/) - While a productivity tool, you can watch what ReSharper recommends to learn good coding practices like variable naming. Free for 30-days. [CodeMaid](http://visualstudiogallery.msdn.microsoft.com/76293c4d-8c16-4f4a-aee6-21f83a571496) - Code Cleaning feature will help keep your code clean and help beginners learn what clean code looks like and promote good habits. Other features are very helpful for advanced coding. Best part, it's free. **Events:** Free, [Code Camps](http://codecampatlas.azurewebsites.net/locations/) Paid, [Microsoft Build](http://www.buildwindows.com/) Paid, [Microsoft TechEd](http://northamerica.msteched.com/#fbid=tdqf8wO_epe) **Certification (because M$ certification is confusing as hell):** Entry Level: [Microsoft Technology Associate (MTA)](http://www.microsoft.com/learning/en-us/mta-certification.aspx) Professional Level: [Microsoft Certified Solutions Developer (MCSD)](http://www.microsoft.com/learning/en-us/mcsd-certification.aspx) 
http://channel9.msdn.com/ for the watchers out there. Recent conference with cool talks relating to c#/.net stack Norweigan Developers Conference 2013: http://vimeo.com/ndcoslo
Forgot Microsoft Virtual Academy: For existing coding experience: http://www.microsoftvirtualacademy.com/training-courses/developer-training-with-programming-in-c#fbid=CgrSE7KlH5k 
I've used C# for a couple of years and it quickly became the language I would most enjoy coding in. I first saw F# in Visual Studio 2010 and I didn't think much of it for the longest time. Eventually, curiosity won out and I decided I would take a day to learn the basics of F#. The language was unlike anything I'd encountered before and it introduced me many new concepts (monads, pattern matching, etc). Coming from a engineering background, I immediately loved the expressive power and concise syntax of the language. Over the past 8 months, F# has now become the language I have the most fun with. I use it any chance I get, especially for my engineering simulations. Overall, I think C# and F# are partners in awesome.
&gt; Overall, I think C# and F# are partners in awesome. 100% agree. A good developer who not only knows C# and F# but knows when to use each language in the right scenarios is invaluable. Unfortunately, I don't foresee F# adoption taking off as the most valuable feature in F#, the asynchronous model, is implemented in C# 5.0 -- albeit C# async is much more difficult to code than in F# but I expect C# async to mature in the coming years and become easier to use. And sadly, most software projects (outside finance, science, data mining) are more concerned with a maintainable codebase rather than performance (where F# rocks) so most shops aren't motivated to go mixed-language which increases maintenance costs. I forget who said this to me but it went along the lines of "Every C# developer should learn F# at some point even if you never plan to program with it. You'll learn new approaches and patterns to solve problems more efficiently in your C# code." And after using F# for a few years, I'm going to agree. 
Ah, that makes a lot of sense. Thank you!
Interesting -- are you saying F# tends to outperform C#? I thought it was usually the case that typical F# code (Functional+Immutable) was typically a bit slower than C# code (OO+Mutable). Obviously F# brings a huge host of other advantages, but I didn't think speed was one of them, could you point me somewhere to read more?
Extension Methods
Because it throws an exception when ever it gets to a null value! It's fine, I used a BinaryReader in the end to get it working! Thanks anyway!
Event's property-ish syntax ( Add and Remove ).I heard it 2 days ago and I can't believe that I skip this so much important and usefull feature.Something like this ; MyDelegate _SomeEvent; public event MyDelegate SomeEvent { add { _SomeEvent += value; } remove { _SomeEvent -= value; } }
Ctrl-. For the context sensitive helpers (add using, generate method. Just awesome.) 
Probably not a feature you'd use every day, but VS T4 templates: I was able to create templates to auto-generate 90% of the code for a large project based on Entity Framework. Edit: also, LINQ. I don't know how I was able to write code before it.
The implicit operator. I often convert api objects to my own type and back again to decrease the number of changes needed to my code if/when the api changes. With the implicit operator i can not only have all that code in one place but simply assign one to the other. I'd been using extension methods to do this for years.
Extremely useful. 
SignalR, I love it :)
This seems to just be syntax sugar, but I like it, a lot. I usually use methods to do this. var someType2 = type1.convertToType2(someType1); The implicit keyword looks like it will really clean that up a bit. someType2 = someType1; Lovely!
This. When I found extension methods I nearly shit a brick. Countless times I had wanted that functionality then to finally find it (by accident if I remember), it was a good day.
Been coding C# for years - you just blew my mind...
Virtual classes. I write data acquisition software for electronic test equipment. Every make/model/manufacturer seems to implement their own screwy communication protocols these days. I want all of my devices to behave the same way. Some generic virtual classes with custom communication layers and polling/IO routines save the day. 
For me, LINQ doesn't relaly fit with "wish you had discovered sooner?" because I started using LINQ as soon as they introduced it. I wish it had existed sooner. It's actually made my life better.
I *love* yield/return- it results in massively cleaner/more maintainable code that the alternatitives
I'd use LINQ more if they'd fix the remaining issues it has with the Edit and Continue feature of the debugger/IDE
Code Contracts and Xunit.net I come from a background of mostly PHP and Python, and couldn't for the life of me understand what benefits i had from static typing, it just seemed it was only to get in the way of the code i wanted to write. It wasn't until later when i started looking into SOLID and TDD that i began seeing the benefits. Now recently i have started playing with code contracts, and I find it to have amazing potential. Previously you'd have simple if-then-throw boilerplate code, now you have method calls that Visual Studio can understand, and even point out if it can't prove some of the contracts you set up. However its a bit awkward right now because it is method calls and not better integrated into the language. Now I just wish they would allow me to be more restrictive with my code, for instance, recently I made a class which was supposed to hold some data which could either be a byte array or a char array. It seemed to make sense to make the class a generic, but the constraint system for generics doesn't allow you to restrict to certain value types, it's an all or nothing deal, which is really weird to me.
Known as a Fluent API :)
Anonymous methods.
In VS, CTRL + ] to find matching brace. 
You can sort of achieve this with extension methods. Or passing around Func&lt;T&gt;s if you're feeling really saucy (and masochistic).
I came here to say this
Have an upvote for teaching me this. 
If you right click on a method, there's an option to "view call hierarchy". I've been using "find all usages" and manually finding the call hierarchy. A java developer showed me this.
Just finished my first signalr project and it's going live today. Very cool technology to use, especially with something like AngularJs.
I don't think it would hurt readability. I think we are losing somethings and gaining more. The one says convert this to that. The other says set this equal to that. We know they are different types and they have to be converted so I think that is implied. While this is a bit more murky I think it probably clears up what is going on at a higher level around this method call. Like creating more muck at the bottom of a lake because we made the debris in the lake settle out. 
C# beginner, Delphi Experienced here: I read and heard that extensions should only be used as an absolute last resort when dealing with classes that lack functionality, but you can't inherit from. They should also be done in the smallest possible context space to reduce chance of scope overlap. It also doesn't lend itself well to readable code, since it doesn't follow inheritance. As a result, I am rather indifferent knowing about Extension Methods, other than knowing what people are talking about. Should I be using them more, is there a responsible way of using extension methods more often than what I heard?
Lamda Expressions
This one is a bit debatable... If you're doing multiple things to an object you should have a method that does it or multiple method invocations. String methods, for example, can be written exactly like you're describing but instead of returning "this" they return a modified copy. And if I'm not mistaken, jquery doesn't simply return "this" and has a similar behavior to the c# string class.
Upon discovering them I started using them like crazy until I started to get hit with these exact points. I have since only used them in some special cases where it makes sense and even then I usually have a backup just in case.
I discovered the snippets 6 month ago. I have been working with Visual studio for almost 10 years. It changed the way I code...
I know right ? When I discover this,it blew my mind too.And I realize again ; How much I try to cover everything,actualy I don't know anything at all...
And I said that it was debatable and explained why. Specially the part where you return "this" instead of a copy.
Brilliant. I always end up creating regions to prevent the impossible search. 
"System.Collections.Concurrent.BlockingCollection&lt;T&gt;" Reading data and processing it with TPL (System.Threading.Tasks) without all of the headaches. Just spent 2 days revisiting my code base to optimize all of it.
Where might a newbie learn more on this?
Like /u/snargledorf, I only use them on occasion but they're useful to have. It's pretty unlikely that you'll need them for internal code - just rewrite it to do what you want. Third-party code (framework or controls), it comes in handy. As a side note, LINQ and MVC both use extension methods heavily. So many of us use them daily without really realizing it.
find? how about select everything between? Ctrl + Shift + ] EDIT: I never remember to use it, but when I do I'm glad I got ReSharper - Ctrl + W (select wider selection - it's so awesome!)
I use linq quite a bit, I didn't realize it was a set of extension methods!
Like myself, I am working with ASP.net MVC!
Probably because I said I knew Delphi :P
Then you use extenion methods a lot! :) Every method you use on an IEnumerable, IQuerable such as Any and Where are extension methods on these. They take IEnumerable and extend it. If you look at the source they will look like Where(this IEnumerable ....
This actually become a very big headache for a project I was on. It was extremely hard to customize and refactor. The templates were also probably done wrong, but such a huge pain to make ridiculously simple changes in the data layer.
Using and creating extension methods are two different things. If you find yourself creating a bunch of extension methods in a project, then it is probably time to rethink your design.
There's a metric asston of better support for concurrency in 4.0+ Was very happy ripping our all of my ManualReset event crap from 2.0 and earlier.
I'm a little confused on what you mean by "developers of the vanilla code". However, there are design patterns that could use to get the same kind of benefits without using extension methods (such as using the Facade pattern when dealing with 3rd party libraries). I'm not saying that extension methods are bad by any means, just that there is a proper place and time to use them.
Side note: if you are doing this in production code, please don't forget to wrap this in a try/catch unless you are 100% you won't get a NullPointerException!
You could definitely do this with extension methods as long as the type that is being "extended" is the same as returned by the previous method. Why you would do it this way beats me!
With regards to point #2. You don't need to look for F# programmers. You can look for any programmer with a functional background, or more specifically OCaml programmers. What using F# can do is weed out those job applicants who aren't willing to learn new things. As for point #3, you can say the same about C#, yet in point #4 you say that C# (among other languages) are doing just fine. Both languages are Microsoft "owned" (as you put it) so why is one ok but the other isn't?
&gt;It also doesn't lend itself well to readable code, since it doesn't follow inheritance. Not sure what you mean here- could you explain? Suppose you have an abstract base class with some methods M_NA non-abstract, some methods M_A abstract. If M_NA doesn't require data members (except indirectly through M_A), then you can replace the class with an interface IWhatever with members M_A, and put extension methods for M_NA on IWhatever. Now if you have a class WouldBeInheritor, instead of inheriting from the abstract class, you can now have it implement IWhatever. This frees WouldBeInheritor to inherit from a different base class if you want to, or just not inherit from anything.
That doesn't go against the original point though. Extension methods like all constructs are to be used with care. Because of what they do, they are likely to be abused when a more natural inheritance architecture would have been appropriate. Also, I use a shit ton of extension methods lol.
Visual Studio: ctrl+/, type "&gt;of " then start typing the name of a file in your project to quickly jump to a particular file instead of finding it in solution explorer.
My favorites are * Ctrl+F12: Search for methods, properties and the like in the current file. Can type the capitals only if you choose. e.g. ST would bring up SearchText() * Ctrl+Shift+N: Similar menu for locating files
Some people don't realise where Anders Hejlsberg started, then.
ctrl-r-r is rename. ctrl-shift-r is refactor.
The only issue I have with R# is the performance hit, but it really is amazing.
Sounds like the search boxes in VS2012/2013 are replicating his.
Any good pointers for learning about expression trees? I can *use* LINQ expressions, but that's different from grokking them.
Are you able to give an example of some code with/without yield?
Careful you don't put XML everywhere. But I agree CSVs are awful. JSON is pretty good in C#4/VS2012 - you can Paste JSON as Classes.
Paste JSON as Classes in VS2012.
Whoa, that would replace things like the ConcurrentBag, right?
Shit, I have resets everywhere. What are you using to replace them? Mutex?
CTRL+.: Tell me what using statement YOU think I'm missing, VS. Not always perfect, but sometimes it is a lightbulb of "Oh, duh".
This is a good starting place: http://msdn.microsoft.com/en-us/library/vstudio/bb126445.aspx
I hear you. I would take generic code over auto generated code any day, but this specific project required creating tons of boilerplate code, which i honestly didn't want to write (and modify) all the time. What I also discovered is that you can introduce your own custom attributes in the .edmx model and use those attributes to drive code generation (give entities particular attributes, derive from specific types, etc.). All in all an experience I am not looking forward to repeat, but I enjoyed messing with T4 templates (and now I just have to update the .edmx and re-generate the code when I have to make a change
I wish there was much better support in VS for T4 templating. Even some syntax awareness would be great. I use T4 templates for creating POCO classes from SQL Tables and User Defined types. Combined with Dapper for actually talking to SQL, it makes data access so much more convenient and no need to worry about auto-generated SQL statements from the likes of NHibernate or EF. 
I use them to fill in gaps in the .net api, or to make life easier. Such as adding SqlParameter objects to a SqlCommand implementation. Without the extension, it's painful iterations of create the parameter, set properties, add it to the parameters collection... [This guy](http://madprops.org/blog/addwithvalue-via-extension-methods/) created a set that are pretty sweet. 
Nothing. In the cases where you are using this to synchronize parallel threading this is simply now handled by the framework. Where you used to do a bunch of object creation and then waiting on events, you can now just to a Parallel.For or Parallel.ForEach and the framework handles all the messiness. 
I use this: http://t4-editor.tangible-engineering.com/T4-Editor-Visual-T4-Editing.html Not perfect, but at least you get syntax coloring and some intellisense.
I think he made it sound like an evil feature, but I agree with you completely. Always use the most obvious, readable thing that does what you need and no more. 
The real gain comes from using 'CompleteAdding' and 'GetConsumingEnumerable'. Parallel.ForEach the GetConsumingEnumerable if you want it to be like a task buffer.
I don't think that finding experienced OCaml programmers is going to be any easier :( And yes - C# is basically owned by Microsoft (thought Mono is providing strong alternatives for Microsoft). However, at time when C# was introduced there was dire need for new Windows desktop programming language: C WIN32 API and C++ ATL/COM was starting to look very obsolete when Java was showing new way to code things. Java is great language - but at time it was absolutely disaster to use it in desktop development (Java desktop applications just didn't have right look and feel). C# in other hand is native Windows desktop development language - providing same language features as Java (IMHO: most important are reflection and much more easier compilation compared to C++). If Microsoft would have waited couple years before releasing C#, then we would likely use Java for Windows desktop development. I don't like being using single manufacture languages - but there isn't much realistic alternatives. However, if I can â I try to avoid starting to use another single manufacturer language. I think that F# is great language â I am just wondering why there isn't more developers working on it. Those 4 were my reasons, why I am not using it currently â and none of them are technical problems â they are environmental reasons. 
The only ones I ever use are prop and propg, and occasionally exception - and even then it's just quicker to type it out for me. Which other snippets are useful?
o.O Do they have any functionality like that for XML?
The XDocument, XElement and XAttribute classes were an absolute godsend after I'd been using the Xml* equivalents without realizing. I never thought both reading and writing XML could be so easy!
Syntax like that I picked up from Java and I always saw it as a very Java-ish thing to do, but I've recently adopted it for a .NET project too.
The reflection stuff completely blew my mind...
Yeah, it also works v well with knockout js
Visual studios, at lest 2012, doesn't yell at you when you compile or build, but you should get a crash when you try running your application. The compiler is unaware what portions of your code requires invocation in order to work so it wont warn you that you are doing it incorrectly. When you actually try running the program it will hit that line and throw an exception that you cant access the UI thread from a background worker.
Extension methods on interfaces are a god-send.
I know you can restrict generics to a certain class and ones that inherit from them. For example you could restrict it to classes that implement IEnumerable. I'm not sure about restricting to two different ones though. 
The trouble is that byte and char are value types so you can't explicitly restrict a generic to those 2 types, you can restrict it to struct which would only allow value types, but it would be all value types, not just a subset.
I'm not sure which framework you are using - but I do know that BackgroundWorker "plays nice" with WPF . Marshalling updates onto the UI thread is part of the backgroundworker pattern.
The compiler *could* analyze your code, realize it's performing a cross-thread access, and throw an error. However, that would require the compiler to know tons of facts about the entire framework and have a static code analyzer able to detect cross-thread access without running the code, which is not easy. Or it can do nothing, and let the program crash the first time you run it. The cost (tons of complex code) isn't worth the benefits (compile-time instead of run-time error).
It does not crash .. it works perfectly okay.
See above. Works perfectly without a delegate. It is a mystery to me.
I am using .NET 4.0 and C# winforms application. I'm not using WPF.
It does not crash ... it works perfectly fine and I can access all controls directly.
Its not necessarily a crashing error depending on the environment settings that you have, as well as the settings in your project. But from MSDN: "The .NET Framework helps you detect when you are accessing your controls in a manner that is not thread safe. When you are running your application in the debugger, and a thread other than the one which created a control tries to call that control, the debugger raises an InvalidOperationException with the message, "Control control name accessed from a thread other than the thread it was created on." This exception occurs reliably during debugging and, under some circumstances, at run time. You might see this exception when you debug applications that you wrote with the .NET Framework prior to the .NET Framework 2.0. You are strongly advised to fix this problem when you see it, but you can disable it by setting the CheckForIllegalCrossThreadCalls property to false. This causes your control to run like it would run under Visual Studio .NET 2003 and the .NET Framework 1.1." If you run your program in Debug mode from the compiler you should get an exception when it hits that line of code, but you can continue execution. So while setting a label wont cause your program to crash, not everything will work correctly, such as calling .ShowDialog() on a dialog control. And the exception is also pointing that you might potentially have issues where two threads try to access a control at the same time and cause various errors, either in the data retrieved or causing a crash, during runtime.
http://www.wolfgangziegler.at/blog/paste-json-xml-as-classes
fixed, thanks!
Hmm. Okay thanks :-)
I'm confused, is all the logic done on server side? 
CTRL + SHIFT + T is my firstborn
I've had this sor tof thing work without errors before, in other situations it did blow up. Haven't yet bothered to figure out why, but my personal advice would be "don't rely on it working". 
I believe its a blend of both. I saw it on [Chapter 8 of the ASP.NET MVC Jump Start series](http://www.microsoftvirtualacademy.com/Content/ViewContent.aspx?et=2507&amp;m=2505&amp;ct=15703#fbid=kReKDpFEIbN).
Are you trying to debug a release build? C# optimization can do all sorts of interesting things that are very confusing with single stepping.
Without invocation you can do simple things mostly reliably, such as setting a label value to something else, but you cant directly call the .ShowDialog() command, nothing will happen not even an error. Its not a good idea to call things in situations like this without invoking, especially if you have another thread which could potentially try grabbing the value at the same time that you are setting it.
Can you give us the field values in question? Int cast has at least one notably-different behavior than the Convert method you changed to. Specifically, they handle null/empty/whitespace-only inputs differently, as I recall.
So basically you can dynamically stream content into a browser, without the client actively calling upon it with ajax?
SignalR is a framework that enables push notifications to your web page, using the best technology capabilities for the browser and server (Web Sockets over Ajax and Polling)
I've found PetaPoco to be extraordinarily useful for quick implementations, after the database has been created already. It handles things nicely and the T4 templates that are included take out so very much of the work. For something that doesn't require a billion transactions a minute its certainly my preferred. My first experience with it was getting it to work with MySQL &amp; SQLite on Mono. Which was a pain, but it was worth it :-).
Been having a good time with Tutorialspoint as well but I will definitely give this a shot, thanks!
Nope, [same exception](http://i.imgur.com/WVCFswF.png). Any chance that you have: Form.CheckForIllegalCrossThreadCalls = false; (or on the TextBox control) somewhere in Form1.Designer.cs?
If you were testing in an asp.net app, its possible that another request came in, and it was jumping to that. 
Throws error for me as well. Followed step by step.
Is the debugger jumping to a completely random place or into the code files for the ViewInfo, Appointment, and CustomerFields?
This problem sounds odd. Do you have the option to break on user-unhandled exceptions in VS unchecked?
Sounds like your pdbs were out of sync.
Yes, I do use Linq, but if this is the source of all evil, why does it only happen when I use Int-cast?
int saved into an object, it's always a valid number between 0 and roughly 1 000 000
it's jumping to completely different and unrelated functions in the same class
I debugged it multiple times, restarted visual studio, cleared the folder with the binaries...the only thing that changed that behaviour was deleting the int-cast. I can still reproduce it. Does your theory still fit? 
Rest assured it cannot be the int cast that would cause this to happen. There is some other black magic occurring somewhere. You say you can reproduce this consistently? I know its a lot of work, but if youd really like to get to the bottom of this, you could screencapture what is happening?
The uncomment block shortcut (CTRL + E + U). I still feel the shame of discovering this after manually uncommenting hundreds of lines that had been commented using the inverse shortcut.
Did you upgrade this project from VS2010? If so I had this bug. There is a setting that you need to change in your VS2012 settings. Option 2 is just rebuild the project from scratch then import in all of the code, that should also work. If you really need it I will try to find my notes tomorrow on how I fixed it.
Are you running in release or debug? When the pdbs are out of sync is when I have seen this kind of behavior.
I would really like to, but I'm not sure if I am allowed to. I'll ask my boss.
I still use VS2010. Project was created in VS2010 and never opened in another version of VS.
It should be only a generic collection, it's part of the DevExpress Scheduler and I don't have access to the code. e.ViewInfo.Appointment.CustomFields["randomName"] = e.ViewInfo.Appointment.CustomFields["randomName"]; doesn't trigger this effect, so I'm pretty sure this isn't the source of the problem.
The library I am working at is set to: Configuration: Active(Debug); Platform: Active(Any CPU). The start-module, that uses the library has the same settings.
Are there any cases, where I may use multi-threading without knowing? Stuff that uses multi-threading automatically? If not, I don't use multi-threading.
All projects used are set to: Configuration: Active(Debug); Platform: Active(Any CPU).
Use dotPeek and se what the decompiled code suggests is happening.
It's a classic but man do I love this one :)
its funny every time! 
Hah! Thanks for the laugh. 
You are probably clear of threading in this case, and you'd be likely to know if you were threading. That said and since you asked, some cases are easy to fall into by accident, such as touching UI controls from background workers, doing the same from thread pool queued user work items or casually-launched TPL tasks, or even something as simple as accidentally (or intentionally but errantly) sharing state across requests in your server-side code.
Oh man, that joke is so bad, I love it
The jump to matching tag - ctrl+]
It's been so long since I've had to deal with it. I do know for sure you can get it to debug one instance of the thread. That feature was added in VS 2010. I'm afraid you'll had to consult the internet to find out how it's done. Has to do with a debugging setting.
It needs this meme: http://memedad.com/memes/24858.jpg
Got any hobbies? Building around a hobby is a great way to write creative yet functional code.
I have lots of hobbies, not sure which one could fit programming in any valuable way. I do however have my own football team which is fairly new, and arrange a big football happening each year
http://replygif.net/i/573.gif
Did you borrow this from [here](http://www.reddit.com/r/shittyprogramming/comments/1jpxvj/i_learned_c_but_i_still_need_glasses_what_gives/)?
Nice to see that the features that made ReSharper a must is being implemented in VS. With all these features in VS2012 and VS2013, ReSharper is soon obsolete.
Liked the irony on the post :) I think there are a couple free tools that check for this Also, it would be good to add a check for that misconfiguration as a 'Production only' UnitTest 
I am glad you enjoyed the post. If you don't mind what did you find ironic about the post? I work in web app security but I do .NET dev mainly dealing with SAST. I plan to write a more about .NET issues, especially easy to fix ones like misconfigurations. I am trying to become a better writer by blogging, and hopefully someone will actually learn something from one of my posts. 
Not obsolete. You can already see that JetBrains has increased the rate at which they innovate with ReSharper since VS is starting to absorb their features. It might just mean that R# will get faster or better at a quicker rate.
Well it's used in Windows Phone and Windows 8 app development as well.
Not sure irony is the best word to describe, maybe sarcasm or Humour? Anyway it was a good read. Can you expand on what you do around SAST? Like what tools do you use and what is your workflow? BTW, did you saw my commit/branch on WebGoat.net? 
This is a topic I'm quite interested in, but I've got a few questions about the example. The unit test in the example could potentially give different results on different machines, could it not? For example, how do threads work on computers with only a single core - could a computer with only one core pass this test? The fact that the test can give different results each run irks me, I've always thought that a test should be predictable. I know this isn't possible when it comes to multi threading but I feel that there should be something built in to the testing framework to facilitate tests that simulate threading. 
Take a look at the Modules window and verify that the PDB file being loaded is the one from your most recent build.
Windows Phone seems to be growing, but I'm not so sure about Windows 8 apps.
I am a developer on a SAST tool, DM me on twitter or email me if you want to know more. Can you link your branch? I don't see any pull requests on WebGoat.NET. I have been slacking on working on it lately but I have some fixes locally that I need to push. So you probably will see some new stuff later this month. :)
http://projecteuler.net/ Not exactly what you want but I have learned a lot at this place.
Thank you, that made my day
I like to run through some of the standard kata when learning new languages. Once I've done it myself, I then head over to YouTube and watch other people do the kata in the language I'm trying to learn. It's a really good learning experience. Here's a list of some kata that I like to practice. Bowling Game, String Calculator, Prime Factors, Mars Rover, Gilded Rose, Monopoly
This is the kind of stuff I was looking for. Thanks! Edit: Something like this right? http://codekata.pragprog.com/2007/01/code_kata_one_s.html
http://codingbat.com/ Is geared a little more to beginner programmers and cares more about Java, but it does have some good warm-up problems to try to solve.
Yeah, that link is a great resource for kata! Don't forget to find every opportunity to watch others perform the kata. If you have several developers at work, challenge them to do the kata as well, and then have everyone come together and show off each other's solutions. You'd be amazed at what you learn by doing things like this. Everything from coding tricks to testing tricks to IDE shortcut keys.
I'm a big fan of [pex4fun.com] (http://www.pex4fun.com).
Try [codechef](http://www.codechef.com/)
The only IRC library I only know is: [IRC.NET](https://launchpad.net/ircdotnet). I'll have a look at your code a bit later.
You are right. From my point of view .NET community wasn't so interesting this week so there are more general programming stuff. There is a slight touch of finances, but I plan to keep these articles in minority.
good job! might i suggest cross-posting this over to /r/gamedev? i think this would be better appreciated there.
XML de-serialization and serialization. My first project involved a lot of data conversion from and to XML... I started with C# and .Net 4.0. At the time I was a total noob and had no idea, I didn't even know the correct terminology (serialization) to look for. So I ended up using XPATH to read XML data which technically, is not incorrect... But using serialization / deserialization is tons faster and easier. After that I discovered Generic methods to serialize / deserialize which was even awesomer. 
I recently themed Sando without this extension (didn't know about it then) and it is a real pain to guess which colors to use on each control. I wish I had seen this extension where I can have a visual list of each theme's colors so I could just pick the right colors for each control. SO much faster!
I built IRC#, an IRC library that should be easy to use - [give it a try](https://bitbucket.org/SolalPirelli/ircsharp). (example [here](https://bitbucket.org/SolalPirelli/ircsharp/wiki/Quickstart))
There is [Meebey's SmartIRC4Net](https://www.meebey.net/projects/smartirc4net/). Works on .NET and Mono, pretty easy to get started with as well and its FOSS as well. I've been using it to write an IRC bot myself and it works fairly well. Unfortunately with that library, the documentation is a bit sparse, but most of the calls are pretty easy to pick up on with what they do. There are a couple quick simple tutorials on getting started with that library as well. From what I know, it doesn't really support well non RFC features but it does support a few of them, but I think that changed since I last updated the library. Also, from a quick peek at the code, I'd suggest only loading that Xml document once into memory by keep an XDocument object in memory until you're done loading data completely to help save some time loading, which I think would probably lower start time I think, haven't performed a test though, just a quick guess.
Not a feature of VS by default, but the extension "C# Outline 2012". Finally I am able to fold code at every curly brace! Fold away the if clause? No problem man! Also tools like Postsharp (helps a lot for tasks like logging etc and looks cool) or Resharper (Alt+Enter is the shit!) For language features: anonymous methods, lambda and Linq. Linq is so fucking amazing
good luck typing that on a german layout....
I think this would be useful as an intro to extending LINQ, but it's fairly obvious for someone who has written their own IEnumerable extensions before.
I use [AttributeRouting](http://attributerouting.net/) for this. Works really well. It's being implemented in MVC 5. I think it's available right now for Web API.
This is a noobish question but: Does this allow you to fire off events when the add/remove conditions are hit or is this for something else entirely? Does this let you define custom events?
omg, this tip is awesome!
Take a look at the O2 Platform project, lots of advanced C# stuff in there (see blog entries and code in GitHub)
That is exactly what I did with the FluentSharp APIs and the code is way much cleaner and easier to read (because of that type of chained extension methods). Its like a C# version of jQuery :)
See here https://github.com/OWASP/WebGoat.NET/tree/VS_2010
That's awesome! Where did you get this??
http://tools.portal42.net/music.php lol, enjoy ps, this one is Mario ( I take no credit) Console.Beep(659, 125); Console.Beep(659, 125); Thread.Sleep(125); Console.Beep(659, 125); Thread.Sleep(167); Console.Beep(523, 125); Console.Beep(659, 125); Thread.Sleep(125); Console.Beep(784, 125); Thread.Sleep(375); Console.Beep(392, 125); Thread.Sleep(375); Console.Beep(523, 125); Thread.Sleep(250); Console.Beep(392, 125); Thread.Sleep(250); Console.Beep(330, 125); Thread.Sleep(250); Console.Beep(440, 125); Thread.Sleep(125); Console.Beep(494, 125); Thread.Sleep(125); Console.Beep(466, 125); Thread.Sleep(42); Console.Beep(440, 125); Thread.Sleep(125); Console.Beep(392, 125); Thread.Sleep(125); Console.Beep(659, 125); Thread.Sleep(125); Console.Beep(784, 125); Thread.Sleep(125); Console.Beep(880, 125); Thread.Sleep(125); Console.Beep(698, 125); Console.Beep(784, 125); Thread.Sleep(125); Console.Beep(659, 125); Thread.Sleep(125); Console.Beep(523, 125); Thread.Sleep(125); Console.Beep(587, 125); Console.Beep(494, 125); Thread.Sleep(125); Console.Beep(523, 125); Thread.Sleep(250); Console.Beep(392, 125); Thread.Sleep(250); Console.Beep(330, 125); Thread.Sleep(250); Console.Beep(440, 125); Thread.Sleep(125); Console.Beep(494, 125); Thread.Sleep(125); Console.Beep(466, 125); Thread.Sleep(42); Console.Beep(440, 125); Thread.Sleep(125); Console.Beep(392, 125); Thread.Sleep(125); Console.Beep(659, 125); Thread.Sleep(125); Console.Beep(784, 125); Thread.Sleep(125); Console.Beep(880, 125); Thread.Sleep(125); Console.Beep(698, 125); Console.Beep(784, 125); Thread.Sleep(125); Console.Beep(659, 125); Thread.Sleep(125); Console.Beep(523, 125); Thread.Sleep(125); Console.Beep(587, 125); Console.Beep(494, 125); Thread.Sleep(375); Console.Beep(784, 125); Console.Beep(740, 125); Console.Beep(698, 125); Thread.Sleep(42); Console.Beep(622, 125); Thread.Sleep(125); Console.Beep(659, 125); Thread.Sleep(167); Console.Beep(415, 125); Console.Beep(440, 125); Console.Beep(523, 125); Thread.Sleep(125); Console.Beep(440, 125); Console.Beep(523, 125); Console.Beep(587, 125); Thread.Sleep(250); Console.Beep(784, 125); Console.Beep(740, 125); Console.Beep(698, 125); Thread.Sleep(42); Console.Beep(622, 125); Thread.Sleep(125); Console.Beep(659, 125); Thread.Sleep(167); Console.Beep(698, 125); Thread.Sleep(125); Console.Beep(698, 125); Console.Beep(698, 125); Thread.Sleep(625); Console.Beep(784, 125); Console.Beep(740, 125); Console.Beep(698, 125); Thread.Sleep(42); Console.Beep(622, 125); Thread.Sleep(125); Console.Beep(659, 125); Thread.Sleep(167); Console.Beep(415, 125); Console.Beep(440, 125); Console.Beep(523, 125); Thread.Sleep(125); Console.Beep(440, 125); Console.Beep(523, 125); Console.Beep(587, 125); Thread.Sleep(250); Console.Beep(622, 125); Thread.Sleep(250); Console.Beep(587, 125); Thread.Sleep(250); Console.Beep(523, 125); Thread.Sleep(1125); Console.Beep(784, 125); Console.Beep(740, 125); Console.Beep(698, 125); Thread.Sleep(42); Console.Beep(622, 125); Thread.Sleep(125); Console.Beep(659, 125); Thread.Sleep(167); Console.Beep(415, 125); Console.Beep(440, 125); Console.Beep(523, 125); Thread.Sleep(125); Console.Beep(440, 125); Console.Beep(523, 125); Console.Beep(587, 125); Thread.Sleep(250); Console.Beep(784, 125); Console.Beep(740, 125); Console.Beep(698, 125); Thread.Sleep(42); Console.Beep(622, 125); Thread.Sleep(125); Console.Beep(659, 125); Thread.Sleep(167); Console.Beep(698, 125); Thread.Sleep(125); Console.Beep(698, 125); Console.Beep(698, 125); Thread.Sleep(625); Console.Beep(784, 125); Console.Beep(740, 125); Console.Beep(698, 125); Thread.Sleep(42); Console.Beep(622, 125); Thread.Sleep(125); Console.Beep(659, 125); Thread.Sleep(167); Console.Beep(415, 125); Console.Beep(440, 125); Console.Beep(523, 125); Thread.Sleep(125); Console.Beep(440, 125); Console.Beep(523, 125); Console.Beep(587, 125); Thread.Sleep(250); Console.Beep(622, 125); Thread.Sleep(250); Console.Beep(587, 125); Thread.Sleep(250); Console.Beep(523, 125); 
I don't think i have permissions for that fork of WebGoat.NET. Maybe I should, I don't know.
Fuckin' awesome
It's a handy tool, but what I'd love to see is a VS2010 theme to save some time. The minimalist layout in '12 wastes time trying to orient where things are when you start up. Constantly feels like you have to search for things that are right there on the screen.
This looks pretty awesome. I think I'll give this a shot. Thanks!
Going to ship this with everything I make. Thanks OP!
damn nice job OP! :)
It is the same as the event.But it's an answer for "When some of my events fired I want to do some extra work.For example ; Fire off some other event when some method added to/removed from event." and "I want to keep a list of subscribed methods so I can have 'more' control over the event.For example ; Subscribe all methods to another event.Unsubscibe some of the methods etc."
That's hilarious. It reminds me of a C++ console program I wrote back in high school that would play "99 Bottles of Beer on the Wall" in its entirety. I made the mistake of distributing the source code to a few of my classmates, who started deploying it as a sort of Windows startup folder "Trojan" on one another's workstations. They would use NTFS permissions to make sure it only worked on the intended target by setting them as the owner, so such shenanigans tended to go undetected during other class periods that used the same lab.
Project properties / Build
Haha, that is really ingenious! :)
Please post your own code. Perhaps you do not have a recording device set up?
I am trying to create a 'bot' that can record lync calls. This is the code that handles new calls. To use the bot, you would just add it to a call. var call = e.Call; call.BeginAccept((r0) =&gt; { call.EndAccept(r0); Recorder recorder = new Recorder(); recorder.AttachFlow(call.Flow); var imcall = new InstantMessagingCall(call.Conversation); call.StateChanged += (snd, args) =&gt; { if (args.State == CallState.Terminated || args.State == CallState.Terminating) { recorder.Stop(); } }; WmaFileSink sink = new WmaFileSink(fname); recorder.SetSink(sink); recorder.Start(); imcall.BeginEstablish((r1) =&gt; { imcall.EndEstablish(r1); imcall.Flow.MessageReceived += (s, e2) =&gt; { if (e2.TextBody.ToLower().Contains("toggle")) { if (recorder.State == RecorderState.Paused) recorder.Start(); else recorder.Pause(); imcall.Flow.BeginSendInstantMessage("Paused: " + (recorder.State == RecorderState.Paused), (r) =&gt; { }, null); } else if (e2.TextBody.ToLower().Contains("end")) { recorder.Stop(); imcall.BeginTerminate((r) =&gt; { }, null); call.BeginTerminate((r) =&gt; { }, null); } }; }, null); }, null);
&gt; new WmaFileSink(fname); Are you positive fname refers to an existing file? perhaps put in a quick test prior to this line: if(!File.Exists(fname)) throw new Exception("Something");
Wait, the file has to exist? I thought that the file would need to not exist in order for it to work (or that it would not matter).
Sorry mis-read the example.
Is the call.Flow null?
Just to clarify, the exception is thrown on &gt; recorder.Start(); Correct?
Yes. It is.
Are there any inner exceptions in the exception detail?
Sadly, nope.
Sorry... I'm out of thoughts
I came to work today with nothing to do... Not any more... Awesome. 
That should be the master one now, since its at the OWASP org
Awesome. I know what my next application's easter egg will be...
This is my guess as well - I'm betting the background worker is actually running on the UI thread in his code for whatever reason.
My 10 cents, It's an IO error, use proc mon: http://technet.microsoft.com/en-gb/sysinternals/bb896645.aspx This should show you exactly what is causing the IO error. 
If like me you didn't get this (I really should have) http://armchairdissident.wordpress.com/2009/04/15/a-long-explanation-of-a-damned-fine-joke/
well then I should contact someone! and probably will eventually.
You should really be using a collection view for this sort of thing: http://msdn.microsoft.com/en-us/library/system.componentmodel.icollectionview.aspx Example: http://www.abhisheksur.com/2010/08/woring-with-icollectionviewsource-in.html
Nice, just asked my boss for one of these... I'll have a look when it comes in and see if I can contribute.
The [Sharkbite Thresher IRC library](http://thresher.sourceforge.net/) has been around for ages and is still very powerful. It's all event driven which is very intuitive. It also has CTCP and DCC functionality which might not be too much use to you but helpful nonetheless.
Personally, the hardest part I had with C# was the deliverables. Usually C# applications aren't on the console. They are graphical and deployed somewhere. So there's a lot of platform/non-language stuff to learn.
If you would like i have a school book from when i was learning c# you can have.
The biggest gotcha I've had was understanding that any updates to the UI has to be done on the dispatcher thread!! 
- [Good summary about some language features](http://www.codeproject.com/Articles/327916/C-Language-Features-From-C-2-0-to-4-0) - Get a c# cookbook (or something similar) to study some coded solutions to common easy problems. - Code something simple with the MS Visual Studio to learn basic stuff about Visual Studio. Maybe a simple Winforms GUI that does something when pressing some buttons. - [Some free c# books](http://itdiscover.com/links/free-c-c-sharp-c-plus-plus-books-online-programming)
ASP.NET MVC and XAML are probably the hardest two. MVC is a great concept but confusing, XAML is the same but just a bit repetitive. Everything else like WinForms and WebForms are self explanatory, and Visual Studio makes writing C# actually kinda fun.
That's more of a C/C++ library and is probably impractical for OP.
This is so true! I've got a good grasp on ASP .NET MVC now, but WinForms and WebForms is just so much easier to put together. It's all a natural thought process when developing.
This. Every point in this thread so far is great, but I think the three mentioned in this post are probably the ones you'll run into first up and most frequently. Depends on where you work, but I've found that despite these things being new to C#, they're pretty widespread.
It's handy the first few times around, but it's kinda like tutorial stuff more than anything. You end up deleting the majority of it anyway, so you can just choose to go for an Empty template when you start a new MVC project.
Dont worry you will just do fine Just sign up for asp. Net forums for surr
Since nobody else mentioned it, make sure you understand memory management and garbage collection. .NET is a managed framework, which means memory is managed for you (young need to allocate and deallocate) but you can still produce significant memory leaks if you don't understand how it works. Thought I'd suggest this as it does not seem you have experience with managed frameworks.
Great post. My only addition is LINQ -- makes querying data so easy. 
[CLR via C#](http://www.amazon.com/CLR-via-C-Developer-Reference/dp/0735667454/ref=sr_1_1?ie=UTF8&amp;qid=1376530789&amp;sr=8-1&amp;keywords=clr+via+c%23) This is the only book you need as a beginner to C# who already knows other languages. What are you waiting for? Go get it! Read it! And impress the shit out of your employer.
I just went through a very similar experience. I had never even seen C# and I had about two weeks to learn. I made a small application and it taught me a ton. I would recommend finding some small project to work on. I had never worked with .NET before so my project was mainly UI focused. It still took a couple weeks into the job but now I feel completely comfortable with C#, .NET, and Visual Studio.
its absolutely like chess. when you get comfortable enough you'll do stuff without knowing why but you know its the right thing to do
Webforms are easier to put together all the way up to the point where you start needing to use jquery/ajax...
That first job can be a bitch to get your hands on... I the case of the OP it sounds like they are a seasoned programmer and already know a large collection of languages. My hats off to an employer that recognizes that general programming experience is more important than language specifics. I have a couple of thoughts to your current predicament. Do you have a github account? Do you have any finished and polished projects? Are you in an area with programming jobs? Do you have a resume website? If you have been seriously devoted to c#.net for the past two years and have a strong understanding of the asp and ado stacks I would throw in some sharepoint. It seems that entry level sharepoint jobs are easier to find and can get your foot in the door. Once you have paid experience it gets a lot easier. Also don't expect to get paid much at first. You may have to start as low as minimum wage but that number should change quickly (and if it doesn't its time to move) 
Haha. Yeah, that's pretty true.
I think you're going to find it very easy to learn with your current knowledge of languages. I'd recommend finding some chunks of code to get all the nuances of the syntax down. MSDN's website is a great tool.
&gt; I the case of the OP it sounds like they are a seasoned programmer and already know a large collection of languages. My hats off to an employer that recognizes that general programming experience is more important than language specifics. Yes, I've been programming professionally since 2006, and as a hobbyis since 1998. Iwas lucky enough to find an employer who values general programming skills more than experience with any certain framework. It matches my own philosophy well. I've never had problems to pick up new technilogies. 
Oh, you *should* be worried... ;-) Seriously though, C++ is a beast. You just need to know what parts of it are good to use and what you should stay away from, and when to break those rules. I haven't had the time to look at more modern C++ with ref-counting pointers and such, but the C++ 11 standard did bring a lot of usefull stuff. 
+1 million, this book is awesome.
Events tend to be the biggest culprit for memory leaks.
&gt; IMO learning C# is not your worry. The .NET Framework is. The various other frameworks are. It is like chess. The rules are easy. The strategy is not. ..you should really take the time to learn why.
You'll be fine, that's how I started. Not to mention C++ 11 implemented almost all of the "higher level" programming paradigms (as far as I understand it, haven't programmed C++ since 2005). Your C/C++ knowledge will make you a great C# programmer. And, as previously stated, pick up CLR via C# 
Haha, you'll be all right. Just don't waste anytime before getting familiar with it! C++ is pretty different when coming from a background in other common languages (Java, PHP, etc). Try and go into it with a fresh perspective as certain methods that may seem like a no-brainer in another language may not work as well for you in C++. First things first, [GET STARTED!](http://www.cprogramming.com/challenge.html) I would also recommend checking out [Project Euler](https://projecteuler.net/problems), which is fantastic. Once you start feeling like you've got the hang of things you can head over to [TopCoder](http://www.topcoder.com/) and get comfortable in their [Practice Rooms](http://thevc.wordpress.com/2008/02/27/getting-started-on-topcoder/), and maybe even [start competing](http://community.topcoder.com/tc). While working on those problems, I suppose a few things to focus on/be conscious of would definitely be: * Learn how references, pointers, and arrays work, as well as how they relate to each other. (Just plain old practice really helps out here.) * Kind of hand-in-hand with the previous bullet, be aware of memory leaks. You're in charge of memory allocation and cleanup. * Become familiar with the STL. * Avoid behavior that isn't defined--to be fair, it will definitely happen from time to time, just keep an eye out. It's pretty easy how C++ will allow you to write some code that not only does the wrong thing, but does the wrong thing in crazy ways differently with each run. * Take some time to safely learn how, and more importantly, when, to use Multiple Inheritance, Templates, Operator Overloading, etc. * Be wary of the fact that not all C++ code runs the same on every platform. One example that comes to mind are the sizes of fundamental types. * Check out Johannes Schaub's response to C++ pitfalls [here](http://stackoverflow.com/questions/30373/what-c-pitfalls-should-i-avoid). He pretty much nailed it. Honestly, though, all of that aside, just start practicing and you'll do fine.
Get the book "C# in a Nutshell, 5th ed" and keep it with you at all times at work. Also get LinqPad (http://www.linqpad.net/), a C# REPL. You'll never have a problem when something unknown faces you.
You were at risk of getting a downvote until you acknowledged that the rules have places where they ought to be broken. Very sound advice, +1.
That's the tricky part.
That's kind of been the story of my career. Through Delphi, C# and Ruby it has been: "Can you write in X" "No, I primarily write in Y" "Good enough!"
I love XAML. IMHO WinForms is on it's way out, something that is very XAML-like is going to be the future. WPF/XAML took a while to learn, but once you get it, it's so much simpler than WinForms and far more expressive.
Read up on LINQ. It'll save your bacon. Also, if you're developing using Visual Studio, ask for a license of ReSharper. It's a plugin that makes code suggestions above and beyond what IntelliSense does.
I just opened 2012, 2/3 of those features are already implemented. ALT+UP/DOWN moves codes and auto-completes braces in my 2012 VS pro.
meebey's a great guy, if you ask him, he'll help you out with what you want to do
The latter. The upgrade price would have been more expensive than the new reduced price. It may not be every year though, but it is a disturbing trend.
This. But my question is why they have the Productivity Power Tools as a separate extension in the first place. It's the first extension I install with every new version of VS. Can't imagine coding without it.
Faster updates for extensions used to be a thing, but now with all these VS releases it's not an argument any more. I guess the "sandbox" side is still attractive - if there's a big bug in PPT, you uninstall the extension; if there's one in VS...
So... like in any decent text editor nowadays? Although peek looks interesting.
I use Resharper and it tends to conflict with Productivity Power Tools. If I have to choose one, its not PPT.
I've used both for 3 years solid without any conflicts. Now on R# 8 and PPT 2012.
The new features are nice but ... is it just me, or does every new release of VS make the debugger less stable? 
I haven't noticed much, if any, of a difference from 2010 to 2012
&gt; 1) Auto Brace Completion oh yes thank you
It feels unstable if you are using the XAML Designer. By default .xaml files open with it and it spawns a child process (XDescProc.exe) for each editor open. That evil thing freezes up VS all the time, so I just decided that all .xaml files should open with the Source Editor by default. Much more stable now. If you aren't editing XAML, then I've got no suggestions. 
I've crashed the debugger in 2013 preview, but MS aren't interested.
I have VS 2010 and the same thing with an extension 
I honestly have not had the time nor motivation to try to replicate any of the weird things I have experienced with the debugger, but seems to me has become progressively more random in behaviour since 2008. Breakpoints not being hit, symbols not loaded.... often fixed by just restarting the debugger. Mostly it works ok, but just from my own subjective recollection, the more features I don't really need, such as completing the braces for me (my first university programming exam was hand written on paper with no reference allowed - no intellisense there), appear in the product, the more the things I really do need, such as a stable a reliable debugger seem to suffer. 
It's a way to provide out-of-band new features to Visual Studio and see what works in a "cheap" method that doesn't require modifying Visual Studio directly. The Solution Explorer in 2012 came directly from Productivity Power Tools in 2010, for example.
Same thing happened to me, I got moved to the software development dpt. in my company 2 years ago. I had no knowledge of C# or .NET. But I started non the less... It's a really simple language to learn, and .NET has a lot of documentation online. StackOverflow will be of great help. Good luck to you and have no fear!
Seriously funky stuff. I was thinking of using ILNumerics for a game, but will definitely find ILView handy.
I'm not familiar with ILNumerics. Is it likely this is outputing XAML and displaying with Viewport3D?
You can always just copy the loop variable into another local variable and pass that into a lambda, too.
I'd enjoy this very much.
As someone new to coding, I would absolutely love something like this. I want to see as many things done as many different ways as possible to grow my depth of knowledge, and hopefully be able to emulate things I have never seen or heard of before. DO IT PEOPLE!
That'd be great. Finding good targets and evaluating criteria might not be so easy, though.
Dang Express, not supporting extensions.
Ah, didn't know. My copy was a friend's spare.
I just started c# a few years back as my first language and I'm loving all the help/examples online. Just out of curiosity, how do you end up getting hired for c# if you don't know it? Is this common in the programming domain? 
My employer and I both share the view that a great programmer can work just as well with any language, and can easily learn new ones. I learned Objective C while making my first iOS app. While working on a game with Unity, I learned their own language they call "javascript", that has absolutely nothing in common with javascript, plus a weird shader language that used the fixed function rendering pipeline on early iOS devices. This language was not very well documented, and used by absolutely no one. I don't know how common it is to be hired like this, but at least one other person in this thread had experienced it several times. 
Fantastic!!
Lots of python and C++. C# could stand to be better represented there :)
MSDN Channel 9. Every time. Thousands of hours of tutorials on development with all sorts of MS technologies.
I'll second this, Channel 9 is where i started. Especially [this collection of videos covering the fundamentals](http://channel9.msdn.com/Series/C-Sharp-Fundamentals-Development-for-Absolute-Beginners), it's very easy to follow.
Yeah, they have a couple of series dedicated to beginners. Like [this](http://channel9.msdn.com/Series/C-Sharp-Fundamentals-Development-for-Absolute-Beginners) one which would fit OP's needs.
Once you have finished MSDN's Channel 9 videos, I would recommend pluralsight's training videos. If you have an .edu email address you can get free dev software and a 90 day trial to Pluralsight 100's of hours of C# training video's through microsoft's Dreamspark program. You can also get a free (legal) version of Visual Studio Pro through Dreamspark.
Thank you. :)
I agree with the others that some videos will help, though IMO nothing is better than actually writing code. Pick something you want to make, don't get too ambitious, and make it! Start writing code and searching for solutions to do what you want. It will seem very slow at first and you will spend a lot of time reading though you will discover through the process many truths of software development and a lot of tricks and things that even videos may not cover well. So yes, watch some videos and read some lessons, just remember, nothing is better than actually doing it. Write code early, write code often, and never be afraid to throw work away and do it again. No one writes perfect code the first time and anyone that says otherwise is either a fool or a liar.
I'm sure its been said before, but you guys (and reddit people in general) are awesome awesome awesome awesome awesome. Yup. Awesome.
This a thousand times. It doesn't have to be extravagant, or worth showing off. Just try to *do* stuff with C#. I hope you will find it is an elegant language to write in. Also, keep in mind that one of the greatest strengths of C# (if you're not using mono) is the .NET frameworks. Learn them, use them, love them.
It's frustrating because right when you start getting good enough to be dangerous suddenly your app ui is lagging and application.doevents() is not the real fix despite being tempting. Background worker it is. Invoke this. Invoke that. 
Great idea !
WAt?
I meant C# 5.0...ooops
The only things you would miss would be dynamic (C# 4) and async (C# 5) Dynamic is of limited use, and async is not that important when learning the language. So it should work out fine. edit: dynamic should be available on second thought. It should only be the fixed for/foreach scoping issue, async and caller info that is unavailable.
As mentioned by @mark_marsella on Twitter, this is great for doing something else while a long-running process is occurring. 
I recommend against this, as a newby you will become too reliant on the timesaving awesomeness of R# It's better to learn the normal way then take on enhancements.
It says the link is broken. Got it from here though: http://www.enderminh.com/minh/binary/vsnettt_infoq.pdf
Only up to 2005?
I'm not the OP. That's the only working link I could find (although I didn't spend a lot of time searching)
Did the same a year ago. Had been mostly programming java, which is pretty equal. It was a cake wake, learned it in a couple of weeks. ReSharper helped me a lot to get work done a bit faster. It's a bit of cheating and maybe took a while longer to fully learn everything, but helped get the work done faster, as was needed at the time.
I've looked at LinqToWikipedia and got it running but it doesn't seem to support getting the contents of a page. Example: Web: http://en.wikipedia.org/wiki/Blood_Money_(Breaking_Bad) I found the special:export function: XML:http://en.wikipedia.org/wiki/Special:Export/Blood_Money_(Breaking_Bad) And I've got the API: http://en.wikipedia.org/w/api.php?action=parse&amp;prop=text&amp;format=xml&amp;page=Blood_Money_(Breaking_Bad) But both are just one giant &lt;text&gt;. How do I get Plot, Production, Ratings, Reviews, Guest Actors, etc... easily available in C#, possibly as properties of a class?
Are there any examples using PHP or asp.net that you could recommend? Can you recommend any books regarding secure remote database connections?
I'll post some C# tomorrow. I may have a php example too.
In short: * Add a reference to System.Configuration * In code use: Configuration configuration = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None); configuration.AppSettings.Settings[key].Value = value; configuration.Save(); ConfigurationManager.RefreshSection("appSettings"); or if you just want to quickly read some stuff from the AppSettings section ConfigurationManager.AppSettings["key"].ToString(); 
Thanks for the reply. Can I do this from any executable in the solution or is it tied to only one?
Perfect! Thank you so much!
You need to read the API documentation better. For example, getting the whole content bit is: http://en.wikipedia.org/w/api.php?action=query&amp;prop=revisions&amp;rvprop=content&amp;format=xml&amp;titles=Blood_Money_(Breaking_Bad) But then it is still in the wiki markup language. Which is horrible, well I think its horrible, mostly because it isn't EBNF compatible.
it only uses GDI+ and OpenGL for rendering. No dependency to WPF exists. However, it should work with windows.form container in WPF. 
Personally, I wouldn't store preferences in a .config file -- I would probably write to the registry, which has at least basic protections against two programs making changes to the same element at the same time. With a .config file, if the programs both save their values at the same time, you'll either see file locking exceptions, or values being intermixed. 
I found this: prop=sections example: http://en.wikipedia.org/w/api.php?page=Blood_Money_(Breaking_Bad)&amp;format=xml&amp;action=parse&amp;&amp;prop=sections This returns Plot, Production, Ratings, etc... (unfortunately it doesn't return the side panel with the guest stars). And then I can use 'section=production' example: http://en.wikipedia.org/w/api.php?page=Blood_Money_(Breaking_Bad)&amp;format=xml&amp;action=parse&amp;&amp;prop=text&amp;section=production which returns the contents as html. I'm going to strip it with RegEx or Html Agility Pack.
&gt; (unfortunately it doesn't return the side panel with the guest stars). My query did. You want to spend the time reading how their API works, it will save you more time in the long rum. Parsing the HTML might be easier than parsing the wiki markup, just be careful that you aren't locked in to future changes to how the HTML is structured. (ie if they make a change that is cosmetic to the Wikipedia template, you don't want your parser to fail to find the data)
Tbh, even if you don't have a .edu email, grab pluralsight on twitter or something, offer to send them some proof that you are the age you claim to be, I'm sure they will work something out. When using them commercially I found them to be very flexible, can't imagine they wouldn't be for a request like that.
I created an account here to respond to this specifically. :D When I first made the site, it was the cool thing to do to have a black background and white text. That style fell out of favor years ago, and I still periodically get emails from people complaining about it, so you're not alone. I agree with you on this point, and I have plans to change it, probably sooner, rather than later. I've recently set up an account with User Voice so that users can vote on ideas and suggestions for my site. If you or anyone else is interested, you can even vote on fixing this problem over there: http://rbwhitaker.uservoice.com/forums/216936-general/suggestions/4252107-change-the-color-of-the-background-
http://forums.asp.net/t/1316493.aspx/1
You will want to look into [CSD](http://csd.codeplex.com/), I honestly prefer a proper DTO for my config data rather than tagging appsettings key/value pairs all over. You can have config files for your main executable, you can also have them for any given assembly. It's also possible to have several external config files if desired. If you like you can also use [ApplicationSettings](http://msdn.microsoft.com/en-us/library/vstudio/a65txexh.aspx) which is a feature of Visual Studio with regards to automatic management.
Yes I do. Is that what's causing the issue? 
Open the Solution Explorer. Open references. Click on MySql.Web. Check properties. Not there? Add the reference and point to the dll There, but the version is wrong...follow the link above and correct the version in the web.config (which should match whats in the references folder).
This looks really awesome. Probably overkill for this (two settings), but very cool.
No, but its absence would cause that error message (I think). Likely there is a problem with the installation of it, or your project isn't finding it or doesn't have a correct reference to it, or something like that.
Uninstalling the connector got rid of the error, and since I no longer require MySql access, this isn't really a bad solution.
Task Parallel Library. 
Crap. I'm mobile so I can't watch. Saving for later. Unless someone has a transcript or article of course.
Mono 2.10 isn't supported anymore, but Mono 3.0 isn't available for download for Linux or Windows yet. **EDIT:** Instuctions to build binaries for your own system can be found [in the footer of this page](http://www.mono-project.com/Release_Notes_Mono_3.2).
Don't you have to pay for Xamarin?
Is this the kind of thing you'd both be online with at the same time, or do you want it so moves are stored somewhere then later accessed by the other player? If you're both online at the same time you could do a direct TCP or UDP port between you to transfer the data, if you want to store them a database is probably the best bet. I'm sure we can point you in the right direction for either approach.
for the IOS and Android stuff.
 asm.Emitx86 ( ... ) Wow...
The OSX tarball will work on *nix systems as I understand it (still need to test). As the framework is now at parity with .NET 4.5 windows is not a priority as there are only a handful of instances where you would want to use Mono on windows.
I want to store them. Maybe using MySQL is an option?
Xamarin Studio is free as well. MonoDevelop was changed to Xamarin Studio. You can make limited apps with the iOS and Android mono platform for free but it is severely limited if you don't pay for a license.
&gt;I want to see as many things done as many different ways as possible to grow my depth of knowledge [Rosetta Code](http://rosettacode.org) is kinda neat for that. Unless you meant as many different ways in C#.
Pretty much any book on C# will have a section on database integration. Do you have any Sql experience at all? 
Do you have experience in other object orientated programming languages?
Our tutor writes a book on it called the "yellow book" by Rob Miles, best thing is its free so get it here - http://www.csharpcourse.com/
Hello University of Hullllllllll!!!!!!!!
ABC. Always Be Coding. Now go code already!
This ^ Find a personal project (a to-do list or something that is going to be useful to you), then work out how to do it with Google. books are good, but your will never get a true feel for a language until you need to solve real world problems with it.
Do your homework. 
[C# in Depth](http://csharpindepth.com/) ... solid book.
Only a little bit
Think of something to make and then go out and make it. You'll learn everything you need on the way. (that's the way I did C# anyway). The MSDN help library was enough for me on the reading material front
Even if you don't use the `from x in a ... select x` syntax, the extension methods on each collection are a *massive* life saver. It allows things like, say, if you had an array of Customer objects but you want an array of Customer names, you can do string[] customerNames = customers.Select(c =&gt; c.Name).ToArray(); Instead of string customerNames = new string[customers.Length]; for(int i = 0; i &lt; customers.Length; i++) customerNames[i] = customers[i].Name; Might seem a bit esoteric at the moment, but when you get to a point where you're doing something obscure with collections and you realise you can just chain a few LINQ methods together you feel like your life is suddenly complete.
C# In Depth is not an introductory text. It is a great book for existing C# developers though.
Make writing code a habit. Write daily. Write often. Don't worry about whether the code is good or bad, initially. Start simple and stay simple. Learn to break any coding problem into a set of routines at a high level and write lots and lots of routines. Write comments. They are for you to remember later. Don't listen to people who prefer not to write any comments at all. Write long, readable variable names, class names, namespaces, method names, program names etc The best source of C# knowledge is msdn ( don't waste money and time on anything else initially ) Codeproject.com has some decent articles but that comes later. There are a few problem sites on the web ( including dailyprogrammer on reddit ) where there is a post regarding some problem to solve. Do it religiously, come what may. Spend time reading the documentation. The real difference between amateurs and pros is the thoroughness of their preparation and part of it is the habit of reading documentation. Learn a few TDD/BDD tools like SpecFlow. It makes it easier to remember what you have learnt. In case you really like books, troelsen and eric gunnerson (apress ) have written some decent books on C#. oh, and don't forget to write lots and lots of code. :-) 
When you say you want to learn C#, do you mean purely the language and how to code in it? Or do you want to also learn your way around the .Net framework (say, for enhancing near-future employment)? It would have helped me to understand the difference between the two before I got started. In my case, I'm actually a basic CRUD application developer rather than a programmer.
You are totally describing my journey :) I really had trouble learning programming using the exercises from books and tutorials. Then I finally wrote a program to auto something I normally do manually: renaming hundreds of files and I kept googling everything I didn't know, then I kept adding features and rewriting it and my programming skills really improved.
http://www.c-sharpcorner.com/UploadFile/armoghanasif/CaptureDesktopActivities11122005013755AM/CaptureDesktopActivities.aspx 
After your first project in C#, get Resharper and see what advice it gives you.
I always found [AttributeRouting](http://attributerouting.net/) to be an easy way to customize routes. I hear that MS is including support for it with WebAPI 2.
It's not a good introductory to C# even if you have programmed in other languages before. I'm speaking from experience. Even the author says you'd be better off reading his book in conjunction with another book that starts from scratch.
Yeah, I believe that is correct. I look forward to it, although there are those who argue it is not necessarily the way to go: [OdeToCode-K. Scott Allen: Attribute Routes and Hierarchical Routing](http://odetocode.com/blogs/scott/archive/2013/08/12/attribute-routes-and-hierarchical-routing.aspx) I forgot to mention that in the article - meant to make a note that this is supposed to be included in the upcoming ASP.NET release. 
[this should get you started](http://www.wikipacks.com/pack/remote_desktop_vnc_algorithms_in_dotnet~Uaj-GyGQ-wsgMPEs) I'd take a look at DWM in win7, which allows to see what's happening in a window. Then the challenge is to capture/transmit it.
You could also incorporate command line (no gui) VLC into your app and make capture mode = "desktop". I've seen a few apps with VLC included. It may even be possible with HTML5 now without any external app.
The author (Jon effing Skeet) states that if you're new to programming you'd be better off reading another book in conjunction with his. Well, I guess I was just ahead of the curve. I snagged a c# job and used this book to familiarize myself with the language. I understood every bit of it. It didn't help me with navigating through visual studio, but for c#, it taught me everything I personally needed to know to get the job done. So, I guess the real answer is, as always... **it depends**.
&gt;Resharper is a great tool but it is not a learning tool. I think it's a great learning tool; it can alert you to different ways to express the same thing. Did you have a particular counterargument against it e.g. "it gives suggestions you would never want to use"?
&gt;I think it's a great learning tool; it can alert you to different ways to express the same thing. It is a great tool, one that I use daily at work. The thing is, I already know what I'm doing and understand the changes the Resharper makes. I would want a beginner to get a grasp of the language before them using Resharper. The one thing it does which I don't like is use "var". I understand the use case for it when instantiating an object, but I would worry that a beginner wouldn't necessarily understand that and start using "var" everywhere instead of declaring types, which can make the code confusing. At the end of the day, I don't think Resharper will teach you anything new about C#, it will only teach you different ways to do the same things you've already done.
Just one warning: Once you go LINQ, you never go back.
You got a c# job without knowing c#. You learned c# using a book that assumes you know c# basics and jumps right into delegates. Yes, I would say you are ahead of the curve. 
I meant in general, and your link is greatly appreciated.
I guess I disagree because I myself learned from it. Starting out as someone who didn't know C# (my only .NET language was VB.NET), I had a VB.NET project, and I translated it class-by-class to C# with various online syntax references. As I did so resharper suggested alternatives. It was really helpful. I'm not saying that's the sum total of what you should do to learn C#, but in my case it was helpful.
Red book in my year ;)
Well, mySql does make sense, since it's free. There's a good tutorial here: http://www.codeproject.com/Articles/43438/Connect-C-to-MySQL If you have any specific questions, feel free to ask.
Lambda Expressions FTW!
You did a nice job explaining it. Keep up the good work! 
Fantastic explanation, nice work! :) I normally suggest deleting the default route, as then you're forced to think about your URL design. The default route (controller/action/id) is an internal implementation detail that doesn't have to be exposed to the user (nor should it). Also, always use URL helpers to build your URLs. Never ever hard code them. This means that if you ever change your routes, all your internally generated URLs will automatically change too. For URL routing in JavaScript, you can use my [RouteJs](https://github.com/Daniel15/RouteJs) library.
[StackOverflow](http://stackoverflow.com) is *THE* place to ask programming related questions. Even though [C#](http://stackoverflow.com/questions/tagged/c%23) is the most used tag on StackOverflow, you can find high quality Q&amp;A for most programming languages there. From their [about page](http://stackoverflow.com/about): &gt;Stack Overflow is a question and answer site for professional and enthusiast programmers. It's built and run by you as part of the Stack Exchange network of Q&amp;A sites. With your help, we're working together to build a library of detailed answers to every question about programming.
The need to externalise dependency configuration really depends on the type of application you're building. Some applications have effectively externalised business logic configuration to the DI framework (by controlling the enabled business logic steps and the order they're called). Where I work, the 'default' is Unity, for this particular project we're using Ninject with auto-registration for 99% of the project. Classes that need specific registration (factory setup, singleton, or specific lifetime scoping) are manually configured as an exception to the automatics. The argument as to whether it suits your application is partly a style issue, but also a consistency one if everyone else is working that way, you using something else can make life difficult for everyone else. 
Interesting. I've been teaching myself C# for a few weeks now and came across codingdojo.org a few days ago. I actually just did this kata today on lunch break. Very simple, but after reading that article, I'm curious what the author means exactly by "Functional." Looks like more reading for me! this was what I came up with: using System; using System.Collections.Generic; using System.Text.RegularExpressions; using System.IO; namespace FizzBuzz { class Program { static void Main(string[] args) { using (StreamWriter sw = new StreamWriter("test.txt")) for (int i = 1; i &lt; 101; i++) { List&lt;String&gt; s = new List&lt;string&gt;(); if (Contains(3, i) || i % 3 == 0) { Console.Write("Fizz"); s.Add("Fizz"); } if (Contains(5, i) || i % 5 == 0) { Console.Write("Buzz"); s.Add("Buzz"); } if (!Contains(3, i) &amp;&amp; !Contains(5, i) &amp;&amp; i % 3 != 0 &amp;&amp; i % 5 != 0) { Console.Write(i.ToString()); s.Add(i.ToString()); } Console.WriteLine(""); sw.WriteLine(string.Join("", s), i); } Console.ReadLine(); } public static bool Contains(int i, int s) { if (Regex.IsMatch(s.ToString(), i.ToString())) return true; else return false; } } }
Very cool. Thanks for posting this.
When you say automatic registration are you referring to the convention over configuration extension for Ninject?
http://rbwhitaker.wikidot.com/xna-tutorials I used this to learn. Go through the C# crash course. If you are interested later, go through his XNA tutorials. They are awesome.
Not sure if you use T4MVC, but it's a great library for routing. Gives you compile-time checking for all your routes. :)
Personally, I had a bad experience with Spring.net, I don't take the Spring.net group seriously. You can get auto-registration with Unity, or use programmatic config, or (if you enjoy pain) do xml config. But xml configuration is nothing but pain, there is no good reason to use it for a new project -- ever. 
Ah, sorry - yes. Any of the DLLs that are named in a certain pattern in the application directory are loaded, scanned for classes, and registered for all their interfaces. 
It works fine, the problem is the stream is too big for me to upload to the database service I'm using. Not sure how to resize it before trying to upload.
Thanks, unfortunately in this situation blob storage isn't practical at the moment. I plan to write a backend to handle it later on but I've got a bit of a deadline for this particular functionality. Since I'm copying over an image directly from the Lumia 920 camera, is there some way for me to resize the resolution of the image? It's using the max resolution of the camera (and there is no way for me to set that when using the cameraTask) and that's just too damn big. I'd be happy with a much lower resolution image.
I'll be checking that out too, now :-) Thanks!
Thank you very much. Will be sure to ask!
Just dropped you a PM with a dropbox link that should work for you. It takes a System.Drawing.Image and returns a System.Drawing.Bitmap which you can do Bitmap.Save(MemoryStream) to get the byte stream back out.
The problem is trivial so a minimal condition-based approach is able to do the job. The point was to show the functional nature and capabilities of C# in a familiar scenario - rather than just solving the problem.
Awesome! I will be trying this out immediately. Feature request: "Add to Solution Dictionary" and "Add to Project Dictionary" which adds custom info to a solution/project file. Reason being, on a solution with custom mnemonics, these should be checked in and shared amongst all SVN/Git/TFS participants.
That benchmark makes no sense. There is no way a reflection call takes barely 10x more time than a static one, and compiled expressions are supposed to be *fast*, not *slow*. You are measuring not only the cost to call something, but also the cost to call the method that does it! For example, instead of having a `CallStatic(double)` method you should directly call `Widget.GetTangent` in the benchmarking loop. Also, you're using compiled expressions the wrong way - compile them once, then benchmark them. If you want to benchmark the cost of compiling expressions, that's probably very interesting, but it has nothing to do with this. Finally, you shouldn't compute a tangent - it's an expensive operation, probably more so than the basic call times. Using [this](http://paste.awesom.eu/c2Z&amp;ln) code, I get [very different results](http://i.imgur.com/LuJZqjO.png).
Is it poor form to post a link to a free pdf version of this book? I haven't posted in this sub before.
 - "This benchmark is not very useful" usefulness is subjective - you can say "for me" and cannot generalise. And there is no such a similar benchmark around - if there is you can help and point to it. - "you don't seem to understand the advantages of compiled expressions" huh?? Are you a psychic? How did you know? I am looking at the performance implication. Other advantage is out of scope of this article. - "rather dubious". Seriously? So what doubts you have? Can you find a simpler code than this? - "Don't generate a new random number each time, just use the loop index, make your function simpler" to do .... what? Change it yourself to see that it does not make any difference. - "the JIT can do weird stuff." Maybe weird to you, clearly documented and explained in the MSDN which you can consult. My warmup code is exactly meant for that. 
I edited my post. Look at the two links in the last sentence. (by "weird stuff" for the JIT, I mean stuff like throwing away unused code, which can totally mess up a benchmark)
If I want to setup a connection in MySQL but not have it as a localhost (localhost 127.0.0.1:3306) and instead want to have it connected to another ip on a computer, like a server, what should I write there instead of localhost 127.0.0.1:3306?
I'd take it back a step and ask "why do we need dependency injection in the first place?". I have found DI to be WAY overused simply because it's popular. IMO the indirection it introduces makes code harder to follow and consequently understand, therefore making it harder maintain. It should therefore be used sparingly and only when it provides a true advantage. 
Procedural/Imperative is what you just coded - it's step by step instructions (more or less). Functional is the collection of functions ignoring things such as application state. (I suck at describing this... just read below) When someone things of functional programming, normally they think of Lisp (there are others). Take a look at some Lisp tutorials to really see what functional is all about. Read here: http://en.wikipedia.org/wiki/Functional_programming And here: http://en.wikipedia.org/wiki/Procedural_programming
 - "there is no way a reflection call takes barely 10x more time than a static one". Seeing is believing... you seem to be in denial. Did you run it yourself? - "you're using compiled expressions the wrong way - compile them once, then benchmark them". Read the post - that has been explained there. Honestly, I am not sure why I am responding. You seem to be just trolling. 
&gt; "there is no way a reflection call takes barely 10x more time than a static one". Seeing is believing... you seem to be in denial. Did you run it yourself? I'd probably get the same results if I ran it myself. Because your benchmark is **wrong**. &gt; "you're using compiled expressions the wrong way - compile them once, then benchmark them". Read the post - that has been explained there. Yeah, you explained it - by pretending people compile expressions they don't need. That's not how it's done. Compiled expressions are used *only* when you know you'll reuse them.
I prefer Entity Framework. I do not recommend using SqlCommand to talk with the database (honestly, anything where you have to hard code magical strings is just plain bad practice). Linq-To-SQL used to be my go-to, but since EF can do code-first development, supports migrations and is just as easy to configure - I go with it.
&gt; But xml configuration is nothing but pain, there is no good reason to use it for a new project -- ever. I remember trying to explain this to a new team I had joined, it basically revolved around some java guy wanting to bring Spring into it. Ninject, AutoFac, Unity, all use Language features to let you easily map the types. Spring uses XML. Why is that a good thing? What benefit is there of having it in XML? Apparently it is a huge benefit being able to change your containers without re-compiling the application. Even though you'd never do that without a regression test cycle... I've only come across 4 spring.Net advocates. They are definitely below average compared to most .Net developers I've worked with. Two, exceptionally so.
You see, that's just the thing. Aethec isn't denying the facts, just claiming you attributed the result to the wrong source. This is a common error in performance measurement, so I'm not surprised. If you do performance for a living you should be used to this criticism, even anticipate it, and at least provide a defense against it when it is raised.
Your reflection call is sooooooo SLOW. Why? Because you incur boxing/unboxing everytime - only on the reflection. So why do you think I designed this the way I did? Nice try but sorry - did not work.
It might be easier to help you if you posted some of the code in question (how you're generating the random number for example).
Here is the Method: private static int NMEFightVar() { //defining enemy battle variables int NMELvl; int NMECount; //generate random enemy multiplier Random NMEMult = new Random(40); Console.WriteLine("What level are you foes? 1-40"); NMELvl = Convert.ToInt16(Console.ReadLine()); Console.WriteLine("How many are there?"); NMECount = Convert.ToInt16(Console.ReadLine()); int NMEFightVar = NMEMult * (NMELvl * NMECount); return NMEFightVar; }
Thank you so much. that worked.
that really clarified many things. thank you again. hopefully i won't be making that mistake again. :D
No problem! Glad to help. 
Okay, I found the answer. Under label properties you have to have UseMarkup selected. Then you can use text attribute markup to change the font attributes inside the labelprop property. example: *&lt;span font='large' weight='bold'&gt;some text&lt;/span&gt;*
I've found the opposite. I use a container even for simple apps now, since it makes my interfaces and implementations much tighter and simpler and I don't have to worry about gluing them together or figuring out how to decompose the dependencies manually. The problems relating to indirection are few in number and almost always obviously related to configuration.
If you use LINQ to XML I've read that it can be pretty powerful. I've used it for some tiny problems but not for major operations. XPATH kills me. Specially since you have to take into account the XML namespace every time you had to read an element. 
I would totally grab this up but resharper and coderush already have this one covered for me any benefits over the the resharper and coderush implementations? 
Great idea for a benchmark! Have you tried adding another task where you inline the call? I get 0.84s for no call and 0.86s for a static call which implies that 97% of the time is spent in the PRNG and doing math and not making the call so the results of your benchmark program say very little about the relative performance of static, instance and virtual calls... 
Feels like you are trying really hard to sell something that should be able to sell itself. Im skeptical, especially of your numbers.
Why you think it ?
*"Build Time: 3 minutes and 10 seconds"* 20 Projects and, I assume, they are all written in C#? That seems entirely reasonable to me. Fast, even. *"we need to run our tests 10 times per work hour for each person, an acceptable number...For each work hour, we lose 56 minutes and 50 seconds building or running tests..."* Obviously, I need to understand TTD better, but I don't really understand the numbers. I don't see why you'd want or need to run tests 10 times per hour. And, presumably, you're not sitting there, twiddling your thumbs as the builds are happening. You're writing other code, responding to emails, talking with other staff, etc.
Hey. Try out the Nokia Imaging SDK. It can resize things from a stream without first having to create a bitmap in memory - meaning it can work with very large images without impacting application performance. (Info and Download - it's free) http://developer.nokia.com/Develop/Windows_Phone/nokia_apis/imaging.xhtml ... the example you're looking for is on this page: http://developer.nokia.com/Resources/Library/Lumia/#!nokia-imaging-sdk/core-concepts.html Here is some code from my project. To get an IBuffer, grab it from a memory stream. The stream that you load in to the MS must be from storage (so it's a buffered stream, it will not work if you create it from a byte array). So, write your image to storage, then load it again as a stream, then pass in to this: public static async Task&lt;IBuffer&gt; Resize(IBuffer buffer, double width) { using (var editsession = new EditingSession(buffer)) { var aspect = AspectRatioHelper.GetRatioRaw(editsession.Dimensions.Width, editsession.Dimensions.Height); var newH = width; var newW = Convert.ToInt32(aspect * newH); //Ensure the aspect is applied in the right fashion (portrait versus landscape) var w = editsession.Dimensions.Width &gt; editsession.Dimensions.Height ? newW : newH; var h = editsession.Dimensions.Width &lt; editsession.Dimensions.Height ? newW : newH; var result = await editsession.RenderToJpegAsync(new Windows.Foundation.Size(w, h), OutputOption.PreserveAspectRatio); return result; } } And the code that calls it: Pass the image from the camera in to this MemoryStream. async Task&lt;BitmapImage&gt; _saveStream(MemoryStream ms) { ms.Seek(0, SeekOrigin.Begin); //write the big image down to the FS so it can be worked on out of memory by the Nokia Imaging SDK await ApplicationDataHelper.SaveStream("cap.tmp", ms); //why save and reload it, once it's reloaded it becomes buffered and can be resized without being decompressed using (var reloadedStream = await ApplicationDataHelper.LoadStream("cap.tmp")) { using (var bufferedMS = new MemoryStream()) { await reloadedStream.CopyToAsync(bufferedMS); var iResult = await ImageTools.Resize(bufferedMS.GetWindowsRuntimeBuffer(), 800); await ApplicationDataHelper.SaveStream("cap_t.tmp", iResult.AsStream()); var bm = await ApplicationDataHelper.LoadAsBitmap("cap_t.tmp"); return bm; } } return null; } For posterity - the ApplicationDataHelper load stream class public async static Task&lt;Stream&gt; LoadStream(string fileName) { if (!await FileExists(fileName)) return null; var file = await Windows.Storage.ApplicationData.Current.LocalFolder.GetFileAsync(fileName); return await file.OpenStreamForReadAsync(); } public async static Task&lt;bool&gt; FileExists(string fileName) { try { var file = await Windows.Storage.ApplicationData.Current.LocalFolder.GetFileAsync(fileName); if (file != null) { return true; } } catch (FileNotFoundException ex) { } return false; } 
If it was me I'd use SQLite. It has Windows Phone, Windows 8 and .NET pre-compiled binaries and it's super simple to use in a code first fashion. Get it free here: http://www.sqlite.org/download.html. It also ships with your project without needing an installer of its own etc. Once you have it, there is a nice little wrapper so you can use simple LINQ operations on your database: https://github.com/praeclarum/sqlite-net 
This seems to have very little to do with powershell, and more to do with using msbuild.
For the most part, it should be rare you need to build all 20 projects at once. You also talk about the money lost in waiting... Might want to spend a much smaller amount of $$$ and buy something more powerful than an i3. &gt;&gt; For each work hour, we lose 56 minutes and 50 seconds building or &gt;&gt; running tests, we are reducing in almost 50% our productivity. &gt;&gt; &gt;&gt; But we are 4 people and we work 8 hours per day, so for each 32 &gt;&gt; work hours, we effectively work 16. We are losing 16 hours per day. &gt;&gt; &gt;&gt; In an average month, in 30 days, we lose 480 hours. ...these numbers dont work at all. 
1. You can only do this if you haven't defined any pre/post build steps in visual studio. At a previous job, someone had defined a redneck GAC folder and copied binaries there to speed things up ... rather than let VS handle the build dependencies. 2. i3? 4GB? *Really?* 3. Compiling typically isn't CPU bound anyway (unless you're using an i3...) It's I/O bound. Get an SSD and have your temp files go there (not your source files, but if you have room, that's nice too). The C# compiler + linker make many temp files during compilation. 
Hmm. Nuget. You're specifying versions on the fetch, right? Otherwise there's a chance you get some newer version than intended. Much hilarity ensues. http://stackoverflow.com/questions/7772346/how-to-specify-specific-dependency-version-in-nuspec 
1. Yeps. To be honest, I don't use MSBuild a lot. But if you define a pre/post build in Visual Studio, could you migrate them to run in the command line ? 2. Yes. What it is wrong here ? 3. Good point. I tried it with a core i5, and it still slow. I will try to test in a notebook with SSD.
Which machine are you using ?
It depends. We are using DDD, so it's common to have a "Domain" project, that is the application core, this project is referenced in a lot of others, like repository, service, web, and these projects have test projects referencing them. So for every change I make in "Domain" I need to rebuild a lot of projects and their test projects. About buy a better machine. It's in the same talk than buy a second screen. Companies should make a math and figure out how much you can increase the team productivity, what's the team cost for the company and how much costs the new hardware. For example: In Brazil, where I live, a good pc costs more than a average monthly salary. In USA, a good pc is lot of more cheaper, and a developer's salary is higher.
Yes. They are all written in C#. It depends. A change in a domain project, that is a project that we work a lot, triggers change in almost every project in the solution, remember that every project has a test project referencing it.
But we need to understand that developers are paid to produce software, not answer emails, talking with other people (in this case, it's even worst, cause I'm breaking the flow for one more developer).
I know, I need to change my i3 for a better machine. But in Brazil we have a lot of taxes to buy a PC. It's better to wait, travel to US and bring a PC from there. Sad.
Build server is a virtualized 4-core machine with 8 gigs of ram. Dev machines are ssd, 8 core (i7) with 16 gigs of ram.
Why not ninject ?
How much cost these dev machines in US ?
Didn't know you were in Brazil. A friend in Ukraine does the same thing. He comes to the US with an empty suitcase, and leaves with 2 new laptops and dresses for his girlfriend. ;) 
And in denmark ?
I will do it as soon as possible. =D
I think they were about 13.000 DKK (about 2.300 USD). You should be able to take at least 25% of the price in the US.
Also sounds like it would be better to offload test running to a dedicated computer/server in the office and incorporate frequent pushing of code to the repository throughout the day.
&gt; You can only do this if you haven't defined any pre/post build steps in visual studio. At a previous job, someone had defined a redneck GAC folder and copied binaries there to speed things up ... rather than let VS handle the build dependencies. Eh? msbuild runs pre and post build steps that you define in Visual Studio. Visual Studio and command line builds are basically the same. I suspect OP did a command line build after a VS build without a clean, allowing msbuild to skip the actual compiling.
You should check out ncrunch for unit test running. It tracks changes and determines what tests need to be run and then compiles and runs them in the background (constantly or on save / demand, very customizable).
Perhaps I'm thinking of an earlier version of VS.NET then. It used to be that those were run by the IDE and you couldn't run them from a command line build (csc.exe) unless you ported them to your script in some way. 
I couldn't get it to load earlier so posted based off the comments. Was just trying to help since he has lots of downtime for testing and the software would pay for itself a few times over within a month
Thanks for the answer but I didn't really answer my question. Can anyone help me?
I cleaned the build. If I didn't, the difference would be larger.
Thank you for the praises. You have reason, we have to all these other things. But we can't do it while we wait for a build. At least my brain don't work in this way. I have to focus in a unique task to be productive.
Try right clicking the project and excluding it from the solution, then deleting it.
I can't really answer your question. I just glanced at it so far and I just finished learning the basics of C#. Though I would like to know where you got this?...
Ahh, you are awesome for sending it over, but unfortunately WP8 doesn't have the same System.Drawing as the rest of .NET
You kick ass. Thank you.
My only problem with it is that it sometimes goes a little [*too* far](https://lh6.googleusercontent.com/-WcUgIlpfYRY/UIdGWIpwHiI/AAAAAAAAB3I/I2tPKpr8L78/w1596-h291-no/resharper.png).
I believe the problem is that internal processes in Visual Studio have a lock on the project file, so attempting to delete that file just throws an error.
I have anchors set to the top left, but I didn't nest anything into panels.
what are you drawing onto? what type of object?
The circles with the red and black dotted lines in them and the boxes are the "drawn" parts instead of pre-made windows tools.
Thanks, this was the problem. The computer screen scale was set to 125% for the one that made the program and the computers I was using it on were set to 100%.
Awesome! I spent hours messing with a similar problem. Good luck.
You can checkout `AppHarbor`. They host .NET apps, with a simple deploy from a git push. https://appharbor.com/
I'm glad you do, thanks!
Interesting how a simple tweak can make an API much more useful. Do you just build on top of TagBuilder?
Yes! If you take a good look at the [HtmlTag](https://github.com/amoerie/HtmlBuilders/blob/master/HtmlBuilders/HtmlTag.cs) class, you'll see it has a private TagBuilder property. I didn't want to rewrite anything TagBuilder already does well (such as merging attributes with anonymous objects, managing css classes, ...) so I reused as much as I could there. 
Yeah, I'm just more confused. I just used the shape parts from the windows toolboxes to sort of "draw" custom instrument gauges. Although /u/freedoodle figured out what was causing me the problems and I know how to fix it now.
okay great. I gotcha, you used the shapes okay. well if you placed the shapes into a panel as a container and anchored the panel accordingly that would of addressed the scaling issue as well on resize.
Yeah, I didn't know that when I decided to just use a shape box instead of a functional panel box for the gauges. Lesson learned.
This is awesome!
Looks pretty good! I did something similar to this but for declaration of pull-down menus and context menus. If you really want to go off the deep end, you get expand the builders to have compile-time properties representing the most commonly used (or the entire HTML spec) tags/attributes and avoid all the duplicated string literals: var fluent = HtmlTag .div.Class("control-group") .Append(HtmlTag.div.Class("controls") .Append(HtmlTag.label.Class("checkbox") .Append(HtmlTag.input.Checkbox) .Append(" remember me"))) .Append(HtmlTag.button.Submit.Class("btn") .Append("Sign in")) Even elements like the CSS classes could be declared once and reused. In the sample posted on git, it's a bit trivial, but when you have several elements using the same CSS class, it can reduce duplication/typos and simplify renaming classes: var controlGroup = HtmlTag.Class("control-group"); var controls = HtmlTag.Class("controls"); var checkbox = HtmlTag.Class("checkbox"); var btn = HtmlTag.Class("btn"); var fluent = HtmlTag .div.Class(controlGroup) .Append(HtmlTag.div.Class(controls) .Append(HtmlTag.label.Class(checkbox) .Append(HtmlTag.input.Checkbox) .Append(" remember me"))) .Append(HtmlTag.button.Submit.Class(btn) .Text("Sign in")) When I added compile-time syntax kinda like the above for my context menu API, it made it a joke to whip up new menus and everything always "just worked" because it was _impossible*_ to introduce typos or mismatched types. EDIT: Not to mention _fast_; the intellisense would do 95% of the work for me. _^*life ^finds ^a ^way_
Little tip for hosting Visual Studio solutions with NuGet packages on Github : Use package restore http://docs.nuget.org/docs/workflows/using-nuget-without-committing-packages Especially in your Generic Datatables project... you have a ton of external libraries :P Other than that I did a quick code review and it looks good.
Hehe yes, it should already be enabled on the HtmlBuilders project. I'll have a look at the GenericDatatables project. It might be already enabled on the v2.0 branch, not too sure of the main branch. Anyway, thanks for the feedback!
It's great to bring this to the attention however, Xamarin's licensing is expensive and worth it if you are building a business but not as a side project. It is $299 per platform (so if you want to do iOS and Android, it would be $299 * 2) if you want to be able to use 3rd party libraries and have unlimited app size.
I thought all my dreams have been answered until I saw this... I'm currently prototyping a project in Visual C# 2010, hoping to port to Android (and iOS, if I earn enough capital to buy Mac stuff to develop on) *sigh* looks like I'm stuck with Eclipse in the meantime...
What you could do is this: prototype in Java and then use [IKVM](http://www.ikvm.net/) to compile the Java code into C#. If you keep all of the business logic separate from the UI, you could get 2 platforms for free.
You could do a mini-kickstarter if you know you can sell it then sell 300 copies before release or something.
&gt;looks like I'm stuck with Eclipse in the meantime... What is your opinion of Android Studio? (based on IDEA) I take it you're not a fan, I much prefer IDEA to Eclipse, myself.
Interesting. I see there's mobile clients - but can I stream to any browser on any device? I use a combination of media server solutions on my server at home - one for uPNP capabilities for my Google TV devices, Subsonic to stream over the internet, and some others I can't even remember. Would this be a solution that combines them all into one? If so, I am soooooo down to help (professional .Net developer)
Look at this: http://www.techotopia.com/index.php/C_Sharp_Essentials
We do not have uPNP at this time. We do have a developer who started it, and got pretty far, to the point where you could fully browse the library, and play on some devices (I don't recall which, but I can ask him). But then once we got all the native apps that we have (mentioned above), he lost interest in continuing it since at this point we have most of the important platforms. If you're interested in picking it up that would be great. It's a large project though so if you're time-limited, there's plenty of other areas where you can help too. 
This was an error involving prior use of a database for a school project that had to make use of a legacy MySql server, it had nothing to do with the book.
Understandable. Well if you're ever looking for another android app idea, we're seeing a lot of demand for an app that will work well from a 10ft ui on a big screen. We really like our android app, but it's currently designed primarily for touch.
Hrm I'll keep up to date with the project. Hopefully I can find time to work on it.
[dotPeek](http://www.jetbrains.com/decompiler/) is decent as well; not open-source, but free.
There's an awesome channel9 video/podcast about not only EF 5 and 6 but the EF team and the history of EF http://channel9.msdn.com/Shows/Visual-Studio-Toolbox/Entity-Framework-5-and-6 I've only just started listening to it but it's horribly fascinating because the EF team members don't use a typical sales pitch and explain a lot of the confusion on some of the older versions of EF and explain a lot of the issues with older versions.
Sadly no. Since the device adheres to HID standards they just give you a list of HID commands (reports) you can send/receive, but it doesn't provide any code to assist in doing so.
You probably want to look for "assembly" information rather than "dll" information: http://stackoverflow.com/questions/383686/how-do-you-loop-through-currently-loaded-assemblies
Great that there is now built in support for logging/interception.
Agree, especially since the Reflector is not free.
ALWAYS write comments.
Woo, I actually just noticed today was my cakeday :)
I've used HidLibrary before, and very recently actually. The device I was working with would send reports with the type ID, for which you just had to filter on specific type ID you wanted and extract the payload. Have they given you a more detailed datasheet? What's listed as a "datasheet" on IDTech's site seem more of a marketing brochure than anything.
dotPeek seems to deal better (compared with .NET Reflector and ILSpy) with obfuscated assemblies too. 
Upvote for not being a blind IoC fanboy. We need more developers who think of the new guy, think of maintainability and business value before going all-out academic with complex solutions to simple problems.
We need DI to be able to create self-contained unit tests, i.e. that don't rely on some global state having first been set up. Statics are the devil! 
If I remember correctly, I had it as an interface at first but changed it to an abstract class so I could have the Parent property setter internal. maybe i should look into it again...
[Crash Course](http://rbwhitaker.wikidot.com/c-sharp-tutorials) this helped me out a lot. Its pretty well done.
Using DI for repositories so they can me mocked for unit tests makes sense. Using DI everywhere and for everything is annoying and amateurish.
Funny, I was thinking you're the amateur by not understanding that the trade off from teaching someone what the conventions on a project are yet not having direct access to seeing dependencies is on the whole better than seeing dependency linkages in the code and having to maintain them manually, even on small projects. If you claim that you can't find dependencies because you couldn't find the container setup, it just shows you don't have much experience with it, since it is the same every time, and once you know the convention, it is easy to debug and intuit. Honestly reflect on your own usages of convention in your day-to-day coding and you'll realize you depend on them, too. You're just not accepting these.
BuckCherry's answer in this thread may answer your question: http://stackoverflow.com/questions/3329641/how-do-multiple-clients-connect-simultaneously-to-one-port-say-80-on-a-server
What do you mean by 'side bar'?
Provided you don't use any .net components you can use C# without .net. You are giving a lot up though. If you are worried about cross platform development than I very much recommend using monodevelop which uses C# and mono, an open source, cross platform version of Net
No, you can't. Not on windows, anyway.
You can do it with http://spoon.net/studio however your EXE will end up being around 50MB
I fucking hate other programmers.
In general, .NET has to be installed for a .NET executable to run. The .NET executable runs within the .NET runtime (CLR) which provides the security, memory management and other functions. When you run a .NET exe, Windows will call the .NET loader (from the Framework) to load the exe and take over running it. There is talk about compiling C# to LLVM [here](http://blog.prabir.me/posts/llvm-native-c-compiler). edit: this was such as interesting question that I did a quick check and found an [article](http://msdn.microsoft.com/en-us/magazine/cc301479.aspx) about how a .NET executable is hosted. 
The poster does not provide enough information to make the assumption that all desired assemblies exist in the current app domain.
Look into Vala. It doesn't use the .NET framework or Mono. Instead it compiles to native libraries, but it's based as closely as possible to c#. https://wiki.gnome.org/Vala
Yeah agreed Manticor - just I wouldn't go randomly loading DLLs discovered on disk - never know what junk gets found. Let alone if it's managed or not etc.
Are there plans to make a DVR for live tv?
C# is just like Java. It's a regular programming language that can do anything. 
Big upvote for EF. Once I got the hang of mapping the relationships for code-first, I was in love.
At the base, C# uses System namespace which contains all the fundamentals for objects.
I would at least start with C# 3.0 as LINQ/Lambdas are integral in using "modern" C#. Most of the framework/library is backwards compatible, so there is no harm in starting with a somewhat "simpler" feeling C# 2.0. 
^^ this. Start off writing traditional foreach loops and whatnot to get the fundamentals down then start using lambdas and LINQ.
Always use the most recent, afterall it includes the older changes as well. Every version change supposedly improves the language and its usability so why learn something that is less useable? Learn version 2 and you are stuck with arraylists, I think Generic lists only came in in V3. BTW C#5/6? coming out in 2014 will have a big jump as well. 
Go with the latest. Dot net 2.0 is horrible if you're used to all the cool stuff from the later versions! I don't think you're gaining anything by using an old version, you'll still be able to fall back if you need to.
Yes, But the 3.5 framework encompases the 2.0 framework - you can't have 3.5 installed without having 2.0 installed. I probably should have said: "Running a .Net 2.0 exe will work out of the box on Vista and Win 7". Irritatingly, the 3.5 framework is NOT installed by default in Win 8, so you can't write an exe that will work out of the box for Vista, Win 7 and Win 8. 
I would start with the latest version. C# in itself isn't so hard. Mastering the framework is going to be the real battle. Well that and good program design.
also, it's good to remember that 'yield return' exists and should be still be used in cases where LINQ breaks down (such as tree traversal).
Bear in mind that C# is really just a language specification. Unity, mono, and xameran all use C# without needing to compile it down to clr. Depending on what you are trying to achieve depends on what route you would want to go. Since most versions of windows have .net included are you trying to crossplatform? If you really want to generate raw binary there are compilers for that to, bit you might be trying to fit a round org in a square hole.
No. Having to install .net framework is generally not a big concern, its like having to install java. Most people will already have most versions installed.
I would go with the latest but to be honest you are going to start with the basics anyways.
[While not everyone believes this reddit AMA response about Windows 8 it is certainly true about C#](http://www.reddit.com/r/IAmA/comments/18bhme/im_bill_gates_cochair_of_the_bill_melinda_gates/c8ddrhd?context=3)
That's not quite true for Python though :-) But for C#, you want the latest version possible. 
Mono is an implantation of the CLR. Xamarin are the current "owners" of mono and so that is just the CLR again. I'm not sure about unity but I would imagine it is tied to mono. You are correct in saying C# is just a language spec, but I. Practice I have yet to see a production compiler turn c# into native code with no CLR backing it. There is no reason why somebody couldn't do that, as far as I know as I haven't read the full C# spec but there is no reason to reinvent that wheel.
With mono and cygwin set up follow the top answer [here](http://stackoverflow.com/questions/4474613/can-not-compile-simple-c-sharp-application-with-mkbundle). This makes rather large binaries though (about 4mb compressed for simple stuff) and you need to ship mono-2.0.dll (and zlib1.dll if you used -z) along with the program.
2.0 didn't have LINQ. *nightmares*
Thank you all guys, for your answers, i agree is better to start with the newer version.
Yes it is, i know just some basics in python 2.7
I know no one ever wants to hear this, but I would suggest you learn some basics of programming with regular old C. You dont have to learn it like a master but take a week or two to learn the concepts so you aren't lost at sea. This author is a favorite. http://c.learncodethehardway.org/
I gathered since you asked. Don't know any other language besides Python where you wouldn't just use the latest version per default :-)
If I ever want to figure out how a certain Linq construct behaves, [Jon Skeet's Edulinq ebook](https://msmvps.com/blogs/jon_skeet/archive/tags/Edulinq/default.aspx) is fantastic.
At least c# 2.0 introduced generics, imagine life without that? *shudders* 
NGen is Microsoft's tool for compiling to binary - http://msdn.microsoft.com/en-us/library/6t9t5wcf.aspx?vm=r&amp;s=1 Note it requires /Net to *run* but the finished exe does not. IL2CPU works too, but I've never used it and I think you might have to be running COSMOS to run it: http://en.wikipedia.org/wiki/IL2CPU?vm=r&amp;s=1 , http://www.hanselman.com/blog/TheWeeklySourceCode15TinyManagedOperatingSystemEdition.aspx?vm=r&amp;s=1 You can also compile it to javascript(not related, but once something is in javascript you can put it in any form you please) http://xmlvm.org/clr2jvm/?vm=r&amp;s=1 Also, for the OP you might want to view the response here http://stackoverflow.com/questions/1616761/c-sharp-without-net-framework which makes a good pooint, if you are a thinking you'll run faster as managed binary code you probably wont get that much of a speed increase.
They have talked about small additions like a new succint syntax for class definitions along the line of F#.
Do you have any sources or examples for this? Would love to see how they would implement this.
Nice man, thanks
My pleasure. I've followed the language from beta so I know there has been a lot of great additions that I couldn't do without.
I disagree. I started with C# myself and I love it. Besides C lacks inheritance. Why not suggest Java which is syntatically similar to C# or C++ which is pretty much *the* universal language if you ask most people.
I only suggest C because its small and teaches you the basics of programming quite easily and help you to start thinking like a machine. Java and most other serious OOP languages now are a ton to remember especially without a base.
I suppose that's a fair argument, although I don't personally know anyone who uses C anymore. As long as the language someone starts with supports all normal logical operators, methods, variable types and if/loop/case other logic flow, it doesn't matter WHAT they use. Then they can graduate to classes, inheritence, interfaces, threading and so on... I'd still recommend someone pickup something like Java or Python but I can see the value in C.
Indeed the main value C has over Python is teaching you to work in a rigid syntax. Python encourages you to be real lazy. I agree with you though about C having little practical use.