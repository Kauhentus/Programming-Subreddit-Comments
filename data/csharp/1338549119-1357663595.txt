For this it's important to remember you'll have to reference System.Drawing.dll and it has a different Color class than WindowsBase or whatever it is that WPF uses.
What are you trying to visualize? A database? A domain?
I'm not sure I follow you. Files are only related to each other physically by directory. If you're talking about classes then you're talking about visualizing the domain... I don't know of a tool but I'm sure there's a vendor (probably JetBrains) that makes a plugin for that sort of thing. If you're just looking to see how methods are called you can always use either the 'View Call Hierarchy' or 'View All References' context menu options.
You can also right click on a project and try 'View Class Diagram'.
There's always the good old pencil and paper....
http://www.ndepend.com/Screenshots.aspx 
I don't know which VS version/edition you have, but if you see an "Architecture" option in you main menu then you can use that to generate dependency graphs on different levels (class/namespace/assembly) of your solution.
You can do exactly that with resharper. It will convert a ternary operator into an if statement so you can maybe understand something a bit complicated and then convert it back if you're happy. This also goes for linq...
You would have to be a tool to not know the code was written by a tool.
There are several books you can try do some reviews on amazon. That is how I learned some of languages I know
Sorry I don't have a good recommendation for learning, but once you're up to speed I highly recommend C# 2008 from the Wrox Programmer-to-Programmer series as a desk reference. 
The O'reilly Cookbook series on c# are excellent to quickly learn the ins and outs. I think these Cookbooks boost productivity immensely and really give you an intuition on where to go in the framework to accomplish certain tasks. The snippets give you discreet solutions to common problems a professional dev would run into every day. When I started with c#, I also got a lifetime membership to http://www.learnvisualstudio.net and I think it was worth every penny. More than just the language, you have to learn the patterns and all the tools available and they have that stuff covered too. No better way to learn than peeking over the shoulder of a guru.
Learning programming on the .net platform consists of learning the .net library, which is pretty big, and your flavor of language like C#. Learning C# itself might be the easier of the two in my opinion, esp since you have a strong background. You could ease yourself into the world of .net by programming .net in C++ for a while. You can get used to the libraries and the general environment.
It depends on how you like to learn. Personally, I just jump in and start writing things. I assume you've downloaded the VS Express edition, so just take your time and make simple Winform apps to do stuff. Check out anappaday.com. 5 years ago I wrote a little app every day for a month, and released the source code. Maybe there are some good examples there. Email me if you Improve or fix an app and I'll publish it. 
On my phone atm, will reply properly later, but look at the antixss library on codeplex (and nuget).
I've been reading the forums on that for a bit now. I don't hang out on CodePlex a lot, so I'm not sure if it's just an angry community or what... but there are a lot of unhappy people there. edit: I tried this lib out. The most recent version does appear to be broken.
Your comment just took me to the site too. Have to admit we're not on the latest version due to not having enough time to make sure we've tested it fully, although looking at the comments, looks like it's best to leave it, at least until 4.3. My boss was talking about it the other day, and I see some people recommending HtmlAgilityPack with a whitelist, so guess I should have a look at that when we get a bit of space in the development plan :)
I very much like the way you think. I'm the jr dev here, haven't even completed a month. When I suggested something along those lines, I was told to look for a well regarded library instead. I'm new to professional development, so I'm not going to tell these people how to do their jobs. 
XNA has some _decent_ tutorials for using their framework for 3D, though they're very basic and don't cover much if you'd like to get more advanced. I have up after having a lot of trouble with the camera positioning and such. Sorry for the short post (on my iPhone). 
[Markdown](http://en.wikipedia.org/wiki/Markdown) is well regarded. And there's a [javascript library](https://github.com/evilstreak/markdown-js#readme) to convert it to html on the client side. 
Unity 3D. Want to get up and running quickly for free? It runs in the Mono virtual machine for C#. It's pretty accessible as far as 3D environments go. Great community support. GUI environment for adding 3D to a game.
Unity 3D if you like working without too much code, XNA for complete code based work. There are other engines/frameworks, such as Irrlicht or (if you want a challenge) OpenGL wrappers.
It depends on how much the OP actually wants to make the environment "like Minecraft". I'm not incredibly familiar with Unity but I think it's more streamlined toward asset-driven environments, whereas XNA offers some flexibility to work heavily with vertex structures like cube-based worlds require.
There's already a community project that developed a minecraft-esk world. 
I doubt OP has even heard of the word voxel. I say Unity.
Wonder how this stacks up against JSIL.
It's quite a different concept, JSIL works with the .NET bytecode and tries to reproduce a lot of the framework. As a result, you get a lot of JS on the browser and it's not necessarily easy to debug (although there may be stuff to facilitate that, I've never tried) Blade is better compared to Script# or even CoffeeScript: it lets you write JS with a different flavor but it doesn't hide the underlying platform. The c# syntax is close to JS so when you debug it's really easy to follow. But you get all the advantages of Visual Studio tooling for c#, you get compile time error checking, refactoring, etc... which makes larger projects easier to maintain than in plain JS.
So, the primary use is in manipulating the DOM then? Just like JavaScript?
The idea is to make it easier to develop and maintain JavaScript libraries and applications. It's especially useful if you're already a c# developer because you get to use the familiar Visual Studio environment and many of your patterns. There are many advantages to compiling from a strongly typed language into JS, some of them won't be visible yet in this early release. But you can easily do things like refactoring, and typos are caught right away. I can't count the number of times when I've made a typo in a JS variable name and didn't find it until way later at run time. Plus you get things like intellisense. I find it hard to explain the benefits but a few years back I had many UI controls written in plain JS and switching to Script# saved me tons of headaches. But Script# has been making very slow progress while Blade has only been started a few months back and supports most c# 4 constructs already.
I agree, writing the entire thing your self seems subject to injection, IMHO. I recommend the [AjaxControl ToolKit](http://ajaxcontroltoolkit.codeplex.com/) We use it and it works. We've also used the Telerik Rich Text Editor. And the SharePoint Rich Text Editor all have their pros and cons. Also, JQuery has an RTE, but I don't think its ready for prime time and I haven't personally used it.
To add to that, I will have hundreds of items that will each have a set of X and Y numbers, so these formulas need to be made on the fly
Hi, if you'd like to contribute that would be great. At this point I'm the only developer on Blade. There are a couple of other developers working on related items that will build on top of Blade, but that's in a separate repository for now. Anyway, you're welcome to fork the project and contribute. I don't have a roadmap at this point, but if you'd like some ideas of what items may be good candidates to work on please email me: barry.dorman at vannatech dot com. Thanks for the interest!
I've never done it myself, but I believe the process object has stdin and stdout streams that you can read from and write to.
This is correct.
On that type of situations you're much better writing a custom visualizer that is focused on the questions you want to answer. The key to do that is to be able to access te VS Solution data in an easy to consume way (ie. scriptable), and the best way I know so far is to use the Roslyn APIs. Take a look at these posts for ideas on how I'm using Roslyn and how to use their APIs: * [Using Roslyn to Load and (quickly) Compile C# Solution files (outside VisualStudio)](http://diniscruz.blogspot.co.uk/2012/06/using-roslyn-to-load-and-quickly.html) * [Using Roslyn - Refactoring AddingMethodToClass (while creating an API)](http://diniscruz.blogspot.co.uk/2012/06/using-roslyn-refactoring.html)
You can use the AntiXssLibrary from Microsoft which has really good encoders: http://wpl.codeplex.com/ Although it seems that the latest solution is quite agressive
For the [O2 Plaform](http://diniscruz.blogspot.co.uk/p/o2-platform.html) I wrote an a couple C# APIs that provides full access to the Console either of the current process or of a remote process. Take a look at: * http://o2platform.wordpress.com/2011/11/26/api_consoleout-cs-inprocess-capture-of-the-console-output * http://o2platform.wordpress.com/2012/04/23/poc-of-ironpython-repl-scripting-environment/ 
The filename should be in double quotes like this: context.Response.AddHeader("content-disposition", "attachment; filename="\" + doc.Name + System.IO.Path.GetExtension(doc.FileName)) + "\"; Your friends' code omitted the double quotes. Other than that the handler looks correct.
You can google each fo these [Imperative programming](http://en.wikipedia.org/wiki/Imperative_programming) [Function Programming](http://en.wikipedia.org/wiki/Functional_programming) [Logical Programming] (http://en.wikipedia.org/wiki/Logic_programming) [Object Oriented Programming] (http://en.wikipedia.org/wiki/Object-oriented_programming) [Aspect Oriented Programming] (http://en.wikipedia.org/wiki/Aspect-oriented_programming) [Declarative Programming](http://en.wikipedia.org/wiki/Declarative_programming) Some computer languages contain elements of several styles.
&gt; each fo these a'ight
This is an outstanding book with regards to the theory behind OO programming.
It is true that I've had little programming experience, as well as the fact that I'm having trouble initially understanding complex programming concepts. Thanks for the advice.
If you are using wpf you can use binding to do what you are trying to do.
Polymorphism, Inheritance and Encapsulation.
Basically, objects are abstractions that make it easier to write code. Each object has properties, methods and events associated with it. Most textbooks make an analogy with an actual object in real life, say a flat screen TV. The TV is the object, it has properties (size, color, resolution), it has methods (things you can make the object do, like change HDMI inputs) and events (triggers, or notifications, that let you know when certain things happen to the object, like the input changes or the TV is turned on and off). Have fun learning, and don't get too discouraged. You can find many examples on the internet that will work. If you do end up copying code, make sure you learn what the code you are copying does.
[MERGE](http://technet.microsoft.com/en-us/library/bb510625.aspx).
In MySQL you can use "INSERT ... ON DUPLICATE KEY UPDATE" syntax: http://dev.mysql.com/doc/refman/5.0/en/insert-on-duplicate.html Though I'd complain that your DAL should handle that (whether that be something like NHibernate, LINQ to SQL or you roll your own), if you're doing bulk data sets and transforming it's layout between systems using a C# application (pull data, bulk slam database with no additional record pulls)... I'd rely on an internal cache or the DAL's cache to determine if I need to update or save based off previous entries.
I really didn't understand object oriented programming until I dug in and got my hands dirty. C# is a great language for learning it.
Not sure about in different languages / platforms, but for the .Net world I would amend "...functions scoped to the data structures they operate on..." to "...functions scoped to the object state that they operate with...".
You'll probably want to use a class like FileSystemWatcher: http://msdn.microsoft.com/en-us/library/system.io.filesystemwatcher.aspx If you already know how to parse XML and access databases in .NET you should have everything you need.
I feel like you may not completely understand how an internship works? I will give you a hint - start doing some research and come up with a reasonable proposition (perhaps even an implementation spike?) for whoever you're reporting to. They'll work with you refining it and hey look you're on your way.
ASP, or rather ASPX which is the more modern version, is a rather web-centric language, yes. Actually, its more of a markup language, where c# code can be plugged in. C# is indeed a programming language in the C family. It's much closer to Java in feel and capability than to C, though. It compiles to an intermediate language, has a garbage collector and a large standard library etc. etc. C# is often used to do code parts of aspx pages, just as Java is used for jsp pages. You cannot (realistically) use c# for your web interface. The .net framework is rather analogue to the java platform (jvm + library). There is a large number of languages that can compile to IL, which is the intermediate language mentioned above. And please read your last sentence again. There is nothing wrong with posting things in the right place :-)
You probably would get answers to most of this via a simple Google search. .NET fills roughly the same architectural niche as the Java Runtime Environment. C# is similar to Java. ASP is similar to JSP. 
I would suggest that you bring these questions to your internship adviser. They may see fit to have you complete the task in a way you are more familiar with, or they may see fit to give you another task. I doubt they would really want you to attempt this task given your knowledge; it's just too much for a summer internship unless the project is exceedingly simple... That being said, I'll draw some rough mappings for you. Linux -&gt; Windows Server, Apache -&gt; IIS, MySQL -&gt; MS SQL, and PHP -&gt; .NET (which is an extremely broad technology). I'd suggest reading both "Beginning ASP.NET 4 in C# 2010" and "Pro ASP.NET 4 in C# 2010" as a starting point if you are interested in ASP. If you're interested in more rich windows web apps, read "Pro Silverlight 4 in C#" - this would also give you a leg up on XAML for use in Windows and WinRT applications. You'd want to then learn more about your tools by reading up on Visual Studio, its debugger, and Expression Studio. Than you'll want to learn more about WCF, IIS, ADO, Entity Framework, MS SQL, and maybe CSLA or control toolkits like those by Telerik. Just like you didn't learn LAMP overnight, it's going to take some time to learn the MS technologies. It's well worth the investment, but be sure your internship is fine with you investing this sort of time before you're expected to be productive.
I'll to break it down as simple as I can since as others pointed out, you're way waaaay off :). .net is a set of libraries created by microsoft to help you build applications. ASP.NET is a web framework built on top of .net (ASP standing for active server pages). So again, ASP.NET is .net exposed through the web. Now asp.net isn't a language, but the web pipeline. C# is the language you use to build asp.net websites. This is pretty simplistic, but it's an overal view of how these things connect. Go forth and learn! :P
&gt; You cannot (realistically) use c# for your web interface. You can with silverlight, but compatibility is limited. Also, it is unofficially dead.
Haha, good catch on that last sentence. :) And thanks for the overview!
Yeah, as I get a better feel for the project I'll get a better feel of whether I should worry or not. ;) But thanks for the explanation, it really helped. :)
This was excellent! Thanks. :)
I have a feeling that I'm going to want to kiss you after going through this tutorial! Thank you!
I was thinking about webpages. You can write out the HTML from a c# program is you so desire, but that would be rather retarded.
If you're a gamer check out XNA Game Studio: http://create.msdn.com/en-US/. There are tons of tutorials that will walk you through all the basics of making a game. Most of the grunt work is already done for you, so you can get a simple game up and running pretty fast.
ODBC? ADO? EF?
What version of database are you connecting to? You can always write your insert and update statements but put them into a try catch block. begin try insert end try begin catch update end catch
I don't think that entity framework supports access. For a nice ORM that supports access and. NET check out nhibernate. 
The security controls are a massively essential component. It's one of the main drivers for having a data layer within the database that is separate from any sort of data layer in the application. Create a data layer in a separate schema in the database and only grant execute access to that schema. Base tables are insulated from clever developers. If the developer needs something more specialized it can be created. 
[This should get you started...](http://msdn.microsoft.com/en-us/library/aa288452%28v=vs.71%29.aspx)
I'm guessing if the guy can't get a simple connection going via odbc or whatever, he's probably not gonna need to be using an ORM ;)
Enjoy it, I'm a C# guy from way back and still learned stuff going through it.
I only briefly saw the sample collection. But using imgur logo in your own website... does not seem right. Otherwise it seems ok.
A mixture of Console.ReadLine(); and Console.ReadKey();
There is no easy way to learn. Learning is trial&amp;error + educating yourself through solving problems yourself instead of relying on Google. This is a good start if you'd like to educate yourself on how to become a better Object-Oriented coder: [The Object-Oriented Thought Process](http://www.e-reading.org.ua/bookreader.php/141469/The_Object-Oriented_Thought_Process_3ed.pdf).
When you new up a Process object you can redirect stdin, stout, and sterr. 
Is there a specific need for your database to be in access? If you already have a database with a lot of data You could migrate your access database to SQL express and use linked tables to retain functionality within your access database. This would allow you to work easily with the data in your winform application. If you want portable storage for your winform application (which is maybe why you said from a relative path) you could use SQLite.
I've used XNA for bits and pieces and was impressed with how easy it was to use. However, it's not just the framework and core language which is worth considering. Think about tools you'll use for level editing etc and how you'll incorporate them in.
C# is definitely a great language to pick up, especially if you're a Java programmer since it's popular, and the syntax + many of the requisite concepts are extremely similar. And, XNA is a pretty common choice as far as beginner game development framworks go (not to say it's only used by amateurs). As you can imagine there are many, many great resources available for both languages, and many of them are explicitly geared towards people unfamiliar with the framework/language. One possible kind in your plan - are you trying to get into the development industry? As in, not simply being an indie dev in your free time, or even full-time in a best case scenario. I ask because C++ really is by far the most popular language for game development, and it's really worth learning if that's your ultimate goal. Not that it would hurt to do one and then other, though.
Would not probably recommend XNA at this point, as it appears to be heading to a dead end. Take a look at Mono (which uses the XNA api I think, but is open and cross-platform) or SharpDX, which is a DirectX wrapper for C# which will probably be supported longer than XNA. XNA's main advantage is the content pipeline built-in, as well as the ease of interface with DirectX. But, unless you're targeting Windows Phone or Xbox, Microsoft really doesn't care much about it anymore.
Thanks, could you possibly link me to where I can download those libraries
Awesome thanks a lot
Linux -&gt; Windows; Apache -&gt; IIS; MySql -&gt; Sql Server (typically although other databases work too); PHP (the language) -&gt; C#; PHP templates + any web framework -&gt; Asp.NET; Asp.NET MVC 3 seems to be a good framework for coding things in a more traditional web-dev way.
Now using what you just typed, to move that to a textBox on a form would be something like convertedTemp = myConverter.TOCelcius(Convert.ToString(variable)); correct? I think this is where I was messing up to begin with, and trying to jump into forms without going console to learn more. edit: also not to sound stupid, but for the conversion formula wouldnt you also have to declare variables before you could do the converting? And would the veriables go INTO the class, or into the main .cs file? This is where im getting confused.
Try this: Add a new class file to the project or add this to the end of the source file to define a Fahrenheit class. public class Farenheite { public double Temperature; public Farenheite(double temperature) { Temperature = temperature; } public double ToCelsius() { double b = (Temperature - 32) / 1.8; return Math.Ceiling(b * 10) / 10; } public double ToKelvin() { double b = (Temperature + 459.67) * 5 / 9; return Math.Ceiling(b * 10) / 10; } public double ToRankine() { double b = Temperature + 459.67; return Math.Ceiling(b * 10) / 10; } public double ToReaumur() { double b = (Temperature - 32) * 4 / 9; return Math.Ceiling(b * 10) / 10; } public double ToRomer() { double b = (Temperature - 32) * 7 / 24 + 7.5; return Math.Ceiling(b * 10) / 10; } public double ToDelisle() { double b = (121 - Temperature) * 5 / 6; return Math.Ceiling(b * 10) / 10; } public double ToNewton() { double b = (Temperature - 32) * 11 / 60; return Math.Ceiling(b * 10) / 10; } } Then change your cBtn_Click to this: private void cBtn_Click(object sender, EventArgs e) { Farenheite temperature; try { temperature = new Farenheite(Convert.ToDouble(temp.Text)); } catch(Exception) { MessageBox.Show("Please enter a temperature in farenheite.", "error", MessageBoxButtons.OK); temp.Focus(); return; } cel.Text = temperature.ToCelsius().ToString(); kel.Text = temperature.ToKelvin().ToString(); ran.Text = temperature.ToRankine().ToString(); rea.Text = temperature.ToReaumur().ToString(); rom.Text = temperature.ToRomer().ToString(); del.Text = temperature.ToDelisle().ToString(); newt.Text = temperature.ToNewton().ToString(); } } Hope this helps. Object oriented programming is initially confusing until you can get into the right mindset.
Holy hell thank you. This is going to help me immensely. EDIT: I also think I see where I was messing up. You both have helped me 500%
thank you also! I have learned quite a bit so far within three posts on reddit. I love this site :p
Wouldn't a static method be a bit more practical ? class TemperatureConverter { public static double ToCelcius(double fahrenheit) { // conversion code goes here return result; } } And then no need to instantiate : double convertedTemp = TemperatureConverter.ToCelcius(98.6); But depending on the scenario both approach are perfectly fine.
Just in case he didn't know the static keyword I didn't want to throw too much at him at once. I hope he sees this though, thanks for bringing it up!
It has been a while since I've messed with web forms, but I think the problem might be with the datasource you are binding to. There should be an "EnableDelete" property that you can set to false, so that it doesn't try to delete the view record.
I was about to reply with a solution like this... interfaces are your frient in C#.
Unity 3D with the 2D plugins or just a side cam would be a great starter. A lot of things are done for you, but you can choose to manipulate these or write your own. I recommend 1000 fold! You can choose from a few languages to use, though I think C# is the nicest! **NINJA EDIT:** also, because it is a fairly recent tech there are loads of tutorials, youtube and otherwise, and about 3 or 4 subreddits to help you. Choose a technology that you can find answers to questions easily. A reason I also like flash, which I use for my 2d stuff as it is widely used and it is easy to get multiplayer stuff happening (with electroserver I use) and AS3 is a lovely language regardless of the haters!
Yeah I have been getting back into them since I'm supposed to stick to more standard ways of doing things. I've tried to disable that but when I click the delete button it's saying the datasource doesn't allow that - it's really confusing me lol.
Alright, I think I got it. Try e.Cancel = true inside you gridview delete event handler
Came here to say this. Showing myself out now.
I wish I could give you a gazillion upvotes! I just came up with Response.Redirect("ManagerMgrs.aspx"); as a work-around that I wasn't pleased with, but e.Cancel = true; did it as well and much cleaner! I don't know why I didn't think of this, just like e.CancelBubble in javascript - same principle anyways. THANKS A MILLION!
In this case a static method is more practical since it is trivial to implement and test, and because the logic involved should never change. He is asking about how to take the object oriented approach, so I would assume the setup of temp conversions is a just a contrived example. If we tried to apply this approach to a business rule (such as a transaction that requires a security check and logging) it would make more sense to use objects instead of static methods. Using interfaces or base classes for abstraction and dependency injection for maintainability and testability is probably a bit beyond his current concerns though.
With EF there is no raw SQL buried somewhere. Plus if your methodology doesn't let you quickly issue a trustworthy code patch, you have worse problems.
you should be using Int16.Parse() or Int16.TryParse() if you want to grab the Int16 value from a char or string 
The question was about how to structure the program rather than the mechanics of temperature conversions so I tried to use as much of the poster's original code as possible so he could see how it went from his code to mine. You're right about the rounding though.
What are you using the work with Access? ADO.NET?
I've heard multiple people say that [this series of video tutorials](http://www.youtube.com/playlist?list=PL0EE421AE8BCEBA4A&amp;feature=plcp) helped them a lot at the beginning.
Lot's of magic numbers in there. I see some +8's and some +7's? What's that all about.
Those would be to account for the border.
Done. I also think I've spotted a bug in the SetFirstLast function, which may cause problems if the scrolling list has banned indices. Testing and fixing that will have to wait until later, though.
Sure, [here](http://serayen.com/climenu.png) you go. Also, I was right about there being a bug in the scrolling logic.
You can have a style which consists of data objects/structures and have a set of "Service" objects that operate on the data. class Person { int age; string name; } void Birthday(Person person) { person.age++; } this is not very object oriented, If we wanted an object oriented take on the problem of dubbing a set of data representing a person a birthday. *we want to marry the Data to its Behavior (Having a birthday is our behavior)* It would look a bit like class Person { int age; string name; void Birthday() { age++; } } Person fred = new Person(); fred.Birthday(); There are plenty of benefits with this approach, it helps encapsulate what a birthday means to a Person object. One of the biggest rules that help me write more easily refactorable and tight object oriented code is to keep your 'dot properties' to a single dot. // Good! myObject.DoSomething(); // Bad! myObject.ObjectInsideMe.DoSomething(); class MyObject { private FancyService ObjectInsideMe; MyObject(FancyService objectInsideMe) { ObjectInsideMe = objectInsideMe; } void DoSomething() { ObjectInsideMe.DoSomething(); } } The jist of that is to shield all your variables, keep your privates private! There is obviously a whole slew of additional information and practices but, I would say those are some of the most solid and useful practices when writing object oriented code to keep in mind.
look in to using serialization it can store your data in a binary or xml format should be under Sytem.Serialization
or simply writing your stream to file should work as well 
If you aren't storing in a database, Serialization is what you want. However there are DB solutions in C# where you don't actually write any actual SQL.
Hmmm. From the answers so far, it looks like Serialization is the winner. However, I'm intrigued by this SQL-less SQL. What are some good resources I ought to look at to educate myself on this?
OpenGL is, in fact, quite capable of that. There are several things that could be slowing down your application: (No particular order) 1. Using immediate mode in OpenGL. (i.e. GLBegin/End) 2. Re-uploading data you don't need to to the graphics card every frame 3. Calling large numbers of OpenGL functions in a single frame 4. Something else completely unrelated to graphics or OpenGL. Performing computations between a million nodes involves a lot of RAM access and a lot of floating-point operations. If OpenGL is the problem, you have two options: 1. Use it "properly", which would involve at least a few days of learning, and probably several more days debugging. 2. Use a graphics library like Irrlicht ([IrrlichtNetCP for C#](http://sourceforge.net/projects/irrlichtnetcp/)) which handles all the OpenGL stuff for you. This runs much faster than bad OpenGL code and is much easier to use than proper OpenGL code.
I think serialisation is the best bet for you but if you do think about a database driven solution I agree Mongo would be a good thing to learn. It is the future. I use SQL a lot and would recommend you learn it but in the future, a lot of things will be structured like Mongo.
Having watched countless students make the same mistakes over and over again, the one word I would always preach before anything else is **encapsulation**. The whole point of OOP is to understand what an object is, what it does and how it does it. Think of a thing, like a plant: think of what is does, what it has, how it lives e.t.c. Consider how you would represent this information, and how you would translate it's normal functionality into code. For your sake, try to understand OOP away from C#, because once you understand OOP independent of any programming language, your life will be so much easier.
This is something I say I'm going to write every time I have to do this, but I never do: an app where I can copy a set of data from excel with column headers and turn that data into a series of sql insert statements. Would take 30 minutes to write, but would save me several minutes every time I get an excel sheet of data to add to some table and I don't want to use DTS or that's invalid data, etc. Cut/Paste/Insert. 
I want you to write an application (Console or Winform) that will take a Reddit username and password, and return messages, karma, and possibly a small list of the most popular links per our subscribed subs. This would be awesome, as would a DLL that I could reference to make my own application, but of course thanks to the dll, you would handle all of the hard work ;)
Write a task+message construct. as an example... var myTask = new CommTask( new Action&lt;&gt; ( ()=&gt; { var message = myTask.RecieveIn&lt;string&gt;(); Console.WriteLine(message); myTask.SendOut&lt;string&gt;("And a good day to you!");})); myTask.Execute(); myTask.SendIn&lt;string&gt;("Good day sir!"); Console.WriteLine(myTask.RecieveOut&lt;string&gt;());
Re-do Reddit with an Azure-based architecture.
Try creating a program that uses the [Sieve of Eratosthenes](http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes) algorithm. It's great practice.
.
Have you bought any book or still searching?
Good, can I ask which one?
HOLY COW! That actually worked!!! I cant believe it was that easy! THANK YOU!
I can see the structure. I just didn't think it was so easy to access the values. On thing that I can't see right now, is how I would access the second set of data (there are 2 (or more) days of weather info). I've tried: results.data.current_condition[**1**].temp_C; (which sounded logic for me), but that gave me an out of range error...
Sorry. Just found out! :) It's a different node. results.data.weather[0(or 1,2,etc)].date; So I have the current weather situation in "current_condition" and the forecasts in "weather". That actually makes sense! :)
There are so many ways you could solve this with MVVM. To your first question, is it worth it? Sure. I think MVVM is great for WPF UI's. So picking up at #1.3, SearchByIsbn needs to be an ICommand. The command does the work of asking the Model what the result set is, and it can just set the bindable property(s) on the VM that you expect for a single result set, OR set another set of properties with the Observable Collection of results if more than one result is returned from the model. Then you can style the UI to show an inline product chooser if multiple results are in the VM. For #2 (the search window). You need something like a content control so that you can start playing with enabling and disabling various UI elements. Some resources : [Stack Overflow](http://stackoverflow.com/questions/1997909/mvvm-wpf-popup-clueless#1998213) [Custom Popups](http://blog.typps.com/2011/04/custom-popup-and-windows-in-wpf-mvvm.html) [Prism - An entire framework of WPF UI Management](http://msdn.microsoft.com/en-us/library/gg406140.aspx) 
BTW, this might come in handy: http://json2csharp.com/
If he just wants to read a piece of the data (not transfer the whole list around and do stuff with it), reading it as a dynamic is fine. If he wants to pass it around in a DTO, that will definitely come in handy and he can deserialzie straight to it using JsonConvert.DeserializeObject&lt;DTOType&gt;(string)
The model would never respond to events. It should be as close to stateless as possible, at least as far as interactions from your VM are concerned. Check out the Repository section in [this article.](http://msdn.microsoft.com/en-us/magazine/dd419663.aspx#id0090102) to make sure you are isolating (loosely coupled, as reddiric points out) your behaviors and domains. It is certainly ok, in my book, to pass the data context into the VM, but I dont do it. I would prefer to set the DataContext to your VM, which prevents you from the temptation of calling Foo.AddObject(). Once you start doing that you're subverting MVVM and the separation of concerns. The VM should not have to care about the implementation details of a specific view. In your example Foo should live on the VM, and adding an object to a collection should be simple. Look up XAML Data triggers and data templating if you are having a hard time figuring out how to make your View do stuff when data changes. Your VM doesn't need to be a middle man for causing UI events to occur based on data changes...XAML is capable of doing all that. It just takes a hot minute (took me 2 years) to get your brain squared away to follow the pattern closely. 
Do you know how to set breakpoints? http://msdn.microsoft.com/en-us/library/ktf38f66(v=vs.71).aspx Mark a breakpoint in the beginning of the program execution. Click Debug, then Start Debugging. You can use f10 to go to the next line, and f11 to step into a function. Walk through it one time, and you can see what is taking so long.
I've explained the code process and the moment it becomes unresponsive [in my reply to in3d_812](http://www.reddit.com/r/csharp/comments/wslyu/taught_myself_mostly_so_my_code_is_garbage_the/c5g43ra). 
Can you post a link to the cs file(s)? On an iPhone..
I looked through your code and you're not creating any new threads at all. When you start the application, all the methods are occurring on the same process thread as the GUI. So, when you've got a method that takes a relatively long time to execute fully, it effectively "blocks" the application from updating the GUI. The BackgroundWorker executes on a parallel process thread to the thread running the GUI and if you move those long-running processes to a background worker, your GUI will continue responding normally as it ought to and Windows won't detect it as not responding. It's also got some additional functionality built-in that allows for reporting progress and support for cancellation. TL;DR Take NonstopWindex's advice and look into the BackgroundWorker control, it will solve all your responsiveness issues.
Here is function.cs https://dl.dropbox.com/u/23737062/Excel2Word/Excel2Word/Functions.cs And here is the gui cs https://dl.dropbox.com/u/23737062/Excel2Word/Excel2Word/GUI.cs The gui passes the appropiate parameters to contructWord eventually. 
Uhm... no; that's what ViewModel and INotifyPropertyChanged are about
http://msdn.microsoft.com/en-us/library/ms171728.aspx
Thanks, your reply is really helpful. But i don't think your link worked.
I must've missed that, good catch..
Ideally, i'm sure there is a much better place to put that though.
Can i use jet with a 2007 excel document?
Oh, lulz, I should've realized how little experience I have before I commented.
How about running the initialization block in a new thread?
Non-responsive means the GUI thread is starved (i.e. doing too much work in a button click or something). When you say initialization, do you mean when you first click the 'Convert' button? It looks like Excel2Word.getWorkSheet could be doing a lot of work depending on the file size. Move it into the separate thread and it will probably fix it.
You might want to put the interaction with Excel in that new thread as well. Assuming you're programatically interacting with Excel through COM or some other interface, what's actually happening is that it's opening a full-fledged instance of Excel in the background and feeding it commands... That in and of itself is unavoidably slow and something you definitely don't want happening in the GUI thread. Edit: Also, btw, one really really easy way of running code in a separate thread with .net 4 is: Task.Factory.StartNew(() =&gt; { MyMethod(); MyOtherMethod(); }); 
Dude! that is exactly what i need, thank you so much. Is this like the accepted method (i was reading something about delegates before) or is it just a noob friendly work around? I'm perfectly happy to use a noob friendly work around at the moment as i'm going to be the only one seeing the code and the program will be used maybe 5 times then deleted.
Sorry, I'm still very lost. Which part am i supposed to be looking at for WinForms?
so, since Invoke is synchronous (it's do everything in the invoke block before moving on to the next statement), you can safely create an int variable outside the block, populate it within the Invoke block, and then return it. public int assignProgressBarNewThread(){ int returnValue; this.dispatcher.Invoke(new Action(() =&gt; { returnValue = Excel2Word.procedureTotals(exceldoc); })); return returnValue; } Just for context, Dispatcher.Invoke contrasts with Dispatcher.BeginInvoke which is the asynchronous version, which means that BeginInvoke will send the block of code over to be run in the GUI thread but won't wait for it to finish before continuing executing the rest of your code. 
So i call assignProgressBarNewThread in my other new task.action or what ever it was?
I've actually got a timer and directory.getfiles().count to test for the current progress (roughly). Excel2Word.procedureTotals is used to grab the total number of procedures from within the excel document, this will be used as the maximum.
I'm still reading all the links, but as a first idea I came up with two potential 'solutions': 1. since I'll have the same search-bar behavior in 3 places (Item Details, Sales, and Restocking), make a SearchView in place of the TextBox, which lets me do the find-until-a-single-item-returns thing, but then I'm not sure how to pass that value to its sibling viewmodel. 2. Make the 1.4 step send a SearchRequestMessage(ISBN) message, which the SearchViewmodel registers for, receives, searches, and optionally pops up... but then there's a callback and I seem to be back in square 1. I'll go back to reading.
&gt; The model would never respond to events. I actually meant Commands, but... &gt; It should be as close to stateless as possible, at least as far as interactions from your VM are concerned. Help me make sense of this much: I have a SalesView, a SalesViewModel, and objects related to a Sale: Bill, Item, and BillLine. A Bill has several BillLines, which each refers to an item. (Fairly standard, I guess.) As of right now, I have a SalesViewModel for the whole window (search bar and Details), a SalesDetailVM for the actual values in the bill (items, subtotal, discount), and SalesItemVM for each item. When you change values, the changes propagate through the ViewModels to their respective Models. This feels like a lot of classes, but I guess it's fine? When you click Close Sale, the VM (as of right now) updates the Items' stock counters, and calls DataContext (I think that's the name of the Object? The thing from EntityFramework that handles saving/loading/whatever entities) to do DataContext.Sales.AddObject(sale) (which saves both the Sale and its associated SaleLines)... By your wording, I take it this isn't quite right... I thought of, either: 1. Have a Sale Model which holds a Bill and knows how to do the saving and updating stock. 2. Have a DataLayer object, which provides whatever interfaces I need, e.g.: FindItemByIsbn, SaveSale, etc. 
&gt; It just takes a hot minute (took me 2 years) to get your brain squared away to follow the pattern closely. Heh. I guess what I'm really looking for is a complete, start-to-finish, 'realist' tutorial. Half of them are "Here's a bunch of code. It works. Figure it out.", and half of them are "Okay, today we'll write our own app from scratch. It's composed of a single model that doesn't talk to a DB."
Can't help you a lot more, but [here's a nice little example using another approach.](http://www.stevenmarkford.com/how-to-create-game-loop-windows-forms-net/) Good luck !
[Here's](http://blog.lab49.com/archives/2650) a great tutorial. This lab was originally the de facto how to for getting into WPF. This is a re-recording of that example. The other standard was Josh Smith's [article.](http://msdn.microsoft.com/en-us/magazine/dd419663.aspx) Not to be too pedantic, but you SHOULDNT care that models in your example's dont talk to the DB. :) That's why I was recommending looking into repositories. At some point you want a level of abstraction such that you are calling into some class and your data magically comes back. That's good. That means that that class can be changed for testing or debugging and that your model and MVVM implementation don't rely on particular DB implementation. That's a good thing. 
Your first word actually answered your question. ;-) I didn't need anything complicated, just simple hookups for another project and it only took me about an hour to code and test this.
I see. I thought perhaps you had used some other IoC container and were dissatisfied. I have used Ninject and it was well designed and quite simple to setup. 
Keep in mind that if you write a BST to a file, you have to load the whole thing for it to be useful. This becomes a problem on large datasets, but should be an issue for anything under a few MB. On larger datasets, you should consider using a b-tree based library (or recreate the wheel) SQLite is a good open source alternative and is used as a portable database in many systems (Android, Firefox are examples) But, as you say, these would require you to learn SQL.
 The [System.Data.SqlClient](http://msdn.microsoft.com/en-us/library/system.data.sqlclient) documentation might help. Specifically on the [SqlConnection page](http://msdn.microsoft.com/en-us/library/system.data.sqlclient.sqlconnection), near the bottom of the page in the "Example" section.
He's gotta learn some how. Unless you know where to look the concepts aren't exactly easy to learn unless you understand it, if you have any questions your boned on your own. Frankly I think most of tutorials were quite confusing till you get it then you feel silly. I'd say google Datasets and tableadapters and you'll find your answer. 
There is 10 years worth of material out there for this kind of thing. I agree that people need help but they have to at least exhaust all methods before asking for help, not just ask the moment it doesn't work as you expect.
The answer is 'you really shouldn't do that', as a matter of practice. You really should be separating your database access and your application through some sort of service layer, be it a web or wcf service. The exception being if your application is single user, and only on your machine. 
The problem here is that you copy and pasted code that you have no idea how it works. Look up these classes you are using and the crazy way in which you are casting. I don't believe the person who provided this solution knows entirely what they are doing. I would eliminate all that code. Implement a foreach on the rows of the datatable and create the proper insert statements. You should also move database reading and writing into another class that creates separate threads for all network access. 
i spent hours at a time on stack overflow doing exactly that. i learned a ton this way.
Like learning an instrument, lots of practice, always trying new things, but at the same time making sure that you understand each piece. Writing software is an art as well as a science, so you need to learn the artistry as well as the process.
Async is a .NET 4.5/5.0 feature, while portable libraries are an extension to the 4.0 framework, so no - not available. It's annoying, but just do what you did before the Async CTP was released to handle asynchronous operations - events, anonymous delegates etc. That's really all the async process does anyway - divide the method in half and call the second half after the first has executed and returned
I've got to tell you something, that has nothing to do with the performance (sorry for this rather long (and quite late) post): You never release any of all those ComReferences you acquire. Nearly every Object you retrieve from Excel/Word is a ComReference. ComReferences (unlike regular objects) dont get released by the GarbaceCollector. They stay in memory untill you free them (or your program gets terminated) A small example, take this line of code: MsWord.Range header = section.Headers[MsWord.WdHeaderFooterIndex.wdHeaderFooterPrimary].Range; there are multiple ComReferences involded: section.Headers is an object of type HeadersFooters and should be released. section.Headers[MsWord.WdHeaderFooterIndex.wdHeaderFooterPrimary] returns a specific HeaderFooter-Object that should be released section.Headers[MsWord.WdHeaderFooterIndex.wdHeaderFooterPrimary].Range returns a Range Object, that should get released as well. So in just one line of code, you created 3 ComReferences, that wont ever be released (until end of the program). That means 1. you have a memory leak 2. You might run into problems at one point. You cant have unlimited ComReferences. At one point, you might not be able to create any additional references until you restart the program. What to do about it: Its quite simple: Call Marshal.ReleaseComReference( object ); for each Reference created. You need to unclude a using directive for System.Runtime.InteropServices; But be aware of the fact, that its not allowed to give a null-reference to ReleaseComObject! You have to check yourself if it is null or not. The sad thing about all this is: It blows up your Code. In the example above, there is no way to release the references to the HeadersFooters Collection or the Header Item itself. You only have stored the Reference for the Range object. A leak-free version would look like this: MsWord.HeadersFooters headers = section.Headers; MsWord.HeaderFooter header = headers[Word.WdHeaderFooterIndex.wdHeaderFooterPrimary]; MsWord.Range range = header.Range; // additional code if( range != null) Marshal.ReleaseComObject(range); if (header != null) Marshal.ReleaseComObject(header); if (headers != null) Marshal.ReleaseComObject(headers); It looks quite bad and as i said before, it blows your code. You could write a wrapper-class to handle the references (it could have an Add and a ReleaseAll Method which could be called in a finally block). TLDR: You need to release ComReferences created by accessing Word/Excel (or any other Office product).
Wow, i totally wasn't aware of this. Thanks. I've managed to run the code and create 1200 documents. But that was just a test. The guys that will be using it are actually intending on closing the program after parsing each excel document. I've also seen floating around that there are better options for creating word documents than inter-op. do they suffer from the same garbage collection based problem? 
That looks very similar to funq written by Daniel Cazzulino http://funq.codeplex.com/ I really like the idea of using lambdas for IoC http://blogs.clariusconsulting.net/kzu/funq-screencast-series-on-how-to-building-a-di-container-using-tdd/ Also Dude your website is pretty horrendous on the eyes, you need to put a background on that text I can barely read it. 
I like the site http://www.pluralsight-training.net/microsoft that has tutorial videos on subjects. It does cost $30 a month, but it is well worth it to keep up on various topics. The best way to learn is to do a lot of sample projects and get your hands dirty. Talk to other programmers or follow some of the big names on twitter. When I was just out of school and starting my first job, I tried to learn a new pattern every few days and write a sample program for each. This helped me understand a lot of our code base early on.
To be honest: I havent looked through all of your code. I thought that your performance problems are solved by the others already. I just glanced at it and saw that there was no releasing and thought it would be good to tell you. Its no big problem if you make small programms, but its a big deal if you plan on writing a program, that runs several hours and uses excel/word more often (or if you create a Office AddIn). On the other ways of creating the documents: Don't know how they do it, so i don't know if they have such problems too :)
Yeah, the original problem was solved. The program no longer freezes during start up (i had the conversion of excel doc to datatable on the gui thread). My understanding is that microsoft.office.interop is kind of like an interpreter. Interpreters always have a faster alternative right? EIther way, thanks for the heads up :)
I've upvoted you mainly because I get downvoted to shreds every time I mention design patterns. S.O.L.I.D code practices are also well worth looking into.
For the love of bacon though - plan your project before writing any lines! I find far too many developers don't spec out their projects before starting them and my team and I spend more time re-writing / bug-fixing these poorly developed reports/queries then they did writing them.
Pretty simple examples: http://www.csharp-station.com/Tutorial/AdoDotNet
I was browsing the website in the latest version of chrome when the background wasn't showing up. When I view it in firefox at work it looks fine. 
This is excellent, thank-you!
Weird. I'll see what I can do.
Funny you say that. I wrote some accessibility control adapters for MS when SharePoint was first released. I still get calls all the time from people who want me to work on SharePoint, but I have no interest in it... Unless something has changed (Which it may have), it's some of the worst software I ever used. Although iTunes still takes the cake.
MVC is the cleaner way of doing things. Web forms is so messy. With MVC you have a very clean view that is HTML. You design exactly what you want. To explain: when you throw an asp.net control on a webpage you don't know how it will exactly render. You might seem a bunch of spans and div and no be able to correctly visualize how it will render. MVC is a step in the right direction. 
Although I agree if you can put up with it there's some good money to be made. I'm a SQL Server developer and just having the ability to write reports against SharePoint has added decent money to my paycheck. You'll hate the work and likely only be able to put up with it for a couple of years but you'll never be out of work and be able to push for more money with new positions to due a limited supply of skilled workers being available.
THIS - if by 'coding easy - mode' you mean the exact same C# without nasty controls, better code/presentation separation, testability and no god-awful page life-cycle, then yes, that's exactly what it is.
I would think about what kind of tools you would like to use that will improve your daily life then make them. I have found it incredibly important to be able to work on something I really want to work on in my spare time. It sounds like you feel the same so go with your gut on that. If you can find projects that pay money and you truly want to work on them then even better.
Good advice. My most recent project was nixed when (while researching) I found another site that does about 70% of what I was planning on doing. I was about 10% through the project so not too much, only a few hours invested.
Where there's smoke, there's fire. Definitely check out MVC, I'm a recent convert myself.
I would definitely second learning WCF.
If you want a real shakeup, you could do what I'm currently trying out: Ruby on Rails. I was in the same mood, and now i'm trying a completely different language, I am so far out of my comfort zone that it's pushed me to learn new concepts. I was coming from a C# WinForms background though, so YMMV. :) 
MVC is certainly a far cleaner way of doing things than asp.net. There's some really interesting developments with it recently. I'd have a look into webApi http://www.asp.net/web-api/ Also I will second the recommendation by untogethered to look into some javascript libraries like node.js Currently I'm working on a fully restful json api through Asp.net Mvc with backbone.js on the front and as someone like you who was stuck working with asp.net for years I can promise you it's a whole lot more fun.
password for download is "allthegames"
i would try posting this on stackoverflow.com you would probably get a better answer there for this type of thing if its code related or serverfault.com if its server related by your post it sounds like you are simply trying to install a dll for a server module so i would try serverfault.com 
Definitely learn MVC, it's not "easy mode" so much as a different app structure. Also take the time to learn Javascript well if you don't already. And just for fun, learn something completely different from C#/.NET, like Python or node.js or something just to keep you on your game.
Well, I don't have the link handy, but you can search Rick Strahl's blog at http://west-wind.com/Weblog/posts, and find an asynchronous routed controller you can use with MVC, which runs in my tests about 30 to 50% faster than the stock VS2012 MVC routed controllers or the new WebApi. The thing uses class markup [Declaration, etc] to locate invokable functions, then it invokes them with params. My own version also uses class attributes to locate classes marked as invokable, and iterates through to find invokable functions that return either JSON or XML, and spins them into system cache automagically on startup. The routing table reads from cache. I also use the new asynch features, etc. Use it as a starting point for ideas. With an asynch engine like this, you can get a couple thousand json-formatted requests per second, from a honcho IIS 7.5 server. Couple that with a lightweight frontend like bootstrap and spine.js, and you will have something that scales well, and it will get you into asynch. Also, the new Razor view engine is practically made for serving interactive asych AJAX panels. You could start looking into what version of Python you want to learn, but if it was me, I would try to max out your current framework skillz. If you get into the habit of doing this, you will migrate in just a few years into an architecture job, and you can maybe pick and choose what you work on, at work. Kung Fu = "hard work, over time". Consider upgrading your own scalability with .NET. When you can look around yourself and say, OK, I've redlined this bitch,-- then your next programming path will open itself readily. Don't sit in your own mire (not trying to be harsh, we've all been there.) .NET is pretty performant, always has been. Have you "really" done the C# and .NET thing? Another idea, write a generics&lt;T&gt; serializer which generically takes any json and spits a) classes and b) collections of classes, both inheriting from a base serializable class, which infinitely nests like JSON. Then write a driver for it in MSSQL, MySQL, and postgreSQL. Boom, instant "no-sql on sql" mongo-db-style json database. Yes, MVC is the right direction, I agree.
http://stackoverflow.com/questions/290652/get-output-parameter-value-in-ado-net outParam3 = Parameters["@Param"].Value outParam3 = Parameters[7].Value (??syntax ex temp.) etc. Getting back output params is a minor catch, it's all pretty straightforward. http://stackoverflow.com/questions/tagged/ado.net+c%23 stackoverflow is also your friend! Above are questions marked ado and c#. Also, datasets are strongly typed balls of strongly typed classes, containing smaller strongly typed balls of datatables. If you are at all concerned with speed, use one-direction datareaders like so: http://msdn.microsoft.com/en-us/library/haa3afyz(v=vs.100).aspx Finally, msdn examples are pretty thorough, if you can see around the slight tunnel vision on each example. best of luck!
+1 for StackOverflow or ServerFault. Also check the EventLog on the IIS server, it might give you a clue as to what's happening.
Maybe you can split up the code in multiple files (class per file)?
Okay that formatting is terrible... What is a godo way to post code here?
four spaces preceding the text example: format me please yeah i've been formatted
Yes, that is a very simple form of caching. One improvement I'd recommend is to make the fetch lazy. If your code logic instantiates a Testy but never calls AnalyzeDataQuality, the db fetch would have been wasted (while this may not happen in a simple app, it can easily happen as your logic gets more complex). Change GetDataFromDatabase to something like: private _IEnumberable&lt;dbData&gt; GetData() { if (_myCachedData == null) { using (DbContext myDBContext = new DbContext() { _myCachedData = myDBContext.tblDbData.Select(a =&gt; a); } } return _myCacheData; } and then always call GetData(). This also sets you up nicely for further improvements such as cache expiration.
Also, the .Select(a=&gt;a) is a bit unusual. You can just use .ToList() to force the data to be fetched. Another option for the lazy loading is to use a property that lazy loads the data if the private member is null. See this pastebin: http://pastebin.com/neUkxAKP PS: IEnumerabe.Count can take a predicate, so you can replace .Where(x=&gt;x.foo).Count() with .Count(x=&gt;x.foo)
I would just put it on pastebin or your favorite equivalent put the link at the bottom of your post.
Unity is *really* good. I've developed games in Unity and XNA. Unity is a *lot* easier. I'm no 3D graphics/physics genius, so I really liked how I could place my objects and move them around easily in Unity. However, Unity uses Mono. There are issues with Mono that some game developers will eventually come up against. I did. My experiences are described at: http://ledpup.blogspot.com.au/2012/08/troubles-with-unity-and-mono.html As for XNA, it looks like it's a depreciated by Microsoft, so I'm not sure I could recommend it. Currently, due to my issues with Mono/Unity, I'm looking for a UI replacement for my next game. Maybe SharpDX or something. Not sure. If you want to see how I've used Unity with C#, have a look at: https://github.com/ledpup/HexagonalPathfinding https://github.com/ledpup/Othello http://ledpup.blogspot.com.au/search/label/Unity
I [attempt] to utilize it but it has a nasty habit of simply not working. I am not sure if it simply hates UDP trackers but it refuses to connect to my UDP tracker for seeds/peers. It will gladly use PeerExchange and Local Peer Discovery but my situation never allowed for those to be available. A couple other things to be aware of (though YMMV, and I hope for your sake it does), some torrents will not reported STOPPED upon completion. They hang in the STOPPING mode which is used to complete any remaining tasks like informing the tracker it is done. For me, it only worked on occasion. Another "not so great" bit is that hashing -- even with fast resume implemented, is very slow. If you are seeding 50GB of files, well you're going to spend 30 minutes at minimum waiting for it to complete hashing. Never understood why it needed to hash every time the app restarted. Any sort of issues you submit on the only remaining active line of communication (GitHub) will be met with resistance, or a complete lack of response entirely. I hope someone takes the project over because it's literally the only .NET solution that is reasonably feature-complete. It just has a few remaining issues that I can't seem to figure out myself.
That is much more interesting than anything I had to offer.
Thanks for the tips! I'll make sure to fork the project if I end up needing to make tweaks. 
I may sound incredibly stupid, but is there a way to get out of the menu? For instance, if I want to run a subroutine or function? I tried calling the function in the handler, but the menu refreshes. I converted it to VB.NET by hand, so maybe there's something I'm missing. Feel free to message me or reply, I'm new here and I'm still finding my way around.
isn't there some serialization attributes missing on the class declaration?
Thank you! It's a really hard question to answer, I've estimated that I probably put down between 1500 to 2000 hours on research, typesetting, writing, proofing, coordinating reviewers/proofers/art director. But it's hard to know exactly. After I had all the raw material (around christmas last year) I started working on the actual book a couple of hours each day, and on weekends I could sit all day/night. If I write a second book, that will most likely go a lot faster though! I've really enjoyed the ride and it's something I can really recommend! You learn a lot from self-publishing!
Thanks for your response. I hope you continue the good work and keep up with your blog, there has been some fantastic stuff on there!
I find that it's very helpful to have a project in mind. When I want to learn something new, I'll think of something I want to write that will use that technology, and then I start writing it. It's much easier to learn new things when you have a goal in mind. Also, a good way to learn a new language is to rewrite a simple application that you have already made. I have a game I wrote in high school that I still use as a reference every time I need to learn a new language/platform. I've been rewriting the same game for ten years. If you want to stick with C#, try out web programming (ASP MVC 3). If you want to learn a new language, try Java, it's very similar to C#.
check out the [khan academy](http://www.khanacademy.org/) site they just start a whole new section and series for computer science and programming 
There are a few ways you can dramatically improve your code and your understanding of how it works: * Read about [Design Patterns](http://www.dofactory.com/Patterns/Patterns.aspx) and actually use them. * Read about [Architecture Patterns](http://en.wikipedia.org/wiki/Architectural_pattern_(computer_science)) * Contribute to [Software development forums, but not projects](http://www.stackoverflow.com). * Do the challenges at [r/dailyprogrammer](http://www.reddit.com/r/dailyprogrammer/search?q=programming+challenge&amp;sort=relevance&amp;restrict_sr=on) and add more challenges * learn a language with paradigms different than those you are accustomed: such as [javascript](http://www.w3schools.com/js/default.asp). * learn what [programming paradigms](http://en.wikipedia.org/wiki/Programming_paradigm) are and how they are different. * The **BEST** advice I have though, is to teach the skills you think you know. The time I spent as a CS tutor in college taught me more about software development than any course I took. Get a friend or family member with an interest and help them after they take the initiative to start programming; or just answer a bunch of questions on [stack overflow](http://www.stackoverflow.com).
1. Practice 2. Practice 3. Practice. 4. Go to stackoverflow.com and help duders. 5. Hang out in chat rooms. Talk to people who know more about development than you do. chat.stackoverflow.com has a decent C# room. I imagine most IRC networks do too.
Practice every single day.
On *teaching the skills you think you know,* I really don't think it's the best idea for beginners to do without some kind of social/peer review of it. StackOverflow is a great example of this, because if you're teaching the wrong thing you'll be pushed down, and better answers will replace it. Teaching a friend is very different though - if you've got a broken understanding of something, and you pass that onto someone, you're making life harder for other people too. It doesn't necessarily need to be a broken understanding either - but could be an incomplete understanding of the solutions, where better approaches exist, and you're teaching people outdated, useless or 'non-recommended' solutions. And of course, if you don't have any kind of review of what you're teaching, there's no feedback to know if what you're doing is good or bad - you won't improve.
You've pretty much summed up my knowledge perfectly. Thanks for the links though, really appreciate them :)
Thankyou very much, checking those links out now :)
I usually code/program 4 hours a day, if that helps? 
Gahh no Twitter :( 
Thanks for the post, you're an excellent person. 
Good point. You do risk teaching the wrong thing - especially if you're stubborn; The interesting part when I was tutoring was that people would ask questions I wouldn't even consider when they were first starting out. For example: Why are there different types for decimals? Why can't I just declare all my types var or dynamic? Why don't I just scope all my types publicly? If you don't know the answer, and are willing to admit that, it becomes a mutual learning experience. Also, I found that teaching ONLY by asking questions was an effective way for me to avoid teaching faulty patterns. Granted, it got a lot of students REALLY angry, but if they complied, they ended up learning everything they asked - rather than just temporarily memorizing what they were taught. 
"Not Found: Resource Not Found" Edit: Works now.
Anyone have a link to the release notes on the changes between the RC and RTM?
I'd be interested in such a list as well.
Ten-point lists of features should be good enough for anyone!
I don't understand. Two things - VS12 express seems to be only for windows 8 :( and, if this is the release, then what are they on about here: www.visualstudiolaunch.com 
I think in order to develop for the Windows 8 GUI (The GUI formerly known as Metro) you need Windows 8. Windows 7 and under won't do it, plus they are forcing developers to switch to Windows 8 for more sales. Personally I am looking into moving to Ubuntu and using Mono as a development platform as an alternative to Windows 8 and Visual Studio. WINE is progressing nicely and while it cannot run everything, unlike Windows 8 it can run legacy Windows software. I am dual-booting Windows 7 Ultimate and Ubuntu 12.04 right now on my PC. I hear Steam will be ported to Linux and then other video game makers will follow as they reject Windows 8. Windows 8 is like New Coke, the masses will reject it and want the original back. Try to do anything in Windows 8 without a touchpad or touchscreen, and you will have a hard time.
Also, the changes between 2012 and 2010 other than UI?
That is here: http://msdn.microsoft.com/en-us/library/bb386063(v=vs.110).aspx
Unfortunately, SharpDevelop and MonoDevelop have an incredibly long way to go before being adequate IDEs. I guess they do want desktop developers to develop for Windows 8, but if you do anything else in development, there is no reason not to stick with Win7 and VS2010.
I think they have. Anyway, just download VsCommands. It got a feature that makes it small case. 
I currently use mono in conjunction with VS2010 to test code. I'm curious as to what exactly monodevelop is missing in order to be an adequate IDE. Frankly, there's many days that I think VS2010 isn't an adequate IDE.
Okay, the "plus they are forcing developers to switch to Windows 8 for more sales." hyperbole is nuts. Windows 7 cannot run Metro / WinRT apps. That's why you need Windows 8 to run Visual Studio Express for Windows 8. Please stop trying to find something sinister where it doesn't exist. Visual Studio Express 2012 for Web works just fine on Windows 7. Visual Studio Express 2012 for Desktop doesn't exist yet. Also, I've been using Windows 8 since the Technical Preview with a mouse on one machine and a touchpad on the other. It works just fine.
In using the beta, a lot of the software I tried to install didn't work for some reason. Like older versions of MS-Office and Visual Studio for one, and some video games for others. I guess there is some legacy software that works, but if they shut out Visual BASIC 6.0, MS-Office 2002, and Visual Studio 2002/2003 as well as some PLC/RLL programming tools and force everyone to a new version of Visual Studio and MS-Office, and the PLC/RLL software hasn't been ported to work on Windows 8 yet I guess? Yeah sure Windows RT drops all legacy WINTEL code, that was part of what I was talking about, sorry for the confusion.
OK so the desktop version will be out later?
I believe that version isn't out yet. Visual Studio Express for Windows 8 lets you make metro apps. You're looking for Visual Studio Express 2012 for Desktop, which hasn't been released yet.
&gt;Personally I am looking into moving to Ubuntu and using Mono as a development platform as an alternative to Windows 8 and Visual Studio. I used to think that Mono was unstable/difficult to run/too incomplete. Picked up ScreenConnect, noticed it ran Mono, deployed it to Debian "wow, that was easy... works well..." Went home, fumbled with Apache and mod_mono, up and running a MVC application in no time... I'm very tempted to continue cross-platform development in Mono now, those guys seem to have done a great job and I was misjudging where they are...
OK then I was confused over the supporting previous versions of Windows then. Any idea when the desktop version is due out?
Yup.
I don't think a hard date has been set, but I seem to recall that there was mention of "a few months" after the release of VS2012.
VS is killing on basic functionality (read that performant functionality). When you add Extensibility to to that, I want for nothing in VS compared to other IDEs.
Interesting thoughts. I've not had any trouble with Git and Github integration with VS, although the two dev boxes I've had have had 6 and 8 gig of RAM with multicore processors with regards to build speed and load time on huge projects. I'll update monodevelop on my mac and pull in a large project and see if symbol resolution and build time is any better now.
They're pretty bad at *everything* except marketing. Sometimes they fail that one, too. 
There is third-party support for git, yes. My statement was: but not from Microsoft. Every other IDE out there: XCode, Eclipse, IDEA, Netbeans etc ... they all support subversion, cvs, git. But truly, it's a minor detail now for me since I switched to git. Git makes it all so simple and easy to do on the command line and in gitk. Also, regarding your extension argument: Eclipse is by definition the king of extensibility. But, they're all extensible to the ying-yang. Visual Studio is an adequate IDE. But it's beaten hands down in certain areas by the free ones. Honestly, I'd spend far more time in vim if it wasn't for ReSharper.
Ill admit that I havent used it yet, but frankly, all Im seeing is typical Microsoft bloatware. 2010 and even 2008 were functionally improved over each iteration. Im not seeing much here that is core functional - it looks more like they are working towards *selling* other products than making the IDE more core functional. Windows 8 will not be a big seller for a long while. SharePoint is niche. Azure is niche. We dont even know what "Windows Store" is right now. And then the pointless and obnoxious UI enhancements like all caps menus (We have accepted and adopted upper/lowercase menus since the 1980's...WTF is the point to making this change?) Im sure Ill give it a try, but I dont expect to switch for awhile.
Hmm trying to download one of the express editions and kept getting lead around in circles.
&gt; not beaten down in any way that matters. Good luck with that.
Well I guess there is no Windows 7 version yet, right?
I've been using it all day, every day for the last 3 months. Personally I find all the complaining about the relatively minor ui changes way overblown, certainly in light of the substantial improvements in productivity. 
Until you have some experience to speak from, there's nothing you can say beyond regurgitating the same tired, shallow criticism that's been discussed to death already. I do think most of the improvements are aimed at the professional developer, so if that's not you, it will probably be pretty easy to write off as exactly what you already think it is. 
IPC eh? I'm curious as to what you were doing with IPC in a Ruby script.
Task distribution &amp; continuation. 
This one? http://rubygems.org/gems/win32-ipc
&gt;express requires windows 8 As a C# student, MS, you can go fuck yourself with that. When I'm ready to make money with C#, I'll buy me some of that expensive VS stuff. Until then, you release express for as many platforms as humanly possible and you do it with a smile. Not cool.
&gt;Are programmers aware that console based programming is going the way of the dinosaurs Bullshit.
&gt; Are programmers aware that console based programming is going the way of the dinosaurs ... ಠ_ಠ
Your rage is clouding your reading comprehension. &gt;[After the release of Visual Studio 2012, we plan to release Visual Studio Express 2012 for Windows Desktop, which will provide a Visual Studio Express 2012 product for desktop development. ](http://www.microsoft.com/visualstudio/11/en-us/products/express) The version of VS Express that you want hasn't been released yet. The one that requires Windows 8 is the one that is used to create Metro apps. And that one requires Windows 8 for obvious reasons. The Express Web and Phone editions that are out now definitely run on 7, and maybe Vista. So, you can either wait for a while, keep using 2010 Express, or download the 90 day trial of Visual Studio.
Practice. Lots of it. Seriously, while classes are good and reading books is good and studying code is good, the only way you're ever going to become really great is to write plenty of software. Another thing you can do is work with someone more senior and experienced than you. Observe how they work, how they structure their code, and the decisions they make. When you don't understand why they did something the way they did instead of the way you would have thought to do it, ask them why they made the decision they did... if they're any good they'll understand why you're asking and help you by giving you explanations of why they're doing what they're doing as they work.
However, it can be useful when doing division. Let's say for example you have an integer variable A with a value of 8, and you want to divide A by 5. The obvious solution would be to do this: int A = 8; double Result = A / 5; The problem with doing that is that doing this will cause Result to have a value of 1.0, not 1.6 as you'd expect. The reason for this is that it's dividing an integer by an integer, and *then* casting the result of that operation to a double. The way around this is to cast one of the integers to a type that supports fractions (decimal, float, double) before division. One way would be to cast like this: int A = 8; double result = A / 5d; Another way would be: int A = 8; double result = A / (double)5; This tells the compiler that 5 is actually a double, not an integer. Now, if you're hardcoding the number, then it doesn't really matter which of these ways you do it. However, if you're dividing two integer variables, then only the second will work. int A = 8; int B = 5; double result = A / (double)B; A third way would be to write the fraction out explicitly like so: int A = 8; double result = A / 5.0; All three of these methods will result in the proper result of 1.6.
Hi, I'm kind of drunk right now on a train ride home but I'll do my best. So all of types in the left column are the literal types of c#, they're variable keywords that the compiler understands as directly representing their specific type. When you declare something like bool foo, the compiler expects that to hold a boolean literal which is either the keyword true or false. Same thing with the number literal types, if you declare a float then the compiler expects something like 100F where the F says hey this number is actually the float type not just 100 which would be an integer. You need to use these literal notation rules when you're directly setting the value of a literal type in the code. There's probably a lot of resources explaining what each of these types are and what they are used for, this table is just showing you how to create them. Every other type used in c# are known as reference types because when the variable is stored in memory it just contains a reference to some other complex representation. Literal types are stored in memory as directly what they represent. I would strongly recommend looking up resources that describe the difference between literal and reference types as there should be a ton of posts on the subject. Hope that helps!
That doesn't explain why Express doesn't work, as it too would just not install those tools. 
Oh neat, I did not know I could apply casting to clarify literals. Thanks, guy! &lt;3
Ah, you're just a young pup. 23 years and counting, and I work at a company the scale of Apple. You've purchased our products if you have any kind of mobile device. Tell me - how many different accounts do you use to vote people down with? A thread this old, and this deep is unlikely to be followed by five people, but it's very cute. Who's the juvenile, junior?
there is several game-maker games in steam(tho you have no way of telling them they are made in game maker) so they dont care. 
if you dont have anything(hats) to sell in game via micro-trans. they wont distribute your game for free. THERE ARE totally free games on steam with no micro-trans. and whatsoever but it doesnt seem they just let everyone in.
That was the most confusing chapter(s) in my book as well. If memory serves me right there was an unspoken pitcher/catcher theme that threw me off.
I just peeked and remembered that I use nested actions and functions where I think some people use delegates. So I haven't got a clue. But someone should swing around here soon enough to help out.
hahahaha... sure. It's ok there son. No one is really watching your embarrassment.
We won't get annoyed. Just give us something to start with and put it on http://pastebin.com/ . 
Okay so this thread has me curious enough to look up more about events and what I found was a little interesting: Is it true that events allow a quantity of objects to subscribe to an event so that when the event is raised the objects all execute a method, as if a list of those objects were maintained and a method were called on each of those objects? Is that it?
Yes, indeed that is true. Any number of objects can subscribe to an object's event. I don't know the details since I'm more a C++ programmer than a C# programmer. (And devoutly praying for the day my company completely migrates to C#.)
 decimal mGPA = 4.0M; I've never seen that convention before - even Hungarian notation uses human-readable abbreviations for types. More often than not, a prefix of "m" means that the variable is mutable and scoped to an instance of the encompassing class.
Read up on the Observer pattern and event multicasting. This is fairly standard and yet interesting stuff.
Please let us know where you have difficulties and i am sure folks will be able to help you out. 1) Do you have trouble with the concept of delegate? 2) Do you have trouble with how to use a delegate? 3) Do you have trouble with how it serves as a basis for events? 4) Do you have trouble with figuring out typical usage scenarios? 5) Are you writing some code involving delegates and are struck in some place? The more specific you are, the more help you are likely to get. If you want folks to give a presentation over teamviewer and skype then that involves time and money. Reddit is probably not the right forum for that.
Do you have experience with jQuery? For example, the jQuery ajax call works kind of like a delegate: $.ajax({ (...), success: alert }); In the ajax call, the function call to the alert method is stored. When the ajax call succeeds, the method that is stored is called, in this case, the alert method. The call to the method is stored, so the ajax method doesn't need to know which exact method needs to be called, only that the method which is passed needs to be called. This way, the ajax method is really flexible. In C# it works kind of similar, only with statically typed variables. You can store a call to a method in a variable, and call it without knowing which exact method needs to be called, only that a method which is stored in the variable needs to be called.
They give them away, beggars can't be choosers. VS2012 pro costs very little in the end if you need it. Students and hobbiest's can cope with using 2010 until express for desktop is released.
It's important to ask WHY you would want to do this. I suppose it does vary by whether you are producing this service for yourself to consome or for others to consome. It's a little more allowable if the service is just for you. But really either way it's important to remember that in service oriented architecture you aren't just passing classes. You are passing CONTRACTS, if you can't take the time to define a data contract for an anonymous object then is the data really that important? If the data is too volatile to fit one contract then it seems like you should rethink how you are structuring this call. 
Interesting concept. Do you have any profiling results to show the performance differences?
I was bored, and wanted to see if I could. **Never** do this.
Microsoft wouldn't have implemented unsafe code if they hadn't wanted you to use it. That said, yes, use the built-in .NET classes instead of making your own.
I posted and answer in SO. I *believe* i found your problem, please let me know otherwise
I imagine worse. I'm sure the garbage collector freaks out when you cross the unsafe barrier.
Doesn't mean the exercise was a waste of time.
It's nothing you'd put in production, but there's nothing wrong with playing around and experimenting. 
This absolutely. At work we nearly doubled the speed of some image manipulation code by refactoring to use byte*'s instead of byte[]'s. Did not expect that much of a gain.
While I appreciate that MS allows for unsafe code in c#, this is like Squirrel and Stubbs breaking out of Bio-Dome. In other words, you're now going to die and come back as a leotard.
How is the performance? I've dabbled with unsafe code and found that it was slower than using the .NET way when reading a text file.
intArray[0] refers to the very first entry in the array, the one with index 0. So the code starts with the assumption that the first entry contains the biggest value. Then it looks through the array looking at each of the other entries and if it finds a bigger one it uses that instead. When the loop is done, it has found the biggest value in the array. Any time you see a number in braces outside of an array declaration, that means it's getting the value with that index out of the array. So intArray[7] is the 8th entry in the array (remember, counting starts at 0). There's a bug in this code. It will crash on an empty array when it tries to access intArray[0]. That's because an empty array doesn't have an element with index 0; it doesn't have any elements at all.
[C# Beginners Tutorial - 11 - Arrays](http://www.youtube.com/watch?v=RdrbVnMhDTQ) Take a look at this, it should be a good explanation for you. I'd recommend the [whole playlist](http://www.youtube.com/watch?v=x_9lfHjYtVg&amp;feature=list_other&amp;playnext=1&amp;list=SP0EE421AE8BCEBA4A) of those as well.
Don't get confused by square brackets being used as an indexer as opposed to being used to declare a type. The statement "int[] array = new int[20];" creates an array of 20 integers. The type of this array is type "int[]" which means integer array of any size, so you can use that type when defining variables such as parameters. Writing "array[0] = 5;" assigns the number 5 to the first element in the array. Why does it start at index 0 and not 1? Think of it this way, the index is an offset. If an integer is 4 bytes, then specifying array[2] reads as "get the integer located at the start of this array PLUS 2x the size of an integer", which points to the 3rd item. The 1st item in the array is located at the same location that the array itself starts. It's not offset by 4 bytes, it's offset by 0 bytes.
&gt; Why does it start at index 0 and not 1? Think of it this way, the index is an offset... I thought it was because 0 is the first integer!
In lower level programming languages like C/C++ the expressions you would type would correlate directly to a virtual memory address. In this case, the math is taken literally, so the expression "array[5]" would mean retrieve the address of the array and add 5 times the size of the type, or "array + (5 * sizeof(int)" (for an int array). High level languages that use 1 as a starting index can internally subtract 1 from the index value before performing the math, but that reduces performance unless it's done at compile time. And it would simply make it harder to jump from language to language if you're a beginner.
Think back to the C days - Indexes were indeed offsets - you basically "multiply" the index by the size of the type. So the "0th" element started at the beginning of the memory allocated for the array (bits 0-31 for a 32 bit int), the "1st" element started at the 32nd element of the array (1x32) and so on...
I haven't got a clue how C/C++ works. But that makes perfect sense when I think of it as a structure. 
When you do pointer arithmetic in C* languages, the sizeof() call is implicit, so your example could easily traverse too far through the array, if someone took it naively. You also mismatched your brackets. I know you're probably aware of this, but people who are just trying out pointer arithmetic might not.
I was explaining what the expression "array[5]" meant as pseudocode.
While working on a game in XNA, I needed a way to off-shore the engine logic. This is one of the results of that need. The class here is a part of a portable class library project based on .NET 4.0.3 so the code can be used on Windows, Windows Phone, Silverlight, and Xbox. I have generic structs such as Point2G&lt;T&gt;, Point3G&lt;T&gt;, and RectangleG&lt;T&gt; which provide flexibility and still allowing all the math to work regardless of the generic type specified.
As soon as I get Windows 8 and they release an XNA game studio that works with it, I'll upgrade.
fyi, anywhere you have (a, b) =&gt; a &lt; b ? -1 : (a &gt; b ? 1 : 0); you can just replace that with a - b
Awesome, thanks for this!
I would worry about the possibility of getting a 0 with extreme floating point values but overall that sounds pretty good.
A method I used to create the effect of inlining in the past was to generate two parts, one that created expression trees and another that exposed their implementations as delegates. This way I could perform a distance calculation for example and only need to call one delegate. Sorry this implementation is not yet complete but hopefully this helps you out in some way: https://bitbucket.org/aarondandy/vertesaur/src/2ea3e43fc653/src/Vertesaur.Generation/ExpressionBuilder/DefaultGenericOperationProvider.cs
For "=&gt;" lookup "lambda" on MSDN. While you are right the result will differ, CompareTo in .NET is only concerned with the results relation to the value 0. See IComparable.CompareTo for more on that.
Ah! After taking a closer look at the original code, I see what's happening now! Many thanks for your help. RobR
Whenever you have a generic parameter that can be used with a number of different numeric types. For instance, you can write a single standard deviation function that operates on floats, doubles and decimals.
You cannot possibly expect anyone to read all of that. We don't care nearly that much.
i dont care about you not caring. its the error i got, so its the error i posted.
Have used it, at least from version 3, I don't recommend it for a number of reasons, but the simplest one being that it was never intended as a framework, it is a "guidance" meaning it was for educational purposes only. There are other issues, it isn't designed all that well, it has "testability" issues (which isn't a problem if you don't write unit tests) and the event aggregator it uses is (or at least was) pretty weak compared with alternatives. My personal preferences are MVVM light and Caliburn Micro seems pretty good (though I've yet to use it).
The one thing I really like, and the main purpose for trying to use Prism is the ability to define regions for modules to populate. Is something comparabe possible with these alternatives?
I do believe so but I couldn't tell you as my usage of the others isn't as significant, I used Prism extensively for a job I did. I dabbled a bit in MVVM light and Caliburn Micro but not nearly as extensively. Both seemed better to me at the time. I suspect Caliburn full does support this, it can do quite a lot of interesting things. MVVM light and CBM may not since they are meant to be very lightweight extension frameworks for general WPF/Silverlight work.
Prism is dead. Move on. If you are doing WPF, I would start with reading up on MVVM and just roll your own. It sounds like you are doing a single application. Why make your life difficult and introduce another dependency. Start with your model and sketch our your UI. Those will ultimately drive the design of the view model. Code up the view-model and view then set up the bindings. 
Thanks! I'll check it out.
My shop uses CSLA as a foundation for its MVVM and uses MEF with WCF discovery to collect up GUI elements from across the network and compose a GUI. My understanding is that (at least on the silverlight side) the MEF goodies of Prism were incorporated into WPF, making Prism obsolete.
What's wrong with System.Text.RegularExpressions?
Nothing at all, but I'm attempting to bring the concept/construct that is in many functional programming languages to C#. You could definitely do the same with System.Text.RegularExpressions.
Between that and using Linq on characters in strings, I'm not really sure what this is adding to the party. A more fleshed-out example might be helpful, because I'm not getting it yet.
Check out the [StackOverflow thread on the topic](http://stackoverflow.com/questions/477748/what-are-the-best-c-sharp-net-books). Also if you're not already using StackOverflow for your current tech, then you soon will be. There is a decent sized C# community there. I'm partial to Jon Skeet's book, C# in Depth. 
if ( chucnk1block1 == 7) { &lt;your code&gt; } 
 //Func&lt;object&gt; intAction = () =&gt; { // return new Number((int)c); //}; char c = '0'; int x = (int)c; Console.WriteLine(x); // 48 ;)
Thank you! its not the same as VB... so i had to learn it all over again :P
Hey, another danish redditor :-) [This page](http://stackoverflow.com/questions/588981/using-embedded-standard-html-forms-with-asp-net) should get you started.
Headed over there now. I appreciate the tip.
I'm not against ORM... I don't understand it yet! thanks for the links, much appreciated.
I'm sure it was just a typo but you need an additional equal sign in your if statement. = for assignment, == for comparison.
Good call! I'll make those fixes tonight. Thanks for bringing that up! 
Pluralsight is pretty good. Though they have a subscription fee, it's like 36 bucks a month for some awesome videos. Also, play around with your code, post your road blocks, look around stackoverflow.
I've only once had to pass an XML blob as a string across WCF... As others have pointed out, you should have a very good reason for not explicitly defining a DataContract. That being said, the built-in DataContractJsonSerializer won't help since it's opt-in. I'm not aware of a built-in opt-out JSON Serializer, so you'd have to look for a third party solution.
Thanks. I'll look at it tomorrow.
This is a great tutorial on pointers in C#. Learn how to draw fire. http://imrannazar.com/Using-Pointers-in-C
You can use those with Prism if you want as well, they aren't mutually exclusive. Might want to check out ReactiveUI as well, neat stuff :)
I like some of the new features, esp the async connections with TFS. But man it really needs some better contrast and a bit more color... I'm using the dark theme which I find much better (used default in 2010 and prior) because the light theme was blinding and had almost 0 contrast. I've noticed that some of the UI elements that are brought in like the whats new / intro videos have a terrible contrast to the rest of the UI when you first load it up.
Lots of articles [discuss the problem](http://blogs.msdn.com/b/wpfsdk/archive/2007/06/08/defining-and-using-shared-resources-in-a-custom-control-library.aspx). Be wary of any solutions which advocate a ResourceDictionary subclass, as all the ones I've played with introduce new issues. The short and stupid answer is to import all your shared resources at the application level.
What? Either you haven't really looked in to what you can do with it or just hate it for some other reason, but I've used it on large scale very modular projects and it worked great. You can add in everything from menus to views to sub views all through plugins and have nothing but a basically empty / shell project to start with (if you wanted)
Prism has built in support for either MEF or Unity (or you can use your own). MEF is part of .Net 4 now or was an external dll for 3.5SP1
Have you tried to read through [this article]( http://csharpindepth.com/Articles/Chapter2/Events.aspx) from the c# master, Jon Skeet? 
For reading up on and getting started with MVVM, I suggest this blog entry I found very helpful by Josh Smith. &gt;http://msdn.microsoft.com/en-us/magazine/dd419663.aspx
Certainly write code, sure. But try to do it smart by getting lots of good advice. We have an annual subscription for Tekpub for the team I manage at work. It's like working next to black belt coders. Answers that save you stacks of time. 
First, the main driver behind the framework left MS. Second, take a look at the date it was last updated [here](http://compositewpf.codeplex.com/) Look around the site. Other than putting up a slide saying there may be a prism 4.5 they haven't said much. about the long term prospects of the project. 
It was last updated shortly after they did their last commit for 4.1 which added SL5 support, and 4.5 will be released soon once .Net 4.5 is fully released http://stackoverflow.com/questions/7181306/is-prism-still-being-actively-developed Future Plans The next release of Prism is planned for the summer or fall of 2012. To provide feedback, please create and vote on work items in the CodePlex issue tracker. http://msdn.microsoft.com/en-us/library/gg406140.aspx
Sooooo.....where'd you get that LCD then!?!?!
Bind to commands instead of methods. Look up WPF command binding.
Either make a public method and pass one object to the other, or pass a delegate.
Head First C#. It's the best first book; don't judge it by its cover.
The head first series I've seen work for almost everybody but purely academic types, who have their own ways to learn. It looks cheesy and is a little bit, but you learn, and you learn quite well. I'd recommend following that with some other knowledge source specific to what you're working on (ASP MVC, SQL Server, WPF, WCF, etc).
I will heed this advice! 
I thought [Pro C# 2010 and the .NET 4 Framework](http://www.amazon.com/2010-NET-Platform-Andrew-Troelsen/dp/1430225491) was really good. 
I wouldn't say so, at least not until the later chapters. I only know some very basic programming and most of it felt like a waste of time, although it was an ok refresher. You get to learn some basic few differences compared to other OO languages, but you can also learn those much faster elsewhere. I can't comment on the later half of the book since I'm not there yet.
I'm reading it now, and really loving it.
I've found 2 books in particular to be extremely valuable: 1. The C# Programming Language by Anders Heljsberg (and others). 2. CLR via C# Whether or not these are appropriate for you depends on your learning style.
C# in a nutshell is very good if you already know programming. Having all the samples available through LINQPad (which the author wrote) is just all kinds of great too, since it lets you try things out right then and there. In any case, do yourself a favor and get [LINQPad](http://www.linqpad.net/). It's a fantastic C# code scratchpad. 
Thanks, I'll take a looksie.
Yanno, I'm really liking having a wide selection. Thanks for the link!
Is WROX pretty much the go to learning companion in your opinion?
That does sound awesome, thanks!
Pro C# 2010 and the .NET 4 Platform by Andrew Troelsen is a great text if you're not scared of getting fairly in depth and you already know quite a bit about programming in general. I highly recommend it. I think there is a newer edition but I haven't read it yet and the one I mentioned is fairly cheap used anymore.
C# In Depth and In A Nutshell are great books. I would love to hear your further recommendations.
Hm. That's a pet peeve of mine yet everybody loves this book. I'll look into it.
heh.
I don't quite get what sort of pattern matching you're trying to implement. The visitor pattern is the OO equivalent of exhaustive pattern matching in functional languages. For retroactive/ad-hoc extensions, ie. objects that are defined by someone else so you can't add the visitor pattern, just use C#'s generics with [this pattern I devised](http://sasa.hg.sourceforge.net/hgweb/sasa/sasa/file/7785dc7446d1/Sasa.Dynamics/IReducer.cs).
If it's MVC you're going into (which is a pretty safe option since it's well adopted by businesses) I recommend Pro ASP.NET MVC 3 Framewor.
Thanks! Feel free to add to the issue tracker or submit pull requests. You'll need at least the Express version of VS2010 and Boost installed (http://www.boostpro.com/download/)
[System.Windows.Forms.Clipboard.GetText()](http://msdn.microsoft.com/en-us/library/kz40084e.aspx) public string ReadClipboard() { return Clipboard.GetText(); }
Might want to talk to [Paul Betts](http://twitter.com/xpaulbettsx). He might be interested, though he has a lot of other projects he's working on. Although it looks like they have already solved issue of ssh on windows, he still might be interested. Why might he be interested you ask? Well, he works for github on github for windows, so there are definitely some overlapping interests here.
He is also my lecturer! Hello fellow hull redditor :D
Is the same application that generates the code also the application that executes the code, or are you just outputting the code that will then be copied into another Visual Studio project?
Easiest way would be to do a SortedDictionary: SortedDictionary&lt;string, int&gt; SongVotes = new SortedDictionary&lt;string, int&gt;(); //Read through the text file (splitting by ':') SongVotes.Add(line[0], line[1]); To access any of the dictionary you loop through the keyvaluepair foreach(KeyValuePair&lt;string, int&gt; pair in SongVotes){ Console.Writeline("Song: [0] Votes: [1]", pair.Key, pair.Value) } If your line about using an Array and Sort was a hardpoint, just loading each line into a string array and calling Sort would default to sorting alphabetically. I'd at least recommend using a List&lt;string&gt; though.
SortedDictionary is sorting off the key which in this case is the name of the song so this doesn't work. Even if you made the votes the key you still can't guarantee the votes will be unique.
Thank you for your time and answer. Any quick fix to do this without classes maybe?
Little classes or structs like that help out overall as the code base expands. You should stick with them.
http://www.codeproject.com/Articles/20895/Delegates-for-Dummies that popped it for me
I'm guessing he is doing this for a class where he is not supposed to use classes yet.
He used to be my lecturer and that is an excellent book! He is also a Microsoft MVP and wrote some other books for them.
I've learned a ton by reading Head First C# for concept stuff, and keeping a copy of C# 5.0 in a Nutshell on my desk as a reference. I generally try and do this when learning a language- get one touchy feely book to get me started and give me a mock project(cookbooks are great for this!) and then get one book that's got enough depth to last me ages.
Visual c# 2010 is the book i got for college it's ridiculously indepth and dry.
Well, that's the first time I've heard something positive about VS12. Guess I might give it a go after all. Oh by the way: my copy of C# Smorgasbord (I'm Dominic) arrived safely last week, in better condition than what I often receive from Amazon et al. It looks wonderful so far :)
Nice I'm glad to hear that! Delivery was faster than expected. Congratulations again on winning a free copy, I hope you enjoy the rest of the read. 
I don't know. You tell me? Is there something that you feel missing in Visual Studio 2012? I only see the improvements and added features as positive.
The new Visual Studio is awesome. But to the op, at least half of your posts are self promotions and should starting to show up as spam...
What should I do to avoid it being shown up as spam? Post more comments or share other links to other peoples blogs/news?
I have been working with vs2012 for a month now, upgrading the VS plugin for my employer. So many annoyances and shortcomings have been fixed, and the overall feel of it is now the best IDE.i have used. The only thing so far I think is still missing is improving the options dialog to be searchable like Eclipse. The global search feature works fine for this, but it's not in the dialog.
One thing that I'm excited about is the C++ 11x support. I am not a C++ programmer and haven't touched it since my AP Computer Science class back in '01, but now I feel like I can use modern C++ on Windows without having to use MinGW and GCC
Ok, thank you! I will keep that in mind :)
On a related note, I was surprised last week to find that my MSDN Professional subscription had been silently updated to include Embedded. If there was an announcement, I missed it. Woot!
It's been out for about a month, it's just the launch event that was scheduled for Sep 12.
For any programmers in college, Dreamspark has been updated for free copies of VS2012 professional. :)
This is one of my favorite things about going back to get my MS. I have my VM of Windows Server 2008 R2 with SQL Server 2008 R2 on it and am in heaven.
Oh, that explains it. I got Visual Studio 2012 Ultimate on msdnaa, and I remember reading somewhere that the Express versions weren't released yet. However I was able to download it yesterday, didn't know September 12 was the official release. Just in time or else I would've had problems yesterday. I haven't used VS often, since I'm mostly a Java person. (I actually started with C# two weeks ago for a windows project). But I have to say I'm really impressed with the IDE. I don't know 3/4 of the features it has, but it works so well, the Editor is amazing, easy to customize. It's definitely going to make Netbeans a less pleasurable experience. Maybe I'll find myself moving to Eclipse now.
Premium as well for me, although Ultimate is still at RC2 for some reason.
VS2010 had partial C++11 support, and VS2012 is not yet complete but getting there. VS2012 added the for each construct, for example. One additional major improvement is C++ static code analysis in the Professional edition. VS2010 only had that in the Ultimate edition. Since VS2012 Pro is obtainable via Dreamspark, that makes a big difference for me :)
No, check Wikipedia. The RC was available in June and the final release came out in August. I uninstalled the RC and installed the 30 day trial for the final release. I remember specifically reading that they planned the "launch event" for a later date http://blogs.msdn.com/b/jasonz/archive/2012/08/15/visual-studio-2012-and-net-framework-4-5-released-to-the-web.aspx
My *only* complaint is that it's ugly to look at. It's not as ugly as Server Manager in Server 2012, but it's still pretty freaking ugly.
Looks like MS caught the Minimalism bug. Now just imagine if it had gone the other way, with Skeuomorphism.
It's incredibly, *unusably* ugly. Async is cool, but I can get that in VS2010 with the Async CTP. After using the VS11 beta and uninstalling it a few days later, and then doing the same with the VS2012 RC, I have no desire to get myself a copy of VS2012 RTM.
Are you sure? I have been using Ultimate non RC2 for the past two weeks.
Entirely, checked twice to make sure I wasn't hallucinating ;) Between sprunth's comment and mine it's already clear that Dreamspark content isn't exactly consistent between institutions.
No, full Visual Studio Professional is available for download, with key, as part of the MSDN Subscription you receive for free when you sign up for Websitespark. The signup process involves signing up for one of Microsoft's email addresses (guys Hotmail still has some names available total score man) and giving them your address. They send me email about "partner opportunities" periodically although I bet you can turn that off, I just haven't looked for the setting. I guess I keep assuming they'll be useful someday. So far they have not been.
Very cool! I'll have to remember this when I leave college...
SQLite. Gives you better performance for larger files than parsing XML and doesn't require a deployed SQL server.
This works. Also can consider a SQL CE (compact) database if you want something within the Microsoft stack. On the other hand, I recently had a programming experience where I actually found it easier to store data on a MongoDB in the cloud (15mins) than my own local disk (2 hours)! Edit: I've actually successfully used contracts to handle storing the same data in the cloud as well in relational databases: see [Sharing Wrappers with DataContractJsonSerializer and MongoDB for Storage](http://codenarratives.tumblr.com/post/22999194625/sharing-wrappers-with-datacontractjsonserializer-and).
It really depends on your requirements. Relational databases give you lots of flexibility. If you are going to stay in the Microsoft world, you could use SQL Server Express and then later easily upgrade to the more professional versions. http://www.microsoft.com/sqlserver/en/us/editions/2012-editions/express.aspx Another option is to use document style databases but again it depends upon your requirements, both short term and long. 
XML would probably made it easier to add new content from outside your application.
Everyone seems to be going to SQLite/SQL Server Express route but I think the XML route is fine for this. LINQ makes querying basically the same. Performance is definitely pro-SQL but you also lose portability if you're going to let other people use it easily. 
A little bit off topic, but where do you plan to get your questions from? Are you going to be entering them yourself? I was working on a trivia application a while back, but I couldn't find a good free supply of questions anywhere online.
Wow. I'm doing the same thing and was gonna ask the same question. lol (A personal project, not for public availability.) I'm actually having a hard time with what I assumed would be the easy part. The questions and answers. I am personally using a SQL Express database file. 
Build a QuestionCollection encapsulation that reads from XML. When you outgrow it, switch to SQL. With a simple set of data like this, best not to focus on minor details like this. Bigger questions need answered: interface, question sources, ratings, records, etc. Where the questions and answers live is a minor detail compared to the rest. 
I don't think that's correct. According to http://stackoverflow.com/questions/5086162/when-am-i-required-to-call-marshal-releasecomobject-on-an-interface-queried-thro, calling ReleaseComObject is basically a manual tweak for situations where you don't want to wait for the garbage collector, and MSDN cautions that you should only use ReleaseComObject when it's "absolutely required" (http://msdn.microsoft.com/en-us/library/system.runtime.interopservices.marshal.releasecomobject.aspx). In normal use, you can just treat COM objects like .NET objects: when the object is garbage collected, the system will release the COM reference automatically.
I'd also go with XML, or other static files to store the data. There's really no need to get a full-fledged relational database involved for a quiz, unless there are more entities than "questions" and "answers".
My default answer would be SQL CE / EF5 code first makes data modelling a breeze and can be used for storing your progress etc. I'd then use Excel for data entry with an import function. But that's just me.
try /r/scriptkiddie
Well thats only half-way correct. The question is: When is it "absolutely required"? If you work with Outlook on Exchange, you have a 512 ComObject Limit (can be configured on the server i think). After that, you can't get any more and your reuqests will fail and raise exceptions (things like mailItem.EntryId wont work then). Another sample: I made a very small program, that worked with the mshtml library to go through the DOM Architecture of a website. Every DOMObject is a COMObject and if you do not release them they will stay in memory forever. The program loaded all pages from a mangawebsite and it was a rather long manga. So after few thousand pages (out of ~11k) with about 5 COMObjects per page (and 4additional Objects after ~25-30 pages), my programm went out of memory (and believe me, that took a while, so the GC should have done his work). After i included the manual releases, everything is good and the memory gehts freed. And i think it hadn't anything to do with the library. AFAIK (but that might not be true), the objects in C# are like "Proxy Objects" that proxy the real ComObject (if thats the correct word). I think i read something like that, but i can't really remember where it was or if it was just an illusion :D btw: There is no real information about the order in which the objects need to be released. It doesn't seem to matter, but to be sure they should get release in reverse order.
I used XML files for storing the questions in my quiz application. Unless you're going to be handling a very large number of questions, performance should not be an issue. Design it to minimize the changes needed to switch storage tech. 
I have posted this in other subreddits, finally found the C# specific reddit. I am very interested in feedback, particularly if you are going to downvote. I am relatively new to using Reddit, and also I am still tring to find the "voice" for the content on my blog. If you feel the article uscks, please take a minute and let me know what you didn't like. If you think the post doesn't belong on Reddit, please let me know why . . .
... does anyone know the difference between the following? **FileStream stream = File.Open(filePath, FileMode.Open, FileAccess.Read, FileShare.ReadWrite)** **Stream stream = File.Open(filePath, FileMode.Open, FileAccess.Read, FileShare.ReadWrite)** Is one more efficeient in terms of speed and resource than the other?
File.Open returns a FileStream object, which is a derived form of Stream. You cannot actually create a stream object, because it's an abstract base class, only implementations of Stream. So there's no difference between the two, other than if you say, had a List&lt;Stream&gt; or other situation where you want a variety of classes with common characteristics, which you could put FileStreams, MemoryStreams, etc in - that sort of thing.
There is absolutely no difference. The only difference is the variable that you're holding the result in. File.Open returns a FileStream, which is a subclass of Stream. The only thing that would be different is that if you want to use FileStream specific methods, you'd have to cast your Stream variable up to FileStream first.
What type of textual data are you processing? Is it XML by chance?
Nope, it's not an XML file. It's a log file written in .log format, it opens in notepad and looks like a normal notepad file.
What do you plan to do with the data once read (if you don't mind me asking)?
The log file is deleted everyday and it contains data about service performance and outages. I read each line, strip out non useful stuff and store it in a database. Once this is done, we have a historic record of service status which I can run SQL against. Makes my job a lot easier.
Usually the files are managable, but recently with more users the files are getting as big as 5GB. Don't think the ReadToEnd will work. Question about ReadToEnd though if anyone knows it - If I start the ReadToEnd method and the file is written to before I have reached the end, will it read new lines or will it just read lines that were present when ReadToEnd was called?
You should make a copy and process that instead of the live file. Other processes will not be able to write to it.
Is there a way I can read only a section of a file? Say zero bytes to whatever the filesize is number of bytes? Or from 100 bytes to 200 bytes?
Yep. http://msdn.microsoft.com/en-us/library/system.io.streamreader.aspx. Take a look at the Read(Char[], Int32, Int32) and ReadBlock() methods. 
Awesome, thanks, I'll have a go on this tonight.
I agree here. Plus, it is easy to serialize to and from XML using a System.DataTable.
 Imports System.IO Private Sub ReadFile(ByVal FileName As String) Using oFileStream As New FileStream(FileName , FileMode.Open, FileAccess.Read) Using oStreamReader As New StreamReader(oFileStream) Dim sLine As String = String.Empty While (oStreamReader.EndOfStream = False) sLine = oStreamReader.ReadLine() End While End Using End Using End Sub 
Well, WPF and it's siblings (WinRT, Silverlight) aren't really going anywhere. They all share the same concepts whereas Forms is a very significant departure. Also, if you want to know about the [Win API](http://en.wikipedia.org/wiki/Windows_API), your best bet is to check out [P/Invoke](http://pinvoke.net) and also the MSDN library for C++ or winapi reference. There's a lot of documentation it's just a little bit more obscured than the managed framework docs. Don't forget there is also a ton of examples in the Windows SDK. 
Thanks for the pointers. Yeah, I realize Win forms is on its way out, but I am stuck working with that because of work. I really want to spin up my know how with WinRT, and at least get a little acquainted with C++. Beyond that, also trying to get more comfortable with web development. I have found some interesting stuff in the MSDN library for winApi, but I think I only recently have become proficient enough to "get" the docs. 
Here is part II in the little series on extending the .Net Listview. This one includes a small snippet of code for handling scrollbar issues using the WinApi. Feedback welcome and appreciated. Especially if I got something wrong somewhere . . .
You may have run into the same issue described [here](http://stackoverflow.com/questions/8933091/do-you-have-to-call-gc-collect-explicitly-sometimes-with-com-objects), where you weren't consuming enough managed memory to force the GC to run, even though you were consuming plenty of unmanaged memory and COM objects. Try inserting explicit calls to GC.Collect() and GC.WaitForPendingFinalizers(), and make sure you aren't holding onto any references to the COM objects you don't need. You're correct that the objects you call from C# are proxies (officially called RCW or Runtime Callable Wrapper). But the garbage collector knows about them, and it keeps the real COM object's reference count up to date as RCWs are created and collected. At least that's how it's documented to work - if you've found a case where it doesn't work, that's a bug and you should report it to MS.
Admittedly, my approach in the article above is something of a hack, which should eventually be addressed with improved design/deployment methodology. But the solution as described solved the immediate problem in a bad situation. Would love constructive thoughts, and/or feedback on exactly what perils this approach would introduce. I am self taught, and will take all the constructive criticism I can get from thsoe who know what they are doing . . .
In web projects, Visual Studio supports different versions of the .config file for different project configurations/deployment scenarios. Apparently if you install the right extensions, [you can get support for doing this with app.config as well](http://stackoverflow.com/questions/3004210/app-config-transformation-for-projects-which-are-not-web-projects-in-visual-stud). The gist is that you have a development version (app.config) and under it you'll have versions for each solution configuration (app.Debug.config, app.Release.config). In your dependent config files, you have entries for the sections you want modified when that version of the project is built. For instance, in your app.Release.config, you might have: &lt;connectionStrings&gt; &lt;add name="myConnString" xdt:Transform="SetAttributes" xdt:Locator="Match(name)" connectionString="..." providerName="System.Data.SqlClient" /&gt; &lt;/connectionStrings&gt; When you build the Release version, it'll look for the connectionStrings section in your main app.config, find the one named 'myConnString', and replace all the attributes with the attributes specified in app.Release.Config. 
This. We've been using this method to automatically generate a distinct app.config file for each site we build against. Works a treat and isn't as hacky.
I have just learned something new. Definitely going to check it out. Although, I am also needing to represent different directory paths as settings as well. *This* is why I am posting my stuff on Reddit. 
Are you using the Visual Studio extension in hartez's post? Is it something that requires Visual Studio F5 build to work, or is it something that plugs directly in to msbuild and your proj / targets files?
A novel approach, but generally this problem is best and most commonly solved with Dependency Injection and an Inversion of Control container. Basically you'd install an IoC container via NuGet like Castle Windsor, and then "register" classes to handle responsibilities throughout your application. The benefit is you end up with loosely coupled code that can have these dependencies injected and their lifecycle managed depending on need. In particular, you might want a resource in your application to be cached at the application or session level in Production, but you don't want to deal with all of that when you run tests. Most IoCs in .Net let you register an injected dependency with a lifecycle, and they manage it for you to avoid having your code use things like HttpContext, that make testing very difficult.
No problem. IoC is kind of a heavy subject and if you spend time on Stackoverflow asking about them, it's unfortunately a honeypot for jerks to come vote you down for asking questions they deem stupid. So my recommendation is to just jump-in feet-first with Castle Windsor and make up a need like a Singleton (a class that has only one instance, and lives for as long as the application lives, but has no static methods - it might store things like the physical path to the web root), and an object you need for each Request (it might hold the user's IP as a made-up need). Inject them using a Windsor tutorial and practice using it to see how it works. It will teach you a lot about interfaces, why and when to use them, what the added work is to introduce them, etc. The benefit of most of this will become most obvious if you create a second project to test these 2 classes you create - instantiating them and testing their methods will be easy, whereas making a static class with a lot of static methods, or making an object that depends on HttpContext or HttpContext.Current.Request is very tough to test.
Thanks, found a few cool tools I'm going to try out. For example, I have been looking around for a Heroku alternative for .Net projects. Found AppHarbor on here, and I'm psyched to give it a shot.
Go read an entire book or web tutorial on C#. You clearly don't get some key concepts. In this particular case, I'm going to assume you are using a System.Windows.Forms.Timer, since it's the only one with a Tick event, and the format of your method name is typical of that generated by the WinForms designer. Normally, when asking for help, the asker would be kind enough to include that kind of information so that readers don't have to guess. Finally, your error lies in the fact that your, as the message helpfully tells you, is that your event handler's signature does not match the delegate of the event. You can see from [this MSDN page](http://msdn.microsoft.com/en-us/library/system.windows.forms.timer.tick.aspx) (which is very hard to avoid finding if you do any kind of search by the way) that the Timer.Tick event takes and "EventHandler" delegate. Surprisingly, MSDN doesn't actually link to the EventHandler page, but another quick trip to Google quickly yields [the correct page](http://msdn.microsoft.com/en-us/library/system.eventhandler%28v=vs.100%29.aspx). On the EventHandler page you will find that the EventHandler delegate requires a method that returns void and takes an object and EventArgs as parameters. Your method, inexplicably, has a third "WebBrowserEventArgs" parameter, which doesn't fit the EventHandler delegate's signature.
On an unrelated note, do yourself a favor and learn WPF rather than WinForms. WinForms isn't updated any more, with all new development going to WPF, and trying to transition later is a lot harder than just learning WPF from the get go.
I've never used WebKit before, so I'm not entirely sure what's going on here. The crash could be due to setting the text box text from a thread other than the UI thread. To be honest, I doubt the timer is the best way to accomplish what you're trying to do, since it forces you to deal with threading. You don't want to mess with that stuff until you've got quite a bit more experience. See if there is an event that gets fired when the webkitbrowser.url property changes, &amp; set the text there. Maybe webkitbrowser implements INotifyPropertyChanged? I'm sorry I'm not much help here, but I don't have Visual Studio handy. I'd recommend you do a google search for examples of what you're trying to do. Also, check out StackOverflow.com for an excellent resource. 
SSRS is free and database-driven. I use it a lot, there are a few things it doesn't do terribly well but for 95% of regular reporting requirements it does a good job. You can render it to a PDF or to a viewer inside a form/webpage very easily, or save the byte stream - it's pretty flexible. All you need is SQL Server.
This is where I land with it. I am in the same boat - self-taught guy. I can do all the reading and video watching I want, but I am not really accomplishing much until I apply those things. Possibly the worst thing one can do is apply a solution to the wrong problem just because it's the latest/greratest thing they have learned. Instead, think of a project, not in terms of what you know how to do today, but simply in terms of what you would like to do. I gaurantee issues will pop up, and THEN you can search for the correct solution. As an example, I am a .net guy of several years, almost exclusively in Winforms. My next project will be to build a website. Using Ruby on Rails. My knowledge of such things is limited, and doubtless my first attempt will be a trainwreck. But I will be learning a new language and architecture, in a new domain. 
OK Thanks. I will check to see if i can get it to work. BTW this is my first real C# project
It's cool and all, but programming is much more than graphical programming. But whatever floats your boat.
I think the point of the article is how to help people who are brand new to see how things work. Of course programming is much more than that. But we aren't born with an innate understanding. I think if graphical techniques create the "light bulb" moment in awakening understanding, then the building upon that becomes much easier. I don;t think the author's intent was to postulate "graphical programming."
It kinda is, I agree, but if you can afford it, it really is a great productivity tool. I never really wanted to get a control library when we started talking about getting one but now I have it, I will find it hard to go back. It is about $500 per user per year after the initial payment which is more ($1500?) - so not cheap, especially to start, but you do get a LOT of stuff. If and when I move companies I'll find it hard to go back.
In .NET 4.5 I am looking forward to the asyc/await and NGEN/GC improvements.
Lack of entries to the app store suggest there might be great opportunity (as well as risk). 
I feel like I need to bathe the "shill smell" off after reading that. No one could write that crap without getting paid to do it. This is just marketing. Windows 8 is simply (1) not good enough, and (2) multiple years too late. Android works just fine and is well established, and likewise for the Ipad. Windows 8 brings mainly headaches. This is going to be a disaster for Microsoft and pretty much everyone in the world knows it. Might as well call it Windows Zune. I say that, knowing I make my living off using Microsoft products. It's not a good thing for me professionally, either.
Save yourself some brain cycles and always use "var &lt;varName&gt;" instead when directly assigning values to variables. "var"s are still strongly typed, they just save you hassle when refactoring.
Is there any reason this series seems to completely ignore [Github for Windows](http://windows.github.com)? I've been using it for a bit now and while it has issues it's also very promising - sleek and responsive interface, good support for the primary workflow (init, add, commit, pull, merge) and excellent Powershell integration. I understand that you wouldn't want to lock it into the GitHub website, but with the Powershell functionality (where you can use the entire git toolchain) it's perfectly possible to set a different origin. EDIT: Admittedly, Bash is in my experience a lot more comfortable to work with than PS. MS did a decent job on improving commandline support for stuff, but the actual interface hasn't changed much from cmd.exe. 
I mention Github for Windows in the context of "there are great UI solutions out there, but first we're going to take a look at the old, hard command line way." In part, I've been writing this to document my own learning about using Git and Bash from the command line. I wanted to learn what's going on under the hood before moving to a UI approach. I also originally intended this series of posts to serve as my own reference for Git and Bash commands (although, as is often the case, the act of putting the articles together has had the side affect of making me more and more fluent - also a win). Before writing the article, I was a long-time resistor of learning the command line (Bash, PS, or otherwise). While I wasn't afraid of it, it just didn't seem like something to spend too much time on. Glad I did, now. I think Github for Windows is fantastic, and plan to explore it in a depth in a future post. Github for Windows will likely be a game-changer, in that Git functionality will be exposed through a well-designed UI. More people than ever will probably adopt Git as a result. I will be covering UI options for Git once I've walked through the command line basics. Kinda like learning Algebra the old, crusty way (with a pencil and paper) before moving the heavy lifting into calculators, computers, and spreadsheets. One should understand the basics first. 
While I think that I'd be in favour of a more top-down approach (although mostly regarding "what is version control and why should I care") that's an excellent motivation :) Additionally, actually explaining the what-and-why would basically be a topic of its own. 
Can someone explain what this will actually do? I have been developing in C# for 16 months now and I'm interested in the benefits
REPL loops are great for testing code snippets as you write them, since they can be run immediately. It turns out that the write-compile-run-debug loop has a lot of friction it in for many developers where the immediate results of a REPL loop allow much more focused investigation into the problem being solved. If use LINQPad to develop C# code, you might see how this faster feedback can be used to shape code more quickly and narrow in on a better solution faster.
Any reason why the API blatantly ignores even the vaguest hints of the MS style guidelines on all counts? This library looks like it was written by someone who isn't at all familiar with C#. EDIT: I didn't realize how big a paradigmatic departure this code is from typical C#, so I was unduly harsh. I apologize.
I'll have to check out posh-git. Anything in particular you didn't like about Github for Windows?
That would be interesting. Lemme know what you find, eh? 
Thanks for the input. When I get to that point, I will make sure and compare with Posh-Git. May be back to ask more questions, too. As you may have noticed, the articles so far are aimed at . . . newer users. 
For me the best part of that REPL environment is that it is very quick to run simple (and complex) C# statements, which dramatically increase my ability to understand (and learn) the APIs. Note that the O2 REPL environment is actually a full development environment where it is possible to import DLLs or other C# files and consume them immediately. I am the author of that Tool and I write the O2 Platform in O2 :) For example if you look at the MarkdownSharp code sample on [O2 in OSx - Running TextBased C# REPL tool](http://diniscruz.blogspot.co.uk/2012/09/o2-in-osx-running-textbased-c-repl-tool.html) , you will see that the script contains a reference to an external dll (and the required using statements)
It is actually a massive change, these days I find the VisualStudio Code+Compile+Execute soooooooo slow and inefficient. The O2 REPL environment has automatic compilation and it is super fast (even on large scripts) I've published the main Dlls as separate NuGet pages that you can see at https://nuget.org/packages?q=FluentSharp . For example you can get a REPL script for any object on your project by using the [FluentSharp.REPL](https://nuget.org/packages/FluentSharp.REPL) NuGet package and calling the Extension method {your live object}.script_Me(); There is actually a lot of similarities with LinqPad. I wrote this post which expands of the differences between both tools: [How does O2 compare with LinqPAD](http://diniscruz.blogspot.co.uk/2012/08/how-does-o2-compare-with-linqpad.html) 
That was actually done by design (I'm the author of that API). The lower case methods are ExtensionMethods and they are designed to create a [fluent API](http://en.wikipedia.org/wiki/Fluent_interface). If you have used jQuery you will find a lot of similarities between the APIs. The core idea is to create an API that is as simple to use as possible, so for example if you want to create new new WinForms Form, you can just do "My Form".popupWindow(); if then you want to add a TextArea to that form you do: "My Form".popupWindow().add_TextArea(); and if you want to show the file contents you can do "My Form".popupWindow().add_TextArea().set_Text(@"{path to your file}".fileContents() );
ODAC. Just make sure you install the right bitness to match your OS. 
Thank you! It really helped.
Huh? I did a google search for "c# oracle connection". There are at least a handful of good links within the first 10 hits. What did you search on and what was unclear about it?
I did "asp.net oracle", but "c# oracle" would have worked. This guy's reach exceeds his grasp. He may need to look at his fundamentals: data connectivity, from there he'll need to hit ADO.Net and then Entity Framework. From there he'll be able to tackle oracle from a .NET perspective I hope he has a great senior to help him through oracle. 
I hate the expression "Google fu". Although, it's a great shorthand if you understand the underlying skill. We solve problems. The only way to solve a problem is to know what you are trying to solve. The only way to figure out what you are trying to solve is to ask questions. Knowing what questions to ask is fundamental to solving the problem at hand. How can we solve other people's problems if we can't solve our own?
Agreed. Also, I think you meant "ado.net oracle" but I got the gist of it. 
He wouldn't know ado.net. He'd have to get to that after researching data connectivity. I'm not sure he knows asp.net.
I'm a application security analyst and have been using much of the functionality exposed through the FluentSharp API, in a previous incarnation known as the O2 Platform https://github.com/o2platform. I find the functionality of O2 to be absolutely the most powerful tool in my arsenal, allowing integration and customization of technologies at a rate that could only be imagined a couple of years ago. A criticism of not following MS conventions (or programming and security conventions in general) in the development of an API that obliterates many long standing programming and security paradigms seems somewhat misguided. For example, 'consuming' libraries directly passes beyond the intended inherent semantics of private or protected classes, directly injecting the O2 REPL into any running process illustrates a whole new category of software weaknesses and seriously disrupts the current notion of application security, and allowing real time coding of an application within an application is an exponential gain over any software development process I have ever witnessed. If you knew your history then you would know where you're coming from... And if you knew Dinis, the irony of questioning why his code doesn't follow conventions would be much more apparent as would the total absurdity of your childish remarks on his familiarity with the subject matter. --- sp1r0 
The book is available on MSDN http://msdn.microsoft.com/en-us/library/hh314518.aspx
Next in a series. As noted by a commentor on a previous post, this whole thing might have been better set up with an initial post related to "What is Version Control, and Why Do I Care." Excellent feedback, and that is a post I plan to write soon. The whole series is aimed at relative beginners, or folks (like myself) who half 1/2 or 3/4 of a clue, but no previous exposure to version control. Working by myself, learning programming evenings and weekends, I have had to figure stuff out through trial and error and/or scouring the internet. Hopefully, these articles might save someone else in my position some time. Comments and corrections actively sought. If you are going to down vote, please take a minute and let me know what you didn't like (especially if I got something wrong!). Also, feedback about git/version control "etiquette" when jumping in on an OSS project for your first time, or working on a team in general would be helpful for an upcoming post. 
I would recommend going through some of the challenges on /r/dailyprogrammer and/or /r/programmingchallenges and build them using winforms, and where applicable, using LINQ as well. This will give you a massive list of tasks and you can pick the ones which are most relevant to what you want to learn.
This is EXACTLY what I was hoping for, I have trouble finding a launch point when trying to teach myself.
Glad I could help, enjoy the challenges!
Yes but I'll need to filter some options down. What stage are you at? Do you know basic SQL? Do you know how to insert data into a database? Tell me as much as you know/what you have learnt about databases using C#
I am pretty knowledgeable in SQL, I am comfortable in saying, I know SQL well enough to do anything they would need me to do with it. Using C#, most of the projects I've done involved taking parameters, connecting to the DB, and pulling/insert/deleting data, and displaying the results, if any results were needed. I am a little fuzzy on joins.
C# in depth is a nice book with good examples
I'll begin going through this material, I appreciate you taking the time to help me out! You will probably have messages from me soon. I'm sure I'll get confused somewhere.
Happy I can help, I'll do my best to respond quickly!
Me too, there was a point of O2's development where I almost completely dropped C# for Python (because I really wanted that type of fast coding and refactoring). But then just in time, .NET 3.5 was released with in-line Lambda methods and Extension Methods, and I was able to create the environment/language that I wanted using C# and O2's REPL. In way I think I have come up with almost a new language/framework, which I usually refer to a kinda-strongly-typed-real-time-managed-version-of-Python :)
Use a dictionary e.g. Dictionary&lt;string,int&gt; It uses the string (song title) as the key but does not allow duplicate keys so have an exception handler and the int as the value which is the rating. Here is the code above that I ammended, I have not run it so it might have bugs but you get the gist: private static void Main(string[] args) { Dictionary&lt;string,int&gt; songs = Dictionary&lt;string,int&gt; try { using (StreamReader sr = new StreamReader("Songs.txt")) { while (!sr.EndOfStream) { String line = sr.ReadLine(); if (line != null) songs.Add( line.Split(':')[0], int.Parse(line.Split(':')[1]) ); } } } catch (Exception e) { Console.WriteLine("The file could not be read:"); Console.WriteLine(e.Message); } Console.WriteLine("Unsorted"); foreach (var song in songs) { Console.WriteLine("Title: " + song.Title + " Rating: " + song.Rating); } if (songs.Count &gt; 0) { songs.Sort((c1, c2) =&gt; c2.Rating.CompareTo(c1.Rating)); } Console.WriteLine("Sorted"); foreach (var song in songs) { Console.WriteLine("Title: " + song.Title + " Rating: " + song.Rating); } Console.ReadLine(); } Also I would add a try/catch within the while loop so that if it fails to parse a line e.g.. duplicate dictionary key then it just continues to the next. Edit - A tuple would work here if there was more than just the name and rating you needed. E.g. Tuple&lt;string,string,int&gt; where Tuple.Item1 is name, Item2 is artist and Item3 is rating. A nice easy way of returning multiple objects from a single method aswell!
LINQPad. http://www.linqpad.net/ I cannot recomment this utility enough and I'm surprised no one's mentioned it here yet. It was invaluable to my LINQ learning efforts. It's a code scratch pad with a "dump" window so you can view the results of code instantly without having to code your own display functions. It's great to change something in the LINQ Query and to be able to immediately see how the change you made affects the outcome. Others have posted some pretty good resources, and LINQPad comes with its own little tutorial section as well.
Pretty cool. Reminds me of the guy who wrote an executable (16-bit) in mspaint. A note to those that want to use the BMPEncoder class, you need to open the Project properties -&gt; Build -&gt; Allow unsafe code. 
&gt; I am a little fuzzy on joins. Yet... &gt; I am pretty knowledgeable in SQL, I am comfortable in saying, I know SQL well enough to do anything they would need me to do with it. How is this possible? Not meant to offend, but what kind of SQL do you do where you can be comfortable with the language but fuzzy on joins? However, I heavily recommend learning LINQ as a means to C# development. You can get some real value out of it and see why old languages like SAS and SQL (when it comes to manipulating data) show faults over time. And you can practice the join function! :D
I understand join functions, but we didn't use it very often during college, which I don't really understand, but we didn't. In this case, fuzzy = haven't used it as much as I should have, but I have used it. &gt;However, I heavily recommend learning LINQ as a means to C# development. You can get some real value out of it and see why old languages like SAS and SQL (when it comes to manipulating data) show faults over time. And you can practice the join function! :D This is my primary goal for learning linq. This just helps concrete my thought process, that learning linq will make my C# abilities more elastic.
Yeah, am new to programming. I started coding not too long ago. I have a project that I have to finish by the end of the year, and I have not used oracle before. I know VB.net and MS SQL. I recently started C#, which I want to use for the project. I want to develop an app on a PDA. Am just thinking of want to use that was why I asked this question.
I have a project that I have to complete by the end of the year. I am suppose to develop a database application on a FLEX7000 (Wireless) - Finger. I am am kind of confused as to which language I should use. Basically I am thinking of CSharp but most of my team members think Java will be the best.
I almost posted this. SQL IS joins.
IMHO you're being fed a line of bullshit. LINQ is for querying enumerable collections, regardless of their origin, there is LINQtoXML, LINQtoSQL, LINQtoEntities, LINQtoDataset and all importantly LINGtoOjects, in other words IEnumerable&lt;T&gt;. At their base they are all abstractions of the IEnumerable class. Entity FrameWork is good, I wouldn’t touch it on a project with a Framework less than 4, that’s my opinion. I also wouldn’t use in a Agile Dev environment where changes to existing database schemas happen regularly. My 2 cents 
&gt; I understand join functions, but we didn't use it very often during college, which I don't really understand, but we didn't. There are many things I love about University, but them attempting to teach databases I don't think will ever be a worth while cause :P. &gt; This is my primary goal for learning linq. This just helps concrete my thought process, that learning linq will make my C# abilities more elastic. Excellent! If you need any help let me know. I'll just say I'm quite the fan and user of linq for collections (not linq-to-sql).
You can't go wrong with Python or C#. The most important thing about learning either (or possibly any language!) is: START WRITING. Just keep doing it. Try everything. Make absolutely trivial things if you can't think of anything "productive"; who cares, the mere act of doing so IS productive, just in a different sense. I just love C#. The ONLY drawback is the somewhat limited portability, though Mono is actually pretty good these days for using C# on OS X or Linux. Even on mobile devices. I use MonoDroid (Mono for Android), and have considered buying a licence for MonoTouch too... when I get an iDevice perhaps. The way I learned is downloading source code, and then working out how it operated in a reverse-engineering sense. Using the Object Browser and Intellisense in Visual Studio clears up most difficulties (what does each parameter actually do? etc), and for when that fails, look at the MSDN library online. On that note, the MSDN library is an excellent resource. You could learn C# from just that! I have been coding in C# for 5 years now, and have become pretty good at it. Persevere :) !
I'm working with ASP.NET MVC 4 currently, and although it takes a little while to get going, I see whole experience as incredibly pleasant and, using my previous C# knowledge, incredibly simple to implement.
http://imgur.com/K0Oe7 is a screenshot from the design with most of the stuff named to the right. The code is mostly similar with only names being different. private void hsbR_Scroll(object sender, ScrollEventArgs e) { int R = hsbR.Value; int G = hsbG.Value; int B = hsbB.Value; txtR.Text = R.ToString(); lblKleur.BackColor = Color.FromArgb(R, G, B); } private void hsbG_Scroll(object sender, ScrollEventArgs e) { int R = hsbR.Value; int G = hsbG.Value; int B = hsbB.Value; txtG.Text = G.ToString(); lblKleur.BackColor = Color.FromArgb(R, G, B); } private void hsbB_scroll(object sender, ScrollEventArgs e) { int R = hsbR.Value; int G = hsbG.Value; int B = hsbB.Value; txtB.Text = B.ToString(); lblKleur.BackColor = Color.FromArgb(R, G, B); } I've tried a breakpoint but can't see anything in the output. 
Might be a stupid question, but is it definitely hooked up as an event handler? If you select a one of your scrollbars and click the lightning flash in the properties window, is one of your methods in the right box? The syntax of your method signatures looks consistent with what I'd expect, but double checking never hurts.
It's the first thing I look for when something event driven isn't working. I fell into the trap all too often when I started, so I've learned my lesson.
easy way is a sql express database file, you can create a connection to one without the need of having the server up and running, after you get used to the environment try code first or dapper for easy access but sql express will get you started. 
The database methodology used with C# is quite a bit different than with PHP. C# does the connection management internally. You simply create an instance of the database handle within a 'using' statement and you're ready to go as opposed to the need to either pass the handle around or create a singleton as you would need to in PHP.
Redis and servicestack or SQL server express with linq-to-sql
JSON might be a nicer alternative to XML, depending on the complexity required. I've found parsing XML can be cumbersome if it's only simple data that needs to be stored. There are some very good libraries out there for serializing/deserializing JSON (e.g. gson, newtonsoft etc.)
One very nice thing about this method is that there's nothing to install.
I don't think that is true. They are each useful in different circumstance. For simple projects Linq-to-SQL is fantastic. 
xpath is there for parsing xml easily...
Why on earth is SqlLite the top voted comment when the problem statement is "store a small amount of data - one table"!? XMLSerializer is the answer.
[Here](http://stackoverflow.com/questions/5073925/problem-storing-a-list-of-objects-in-isolated-storage)(IsoStoreHelper) is a great class for storing serialized lists in Isolated Storage. This is probably the simplest way to store data. If you're looking for something with a bit more relational structure, check out Entity Framework and [SQLLite](http://www.codeproject.com/Articles/236918/Using-SQLite-embedded-database-with-entity-framewo). Either way, you are going to want to start learning LINQ for data manipulation.
Why not just use a text file? 
I'd suggest just using XMLSerializer (opt-out) or DataContractSerializer (opt-in) so you can focus on C# and not the data layer... 
FWIW, several of our clients have bought Telerik's products in the past only to drop them because they are absolutely awful. 
For a single developer, isn't JustCode $50 more expensive? With that, I don't know why you'd go away from resharper. Change is scary. Go with what you know. I _like_ JustCode (and currently can't program without it), but people who use resharper freaking love that thing. If I didn't already have JustCode I'd easily be able to talk myself into buying Resharper. Edit, much later: I remember I tried resharper for the month trial about a year ago, and the crap it did amazed me. Finding duplicate code, converting to LINQ, finding code that iterated an enumator more than once - all this stuff isn't done in JustCode. This is just the stuff that I remember. I say don't branch out here :)
i7 2600 @ 3.4GHz, 16gigs RAM, SSD... I would have figured my computer was good enough as well.
Huh. How big are the projects you work on? Maybe that's it. I kind of get the feeling they load EVERYTHING into RAM all the time, because it did double the memory VS was using. My current project is smaller, at least compared to other projects I've done. Only 3 developers. If I knew how to do a line or class count I'd give you that. I'm running i7 @1.73 Ghz, 8GB RAM, so, actually not that great of a computer anymore.
The main one I work on is 42 projects with close to 42k LOC. I got the LOC with this little util [from microsoft](http://archive.msdn.microsoft.com/LOCCounter/Release/ProjectReleases.aspx?ReleaseId=115). When the results display, click on languages to get a better feel.
I don't have experience with it, because I love Code Rush
JustCode was *just awful* the last time I checked. Their first version shouldn't have even been released; it was a waste of my time because it had nothing redeeming in it. It had nothing that R# didn't offer. I tried a subsequent version and was let down again. We're pretty let down by their MVC Extensions as well. Telerik routinely tries to be the first to market and get managers to buy their stuff (by showing a lot of flash) and hoping managers won't realize that the app might end up a maintenance nightmare because the Telerik APIs are so poorly made and don't customize well. JustDecompile is a great product, somehow. And its free. I can only imagine its made by some hippy sect of Telerik.
I get along just fine with Visual Studio the way it is.
Interested to hear what others may think about this concept from a design standpoint (the author is using this for a relatively small and flat app).
I might take a lot of flack for this but I'd actually tend toward leaving the query right in the controller for now. Lately I've been working on mostly small and medium projects and if you try putting each query in a class for reuse you end up with hundreds of awkwardly named, tiny classes that are tough to find or see the use for at a glance. I'm not suggesting copying and pasting if you need the same functionality later. Why not just refactor later (to his version with a separate class) if you end up needing to display the same results in a winforms project, separate web application, etc etc? Prematurely doing this seems like premature optimization. As for IoC.. Raven is a perfect candidate for not using this because you can execute all of your tests in memory easily. You can write a very thorough test with no cleanup (and they'll still be fast). Most NoSQL people seem to not care that their test uses a real db because they startup fast and they read/write fast enough that mocks seem unnecessary. Use IoC on things that *really* require it like the file system or the HttpContext. Edit : And after checking, this is exactly what they do. http://stackoverflow.com/questions/10421700/asp-net-mvc-ravendb-and-unit-testing 
One other thing that might be helpful to mention is that you should have a separate dll where those helpers can live in the event that you *do* need to use them in a separate project. So you should probably keep your repository (Entity Framework, if applicable) in a separate dll and not in the actual web project (so your data access is portable). This actually only applies to entity framework and not most NoSQL clients I've seen. Basically, keep that generated ObjectContext/entity code in a separate DLL from your web project.
Are the lines EXACTLY horizontal or vertical? Are you looking for one specific colour or all colours? Help us out here, you'll get a lot more responses.
I will be converting a floor map of a house into 3d so the lines should be straight. As for colors, i doubt there will be anything but black.
What it results in essentially a 2D array with true / false for each pixel in the image so you can make whatever inferences necessary on length from there and the position in the array will map to the the same pixel in the image.
Since we know this is a blue print of sorts I would recommend the following. One, mark every pixel as either open space or untraversed wall. You search through the pixels looking for untraversed wall pixels. Once you find one you now need to determine whether it is vertical or horizontal. To do that you want to sample pixels in the area. If there are no ut (untraversed) wall pixels to the left or right, but there are ut wall pixels above or below then you know the orientation. You then keep following those pixels in both directions until you run out of ut wall pixels. Record the bounds of the wall and mark all the the ut wall pixels as traversed wall pixels. Continue this until you have no more ut wall pixels.
Vectorization of a blueprint image properly will involve more than a simple edge detection algorithm. You'll have to deal with image noise, unconnected lines, weird line intersections / rounded corners that may throw off your vectorization algorithm, text written on the blueprint, etc. So usually you have to cleanup the image first, then skeletonize it, then vectorize it, then fix up your vectorization. Doing a search, there are dozens of papers on this. Look at something like [this](http://www.google.ca/url?sa=t&amp;rct=j&amp;q=vectorize%20image%20algorithm&amp;source=web&amp;cd=5&amp;ved=0CDcQFjAE&amp;url=http%3A%2F%2Fciteseerx.ist.psu.edu%2Fviewdoc%2Fdownload%3Fdoi%3D10.1.1.105.4981%26rep%3Drep1%26type%3Dpdf&amp;ei=yHJ0UICeE4-NigL2lYCgAg&amp;usg=AFQjCNFAwrJaoPND06BrwlvPQ3-xQtppeA), for something that is almost exactly like what you're doing. I'm sure openCV or some other library already has a bunch of the necessary algorithms written - e.g. OpenCV's findContours(). Why re-invent the wheel and try to write some simplified line-following algorithm that won't work with a real scanned image?
You want a [Hough Transform](http://en.wikipedia.org/wiki/Hough_transform). Edit: Sorry didn't see that TJSomething had already suggested this. I will add that if you are on an intel platform and can code a little managed C++ that [Intel integrated performance primitives](http://software.intel.com/en-us/articles/intel-integrated-performance-primitives-documentation/) have very fast implementations for this sort of thing.
I built an EF based Repo with Ninject IOC. Then I completely ripped out the Repository class because of leaky abstractions. If you need to abstract your data access, make a service layer (but prepare to type a lot more)
I second this. I used Emgu CV to perform edge detection in a video stream using a modification on the Canny edge detection algorithm, and it worked very well.
&gt; Vectorization Exactly. If this is the end goal, then a bitmap-to-vector library might be a viable approach. 
It is C# ... The UI uses different classes, that is all. I've ported over a decent amount of code from a Windows project into Android using their SDK. The approach their SDKs use is to have a presentation layer for every platform you want to support while you stuff your data and logic into a common set of code.
Interesting. That makes sense, they basically wrote a JIT for each platform. I thought some wizardry was being done to convert the C# into either Java or Objective C!
Has anyone messed with http://xamarin.com/ ?
Ive looked into it. But in general, its the same as the "VB.NET or C#" question. The thing is, you're just not going to get the same amount of support with it, that you get by staying inside of Google's API space. May as well jump in and learn the standard. Incidentally, these C# setups typically make you learn the APIs anyway, just in a C#-ish manner. You wont be using the familiar Windows.Forms namespace, and you will still be learning how to invoke activities. Its a nice idea, but if you want to write for the platform, best advice is to stick with the Eclipse/Java toolchain. Says a random guy on the Internet :) Now what WOULD be nice, is to be able to develop for Android using Visual Studio.
You can do that by using C or C++ for the back end as all three platforms support native code as well. (WP7.x does not, but who cares, WP8 is out in 2 weeks)
I guess the bigger question is, should Google have gone with the Microsoft's Common Language Runtime VM instead of Java? Yes it would have entailed using Microsoft's stuff (horror!), but at least they wouldn't have gotten sued by Oracle.
You can (develop with VS), with MonoDroid (says me, who does exactly this)
So all AAA game developers are weirdos?! 
This was a short, very basic one-off which began life as my answer to a question on stack overflow. Not cuting edge by any means, but possibly helpful to beginners, or those tasked with employing the Datagridview control within a Winforms application. 
I couldn't get past the price point. I've been wanting to experiment with it, but I just can't swallow the 400$ for a "hobby" license. I think my time would be better spent in Java (unless I wanted to write a cross-platform app).
yes.
What flavor of entity framework are you using? Model first, code first, or database first? I can speak to code first personally, but have little experience with the other two. Also what version are you using? I have used entity framework for a couple of years now and I share your frustrations, EF has changed rapidly over the past few versions and finding information about what you want to do in the most recent versions is often difficult. That said the [official microsoft site](http://www.asp.net/entity-framework) is a decent staring point, as well as some of the microsoft bloggers Scott Hanselman, Scott Guthrie, etc. 
Well, I've always been trying to work something out from ground up, so I'd use model first and latest of what was available. I find MSDN site difficult as beginner resource.
I generally find the asp.net (the one I linked) site more accessible than MSDN, unfortunately for you I think they (asp.net) are mostly pimping code first these days. 
I wouldn't mind code first, but i like to concentrate on just framework without anything web related at this time, sorta getting the concepts right.
While the examples all involve the web it isn't necessary. You can use all flavors of entity framework with any part of the .NET framework. 
interesting - upvote for you. Ill look into this.
linq to xml is better imo
Completely agree. For me, when I find myself typing a Cast statement, I most often find it's time a re-evaluate something about my design and/or class structure. The Event Sourcing standard in .net generally (and C# specifically) poses challenges in this regard, but is can easily be overcome, if necessary, by defying convention and creating your own delegate structure. Does anyone have additional info on the original thinking behind the Hendlername(object sender, EventArgs e) convention? For the most part, I do my best to make the required properties necessary to properly handle an event available within the e argument by deriving from the EventArgs base. Again, it always feels like, if I need to perform that cast on sender to a specific type, quite possibly I need to re-examine my design. 
Thanks! I'm hoping to do something that is more native to .NET if possible. Also, for the project I'm working on open source would not be preferable.
That looks great, but I'm looking for something a little more practical for a single project basis.
That shouldn't be too difficult, using .NET's WebRequest to pull that external page in and then some library to parse it. This is an example of exactly how to do that with an HTML table on the client-side with JavaScript: http://encosia.com/use-jquery-to-extract-data-from-html-lists-and-tables/ I haven't tried it myself yet, but [CsQuery](https://github.com/jamietre/CsQuery) is an interesting project that might let you apply exactly the same approach on the server-side in your C# code.
Yeah, I have a WebRequest setup, but the problem is that the table on the page I'm requesting from is generated by javascript, so it doesn't exist in the HTML read by WebRequest.
That's definitely harder to deal with. Can you get at what the remote page is using to build that table? Is it using JSON data embedded in the page or a service endpoint that you could [proxy through to your own client-side code](http://encosia.com/use-asp-nets-httphandler-to-bridge-the-cross-domain-gap/)?
It looks like it's embedded in the page.
You should be able to use WebRequest to pull that JSON string out, using a RegEx or something like CsQuery. Then use Json.NET or JavaScriptSerializer to parse that into a collection of C# objects that you can feed the ASP.NET Charting controls.
I have been using VB for Android, and love it, its easy to learn and has a good design interface that it seems Mono is missing. So far I have made about 7 apps and 5 in the market 
oh ok!! thank you.
Thank you. I will go through the link.
I must be really bored. You're making your homework harder than it has to be. Simply accumulate the price and counter for items. Then at the end print everything out including a discount. Use .ToString("C") to format items as currency. double price = 0, total = 0, count = 0; while (price != -1) { Console.WriteLine("Please enter item purchased price (Enter -1 to quit): "); price = double.Parse(Console.ReadLine()); if (price != -1) { count++; total += price; } } Console.WriteLine("Items purcahsed: " + count); Console.WriteLine("Total price is: " + total.ToString("C")); Console.WriteLine("Average price is: " + (total / count).ToString("C")); if (count &gt; 20) Console.WriteLine("Discounted price is: " + (total * 0.9).ToString("C")); Console.ReadLine();
Not in the mood for bugchecking right now, but here's a few pointers for future reference: 1. Put your code somewhere more readable, like just about any pastebin service out there. [Gist](https://gist.github.com/) is one I really like. 2. Describe what it does. Not in an algorithm - although that's helpful too - but summarily, so it's easy to get into the context for us. 2. Provide expected output for one or more given inputs. 3. Provide actual output, possibly pointing out why it doesn't match the expectations.
Don't ever use floating point numbers to store financial values. Use the decimal type. And your items purchased should be an integer unless you legitimately want to allow fractional item purchases.
I don't think so, actually. Very good point.
You're awesome. 
The destination is a few nodes down from the root node (xDoc). The original code is trying to insert into the root node after a node that doesn't exist at that level. Once you go down into the right level the node you're looking for exists in that node. I'm horrible at explaining this, but essentially each node is it's own separate object with it's own collection of independent objects(nodes).
can I make a case for using a case statement? 
I'm pretty sure you have to update everything in your solution in one go. Make a backup of the whole thing first of course.
Yes, you're using XmlDocument. I wrote helper functions so that I could add/remove nodes without the vast amounts of pain that the standard API likes to heap upon you for such reckless behavior. Thanks for dredging up some nightmares!
Zing. I feel like the programming/tech-related /r/'s have a shitty sense of humor. I for one appreciate being proven wrong. Keep up the good work.
Thank you very much for your reply. I have been reading about the new async/wait and can replace some of my clumsy asynchronous code with the backgroundworker thingies. I am looking forward to it. Feeling excited about programming again. Been in such a slump in the last couple years. Nice to be learning new things too.
Are you asking us to do your homework for you? If you have a specific question about something you're not understanding most people will be happy to help. If you want someone to do your homework for you so you can avoid learning I suggest RentACoder or something similar. Is there anything in particular you're having problems with?
Use pastebin. I'm not going to help you, but for everyone else's sake, put some effort into this.
The variables themselves are unassigend. The letters A-F are just the name of the variables. They contain nothing. You have to initialize them like this: char A = 'A'; char b = 'B'; etc. Rember to use single qoutes. Double quotes represent the string datatype, not the char. Or use double qoutes and make the datatype string instead of char.
untested, but you could try something like this... var myGradesList = new List&lt;double&gt; { 70, 80, 30, 60, 60 }; var letterGradesList = new List&lt;char&gt;(); for (int i = 0; i &lt; myGradesList.Count; i++) { letterGradesList.Add(myGradesList[i] &gt;= 90 ? 'A' : myGradesList[i] &gt;= 80 ? 'B' : myGradesList[i] &gt;= 70 ? 'C' : myGradesList[i] &gt;= 60 ? 'D' : 'F'); }
You use upper-case some places lower-case others. 'A' and 'a' actually have different values. One tip - avoid "magic values". In a lot of places, you use 5 instead of something like studentList.Length when dealing with studentList or gradesList.Length. If the length of the array changes, you'll have to make a bunch of edits. Another tip - rather than use one big 'ole array for the grades, why not have a two-dimensional array? You can avoid that big if-else you have towards the end and just have it be a simple array operation... ... double[][] gradesList = new double[5][5] { {100,90,85,95,100}, //Jesse grades for "COMP100","CIS115","ENG114","MATH114","BIS115" {80,85,90,95,100}, //Ashley grades for "COMP100","CIS115","ENG114","MATH114","BIS115" {70,75,85,90,85}, //Lily grades for "COMP100","CIS115","ENG114","MATH114","BIS115" {70,90,90,100,80}, //Emily grades for "COMP100","CIS115","ENG114","MATH114","BIS115" {75,85,60,80,85} //Isaac grades for "COMP100","CIS115","ENG114","MATH114","BIS115" }; ... myGradesList = gradesList[number]; ...
Take the parameter out of the LoadContent method. The Game.LoadContent that you are overriding doesn't accept a GameTime object.
Thank you for being so helpful! Since you have had a look at my code, what do you think of it? Have you noticed any bad programming practices that I could change or just bad bits of code? 
It looks quite solid, just had a little question mark at lines 73-76: if (Ship.Position.Y &lt; (graphics.GraphicsDevice.Viewport.Height - Ship.ShipImage.Height)) Unless I am missing something here, I would run the Ship.Update() in every Game1.Update regardless, and move that "ship is not outside one particular edge of the screen"-check to inside the Ships own update logic.
what seems to be your problem? A little elaboration would help :)
You're going to have to store something that maps back to the username (if there is one) or password so you can track it to know when to invalidate it. One option would be to put it in a table with a created date, which you periodically check and delete the expired ones from the table. There's lots of ways to solve this but you'll need to keep track of when you created each password in some manner. Unless you're using a particularly feeble database, I would not be worried about the load for a class assignment.
That would require storing the password! That's horrible. Store the hash and a salt. 
Thanks for the replies guys! Sorry for not providing enough details, here's how I think my code's gonna be working I have a method that generates a String variable, and a method that sends the email. Once a button (Request OTP) on the page is clicked, those 2 methods will be triggered. It looks like protected string GenerateOTP (){ String possibleChar = "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789"; //String of all possible characters for OTP String OTP = ""; //Declare OTP to be empty, need to return to function String currentLetter; //Declare the CURRENT letter of the loop now Random randomNumb = new Random(); //Random is a class, you need to declare the class before using for (int i = 1; i &lt; 9; i++) { currentLetter = ""; //Clears the current letter when the loop starts int anyhowNum = randomNumb.Next(1, 62); //There are 26 lower case alphabets, 26 upper case alphabets, 10 numbers, total 62. This will generate a number between 1 and 62. currentLetter = possibleChar.Substring( anyhowNum , 1); //Example, anyhowNum = 30, the currentLetter = possibleChar.Substring(30,1), take out 1 character from the 30th position and put it here. OTP += currentLetter; // Adds the current letter to this string. anyhowNum = 0; //Reset the anyhowNum so that it can be re-used. } //Response.Write(OTP); return OTP; //Because this is inside a function, we need to return a string, protected string ... ... We will be returning this string. } Now I was wondering since I have this OTP generated, can I just 'reset' this string to another value like 12345678 after a set time (5 minutes) ?
It looks like [Algorithmia](http://algorithmia.codeplex.com/) has directed graphs. You might also check out [QuickGraph](http://quickgraph.codeplex.com/).
+1 for QuickGraph.
I have "this.hide();" and "else" underlined. I am trying to create a login form which will give a message when password and username are not entered correctly.
Is it because you have a semicolon before the body of your ifs? if (Console.ReadLine("Male")); &lt;--- Or it could be that you forgot your if after the else (since you're checking for a condition). else if &lt;--- (Console.Re But probably it's because you should only be doing one readline (into a variable) and then checking that to see if it's male or female. Console.WriteLine("Enter your gender:"); var input = Console.ReadLine(); if (input == "Male") { Console.WriteLine("So, you're a male..."); } else if (input == "Female") { Console.WriteLine("So, you're a female..."); }
I would do this almost exactly the same except for a small change: Console.WriteLine("Enter your gender:"); string input = Console.ReadLine(); string gender; if (input =="Male") gender = "male"; else gender = "female"; Console.WriteLine("So, you're a {0}...", gender); Edit: or to cover no gender as well...: Console.WriteLine("Enter your gender:"); string input = Console.ReadLine(); string gender = "neuter"; if (input =="Male") gender = "male"; else if (input == "Female") gender = "female"; Console.WriteLine("So, you're a {0}...", gender);
I tried removing the semicolon and it still didn't work. I tried defining a string, and I did like this: static string gender = ""; Then I wrote: if (gender.Equals("Male")) { Console.WriteLine("So you are a male then... Welcome."); } else if (gender.Equals("Female")) { Console.WriteLine("So you are a female then... Welcome."); } And it still gave me an error. What am I doing wrong?
Obligatory: Dice is the plural. It's one "die", two "dice". :)
What error is it giving you?
Try putting a Console.ReadLine() or Console.ReadKey() after the end if the if statement so that it looks something like this: if (gender.Equals("Male")) { Console.WriteLine("So you are a male then... Welcome."); } else if (gender.Equals("Female")) { Console.WriteLine("So you are a female then... Welcome."); } Console.ReadLine(); //Console.ReadKey() could also be used in place of ReadLine().
Thanks. I tried that out, but it didn't return me a message. :/
Before your if you need to do a readline into the string you defined. gender = Console.ReadLine(); if (gender.Equals(...
I wrote this and ran it, and it works: class Program { static string gender = ""; static void Main( string[] args ) { Console.WriteLine( "What is your gender?" ); gender = Console.ReadLine(); if ( gender.Equals( "Male" ) ) { Console.WriteLine( "You're male." ); } else if ( gender.Equals( "Female" ) ) { Console.WriteLine( "You're female." ); } Console.ReadLine(); } }
I actually managed to fix it by simply typic static infront of it, and it no longer showed any error. Thanks a lot! :) Now I need to figure out how the player will roll the die...
will have a look, thanks for the help. 
You seem to be on the right track but here are a couple of suggestions. Is this a single threaded application? If so just use a [Dictionary](http://msdn.microsoft.com/en-us/library/xfhwa508.aspx) object as your cache. The dictionary will start to use lots memory if you put more then a million or so entries in it. If you are in a multithreaded non ASP environment and are using the 4.0 framework or higher use the [MemoryCache](http://msdn.microsoft.com/en-us/library/system.runtime.caching.memorycache.aspx) object. This will take care of of a lot of the locking and memory management for you. This object will start to use lots memory if you put more then a million or so entries in it but is smart enough to start throwing away stuff if it detects you are running out of memory. 
In your first example why not just set the gender to "male" then string gender = "male"; if(gender =="Female") gender = "female"; I know its nitpicky, but you can kill the if/else 
TIL, it's one die, not one dice.
I'm not sure I understand what you're asking. Are you saying that given some folder, for example "C:/Repo", you want it to go into every subdirectory 3 levels deep and create a drawings folder with 2 subdirectories inside of it? So in the example, it finds "C:/Repo/Master Data/Company x/Job 1" and creates the folder "Drawings", and then creates inside Drawings "SubDir1" and "SubDir2"?
That's Correct. I have tried with a simple batch script with no luck. 
For your example, this function should do the trick: void CreateFolders(string path, int level) { if (level &gt; 0) { foreach (string dir in System.IO.Directory.GetDirectories(path)) CreateFolders(dir, level - 1); return; } System.IO.Directory.CreateDirectory(path + "/Drawings"); System.IO.Directory.CreateDirectory(path + "/Drawings/SubDir1"); System.IO.Directory.CreateDirectory(path + "/Drawings/SubDir2"); } You would then call it with: CreateFolders(@"C:\Repo", 3); If you're curious how this works, it's recursively searches through directories until you get to 3 levels deep. At that point, it creates the folders you wanted. This is just an example for a script with no error checking or anything. If you wanted to make a real program to do this instead of a one time script, you'll probably want to add that.
C# has this for value types? You mean nullable value types? That's not what the article is about at all. It's about null __object references__. Wrapping the reference forces you to remember to check it. It's not bullet proof, as the article states. You could still blindly use the reference. But it is infinitely more explicit in its purpose.
What exactly makes you think it's a good idea to put everything in a wrapper? And how would the wrapper know if it is null, if you don't? Did you even look at the code? The idea is to use this for the return value, so that your API requires users to always unwrap your references. While TryParse is nice (maybe a bit unwieldy), the code for wrapping/unwrapping is a lot more succinct, it doesn't travel over language barriers. You can't use it in a web service for example.
I don't see any advantage to this approach as you have it coded here other than as a syntactical marker to the implementer that the method might not succeed. Generally I only return null if the result is really null. If it's a real error condition, throw an exception and handle it appropriately. If null is a legitimate result, the caller should be dealing with that possibility. Returning null for an error condition can be (but isn't necessarily, depending on architecture) a symptom of lazy programming. The problem isn't that null was returned, it's that the error wasn't dealt with and it's your fault as the writer of the method in question that you've made it difficult for callers to detect and address the problem. Exceptions are made for this. You're just providing an alternative mechanism that doesn't offer anything exceptions don't already with the added overhead of being something else the caller has to know about. I don't know, maybe it's just me and the way I put my code together but I don't usually have a lot of trouble tracking down null reference exceptions. At least not any more than any other kind of error. Am I missing something here?
Null is sometimes the answer. When you're attached to a relational database, it might frequently be the answer. In .net, there's already the Fault classes to deal with transporting error messages in a more standards compliant way over web services. I don't think you're solving a novel problem with this approach. It's hard to see this as anything but reinventing the wheel. I'm open to being convinced otherwise, but I'm just not seeing it in what you've offered.
Claiming that it is worthless because a programmer could still make a mistake is pretty absurd. You mean it doesn't fix the existing problem, null. While C# does not have non-nullable references we need ways of __explicitly__ tagging references as unsure. Secondly, language support for pattern matching and unwrapping is already discussed in the article. It would of course be the only "real" solution. Given two options, sending a bare object reference and sending a wrapped one, the second option is infinitely better.
What happens, and what did you expect would happen?
Confusing class names... Can you post the full source and what error you're seeing (compile error, unexpected result?)
I'm sorry, but I can't find the 'public void RollTheDie()'? There's no RollTheDie method?
Worked like a charm mate, did the same with the data source, looks like I'm on track for full marks. just need to make it a bit more "OOP". i owe you a pint or ten. 
Are you sure you need additional caching for something like this? If your datasource (e.g. list of words) is processed efficiently, you could just do a simple lookup. If I've misunderstood the problem, feel free to disregard! Say you have 100,000 possible words - if a user searches for 'tac', I assume you want to return all anagrams of it which exist in your list of words, e.g. tac, cat etc.? If that's the case, the data structure you use to represent your list of words could simultaneously act as the lookup's cache. Something like this might work... (only needs to be done once, not for each lookup) (warning... pseudo-code ahead): var anagramLookup = new Dictionary&lt;string, List&lt;string&gt;&gt; foreach (var word in myListOfWords) { // Rearrange characters in alphabetical order. var anagramKey = String.Concat(word.OrderBy(c =&gt; c)) // Check your lookup for an existing key if (anagramLookup.ContainsKey(anagramKey)) { anagramLookup[anagramKey].Add(word); } else { anagramLookup.Add(anagramKey, new List&lt;string&gt;{word}); } Now your anagramLookup data structure acts as both your cache and your lookup table. If you type 'cat', you simply need to rearrange the letters in alphabetical order and return anagramLookup["act"]. 
You can try it for free on an emulator and buy it if you want to use it with a device. That said, I was working on a project where I was considering Mono for Android vs. Java (being a .NET-developer and all) and after a lot of hassle I chose Java. Even the simplest things, such as using WebClient gave me errors. Searching for solutions I found out that the error was actually a bug in Mono for Android and not in my code. I won't waste time on bugs when I can easily do it in Java like it is "supposed" to be written in. Knowing C#, the conversion to Java was painless and there are more guides/tutorials on Android development in Java than MonoTouch. That said, the bug might be fixed now, but I won't risk having to halt the development trying to find workarounds to a framework that is supposed to make development on Android easier for .NET-developers and additionally cost money to be able to ship. If I can give one advice I wish I have gotten before I started the development in Java, if you choose Java, do **not** use Eclipse. Go with IntelliJ.
Just out of interest from a total newb: is this your first programming language you learn or do you have much experience with other ones already ?
&gt;8 things you probably didn’t know about C# ... if you've never learned C#.
I can second this from experience. Particularly if you need to do anything that's slightly custom or non-standard.
&gt; i cant do: if array[i++,j] = true etc because i get an error. do you mean to do something like if array[i+1,j] == true ?
You could be getting an error because you are trying to access a row that is out of the bounds of the array. Also, i++ will increment i, I don't think that is what you want in this case. If you are trying to find out if the value in the next row of the current column is true, use this: if(i+1&lt;array.GetLength(0) &amp;&amp; array[i+1,j])
Solution: namespace first { public class second { public static void Main(string[] args) { int width = 10, height = 10; bool[,] matrix = new bool[height, width]; //make some test vertical lines matrix[3, 0] = true; matrix[4, 0] = true; matrix[5, 0] = true; matrix[1, 4] = true; matrix[2, 4] = true; matrix[3, 4] = true; matrix[4, 4] = true; for (int row = 0; row &lt; height; row++) { for (int col = 0; col &lt; width; col++) { if (matrix[row, col]) { //a line starts at row,col //look down to see how tall it is //set every cell we look at to false so we don't count it again int lineHeight = 1; while (row + lineHeight &lt; height &amp;&amp; matrix[row + lineHeight, col]) matrix[row + (lineHeight++), col] = false; Console.WriteLine("There is a line starting at {0},{1} of height {2}", row, col, lineHeight); } } } Console.ReadLine(); } } } output: There is a line starting at 1,4 of height 4 There is a line starting at 3,0 of height 3 
Are you using WPF or WinForms or something else? Do you understand the basics of *if* statements?
If you're using WinForms, something like this should work if you set this as the click event handler for your button. public void MyButton_Click(object sender, EventArgs e) { if (MyButton.Text.Length == 0) { MyButton.Text = "x"; } } 
Ah, didn't know that you can do that MyButton.**Text** works on buttons. Now I get this error though : http://i.imgur.com/ZdnNa.jpg
You have an extra closing bracket
WinForms, btw.
thank you, been a great help :D
All right, now you're just trolling.
Fair enough, I'll assume that to be the case :-)
Put a breakpoint where you do the Parse() and see what you're feeding into it. I think you'll see the problem...
You're trying to parse "1 2 3" as an int. Put the numbers on separate lines so you'll readline() them one at a time. In future just set a breakpoint or Debug.WriteLine values so you can see what's happening for clues. 
Or, go ahead and read it in as a string, and use the Split method to split it into array at the spaces. // read line from the file into variable line, then split it on spaces string[] scores = line.Split(new char [] {' '}); foreach(string score in scores) { int scoreValue = int.Parse(score); 
You could use File.ReadAllText(fileName).Split(" ").Select(x =&gt; Convert.ToInt32(x)).ToList(); To give yourself a strongly typed list of all the numbers. 
That lambda expression won't raise any eyebrows at all when they hand in their intro to programming homework. It is a nice tidy way of expressing the requirement.
Oh hell man, don't tell the CS 101 student to use RegEx's 
I'm really confused, do you have skype?
What did you end up doing?
Am I the only one confused by the "firstScores.Items.Add(textScore);" line? I don't see "firstScores" declared anywhere, and don't understand what it's for regardless. edit: just looked again, and we're only seeing the top half of the code.. so it's probably defined further down and obvious what it's for elsewhere in the file. Also, as others have pointed out: you're reading in a text file line-by-line by using ReadLine() but you have all of your scores on one line. You need to either put each score on its' own line in the text file, or split the line you read in using String.Split(), looping through that and using Int.Parse()
Two ways how to do this: A) one number per line in txt file. Then no changes would be needed in your source code (hopefully) B) string[] splittedScores = textScore.Split(' '); //split by spaces What is happening in your source is that he is trying to parse the text "12 43 100 54 ..." into one number BUT THOSE ARE ALL NUMBERS WITH SPACES SO HE HAS NO CLUE HOW TO PARSE THOSE INTO ONE NUMBER. Hope it helped. 
As it seems you got your original question answered I wanted to critique the style a little bit to help you in the future. if(result == DialogResult.OK) { } can be converted to reduce nesting into the inverse expession. if(result != DialogResult.OK) return; I am a strong believer that less nesting is cleaner to read, this may not always be the case at all the shops you work at but, it is generally good practice to keep for when the nesting is so deep you end up scrolling your widescreen monitor to read the inner code :P Keep hackin!
This is not a pattern, but is nice.
Not a design pattern but a code pattern. I don't think 'idiom' works quite right for something that isn't established...
Maybe snippet or algorithm ...
firstScores.Items is probably container for Windows Forms element.
&gt; would of used
I hate you.
Ah, yeah that would makes sense!
Everything worked? You are doing something wrong. :)
He's been working on this for a few years. More to the point, an improved API in Java still does not address the deficiencies within the standard .net implementation of Datetime functionality. 
Very cool, but not really C# related.
Hello! First of all, let me thank you for taking the time to read my code :) i honestly appreciate. The reason why I've used *var* sparingly (if ever) is that this was supposed to be the solution to a programming test I was asked to complete as a part of the selection process. Point is, albeit I was told I could accomplish the task in whatever language I wanted, I knew the company was java based. So, I thought var might confuse them. Still, I will apply both your suggestions ASAP :) thanks!
About JS and deferred loading, iframes ans such: yes, that's an issue. If this gains some steam I'll improve it to take care of that too. Thanks a lot for the offer! Unfortunately i'm not in the NY area... But if someone's listening i am looking for a job in europe, preferably Norway ;-)
Hahaha, then well done! There are actually hacks to make strongly typed implicit local variables work in Java :P with precompilation (I assume) http://projectlombok.org/features/val.html It's definitely a good display of your skills; the company in question missed out.
Bit torrent is a bad choice. 
Why is it a bad choice? And love your username :3
I enjoyed reading your code. Well done.
Sorry for the delay. What 0xffff0 said.
I did a web scraping project once, and the first build I used c# / Watin browser automation with IE(also tried old firefox), and when I rebuilt it just doing using a c# web client and keeping track of the cookie for the login(site required auth to get to the data we needed) it was able to scrape the same what used to take 2 hours in ~5min. do you run into these performance issues using a browser?
Hi! Thanks a lot, you've taught me something :) I have in fact the problem that the thread on which the Tasks are run has its stack growing a lot - I worked around that by simply increasing the thread's stack size, but that's bound to blow up sooner or later, based on usage. I'll change the fetcher to use the async methods... thanks again!
The compiler doesn't know if all possible types of T are comparable. Can you tell if one XmlReader is greater than another? You can solve this by adding some constraints to type T. public static bool BoundCheck&lt;T&gt;(T val, T low, T high) where T : IComparable&lt;T&gt;
Try not to think of .Net Generics as Templates. It will really help you. A template is just a compiler trick, it's like a macro. For every use of the Template the compiler inserts the concrete types and presto, it know it can compare them. However in .Net a generic is compiled, then applied by at runtime. This means that your code is invalid (as mentioned) because the generic type T has no equality methods, sure the type that actually gets bunged through it might, but the code written can not be compiled. This is the blessing of the generics in .Net it allows you to really get proper re-use in a strongly typed manner. I would also suggest giving ReSharper a try, its a must have for me when doing C#, it would have told you immediately that you can't compare the T's and with alt+enter would have added the constraint to fix the code.
The C# TreeView control can be customised by telling it that you'll draw the nodes. Look up TreeView and owner drawing. You should be able to get close to what you want. A few things that I have noticed is that if you draw text bold you'll need to make the selection box for the node bigger and using owner draw is much slower, noticeably when you have thousands of nodes. http://msdn.microsoft.com/en-us/library/system.windows.forms.treeview.drawnode.aspx
It's not "spam", because I posted it, and I am not the blog author, nor do I have any vested interest in the blog. I found it to be an article of interest. The question just happens to be the title of the article (I will admit I probably could have "retitled" it, but why? This IS the C# reddit, no? The article focuses rather heavily on some C# - related OOP and class design concerns. Maybe you are already completely informed on this topic, but I am betting there are those who are not. Further, the article is authored by a respected developer in the C# and .net realm. Far from "spam." Perhaps if you want nothing but to peruse Q &amp;A you might go to stack overflow instead? Because I would think there are a fair number of people here who value well-written, non-spammy content, even if it is a mere blog article. 
That said, I will add that I likely could have helped by tagging "Article" or "Eric Lippert's Blog" on the end of the title. Apologies. 
Are you using WPF or WinForms? Its very easy to do in WPF: http://www.codeproject.com/Articles/26288/Simplifying-the-WPF-TreeView-by-Using-the-ViewMode
Depends how you code it. Shouldn't be an issue if you send it in pieces. Heres what I would do: Use a freeware zipping utility to zip up the file(s) into a single archive. Read all the bytes from the file and chunk it perhaps in 50kb chunks. Possibly do a checksum on each chunk or on the whole file if its too resource intensive. Send the file chunks to the server along with the checksum(s) where it gets re-constructed into the temp zip archive. Extract and check the checksum Also make sure you put try/catches around everything where it could fail and have code to check the current progress perhaps by the count of the chunks.
Your backing up to a server right? Create a web method to recieve the data or If your just plonking files into a network share then just put the chunks into seperate files e.g. temp1.part temp2.part then when they are all over and passing the checksum test then construct the file and do a final global checksum.
I havent decided yet on if Im going to make this into a server/client model, or just have a network share like you said, but Im leaning towards s/c. One reason is I would want the server to check the file to make sure it was transferred correctly. But, baby steps first :D Gotta learn how to split the file first! :P Loving c# though, so much easier than c/c++.
What you are looking for is called "thread affinity" and yes, you can set it. See here http://msdn.microsoft.com/en-us/library/system.diagnostics.processthread.processoraffinity.aspx How well it compares to embedded systems I can't say.
Well with that i can set affinity but it doesnt allow me to exclusively use a processor for some application. Other programs might still try using the processor too. 
you will never get that with a general purpose OS that supports preemptive multiprocessing. At best you could strip down the OS by shutting down all unnecessary applications and services until the number of processes running is less than the number of cores (Windows can support up to 64 IIRC).
What do you plan on doing with the realtime threads?
C# is not the best language to use for real-time systems. The garbage collection is too unpredictable.
Is it on nuget package list? Also, how did you think of that name? :D
You can set affinity for the other processes on the system too. Maybe that will help.
This is a common misconception. I have a number of machines running real time on a C# driver which have been running in production for years now. It works great; even better now that CLR 4.0.3 adds SustainedLowLatency as a GCLatencyMode. Given the productivity and safety of C# over C++, it can be an excellent choice.
While this is true, the priority levels in Windows coupled with CPU affinity gives very close to real-time support; on the order of milliseconds. This kind of responsiveness is good enough for a lot of real-time applications.
Nuclear reactor control systems. 
Milliseconds is considered realtime?! Not sure what you work on but in the transaction processing systems I work on if things start taking longer than 100 microseconds we start getting ansy.
Of course the right answer is that it depends on the requirements of the system. A lot of real time systems have response requirements between 1ms and 100ms. Even in TP systems, only certain parts of the system have that kind of response requirements, and only within well-defined bounds for whichever system is performing the processing. You're certainly not talking over a network in under 100us. I'm fairly sure a pure C# system could be designed to operate in these parameters, making extremely parsimonious decisions about when to allocate objects and run GC. Of course in such a case a lot of the benefit of a managed runtime is lost and using a pure native solution is more attractive.
So is your organization's approach a "it continues to work in real-time, therefore good"? Or does your system have some real-time guarantees? Because it was my understanding of embedded real-time systems that they actually guaranteed real-time execution, assuming the coder followed the system's guidelines. I mean, could we send rockets to space on C#?
"Soft real time" is a term often used - simply stated, performance degrades if your program doesn't meet a certain contract, but your rocket doesn't explode or fall into the water :P It really matters what the OP is doing.
Nicely written, it was very clear. One thing you might want to add is how individuals should organize their own projects. What to use for company name, one namespace with multiple projects vs. separate namespaces, etc.
Pretty good. I would recommend less mixing of terminology in a few places. 'Types' are referred to several times as entities. A C# dev would usually think of entities as domain objects. I would just stick to calling them types. &gt;"By implementing “using” directives you can include a namespace and reference all the methods in it within it’s scope." I see what you are attempting to say, but this is not quite correct. Methods exist in the scope of the class, which may be in a namespace but the method does not exist in a namespace. For example, you could not create a method such as public void Example.Namespace.Method(). 
Would be cool and easy to implement in projects that way.
Seems pretty good to me. I didn't know about aliasing namespaces. I like that one! I think it would be useful to talk about whether inner namespaces are included along with outer one. I'm pretty sure, but not absolutely sure, that they are not. If I include System, I am not including System.IO. Or am I? 
Something I didn't figure out until much later was that you aren't actually importing the type when using the 'using' command, you are just making it easier to reference the type because you don't have to write out the namespaces. The fact that all the types are accessible whether you use a 'using' statement or not might be nice to mention.
You're both right, the reason I mix terminology is because I come from a varied background before getting into C# and carry some other terms with me. It does create confusion though so I need to bone up on some of my Microsoft/.NET terminology rather than taking it straight from how it's organized in my head.
Yep, that would be useful to include. Thanks!
What function are you using? If you use Regex.Matches it should return a MatchCollection that you can foreach through. http://msdn.microsoft.com/en-us/library/b9712a7w.aspx
The part where you mention that we specify System.Net.Mail and System.Net.Socket for: &gt;This is done for effieciency[ed - efficiency], as we don’t want to load the entire framework for every application. I think maybe you should clarify that this only affects the efficiency of the compile time and the IDE itself. Not the application. Once the application is compiled, the CLR uses fully qualified names.
Yes this will return a string[] which contains all email addresses. What are you feeding it though? You need to feed it the entire (downloaded) page, not the URL. If you only have the URL, first download the page using WebRequest: http://www.java2s.com/Tutorial/CSharp/0580__Network/UseWebRequestandWebResponsetoreadawebpage.htm
Yes, that is what I meant. At first I thought of namespaces like the includes in c++, when you use a using, you are loading the type into memory. It wasn't until later that I figured out that the types are already into memory, using only makes it more convenient to use them because you don't have to type out the entire namespace every time you want to use a type.
Never tried it on OSX or Linux but I would assume it would work on anything where .Net 4 is installed. Its really powerful, you can do in just 2 or 3 lines of code what would normally take 100 or so. Its like SQL within a programming language and allows you to manipulate and query lists/arrays of objects in a similar way. Get learning! 
I think its a great introduction for newbies who say have never looked at Java. It might be a good idea to briefly touch on the idea of assemblies. The idea that code is stored in seperate libraries which can have multiple namespaces is quite confusing. It might be helpful to give some kind of overview of a PE, the difference between an exe or a dll, how these dlls are found etc.
Ah but even in your microcontroller you've interupts in all but the most basic code. I would say C# is hard to do 'realtime' programming in, but then again so is C++ on a complex operating system. Or rather before I get flamed, its much harder to do C/C++ on a PIC16 series than MASM (don't you internet people who's opinions I strangle court dare flame me for that one, I lost so many nights figuring out the timing issues caused by a compiler 'upgrade', damn you hi-tech!) As mentioned there is much you can do to ask the OS to give you prirority, set the afinitymask so that no other application will try and use the cores you want. The other thing to watch out for, espesually on windows is the allocation of phsyical memory. Windows is quite aggressive at paging out your processes memory so definately worth playing about with: http://msdn.microsoft.com/en-us/library/windows/desktop/ms686237(v=vs.85).aspx Obviously you have to be careful doing that for deployment and admin! The other thing to be mindful off is deviding up your processes and threads. Many developers do not understand the difference between a thread and a process; when and why you'd use each one. Threads are lightweight, but if you've got a .Net program with a method called foo like so: public void Foo () { var myArray = new double[1024]; ... some very light CPU task then exit .... } You will find as you have more and more threads you get very deminishing returns. Why? Because .Net locks quite badly when allocating memory, that is to say if two threads are trying too simultaniously, one has to wait. This is better in 4.0/4.5 but I'm digressing. Keep this in mind, and think when can I use a seperate process? Ultimately its when the cost of exchanging the data is less than the cost of the allocations in the parralized methods. TL:DR; Yes you can do it, its not easy, and in the way with C++ you have to really understand what's going on under the hood for a realtime system, with C# you have a lot more complexity under the hood.
You will want to use parameterized queries instead of building query strings like this: connection.Open(); MySqlCommand cmd = new MySqlCommand( "INSERT INTO personal_info (Fname, Lname, MiddleName) values (?,?,?)",connection); cmd.Parameters.Add(new MySqlParameter("", Fname.Text)); cmd.Parameters.Add(new MySqlParameter("", Lname.Text)); cmd.Parameters.Add(new MySqlParameter("", mname.Text)); cmd.ExecuteNonQuery(); connection.Close(); The reason for this is that building a string like you have done makes your database vulnerable to a security issue called SQL Injection. For example, a user could enter the following: '; DROP TABLE USERS;-- into the textbox and click submit. Then, depending on the driver you are using, your server may terminate the first query with '; and then execute the next query "DROP TABLE USERS". If your database has a users table, it will be dropped and the data will be lost ([Here](http://xkcd.com/327/) is a great illustration of the issue). A less nefarious example would be if your user has the last name O'Reilly. If you are building a string, the apostrophe will terminated the string in your query and it won't recognize 'Reilly as a command, causing an exception. The correct implementation is to use parameters like I have illustrated above. Also, MySQL supports the Entity Framework. You might want to think about using this as it is *much* easier to use than building queries manually. [Here](http://dev.mysql.com/doc/refman/5.1/en/connector-net-tutorials-entity-framework-winform-data-source.html) is some information about it if you are interested.
Lets work backwards: what is the output *supposed* to be?
Try entering William James O'Reilly into the form and you will find that this answer is not correct.
to print the values of an array, just use **string.Join**, in this case Console.WriteLine(string.Join(",",a));
It's worth saying you should consider using or at the very least learning about ORMs. Why? Because writing the SQL is just horrible compared to having a set of objects which you treat as a 'model object' and worry not about anything else. http://blogs.msdn.com/b/dsimmons/archive/2008/05/17/why-use-the-entity-framework.aspx There are a few ORMs in .Net, we've LINQ to SQL, LINQ to Entites and my favorite for more complex apps nHibernate. Anyway, glad to hear you've fixed your problem OP, but when you've a moment try using an ORM and you'll save lots of time eventually.
Will do! :D
That is probably a very good bit of advice, to look at a micro-ORM too. Thinking about it more OP is probably better off with LINQ to Entities to start with, due to its user friendly designer. However if you get a complex model (database) LINQ to Entities can become very clumbersome and slow. Also if your not able to use a trace on the server it can become hard to see why things are going slow if you've got very large datasets. That was why I mentioned nHibernate, I now feal your right and I shouldn't have. nHibernate is one of those technologies which has more of a 'learning asymptote' than a curve, and requires a bit of understanding of xml config files. Thou not half as much as Spring.Net, I honestly hate every dev who thought it was a good idea to bring Spring in........... *shakes fist at sky, looks at VS, still no idea how many config files and how this muppets post build thing works, cries*
A lot of it comes down to your model. If you've got a simple database with a 1:1 mapping of tables and classes then LINQ to SQL is just fine. It's also very simple to get started with. In fixing the shortcomings of LINQ to SQL Microsoft created a bit of a mess with the Entities Framework, which I and others frequently incorrectly refer to as LINQ to Entities. The idea was it would be possible to be more database agnostic thou I've never heard of any complex or big project written in it being so. LINQ to Entities is also a *designer driven* ORM. By this I mean you connect a pretty built in tool to a database and blamo, you've got auto generated code that will always with 100% accuracy get everything correct.... right... right? NHibernate on the other hand is about making some magic mapping between a POCO and the database. This design decision means you can have a lot more complexity, moving parts, bugs, days lost in config, but importantly flexability. EF is quite brittle between the DB and your code. That is fine if your database exists solely for your application, you never have to shape your database around problems such as having a table that is just far too damned big, or its too slow to have a relationship enforced in it. NHibernates approach also makes unit testing easier, in the same way that good use of any DI can http://www.codeproject.com/Articles/35881/Simplified-Mocking-with-Dependency-Injection-for-U when you've got POCOs rather than the funky EF classes, this allows for really useful fine grane control with building your unit tests / integration level unit tests. Either way, you co-worker has told you a really important lesson, as a dev you have to choose, advise and use technologies which will work for the organisation. If you choose something only you know, you must help others learn it. Story time! When I thought WPF was cool, I made a case and before long had the entire firm using it, we even had money for Ian Griffiths to provide some on site training. This was good as I wasn't the only person in the firm knowing the new flavour of the month technology, but I was considered the handy onsite guru for it, made the bonus negociations fun.
Yeah, entity framework helps, but for novice can be quite overwhelming. If you really struggle with mysql, just ditch it and use something else to persistently store your data- XML files or document database such as RavenDB or MongoDB.
Is this your first C# project? If you tell us a little more about what your wanting to do, I'm sure reddit will help provide some relevent tutorials, that will help you and be less frustraiting than trying to hammer out a solution as is. You are re-defining the variable conn. You only need to set it once, you should also consider using the *using keyword*. This will remove the need for the try and finally bit, plus make it look neater. For more about using see http://www.codeproject.com/Articles/6564/Understanding-the-using-statement-in-C If you tell roughly the following, I'm sure people will be able to recommend specific reading to help you: 1) How much programming experiance you have in any languages 2) How much C# you have. 3) What it is your wanting to do. 4) What you have to do it with (do you have to use MySql?).
Agreed. I happen to personally favor Entity Framework Code First because it means I can check in code and that's it - no more database diffs, no more DBA tasks - just code. It also has a mild learning curve, but the length of said curve is almost as long as NHibernate's - just less steep. I also have never tested it against MySQL, so I have no basis for recommending it in a MySQL environment (but it may work just fine - I don't know).
1. I have a year and a half experience in programming. 2. I started learning C# about 2 months ago. I want to be a geek in it. Really loving it. 3. I am trying to connect a datagridview to a mysql database. 4. I want to use mysql because, it is free and I feel it's the best to use for my project. I will not have the funds to purchase licenses for oracle and MS SQL.
I just looked through your submission history and they're all very simple questions. You should try googling for a tutorial or reading a book on the topic before asking these.

It's on NuGet now - you should be able to find it just by typing "crawler" in the search bar.
No I'm not suggesting that the steady state will change or anything; I was just curious about how your organization approached the problem. 
This is certainly something you want to learn OP! Entity framework is one of the most powerful tools C# has to access databases.
This is really bad advice, you shouldn't suggest a novice to drop from learning SQL and how databases actually work. Setting them up to use something like EF or RavenDB sure, they will learn how to throw objects into a repository or how to map entities to a model, but everyone should have some understanding when it comes to queries, connection strings, primary keys foreign keys.. etc.
I am a huge fan of those looking to lend a hand, and I appreciate your point. In hindsight, I also totally get how this posting might have looked like a question from someone looking for help. Of course, at the time I posted it, *I* knew what it was, so, of *course* everyone else would too, right? ;-) Point taken, and thanks for being one of those who looks for ways to lend a hand. People like you have taught me what little I know so far. 
There's a checkbox right there :)
This prompt only allows you to continue with the last build, not continue execution with the current one. You could theoretically skip the offending statement by commenting it out, but that's not applicable 99.9% of the time.
There is a case to use it. When you've made a change that broke something, gone to bed, and then never opened the project again. I've got a game that's in that state (because I got a job, that required me to learn PHP in a week) so I've got the ability to still show people "where I was up to" before I made the last change. Though you're correct. When I was actively working on it, I never pressed that button.
If you have Code Analysis enabled it will generate build errors which are not compilation errors. I use it all the time when I don't feel like fixing Code Analysis warnings.
And the changes that failed in one depend on the changes that have already successfully compiled in another, meaning you are left in a state where nothing will run anyway.

While that is true, it's unclear what checking it will do the next time I try to debug with a broken build. Will it stop and force me to fix my errors? Will it proceed and debug the last known good build? Will it remember the choice that I made when I clicked that checkbox and use that?
True it doesn't say so. But I sacrificed myself for science and now I know for sure it will not run the program next time if can't compile.
SQL queries? Really? You mean that semantic that was made to be understood and used by office clerks conceived in 70ies? I am sorry, but I don't think that SQL queries is essential skill that a pro programmer must have. Yes, you need it to work with existing applications, but future-wise, I don't see it as much relevant hing. Connection strings? What? I give you that concepts of primary and foreign keys are somewhat more useful. I stand my ground so I would still advise every beginning programmer to begin with nosql databases first as a persistent storage, because of how incredibly easy it is to use them. Nosql motivates beginners better. If you are aspiring database engineer go ahead, learn SQL, you won't be able to do your profession without it, but as a programmer? Yeah I am not so sure. 
My boss comes around and asks to see the product, and I've just broken something. Aw who am I kidding, I just say "Just broke it, gimme a sec" and hope she doesn't come back.
I guess [this doesn't work anymore](http://xkcd.com/303/)
While I see your point, I feel the scenario is still valid. Yes the last commit or fork or whatever works. But I've got uncommited code and a coworker wants to see where things are. Is it really worth the time to shelve the changes and revert or just hit "yes" to show them what they want so I can get back to work faster?
If its just one person then source control isn't such a high priority. Just indie/hobby game dev. We do source control on our professional web dev stuff now though. *edit* It's like 15 months on or so. I have learned my lesson since this comment.
That's different; when you're in the middle of something and just tossing a show to someone in the next box, yeah it's decent to have this. But the scenario where you sleep on it? I always do my best to have everything checked in before I stop for the day, even if it's just on a private branch created for the sole purpose of pausing that night.
"OBSCENITIES!!"
On my first day at Microsoft I made this exact comment in the very first team meeting I was involved in. Turned out, the ridiculous file shortcutting policy (instead of dlls) the team had set up was put in place because one of the team members refuses to *not* not click the button. Ended up offending half the team first day :\
I teach Programming Methodology I using c#, some students don't even take the time to read the dialog and wonder why the last changes they made are not showing on their program. Picard, I know the feels.
like most other dialogs? they always work for me.
My feedback from reddit on my last tutorial was super helpful, so I'm hoping to get that same kind of honest feedback to make these more useful as I go along. Thanks for the help everyone.
I must have missed your first postings, glad I found this one
One more question to if someone could answer it. How do I make it so after someone has typed stuff into a textbox, when they press enter it clicks a button? I also looked online for that and the code i found was: private void textBox1_KeyDown(object sender, KeyEventArgs e) { if (e.KeyChar == (char)Keys.Return) button1.PerformClick(); } It all works except for it says KeyChar: Error 'System.Windows.Forms.KeyEventArgs' does not contain a definition for 'KeyChar' and no extension method 'KeyChar' accepting a first argument of type 'System.Windows.Forms.KeyEventArgs' could be found (are you missing a using directive or an assembly reference?) I have the thing that the microsoft page in KeyChar says i need, using System.Windows.Forms;, but it still wont work 
In your form class, set AcceptButton to the button you want. this.AcceptButton = button1; 
After your previous blog on namespaces, which I thought was well-written and useful, I was very surprised to see the following in your blog: "Using Statement - Defines the scope for your application’s objects and disposes them when they’re done. This isn’t super important now, but I’m going to cover some other ways we can implement using statements in C#. What you need to know now is it’s including the types in the System namespace in your scope so you can use them. That is just plain wrong here. The using keyword has two uses. One is as you described here, and the other is to bring in namespaces so that you don't have to use fully qualified names. I know indentation practices are a matter of personal preference, but most programmers consider there's is the only way and all other ways are wrong. So, having said that, I hereby say: your indentation is wrong. Here's one of your functions: static void Main(String[] args) { string name; if (args.Length &gt; 0){ name = args[0]; }else { Console.WriteLine("Please Enter Your Name"); name = Console.ReadLine(); } Console.WriteLine("Hello {0} nice to meet you!", name); } I have two big complaints with this. First, where is the opening bracket for the first if statement? It's hiding at the end of the line. It's not easily visible. It makes it too easy to forget to put it in. If you're lucky, you'll put in the closing bracket and get a compile error and if you've got complicated logic it may be hard to find where the missing bracket should go. If you're unlucky, you'll forget the closing bracket too and your program will compile and if the condition is false, the first statement under the if will be skipped and the rest will be executed. My second complaint is that you indented the brackets defining the function but nothing inside those brackets. So, you end up with multiple brackets at the same indentation level. That makes it hard to see where the function ends. I had a hard time figuring out how much of your example to cut and paste because at first I thought the function ended about the Console.WriteLine() call. In this line: Create a variable called string, and get it’s input from Console.ReadLine() Remove the apostrophe from "it's". At another point, you said: "There are a few ways we could initialize, or create the string variable:" Although it's probably beyond the scope of this article, creating and initializing objects are different. I think it would be better not to confuse the two even in such a simple article as this. I'm very glad to see there's at least one other person in the world who knows who John Jacob Jingleheimer Schmidt is!
no axe?
I did what you told me, and when I try to debug i get a system argument exception. [Here](http://pastebin.com/6FvNaC0y) is the detailed error and the code
e.KeyCode
I put that in, and the line looks like this: { if (e.KeyCode = (char)Keys.Return) button1.PerformClick(); } under e.KeyCode, i get an error that says "Property or indexer 'System.Windows.Forms.KeyEventArgs.KeyCode' cannot be assigned to -- it is read only" under (char)Keys.Return) i get an error that says "Cannot implicitly convert type 'char' to 'System.Windows.Forms.Keys'. An explicit conversion exists (are you missing a cast?)" What can i do?
Not a great idea to put that code in the Form's constructor. I would do it in Form1_Load event. Add your image to your project (right click on your project -&gt; Properties -&gt; Resources tab -&gt; Add Resource -&gt; Add existing resource). private void Form1_Load(object sender, EventArgs e) { TimeSpan dayStart = new TimeSpan(8, 0, 0); TimeSpan nightStart = new TimeSpan(18, 0, 0); TimeSpan currentTime = DateTime.Now.TimeOfDay; if ((currentTime &gt; dayStart) &amp;&amp; (currentTime &lt; nightStart)) this.BackgroundImage = Properties.Resources.&lt;your_image_resource_here&gt;; } This will automatically change the form's background to the image when the app is started if the if condition evaluates to true. If you want to click a button to do this, just put that code in the button's Click event handler.
Thanks, your comments are correct, and I received lots of comments about my indentation style in this article, I'll be making some changes to something a little more standard. My explanation of using was also poor, I'm going to rewrite it tonight. Thanks for the feedback, I'll make some adjustments, I think at certain points of this it started getting really late and my brain got a little foggy. My method for doing these so far has been to layout an outline in keynote, then go through and start writing the article and checking my phrasing to make sure I'm getting the right idea across afterwards, and I don't think I spent enough time doing it this time around. Thanks for reading! They'll gradually get better as I go along thanks to feedback like this
True. Although I guess I'll shamefully admit I've been in that scenario in the past. Too tired to properly type up the commit notes... although one could argue I shouldn't have been coding at that point.
Hey. "Object reference not set to an instance of an object" almost always means you are trying to access an object that is null. In this case it's the following line: string[] parsedLine = null; You are then trying to reference parsedLine but it doesn't work because you told it to equal nothing: parsedLine[valcount] = parsedLine[valcount] + line[i]; In the current implementation you would need to use: string[] parsedLine = new string[0]; However, I believe your best option here would be to use a List (http://msdn.microsoft.com/en-us/library/6sh2ey19.aspx) instead of an array. You would instead use: List&lt;string&gt; parsedLine = new List&lt;string&gt;(); Let me know if you have any other questions. I'd be happy to help.
It actually doesn't, the program itself executes, it's the catch statement that's throwing the error. Visual Studio won't tell me which line is causing the problem.
Thankyou! I've got a few other things to sort out with it but in the name of learning I'm going to try on my own for a while. I may reply back with my tail between my legs shortly.
parsedLine[] is meant to be an array of strings where each element is a value from the line. So parsedLine[0] should be "Boys". I was then going to stick that array into a List so i'd have a List of values from each line. Thanks for the e.ToString() tip, that will help to no end!
What??? The exception object contains a stack trace??? WTF (why the fuck) did it never occur to me to look closely at what's in an exception object??? Thanks very much! And no, I'm not being at all sarcastic. I've been programming in C# for a few years now and wanting to know what line the exception actually happened on. I've just been using the debugger to step into code until the exception gets thrown.
Awesome post! One thing I would try as a side idea; instead of using System.Web.Extensions library Javascript serialization, try using the Newtonsoft Json deserializer. The output is a dynamic object and can be more flexible / fast to develop for quick tasks. Obviously, static type checking etc. is good for a more long winded implementation but a lot of the time you're just peeking at some string fields that aren't likely to get renamed in a response. 
This isn't a mostly QA forum? Then what is it? A collection of links to useful blog posts? I admit that wouldn't be a bad thing, but I do not see any standards beyond "all about the object-oriented programming language C#" posted on the sidebar.
Thanks, that's inspiring. 
I use it all the time. I write fairly mission critical systems for NASA.
Great tutorial so far. Used it to upvote this post!
Thanks, this will help a lot.
Thats pretty smart, didnt think about using a third party online storage. Thats a pretty easy way to send things across the internet. What language did you use?
Whilst MSChart is a good option for somethings, if your doing a tachogram I'm guessing you might start finding it a bit slow. For fast ticking data I like the open source project DynamicDataDisplay. http://dynamicdatadisplay.codeplex.com/ I think it started as an MS Russia research project. But the control is fast, has nice panning and zooming. Plus is WPF/Silverlight rather than winforms, which is always a blessing.
I guess that makes you the Safety Control Rod *Axe* Man.
I'm not sure how I should feel about that. :P
Actually you can trigger a sync event and transfer files to and from the device. 
&gt; You mean that semantic that was made to be understood and &gt; used by office clerks conceived in 70ies? Your ignorance, apparently, knows no bounds. Forgiving the total inaccuracy of your claim, SQL isn't going anywhere. It's the main interface to the database, and is ultimately on the back end of every ORM, and LINQ query in existence. I sure don't see Microsoft, or Oracle, or any other database vendor getting rid of SQL any time soon. Your statement about it not being relevant is very, *very* telling. If you worked for me you would be fired by now. OP, do not -- REPEAT: do NOT -- take this person's advice. 
Tiny design thing for you! When you highlight areas of the screen, like this: http://images.jeremymorgan.com/how-to-learn-c-net-02.jpg I would personally benefit from seeing that same effect but with a border... say a 1px red border around the highlighted area.
I see what you mean, from reading other web pages. I do not understand how a string (a reference type referring to an immutable object) behaves differently from a value type such as an integer. So that leads to two questions. First, does an absolute beginner really need to know the difference? And if he does, can you explain it at his level? And second, can someone show me how a string would behave differently if it was a value type instead of what it is? I think I'm going to ask the second question in a separate thread here.
Thank you for the link. It is quite helpful. I remain confused (although not as confused as before). I do not understand why I should care that a string is a reference type. I would like to see some instance where the fact that it is a reference type gives a different result than if it were a value type. The example I originally provided is not such an example. If I make one and anotherOne integers instead of strings and made appropriate changes to the code, I would get the same results. Could someone please show me a case where I'd get different results?
Even if you made `one` and `anotherOne` classes you'd get the same results. &gt;&gt;&gt; public class C{} &gt;&gt;&gt; C one = new C() &gt;&gt;&gt; one.ToString() &gt;&gt;&gt; C anotherOne = one; &gt;&gt;&gt; Console.WriteLine("One: " + one.GetHashCode() + ", another one: " + anotherOne.GetHashCode()); One: 39974954, another one: 39974954 &gt;&gt;&gt; anotherOne = new C(); &gt;&gt;&gt; Console.WriteLine("One: " + one.GetHashCode() + ", another one: " + anotherOne.GetHashCode()); One: 39974954, another one: 4861097 As you see, their hashcodes are completely different. Think of variables as unique *names* for objects. In your first example, `one` and `two` just happen to refer to the same object. If you decide to change *who* `two` is referring to it doesn't change who `one` is referring to. On the other hand, if you change something *about* two (like a field), then you're also changing the object that you call `one` so both objects get the change. For example: &gt;&gt;&gt; public class D{ public int id; public override string ToString(){ return id.ToString(); } } &gt;&gt;&gt; D one = new D(); &gt;&gt;&gt; one.id = 3 3 &gt;&gt;&gt; D two = one; &gt;&gt;&gt; Console.WriteLine("one: " + one + ", two: " + two); one: 3, two: 3 &gt;&gt;&gt; two.id = 5 5 &gt;&gt;&gt; Console.WriteLine("one: " + one + ", two: " + two); one: 5, two: 5
I believe it doesn't, at least from your perspective. Since strings are immutable, you *can't* change parts of the string like I did with `two.id`. The main benefit is that passing by reference conserves memory -- value types will copy their values into a new object when passed into a function, but reference types remain one object. Also, behind the scenes C# caches small strings ([interning](http://msdn.microsoft.com/en-us/library/system.string.intern.aspx)) so in this code `one` and `two` actually refer to the same object: string one = "hello"; string two = "hello";
I believe there's a .NET based application out there already that straps to the memory of another process for the sole purpose of reading and modifying game values as a cheat engine. Since there's that, your main dilemma would be getting that information into your GUI and then saving that information as history. That might be a good excuse to try your hand at Metro/Silverlight GUI's which will look nice in demonstration and on your resume. Or if you need a hard windows admin environment for that unsafe code, WPF.
Both the components, the listener and receiver, were in C#. No idea where that code ended up unfortunately...
http://msdn.microsoft.com/en-us/sync/bb821992.aspx That could be handy mate. Personally I feel that BitTorrent is the wrong tool for this job. Look at software like unison or rsync (unix utility/rsync algorith) this does this kind of task. Good luck and have fun!
Start with smaller games. Grab a program that can scan an entire processes memory. Play the game and attach the process. Take note of say your HP then pause the game, tab out and scan the memory for the number that represents your HP. Unpause and lose or gain some health then pause and scan for the new HP. Cross reference the memory addresses found to find out where this variable is being stored. You will need a way to count to that memory address again. So start the game again and repeat till you find a way to count the number of bytes to that address, maybe from another byte if memory that doesn't change. Once found record statistics. This is also how you make trainers and types of game hacks. So with newer games this can be extremely difficult especially given their complexity. 
Whilst browsing around I found this http://www.symprojects.com/ Their software seems to extract all the data I'd like to but obviously they use that data for additional hardware whereas I'd want it in an application. I will look further into racing sim forums and see what they have to say. Thanks for all the help guys! :)
For beginning C# development, Dan Clark's "Beginning C# Object-Oriented Programming". For ASP.NET, I really recommend Steve Sanderson's MVC book "Pro ASP.NET MVC 3 Framework". 
I really enjoy the Head First books and they have one for C#
You have two basic choices: static location, also known as the service locator pattern, or by introducing a system which manages these dependencies for you, known as a container or a dependency injection system. Each of these patterns, like all patterns, have upsides and downsides. You have to evaluate which is appropriate for your context. EDIT: spel moar good.
I've been really happy with StructureMap as a DI framework. http://sourceforge.net/projects/structuremap/
StructureMap is very nice, and I've done good things with it. I prefer Castle, these days, however: http://www.castleproject.org/
You are speaking of events. Why not use Sub Pub patterns? That way anyone can publish an event and those who are interested in that event can subscribe to it. My favorite MVVM implementation (Caliburn.Micro) has this built in. It's called the EventAggregator and it's pretty simple to use. http://devlicio.us/blogs/rob_eisenberg/archive/2011/05/30/caliburn-micro-soup-to-nuts-part-8-the-eventaggregator.aspx It's literally the best way to share events across ViewModels. 
Check [this one](http://it-ebooks.info), there is a lot of books
Your main window's viewmodel instantiates the two sub component viewmodels. What you need to do is pass this resource from the main viewmodel to the children during instantiation (or upon change). As others have suggested this can be done via DI frameworks or very simply passed in the constructor ( or property setter in the case of a changing resource).
This is a reasonable suggestion which would fall under the "service locator" pattern. There are downsides which are worth understanding, however. Nevertheless, it is probably the right choice for small, fixed-function, client-side systems where the unit of work can be defined as per-application or per-input.
This is a good suggestion, and would allow the developer to not have to take on the burden of managing a DI. It's important to be aware, however, that the "main" VM is then in effect becoming the "application controller" and serving in the same role as the container of a DI system, in that it manages the lifetime, resolution and injection of the shared state. The downside to this is that it's easy to let the responsibility of this application controller to gradually increase and become a maintenance burden.
While I agree with this, since a constructor provides a good contract on what a class needs in order to be considered "initialized" and provide the service that it's designed for, you still have to locate those dependencies. There are really only the above two ways to do it, you go and get them, or they are given to you by some class whose responsibility is to manage them.
The early versions of the C# book had some issues - see [Jon Skeet's review](http://msmvps.com/blogs/jon_skeet/archive/2008/03/21/book-review-head-first-c.aspx), for example.
The problem I have with this is that I can't pass variables to a viewmodel constructor as they are instantiated within the XAML code. (Apparently you can pass values to constructors in XAML using x:Arguments, however it does not seem to work on my viewmodels?) So I believe just getting to grips with DI and moving from there is probably my best option.
I'll look into both, thanks guys!
It is a very small app, one that I am constantly refactoring as I attempt to learn new concepts/technologies. I was considering going the static property route, however, considering DI is what would be considered the most appropriate way of doing this in terms of design, I've decided I'll jump in and get to grips with it. I'll go with the static property for now, just so things are actually running!
Unfortunately no, DI still doesn't help you much, since resolving a view model still needs to be done in the context of a container (or more typically, a registered view model factory that the container provides), and while that isn't impossible to do in XAML, you're looking at something far more tricky than passing parameters. My core gripe would be with instantiating view models directly in your view. I know that there are several frameworks which take this approach, but I find it both impractical and aesthetically unappealing. * Sane UIs are visual hierarchies. Regions are divided into subregions, &amp;c. I feel strongly that this application model should be enforced via a hierarchical relationship between view models. Instantiating child VMs in such a way that the parent has no knowledge of them makes this impossible, leading to many forms of regret (including this current topic!). * It gives views too much power over application structure and navigation, which will ultimately turn out to be a bad idea, as it is difficult and unrewarding to fold complex behaviors (authorization, validation, service calls) into views. Navigation (and the resulting construction of new view models) is pretty much always the result of a command, and in MVVM commands are provided by the view model. The alternative is easy and pretty! Have your host view model build its children (using a DI-based factory, if you like, or parameterized constructors) and expose them as properties, put ContentControls in your view which binds to those properties, and have application-level data templates which map from the view model types to their respective views.
Very true. I'm a big fan of DI (current allegiance is to SimpleInjector, for performance and extensibility), but the OP wasn't really having a service location problem. His child VMs are being built in a way that makes injecting context impossible, and that's what needs to be fixed. Switching to parameterized constructors is the necessary first step. After that, he's free to swap between the various ways in which those constructors will be called (directly or via a container/factory).
I imagine the same thing happens with using (). Did you know you can stack usings instead of nesting them? using (new something1) using (new something2) using (new something3) { something1.verb(something2); lol.at(something3) } makes working with Streams so much easier on the eyes. 
This is good advice. Having a system where a VM can build child VMs, which then are able to build their own child VMs allows us to stay within the [Law of Demeter](http://en.wikipedia.org/wiki/Law_of_Demeter). If we delegate the creation to a factory interface (which may just be a front end to the container), then we can pass the factory along as we build the hierarchy. The issue of view location can then be taken care of by using DataTemplates selected by type or by a more sophisticated intermediary (the ViewLocator in Caliburn.Micro is a good example of this).
I didn't know either. Thanks from me too!
If all variables are of the same type, you can also do something like this: using (MemoryStream ms1 = new MemoryStream(), ms2 = new MemoryStream()) { }
Title should be "... translated to try (try/catch) / finally"
I don't think so. Most code samples still use the hideous old nested approach while talking about the glory days of C/C++. I don't know what those things were, but I presume they have something to do with vinyl and drugs.
I think `using` is similar to the `while` example in Eric's post: `using` applies only to the next statement body. Usually that statement is a block `{}`, but here the next statement is another `using`. It's still technically nested. For example, you can do this: if(person.firstname == "timothy") if(person.lastname == "stephenson") if(person.age == 34) { Console.WriteLine("Hello, Tim!"); } Instead of using `&amp;&amp;`, but that would be a nightmare to comprehend.
Are you saying that stacked if's are functionally the same as &amp;&amp; if's? I thought that if ( statement1 &amp;&amp; statement2) { } would be more performant than nesting due to compiler magic.
It's a bit ambiguous; people would probably expect it to either throw an error or be 5.. But they probably wouldn't expect 0.
Sorry everyone I derp'd a little. Google cookies domain are .website.co.uk and by default you push cookies to website.co.uk so I just had to add this newCookie.Domain = "." + HttpContext.Current.Request.Url.Host; 
This sounds like a more in-depth conversation you need to have with your "creative dude." Specifically, you need to negotiate where the dividing line comes down between what he wants to be able to contribute and what he feels he should get out of the engine, using existing games as conversation fodder. You may also want to consider re-using and modifying an existing text-based game engine; this is one of the oldest computer game genres out there, and many of the best ideas have been fleshed out and implemented over and over. Search CodePlex or github or other open-source websites for engines in C#, if that is your preferred language. Look for engines that provide embedded scripting capabilities with some other, more non-programmer-friendly language. As someone who has gone down the path of coding engines for text-based games multiple times without a particularly clear idea of the end-goal requirements, I mostly want to caution you against reinventing the wheel unnecessarily. If you want to bang out your own toy engine as an exercise in solving the problems it provides, that's fine, but if someone actually wants to build a game with your work, don't try to puzzle out the requirements based on what you think the engine should have.
this is for fun might I say, its not supposed to be released for any reason but for hobby and to learn the language better :) and that is why I posted this to see if any coders want to give some input on what I should add.
Physics.
please elaborate! lol
"drop ball" The ball falls from 1 meter, down the planet's gravity well, hits the corner of a table. The table nudges slightly due to momentum exchange, and the ball moves in an upward arc, falling 30 centimeters at a speed of 10.28834 m/s downward, 1.2 m/s to the side, and 0.5 m/s towards you. When it hits the ground, it falls through. --- Kinda buggy, I accidentally reversed the wrong axis when the ball hit the bottom of the map. I'll look into it guys. Text-based physics are difficult! 
If your goal is simply "to allow a creative individual ... to be able to make an in depth game", you could check out [Inform 7](http://inform7.com/) I'm not 100% sure they have all of "horizontal rules, line breaks, messages, all including color formatting and alignment functioning," - this might have to be HTML stuff, or you could expand Inform 7 in your own direction. Here's some [sample Inform 7 game data](http://en.wikipedia.org/wiki/Inform#Example_game_2)
You can link to the picture in the text of your post Just put the following in: [Here's my picture](http://i.imgur.com/I2K45.jpg) Edit: didnt realize you couldn't see how that worked. [text](url) Like that!
If your problem is that you need to convert string to int that represent twelve months from 0 to 11 you should do that this way: string monthsText = "6"; // 7th month - July int monthNumber; bool successfulParsing = Int32.TryParse(monthsText, out monthNumber); if(successfulParsing &amp;&amp; monthNumber &gt;= 0 &amp;&amp; monthNumber &lt;= 11) { //do you thing here } This solution will check if string is parsed to integer successfully using Int32.TryParse and you also have to check if month number is within valid range. As far as it goes this would be decent solution. 
Does the EmployerMonths contain the total number of months an employee has worked? Is four years two months stored as 50? And you are trying to figure out how to turn that 50 into Years-4, Month-1 (zero based)? If so you can cast the text "50" into an int using your favorite cast technique. int TotalMonths = 50; //or = int.TryParse(... int RemainderMonths = TotalMonths%12; int TotalYears = (TotalMonths - RemainderMonths)/12; int Base0Months = RemainderMonths&gt;0?RemainderMonths-1:0; Not sure if this is what you were trying to accomplish... 
+1 to TryParse. I wish more developers used it.
I've done this in the past with a singleton, but I wasn't particularly pleased with the design either.
&gt;Additionally I'd use Int32.TryParse instead of Convert.ToInt32 and handle the condition where the submitted value cannot be converted to an int. This. Seriously, there's nothing worse than watching a user break your code by typing "Jeff", or something, into a text box used for numerical entry. I'd be tempted to go one further and block entry of all but numbers into the field. I have some in-product code somewhere that even blocks Ctrl+V just in case the user tries to be clever. A bit over the top, I know, but it seems to work.
I would also suggest taking a look at Autofac for your DI container needs as well. http://code.google.com/p/autofac/
Haha quite the contrary. We approached Microsoft about using ie and they screamed about it being a horrible idea. MS was quick to admit that the core for ie is not server level code. It will crash ungracefully apparently. So we used WebKit. This also gave us the ability it change the code within the browser when we saw fit. 
If anyone knows a better alternative to cheat engine, let me know..
Can you please post some code for review?
You cannot remove from an array because arrays are immutable (they don't change in memory). You can copy an array and only add the items that you want in the copy of the array (this is the manual way of doing things). In C#, though, the best thing to do is use a List because it does these things under the hood. Or even better, you could use System.Linq because arrays inherit from IEnumerable, so you could do something like: var folder = new string[] { "1", "2", "3" ,"4" }; var result = folder.Where (path =&gt; !IsMediaFile(path)); play(result); Then you get the list without having to remove items from it or what not.
You can't delete items from an array. Get familiar with generics. They are awesome. Here is your code rewritten to use a generic list. Note that you can't remove elements from a List (or any collection) if you are currently iterating through it with a foreach. That's why I changed it to a for. List&lt;string&gt; folder = new List&lt;string&gt;(openfolder()); for (int i = 0; i &lt; folder.Count; ) { if (IsMediaFile(folder[i]) == false) { folder.RemoveAt(i); } else { i++; } } play(folder.ToArray()); **Edit:Few edits to make is work with your functions returning and using string arrays. Look at that, you don't even need to change the types in your functions!**
Technically, you *can* delete from an array, but it involves a butt-load of copying¹. So don't do it. Instead, use generics like everyone else has said. ¹ Basically, you take every element after the one you're trying to delete and move them down one position. At the end of the array, this performs ok. At the start of the array, well, go get some coffee or a bagel while you wait for it to complete. Also - when you use this technique, you can no longer rely on the .Length property to tell you how many items are in the array - you have to track it in a separate variable. This is because after one of these operations, the last element in the array is a duplicate, and doesn't represent a valid item in the array anymore. 
The simplest way to achieve this would be: play(folder.Where(path =&gt; IsMediaFile(path))); Posted how to delete from the array in another comment :)
Array's aren't immutable, they're just fixed length.
lpNumberOfBytesWritten and lpNumberOfBytesRead should be *ref int* or *out int*
No, actually you can do it normally going forward without any funky looking if's in the loop. I just made some code that did it and it ran fine. edit: I'm wrong. You have to decrement if you do a remove so you stay at the same index.
 void Play(string[] folder) { foreach (var path in folder) { if (IsMediaFile(path) == false) continue; //everything that reaches this line is a media file } } or, set the bad array entries to null, then catch null entries in your play iteration with if (im_supposed_to_be_a_string == null) continue; That aside, look at Lists.
I'm pretty sure that the file would be locked for the duration of the copy event. For a 5GB file, it likely won't be instantaneous.
I always hated professors that told you not to use rudimentary features like that. It makes the code vastly more readable, so wouldn't that make it easier to grade anyway? I understand the reasoning behind not allowing you to use things like .Sort(), when the assignment is something like "sort a list of strings", but forbidding classes is absurd. 
That program looks quite promising
Yep, I'm not using database, I have defined structure of my data in two classes. I then add some items in Form1_Load. Eventually I want to stick this into XML so that it's saved forever, can you suggest or even hint on how I should go about this? 
I'm following through with this tutorial currently http://www.codeproject.com/Articles/24656/A-Detailed-Data-Binding-Tutorial.
So in that case, you add a new row by adding a new Airplane to the BindingSource, if you're using one, or by adding it to the List&lt;Airplane&gt; if you're binding directly to that. In the latter case, you also have to call ResetBindings (if I recall correctly) on your DataGrid for the new row to show up.
I had this problem, the solution I used was to add a DataSource (I think), use that as the binding, then use the events on the DataTable to add to the actual object. It's an extra layer of abstraction that I didn't really like, but it really simplified coding that part of the app.
You haven't included the definition of `MyColor`, nor the error message you received. So I have to resort to "psychic debugging," a la [Raymond Chen](http://blogs.msdn.com/b/oldnewthing/). `MyColor` is a struct. Instances of a struct can't be set to null in C#. 
I agree with WalterGR here. The answer largely depends on how you've defined MyColor.
I see the issue. You seem to have confused MyColor as the instance of a Color. Your variable c is your instance. You would only need to define a MyColor class, struct, or enum if you intended to give it a different behavior or different set of properties. Long Story Short... Color c = &lt;&lt;whatever you want as your default&gt;&gt;;
just a guess but you probably need to do something more like this: MyColor c = new Color(Color.Gray);
https://hotfile.com/dl/184757505/7c59ffb/ItsJesus.rar.html Heres the source I'm using atm. What do you mean how I defined it?
Same error is given. Error 1 The type or namespace name 'MyColor' could not be found (are you missing a using directive or an assembly reference?). https://hotfile.com/dl/184757505/7c59ffb/ItsJesus.rar.html ._. anybody minds checking my current source? kinda mindfucked atm. The person who solves my problem can have Payday : The heist on steam if they want.
Same error is given. Error 1 The type or namespace name 'MyColor' could not be found (are you missing a using directive or an assembly reference?). https://hotfile.com/dl/184757505/7c59ffb/ItsJesus.rar.html ._. anybody minds checking my current source? kinda mindfucked atm. The person who solves my problem can have Payday : The heist on steam if they want.
Looking at the solution... there is no definition of MyColor. When we say "How do you define it" - we mean where are you being told to use "MyColor c"? You have "Form1" defined, for example. If you was to say "Form1 f = new Form1()", then f would be based on "public partial class Form1 : Form{}". Nowhere in https://hotfile.com/dl/184757505/7c59ffb/ItsJesus.rar.html is there a definition for MyColor... so the program is going "Um... I have no clue what the duck a MyColor is". Where are you getting this tutorial/assignment? You need to define "MyColor" so that it can then be used. Or you need to find out where the definition went, since you said it was working at some point.
I... actually don't even know where I get MyColor from. As I said, half of this source was made by a friend of mine which is working with me for a project. He doesn't seem to be online on Skype so I can't ask him shit until tomorrow, which is when this shit is due. I prefer working on my own at school for a reason. So far I tried using "Color myColor = Color.Gray", " and "Color c = Color.Gray;" and many others. I'm completely confused and I feel like I may as well give up for now.. Unless somebody in here can get this shit to work, if you do feel free to have my dogs.
The use would be if you hit a boundary and the number of bytes read are less than what you expect. I see your point - the reason it's ref or out is that if you don't assign the int a ZERO (essentially translated as a null pointer) then the API would write the number of bytes read/written to the memory pointed to by your int. Just makes it safer for the CLR/marshaler to transfer your intent when using the correct signature ;-)
well the issue is that MyColor has to be a defined class (like Form1). Stuff like "c.isTrueColor()" and "c.MaxLevel - 1" lead to say that somewhere there is (or was) a definition that atleast includes something like: public class MyColor { int MaxLevel { get; set; } public bool isTrueColor(int PlayingLevel, int ButtonPressed){} } It looks like there is GetColor, MaxLevel, isTrueColor, amoungst other things that would need to create, and track the "randomly selected" colors, as well as the colors you press.
I'm a senior C# developer at an enterprise level organization. The best advise I can give you is this.. What you do with your code frustration is as important as finding the right solution. In these early stages where you are trying to feel your way around the syntax, having one of us just hand you the solution is not going to help you learn anything. Don't give up, just keep playing with it. Google around for things like instantiating a class, field, property, or object in C#. You'll get there sooner than you think. Make sure to pin open your errors window so you can see in real time what your changes to syntax is actually doing, and don't forget that intellisense is desperately trying to help you (sometimes more than you want it to). You can DO it! Put yer arse into it!
I'm not giving and I am playing around with it a lot, though what's the point? I don't know half of the stuff and attempting to learn something which is way ahead of my level seems slightly useless. Though just by making this thread I've learned quite a lot and many of you are really nice. I really appreciate the help guys/girls/whatever you may be. Though I do wonder, if I end up not being able to get this application to work, what should I do? 
Should I just restart completely? I've tried replacing plenty of things so far and it doesn't seem to be any use. Also I can't find any Simon Says tutorials on Youtube/Google that are based on C# instead of C/C++/Java and such. 
If you look at the code, it's not a struct or a color (c.MaxLevel, c.GetColor, c.isTrueColor, ...)... it's a class that holds the Simon Says game logic (first color, second, third, etc as each level progresses).
Yeah, but that's the problem. Looking at the code there is not a class for MyColor. It's attempting to be used as two types, Color and MyColor.
The code I have says, MyColor c = Color.Gray and instead should be Color c = Color.Gray. That's why I'm saying its trying to be used as a color, additionally because there is no class for MyColor. 
&gt;but that doesn't fit in with the posters code in any way. I think it does considering I got it from OP. What if I told you that you're looking at one set of code and I seem to be looking at another?
Ok, two things. Firstly if it's installed on their servers they do have access to your source. All it takes is something like ilspy and they can go through your code till their hearts content. Even with obfuscation and some form of code protection all that does is add layers of misdirection and hopefully make it too time consuming to be worth while. Secondly, onto trial periods. This involves setting a timespan based limit. So to do this you need to store somewhere when the software was installed. Unless you are going to have your code periodically call out to an external service to firstly set the install date and there after check if they've passed it you will have to store it somewhere on their machine. Once it's on their machine it's on their machine and again while you can add layers of obfuscation by storing it hashed in the registry it will still never be bullet proof as once they find where it's stored it can be altered to keep pushing it forward. So to summarise, yes it can be done, you just need to store a date and check it. However, I recommend looking into proper .net licensing solutions (built by people who spend all day every day thinking about these issues), there are a lot of very reasonably priced ones out there that will likely cost you less than the time and effort to do a easily hacked solution. *disclaimer: I work in .net licensing edit: Also don't even get me started on clock roll back detection!
Please, please, please make it so that it flicks into Comic Sans. No better punishment for a non-payment.
I think you are giving the customer way too much credit. The average laymen, or even some experienced professionals, wouldn't have the slightest clue how to reverse engineer code even with ilspy. 
Does your contract with them say anything like "Permanent license key will be supplied after final payment received in good order" ? 
No nothing like that. I should suggest this for our next contract.
Then legally, you can't turn them off for non-payment. Consult your attorney to get help in drafting your next licensing contract to make sure you comply with the law. Also as noted, since the code will be on their servers, they can decompile it and will have full control over it. Your best protection will be through your contract, not via technical means. 
Make a jquery script that replaces all href's on the page with a rick roll link.
Just guessing, the mediaPlayer might use the UI loop to do something, like load the data in the URL you gave it. Strange but possible. But since mediaPlayer works ansynchronously, you probably have some kind of event on it that will notify you of what it's doing. Find the event that tells you that it stopped playing a song, and load the next song from there.
Maybe also replace all images with the trollface. God I hate that picture.
Don't call it a "timebomb" (you terrorist). What you're looking for is to integrate a license management system, which is nice and legal. Give them a temporary license until the date you desire. When they pay, give them a license good until the year 9999. No need to reinvent the wheel here.
Was thinking the same thing. If they have the resources to decompile and reverse engineer an inline C# dll, then they probably didn't need to outsource the webpage in the first place.
Although I agree with others here regarding the non-reinvention of the oft refactored wheel, sometimes we just need to hammer something out quickly - without strings attached to yet another third party solution that brings with it a learning curve and a maintenance requirement. If you do decide to build something yourself, I suggest you consider hosting the license validation yourself and have your application check a license key against your service - perhaps in the Application_Start. This would be much like a TiVo box does. This way you can control the business rules surrounding validity of a key/token.
What about some script that auto deletes all the files for the site?, then hope they haven't taken a backup, would lose them the source code for good. This only works if you can write to the files, but you would need to be able to do that anyways, if you want to replace links etc.
Yup, but that's the most solid method too. Knowing the offset of the memory for the text gives easy access with baseaddress + offset. I haven't found a good way to get that offset though... 
The client is in another country. We're not planning to blow up the code. I was just planning to lock the users out if they don't pay within a certain date in-case they lock us out of their servers etc. Remember that this is an internal application and we could easily say this is a bug. I know this isn't ethical at all but wasting our fucking time on a 3 month project and making us travel back and forth is a pain.
Unchecked overflow? that's a paddlin'
Flene is right on. Be up front so they know they have a temp license that expires at the end of their payment terms. 
You should also consider MEF Managed Extensibility Framework. There is as in any framework a bit work to get it configured. However when its up and running it works like a charm. You instantiate the object and use MEF to export the given property. Afterwards you only need to import it where its is needed.
To be honest, all three of the initial features are features of Python that I miss while using C# * Flip the syntax for string formatting: `"{0}".Format(4)` * Add keyword formatting: `"{key: HH:mm:ss}".Format(new Dictionary&lt;string, DateTime&gt;({"key", DateTime.Now}))` * Dictionary TryGetValue with a default value: `dict.Get("key", "default value")` Feature suggestions are, of course, quite welcome.
This is not really the place to ask "how do I" questions. You'll get much better results somewhere like [stackoverflow](http://stackoverflow.com/). Just googling [.net console key press](https://www.google.com/search?q=.net+console+key+press) seems to have promising results, too.
You may see some problems with the ordering, just keep trying. They're swamped right now, but it will go thru eventually. At this price it's worth the hassle for sure.
I had someone explain resharper to me a few months back - is this a license with renewal?
Yeah got almost through the transaction and had the page barf on me.
what do you mean? it's a perpetual license for the current version... when resharper 8 comes out you can pay to upgrade or stick with old. it's not a subscription if that's what you're asking.
Tried to get all my coworkers (3) to buy it. Disappointed that only 1 got it, and another coworker pointed out the holiday steam sales. &amp;#3232;\_&amp;#3232;
The fuck happened to this thread? Try asking in /r/learnprogramming, you won't get chastised for asking for help there :/ Anywho.. I don't quite understand why (Still learning c# myself), but in a way, it kind of makes sense. Probably to organize and prevent private classes from being exposed outside of the scope. But, if you were looking to have something similar in behaviour.. Try making an interface (to make implementations of methods required, for example), or an abstract class (all children share some common method logic).
&gt; Could I get the subscription for $25 and then immediately do the renewal option, adding an additional year at a discounted price? &gt;&gt; Yes This was one [comment](http://www.reddit.com/r/Python/comments/15604u/pycharm_sale_75_off/c7jo6ol) over at /r/python Does this work for R# as well? If so, how or where do I do take the renewal option? Edit: Checkout is down! How are you guys able to purchase it? There is only 4 hours left :( Edit 2: I bought it finally. :)
My order from this afternoon never appeared to get processed, i.e. I completed online but never received email nor was money drawn. However, an order I placed this evening got the confirmation and everything. Tempted to place a second order and request a refund if both process...
Damn it! Picked up PyCharm and IntelliJ IDEA but didn't consider that this would be on sale... Oh well... Next time. :(
R# don't need renewal, afaik. You pay for the next version if you want it. You can also upgrade for a greatly reduced price.
Let me guess, they really like VS 2012, and how it "looks" like metro?
This is imo the "best" approach. Use the LINQ, Luke!
I would, buy it but I'm fed up of the jetbrains marketing team spamming my subreddits, creating shills and being a pain in my ass so I wouldn't support them if they payed me to. 
Well the deal is over so I'm gonna continue to be a complete jerkoff and mediocre programmer. So close. 
Thanks, I will have probably done pretty much the same after a year of usage.
He's right, you will need to declare the ctr variable either as a static class member or define it in some other class which maintains it as a member variable and is passed to the form.
You can't access a local variable of one method in another method. You want your RollTheDie method to return the thisRoll variable.
Why not implementing your own language, with an IDE, within the game? A bit like Scratch!
I love projects like these. I am curious what the support for the compiler currently is, and how it compares feature-wise to something like http://www.saltarelle-compiler.com/ . 
Forgive me if I'm wrong, but this is a quick lambda expression one liner and C# will do the work. Here you go: play(openfolder().Where(a =&gt; a.IsMediaFile(path)).ToArray()); Simple as it gets! I don't like the array conversion (you should use an IEnumerable&lt;string&gt;) but I won't get that deep since the "play" method is defined. 
Yes. I just posted the same below before scrolling. Forgive me if I'm wrong, but this is a quick lambda expression one liner and C# will do the work. Here you go: play(openfolder().Where(a =&gt; a.IsMediaFile(path)).ToArray()); Simple as it gets! I don't like the array conversion (you should use an IEnumerable&lt;string&gt;) but I won't get that deep since the "play" method is defined. 
I love this project. I wanna start using it everywhere. How ready are you for production? I'd gladly type up some libs if I'll find the project suitable for my needs. The first one that I'd submit would be Raphael, but I've noticed you are missing SVG dom types, and why is jquery at 1.7.2? You know what would be awesome? If you could convert typescript definition files to your CS equivalents - there are a lot of up-to-date ones, and the syntax is pretty sparse. Maybe I'll type up that instead. I'm going to play with this all night. :D Omg omg omg. I'm like a kid in a candy store, only instead of candy it's full of win. Ninja Edit: I just realized that you are using Roslyn, and that doesn't have a go live license. Yarr we'll all be pirates Aye Say!
I just read through all of your blog posts. Starting to code shortly. Please continue to post! I just recently fell in love with the .NET framework, specifically c# (after years of fighting it). Looking for projects and tips, and this is awesome
FIX! Well if anyone else ever gets the same thing, when you search for it on the net everyone says to make the class static. But, I did not have a class that was static before. I did however have a tiny 1 line function in that class that was static and getting rid of it fixed the issue.
::Edit - I just realized that I in no way have used arrays but I hope the code still solved your problem. I think you were looking for a solution rather than information about arrays. If you have two lists of an object list has a method called Contains() and you should be able to use this. Example: List&lt;typeofobject&gt; MasterList = GetListOfMasterObjects(); List&lt;typeofobject&gt; YourList = GetYourListOfObjects(); int count = 0; foreach(var item in YourList) { if(MasterList.Contains(item) { count++; } } Now this is an example and I am not quite sure Contains() will match objects or they will need to be the same objects. What would be better is if you have an id on your objects. Then you could rewrite the above as: List&lt;typeofobject&gt; MasterList = GetListOfMasterObjects(); List&lt;typeofobject&gt; YourList = GetYourListOfObjects(); int count = 0; foreach(var item in YourList.Select(x =&gt; x.id)) { if(MasterList.Select(x =&gt; x.id).Contains(item) { count++; } } This way you would be sure count would be incremented as you compare integers they don't need to be the same object. The second will work for sure while you would have to do some testing with the first as I am unsure it will work in your case.
It's probably a good idea to format your catch block like this catch(Exception e) { MessageBox.Show("Exception:\n" + e.Message); } That way, we'll have an idea of what exactly is going wrong, because you're just assuming you can't connect to the database, which may not be the issue. Could you do that and give us the output?
Thanks this is very useful. I appreciate your time very much :)
Yes... I agree :D
Also try to use parameters for the sql command instead of inlineing everything. That way most errors that are from invalid input values can be found.
I have done that and it says "Column count doesn't match value count at row 1".
am having problems using the parameters. Am a newbie and I don't have my hands on it yet. I will be very grateful if I get a link that explains it thoroughly. Thanks. 
It appears that you have 13 columns in the INSERT INTO ... clause but are only supplying 11 in the VALUES ... clause. And, use parameterized queries as job_test suggested. (Specifically, it looks like you're missing the Reg_Date and User_ID fields.)
oh okay. Am not good at using parameters. Can I get a link.
Here's a [StackOverflow answer](http://stackoverflow.com/a/652999/29638) that uses the MySQL connector in C#. An insert/update command would work pretty much the same except with `ExecuteNonQuery()` instead of `ExecuteReader()`, `ExecuteScalar()`, etc. Because it inherits `DbCommand`, the `MySqlCommand` should share a similar syntax with any of the other connectors out there. This is a fairly big topic, especially once you realize you can get outside of the DB-specific box.
Your code: ... DTPuserDOB.Text + "','" + imgContent + "', ... Where's the data for Reg_Date and User_ID?
Use .Equals() instead of == assuming you're comparing reference-type objects. [Here's a decent MSDN blog as to why.](http://blogs.msdn.com/b/csharpfaq/archive/2004/03/29/when-should-i-use-and-when-should-i-use-equals.aspx) 
Thank you very much it worked. I would be grateful if I get the link to how to use stored procedures. 
Yeah.. I have worked on that and it is working fine now. 
Well! I know my brain hurts. Am a newbie. Can you help me as to how to do that. :-)
Ok, where to begin! I'll start at the top... the first thing you're doing is reading in binary data using readers/etc. Technically nothing wrong there, although you're not disposing of things properly. Learn to use the 'using' statement. Learn what IDisposable is. Having said that, just use this, it's much simpler: byte[] imageData = File.ReadAllBytes(@"D:\your.jpg"); That's the first 10 LOC down to 2. Next - don't store your connection string in code like that... Use config files: ConfigurationManager.ConnectionStrings["MySqlConnection"].ConnectionString Your MySqlConnection should be contained in a using block, as should your MySqlCommand. The MySqlCommand should be a prepared statement: cmd.CommandText = "INSERT INTO user_table (First_Name) VALUES(@First_Name)"; cmd.Prepare(); cmd.Parameters.AddWithValue("@First_Name", "teppicymon"); cmd.ExecuteNonQuery(); I'm afraid I can't test that, but that's the gist of it... Last bit of code tweaked from http://zetcode.com/db/mysqlcsharptutorial/ Hope that helps!
 MySqlParameter P_ID = new MySqlParameter("?id", MySqlDbType.Int32); MySqlParameter P_ID.Value = someIntegerValue; cmd.Parameters.Add(P_ID); // cmd is your MySqlCommand Rinse and repeat...
For those interested, another way of doing this is like this: int count = YourList.Intersect(MasterList).Count(); It's also possible to supply your own comparer to the intersect method so you don't need the selects, but if you don't, it'll just use .Equals() for comparison. And if you want to count the ones that don't match, simply replace Intersect with Except, and it'll take the matching ones out.
Better to save the pictures to the file system and save the path string of the file in the DB instead of storing binary data in the DB itself. 
Thank you very much.. I will work on it and give a reply.
Pssst this is C# code...
Can anybody say "SQL Injection attack"???
He/she should also stop login in using root!
oh okay. Am working on that. Thank you.
http://www.devart.com/dotconnect/mysql/docs/Parameters.html should help a little at least. Just remember that no sql query should be created by concatenating strings with the data directly. If you always use parameters the code is easier to read and a bit safer...
So? http://www.reflector.net/ is one example.
Is it really worth $200?!
Don't disable it. They will just chuck it out and rip off someone else. Instead, hardcode the styling so that its all pink and pretty with "Now you pay sir" written at the bottom. You could also hardcode a link to a js file on your servers and do whatever you want when the trial runs out. My personal choice would be having something that degrades over time visually. For example text that each day rotates 1 degree or the background go 1 shade darker until its black like the text. You could just call that a bug aswell and say you will fix it for the price of the contract. You can also programatically shut down a computer easily. Random timer with a shutdown command! Would be infuriating to figure out as its random (make it a reasonably long wait e.g. Rnd.Next(0,100) where the value is hours). Intermittent issues are the most annoying. Occassionally move the log in button and switch the username and password fields round. You could get it to write massive files every so often in random places so their hd fills up constantly. I am a little bit jealous you get to do this. I would have a field day doing this sort of code! 
Used Windows 8 for anything serious. Nobody Ever.
If you have the resources you could use an external web server to handle all your requests. "http://www.blah.com/getInfo.php?name=Bam1" would return all the information in the MySQL database on the user with the name Bam1. Node.js could be used instead of PHP if you wanted.
That's pretty cool. I didn't even know about Nancy. I love Heroku but for .NET apps, I've been happy with AppHarbor. Also, I wonder what editor/IDE he uses if he forgoes VS?
I use MonoDevelop and vim.
Cool. I'm learning quite a bit today. MonoDevelop looks pretty great. Do you use it because you mostly write Mono apps? Or do you use OSX/Linux? Other?
I use it because it's free, open source, and I'm on OS X :) I also work at Xamarin as a designer working on MonoDevelop and other tools–it's a great IDE with a very bright future!
That's great. Good luck to you guys.
Use an intermediate http server and connect to it over SSL. no one does direct client connections unless they really can't get around it. 
The best thing about this post is how well the thumbnail sums up the content!
Use WCF!( or WebApi)
Http isn't overhead, I promise. The main thing is that http is less sensitive to latency. "Expensive" operations really happen between the web server and the database. That shields the client from excessive wait times for large queries to run. The web server can also cache responses and query results. It's just a better model. It isn't a free lunch mind you...you can still frost over the UI thread by doing long running tasks on it...but its much easier to handle intermittent weirdness over the network with http. If you are starting from scratch look at something like asp.net web api. It's really simple to work with. There are other opensource projects that are good too...in fact, Service Stack is probably better. As far as security goes...there are several ways to do this ranging from the simple...posting username and password over SSL...to the complicated...using ADFS. (It isn't that complicated...but you get my drift) Do you need AD groups? Does the database have the credentials? Asp.net has membership and profile providers that can be exposed via "Client Application Services"... In a prior life I walked into a job that had a windows app that was 2-tier. It connected to a database over the internet...they didn't even use ssl. It was crazy. Anyway, you can't really test all of the weird connectivity scenarios and the effects that they will cause on the database client. Using a web server keeps all of that application to database traffic contained in a datacenter somewhere. It's much more forgiving. Anyway, at that place we ended up having to deploy it via terminal services so that the app actually ran closer to the database and the UI was sent via RDP. It's not a bad way to go if rewriting the client turns out to be a political or technical problem. That's what you get for taking a job just because it is walking distance from your house.
Thanks. I didn't know about Nancy, but now here I am having largely ported a dev project over to it just today, up and running, on a CentOS VM. Yay. Also a Xamarin user (MonoDroid).
It looks like ctr never matches any of your if statements. Your variable ctr is set to 0 and your following if statements are looking for values greater than 0. You may want to change your first if to if ((ctr &gt;= 0) &amp;&amp; (ctr &lt; 9))
Use delegates. For the sake of completeness, here's how you declare one: delegate &lt;return type&gt; &lt;name&gt;(&lt;parameters&gt;); For example, delegate bool MailValidator(string title, string content); Most of the time, the pre-declared ones (in the System namespace) - Func and Action - should be enough. "Func" is a generic delegate that returns something while "Action" returns void. So "Func&lt;string, int&gt;" takes a string and returns an int while "Action&lt;string, int&gt;" takes a string and an int and returns void. If you have a method, say, "void DoSomething(int param)", it can be automatically converted to "Action&lt;int&gt;". These delegates can be used as method parameters. So if you have these two method declarations: public static void Benchmark(Action action, int iterations) {...} public static void DoSomething() {...} you can do this: Benchmark(DoSomething, 42); Lambdas are implicitly convertible to delegates, too: Func&lt;int, int, string&gt; append = (a, b) =&gt; a + " " + b; string result = append(1,2); // "1 2" The answer to your question should be clear now: just have a method taking the delegate you want. IMHO, if you have one or two parameters, you can use Func/Action, but if you want more parameters you should create your own delegate type.
You can create a delegate type delegate void ScriptCommand(string args); the addscript function void AddScript(string name, ScriptCommand command) {} and then the user function void Walk(string args); Then the user could just write AddScript("walk", Walk); If you need to pass a context into the walk function (it isn't defined on the same object as the AddScript command) you can use AddScript("walk", x =&gt; x.Walk()); 
what is Reflection? Im not exactly a noob, but not an expert either xD
Welcome to C#. Delegates. Without going in to too much detail about them, I would simply recommend getting a copy of CLR via C#, its brilliant. Richter explains better how they work than I ever could. What you speak of is an Action. Its a method you want to call that requires no parameters. if you've got public void AddCommand (string identifier, Action shouldInvoke) you can save those actions in a dictionary. Then simply call it like: shouldInvoke(); Easy :) If you don't want to spend hard earned on the CLR via C# (which is a brilliant book if you really want to learn .Net and C#) then google "Introduction To Lambdas C#" or bing if your that way inclined.