Gotcha. MS always confused me by naming it conditional operator, as a singular use rather than a class of, when it has conditional logical operators.
1, Assert your expectations, validate input. E.g. an API could give back a response like "not logged in" and "{'name':'Bob'}" at times. You should make sure whether you can translate the response properly to model objects. 2, Follow the DRY principle, but don't be strict about it. Sometimes, it's really easy to spot different places in code, which can be refactored under some "brilliant" abstraction, but as the requirements change, you'll find yourself in a situation, where you need a slightly different approach with feature A than feature B. That's when hacking starts. By having as small classes as you can, you can avoid these sorts of problems.
I stand corrected! Was a bit tired when wrote that comment...
I'm not sure I understand the problem. It is one operator, with one condition. It's just made of 2 characters in combination.
An integration test is by definition variable based on the system's current state at that moment. Integration testing is unit-testing without taking away the communication with external systems like the DateTime API. 
The naming. A conditional operator does not convey that it is a singular operator and not a type of operator when hearing the name. It confounds the problem of ternary operators being a name of a type of operator, but only having a single use.
This works to an extent for me. Im getting an error (553) file name not allowed or something like that.
Why not ask in stackoverflow? Reddit is not the appropriate place for Q&amp;A like this.
You and several other users have given me great answers and links to excellent sources of information! Many thanks!
Why not ask in stackoverflow? /r/csharp is not the appropriate place for Q&amp;A like this.
Yea I meant to mention that in my post that solution probably doesn't help much if you have to use that PDFReader. I'm not very familiar with that object, but maybe look for some stream based mode for that as well. Like maybe write the file to disk as in my solution and then open the PDFReader in some stream mode and break it up that way. Either way, sorry If I couldn't be of more help, but now you have an example of another way to read big files from a SQL DB. 
Why isn't it?
You can use a enum to give human readable names to your items. It works much like using an int just makes it easier to read. I am on my phone or I would link some reading materials 😊 a quick google search should give you a better explanation 
Add both the columns to the data grid. Write a converter that changes a boolean value to a visibility enum value. Bind the data grid column visibility property to the is checked property of the radio button. Use your converter to change the visibility based on the boolean value of ischecked Edit: Doh winforms
By default you can press F12 on any symbol to navigate to its source. If the source is in your project, you can review its code directly. If the source is an an assembly referenced by your code, you may be able to read its comment summary to get an understanding of its use.
Also the ? after a type in a variable declaration makes that variable nullable. This allows value-type variables such as int or DateTime to be null when they otherwise couldn't be.
Actually the **?** appears in multiple locations. The most commonly confusing is: int? someInt = 5; [C# calls it a "nullable" type. Basically it allows you to assign null to a value type. If I am not wrong, the distinction is that one lives in the heap and the other lives on the stack](https://msdn.microsoft.com/en-us/library/vstudio/ms228597.aspx). In other words ValueType? is a reference type. For beginers, if you see this in your examples, move onto an example that doesn't use this. There are very specific times when you would use something like this and there is no need to concern yourself with it until later. Once you have a much more solid grasp of programming and what the difference is between reference/value types are, you can start exploring this.
Thank you. I played around with that and it looks like it will work. I had to change my overall plan. I originally wanted to try and run the code from the c# app. But I asked some devs I know and they suggested I use c# to call and pass parameters to an external script. Your method will help do that thanks for the link. 
Thanks! That's a great idea!
How exactly is this related to C#? 
I'm writing this from my phone so I may be slightly off. Observable.Throttle(...).Merge(observable.timer(...)) When I'm in the office tomorrow I'll post a proper example, and clean this up. 
[Nullable&lt;T&gt;](https://msdn.microsoft.com/en-us/library/b3h38hb0%28v=vs.110%29.aspx) is a struct and a value type. 
This is pretty simple. You are unlikely to pass the test if you are unable to write this code. I'm not sure if you'll find someone here to help you with homework because it's a double edged sword, it feels nice to help someone but then they become your colleague and have no idea how to code because they asked others to do it for them to pass their qualification. The instructions give you more than enough information to compete this task including a formula for how to work out the increase.
And you expect people to help you cheat? A true future business major!
Sorry, should have said "... is a struct *and therefore* a value type."
It's cheating nonetheless.
Well, this assignment is your 'job' as a student. C# is not some secretly guarded knowledge. Look at the hints, TryParse? Google "TryParse msdn" and you'll get working example, repeat for every other mentioned hints. You already get 95 so at least you know how to put some simple program. And you can do this in Excel so you understand the algorithm. All it takes is just learning bit function and syntax here and there, just like when you learn about Excel.
Some processes buffer standard output in 1k chunks when no actual console is attached. What process are you trying to do this with? 
https://github.com/mono/ngit Edit: it's also on nuget. 
&gt; which sometimes works and sometimes it doesn't That doesn't really tell us much about the issue. Does it crash? Do you get an error? What happens when it fails? Post your logs.
I would if i could. There are no logs, ADB is emtpy, there is no alert or error message, it's uncatchable. The closest i've gotten to an analysis is stepping through it. but when i do step by step it always works. That's what leads me to believe it's some kind of race condition, and i'm to new to C# to know how to fix it.
I don't think your 3rd line works, it should probably be something like: string responseString = await responseBody.Content.ReadAsStringAsync();
This is an excellent resource. http://www.csharp-station.com/ It covers the concepts of C# and if you read through the C# tutorials you will get a reasonable understanding of OOP and the c# language. Also if you select a type e.g. click on the word string in visual studio and click f12 it takes you to the definition. It won't show all the code but it gives the method names and an idea of the structure. 
If you compared them using the Ticks property (which is also in a constructor) you wouldn't have a problem with millisecond drift interfering with repeatability.
p1.Show(); throws the exception - I use a window from where I open this new window as you can see and then I get this exception thrown. private void Button_Click_1(object sender, RoutedEventArgs e) { prikazDokumK p1 = new prikazDokumK(); p1.Show(); this.Close(); }
Use stopwatch or timer inside a function thats called via delegate. Inside the delegate function code; if(LastUpdateTime &gt; DateTime.Now.AddSeconds(-1)) { DostuffToReceiveUpdate(); }
Check [this](http://stackoverflow.com/questions/9418404/cant-connect-to-ftp-553-file-name-not-allowed) link out for that error. 
when you are done in this thread, you might want to change your API key.
Working with EpiServer as of late, it certainly isn't free but it's a pretty decent product. There are some definite pain points with it however. (Stay away from their Commerce Platform, it's garbage)
Sorry, no. Podcasts have never really been my thing.
I'll have to try this out when i get home. I appreciate it. Thanks
Then use this instead: BannedChampion firstChampion = game.bannedChampions.First(); string championInfo = String.Format("ChampionId: {0}, TeamId: {1}, PickTurn: {2}", firstChampion.championId, firstChampion.teamId, firstChampion.pickTurn); textBox.text = championInfo;
Try .netrocks it's more theoretical/informational but good to discover new things and keep up on trends in the car
Thx, i´ll definitely check that out
Check this one: http://extensionmethod.net/csharp/int/israndom it is obviously without doute a joke. Well at least i laughed, so i didn't really waste my time :)
If you can write the file in a different format, you would be better using XML to serialize the tree in the first place. see this :https://msdn.microsoft.com/en-us/library/bb387011.aspx 
You must have a reference to something. That code doesn't work under VB for me. In VB: Right click on the GetLibraries function, and select Go To Definition. That will bring you to the object browser and you should be able to see what assembly it's in. 
Yea... I should have thought of that. (I could blame it on the massive headache I have... but the fact is I just didn't think of it.) I edited my original comment with the link. Thanks kindly
What have you tried so far?
Ok a few things here: 1. You should not use inline SQL in your code, it can in some cases make your code vulnerable to SQL Injection. 2. Make sure to clean up after yourself, if you open a connection, close it (you weren't born in a barn, were you?) That said, think about what the code does: 1. Opens a connection 2. Runs your query 3. Fills up your ComboBox If you were to make a method that takes a query and spits your results back into a list, I imagine that you would be able to use that list to fill a ComboBox. Without giving you the code (because this will help you learn better), the result should look something like: IEnumerable&lt;string&gt; activityBoxList = GetComboBoxItems("your activity query here"); IEnumberable&lt;string&gt; productBoxList = GetComboBoxItems("your product query here"); activity_box.Items.AddRange(activityBoxList); product_box.Items.AddRange(productBoxList); You should look into using Entity Framework to handle your database queries, it is much more secure and easier (IMO) once you learn it.
So... Free bug fixes?
So I have it solved. [**Here's**](https://gist.github.com/anonymous/ee400ca07bbcef72056d) my code. The necessary lists are showing up in my comboBox when I run the program, but I am opening my database at three locations as you can see in my code using *conDataBase.Open();* at lines 33, 61, and 87. How can I close the connection automatically when it's done? Is there a cleaner way to format my code to take better advantage of this 'opening' and 'closing' of connection to the data? 
Close the connection at the end of the method. You repeating code. All three methods are the same. Create a new method that takes your SQL command and returns a list. Fill your combo box from the returned list.
Good work and good questions. Yes, there is a cleaner way to do that. You can use a [using statement](https://msdn.microsoft.com/en-us/library/yh598w02.aspx) to handle the disposal for you. Regarding your changes to your code, you may want to break out repetitive blocks into a method. You can take an argument (in this case your sql query), and return a list. Something like: private IEnumerable&lt;string&gt; GetComboBoxData(string query) { // Your logic to run the query and return the results here } Then you would use it like I did in my first reply.
&gt; Close the connection at the end of the method. Sorry, I've been learning C# for three days only by following a tutorial on youtube. At the end of which method do I put *conDataBase.Close();* exactly? More specifically, which line of code? 
After your while loops, once you are done using the reader. Line 41, 69, 95
I think I got that part working. Now however how can I resize the remaining columns to take up even amount of space if the one of the columns visibility is false. 
I know what an integration test is. I'm asking if you think that means that an integration test doesn't need to be repeatable? What good is a test if it is not repeatable?
You open on lines 33, 61, and 87 with the Open() method. Each method ends and the SqlConnection object is disposed of and reclaimed by GC, but the connection was never closed. Whenever you access an external resource that requires opening a file stream or networked connection, you **must** close that stream/connection when you're done with it so as to allow other applications to access those files as well.
Without seeing the actual code it's difficult to say what's going wrong. But it sounds like you're simply blocking the UI thread in your code. So even with *running on it's own thread* you probably do something wrong.
Pastebin, or github are decent ways of doing so
What is the full exception? Cross Thread?
Another crappy advertisement post from this company. They really seem desperate.
While this guy clearly knows what he's talking about, the utterly arrogant and patronising way he presents his findings make him look like a smug first year CS student. 
What are you even trying to do? All im seeing you get a date (yyyy-MM-dd), take out parts of the date to re-create the date in different order(dd-MM-yyyy) and then parse it back to get the same date but a different time since you omitted the time...
Na. A first year student wouldn't have backed up their claims with links. Just said it sucked and moved on.
&gt; string str_DateCreated = dt2.Day.ToString().PadLeft(2, '0') + "-" + dt2.Month.ToString().PadLeft(2, '0') + "-" + dt2.Year; //str_DateCreated = "20-03-2015" var dateCreated = dt2.ToString("dd-MM-yyyy"); edit: removed hungarian notation. edit2: also as /u/NonusDotNet points out: this code is doing nothing worthwhile at all. What's the point? Why are you even converting `reader["DateCreated"]` which I would assume is either of DateTime or DateTimeOffset already to `string`, and then parsing the result, then taking that *already parsed once* result into a string, and then parsing *that value* one more time? If you want to strip time information from a date simply take the [Date](https://msdn.microsoft.com/en-us/library/system.datetime.date%28v=vs.110%29.aspx) property of the DateTime. var date = ((DateTime)reader["DateCreated"]).Date; Assuming `reader["DateCreated"]` returns a DateTime instance.
Pretty good review, mid level knowledge needed to understand but not too technical. I'd love to see xunit tests to point out the bugs so they can fix them for the core stuff. XUnit because that is what they are apparently using going forward. Given your specialization, that would help the community as a whole. Not to mention tests and fixes for the base64 stuff.
Yea, so, don't. 
When you inspect the DateTime value in the IDE it will always show it to you as your culture specific value as defined by the OS. If you're in the US and want it to show you something other than "MM-dd-yyyy", change the date format under region settings in the control panel. This is why you need to override your CultureInfo to get a different date format. Is this what you mean? If you're trying to use the converted DateTime format for sorting as "dd-MM-yyyy", it's not going to work the way you want because it doesn't internally store the date formatted as "dd-MM-yyyy". Internally it's stored as a numeric data type, i.e. 42081.3993504244 formatted as date.time (drop the decimal places for the date only) which is what gets used when sorting. 
So changed it in Control Panel and it's now working sort of :3... Thanks a lot. 
&gt; var dateCreated = dt2.ToString("dd-MM-yyyy"); That's quite helpful. As for what it does. It gets a date value from the database and that place the date with some other values in a jtable. I need to get the value in 'DateTime' for sorting and in the correct formate ('dd-MM-yyyy') because people might be confused ._.
 foreach (Win7Library o in Win7Libraries.GetLibraries()) { Console.WriteLine(o.Name); }
Thanks, however now that I know it's a class someone created I was able to use it. I found that class 4 years ago and forgot that it wasn't part of the .net framework. Nothing makes me feel dumber than having the answer and not knowing it. So, thanks again. Have a great weekend
https://gist.github.com/
It would definitely help to see the code. However, I have some questions that might help figure out the issue: * How are you running the second thread? * Are you running a timer on the UI thread and kicking off another thread to send the serial data each time a specified interval elapses? * Are you kicking off a second thread once and running the timer on that thread? * Are you using events? * Something else? * What kind of safety checks do you have in place? * Do you have any kind of check to ensure that you aren't overloading the serial buffer? * Do you have any kind of check to ensure two threads aren't trying to send serial data simultaneously? * Do you have any kind of check to ensure that SendSerialData() isn't called while it is already executing?
Can you get me a link for 2010 Express?
Please stop using XNA and use Monogame
You can install it for VS13 too. I had to do a school assignment to make a game in XNA and we used VS13 in class. If you want to try something else like XNA you can try SharpDX.
Thanks! Some 30 pages in and really like it so far. Quite entertaining too!
PluralSight. Paid but worth it.
SharpDX is closer to the old Managed DirectX stuff, that's even older than XNA. Monogame is much closer to XNA. 
Hi, Sounds like a situation that inheritance could work for. Strongly recommend you read through the tutorials on: http://www.csharp-station.com/ Essentially below I have created an interface for a place. Every object that implements place must have the methods defined in the interface. This makes it nice and easy for any place... just call RenderScene() when you need to draw the place. You could implement it to work for Woods - e.g. PineWoods or OakWoods or MixedWoods etc. If you copy the code below and paste it into a new class file then create a new DoWork object and create a new variable and set it to be the return of DoCave. So at the top we have a Place. Place is implemented by Cave. Cave is implemented by both DarkCave and LightCave. E.g. DoWork DW = new DoWork(); var myCave = DW.DoCave(); Console.Clear(); Console.Write( myCave.RenderScene()); foreach (var opt in myCave.Options()) { //display options to user } This cave will either be light or dark depending on the random! DoCave() is the code that gets executed initially. See following (very rough) knocked up code for example: public class DoWork { public void DoCave() { Random R = new Random(); Cave C = null; switch (R.Next(0, 1)) { case 0: C = new DarkCave(); break; case 1: C = new LightCave(); break; } C.Initialise(); } } public interface Place { void Initialise(); List&lt;string&gt; Options(); string RenderScene(); //assuming you are piping text to console to show a new place string PlaceName(); } public interface Cave : Place { CaveType caveType(); } public enum CaveType { Dark = 0, Light = 1 } public class DarkCave : Cave { public void Initialise() { _Options = new List&lt;string&gt;(); _Options.Add("switch on lights!"); } public string PlaceName() { return "Dark Cave of doom"; } public string RenderScene() { return "dark cave ascii"; } private List&lt;string&gt; _Options; public List&lt;string&gt; Options() { return _Options; } public CaveType caveType() { return CaveType.Dark; } } public class LightCave : Cave { public void Initialise() { _Options = new List&lt;string&gt;(); _Options.Add("switch off lights!"); } public string PlaceName() { return "Light Cave of illumination"; } public string RenderScene() { return "light cave ascii"; } private List&lt;string&gt; _Options; public List&lt;string&gt; Options() { return _Options; } public CaveType caveType() { return CaveType.Light; } }
There are probably other, better ways to do this, but the simplest solution would be: Tables * Workflow (Id, Name, Description, FirstStepId, ...). * Step (Id, Text, ...). * Response (Id, Text, StepId, NextStepId, ...). From the end-user viewpoint it would be - user chooses the workflow, first step is shown along with 1...n responses. Choosing a response will send user to the step defined in Response.NextStepId, or if NextStepId is null, that particular flow has ended. One Step can belong to several Workflows, providing the responses and next step remain the same. If the same responses/next step requirement this is not an acceptable, then you'd have to either copy the step when adding the new workflow or go for a more complicated solution.
It's pretty basic stuff. 1. Can you access the internet? Yes, go to 4. No, go to 2. 2. Can you access the intranet? Yes, go to 4. No go to 3. 3. Check your proxy settings. 4. End. 5. Call helpdesk. That kind of thing. Nothing complex. The basic idea is to get users to follow steps to try and fix things themselves via a workflow to reduce the load on the help desk.
Well, events for one. Actually, that's pretty much it.
Yeah i managed to answer my own question by examining Visual Studio Features. Events is certainly a main feature provided by the Visual Studio, but the fact that it's GUI itself is a great asset to EDP due to the fact that you can insert functions onto your Windows Form and the default code is already written. Thanks for the response anyway.
Available only tells you how much is received right now, not how much is sent. It is not a reliable way to tell if a message is fully received and should not be used for this purpose. There are two sends. esp. on a local nethwork, the first send is received directly and just before the second part is received, available is 0. Tcp, although used everywhere, is an often misunderstood protocol. There are even many broken messaging implementations in the wild. The following article (not written by me) explains the problem: http://www.codeproject.com/Articles/37496/TCP-IP-Protocol-Design-Message-Framing Note: when using delimiters (or length prefixing with buffers larger than strictly needed), the last receive of a message containing the delimiter can also already contain the first part of the next message sent by the client. Finally also make sure you don't wait forever for the number of bytes read from the length prefix or for the delimiter. A timeout should be used, mostly one on the delay between receives (whole message timeout will not work for very large messages and mostly times out too early, or you'll have to wait too long for failed shorter messages) All in all it is hard to get right...
What you're doing makes no sense. You're taking a datetime object, outputing it to a string, and then putting it back into another datetime Of course you're back where you started. A datetime object represents a specific date and time, NOT how its displayed. Eg, Mid-day 3rd January 2015 January the third, at mid-day The third day of January, in the year 2015, at 12pm exactly 2015-03-01 12:00 2015-jan-03 12:00 03/1/2015 12pm These all amount to EXACTLY the same value if cast to a datetime object . A datetime is NOT its string representation - it is the raw logical object data that ENABLES a string representation. All you need is the datetime , and how you want to view it, IF you want to view it, as a string format. Eg, string str_DateCreated = dt2.ToString("dd-MM-yyyy"); //str_DateCreated = "20-03-2015" How your computer, debugger, whatever displays it is totally irrelevant. You could write DIRECTLY under that line : string str_DateCreated = dt2.ToString("MM-dd-yyyy"); //str_DateCreated = "03-20-2015" To answer your direct question, you already GOT the datetime in line 1, but I would recommend DateTime.ParseExact() instead of Convert.DateTime() This whole concept of having internal strong Data Types is what makes .NET so beautiful to use Using your string based method, lets say you have a date and need to add 1 month to it. You need to cast to a string, split into its constituent parts, add 1 to the month value and cast back Now you need to check that you've not ended up with 29th of February...but then you need to check if its a leap year...or what if you've ended up with a month value of 13? Because .NET understands the concept of dates and times, and it maintains this data type, you can just say DateTime myDate = oldDate.AddMonths(1); You can then write it to screen, database, other frameworks in whatever format you want Suggest googling for "c# DateTime string patterns" ... But also suggest re-visiting some c# fundamental lessons as you've obviously missed some core concepts
+1... Will these JIT down to common assembly instructions? For example on x86, `static float Cos(float ang);` should JIT/inline out to be something little more than fld qword [ang] ;load angle into st0 fcos 
Forgive me as I am as much as a noob as you but I was playing about with doing exactly this the other day so thought I'd try weigh in. You should be passing a model to the client.Execute as so: IRestResponse&lt;Operation&gt; response = client.Execute&lt;Operation&gt;(request); My Model looks like this, and it matches what I expect to be returned via XML or JSON namespace IntegrationServices.Models { public class Operation { public string operationStatus { get; set; } public int accountid { get; set; } public string message { get; set; } } } You can access Response.data and all your data will be in there, de-serialised. I don't believe you need to set JSON specific settings anywhere as it auto sniffs the return data type. Could be completely wrong, but it works for me!
System.BitConverter is an existing class and is distinctly separate from System.Convert. Where System.Convert is used to convert between primitive types, System.BitConverter is used to convert to/from an array of bytes or the internal bit representation of a value. I believe the community in general will end up split as to where to place the new APIs (in the primitive types themselves or in combined static class). In either scenario, we will have at least two distinct locations for the previous math functions and the locations of the new, so-as to maintain backwards compatibility. I believe the most logical solution would be to move the APIs to their respective primitive types and, moving forward, provide a class such as 'MathHelper' which would provide all the overloads in a central location. I was the commenter that mentioned the 'using static System.Math.SingleMath' issue, and while the most popular languages (C#/VB) support it, this will be part of the CoreCLR and needs to fit in with all languages and should be easily accessible. Finally, I do not understand your statement that the CLI spec doesn't distinguish between float/double and so it won't be CLI compliant. Just searching for 'float', 'single', or 'double' through the CLI spec and reading what comes up clearly and distinctly shows that they are considered separate and are both CLS compliant. * See I.8.2.2 - float32 and float64, both CLS Compliant Types * See I.8.7 - "Unless explicitly indicated any reference to floating-point types refers to the nominal type" (float32 or float64). The closest statement to them being the same, is in I.12.1.3, where they are of the same size on the internal evaluation stack. However, the actual JIT compiler will optimize most of this away and will not convert them to the same size when performing computations unless required by the underlying hardware.
This is the correct way to do it. There are tools that let you paste in your JSON and it will create your models for you, like http://json2csharp.com/
http://en.wikipedia.org/wiki/Book Stop using Google for homework.
WTF are you talking about. That's the most professional code review I've read in ages. And it's exactly the sort of thing we need to see more of on reddit. You sound like a fan boy whose pissed off that someone dared to challenge whatever it is you are idolizing. 
And if you're doing a anything beyond the class, please use mono game instead of XNA. It's got better platform support, isn't abandoned, and the differences are minimal.
So in what cases would you ever want to declare private fields, when you can just use public properties?
That looks like it would do the job nicely. Thanks for replying.
I figured it was something like that ... and I am replicating http, so I do have content length (*though, in this case, it didn't matter, as it cut off before any was read*) this is some older code of mine I've resurrected for another purpose ... I ended up with available as, oddly enough, simply using read bytes would leave me short on file uploads not sure why this code otherwise works so well for file uploads (*from an actual browser*), as I doubt they only issue one giant write for my purposes, the single write seems to solve the problem, but in case I repurpose the server code again, I'd like to try to bulletproof it I'll see if I can interject a wait, with a timeout w/o making a mess of what's already working thanks! 
Couldn't you use an onchange handler to call a method that gets the text and use toLower (or whatever the C# equivalent is)? 
Thanks for the help. A lot of what you said went right over my head so I'll have to reevaluate what I thought I knew about all of this stuff. However, I did play with my code and this is what I have now: internal static object GetFollowers(string channel) { var client = new RestClient(@"https://www.hitbox.tv/api"); var request = new RestRequest(@"followers/user/{channel}", Method.GET); request.RequestFormat = RestSharp.DataFormat.Json; request.AddParameter("channel", channel, ParameterType.UrlSegment); IRestResponse&lt;Follower&gt; response = client.Execute&lt;Follower&gt;(request); var followers = response.Data; return followers; } How badly have I screwed that up lol? I did make a Follower class with the data like /u/Thornsten suggested so that's what is going on in the Follower class. Also, if I didn't screw this up how would I now take this information and populate WPF object (and which WPF object would be best)? Sincerely, SoConfusedRightNow
You can control a properties access level individually for the get/set methods. For example, you can define a public getter but a private setter. Do this by adding the access modifier in front of "get" and "set" within the property.
He knows.. :)
Don't use OnChange. Use OnKeyDown or OnKeyPress and modify the key to the case you want. https://msdn.microsoft.com/en-us/library/system.windows.forms.datagridview.onkeydown(v=vs.110).aspx
What UI framework?
That's exactly what I did.
The problem might be that you don't understand the relationship between C# objects and JSON. JSON is just a string representation of a C# object. So if you had a person class and an address class: class Person { string name; int age; Address address; } class Address { string street; string city; } And then you create some: Person jim = new Person { name = "Jim", age = 42, address = new Address { street = "Elm", city = "New York" } }; Then if you serialize that to JSON you get: { "name": "Jim", "age": 42, "address": { "street": "Elm", "city": "New York" } } If you then take that JSON and try to deserialize it using just the `Address` class it won't work, because the JSON doesn't just represent an `Address`, it represents a `Person` who has an `Address`. The same is true with the JSON you're trying to deserialize. It's not just a single `Follower`, so trying to treat as one when you deserialize it will never work. 
Override the handler for text input, and then call the base with processed text? I would give you an example if it was WPF and not windows forms.
Is this the answer your're looking for? http://stackoverflow.com/questions/4742960/datagridview-validation-changing-cell-value (top answer)
Put in a breakpoint, and step through the code to see what values change.
The best thing to do here is when the user chooses to save the text in the view, before it's sent to your database (or whichever data storage method you use), do as others have said and do something like: string lowerCaseText = gridViewText.ToLower(); and THEN save that text.
This makes me uncomfortable.
There's still the time to build the model; It's worse on Code first because right now, Code First essentially 'builds' the EDML at runtime and then loads that, versus DB First where the EDML already exists.
Would you prefer `null + "foo" == null`? That's how T-SQL works.
agreed, as long they don't block you account for absolutely no reason. :(
out of curiosity, what kind of exception? you might think NullReferenceException, but that is only thrown when you "try to access a member on a type whose value is null," which you would not be doing here. maybe InvalidOperationException? "The exception that is thrown when a method call is invalid for the object's current state." no to that also. ok, ArgumentNullException then. "The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument." but, turns out this is not true either! you could just change String.Concat to throw ArgumentNullExceptions when one or more parameters is null, but the semantics of saying "you invoked this method incorrectly" is pretty awkward when you didn't explicitly invoke a method at all.
Exactly what I was going to say. I want any interaction with a null value to blow up because something else likely went wrong somewhere down the line.
It started working! Thanks for the help though! 
It started working! Thanks for the help though! 
Wasn't sure how to best correct this, but this is the solution that I was trying to describe. Mainly I did the reply earlier to remind myself to fix it, so sorry about the prior confusing and incomplete reply. This is a good reference for reactive functions. http://rxwiki.wikidot.com/101samples#toc29 Short Version observable.Throttle(TimeSpan.FromMilliseconds(500)) .Merge(observable.Sample(TimeSpan.FromSeconds(3))) Throttle - will get triggered if there is no input for 500ms Sample - will get triggered every 3 seconds Sample static IEnumerable&lt;int&gt; GenerateRandom() { Random random = new Random(); int i = 0; while(true) { if(i &gt; 1000) { yield break; } yield return i; Thread.Sleep(TimeSpan.FromSeconds(random.NextDouble() * 2)); i++; } } void Main() { IObservable&lt;int&gt; observable = GenerateRandom().ToObservable(); observable.Throttle(TimeSpan.FromMilliseconds(500)) .Merge(observable.Sample(TimeSpan.FromSeconds(3))) .Subscribe(_ =&gt; { _.Dump(); }); } 
if you're relying on exceptions being thrown for your application to work correctly, you may be using exceptions as control flow, which Microsoft [recommends against](https://msdn.microsoft.com/en-us/library/dd264997.aspx)
I'm sure there was a reason.
I am still trying to figure it out. I tries to publish my code a few times and it failed,then my account was disabled. Still waiting for support to tell me what happened.
I am still trying to figure it out. I tries to publish my code a few times and it failed,then my account was disabled. Still waiting for support to tell me what happened.
Namespaces are great for breaking into functional areas but they are typically "broad strokes". For example, you might have a single namespace for all IO that handles streams, text, and XML. Inside that namespace, you might have a CSV reader and writer. Now you have a very specific process, which might be harder to give examples. I could point you at other CSV processors that break things apart, but that would probably break the point of your exercise. :) Let me use one of my [utility libraries](https://github.com/dmoonfire/mfgames-cil/tree/master/src/MfGames) as an example. I have this broken down into functional areas. For example `MfGames.Locking` has a number of classes for thread synchronization. I have various wrappers around `ReaderWriterLockSlim`, some Try Get patterns that I frequently use, and the lock. They are all lock-related but each one has a separate purpose, so I have them as different classes in their own namespaces. There are some namespaces (`MfGames.Collections`) that only have a single class. Some of them have future plans or (in collections case) they had other ones but I've removed them. But, in this case, it is still dealing with the functional area of "collections" so I keep them there. *I do recommend you read about the [Single Responsibility Principle](http://en.wikipedia.org/wiki/Single_responsibility_principle).* If you aren't sure of how to organize something, use the System.* namespaces as an example (System.Collections, System.Text, etc).
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Single responsibility principle**](https://en.wikipedia.org/wiki/Single%20responsibility%20principle): [](#sfw) --- &gt; &gt;In [object-oriented programming](https://en.wikipedia.org/wiki/Object-oriented_programming), the __single responsibility principle__ states that every [class](https://en.wikipedia.org/wiki/Class_(computer_programming\)) should have responsibility over a single part of the [functionality](https://en.wikipedia.org/wiki/Software_feature) provided by the [software](https://en.wikipedia.org/wiki/Software), and that responsibility should be entirely [encapsulated](https://en.wikipedia.org/wiki/Encapsulation_(object-oriented_programming\)) by the class. All its [services](https://en.wikipedia.org/wiki/Service_(systems_architecture\)) should be narrowly aligned with that responsibility. &gt;The term was introduced by [Robert C. Martin](https://en.wikipedia.org/wiki/Robert_Cecil_Martin) in an article by the same name as part of his *Principles of Object Oriented Design*, [*[better source needed](https://en.wikipedia.org/wiki/Wikipedia:NOTRS)*] made popular by his book *Agile Software Development, Principles, Patterns, and Practices*. Martin described it as being based on the principle of [cohesion](https://en.wikipedia.org/wiki/Cohesion_(computer_science\)), as described by [Tom DeMarco](https://en.wikipedia.org/wiki/Tom_DeMarco) in his book *Structured Analysis and Systems Specification*. &gt;Martin defines a responsibility as a *reason to change*, and concludes that a class or module should have one, and only one, reason to change. As an example, consider a module that compiles and prints a report. Imagine such a module can be changed for two reasons. First, the content of the report could change. Second, the format of the report could change. These two things change for very different causes; one substantive, and one cosmetic. The single responsibility principle says that these two aspects of the problem are really two separate responsibilities, and should therefore be in separate classes or modules. It would be a bad design to couple two things that change for different reasons at different times. &gt;The reason it is important to keep a class focused on a single concern is that it makes the class more robust. Continuing with the foregoing example, if there is a change to the report compilation process, there is greater danger that the printing code will break if it is part of the same class. &gt;The responsibility is defined as *a charge assigned to a unique actor to signify its accountabilities concerning a unique business task*. &gt; --- ^Interesting: [^Data ^access ^object](https://en.wikipedia.org/wiki/Data_access_object) ^| [^SOLID ^\(object-oriented ^design)](https://en.wikipedia.org/wiki/SOLID_\(object-oriented_design\)) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cpmx71n) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cpmx71n)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
Look at the state of your subscription in your account. Most likely unpaid bill? Or you had a trial subscription that you did not extend?
&gt;After writing an 800 line single class with 5 methods to perform the task, I quickly realized it would be much easier to deal with the program if I broke my methods up into several namespaces using one namespace for my main function and declaring all my public static variables, I think there is a little bit of a confusion over what a namespace is. A *namespace* cannot contain anything but class declarations (and a few other things like enums). I think what you are looking for is a collection of classes that work together. Some of these classes can be *static* so that you don't have to instantiate them. Static classes are usually called *utility* or *tool* classes because they most of those functions are self contained (they do not rely upon any variables descried outside of themselves). A *namespace* is intended to help avoid name collisions. There are a lot of classes which are named the same, which causes issues because the compiler cannot implicitly distinguish between them. For this reason *namespaces* came about. Imagine the following scenario: SomeClass.cs -&gt; contains Foo class SomeOtherClass.cs -&gt; contains Foo class By now you are thinking "hey, why not rename one of the classes?". This can be done if you are in control of a DLL, but many times we are not. So if two DLLS are using the same class name, you are in trouble because you can't do anything about it, but you still need to make use of both DLLs. Namespaces come to the rescue. They add an extra layer of naming on top of things. So instead of: var myFoo = new Foo(); you can var myFoo = new SomeNamespace.Foo(); In reality, there is no easy way to explain namespaces unless you use them. Usually namespaces used for grouping code files. So you might have: namespace Code namespace Code.DAL namespace Code.BOL namespace Code.BLL which is sometimes auto generated by VS automatically based on your file structure. At the end, it is supposed to solve the following problem: namespace Code.Security; -&gt; contains class Session namespace System.Web; -&gt; contains class Session For whatever reason, the programmer decided to call one of the classes in Code.Security *Session* which is now colliding with ASP.NET's built in Session class. I hope this helps! Sorry for the really long post. 
If anyone is interested for a really good explanation as to why you should always use properties where possible, please read *Effective C#*. It starts off describing the main reason you should use properties vs Fields. Basically, because properties are C#'s getter/setter, any public field should be a property (or accessed through a property). It follows the convention that everything must be incapsulated and no variables should be accessible directly from the outside (not without a getter/setter). C# has setup properties in such a way that gives you very little excuse not to use them. They ensure that your code is far more maintainable in future. Not only that, but debugging becomes less painful, as a property is a set of get/set functions (one or the other maybe excluded based on how you define the property). You can simply put a break point on a property and it will break when something tries to access it. That is much easier than trying to chase down everything that is directly mutating the variable.
Given that strings are immutable, it's not surprising. It boils down to crating a new string in memory. Its value is the concatenation of null and something non-null. Null is presumably disregarded in this operation. The result is then assigned back to the variable that had a null value previously. 
The trial subscription expires. Then the subscription is deactivated. Without an active subscription you can not use any Azure services. This includes free websites.
Just reposting the deleted comment made by /u/likebreadandbutter. &gt;**No I don't agree with this approach at all.** &gt; &gt;The C# language should be extended to actually make use of generic behavior towards primitives (where T : BiasedStructure&lt;16&gt;&lt;16&gt; which equals float and double and whatever you derive from it) that can be mathematically used. &gt; &gt; What this would do is not smart as it is a simple specialization (in a C++ sense) to the point that it makes me angry. &gt; &gt; So here is my suggestion. Fix the language before you start to get creative.
Find all prime numbers up to 1000000 Find all occurrences of a sub string in a long string(int.max length) Calculate Fibonacci up to 10000 numbers This are my ideas for now... If you need I'll try to think of more
Great, thanks! I never expected that much feedback, this is awesome, I will fix all that :) Ad Conpanna.cs, 3: -&gt; I have set option in VS to insert spaces, but it seems like it still mixes tabs and spaces, is there any way to force using spaces? Ad Method.cs, 32: Yeah, I am aware of this I even check in unit test if it throws when invalid enum is passed, but it is indeed better to add Invalid flag in the enum. Thanks! Again, I really appreciate this amount of feedback. :-)
Nothing is wrong - I am aware that it's yet another one, I built it mostly to learn.
Above all: Consistency.
How about a Windows Forms algorithm drawing 2D lighting on an image? Like this, but in C#? http://jsoverson.github.io/texture.js/demo/
http://acm.ashland.edu/2012/problem-set.html I searched for "acm programming competition problems and solutions" I'm sure there's more ACM stuff out there. 
Fair enough. I resubmitted it because, even if you don't want to discuss it, it can be a relevant point of discussion for others in the thread.
MSDN has a recommended style guide. I'd start with that.
Perhaps a boolean array for the choices?
I wish I could translate these pdf's, but here are [the Flemish programming competition questions](http://www.vlaamseprogrammeerwedstrijd.be/current/oefenvragen.php)
Yes, but a private setter will prevent serialization. 
No. Forget about dynamic. It does not exist. FORGET ABOUT IT. You can use the solution mentioned by /u/Zeta2blabla. That will work for every type. Making a distinction just between int and float is not possible.
Game of Life. Properly structured, honoring the SRP, with unit tests, projects properly splitted so you have a core and at least two different visual representations (e.g. console and wpf).
Yes, you can. Google for "Game of Life" and click on the first link you find.
If you're using VS2013, enable code analysis on the project properties. There are a number of rulesets defined by Microsoft as best practices.
If you represent your dice as nothing more than arrays of ints, pictures, and picture boxes, then a separate boolean array to hold an individual die state would work. Alternatively, if a single die is represented as a Die object, the object could have a boolean property to indicate if it is held or not. I wrote a Yahtzee game not long ago to learn Signalr. You can look at the library code to see how I did it. https://github.com/nelsonwellswku/Yahtzee
Didn't knew that, but i'm dutch.. So it's in my language, just send me a pm if you want translation or help with something that isn't helpfull through Google Translate ;)
Don't all those problems have pretty well-known optimal solutions?
Ohh ok thanks! 
Or even: public static T[] BubbleSort&lt;T&gt;(T[] input, bool asc, Func&lt;T, T, int&gt; compare = null) { if (compare == null) compare = Comparer&lt;T&gt;.Default.Compare; This way you can sort arrays of types that don't support IComparable.
http://pastebin.com/U6ZAJJuP , i'm a C# noob, maybe this non working code could give idea ?
I'd be asking why you have something that could return one of a number of different array types... this smells of bad design and there may be a better way to do that bit rather than simplifying this bit. Also think about your variable names. What is 'a'? it doesn't tell me anything about what information variable is representing. What is getDDL4R4Data doing? And why do you need to Clone() it right after you get it?
 Array b = (Array)Data.getDDL4R4Data(a).Clone(); //GetDDL4R4Data returns an Array, Clone returns Object This part is obscuring the type information. The best solution would be to fix that. The other part of the fix is that float, datetime, int, and single all implement the IComparable interface, which is all you need in order to sort things. SortingAlgorithms.BubbleSort should have an overload that takes in an IComparable.
Not sure if you mean design or setting up projects. But yeah in both cases, it's very common. Design, (ie figuring out where code should go), is something you can take a full course on, in and of itself. And setting up projects is a recurring problem when dealing with a new problem space. How hard it is depends on your outlook. When I first started off, I found it really annoying as well because, in my mind it had nothing to do with my immediate task at hand (ie coding). Once I got used to the idea that sometimes setup can be just as time consuming as the actual programming and set my expectations correctly, it became easier to deal with. 
I mean how to set the code up, if you went and grabbed a application that was made with C# i would be able to understand the code and know how it works, but if you asked me to make that application i would only know how to do some of it and would not be able to complete it cause i would not know where certain code goes.
Pretty cool for just messing around with some stuff. Obviously I wouldn't use this in production but it seems like a very fun project to work on. Good job. 
If your problem is well suited for Rx, use it. It's awesome.
And what say you about relying on exceptions to know when your application isn't working correctly?
You probably mean "generics", not "type inferencing"
That would be design. That's actually one of the most fun parts when you get the hang of it. The basic idea is kind of one of the fundamentals of engineering which is breaking a bigger problem into smaller parts. One trick which makes this much easier is called 'programming by intention' Say you want to make a program for playing chess against an AI. You start with the big picture. What are you going to do? Well you got to set up the game. Then one player makes a move, and the other makes the move etc, so we can call that playing the game. And for each move we might need to check if it is a legal move if the User makes it, and then check if the move has ended the game. So when we program by intention, we start by naming a method for each of these steps like so: class Program { static void Main(string[] args) {} private void SetupGame(){ throw new NotImplementedException(); } private bool MoveIsValid(){ throw new NotImplementedException(); } private void MakeMove(){ throw new NotImplementedException(); } private bool GameHasEnded(){ throw new NotImplementedException(); } } See there's no flow in the program but you can kind of imagine it right? something like: SetupGame(); While (!GameHasEnded()) { if (MoveIsValid()) MakeMove(); else {/*show some error*/}} In fact when we usually are at this phase it's better to just draw it on a white board, because we'll be missing some things. For example, who is making the move? How does a user make a move, UI/Text? How do you keep track of the state of the board, etc.. So you go through round 2 with each of these questions, and keep doing that until you feel like the big stuff is covered and then you can implement each of the parts, and redesign if things turn out differently than you expected. Let's say we decide to focus now on how a player makes a move. You might decide you'll set a bool or an enum for a black or white player eg: MakeMove(Players.Black) and switch every turn, which will work. Alternatively, if you find you are passing the same parameter to your different methods over and over again, you could consider making a new class for a Player and moving some of the above methods to Player and give him some attributes which seem to define him. class Player { public Color PlayerColor {get; set;} public bool isAI {get; set;} public Player(Color color) { Color = color;} public void MakeMove(){ throw new NotImplementedException(); } private void ConsiderMove(){ throw new NotImplementedException(); } private bool MoveIsValid(){ throw new NotImplementedException(); } private void MovePiece(int piece){ throw new NotImplementedException(); } } This is one of many ways you could go about it. There is no wrong way of doing it, only some ways which are better than others, and you learn that over time. When you have done it often enough, that starts to become intuitive but if you're starting and you don't know what to do, just do what's easier and ask someone for feedback after you're done, and if they are good they can tell you what you could improve so that your code is more futureproof, maintainable, testable and all that fun stuff you won't really have to worry about until much later and will only make sense when you've done it the other way a few times and felt the headache. I've also not talked about how to figure out what your objects are. There are techniques for doing that as well. You should consider taking a design patterns course if you want to learn about this kind of stuff. It's basically a whole bunch of tricks you can do to figure out what should go where before you even write a single line of code :). 
Nooooo please. Don't steer new programmers down that road, it's definitely the wrong direction. 
Probably because 800 lines to parse CSV data sounds like 600-700 too many, or so.
According to you. We use them at work, depending a bit on the developer. Since we don't need binary compatability (we rebuild everything each time), fields are as good as properties and sometimes better (e.g. can be marked readonly).
To...prevent people from accessing them of course. Also, a property is just two methods and can't store data. You need fields directly or indirectly.
True, I was thinking about built-in XMLSerializer.
I also validate the data in the CSVs against two databases. This program is actually replicating a program that was already created by someone at my company (a person with 10+ yeas of experience) and his is 1500 lines, though his program has some more functionality than mine, but not too much.
Hm. I don't think I have an example, but almost every time I am handed a `Task`, I end up calling `ToObservable` on it. `IObservable` is composable, while `async` has the downside that it's contagious (the caller of an `async` method must also be `async`).
&gt;Fields are also getter/setter; that's the only two things you can do to them. No they are not. You need to go back and study encapsulation again. A property for **public int MyVar** gets unwrapped into private int _myVar; public int get_MyVar() { return this._myVar; } public void set_MyVar(int value) { this._myVar = value; } by the compiler. This is not true for fields. A property invocation requires a method call. A field's does not. &gt;How exactly? They are important for binary compatability, but where that isn't needed, I don't see how they make it easier to maintain. First of all, in software we follow strict naming conventions. They are different for fields and properties. A field also allows you to give or restrict access to reading and writing explicitly. The properties also provide you a body into which you can add logic. So I can: public string Name { get { //Add logic to combine first and last name return processedName; } } In fact properties don't always need to be backed by a variable to begin with; which is why they are so useful. Today I might have a field returned by property *Name*, tomorrow I might have a database entry return instead (I don't know why you would directly, but let's assume you might want to do that). The end user does not need to be aware of how the property obtains a result. &gt;You can easily change a field to a property if needed, later. You shouldn't think of things as "you can just easily change it from x to y". That assumption makes bad, broken code because you are lazy at the moment. Mixing and matching fields and properties is bad etiquette to begin with because it shows that you are inconsistent. Not only that, but I have already described that the naming convention is usually different for properties and fields. So you are setting yourself up for this: string personName = currentPerson.name; after the change string personName = currentPerson.name; //&lt;- Broken! It's been renamed to Name because that's the convention Not only this, but from a debugging perspective fields are much tougher to debug. With a property, I can set a breakpoint and see exactly which parts of my program are mutating the variable (and to what). This isn't possible with a field, so you have to chase down every single place something is changing the field. 
You could use [MiniProfiler](http://miniprofiler.com) in both to review them. It should help point to anything obvious (say, a poor performing SQL call) causing a slowdown.
Worth changing these lines to implement TryParse int len1 = int.Parse(lenval1.Text); int wid1 = int.Parse(widval1.Text); double len2 = double.Parse(lenval2.Text); double wid2 = double.Parse(widval2.Text); 
Check out the ManagementEventWatcher class. There is also some info here that may help in doing it another way. http://www.thescarms.com/dotnet/Process.aspx
looks great i'll check it out
But how is that not "control flow"? I understand the intent of that expression, but to any novice it is clearly a means to control the flow of the execution so that it takes a different patch than the nominal one. So perhaps that's what we should be saying. Don't throw and catch exceptions in the normal path.
To position a new row exactly where you want it in the grid, you cam add a blank row to your _dataTable where you want the new row and re-bind your datasource. 
no that's not what I want to do , I want the last column in datagridview ( the column that make user enter a new row) to be in the first position
I'll give this a try today, I'm working on writing a cmdlet in C# today
&gt; You can easily change a field to a property if needed, later. That's a big assumption. Suppose you have a public field, and you want to change it to a property (say, because you want to add logging whenever the value is set -- just an example). If you had written it as a property to begin with, it would be a one-line code change, and only one assembly to redeploy. But because you started with a field, you have to track down and change all usages of that field -- not only in your own assembly, but in any other assembly that references it. Those other assemblies now need to be redeployed to production as well. Not to mention that, if any outside parties are using your assembly, you've just released a breaking change. There's really no good reason to use a public field at all. Fields are implementation details, whereas properties are part of a class's semantic contract. Properties are clearer conceptually, they're easier to modify and debug, and if you're working with concrete classes, trivial properties will most likely get inlined to field reads/writes anyway, so there's usually not even a performance benefit (and if you're working with interfaces, fields aren't even an option to begin with).
now i ran into another trouble, if i assign a method to the .Exited listener for updating the UI it throws an error because it was in another thread :/
For some reason, I still had this post in my mind when I realized a modification that improves it. To the Die class, add a IsSelectedForReroll property and a Reroll() method which checks the IsSelectedForReroll and calls Roll() if true (and then sets IsSelectedForReroll to false). Now there is no need for the separate reroll List. Instead, when an Die is chosen to be rerolled, you simply set the IsSelectedForReroll property to True. When the reroll is processed, you simply iterate through your Die array and call Reroll(). I know that using arrays of ints and bools seems simpler, but something like the design I mentioned is a better demonstration of encapsulation (which is something I look for when reviewing others code).
I will test it out and try to find a bottle neck. This is only what i experience by default. The mvc app is using a default mvc5 stack with ef and sqlserver. 
Nice, sounds like you have it covered then :-) I may as well contribute an idea and be useful then: You could do something like a robot in a maze. You would provide an API which gives the algorithm limited knowledge of your surroundings coming from a radar and methods to call to move the robot. Something like robocode but more like an obstacle course than a battle. I don't know if hackerrank has done that! 
I will give it a try!
I would think the the MVC app isn't configured correctly. In the majority of applications if your leveraging caching and optimization strategies ASP.NET will be doing next to no work. Things to look at: - Caching: Page Cache, Database Query Caching, Output Caching - Ensure content compression in IIS is on - Server Specs? Ruby on fast server will beat .net on a slow server - Profile the code (http://getglimpse.com/, JetBrains DotTrace) As for speed of code there is simply no way an interpreted language can beat out a JIT'ed language like C#. JRuby performance can be pretty on par but there is a massive performance cost with interpreted languages. That paired with the fact that Ruby's garbage collector (although better now) performs much worse then the CLR's and the JVM's and Ruby is single threaded (sorta). (for language benchmarks check out: http://benchmarksgame.alioth.debian.org/u64q/compare.php?lang=csharp&amp;lang2=yarv) But if the site is small with little load these factors won't be visible. I think ruby is a great language but its definitly not a speed demon
Awesome comment! Appreiciated. :)
I will take everything you wrote in consideration! 
Ha, thanks, doesn't bother me much though. I guess that's what I get for answering the question OP asked, rather than the one that he should have.
Was this cold restarts .Net is really bad about cold start times. Asp.net VNext is going to start addressing this with .Net core
Asking the correct questions here IMO. getDDL4R4Data should return a generic &lt;T&gt; with the type. 
There seems to be a pretty useful solution to this issue [here](http://stackoverflow.com/questions/8272681/how-can-i-simulate-a-mouse-click-at-a-certain-position-on-the-screen).
That's one of the options I tried. Works, but the application I'm trying to interact with somehow doesn't recognize the clicks. :/
I'm not arguing either way. &gt; Excepting the fact that div by 0 is allowed anyway in C#. Only for floating types.
If you're on .net4.5, I'd say to also investigate using the async/await pattern. This pattern can really clean up asynchronous code
Good point!
If the application isn't a native Windows application (i.e. not based on the Win API, something like an OpenGL or DirectX application) it probably won't respond to a mouse event sent from the Windows API.
That's beyond my area of expertise. You could look at the OpenGL or DirectX APIs (assuming it's one of them) and see if there's anything in there that might help.
My app is a windows form application, though, and may look a little complicated. I wont be able to upload that until friday, but if you pm me im happy to help you / answer any questions
It works in AutoIt for example... I tried a little script just out of curiosity and it works, the game recognices the mouseclicks. It just doesn't recognizes the C# mouse commands, propably because they'rte coming from the Win API as steampunkunicorn said...
or 795
ReSharper EAP with VS2015 -&gt; ***Unusable***.
Two three word phrases: "poke the bear" and "go to definition". Poking the bear is about getting some basic example to build, then poke around the internals changing behavior and inserting random prints (read: inserting logging) until you sort of get it. This isn't so much a well thought out thing as rummaging around and breaking stuff. This breaks down that feeling of separation that sometimes exists between you and complex codebases. Be bold, break stuff! Go to definition is of course the IDE/editor support function -- but also the act of starting at some little corner of the codebase, some random spot, and following it though various definitions and so forth -- don't try to understand everything -- just try to understand one path, one change, one thing. Rinse and repeat those two steps until you have a certain level of comfort. I was a contractor for over a decade, and got dropped into some very hairy codebases (like Winamp) and this technique has worked for me over and over.
Rather use Invoke, unless you also want the code to become asynchronous.
The app is based on UnitsNet. When they will add those, so the app.
If this is for WoW, the Warden well detect you and you will be banned.
Use the application entry point. Go from there. Draw your own diagrams and update them as you discover more. 
By slamming my head into the wall.
I tried your solution and like you said it will make my code harder to maintain and full of bugs so I'll just let this "allow user all row" normal and maybe I add some textbox so the user have two ways to add data ! Thank you for the answer !
I usually start by getting the general program structure by setting a breakpoint at the entry point of the application, and running it step by step, as deep as you can go. By doing this you get a general idea what the different classes and libraries do in the application and you can work from there.
Been using R# 9 since release and can't say I've had any issues with it. Didn't use 8.2 for long before upgrading, though. Not tried with 2015 yet.
http://blog.jetbrains.com/dotnet/2013/06/13/resharper-8-architecture-tools/
This is good for getting stock prices but not option prices. 
That's what I was thinking I would have to do. Thanks for the confirmation! 
Sheeit, I spent 250 for the full suite myself. Considering the salaries we get in development, I think 250 to beable to use it on my own and for work is a bargain personally.
Can you explain why?
Had to reread your comment to make sure you weren't slagging off XamlSpy! That tool is the best. I don't understand the use for XmlSpy. I always thought handwriting XML was the point..
Xmlspy is tremendously useful - I used to be on a standards committee for something that used XML, and it was the best way to design the XSDs. It's just that the price doesn't line up with it's value any more.
Parsing HTML with Regex: http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454
Yeah I was making short names and I was like it would be mature to to spell out button, but calcbutt is so much funnier
&gt;But if I don't put PrintSimulationData() as static how can I call it from MainClass directly? Make `PrintSimulationData()` an instance method and create an instance of `MainClass` in your `Main()`method. 
Yes. I didn't think about the Main() being static destroying everything. I just created a object that inherits from Simulation in Main and now everything is fine. I can call form the child to the parent and some functions can be overridden while others not. I'm trying to create a simulation program so I just need to modify the Update() method in the program that will simply call each component Update() method.
You can create abstract methods, just add the abstract key word and add ; after the declaration: public abstract void foo(); Every class that will inherit from your class will have to implement it
Then I must be doing something right.
I've been trying to learn these patterns. Some of them I know and have used even before I knew they were a pattern. Some I haven't quite figured out in C# and fully understand. I really liked the Design Patterns for Game Developers book. It helped me understand a few more even though it was written in C it was a great reference. Unfortunately I can't find a good one in C# that is as good but covers more of the ones he left out.
I will grab this book, sounds like it might be part of what I am looking for. I'm really looking for resources that can help me curve the time it will take to get better. 
Sure - there are a number of reasons, but mostly because in the majority of cases, it's lazy, and could easily be done without the out param - returning an object that contained what would have been the out params, for example, or in the case of the TryXXX pattern, using something like /u/mjhilton 's TryResult&lt;T&gt;. I believe that one should be intentional with your code, and that includes naming and parameters - what is it that your method does that it needs out params? If you can convince yourself (and if you're working in a group, the reviewers) that you have a good reason, then go ahead.
Same here, I'm using 2013 Ultimate, works just fine.
Following up on /u/Sarcastinator maybe try this: http://www.jarloo.com/yahoo_finance/ Then you don't have to worry so much about changes to the HTML.
As downvoted as this is, it really does help in a situation like that. Incorrect spelling/grammar in comments, interpreted literally, can be a nightmare to understand. It helps to interpret them as if they were being said by a person with an accent...essentially put yourself in their mindset.
Thanks for explaining! I see your point.
Thanks, however, this only works for stocks not option chains.
Injecting managed code into unmanaged applications is one of those cases where pointers (especially void*) comes in handy.
This is kind of a strange setup. Your main class is inheriting from a simulation abstract. It seems either your main class becomes the full Simulation class, or you break it into it's own standard class. With your main being *the* sole class, it doesn't seem you plan to reuse. If you do plan to have multiple simulations, you should either have a type-of-simulation class inherit Simulation or something like a List&lt;Simulation&gt; 
If you find yourself copy-pasting a bunch of code you could encapsulate common functionality in partial views. But on a re-read of your question it sounds like what you're looking for are [DataAnnotations](https://msdn.microsoft.com/en-us/library/system.componentmodel.dataannotations(v=vs.110\).aspx). You can use DataAnnotations to specify user-friendly names for properties on your model, validation, and a host of other things. You would use them as such: @Html.TextBoxFor(model =&gt; model.Property) @Html.LabelFor(model =&gt; model.Property) There are many more Html Helpers and you may actually be looking for [EditorFor](http://www.pearson-and-steel.co.uk/how-to-use-the-html-editorfor-method/) which will create the appropriate input based on the type of your model property.
You need 3rd class that is the entry point for the application. Basically, just move the main function to another class then declare an instance of MainClass within the main method. So, you'd have 3 classes total. Simulation MainClass : Simulation Application Within Application class you'd have something like this pseudo-code: public static void Main(args[]) { Simulation mc = new MainClass(); // set some properties mc.Update(); } 
In general I don't find much use for abstract classes in this scenario. A stub virtual method in the parent (that throws an exception) and an overridden method in the child is a more flexible implementation that doesn't much with out ERM frameworks
I'm working on a server-side app that deals with a lot of event streams traveling between processes and devices, which is why the basic idea of Rx appeals to me. My biggest concern is latency.
Let's not forget about ?? (and the upcoming ?.) :)
Right now there exist limitations preventing a fully functioning scripting API from being brought to C#. We need the CLR to support loading and unloading of dynamically generated assemblies. ([Today you cannot unload a DLL](https://msdn.microsoft.com/en-us/library/ms173101.aspx)). If the CLR can implement this, it will be a lot easier for the Roslyn team to bring a proper scripting API to C#. It will also allow us to build cool tools like this: http://imgur.com/2QE5Bkw
&gt; (Today you cannot unload a DLL). I understand that unloading an assembly is difficult, but your above statement is false. You can, so long as you load it into its own AppDomain and then unload the entire AppDomain. Your link says just as much. If you want scriptability, you can invoke CSharpCodeProvider or msbuild to compile the project, load it into an AppDomain, invoke it from within the AppDomain, and then unload the AppDomain. Problem solved.
From the linked MSDN page: &gt; There is no way to unload an individual assembly without unloading all of the application domains that contain it. Use the Unload method from AppDomain to unload the application domains. For more information, see How to: Unload an Application Domain. I should have said "a single DLL". You could, of course, also kill the entire proces, but I wouldn't consider that "unloading the DLL". &gt;If you want scriptability, you can invoke CSharpCodeProvider or msbuild to compile the project, load it into an AppDomain, invoke it from within the AppDomain, and then unload the AppDomain. Problem solved. I want to retrieve values from that AppDomain. Which means I have to use [MarshalRefByObject](https://msdn.microsoft.com/en-us/library/system.marshalbyrefobject%28v=vs.110%29.aspx) which means I cannot interact with PCLs (as they cannot contain MarshalByRefObject).
Non-mobile: http://en.wikipedia.org/wiki/Bitwise_operation ^That's ^why ^I'm ^here, ^I ^don't ^judge ^you. ^PM ^/u/xl0 ^if ^I'm ^causing ^any ^trouble. [^WUT?](https://github.com/xl0/LittleHelperRobot/wiki/What's-this-all-about%3F)
I believe it's currently implemented in Mono and Mono.Cecil takes advantage of it. I'm not sure about the answer to your questions, though, as I've never used this. My understanding is that you are only allowed to unload dynamically loaded assemblies.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Bitwise operation**](https://en.wikipedia.org/wiki/Bitwise%20operation): [](#sfw) --- &gt; &gt;In [digital computer](https://en.wikipedia.org/wiki/Digital_computer) [programming](https://en.wikipedia.org/wiki/Computer_programming), a __bitwise operation__ operates on one or more [bit patterns](https://en.wikipedia.org/wiki/Bit_pattern) or [binary numerals](https://en.wikipedia.org/wiki/Binary_numeral_system) at the level of their individual [bits](https://en.wikipedia.org/wiki/Bit). It is a fast, primitive action directly supported by the [processor](https://en.wikipedia.org/wiki/Central_processing_unit), and is used to manipulate values for comparisons and calculations. &gt;On simple low-cost processors, typically, bitwise operations are substantially faster than division, several times faster than multiplication, and sometimes significantly faster than addition. While modern processors usually perform addition and multiplication just as fast as bitwise operations due to their longer [instruction pipelines](https://en.wikipedia.org/wiki/Instruction_pipeline) and other [architectural](https://en.wikipedia.org/wiki/Computer_architecture) design choices, bitwise operations do commonly use less power because of the reduced use of resources. &gt;==== &gt;[**Image**](https://i.imgur.com/otDkwUN.png) [^(i)](https://commons.wikimedia.org/wiki/File:Rotate_left_logically.svg) --- ^Interesting: [^Logical ^disjunction](https://en.wikipedia.org/wiki/Logical_disjunction) ^| [^Exclusive ^or](https://en.wikipedia.org/wiki/Exclusive_or) ^| [^Binary ^operation](https://en.wikipedia.org/wiki/Binary_operation) ^| [^Mask ^\(computing)](https://en.wikipedia.org/wiki/Mask_\(computing\)) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cppkszc) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cppkszc)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
Single '|' is bitwise or, you have to look at the value not the boolean logic. So if for example: Keys.Alt = 8 = 0x1000 Keys.Control = 4 = 0x0100 Keys.P = 2 = 0x0010 Then Keys.Alt | Keys.Control | Keys.P = 14 = 0x1110 So only the value 0x1110 or 14, would match, and that exact pattern of keys would have to be pressed.
This requires that you load at least two libraries into the AppDomain - a handler library of your design, and the target PCL. The handler library is used for marshaling requests and results back from the PCL. Use [AppDomain.CreateInstanceAndUnwrap](https://msdn.microsoft.com/en-us/library/3c4f1xde.aspx). You create a real instance of a handler object in the internal AppDomain. You get a proxy reference to that handler object in the outside AppDomain. The outside AppDomain makes calls on the proxy reference to the handler, the real instance of the handler runs inside the internal AppDomain and does whatever it wants (and returns whatever it wants). Since it actually executes inside the internal AppDomain, it can create objects from PCLs and interact with them, and return the values that they return so long as they have value semantics (ie are value types or are serializable). 
Take a look at [this](http://csharp.2000things.com/index/).
It shouldn't have to be language specific. I hear Design Patterns for Dummies and Head First Design Patterns are good. You can also get some mobile apps that are okay references. Doesn't take long to get to grasp with some of the more common ones and when you do it's some really powerful tools.
You would think so right? But, no! In my experience, breakpoints are a nightmare in complex code. Threading, complex library interactions, interesting timing cases are all broken (read: hidden) or annoying to work (read: hitting X more breakpoints than we care about) with using breakpoints, logging is just a much better solution in my experience. Logging give you well -- a log of what happened, this log can be grepped, filtered, etc. That isn't to say there aren't use cases for breakpoints, but in my experience they are far less flexible and useful than logging (read: printing). Also, logging gives you a nice view of the flow of a program in a way that breakpoints simply don't, and is way faster and far less annoying. 
Do you have a link to a project page or something?
Thanks for the reply! So how does the program differentiate between 0x0011 = 3 and 0x0011 = 1, 2? I ask this because the enum for Keys in .NET looks like [THIS](http://gyazo.com/b01a8b065cdab94d20b2a9efb1cdcaec) (using sequential integers, rather than 1,2,4,8...) How aren't there ambiguity problems? EDIT: After trying myself, I found there [ARE](http://gyazo.com/139f5543043d7e2658a71b88f4a87686) ambiguity problems. The message box will run in that method whether i have the if statement as if (n == (num.Two | num.Three)) or if (n == (num.Three))
https://msdn.microsoft.com/en-us/library/2yd9wwz4.aspx [0,1] is what you're looking for, [0,0] = 262
So I'm not all that knowledgeable about C#. What would this do?
Patterns that are predominately used for a specific language won't be high on the list of priorities and no one is going to read all of them. I haven't gone through those 2 books I listed but I doubt they'd have more than the most commonly used patterns. Strategy, Singleton, Factory, Adapter and Decorator I think are quite often used.
Thanks
For enums that are intended to be used in bitwise operations, the values are manually defined, not automatic sequential numbers. So yes, if you tried that without manually setting each value it wouldn't work. Also, they use the FlagsAttribute to signify this.
It depends on how many other settings you have;user settings, system settings, etc. It can be great for the end user if their options are saved to a db so as they go from computer to computer their settings come with them. If there are only a small number of settings, a local file or registry COULD be of value. However, be aware of future features because it could mean you would have to change your storage pattern. 
Do you either have Windows Updates waiting to run or a post-update restart pending?
This would allow a C# program to compile, run and **dispose** (this is the part we're requesting) of other C# programs on the fly. It's currently possible to do so, but there is a lot of extra work involved when making this happen. This would make it substantially easier to do so.
I've not received any pop-ups regarding a restart, in fact I think I updated a week, if not a few days ago. 
We're calling the extension "Alive" and I've just registered http://comealive.io. (There's nothing up there right now, but we'll put up a place holder later this week).
You should restart regardless. Windows has lots of heisen-errors repaired by reboots.
Thanks, I'll try this out asap!
It sounds like you're dynamically generating a form. In that case I think a factory method in a HtmlHelper is the best solution for that. Depending on how dynamic your forms are, you may also need a custom model binder to read your data back when the form is submitted. 
"http://stackoverflow.com/questions/8550026/thread-dispatcher-sleep-in-wpf" Has good details. Things to note: - Make sure you're breaking out the threads, and calling .Sleep on the current thread. - Don't call the UI thread directly from the non-UI therad - use BeginInvoke from the second thread. Edit: by the way, ThreadStart's take delegates or (unexecuted) methods: Thread thCmd = new Thread(new ThreadStart(someFun()); Thread thGUI = new Thread(new ThreadStart(UpdateGUI()); Should actually be Thread thCmd = new Thread(new ThreadStart(someFun); Thread thGUI = new Thread(new ThreadStart(UpdateGUI); Note the removal of brackets. 2edit: [This post](http://stackoverflow.com/questions/9602567/how-to-update-ui-from-another-thread-running-in-another-class) has some details on doing almost exactly what you want to do. 
If he's using WPF, UI changes should be instantaneous relative to a 50ms sleep.
Just a reminder that .NET Core does not support appdomains.
Scripting via IronPython not count?
So, I think we need a little more information. You're getting information from a query string and you're parsing that into an object. Is it the case that you will never expect an unknown member or is it just that the query variable names may not match the names of your class members? I can think of options for both cases.
Ummmm. So does PowerShell not count as a CLR scripting language for some reason?
Are we sure they're not asking about how to find an entry point in the C library that they're ultimately calling? I adore ReSharper, but I'm not sure this answer is what OP was looking for.
I think you should store the defaults in that sort of context (in this case, the db). However, the user should be able to override those defaults with a personal preference. This could be any sort of local file that you're comfortable with, such as an .ini, an .xml file, whatever. EDIT: Upon further thought I think the "standard" UI layout should be put in place by the installer, but that layout file should be overridable in the user space. Storing it in the database seems like it could change each version. That may be fine for your application, but keep in mind that users may lose their personal preferences any time that you decide to overwrite that value. In short, during installation you should put your own layout on the system. After that, leave it up to the user to determine.
Oh wow, I will need to check out IronPython.
Don't frameworks like Unity or any other injection libraries already do this? I might be missing your point.
... no... Restarting windows is a five-minute fix. Reinstalling windows is a five-day fix.
I'm not familiar with Unity, but the key here is the loading and *unloading* of assemblies without being forced to use a separate AppDomain.
You can use HtmlHelper to generate the form as per the Daniel15. To read changed data back you can use MVVM model data binding. Convert your c# model to JSON object and bind it to your view.
Keyword: if
Take a look at what you're printing. In the string you say "the value of [1][1] ...", but on the right side you're actually printing [1][2]. You do this wrong in 3 of those 4 writelines.
You're right. Here's the [update](http://i.imgur.com/I8XsPEq.png). But it's still got the wrong values in the lists. 
Confusingly, "|" is *also* logical or, non-short circuiting, as well as bitwise.
The keys enum is a mix of flags (for modifier keys) and a key value. Checking both at the same time takes care; I've reported a bug in the framework earlier where the code did it wrong, leading to multiple keys being captured insted of just one. 
The "new ThreadStart" part has been unnecessary since .NET 2, by the way.
An assembly resolver added to the child domain will also be necessary to be able to e.g. deserialize from within it.
What propositions do you have for the security concerns this will invoke? I don't want other apps to have the ability to unload my assemblies willy nilly.
But what if you want to reload a new version of the assembly which contains modifications, which would be incredibly useful for REPLs and runtime logic experimentation in, say, games or other software that allow users to load arbitrary scripts at runtime.
Messaging you on [**2015-04-08 12:48:07 UTC**](http://www.wolframalpha.com/input/?i=2015-04-08 12:48:07 UTC To Local Time) to remind you of [**this comment.**](http://www.reddit.com/r/csharp/comments/306iqc/please_vote_for_the_clr_to_support_collectible/cpq5avc) [**CLICK THIS LINK**](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[http://www.reddit.com/r/csharp/comments/306iqc/please_vote_for_the_clr_to_support_collectible/cpq5avc]%0A%0ARemindMe! 2 weeks ) to send a PM to also be reminded and to reduce spam. _____ [^([FAQs])](http://www.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/) ^| [^([Custom Reminder])](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!) ^| [^([Feedback])](http://www.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback) ^| [^([Code])](https://github.com/SIlver--/remindmebot-reddit)
What would happen if code that is unloaded gets called?
Ah. I see. Thanks. Much obliged. 
You don't use the actual implementation of `Helper`. Instead, you substitute in a stub or mock implementation, which could return a particular set of dummy values, throw an exception to simulate an error condition, or be used to check that an operation has taken place.
There are a couple ways you could do this. This might help get you started: http://stackoverflow.com/questions/11677831/mvc3-viewmodel-with-list-of-complex-types An editor template is probably the way to go.
I'm not sure i see the problem here. You got query strings comming in that 'mostly fit' into some sort of pattern. You know what they mean, that the Foo parameter means ID, and Bar parameter will have the message.... So to make this dynamic, you put the translation in a Table or config file, and you have your program refresh the translation pairs , as the source Rosetta Stone changes. Am I missing something? And if these things could be going to more than one type of object, then you will need some way to distinquish the query strings. They have to have some marker in them that's going to tell you this is a TypeFoo message, and this other defaults to TypeBar. Again, that's got to be some param in the querystring you look for. I guess you could get fancy and store that 'test' as a RegExp, and keep it very dynamic. Maybe you RegExp the query string to see if it contains ParamFoo &amp;&amp; ParamBar but not if ParamBarValue is 8. In terms of how I get the query params into my object, I'd give them a sort of DeserializationWithRossetaStone method. Have it take they QueryString key/value pair, and another key/value dictionary that represents the Translation. You could have it Dynamic Invoke, and use the object's property set methods, or just inject straight into the member variables backing the setters. Depends on how you like to hydrate things, and performance requirements. 
It allows you to use mocking so that you can set up a fake controller and have it return values that you can test against.
Better test coverage, decoupled code, easier to manage down the road because it reduces the likelihood of god classes.
This is basically what the Microsoft.Practices.Prism had you do when you made WPF/Desktop composite apps with MVVM. 
&gt; Better test coverage What does this _actually_ mean? &gt; decoupled code Sure, that's advantageous, but that's why you design around the idea of class libraries that you can drop into whatever project you're working on. You don't need a web service architecture to accomplish this. &gt; easier to manage down the road So instead of having your code grouped together where it's actually used, you have a dozen different pieces that require their own degree of maintenance and documentation. Don't get me wrong. I'm big on reusable, modular code. But practicality states you shouldn't code like Amazon (distributed web services everywhere) if you're a five-man shop for a 150-person company. 
&gt; No, it's using OOP the way it's meant to be used. By whose definition?
Another reason as to why I've moved on to F#.
I'm with /u/daedalus_structure on this one. It seems like the dependency direction has been inverted here. Dependencies should only ever go up through the layers. Your business service layer should know nothing about your controllers but should know about your domain service layer. Likewise, your domain service layer should know nothing about the business service layer but should know about your persistence layer. This couples the business layer to your controllers which means you cannot have a unit test for the business services independent of the controllers... Definitely a code smell.
Or NLua
A quick Google search for *Uri regex* brought up this: http://snipplr.com/view/6889/regular-expressions-for-uri-validationparsing/
Let's try diffrent approach then. Is there any way to use XPath-based functions of Html Agility Pack with Windows Store Apps? And any way to avoid using async statement and functions returning *void*? I don't feel like rewriting whole namespace.
I definitely hear you on that, maybe someone that knows the gears of Rx can chime in: If I use an Obsersable on something like the stream of all mouse movement events but I only want to do stuff with x &gt; 100 events so in Rx I do: MouseMovements.Where(evnt =&gt; evnt.Location.x &gt; 100).Select(evnt =&gt; { /* Do some Work */ }); I would think that the Where lambda has to be applied to all events as they come in, whats the cost in doing this? I assume the lambda call has some overhead. Is there a more optimized way of doing this? 
You could also do: using pl = API.Object.PropertyList; pl.FirstOrDefault(blah);
In the ViewModel, add an initialized child object and use that for inserting new children to the main list on the form submit.
dependency injection is ok here. scope services know nothing about repositories, business services know nothing about scope services and controllers except their interfaces and this allow us to substitute consumed layers with stubs/mocks. but about one thing you are right - the weak point is communication with controller's validation functionality - ModelState. in the article business services deal with ModelState type directly, not via interface. this assumes that all busines services we implement have to reference System.Web.Mvc library and this is not pretty at all. however the article is not complete solution, it only gives the main idea of decoupling application logic. of course we can design an interface like IValidator. then in business service we can reference not Controller.ModelState of type System.Web.Mvc.ModelStateDictionary, but Controller.Validator of type IValidator. this completely removes business service-Mvc framework dependency. but for the sake of intrigue ;) and simplicity I left the idea as is. so main idea is two-way communication between controller-business service: controller is dependent on business service's interface and consume it's implementation. business service is dependent on controller's functionality (directly as in article or by using mediator like IValidator) and influences it in it's own way.
This seems like the simplest way of doing it, thanks!
Thanks, very helpful, especially the third bullet point - didn't know that was possible!
Hadn't heard of extension methods, I'm new to C#, more used to Python/C++ and similar. I'll have to look into them, thanks!
No problem, you're welcome. Wish someone answered my question though ;/
Yah and its even nicer if you have any java background because then if you use intellij your IDE functions the same, brings VS up to par to what it should be from MS out of the box.
well, you could put it within a method PropertyType foo(PropertyType blah) { return API.Object.PropertyList.FirstOrDefault(blah); } but theres nothing wrong with a long name as long its clear what it does in my opinion
&gt; no gimmiks this is the hardest part
Sorry, my question was more along the lines of what needs to happen for what you described to occur? As in, say I have an Add Child Item input button. If I click it, I'm assuming it will return back to the ActionResult Create(Child child) method. So should I do something like RedirectToAction("Create")? Then have some logic in the ViewModel to indicate whether I want to be in the create state or the submit state. I think I'm seeing some light now though, I'll tinker around and post back if I figure something out. Thanks for the help! :)
Huh. Back when I did a Windows Store app they were called Modern UI apps.
You can quickly get copies of an existing list (granted these are SHALLOW copies but they'll work for what you're doing) like this: List&lt;int&gt; myInnerList1 = myInnerList.ToList&lt;int&gt;();
What does your editor template look like? Also your I would think it would be @model Child.
I'd suggest WPF for the sole reason that improving your skills in WPF will be more worthwhile than WinForms. Threading is mostly the same between the two since it's a separate set of classes that can be used by either type of application. I'd use an MVVM approach - create a Model to store your data, a View to display it, and then a ViewModel to handle interaction between the two.
I gave it a shot.
I think you are confusing the TaskScheduler in Windows and the TaskScheduler introduced in .NET4 TPL to manage threads. Have a look at this project: https://taskscheduler.codeplex.com/ I havent tried it, but it sounds like what you are after.
Should be fairly easy to modify it. Javascript regexes are just regexes between two forward slashes, with options after the second slash: /regex/i So take away the first slash, the last slash, and anything after it, and then just un-escape any slashes in the body of the regex, so \ / becomes /
I dont think so. You are goint to use function .Descendants("table")
Follow the market - it is hard to find a winform job nowadays. So for new projects always use wpf.
having no clue what MyDoc.Add(new Paragraph is, i'm going to guess it's working like a p tag in html and that's causing your new line. MyDoc.Add(new Paragraph(string.Format("\nHello and Welcome., {0} {1}" , txtNames.Text, txtLNames.Text)));
Well, it's just going to be intensity values in deciBels so they'll just be regular values of xx.xx value types. 
So you're storing a series of decimal numbers in an array?
Basically yeah. But for every spot that has "more than one" entry needs to have all those values averaged before taking the spot.
This. WPF is a bit trickier and more complex to learn than Forms but it's far smarter, better designed, and more worthwhile to learn. It's well worth the pain. 
I'm not a massive fan of using PRISM, but this is a great tutorial nonetheless.
I have worked with databases quite a lot, and I think your db schema needs some more love. First of all, I don't like combined primary keys, so I would ditch that concept and just have every table have one primary key (a guid, to make things easy). Next up, let's have a look at the tables you need: * Trading days: is ok * Stocks/Tickers: is ok * DailyStockData: this is where it starts to get interesting. Like I said I would add a simple primary key (ID, type guid). Next you need a link to the two tables you are referencing, so a TradingDayID and a Stock/Ticker ID. These are guids and reference the record in your other table. That means you don't need to repeat the data that is held in the other table, so this table would not need a TradingDay field, for example. Given that info, try figuring out what the other fields would look like (I think some of your info in DailyStockData would be general to a stock, no?) and design the final table. I always avoid storing double data, but sometimes on a database level you will want to store the info twice. Think of it as a last resort to increase performance. If you have any more questions, fire away! 
It's rarely seen in practice outside of disambiguation soooo... don't get too used to it, I'd say.
Then, how should I convert this XPath to Linq, for example //div[@class='somethin-somethin]/table/tr/td/p
Noob here. Why is string concatenation frowned on?
[You may get more specific answers posting this in /r/unity3d.] Questionable use of statics aside, your code doesn't set highScore. As such, when the object that this script is attached to is created and the Start method is called, highScore will be set to 0 (default for int). The Text component is then set to "HighScore 0". In your referenced answered, they retrieve the existing highscore from prefs, to allow it to be persistent: int oldHighscore = PlayerPrefs.GetInt("highscore", 0);
Sorry, I didn't realize my miscommunication. My main problem is my approach to storing the values. It's gonna be a theoretically infinite amount of information I want to store in an array. I do know how to take the average and the ideas behind that. My problem is the array forming aspect of it. Also, I have never used C# so I have no idea what I'm doing haha. I'm gonna try to figure out your suggestion. Thank you.
Yes, that is what I am looking for. Could you either perhaps point me in the right direction to finding well documented resources on the topics you suggest? I have yet to use any of what you suggest (other than GUIs).
The public class average would then be able to be used in an array? Please excuse my lack of knowledge of c#
ASP.Net MVC is well suited to pretty much any web application. I've been a consultant at a mid size company (~600 globally) and worked on a number of MVC projects. The highlights include: * Custom CMS backend for mobile app * Online survey system * Teleconferencing add-on for public facing websites A tonne of the work my colleagues and I are doing are single page apps with JavaScript heavy frontends. .Net can have a corporate feel from the outside, but I think it actually has a fantastic, pragmatic community. They don't chase trends, but innovate thoughtfully. The tooling is great, and the clients pay for quality.
CRUD - create, retrieve/read, update, delete records from a database. Not typically glamorous, but it makes up a huge portion of all programming work. If you're looking for ideas: Sports statistics tracking, Media database, Inventory tracking...
I still don't know what your (or any for that matter) SONAR data looks like (multiple "parts" with multiple values each?), so I'm just guessing what an example might look like. You can do something along these lines: int numberOfParts = 100; var averages = new AverageValue[numberOfParts]; for (int i = 0; i &lt; averages.Length; i++) averages[i] = new AverageValue(); // need to fill the array with new instances because AverageValue is a class and thus the array only contains null references by default averages[0].AddValue(1); averages[0].AddValue(2); averages[1].AddValue(123); // ... averages[99].AddValue(789); System.Diagnostics.Debug.Print(averages[0].Average.ToString()); // Average of part 0 == 1.5 
Define a data structure. Create list of said data structure. What's your problem? Where are you stuck? Did you try anything on your own, at all?
#HomeworkQuestions Tell us where you are stuck. 
Sure! Services basically operate like normal programs; they're nothing more than code that runs in the background with no graphical user interface or output window. Most services incorporate some form of repeating or looping code (timer OnTick for example) that calls a function or waits for something to happen before doing what they are designed to do. Here's the [MSDN page](https://msdn.microsoft.com/en-us/library/zt39148a.aspx) on creating a basic service using the service project template in Visual Studio. [This is a decent walk through](http://www.c-sharpcorner.com/UploadFile/naresh.avari/develop-and-install-a-windows-service-in-C-Sharp/) that might help plug any gaps in the MSDN page. [This guide](http://www.codeproject.com/Articles/14353/Creating-a-Basic-Windows-Service-in-C) is a little more detailed. ---------------------------------- I'm not familiar with the exact details of your code and deployment options, but a basic rough outline would be: - Create the service project and put your code in the project. If you want it to execute every X minutes/hours/seconds, use the Timer OnClick method. Otherwise, use a while(true) loop and calculate the timespan from the current moment until the desired execution time and use Task.Delay(timespan). - In the app.config, create some default key values for whatever user input you need on setup. - Add an installer package that solicits the user for the necessary parameter input, and make sure it updates the service's app.config file appropriately. - If you want, you can create a basic winforms program that lets you stop the service, update the service app.config values, save the app.config file, and restart the service. 
To run another query you'd just need to change the value of str to a new query, change/add/remove any parameters, then open the connection and execute. Once you rebind to the grid, the data in the grid will be replaced. On the GridView error, I assume you have a GridView object named GridView2? If so make sure you're using GridView2 and not gridview2 as C# is case sensitive. For your multiple queries, you could also make a stored procedure that takes all of your search values as parameters and returns the full dataset at once, instead of querying for each one.
Members with the static modifier belong to the class itself, rather than an instance of the class. These are shared between all instances of the class (or in Unity's case, all objects where the script is attached). You could use a static to store your high score across all instances like this; but might run into unexpected circumstances that make debugging difficult if other instances (or even other objects) change this field. I'd say you should use a score manager object, who's sole role was administrating the high score, including checking, updating and saving the score, allowing your object that displays the score (I assume a UI object) to only be concerned with changing it's text - however, this might not be a pattern to everyone's taste. [I realise looking again at your code, HighScoreCheck is a static method; this explains why highScoreKey is required to be static too.]
Awesome thank you for the information, it was very very helpful
I've been working with C#/ASP.NET MVC/Similar for about three years, with two different companies. I've also been interviewing for a new job in a new city for a while now. In my experience, most of what companies are looking for are full-stack skill sets. Someone who can work from the database level all the way to the UI. Since you have some PHP and SQL experience, you should be pretty well prepared for the *kinds* of work you'll be doing, even if the particular language/library is unfamiliar. The best thing to do would be to do some exercises in C# with ASP.NET MVC for server-side web apps and ASP.NET WebAPI for REST services. Those are the big demands that I see. On a more advanced level, familiarizing yourself with Entity Framework, AngularJS, Dependency Injection and Test-Driven Development are big pluses for most of the companies I've spoken with.
First off, hone your SQL skills. You should be comfortable designing a database from scratch that doesn't look like it was built by a secretary with an "Access for Dummies" book. Also, know Entity Framework. Where you work may use some other object-relational mapper, but there's more tutorials out there on EF, and if you learn it, you'll be able to leverage the knowledge in others. Understand how to setup your development environment. Understand NUGET, GIT, setting up dev/stage/production servers, managing the workflow of publishing to each environment. Understand MVC, but don't ignore WebForms. Lots of very good jobs that are going to require you to continue some legacy WebForm asp.net system. Understand how to run WebForms with MVC and WebAPI and eventually you can sell yourself as able to transition them to new technology. Understand Dependency Injection and how to unit test effectively with web applications. In terms of what you'll actually build, it's _any_ business process. It may be public facing, it may be internal. It may be foe 10k people, it may be for 3 people. You may be building it just so someone can get reports/notifications about what their employees are doing. You may be building it to make the employees job easier. 
Did you write the code you posted? If so, you should know that you are never calling your setter methods - which, btw, are completely unnecessary in C# since you can use Properties.
Some pointers for you: - Use using(...) blocks. It helps keep things clean, especially when you're running a lot of queries, by allowing efficient garbage collection to happen. - Use functions that take parameters and return a DataSet. See Microsoft's example [here](https://msdn.microsoft.com/en-us/library/system.data.dataset.aspx). Your function would look something like this: private DataSet void ReadData(string connectionString, string queryString) { DataSet returnDataSet; using (SqlConnection connection = new SqlConnection(connectionString)) { // create an adapter and command, open the connection, fill the dataset from the adapter, and close the connection // ... // ... return returnDataSet; } } Now in your Button OnClick event, you can call this function to return multiple data sets and bind them to their respective tables. 
First, unless you're working with a very ancient version of C#, you can replace all of this: private double second;//andra operand public void SetSecondOperand (double second) { this.second = second; } public double GetSecondOperand () { return this.second; } With this: public double SecondOperand {get; set;} Now, assuming our class instance is called kalkylator, you can set the value like this: kalkylator.SecondOperand = 10; And retrieve it like this: x = kalkylator.SecondOperand; *However*, make sure that kalkylator in both lines are referencing the same instance of the object, or the two will be referencing two completely different values.
I don't like web forms but your statement is not true. http://www.asp.net/vnext/overview/aspnet-vnext/aspnet-5-overview#webforms and to head you off, version 4.6 webforms is part of asp.net 5, just like mvc 6 is art of 5. Don't confuse version numbers.
In your form1_Load, you are creating an instance of your Calculator class. You call this instance "kalkylator". Your variable should be accessible to the other events in your Form1 class. By default, your delcaring a local variable that is only available to form1_load event. So change this: public partial class Form1 : Form { public Form1() To public partial class Form1 : Form { private Calculator kalkylator = new Calculator(); public Form1() Then, in your event handlers, you can refer to the `kalkylator` var, and do things with it. Such as: private void button14_Click(object sender, EventArgs e) // Operator - Press an operator on the calculator and said operator appears. Intended to be used with Bool to alter between two variables to store // two different values which will be calculated. { Button k = (Button)sender; tbxEntry.Text = tbxEntry.Text + k.Text; } change to.... private void button14_Click(object sender, EventArgs e) // Operator - Press an operator on the calculator and said operator appears. Intended to be used with Bool to alter between two variables to store // two different values which will be calculated. { Button k = (Button)sender; //Set the operator.... or whatever kalkylator.SetOp(k.Text); } Get it?
Then why don't you call your setter methods to set the values you need (presumably on one of the button clicks). It's confusing because you knew to write a setter method, but don't seem to know it's there.
Move to Vermont. We need .NET developers.
There has been an overwhelming amount of productive responses. I did not expect this at all. I've looked into and read more about properties and made a lot of refurbishing in the code. You guys have been awesome! I'm going to update my progress when I've come a bit further. 
I'de like to refer you to AngularBeginner's answer. &gt; Define a data structure. Create list of said data structure.What's your problem? Where are you stuck? Did you try anything on your own, at all? You need to tell us where you are stuck. Give us an example of what you've tried, and we'll help you on. If you're as lost as i think you are, i suggest you start by watching a tutorial or something like that. 
I've found that it depends on what level you come in at. If you're entering as a junior-ish programmer then typically people are pretty understanding with how quickly you learn stuff. I've found that one of the most valuable parts of a career in programming is the exposure to more seasoned developers than yourself who are able to do a much better job of explaining real-world programming tasks than classroom or solo learning is. If you can pick up the basic mechanics of the language (simple control flow like if-else, foreach, while, etc) and the more advanced features that make C# awesome (LINQ is the greatest thing to happen to programming languages since the invention of lisp) I think you'll find that most "real" applications you encounter out in industry are actually reasonably simple and straightforward to understand; they won't require a PhD in computer science to wrap your head around. The fact that you know you'll have a learning curve and don't assume you'll knock it out of the park as soon as you sit down in front of Visual Studio means you'll probably do quite well.
DON'T use \n or \r use Environment.NewLine
You have Julie Lerman, who else do you need?
I've been doing this stuff for a while (20 years) and basically what companies want from you is a way to render their data on a page. That means: Tables of summaries with paging Details views of their individual data points Executive Dashboards that give high level views of their data Learn to do that well. Learn to fancy up the data with javascript libraries like jQuery and Graphing tools. Learn to insert new data. Learn to secure that data from people who aren't supposed to look at it. Learn to manage large sets of that data in the database. How to create good queries in your DB of choice(usually SQL based). How to index it so queries are fast. This is what most companies are looking for you to do for them. If you want to know exactly what skillsets to focus on: MVC C# RAZOR SQL jQuery are all popular key words that will stick out for you on a resume.
Valid point.
Please name your UI components and methods something meaningful instead of button, button1, etc. If I am seeing your intention correctly here it looks like button14_Click is an operation like plus, minus, etc. and when the user clicks that you want the next button to clear the entry box first. if (kalkylator.SetChange == true) tbxEntry = null; That is setting your tbxEntry reference to null, which you definitely dont want. Should be something like: if (kalkylator.SetChange) { tbxEntry.Clear(); kalkylator.SetChange = false; } On another note, you should refactor this logic out of the UI methods, and put them into the Calculator class. 
Yes that's exactly what I'm struggling with. I made the tbxEntry reference to .Clear(); instead, seeing as it is a much better suggestion. I made a [short video](http://i.gyazo.com/cc5acfdce2df2596cf7d9b85c14e56f4.mp4) to illustrate what I'm having a problem with. As of now, pressing the operators does not seem to change bool's value to false, despite it being in the code.
What does your Calculator class look like? Maybe SetChange is returning a backing field that is always true?
Make sure your event handlers are properly hooked up to the buttons. Use the debugger and set breakpoints. Learn to use the debugger!
Your set is wrong. Change it to this: public bool SetChange { set { this.change = value; } get { return this.change; } }
It got a lot better when I changed it from SetChange to value, thanks! Yet there seems to be something off when the two values are supposed to be calculated [video](http://i.gyazo.com/a58d8fa8d96075d06c64a9c7e24600c1.mp4) 
I make large C#/MVC/MSSQL web based applications for an enourmous organization and it freaking rocks. Pay is solid. Did 10 years of PHP/Python/etc until 2013 or so and ASP.NET since. There are a lot of jobs for it now. Much more than a few years ago. It's a good tree to get in to. Stay away from WebForms it's terrible IMHO.
I think I get it now. Thanks for the link!
You're mostly right. You'll learn HTML/CSS alongside the standard ASP.NET MVC flow for the most part. JavaScript is another matter though, as that will require a lot of learning by itself. JQuery is a fantastic stepping stone for learning how JS works on a basic level, and is a very useful tool for front-end design, but is merely a single library in a language that is very deep, implemented in a great variety of ways. I thought for a long time that I knew JS from having used JQuery for a while, but I was very wrong. This may all seem imposing, but the individual pieces are not difficult to pick up. I would say start with some ASP.NET MVC tutorials and move outward from there.
The javascript/html/front end stuff could be the way in the door. Many places are moving to client side frameworks like angular so things like Razor, html helpers, and other mvc.net type code is no longer needed. You can really just focus on the c# stuff.
I have the trajectory, the issue is when firing, my angles seem to be the opposite of what i need. When the cannon is aimed at 10 degrees, it fires straight up like it was aimed at 80 degrees, and also seems to fly really fast. When the cannon is aimed at 80 degrees, it fires like its at 10 degrees and much slower. 
Cool thanks. I'm fairly comfortable with SQL and I've been setting up Linux servers for a while (basic set ups running lamp and ssh, etc.). 
I stopped gaming and I've been studying networking and webdev constantly for a year now. I'll never stop learning.
Excellent. This is pretty much what I thought but I also wanted some specifics (which I've gotten).
I've been wanting to learn python really bad as I want to play with scripts to do all sorts of things... But would it be better to learn c# first?
Ok great thanks!
They both have their uses and I made some awesome stuff in python (Web/Desktop/Server shit) but I do pretty much every thing in C# now. The MSFT ecosystem and amount of resources is huge. Linq is what sold me on C# and lambdas are cool. That said I do miss a good old Linux server and whatever stack you felt like putting on it from time to time.
Do be honest I'm not sure what method I want to use. I find XML easier to read, I will need to run a console app twice daily to collect all the data then store it in something so the app has access to it all. Thanks for the tip.
yeah i can confirm 4.5.1 mono is a thing as i have used it
I think you give the wrong impression by saying MVC is for fortune 500 companies... It's just a framework - it can be used for just about any web application.
Json is easier to read and write than XML but it can't easily encode the same information. My stance is use JSON unless you have a valid reason to use XML. JSON is faster and easier to parse and contains less redundant information and general noise.
You are retrieving json, converting it to xml and later putting into database? Why not just pull the json, put it into a database to begin with? If you really need to store the response, why not store it in it's original format - json? Would make more sense.
4.5.1 is the version of the .NET framework. The latest is 4.5.2. The latest version of C# is 5.
* You cannot specify a type on objects. * Valid JSON cannot have comments. * You cannot refer to one node in another. * XML also has schemas which aid a lot in the development process, but JSON schemas is work in progress though. * Although I don't actually think it's useful but XML support encodings other than UTF-8.
I did say that I could not recall the type.
Interesting, thanks! I think Bitherd already pointed you to the correct solution.
No need to downvote, just making sure I was getting the right context.
Yeah I did. I don't like this method though. I don't see how is it better than using XPaths I used for alsmost a week now. ***Where()*** and IEnumerables are complicating everything. And also, my async function can't return stuff, out parameters don't work either, so I had to use events... I just wanted to create small app, and it's not really worth witing so much.
All this below only applies if you do need to store as XML. I don't see why as others have already pointed out but should you prefer that for whatever reason here goes... If I understand correctly, you'll just need a string of the XML and you can do the storing and loading yourself, yes? You can always put XML decorators around ['Paste special &gt; JSON as Classes'](http://blog.codeinside.eu/2014/09/08/Visual-Studio-2013-Paste-Special-JSON-And-Xml/) then serialize object instances to an XML string with .NET XML serialization libraries (MSDN well-documented). Alternatively (and using the example in the link) you could do XML serialization from [my approach](http://csharpandsuch.tumblr.com/post/92926064578/xml-serialize-deserialize): class Program { static readonly System.Web.Script.Serialization.JavaScriptSerializer jsSerializer = new System.Web.Script.Serialization.JavaScriptSerializer(); static void Main(string[] args) { var root = jsSerializer.Deserialize&lt;Sample.Rootobject&gt;("{" + "\"firstName\": \"John\"," + "\"lastName\": \"Smith\"," + "\"isAlive\": true," + "\"age\": 25," + "\"height_cm\": 167.6," + "\"address\": {" + "\"streetAddress\": \"21 2nd Street\"," + "\"city\": \"New York\"," + "\"state\": \"NY\"," + "\"postalCode\": \"10021-3100\"" + "}," + "\"phoneNumbers\": [" + "{" + "\"type\": \"home\"," + "\"number\": \"212 555-1234\"" + "}," + "{" + "\"type\": \"office\"," + "\"number\": \"646 555-4567\"" + "}" + "]," + "\"children\": []," + "\"spouse\": null" + "}"); Console.WriteLine(root.ToString()); //&lt;Rootobject&gt;&lt;firstName&gt;John&lt;/firstName&gt;&lt;lastName&gt;Smith&lt;/lastName&gt;&lt;isAlive&gt;true&lt;/isAlive&gt;&lt;age&gt;25&lt;/age&gt;&lt;height_cm&gt;167.6&lt;/height_cm&gt;&lt;address&gt;&lt;streetAddress&gt;21 2nd Street&lt;/streetAddress&gt;&lt;city&gt;New York&lt;/city&gt;&lt;state&gt;NY&lt;/state&gt;&lt;postalCode&gt;10021-3100&lt;/postalCode&gt;&lt;/address&gt;&lt;phoneNumbers&gt;&lt;Phonenumber&gt;&lt;type&gt;home&lt;/type&gt;&lt;number&gt;212 555-1234&lt;/number&gt;&lt;/Phonenumber&gt;&lt;Phonenumber&gt;&lt;type&gt;office&lt;/type&gt;&lt;number&gt;646 555-4567&lt;/number&gt;&lt;/Phonenumber&gt;&lt;/phoneNumbers&gt;&lt;children /&gt;&lt;/Rootobject&gt; Console.ReadLine(); } } You'll need to extend copypasted JSON class with my `SimpleSerializable&lt;T&gt;` public class Sample { public class Rootobject : SimpleSerializable&lt;Rootobject&gt; { public string firstName { get; set; } public string lastName { get; set; } public bool isAlive { get; set; } public int age { get; set; } public float height_cm { get; set; } public Address address { get; set; } public Phonenumber[] phoneNumbers { get; set; } public object[] children { get; set; } public object spouse { get; set; } } public class Address { public string streetAddress { get; set; } public string city { get; set; } public string state { get; set; } public string postalCode { get; set; } } public class Phonenumber { public string type { get; set; } public string number { get; set; } } } Where the following prerequisite ADTs from the blog entry have been defined somewhere (see comment below):
 using System.Collections.Generic; using System.Runtime.Serialization; using System.Xml; using System; using System.Linq; using System.Xml.Serialization; using System.IO; public abstract class SerializerBase { protected static readonly Dictionary&lt;Type, XmlSerializer&gt; Serializers = new Dictionary&lt;Type, XmlSerializer&gt;(); } public class Serializer&lt;T&gt; : SerializerBase { //XmlSerializer works by generating an assembly on the fly; //if you use the XmlSerializer(Type) constructor, it caches it //and looks it up; but for any other constructor it doesn't. //And assemblies can't (usually) be unloaded. So you just get //more and more and more assemblies eating your memory. //need to cache the serializer if you are running this in a loop //private static readonly Dictionary&lt;Type, XmlSerializer&gt; serializers = new Dictionary&lt;Type, XmlSerializer&gt;(); public static string Serialize(T obj) { return Serialize(obj, new Type[] { }); } public static string Serialize(T obj, Type[] extraTypes) { return _serialize(obj, _makeSerializer(typeof(T), extraTypes)); } public static T Deserialize(string xml) { return Deserialize(xml, new Type[] { }); } public static T Deserialize(string xml, Type[] extraTypes) { if (string.IsNullOrEmpty(xml)) throw new ArgumentNullException("xml"); XmlSerializer serializer = _makeSerializer(typeof(T), extraTypes); using (StringReader stream = new StringReader(xml)) { try { return (T)serializer.Deserialize(stream); } catch (Exception ex) { throw new InvalidOperationException("Failed to create object from XML string.", ex); } } } private static XmlSerializer _makeSerializer(Type T, Type[] extraTypes) { if (extraTypes.Length &lt;= 0) return new XmlSerializer(T); XmlSerializer xmlSerializer; if (Serializers.TryGetValue(T, out xmlSerializer)) return xmlSerializer; Serializers.Add(T, new XmlSerializer(T, extraTypes)); return Serializers[T]; } private static String _serialize(T obj, XmlSerializer serializer) { StringWriter stringWriter = new StringWriter(); try { using (XmlTextWriter xmlWriter = new XmlTextWriter(stringWriter) { Formatting = Formatting.None }) { xmlWriter.WriteRaw(""); XmlSerializerNamespaces xmlNameSpace = new XmlSerializerNamespaces(); xmlNameSpace.Add("", null); serializer.Serialize(xmlWriter, obj, xmlNameSpace); stringWriter.Flush(); return stringWriter.ToString(); } } catch (Exception ex) { throw new InvalidOperationException("Failed to create XML string from object.", ex); } finally { stringWriter.Close(); stringWriter.Dispose(); } } } public static class IEnumerableExtensions { public static IEnumerable&lt;TS&gt; MergeWith&lt;T1, T2, TS&gt;(this IEnumerable&lt;T1&gt; input, IEnumerable&lt;T2&gt; merge, Func&lt;T1, TS&gt; prop, Func&lt;T2, TS&gt; prop2) { return input .Select(prop) .Union(merge.Select(prop2)); } } public static class TypeExtensions { public static IEnumerable&lt;Type&gt; Subtypes(this Type typ, Type[] state) { Type[] excluded = new Type[] { typeof(Array), typeof(Type[]), typeof(Object), typeof(string), typeof(XmlNodeList) }; Type[] initial = Subtypes(typ) .Where(itm =&gt; !itm.IsPrimitive &amp; (itm.TypeInitializer == null || itm.TypeInitializer.IsConstructor) &amp; !itm.IsCOMObject &amp; !itm.IsArray &amp; itm.IsClass &amp; !itm.IsEnum &amp; !excluded.Contains(itm)) .ToArray(); foreach (Type type in initial) if (!state.Contains(type) &amp; type.Subtypes().Any(t =&gt; t.IsAssignableFrom(typeof(ISerializable)))) { initial = initial .Concat(Subtypes(type, initial.Concat(state).Distinct().ToArray())) .Distinct() .ToArray(); } return state.Concat(initial); } private static IEnumerable&lt;Type&gt; Subtypes(this Type typ) { return typ .GetProperties(System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Instance) .MergeWith(typ.GetFields(System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Instance), prp =&gt; prp.PropertyType, fld =&gt; fld.FieldType); } } [Serializable] public abstract class SimpleSerializable&lt;T&gt; where T : SimpleSerializable&lt;T&gt;, new() { private readonly T _raw = default(T); // Static Fields In a Generic Type // it's ok to have a static field in a generic type // so long as we get one field per type argument. // In the vast majority of cases, having a static field // in a generic type is a sign of an error. // The reason for this is that a static field in a generic type // will not be shared among instances of different close constructed types. // This means that for a generic class SimpleSerializable&lt;T&gt;, values of // SimpleSerializable&lt;Customer&gt;.types and SimpleSerializable&lt;Customer&gt;.types // have different, independent values. In this case, this is not only preferable // but actually unavoidable. private static readonly Type[] types = new Type[] { }; static SimpleSerializable() { types = typeof(T).Subtypes(new Type[] { }).ToArray(); } protected SimpleSerializable() { if (_raw == null) _raw = (T)Convert.ChangeType(this, typeof(T)); } protected SimpleSerializable(string representation) { _raw = Serializer&lt;T&gt;.Deserialize(representation, types); } public T Object() { return _raw; } public override string ToString() { return Serializer&lt;T&gt;.Serialize(_raw, types); } } 
I don't know if this is exactly good practice but sometimes to make a program wait I pull time. Time the use an if to check if time. Time &gt; heldTime + waitTime
And I said: Look it up and come back with a real example. This way it's just meaningless wild guesses. Could be a million things.
Thanks. All true. Interesting. I'd never thought about typing json objects before, despite being mainly a c# dev, probably as I mainly use JSON in messaging layers and Ajax.
You could just use a normal method for that.
Much obliged. 
Isn't this what OP already does? Anyway it isn't a good idea since this means the application will use all the CPU cycles it can get its hands on. In any case where the application needs to wait for something it is always a better option to yield to the operating system until your program is ready to continue. A thread that doesn't do anything of value shouldn't consume reasoures. Waiting for a specific time period is a waste of resources.
In a construction like this, it might be an idea to create a proper constructor within your object, where you just pass e and do the same variable setting but then in the constructor itself. This way you can get in some proper error handling as well instead of using anonymous functions and inline linq, which reduces understanding of what it is you are actually doing.
Do you understand the difference between C# 5.0, Asp.Net 5.0 &amp; Asp.Net MVC 5? While all of them have 5 in their name and they are completely different things and have different relations with linux. Nowadays Visaul Studio is "free" for single developers and small companies - Visual Studio 2013 community edition is the thing you are looking for. It is enough for all C# related development. Some paid tools are really nice - Resharper, Telerik, Octopus, Bamboo, ... dozens of them. However, there is no tool that have "need" status. PS tools were chosen to make "OMFG so strange list" impression.
If nothing else this makes it much, much easier to debug. Nothing's worse than trying to fix a bug in a method that returns an object initialized in this way. 
I did some micro benchmarks on this a few years ago, and up to around 10 or so items in the initializer, the performance hit was pretty severe. Don't initialize variables this way inside loops. 
Looks like it already is coupled with e.
Thank you! I usually find it easier to read concatenation since it presents things in the order that they appear in the resulting string. But if my programs ever end up doing it too much, I'll remember to optimize with StringBuilder.
Thanks for the answer.
 public static class EMapper { public static Something Map( E e ) { return new Something { PropA = e.Foo, PropB = e.Bar, PropC = ParseSomething(e.FooBar), Id = e.Id, PropD = (uint)e.Blah, Selected = e.Selected, Deleted = e.Deleted, SomeData = MapInputValues( e.SomeValues ) }; } private static IList&lt;AnotherObject&gt; MapInputValues( SourceInputValues values ) { return values == null || !values.Any() ? new List&lt;AnotherObject&gt;() // (opinion) DON'T return null for collections, return an empty collection : values.Select( d =&gt; new AnotherObject { ID = d.Id, // INCONSISTENT!!! Values = d.Something.Select( c =&gt; new KeyValuePair(c.Foo, c.Bar) ) }) .ToList(); } }
WPF is a lot more customizable, and layout is generally a lot simpler in WPF. However WPF also requires a lot of ceremony, so I still stick with Windows Forms to create trivial internal tools, or when I need a window for a OpenGL context or similar.
I actually stumbled on this myself a week or so ago. It looks really interesting. But as a C# person not really familiar with F#, I could do with some more explanation for the C# approach. 
I've worked with MS technologies over the last dozen or so years for a large corporation. I've built or worked on web services of various sorts and complexity, databases, stand alone utilities, web apps ranging from simple to massively complex. And on and on. .NET, ASP.NET, C#, SQL, Lync, WCF, MVC, XML, XSLT, SOAP... And yeah, security is not just important, but on most companies' minds lately. You need to build some small apps. Console, Windows, WebForms, MVC, etc. Maybe a web service and client app. There are going to be twenty ways to do each thing, partly because that's the nature of engineering, but also because that's the nature of Microsoft--seems like they are always deprecating one technology in favor of another (usually for good reasons, but it can get frustrating). If I were you, i'd look at a list of c# or .net features or technologies, then build an app that uses a set of them. Rinse and repeat. Doesn't matter what the app does, just that you're using the technologies or language construct. Once you're familiar with some basic stuff, brainstorm a list of small apps you could use at home. Then build some or all of them. Start small and work up to larger projects. Look for opportunities to donate your time and skills. They have real world problems to solve, and the experience will look better on a resume than personal learning and projects. Community groups, a church or synagogue, charities, ... Also look for local nerd groups that might have opportunities. Ask and answer on sites like StackOverflow. When we interview for software engineering positions, we will look you up there. It's a good insight into how you play with others, your technology focus, etc.
You're better off learning WPF now, but it's probably smart to also create a few small projects in WinForms. Even if WPF is replaced it is a better way to program and more like the way we are going to program from now on. That said, I feel the 4 semesters of assembler I had in college are useful even though I have written only managed code since 2004. And having some winforms will help in a similar way. 
+1 on the Model/Type Builder method. I'm a fan of keeping my constructors nice and simple.
I'm pretty vehemently against initializers. I don't really have any real justification, except for the fact that debugging them is hell. I hate seeing my entire screen get highlighted as I step through code and hit a big initializer.
I think Windows Forms is great if you're starting out and only building small applications - it's easy to create a form, drag some controls on, hook up some events and you've got a working application. However, for any advanced applications (ones that extend beyond simple CRUD operations), you'll find that WPF does a *much* better job at it - not only by being generally easier and more pleasant to work with (with the use of XAML as markup, powerful data binding, and extensive customisation support), but by also promoting the separation of your logic code from your view code (by the use of the Model-View-ViewModel) pattern; generally making it easier to maintain and extend the applications you build. For instance, if you were to create an application where the user could enter and view books, in Windows Forms I'd wager you'd have to write a fair amount of code to update the UI when the user selects a new book, or they change the name of a book via a text box, etc. In WPF, you could do the entirety of that in XAML with just data binding alone. By reducing the amount of boilerplate code you need to write to get the basics of your application working, you've got more time to add the unique and interesting features you want to add instead.
You were almost there, you have your length but need to subtract your start position or you'll go past the end. Console.WriteLine("What name would you like to use?(please enter in lower case)"); name = Console.ReadLine(); namelength = name.Length; letter = name.Substring(0); restofname = name.Substring(1, namelength - 1);
WPF. Leave WinForms alone ;-)
WPF.
Unfortunately I'd like it to be a desktop application, that runs on startup (if that option is enabled) for alerting purposes.
This seems right. I'd only add that I've never had good luck getting a Winforms app to look good. Styling and making things look professional just seems much _much_ easier in WPF.
I've found Caliburn Micro and BindableCollection to be awesome for this. The [BindableCollection](https://github.com/Caliburn-Micro/Caliburn.Micro/blob/master/src/Caliburn.Micro/BindableCollection.cs) raises the events on the UI thread so you can add to it from a background thread and everything just works. Besides that really helpful bit, Caliburn Micro is also my preferred MVVM library in general. But if you don't want to use it, you could probably take the ideas from their BindableCollection and use them in your project however it makes sense.
You definitely remember correctly. [This overload of Substring](https://msdn.microsoft.com/en-us/library/hxthx5h6%28v=vs.110%29.aspx) lets you pick your starting character and it gets it and everything after it. And you're right, if your intent is to trim away starting characters, you're better off using this overload: you avoid silly mistakes and you communicate your intent more clearly.
3rd party controls are still far more mature in the WinForms world than they are in WPF
One little benefit to WinForms is that it works in Mono. It doesn't look great, but it mostly works. Quite nice to see your previously Windows-only GUI binary running on a mac with no changes!
 Console.WriteLine("What name would you like to use?(please enter in lower case)"); name = Console.ReadLine(); namelength = name.Length; letter = name.Substring(0, 1); restofname = name.Substring(1, (namelength - 1));
/u/FizixMan s answer is correct, but it can be a little simpler. Console.WriteLine("What name would you like to use?"); name = Console.ReadLine().ToLower(); // always validate your input. if(string.IsNullOrWhiteSpace( name ) || name.Length &lt; 2) throw new ArgumentException( "Use more letters, n00b."); // at this point we know there are at least 2 letters, so just use indexing to grab the first one letter = name[0]; // this substring overload will automatically figure out the remaining length restofname = name.Substring(1);
Right but I don't even see the customized customized buttons that are suppose to appear in my toolbar at all. 
Just now learning WPF after years of WinForms. It is a different world. 
looks like a homework assignment.
See the answer [here](http://stackoverflow.com/questions/13019402/converting-absolute-path-to-relative-path-c-sharp) about relative paths.
Open up a command prompt (WinKey + r, cmd, enter). You start off in your user directory ( c:\users\username\ generally). Type "cd .." Your now up a level to Users. type "cd .." enter, again. Again, up another level to the root of the drive. Go back down to your user directory ( cd users\username). Now try going up two levels at once: "cd ..\\..\\" magic.... That's basically what's going on. Relative paths are just that, relative. They are based on where you start. The ".." just means up a level, and "..\\.." is up two levels. "..\\..\Datafolder\" is up two, then down into datafolder. Play with it in a command window. Also, sometimes the biggest challenge with relative paths is determining what your starting directory is. Debug vs Production environments can cause you to scratch your head. Always a good thing to have your program log it's working directory early in it's bootup sequence. edit: had to escapes the backslashes for reddit to show them.
Not sure I get it, but maybe something like this: List&lt;string&gt; myNames = new List&lt;string&gt;(); for (int i=1;i&lt;=amountofnames;i++) { Console.WriteLine("What name would you like to use?(please capitalize the first letter.)"); myNames.Add(Console.ReadLine()); } foreach(string currentName in myNames) { letter = currentName.Substring(0,1); restofname = currentName.Substring(1); Console.WriteLine("The Name Game"); switch (letter) //rest of code here.... }
You need to store your names in an array, list, collection, something. Not sure how far your class is into C#, so I can't really tell you what you should be using. I'm going to guess an array of strings. Anyhow, here you go: https://dotnetfiddle.net/eruGBM using System; public class Program { public static void Main() { string name; string letter, restofname, names; int amountofnames; Console.WriteLine("How many names would you like to use?"); names = Console.ReadLine(); amountofnames = Convert.ToInt32(names); string[] theNames = new string[amountofnames]; for (int i=1;i&lt;=amountofnames;i++) { //don't ask them to capitalize the first letter, you're a wizard harry. Act like one. Console.WriteLine("What name would you like to use?"); //We use the ToTitleCase from the Globalization namespace to do the ProPeR CaSe ConverSiOn for us... extra points because it's culture agnostic! theNames[i-1] = System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(Console.ReadLine()); } Console.WriteLine("The Name Game"); foreach( string someName in theNames) { name = someName; //ToUpper to make sure the first letter is capitalized. letter = someName.Substring(0,1); restofname = someName.Substring(1); switch (letter) { //Cases for vowels case "A": case "E": case "I": case"O": case"U": case "Y": Console.WriteLine(name + "!"); Console.WriteLine(name + "," + name + "," + "bo-b" + restofname); Console.WriteLine("Banana-fana fo-f" + restofname); Console.WriteLine("Fee-fi-mo-m" + restofname + "\n" + name+"\n"); break; //Cases for B,F,M case "B": case"F": case"M": Console.WriteLine(name + "!"); Console.WriteLine(name + "," + name + "," + "bo-"+letter + restofname); Console.WriteLine("Banana-fana fo-" +letter+ restofname); Console.WriteLine("Fee-fi-mo-" +letter+ restofname + "\n" + name+"\n"); break; //Cases for consonants excluding B,F,M case "C":case "G":case "H":case "J":case "K":case "L":case "P": case "Q":case "R": case "S": case "T":case "V":case "W":case "X": case "Z": Console.WriteLine(name + "!"); Console.WriteLine(name + "," + name + "," + "bo-b" + restofname); Console.WriteLine("Banana-fana fo-f" + restofname); Console.WriteLine("Fee-fi-mo-m" + restofname + "\n" + name+"\n"); break; } } } } You may want to implement your own ToTitleCase method, or your teacher may accuse you having someone else write your code..... Or you could say you went here http://www.dotnetperls.com/totitlecase and learned about it, and thought you'd show off. 
Thanks man. Glad you were here.
WPF. 
TIL: I must be already crazy since I detect no change in my sanity when dealing with WPF radio button groups.
It just depends on the task at hand. If it's something internal and no one gives a shit about UI, go with winForms. If clients will ever see it, go with WPF.
Caliburn.Micro is great, very simple and light. Would encourage everyone to try stay on the MVVM train for as long as possible when using WPF. Something that can be hard as some of the built in controls don't support binding for a lot of properties or the bindings are one way.
Yes with mono, on Windows though. Your comment kind of eludes that you can use it on other platforms.
I find that dependency properties are often overused by people new to WPF. And binding RadioButtons is also pretty damn easy tbh - for many typical cases all you need is a simple reusable converter. http://www.wpftutorial.net/RadioButton.html The XML is indeed kind of verbose, though modern editors help a lot. But if all you're doing is dragging simple controls back and forth you hardly have to bother. Doing anything custom or visually complex is often much more involved and verbose in winforms anyhow. 
It's unfortunately the compiler being helpful and doing an implicit cast thinking it's done a good job. I think tools like Resharper might pick up on this? Certainly a good Static Code Analysis tool would. Back in the old days a compiler would error at this line saying an implicit cast may result in data loss, in this case that error would have been useful. 
Strings in .Net are immutable (they can't be changed) so concatenation means copying both strings to somewhere else in memory, and this can happen for each individual concatenation. StringBuilder uses mutable strings so the memory is just expanded for each concatenation. Also you can preallocate memory for StringBuilder making this even more efficient. Most recommendations say to use StringBuilder when you have "many" strings to concatenate. "Many" varies from 10 to 1,000 depending who you ask. String.Format is certainly better looking, easier to maintain, and performance for a 3 string concatenation isn't worth optimising. It's also more powerful and the "right" choice in this example. There's also String.Join but that's a different topic :)
&gt; Would encourage everyone to try stay on the MVVM train for as long as possible when using WPF. I have to ask: why? I've written lots of windows GUI apps in F# calling WPF directly without using MVVM, binding or XAML. Why would I want to use any of them when F# gives me a stronger statically typed interface with less code? 
You could do wpf without dependency properties &amp; xml editing. So even for small dirty apps wpf is usually better than winForms.
WinForms is useful if you need to get low-level and interoperate with native Win32 GUI code, but yeah, I'd avoid it for anything else.
WPF all the way.
AspNet is a library, not a language. You can develop c# with a text editor, although Mono Develop, even the free version, is probably better.
Would love an opinion beyond just the downvotes
You've somehow turned the 'view white space' option on. You can turn it off by pressing ctrl+r, ctrl+w. Or, if you somehow dislike shortcuts, it's also under the Edit &gt; Advanced menu item.
Thank you Caethy =) 
Yeah, I know nothing about xamarin, but this sub downvotes the shit out of anyone recommending its use.
yeah hes cheesy but fluent and covers things slowly.
I'm still confused as to whether .NET would need to be installed separately, or if installing Mono takes care of it all. Do you know? I did visit that link.. the entire site seems focused on Mono as an IDE, and it doesn't seem to make it obvious anywhere if anything else is needed (that I have yet to see). 
You can. Winforms works fine under OS X even if it's ugly as all sin.
Wow conceptually this seems backward to me. That a developer, has never seen a relative path in some form before writing code. I guess, since I grew up learning to use a computer in a console rather than a GUI might be why it seems so obvious to me. 
haha last time I used the cmd was probably 15 years ago. Also, I'm new to programming and have no class/teacher. I've been learning it by googling. I've never had to use full filepaths, let alone relative. 
A DataSet can have multiple tables in it, so you can also pass multiple queries in a single SQL statement using a semicolon, like: string sql = "SELECT * FROM [Table1]; SELECT * FROM [Table2]"; Now the DataSet will contain two DataTables, like: DataTable table1 = ds.Tables[0]; DataTable table2 = ds.Tables[1]; Honestly I don't see this used all that often, but it can certainly be done!
Sounds like you have an observablecollection of basically bool objects (streaming, not streaming). I would start there by just binding an item control to the collection and having a datatemplate to show green or red based on state. The Timestamp sounds like just a queue system that gets updated when property has changed on the objects in the observable collection and just adds a line to the queue. Rx would have some nice things to do some of this for you without making a class, but I dont see any third party libraries that would be needed to start this. If you havnt learned the built in tools i would stick to those before directly switching over to third party libraries.
Thanks for the big comment! 1. The NumericUpDown controls probably appear small because of your display's resolution. I said in the post &gt;it does not scale to the resolution of different screens. Depending on your display, it might look kind of wonky. I found it difficult to figure out how to fix this. I've been coding this project mostly on my desktop PC with a 1080p screen. This problem became apparent to me when I put the project on my laptop which has 768 vertical pixels. I tried fiddling with the AutoScaleMode and AutoScaleDimensions properties on the controls, but to no avail. 2. Thanks, I've tried include mnemonics where I can, but I guess I overlooked them for the menu items. 3. Yes, I'm aware that help dialogs are an abomination. I can't remember why I put them in textboxes, but I do remember I had some reason. It may have been something as simple as being able to copy/paste the text into the control. I already had all the text written in word document rulesheet. 4. Didn't realize about that tab order! That should be easy enough to fix, thanks. Really the goal with the help is to create a proper windows help system using Sandcastle, and do away with the dialogs altogether. [This is the kind of help system](http://imgur.com/AyoH0vv) I'm talking about. You know, classical windows app help (but much simpler than the one in that pic!). Thanks again for taking the time to play with the app and give me feedback!
Are you building a library for others to consume? If not, do whatever is convenient because you can always change it later.
&gt; It just depends on the task at hand Sure, if your task is to waste a lot of time having to type a lot of retarded completely unneeded code behind for the most stupid mundane of tasks, and having your code completely coupled to the UI platform with absolutely zero reuse possibility, and also have your UI look like it was put together by a freakin caveman from the stone age, then sure winforms is the way to go. For anything else, use a platform that's not completely useless and deprecated, please.
&gt; One little benefit to WinForms is that it works in Mono And yet, Miguel de Icaza and the entire Mono team are recommending **against** it. They say that people should use MVVM and create specific UIs for each platform, like they're doing right now for Xamarin Studio (WPF on Windows, Cocoa on Mac, GTK# on Linux). winforms gives the "advantage" of allowing you to create an inferior product with more code behind. Really nice.
One justification is that it's an expression instead of a group of statements.
That rule is too crude. For instance, you would want to avoid returning "working" types such as List, and prefer, say, ReadOnlyCollection. Then, returning one of the new, expressive, interfaces is often the most flexible (IReadOnlyCollection, -List etc.). Then you have some freedom in changing what actual object you're returning. 
I don't see any forward slashes in your question. 
ALTHOUGH, except when writing to files (and relying on useless notepad), \n works just as well in practice on Windows. Just like / works as directory separator except directly in cmd and explorer.
You can implement all of these things yourself, but you would have to do all the logic to support them. With XML they are supported by the toolchain.
Think of obj, short for object, as a temporary folder used by the compiler. You should never need to use this folder. Bin, short for binary, is the output folder. This is where the results of the compiling of your program go. 
Why do you want to make it a "normal" class? Extension methods are meant to add functionality to previously-existing objects. What your teacher has done is *added* two methods to the `string` type. var x = "sekrit".Protect(); var y = x.Unprotect();
Heh. Fair enough. That's what I get for answering programming questions right after waking up.
Doesn't this need the *Console.ReadLine();* To even print on the screen to begin with?
That and the fact it doesn't "reject" anything, it outputs a log message then moves on to the next part of the program anyway. Surely should at least be throwing an exception or returning false or something.
It involves reflection and a dynamic assembly being created. For a small set of initializer values, that cost exceeds the benefit. If you have over 10 or so values to set, you start to reach break-even. But at the expense of decreased maintainability (not as bad as OP's 2nd example, but...) 
Perhaps. I got the impression he was simply trying to emphasis the difference between the two Boolean operators. I too knew instinctively that &amp;&amp; was AND, and that no value supplied would result in a True condition. I was mildly annoyed by it because of his exposition and that I however briefly questioned what I already knew. But what I already knew was correct.
Man, I really need to remember to clean/rebuild/run solutions after making a change. I tried that before I asked and it didn't change because I didn't clean/etc it. Thanks man, it works great now.
For what it's worth, I also wanted to change it because I try to minimize use of static where I can, as well as simply not knowing much (anything) about extension methods, meaning I don't know what I'd have to keep in mind, or how to deal with any issues it might cause me, if I use the class further.
Just in case there's any misunderstanding, the problem you showed is not a syntax error, it's a logic error. A syntax error cannot compile, but the code you provided is entirely valid C# code, it just doesn't do what you want it to (a logic error). In the same way, I think /u/cronus89 brings up a good point that the age error should be handled, which is another logic error. But it's possible the question was just kept as simple as possible to help people focus on the source of the first problem.
Personally I don't think it's such a great question. The question itself contains a big clue: &gt; supposed to reject age values which is less than 3 **or** greater than 100. The question says it should be an **or** condition, but the code contains a boolean **and** condition. Making the code match the logic in the question fixes it: if (age &lt; 3 || age &gt; 100) I realize that's not really the question, but I would think that knowing how to fix the code is important too.
As a wpf dev I hate this reality, but now you should be looking at WinRT and "universal apps".
This sub has so much praise for Xamarin. I tried it out to help out a friend with Android development and it was a disaster. :( Very little examples and a lot of stuff behind a paywall. But I think in 1-2 years it might have some promise!
Very cool, I didn't know this option! Gotta write it down
&gt;Should I expect that the vendor "WidgetWork()" method should be able to use MyWidget, even though VendorStuff.dll didn't reference CustomerStuff.dll when it was built? Generally, yes. VendorStuff.dll doesn't need to know anything about CustomerStuff.dll at build time, all it needs to know is which members `WidgetBase` has. The CLR takes care of calling the appropriate implementation at run time. There are of course ways to break this. Code in `WidgetWork()` could manually check the type of the supplied `WidgetBase` and perform actions based on that for example, which might fail when encountering an unknown type. It's also possible to have `internal abstract` members in a `public abstract` class, which would make it impossible to actually implement it in another assembly even though the class itself is inheritable.
So the test is performed again later on and then rejection happens? If so not very DRY? There are no curly braces so we cannot assume the next line rejects or anything like that. It is a trivial example I will admit.
Agreed, there is no syntax error in the snippet. In the video I linked, in the previous question, he addresses run time, compile time and errors.
yeah... I think I messed something up.
I see... yeah, that's what I've been wondering about too.. And damn, it is really exciting to have a look into the actual source code of this. Thanks!
You should just have it automatically do those things, which is the default too.
Mind checking this for me? var categories = from table in page.DocumentNode.DescendantsAndSelf("table").Where(o =&gt; o.Attributes["id"].Value != null) from tbody in table.Descendants("tbody") from a in tbody.Descendants("a") where a.ParentNode.Name == "td" select a; Is it correct? Can I even do something like this? each &lt;a&gt; tag is in diffrent &lt;td&gt; tag, and the path looks like this: table/tbody/tr/td/a It throws NullException.
I haven't worked with unity, but a stack trace would help.
Look at your debugger. I can't help you now.
I am. Never mind.
Thank you so much, that was the problem. 
It is a badly put question in my opinion. Clearly it is &amp;&amp; instead of ||, but there are no circumstances under which the snippet would 'fail'. The test would show a fail, the snippet will happily run without failure. That and the answer being in the question. 
You can also ask Unity questions to /r/unity3d or /r/unity2d, they answer Unity specific C# questions there too. 
Apologies, I was thinking of Integer in Java. Different type and different language. It was a bad example of something that could cause the code to malfunction (apart from giving using certain values).
Console.ReadLine() will only halt execution while it waits for input. As soon as Console.WriteLine() is executed, the string is written to the appropriate output. For example, if you put a Thread.Sleep(5000) at the end of your code instead of a Console.ReadLine(), the program would stay running for 5s, and you'd see everything Console.WriteLine() had output to the terminal.
thanks
Generally speaking you can't change the return type without introducing a breaking change. Many frameworks are going to ignore the declared return type anyways and examine the objects interfaces. That's why I get pissed when people pretend that making the return type IEnumerable or IReadOnlyCollection actually makes the returned object read-only. So you're better of following the .NET framework and return a strongly named type such as CustomerCollection. Then you can change it in meaningful ways such as adding new functionality in a discoverable fashion.
ReSharper 8.2 does odd things to me at times and tells me my code is invalid when the compiler and main intellisense says everything's AOK. On the other hand, it seems to happen most frequently in VB.Net (No, I don't have a choice at the time, it was like that when I got here.) and usually closing/restarting visual studio does the job of fixing it.
I haven't used it myself, but I believe NAudio and its WasapiLoopbackCapture class may be what you're looking for.
&gt; Testability, and some degree of compossibility (can still compose views + code behind). We all test our code, right!? Can you elaborate on this? My code is just functions. I can test them like any other functions and they compose like any other functions. Last I looked, data binding required the C# developer to write the same identifier out seven times in different places and get them all identical or the customer would get a run-time error because the system is not statically checked. If you're doing that then you need to test everything very carefully indeed. But I don't understand why anyone does that. 
Check out the sidebar on this subreddit for some resources.
I've used NAudio for a while now. I've implemented FFT algorithms (spectrum part) as well. Really easy to use. And there's actually a bunch of tutorials available online. But as previously said; start off at Naudio and familiarize yourself with it. Then use the Loopbackcapture and send the data off to FFT, from there you have your real and imaginary array from which you can get the frequencies/decibels/etcetc with a few simple mathematical formulas. Good luck! 
Plus it teaches you to look hard at it. Your eyes could easily just focus on the 3 and the 100 and assume the check is valid. These kinds of errors require focus, especially if you've written the code yourself and subconsciously see what you expect to see.
I find "trick" problems like this silly and insulting. You should question people on theory not syntax.
Or just run it with Ctrl + f5.
Yeah - I think the fact that this is a perfect example of [the cover of his book](http://www.csharpcourse.com/)... That is - it's a picture of a [rubber duck](http://en.wikipedia.org/wiki/Rubber_duck_debugging). And you read what he says the code does, then there's that discrepancy. The trick is that he got you to think the code does something, and then you read it - are you going to READ the code, or do you gloss it over, see a boolean operator and think - nothing weird here, without recognizing it's an "and" and not an "or"... It's not so much about the code itself, but about HOW to code, about the process of understanding errors while you code, etc... And that, I think, is actually a good idea. Using different techniques to teach ways to think beyond just "here is syntax a, and you apply it to parameters b, c, and d and the result should be of type e..." yadayada...
&gt; It's not so much about the code itself, but about HOW to code Exactly. My day job is in training, and I always try to trick people into missing obvious errors because it forces you to think critically and not take things for granted. Realising you missed something obvious because you were making assumptions is a powerful learning tool. I've read that book, and it's quite good. It solidified a lot of knowledge for me with some great examples.
So some find the question silly or badly put. Why then (from the video) is Rob Miles 'proud' of the question? I guess that is what threw me for a brief moment: where's the there there? Wait, there isn't one. I don't mean to beat up on the guy, I'm trying to learn. Stuff like this (if briefly) makes me question what I know. Do I need to keep an eye out for other 'tricky' trick questions?
&gt; Hence, use an interface, then you can change the type of the returned object, and this does happen in practice also in .NET. Why would you possibly want to do that? I've been working with c# since it's second beta and I have never seen a single example of someone needing to change the type of the returned collection value without also wanting to change the declared return type. Have you?
do you have any programming background? Where are you starting from?
Check code.google.com and github.com and even sourceforge.net to see if someone has done something similar or exactly as you want it........With open source, you can take a project and modify it to do what you need, whether it is a tweak or a complete rewrite.
One small suggestion would be to use an abstract class instead of or in addition to the interface and implement GetFileSize in the abstract class, since otherwise you'll just be repeating the same code in all the subclasses.
That's only half the fix. Printing to the console doesn't "reject" the input, meaning the rest of the function will still run. (Yes, I have seen such nonsense in production.)
Several others have already pointed this out but I would use an abstract class. It would encapsulate the code to determine file size. I would also include a constructor that takes the file name. As /u/yumz said, the properties and the methods in the interface are redundant. I personally would get rid of the methods, but the choice is yours. &gt;Surely I don't want to create a new Class for each file that is found, right? Don't worry about creating an **instance** per file. That is exactly what I would do in this case. Object creation is not something to be avoided. It is just a normal part of writing object oriented code.
&gt;Don't worry about creating an instance per file. That is exactly what I would do in this case. Object creation is not something to be avoided. It is just a normal part of writing object oriented code. This won't chew up memory when say a directory of 25K image files is selected on a DVD or USB drive?
Yes, they can be single or multiple pages, just like PDFs. Indeed in a large scanning project pdf documents can begin life as a tif file. It can be more efficient to scan as tif and process overnight to pdf.
&gt; For generating CSV reports, you could use this[2] library which is highly recommended. Thanks for the link. For the time being while I am still learning I think I'll want to do this myself rather than plugging in someone else's work. I've already experimented writing out to a CSV and I think I've go a handle on that end of it.
You could simply redo your one line of code instead: private void search_KeyPress(object sender, KeyPressEventArgs e) { if (e.KeyChar == (char)ConsoleKey.Enter) { webBrowser1.Navigate(textBox1.Text); } } Edit: I've slept since answering this question and removed everything other than the answer.
Because your class currently has 0 fields (no backing store for your properties), every instance is very very small. So 25K instances is like maybe 100KiB of memory. Generally, if your classes are well designed with a single responsiblity/purpose, you won't need to worry about it until you've done some testing to see if memory is an issue.
So long as each actual file is only loaded to do the page counting and is subsequently unloaded, the memory requirements of each instance is nearly negligible. 272 bytes per instance (probably wrong, but close enough) is about the biggest your class could get due to MAX_PATH, and since few file paths are 260 bytes long, the average size will be much smaller. So in the worst case, 272 times 25k is only 6.5MB of memory. Nothing to worry about.
i had a similar problem, but I solved it using Dockpanels instead of grids and settign LastChildFill=true
My apologies. They must have changed it at some point, or more plausibly, I'm getting it confused with something else. For anyone who is curious, this is what I did to verify this. I created a simple property-holder class: public class SomeClass { public int PropA { get; set; } public int PropB { get; set; } public int PropC { get; set; } public int PropD { get; set; } public int PropE { get; set; } public int PropF { get; set; } public int PropG { get; set; } public int PropH { get; set; } public int PropI { get; set; } public int PropJ { get; set; } public int PropK { get; set; } public int PropL { get; set; } } And then created two console apps to make use of it. One that sets the properties individually, and one that sets them via object initializer. static void Main(string[] args) { SomeClass sc = new SomeClass(); sc.PropA = 1; sc.PropB = 2; sc.PropC = 3; sc.PropD = 4; sc.PropE = 5; sc.PropF = 6; sc.PropG = 7; sc.PropH = 8; sc.PropI = 9; sc.PropJ = 10; sc.PropK = 11; sc.PropL = 12; } static void Main(string[] args) { SomeClass sc = new SomeClass { PropA = 1, PropB = 2, PropC = 3, PropD = 4, PropE = 5, PropF = 6, PropG = 7, PropH = 8, PropI = 9, PropJ = 10, PropK = 11, PropL = 12 }; } I then built them separately, and used ILDasm to inspect the generated IL code: Y:\Projects\RedditTest\RedditTest\bin\Debug&gt;ildasm /output=RedditTest.il /source RedditTest.exe Y:\Projects\RedditTest\RedditTest2\bin\Debug&gt;ildasm /output=RedditTest2.il /source RedditTest2.exe The generated IL (lots omitted for space reasons) for the set-a-property style was: .entrypoint // Code size 108 (0x6c) .maxstack 2 .locals init ([0] class RedditTest.SomeClass sc) .language '{3F5162F8-07C6-11D3-9053-00C04FA302A1}', '{994B45C4-E6E9-11D2-903F-00C04FA302A1}', '{5A869D0B-6611-11D3-BD2A-0000F80849BD}' //000006: { IL_0000: nop //000007: SomeClass sc = new SomeClass(); IL_0001: newobj instance void RedditTest.SomeClass::.ctor() IL_0006: stloc.0 //000008: sc.PropA = 1; IL_0007: ldloc.0 IL_0008: ldc.i4.1 IL_0009: callvirt instance void RedditTest.SomeClass::set_PropA(int32) IL_000e: nop //000009: sc.PropB = 2; IL_000f: ldloc.0 IL_0010: ldc.i4.2 IL_0011: callvirt instance void RedditTest.SomeClass::set_PropB(int32) and the one that used the object initializer style was: .entrypoint // Code size 110 (0x6e) .maxstack 2 .locals init ([0] class RedditTest2.SomeClass sc, [1] class RedditTest2.SomeClass '&lt;&gt;g__initLocal0') .language '{3F5162F8-07C6-11D3-9053-00C04FA302A1}', '{994B45C4-E6E9-11D2-903F-00C04FA302A1}', '{5A869D0B-6611-11D3-BD2A-0000F80849BD}' //000008: { IL_0000: nop //000009: SomeClass sc = new SomeClass IL_0001: newobj instance void RedditTest2.SomeClass::.ctor() IL_0006: stloc.1 IL_0007: ldloc.1 IL_0008: ldc.i4.1 IL_0009: callvirt instance void RedditTest2.SomeClass::set_PropA(int32) IL_000e: nop IL_000f: ldloc.1 IL_0010: ldc.i4.2 IL_0011: callvirt instance void RedditTest2.SomeClass::set_PropB(int32) The only difference is that the ldloc is operating at a one-different offset and that's because of a [generated 2nd instance variable.](http://stackoverflow.com/questions/1679780/when-using-object-initializers-why-does-the-compiler-generate-an-extra-local-va) Something that is in the IL that I didn't post and someone may find interesting is that the IL has specific opcodes for the common integer values of 0 thru 8: ldc.i4.0, ldc.i4.1, etc. These get pushed on the stack and have no arguments. Since I had values up to 12, once you get past 8 it starts using the ldc.i4.s opcode, which requires the value be supplied as an argument. So ldc.i4.s 9, idc.i4.s 10, etc. Congrats on getting me to look at this on an early Sunday morning. :) 
I'm not positive you can cast ConsoleKey.Enter to a Char and expect it to be '\r'. Put a break point there and see what KeyChar's value is. The ConsoleKey enum is generally used with the Console.ReadKey function. I'm pretty sure a KeyPress event of an enter key is going to be '\r'. That may be what the ConsoleKey.Enter enum is, but I'm not sure. 
I was thinking of using NAudio too. Does NAudio have any FFT things built in or?
Yes. Everything you need is built in under the Naudio.DSP namespace. That's why I love this library! So many cool things to do. What I did was to set the FFT-length at 2048 and add samples to an array of an imaginary-buffer after applying a hamming window to the samples. When the buffer was full (2048), I calculated the FFT and returned the new array for usage. public void Add(float value) { if (PerformFFT &amp;&amp; FftCalculated != null) { fftBuffer[fftPos].X = (float)(value * FastFourierTransform.HammingWindow(fftPos, fftLength)); fftBuffer[fftPos].Y = 0; fftPos++; if (fftPos &gt;= fftLength) { fftPos = 0; FastFourierTransform.FFT(true, m, fftBuffer); FftCalculated(this, fftArgs); } } }
I'm unsure what you mean, so i'll supply an example of how to use a datagrid, Then you can guide me from there. Also coding from memory here. Class Person { public string Name { get; set; } public string Surname { get; set; } public string Address { get; set; } } Now you can take that, and make a list out of it. Perhaps an ObservableCollection. ObservableCollection&lt;Person&gt; personCollection; Now you can call personCollection.Add(new Person() { Name = "Bobby", Surname = "Joe", Address = "Bobby Street"}); Now this can definitely be improved. But that's the basic gist of it. You can set the ItemsSource to be personCollection Now if you have a class like this: Class Department { public Person People { get; set; } public string DepartmentName { get; set; } public string Address { get; set; } } If you create a Collection from this and and want a DatagridRow that shows a list of people, You need to either create a DataGridTemplateColumn with a listview or Gridview. Or you could use a DataGridComboBox and set it's ItemsSource as Department.People Edit: To specify which columns to show. Modify the &lt;Datagrid.Columns&gt;&lt;/Datagrid.Columns&gt; Example: &lt;DataGrid.Columns&gt; &lt;DataGridTextColumn Header="Date" Binding="{Binding Date}" Width="Auto" /&gt; &lt;DataGridTextColumn Header="Message" Binding="{Binding Message}" Width="*"&gt; &lt;/DataGrid.Columns&gt;
wat
In the grid* that contains popup there are no row definitions. It's just one single row. But that grid is a part of another grid, that has two rows: The back button and page title row, and the content row (I'm using Basic Page Template)
1) What do we win? 2) Without seeing the code that does the performance check it's kinda pointless.
I havn't used the TemplateColumn myself But it looks rather simple. http://www.wpf-tutorial.com/datagrid-control/custom-columns/ Has a code example. ComboBox is probably your best bet in my opinion. it'll give you a dropdown like list of people in the apartment. If you create a templatecolumn with another datagrid, listview, gridview or something like that, you'll end up getting very big rows. The DatagridComboBoxColumn can be used like any other ComboBox. &lt;DataGrid x:Name="DataGridRoot" AutoGenerateColumns="False" IsReadOnly="False" ItemsSource="{Binding PeopleCollection}"&gt; &lt;DataGrid.Columns&gt; &lt;DataGridTextColumn Header="Dept. Name" Binding="{Binding DepartmentName}" Width="*" /&gt; &lt;DataGridComboBox Header="People" ItemsSource={Binding People} Width="*"/&gt; &lt;/DataGrid.Columns&gt; &lt;/DataGrid&gt;
If you're collecting data, why not instead store the data in a common file format like JSON? I suspect you're really overthinking the problem.
That looks right as far as creating the property. Make sure what you return is an IEnumerable&lt;int&gt;. If you don't want to use yield, you can either use linq (.Where()) or just instantiate a new enumerable and loop and add the appropriate numbers, then return after the loop.
1. `Enumerable` is a bad class name because `System.Linq.Enumerable` already exists. 2. Instead of creating a class you could do extension methods: public static class IEnumerableExtensions { public static IEnumerable&lt;int&gt; Even(this IEnumerable&lt;int&gt; values) { values.Where(x =&gt; x % 2 == 0); } public static IEnumerable&lt;int&gt; Odd(this IEnumerable&lt;int&gt; values) { values.Where(x =&gt; x % 2 == 1); } } 
&gt;2) Without seeing the code that does the performance check it's kinda pointless. How so?
I've had my site on them for a while now and they have been great. They recently updated their site too. I haven't had any issue with them and they support practically everything. Dont really have any complaints about them. Definitely would put my future sites with them.
Good find! I'm gonna file that one away for later.
So in the real application objects are more like this Class Person { public string Name { get; set; } public string Address{ get; set; } public PersonHistory History { get; set; } } Class PersonHistory { public GenderType Gender { get; set;} public Date DiedDate { get; set; } } And I'm making a DataGrid of Persons. I want there to be columns Gender and DiedDate instead of History So instead of: Name | Address | History ---------|----------|----------| Person | 123 Sesame | PersonHistory Person | 213 Sesame | PersonHistory Which is what I see now I'm trying to get it to look like: Name | Address | Gender | Died ---------|----------|----------|-----------| Person | 123 Sesame | Male | Nov 2003 Person | 213 Sesame | Female | Nov 2003 This is my first C# project so I'm not really familiar with how to use binds but I've been adding the data to the datagrid with: List&lt;Person&gt; personList = new List&lt;Person&gt;(); foreach (KeyValuePair&lt;uint, Person&gt; person in myPeople) { personList.Add(person.Value); } dgPeople.ItemsSource = personList; I don't really want to add these to a combo box cause it doesn't make much sense to. Making the datacell a datagrid wouldn't work either because then I've got cells within cells when I visually just want all the inner object properties to look like they're properties of the row object. My xaml: &lt;DataGrid x:Name="dgPeople" CanUserResizeColumns="True" HeadersVisibility="Column" AutoGenerateColumns="True"&gt; &lt;/DataGrid&gt; Thanks
Best solution could depend on size of performance test array, unclear if the construction of the Solution class is included or not. 
I'm going on some assumptions here, but I think that the complexity for LINQ query would be `O(nlogn)` with `O(n)` additional space. It seems pretty good for a generalized solution. But, as you noted, it seems like a micro-optimization, so other factors would be at play here (cache-friendliness, limiting allocations etc.) All in all, looks like an 'interview problem', which usually means it's more of a puzzle than actual problem/issue :) 
Do you write your code or your tests first?
I have had plenty of experience with them and their clones. For simple mom and pop presence. OK For a personal site OK. For a band OK. For a professional practice site OK For a site that requires any custom business logic with a user base bigger then their extended family AVOID. If you need to go .NET, take a good look at azure. They do have a cheap low end version with 1 shared Webhost and 1 dB instance for about 10-15 per month. Had a client try to run a DNN site - nope. All their cfo saw were $$$. We quoted I think about 250 for 2 licensed front end servers with a shared dB. And 
Hey, I worked on it a little more and also started reading a book specifically on CodeFirst part of EF. First 2 Tables are simple: public class TradingDay { public int TradingDayID { get; set; } public DateTime TradeDate { get; set; } } public class StockTicker { public int StockTickerId { get; set; } public string Ticker { get; set; } } Next is Stock: public class Stock { public Stock() public int StockId { get; set; } public StockTicker Ticker { get; set; } public string CompanyName { get; set; } //A Table for DailyStockData (OHLC, Volume and AdjClose) public List&lt;StockDay&gt; StockDays { get; set; } //A Table to Keep track for Day's when Dividend was released. This will keep old days (for backtesting purposes) //and also be updated when newer information is released for future payouts public List&lt;DividendDay&gt; DividendDays { get; set; } //Same as Dividends, This Table will store EarningsDates (Past and Future) public List&lt;EarningsReportDay&gt; EarningsDays { get; set; } } public enum EarningsRelease { BMO, AMC, Unknown //BeforeMarketOpens, AfterMarketCloses, Unknown } public class EarningsReportDay { public int DividendDayId { get; set; } [DataType(DataType.Date)] public DateTime TradeDate { get; set; } public EarningsRelease Release { get; set; } } public enum DividendCashFlow { Quarterly, Monthly //Dividend Paid every 3 Months VS every Month } public class DividendDay { public int DividendDayId { get; set; } public DateTime TradeDate { get; set; } public double Amount { get; set; } public double Yield { get; set; } public DividendCashFlow PayoutType{get;set;} } public class StockDay { public StockDay() { Options = new List&lt;Option&gt; (); } public int StockDayId { get; set; } [DataType(DataType.Date)] public TradingDay DT { get; set; } public long Volume {get;set;} public double O { get; set; } public double H { get; set; } public double L { get; set; } public double C { get; set; } public double? AdjClose { get; set; } public List&lt;Option&gt; Options { get; set; } } Same as Stock and StockDay to distinguish between a general permanent state of a stock and a daily state, I decided to do the same with Options public enum OptionType { Call, Put } public class Option { public int OptionId { get; set; } public string OptionCode { get; set; } public OptionType Type { get; set; } public List&lt;OptionDay&gt; OptionDays { get; set; } public DateTime ExpirtyDate { get; set; } } And finally the OptionDay class. This is the most important one for me. There are 18 fields but I'll just use basic 7-8 to show you public class OptionDay { public int OptionDayId { get; set; } public int Volume { get; set; } public int OpenInterest { get; set; } public int newOI { get; set; } public double Bid { get; set; } public double Ask { get; set; } public double Last { get; set; } public double Theo { get; set; } public double IV { get; set; } } Does it make more sense now?
It looks like there's some delay between solution submission and bench results.
Isn't this boolean theory? It's not a trick, it's a valid question, along the lines of fizzbuzz. If someone can't solve this, they're in deep trouble.
Yes, its there now! Thanks
Some of the above posts use mod to determine odd or even, Don't do that please. There's no reason to cause the cpu to use division, when bitwise can be done using the fastest possible way, simply looking at the trailing bits of the number.
I like to see games, even if they're not the best. It's very easy to write C# that has performance problems. You can't get away with that with a game.
Something that you want to work on. It's going to be very obvious if it's just a small, useless thing. Plus depending on how you motivate yourself, a "for portfolio project" might not take you far.
A Visual Studio Add-In would be good to see. It could offer pretty simple functionality but would impress me in an interview.
https://www.udemy.com/understandingc/#/ http://www.reddit.com/r/learnprogramming/comments/2zt22x/free_course_on_the_fundamentals_of_c_programming/ Great course for fundamentals, nothing about Unity unfortunately. There was a reddit discount, I'm not sure if it's still active. Being a person that tried teaching himself C# a few times this was the course that finally made it interesting and easy to follow. It took me about a week to go through this entire course by doing the exercises on my own. Now I plan on moving onto more advanced topics and coding everyday. 
Because you can do a **lot** wrong with performance measurement. It's also not clear what counts into the performance. Initial set up time (aka JIT)? Preparation required each time the algorithm runs? Or just the algorithm itself? Also a very important point is whether the whole AppDomain is destroyed before evaluating the next solution. It's also a matter what JITer is used.
Only one solution runs dedicatedly at a time on the machine. The solution runs in a separate process all together, and cpu is not shared. Each solution runs in a different process. Only the function to be tested is included in time calculations. Metrics would converge to a more accurate value during the testing phase when more aggressive testing is done.
I know, but the resources cost me a lot, and if no body is using it I'd be spending money unnecessarily.
&gt; Be a stickler for details The [Ninety-Ninety Rule](http://en.wikipedia.org/wiki/Ninety-ninety_rule) is real. This is where most people get bored with personal projects and start working on something else. Polishing the code, handling exceptions, validation, etc. That stuff is fairly boring, and frankly, the hardest part of writing software because you have spent all your time focusing on the "right" path of data through your app that it becomes harder to see how to use it wrong. I would rather see a single application that I can't break than 100 apps that crash when I give them a string when they expect a number. As for **what** you should write, there are two approaches I've taken in the past. - Look around at the jobs in your area, find the companies you want to work and see what they do and then mimic it. - Look at your other hobbies/jobs. Think of the problems that exist and write an app to solve them. The biggest feather in my cap is an application I wrote that makes planning meals and generating shopping lists easier. Or maybe when you worked retail, scheduling people took forever, so you write an app that analyzes employee's availability and the store's staffing requirements and generates a schedule. I suggest the latter. If you are working on solving a problem that you deal with regularly, you are *much* more likely to follow through with it and create something you can be proud of. If I'm hiring someone I'm more likely to hire the guy who is super excited about the extremely well done app he wrote that made it easier to see if a new item was an upgrade for his WoW character than the guy who kinda sorta wrote some scripts that are exactly relevant to the stuff I'm hiring for.
There's nothing *wrong* with writing a game in WPF, it's still an application after all, and it is a showcase of your knowledge. But if you are looking for something to write games with, which **isn't** Unity, then check out [MonoGame](http://www.monogame.net).
I disagree completely. In my experience in the software industry, I've run across hundreds of examples like this, where the comments describing the code and the code do two different things. As a software developer, you're going to need the ability to pick out these discrepancies. **Everybody** has accidentally used &amp;&amp; when they meant || before. It's up to whomever reviews or maintains the code to catch it.
&gt; WinRT [apps] a.k.a. Metro apps a.k.a. Modern apps a.k.a. Windows Store apps a.k.a. Universal apps a.k.a. Windows apps hopefully you've heard of one of the above names; they're all the same thing.
I'm also familiar with XNA and MonoGame, I was just curious if it should be entirely without a framework (ie, C# game from absolute scratch)
I didnt manage to upload a solution, all I can get is a "not all code paths retrun a value error" wether i upload a method(which does return a value) or a class implementing the contract. What did I miss ?
How are those row definitions defined? Is there a height property set on them?
A form that submits to a database and a listing of the database.
&gt; You might say "use Unity instead!" I've used XNA, Monogame, SFML, SDL, Unity and even Mogre (which is Ogre3d c# bindings). To me, each is a tool with a purpose. Want something you can port to multiple platforms and have near hardware level control? Monogame/SDL/SFML. Want some really great 3d tools and rapid prototyping? Unity. Want 3d but without any handholding? XNA/MonoGame/Mogre. But the thing is, making it truely from scratch as in importing directx/opengl stuff OR writing a software renderer? Too much work when frameworks already exist. Is it impressive as hell? Yes. Not really practical. 
That's a compilation error. Revisit your function and check if it returns a value in all possible cases. 
ok I figured it out, the popup for adding my solution wasnt working properly (probably a firefox issue on my pc), it worked like a charm in chrome. thanks anyway for the nice site :)
You should share your work on github.
Just because Unity is such a big shortcut. A bad C# programmer can still use Unity to create a decent game.
Ah ok, that's what I'm looking for. I agree, Unity shouldn't be on the list because of the asset store and all the little tools allow even non-programmers with the ability to make a game. However: A bad coder can make a game, but even a skilled programmer can make a game. Making a decent game is hard. Game dev, like making a game worth playing even for 5 minutes, is hard. 
Why? You mean the API or the Windows 8.1 App?
In my other comment I said I don't really care if the game is good or not, just that it runs well. :)
From the MSDN doc: &gt;The child content is not added to the visual tree that contains the Popup control. Instead, the child content is rendered in a separate window with its own visual tree when the IsOpen is set to true.
The site is indeed updated dynamically through a javascript. Not sure how I missed that :(. But however I did run several tests last night entering in real information and checking out. I have not received email confirms on those items. So I'm guessing its not working :(
Don't even think of helping this person out
How about you use Google?
I searched on StackOverflow, but found nothing concrete, just some answers to other expressions.
Thanks, I will search for regex. And indeed, it's a high school homework question. I would give more interest, but I'm more into C++ right now.
[Google Search](https://www.google.com/#q=c%23%20regex%20cheat%20sheet)
Thanks and sorry for the trouble. :)
Got it. I added this to the end of my dispatcher invoke, after updating the ObservableCollection: ICollectionView dataView = CollectionViewSource.GetDefaultView(loadedChannels); dataView.SortDescriptions.Clear(); dataView.SortDescriptions.Add(new SortDescription("Online", ListSortDirection.Descending)); dataView.Refresh(); The selection is now 'inactive' but still selected. I just changed the color of the selection with: &lt;DataGrid.Resources&gt; &lt;SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="colorhere"/&gt; &lt;/DataGrid.Resources&gt; To compensate visually.
Nice! Cool solution. I was unaware of the Refresh Method.
&gt; Now this is effectively the same thing as the Dictionary It's not though. Switching to a list would make lookups O(n) instead of O(1). Using a custom dictionary class would allow you to have a more readable type without slowing it down.
I agree. Plus by using a dictionary you eliminate entirely the ability to have two entries with the same key. Have fun implementing that with a list every time you want to convert a dictionary to a list
In a relatively simple console app, this (`Thread.Sleep()`) is fine. In winforms you are better waiting for a timer to raise an interval event. On a webapp you might want something like `Task.Delay().ContinueWith(...`and some sort of asynchronous communication layer. 
Please note the AutoGenerateColumns=False, and you're specifying the columns to display properties from the current ItemSource. So {Binding Path=Name} is binding to the Person's Name property with-in the item source. So you can specify sub-properties, such as the History.Gender. You're binding the ItemSource from the Code Behind which is fine. I'm not entirely sure the AutoGenerateColumns option will follow the sub-properties. But since you're not wanting to display some of the properties from the Person model anyway, this is preferred. I just wrote this off top of my head, it's not tested, but should give you the right direction. XAML: &lt;DataGrid Name="dgPeople" CanUserResizeColumns="True" HeadersVisibility="Column" AutoGenerateColumns="False"&gt; &lt;DataGrid.Columns&gt; &lt;DataGridTextColumn Header="Name" Binding="{Binding Path=Name}" Width="*"/&gt; &lt;DataGridTextColumn Header="Address" Binding="{Binding Path=Address}" Width="*" /&gt; &lt;DataGridTextColumn Header="Gender" Binding="{Binding Path=History.Gender}" Width="*"/&gt; &lt;DataGridTextColumn Header="Died" Binding="{Binding Path=History.Died}" Width="*"/&gt; &lt;/DataGrid.Columns&gt; &lt;/DataGrid&gt; Code Behind: ObservableCollection&lt;Person&gt; personList = new ObservableCollection&lt;Person&gt;(); foreach (KeyValuePair&lt;uint, Person&gt; person in myPeople) { personList.Add(person.Value); } dgPeople.ItemsSource = personList; Using an ObservableCollection instead of a List is a good habit to get into when you're binding data to the xaml (ItemsSource Property). ObservableCollection's update the UI when values are added/removed, without having to refresh the list source. You can read more about this type here: https://msdn.microsoft.com/en-us/library/ms668604%28v=vs.110%29.aspx Let me know if you have anymore questions!
It's a basic data structure question. Data structure questions are better suited to junior developers, since that's where they're going to be spending the bulk of their time: working with smaller, well-defined pieces of code and/or application logic; and the junior-level job title is going to cover developers with a spectrum of knowledge in that area (some will be weaker than others) and so the question is useful in letter you know where in that spectrum they fall. Senior-level developers are already expected to have a mastery of basic data structures and are expected to be using their talents on larger problems. So a question like this is basically only an idiot test for a senior-level position. You'd be better spending your interview time asking the senior level developer questions that are going to be a better gauge of where they fall within the spectrum of *that* title (and if they're just completely not qualified for the position, their answers to *those* questions will let you know that).
Looks like the goal posts shifted today. My solution worked fine yesterday but broke today. I know exactly why and can fix, but it's kinda lame that it broke after a day of sitting. 
Sounds like something you'd do at school. Atleast, we did at my school. I can't imagine that being very impressive at an interview. Perhaps go for something deeper, Make it have a purpose, instead of 'just' doing CRUD operations on a Database.
I havent checked this out, but its something you might be interested in.. http://www.codeproject.com/Articles/876015/UNITY-D-Game-Programming-Introduction
In this case there are a couple reasons: 1. MaxAsync is a member of QueryableExtensions which is actually a part of Entity framework not LINQ. It is a static class that simply extends types in LINQ so even if there was compiler support for what you speak of it would not work here anyway. 2. Async is the standard as described by Microsoft for public APIs. The rule is in general that any public API that provides Async methods must also provide sync versions and that the Async methods must be named with the Async suffix. This is merly a convention however. Personally I do a lot of concurrent programming so since nearly all my code is some kind of parallel task it seems silly for all my methods to be suffixed with Async. But I am not publishing my API so..... As for why there is no compiler support or conventions like you mention. I would say that if MS is interested at all in doing that (I like the idea somewhat) that its only been in the last few years with TPL that such a feature could even be considering as a possibility. Since the compiler is being re-written I am not sure how high up a feature like that will be for the future.
Yup, EF context is not thread safe, but neither is - for example - NHibernate's `ISession`. Good thing that contexts are lightweight, so you can create separate context for every task and parallelize calls this way.
Blizz doesn't ban until year end profits are 1 month out and it's your call, if you're willing to lose everything you have in your account, keep it up.
I kind of agree with you, at least in 4.5.1 there are some annoying things about the tap syntax. * having to configureawait(false) everything. * if you make an async call without await then visual studio will give you a warning, yet if you intended to fire and forget this is the correct syntax. * async tasks in webforms is pretty awkward * i feel like handling exceptions when you are awaiting a collection of tasks can be awkward As for this particular example... I don't use ef so im not sure exactly what those extensions do, but im guessing they lazy fetch data from your database. Most linq extensions will not have an async counterpart since they are simply for iterating over collections and do not involve any io, eg where, select, aggregate. with some io async tasks you may not want to wait for the response. For example if you were using SaveChangesAsync in a webapi, you might want to just handle a request, make the call to save, and then return a 200 response. Maybe a bad example, but if you don't need to confirm to the user their task completely successfully, or if you are doing something that takes longer... for example uploading an image to s3, then you might want to fire and forget. my point is that await is not always required, it is an option. also you cannot just assume you will always want to use the async methods when available... if there is no io involved theres usually no point in doing async.
Good point, it would probably be best to dial it back a bit especially considering my target audience. I chose pokerbot because its an intriguing project with many different elements. I suppose it could be a questionable topic. I kind of wanted to stay away from anything too trivial, that the reader would just toss away afterwards, or struggle to keep an interest in.
RemindMe! 1 week "comealive.io"
&gt;await is just syntax sugar that blocks your async call and unwraps the Task&lt;T&gt; to just T after completion. That's not entirely accurate. `await` suspends the async method *in which it is called* and returns control the the caller. This means the caller can then proceed with some parallel work and call `await` if she wishes.
You could make the code use a lock (less preferred and may not be sufficient if IIS spawns multiple instances of your code), or replace the insert with a call to a stored procedure you create on the server that does the same thing in a table lock (less latency / faster / safer if done on the database).
Is this really a good interview question? I know there is some value to seeing how a programmer handles a difficult task, but what else? I think a good programmer should recognize when they encounter a non-trivial yet common problem (updatable inverted indexes in this case), so that they can look up a proven solution instead of poorly reinventing the wheel.
&gt; Prior to C#6 it was not possible to use the await keyword in a catch finally block and now you can - yay! But you can not use it inside an exception filter.
Do expression bodied methods really provide type inference on the arguments? I know lambdas do, but I had completely missed this.
Best here is to debug, you can do that in WPF using [Snoop](https://snoopwpf.codeplex.com/). My guess would be that the popup itself is not filling up the entire window.
&gt; My guess would be that the popup itself is not filling up the entire window. [I think is is.](http://imgur.com/cK3vD0z). Then again, maybe it's just showing the guidelines like this. Would removing the popup and using Inner Grid's Visibility property give the same effect? Because when I delete the Popup, the grid fills up the parent perfectly.
Particularly when hiring contractors, we've been looking for someone reasonably senior, and had someone with all the right qualifications and experience in to interview. They've answered all the right questions, and looked like a perfect match. One week into the job, and it turns out that they can't program for shit. Yes it's an idiot test, and that's absolutely a good thing. No matter what the position, I'm firmly of the opinion that you need a good idiot test in there somewhere. Someone can say all the right things and still be completely hopeless.
Yes, strings are definitely reference types, but they are in several ways value-like: immutable and fungible (with respect to all equality except explicit reference equality).
&gt; await is just syntax sugar I woulnd't use the word "just", as await invokes some quite complex machinery to perform its job.
&gt; The purpose of async/await is to allow you to write code which can easily continue running while some IO-bound operation executes I am sure you understand the concept but I think this statement is incorrect or at the very least will be very confusing for someone who doesn't already know what async/await does. 
Edit: Nope, doesn't work. ***EDIT2: I'm so stupid... Works perfectly!*** ^Dzięki ^;D
Seconded, it actually made me want to read it.
the MAX function returns a bigint SQL type (Int64 in .net), not an int.
How should I change it then?
Well, instead of casting an int when reading the scalar, cast an Int64. Also, why are you executing the "ExecuteScalar" command twice if the test object is not null? Can't you just cast ThisIdTest's value to the object you need? Also, null SQL objects are not "null" in .net. Instead, they're of type DBNull. So, my guess would be this: using (var conn = new SqlCeConnection(dbConnectionString)) { conn.Open(); var commandThisID = new SqlCeCommand("SELECT MAX(thisID) FROM table1"); commandThisID.Connection = conn; object ThisIDTest = commandThisID.ExecuteScalar(); Int64 cmdThisIDTest = 0; if (ThisIDTest != DBNull.Value) { cmdThisIDTest = (Int64)ThisIDTest; } }//END using (var conn = new SqlCeConnection(dbConnectionString)) Edit: sorry, misread your question. What type is the thisID column?
Yeah, I knew they were reference types. It just threw me to see it stated otherwise as an interview question.
Set a breakpoint after your call to the ExecuteScalar method and add the ThisIDTest object in a watch to see its type. That should give you a much clearer idea about why the cast fails.
it is actually the 2 ways that were commented out by the previous developer. Reuse the same DB connection and you should be able to retrieve the ID. scope_identity() is better then @@Identity since it takes into account transactions and context. but for you either will suffice. https://msdn.microsoft.com/en-us/library/ms187342.aspx MAX will do a full table read and scan. 
I'm glad it works for you!! :-) While I am aware that my nickname is Polish, I don't actually speak Polish. (long story right there)
Casting to uint won't perform a range check, it will silently change negative values to values over ~2 billion (2^31).
This is one of those things that, except in *exceedingly* rare situations, you just program the clear-and-obvious way and let the compiler optimize it. DO NOT BENCHMARK THIS IN DEBUG MODE, obviously. Throwing an exception is always going to be MUCH slower than a simple conditional. What's more likely to work would be using bitwise operators to check if the first digit in binary is a 1. But like I said, better to leave it to the compiler and JIT to optimize in 99.999% of the cases. Even if you benchmark it and find it faster on your CPU, it might be slower on someone else's CPU or have unintended consequences like preventing some other compiler optimization.
You can try returning the identity as part of the insert. Change your insert from ExecuteNonQuery to ExecuteScalar and get the identity values right away. string qryString = @"INSERT INTO YourTable( Col1 ,Col2 ,Col3 ) OUTPUT INSERTED.Id VALUES @val1 ,@val2 ,@val3" using (SqlConnection dbConnection = new SqlConnection(dbConnectString)) { using (SqlCommand sqlCmd = new SqlCommand(qryString, dbConnection)) { dbConnection.Open(); sqlCmd.Parameters.AddWithValue("@val1", val1); sqlCmd.Parameters.AddWithValue("@val2", val2); sqlCmd.Parameters.AddWithValue("@val3", val3); int newId = (Int32)sqlCmd.ExecuteScalar(); // then do something with this value. } } If you don't want to do this, then follow the suggestion to get scope_identity for the session. You'll need to reuse the connection to get it though, which means it should immediately follow your insert. It can be inline as shown below, or in another query that you execute before the insert query's connection is closed or falls out of scope and before you use that connection for anything else. INSERT INTO YourTable(@Col1, @Col2, @Col3) VALUES (@Val1, @Val2, @Val3) SELECT SCOPE_IDENTITY
Seems like the price of ultimate w/ MSDN is basically less than half as much as it was for 2013. Definitely encouraging.
It may be questionable, but it's interesting, and that's what you want to make sure you give the reader. That, and the rest of the logic (the AI to actually play a game) is its own interesting and useful topic. How it interfaces with the world in this case just happens to be through screenshots, but you will be boiling down that piece to the point that the AI is just working with the card information. The same AI can work independently of the screenshot mechanism. 
It's extremely non-trivial to add to the CLR, I think.
But did the premium just shoot up?
But even that might defeat optimization in real, after-JIT code. The Stack Overflow answers had some pretty detailed responses involving analyzing the IL code, but even that can't really answer the question which is faster. You just don't know whether a micro-optimization like this is ever worth it on a high-level runtime that gets JIT'd down to native CPU code and might run on any number of weird CPU architectures. Unless you're one of the select few people in the world actually paid to understand the implementation at that level, it's just not even worth thinking about. Prefer readability and clear intent over fast and clever.
Can someone provide code sample (ready for benchmark) where the optimization is faster than the normal code. I couldn't come up with one that works in practice. Edit:My follow-up question regarding my inability to produce a code sample where the optimization matters. - http://stackoverflow.com/questions/29378837/code-sample-that-shows-casting-to-uint-is-more-efficient-than-range-check
Thanks for the note. This has been fixed.
TextureBrush tiles the image starting from the corner of the canvas, not from the corner of the painted shape. When moving like this that gives it an optical effect of a "window", but you are indeed correctly paining the textured rectangles onto the black background. It's just that the texture within them is offset from where the rectangle starts. You can use `TextureBrush.TranslateTransform(x, y)` to offset the texture to match the rectangle's coordinates.
As someone who is very interested in Poker AI, I know I'll be following your blog.
Thank you, that's a really helpful explanation. I will try to make changes accordingly. EDIT: I was able to get it working, thank you very much!
Nice to know they still keep the VS Express. Its use-case is diminished by Community, but it doesn't go away completely. 
It is also way less money for the top level sku.
Where would you use it that you couldn't use Community?
Next time better test your stuff.
CodeLense is the on feature I'm begging for in vs pro, I'm so much more productive at home than at work because of it.
Simple is always better! 
Thanks. Wasn't my stuff but I alerted the author and he fixed it right away. Was a copy-paste issue, simplez. :)
Then I have good news for you! [https://www.visualstudio.com/products/vs-2015-product-editions](https://www.visualstudio.com/products/vs-2015-product-editions) **Code Lens IS in the Professional Version!**
Update: I figured out how if anyone cares to know I can post source code.
Is this available now? I'm running the pre-release in a Win10 VM and it works perfectly. 
StackOverflow exceptions are usually caused by recursive functions that never stop recursing. I would look at the while loop at the end and try to imagine situations where it can never break out of that loop (e.g. giving it an array of 0, 0). You might also want to check your compiler warnings - particularly the warning you might be getting on "while (isGo **=** true)" :) It's a good idea to fix warnings as well as errors, or maybe take a glance at them to make sure it's nothing serious.
God, I thought this was gonna be an April Fools' Day prank. Good changes, mods!
Because different versions have different schemas for solution files?
Well, this is the Visual Basic sub-reddit (according to the page title!) so that's expected.
I think you may have missed the joke. Edit. Doh! This was supposed to be a reply to /u/AngularBeginner
Yeah, we're diversifying.
I've recently been confused with C# string, because I assumed that it behaves like other reference type and string in Java. string a = "sample"; string b = "sample"; a == b // true, it's compared like value type a.Equals(b) //true 
The window is a class, expose a public property from that class. When you call it from another window, you've instantiated that class. You can dot syntax it. Edit: Even if you've called .Close(), the object isn't destroyed before it escapes the current scope of the caller. Get the values while you can. 
You are trying to access words[2] which has nothing at that index. When you split an array, you start from index 0, so it should be :- string[] words = userName.Split(null); string firstName = words[0]; string lastName = words[1]; Edit: formatting
&gt; Published Wednesday, 1 April 2015
Brilliant article. Absolutely fascinating... :-)
It's the [day the entire Internet becomes effectively unusable](http://en.wikipedia.org/wiki/April_Fools%27_Day).
Oh yeah, that dumb shit. Didn't think so many developers would degrade themselves to this.
I'm game, anyone thinks that it is worth it to pursue a verified certificate? (It's $90)
I know some of those words.
It's fucking bullshit isn't it? I hate it, and it's just pathetic that people feel the need to fill the internet with bullshit like that.
REGIONS ARE AWESOME I WILL FIGHT YOU _GNASH GNASH_
Doesn't look like it is, see the example: https://www.edx.org/sites/default/files/theme/example-certificate-verified.png
Completely agree! I really don't understand why people think they should have any *fun* on the internet. It's a serious place! They should have some psycho-tests before allowing people on dial-up!
Can you start advertising the sub too? Let's face it, C# is much nicer than Java yet they have a more active sub. It would be great to see this one being more active.
&gt;Please enter your Full Name (e.g. Bruce Wayne) Nice try, but I don't think Batman is going to fall for that.
check out `IndexOf (char item)`
You can use a callback method to return the thing, or read it from a public property that you use to expose the private member object/variable/etc. 
int i = "test string".IndexOf('e'); // -&gt; i = 1
I am assuming you want to process the files on your PC, but they are stored on a [share](http://windows.microsoft.com/en-gb/windows-vista/share-files-and-folders-over-the-network-from-windows-vista-inside-out) on the Virtual Machine? Easiest way - set up permissions on share and folders so your account (or account running code) has full access/control. The you can access each file by \\&lt;machinename&gt;\&lt;sharename&gt;\&lt;filename&gt; or \\&lt;ipaddress&gt;\&lt;sharename&gt;\&lt;filename&gt; in your code (filename may include folders on share) - e.g. \\vmpc\fileshare\folder\file.txt or \\192.168.1.55\fileshare\folder\file.txt if you can't setup share so your account has control on share - then you can use [net use](https://technet.microsoft.com/en-us/library/bb490717.aspx) in a batch file to connect you to the share (you don't need to map a drive letter - just access \\\\server\share\filename ) alternatively you can do it in code with [WNetUseConnection.](http://stackoverflow.com/questions/3700871/connect-to-network-drive-with-user-name-and-password) Note: allowing everyone full control on share is a potential security risk
Yes, everyone must enjoy being lied to for the day /s
 var ascending = (start &lt;= stop); var isStepValid = (ascending &amp;&amp; step &gt; 0) || (!ascending &amp;&amp; step &lt; 0); Func&lt;int, bool&gt; doContinue = ascending ? n =&gt; isStepValid &amp;&amp; n &lt;= stop : n =&gt; isStepValid &amp;&amp; n &gt;= stop; for(var number = start; doContinue( number ); number += step ) { // code }
The power of `Func&lt;T, TResult&gt;` knows no bounds! ^(Unfortunately VS didn't let yours compile because it didn't like the ternary assignment to doContinue :()
Seems pretty clear to me. It literally says there's a VS 2015 community edition in the post and in the main graphic.
Maybe it just can't figure out the order? Func&lt;int, bool&gt; doContinue = ascending ? (n =&gt; isStepValid &amp;&amp; n &lt;= stop) : (n =&gt; isStepValid &amp;&amp; n &gt;= stop); 
Both ways give this: `Type of conditional expression cannot be determined because there is no implicit conversion between 'lambda expression' and 'lambda expression'` [Compiler error CS0173](https://msdn.microsoft.com/en-us/library/hb47kt2f.aspx)
In a similar situation, gonna tag along as well!
YES! I've been learning C# on my own and it's been great, but I'll definitely check this out. Worth a try. 
Thanks for the heads up!
Happens to the best of us!
We could maybe get a trello board setup for this?
Yeah. Was leaving that as an exercise for OP
my bad!
Nice find! Just finishing up my C# course in college. Hopefully this will help build off that. 
50 
It's $90 if you want to do the certificate. That's a huge book to read cover to cover. I've got a copy but I use it like a reference book and just look things up as needed, I'm not sure I'd have the patience to read the entire thing. Props to you if you make it through though.
This is the correct way to do it. By default, all Window boxes have ADmin shares, so you can use "\\\serverNameOrIP\c$" to get access to the C: drive. All the .Net file operations support UNC paths. A UNC path is just a path that starts with "\\\\&lt;servername&gt;\\&lt;sharename&gt;" Caveat: If you are opening very large files, and then processing them, this could be a very slow operation. Even on a 10GB network, searching through a file using UNC paths is going to be orders of magnitude slower than doing it locally. Consider possibly puting your C# code into a a Windows Service that runs on the VM, and possibly uses a File System Watcher to wait for new files to be created locally, then processes them, and then sends the results to your machine, or a DB on your machine.
www.trello.com Basically a collaborative organization/planning tool.
So how do these work? I can't start it for a couple months, does that affect things like this?
Has anyone taken these courses before? I would like to do it, but I can't *stand* watching informational videos at 1x speed. It's so irritating. I love that places like YouTube and Lynda.com allow you to watch at up to 2x speed. Does anyone know if edX allows you to watch the videos as faster than 1x speed?
The operator == has been "overloaded" for the String class to make it compare values instead of just object identities. You can do this for your own classes in C#, and likewise for many other operators such as +, -, etc.
Changing all the occurrences of var to explicit types fundamentally cannot make any difference. It would be about as effective as burning incense or making a wish. ExecuteScalar returns Object: https://msdn.microsoft.com/en-us/library/system.data.sqlclient.sqlcommand.executescalar%28v=vs.110%29.aspx The problem here is that the API being called cannot provide static type information. The caller has to understand how the provider maps the result of a SQL command to C# data types, to perform the right cast. The single place where OP uses declares a variable of type object, they are storing the result of a call to an API that returns just that. And in the very line where they hit the problem, they declared the variable expliticly as int, and it didn't help. 
Thanks for the heads up. I signed up 
You can also take the class for free, you just won't get a certificate. 
Yes, from the courses i've seen you have the option of speeding up the video to 2x (and slowing it down to .5x). 
oh boy. I just told a guy (day 1 on his programming adventure) in another sub to come over here and check the sidebar for tutorials.. inadvertent april fools
google the c# yellow book free resource. Also I think usually they have good resources on the sidebar, but today being april fools they have visual basic resources. so hold tight for that to go back to normal :)
What are you talking about? We've made the sidebar even better than it was before. EDIT: We'll restore it in the morning. We ~~got~~ **had** the old sidebar backed up. EDITx2: Shit.
I learned C# using a book called Illustrated C#. It worked well with my particular style of learning and had a good overview of all the basics of the language and some aspects of the .Net framework. I really recommend it, as it'll cover all the essential knowledge in a very clear way. The formatting in the kindle version is a bit wonky, however. Despite that, I didn't have any real issues. Once you're more comfortable with the language, and if you think you have time through the summer, I would recommend following up with something like Pro ASP.NET MVC 5 by Adam Freeman. It's a certainly more intermediate text, but he's going to go over a lot of useful aspects of generally coding with C#, and obviously with the ASP.NET MVC platform. It really helped me think in a test-driven way, as well as solidify a lot of the basics as it took me through building my first website with that platform. If you're going to learn by a book or otherwise, and I can't stress this enough, don't just read the code examples. Open up Visual Studio 2013 and type it all in. You want the rote practice, it will be invaluable.
there's an [EdX course](https://www.edx.org/course/programming-c-microsoft-dev204x#.VRzRH1CUeEl) on C# starting next week.
&gt; Changing all the occurrences of var to explicit types fundamentally cannot make any difference. It would be about as effective as burning incense or making a wish. yeah, i didn't say it would. i said it would USUALLY make it much easier to spot this sort of thing. As you say, it looks like they'd already given it a go on that one line, but EVERY other instantiator was either var or object. It looks like that's the way OP codes by default and this one line is where they'd tried something different to get out of trouble. it's bad practice - the language is strongly typed for a reason - and VS will usually give you lots of hints about if you're trying to convert from, for example, an Int to a String - where it can't if you're just using var and object all over the place. anyway, the problem in this case seems to be more that they don't really know what they're doing regarding sql interaction, and they're calling ExecuteScalar on both lines 6 and 10 for some reason.
&gt; it's bad practice - the language is strongly typed for a reason - and VS will usually give you lots of hints about if you're trying to convert from, for example, an Int to a String - where it can't if you're just using var and object all over the place. That's not how `var` works. It is not a way to switch off static type checking. You're confusing it with `dynamic`. The following two lines are equivalent from a type checking perspective: var x = "hello"; string x = "hello"; In both versions the type of `x` is `string`, and the compiler will do exactly the same checking wherever `x` is used in the code. It's not "bad practice" to use `var`, nor is it any less statically type safe. The only reason a (shrinking) minority of C# users are against it is because it's unfamiliar to them, so they're afraid of it; or because they've spent years writing out the names of types by hand and they mistakenly assumed this effort was protecting them from evil somehow. In most other modern statically-typed languages with good type inference, `var` (or its equivalent) is the way all variables are declared and no one thinks it's strange or dangerous. Also, in a lambda: var redObjects = list.Where(o =&gt; o.Color == Colors.Red); Notice how `o` is declared but the type of `o` is not. Is this dangerous? And `object` is not the same as `dynamic` either. The only operations directly available via an `object` variable are the same operations available on every type (e.g. equality comparison, `ToString`). Summary: * `object x = &lt;expr&gt;`: discard the type of `&lt;expr&gt;` and disallow almost all operations via `x`, except via explicit casting. * `var x = &lt;expr&gt;`: give `x` the same static type as `&lt;expr&gt;`, exactly as if the coder had written the type by hand. * `dynamic x = &lt;expr&gt;`: allow compilation with any operation on `x`, with no need for casting, and figure out what it means at runtime.
I watched the C# Fundamentals for Absolute Beginners video on Microsoft Virtual Academy, with Bob Tabor.... from Learnvisualstudio.net, where he teaches beginners the skills they need to get their first software development job, building windows and web apps for some of the worlds best companies, as quickly as possible. :D Its pretty good but I'm now in the phase where information could be leaving my brain because after maing a guess the number game I'm all out of ideas for projects lol
Yes, I do too - but I couldn't get that screenshot I wanted, because console would disappear when you press button :) EDIT: ah, I think I used ReadKey.. should have used ReadLine.. thanks
I've done the same course, and I found it to be really interesting. Can you recommend other courses/books to continue learning c# where the course stopped?
It could be a CORS issue? If you're using OWIN / OAuth try adding this line to see if it helps: public override async Task GrantResourceOwnerCredentials(OAuthGrantResourceOwnerCredentialsContext context) { // allow all origins to access the login token context.OwinContext.Response.Headers.Add( "Access-Control-Allow-Origin", new[] { "*" } ); ... If that fixes it then change the "*" to host names that are more appropriate for what you expect
Your example won't compile. You can't declare a variable with var unless you also initialise it in the same statement. Seriously, you're debating the merits of a language feature that you don't know the first thing about. &gt; and don't get me started on lambda Oh dear. Never mind, I just gave up caring.
Are you using JWT ?
If you want to deep dive into the C#/.NET world, I'd suggest you read CLR via C#, from Jeffrey Richter. It's 896 pages of awesomeness and thoroughly introduces every tiny details, you should know. For example you'd learn how the CLR works, or how some thread synchronisation algorithms are implemented. The book itself is easy to read, and shows lot of code examples. http://www.amazon.com/CLR-via-Edition-Developer-Reference/dp/0735667454
If you use visual studio, you can right click the interface and click "implement interface"
&gt; If it weren't for that post/example, how would I ever know what is to be done inside of an interface? If it isn't documented, or obvious (PaintTheScreen means you have to paint the screen, for example), then some investigation is needed. Look at sample code. Decompile existing, working code, to see how they did it. &gt; How do I know what methods MUST be implemented? Is it even possible without examples? An interface says that you must implement all these methods. None of them will be optional. When using a base class, you may or may not be overriding some methods. With an interface, you don't get a choice. Knowing this difference is important - it will be asked on job interviews. :) &gt; When implementing an interface is there ever a time when the interface comes with code already (like inheriting a class)? No. An interface defines a contract that says: "My implementing class will implement all these methods. All of them." 
Im just assuming the code would be tagged as a virus then right?
&gt; If it isn't documented, or obvious then some investigation is needed. I'm assuming that if a Class or Method is requiring my Class to implement an Interface then *it* will check for that requirement and *it* will be the one calling the methods it required me to implement. So I should start investigating the "calling Class" and see if they have any clues in the documentation. Otherwise, I guess I just have to code for the inputs and outputs of the methods and hope for the best. Thanks for the reply.
Beautiful! Haha, I was worried this would be an issue.
No, there are several legitimate reasons to hook the keyboard. I would recommend that you build the example code that was linked and then see for yourself.
Why would you do that when there is decent, documented (with examples) code already linked? If you admit that your code is messy, why would you want to confuse someone who is attempting to learn?
I'll participate in it if you want to make one. 
Completely unrelated notes for learning sake: * Take a look at [String.Compare](https://msdn.microsoft.com/en-us/library/e6883c06\(v=vs.110\).aspx) (with StringComparison option) instead of looking for "a" or "A" * Console.WriteLine supports a format string, you can learn about that by looking at [String.Format](https://msdn.microsoft.com/en-us/library/b1csw23d.aspx) 
I'm a little confused. What doesn't work? You say locally, do you mean on a local IIS environment it works, but when you push it to production it doesn't? Can you maybe link us the code that works and doesn't so we can look at it? Otherwise, logging is your friend. Log4net and write to a file. Assuming you can't debug/break the version that's failing.
I said my code was messy. I used code from other people that is perfectly fine. As crappy as my code is, it still works. I also believe that learning from digging into code is a great way to learn. Chill your panties out dude. Edit: Just so it's clear I'm not trying to be a dick, I've worked on this similar subject before and asked for help as well and learned a lot along the way: http://stackoverflow.com/questions/5748457/keyboard-hook-not-catching-every-key
You can do that in 2 lines string textFromFile = File.ReadAllText(path); Console.WriteLine(textFromFile);
ok
An easy way to get into it is SourceTree. Check it out at http://www.sourcetreeapp.com/ Make sure to get into the finer parts of Git though. I still don't understand a lot of it but it's useful to know.
Ok I will check them out and if I experience some problems i will reply here again. Thank's for the awesome feedback guys. 
Double check my edits; I made a few changes. Have fun.
From the links, tutorials and examples, I've been able to find, Method syntax definitely seems to be the preferred way to do it. I'll look at the link tomorrow. Thanks 
/r/EdX_CSharp/ is the subreddit
The only thing the compiler enforces is that the method signatures match. Parameter names don't even matter, as long as they're in the right order and are of the right type. Therefore, without documentation of what the interface is supposed to do, the interface is absolutely useless. *Therefore*, a good interface definition is small, with only the methods absolutely necessary to get the job done, and sufficient but succinct documentation. Good: // returns -1 if a &lt; b, 1 if b &gt; a, or 0 if they're equal int CompareTo(T a, T b); Bad: BigComplexObject DoSomething(int foo, object bar, out object baz, out Person p1, out Person p2) Complex, implementation-dependent methods should be done with abstract base classes or static utility methods rather than interfaces. Or a combination of simple interfaces and most of the implementation done in an abstract base class.
That's what happens when you've read too much javascript for the week.
So. I'm using visual studio 2013 and run my app locally. A web api (not at the computer) so visual studio launches iis express. It works there. When I do a web deploy it no longer works. I can try linking code when I get in tomorrow. But since it works locally. I'm not 100% positive that will help. 
You could look into bass.net which interfaces with Un4seen Bass Here are the sources: http://www.un4seen.com http://bass.radio42.com For visuals you can look into BASS_SFX (Google Search) which is a module for bass.net, you can load winamp plug ins such as milkdrop. I have been successful using this in my own creations. If your using WPF and use the above, you will need to get familiar with pointers and how WPF windows work. this can be daunting because you would need to host a winforms control to get a separate pointer to apply the milkdrop in a control area rather than the entire window. Also you can look at this library for WPF specifically, they have a BASS.net example in the source code, not in the direct download zip of sources. https://wpfsvl.codeplex.com This was very helpful in migrating an existing bass.net project from winforms to wpf, I would look at the last link to get up to speed for the syntax and logic at least. Edit: Formatting 
Now we just need it to actually love your GF itself and profess its own love. :D
The only difference I can think of between local and remote, is the app pool recycle interval. If, for example, your remote App Pool recycle is set to 30s, and this background item is taking longer than that, then it _will_ be recycled/cleanedup/terminated. Consider [this] (http://www.davidwhitney.co.uk/Blog/2014/05/09/exploring-the-queuebackgroundworkitem-in-asp-net-framework-4-5-2/).
I'm not sure I understand what you're saying, wouldn't you just throw the exception? throw new MyException(ctor stuff);
Sorry to confuse you...I may be confusing myself :-) Yes, that's what I'm trying to use in my Catch statement, but I'm not sure what parameters to provide Catch { throw new MyException("MyMessage", ?, ?) // What do I put here? }
THEY'RE OPTIONAL. :)
[Image](http://imgs.xkcd.com/comics/campfire.png) **Title:** Campfire **Title-text:** 100 years later, this story remains terrifying--not because it's the local network block, but because the killer is still on IPv4. [Comic Explanation](http://www.explainxkcd.com/wiki/index.php/742#Explanation) **Stats:** This comic has been referenced 53 times, representing 0.0908% of referenced xkcds. --- ^[xkcd.com](http://www.xkcd.com) ^| ^[xkcd sub](http://www.reddit.com/r/xkcd/) ^| ^[Problems/Bugs?](http://www.reddit.com/r/xkcd_transcriber/) ^| ^[Statistics](http://xkcdref.info/statistics/) ^| ^[Stop Replying](http://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=ignore%20me&amp;message=ignore%20me) ^| ^[Delete](http://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=delete&amp;message=delete%20t1_cpzlomd)
Thanks to God. Though Iam alone its a day time over here.
Javascript can^^((should)^^) put braces around their conditional body blocks. :)
&gt; Actually getting it to query the data was easy, but when it came to putting in a where clause on the servers ( for .IsEnabled ) that was the hard part. You're not using the retrieved servers anywhere. You might thing you're using them by accessing `customer.Servers` - but that's not the servers list you're retrieving in that query.
This is such a sweet thread. It makes my heart warm to see so many people helping out :)
Why do you want to give her this if you aren't already a programmer? Is she? 
Normally I don't respond like this, but in this case Google is your friend. There are (open source) libraries and customized solutions around the web.
holy fuck thats so lovely
Notepad++ has the ghost typing feature. 
Not 100% perfect (extra space and sleep at the end) but concise and responding to your demand: using System; using System.Linq; using System.Threading; namespace Fir3SoulLuvsLetter { class Program { static void Main(string[] args) { var msg = args.Aggregate("", (str, arg) =&gt; str + arg + " "); foreach (var c in msg) { Console.Write(c); Thread.Sleep(500); } Console.ReadKey(true); } } } 
Why? There's no need for the excess time it takes to write them. No braces = same line or next line. When you're not doing anything complicated, they're perfectly acceptable. The real crime is not using if/else.
This is fantastic. I really, really enjoyed this. Ha!
&gt; winamp plug ins such as milkdrop. Really?! That would be great. I already checked out the wpfsvl, but again the c# examples are lacking info... in fact, that has been m complaint for 20+ years, SO often the documentation is horrible. I had looked at BASS.NET, but I did not dig very deep into it before asking for ideas here. Thank you for the info, and have a great weekend
C# in depth by Jon skeet. Great book
How to be a programmer: Really, the best way to learn is to get yourself C# for Dummies and code your way through all of the scenarios presented in the book. Learn just learn what a class is or what polymorphism is; actually _apply_ it in some sort of educational project. And as you learn how to apply these micro-patterns, you will find you can then plug these concepts together to form bigger, problem-solving patterns that you can leverage for nearly any task. Once you learn the language, you should start seeing patterns in how to do things. (Well, if I need to iterate over this collection, I need a foreach loop...) At that point, the actual _programming language_ means less than _knowing how to organize your thoughts into pseudocode_. And at that point you are truly becoming a programmer.
Yeah check out bass.net, they actually have a pretty good forum although most of the information is not directly C#, mainly VB. As long as you can read past that and read the concept instead of the code you can pave your own way. 
I have used VB for 20 years.... so I hope that I can work it out (how sad would that be if I couldn't?)
Ha! well you have a giant head start on me then. I have never developed anything in VB, only C# so looking through the VB topics was really killer but still helpful. I think you should be just fine. If you get stuck with the examples let me know, im no expert by any means but I have been able to get audio playback, visuals and some syncing between bpm from bass.net and milkdrop. 
Can i just start out by saying - Thank you, very much for helping out. So - Just to make sure i understand correctly. My Original query did the following: It got an entire list of customers ( when i only actually need one ) and then got all of the customers, servers - and not only the ones that are enabled, but everything? ---- My use case is pretty simple. I need to have a customer, who can have x servers. These servers can be disabled. Now what i need is to be able to show the customer as he enters my program, which servers he currently has enabled. Now for each of these servers, i need to also load the possible Notes that might follow each of these servers. ---- I checked my original query through debugging in Visual Studio, and ( Tell me if this is wrong ) - I set a breakpoint right after i load the query and the dbContext is disposed of, and i hovered over the returned value, in here i saw: My 1 customer. All of that customers servers, which has IsEnabled set to true. and all of those servers, notes. Tell me what I'm doing wrong here? ---- I tried your query - To get only the first customer, and then include the servers with notes afterwards. It makes sense that my original query loads way more customers, only to let the GC collect them afterwards. because i only need that one, which has .CustomerID = customerId I tried the following: var c = dbContext.Customers.FirstOrDefault(x =&gt; x.CustomerID == customerId); if (c == null) { return new Customers(); } // btw, this drives me crazy in your code c.Servers = c.Servers.Include("Notes").Where(s =&gt; s.IsEnabled); return c; Even pasted in that comment of yours ;) - I'de love an explanation on that though. I've read somewhere that returning an empty object is better than returning a null, which is the reason. Anyways - As soon as i hit c.Servers = c.Servers.Include &lt;-- Include fails, giving me the following: &gt;Error 1 'System.Collections.Generic.ICollection&lt;Mercury.Models.EF_Elements.Servers&gt;' does not contain a definition for 'Include' and no extension method 'Include' accepting a first argument of type 'System.Collections.Generic.ICollection&lt;Mercury.Models.EF_Elements.Servers&gt;' could be found (are you missing a using directive or an assembly reference?) C:\Files\project-mercury\Mercury\Mercury\Models\Objects\DatabaseWrapper.cs 75 39 Mercury It makes sense that my EF_Elements.Servers doesn't have an Include, where have i done wrong here? Again... Thanks! ---- Edit: Also - I am using it like Customer.Servers ( this goes into a datagrid ). Customer.Servers.Notes (goes into a listbox once a row has been selected in the servers datagrid.)
Thanks again. The thing is, the ability to display other people's visuals is nice, but I want to create some of my own (simple, that match the app's design) so I am basically looking for the FFT data. That said, if you have a vb to c# question, feel free to keep me in mind, I'm happy to help
.NET itself can do 3D through WPF and might be enough for what you want. I have not had to do it myself yet but a quick google found [multiple](http://www.infragistics.com/community/blogs/kiril_matev/archive/2013/07/17/wpf-3d-surface-chart-for-your-scatter-data.aspx) [examples](http://www.codeproject.com/Articles/42174/High-performance-WPF-D-Chart). There should be plenty out there to get you started. If you are more of a reader there is [a book](http://www.amazon.com/Programming-Windows%C2%AE-Three-Dimensional-Presentation-Foundation/dp/0735623945) on the topic as well.
[WPF 3D](https://msdn.microsoft.com/en-us/library/ms747437%28v=vs.110%29.aspx) is one option that is pretty simple to use and not a full-on game library. 
Microsoft Virtual Academy. Free video courses across a huge range of topics.
Pretty cool actually. I did something like this before on a complex program where I used XML serialization to do this in a hackney way. 
Hi @ElMalakai The xml serialization has a number of serious limitations compared to this. Among others, that it cannot handle circular references, and has zero configurability in terms of how values are presented, or which fields are to be included/excluded. Finally, such an approach does not allow automatic write/rewrite of asserts. 
&gt; So - Just to make sure i understand correctly. My Original query did the following: It got an entire list of customers ( when i only actually need one ) and then got all of the customers, servers - and not only the ones that are enabled, but everything? What you did is that you got a single customer, all the servers that are enabled, all notes from every server, but in the end only sed the single customer, with all its servers and all their notes. &gt; My use case is pretty simple. I need to have a customer, who can have x servers. These servers can be disabled. Now what i need is to be able to show the customer as he enters my program, which servers he currently has enabled. Now for each of these servers, i need to also load the possible Notes that might follow each of these servers. &gt; I checked my original query through debugging in Visual Studio, and ( Tell me if this is wrong ) - I set a breakpoint right after i load the query and the dbContext is disposed of, and i hovered over the returned value, in here i saw: My 1 customer. All of that customers servers, which has IsEnabled set to true. and all of those servers, notes. &gt; Tell me what I'm doing wrong here? At this point everything is perfect, the issue is that you're not returning the object you are inspecting, but its customer property. &gt; I tried your query - To get only the first customer, and then include the servers with notes afterwards. It makes sense that my original query loads way more customers, only to let the GC collect them afterwards. because i only need that one, which has .CustomerID = customerId &gt; I tried the following: &gt; var c = dbContext.Customers.FirstOrDefault(x =&gt; x.CustomerID == customerId); &gt; if (c == null) { return new Customers(); } // btw, this drives me crazy in your code &gt; c.Servers = c.Servers.Include("Notes").Where(s =&gt; s.IsEnabled); &gt; return c; &gt; Even pasted in that comment of yours ;) - I'de love an explanation on that though. I've read somewhere that returning an empty object is better than returning a null, which is the reason. Well, that's more a design point of view that anything, but as the user is not found, it should (in my opinion) returns null instead of a new user that could leads to think that its a customer that has no servers and a customerId of 0 for example. &gt; Anyways - As soon as i hit c.Servers = c.Servers.Include &lt;-- Include fails, giving me the following: &gt; Error 1 'System.Collections.Generic.ICollection&lt;Mercury.Models.EF_Elements.Servers&gt;' does not contain a definition for 'Include' and no extension method 'Include' accepting a first argument of type 'System.Collections.Generic.ICollection&lt;Mercury.Models.EF_Elements.Servers&gt;' could be found (are you missing a using directive or an assembly reference?) C:\Files\project-mercury\Mercury\Mercury\Models\Objects\DatabaseWrapper.cs 75 39 Mercury &gt; It makes sense that my EF_Elements.Servers doesn't have an Include, where have i done wrong here? EF is absolutly right, that will teach me to give advice without opening an editor :) it should rather be something along var c = dbContext.Customers.Include("Servers").Include("Servers.Notes").FirstOrDefault(x =&gt; x.CustomerID == customerId); if (c == null) { return null; } // FTFY c.Servers = c.Servers.Where(s =&gt; s.IsEnabled); return c; This should work better, but I still typing that without testing. If you want to really explore and test stuff with linq, I highly recommand that you download LINQPad (https://www.linqpad.net/) which let you try you queries, see the immediate result, the conversion from query syntax to method syntax, and the actual SQL query that is run against the server. I've been using it for more than 5 years now and its been a great help in understanding or rewriting some queries.
Yeah, I definitely wasn't trying to suggest it was at all comparable. I would definitely nuget this in the future and be done with it. My point was mainly I've run into the 'need' for this a few times, and never really thought about solving once and for all. I'm glad someone else has. 
Find a problem you are passionate about, and over engineer a solution to it using C#. Best way to move forward. Every 3 to 4 years ( faster these days ), I would stop taking new projects, and spend a week or two using the new tech previews and releases to work on pet projects. It could be some game or simulation, or a recipe manager, or garden controller... something. I'd throw all my free time into this software that i'll likely forget about, but in the meantime, I'm using all the new features and tech. This includes stuff like using Azure to host things, or trying to figure out why anyone would use node.js. Honestly, best way to up your game. You'll be passionate about it, so you'll think about it while you sleep, and you'll be eager to try out new ideas in the morning. Reading books is an ok way to get a grasp, but I don't think I'd ever reach a 'new level' as a programmer just be reading books.
Pretty common mistake. The number of permutations of App Pool identities, process identities, impersonation with NTLM auth and with Anonymous auth... it gets complex. That's why, assert everything in setups, and log what you know. 90% of the time, my first deployment to production on a new project fails. And my log generally tells me immediately what stupid mistake or assumption I made. 
Hi I'm the author of stateprinter. I don't have experience with using this strategy of testing on a large scale. I would appreciate hearing more on your experiences with this approach. What was good. Bad. Etc
Put it up on GitHub so that we can browse the source without having to download it.
&gt; Requires C# 3.5 or newer You probably wanted to write .NET 3.5 or newer. There is no C# version 3.5.
No, I can't. He has to accept it. You can only make it less work for him, but you can't do it yourself.
I understand this approach because I remember being passionate about projects. However, I no longer experience this inspiration and I'm seeking something that will fill gaps in my knowledge. Hopefully this will kickstart my drive again.
You can fork it...
... which will not change anything on the linked page.
I did solve this, but probably not in the best possible way. I had to actually host the database that comes with the generic security on SQL server, and then change the connection string to point towards that database on SQL server. Surely it's simpler than that though.
For those of you curious about MTM and Coded UI, basically nothing has changed. MTM still sucks. 
OpenTK looks like a great wrapper, but having toyed with it a bit for a game I was working on, I have to say I find their documentation to be pretty lacking.
Wix itself is just a compiler + libraries for generating installers based on the Windows Installer engine, as far as I recall (been a year or two since I used it). Om general, it should be able to serve your needs just fine and can definitely do Windows services. However, I am not aware of anyone customizing the installer per recipient. This seems a topic not worth the problems it will cause. What if you simply make the user enter his unique ID during setup? Seems much more straightforward to implement. Why do you want to do this in the first place? Maybe if you explain the scenario we could offer more practical alternatives.
I'm not really sure how to answer your question as to it being bad, as I can't really speak to what would or wouldn't make a language bad to start with. I'd say you're better off starting with C# over a lower level language like C/C++ simply because you don't need to worry about the additional complexity of memory management. 
I would say it's a good language to start with. It takes care of some major things for you (memory management) and the Visual Studio IDE is *extremely* user friendly. I would also vouch for that C# Fundamentals for Absolute Beginners video series as a good start point.
C# is probably one of the better ones to learn in my opinion due to the plethora of quality learning resources available. As someone else suggested, the channel9 stuff is a great start. You might also want to check out Pluralsight. At least sign up for the free trial and check out some of Scott Allen's C# beginner courses.
Damn, you taught me something new about LINQ today. Thanks.
That'll work, but if code signing the MSI is important, you'd have to do that after updating the property inside the MSI
Option 1 for just one installer: 1. you could create a custom installer dialog in WiX installer for the user to enter a username/password for the server 1. WiX custom action to take that username/password and make an API call to the server that would return the UID for the user 1. write another custom action to save the UID to whatever App.config that your service uses Option 2 for a custom installer: 1. Use Burn (part of WiX) to create a unique setup.exe wrapper for your installer that sets the MSI property when the installer is launched from the setup.exe wrapper (not as familiar with Burn, I think this can be done) 2. have a custom background process clean up the unique installers from the server after they're created/logged in/report to server/etc Option 3 same as 2 but with a custom MSI by using candle/light or msbuild to create a custom MSI with the user property set
I am really not sure if I understood your problem, but given the last paragraph seems like this might help - http://jorno.org/20111119/passing-parameter-to-a-wix-msi-installer/ i.e. You could just store [OriginalDatabase] in the registry and parse the end of it to get the user name.
if you haven't yet, try the [lock](https://msdn.microsoft.com/en-us/library/c5kehkcz.aspx) statement around your critical section of code. a lock would be simpler than a mutex if it can be applied
I believe their code intends to write to a different file if another thread is currently writing to the originally intended file. The lock statement would force other threads to wait until a previous thread released the lock, so he'd end up with a queue of threads waiting to write to one file instead of writing multiple files in parallel. If they want to write everything to a single file then the lock statement is certainly the way to go.
wut&gt;?
Backgroud is console and Foreground is the text yes ? 
So many people Helped me out here. If anyone would like me to post the link to the exe when it's done. I will gladly do it. But this has been the best experience in reddit I ever had. I cannot thank all of you ! Edit1: I use Xamarin Studio For coding but all the tutorials i see to make an executable file are using visual basic. Which I do not have. Can it still be done using Xamarin ? Or i have to switch to visual Basic.
You don't really need specific OpenTK documentation though. Just look for OpenGL tutorials and API references (there are plenty!) and you can apply them almost 1:1 to OpenTK. :)
I think you need the SQL Server Compact Edition SDK, but I am not sure on the compatibility with VS Community Edition. Otherwise you could use [LINQPad](https://www.linqpad.net/).
OneNote clone
Thanks. I eventually gave up and resolved the problem by saving the images as actual files, it works. 
The documentation is messy. But I have a program I made that uses System.Speech.Recognition and .Synthesis. This is ideal for computers, not phones. It uses the database it has on local as well as using the Windows.Media cloud library for some variables. It allows you to change some voices but many of the permutations (age groups) don't work properly but you can do locale and gender and that much is well documented, i.e. "UK Female" but when I tried to make her sound 10 years old (creepiest AI ever), there is no audible difference so that says to me that it doesn't work very well. Frankly, the engines both suck (they're basically the same things with slightly different uses/protocol anyways) and I posted something about using Cortana when she comes out for stuff like this but we'll have to wait: http://www.reddit.com/r/csharp/comments/2x1h0d/do_you_think_there_will_be_an_api_for_cortana/ There is another solution called SpeakIt! and their API is STUNNING, however you better be ready to pay for each word you get off of their server ;) Like .06 cents but I bet that adds up REAL fast. The amount of testing I did with my vocal AI was a lot and I would probably be in the red if I used a paid API. MS would do themselves a favor by helping us out with this. Good technology is a program away if we have a good API.
I'm not sure what you mean by "more SQL like". Are we talking about the UI/Style of the DataGridView? I'm pretty sure you could make DataGridView look exactly like Out-gridview, and even put a little search text box above it. 
Don't forget about [Path.GetTempFileName](https://msdn.microsoft.com/en-us/library/system.io.path.gettempfilename\(v=vs.110\).aspx) and [Path.GetRandomFileName](https://msdn.microsoft.com/en-us/library/system.io.path.getrandomfilename\(v=vs.110\).aspx) . Both could be useful here. Let the .Net framework worry about the thread safety ( Static's on Path are Thread Safe ).
An app to organize notes.
while i only have a vague recollection of how and what out-gridview looks like. If you're doing WPF. You could look into using: ListBox, ListView, or ListView with a Gridview. Also, if you are using WPF ( I say this because i have no experience with WinForms ), you can pretty much customize the Datagrid however you want through styles. And judging from: https://i-technet.sec.s-msft.com/dynimg/IC413392.jpg I'de say you can make it look exactly like that, with a style applied to it. 
I agree. Really bad implementation. I don't know why they made certain functions but didn't create a use for them. I guess for Ease of Access controls/handicap laws but now that people are trying to make interpretive software that integrates more and more, like you're describing, they're going to have to step it up eventually. 
Use the Server Explorer (View -&gt; Server Explorer). You might need to install the SDK, but after that, you should just be able to connect to the database with the "Connect to database" button.
We learned that the hard way as well. Decouple all the things! Oh wait, this sucks so much. Service all the things! 
Yeah the UI/style. I played with this some more and I'm getting it close to what I want and learning about DataTables. One thing i wanted to do was remove the blank default column. The property RowHeadersVisible is completed not intuitive.
You can still use `File.Exists()` first to avoid unnecessary exceptions, but you can't rely on it. 
Yeah not sure about that. Being a .NET developer right now is great, there are a lot more jobs than people from what I have seen and also heard from recruiters. 
I've heard the same thing - I'm in the UK but there seems to be no shortage of people looking for .NET devs. I don't know if I speak for many others, but being a senior level .net developer, I just have yet to find a decent employer. My ideal environment would be one where management/the users listen to what devs are telling them, along with flexible working (proper flexible working), and somewhere quiet to work - maybe working from home a few days a week. And most of all, no corporate bullshit. Everywhere I've worked has been the opposite of this. Projects that never go anywhere cos nobody listens to the experts. Open-plan offices where it's impossible to get anything done. Rigid hours that make it impossible to lead a decent lifestyle. And oh, the corporate bull-shit. It's so bad that I've actually opted to be self employed and work for pennies, when I could easily walk into a £45k/year job. But I don't, because I've only got one life and the stress isn't worth it. If employers realised this perhaps they'd have an easier time recruiting good devs.
&gt; C# and Java (and the .NET and Java ecosystems) are really poor environments to learn programming skills That bit is certainly complete nonsense. &gt; And what use do most shops have for people who not only lack experience in general, but also need to be taught the language and frameworks? When I was fresh out of college I founded my own company and sold my products and services through it. This article seems to assume that nobody does that. &gt; I would want to see that an entry-level developer had put together a project (as an intern, on their own time, for an open-source project, or as a volunteer at a charity or non-profit) using the following technologies: &gt; &gt; * C# &gt; * ASP.NET MVC or a XAML-based system (Silverlight, WP7, WinRT, WPF) &gt; * HTML5, JavaScript, CSS (for someone with ASP.NET MVC experience) &gt; * Entity Framework or NHibernate (or similar) For bonus points, SQL and LINQ would be great too. Also complete nonsense. I have been working professionally on the .NET stack for 8 years now and I have never used most of those. I do WPF but I don't touch XAML with a bargepole. I have never done ASP.NET, HTML 5 or Javascript. I have never even heard of "Entity Framework". I don't do web programming. I used F# and sometimes WPF. &gt; So, entry-level developers can overcome the increasingly steep barriers to entry in the field, but only if they are willing to invest the necessary time to get some hands-on experience using the tools that most shops use. Whether you want to work in a "shop" or not I think entry-level developers should build a decent open source project and then use it to demonstrate their capabilities. 
Also in the CLE area. Developers are difficult to find period. Good ones even more so. Especially ones that have salary expectations inline with what they are worth. I don't think the problem on entry level positions is so much the complexity of the language. I think a lot of companies have a warped sense of what these positions should be. Especially if HR is involved. I have been sent jobs by headhunters that were asking for 5 years in a two year old technology. If you wanna chat, I have a few ideas that might help you at least set up a pipeline for new developers. It takes some investment but It might be a good option. We just started working on this at the beginning of the year.
We have the opposite problem here (UK). Middle managers justify their own existences by making bigger developer teams than necessary, hiring lots of bad developers based upon the flawed logic that their team will solve the same problems faster because there are more of them. 
So the pay was sub-par is what you're saying?
This guy just flat out doesn't have any idea what he is talking about. If you look at the rest of his articles, I think he's just a shill for this Agile Platform code generation tool he's so enamored with. He's basically saying learning code is hard, so don't bother: get some tool to generate it for you, or you'll never work. Its laughable. Completely out of touch. 
Interested to see how you do WPF without XAML. Sounds like you've been living under a rock, having not heard of EF, or touched ASP.NET, not something to brag about in this industry. Curious what you've been doing for the last 8 years as a "professional" .NET developer. 
You're doing ORM wrong if this is the case, it's supposed to be a thin layer over your DB. If you try treat it like a magical storage API, then this is what you'll end up with.
&gt; Interested to see how you do WPF without XAML. Technically you could drag/drop from the toolbox and never really get into the guts of it, not a *lot* different than you would have with WinForms really. I've always wanted to tweak some things when I use WPF but you don't necessarily **have** to.
Not harder per say, but colleges are definitely not keeping up with the times. There should be at least one course about source control, branching methodology, bug tracking, release management, project planning, etc. Unless you have worked on a big open source project, you are just not hit with these until you get a job. As the build and source admin, I see people do stupid stuff all the time just because they don't have this knowledge coming into the job.
The issue isn't the learning curve of the stack. The issue is that entry level positions are getting increasingly outsourced- particularly among large corporations who are the primary users of Microsoft's enterprise development tools.
This has always been the case. (Or has at least always been the case since I got my undergraduate degree 25 years ago) A Computer *Science* undergraduate degree is preparing you for graduate study- not for industry. What we need is more Software Engineering programs that forgo some of the heavier math in favor of the subjects you listed. As it stands it usually takes a good 3-5 years and a couple of projects to turn a good computer science grad into a good software engineer. 
I could have written the exact same thing. Although I haven't been brave enough to jump ship yet.
&gt; people are graduating from college with 36 credit hours of total "computer science" (and increasingly, "information systems" or similar degrees). That is barely enough to teach them the basic fundamental principles of programming let alone the tools and information they need to survive in the .NET environment. Ya, so people who spend take less than a week learning how to program can't program. WTF does this author expect?
Yes, but that's not the point. Most ORMs cannot do anything non-trivial without totally fucking up performance.
The problem I've found with hiring .NET devs is that there's a strong anti-.NET vibe being taught in our local schools. So many of the kids coming out of school really aren't interested in our positions because they believe they can fix the universe with Ruby on Rails (and in the past 2 years, Node.js). Most end up moving out of the area, which is absurd because on a salary-to-cost-of-living ratio, we pay roughly 1.8x better than anything you'll find in Silicon Valley, but whatever. When we do end up hiring someone, about 50% of the time they spend the entire time complaining about the architects and lamenting that if only they could use &lt;insert flavour of the week here&gt;, they could do everything so much better. Sigh.
Yeah, I don't disagree. It depends on what you want to do with it. In a sense you're missing the power of it if you use it as an almost one-for-one WinForms replacement, but it also makes a pretty good rapid development tool that way (if not especially powerful/beautiful when used that way.) I've done either, depending on the task at hand.
&gt; Maybe I'm just getting old and biased (please get off my lawn), but it doesn't feel like the path forward. I've been trying to like Entity Framework ever since it came out. This week I was experimenting with EF7, and that was the final straw. It's now 100% code-first modeled with no support for database changes from DBA's; they basically assume developers are designing the databases now. The framework has always been a joke for serious projects; it's nearly as bad as the old .NET 3 WCF. Works great for simple demos, but anything more complex and it becomes a clusterfuck. So... I've gone back to ADO.NET and am building my own ORM layer. Stupid? Probably. But in the long run it'll be better.
That's about £50k in Britain, not unachievable for a decent c# Dev. 
Well according to /u/mithrandirbooga, [code first is all there is in EF7](http://www.reddit.com/r/csharp/comments/31g46x/how_true_do_you_guys_find_this_article_it_talks/cq1fskz). Which just sounds frightenning.
I would actually disagree on this. It depends what the degree is. Computer Science? Nope. There isn't room for it. The trouble is, other than maybe something like MIS there really isn't a "developer degree". I haven't look at too many Software Engineering course trees, but I'd suspect it would make more sense there. Even then there is a lot more "engineering" focus that would likely not leave room for that stuff. The stuff you are talking about, especially bug tracking, release management, those are business functions really. Not something you'd expect to be taught in university (nor would I expect someone coming out of a CS degree to have massive experience with it).
Bigger problem (from what I have seen) is health insurance and other benefits. There are several companies in the area that have a reputation for either high turn over, expecting 50 hours a week on the norm, and/or having a 'cult' like environment (such that people either love it or hate it). I can't say if this was the case in /u/GrinchPaws situation but HR seems to get in the way a lot as well. A lot of the developers looking for a job aren't great. If you want a good one you usually have to know one and convince them to come over to where you are or get lucky.
This was the trouble we had. We are somewhere around 50% after 2 years. Not good. A couple shouldn't have been hired in the first place... but we needed people and they "got work done". It wasn't great... but it was something. Probably would have been better not doing it at all really.
Which only makes the unhireable more unhireable.
I agree, code first is awful. I worked on a project that was db first and then later converted in a major version change to code first because of all the supposed advantages we were supposed to get. Unfortunately not only was it slower, it wasn't any easier to work with which is (I think?) supposed to be one the advantages of code first.
I am using it in a new project; mostly to learn it. I have found when I built things the way I *think* about them normally I run into trouble. If you are able to figure out the "code-first" way it does a pretty good job. Especially when it comes to LOB apps.
&gt; they basically assume developers are designing the databases now In the vast majority of cases, they are.
http://blogs.msdn.com/b/adonet/archive/2014/10/21/ef7-what-does-code-first-only-really-mean.aspx &gt; Another way to sum this up is that rather than a third alternative to Database &amp; Model First, **Code First is really an alternative to the EDMX file format**. Conceptually, **Code First supports both the Database First and Model First workflows**. &gt; &gt; Confusing… we know. We got the name wrong. Calling it something like **“code-based modeling” would have been much clearer**.
See my reply above. It isn't a mistake... but it isn't what you think.
Ah ok. That is perhaps more interesting.
FWIW, I like the way Code First works, at least how it has been working for me.
I have; at a company that is in the top 50 of the Fortune 500. That doesn't change that in the vast majority of cases a "developer" is involved with database design and development. It isn't always the case sure, but I think it is way more common than you think it is.
&gt; Interested to see how you do WPF without XAML. Basically, like this: open System.Windows let _ = Window(Title="MyApp") |&gt; Application().Run I can run it from a script. I can run it in F# Interactive inside Visual Studio. I can edit the code on the fly. Most importantly, I can programmatically generate WPF interfaces which lets me do things like build bespoke graphical programming languages for business clients. I gave a [presentation about some of the WPF work I have done](https://www.youtube.com/watch?v=WI9bNWzTkxs). I think there are even code samples in there. Why do you use XAML? &gt; Sounds like you've been living under a rock, having not heard of EF, or touched ASP.NET, not something to brag about in this industry. I don't use ASP.NET because I don't do web programming. If I ever get into web programming then I'll take a look at ASP.NET but the software tool stacks for web programming are in such a horrific state that I don't want to touch it with a bargepole. I just watched the intro video to Entity Framework and it sounds like a bandaid for OOP. I haven't used OOP to a significant degree for over 10 years so that also solves a problem I don't have. Frankly, I cannot believe people are still writing code in that style in the 21st century. I have used similar "Frameworks" before like WCF and found them to be total crap so I don't generally gravitate towards the framework du jour. &gt; Curious what you've been doing for the last 8 years as a "professional" .NET developer. Here are some of my past projects: * Wrote a JIT compiler for the core of one of the world's most popular integrated technical computing environments. Attained 700x performance improvement because better tools let me solve problems by myself in 1 month that their team thought were impossible after 20 years. * Wrote low-latency server-side software for Europe's largest energy trading stock exchanges and brokerages. Reduced latency from seconds to 114µs compared to their "high-performance" C++ code base that had been developed by a team of 40 people over a period of 15 years. I did it by replacing the classic database architecture with a new fault-tolerant design of my own using Infiniband as the fabic between communicating sequential processes. * Helped write client side software for traders. They were using Silverlight which I liked. Shame it's dead. * Wrote middleware to stream aggregated data to thousands of simultaneous client connections. My solution used half the CPU time, 12x less memory, had 90x lower latency, allowed 9x more simultaneous client connections and required 3.5x less code that the C#+WCF equivalent written by another developer. * Prototyped software for clearing houses to assess the art of the possible. Came up with results they could not have obtained otherwise. * Wrote static analysis software to study the world's largest Mathematica code base. The results guided the board of directors of a billion dollar corporation. * Wrote a bespoke business rules engine with a graphical DSL for a client in the insurance industry. Replaced a process that took 9 months and cost $1.5M with one that takes 3 hours and costs $150. The system has had a billion dollars of business going through it for the past few years and zero reported bugs. * Taught five teams of developers at one of the world's largest insurance companies how to make their code 5x faster than 10x smaller by using modern tools. Before that I wrote software that monitored Europe's largest on-shore oil field, helped to write the tool stack that runs most of the world's cloud computing, . Basically, I solve hard problems for rich clients and that generally rules out all of these crappy "frameworks". 
Weird, I was only taught .net in highschool and now in college I still don't get Ruby or Python taught... Seems like our education plans are entirely different
&gt; You haven't worked at any large companies before have you? Or Integration projects? Developers never design databases on large enterprise projects. And if you're integrating with a 3rd party system, you don't have a choice. The database is designed for you, and you have no say in it. I've worked at lots of large companies and I have never heard of a database being designed without input from the developer. 
curious, do you mean entry level as in no experience, or like jobsite "entry level" where they want 2-5+ Years? I'm curious, as someone interested in the industry(no experience, trying to learn my first language). How are the people hired if they are not experienced, and/or untrainable?
&gt; Projects that never go anywhere cos nobody listens to the experts. You mean [this guy](https://www.youtube.com/watch?v=BKorP55Aqvg)? I have literally had meetings like that. 
Maybe it's the whole anti closed source mentality. Hopefully which will go soon given MS' free and open source initiatives towards .NET. I don't think they should teach one language is better than another and try and teach many, showcasing what's good and what's bad and what works in which particular scenario. It would prevent this whole "Java vs C#" or "Static vs Dynamic" debates. C# has grown so much due to forward thinking open minded individuals like Bart D. S. who enjoyed their functional programming.
Your missing out on the pattern of separating business logic with that of presentation. Let alone going totally MVVM where ViewModels can be instantiated from unit tests with know care in the world what the UI does. If you manage such patterns yourself or manage complexity some other way, then there's nothing wrong with that. It's just an approach and IMHO is a really good one. I also agree that strong typing is useful helps squash lots of bugs I've had hidden behind MVVM magic where a property maybe had a typo. But just wanted to answer "what am I missing". 
Yes.
For the majority of entry level .NET positions, I would not expect a new hire to be able to write a LINQ provider right out of the gate.
I've a new dev with about 3 years of professional experience under my belt on the .NET stack over 3 companies (intern to short term, short job, and current permanent). I was enamoured with EF when I first started using it, but I am so fucking over ORMs. If I have to make databases and interact with them, I immediately reach for Dapper and write a bunch of SQL queries. IMO there's really no other sane way for large scale, scalable applications.
I moved from the UK to the US. I'd recommend trying it out.
Code First doesn't mean "code first". It's a stupid name for "doesn't use EDMX files". Whether you generate the database from code or vice versa is a separate issue.
Assuming you want every thread to write to a different file - consider an implementation where you have a single shared counter. Each time a thread needs to write a file, increment the counter with [Interlocked.Increment](https://msdn.microsoft.com/en-us/library/dd78zt0c%28v=vs.110%29.aspx). The result of the call will be the number of file that that thread attempts to write to. If the file exists, it increments the counter again. In this manner, only one thread ever attempts to verify the existence of a file at a time. The disadvantage is that over the lifetime of the program, the names of the files will always increment (i.e. if they are temporary and get cleaned up, that number will never be re-used).
Exactly. 
Just read up on it. Agreed it is an awful name. Glad to see db first is still am option.
No kidding! I'm trying to hire a senior level guy and a mid level guy and I can't find anyone for the life of me. You'd think Boston wouldn't be that tough of a place to hire people. 
Even without the message passing approach, it's perfectly possible to write the exact equivalent of XAML in your choice of programming language (F# or C#). The problem is the widespread assumption that being "declarative" is only possible in an XML- or HTML-like syntax. Less common, but still occasionally seen in the wild: that writing stuff in XML *automatically makes it* declarative.
Have you tried EF7? It is literally not possible. The devs have said it won't be possible at release, and that they "may" look into it sometime after 2016. 
...I started learning programming 6 months ago and C# 1 month ago, and I know these things. How is this possible.
Am i the only one that would like to program wpf the same way as xamarin form?. xaml feels a bit weird to me. 
&gt;ADO.NET coupled with traditional SQL and stored procedures is way better. The SQL is harder to write but runs much faster and forces you to write a better schema. Learn sql. Learn ef. Learn what ef does with sql. Best of both worlds. &gt;Also, if you're doing the database access with EF instead of stored procedures, you're doing code rolls every time you need to make a change. Welcome to CI in the 21st century. But by all means go back to clasic ASP and sprocs and just do all you development hot on the production servers. 
Honest question. If you search your code, how many instances of "protected internal" do you have?
My faith that people with experience understand the basics is shattered. I guess it depends on what is defined as basics, but access modifiers should definitely be on that list.
Right i kinda glossed over that part as exaggeration. 
Yes, you need to have a job offer. I got lucky and got one through an agency - the company had a London office and an NYC one. But developers are in a "special need" category, and plenty of companies are hiring. It's totally possible. Also, if you're under 30 Canada offers a "working holiday" visa that lasts for two years, no job offer required.
Exactly... because learning the things needed to do the real job. Too hard.
You don't happen to be looking for an experienced .NET intern, do you? ;)
No on is saying sql and sprocs is going away. EF is built on top of ado.net and sql, not to replace it. Works great for a lot of things, it doesn't for others. Sql needs to be taught and will continue to be taught. How applications use sql is what's evolving. How are you using your query/sproc results? How are you mapping them to useable objects? Let's just hope for the sake of your carrer that this year's hot development doesn't become the next big thing and you totally missed the boat because you needed 10 years to vet a technology. SQL Server at one point was also a new technology, but I'm sure you would have stuck with flat files because "you know how it goes with microsoft". 
It isn't specifically entry level. None of the folks we hired were completely wet behind the ears. They all had experience. Then reality is we needed folks who were more "battle ready" than these guys were. Even having 8 years or more experience in related fields didn't seem quite good enough. They either needed lots of hand holding or produced less than adequate code.
Not in this specific use case, no. I guess I don't understand how it can be "not possible". Or how "the devs have said it won't be possible" when the guy who wrote the blog I am quoting works on EF.
I still find it easier and less verbose to bind the view model to the UI using one of many MVVM frameworks, ReactiveUI or Caliburn.Micro among others. I admit it's subjective, although the part below is just as subjective: &gt; For big projects you definitely need the separation but XAML/MVVM **look strictly worse than the approach I use.** At least for data-driven applications, I found MVVM to have the cleanest separation available. That being said, I readily admit that for applications that rely heavily on graphics, are not *strictly* data-driven or need the most performance they can get, it usually doesn't cut it.
So, to get a job you need experience but to get experience you need a job. Sounds like the complaint about any job where there is opportunity for advancement. 
Well, I lived as couple years in NYC and DC and there is not much of a difference. Same bars, restaurants and sports, just more of them in bigger cities. Actually real estate is immensely cheaper and a lot less traffic. Could use some better weather.
CIS is not Computer science. So having it taught in the business school makes sense to me.
Looks like standard JSON, which there are numerous libraries for, the most popular probably being [Json.NET](http://www.newtonsoft.com/json).
Did you try Xamarin.Forms? It's ok to have to customize some parts of your app but, imo, you need to customize the minimum possible. There are a lot of other parts that you can reuse.
Thanks!
Then tell them not to use `final` and `&lt;? extends Whatever&gt;` ;)
You can use `List.IndexOf(T item)`. As in: if (list1.IndexOf(string1) == list2.IndexOf(string2)) ...
One problem, the lists can have more than 1 of the same string :c
Will this work for what I need it to do? or is it just a cleaner version of my code? And yeah I know :/ I am quite novice when it comes to C# xD 
there's a few solutions on stack overflow: http://stackoverflow.com/questions/18561472/linq-select-duplicates-from-multiple-lists http://stackoverflow.com/questions/6509748/getting-index-of-duplicate-items-in-a-list-in-c-sharp http://stackoverflow.com/questions/2718822/what-is-the-most-elegant-way-to-find-index-of-duplicate-items-in-c-sharp-list this takes advantage of an overloaded Select method (which i didn't know existed) that additionally selects items' indices: https://msdn.microsoft.com/en-us/library/bb534869(v=vs.110).aspx
&gt;I also agree that strong typing is useful helps squash lots of bugs I've had hidden behind MVVM magic where a property maybe had a typo. But just wanted to answer "what am I missing". Word advice from someone who has spent entirely too much time writing XAML, `DataContext` is your friend. Except in the most ridiculous of bindings (abusing `tag`), it'll give you more "typing" to help spot typos in your bindings.
1. If they match: accept = true; 2. If only 1 matches: accept = false; 3. Occur equally often but don't match: accept = false; 4a. Location isn't first (if its a match): accept = true; 4b. Location isn't first (if its not a match): accept = false; If it matches: accept = true; else accept = false; It doesnt make a different if it is the first, second, third, etc. If there is a match AT ALL then accept = true; Does that answer them?
Great! Now you can try and specify what you actually want. Multiple ways to go around this. One way is to not even bother with any indexes at all. public bool checkMatchingStrings(String firstString, String secondString) { for (int i = 0; i &lt; firstList.Count; i++) { if (firstList[i] == firstString || secondList[i] == secondString) { if (firstList[i] != firstString || secondList[i] != secondString) return false; } } return true; } This code isn't super neat or efficient, but it should be easily readable. You should note that it doesn't safely check whether the lists are valid (e.g. both the same length), and that it returns true if neither string occurred at all; Because that's not a behavior you specified. There's other ways to do it, depending on how many strings you actually want to check. One of them is to simply make a mapping of matching strings, and then check every element once against that list instead. That all depends on the purpose of the code though.
Looking forward to the next part. 
Thank you :) I'll have a read and see if i understand it, then test it, if neither occur it should also return false, as i said, if there is a match, true, otherwise false 
It depends on what version of Windows you're targeting. If you're targeting Windows 8.1 then the Current_SizeChanged event is all you need. There is no concept of 'snapped', 'filled', etc. You just adapt your app to the current screen width/height: private void Current_SizeChanged(object sender, Windows.UI.Core.WindowSizeChangedEventArgs e) { int currentScreenWidth = (int)e.Size.Width; } You can also use this to check if the app is full screen or not: var appView = ApplicationView.GetForCurrentView(); Really all you need is to get the current height/width and decide what layout to use based on that. You can still set different views in your XAML and swap between them: if(currentScreenWidth &lt; 300) { VisualStateManager.GoToState(this, thinState, true); } If you're targeting Windows 8.0...just retarget to 8.1 and do the above. If you're targeting Windows 10 using the beta SDK there are some pretty big changes to all this, but 8.1 apps are still compatible. I have noticed however, that the new windowing of modern apps can cause issues if your scaling is not careful.
This might not be the prettiest of solutions, but the possibility of duplicate strings makes things more complicated than I'd like. var indexString1 = list1.IndexOf(string1); var indexString2 = list2.IndexOf(string2); while(indexString1 &gt; 0 &amp;&amp; indexString2 &gt; 0) { if (indexString1 == indexString2) return true; if (indexString1 &lt; indexString2) { var restList1 = list1.Skip(indexString1 + 1); if (restList1.Contains(string1)) indexString1 += 1 + restList1.IndexOf(string1); return false; } else { var restList2 = list2.Skip(indexString2 + 1); if (restList2.Contains(string2)) indexString2 += 1 + restList2.IndexOf(string2); return false; } } I didn't test this, but it makes sense to me. Idea is you get the indexes of the first encounter with string1 and string2. If either of these indexes is -1, we can just not enter our while loop. If these indexes are equal, then great, return true. If not, we need to increase the lower of the two variables to the next encounter (if an encounter is found). If an encounter is not found, this means string1 or string2 is no longer in the rest of the list, meaning the indexes can never be equal, meaning we can just return false. Hopefully that makes sense. I wrote this so that we don't have to limit to some known number of elements. **Edit:** Although if you are limited to 75 elements, you could just do a for loop over the range 0 &lt;= i &lt; 75 and check if list1.ElementAt(i) == string1 and list2.ElementAt(i) == string2, where we can return true in this case. If the for loop is not prematurely stopped by returning true, we can just return false. 
Dependant on where you are BizSpark is a MS scheme to give loads of tools and software to startups. Might help the decision making process.
Do you get an error message? Have you inspected the object returned by your getElement call? Is it the object you expect? What web browser are you using? How are you controlling the browser? Kinda pointless question with out a lot more detail. Better still if you can put up a small test case showing the issue. 
Microsoft.com says that the [70-583 exam](https://www.microsoft.com/learning/en-us/exam-70-583.aspx) has been retired, not sure what that's about. But anyways I would recommend the books that accompany the exams, while not super informative, were good preparation for the tests. Each chapter had review questions at the end, and some of those exact questions were on the exams. I also took the tests when they were offering a 3 for 1 deal, so I got the MCSD in Web Apps for $150.
I have never experienced with this hosting provider. I have checked about them and they are new in this business, just 2 years. They grow very fast and many people talk about them because their free hosting. But, I dont want to take the risk because their plan seems unreal. Yes, like you said above, unlimited database, unlimited disk space. I cant imagine how slow their server work. I personally use [asphostportal.com](http://asphostportal.com) for asp.net hosting. They are reliable, have great server, and their hosting plan is makes sense. Dont be greedy!! It will be hurt
It's downvoted because it's trolling. Saying that British pounds is no *real money*.
Look at your after test report. It should tell you what areas you had a low score in. Identify those areas and study up on them.
The problem with C# is that it forces you from the start to think in an Object Oriented way. This doesn't come naturally, and has it's own learning curve. It's still quite possible for C# to be your first computer language, but you'll have to work harder. On the other hand, something like Python or JavaScript have a *much* lower entry barrier, and are powerful languages in their own right. And programming being programming, any lessons learned while learning one language can be applied to a second one, so you can totally jump to C# (or anything else) once you feel you're comfortable enough in Python or JavaScript.
I'm thinking about going freelance. Having certs would be helpful there, I think.
Those lines of codes are put inside webbroswer document completed event. Capitalizing Click made the submit click working!! However the accepting terms and conditions is still not working. Can you provide me with more instructions on the javascript function? thanks :D
Well the page you are targeting already uses jQuery. So I figure you can use the WebBrowser control's InvokeScript to call your own jQuery. Might make for cleaner code. Basically: string jsClickSubmit= "$(\"input[name='commit'\").click()"; webBrowser1.Document.InvokeScript("eval", jsClickSubmit); Also, you can use jQuery to select your terms as well as possibly more efficiently fill out the form. Also, before clicking on the submit, you should Assert that the button background isn't Color.Red ( they use that on the site to signify the form isn't valid, and you can't check out). Edit: Also, I should throw out that there's lot of QA/Unit Test systems out there that will 'watch' you fill out a website form, and present you with the jQuery or plain old JS, to script that event. You might be too far down the roll-your-own approach, but you are definitely reinventing a wheel here. 
OP has 583 in the title, 483 in the description. You are both right (and wrong).
Thank you so much! Got it fully working! :D
Not sure if this has been mentioned, but www.json2csharp.com is a very useful website that builds classes from json responses. You can then use JSON.net or another library to transform that string into objects abiding by that class structure.
Wish I had known about this when I took 483 2 weeks ago. Passed, though.
Would you be able to tell me how? I haven't been able to figure it out thus far &gt;.&lt; EDIT: Think i got it
How do you even generate these?
I'll give it a try when I get into work tomorrow. Thanks.
If it's a website giving a pdf download, then you've lost all control once the user has the pdf. Unless I'm misunderstanding the process. You would have to track the pdf creation, give it an ID and store whether or not the user plans to print and rely on that. A piece of software would be better for this, giving you control of the print, but this is going to rely on user trust for accuracy as well.
Sure, The Microsoft Virtual Academy [Jumpstart into C#](http://www.microsoftvirtualacademy.com/training-courses/developer-training-with-programming-in-c) is a solid video series that moves pretty quickly through a lot of topics. I'd recommend getting a copy of C# in a Nutshell to look up more in depth examples of anything you may not fully understand from the video. From there you're probably going to want to choose a focus in the .NET Framework to work on learning more fully while reading a book like Code Complete to get a better understanding of making design-time decisions. Hope this helps!
You can. XAML is just a programming language; it isn't actually tied to WPF or vice-versa. 
Yeah, that's what is giving me a headache. The process is like this, we put the watermark on the report depending on the hidden parameter that is passed on SSRS. The report is rendered one time then on the PDF reader of the browser; that is where the user will be able to print it. What do you mean by piece of software? EDIT: Do you have any advice on how I should go about it even if it means changing every thing from the ground up?
Thanks, that is a lot closer to what I had originally planned. The problem here will be the installation of the program across different computers across the country. The company I'm working from has Plants and sales offices across the country that needs to run this. I know that this is a different problem but can you suggest anything that can at the least address this?
Do you guys offer relocation assistance? 
Because I was bored... Here is how to get the list of printers on the server, you be better off putting them (or the ones you want) in some kind of drop down for the user to select: foreach (string printer in System.Drawing.Printing.PrinterSettings.InstalledPrinters) PlaceHolder1.Controls.Add(new LiteralControl(printer + "&lt;br/&gt;")); You probably want to show a drop down of available reports (or some shit like that). Then send the pdf and printer name to this function: protected void prints(string filename, string printername) { var P = new Process { StartInfo = { FileName = filename, WindowStyle = ProcessWindowStyle.Hidden, Verb = "PrintTo", Arguments = printername, CreateNoWindow = true } }; P.Start(); P.CloseMainWindow(); } My theory is you could track if it's been printed, and where at that point. In fact you could process the pdf further if you wanted.
&gt; If you wish to use the parameterized constructors of Type, simply omit the new() constraint. That will not work. It's a generic type - this means it can be whatever type. And whatever type is passed there can have whatever constructors.
&gt; It's generic yes, but constrained by SpecificType which we sort of assume he knows the details of. Yes. But the **constructor of the provided type** is used, not the constructor of `SpecificType`. `SpecificType` can have a constructor taking 5 arguments, but the provided type only has a sinlge constructor that takes 1 argument. The constructor of the base types do not matter, only the constructors of the provided type. &gt; And other than the less-than-stellar performance of reflection, why not use Activator.CreateInstance? Activator or reflection is the **only** option to call non-default constructors on generic types. But they're of course not checked at compile time. So you need to check this at runtime - and by that you can easily notice bugs too late. &gt; Or for that matter, object initializers? What do object initializers have to do with calling a specific constructor...? Are you just randomly throwing things in? :-\
Object initializers provide a workaround to the limitation if the class has public fields available. Create an empty constructor Type() {} and simply initialize the fields there rather than passing parameters. It's a horrible design idea, but it's a functional way to accomplish it.
A better workaround would be to provide an initialize method that does this, not object initializers. The object initializer is just plainly setting the values.. But yeah, if it's only for setting values, then object initializers can be used. Good, first correct thing you said! :-)
Object initializers aren't a workaround to anything. They're simply syntactic sugar. var test = new Type() { PropertyA = "someValue", PropertyB = 99, }; Is _exactly_ the same as: var test = new Type(); test.PropertyA = "someValue"; test.PropertyB = 99; So you could still do this anyway without object initializers. The downside is that you can't access any members of the specific type `T`; `PropertyA` and `PropertyB` must be properties of `SpecificType`. Then naturally you _impose_ a constructor on all derived types of `SpecificType`.
Pretty much this. I think for the question asked, if it's _absolutely necessary_ to access some _arbitrary_ constructor or members is change the instantiation around to require some factory implementation for your derived type or a `Func&lt;Type&gt;` method. Feed that into the `Test&lt;Type&gt;` initialization in some way, then call it whenever you need to get/create a new instance: public class Test&lt;Type&gt; where Type : SpecificType { private readonly Func&lt;Type&gt; TypeFactoryMethod; public Test(Func&lt;Type&gt; typeFactoryMethod) { this.TypeFactoryMethod = typeFactoryMethod; } public void DoSomething() { //avoids calling a constructor directly Type instance = TypeFactoryMethod(); //do something with your instance } } var myTest = new MyTest&lt;SomeDerivedType&gt;(() =&gt; new SomeDerivedType(withSomeInputs)); Then at this point, if you wanted to feed some kind of inputs to that initialization all the time (essentially call some non-parameterless constructor), update the `Func` to pass the parameters. (And of course, we could always resort to reflection or `dynamic`, but that's almost certainly a bad idea for /u/PineappleMechanic's specific scenario)
I'm starting a live coding series on Design Patterns. I think it's a good next step for anyone who has self taught themselves the basics. You can see the first week here -&gt; https://www.youtube.com/channel/UC0XAGIBNCsfj-S6i_dkCahQ/videos Visit my twitch page for links to code along and the schedule -&gt; twitch.tv/ariugwu I'll be doing a stream tonight on the Strategy Pattern @ 6:45pm EST if you want to tune in, ask questions, see if it helps, etc. We'll be building a console game using design patterns as we cover them. Hoping to develop this into a course that I do as a hobby on the side. In terms of the "other stuff" you should learn as a programmer here is my list: Code Katas: stay sharp. Source Control, Version/Release, and distribution: Get a repo going (anywhere) and start contributing to it. Just the process and discipline of doing this will help a variety of things. Design Patterns: Or any approach that encourages the use of a known vernacular that will help you communicate with other programmers and digest technical resources. The list goes on and they are all things I hope to build into my course. Hope you can come and check it out. Lastly, I would hop on the /r/WatchPeopleCode movement and start watching streams. See how people use tools and approach problems. Just like music, you need a social outlet where people introduce you to new things they are passionate about. Ever tried to google for new music? I think maturing your personal software process is very similar. &lt;/rant&gt; 
i for one enjoy a chuckle now and then, thanks :)
So i can do my layout with c# objects?
I'm curious as to why this is a requirement? Can't the user just save the PDF locally and print as many copies as they want, or use a photocopier if they haven't done that.
Will this course be more beneficial than the in depth courses on Pluralsight? I've been doing C# off and on for a little over a year now, so I'm a little beyond the basics.
ok
There should be a [NEWBIE] tag for more basic questions, or something of the like.
&gt; WPF within a day or two Yeah right.
Yep. Something that translates LINQ expressions into something else like SQL or O-Data calls.
"Up and running" != "proficient". It's complex, but it's not particle physics.
What's the cost for the certificate? All the literature I came across just said "minimal fee."
It's $90 for this class.
edX is great. I took a Philosophy course from Harvard on there and the peer review was especially useful given my expectations. They kicked my ass and told me to stay on topic when it helped so I definitely gained from it. 
I don't see any reason why a windows service wouldn't work although I believe it may be simpler to write a console application that performs this behavior and call it at whatever frequency you need from the Windows Task Scheduler so it's not using background resources. If you decide to go the route of a service though you shouldn't use a timer if you need it to run at a precise time everyday. Instead either hook into the Task Scheduler as xei087 recommended OR better yet use a library like Quartz to handle it for you as this will help overcome possible problems like daylights savings.
I had considered that, but considering in my case Game is actually pretty massive and does elaborate things. I could add a private field Game game to GameObject and change the constructor to public GameObject(Game g) { game = g; game.ObjectList.Add(new GameObject()); } But I am unsure if "game" in this context would just have a pointer or if it would be a deep copy.
Thanks for the input. I had hoped there was some obscure instruction for getting a reference to the List from within the List itself. I'll try it out with /u/FrTerstappen's suggestion.
Thanks! That cleared it up, and I think I can make a workaround :)
xUnit was originally a pattern, not a specific technology. You have Junit for java, nunit for C#,/.NET etc http://en.wikipedia.org/wiki/XUnit MSFT just stole the name.
http://en.wikipedia.org/wiki/XUnit MSFT may have stolen the name, but it was originally a pattern for testing.
&gt; I had hoped there was some obscure instruction for getting a reference to the List from within the List itself. Easy way to see how that wouldn't work: what if one object was added to two different lists?
Think you have to grab the xunit VS extension for runner support. The vs runner is pretty naff compared to r#/ncrunch tho.
Last I checked, nUnit can't even run test in parallel, let alone run asynchronous tests. Has that been fixed or is this just most "open source must be better" nonsense?
Parallel execution is a test runner concern rather than a test framework one. I mostly use nunit with ncrunch - which constantly runs tests in parallel. R# equally supports parallelisation across testing frameworks. Not sure if the nunit console/gui can. MsTests lack of row / data driven / testcase tests from code is a deal breaker for me. Also, it came out after nunit and was worse. So in this case, pretty much all the open source alternatives are better. No cargo cult.
I am also wondering about that. The documents have id numbers on them so if they are photocopied, it would be obvious. However that is what the client wants. What they request isn't always thought out.
I'll see if I can do this, automatic printing. It would be great if this would work. Thanks. Your other suggestion probably not doable for some reasons.
Ok. This I can do, you have the same suggestion as /u/Mrbasfish Thanks. Hopefully this will be the answer. I discuss this with our team leader. 
Would I be able to get the installed printers on the clients PCs if I use this? Wouldn't this only work on printers connected on the server where the website is run?
Should be with VS2015
You can with VB.net as well :-) http://www.b4x.com/b4a.html
Are you sure about that? I would *love* for that to be true, but I haven't seen any official announcements. IIRC, the Community Ed. announcement was worded vaguely. It seemed to imply that developing for Android would be free, but I think it only really said that Visual Studio was free. Honestly, I wouldn't even mind paying a bit. But $1k/year is too much to justify what I'd use it for.
I should be clearer, free integration but still limitiations on what the licenses will let you build.
It was worded as will be free in community edition as of march http://forums.xamarin.com/discussion/37207/xamarin-starter-and-visual-studio-integration
This was all I was waiting on
The nunit test runner can run tests in parallell. I use that for the CI server. You can also supply different test cases to the same test which is a huge time saver. It has ten times more asserts as well. NUnit is better than MSTest. If you are using the Visual Studio test runner rather than ReSharper or NCrunch you can get a NUnit test provider for Vs in the extension gallery.
you might as well be explicit about the type so you get some intellisense var genres = JsonConvert.DeserializeObject&lt;Dictionary&lt;string,dynamic&gt;&gt;(json); foreach (var key in genres.Keys) { var series = genres[key].series; } 
Is there any way I could get a visual studio plugin without being a student?
&gt; Activator or reflection is the only option to call non-default constructors on generic types. Also to call default constructors, as using new T() (with the new constraint) will call Activator.CreateInstance as well (although this path, parameterless, is optimized).
I haven't worked with it yet, but Xamarin.Forms attempts to provide a unified UI so you only need to write that code once. I assume there's still some platform-specific code that needs to be written, but not as much as using each platform's native controls. 
Boring, I already do that using loops. Got anything else? 
&gt; They're listed as independent tests in the test explorer. Your loops don't do that. Ok, that's a good selling point.
Good. Use your aggressive feelings, boy. Let the hate flow through you.
Yeah - the indie license is just about that, but the requirements are still a little bit hardcore to get into it. Would be nice if it was just a matter of downloading and going. Good to see Xamarin loosening up a little bit here, though.
I was going to comment to do this. It's one of the best least known feature of VS. It also works with XML.
But that also requires some valid JSON first.
Funny you should mention a console application because currently the code I've got written out is for a console app, it's just the scheduling that I'm a little confused on. Basically I need it to, at a specific TOD, access a web service I'm writing in order to collect the data that it'll work with, run the calculations I've written and then it needs upload the results of the calculations via the web service again. Because of the web service, I don't know if this console app is something I should publish and schedule to run from my pc or my laptop or if its something I should upload to the server where the service will live. The only thing about doing that is the web host who owns that server probably won't allow me to set up the console app as a scheduled task for security reasons. Now if I had my own virtual server running in the cloud... Wonder if I could rent one for free or something... Cheapest available in my country is ~900 ZAR (+/- $80 US) which currently is well out of the realm of possiblity where my current cashlow is concerned
I don't want to have to keep my pc on 24/7 so I don't know where I would schedule it