Download the nuget package
That’s true, so if you encounter it you recognize it. 
If you've explicitly marked your structs with a `StructLayout`, I believe it's well-defined behaviour. But could you give an example of what could potentially fail in C/C++ so I can compare?
&gt; that’s all in VS17 Then how can i activate anything similar to those two in VS2017?
&gt; Press TAB after a **function call** ctor is a snippet 
Told you it was bad. This was literally just an ah fuck it implementation. It went against the grain somewhat
This indirect humor is going to make North Korea angry.
TBH, the only way UWP would stand a chance is if Microsoft announced an end of support date and no replacement for Win32 (say about 2025?). That alone would insure that developers were basically railroaded into UWP (and the Windows Store). But the ramifications and backlash would be huge. It would take the form of Congressional hearings and anti-trust grumblings all over the planet. Everyone from serious line of business application developers to the military would be scrambling.
Which is why I specified if the reason is file length. 
It is called [Strict Aliasing](https://cellperformance.beyond3d.com/articles/2006/06/understanding-strict-aliasing.html). Essentially, it says that two variables which have different types can be assumed to not occupy the same memory. So if you have code like: ``` int x = 0; byte *b = &amp;x; b[0] = 1; x += 1; ``` Here, `x += 1` is not required to observe the assignment of `b[0]` -- the compiler is free to optimize this line to simply be `x = 1`, because it thinks it is still `0` at that point.
Since no one has responded yet I am going to give you my take, which I am sure isnt fully correct lol Type: int, string, bool, etc Variable: the name of a storage location that our programs can manipulate Field: A normal variable of any type that is declared in a class or struct Class variable: Pretty sure this is also known as a Static variable. These are variables that have only copy that is shared with all instances of that class Functions and Methods are the same thing I think. Once I heard that its a Method if theres no return value, and a Function if there is a return value, but I am not sure how accurate that is
All of the code that I've seen that uses JWT to authenticate always has something like the following: `var user = _users.SingleOrDefault(x =&gt; x.Username == username &amp;&amp; x.Password == password);` And that is the problem. I do not have direct access to those credentials (password). And part of the requirements for this site is that AD is supposed to be used to authenticate. I am never supposed to process the actual username and password. That is supposed to be done behind the scenes via AD. The above can be done...But I myself want to handle the authorization and permissions to controllers/actions within the site via JWTs. And when I try to combine these two is when I get stuck. 
Ahh, I see. I've never heard of such a restriction in C#; and many many examples (often by MS employees themselves) use patterns like fixing arrays in place to copy to them, and so on. I've also done a lot of that kind of thing in various projects like game engines and so on and never encountered an issue (though that doesn't mean it definitely won't happen, of course). I guess to get a real answer I'd have to pore over the spec. C# in general is less prone to UB than C++ though I know. For example signed overflow I believe is defined in C#.
It also has an option which stops your build on first error automatically. I love this extension so much. 
!remindme 14 hours "useful extensions"
I will be messaging you on [**2019-02-21 07:51:36 UTC**](http://www.wolframalpha.com/input/?i=2019-02-21 07:51:36 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/csharp/comments/aslnrq/what_are_your_must_have_visual_studio_extensions/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/csharp/comments/aslnrq/what_are_your_must_have_visual_studio_extensions/]%0A%0ARemindMe! 14 hours ) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Okay, I see where you're coming from now. Since Windows authentication relies on Windows, it is more of an edge case in .NET Core, which is why it doesn't show up in many tutorials. If you use Windows authentication, the good news is that you don't need to use JWTs to achieve what you want. The Windows authentication part is delegated to IIS (or HTTP.sys, if you're not using IIS), so the request is already authenticated by the time it gets to your app. This is the "hijacking" you refer to in your original post. What you can then do, is authorize access to individual controllers and methods based on membership of specific Windows or AD groups, or you could manage your own authorization rules (e.g. by loading a JSON file at startup that maps user IDs to application roles).
EF Reverse POCO Generator. I use it to generate my code-first EF entities
Link?
100% agree
I Hate #Regions. It automatically expands regions and changes their font and color to essentially make them invisible. Absolutely for some of the legacy code I work in that can have layers of nested regions. The extension has unfortunately been abandoned, but it works with newer versions if you manually download it and modify the application manifest. VSIX files are just a ZIP format, so you can unzip, modify, and rezip without an issue.
I use them in unit tests. ``` public class FooTest { #region HandleAsync //tests of the HandleAsync method are placed here #endregion HandleAsync #region Helpers Private Foo GetEntity() { ... } #endregion Helpers } ``` I would love to make the `#region HandleAsync` its own class in the class so its also grouped nicer in the test runner, but in my realistic scenario all my test classes inherit from a base test class with usefull functinalities and an abstract method. I only want the abstract method implemented in the "main" class of the file but that's not possible since each class has to inherit from the base class. Regions it is! 
I didn't say nor imply Rust is managed. OP asked about building a 3d graphics or game engine too. Please read the whole post before responding.
A fresh project works for me, so maybe it's an issue on your end. Are you importing the 32bit or 64bit dll and compiling your project as such? Worse comes to worse, I guess you can grab the source code from the GitHub and compile it yourself: https://github.com/PcapDotNet/Pcap.Net
I posted this in the comments on the /r/dotnet subreddit, but I'll post it here too: This is a good article explaining the feature. I don't mind that C#8 is getting this feature, but it does beg the question: If you're on .NET Core (because .NET Framework won't get this feature), should you ever use abstract classes? With default implementations for interfaces, they can now do _almost_ everything abstract classes can do, except you can inherit multiple interfaces and you cannot extend multiple classes. The only thing abstract classes allow you to do is set the maximum protection level of a method, so for example if you have `protected Foo()`, then a subclass cannot expose it as `public Foo()`. Will you guys start defaulting to interfaces with default implementations instead of abstract classes once this lands?
Resharper is godly if you have a good pic, it makes vs a little heavier
I've been trying out Rosylnator today and it has been very helpful so far!
[GhostDoc](https://submain.com/products/ghostdoc.aspx) I try to use vanilla VS for everything else (helps when moving between machines/languages), but I try to keep GhostDoc installed wherever I go.
Thanks for the input. Glad I'm not the only one who finds it a bit confusing!
You need to Google how to add nuget packages to a solution...
It's always been surprising to me that this feature is controversial at all. Seems like people think it's C++ multiple inheritance rather than something more akin to traits.
Me too. Generated some 50 Hz sine waves for calibrating a JLAudio amp. Worked great. 
My choice is [ReSharper](https://marketplace.visualstudio.com/items?itemName=JetBrains.ReSharper), [Markdown editor](https://marketplace.visualstudio.com/items?itemName=MadsKristensen.MarkdownEditor) and [Deleaker](https://www.deleaker.com/). 
WPF didn't updated after 2008 either.
The broader ecosystem has changed somewhat since then but the xaml concepts are the same. It wouldn't be like watching a c# 5.0 when we're on 8.0 or whatever. I'd watch that course and then if you're looking for info on 3rd party libraries, mvvm frameworks, ect you should probably look for the most recent tutorials.
It has been a while since I've really, really needed to have this (we had solutions with &gt;180 C++ &amp; C# projects sooooo..) but this is really nice to have: https://marketplace.visualstudio.com/items?itemName=EinarEgilsson.StopOnFirstBuildError 
Really? This is more controversial than nullable reference types? I've gone on salty tirades about that one that would make a sailor blush. That shit genuinely raises my blood pressure. Meanwhile, default interface implementations just seems like they're righting a wrong. In an odd, slightly restrictive way, but still... There should've always been a way to say "this interface defines this and guarantees its callability, but it should be optional to implement and the default body is a no-op that returns the return type's default value, if applicable".
Yeah this is what I was thinking, should do what you want.
Thanks for writing the mock up code I was too lazy too. My favourite python error is when I ADD a semicolon :D
Okay that's a good to know. Any better resource than Pluralsight for this kind of stuff? 
NCrunch for life. Too bad it does not support Rider. I would kill for Rider + NCrunch working together.
Any extension that halts VS IDE's idiotic tooltips. Ever rest your mouse over a string and have VS tell you that it's a string? an int? et al? How many thousands of times do we need to see these idiotic tooltips popup? Worse, there is no pref to shut them off. That's where the "TameVisualStudioEditorToolTips" extension restores sanity. I've been using some form of tooltip shunting since 2002ish. I think I got the current shunt tool years ago from here &gt; https://marketplace.visualstudio.com/items?itemName=KarlShifflettkdawg.TameVisualStudioEditorToolTips 
I'm not going back to my junkie ex just because she's clean. One day, in a vulnerable moment, she will steal my TV. And what does she have to offer compared to the other girls? Sure, she will let me do anything I want to her, and she doesn't complain, but she just isn't bringing anything unique to the table.
Oh, i'm not trying to say they should use regions. I'm saying we should work to be better at organizing.
Last I checked, I liked it, but not enough to pay for it. It was rather expensive, and license based. I dropped Resharper for the same reason (also, performance). Is it still expensive?
MSDN has a pretty good run-down of XAML basics attached to the Xamarin Forms documentation. [Here.](https://docs.microsoft.com/en-us/xamarin/xamarin-forms/xaml/) The XAML section I linked to is common to all XAML interfaces, with very few exceptions. (OnPlatform is the only one to come to mind...)
Ace-Jump. Use movement keys no more. [https://jsturtevant.gallerycdn.vsassets.io/extensions/jsturtevant/acejump/1.4/1544681574584/143720/1/ace-jump-demo.gif](https://jsturtevant.gallerycdn.vsassets.io/extensions/jsturtevant/acejump/1.4/1544681574584/143720/1/ace-jump-demo.gif) (On rider I use [Emacs-idea](https://plugins.jetbrains.com/plugin/7163-emacsideas) which contains probably the most elegant ace-jump implementation, only second to Emacs' one)
It really doesn't bring anything to the table these days. You can get it all for free and without a loss in performance.
I worked with a guy that wrapped EVERYTHING in regions. Properties, fields, methods, code in the methods, used it to organize fields/properties/methods. There would be minimum 10 regions in each code file. It was a fucking nightmare. So much clicking.
The instructor has other courses on the topic too , i would binge watch them tough and get to other parts like mvvm , databinding etc ... They would translate well to xamarin too .
This is complete BS. All of the functionality is completely covered by free and performant extensions - and I would say, it has to be real amateur hour for Resharper to locate any bug beside the most rudimentary ones. Try Roslynator instead. In a really "professional project", the sheer size of the code base is going to assfuck Resharper, thereby paralyzing VS into an unrecoverable state. I've seen power machines just nope out of the attempt entirely.
asp.net
I agree, especially if a class has multiple interfaces. At the same time I also think if you have a situation where you are thinking of using regions you first should consider if it logical to break the class up into smaller classes. Which important note, I say logical for a reason because it is almost always possible, but doing so does not always improve the architecture of your program. I also think it becomes easier to break things apart when we take a more vertical approach to organization of our programs. The vertical approach means only code that is directly related to each other will be within the same folder, instead of what is common right now where a bunch of unrelated ViewModels are all stuck together in a single folder just because they all have ViewModel in their name. With that in mind. Maybe the solution is more advance IDE that allows for more flexible organization of files. Instead of having this rigid folder system, maybe use a tag system that can be translated into folders for UI purposes. This would allow you to both use a vertical and horizontal organization methods in tandem, as well as allowing certain classes to be located in two different vertical slices if both slices need access to that class. In general I think IDE's need to be more capable of being more flexible. Another example would be with formatting. Instead of a team having to decide on the formatting, instead I think the IDE's should be capable of displaying the text in whatever format the individual prefers without changing how the format looks for others. 
Thank you for this one. So colorful! 
Okay, so an okayish processor and good ram should work then? Or I do need to aim for those i7 8700 builds?
Okay, will check components involving 1700
I guess that's where I'm getting stuck at...how to wire all this up. The authorization and configuration part. The other comment mentioned s blog that might help me out. I will look at that code and make this happen. Thanks.
I just put things in regions and then collapse. It makes for cleaner architecture and faster code execution.
Don't use it, unless you absolutely need it (rare). That's all.
If you're not gaming on that machine, the only thing you need an i7 for is if you want to win pissing contests on the internet. I haven't even really hit the limits of my old i7 3770K yet. It's been overkill for well over half a decade now. And I use that box for gaming, too. Get an i5 or a Ryzen 5 or 7. Save the $$$, or sink it into things you *will* need. Don't get no-name RAM (stick with Corsair or Crucial), don't settle for non-SSD storage, and don't buy any PSU that isn't Antec, SeaSonic, or Corsair. Those are the type of things you should spend a bit more money on.
&gt; If you are opening every file in the solution lol I said half a dozen and you equate that with every file in the solution? Maybe that's where the difference lies. I work with solutions with 4 digit numbers of files. I merged a large multi-month effort recently that had 800 changed files across 4 solutions. It's all a balance. Being dogmatic in either direction tends to not work well. You have to use your best judgement as to when code should stay together or be split apart, and hopefully over time your judgement gets better as you gain experience with what works well and what doesn't. I've been at this a long time and lead large projects successfully over many years. &gt; allows you to go right to that file and NOT worry about the other 200 lines of code. That's the crux of it, going to where you need to be and not being presented hundreds of lines of code that aren't what you are currently concerned with You're just trading lines of code in one file for multiple files. Sure, if your solution is 10 or 100 files that may not strike you as any kind of problem, but they are both very similar types of overhead and noise.
re: the permissions/write to a different folder: look at [Environment.SpecialFolder](https://docs.microsoft.com/en-us/dotnet/api/system.environment.specialfolder) so: string rootPath = Environment.GetFolderPath( Environment.SpecialFolder.SomethingSomething); 
VS 2017 has this functionality built in
SQLLlite server compact toolbox - great for sqllite db's Roslynator - great! Format document on Save - might be in power tools VS Intellicode - not bad and getting better Resharper - of course Viasfora - I loved colored code Productivity Power Tools - why not Fix Mixed tabs - must have [Steroids VS](https://marketplace.visualstudio.com/items?itemName=eberthold.SteroidsVS) Improves visibility of roslyn analyzer warnings and errors in documents. Includes an overall file quality indicator (bottom right corner, glows in specific color). Adds code structure view as code adornment. [JavaScript Snippet Pack](https://marketplace.visualstudio.com/items?itemName=MadsKristensen.JavaScriptSnippetPack) A snippet pack to make you more productive working with JavaScript. 
NCrunch is my only remaining VS extension. The newer versions have improved so much and incorporated so many useful features that I don't need any other extensions these days. There is a live test runner built into vs enterprise, but I only have a pro license and ncrunch is cheaper than the difference between pro and enterprise.
I am taking a look at it now. I'll see what I can scavenge and bring it over into my code. Thanks. 
I like [Codist](https://marketplace.visualstudio.com/items?itemName=wmj.Codist#user-content-comment-tagger-and-styles).
I am looking towards parttime gigs.(can look into fulltime options later on). I have 3.5 years of industry experience as a fullstack web dev. Strong experience with react + reduxand angular 2+. Pls pm for more info. 
Where/how to use it?
All great suggestions here. I echo the CPU sentiment but would definitely edge towards Ryzen, great performance for the money. SSDs have really dropped in price so you could always pick up an NVMe M.2 SSD boot drive for a decent price and have insane overall performance.
then we agree entirely :)
Tbh, none at all. Quite happy with it as is.
Holy fuck, that guy is on fire. I wanted to write a VS extension once and was kinda repelled by the complexity. 
&gt; Is it still expensive? That is relative. A personal license costs 100 US$ per year, so not even 9 US$ per month. For that I get a huge improvement in my debugging capabilities. A personal license can be used on multiple machines and in your workplace.
Hmm, why do you not like nullable reference types? I think that's a great addition! Bad name, of course.
I was pretty unhappy about this at first, but just yesterday I found myself in a situation where it'd be really nice, so bring it on..!
Angular is an opinionated front-end framework, mostly used for building single-page applications. The main thing people use it for are state management, route management, and abstracting away changing the DOM. If you use Angular, you wouldn't use, for example, Razor pages. Or React.
&gt; Is this a concern in C#? That's a good question.. I should really be more familiar with the spec. In general, no. You can of course screw up pointer arithmetic or overrun available lengths, but the compiler still prevents nonsensical operations like trying to fix a non-blittable object. And while this is getting to the edges of my experience - I probably write more unsafe code than most, but I'm no expert - I cannot seem to think of any to be wary of UB-like situations with c#. You can certainly get yourself into a variety of trouble with straight IL, though.
&gt; I work with solutions with 4 digit numbers of files. We all do. &gt; I merged a large multi-month effort recently that had 800 changed/added/removed files across 3 solutions. That's rather telling. &gt; I've been at this a long time and lead large projects successfully over many years. I'm glad I don't work on a team like this any more. We do small commits frequently and would never let the merge go for months and hundreds of files. You do you, of course, but there's a better way (And it doesn't start with regions.) 
Well that's certainly not the norm. We deploy constantly.
Interfaces also don't let you define fields, while abstract classed do.
&gt;. It's a completely painless feature that you can easily pretend does not exist if you're not seeing any benefit to it what was this situation? Can you share a bit more? :)
Looking at the number of comments and interactions - this one is more controversial definitely :)
After you've attached to a process and detached, click debug and there is an option called "reattach to process" that is right under the "attach to process" option.
&gt; should you ever use abstract classes? Depends: do you have a situation where it would make sense to inherit state? Because object state's the thing that abstract classes do and interfaces still do not. I'm curious to see where this comes out with respect to things like mocking frameworks. It seems like it would be very painful to mock/stub around, since it last allowed you to declare non-virtual members in your interface (and those always seem awkward without resorting to shims).
&gt; mostly because most of us just want to get on with coding rather than refactoring database schemas haha, which is why I was apparently still unaware FM was a couple major versions ahead, and have some utils of my own that aren't polished enough to really share but get the job done
Live Unit Testing has a bunch of drawbacks and general flakiness too. We did a bunch of testing with it when moving to VS2017, and came up with the following list: # Good * Lightweight, matches or outperforms NCrunch on everything we threw at it, sometimes by a noticeable margin. * Tray indicator at the method level, as well as individual coverage lines, showing test success. So you can collapse methods and still see that they're passing. # Bad * Does not honor `[Explicit]` or `[Category("IntegrationTest")]` attributes. Requires a separate category attribute, `[Category("SkipWhenLiveUnitTesting")]` to exclude tests from running in LUT. (We use NUnit, so the attributes for MSTest are probably slightly different.) * We also use Roslyn code analysis extensively, but code analysis errors do not break the LUT build - even when the analyzer flagged an issue that prevented the test from doing anything useful. * For example, one of our analyzers will flag a test method that does not perform any assertions. * When the LUT build *does* break, the tray icons disappear entirely, which makes it hard to navigate to a broken test. For example, if you change the constructor to add or remove a DI parameter, but haven't fixed the test fixture yet, you can't navigate there through the tray icon. You have to go to the solution explorer. # Ugly * LUT requires at least one project in the solution to reference the appropriate NuGet test adapter. Without this reference, *as a NuGet package*, LUT will silently do *nothing* \- no error or warning, it just starts and then stops. (Test adapters can be installed as either a VS extension or NuGet package, but only the NuGet package is supported by LUT.) * Unlike NCrunch, LUT uses the existing Test Explorer window. The default order for tests is Passed / Failed and then alphabetically by test name, which is not particularly useful in solutions that have thousands of tests. In NCrunch, the default order is by assembly, class, and then test name. This order can be enabled in Test Explorer by clicking "Show Test Hierarchy". Until you open VS again. * LUT uses a red X for every line covered by a failing test. In NCrunch, the red X is only shown on the line that actually produced the error.
I think abstract classes still have their place. Default interface implementation is IMO not very polymorphic since you have to cast to the interface to get that default implementation. So if I have an instance of MyClass that implements MyInterface but doesn't implement the interface method MyMethod and leaves the default. I can't access MyMethod when working with an instance of MyClass I can't use MyMethod because MyClass doesn't have it. I have to cast to MyInterface. This is not ideal. Default interface methods are for extending interfaces without breaking other code that depends on it. Abstract classes still very much have a place I think
&gt;since it last allowed you to declare non-virtual members in your interface What, really? Yeah, that's definitely weird. A non-virtual method on an interface just... seems completely illogical to me.
Yeah it's definitely not a general do-all works for everything tool. The feature set is essentially what I've personally needed. There are still needs to drop down to SQL, and the migrations do of course allow you to simply execute whatever sql you want. I also occasionally use a micro-ORM for more complicated DML migrations. I'm not a fan of the diff from current schema because I've never seen one that isn't problematic at times, and it's always been more complication than my projects needed, but I can understand where they may be of more advantage.
That part is definitely weird, but the more I thought about it the more I realize how little I actually use concrete classes these days.
Roslynator - similar to resharper for code hints, not as good but does quite well! 
I should probably double-check that, to be fair. It's been several months since I looked over the proposal for this feature. I wouldn't say it's *illogical*: it would have all the same benefits and tradeoffs as the choice does on an abstract class (or nearly: I think the lookup to an interface method is still slightly slower than the one for a parent class), but it's going be a bit of an adjustment for people, who are used to assuming all interface members are overridable.
Removed: Rule 6.
In a certain project I have plenty of classes implementing a certain interface. Simplified, the interface retrieves a value given a specific key. At runtime, the interface may or may not be implemented by a generated rpc proxy. The UI will need to retrieve the values for multiple keys, and hence, any call may or may not cause significant overhead (rpc = overhead). That means I’d want another member of the interface that can return the value for multiple keys in one go, but I don’t want to implement that on every single class implementing the interface. Default interface implementations would seem to fit this nicely, as the functionality is just composed of the existing interface members. An extension method, or just a plain old helper method for that matter, would still be on the client side, on the wrong side of the rpc channel. Hence it’d still require many calls through the potential rpc proxy, while a default interface implementation (if I understand how it works correctly), would issue one rpc call and do the fun stuff on the server side.
On the debug menu? I don't see it, "ReAttach" from the add in appears after "attach to process" 
[Would this be a great choice? I already have 750 Ti and CX 430](https://i.imgur.com/bVFoLh6.png)
Type - Correct Variable - this is just something that stores data usually I use the term variable to describe something I declare within a method ie `var myVariable = "a string"` as I think most people do in conversation Field - this is a very specific thing this is a variable that belongs to a class. Public class MyClass { private string _aPrivateField; // fields should usually be private and a common convention is camel case proceeded by a underscore public int _aPublicField; //however they can be public, it's just s convention } Class Variable - this usually to me would mean a field (see above). Another reply mentioned static. But usually when something is static you should say it is static explicitly. Ie a static field. However it could refer to a property. **Properties** usually give access to a field. Auto properties are most common `public bool MyProp {get; set;}`. Function and method are usually interchangable. Method is the more common term in c#. Strictly speaking ( I mean like computer science theory strictly so don't get hung up on this)though function should have no side affects it should take input and return the result and be **deterministic** (same result everytime) and maybe some other stuff. You can have static or instance methods/functions but they always belong to something in c# either a static class, a static method on a normal class or an instance method on an instance of a class. No such thing as global functions in C# Anything in bold you should look up on Google. Also Microsoft documentation of this stuff is pretty good check it out docs.microsoft.com
Most that I use are already mentioned somewhere...Roslynator, and Intellisens Extender are must-haves to replace Resharper...Oz-Code for much better debugging. I'm curious if anyone has something that allows you to go to a word by keyboard shortcut then starting to type it? I basically want to press a shortcut, type something like "myVar" and have it give me new shortcuts to jump right to any instance of "myVar". I sort of have this functionality with [AceJump](https://marketplace.visualstudio.com/items?itemName=jsturtevant.AceJump), but I can only enter a single character to jump to. I'd like to enter as many characters as I want.
Many web applications written in Angular use WebAPI instead of MVC. WebAPI exposes an API backend that the Angular frontend uses. So the backend is all still C#, [ASP.NET](https://ASP.NET), and in fact uses very similar "Controller" terminology as MVC - the first API controllers were in fact MVC controllers that returned JSON instead of HTML.
Validation, user authentication and authorisation should probably be handled by a middleware rather than your controllers. I would typically expect to see your controller not to do much else but transform the request into something your business logic understands, and then transform the results. 
I've been tempted - VS is the only thing tying me to Windows and I hate the OS.
&gt; The original Visual Studio fart app! &gt; Farticus let's you configure Visual Studio to give you audio warnings when the build breaks. It can all be easily configured in the options: The options are pretty hilarious, e.g. you can select the sound of a *romantic* fart. Your guess is as good as mine.
check out tidalcycles Pretty cool tool for programming sounds. 
Not bad. I don't know if that's a good price or not, but the Ryzen 7 1700 is "last year's model", so I hope that doesn't come anywhere near $300 USD, which you should be able to get the model 2700 for now. Also, aim for 16GB or more of RAM. You can get Corsair/Crucial without the fancy heatsink, and it's usually quite a bit cheaper (maybe as little as 2/3 the price). RAM speed makes almost no performance difference anymore, even for gaming. It's mostly just so overclockers have headroom. So don't sweat that particular statistic. The ASUS mobo looks good, though. Just make sure it has the right CPU socket for that Ryzen 7-gen 1.
&gt; If you use Angular, you wouldn't use, for example, Razor pages. Or React. React, probably not, but there's nothing stopping you using Razor in conjunction with Angular. The current project I'm on uses Angular to power some of the more complex/interactive pages, but Razor for other stuff. This works, but takes time to set up, as all the tutorials usually focus on Angular being the one and only part of the app (SPA).
Nope, nope, nope... Not gonna start this flame war again... :)
Thanks for posting that.
&gt; not even 9 US$ per month Only 27 cents per day! Based on a 50 weeks, 40 hours per week, only a *nickel* per hour!!! What a bargain! Sorry, I was amused by your doing the math for us, coming up with the $9 number. No offense.
&gt; My understanding of angular is that you use it as the backend, where does C# come in this? It's a front-end framework/library. It does not help you directly interact with your database or domain models &gt; Does it replace C#? what happens to MVC? Doesn't replace ASP or C#, but it does change the way you think about MVC. You have models and controllers, but your views are now handled by Angular and the data for them are exposed through APIs &gt; Why would I want to use angular? Razor views are very limiting, depending on the type of site you're trying to build. I'm sure you've hit a few walls trying to design something that has to do with rich client interaction just to realize that it's overly convoluted and bulky feeling. Angular abstracts away a lot of this messiness and makes interactions between parts of the pages much more seamless
What's a middle-click? Press the scroll wheel?
It doesn't make sense that the competition requires a sneaky way to call the console, at least not the way you're describing it. Are you sure they don't expect you to receive input from any other means? Like, from Main(string[] args)?
Whoosh. I'm too embarrassed to ask for an explanation. Have a nice day!
usually for single page web applications (SPAs) with an SPA, the client application holds the state and queries a separate decoupled stateless/restful web api for data. navigation is done in the SPA with it hooking into your browser tab's URL and rendering the proper part of the SPA to the user.
Doesn't ^m^o expand all the regions? (It's been a while, I may misremember).
There isn't a C# example. Could you post one please? I'm not getting why Fira is a win. Thanks in advance!
Thanks for asking a great question!
correct
Ctrl + m + o and ctrl + m + L but I am not sure which does which. Yes, I learned that shortcut, but I hate regions made the actual regions font size really small also. It was helpful for overly regioned code.
Only a Sith deals in absolutes ^but ^I ^agree ^completely 
[CSharp Functional Extensions](https://github.com/vkhorikov/CSharpFunctionalExtensions) can help. May&lt;T&gt; takes care of nulls and Result&lt;T&gt; handles success/failures: result.OnSuccess(blah) .OnFaiure(blah) 
I never knew I needed this until just now. Thank you kind stranger
As I said,it might not be what you look for,but its pretty much a template project with a decent depth. If anything it might get you some ideas and stuff to play with, which could help you solve your specific problem! All in all I wish you good luck mate!
&gt; My understanding of angular is that you use it as the backend The opposite of this. Angular is a client-side framework that is designed to facilitate building interactive (think "SPA") apps in a structured manner. It is rather strict in its structure, and you'll find people that swear by it and those that swear against it. &gt; Does it replace C#? Nope. You still have server-side C# code that is responsible for generating the data needed by your pages. For a SPA, your controllers (likely WebAPI, but MVC controllers can do the same -- and both can coexist in the same app) will likely return a JSON object that your Angular app then consumes, ultimately building a UI that is shown to the user. &gt; What happens to MVC? That depends on your scenario. In a SPA, the concept of MVC kinda goes away (at least from a ASP.net MVC perspective). You still have controllers and models, but your views are likely generated by Angular. In a "hybrid" app (not just SPA), you probably have several standard MVC/Razor pages, and then a few components/pages that use Angular. &gt; Why would I want to use angular? At the end of the day, it's a two-way binding framework. These frameworks are very useful when building modern sites with an emphasis on user interaction in a very "ajax-y" manner. They allow doing some very cool stuff without having to litter a bunch of seemingly random JavaScript all over the place to update elements after an ajax call. Angular is good, but it's not the only one. Learn the basics of a few, and figure out which ones you like (or which ones your employer wants you to know).
You're aware MS isn't going to introduce .NET framework beyond 4.8, aren't you? Recalling Internet Explorer thing?
why bother even saying anything if you don't want to discuss it.
&gt; This is more controversial than nullable reference types? Nullable reference stuff is opt-in, and you don't have to use it if you don't want to. This, on the other hand, is forced.
I've discussed it plenty. It always ends up in an avalanche of downvotes. So since nobody wants to hear what I have to say, I'm not going to repeat myself.
Not trying to sound rude as I'm genuinely curious - why would you install an extension for that instead of just changing key bindings? 
Without the extension, you can only have key bindings for either comment or uncomment. This will do either depending on whether the current selection is commented.
&gt; Open command line - Easy to launch command line consoles by right clicking a solution, project or folder. I'll take this chance to shill my own extension [Whack Whack Terminal](https://marketplace.visualstudio.com/items?itemName=DanielGriffen.WhackWhackTerminal) :P
&gt;Will you guys start defaulting to interfaces with default implementations instead of abstract classes once this lands? Ofc abstract classes sounds like deep into OOP but OOP is bullshit
Well, your components know too much about other system parts. You are merging your datacontext parts with your business rules validations. I would separate that components in two single responsability classes, a data provider and an validator, using an business object (not an EF class) to comunicate between them. &amp;#x200B; Definitvely, using return null methods causes a lot of false positives. I prefer to use custom "Result&lt;T&gt;" classes for validation purposes. "MyResult&lt;Config&gt;.IsCorrect == true" can transmit a better message to other programmer than a simple boolean or a null/ not null method. A custom result class prevent encapsultation fails. You don need to catch Business related exceptions or Data access related exceptions on higher layers.
This is what I see on my VS and I do not have that extension installed.
I was looking for specifically for Web Application. Do you think I can still utilize what's on here on Web Application? &amp;#x200B;
Thanks for this, it's really helpful! Glad I wasn't too far off the mark!
You must set your DisplayMember (display text) and your ValueMember (UniqueIdentifier or display text). That values are column names of previously filled DataTable
Thank you for the information I will try to follow the direction. To be specific, I already have data scraper programmed in windows console application. However, I need to program the same data scraper in ASP.net core Web Application. Therefore, I got to this question.
I believe what’s going on is that you are telling your list box to display a set of data without telling it which piece to display. You can tell it the piece with DisplayMember. Try something like this: MasterListBox.displaymember = “name of field you want to display” MasterListBox.valuemember=“value to you want returned when action is taken on selected list box member”
Me and a friend had this conversation a while back. I think it works out like this. To oversimplify: * ASP .NET does the bulk of its work on the server. * Angular (and frameworks like it) do the bulk of their work on the client. Let's talk about what this means for ASP .NET so we can see why Angular has some appeal and fits certain scenarios. ### "Traditional" ASP-style (This is really true of just about anything from PHP to ASP, but I'll focus on ASP tech.) Oversimplifying less, we can say a typical ASP .NET page works like this: * You make a request. * Routing has been configured to engage some code that returns a page. * Clicking a link on that page sends some query variables to a different URL. * Routing converts those query variables to .NET types, and engages some more complicated code. This code: * Loads a Razor template that receives the context. * Generates an HTML page based on the template, probably making some DB requests. * Returns the HTML page. In this model, everything you do requires a client-sever round trip. Users see a lot of page reloads, but also you get to use your near-infinite server power to do all the hard work. If the user has a puny smartphone, all it has to do is render HTML. ### "Modern" ASP applications Big quotes on "modern". GMail really started this movement. These pages try to avoid jarring reloads by loading a page from the server, then using JS as much as possible to request more data and update the DOM without making a new HTTP request. You'll still get page reloads from time to time. More work gets done on the client in this approach, but you can still lean on the server to do really tough work. Whether the DOM updates are hard on the client really depends on how well you can optimize JS. ### "Single Page Applications" This is what Angular, React, Vue, etc. implement. In this case, the server actually does very little work on its end. Instead of complex routing rules, you hit one URL that sends one giant HTML file. That's a "single page application" or SPA. This file contains Angular and your entire application. So if your ASP app had 10 views, you get all 10 of those views in this giant file. Angular's job is to assemble all of that and display the right "index" page. That page is stored as a template and its DOM is built based on JS data. If more data is needed, JS can make requests to fetch more. That might even include new views. But the big thing here is you never, ever actually reload the page. It might *look like* you are visiting a new page, but the reality is Angular shifts its JS data, builds a new DOM, and replaces the old DOM. Your browser thinks you're still on the same page. That's really Angular's job. Load a bunch of JS and rules for converting that JS into HTML, then display the right HTML. Yes, there are routers in SPAs. You can see your location bar change. It's all JS magic. Angular is controlling the URL bar and shifting its JS in response, which causes the HTML to change *as if* a page reloaded. You don't really have to know how or when the server's being hit. ### Why? Some people really don't like page loads. SPAs also represent a pretty good solution for offline apps. They can store a lot of local state via various browser mechanisms and sync with the server when connectivity returns. This is especially true in environments like Electron, where "the server" is local anyway and has access to the filesystem. Having used a few, I like generating HTML via "binding" to JS objects the way these do it a little more than I like previous solutions. If you're writing really interactive pages, they look a lot faster and nicer without the page reloads and come with more built-in ways to change the DOM than ASP provides out of the box. ASP .NET (especially MVC) can use Razor Pages to do a lot of things server-side that Angular does client-side. But they'll always require a server-client page load cycle. And you can't really do a "disconnected" app as easily. You could probably write a lot of JS to do it yourself, but then you're just re-implementing Angular. Generally if you're going to write an app like GMail with ASP .NET you're going to pick *something* client-side that does most of what Angular does. Like jQuery, which is ancient now. It's a little awkward to mix the two. You *could* write an Angular app inside of a Razor Page, letting ASP fill in a lot of blanks for you. But then you have to constantly deal with two different environments trying to generate your file and I think it's just silly. Going vice-versa doesn't really work. Angular's goal is to do most of what ASP .NET does within the browser, so trying to create Razor Pages inside of it is redundant!
Were you able to dig into the loader exceptions that the error talks about? It may have more info on why it's breaking. 
did you tried clean your solution, rebuild and debug?. did you tried using full name assembly of "Main" class to load on activator?
Did you recompile all your plugins and copy the .dll in the expected location? To me it looks like you are trying to load an old .dll from a new program or the opposite. So basically there is a mismatch between the expected type and the one found in the .dll.
Everything about this is excellent.
Thank you everyone for your comments. The value of ex is = cannot add explicit value for identity column in table. Now what do I do?
Not sure about out of the box, but we are using Auth0 to do AD authentication and then it returns a JWT that we use for authorization.
Yeah, one of the problems nowadays is that we have 800 different services that cost *only* a couple of dollars per month. In the end, the subscription models makes it less likely that I will buy something just for fun. I buy a lot of games on Steam that I shouldn't have, just because it's a one time cost. But this... I may like it, but will I like it for an infinite amount of dollars as time approaches eternity? I don't think so.
This is a great explanation.
Well, if you're anything like our company, instead of making a nice clean Web API with separate front and back end projects, you'll just slap Angular on top of your MVC site and hope for the best. Oh, and you'll want to completely ignore one of the best things about Angular and just make each view a new module instead of having a single view that does all front end stuff. Oh, and you'll want to keep JQuery as well "just in case". Where did you mention those job advertisements were?
They actually did say that, you're right. But that was a dev blog. A month later in October, the project director put out another blog post correcting that and said that while .net core is under development at faster pace, .net framework will continue and has no plans of discontinuing. https://devblogs.microsoft.com/dotnet/update-on-net-core-3-0-and-net-framework-4-8/ So 4.8 being the last .net framework was a rumor and was greatly perpetuated by Reddit.
On the contrary: https://devblogs.microsoft.com/dotnet/update-on-net-core-3-0-and-net-framework-4-8/
https://devblogs.microsoft.com/dotnet/update-on-net-core-3-0-and-net-framework-4-8/
&gt; This means that .NET Core will get new APIs and language features over time that .NET Framework cannot. At Build I did a demo showing how the file APIs were faster on .NET Core. If we put those same changes into .NET Framework we could break existing applications, and we don’t want to do that. Lol nice, at least it obvious no point in using .net framework work unless your legacy
It says right in there that the framework is for legacy nerds
I opened a file yesterday that had 235 regions. I'm not exaggerating. I did a search to see how many there were. I swiftly closed the file and found another way to solve my problem. 
It's a front end framework. It gives you two-way data-binding - which is coll. To get that two-way data-binding you have to incur a pretty significant overhead - which you don't with other libraries. Don't use it unless you have a specific use case for it. I have seen some serious front-end spaghetti code using Angular which could have ben done much more simply with other frameworks. If you work for a big corporate with a specialized division of labour and a complex front end then Angular may be worth the investment, otherwise I would avoid it. 
Just wanted to say that you should use MEF for loading plugins. Add a reference to `System.ComponentModel.Composition`, then do this: [InheritedExport(typeof(IPlugin)]] public interface IPlugin { void Run(); //other members } Assuming you implement that interface for at least one class, you can discover the plugin like this: var catalog = new AggregateCatalog(); var assembly = GetAssemblyWithPlugins(); //just a method that gets the assembly containing the plugin types catalog.Catalogs.Add(new AssemblyCatalog(assembly)); var container = new CompositionContainer(); IEnumerable&lt;Lazy&lt;IPlugin&gt;&gt; plugins = container.GetExports&lt;IPlugin&gt;(); //enumerate plugins And voila. Done.
Tabs Studio is amazing with SSMS as well. 
Remember when Microsoft put its full weight behind knockout.js for about three months? Pepperidge Farm remembers.
&gt; Honestly if I was forced into this situation I would use an out parameter for the error Can't with async, and your permissions service likely needs to do I/O (DB, HTTP).
&gt; Okay, so an okayish processor and good ram should work then? I usually buy something like an i7 8700 when I refresh my hardware, near the upper tier but not crazy expensive, but 3, 4, and even 5 years later I barely feel the need to upgrade. I'm getting close to 3 years on this cycle of hardware and the last two cycles lasted me 5 years. So I'd say okayish processor is just fine. Get a good NVMe drive with plenty of space. 256GB works but 512GB will let you not worry about it for longer. SSD's are still getting faster and cheaper and larger fairly quickly, so you can always upgrade later if you don't mind reloading everything. 8GB of RAM works, but I'd say 16GB is worth it if you can. 32GB is likely overkill. I have 32GB in my machines and I don't really need it.
I’m not really in this field, but my co-worker is looking for something like this. How does this compare to similar commercial apps out there?
Yeah there are times where this doesn’t make sense... but you can just not use it then And there are times where 9/10 classes implementing the interface will do it the same way, but 1 does it differently and all 10 need to do it... in which case this is perfect And, of course, the most obvious use case of adding something optional to an interface without having to add dummy implementations... admittedly this may be a code smell, but sometimes you really do just want to add something optional.
The complaint I've seen is that extension methods have become standard practice for adding functionality to interfaces, and now they're introducing something that does almost the same thing. The only thing missing from extension methods is dynamic dispatch, so they should just add dynamic dispatch to extension methods so there isn't two ways of doing the same thing. 
Maybe search for Roslyn analyzers. Found this which links to a couple tutorials https://docs.microsoft.com/en-us/visualstudio/extensibility/getting-started-with-roslyn-analyzers?view=vs-2017
Looks great. Downloading...
Thats something to consider as an alternative. But I doubt that will fly as this app lives behind a corporate firewall. In this case I would be forced to use our own AD server. Our sysadmins are very weary of using outside services.
&gt; my understanding is Angular is for backend Did you do ANY research on your own before posting? 
Has it started running slow as hell for anyone else?
I subscribe to nothing for this reason. Each subscription takes a fixed percentage of my income.
I'm using react, redux, matrial-ui, connected router and a bunch of other stuff, including chart.js, a couple svgs, styling and still come in under 350k. I've yet to see an angular all of any complexity smaller than that. Polyfills/transforms are minimal unless you need an old ie, and even then you can use targeted builds. Angular needs them too btw. All modern browsers support async functions since the end of 2017… which is my main builds baseline. As to contrived, a great deal of react components aren't much heavier than a tender function wrapped in a higher order function. It's also able to unit test a react banana component without the browser, gorilla or jungle being spun up. Unit testing in angular is painfully long and slow. Not to mention if you want server side rendering.
You need to check that the strings are non-empty before calling Int.Parse()
If a textbox is empty you'd be doing `int.Parse("")` and it will throw that error. Moving the `valueX = int.Parse(...)` stuff into the else block would fix it, but also look at https://docs.microsoft.com/en-us/dotnet/api/system.int32.tryparse as empty strings aren't the only thing that will screw things up
Why WPF?
I find most code I write to be opt-in, so I'll bite. What is the concern with default implementations existing in code you didn't write?
There is a subreddit, that I'm sure is a parody, called Pyongyang. Anytime anyone anywhere on Reddit said something even remotely against North Korea or it's glorious leader, they'd get banned from Pyongyang. Then it eventually evolved to a joke that if you praised North Korea you'd become a moderator. And now this. Hope that helps!
Thanks for telling me! North Korea is among my top two favorite Koreans. Will someone be contacting me about moderating?
Great write up. Let's not forget that Razor Components will shift this quite a bit.
You could use a [guard clause](http://wiki.c2.com/?GuardClause) to stop processing the inputs and alert the user. For example, the first input, before **int.Parse** : var hasValidValue1 = !string.IsNullOrWhitespace(minLength.Text); if(!hasValidValue1){ MessageBox.Show("Please enter a valid minimun length value."); return; } But you not only need to check for length, but for format too. E.g. is the input a number or is there alphabetical characters in there? For that you would need to use **int32.TryParse.**
You not only need to check for length, but for format too. E.g. is the input a number or is there alphabetical characters in there? For that you would need to use **int32.TryParse.** You could also use a regular expression: var isValidNumberTest = new RegEx(@"^[0-9]+$"); var hasValidInput1 = isValidNumberTest.isMatch(minLength.Text); if(!hasValidInput1) { // alert // return } But as McNerdius suggested, int32.TryParse will do all of that at once.
I use angular for my front ends and web api/c#/ef noon my backend. The benefit angular provides is that it eliminates reloads and provides a framework to structure your front end code in a way that your old JavaScript/jQuery front ends couldnt. Having that structure allows you to be a lot more confident about maintaining and enhancing the user experience. Another big benefit is that it completely separates the front end from backend so you can build multiple front ends (iOS, Android, web, electron, etc) with the same backend. 
+1 Someone had convinced my coworkers that regions are a good thing and despite my pleading they kept adding them everywhere. I Hate #Regions helped mitigate the pain quite a bit.
If you're going to try to mix the two then you'd likely want something like vue js which is a framework instead of an entire application. https://vuejs.org/ 
For data validation I like using attributes so it’s easy to see what it needs. A bonus is that auto api documentation tools like swashbuckle will automatically pick up the attribute validation rules. 
This. I'm currently in the middle of a "hybrid" MVC/Angular app, and it's a little clunky. But, the client chose Angular, so here we are...I'd have preferred something like Vue (or Knockout, even though it's old).
Yep!
I see a couple people suggesting CodeMaid, but I have quite a negative opinion of it. In a team environment, it became the bane of my existence. I would take the time to manually format my code so that it’s pretty and readable, and organize my methods so that related functionality lives close together. Then my teammates would run CodeMaid and destroy it. The methods would be reordered, spacing changed, line breaks placed where I did not want them. Learn to write your own code cleanly. The file is your canvas and the code is your creation. Don’t let a program do a mediocre job of doing it for you.
Vsvim and the markdown preview panel. 
Having the displeasure of doing both as hybrid, angular is far less painful
I think C# is the most elegant language out there today. 
You can replace your textbox controls with numeric up down controls. I think, its a cleaner solución than parse and custom validations https://docs.microsoft.com/en-us/dotnet/framework/winforms/controls/numericupdown-control-windows-forms
Code Maid Productivity power tools 
The CQRS pattern trades performance for atomic breakdown. I'm a big proponent of real MVC, not what ASP.net MVC forces you into. So for example, you have a View that is defined as such... ```csharp public delegate TResponse GenericRequestResponseHandler&lt;TData, TResponse&gt;(TData data); public IBlaBlaView : IView { event GenericRequestResponseHandler GRR; } ``` `IView` is a base view for the Controller to provide generic functionality. Now, your ASP.net controller looks like this... ```csharp public class BlaBlaMvcController : Controller, IBlaBlaView { private BlaBlaBusinessController _bbbController = null; public BlaBlaMvcController(BlaBlaBusinessController bbbController) { _bbbController = bbbController; _bbbController.AddView(this); } public event GenericRequesResponseHandler&lt;SomeInput, SomeResult&gt; GRR; public IAsyncResponse&lt;SomeResult&gt; Index(SomeInput input) { return View(GRR?.Invoke(input)); } } ``` Now we need our business Controller ```csharp public BlaBlaBusinessController : BaseController&lt;IBlaBlaView&gt; { public void AddView(IBlaBlaView view) { base.Views.Add(view); view.GRR += new Func&lt;SomeData, SomeResult&gt;(data =&gt; { // process data; return processedResult; } } } } ``` You can implement the guts of the event handler using whatever pattern you like from the suggestions. The power of this is that you take 100% of the business logic out of the ASP.net Controller. The BlaBlaBusinessController is easily reused in a completely different type of application unlike the ASP.net MVC controller. }
If you change an interface, that's a breaking change for anything that implements it. If you try to load any type that implemented the old interface definition, boom. Create a new interface that implements your previous one plus whatever else you want.
Right click on your project, select manage nuGet packages, click to the browse tab, and install ClosedXML instead. I haven't used OpenXML but I have heard it's kind of a nightmare. ClosedXML it's a wrapper for it.
Because they allow validation of values and control of access
The problem with doing that is that you're going to get pretty poor performance because each separate Razor page will have to load angular again because it's not a single page app. 
Thank you the SELECT statement worked. For the first one I just want to get the short time out of a datetime field
Look into using int.TryParse. The error is being thrown because you're parsing an empty string.
When (and soon I hope) things go out of process with R#, would you be as inclined to ditch it?
My indie team is looking for a new programmer, we are working on a very small project for name and portfolios. We work with unity and c#. If you are interested, maybe we can do some cooperation.
1. I use [Productivity Power Tools](https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.ProductivityPowerPack2017) from Microsoft Dev Labs. I like the tab pin and the thick scroll bar. 2. [VsVim](https://marketplace.visualstudio.com/items?itemName=JaredParMSFT.VsVim) by JaredPar. &amp;#x200B; &amp;#x200B;
this î
1. Developing an engine like CryEngine or Unreal or such might take quite a while for one person. I wouldn't consider it practical to be honest. However, making a 3D room with a character moving around can be done pretty quickly. Even as a beginner, you can probably do it in a week or two. 2. I think 3D graphics programming is more difficult, but more because the non-programming knowledge required for good rendering at least. Plus, the API is not always that straightforward for beginners. 3. I mean, you don't have to use any of the new features. C++ has always been backwards compatible, so if there are any parts of it you consider too bloated, just avoid them. It isn't even uncommon to write your own collections or such for game engines. C++ is still a performance language for low level control, though a few other languages rival it in that. 4. Actually, Unity will run better on smartphones by default just because it doesn't pack as many graphical options on at the start. It is only when you start putting more and more effects and lights and things in that things get slow.
what else to learn to make desktop apps ?
I've never touched asp.net 4.5 before, but I doubt it'll help. Maybe you should look for a book especially for ASP.NET Core! The equivalent to webforms in ASP.NET Core is Razor Pages. I don't know how far the knowledge about webforms in ASP.NET Core will take you. There are a lot of tutorials on ASP.NET Core on the Microsoft pages.
asp net core mvc
Knowledge in Web Forms will not help you at all with asp.net core.
Abstract classes can have private state.
I think the implementation is just a hack. Instead of having a proper wrapper type we just get an attribute. The F# version is smarter.
Alternative of all these if/else-s is good known, you can find some solutions in Haskell and F#. In Haskell: \- monads (with/without do notation) \- high order functions like "bool", "maybe", etc In F# - computational expressions, see here [https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/computation-expressions](https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/computation-expressions) But better is to think about language as about language, not some programmer's constructions, and it this case you have source code, close to English language, close to literature programming, to documentation. It reflects your ideas and thoughts: &amp;#x200B; if this is right: do this it's better than bool doThis otherwiseThis isRight &amp;#x200B; or &amp;#x200B; do x &lt;- someShit doAnotherShitWith x &amp;#x200B; If you are not Haskell programmer (but normal human), you have not ideas that doAnotherShitWith x can not be executed if someShit returns Nothing.
Are you married to using a label? You can wrap text in a textblock with next-to-zero effort. Something like a viewbox should be a reasonably low-effort fix too. 
Sorry mate, I’m reasonably new to both VS and C#, just tryna learn..
That's fine, everyone starts somewhere, and the GUI frameworks tend to have a steep learning curve. Are you using Winforms or WPF?
Currently using Winform
**Disclaimer** This is long. My apologies. The Q/As at the bottom are basically a TLDR. I'm not a graphics or games programmer, so I'm not the expert you're hoping to get. I figured I'd answer anyway. I'm not completely clear on your goals so I'm going to just try to address a few directions. --- **Regarding Prior C++ Experience** Your older C++ experience will help you get up to speed in either language, so pick by what you want to do. I don't know your former level of C++ experience, but someone inexperienced with both languages would become competent in C# *much* faster. --- **Video Game Industry** The video game industry is horror inducing mostly due to regular crunch times, long hours, and strict deadlines. It can be extremely high pressure. The pay is not particularly good compared to similarly skilled programming positions in other industries. I'm guessing it's a bit more saturated due to people who are passionate about games in particular. If you want a salaried position at a company like Electronic Arts, that's extremely relevant. If you want to make your own games to experience the journey, then the industry's woes don't matter at all. --- **Quick Note On Passions** In my experience, programming has a way of become its own passion. Don't limit yourself to graphics programming without some serious self reflection, unless you're not doing this for the money. --- **About Engines and Technologies** There's a few "levels" of games development. I'm making up the terms, but I think it's a useful mental model. A low level graphics programmer works in DirectX, OpenGL, or thin abstractions over them. They typically would be working on stuff more along the lines of game engines. It's not unheard of to do games this way, but I can't imagine there's a serious value proposition there unless you're doing something fairly unique. Medium level game programmers would be working in things like the Unreal engine or an in-house engine, using C++. You'd get more domain (game) specific knowledge here. You get a lot of opportunities to make bleeding edge graphics, but you do take a productivity hit from using C++. Utilizing the better graphics and performance takes a lot of time and resources, so don't try to do this solo. High Level games programmers would use C# and Unity, or some other managed engine. This is extremely productive, and a solid choice for the use cases beyond the two mentioned above. You're not getting bleeding edge performance or graphics. This is probably what you want to do if you want to focus on making games solo. --- **Fallback Industries** If you went with low level C++, you'd have lucrative but niche skills. The programming would definitely be more difficult. If you went mid level C++, you mostly know how to make games. Transitioning to something like embedded programming, high frequency trading, defense contracting, etc., would be be a larger stretch than a lower level C++ person. Transitioning to other C++ jobs would be fine, but I feel like the future there is managed languages. Most C# work doesn't pay quite like C++ work, but the work can be quite easy. There are some more lucrative industries in C#, such as systems programming. Imo, they still typically easier programming than most C++ jobs. I think a C# person would have an easier job of transitioning to traditional web-dev work than a C++ person would. Be prepared to adapt very rapidly though to keep up though, and the pay isn't great unless you can do full stack development or you can consult &amp; market yourself. If your approach to C# was purely through unity, then it depends on how you approached it. It's possible to get by in Unity with little actual C#, so "I've made a solo indie unity game" is not all that impressive on a resume. It wont do a very good job at preparing you at traditional C# jobs. If you're more thoughtful and pick up good C# habits along the way, then you'll do a bit better. --- **Easy Programming vs. Hard Programming** Different programmers are satisfied by each, for different reasons. Difficult programming can be satisfying if you like to think more about code, algorithms, data structures, hardware, and other detailed aspects of programming. Easier programming can come with it's own challenges, like an expectation of knowing a broad set of frameworks, or an expectation that you're at least competent in a few secondary programming languages like python or java, or familiarity with cloud services. --- **Your Question's Answers** 1. Don't know. You can find samples games for any engine to get a taste of what it's like. 2. Harder programming? Definitely. Harder work? Probably, but not necessarily. 3. C++ Bloated? No, just more modern features. I'd say it's improving over time. C++ Obsolete? No, but you're spot on about niches being its future. But niche's can have their own benefits. 4. Unity and similar will lag behind Unreal and CryEngine in terms of bleeding edge performance. A well made Unity game can look great though in much less time. Make sure to manage memory well in C# games, garbage collector can abuse your framerate. Realistically, this is your best chance at making a game solo. Don't bet too much on it though.
it's dangerous to go alone, [take this (book)](https://recaffeinate.co/post/little-aspnetcore-book-revised/), The little ASP.NET Core book, very useful 👍
I put together a quick example showing how you can wire up the authorization part: [https://github.com/wazzamatazz/NetCoreWinAuth-Example](https://github.com/wazzamatazz/NetCoreWinAuth-Example)
Ah, well my suggestions were WPF-focused. Winforms will probably be a little more work there. As far as I know there's not an especially simple way of autoresizing/text wrapping. You're probably going to want to use a textbox over a label, enable wordwrap `textbox1.WordWrap = true;`, multiline `textbox1.Multiline = true;`, readonly `textbox1.ReadOnly = true;`. Probably also want to set the background color to grey, `textbox1.BackColor = SystemColors.Control;`. I've never used much winforms, and it's been a while so that may not be 100% accurate. I'll fire up a project and have a quick tinker
Honestly I'm not sure I'd use this feature when I could create an Interface and then an abstract class along side it to provide optional overrides. I've always been used to the idea of interfaces being contracts.
put this at the beginning of the button1\_Click method `if(!int.TryParse(minLenght.Text, out var value1) ||` `!int.TryParse(maxLength.Text, out var value2)` `{` [`CustomMessageBox.Show`](https://CustomMessageBox.Show)`("Please set a minimum and maximum length.", "OK");` `return;` `}` &amp;#x200B; then the rest of the "else" code 
Make sure the AutoSize (or whatever it's called, been a while) is set to false. Then if you resize your label to allow for multiple lines it should figure it out.
It is open source and has many useful features (which I and my colleague use daily). &amp;#x200B; You dont have to use different tools like (SuperPuTTY, RDC Manager, IP Scanner). I combine all this features into one software. In addition, profiles can be shared between these features... you don't have to create each host in each software. &amp;#x200B; Just try it :)
Need some work on the mobile site. For me all the categories etc down the side were over the text. Made it a bit of pain to read.
Looks like I missed the border.`textBox1.BorderStyle = System.Windows.Forms.BorderStyle.None;` helps to make it look like a label. Set the textbox size to whatever you like, and if it's too small you'll still be able to scroll through the remainder of the text. The alternative (which you could also achieve with a label) would be to resize the whole label/textbox when the text changes. It's a bit obnoxious when it gets bigger than the window and you're forced to resize that to fit (whether manually or automatically). 
good question
ASP.NET Core, give it a try
You mean it's a library instead of a framework. Angular is a framework, not an application.
Wanted to say the same. It's unreadable. And the title is gore-like as well.
You use Angular on the frontend not on the backend. The role of Angular in .NET is in .NET projects which use Angular as a front-end.
Really? The general consensus seems to be that Angular is better when you fully commit to the Angular way and vue shines in this hybrid scenarios
I dont think he tackled the reason we use encapsulation. The argument that they are not returned by GetProperty() doesn't make sense (they are Fields and are returned by GetField()) &amp;#x200B; I think a stronger argument would be that they can be specified in interfaces, and will hide any validation
You can put a try catch and when it fail display a message. 
Vue is a framework as well, while react is a library. Vue has a separate router and state management components. Are they built in with Angular perhaps?
The reason is people who don't understand source control and want every code to be toggleable if any issues arise
This is all you need: https://docs.microsoft.com/en-us/dotnet/
Also blocks code if it contains System System.Action System.Reflection Hmmm
Request comes to an ASP.NET server, server processes it and do its business jobs and then sends data **WITH** HTML markup. If for example user is viewing a list or table and user wants to go to the next page, he/she only needs the next page data but server processes data and again sends the whole HTML markup to user which is not efficient. Here comes the AJAX. You simply put JavaScript codes inside your pages to handle data refresh without reloading the whole page. Now the problem is on server you return view somewhere and JSON somewhere else and on your client you need to do a lot JavaScript (which is a nightmare for many) and you need to create elements and stuff. At some point you might end up with a messed up dirty project (I actually experienced this in a project when I worked for a company). So you ask yourself what if my server had nothing to do with views and HTML and just return data? But what should I do with the HTML part? And also as a C# developer you wonder if there is any alternative to JS with some type safety, interface, enum, DI and stuff maybe? Here comes the Angular and TypeScript. Now request comes to the Angular server which can be the same ASP server or a different server. Here server send back all of you application UI code without any data. From this point client doesn't need to download any more HTML. All the user needs is data to be shown in the HTML he/she received which you get with AJAX calls from your ASP server. The only penalty here is that the first time user loads the app the page takes more time to load (of course Angular has some solutions for this like lazy loading) Now you're happy and your projects are well-structured with MVC and MVVM patterns. \[BTW Blazor is the same thing but all in C#, no more JS (yay!)\]
This was interesting. Looked up [System.Text.Rune](https://github.com/dotnet/corefx/issues/24093) since it was news to me. The discussion on it is almost entirely bikeshedding about calling it Rune.
If you haven't can start socialising with programmers, check for local meetups and listen and learn. It will also be amazing for your career because its not what you know its who you know... Well with programming its also what you know and meetups where someone does a presentation is easy learning.
I could be using that :).... Opps. Hard to keep track these days.
These are my recommendations: * [Microsoft Docs](https://docs.microsoft.com/en-us/aspnet/?view=aspnetcore-2.2#pivot=core&amp;panel=core_overview) * [Pro ASP.NET Core](https://www.amazon.com/Pro-ASP-NET-Core-MVC-2/dp/148423149X/ref=sr_1_3?s=books&amp;ie=UTF8&amp;qid=1550747034&amp;sr=1-3&amp;keywords=asp.net+core) * [ASP.NET Core In Action](https://www.amazon.com/ASP-NET-Core-Action-Andrew-Lock/dp/1617294616/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1550747034&amp;sr=1-1&amp;keywords=asp.net+core) * [EF Core In Action](https://www.amazon.com/Entity-Framework-Core-Action-Smith/dp/161729456X/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1550747447&amp;sr=1-1&amp;keywords=entity+core+in+action) * [Programming ASP.NET Core](https://www.amazon.com/Programming-ASP-NET-Core-Developer-Reference/dp/150930441X/ref=sr_1_2?s=books&amp;ie=UTF8&amp;qid=1550747034&amp;sr=1-2&amp;keywords=asp.net+core) (good if you're coming from a WebForm background) * [NDC Conferences](https://www.youtube.com/channel/UCTdw38Cw6jcm0atBPA39a0Q)
Ok- when you query it using OleDB, does it convert datetime to a C# DateTime or does it just gove you a string?
Please, use format to show the code...
*Step 1)* If OleDb gives you the datetime as a string, first you'll want to convert it to a C# DateTime (otherwise skip to step 2) 'var myDatetime = DateTime.Parse(dateTimeString);' If the string format is unusual, the parse method might require you to define how the string is formatted. Here's the Microsoft page: https://docs.microsoft.com/en-us/dotnet/api/system.datetime.parse?view=netframework-4.7.2 *Step 2)* Once you have a C# datetime, you can get the time from it: 'var myTimeOfDay = myDateTime.ToShortTimeString();' If you want more control over the exact format, you can use the ToString() method instead, and give it a format sting to use, such as: ''var myTimeOfDay = myDateTime.ToString("HH:mm");' Here's a helpful stack overflow post on the topic: https://stackoverflow.com/questions/1026841/how-to-get-only-time-from-date-time-c-sharp
A few weeks ago I made a [synthesizer](https://github.com/GeirGrusom/Synth) based on writing a math expression. It was just intended to get some experience with PEG parsers. It uses Pegasus for the parser generator and CSCore for the sound. I think I've fixed a few things that I've forgotten to push though.
Got to separate those concerns boi.
QmlNet (I'm the author) or Avalonia.
 ```csharp public delegate TResponse GenericRequestResponseHandler&lt;TData, TResponse&gt;(TData data); public IBlaBlaView : IView { event GenericRequestResponseHandler GRR; } ``` IView is a base view for the Controller to provide generic functionality. Now, your ASP.net controller looks like this... ```csharp public class BlaBlaMvcController : Controller, IBlaBlaView { private BlaBlaBusinessController _bbbController = null; public BlaBlaMvcController(BlaBlaBusinessController bbbController) { _bbbController = bbbController; _bbbController.AddView(this); } public event GenericRequesResponseHandler&lt;SomeInput, SomeResult&gt; GRR; public IAsyncResponse&lt;SomeResult&gt; Index(SomeInput input) { return View(GRR?.Invoke(input)); } } ``` Now we need our business Controller ```csharp public BlaBlaBusinessController : BaseController&lt;IBlaBlaView&gt; { public void AddView(IBlaBlaView view) { base.Views.Add(view); view.GRR += new Func&lt;SomeData, SomeResult&gt;(data =&gt; { // process data; return processedResult; } } } } ```
Do it as you do it on stackoverflow copy code into e.g notepda++, select everything and tab in order to put `` `` before code
Both as in Angular and knockout as hybrid
Thank you! 
*Hey just noticed..* It's your **6th Cakeday** TheWaxMann! ^(hug)
 csharp public delegate TResponse GenericRequestResponseHandler&lt;TData, TResponse&gt;(TData data); public IBlaBlaView : IView { event GenericRequestResponseHandler GRR; } IView is a base view for the Controller to provide generic functionality. Now, your ASP.net controller looks like this... csharp public class BlaBlaMvcController : Controller, IBlaBlaView { private BlaBlaBusinessController _bbbController = null; public BlaBlaMvcController(BlaBlaBusinessController bbbController) { _bbbController = bbbController; _bbbController.AddView(this); } public event GenericRequesResponseHandler&lt;SomeInput, SomeResult&gt; GRR; public IAsyncResponse&lt;SomeResult&gt; Index(SomeInput input) { return View(GRR?.Invoke(input)); } } Now we need our business Controller csharp public BlaBlaBusinessController : BaseController&lt;IBlaBlaView&gt; { public void AddView(IBlaBlaView view) { base.Views.Add(view); view.GRR += new Func&lt;SomeData, SomeResult&gt;(data =&gt; { // process data; return processedResult; } } } 
There are many differences between value and reference types, and while from a language purist view heap vs. stack allocation might just be an implementation detail, in practice the performance impact of this difference can be huge. Hence why they've introduced the new tuple feature being backed by value types rather than System.Tuple, and why they've introduced ValueTask for async methods that often complete synchronously. In general if you look at all the work being done in .NET Core to eliminate heap allocations, I don't think you can say that the allocation difference between structs and classes is just an implementation detail. For me, performance and therefore allocation is also firmly in the realm of relevant semantics to a software engineer. Additionally, since I usually make model types immutable whenever possible, reference vs value copy semantics tend to fall by the wayside, participating in class inheritance is probably undesirable, and the primary reason to choose between classes and structs becomes their performance semantics.
I see
The distinction is bullshit and purely subjective just like text editor and IDE.
I should further clarify, we used angular 1 and knockout for hybrid. I can't even fathom trying to do Angular 2+. 
Didn't really knew there is other option besides winforms (which is oudated) and UWP which has it's own problems &amp;#x200B;
Why the predisposition to make data types immutable? I would think that decision is highly dependent on many factors. 
I thought I had that book, but apparently not. From Amazon, he covers things like Span&lt;&gt; so I'm guessing ValueTask will be in there, as it was released in early 2018. No, I remember now, I stole a copy off a co-worker... I do not remember giving it back, so fck knows where it's gone. Have a poke through the index on Amazon - look inside. I'm not endorsing it, although, Konrad, if you want to send me a copy to "return" to my co-worker, feel free ;)
Immutable types are much easier to reason about. You don't have to worry about what all the other possible mutators of each object are. You don't have to worry about broken invariants. You don't have to worry about thread safety. You don't have to worry about making defensive copies before passing the object on to any other code. Etc. 
+1 ASP.NET Core In Action
&gt;The discussion on it is almost entirely bikeshedding about calling it Rune. Rightly so. While Miguel is correct that `char` is poorly named, as it hasn't accurately represented a Unicode notion of a character for a long time, the replacement should simply be `System.Text.CodePoint` (I also really don't see why we need an alias for it?). Yes, it's lengthy, but it doesn't strike me as something to be used frequently. Maybe that's the real crux of the argument?
100% agree, and just to add to this, a lot of newer languages make immutability the default. Programmers are expected to explicitly make variables/fields mutable. When code reviewing I treat the presence of a `set` function on a property as something that has to have a justification; not the other way around (i.e. immutability requiring justification).
That's not true at all. Yes, there are multiple pages, but all of the Angular code should be bundled together. Once this is loaded once (and cached by the browser) there's not much of a performance hit.
Is this DXC?
Got lost there as well. Made a tool called RuneBuilder. My instant messaging status has my middle name in runes. Would love Runes here but have to admit CodePoint works better :/ Disagree that it's bikeshedding. People are going to curse whatever will be picked for eons to come /s. So let's keep the cursing to minimum.
I fiddled around a bit. After I used "Attach to process" and then stopped the debugger, it appeared on the menu. 
You're welcome. What is your use case for having it in an [ASP.NET](https://ASP.NET) core webapp? Since it spins up a browser for the test, it would not preform very well. Hopefully you are only planning a qa tool that isnt used that much.
One reason is a language limitation. Types must be either. In a language like Swift, a value type can be mutable or immutable depending on how a variable of its type is declared.
I second Avalonia, it is definitely an option, but I think it still needs a lot of work. I mainly feel that this is because the overall experience is immature compared to WPF, UWP and even Xamarin. But I definitely want to see it succeed. I wasn't aware of QmlNet. :) I took a quick look, that's pretty cool. I'll definitely look at it more in depth later when I have a chance. 
I feel like you got the terminology a little mixed up. You use frameworks to build applications. They try to provide things that you'd write yourself in every application if you were starting from scratch. Both Vue and Angular are frameworks, because they don't really do anything by themselves. That said, I do think Vue is much lower-friction than Angular. I can't compare them too well because I haven't used both, but I started with Vue because the Angular "getting started" material made me want to vomit. 
Yeah, I feel like MS is trying to make ASP .NET MVC be something like a server-side Angular/Vue/React. I sort of like it better. I've got more CPU and RAM on the server.
Probably do. I was thinking that vue is more like a library and angular a framework but vue describes itself as a framework. Maybe application framework is a more appropriate description of angular? 
The only thing I would add you your 'why' is the fact that client side devices are becoming way more powerful these days. Phones and computers have cpus in them that bearly get used. By pushing a lot of the work load and processing into the client domain, you can then have smaller server instances therefore costing the developer less money. With the fact that cloud hosting is becoming more common for all apps, it makes sense to minimise your ongoing costs by leveraging the users CPU and only making a webapi backend. This is the justification we used to develop our app as an API with a JS client application.
Again, IMHO it boils down to whether the '!' operator makes the code less readable to you. If the answer is no then hope we agree this is pointless. If the answer is yes - you can of course try to "fix" the code by introducing said helper methods (though mind you - it would make the code slightly less readable e.g. for me, at least at first - I'd have to drill down and see if this method does what it says it should), or you can try to address the root cause. My 0.02 USD, your mileage may vary. :)
Extremely short and without an actual point?
The end game is to be able to decide whether the same SPA C# code runs on the server or client. The client-side uses Mono WASM runtime and you can try a preview (it's called Blazor). The advantage of server-side, besides the one you've mentioned, is that the client doesn't need to download a library (Blazor or Angular), so load time gains on mobile should be significant. The disadvantage is you have a response delay for every action even without DOM reloading, so a geographically distributed cloud a must.
While I haven’t seen this before, I must say that CodePoint doesn’t really sound like a good name either.
Yeah, it's not everyone's context though. It's "affordable" to download your entire company's org chart for an app's contact list. But my use case involves worldwide geospatial data that's a few hundred GB in data files alone. The algorithm involves optimizing routes that span hundreds, sometimes thousands of miles. One route can easily consume a few GB of memory and fully occupy a few cores to finish in a few seconds. The customer sometimes needs more than 10k of those. That's why our pricing reflects our server costs!
What have you already tried to do? What kind of error do you get? You should be able to just use `var jsonObject = JObject.Parse(jsonData);`. &amp;#x200B; Here is a link to where you can find more about JObject.Parse: [https://www.newtonsoft.com/json/help/html/ParseJsonObject.htm](https://www.newtonsoft.com/json/help/html/ParseJsonObject.htm) &amp;#x200B;
I see.. got it: ValueMember = column I want selected DisplayMember = column I want it displayed that associates with the ValueMember selected column So then: masterBatchListbox.ValueMember = "MasterBatchName"; masterBatchListbox.DisplayMember = "MasterBatchName"; Thank you both!! One other question. Why does it also work when I set DisplayMember to any numerical number (ie. 0 or 5)? &amp;#x200B; masterBatchListbox.ValueMember = "MasterBatchName"; masterBatchListbox.DisplayMember = "0"; &amp;#x200B;
I think Vue *does* make it a little weird because it's designed to be incrementally adopted. So you can take a set of pages that don't use Vue, import Vue, and start slowly implementing parts of the pages with Vue without much trouble. That can make it feel more like a library, because you might decide not to use the whole framework. You can fairly easily use Vue to manage just one part of your page that needs to do fiddly DOM manipulation. As far as I can tell, Angular wants to be all-or-nothing.
It looks like perfectly valid JSON to me. The “weather” property is an array of objects.
I want to know how to parse array of Jsons please
I know It's valid but How to Parse a Json Array ? because JObject.Parse can only parse a regular Json data
Right, that's been my impression as well. I've not used vue but what I was told from someone who has used it extensively was it's not a complete solution the way that angularjs is but it's only meant to fill certain roles. You can take it with a grain of salt as the guy also said it's what angularjs should've been because he thinks angularjs is too hard. 
I appreciate your responses. One more question, if you don't mind. Considering Onion Architecture, do you think it would have been better if the following was true: * The business/service layer only consumes domain objects (not entities, possibly just POCOs with some business logic/validation). It knows nothing about EF entities and only knows the interface to use to retrieve domain objects (not entities) from some data store. * The data layer has a dependency on a library that contains the domain objects and the aforementioned interface. It implements the interface and is in charge of translating domain objects to EF entities and making calls to the actual data store viansome DbContext. * At the controller level, the domain objects are translated to and from DTOs/view models and those are what gets returned from the action. (I believe you are already doing this with the *Provider classes unless I misunderstood). What do you think? Do you think there is value in that kind of scheme? Are the pros/cons of what you are currently doing better than what I've suggested in some way?
The example in the Newtonsoft documentation has an array as one of the properties and it parses just fine. https://www.newtonsoft.com/json/help/html/M_Newtonsoft_Json_Linq_JObject_Parse.htm Look at the Drives property in the example. It’s the same as your example, except instead of two strings your data has one object.
My problem is less with how to deserialize data and more how to query the data i've deserialized. Also complicated by the fact that my JSON structure is in an array, not in objects. Notice the [ and ] at the start and end respectively. I'm getting lost trying to figure out how to handle this 
Why do to keep a list of all the numbers from 1 to n? Just see if it is divisible by two, if it isn't, then subtract 1/2 of the number, rounding as needed. See if that number is divisible by 3. If it isn't then subtract 1/3 of the number. Continue with, 4,5,etc.. until it is divisible or the number becomes smaller than the divisor.
Another approach might be to filter the list using something like \`TakeEvery\` [https://github.com/morelinq/MoreLINQ/blob/master/MoreLinq/TakeEvery.cs](https://github.com/morelinq/MoreLINQ/blob/master/MoreLinq/TakeEvery.cs) Then do \`originalList.TakeEvery(x).Dump()\`
Yeah I don't think your friend was entirely wrong but they also weren't entirely right? It's a fiddly semantic distinction. Vue leaves some features like routing and state management off by default, but it has ways to plug them in. There are official router/state implementations that are supported, but you don't have to use them if you don't want to. Really that's the big Vue/Angular difference that made me pick Vue to start: Angular seemed to ask me to be familiar with a lot of different systems before I could start doing things. Vue lets me defer some features until I already know the basics. 
ok Let's suppose JObject.Parse works with Elements that has Arrays, How to read them in C# ?
I'd agree if we had been talking about angular 2+, but angular 1 you can totally only use it for view templates and dom manipulation. However it's a bit heavy weight for that only. 
Any way of importing PuTTY connections like WinSCP does?
Couldn't get it to run, got an exception when the code tried to check if the administrator role existed. Stating that the context had been previously disposed.
awesome thanks
Hm interesting i delete the whole database and everthing works for me 
 Node { Node(int num) { Number = num; } int Number; Node Next = null; } Node MakeList(int size) { Node list = new Node(1); Node current = list; for ( int i = 1; i &lt; size; i++ ) { current.Next = new Node(i+1) current = current.Next; } } void RemoveEveryNth(Node list, int n) { Node prev = list; Node current = list; while (current.Next != null) { int k = n - 1; while ( k-- &gt; 0 ) { current = current.Next; } prev.Next = current; prev = current; } } void CollapseList(Node list) { for ( int i = 2; i &lt; 1000000; i++ ) { RemoveEveryNth(list, i); } } bool DoProgram(int numberToCheck) { Node list = MakeList(100000000); CollapseList(list); for (Node node = list; node.Next != null; node = node.Next ) { if ( Node.Number == numberToCheck ) { return true; } } return false; } This is my attempt. Untested so I can't guarantee it works. Its probably smarter to do the first step manually to so you only create a list of the first 50000000 odd numbers to start with. &amp;#x200B;
Could you send me the exception?
Wow, that's a far better solution. No array or list, even very large numbers become return the correct value almost immediately. Thanks!
Do you have a c# class that models the data from your json?
 If you're talking about framework vs library, it's not. You call a library, a framework calls you. That's a pretty important distinction. Using a library you can write the base of your code however you want and just plug it in, you can usually only have 1 framework (and keep your sanity) that handles most of the work for you, and you just use what it gives you. It's a very important difference compared to a text editor vs. an IDE, of which an IDE is just an upgraded text editor. A Framework nor library derives from the other.
Yes what you stated is pretty much industry standard practice. Clear separation between the responsibility of UI, Business and service layers. We have multiple teams working in different areas so the separation is also to do with teams responsibility areas. We aim for teams to have as few dependencies as possible to prevent technical blockers
Oh yes everything is contextual 100% agree. Our app has a bunch of calculations and relatively little data on the backend so it made more sense for us to offload the rendering to the client so that we could keep our costs lower. Also webapi is really efficient when you don't have to deal with rendering and only serialising/deserialising.
Will do.
This appears to work, but I'd appreciate any insight as to why it works. If "101" is passed into the method, it would: \- Not be divisible by 2, so... \- Subtract 1/2 of 101 from 101 to get 101-50.5 = 50.5, which rounds up to 51. \- We're then checking to see if 51 is divisible by 3, which it is, so we return false To someone who isn't very adept mathematically, this seems a bit mysterious.
Got it. A library which exposes an event is a framework.
I haven't had time to look at your code thoroughly, but at a glance I have to wonder if a Parallel.For in place of your "for" would greatly improve performance. A great example is here: [https://docs.microsoft.com/en-us/dotnet/standard/parallel-programming/how-to-write-a-simple-parallel-for-loop](https://docs.microsoft.com/en-us/dotnet/standard/parallel-programming/how-to-write-a-simple-parallel-for-loop) [https://www.dotnetcurry.com/csharp/608/csharp-parallel-for-loop-method](https://www.dotnetcurry.com/csharp/608/csharp-parallel-for-loop-method) The syntax is just a little different is all. 
Instead of viewing each number in the list as an absolute number in it's own right, try to view it as the count of numbers in that list which are less than or equal to it. At the start, these are the same as the original sequence (2 has 2 numbers less than or equal to it). In each round, you are getting rid of every Ith number, so as long as that could is divisible by I, it will be removed. And since every Ith number gets removed, if the count below it is j, you just removed j/I numbers from below j, hence subtracting j/I to get the new count of numbers that will be below it. Does that help?
You may be interested in using DotNetCorePlugins so that plugins used by your internal software vs. plugins used by third parties are segmented out.
Are you attempting to do anything before asking here? I'm all for helping but I want to see you experimenting first. &amp;#x200B; Literally googling "how to parse json array c# using newtonsoft" gives this stack overflow link: [https://stackoverflow.com/questions/34103498/how-do-i-deserialize-a-json-array-using-newtonsoft-json](https://stackoverflow.com/questions/34103498/how-do-i-deserialize-a-json-array-using-newtonsoft-json) &amp;#x200B;
I'm glad I'm not the only one who thinks in base 4! Err, I mean base 10.
Maybe, but it’s the name Unicode uses, making your google-fu a lot more valuable. If you search for “Unicode codepoint”, you’ll quickly figure out what there is to know about them, including in particular why the existing name “char” is misleading/problematic.
So your looking for prime numbers, then?
Is your trouble with adding a new item into the array of `Samples`? [https://www.newtonsoft.com/json/help/html/ModifyJson.htm](https://www.newtonsoft.com/json/help/html/ModifyJson.htm) looks like it can help you. 
 var obj = JsonConvert.DeserializeObject&lt;YourJsonObj&gt;(json); public class YourJsonObj { public Weather[] Weathers; // ... everything else... } public class Weather { public int id; public string main, description, icon; } &amp;#x200B;
You have a few choices with Newtonsoft. Both are going to involve some footwork on your end. Nobody's going to do all the work for you because your JSON is too complex. Instead, let's start with this example JSON: { "people": [ { "name": "Lapis", "someNumbers": [ 1, 2, 3 ] }, { "name": "Peridot", "someNumbers": [5, 6, 7] } ] } ### The Right Way You need to make a C# type that looks like the JSON types. It's pretty straightforward. Numbers correspond to C# numeric types. Strings correspond to C# string types. Arrays correspond to C# arrays and must be homogenous. Objects take some work, but not a lot. public class PeopleJson { public Person[] People { get; set; } } public class Person { public string Name { get; set; } public int[] SomeNumbers { get; set; } } Our root JSON object is an object with a `people` property that holds an array of objects. So my C# object has a `People` property that holds `Person` objects. The inner objects in JSON hae a `name` property that is a string and a `someNumbers` property that is an array of numbers, so I made the C# `Person` object reflect that. (You may be wondering if case matters here. By default, no. Newtonsoft normally doesn't mind if your casing is different. But sometimes you want it to matter. You can configure how Newtonsoft works and make it care about casing, but I omitted that for simplicity.) Once you have an object, all you really have to do is tell Newtonsoft to convert JSON to that object: var people = JsonConvert.DeserializeObject&lt;PeopleJson&gt;(input); foreach (var p in people.People) { Console.WriteLine(p.Name); foreach (var n in p.SomeNumbers) { Console.WriteLine(n); } } This is the preferred way to work with JSON that you understand, becasue C# is made to deal with objects and this gets your JSON into an object quickly. ### The "Bad" Way(s) Both of these ways stink because you have to write a lot more code to make them work. One uses `JObject.Parse()` on the JSON. This returns a `JObject` that you can query to get more information from it. You can use LINQ, and you can treat each "node" like it's a `Dictionary&lt;string, object&gt;`, and you're going to have to do a lot of casting if you want real types: var obj = JObject.Parse(input); var people = obj["people"]; foreach (var p in people) { Console.WriteLine(p["name"]); foreach (var n in p["someNumbers"]) { Console.WriteLine(n); } } The other way is to actually deserialize to `Dictionary&lt;string, object&gt;`. This is really not much different than the above. I'm not going to go into it. These aren't the "preferred" ways to work with JSON. They're more tedious and you have to write a lot more code. But there are some situations (arbitrary JSON, JSON with bad design, multiple versions, very large files, etc.) where this is your only choice. So that's what you have to do. Either make C# objects for the JSON you're parsing, or use the lower-level parser to get just the data you want. 
You're reading the column 1 twice - what happens if you change the column you're reading?
After running a small ~10 person team as an owner, allowing a very lax startup culture and then picking up a salaried gig that pays way too much on the side and to get experience with bigger teams, it is very indictive of and similar to the cancer that is corporate culture.
Isn't this the Sieve of Eratosthenes to find primes?
Mind if I ask, are there any reasons I should pick MEF over the solution I already have? Thanks.
It’s not reading it twice. “Username” is the column and “1” is the row.
It’s not reading it twice. “Username” is the column and “1” is the row.
**I AM DUMB.** Thank you so much; this has solved my problem. I will mark the question as solved shortly.
Regardless of what it is, use a List or array of booleans. Your indexes are your numbers. Also, the eliminating multiples need to be done only till square root of N. Beyond that, all remaining numbers are prime. &amp;#x200B;
I didn't even notice that. Feeling a bit silly now. :)
Yes, that helps!
Nope, not primes. Notice that 5 is removed from the list, but it is prime.
Where was this when I was teaching C# and drawing all this on a whiteboard.
Ok here goes hopefully this pastes ok: System.ObjectDisposedException HResult=0x80131622 Message=Cannot access a disposed object. A common cause of this error is disposing a context that was resolved from dependency injection and then later trying to use the same context instance elsewhere in your application. This may occur if you are calling Dispose() on the context, or wrapping the context in a using statement. If you are using dependency injection, you should let the dependency injection container take care of disposing context instances. Object name: 'AsyncDisposer'. Source=Microsoft.EntityFrameworkCore StackTrace: at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.AsyncDisposer.Dispose() at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor\`1.EnumeratorExceptionInterceptor.&lt;MoveNext&gt;d\_\_5.MoveNext() at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at System.Runtime.CompilerServices.TaskAwaiter\`1.GetResult() at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.&lt;ExecuteSingletonAsyncQuery&gt;d\_\_21\`1.MoveNext() at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at System.Runtime.CompilerServices.TaskAwaiter\`1.GetResult() at Microsoft.AspNetCore.Identity.RoleManager\`1.&lt;RoleExistsAsync&gt;d\_\_33.MoveNext() at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at System.Runtime.CompilerServices.TaskAwaiter\`1.GetResult() at BlogCoreEngine.Controllers.HomeController.&lt;SetIdentity&gt;d\_\_15.MoveNext() in C:\\Users\\dmcmillan\\Documents\\Visual Studio 2017\\Projects\\BlogCoreEngine-master\\BlogCoreEngine\\Controllers\\HomeController.cs:line 163 &amp;#x200B; This is Line 163 in HomeController.cs that tripped the exception: if(!await this.roleManager.RoleExistsAsync("Administrator")) &amp;#x200B; Hope that is helpful.
Nope, 5 is prime and 5 is not in the list.
Did you made a run on Serilog too ? it feels like it’s missing a really used logger framework as opposed to others in this bench Why are we benching with console ? should Interactive mode be checked to disable console log ? the bench will reflect something that could be weird for production Does it take in account pushing logs to network like Elastic / Seq ? And then recovery + potential memory overhead / allocation ? (how does sink/appender react to outage) also depending on the log framework it can be good to not to blindly log a string like that without checking of the level is “active” to avoid string allocation and time list on it. also the bench would be great with more data / structured log instead of pure string ?
I can feel you, spent 3 days figuring out code for prime number when I was in my 2nd year of college
This. Use TryParse and appropriate actions
If you are using new versions of Excel, I would look at open xml reader (official nuget Microsoft package) It's a lot faster and easier to use. One other thing to note about Excel is it works on rows, columns are index on the rows.
Apologies - just looked at the code and it works differently than I expected. It looks like it is hard coded to Sheet1, so ensure that you have that for your sheet name. The column name does look appropriate - sorry for not being able to provide more assistance 
Hmm, good point.
Really nice read, and lines up with some issues I've had before too. In fact, I had a very similar problem just yesterday in a test that run a continuation from a cancellation on a `CancellationTokenSource` synchronously, and got around it by using `await Task.Yield()`. I see they've fixed this in `SemaphoreSlim` by forcing asynchronous continuations. But I wonder if there's a case to be made for allowing "building block" types for async code (like `TaskCompletionSource&lt;T&gt;` and `CancellationTokenSource` etc.) to take an optional parameter that forces all continuations to be async? Or is that daft?
Put the react component into the page's document and set the display to show or hide in css. You need to make the modal in the current page. 
hmm i tried multiple things on my pc i dont get this error you have probebly some issues with you .net 2.2 sdk &amp;#x200B; maybe not everything is up to date 
Yeah I am not sure. Reinstalled .Net Core SDK and got this. Weird.
Looks good! One thing, though: You're using your *HomeController.Index* method to [setup the database](https://github.com/cetoxx/BlogCoreEngine/blob/master/BlogCoreEngine/Controllers/HomeController.cs#L39), which includes a blocking database call for every request to the homepage. I'd suggest to 1) use _async_ everywhere and 2) move the app initialization to _Program.Main_, so it runs consistently once at app startup. Here's an example: [WebDocu - Initialization](https://github.com/GeorgDangl/WebDocu/blob/master/src/Dangl.WebDocumentation/Program.cs#L19-L41). Otherwise, continue coding:)
I think this is because the call to *SetDatabase();* in *HomeController.Index* lacks *await*. This means that the setup operation on line 163 might execute after the controller action has completed. ASP.NET Core disposes all transient objects after a request has finished, meaning the setup action is still running but the underlying database context is already disposed.
For OpenGL, there’s [SharpGL](https://github.com/dwmkerr/sharpgl)which is designed to embed into WinForms. [OpenTK](https://github.com/opentk/opentk) is a bit better in my opinion (more popular and more general) and has the GLControl, which is just a control that has an OpenGL context.
That's pure bullshit and has nothing to do with why we use properties.
My .net core got uninstalled a couple weeks back, I think it had to do with some kind of windows updates or something. I was highly confused. After reinstalling everything of mine started working again.
It isn't exactly a code point though because it doesn't allow the high-surrogate and low-surrogate code points and is constrained to single value case changes (Unicode case change functions are not defined on a 1 to 1 relationship input to output). if it were CodePoint, then the case changing functions should be something like: public static IEnumerable&lt;CodePoint&gt; SimpleFold (CodePoint input); public static IEnumerable&lt;CodePoint&gt; To (Case toCase, CodePoint input); public static IEnumerable&lt;CodePoint&gt; ToLower (CodePoint input); public static IEnumerable&lt;CodePoint&gt; ToTitle (CodePoint input); public static IEnumerable&lt;CodePoint&gt; ToUpper (CodePoint input); The canonical example is the German letter "ß" which should uppercase to "SS" however the api that provides would really suck for most cases where the mapping is 1-1, a better api might be something like: public static bool TryChangeCase (Case toCase, CodePoint input, out CodePoint output); public static ustring To (Case toCase, CodePoint input); where you could fast path through the simple cases with the first method. Unfortunately that may leave your application open to pathological input problems where certain chosen values have measurably different performance measurements which is potentially exploitable... see https://www.unicode.org/versions/Unicode11.0.0/ch05.pdf (specifically 5.18)
Actually our app that uses Auth0 is only accessible internally as well. We basically have them login with Auth0 AD integration and on our API we whitelisted Auth0's IP to be able to call an endpoint on our side that get's the user's roles/permissions.
Yeah, I misunderstood what he was doing. When I read his description the first time, I didn't catch on to the fact that each iteration was using the result from the previous filter.
The react component is already in modal. Should this work with this approach? if yes, could you provide an example?
&gt; to take an optional parameter that forces all continuations to be async internally? I'd prefer just to split it into `SemaphorSlimAsyncOnly`, `SemaphorSlimSyncOnly`, and `SemaphorSlimCombinedSyncAndAsyncAreYouSureYouWantToUseThis` (with better naming left as an exercise to the reader). Remove any and all temptation to do sync-over-async. Remove the temptation to mix sync and async unless you really need to.
If that's the case, then my solution doesn't work. OP hasn't posted a drop of clarification though, so hell if I know what's allowed and what's not.
Scumbag op, posts vague question, doesn't answer a single clarification question.
&gt;It isn't exactly a code point though You make a good case here. &gt; The canonical example is the German letter "ß" which should uppercase to "SS" Not only is it not a 1-1 mapping in terms of character count; it also isn't reversible. The lowercase of "SS" is _not_ (necessarily) "ß". :-)
You have your react entry point app div in the modal, and your react app bundle loaded, then all you would need to do is toggle the css display property on the modal to show or hide it. Without seeing the implementation it would be hard to say more. This is a basic modal tutorial. https://www.w3schools.com/howto/howto_css_modals.asp
DatabaseInitialization.Initialize(accountContext); &amp;#x200B; what means the DatabaseInitialization i dont found it in my program class? no imports or something
Don't calculate using the value. Use the index number instead. The solution is recursive then.
As you can see from my code, it opens a new window of the component, do you have any suggestion of how I can replace the window.open to just show the component? Because the component is already rendering as a modal with a close button.
1) You can, but you need a separate window/control for 3D if you want to mix hardware and software rendering. Unity is unsuitable for 3D modeling applications though. 2) Unity uses lots of C++ functions internally because C# has very poor SIMD support and lots of performance gotchas in general. But as end user you can do everything in C#. The .NET framework they support was the regular 4.6 last time I checked. Not sure about the C# version.
JArray.Parse()
How far behind is C# from C++ in pure 3d rendering performance do you know ? I've been told on gamedev and in others subreddit that it's extremely hard if not impossible to build a complete highend 3d engine like Unreal or Cryengine alone... its like movies you can't make Avatar alone etc but if a guy want to learn 3d graphics and work in 3d engine and build some what he have to do there is no others choice but C++ and going native with all the assle that come with it ? I wanted to get back to programming and do some unity3d with C# and if it doesn't work I'll still have my C# to get a "normal job" but C++ seem hard now with all the new stuffs havent done some C++ in 20 years, they told me it could take like 5 years full time to have a little room with a character walking around in native C++ with opengl/directx done by myself, huge investment in time and doesn't bring lots of cash in my pocket and the jobs in the game industry seem to be horror story dont know what im gonna do
This is how I would do it (using `ExcelDataReader.DataSet`): public DataSet ImportExcel(string filePath) { DataSet result; using (var stream = File.Open(filePath, FileMode.Open, FileAccess.Read)) { using (var reader = ExcelReaderFactory.CreateReader(stream)) { result = reader.AsDataSet(); } } return result; } I then access that `DataSet` via: var excelImport = ImportExcel(filePath); var objectDictionary = new Dictionary&lt;string, string&gt;(); for (var tableIndex = 0; tableIndex &lt; excelImport.Tables.Count; tableIndex++) { for (var rowIndex = 0; rowIndex &lt; excelImport.Tables[tableIndex].Rows.Count; rowIndex++) { var username = excelImport.Tables[tableIndex].Rows[rowIndex][1].ToString(); var password = excelImport.Tables[tableIndex].Rows[rowIndex][2].ToString(); objectDictionary.Add(username , password) } } You'd then need to check the dictionary for a specific username: if (objectDictionary.ContainsKey(usernameToSearchFor) { //do stuff } &amp;#x200B; &amp;#x200B;
Is there a reason you're interested in such an old book?
Well I was talking mostly about things like `TaskCompletionSource&lt;T&gt;` and `CancellationTokenSource`. At the moment calling something like `SetResult()` will cause the setting thread to be the one who 'hydrates' the pending continuations on the result task (see [here](https://source.dot.net/#System.Private.CoreLib/shared/System/Threading/Tasks/Future.cs,387) and follow the chain for `FinishContinuations`). But that can be unexpected, I think. I figure `SetResult()` or `TrySetResult()` to be a quick in-out job that doesn't go on synchronously on handling continuations until it's yielded. That can be tricky to diagnose if you have a deadlock eminating ultimately from this behaviour.
Use epplus, read the excel spreadsheet into a data table object. Once it is a data table you have all kinds of cool options to filter and sort.
no, but this is one of few book that titled with Professional ASP.NET. do you have one to recommend? Thanks
do you need persistent storage? you could do this all in memory if you don't. otherwise, common practice would be to just store this in a relational database of some sort. SQLite is pretty common for these types of small projects (you can google 'sqlite c#' to find a bunch of posts/tutorials.
These ones are good - and much newer: https://www.amazon.com/Pro-ASP-NET-Core-MVC-2/dp/148423149X/ref=sr_1_6?ie=UTF8&amp;qid=1550791644&amp;sr=8-6&amp;keywords=asp.net https://www.amazon.com/ASP-NET-Core-Action-Andrew-Lock/dp/1617294616/ref=sr_1_7?ie=UTF8&amp;qid=1550791644&amp;sr=8-7&amp;keywords=asp.net
Yeah I was hoping to store all the new records into the excel file. But sort it in the program. I haven't got much experience in c# so I haven't got the best solutions. A database may also be great for this project, for now I'm just going to have to practice as I'm still currently in early stages of the controlled assesment. Thanks for the advice
Thanks for the advice. I'll research this tomorrow and see if I can try implement it into my code
Also btw, what's the best method to show all the records in my application. I was thinking of using a Data Grid View but because you told me about using a database. What could be the best way of showing it, as a data grid view, or a another method.
Thanks but I don't think you watched the video. &amp;#x200B; If you go to part **0:45** to **1:05** you will see that I explain briefly the purpose of accessors. There was not the purpose of the video to explain accessors or encapsulation but address using **{get; set;}** and the consequence of using public field over property in case of instantiating Type at runtime using reflection. &amp;#x200B; Also, your comment is incomplete "they allow validation and control of access". It allows you to encapsulate internal behavior from outside world, it could be anything: triggering delegates, save log etc, not exclusively associated to validation. &amp;#x200B; Thanks &amp;#x200B;
datagrids were pretty much designed to be used to display tables in databases.
*Woah!* It's your **8th Cakeday** bobasaurus! ^(hug)
Thanks for the comment, Lord. &amp;#x200B; Well I didn't say it was not possible to access the field from reflection, which it is. my point was you better be aware that, conventionally, solutions that use reflection to do something with your members from a Type will very often ignore Fields. For example, I don't remember if I mentioned this on the video, if not, I should've done so, some Wpf related UI stuff will not read your public field but it will read Property with public getter. &amp;#x200B; Thanks
Yes that's my problem. What i'm struggling with is the syntax because the samples array is not inside an object, it's inside another array. So the structure is root Array --&gt; [0],[1],[2] --&gt; Samples --&gt; [0],[1],[2] I want a way to create a new object in root array --&gt; [0] --&gt; samples --&gt; [3] for example. So that link shows me how to create that object sure, but it doesn't tell me how to create it in my target item. Is that clearer?
what is bullshit? &amp;#x200B;
You most likely have the Oracle Client/OleDB drivers installed, and the other machine doesn't. You'll be happier if you get rid of OleDB and move to the Managed Oracle ODP driver that doesn't require anything else to be installed. Its on NuGet
Is it just as a background worker that this doesn’t work on the clients machine? If you were to make just a simple console app or something that performs the same operation not as a background worker and put that on the client machine does it work? I’m from a mssql shop so Oracle is something I’m not too familiar with but does it require and odbc connection or anything like that?
Pretty much everything. We don't write properties because some reflection bullshit. If people wanted to write code that binds to property or field they could easily write that. Do you think C# designers introduced properties because they figured whoever was going to write databinding couldn't write a simple or? The reason we write properties is because fields and methods compile to specific but different IL. If you change from field to property later client code will not work without recompiling. You can try that by compiling an assembly, compiling another assembly that depends on it and then compiling a new version of the first assembly and drop it in the folder without recompiling the second. If you use properties in both the new version will just work if you use field and change it to a property it won't. This is important for updating software. The binding thing is just a convention that was developed because everything was exposed through property not because it wouldn't work otherwise or because properties are somehow needed for databinding.
So oracle does require a odbc connection. The backgrounder worker works with other processes. Like linq query to sql db. Yea so i made the query run outside of the background worker. Just click a button and execute the query code and the query works. 
Yeah… so clever. Then why do we write them in advance instead of turning a field in a property when we introduce validation?
Ill check that out. But the connection works when i run the procedure outside the backgroumd query. So i put it behind a button. And the oracle code works on the client machine. 
Ill check that out. But the connection works when i run the procedure outside the background worker. So I put the query code behind a button. And the oracle code works on the client machine
Interfaces are not argument for properties either. C# designers could have easily made interfaces expose fields if they wanted to. No need to invent properties for that.
These machines all have oracle installed since its the main db behind our companys systems. 
So couldn't you just do what the link has but initially parse it into an array? Something like: var jsonArray = JArray.Parse(rawJson); foreach(var item in jsonArray) { if (item["Name"] == "Name1") { var sampleArray = item["Sample"]; sampleArray.Add(//thing to add goes here) } } It looks like it would work on paper but I haven't tested it. Might be able to get you started
Everything on Udemy is always discounted. This looks like you made a course, and are trying to pass off this as a "List"; when its really an advertisement. 
There are multiple Excel Nuget packages out there for something like this. The ones I've used the most are: [ExcelDataReader](https://github.com/ExcelDataReader/ExcelDataReader) is great for reading from an Excel file but not much else. [SpreadSheetLight](http://spreadsheetlight.com/) is great for doing a \_bunch\_ of Excel functions through C#.
Probably because most of us have run into issues with upgrading .NET
I would suggest a null check in the class NetworkInterface, line 91, where a null value returned by nameServerKey.GetValue("NameServer") will throw an exception when calling ToString(): var dnsAutoconfigurationEnabled = nameServerKey != null **&amp;&amp; nameServerKey.GetValue("NameServer") != null** &amp;&amp; string.IsNullOrEmpty(nameServerKey.GetValue("NameServer").ToString()); or, shorter: var dnsAutoconfigurationEnabled = nameServerKey?.GetValue("NameServer") != null &amp;&amp; string.IsNullOrEmpty(nameServerKey.GetValue("NameServer").ToString()); &amp;#x200B; &amp;#x200B; &amp;#x200B;
Here's a simple trick to get you started. Within Visual Studio, copy the JSON and go to *Edit | Paste Special | Past JSON as Classes*. The result is the following: public class Rootobject { public Coord coord { get; set; } public Weather[] weather { get; set; } public string _base { get; set; } public Main main { get; set; } public int visibility { get; set; } public Wind wind { get; set; } public Clouds clouds { get; set; } public int dt { get; set; } public Sys sys { get; set; } public int id { get; set; } public string name { get; set; } public int cod { get; set; } } public class Coord { public float lon { get; set; } public float lat { get; set; } } public class Main { public float temp { get; set; } public int pressure { get; set; } public int humidity { get; set; } public float temp_min { get; set; } public float temp_max { get; set; } } public class Wind { public float speed { get; set; } public int deg { get; set; } } public class Clouds { public int all { get; set; } } public class Sys { public int type { get; set; } public int id { get; set; } public float message { get; set; } public string country { get; set; } public int sunrise { get; set; } public int sunset { get; set; } } public class Weather { public int id { get; set; } public string main { get; set; } public string description { get; set; } public string icon { get; set; } }
I’ve got some recent experience of this: in the last month I’ve used 3 PCs for .NET development I run an i7 8700k (overclocked to 5GHz) at home, with very fast DDR4 RAM, and an M.2 SSD. And a GTX 1080, probably not relevant mentioned for completeness sake At work I have an i5 8400, DDR4 but the kind of budget crap offices buy, and an SATA SSD with onboard graphics. There is a noticeable difference between the two when loading projects, and a smaller difference when building/running... but other than 10 seconds in each of those situations, there’s no real difference However, both are very obviously better than my old i3/8GB/mechanical HDD PC at work. Based on that experience, I’d say that while it’s definitely worth having an SSD, 16GB RAM, and a recent-ish CPU, you don’t need to go nuts. The extra money for the 8700k and higher speed RAM isn’t worth it for .NET development work: yes it’s slightly quicker, but not enough to justify the price difference. The M.2 SSD is nice if you want general system snappiness and faster loading, but it’s not vital. I’d aim for a current gen i5, 16GB of DDR4 (fastest at a sensible price) and M.2 SSD.
You are having some form of issue accessing the OleDB driver- rather than dig into that just move off of OleDB. There is little in the way of good reason to be using OleDB in 2019- especially for an DBMS that has a NuGet hosted managed driver available. 
Yea i think i will. So i was looking into it. Do you replicate a tsn name file with in the application? That seems pretty cool. 
Don't worry, I also feel dumb sometimes ;) That's why peer review is so important.
You don't need a tnsnames- you can put all of the connect info in the connection string like every other DB :)
Sweet. Yeah, thanks for the advice. This is deffinetly the direction i need to go. 
Look at SharpDX which is a very efficient C# managed wrapper around DirectX. Building a 3D engine like Unity isn't something you're going to do alone, but getting an animated character walking around a room is definately not a 5 year task, more like a few weeks if you have some decent previous C# experience. However if you just want to write games - use Unity or one of the other engines and let someone else do the legwork of building the engine
I’d generally agree with this, but note that this is C# (or maybe .NET) specific - not every language uses the exact same terminology 
&gt; but if a guy want to learn 3d graphics and work in 3d engine and build some what he have to do there is no others choice but C++ you could make an engine for learning purposes is any language. C# has very high performance interop with directx so you can make something quite capable if you want also there is Rust &gt;they told me it could take like 5 years full time to have a little room with a character walking around in native C++ with opengl/directx done by myself, nah. a few days or weeks depending on past experience and how many hours you can do per day. and C# won't make it take any less time really. 
If you don't mind a not-so-elegant solution, you could create a csv (comma-delimited) file that Excel can read instead of trying to create a native xls or xlsx file.
I've found Resharper to be very helpful in finding these possible null-refs.
This is super cool. I did not know about this! Is this default with VS or do you need Resharper? 
What's better than native and C++ to learn 3d graphics, learn OpenGl Directx etc and start building small world... how differently you want to learn 3d graphics the game industry doesn't use C# or Unity
Hi, I have 15 years of web development experience in ASP/ASP.NET SQL Server e-commerce. I started a web development company out of college and have been working there for clients. I managed windows servers over those years and maintained top 5 search engine positions. I'm also familiar with javascript, AngularJS, Ajax, CSS, responsive design and some web design. I'm open to full time, remote, or part time around Atlanta, GA or Boulder, CO.
RyZen 1700 has low frequencies. It will be at a disadvantage where single threaded performance is needed. Take the RyZen 2600X or at the very least the RyZen 2600 if you have to cut costs. For the work you intend to do they are better suited than a current gen core i5. Comnone them with a midrange B450 motherboard and at least 16gb of decent 3000mhz Ram and it will fly. If you go the intel route, take at least the i5 8400. The next valid step at intel is the 8700. Albeit pricey and not really better than an r7 2700
Removed: Spam.
FWIW doing this with binding would be a lot easier. Inside your XAML you bind the textbox's text to an integer variable and the "checks" are done automatically. An example from one of my old projects: [inside Xaml](https://github.com/Coding-Enthusiast/Watch-Only-Bitcoin-Wallet/blob/master/WatchOnlyBitcoinWallet/Views/SettingsWindow.xaml#L40) and the [ViewModel](https://github.com/Coding-Enthusiast/Watch-Only-Bitcoin-Wallet/blob/master/WatchOnlyBitcoinWallet/ViewModels/SettingsViewModel.cs#L94-L105) containing the variable that you bind to. If you wanted to add additional checks like limiting the size of the integer to positive and smaller than 10 then you can add a new class inheriting from `INotifyDataErrorInfo` and add the checks there and "validate" your inputs [like this](https://github.com/Coding-Enthusiast/Watch-Only-Bitcoin-Wallet/blob/master/CommonLibrary/ValidatableBase.cs)
Excel is likely the most difficult way to go about this. All you are really looking for is some sort of file storage medium, and a way to do CRUD operations against that storage. Look into Sqlite and for extra bonus look into the repository pattern for interacting with that data.
I knew CodePoint was a bad name without googling to know where it came from.
Open issues and submit to codetriage perhaps? 
I don't know how much traction it gets, but you could try adding your project to Up For Grabs: https://github.com/up-for-grabs/up-for-grabs.net 
Sorry I wasnt arguing about if they should be there or not, but pointing out WHY we use them
Thanks for the reply. TBH I hadn't considered WPF (or other frameworks) as I mainly do web/mvc stuff, and that was were my head was at. I didn't mean to criticise, as its good that people are making videos like this, and helping us all move a little bit forward. Keep it up !!! 
Tvp
That's just a static method on the *DatabaseInitialization* class in my code, it's not a framework component. I meant that you should run your own initialization code somewhere in *Program.Main*, instead of at the *HomeController*.
This is not .NET Core.
It's bundled?
Generics are not duplicated - the runtime has inherent support for generics. No boxing will occur, since no value types are involved. Benchmark the two options. I would expect the generic version to be insignificantly faster, since you probably avoid a level of vtable indirection. In the end, unless you've measured a performance problem, I expect the difference to be microscopic at best. 
.NET Core does not support ASP.NET Web Forms. And what a weird combination to use WebForms, React, and even Knockout.
&gt; As far as I know, generic methods will be multiplied for every generic parameter These are generics, not templates. You're confusing C++ and C#.
It's the default. Works with XML too.
The CLR only generates specific native code for generic value types (structs). For reference types (classes) it reuses the same code gen and does virtual calls*. Boxing also only applies to value types. So if `T1` and `T2` were structs you would indeed expect a significant performance advantage for the generic method through non-virtual calls, possible inlining and avoiding boxing, but for classes you would not. * .NET Core is working on improving devirtualization, not sure if they're doing this differently yet.
An additional unpopular option would be to pay people to contribute.
Starred &lt;3 
thank you!
But this is not why. There is a specific reason properties were invented and this is the reason we use them. Everything else is just a side effect.
Office Excel uses a subset of .NET which evolved from VBA, but can load in any .NET assemblies. Enable the developer ribbon in Excel and have a go. Do you need to use Excel? 
Here's the abstract: &gt; Have you ever stopped to think about all the things that happen when you execute a simple .NET program? &gt; &gt; This talk will delve into the internals of the recently open-sourced .NET Core runtime, looking at what happens, when it happens and why. &gt; &gt; Making use of freely available tools such as 'PerfView', we'll examine the Execution Engine, Type Loader, Just-in-Time (JIT) Compiler and the CLR Hosting API to see how all these components play a part in making 'Hello World' possible.
What did you use to get the benchmark information?
No. And i don't plan to implement this feature. Then I would have to consider other tools like RDCMan, etc. &amp;#x200B; I want to add a feature to add multiple host at once (maybe via ip scan).
Running tasks asynchronously doesn't necessarily mean that they will run multithreaded. It depends on how you write your code and what the code is doing. Async programming is a different concept than parallel programming, which is what the original post is about. &amp;#x200B; [This blog post](https://blogs.msdn.microsoft.com/benwilli/2015/09/10/tasks-are-still-not-threads-and-async-is-not-parallel/) has a great visual explanation about what's really going on when running multiple async tasks with WhenAll. &amp;#x200B; And you still have to worry about thread safety with tasks. Imagine trying to re-write the code in the blog post (attempting to read multiple barcodes at once) with a WhenAll. You'd have to either use a ConcurrentBag or have each task return a single result and combine the results into one list after the fact. 
Thanks. Fixed in current master.
I use ReSharper, but I have overlooked that.
/u/reasner already mentioned `Razor Components` so I just want to mention [Blazor](https://blazor.net) which uses `Razor Components`.
That's not true -- it will help you appreciate asp.net core that much more. It builds character :-D.
Ask on Reddit?
Agreed. Why people insist on making their life miserable like this is beyond me.
BenchmarkDotNet
is it good idea?
Hmm, honestly - i do not understand this question in given context. Can you tell me something more about your question? Will be happy to answer :)
" There is a specific reason properties were invented and this is the reason we use them " &amp;#x200B; but it is MY why. I'd say 90% of the time I use properties over fields is to allow their access in a controlled , encapsulated manner. That encapsulation is supported by the use of interfaces in the vast majority of times. &amp;#x200B; &amp;#x200B;
Sure but this does not explain why we write properties in advance as a simple field access. We could write public fields and replace them with properties once we need the code. As a matter of fact this is how it is done in JS and it works fine with interfaces and databinding.
Thank you!!! Just did this and tested on a client laptop that doesnt have oracle. It worked. This is sick. I have my tsn connection built as a string in my app.config and just reference it when I need to open the connection. 
The big one: write methods for the repeated code, passing the objects used as arguments. For instance: private void OnKeyPress(TextBox t, KeyPressEventArgs e) { t.MaxLength = 5; char ch = e.KeyChar; if (!Char.IsDigit(ch) &amp;&amp; ch != 8 &amp;&amp; ch != 46) { e.Handled = true; } } A smaller detail is that the if statement in your keypress handlers can be reduced to e.Handled = !Char.IsDigit(ch) &amp;&amp; ch != 8 &amp;&amp; ch != 46; It's not *quite* equivalent, but the difference (`e.Handled` always gets assigned *something*, instead of only being assigned when it would be `true`) probably doesn't matter.
Two functions and a switch case? Maybe define some static objects to prevent assigning the same properties every time? Just some ideas.
&gt;We could write public fields and replace them with properties once we need the code Why are you writing code you dont need?
Oh, I got you wrongly that you are planning to switch to from C# to Rust :) Excuse me
I need it and know why I need it (I've described the need in a comment on the bottom of this thread). The question is why do YOU write code which you don't know you need :)
Create a class inheriting from `TextBox` that implements this behavior via configurable properties.
I dont
You do. You write properties instead of fields.
&gt;design decisions Suggestion: Don't use 1 letter method names Log.d 
The modern choice is git. You can host it locally, but a lot of organizations pay someone to host it for them (github, gitlab, etc) For controlling changes to your database objects, look at RedGate SQL Source Control. It integrates with git and MS SQL Server Management Studio. You make changes to your dev database, it detects then, and stores them in git. You can then later deploy them to production when you’re ready. 
troll
Already been mentioned but git is the way to go. Since you're in a c# subreddit I'd also say azure devops integrates very nicely with git. 
I used it for a while, after turning everything but bracket colouring off. I don't use it anymore though. 
For entering: private string Entering(TextBox text,string subject, Color color) { if (text.Text == subject) { text.Text = ""; text.ForeColor = Color.Black; } return text.Text; } For leaving: private string Leaving(TextBox text, string subject,Color color) { if (text.Text == subject) { text.Text = "Subject 1 - Grade"; text.ForeColor = color; } return text.Text; } Ex: whenever you want to enter text you just call the method Entering( txtSub1, "Subject 1 - Grade" ,Color.Black);
I stole the basic logging interface idea from the default Android Logging system ( [https://developer.android.com/reference/android/util/Log](https://developer.android.com/reference/android/util/Log) ) since I like its shortness &amp;#x200B; So you would prefer Log.debug("abc") to improve readability? 
That blog does explain some strange behaviour I was seeing. Sometimes i was at 100% processing for all cores, other times only 1 core was maxed out. Turns out it was accidental if I had a Task.Run or ConfigureAwait(false) mixed in my tasks somewhere... Well, I’m learning. &gt; have each task return a single result and combine the results into one list after the fact This is basically what I have done in some of my code. It does seem to work performance wise. But I’ll definitely try the Parallel.Foreach instead and make a better crack at wrapping my brain around it. Thanks for the extra info 😁
Log.Debug
Segregating responsibilities into different classes isn’t about people only working on certain things, and owning areas. It’s about keeping each part of the code focused, so when you need to change how one of these responsibilities works, you don’t have to track it down in a bunch of different files, which is time consuming, and has a risk of being overlooked in some places.
I very much agree about segregating code into classes. I was referring in the article that the author discusses segregation of people by their expertise, which I do not agree with.
You have an error in Documents spécieaux, it is spéciaux.
Alas, triangles are the one shape that eludes computer science to this day.
If you figured out 1, then just reverse it. Count from 5 to 1 rather than 1 to 5
As a new c#'er you might want to try and make a something simple like a mathematic game using the random function. I dont really recommend starting with cmd programs since they can be a pain.
I meant the figure 2
Yes I see what you mean, the author is suggesting making silos, which is generally a bad idea. It makes everyone a bottleneck to each other, and nobody can leave, or go in vacation without worrying about messing up everyone else. Nobody is learning, because they stay in there comfort zones. Here are a bunch of articles that talk about this https://spin.atomicobject.com/2015/11/12/software-silos/ https://medium.freecodecamp.org/why-code-ownership-sucks-and-you-should-never-work-somewhere-that-practices-it-b8fc1c694074 https://www.agilealliance.org/glossary/collective-ownership
You have to start with figure 3 but change "*" to " " right ?
The main issue I've had with a strict repository pattern linked to Entity Framework is legacy databases. These DBs often have poor data structures that cause issues with EF and/or are built around stored procedures instead of tables. Fortunately, EF has been improved so that this isn't as bad now. 
A ' ' is a character too. Every row is 5 characters wide.
For I = 5; I &gt; 0; I— For k = I-5; k &gt; 0; k — Print „ „ For j = I; j &gt; 0; j — Print „#“
the firs line is 4 spaces and 1 asterisk the second line is 3 spaces abd 2 asterisks and so on until you print 5 asterisks the easiest way would be a loop that prints (5 - idx) spaces and idx asterisks.
I can make the blank triangle but i dont know how to make insert the "*" loop in it 
In all fairness, he has the advantage that he is on the team that works on extensibility of visual studio. He's still incredible for his extensions, but he does build the stuff that allows his own extensions!
If j &gt;= i, console.write(“*”) Else console.write(“ “)
Practice. I've never met anyone who learnt how to code well purely by reading code.
Rather than us just giving you the answer, think about it. Line 1 = 4 spaces, 1 asterisk Line 2 = 3 spaces, 2 asterisks Line 3 = 2 spaces, 3 asterisks Line 4 = 1 space, 4 asterisks Line 5 = 0 spaces, 5 asterisks &amp;#x200B; If your start value is 1 (asterisk) and your end is 5 (asterisks) Then Line 1 -- Spaces = MAX (5) - CURRENT (1) so 4 spaces. Line 2 -- Spaces = MAX(5) - CURRENT (2) so 3 spaces. Line 3 -- Spaces = MAX(5) - CURRENT(3) so 2 spaces. &amp;#x200B; You should figure out how to loop this to work :) &amp;#x200B;
So true
It might get easier if you use Console.Write(' ' or '*') and write every character 1 by 1. After 5 characters you can call Console.WriteLine() to go to the next line
Some devirtualization was released with .net 4.7.1 when using RyuJIT https://blogs.msdn.microsoft.com/dotnet/2017/06/29/performance-improvements-in-ryujit-in-net-core-and-net-framework/ Is `T1` `sealed` in your tests?
That's cheating
Its in french
Well, how are you counting your stars then?
Learning about loops . its saves time
Make a personal project too big to have courage to change anything, than, change everything until it is elegant...
I meant in your 1st assignment. I assume its triangle of '*'? first 1, then 2 etc. 
Read ["Code Complete, 2nd version"](https://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670/ref=sr_1_2?keywords=code+complete&amp;qid=1550855849&amp;s=gateway&amp;sr=8-2). Its everything you'd learn in 10 years of experience, summarized into 1 book.
I like these concepts. Especially the move semantics make a bit more sense in these terms. In C++ they are sometimes used as a performance argument, but of course also transfer of ownership.
&gt; more generalized and abstracted. That isn't always better! Really the best way forward is to practice. Program lots of new things, experiment, try different ideas. As you do that you are better able to evaluate and absorb books and other people's advice. 
I've actually done a couple. One is basically finished from a user perspective, the other (client+server with socket) I fear to touch it! I'll start with the latter and refactor everything using SignlaR and proper classes.
Nice! What I like to do with personal projects is to start with zero architecture and wait until it is a complete mess, so I refactor everything... This makes me really confident when I have to do it at work, and everybody faces some huge refactoring at work... The las project I did this is a sound synthethizer + a procedural music generator + player with some cool wave forms + the actual score for the song it generated being shown in sync with the music... all from scratch, all a HUGE mess until 5 months into it...
repository pattern is fine but what people usually denounce is generic repositories. i used to be a big fan of generic repositories but as you move to stuff like dapper and complex queries they quickly bit you in the ass.. best to have specific repos/stores for each entity that specialize in that entities data access, defined by interface.
Its exactly what he is saying. Spéciaux, not spécieaux
Try to work out a solution to the problem in pseudocode. Practice. Refactor.
I get that for fetching data to use different repos. What about the common functions like insert, update, delete? I like those for generic repo
Learning software design patterns has helped me a lot. 
For loop concat “*” string.format ( “0,-5”, output”) left align string.format ( “0,5, output”) right align Otherwise do math to concat 5 spaces with the result of the asterisk for loop. Do math to determine where to substring from string length. 
I agree. there are pros and cons. the thing is that its nice to abstract away things like nhibernate and entityframework. they are rarely (mostly never) swapped out...but says who? the abstractions are trivial to create and implement. **but with dapper** it's not as easy. its possible and there are libraries that give you a repository like API, but you loose a bit of benefits of using dapper in the first place (speed and writing SQL). so depends on what you're doing. in the end i would say that you should definitely have a entity specific store/repo, what API you use to get/save/update/delete the entities is up to you (using dapper or entity/nh directly or via abstraction (generic repo)). that's what's nice about interfaces/abstractions. ultimately the consumers of the entity specific store/repo doesn't care!
Books and classes are all well and good, but practice is essential. Pick a project, set a completion deadline for yourself, share your code when you finish, get feedback on it, use the feedback to improve your code. Repeat. It'll take some time, but you'll see definite improvement. Also, don't forget to contribute to StackOverflow when you're able to help others on their journey.
Repository patterns have their uses when interacting with the data store is complex. However, I personally believe EF Core with LINQ is a good enough repository in many situations, because it allows for unit of work, replacing the data store technology (mssql mysql, sqlite etc.). In my current project we moved away from having a repository on top of EF Core. It resulted in a lot of over-fetching and having to write a lot of specialized functions that were only used once, e.g: GetCases, GetCasesIncludingCustomer, GetCasesByName, GetNumberOfCasesForCustomer, CheckIfCustomerHaveCaseOlderThan etc. etc. This was definitely an example of repository pattern done wrong, but since it didn't provide us with anything of value we moved away from it and today use the Context directly. Complex and\\or often used LINQ filters are implemented as extension functions on IQueryable&lt;T&gt; or as Expressions, allowing us to chain multiple filters and having control of which fields to select, or if we only want to do a count or an any check. Example: `_context.Cases.WithCustomerAboveAge(18).AnyAsync();` `_context.Cases.Where(x =&gt; x.Customer.FirstName == "John").CreatedThisYear().CountAsync()` &amp;#x200B; A selection of unit-tests use a Context instance with the SQLite inmemory provider configured to throw on RelationalEventId.QueryClientEvaluationWarning. This allows us quickly pick up on LINQ that is unable to be translated into SQL. 
It's a good start, but this bothers me: &gt; Take a look at Rust example of applied single owner - single responsibility mechanism: Drop the pseudo-SOLID nonsense. It colors the whole piece as an ignorant blog post. 
Removed: Rule 4.
I generally agree, but the problem with patterns is some folks try to shoehorn everything into a pattern sometimes turning something simple into something more complex than it needs to be. &amp;#x200B; I find that following [SOLID](https://en.wikipedia.org/wiki/SOLID) with [YAGNI](https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it) at the back of your mind tends to be what seems to work best **for me** Along the lines of patterns: I'd recommend [Head First Design Patterns](https://smile.amazon.com/Head-First-Design-Patterns-Brain-Friendly/dp/0596007124/ref=sr_1_1?crid=2O6RMTNMO7L2&amp;keywords=head+first+design+patterns&amp;qid=1550862027&amp;s=gateway&amp;sprefix=head+first+d%2Caps%2C123&amp;sr=8-1)
Pluralsight has done wonders for me. 
Having a mentor was super helpful for me. Do you have anyone in your network that can help review your work? Someone you obv trust that writes good code. When you're learning new things, you develop blind spots and can't see the areas where you need to improve. It helps to have a trusted person point them out. I work at a new online coding school that's opening up later this year. If you want free coding classes, you can sign up to be a beta tester [here](https://everlive.io/?ref=re). 
Here is how I do it. //Read in the excel spreadsheet to a datatable value DataTable excel_datatable = read_xlsx_file_into_datatable(application_settings); //Read in the excel spreadsheet to a datatable value static DataTable read_xlsx_file_into_datatable(ApplicationSettingsClass input_CommandLineArgument_object) { //Check if the file exists, if it does not then exit and throw an error. if (!File.Exists(input_CommandLineArgument_object.file_path)) { Console.WriteLine("Error, the file path could not be found at: " + input_CommandLineArgument_object.file_path); Environment.Exit(8); } //Opening an existing Excel file worksheet ExcelWorksheet workSheet = open_excel_worksheet(input_CommandLineArgument_object.file_path, input_CommandLineArgument_object.worksheet_name); DataTable tbl = new DataTable(input_CommandLineArgument_object.worksheet_name); add_all_columns_to_datatable(tbl, workSheet); //Rename any columns if there were parameters to do so rename_column_headers_if_specified(tbl, input_CommandLineArgument_object.rename_column_string_list); //Loop through every row, then loop through every column to get each cell value add_rows_to_datatable(input_CommandLineArgument_object, tbl, workSheet); Console.WriteLine("Read in " + tbl.Rows.Count.ToString() + " rows from " + input_CommandLineArgument_object.file_path); return tbl; }
you don't need to write C# code for that, use xaml style trigger. 
 Thanks, that was a great suggestion! I [added the codetriage badge](https://github.com/cs-util-com/cscore#-contributing) now and created [a few issues](https://github.com/cs-util-com/cscore/issues)
Don’t use “magic numbers” like 8 and 45, declare them as constants with a descriptive name. Same for your strings and colours, if they are used in more than 1 place use consts for them too.
&gt; Unit testing portion is an interesting one. At first I thought it was overkill until I considered the reasons behind it. It can significantly help down the road when changes are made to the tested functions assuring things like the expected filtering or sort ordering has changed. This statement troubles me. If you unit testing in the sense that you are testing the "get stuff from database" unit, cool. If you mean unit testing in the "OMG! Dependencies! Panic, panic, panic" sense that leads to mocks then it's a serious problem that leads to useless tests that hide potentially serious problems. 
The word you are looking for is "cohesion". Too much separation is bad, too little is bad, but the right separation makes the code cohesive and a dream to worl with. 
&gt; best to have specific repos/stores for each entity That seems rather excessive and may lead to inefficient database usage because one call is spilt up into several. Then again, I'm against the idea of "entities" in the first place. I'd rather give the UI what it needs than just dump the table structure on it.
My thoughts on how repositories should be used: https://www.infoq.com/articles/repository-advanced
Here's a travis.yml that works on one of the C# .net Core Github projects I know of: language: csharp mono: none dotnet: 2.1.4 script: - dotnet restore - dotnet build - dotnet test src/test/Tests1.csproj - dotnet test src/test/Tests2.csproj (file paths of test projects have been changed to protect the innocent)
\&gt; smile.amazon.com wtf?
Off topic but, Amazon donates a portion of your purchase to a charity of your choice when you purchase through smile.amazon.com.
Practice with own projects that are beyond hello world. Find something you are interested in. Try to figure out problems on the way and stay on your Pluralsight way. They have many good videos for architecture and good programming. Don’t be shy and refactor your Programms without adding more functionality. Just to see where ideas take you. Like what will happen if soy use a repository pattern or what will it like to be if soy make it more functional style.... And read code from others. 
There are valid uses for the repository pattern. As others have said, having a generic repository abstraction around a dbcontext that is already acting as a repository implementation is not one of them. It's serving no purpose other than acting as a leaky, unnecessary abstraction in the name of "testability". There are much better ways to avoid having complicated LINQ statements everywhere in your code while also letting you use your ORM in a productive performant way than implementing a repository abstraction.
hmmm that is a good point about several db calls when they can be more efficiently retrieved at the same time. but i don't think there's any way around that without bringing in database related stuff into your domain.
100% this. there's not really a magic list or anything (although you should follow the SOLID principles when you can), you just have to keep writing shit code and then when you're trying to maintain it and you're asking yourself "why the actual fuck did i write this fucking bullshit i should just fucking quit and get a job in retail this whole career was a mistake", you're learning what it is you need to work on next time you start a project. experience &gt; anything
Hey! First I want to thank you for the general code sample - i got it to work trying to solve similar problem. What I did was just add .ToList(); after the call to GetAllWordRanges() and it is fixed! Why? There is a YIELD RETURN - if you start marking text while still searching for it, it gets messed up, as the RitchTextBoxe's underlaying text (containing markups and stuff) keeps changing while you continue to use old regex output match coordinates. &amp;#x200B; &amp;#x200B;
Alter between building projects and expanding your knowledge through your preferred method of learning. Writing good code will only come with consistent practice. There is no magic trick that you are missing. Just consistency and persistence.
I follow the S and D really closely, but I find the others aren't as useful or just make too much of a hassle for you without adding anything of value.
But isn't that the whole point of having a data access layer? If you don't have a DAL that returns what the UI needs, then the UI needs to stitch it back together. 
While you have abstracted the type of database the problem with that though is all you've done is replace a direct query with a LINQ equivalent, you're data access isn't really abstracted and you still have to create a database to test. I've done this and found it to be a sure fire way to have data access here there and everywhere. I've been using the command pattern (via MediatR) for a few months now and it's given me a happy middle ground. The real problem is unfortunately just the nature of C# where you can end up with a class like public GetUserQueryHandler : IRequestHandler&lt;GetUserQuery, User&gt; { private readonly ExampleConext _contex; public GetUserQueryHandler(ExampleContext context) { _context = context; } public Task&lt;User&gt; Handle(GetUserQuery query, CancellationToken cancellationToken) { return _context.Users.SingleAsync(u =&gt; u.Id = query.Id); } } which is mostly boilerplate. I consider it worthwhile boilerplate but it can get old really quickly and makes a functional style or language very attractive... 
You can make an automapper profile and manually specify the mapping
So true...
What do you mean when you say OrderableItem? A collection where the order matters? An item that can be sorted? Or do you mean an item that can be ordered (i.e. purchased)?
If you make it e.Handled = e.Handled || ... it's equivalent unless there's setter logic. The way you have it now it could switch from true to false while his is always true once first true
Do the simplest thing that works first, then write tests that prove it works, then you can fiddle with it and still prove it works (or more commonly fails). 
As part of the mentioned rewrite we actually transitioned to a CQRS pattern with MediatR as well. I'm very happy with it so far, specially the MediatR pipeline which allows us to add cross cutting business logic++ across multiple requests (pre- and/or post-business validation rules etc.). Our handlers uses the Context directly, similarly to your example. 
bah! you don't spend all of your income on games?! /s
&gt; except we do not return the Entity as a response. Over simplified Example because reddit is a terrible IDE :) Made that mistake too, it sounds nice until you run into one of the reasons not to do this and you wish you had made it a view model in the first place...
seriously? the liskov substitution principal is super important, especially as it relates to testing. you should always design against an abstract (interface) concept rather than concrete implementation. 
I downloaded ILSpy and started looking at the code of some of my favorite video games (Wasteland 2, Rust, Stardew Valley) and pored over the code and googled the random stuff I saw in there until it made sense. Now when I'm making something some of that comes back to me as potential solutions. I also have one of those language encyclopedias and just pick it up and read through it from time to time.
Few things will encourage you to improve your sloppy code than having to fix it or add features six months after you've written it.
&gt;the problem with patterns is some folks try to shoehorn everything into a pattern sometimes turning something simple into something more complex than it needs to be. I actually once saw some code that used the factory pattern to return a singleton. 
Practice. Work on projects. Do the advent of code. Great small tasks with problemsolving
And "Clean Code" 
That's not exactly true. When under test you can use the in memory provider which will use an in memory test database rather than create a DB, it's largely unnoticeable.
Clean code Clean architecture Gang of four Refactor by Martin fowler Domain driven design Those are all books that should be read by everyone. I've read two of them and my code has drastically changed for the better Also look up design patterns to use in your code
Code with as much validation as possible. My uni lecturer (in C) said he always compiled with "-ansi -Wall -pedantic" because it pushes good practice, and saves time in the long run because you encounter less bugs. In C#, code with roslynator or resharper (or both). Keep compiler warning at zero. Keep a green tick at the top of the document. It feels slower at first, but you'll be writing better code in no time.
Faster yes, but you're still creating and populating a 'database' in order to run your tests which i'm personally not fond of unless i'm specifically testing my query in which case i will use the in memory db.
Microsoft hasn't come out and flat out explicitly said it, but it is clear that Core is the future of .Net &gt; Is Core anywhere close to being able to replicate the functionality of Framework? With Core 3.0 (with WPF and WinForm support) Core is pretty close to being feature complete for replacing the classic framework. Some of the Win32 specific functionality and WCF are still missing, but the gap is closing with each release. 
&gt; Is Core anywhere close to being able to replicate the functionality of Framework? Depends on your usecase. If you're writing console app or asp.net - then yes. GUI - in 3.0 it will support WPF/WinForms. Also UWP apps already built on top of Core. &gt; requires use of the Office COM interop It definitely won't be cross platform but I don't see why it shouldn't work on Core on Windows. Building a sample app that calls APIs you need to test this should be trivial.
Github and bitbucket have free private repos now for personal or very small team projects, iirc.
&gt;Microsoft hasn't come out and flat out explicitly said it, but it is clear that Core is the future of .Net My understanding is that C# 8 will not be developed for Framework, which is as clear a sign as any. &gt;With Core 3.0 (with WPF and WinForm support) Core is pretty close to being feature complete for replacing the classic framework. Gothca, my Google senses may have been shitty for a bit, this is relieving: &gt;[Starting with .NET Core 3.0 Preview 1, you can build Windows desktop applications using WPF and Windows Forms.](https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-core-3-0) 
One day I stopped using the pattern to see if I actually needed it. About 7 years later, I still don’t. Most data access APIs are just fine to use directly. EF6, NHibernate, Dapper, PetaPoco, MongoDB, CosmosDB...all these are just fine to use directly. Don’t abstract them. Waste of time and actually a net negative. Unit test your domain model, if you have one. Integration test anything that uses data access APIs against a local test database, which is 1000x more reliable than mocks.
&gt; Is there support for the Office COM Interops on Core, and, if not, is there a plan for them to do so? Coming with .NET Core 3.0 (as well as WPF and WinForms) https://twitter.com/runfaster2000/status/1053704090671185920
Excel is my major use case. Anxiety out the window. Thank you.
If the generic inlines then it is faster than the interface; if you wrap the class in a struct then the generic faster than the interface even if it doesn't inline e.g. class T1 : Box { public int Prop1{get;set;} public int Prop2{get;set;} } struct S1 : Box { private T1 _t1; public S1(T1 t1) =&gt; _t1 = t1; public int Prop1 {get =&gt; _t1.Prop1; set =&gt; _t1.Prop1 = value;} public int Prop2 {get =&gt; _t1.Prop2; set =&gt; _t1.Prop2 = value;} } void DoWhatever&lt;T&gt;(T obj) where T: Box { obj.Prop1 = Anything; obj.Prop2 = Whatever; } // ... DoWhatever(new S1(t1)); If the generic is called with a class; and doesn't inline, then its a little slower than the interface (as its an interface call + a little generic overhead)
Switch to GraphQL
!false
Curious. I do excel work at my very large well known company but havent used com interop in years. What do you do that you cant use open xml for? 
VSTO document level projects that integrate actuarial models. I need to be able to track events that happen while the user is interacting with the workbook.
Does anyone know how sound/music capability is going to be in .NET core? I'm making a text-adventure console app game and I'm relying on SoundPlayer (using System.Media) and MediaPlayer (using System.Windows.Media) to play music and sounds, respectively. AFAIK those are not available in .NET Core. Is there any alternative or is there plans to make an alternative? I'd love to switch to Core and make my game multi-platform but without sound it's not worth it.
I know what you're doing, why can't updating the line numbers etc. be done manually in a stored procedure with a recursive CTE to handle the recursion? I'd pass this off to your DBA. I've done something like this before (as in, I was supposed to do this until I convinced the DBA to handle in return for not attempting to make a hacky solution myself and destroy his database in the process)
[NAudio](https://github.com/naudio/NAudio) has netcore support in preview.
For cross-platform you'd be looking at bindings around a library like OpenAL, whatever the flavour of .NET you're using.
Wow, that looks great! I haven't seen that before thanks for the heads up, it looks like exactly what I need.
.Net Framework is done when they're done with 4.8. .Net Core and .Net Standard are the future. It's moving towards cross-platform development more. You should put most of your business logic into .Net Standard Libraries, then use those libraries in you .Net Core applications. 
My understanding of C# 8 is that they're done with .NetFramework 4.8. Obviously, C# will continue to evolve, but Core will be what we use. 
There is a library handling that already that can be registered with the Automapper configuration. https://github.com/AutoMapper/AutoMapper.Collection
I think .Net is in danger in the long term since the Javascript revolution with Node in the backend etc now you can use JS to code everything, you don't need C# anymore and the vast majority of dev are going the open source way with the JS ecosystem, look at all the innovation on the frontend etc and it will keep improving JS is a terrible language and it doesn't hold a candle to C#, C++, Java etc etc but it doesn't matter what our personal feelings are, only things that matter is the market laws and the demand.. MS did a amazing job with C# and Powershell, but the market of JS is way bigger, there is a lot more job opportunity, frameworks, innovations, tools, api etc World is moving to JS and Mobile
Funny, around me I see only Java and .NET, with JavaScript being left alone for the browser dynamic pages.
Here you go: https://devblogs.microsoft.com/dotnet/update-on-net-core-3-0-and-net-framework-4-8/
They actually never said that. That rumor stemmed from a blog post that said 4.8 is feature complete. People took that as ".net Framework is all done". Then some other guy wrote a blog using that blog as a reference stating that 4.8 was it, like it was fact. Everyone on Reddit ate it up. Here's the actual statement made by Microsoft a month after the original blog post: https://devblogs.microsoft.com/dotnet/update-on-net-core-3-0-and-net-framework-4-8/
JavaScript cannot replace anything related to hardware and peripheral space, especially when it comes to actual security and things like PC compliance. You can't securely write middleware in JavaScript, unless you don't care if your users can just read your source code.
Ok I see. I didn't first see that stuff on reddit. I think it actually popped up on my Google feed on my phone. You're right though. They never officially said that it would be the last here, just that it's developed slower to remain compatible.
Use the right tool for the right job. If you need any of rusts concepts, use rust. It doesnt make sense trying to get borrowing and ownership in c#. Rust has the tools to have borrws checked. You are gonna confuse the shit out of people who is gonna use / extend your code. But i like Option&lt;T&gt;. 
How else would you test your data layer, then?
wouldnt it be easier to use excel libraries which already support core through a package? or you are using some very advanced features?
Right now, the .NET Framework and .NET Core are different things., though they see both implementations of the same standard. In the future, the Windows .NET Framework will be Core + some Windows specific stuff like the Registry namespace. 
Bluntly.. The question makes no sense and I don't think you even know what you need. You rolled back a server image and lost: - Data from a database (and schema changes?) - Some application updates? - Some code which was only stored on that server? These are all different problems, mostly unrelated to git etc which people are suggesting.
We are making games with Unity 3D - we have to use C# and we need more code safety, so we can use some Rust concepts if they are supported by C#.
The future of .net core and Microsoft is Linux. .NET framework is going to be deprecated in the next 5 years. They started testing a new version of Windows that will be released in 2020. Smart money says it's going to be based on the Linux kernel. Microsoft giving up on IE and utilizing chromium speaks toward them willing to change course. WSL shows they are integrating the Linux kernel more and more. 
All controls have a Tag property that can be used to store data. If you want to assign a value to a control using that may be your best bet.
&gt; My understanding is that C# 8 will not be developed for Framework **Some** C# 8.0 features won't be available when you target .NET or an older version of .NET Standard, because those features will require runtime features that are not available in those target frameworks. The remaining features can be used just fine.
This is untrue. You can write even ring 0 kernel drivers in JavaScript (which you cannot in C# or Java (no C++ interop) because Node is inherently C++ and has excellent interop with C++ libraries.
I have to do it using a separate class since it's a requirement for the project.
&gt; They actually never said that. No, but years before they officially said Silverlight was dead, everyone could see that coming. While .NET Framework might not be dead yet, it's clear that Microsoft is all-in on .NET Core, and .NET Framework is being put out to pasture. We will probably get a few more point releases to address issues for the biggest customers and internal Microsoft teams, but aside from that no more feature development from here on. 
I.e. you need a lookup table
Not the answer, but if you get stuck you could use excels VLOOKUP function for the lookup function. And then C# could just write a value to search in one dedicated cell and read the response from another.
So what happened was the serverc's oracle drivers got screwed up and i rolled back the server to an image two days prior. Which fixed that issues. But i lost data changes in a table. And updates made to an application. 
Alright! Easy stuff. 1. This is why you need off-site database backups. Back up your full database daily and move it to another machine. 2. If you can't tolerate that much potential data loss then look at transaction log backups every 30 mins, hour.. Whatever needed. 3. If it is your application (your code) then start using git. Just go learn how to use github for now. 4.Also if it's your database... https://www.c-sharpcorner.com/article/create-sql-server-database-project-with-visual-studio/ &lt;- Learn to manage database schemas like this.
Sweet. Thanks for the info. This is what i needed. 
They are still missing a roadmap/ETA for C++/CLI. We can't migrate until that is solved.
It may be easier for read operations to get the full graph, but for an update do a separate get of items all at the same level and update those separately. Use a transaction scope if you need to bundle the operations. All that said, I would actually start by considering the ease/value you get vs the trouble of using a schema like you described, and see if there isn't a way to make it a little more straightforward. Maybe something like a separate 'sub-items' entity that represents just the mapping. I don't really know your business case though, so don't put too much stock in that. 
- Is `Checked` a `bool` or a `Nullable&lt;bool&gt;`? If it is a `bool`, then drop the `== true` from the comparisons, it's not needed. - Don't have the pattern `if (condition) { value = true; } else { value = false; }`. The condition already results to a `bool` value, so you can just assign that directly: `value = condition;`. - The code is always the same. It checks the same variables and modifies the same control. Just re-use the same event handler for all your events.
Hook the change events up to a single method. Do the check there. It doesn't matter which button caused the change - just check that there's a check in each group. Send the whole form and I'll show you exactly what I mean. Actually, AngularBeginner already said this. AngularBeginner speaks truth.
I know it's geared for much more in-depth stuff, but would you not be better off using [Monogame](http://www.monogame.net/) for your project?
&gt;The whole point all along was for JIT to be cross platform, People say that a lot, but it doesn't make a ton of sense. Consider how Microsoft JIT didn't support mac or linux for years, while AOT compiled C code has run all over the universe. &gt;Is Core anywhere close to being able to replicate the functionality of Framework? Yes 
The latter.
Yes, and i have one but i have not been able to get the related entity mapping to work right. It seems that automapper wipes out the ef tracked collection and replaces it, which makes ef think its an add not an update.
It could be but that means we then have a dependency on a dba (not ideal since our dbas take weeks to respond to critical tickets) and it circumvents the idea that the service owns its data (as the database is making changes independent of the service). This would be low on my list of ways to fix it.
Thanks, i will look at it.
This is one of the solutions i have considered. The reason we need to know the relationships is so we can update it as a group. Building that relationship in the service by adapting between the db storage and the front end representation is a good idea. I will explore it.
In regards to "automapper wipes out ef tracked collection", have you tried to init empty collection in a ctor and in automapper config set opt.UseDestinationValue() for that particular member?
In my understanding, some variant of Framework will be needed as long as .NET is going to be used for Windows platform development. It will be an extension of Core. I don't think they will do a cross platform UI framework. Many attempts at this have failed.
First, Core is still 3-5 years ahead of Net Framework (mainly about UI but also a lot of features that are missing), so why do you want to jump over Core so early? **Linux a big reason** but other that, there is not a reason to switch right now (Microservice? because net framework can't do that?). And about Xamarin, Xamarin uses "Mono", not Net Framework or Core. I dislike Xamarin so much (I purchased Xamarin years ago and it never worked as expected). However, it's getting a lot of traction. If you want to work on UI, then you must pay attention to the vendor of components (Devexpress, Telerik, infragistics and ComponentOne) and if they support your framework (currently the support of Core UI is slim). 
Does it compile? Does it get you the expected results? 
There is not a one solution fits all. So, there is not a unique way to program correctly. It depends on the case and needs. &gt; I'm writing; more generalized and abstracted. Abstracting the code has a cost. For example, creating an Interface for each class usually, it's part of cargo-cult of SOLID, it has no purpose. Instead, using an Interface for many classes has a reason to be. We create an Interface because it has meaning and usability. 
Tho the in-memory database can still behave plentyful different from your actual database. It's by far no guarantee that it will work on the actual database.
what are you struggling with? since you have a working example with bool, you can replace the bool with any other data type string, datetime, int etc
Automapper map function has an overload for an existing object to map to. If that doesn't help, post a code sample
&gt;the abstractions are trivial to create and implement. creating loosely coupled components and libraries should always be a priority. But very often they're implemented poorly. I've seen so often that the IQueryable instance of EF is just passed through the repository, and then EF features like projections on database side are still being used. Then you didn't created loosely coupled components you just have important features hidden away.
Hmm, does the client machine also have that odbc connection?
So the client machine did have oracle installed. I solved this using the oracle manage nuget. The tsn name file is built into the application. 
.net core is the open source version and moves faster. .net framework of the "Enterprise" version, will move slower and implement the best things of. Net core. Almost no bugs are allowed. Patch Tuesdays for updates .net core is cross-platform .net Framework is Windows only Both will continue to exist and are a safe bet
Dapper supports this feature and looks similar to RepoDb. Maybe you can see how they did it and adapt it to RepoDb or your own extension method. https://github.com/StackExchange/Dapper#multiple-results
A lot of this seems like stuff that you could handle in your middleware. This article contains an example of creating centralized error handling and request validation via middleware: https://www.strathweb.com/2018/07/centralized-exception-handling-and-request-validation-in-asp-net-core/
Very clear answer by Microsoft at near future but I still think .Net Core is future. 
I have not. I will see if i can get that working, thanks.
That is what we are doing. I will see about getting a minimal example worked up. Ty
No, you can't write a driver using JavaScript. And C# and Java do have C/C++ interop. Explain how you would have client side JavaScript with nodeJS that would prevent a user from seeing the source code buy just literally opening a text file. At this point I'm not sure if you're trolling or just very confused. 
The 'ExecuteQueryMultiple' seems to work like Dapper as the process of retrieving data is through SQL Statement, and must have a proper management of DbDataReader object. The 'QueryMultiple' here seems to be unique as it is truly a mapper method like EF and NH.
Yes, it is.
First off, thank you for asking for help to get better and being up front that this is for class. One technique I would use is to put all the buttons in a list, then write a function to check if the Finish button should be enabled and inside that loop over the list and if one is enabled then return true. That being said just putting the check into a single function and reusing it would go a long way, I doubt I would use a list for just 4 buttons normally. 
&gt; there doesn't seem to be anything here 
One thing you'll want to keep in mind while coding is this: If you see the same code coming up repeatedly, you should usually consolidate. That's what makes methods so handy. Instead of calling the same set of if statements over and over, you can dump the logic into a method and call the same method all the time instead. That way, if anything is found to be wrong with it later, you're cleaning up one little method instead of several different copy pastes of it. So let's examine how you can consolidate. First, the same thing happens no matter which check box gets checked. There's literally no difference. So, here's the super low hanging fruit. If you need to evaluate the same checkboxes after a check is changed, you can wire two checkboxes up to the same CheckChanged event. For example, your rad1Bath and rad1AndHalfBath can both just reference rad1Bath_CheckChanged. That will work and afaik, it's perfectly fine coding practice. But let's dial it back and look at this from a higher perspective. In almost every single one of these cases, you are trying to do the same thing. You're taking a set of booleans and trying to find if any single one of them comes up true. If just one comes up true, you want to provide a result of true, otherwise false. So if you wrote a method into which you could tell it to evaluate any set of booleans that you throw at it, returning true only if any of them are true, you'd drastically clean up that code. Allow me to present private bool anyOfTheseAreTrue(bool[] boolsToCheck) { foreach(bool boolToCheck in boolsToCheck) { if(boolToCheck) { return true; } } return false; } Now, we need to set up the two different sets of booleans that I noticed you passed. It seems you only needed two sets. We are going to set them up as fields within the class (they will not be declared within the scope of methods). bool[] radRoomsChecked = new bool[] { rad1Room.Checked, rad2Room.Checked, rad3Room.Checked, rad4Room.Checked, }; bool[] radBathsChecked = new bool[] { rad1Bath.Checked, rad1AndHalfBath.Checked, rad2Bath.Checked, rad2AndHalfBath.Checked, }; And now to redesign the two CheckChanged events that I believe you will be needing. private void radRooms_CheckChanged(object sender, EventArgs e) { bool enableValue = false; if(anyOfTheseAreTrue(radRoomsChecked)) { enableValue = true; } btnBuy.Enabled = enable; } private void radRooms_CheckChanged(object sender, EventArgs e) { bool enableValue = false; if (anyOfTheseAreTrue(radBathsChecked)) { enableValue = true; } btnBuy.Enabled = enable; } Technically, I still have a little bit of repeated code there, but I opted to keep as opposed to complicating anyOfTheseAreTrue(), or vs having another layer of methods. But you could do that. So here's the end result if you'd like to see it structured. Note the commented out anyOfTheseAreTrue() method. I actually prefer it, but I didn't want to assume that you are using Linq. It's pretty clean though.
If you’re asking, there’s documentation online. Here isn’t the place. 
By the way stackoverflow is where you should be asking that question. There you would have found the answer already. 
1. You only need one function. You can point the check changed event from multiple controls to a single handler. 2. No ifs needed: btnBuy.Enabled = rad1room.Checked || rad2rooms.Checked || rad3rooms.Checked || rad4Rooms.Checked; 
&gt; Is Core anywhere close to being able to replicate the functionality of Framework? As many have pointed out, the UI stuff isn't there yet (coming in 3.0), but a great deal has already been restored via the Windows Compatibility Pack. https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/
I receive the following error message: /usr/share/dotnet/sdk/2.1.4/Microsoft.Common.CurrentVersion.targets(1124,5): error MSB3644: The reference assemblies for framework ".NETFramework,Version=v3.5" were not found. To resolve this, install the SDK or Targeting Pack for this framework version or retarget your application to a version of the framework for which you have the SDK or Targeting Pack installed. Note that assemblies will be resolved from the Global Assembly Cache (GAC) and will be used in place of reference assemblies. Therefore your assembly may not be correctly targeted for the framework you intend. [/home/travis/build/Beakerboy/NaturalDocs/CLI/CLI.csproj]
I'm on my Smartphone but you can probably search for the last used row and make a for loop and search in all cells? var lastRow = sheet.Cells.SpecialCells(Excel.XlCellType.xlCellTypeLastCell, Type.Missing).Row; for(int i = 0; i&lt; lastRow; i++) { If(text == excel.readcells(i,0)) { Return excel.readcells(i,1).tostring(); Break; } }
Ah. Makes sense. I kinda abandoned this project, but thanks for your help anyway though :)
There is no need for that in driver space. You can write most of them in any language including JS. 
*Wooo* It's your **9th Cakeday** ChaosPandion! ^(hug)
Started off rude, turned out to be a cool dude.
Removed: Rule 7.
Cool, I didn't think they'll go that far.
Hahaha. Well i can see how my question was unclear. This is my favorite sub on reddit. Im self taught software dev. Wouldnt be where i am if not for this sub..
Yeah, blunt people are often good teachers, haha
Was the MTA for Software Development Fundamentals difficult?
I don't think your code will work. You keep the value of each checkbox on the construction of your class. Your list will always contain the initial value of the Checked properties, which would probably be always false. Also, you don't need to do this: bool enableValue = false; if(anyOfTheseAreTrue(radRoomsChecked)) { enableValue = true; } When you can simply directly assign the value to your var: bool enableValue = anyOfTheseAreTrue(radRoomsChecked)); Beside that, you could also use the System.Linq namespace and ditch your method and variable for this: btnBuy.Enabled = radRoomsChecked.Any(); 
Not really. It was quite some time ago tho. 
Oops. When I wrote it, it was a console app, so I never got to integrate it with a UI and test. I meant to write it like this, where it was supposed to be a getter. I edited my original post bool[] radRoomsChecked =&gt; new bool[] { rad1Room.Checked, rad2Room.Checked, rad3Room.Checked, rad4Room.Checked, }; 
I am fairly active over there but have found .net core questions tend to have low response rates because of its relative newness
This an only this.
I would also suggest you to change the casing of your properties to "PascalCase". To be in-line with the best practices of C#.
Has that changed? I understood the convention to be that if it's private, it is okay to use camelCase. Writing backing fields for classes that implement INotifyPropertyChanged, I've subscribed to this and it seems to be normal.
&gt; Unlike other members, properties should be given noun phrase or adjective names. That is because a property refers to data, and the name of the property reflects that. PascalCasing is always used for property names. https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/names-of-type-members#names-of-properties
Is there a reason for doing this via COM? (i.e., your code is basically talking to the Excel application, which then performs the action and then returns the value to your code) In this kind of use-case, COM is going to be exceptionally slow (there's a ton of additional overhead because you're essentially adding another layer on top of the Excel application), and I assume the intended use case is going to have significantly more rows and data in it. A much more efficient way of working with things like Excel spreadsheet files through C# is by working with the file and the data *directly* instead of manipulating a separate application. You can do this using the [DocumentFormat.OpenXml](https://www.nuget.org/packages/DocumentFormat.OpenXml/) SDK, and there are other libraries which simplify the process of dealing with Excel spreadsheets, specifically (e.g., [ClosedXML](https://www.nuget.org/packages/ClosedXML/), [ExcelDataReader](https://www.nuget.org/packages/ExcelDataReader/)). If you *have* to work through Excel, you'll definitely want to use one of the built-in functions like VLOOKUP, if you can, or minimize the number of times you are sending commands to Excel (e.g., get the values of all cells in data range at once, then iterate through the data in the C# code).
Thanks man. Did not know that one.
Whole video sounds like the person is whispering in a phone booth/closet. Even at maxx on the PC and max on YT it's a whisper.
I have no experience with that specific course, but with some other Microsoft ones. In my country at least, having 2-3 such certificates is worth more then a high school diploma. So go for it.
No. All of that stuff is largely a waste of time and money. I don’t know anyone in the industry who places any kind of importance on those certs. Frankly, I would be a bit skeptical if I was interviewing anyone who *did* have those certs because it feels like a poor substitute for experience. If you want experience or something that would build trust with a client/company, put a lot of effort into an app hosted publicly on github or bitbucket.
Github is a great place for that. What I would recommend is find a project that you have some interest in, clone the project and start working through the code. Send a message to the owner and ask how you might help. They might have an open bugs list or they might want you to try improving a piece of existing code or add a small feature.
There are hundreds of thousands of C# projects on github. Pick one that interests you and go to the issue list and fix a bug. None of us know what interests you and what matches your skill level Also try: [https://up-for-grabs.net/#/](https://up-for-grabs.net/#/)
The Umbraco CMS project is releasing version 8.0 on Tuesday, a big upgrade. They're open source and constantly reviewing community-submitted pull requests. It's [worth checking out](https://github.com/umbraco/Umbraco-CMS/blob/dev-v7/.github/CONTRIBUTING.md), both as a CMS and a project to support.
Hey I'm in the same situation! Took the same mta exam about 2 years ago and currently preparing for 70-483. 
These certs are not designed to guarantee expert level knowledge. Taken in conjunction with work experience, they can demonstrate a fundamental understanding of the concepts being measured though, and that has value. &gt; Frankly, I would be a bit skeptical if I was interviewing anyone who did have those certs because it feels like a poor substitute for experience I would NEVER discount someone's effort to learn and better themselves. Yikes, gatekeeping in the dev culture is real.
Yeah, the third party library support isnt there yet. Haven't been able to find an open source replacement for pdfsharp to generate PDFs 
How about... static bool AnyOfTheseAreTrue(params bool[] bools) { return bools.Any(b =&gt; b); }
I have this qualification. Literally no one cares if you have it but it does make you learn elements of .Net you wouldn’t otherwise touch. You could probably achieve a relevant level of knowledge by reviewing the curriculum, discarding the stuff that is unlikely to be useful and saving the cost of the exam.
Few things here: First off, I have no illusions that it guarantees expertise. I actually don’t think it guarantees *anything.* If they have a cert plus work experience, I would only care about the experience. And I would discount it because it’s a *poor investment*. If the certs guaranteed a certain level of proficiency, then that would be a different story. But it doesn’t. And they are costly. Now, replace the certs with highly-esteemed programming books or trainings and now we’re talking. That’s what the industry values because they work and show that you’re trying to better yourself in a *smart and effective* manner. You can call it gate keeping if you want but I’m making these arguments based on experience.
You can't write a driver in JS. Kernel doesn't have some built in JS engine. I write drivers for embedded Linux systems.
I just took this exam, it's relatively easy to pass - read the book and find some dumps of past questions online. I'd say it doesn't reflect your actual ability as a software developer because it doesn't test your understanding as opposed to recalling basic definitions from a textbook. But it will help get you past recruiters looking for some form of qualification.
How old are you? I was thinking that it will matter when I apply to university in England. 
This is is not an issue with dotnet core, it's an issue with how ORMs work. The way you search is the key to finding the right answer. 
As a senior developer with nearly 25 years in the industry, I disagree. Your assumptions about the certs are ridiculous. While I wouldn't hire someone based solely on certifications (unless it was for an entry level dev position), I certainly wouldn't hold it against them. If I had 2 identical candidates I'd take the certified candidate 10/10, because it still does show competence in the subject, effort, and ambition. &gt; If you were hiring someone and they got a $5,000 certification in business through Trump University, you wouldn’t hold that against them? No, I wouldn't, especially if they had the experience I'm looking for. Again, someone working to better themselves is not a bad thing. Is it their fault they were defrauded by a fraudster? You could argue they should have known better, sure, but I still wouldn't fault someone for self improvement. Additionally, your point is really moot since MS certifications are not a fraudulent scam like TU.
It doesn't matter for jobs. Can't speak to university.
Well, we clearly have two different outlooks on this and can agree to disagree. Obviously I don’t think someone trying to better themselves is bad, I mean that’s exactly what I’d be looking for in an engineer, but I want someone who is efficient with their time and improvement. That’s how I’d want them to do their work - efficiently.
Yeah, actions speak louder than words. Every once in a while, Microsoft will pretend nothing is wrong, and then slap everyone who believed them. XNA, Silverlight, UWP(?). I wonder what the 'end' of .net Framework means for Unity and Xamarin.
Man, I'd never, ever want to work with/for someone like you. You appear to be the stereotypical old guard developer. A poison to the profession. You simply, clearly don't understand that people take different paths.
A poison to the profession because I think someone pursuing a worthless cert is not a good idea? Good lord, get off whatever high horse you rode in on. I kept this fairly impersonal but if you want to throw barbs then I can tell you what I think of every “career senior developer” I’ve worked with and we can have a great time.
I have multiple certs in the dev path (due to company requirements) but as some others have mentioned before it's probably more useful for learning about aspects of C# you might not have worked with yet than actually any help when applying for a job later on. The exam guide e-book is relatively thorough but nothing beats experience and a list of previous projects. 
I understand that, but do you think it would be useful for applying at a good college? (In England, specifically) 
Awesome! When I used to make sites in WordPress or Joomla I often felt the need to know the ins and outs of the CMS in order to troubleshoot my sites better or to write an extension tailored to my needs but I've always hated PHP so I never found the willpower to study it so I'll definitely contribute to Umbraco since it seems to be not only a way to improve my skills but even to learn an instrument that can benefit me in many ways.
&gt; A poison to the profession because I think someone pursuing a worthless cert is not a good idea? No, you're a poison to the profession because you think that someone who has one of these certs has shown some sort of undesirable characteristic. Just because *YOU* (foolishly) think it's worthless does not make it fact.
Right, that’s why I backed it up with reasons in my other comments. It’s not an efficient use of time. It’s not like I just said it’s my way or the highway with no thought behind it.
Sorry but I really don't know about that since I haven't studied in England. Where I'm from some colleges may give a bit of extra credit for certifications and others don't care about them at all. 
Thanks for the site! I decided to contribute to Umbraco for the reason that I've written on the comments of this post but if I decide to vary more my projects I'll definitely use it, seems a great place to look for projects.
&gt; It’s not an efficient use of time or money. It’s not like I just said it’s my way or the highway with no thought behind it. You are saying exactly that. Because YOU believe it's an inefficient use of time and money, does not make it a fact. &gt; Look man, I know your kind. We are not gonna agree or meet halfway. Just accept it, no need to call me a “poison to the profession” because we disagree. Grow up. Nah, I'm calling you out here because you're unreasonable. I know your type. Been in the industry long enough to know your type, and it is poisonous to the profession, 100%.
I’m mentoring a student now and I was wondering if there are exams for c# I can download to test their absorption of the material. I’m using “ C# in a Nutshell” as our text. I’m having them review up to chapter 7. Also do you know of any place I could get flash card material? Like a basic vocabulary and definitions list.
So for you to write such a detailed post, does that mean you teach coding and software skills?
Ok so I’m not allowed to have an opinion here (chasing an MS cert is a negative) but you are (chasing it shows ambition even if it’s misplaced)? I never called it a fact and I even said that we both disagree and that’s fine. I’m not sure what you want me to do, agree with you suddenly because my argument is based on opinion and yours is also based on opinion? I know what type you’re thinking of and I’m actually not that type. You would most likely be a bit annoyed working with me because I push back in practical areas and push for things I believe in but I’m not going to code golf your PR and mark it as Needs Work. I’m also not jumping on every shiny new piece of tech. I have high standards for people I work with, I wouldn’t hire you but I wouldn’t hate working with you.
Js code ends up as C++ code, its in same app domain.
Hey, you're welcome to your opinion, never said you couldn't have it. But you're also presumably a big boy/girl, and are hopefully aware that broadcasting your opinion subjects you to criticism. Honestly, I really don't want you to do anything. I recognize that your type is not capable of introspection. You will never understand why your viewpoint is poisonous, and I'm not here to make you change your perspective. My goal here is to make sure that other developers who may read this don't stop bettering themselves because of gatekeepers like yourself. 
If he’s writing excel plugins, the only way to interact with it is through the COM api. Even if you use a library that wraps it, it still uses the COM api. If he’s just reading excel files, most libraries can’t read all forms of excel. But that is more easily done using ODBC to read the file. I dunno if there is a odbc wrapper that doesn’t depend on COM though. 
Uhhh my argument was that they’re not bettering themselves *efficiently* and gave clear examples of more proven routes. I think you think you’re arguing against something I don’t believe?
Really, **please** don't write code like this... There's absolutely **no** need for the arrays. Not only you constantly produce garbage, you also have an unstable property that returns different values each time it's accessed. `property == property` should never return `false`.
&gt; Core is still 3-5 years ahead of Net Framework I think you meant to say "behind".
Regarding your COM interop requirements, I get it. I'm kinda stuck in the same boat with one of my clients. But [Microsoft wrote a pretty extensive help article discouraging server-side automation of Office](https://support.microsoft.com/en-us/help/257757/considerations-for-server-side-automation-of-office), so I think slowly working your way off that dependency is something worth considering for someone in your position who relies heavily on it.
&gt; my argument was that they’re not bettering themselves efficiently Then you are stating that the energy they spent to better themselves is a negative in your eyes. This is the problem. Your original statement is accurate that it's a poor substitute for experience, and I wouldn't argue it. It isn't meant to be a substitute for experience. But to consider it a negative, a flag to be skeptical of an otherwise qualified candidate is where you have a problem. How arrogant, and self-important you are to look negatively upon a person who achieved something positive, no matter how insignificant in your eyes. 
Good lord.
They can be important for employers though. Having a certain number of certified employees is required to be Microsoft partner etc.
&gt; To every budding developer reading this: you are completely fine taking the MS exams, but you are better served by reading highly-rated programming books and doing trainings or real life work. If you want to be the best you can be, don’t waste time with certs. Do things that actually make you good. To every budding developer reading this: If you want to get certs, don't let developers like /u/lkh23o874249plhkjhdl hold you back. They don't understand that you can go get a cert AND have good study habits, quality experience, and read every book in existence. If someone judges you negatively for having a cert, you don't want to work with/for them.
I don't understand. It's supposed to get the updated value every time it is accessed. I'm open to criticism for the sake of learning, but if you just call it garbage and leave it at that, I don't know if you're someone with just strong opinions or if there is a best practice and study behind it that is persuasive and more empirical in nature.
To every budding developer reading this, ignore me. Take whatever languid and winding road you want to improve. Or take no road at all, and be a career senior developer making the same money you did at year 5 of your career just looking forward to the day you retire.
lmao if you only knew.
I think MS does a good job with their cert tracks. You can learn valuable information. The certs can have some value if it is "up to date" with your experience and position. I.e. basic C# may not matter too much if you have 5+ years experience, you should shoot for Azure or AWS or something. 
Please note that the code is not always the same. The same checkboxes are not being checked in each event. There are two variations.
Thanks, i needed a laugh !
&gt; but if you just call it garbage I didn't call the code garbage. I meant that it produces garbage. The term "garbage" is often used for allocated objects that will be quickly thrown away again. Every time you access the `radRoomsChecked` or the `radBathsChecked` property you create a new array. &gt; Would you suggest, instead of the arrays, a method that gets the values from the checkboxes and returns a list, collection, or something else? No. I would suggest to not use a list, array or collection in the first place. This is not a use case for LINQ. Just have a method that checks all relevant values and that returns a `bool`. &gt; Can you also supply a sample case, with my code as-is, where property == property will come up false? The expression `radRoomsChecked == radRoomsChecked` will return `false`. `radRoomsChecked` is a property that returns a new array on every access, and arrays are reference types. So that expression will result in two different arrays.
I'm not under the impression that the OP is in a class that is at the stage of using Linq for in-lining to this degree. Are you sure that the teacher is going to look at this and say "This student clearly understands this code and why it works"? It is efficient, if you're ignoring the situations where bath checkboxes are being assessed, but I feel like there's is more to the OP's needs. I could be wrong.
My mistake. Then he should create two methods that check the relevant conditions and use them.
You need to step back and look at the whole landscape from a bird's-eye view. Back in 2002 when the Framework was launched, Microsoft was still the Windows company. For the Framework to gain traction and thus be a success required two things: first, it was easy to create UIs; second, it had access to more Windows APIs than its competitors (Delphi, FoxPro, and yes, Microsoft's own VB 6.0). Hence, the massive Base Class Library of the Framework that encompasses WinForms as well as registry manipulation, event logs, WMI, COM... After the Framework succeeded, C# as a language was able to realise its potential of not being just another Microsoft GUI language, hence ASP.NET. Somewhere along the line Microsoft decided to make a successor to WinForms called WPF, but that didn't go quite as they hoped. Fast forward 15 years, and Microsoft isn't a Windows company anymore, it's a cloud company. That means the software they develop can't just work on a single operating system, which in turn means all these shiny Windows-specific APIs are far less important to them. Which means that making forms is less important to them, querying the registry is less important to them, ... The end result is that .NET Core is essentially a slimmed-down, platform-agnostic version of the Framework, and it's platform agnostic because it doesn't include APIs to talk to platform-specific things like registries. That does not mean there won't be APIs to interact with the registry, but it does mean that said APIs will **never** be part of the Core BCL. So the long story short is that, despite what anyone might tell you, the Framework is on extended life support. Anyone who follows Microsoft on GitHub knows this already, considering the number of new C# language features that make it into Core but not Framework. What does this mean for you? Well, considering how (unfortunately) widely COM is still used, there will definitely be some sort of third-party package for it for Core, and it's likely that said package will even be written by Microsoft. But definitely don't expect the same level of support and feature parity that Microsoft supplied for the Framework; they may very well choose to make something that works "well enough", release the source, and tell everyone "if you need this to do something it doesn't do, that's your problem, not ours". I imagine the same will be true of WinForms - it will also become a second-class citizen where bugs and omissions just aren't as highly prioritized. Everyone's doing webapps nowadays or using Electron to get web on the desktop, heavyweight UI toolkits like WinForms are yesterday's tech and you should expect a corresponding level of support for them going forward.
Wow, I drastically misunderstood your use of the word "garbage", but yeah, I get what you mean in the literal sense now. That's a damn good point. I think I'm gonna rework my original post.
I actually studied for this exam when I was working my first C# job as a grad, as part of a departmental initiative at the time. Took it but didn't pass (got very close, only missed by a few percent). It really does drill you on some fairly obscure areas and inner workings of the framework that you might never use otherwise, so it can be tough to revise for. Only one of my coworkers managed to pass it, and he found it pretty hard going as well. With that said, none of my other employers have asked or cared about any industry certifications such as this one, so take from that what you will.
Currently studying at Hull. Pretty sure it won't matter at all to uni either. 
My personal favorite is closing VS and using Rider instead. That's just me though, lol.
You are now banned from all Koreas.
If you're saying your can write JS, convert it to C++ then compile it to machine code and then make it a driver. Then yes, you can absolutely write a driver in C++. In the same sense, I can write a book in English, use Google translate to make it Chinese and say I write books in Chinese. But the end result is a poorly written book that probably needs heavy editing. I'm sorry, but you don't have a good understanding on how JS seems to work.
&gt; This is because LOH is always aligned on an 8-byte boundary. Accessing doubles is faster if they are properly aligned so big arrays are stored in LOH. This doesn't make any sense to me. `double` should always get aligned by at least 8 bytes regardless of which heap you pull from.
Shit, I already bought the DMZ tour. ;)
I'ts no my blog. Please, ask the question on the Adam's blog :-) I'm sure he will answer. 
Yes its exactly as you said. But its still in JS, and that's what matters.
Small modification to check both baths and rooms: btnBuy.Enabled = (rad1Bath.Checked || rad1AndHalfBath.Checked || rad2bath.Checked || rad2andhalfbath.Checked) &amp;&amp; (rad1room.Checked || rad2rooms.Checked || rad3rooms.Checked || rad4Rooms.Checked); 
CoreRT?
I could use some help working on my encryption protocol. Http://www.github.com/acnicholls/cypher
It's also worth to mention that Umbraco is probably one of the best open-source CMS in .NET.
I think it compares favorably to any CMS out there as a platform for web developers to use to build a sites with custom functionality. There are better options for blogs or e-commerce sites, but its flexibility is insane.
I started to work on a Testcontainers implementation for .NET. I think it’s a great and fun project, with a lot of easy improvements to start with. Get in touch with me if you are interested: https://github.com/HofmeisterAn/dotnet-testcontainers.
You really need to re-evaluate your knowledge on this before you speak on it. You sound like you're back tracking and just acting like that's what you meant. You clearly said you could write drivers in JS and C# and Java couldn't... and then you said any language can because you can just use a translator to convert C++... and then you somehow feel you proved your point. You're being ridiculous.
I'm looking for contributors to my AOP library [ASPeKT] on [Github](https://github.com/mvpete/aspekt) 
Nothing really. Xamarin solves the WPF multiplatform issue (in a way) and works for making mobile applications. Mono, while now basically Microsoft, is it's own thing. There wouldn't be any point to rebase Unity on .net core either as multiplatform UI is not existing even in .net core 3.0. But once someone, not Microsoft, gets a "mono UI" framework going for .net core, then they'll be moving quickly.
&gt;3-5 years behind .NET Framework? How is that behind 3-5 years when it comes to web applications? &gt;why do you want to jump over Core so early? Because it seems to have better design? even at template project there's less bullshit and xmls with weird ass configs
I said that any language can do ring 1 drivers and those with C++ interop can do ring 0.
WebAssembly?
Another alternative could be contributing to Stack Overflow; it's an useful medium to learn from others.
.NET has had a runtime on OSX since 2007 (via Silverlight). Before that, Mono was offering Linux and OS X support. What made this possible was the CLR standard, which was designed specifically to be cross platform. 
ok.
Someone should tell https://our.umbraco.com/download/releases/800 :(
Production ready means nothing if it lacks the libraries and functionalities. For a desktop, Core 3.0 is not ready, and we are talking about a version that it's still on beta. Anyways, EF Core is still a work in progress, for example, it lacks a driver for Oracle and other providers (drivers that are ready to use right now with net framework). 
I do not really like this decision - mix cross-platform and Windows-only projects in .NET Core. &amp;#x200B; So, now we have a situation when .net core assembly can contain both cross-platform and platform-specific code. Does anyone know how to detect libraries with platform specific calls when adding a library in Nuget?
Tell it what, the release date?
&gt; Before that, Mono was offering Linux and OS X support. Aha Internet! I was ready for that one, you will note I specified *Microsoft's JIT" which at the time, Mono was not. &gt;What made this possible was the CLR standard, which was designed specifically to be cross platform A common language runtime is not a necessary condition for a language being cross platform. 
Yes
Neither of your points are relevant. So what if one implementation of the JIT wasn't cross platform. The basic design was still there; Microsoft just took awhile to get around to doing their version. As for the second point, again so what? We can assume that it is true; that doesn't change the fact that the CLR was specifically designed to be cross platform. 
They'll probably update it on Tuesday.
Hi, I've more or less figured it out. I was mostly struggling with applying the values to the getter and setters, but I've got it now. Thanks!
pff, not buying it, people have been saying WPF was dead - not happening. The entire .NET Framework? Can't compare that to Silverlight.
&gt; how (unfortunately) widely COM is still used Didn't COM make a revival with WinRT?
I just threw up a little bit in my mouth.
Make proper tests first, so you always have an easy way to tell if changes break functionality.
When I get a little further into my code I always end up feeling like I approached the problem the wrong way - but there's no easy way to tell. It's always in the back of my mind that there's probably some existing Custom\[Formatter/Converter/Reader/Writer/Context/Authorizer/Identity\] I could've derived from and just plugged it into existing Framework code. &amp;#x200B; Example; is there a "proper" way to create a Collada to XAML converter using attributes, typeconverters and existing XAML services, or is that overkill and simple parsing would be be "good enough" ? Feels like it won't be.
Wouldn't RabbitMQ or some other AMQP broker work? 
I looked at RabbitMQ and honestly don't know much about it. There are guys at work that have been using ZMQ in their projects for years so I was a bit hesitant to try anything different, although I suppose it doesn't make much difference if its all IPC for my own services.
https://dotnetfoundation.org/Projects
I think [Avalonia](https://github.com/AvaloniaUI/Avalonia) could use some support. It's currently the one and only cross-platform GUI library. 
Its not worth any ucas points. Showing a personal project will help just as much if you need to go to a interview. Make sure you are working with your collage or high school to archive every ucas point within you'r reach.
I don't have the links on hand but I can dig them up. Microsoft employees have said over on /r/dotnet that Core is the future and is absolutely the direction they're moving. Framework is now its own product.
Here's a sneak peek of /r/dotnet using the [top posts](https://np.reddit.com/r/dotnet/top/?sort=top&amp;t=year) of the year! \#1: [GitHub Free users now get unlimited private repositories](https://techcrunch.com/2019/01/07/github-free-users-now-get-unlimited-private-repositories/) | [49 comments](https://np.reddit.com/r/dotnet/comments/adnd2k/github_free_users_now_get_unlimited_private/) \#2: [First official preview of Blazor released (client-side .NET web apps on WebAssembly)](https://blogs.msdn.microsoft.com/webdev/2018/03/22/get-started-building-net-web-apps-in-the-browser-with-blazor/) | [51 comments](https://np.reddit.com/r/dotnet/comments/86ecng/first_official_preview_of_blazor_released/) \#3: [I created a cheat sheet for dotnet cli and I hope you enjoy it, too. http://en.otomatikmuhendis.com/](https://i.redd.it/3ncz2eymdl711.jpg) | [31 comments](https://np.reddit.com/r/dotnet/comments/8vltjo/i_created_a_cheat_sheet_for_dotnet_cli_and_i_hope/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
I recommend [Destroy All Software](https://www.destroyallsoftware.com/screencasts) for general programming knowledge, about everyday tasks and computation. You should also supplement it with a core knowledge source like [Pluralsight](https://www.pluralsight.com/) which has some significant backing from Microsoft for their C# / .NET lessons. The lesson quality is good enough that a lot of companies just offer Pluralsight accounts to keep their devs up to date.
I have a project or two you may find interesting, you can find them at https://github.com/ubiety
One man can not make a modern engine but he can make a game from the ground up. The game's "engine" would not have a line more code then the game needed to run. C++ is still the industry standard when it comes to coding, it is want my university teaches the game students. C# is very much a thing and even the default language for some engines but serious game devs will want to learn c++. C++ will always beat c# in proformance, including more modern features will not change this. I am not sure on exact numbers but unreal will obviously have better proformance if you know what you are doing. That said an inexperienced dev would likely see Unity preform better especially because they will have more dev time to dedicate to optimization with a simpler engine. The biggest reason that you would choose Unity is the cost thou, Unity is just hands down the better engine for small devs.
What you need is an abstraction of the queue. Nothing about your app should care what MQ you use. My personal favourite is Rebus. It will let you use RabbitMQ, MSMQ, or even SQL Server. Plenty of examples in the Rebus repo’s to get you up and running. 
We don't have ucas profiles and points here unfortunately. 
Don't listen to people in here, everyone is over 40 (or close to it) and has no idea what its like trying to get a job as a young person just out of university. Yes, do the exam. Its not a waste of your time. It helped me get my first job. Good luck!
Applying as an international student Oxford welcomes applications from international students. All applicants apply via UCAS by 15 October, and follow the same process as UK applicants Might want to do a bit of research about your ucas, it is some what complicated. With a point system for lots of things like charity work and high school level courses, ends with a decent sized personal statement. You will also need references, there are a lot of information about this system on line. Your local collage or library will most likely have drop in times to help with this, thou you would have to be understanding that this is the UK system and not what they are used to.
We have a whole load of acronyms for this. KISS is ideal here (Keep It Simple Stupid). If you don't need anything beyond a binding the the numeric value now, just bind to it. Skip all the converters etc. The two exceptions are you don't known't know how to do it, in which case do it and learn from it, and the second you're being told to do it :) If you think you *might* need it later, leave it until later. Some times you find the simple solution was so simple you're repeating it everywhere, so this is DRY, Don't Repeat Yourself. 
&gt;You are completely fine taking the exams this directly contradicts your earlier point however. You straight up said you'd count it as a negative. Can you be more specific as to which one of those two you stand behind?
Basically any computer. The performance of .NET is already fast. It’s all about the IDE you try to use. Visual Studio is an amazing IDE but can be quite a memory hog. I program on an HP Notebook with an i5 @ 2.5 GHz with only 4 gigs of RAM and my projects run optimally. On the days I feel like it I fire up the desktop with an AMD FX 8320 8 core @ 3.5 GHz, 16 gigs of RAM, an SSD, 7 TB of backup storage, a Crosshair V Formula Z motherboard, and a 980 TI FTW Edition GPU with 3 monitors hooked up. Haven’t touched my desktop in months though but I primarily use it for game development and 3D modeling.
ILSpy and not really an extension but a useful library is the WindowsAPICodePack.
the problem I have is that I only really learn after i've made something horrible. So then I want to just rewrite everything, but that would take too much time and I got deadlines to deal with. I find professional work to be a constant fight between time and quality. I can now understand why developers did poor work sometimes because they simply did not have time to learn/implement this and that and it's easy to be critical of someones code when you have no pressure. I just focus on getting it done and not making it beautiful. Ideally I love writing code that is elegant and orderly, but my clients only care about if something works or not and have absolutely no understanding about anything else. I used to write code where the standard is that other developers would find it acceptable, but not it's all about providing value to my employers. I think i've improved also on the clean code front, but any such practice and coding patterns tend to go out the window in certain real world scenarios 
Looks like they are trying to Sandbox your code because they don’t want people doing the good old System.File.Delete() that iterates all of your files. Even then it would make sense if they at least asked for source submissions that they can build on their own. I don’t have an answer as I’m at work but wow, makes no sense.
You may have an assembly binding or version mismatch. This has happened to me before. I’m on mobile and can’t format the code but try something like ‘var actualType = new MM().GetType()’ and compare that type with ‘var expectedType = typeof(MM)’ Hope that helps...
Hi. There's an open source sound mixer app, you can take a look on the code: https://github.com/File-New-Project/EarTrumpet
I know its not related to C# but a little bit of a self-plug for an open source Rainbow Six Siege site I work on (JavaScript): https://up-for-grabs.net/#/filters?names=562
If you're looking for just coding on challenges for fun, rather than open source, this sub is very cool: /r/dailyprogrammer/
Do you have *any* other interests outside programming? For hobby development, you shouldn't just do more arbitrary C# development - you should contribute to something that matters to you, which happens to use C#. For example, I'm interested in space travel, so I contribute to mods for Kerbal Space Program, which are written in C#.
In the states most universities would not care about this. It’d simply be considered a technical skill. Saying you like programming would probably be just as effective. 
If you like games and/or game engine you can try https://github.com/xenko3d/xenko There might be a Google Summer of code at some point (check with repository owner for details): https://github.com/xenko3d/xenko/wiki/Google-Summer-of-Code-2019
These were eye-opening back when they first came out, the systinternal tools were so far ahead of anything else and really helped see into what windows was doing. Even now 15 years later most of those tools stand up, nothing has surpassed them
Looks wrong. I just ran DotMemory over a few test cases. 32 bit with double[] assuming some overhead for the System.Array won't LOH until it's basically 85k bytes in size. I don't know what the actual System.Array overhead is, but I need less than 500 bytes, and I was just pulling numbers out of my ass the theoretical limits.
`GroupBy`
&gt; Everyone's doing webapps nowadays or using Electron to get web on the desktop, heavyweight UI toolkits like WinForms are yesterday's tech While Winforms is old tech, the general concept of Desktop applications is here to stay. The reason people use Electron is because theye is a big supply of web devs versus application devs (who know WPF and/or Winforms) and because Electron easily solves the problem of multiplatform. Electron solves that specific problem very well, but not in an efficient way (too much overhead, especially for most of the use cases for Electron). As such Winforms (or WPF or even UWP) are not heavyhanded, they are efficient at what they do. Electron is not. 
How so?
I play the guitar and I didn’t know any music/guitar related open source project written in C#. In the past I thought to implement an open source clone of Rocksmith but it seems to be too complicated for a single programmer.
You could split the sentence/tags into a `Tuple&lt;string, string&gt;`. If you can't do it when you're assigning the tags and have to deal with the tags already embedded into the string: `var sentenceTuple = sentenceString.Split(' ').Select(s =&gt; Tuple.Create(s.Split('/')[0], s.Split('/')[1])); That could probably be done a little neater, but will give you a list of Tuples where `Item1` is the word, `Item2` is the tag. This should make it easier for you to use Linq expressions to get what you need. E.g: `var groupedByTag = sentenceTuple.GroupBy(t =&gt; t.Item2);` Will essentially give you a list of lists split by the tag. Hopefully this points you in the right direction. 
I know nothing about guitar, but this search may help: https://github.com/topics/guitar?l=c%23 Seems lots of cool stuff there.
Thank you very much, that makes sense. I'm fairly novice and as such I have never before used tuples, and don't know if I'm going to be able to manipulate them with ease, or whether they fit in with my purposes. Let me explain you the bigger picture. After doing what I explained above, I instantiate an object sentence with these properties: ID (sentence number), sentence string and list of NPs with sublists of NP1 tokens, NP2 tokens, NP3 tokens... Then I add this object sentence to an object list of Sentences. Afterwards I want to process each object from the object list, to iterate through each NPs list of each sentence, and then iterate through each NPx token. If you could elaborate your initial suggestions, I would greatly appreciate it. &amp;#x200B;
There is a cleaner way but it might require more knowledge than you should have. If all the checkboxes are in some sort of common parent container, you can loop through the .Controls of that parent. You can attempt to cast each one with As Checkbox. if it is null, skip it. if it isnt, you can use the value of that control. This way, you can detect if at least 1 is checked. For events, you can wire up each control manually to point to the same method that has this logic. like chk1.CheckChanged += MyCheckHandler. do this for each checkbox or do a similar loop like before. private void MyCheckHandler(object sender, EventArgs e) =&gt; loop check logic 
I'm not sure if I understand the code. // Why are we comparing the target with the length of an array? // Such as, Target of 5 = [1,2,3,4,5] if( target == array.Length ) { return true }
Aside from profiling running processes, https://github.com/lucasg/Dependencies is rebuild of depends that is vastly faster and better at showing dependencies (support for .NET, WinRT etc.)
You are right, that part is bad. I'll tell you why it's written that way though. This is how I am initializing the array passed to the search function: int[] numbers = new int[1000]; for (int i = 0; i &lt; numbers.Length; i++) { numbers[i] = i; } So, in this case the array elements exactly match their position in the array. I haden't thought about other cases. So I can change that to check it actually matches the last element in the array.
I think I came up with a better way to do this, however. I just finished re-writing the method. int[] testsearch(int[] array, int target) { IEnumerable&lt;int&gt; arraySubsection = array; int half = array.Length / 2; int index = array[half]; arraySubsection = index &gt; target ? arraySubsection.Take(half) : arraySubsection.Skip(half); if (array.Length &gt; 1) { arraySubsection = testsearch(arraySubsection.ToArray(), target); } if (arraySubsection.ToArray().Length == 1 &amp;&amp; arraySubsection.ToArray()[0] == target) return arraySubsection.ToArray(); if (arraySubsection.ToArray().Length == 1 &amp;&amp; arraySubsection.ToArray()[0] != target) arraySubsection = new int[0]; return arraySubsection.ToArray(); } &amp;#x200B; Is this better?
I actually just rewrote the entire method, which I posted again. I thought that recursion would make it cleaner.
Is there updated version of win7 or win10? 
Great! I’ve never searched projects directly on GitHub since I was afraid to scroll between thousands of death projects and test repositories but it seems to be a good method to find interesting projects. I’ve already found a lot of good stuff there.
Sysinternals is a must for anyone in IT. On the same level as Wireshark. Learn your tools. 
Process Hacker
is this a binary search algorithm?
Yea, I believe that's the name of it.
Instead of manipulating the array, you can just have a first and last index that halfstep to your target. It's much faster to change an int than a whole array.
don't exagerate all of this is outdated compared Powershell and modern tools now, more and more pure sysadmin stuffs is all becoming obsolete to the cloud and automation or re-imaging fast etc there is less and less need/time to debug fix stuffs now
Coding blocks is very good. [https://www.codingblocks.net/category/podcast/](https://www.codingblocks.net/category/podcast/) 
Are you familiar with regex?
Shameless self-promotion. I got this all working and thought I would share how I did it. 
This is a strange problem; it was working fine for a bunch of compiles but then upon a certain change it started throwing the error again.
Can’t use it for this
&gt; My issue comes in when trying to make sure the $ is there and decimal is in right spot. I have used .Length to make sure it not too long, i have used .Contains to see it if has the '$' and '.' but then it just stops A string is collection of chararacters (zero-based index) If you want to know if the first character is a $ then make use of the StartsWith() metod. Checking to see if third character from the right is a dot make use of the IndexOf() method. Any further questions? Provide code and a specific question
Show what you have done so far. No code, no help (or some help ;) )
Are you familiar with [String.IndexOf](https://docs.microsoft.com/en-us/dotnet/api/system.string.indexof)? You probably want to use that to check the position of the '$' and '.' characters.
 Console.WriteLine("Please enter a dollar amount between $1.00-1000.00 including the decimal place"); string dollarAmount = Console.ReadLine(); string trimdollar = dollarAmount.Trim('$'); decimal moneyMoney; while (string.IsNullOrWhiteSpace(dollarAmount)) { Console.WriteLine("Please do not leave this area blank.\nPlease enter a dollar amount."); dollarAmount = Console.ReadLine(); } //checks if trimmed string is a decimal value if (decimal.TryParse(trimdollar, out moneyMoney)) { Console.WriteLine("This is a valid money"); } //checks if not a decimal value else if (!(decimal.TryParse(trimdollar, out moneyMoney))) { Console.WriteLine("This is invalid money"); } //if bigger than 999.99 else if (dollarAmount.Length &gt; 6) { Console.WriteLine("invalid"); } // needs work for &lt; 0 else if (dollarAmount.Length &lt;= 6) { Console.WriteLine("Valid"); } //checks index of $ in string else if (dollarAmount.IndexOf("$") != 0) { Console.WriteLine("Invalid Format"); } //checks index of . in string else if (dollarAmount.IndexOf(".") != dollarAmount.Length - 3) { Console.WriteLine("invalid format"); } Console.ReadLine(); &amp;#x200B;
No. I asked David when I attended one of his trainings around 9 years ago. He retired and moved to the Bahamas and quit doing trainings. Nice guy, just enjoying his retirement 
Thanks for the suggestions. Yea, it'd prob be more efficient to check before working on the array. I also figured using 2 int indices would work better than constantly creating new arrays. My brain has trouble conceptualizing anything to do with math, so I tend to skip anything mathy in favor of alternatives. It shouldn't be that difficult though, it's really just keeping track up the lower, and upper index limits, and working with the indices between them. &amp;#x200B; appreciate the feedback.
I have replaced the IsNullOrWhiteSpace with a decimal.TryParse and have used both in separate while statements. I can get some some to take and some not.
You really aren't going to learn to code or use a framework on the bus. A lot of coding podcasts talk about technologies and frameworks and new tooling, which is great, but you can't pause and go and look at them on the bus. I would recommend podcasts that talk more about developer culture and day-to-day work instead. That's just an opinion though.
I post what I have so far down below.
I'm a successful developer who have never heard of these tools, and since I clearly don't need them, I will continue to not hear about them.
I can imagine a world where loading assemblies in a different order or upgrade a nuget component could cause an assembly binding redirect your compiler may not know about. When you compare the two types at run time are they exactly equal? Same assembly same file same version?
When I try to compare them I get the same error. 
I when he says someone in IT I think he means it support. Developers in general don't really NEED to use other programs (except ides)
I'd recommend this as well. I listen to it on my commute almost daily.
This looks like code for school. Should you really be asking on the internet for help? If not, sorry to judge.
Maybe read the assigment again and do what it says there line by line (starting at the first line). Also ask for clarification --&gt; between one dollar and one thousand dollar. Is that including lowerbound/upperbound? Tips: Checking if an amount &gt; a certain value is not done by checking the length of the string. What will you do if IndexOf for the dollarsign returns -1?
The code is mine the problem is from a school assignment. I’ve tried reaching out for help and the help is “ you should look up this” or “maybe look at this” which to me isn’t very much help to those who are beginning and still trying to understand this. 
If you are dealing with small programs with few dependencies sure. Otherwise while debugging or investigating issues sysinternals or other tools are a must. For example something like procmon will let you know easily what is accessed without debugger perf hit. I dont know an ide that lets you track network traffic and perfview has been invaluable couple times I used it
Ok, first you are doing this backwards. When validating a piece of data you first want to check for invalid states. For optimization purposes you want to make the simplest checks first. You only want to return a valid response if you have already eliminated the possibility for a invalid response. If the data is invalid this will result in the user getting feedback from the program faster. It is more important for the user to know their data is invalid more quickly than valid as invalid data is more likely to result in the user needing to do more work. So your first step really should be checking the length of the dollarAmount string to make sure it is no smaller than 5 or no bigger than 7 characters. The next step would be checking to make sure there is only a single '$' in the string. If true then check if it is in the right position. Then repeat that step for '.'. For these two steps instead of typing the same check twice you should create a method that takes the string, a character, and a the desired position for that character then return a pass or fail message. FindCharacter(string, character, position) if {string} contains only 1 {character} AND {character}'s index equals {position} return valid else return invalid Then you validate that you are able to parse a string into a decimal. Parsing a string into a number is the most expensive step in this process so you want it to be last. Also, you do not need to repeat your decimal.TryParse call. Since the first check is a binary you know if the first check returns false the second check will always return true. So a simple If...Else is all you need. The If...Else If... is unnecessary. I would also suggest extracting this all out into a method that returns a string message so your main method would look something like this: Main() Console.WriteLine("Please enter a dollar amount between $1.00-1000.00 including the decimal place"); string dollarAmount = Console.ReadLine(); string result = ValidateString(dollarAmount); Console.WriteLine($"The amount you entered of {dollarAmount} is {result} for American Currency); Console.ReadLine(); ValidateString(dollarAmount) if dollarAmount length is less than 5 OR greater than 7 return invalid if not FindCharacter(dollarAmount, '$', 0) return invalid if not FindCharacter(dollarAmount, '.', position) return invalid if not decimal.TryParse(trimmedDollar, out result) return invalid return valid &amp;#x200B;
the above is hideous, almost unreadable.. Is this better? TemplateObject TempObj = ObjectHandler.GetTemplateReportSheet(ReportName, SheetName); var Columns = (from fi in TempObj.Format select new DataColumn(fi)).ToArray(); dt.Columns.AddRange(Columns); var ca = TempObj.ContentArray.ToList&lt;object&gt;(); for (int i = 0; i &lt; TempObj.NumberOfRowsToAdd.Value; i++) { object[] oa = new object[TempObj.Format.Length]; oa = ca.Take(TempObj.Format.Length).ToArray(); dt.LoadDataRow(oa, true); ca.RemoveRange(0, TempObj.Format.Length); }
The answer to 1 is...you kind of already are. Powershell uses a bunch of .net stuff under the hood already, just with more scripting friendly syntax. If you've done anything that looks like [System.Environment]::&lt;blah&gt;...you're calling methods from an assembly which is .net. Use that insight and dive into C#. You'll be fine. I don't have a concrete answer to 2 but I know it can be done. My boss wrote a simple console program for something that called a Powershell script. Someone else will have to say if this is best practice or not, and give info about performance. My guess would be that you would get better performance and maintainability from keeping everything in C# if you can. 
Then it's a bad assignment. If a junior programmer who was assigned to do this kind of validation brought me something that didn't use regex for a code review, I'd reject it and tell them to try again using it.
recommend
Can you link a screenshot?
If you want some more up-to-date documentation on P/Invoke, take a look at some of the newer documentation: https://docs.microsoft.com/en-us/dotnet/standard/native-interop Also re C++/CLI: that technology is considered more of a legacy tech nowadays. It is Windows-only support for it is just now in the process of being added for .NET Core (Windows-only).
For me, I'm big on DevOps culture at this point in my career, so I have been listening to DevOpsDays, Risky Business (security news), and HanselMinutes. 
I work as a Software developer, I try my best to be good at passing on the knowledge I have, though it may sometimes not be perfect. I know a bit about testing as I was a test automation engineer prior to becoming a developer
I found the fix: [https://stackoverflow.com/questions/31928429/com-objects-c-sharp-casting-mmdeviceenumerator-to-immdeviceenumerator-invalidcas](https://stackoverflow.com/questions/31928429/com-objects-c-sharp-casting-mmdeviceenumerator-to-immdeviceenumerator-invalidcas)
Also COM in a nutshell is an extremely low-level way of native interop and a lot of software uses COM for communication, e.g. Firefox internals are very COM-like. 
This is a really important website for all things PInvoke. http://pinvoke.net/ 
Agree. We use mass transit on top of RMQ. 
What functionalities .NET Core web lacks of? &gt;driver for Oracle &gt;The Oracle .NET team has announced they are planning to release a first-party provider for EF Core approximately in the third quarter of 2018. See their statement of direction for .NET Core and Entity Framework Core for more information. Please direct any questions about this provider, including the release timeline, to the Oracle Community Site.
Yeah the sound is a bit messed up, not sure what happened there, it was louder when I was doing the talk!
https://dotnetrocks.com
You can do a heck of a lot of sysadmin work via Powershell without ever touching C#. But learning a programming language and adding that to your toolkit would be a strength in your favor and, at least for me, is kind of fun. I love being able to just make what I need when it doesn't exist, or when I can build it faster than the time it would take for me to ingest the documentation for some obscure tool. I'd recommend getting started with learning C# and if you find it enjoyable - keep at it. If you don't - then you really don't _need_ it to be an effective sysadmin.
Or some good music 😉
The big advantage of C++/CLI is that your CLR api is in the same module as your native C++ code. I use it for everything. Once you get used to it I feel like it's much cleaner than P/Invoke.
it saved so much time back in the day... Our sysadmin needed to gathers some data from all the computers in org and luckily I was one of the first stops on his long journey. I called him crazy for wanting to distract hundreds of people just to run a command in their terminal. I ran some script with network admin credentials and some sysinternals tools and saved him weeks of bothering people.
PowerShell *is* a programming language.
Really appreciate the reply! That's interesting and I never really thought of or to be honest knew that some of the things I am doing in Shell are essentially .Net. And to your point on #2 that's what I was thinking as well. Not so much that I need to start using it but it would be pretty cool to create my own Windows Forms to make apps that I can tie my back end scripts into. A good example would be a simple GUI to be an Unlock AD account tool for our Desktop guy. Either way I guess I'll start up some training on C#... :) Thanks again!
Really appreciate the response! And I totally agree and that's basically what I was saying to the first person who replied. I really am interested in the idea of building my own apps using Windows Forms and putting some of the code behind my scripts into GUI form.
I couldn't agree more! Maybe it's a bit selfish because I am putting so much time in Shell to build automation scripts, but it really urks me when I hear others so adamant that it is a client different than CMD that writes cmdlets that be turned into functions and scripts, but its totally not a programming language... Lol
https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference#anchors
The regex you have given will match *anywhere* in the input string. You need to add the following: `^` to the beginning - that means "start of line" `$` to the end - that means the "end of a line" e.g. `^[a-zA-Z_][0-9a-zA-Z_]*$` I often use https://rubular.com/ to check my regular expressions against sample strings to make sure they work. Hope that helps!
I bet
Php is better imo
Update: I found a workaround to solve my issue without replacing the icon, but I'm still curious if there's a way to do this. In a nutshell, I use an app and the company force-updated the app and changed the system tray icon, hindering my ability to see if the app is connected. I ended up downgrading the app and blocking the update server in the hosts file, but I'd still like to know if I can force-change a system icon tray in case the app updates itself again. 
Try searching for PE file resource editors, that might get you what you need. I've never used one on a managed assembly but I think it's the same format.
If it's in a resource file, I'm pretty sure dnSpy can do it.
I'll give that a shot, thanks. 
Thank you so much dude/dudette. You are a life saver 
It doesn’t feel like it, and it is annoying, but being given then answer too often doesn’t help you learn. Try writing out the problem in pseudo code first, then write the code, then write it again with something like the “fluent validation” to implement it.
I listen to complete dev podcast quite frequently. Its an architect and a guy who just moved to mid level and is also going back to school to get a degree in data science
This is awesome, but I'm still waiting for a new Case of the Unexplained. Where is it, Mark?
Thank you for the instruction. It was defiantly helpful.
Learning what? Am I missing something?
As others have said, using C# to read through Excel cells can be really, really slow. if you only need the cell values (And no other cell properties), you can loop through the ".Value2" of the range you are looking at and store the values in a List/Array/Whatever you want. If you then need to interact with the values (Comparing against a user input for example), you can then use the List/Array/Whatever rather than looking at the cell specifically. Someone else might be able to chime in with some more info on if this method is actually a good path to go down, but it seems to be working really well for me personally. That said, I'm still learning a lot about C# and Excel integration so my way might be garbage. 
Generally when I'm trying to work out a regex pattern to use, I'll jump on to the following site: https://regexr.com/ I'll add some matches as well as false positives into the content and then play around with the pattern until it matches to what I want.
Exactly what I was going to suggest. 
Look into the various SDKs that Microsoft provides, especially for common applications like AD. You can do this in C# natively rather than needing to rely on external scripts. 
Or if you want to match words anywhere in the line: \b[a-z_][1-9a-z_]*\b
Borås, Sweden near Gothenburg. Looking for .NET programmers that have recently finished their education. More information will be supplied if you are interested :)
I have written recently about Domain Model encapsulation from Domain Driven Design perspective. There is a link to github repository there with Clean Architecture example. I know that you are writing Unity app and not web app, but principles are the same. Maybe it will be useful for you. [http://www.kamilgrzybek.com/design/domain-model-encapsulation-and-pi-with-entity-framework-2-2/](http://www.kamilgrzybek.com/design/domain-model-encapsulation-and-pi-with-entity-framework-2-2/). Additionally: " which functions should be in which classes " - you have to aim for high [cohesion](https://en.wikipedia.org/wiki/Cohesion_(computer_science)) " what should be exposed or not. " - the minimum Check topics Clean Architecture, SOLID, Refactoring book by Martin Fowler. &amp;#x200B;
I’m hoping you’re really young because what you want to do takes a long time. I think the best way to get there is to get an entry level job in games and while you’re there make it clear where you want to end up. John Carmack didn’t teach himself everything and _then_ get a job. Warning: the pay will be low and the hours will be long, at least at first. Learning Unity will still be really valuable as you’ll get a good understanding of lots of principles. You can fill in the blanks later - it’s good to understand what you’re building before you start building it. 
Does this have a specific name so I can do my own research on it?
TreeView
oh I see. Well thank you for explaining.
If you want to create a game engine from scratch for c++ there is a source for you it's called HandMade Hero and it's a tutorial series from a gaming veteran, that starts at 0 and works through all the necessary things! But be aware he is currently in Year 2 and creates a 2 Hour video EVERY DAY! [https://www.youtube.com/user/handmadeheroarchive](https://www.youtube.com/user/handmadeheroarchive)
Make a finite state machine, then program it. State can be an enum. S =$=&gt; A A =Num=&gt; B B =Num=&gt; C B =.=&gt; E C =Num=&gt; D C =.=&gt; E D =.=&gt; E E =Num=&gt; F F =Num=&gt; G G =Empty=&gt; End 
Exactly... you might also want to make use of HierarchicalDataTemplates.
Throw it on Github and let the world know
Eh, I’ll give it a shot. Been trying to build up my GitHub anyways.
Then you will have a generation of programmers who know how to use Regex and nothing else, and who will fail as soon as they hit a problem that can't be solved with Regex. Knowing how to do tasks like this from first principles is a vital part of the early stages of learning - the fact that you'd use Regex every day in real life does not make this an invalid exercise at all.
Post a link here then. I will gladly use it in one of my projects.
[https://www.wpf-tutorial.com/treeview-control/lazy-loading-treeview-items/](https://www.wpf-tutorial.com/treeview-control/lazy-loading-treeview-items/)
Well the sub is csharp so c#?
Every method that IS NOT async is by definition synchronous. public bool IsFoo(bool bar) { return bar; } That is a synchronous method
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/u_geesuth] [.NET Internals Cookbook Part 2 — GC-related things](https://www.reddit.com/r/u_geesuth/comments/aula9q/net_internals_cookbook_part_2_gcrelated_things/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Take a look at the chernos tutorials on a c++ engine. https://www.youtube.com/playlist?list=PLlrATfBNZ98fqE45g3jZA_hLGUrD4bo6_
If it's just necessary to know when the VPN is connected, it shouldn't be too difficult to create an application to alert you when the state of the network device is connected.
I'm on mobile and boy was this fun to scroll past
PardCode's too https://www.youtube.com/watch?v=ssGka-bSTvQ&amp;list=PLv8DnRaQOs5-ST_VDqgbbMRtzMtpK36Hy 
A database with ranking integers. Then sort them by rank. You would also have to have parent and child relationships keys. As comments got built out.
You cannot target .Net Framework on linux as far as I am aware. Only option is to target Core or Standard, or as you say build using mono.
for(int i = 0; i &lt; length; i+= 4){ //bytes\[i\] }
Also, if you don't have specific features installed with Visual Studio 2017+, you won't get the Json or Xml to Class options. In this case, you can either go ahead and look for them and install them manually in the installer, or you can use a site like: [http://json2csharp.com/](http://json2csharp.com/) Which does the same thing.
Got it, thought it was a specific c
Yea that was a terrible experience.
He was specifically asking about UI in a specific tech (XAML for WPF). Also, I am not sure what a "ranking integer" is. Not sure why you even mentioned that. For a tree all you need is a self referencing key.
Sorry, misunderstood the question and meant "Integer" used for ranking.
Most of the concepts are going to be the same in C#. But as things have evolved in C#'s language over the years, different ways (improvements some might argue) have been created to simplify operations in the C# Code itself. WPF / XAML hasn't really changed all that much, but the courses available for the basics to get the general hang of how things work is a good start. Once you start making an application and encounter something that isn't in the course material, but you have seen other WPF applications do it, is a good sign that something new and cool has come around that you need to research. That's where Stackoverflow comes in. (Or google -&gt; Stackoverflow) lol. If you have completed the course, I found this guy that explained a LOT about some pretty cool concepts with UI programming in WPF. Youtube Playlist: [AngelSix - WPF UI Programming (C#)](https://www.youtube.com/playlist?list=PLrW43fNmjaQVYF4zgsD0oL9Iv6u23PI6M) There were a few things that I found really helpful when it came down to some of the more intricate operations, like doing Generics for ViewModel's etc, that were really helpful. Even though he didn't explain WHAT a Generic is in full detail, he gives you enough to start to grasp the concept, and then he implements it. I really enjoyed it. There's 45 videos in the playlist, and each one is about a specific functionality in the application he makes. So it's easier to find a topic to discover.
Let me give you my perspective. I work professionally with C# for the past 4 years. Recently I took this exam (like 1 month ago). It does not really add value to your CV alone. It may add value for a person looking for a Junior/Graduate position, or alongside another certification, or along with your experience. Alone it does not. On the other hand, it did show me a couple (not a lot) stuff that I never saw before in my professional career and now I am familiar with
I'm not saying nobody needs them. Just say I don't, and I don't get why that is getting me downvoted. Maybe I just don't need it for the software I make?
Debug it? Do you get an error? Do you get a connection? Are any frames transmitted? How are you configuring it on the server side?
I'm not sure what the equivalent is for .Net Framework; my solution only works for .net Core
Throwing my name in the hat. Software Engineer with 4 years of professional experience. Knowledge of Unity game engine as well and working on a side project (at work) with Unity. Mostly backend related experience but also with MVVM in front end WPF (no MVC experience although I am currently working towards MCSD certification with MVC certificate). &amp;#x200B; I think I can be identified if you track my posts in reddit, but who cares? :) 
Well Bing belongs to microsoft so, why not?
So he’s on a team for extensions not useful development of VS
I assume you mean something where you're given back an `IAsyncResult` after calling a method, such as `BeginReceive` or `DoSomethingAsync`? In this case, depending on the particular method, they will either return a `Task` object or if you're given a `IAsyncResult`. If it's a task, simply call Wait() on it and that'll block the current thread until the task completes. If it's an `IAsyncResult`, it'll have a `WaitHandle`. I don't recall off the top of my head, but `WaitHandles` have a few different blocking methods you can use to await the result. Example: &amp;#x200B; public bool TryConnect(this Socket socket, IPEndPoint remoteEP, int timeoutMs = 1000) { var connected = socket.Connected; if (!connected) { var asyncResult = socket.BeginConnect(remoteEP, null, null); asyncResult.AsyncWaitHandle.WaitOne(timeoutMs); connected = socket.Connected; if (connected) { socket.EndConnect(asyncResult); } } return connected; } This will try to connect to the specified endpoint synchronously while giving me the ability to give it a timeout (something you otherwise cannot specify without going async). This particular trick where you call an async method, giving it a null callback, and then waiting on the `Task` or `WaitHandle`, works on every async method I know of in the .Net libraries.
Why can’t I make my main function async?? So I can await an asynchronous call.
&gt; 0x00, 0x04, 0x08, 0x12, 0x16 0x00, 0x04, 0x08, 0x0c, 0x10 FTFY
No, he works on extensibility for Visual Studios. He doesn't build extensions for a job, he allows extensions to be build for a job. If you don't think extensibility is useful to VS then you've clearly not seen some of the available plugins for VS.
&gt; /enjoy chinese backdoors they must have sold themselves american know-how in computer manufacturing. 
You are likely getting downvoted because of your attitude. It is fine to say you never used them but when you say you wont continue to hear them you are pretty much saying you dont care to learn new stuff. Thats not how a successful developer behaves or thinks.
Shouldn't stuff like these be on StackOverflow?
I do this and call it a 'SequenceInteger'
Yeah I've done it before for product listing ranking with either overrides or with purchase popularity.
Corba still a thing? The windows alternative was COM+ mind you 
Well, first of all, learn to not use == true. if(x==true) is the same with if(x) Second. This part of the code 1. if (rad1room.Checked == true || rad2rooms.Checked == true 2. || rad3rooms.Checked == true || rad4Rooms.Checked == true) 3. { 4. btnBuy.Enabled = true; 5. } 6. else 7. { 8. btnBuy.Enabled = false; 9. } Can be simplified to a single assignment like so btnBuy.Enabled = rad1room.Checked || rad2rooms.Checked || rad3rooms.Checked || rad4Rooms.Checked ; &amp;#x200B; It's not more optimized, but MUCH MORE readable for the human eye. &amp;#x200B; Third. Given that it's the same code everywhere, it is time to learn the DRY principle. You need only one handler. Do not always use the double click from the designer view, you can put the handler on your own there &amp;#x200B; 
Java-specialized Professors in a nutshell. Entire academia is polluted by ancient technology and professors who gave up furthering their knowledge.
It's a bit outside my wheelhouse, but: CORBA's a standard (rather than a Java thing, per se), so There may be some CORBA implementations in C# (IIOP.NET is one, apparently). Historically, however, Windows has favored COM for most of the use cases CORBA covers, *but* COM is just about dead, these days. A more modern alternative would probably leverage web services.
Yeah, I would go with Web Services normally, as I'm a vivid PHP/Javascript hobbist - so REST API and JSON are my pals.. but the professor said it's 'too easy'.
Take a peek at this summary http://greglturnquist.com/2016/05/03/rest-soap-corba-e-got/ I prefer to use REST api s or WCF
WCF is strictly bound to [ASP.NET](https://ASP.NET) no? ergo web services.
Nope. I use WCF without ASP.NET all the time. I think it works better without getting IIS/ASP.NET involved.
WCF are web services (very heavyweight). You may want to look into REST web services, which are now very trendy (and actually good IMO)
Wait until he sees your WCF code. When you do it right, it actually takes less code than REST/JSON on the .NET stack.
If web services don’t fit the bill, you’re probably going to have to use [.Net Remoting](https://en.m.wikipedia.org/wiki/.NET_Remoting) which has only been obsolete for a decade and change. Your instructor sounds like a bit of a tool, though.
&gt;I know you guys don't read my other replies, so I'll just copy-paste it here: &gt; &gt; Yeah, I would go with Web Services normally, as I'm a vivid PHP/Javascript hobbist - so REST API and JSON are my pals.. but the professor said it's 'too easy'. &amp;#x200B;
You tell me... I've done the entire project using TCP and despite having all the neat features he said 'nuh nuh.. use CORBA or a .NET alternative'.. he also called .NET Framework 'a Microsoft.NET'
I am not getting a connection so my Hub class is not getting triggered at all. 
You can
Write a main() method that calls an async static method, like this: &amp;#x200B; `class Program` `{` `static void Main(string[] args)` `{` `AsyncContext.Run(() =&gt; MainAsync(args));` `}` `static async void MainAsync(string[] args)` `{` `// put async code here` `}` `}`
I'll use WCF and hope he won't notice lol.
I'll use WCF and hope he won't notice lol.
&gt; I'll use WCF and hope he won't notice lol. 
I learn new stuff all the time, but I learn the things I need. And I research what I need. Never led me to this. Maybe that will change one day.
I did loads on CORBA at uni. It was basically a framework for remote specialised service components with service discovery - an idea that might sound suspiciously familiar to anyone currently trying to implement the currently voguish microservice architecture. And round we go again...
Go to project proprieties and change your targeting framework to .net core 2.2. you may need to create a new solution and project, instead of changing your target.
Sorry, I didn't realise he didn't work for microsoft. Assuming context to my previous thoughts: if these are soooo good then why shouldn't some of them be in VS, why should we require searching stuff up and installing it as an add-on.
Then you have to write a partial implementation of regex to solve this problem :)
 First, you need to specify what library you're using, and second, that code wouldn't even compile. Please post an actual minmalistic example so we can tell. (Also, if IsReadOnly is a bool, you don't need the .Equals(true)).
Thanks v. much. it's just VS complained about it not being a valid entry point when the c# spec stated otherwise when I used: `static async Task Main(string[] args){...}`
extremely terrible experience 
It's my understanding that, in C# 8, we will get true `async Main()` methods.
That's not what it means at all. I don't care about football, and I will continue to not learn about it. That has absolutely nothing to do on any other topic. Not learning some tools he doesn't need doesn't mean he's not going to learn others he will.
Wow, haven’t seen this article for a few years. Anyway, be warned that the code in this article is not even repository pattern. Typically an ORM will give you repositories, which are an abstraction of a data table as a collection. You can add, remove and query this collection (typically using LINQ or some other query interface). In this example, the entity framework DbSets are essentially repository pattern. What the author has done is wrap data access objects (confusingly often called repository classes) around the ORM, plus some additional indirection to allow for some unit testing. Whether this unit testing is actually valuable is debatable - a product I was looking after a while back literally had the code from this article in and I came close a few times to just ripping it out and letting the business logic directly interface EF. Even with this set up it’s extremely tricky to validate that the correct query tree is being passed into the DbContext. I actually had much more success using Effort, which is still a rather imperfect method compared to integration testing with the database (flawed as that can be).
I'm not part of Microsoft so I can't tell you.
Hi thanks for the reply. I dont have code right now, will post tomorrow at office, I have a WPF MVVM app, I know code wouldnt compile with whatever I wrote. I was struggling with writing that Linq query or some other way if any to get a new datatable with non readonly columns data in it. Say I have a datatable dtABC, I need to get a new datatable by using dtABB to have non readonly columns and data in it. I dont want to hardcode column names because with change in some combobox, my datatable changes. &amp;#x200B; what essentially i'm doing is find and replace functionality for a WPF datagrid which is bound to dtABB. I should be able to loop through columns and when a search string is typed in textbox, I want to have datatable with values containg that text string. &amp;#x200B;
Or make an old-ass SOAP service with .asmx files... They're dirt-simple and still work just fine. And they'd be something your Java-addled professor could grok.
Ha, imagine if people actually did that instead of just sticking in { get; set: }
No sorry, WCF is not "web services". It includes full support for every esoteric extension to SOAP, but you can write a client and server in about 10 lines of code that uses TCP and runs in a console app. 
gRPC
Removed: Rule 3, spam.
An alternative to a TreeView could be using expanders for each comment: &lt;Expander&gt; &lt;StackPanel&gt; &lt;TextBlock Text="The comment"/&gt; &lt;ItemsControl&gt; &lt;Expander&gt;[...]&lt;/Expander&gt; &lt;Expander&gt;[...]&lt;/Expander&gt; &lt;Expander&gt;[...]&lt;/Expander&gt; &lt;/ItemsControl &lt;/StackPanel&gt; &lt;/Expander&gt; Of course you'd create a custom ItemsControl and put that stuff in the template, so it becomes: &lt;CommentControl Comment="The parent comment&gt; &lt;CommentControl Comment="Child A"/&gt; &lt;CommentControl Comment="Child B"/&gt; &lt;CommentControl Comment="Child C"&gt; &lt;CommentControl Comment="Child C.1"/&gt; &lt;CommentControl Comment="Child C.2"/&gt; &lt;/CommentControl&gt; &lt;/CommentControl&gt;
What, so are there diffrent kinds of methods?
Yes, sorry I was quite inactive. You are correct with everything you wrote.
Sorry, been inactive and kinda forget about this post. Yes, System.\* is not allowed, except for the \` System.Console.WriteLine\` exception. Sadly using Action would not work.
since C# 7.2 you can write `static async Task Main(string[] args)` so the entry point will be an async method
I am supposed to override an interface function and put my code in there. Their engine compiles my code and calls the \`DoTurn\` function I overridden. Their interface handles the I/O. I never have to reference any I/O except for when debugging with \`System.Console.WriteLine\`
Sorry, I forget about this post, my bad.
search legere on github join the discord if you wanna talk to the guys
Their interface which I reference handles the data and returns the game objects to me. The only time I have to reference any I/O operations is to debug using \`System.Console.WriteLine\`
This might work.
Does the DoTurn function receive a parameter?
wrote some code for displaying a IEnumerable from a Entity framework query in a datagrid called view this, it's got some drill down group logic on click, but you could probably remove that or rework it to fit your needs.. public static class Extensions { const int MaxDepth = 2; private static int s_depth; public static int Depth { get =&gt; s_depth; set =&gt; s_depth = value; } public static void handler(object o, EventArgs _) { var otype = o as DataGridView; var CurrectRecipeId = (from row in otype.Rows.Cast&lt;DataGridViewRow&gt;() where row.Selected from cell in row.Cells.Cast&lt;DataGridViewCell&gt;() select cell.Value).FirstOrDefault(); var objObject = (from recipeParts in otype.Rows.Cast&lt;DataGridViewRow&gt;() where recipeParts.Cells[0].Value.ToString() == CurrectRecipeId.ToString() from parts in recipeParts.Cells.Cast&lt;DataGridViewCell&gt;() select new { parts.OwningColumn.Name, parts.Value }); objObject.ViewThis(handler); } public static void ViewThis(this IEnumerable&lt;object&gt; viewThis, EventHandler func = null) { if (Depth != MaxDepth) { Depth = Depth + 1; var ThreadForm = new Task(() =&gt; { Thread.CurrentThread.TrySetApartmentState(ApartmentState.STA); Form form = new Form(); DataGridView dgv = new DataGridView(); form.WindowState = FormWindowState.Maximized; dgv.DataBindingComplete += (o, _) =&gt; { var dataGridView = o as DataGridView; if (dataGridView != null) { dataGridView.Anchor = AnchorStyles.Top | AnchorStyles.Left; dataGridView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill; dataGridView.Dock = DockStyle.Fill; dataGridView.SelectionMode = DataGridViewSelectionMode.FullRowSelect; } }; dgv.DoubleClick += (o, _) =&gt; func(o, _); dgv.DataSource = viewThis.ToList(); form.Controls.Add(dgv); Application.Run(form); }); try { ThreadForm.Start(); ThreadForm.Wait(); Depth = Depth - 1; } catch (Exception) { throw; } } } public static bool CheckObjectInterface&lt;I&gt;(this object obj) where I : class { return obj.GetType().GetInterfaces().Contains(typeof(I)); } }
Are you feeling OK?
There’s quite a lot of the computer programming fads that are just reinventing the wheel using somebody else’s reinvented wheel.
Github link: [here](https://github.com/sidristij/dotnetbook)
What version of SignalR is on the server end?
It’s commonly used for line-of-business apps in large enterprises. .Net’s integration with ActiveDirectory greatly simplifies security for intranet apps.
A fair share of windows application are built on the DotNetFramework, which may use C# or vb.net. Chances are, if youve used windows applications youve used an application built with c#. Tons and tons of soap and restful apis are built using C#, so you probably use web services built on c# all the time but never know. Also there are a lot of games written in Unity, which is also c#, like BroForce. There are also a number of ios and android apps written using Xamarin, which is also built off c#. Mono lets us boil c# code down to assembly so we can run it on different platforms, so c# is becoming more and more widely used. 
Stackoverflow
Ease of working with AD and all db’s being MS SQL at work is the primary reason we use it. I’ve been looking for an opportunity to use React at work, but when weighing up the ease and time involved, plus hand over to the app support teams that know Microsoft, I have to go for .Net every time.
Honestly, Razor Components gives a better experience today. Nobody knows when Blazor will be ready for production.
Can I ask why .net for the front end is an advantage? Can you not get all the benefits by using a .net API with a react front end?
2.4.0
Visual Studio is written in C++ and C#. 
What parts of it?
C# is built in C#.
But when it is you best believe I’ll be pushing to start using it at work
Well, I do hope this is ready for production soon. I am, how to put this diplomatically, a strong opponent of JavaScript. So I would love to see a Web Assembly implementation of C#. This makes me positively giddy. 
Unity uses a custom Mono runtime, and has game code written in C#.
I'm with you. Right now Typescript is a good stop gap until it is ready, but ultimately I would prefer using C#.
I've already been casually bringing it up just so people are used to hearing about it when it finally is production ready lol
 If you want something that is production ready now, https://bridge.net is amazing. We use it alongside https://github.com/ProductiveRage/Bridge.React and it is quite literally pure C# running in the browser.
Ya got me. I don’t know for sure, and I’m on my phone so its hard to look up, but they have been heavy .NET/MS stack since the beginning, so I would expect it at all levels.
Fair enough, thanks for the info. 
What’s the distinction between each C#, or are you being sarcastic? I assume you’re perfectly serious. 
I can see the use in something like bridge but it's still a transpiler. For me I want something completely free from JavaScript. I have quite a few issues with JS. Some of them more opinion based, some of them more serious. Not that I think this is the place or time to go into it. The point being I am excited to see something that offers an alternative to JS, actually makes use of Web Assembly (which I think could be the future of the web), and is using a language I prefer. Its a win/win for me.
Yeah almost all of it. It was one of the very first [ASP.NET](https://ASP.NET) MVC apps too! See [https://stackexchange.com/performance](https://stackexchange.com/performance)
The C# is written in C#. https://medium.com/microsoft-open-source-stories/how-microsoft-rewrote-its-c-compiler-in-c-and-made-it-open-source-4ebed5646f98
OMG Yes! Fuck JavaScript.
Same here! :)
Your concern is valid, but Bridge.NET behaves more like an IL virtual machine that happens to be written in JavaScript. It uses C#'s type system, not JavaScript's. This is also the approach that Blazor will use as a fallback for non WASM clients, so if you're afraid of transpliling on principal you'll be waiting a long time.
Interesting thought. You're right though. I might be jumping the gun here thinking I can completely replace JS. I guess I don't mind transpiling as a fall back. I'll have to look a bit deeper into Bridge. Also its really going to depend on performance. What good is getting rid of JS if everything you build begins to crawl. I think I'm going to spin up a project tonight with Blazor and play with it. While I'm at it I might spin up something with Bridge to see how I feel about it as well. Thanks for the the recommendation /u/badcommandorfilename.
COM is pretty much alive as the foundation of all new Windows APIs introduced since Vista and UWP.
Back in the day, C#'s alternative was .NET Remoting, deprecated long time ago. Eventually replaced by SOAP and WCF, which also already enjoyed better days.
No problem, you're welcome 😊
It's Hejlsbergs all the way down.
First semester of web development and I hate javascript. Hopefully this is something that becomes standard soon.
world as move to JS and mobile, pretty much futile to try to counter the wave now, so much code wrote in it etc theses things and comments here are a classic example of dev who doesn't want to open their mind or learn a new language, get out of their comfort zone etc
Pretty cool. A lot of my career has been based around ASP.NET MVC.
You might want to look into a different flavor of development. 
You've never heard of my software, but I can almost guarantee you've seen it's output in public. Serving well over 1 billion data requests and 200TB of bandwidth every month.
Assuming that bashers of JS don’t already know JS. Arrogance. I know JS. I’ve been working in it for years. And I fucking hate it. We’ve been using Typescript for the past year or so, and it’s better, but if I could get away from JS forever I would enjoy my job that much more. I love to code. When it’s JS, I don’t.
Unfortunately most flavors of development are converging on web. In college I was all about client-server apps because I hated web development. Well, pretty much the only apps like I trained for are legacy and in maintenance mode these days, or are intense monoliths far outside of my realm of expertise. Now I write REST APIs to enable web platforms that interface with our legacy backend systems. The rare times I get to hop into the backend code are the days I like best. But it is what it is. If it’s not highly specialized and performance intensive, it’s being ported to web or being disrupted by a competitor that is web based. 
https://en.m.wikipedia.org/wiki/List_of_Unity_games
Yeah that’s what I was getting at, but was attempting to do it in a way to not discourage the now deleted commenter. Js is without a doubt an integral part of web development and will continue to be for the foreseeable future and as you stated all dev work is trending towards the web. So even if someone “hates javascript” they’re gonna need to at least learn enough to be dangerous if they want a successful career in the field. 
Imagine the world had folks said “Too much stuff written in COBOL. Can’t fight that wave. don’t even try” That’s basically what you’re saying and you sound just like the people you are accusing. My thing is the only true thing. Failure to comply indicates ignorance and I dismiss all with a different view because they are “lazy”. Like any tech, JS too will have its rise and fall. How and when that will happen, none of us can truly know. 
Blazor will achieve fuck all and the death will be so painful given how overhyped this has been. The vast majority of developers don't use C# and probably most of them never will. JS will still rule Supreme in the browser. 