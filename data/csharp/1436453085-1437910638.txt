That is your issue. They're blocking each other. You just have one console.
For a desktop replacement laptop it's not too bad. You can get 5 hours out of it if you drop it into low power mode. When I'm using it in anger battery life is more like 2.5 hours. Generally people who are using laptops like this spend most of the time plugged in. It's not really designed for carrying around all day, more for getting to and from work, working from home and working on client sites.
Yeah.. Don't have things running concurrently that may require user input.
Maybe in the US. In the UK, tablets have to come out too.
I've only ever had Dells and they've all been about that for battery life in the Precision range. 
Sure, but if your plan is to only run Windows and nothing else ever, why would you want a Mac-layout keyboard and Mac price premium?
title says browsers for the internet. 
I have a M4700 and didn't buy it for its weight or battery power. It's a beast of a system with great upgradability and a killer screen. 
I've been using the Dell Precision line for over a decade now and currently have a M4800. Really solid desktop replacement machines without all that "Try and Copy Apple" fluff of Dell's consumer lines.
Is there a computer you can't program on?
Lenovo Business class laptops. A friend of mine just got a T420 iirc? and I have the T520 (Discontinued) and they are tough, 12+hr battery life and I've dropped mine from 6FT, replaced the HDD with a SSD and other than a minor crack it still ticking.
Agreed. I uninstalled SSMS about a year ago and, despite connecting to databases daily (mostly read/write, rarely schema changes) I've not needed it since. Code completion is also very helpful and one of the main reasons I purchased a premium license, especially when using its generated LINQ-to-SQL classes.
Yes, azure or other cloud vms are also an option. For most development this is fine and gives you another way to pay for resources. 
i5/8gb RAM. Haven't used it heavily for SQL, only just finished first year, so not huge amounts. I move most of my heavy work straight onto my home PC, but I've not noticed much sluggishness at all. Has your ideapad got a SSD? That gives a good improvement.
why would you rather do that? Wouldn't having the mac os be a waste of memory if I'm never going to use it?
A lot of people have been having success with the Asus UX305 as well. Its a Core M cpu but it has insane battery life and its form factor is gorgeous. If its too small / not powerful enough for your tastes, I would get a Macbook Pro 13". You can run bootcamp on it and windows will run beautifully, but you'll also be able to always expand and learn other types of non-windows development. 
Get the Macbook air. Seriously. As much as I don't buy into Apple's ethos, their Macbooks are absolutely rock-solid as developer workstations. I have a mid 2009 MBP running a Win8/visual studio environment in VMware fusion that out performs my Lenovo T540 running it natively.
You can use an optional parameter (as mentioned already): public Listing(String inName, Double InPrice=0) Or use a second constructor that calls the first: public Listing(string inName) : this(inName, 0) { } 
it always has been.
Just finished with an XPS 13Z (Last Gen I think) it was pretty solid. I'm now using an inspiron 7000 2 in 1, i7. It's a solid laptop I'd recommend for anyone. 
Yeah if we create a new object inside destination method it wont be reflected on the source method. For that we need to pass a reference type by ref
I have the previous gen Dell XPS 13 (9333), it's an extremely nice system. I also have a first-generation Surface Pro, the big hamper on it is that it only has 4GB of RAM, so it's not very fun to run visual studio on.
I know I'm late to the party why not use coded ui tests in VS13 you can get some pretty powerful automation going there, its what we switched to about 8 months ago for work from Qtp/UFT.
He didn't mention server side at all? And yes, browser history *is* stored on your hard drive. For Firefox it's an sqlite database (file), not sure about others.
He is asking about .NET That's a server-side language.
It's not a language and it's not only "server-side".
I'm a remote worker and have a company provided Lenovo T420. I'm going to be moving to Lenovo T550 soon. I've used the T420 for 3 years. It came with 8GB of memory, but I upgraded it to 16GB. It has a 4 core i5-2520M processor. I would not want to go back to 8GB, it was barely usable. It would start running sluggishly with more than 2 IDEs open. Also, you want as high a resolution screen as you can get. If I were getting a laptop I would want: * 16 GB min * 256 GB SSD min * 4 core i7 * FHD display min, though 3K is preferred * DisplayPort 1.2 with 4K support for an external monitor * Rugged build. I honestly love Lenovos. I've had HP and Dell laptops in the past, and they both started falling apart after a year of so. My T420 has been bounced around planes, airports, trains and cars for 3 years with barely a scratch. My wife's T420 has also survived 3 years of grad school with no issues.
Dude, you're being an idiot. Just stop digging. He has posted in csharp That's a .net language. You cant run .net c# code client-side in a browser. It runs on the server-side. And you cant access the client browser's history "folders" from the server.
thank you this was perfect
Thank you
The T440s is a different class of computer, nothing like the Dell Precision.
I have a big 16gb thinkpad from work and when doing full stack with a local server you can easily crank on the ram. 16 is plenty of room but I can get to around or over 8 with out trying to hard. Granted I do keep everything running all the time and with some diligence it might not be an issue.
You're confusing ASP.NET with the .NET framework, which very much runs on the client, not in a browser.
Are you trying to monetize on somebody else's work? 
Just piggybacking on this thread, these ( http://imgur.com/v8Kp0dA) are my program's requirements for a laptop. I have a retina Macbook Pro 15", the early 2014 model with 16gb ram that I purchased previously to applying. Will it be fine for this if I run Windows in Bootcamp? 
Thank you for this review, I will be sure to try fix/improve most/all of these points :) 
There is no overload that takes string. Anyway, I decided to use `StorageFile.Properties.GetMusicPropertiesAsync()`... Now the only problem is saving the data back to the file. edit: never mind. To save properties you use `MusicProperties.SvePropertiesAsync()`, not `StorageFile.Properties.SavePropertiesAsync()`.
 public static File Create(File.IFileAbstraction abstraction); public static File Create(string path); public static File Create(File.IFileAbstraction abstraction, ReadStyle propertiesStyle); public static File Create(string path, ReadStyle propertiesStyle); public static File Create(File.IFileAbstraction abstraction, string mimetype, ReadStyle propertiesStyle); public static File Create(string path, string mimetype, ReadStyle propertiesStyle);
***[ding](http://imgur.com/pVUED86)***
Why a laptop? They are nice for portability but painful to do development on without having good monitors, a keyboard, and a mouse. I would consider getting something that has a dock if portability is important for you so you don't have to be plugging and unplugging a ton of cables wherever you do most of your work.
I have mixed results at the airport with my Surface. If I take it out the agents tell me its a tablet and I can leave it in the bag. But if I leave it in my carry on, the agents ask me to take it out, because its larger than most tablets. Then usually they apologize when they realize its a tablet and tell me it can be stored away.
Indeed.
Their consumer grade laptops are garbage. But the business class is amazing!
Certainly not. I include the video of the original creator with ads enabled. All the revenue goes to the author of the video. My website doesn't make any money. If I ever receive money I invest in education for my employees. But thanks for the question :)
I see. Not trying to get into your business but you understand how it might look. I am aware of Derek's videos and he has a different site, that's why I asked. Anyway, good luck.
We're not going to do your homework for you. You should be asking your teacher for help if this is giving you trouble. This is pretty simple stuff. But some basics that should point you in the right direction... string.contains() string.split() A List is a data type in C#. Google should be able to help you with the rest.
If you want a video tutorial for learning C#, Derek Banas has a good one. https://www.youtube.com/watch?v=lisiwUZJXqQ Considering that you've never used C# before, I'd recommend you try and learn the language before attempting the tasks. It'll help in the long run :) Once you're somewhat comfortable, you should take a look at some of the String methods on the MSDN website. https://msdn.microsoft.com/en-us/library/system.string_methods%28v=vs.110%29.aspx Best of luck!
I wasn't asking you to do it, was just looking for a bit of guidance. Thanks for the help.
I'll get watching that, cheers!
Is it a problem with your version of the library? The library [here](https://github.com/mono/taglib-sharp/blob/master/src/TagLib/File.cs) has a create method that takes string. [Line](https://github.com/mono/taglib-sharp/blob/master/src/TagLib/File.cs#L1219)
Check out the C# tutorial for beginners over at MVA (Microsoft Virtual Academy). It's a great resource for learning anything .NET related (for free).
I just installed with Nuget and have 6 overloads (including the string ones). Perhaps it's a windows phone thing? I really have no idea, sorry.
Now that you mention it, it might be possible It uses async stuff, and HtmlAgilityPack had somee similar issues.. Well, it no longer matters, because I used `StorageFile.Properties.MusicProperties` instead.
Absolutely. Until we get the interactive and scripting APIs in Roslyn, LINQPad will remain invaluable.
Excatly, things get muddy these days with the ability to compile and run on non-windows systems and the increase in use for embedded controls. Further while alternate IDEs and other tools are OK with .NET the toolsets are still evolving. If you want to learn with the least barriers and use what is still very likely to be the primary development platform for .NET you want to stick with what can run full editions of windows. At least for the next couple years.
I hate small screen/hi res. Can't read shit without cranking up the DPI.
That is often the case too. The joys of programming.
Open source solutions are better in general to develop on for Mac. Plus you can dual boot or use parallels to keep windows around if you want it. I used to hate Macs but developing on one has changed my tune.
I've run Windows in a VM on a MACBook Air and Pro for over a year now. It works fine. I use Visual Studio everyday.
I'm pretty sure it's not a problem, but you may want to verify.
If you would like 1-on-1 help, let me know. I might be able to help you out over Skype or something so you can see the best way to go about doing this. Just FYI, I do not give you the answers, but I will help you find out where to find answers and how to solve these types of problems. 
Was the same way. Was windows all day. Then moved to Linux, which I liked but felt like it was lacking as a total OS experience. I still like the Windows interface more than OSx, but the ease of development, able to run parallels/bootcamp, and the extremely high quality of build have spoiled me. Why can nobody else compare to the perfection of the Macbook trackpad? It really is the only other thing I am willing to use other than a mouse.
I have yet to find any laptop whose build quality will compare to a Macbook. That trackpad is magic and it blows my mind that there is not a single other laptop whose trackpad can even come close to compare. It is the only thing other than the mouse I would ever be willing to use.
This looks particularly interesting for possibly being able to write batch files in c#? I didn't read long into it, but the idea of being able to write standalone batch files in something more powerful than DOS, and not as obscure as powershell, where the source code is right there rather than being hidden away in source control, is pretty powerful.
There's a pretty interesting article by Julie Lerman in this month's MSDN magazine: https://msdn.microsoft.com/en-us/magazine/mt238402.aspx. She uses scriptcs for running EF queries. Anything that means I don't have to write a batch file or powershell is fine by me.
&gt; Step one find a way to download Visual Studio. https://www.visualstudio.com/en-us/products/visual-studio-community-vs.aspx Visual Studio Community 2013 is completely free (with some caveats about use and distribution).
In your code above you just adding one subitem. Then you try accessing the second one by index 1, use index 0 instead.
Correct, but for some reason, despite adding 'CT' as an actual item (ticketListView.Items.Add("CT")) it comes up as a subitem too (taking index 0). Additionally you can see in the screenshot the list of subitems puts the value 'D141411' at index 1 in the subitems. It's not an index out of range error, it's saying that 'Subitems' is null. I tried it with zero anyway and still get the same result: [imgur](http://i.imgur.com/Ydy84kW.png)
This [video](https://www.youtube.com/watch?v=XnjZRN9NC7s) by [Jeremy Clark](http://www.jeremybytes.com/Default.aspx) might be a good starting point.
I believed it shouldn't be null because this code block previously worked (this form has been in live builds (and used) for about 5 months, and was only recently brought up as causing issues). Additionally browsing through the collection I could see my subitems. I've narrowed it down to using listView.Items.Add("CT"); doesn't designate the items name to be "CT", meerly it's text, so when I was referencing it via listView.Items["CT"] it wasn't working as CT has no name property. ticketListView.Items.Add(new ListViewItem {Text = "CT", Name = "CT", SubItems = {splgTicket.Ags}}); Works. I'm still missing why this suddenly stopped working. But this solution will provide a working form, for now.
But it gets initialized when you access the SubItems property public ListViewSubItemCollection SubItems { get { if (SubItemCount == 0) { subItems = new ListViewSubItem[1]; subItems[0] = new ListViewSubItem(this, string.Empty); SubItemCount = 1; } if (listViewSubItemCollection == null) { listViewSubItemCollection = new ListViewSubItemCollection(this); } return listViewSubItemCollection; } }
It is not easy to use on Windows Phone.
So despite it being on 4.0 (an older version) it uses the modern methods in 4.5/6 and excludes frameworks that were introduced past 4.0?
I have the Dell XPS 13 QHD screen, i7. It is amazeballs.
It's not about VS addon authoring but might be relevant : [Viasfora github page](https://github.com/tomasr/viasfora) It seems to build a vsix.
haha amazeballs, love it. What do you think of the HP spectre x360? Also what are your thoughts of people mentioning to get a macbook instead. I would get a macbook but I only work with windows applications though I do like the macbook. Is the keyboard and trackpad good for the dell? I've seen reviews of people complaining about the track pad becoming oily and the keyboard to feel a bit cheap/rubbery. Also how long have you gone without charging?
Both Nuget versions have 6 overloads. I tested it on Windows Phone and it works.
Can't comment on the other models, but the QHD screen is fantastic, the bezel is really small, smaller than that of a macbook. No problems with the keyboard and trackpad, but with the touch screen Windows 8 is actually quite good and I now tend to use keyboard &gt; touch screen &gt; mouse, in that order of priority. Even just to drag windows around the screen I go straight to the touch screen now. Performance is good, and, compared to laptops I've had in the past, battery is quite good, think I've gone like 6/7 solid hours doing dev work before bothering to plug it in (but I mostly use it around the house so battery isnt a great concern for me). I think if you don't get the QHD screen you'll get another 1/2 hours of battery...but the slickness of the QHD will blow your mind if you can afford it...
The documentation is **astonishing** (which means: non-existent). I would not dare to go public with a framework that has absolutely no documentation. This is not really an alternative. It might become someday, but right now? No.
Can a URL even be long enough to support a file? This seems a very strange mechanism, or is this common in Web stuff?
these are fairly easy tasks, dont worry! put some effort and you will complete them. also C# and visual studio are VERY friendly to new user. ask further specific questions here or PM me
I see others who are probably a great deal more proficent than I at c - sharp have offered their help. I can also assist you if you need some help. As others have stated I won't write the code for you, but I can give you direction. Later today I'll edit my post with some pointers for you. What, if anything, have you made in the past? Just to get a scope of what you know! Edit: Re-read your OP and realize you stated you do not know c-sharp or any other programming languages. Fair enough! Everyone has to start someplace. 
You know what, if he just removed all current syntax highlighting and rewrote it with just a new method for configuration, he'd be a hero. :P
I, too, am very curious about this, but I suspect rendering could be something easy to do on your own. Without knowing what I'm talking about, here's how I'd do it. 1. Have an Email model. 2. Have an HTML Helper that takes in an Email and somehow checks if the email is HTML or plaintext. If it's plaintext, replace any \b\n or \n with &lt;br /&gt;, then put the thing in an Iframe. If it's HTML, just put the thing in an Iframe.
Thank you for your time. I solved the Base64 problem, but I still can't understand how to compress a file with zlib. The code snippets I'm finding doesn't seem to generate a valid "URL" string, so I'm stuck with some poorly written documentation that won't help.
It does have a set of defaults if you don't specify a config file: http://wyam.io/getting-started/defaults - this basically scans for Markdown and Razor, parses them accordingly, and then outputs them along with any resources to the output folder. Thanks for the feedback - since the defaults weren't obvious to you at first glance, that's probably something I should improve with the documentation. Long term, I have an idea in my head for "recipes". These would be whole blocks of configuration code with options that could be used as a starting point. I envision recipes for things like generating a blog, generating API documentation, etc. Haven't quite worked out exactly how they should work yet. 
They will. See https://sendgrid.com/blog/receive-inbound-email-meteorjs/ for instance
Your going to want to email your professor about formatting the numbers because that is going to be more work than the entire 1st problem. Making a number formatting table for things like 1st, 2nd, 3rd, 4th, .. 11th, 12th, .. 21st, 22nd, 23rd, etc.. is going to be alot of work if you do not just straight copy paste a solution. edit i guess you could just make a giant array of about 50 numbers and hope he doesnt want some solution for any numbers higher.
To send emails out, I have used this project a few times all with good success. [MvcMailer](https://github.com/smsohan/MvcMailer) Doesn't really help with receiving and rendering though. If it's a html or plain text email couldn't it be rendered by the browser?
Emails are usually just plain text or html, with additional header information. Rendering them is as easy as rendering any other string of data. Unless there are attachments Or other important header information Or it's encrypted You're basically trying to create 99.9% of a webmail system from scratch. That's a BIG job. You will need to learn about dns, mx records, smtp, pop, imap, spam filtering, routing, blacklisting Can I suggest you rethink this? Because I don't think you really understand just how complicated building an email sending/recieving/rendering system will be. There are reasons that most businesses have at LEAST one dedicated server for email. 
Afaik we couldnt use it on wp. I dunnot know that we could now. It Is awesome !
I think you should look at deserializing your XML structure into POCOs that you can then loop over to output your info. foreach (var product in products) { // print out product info foreach (var val in product.Values) { // print out values for the product } }
O_O Should really spend some time and look at Roslyn. Will look into it :) Cheers.
Thank you very much! It worked exactly as I wanted.
Check out this for the zipping, documentation is really straightforward: https://zlibnet.codeplex.com/
Thanks! It's actually using the shiny new Razor bits from ASP.NET 5 so that I can introduce all the cool TagHelper stuff once the API has settled a little more.
I'm going to assume you don't have access to Exchange. because Exchange Web Services (EWS) makes this pretty trival. If you want to do this for free and be in complete control ( not rely on a cloud mail provider), you just need to download an opensource/free IMAP server for Windows. Like [hMailServer](https://www.hmailserver.com/). Then use a IMAP library to connect to the mailbox account you setup, and pull out the e-mail. [AENetMail](https://github.com/andyedinborough/aenetmail) was recommended in a stack overflow posting. Then just write a web page to use the IMAP library to pull from your IMap server and render the e-mails. Rendering e-mail is pretty easy. They are either Text or HTML. In some rare cases they may be RTF encoded, but even then they should also have a text mode. Also, it's not very hard to use libraries like Tidy to conver from RTF to HTML. I'd recommended using something like HTML Tidy on the raw HTML anyways, because often times some old e-mail clients produce bad HTML. It's possible AENet does this for you. Also, you can always fall back to text only. The MIME encoding and attachments, and inline images and stuff isn't too complicated. There's tons of documentation on how to process ebedded MIME images ( Base-64) and I'm sure somewhere is a .Net library that does it all for you. 
I do have access to EWS actually, the mailbox I would be polling for messages and also sending through is on Office 365. Are you suggesting using the Office 365 API to pull messages from there? I'd never considered this.
Could you point me to some better tutorials? 
Thanks, I will!
And after updating the beta-5 also works 
Is it a c# console application? A wpf application? An mvc asp.net website? We need more information!
Well right now its just a console application until i can tranfer it over to something that looks more appealing. I'm making a program that randomizes math equations and I want to integrate it into a browser for learning purposes.
Awesome. Thank you!
Look into Microsoft visual studio express, you can use c# and visual basic also you can make webpages of a language of your choosing but most importantly it integrates everything into the page.
While silverlight does run in the browser, you would be better off looking at asp.net mvc to serve a web page with the results. Silverlight is end of life, not supported on mobiles of any variety, and will not be supported on the next version of Internet Explorer. 
Holy shit, this thread. Google is stopping support of Silverlight in Chrome, effectively making it worthless. It was worthless to begin with. You need to learn web development to make a webpage. /r/dotnet http://www.codecademy.com/en/tracks/web /r/ASPNET
I know, its still IE though.
It's not.
It's not using the same 'trident' rendering engine from IE. It's an entirely new engine. 
That's quite a controversial opinion, and you're brave for voicing it. I completely disagree, as most other people do, but if you found it useful then that's great :)
I understood that getters and setters are exactly what the properties concept is. but I thought those were supposed to be 2 separate methods within a class. example - "private whateverField; public whateverSetter(whateverArgs args) {whateverField = args;}" etc. is what I typically use and see. "public int whateverValue { get; protected set; } " - This however is something I'm not familiar seeing. Is this simply better than the two methods way of using properties? I come from a Java background though, and it's probably that I'm just not familiar with all of c#'s keywords. Also according to [this](http://www.widecodes.com/7xzJgVXePX/using-getters-and-setters-in-unity.html) you can use setters and getters within Unity, which means you can use properties essentially right? Also disregard what I said about having to use public fields to see a field/value in the editor, I remembered that you can view a private field, (wait didn't you say we can't use these?), if you have typed: [SerializeField] to make it visible in Normal mode if it is typed above your field. Also I just learned that you don't have to even do that for a private field in order to see it in the inspector, you can instead set the inspector to debug mode. Right click on the tab and click "debug". 
You could use [jsil](http://jsil.org/) to compile .NET apps/libraries to javascript.
oddly enough ive been seeing this behavior in Visual Studio 2015 RC too, but not just Prism. (MvvmLight, RX actually for desktop app project). You can either ignore the errors and work on, or restart VS and hope to god the errors disappear.
Never use non-released software in production. Use VS 2013 until 2015 is stable enough and ready to use. Problem could be in .NET version mismatch.
Hey op ^^^^^^
Separate out the back-end logic and make a web front-end. There really aren't better options. A bunch of people are gonna yell at me for this, but if you know nothing about webdev and need this done quickly, just make it a WebForms project. It's basically just like writing a quick/dirty Windows application. 
MS started from scratch base on chrome. Fast and simple but powerful. Let's see 
Fizzbuzz is a very short code segment. Why not just post it instead?
I already have it m8 ;)
Okay fuck silverlight. Thank you for correcting that.
If it's a private value or property, it can only be accessed in the base class. You will either need to make the variable protected, or create a (public/protected) method in the base class to update reloadSpeed.
Edit: http://pastebin.com/qRgfwFyP
Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/gaa
This is wrong. Microsoft even said at build that Edge is a tweaked version of Trident. You can inspect the binaries yourself.
Depending on the function it might actually be easier to make a Web API endpoint. 
http://stackoverflow.com/questions/23250/when-do-you-use-the-this-keyword
It's a reasonable solution to the given problem that would probably involve the least amount of effort for someone who is obviously new to all of this. It may not be a good recommendation, but there's still reason and logic in recommending it. If we knew that OP was intending to publish his app to the web then we could use that information to decide that this may not be a good choice because of the compatibility issues and so on. Silverlight might represent the quickest and dirtiest way to get a simple .NET app working in a browser in this case. I still wouldn't recommend it, but it's not that loony.
Can you try to post suggestions or advice instead of this bullshit?
Dude it's fucking fizzbuzz. It's a stupid program that should be completeable on a whiteboard. Your code is verbose to the point where I don't want to even begin to read it. You should also never post code onto an unformatted Reddit comment. Use pastebin or the built in code formatting.
taking a quick glance, you are importing pictures and sound?? Did you write a fucking GUI for FIZZBUZZ? You built a goddamn backhoe when what you really needed was a hand trowel. Please, please, learn the the concept of "minimally viable product"
If you want an answer to your question it is better to be more specific. Maybe post some code or tell us exactly what you are doing. That being said, the console will close immediately if you don't have some code that it has to "wait" on, such as a ReadLine or ReadKey. I can't help you much without specifics.
But you can't use the free version because the binary output limit is something like just below what even a Hello World application consumes, so free is pointless. You get VS support in the Business and above, it's a shame no support for VS in Indie because it's a complete fucking joke how expensive it is.
Yeah, no problem at all
BTW, I highly recommend always using visibility modifiers for fields, methods, and properties. The reason for this is because the default varies by language and it's often hard to remember what it will be. Being explicit can help aid readability. Regarding `this`, it's up to you. I find that using `this` can slightly aid readability in some cases because it can tell you that a variable is a field or property and not a local one without having to look any further. But in the code posted, it's completely unnecessary. One case where it is necessary is when you have conflicts. Eg: public pistol(int damage) { this.damage = damage; } Note how `this.damage` and `damage` are two different variables, in this case. However, this doesn't really apply to C# because the convention is PascalCase for fields and properties. As a result, there's no conflict due to the different cases. Note that class names should also use PascalCase. So to follow convention, you should use: public Pistol(int damage) { this.Damage = damage; } And here the `this` is once again optional (and you'll probably never have conflicts between local and class level variables due to this convention).
I think when your friend mentioned FizzBuzz, he forget to tell you what the point of FizzBuzz actually is. I can see that you are a beginner but you are really excited about programming. That is good. Don't let the negative comments get to you. In general, FizzBuzz shouldn't need a UI. Look up YAGNI. Look up Console programs. Most of your work in college will probably center around that (maybe Java/C/C++). FizzBuzz is great to understand and how it applies to interviews as well. A loop with some if statements is all one really needs for FizzBuzz. Making it more complicated is just evidence of scope creep IMO. But good design will allow you to do that very easily.
I use a combination of Postal for email views &amp; sending within ASP MVC, Amazon SES for the actual SMTP, Zurb Ink for an email CSS framework, and Hangfire for automated daily sending at a specific time. I highly recommend it, but maybe I'm not answering the question correctly, as I was quite surprised Postal wasn't mentioned here. http://aboutcode.net/postal/ http://zurb.com/ink/ http://hangfire.io/
I've only used express, so I wouldn't know anything else about it.
Thank you for the tips everyone!
Sounds like a serious battle between rival groups of 12 year olds in their marketing department.
You will get different answers about using "this" based on who you talk to. Some people or organizations require it to be used in all cases to prevent accidental use, however, as has been mentioned, using proper capitalization guidelines fixes that without needing the "this" reference. 
basically there are two options: 1) you dive into game memory to obtain states, positions and sizes of objects 2) you use computer vision algorithms to determine where the objects are on the screen. second solution is much slower but in general will apply to most of classic 2d games without taking time to visit every game memory. AFAIR there are some streams of guys writing cheats for games at livecoding.tv. good luck!
Yes I'm aware of that, question is quite specific I doubt that stackoverflow result would be other than first in this case. I see same behavior on stackoverflow often.
Thank you for giving legitimate feedback instead of crapping on the guy. This is pretty much everything I would have said.
Check out botsuite.net Should be all you're looking for. 
Lack of confidence in their ability to choose the best result, and fear that they will invest time in reading and trying the wrong approach.....at least that's what used to be my problem 
**WATCH UFC 189 HERE ONLINE** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** **WATCH UFC 189 HERE ONLINE** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** **WATCH UFC 189 HERE ONLINE** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** **WATCH UFC 189 HERE ONLINE** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** **WATCH UFC 189 HERE ONLINE** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** **WATCH UFC 189 HERE ONLINE** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** **WATCH UFC 189 HERE ONLINE** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** **WATCH UFC 189 HERE ONLINE** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** **WATCH UFC 189 HERE ONLINE** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** **WATCH UFC 189 HERE ONLINE** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** **WATCH UFC 189 HERE ONLINE** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** **WATCH UFC 189 HERE ONLINE** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/** ▬► **http://trends-and-virals.info/watch-ufc-189-conor-mcgregor-vs-chad-mendes-live-stream-online/**
Thanks a lot! My friend told me that a lot of people that were interviewed couldn't solve it and so on and I knew how to do it from the moment he said what it did. So we made a joke out of it and since it was so easy I made this as a joke. But I wanted the program to work good. Either way, thank for feedback. I will improve my version an do an update.
Thanks for the support! Yeah, he told me what fizzbuzz was and since it was so easy I decided to make an interface for it, like a joke. But I wanted the program to run good. Also I was looking for a reason to put my ass back to work since I didn't work in C# for 1 month(mostly doing c++ for the college apply exam). Thank you once again for everything!
I would like a link to the github &amp; pastebin of your tutorial. thanks. 
Try /r/unity3d which has a more active community than /r/unity. Says so right there in the sidebar anyway.
Please, take this pointer too int* pThis;
Youtube and Github my friend, that is how i learned to make some basic AI
Ah, good idea! facepalm! Thanks!
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/shittyprogramming] [X/Post from /r/csharp where someone claims he has made an innovative FIZZBUZZ solution!](https://np.reddit.com/r/shittyprogramming/comments/3d05np/xpost_from_rcsharp_where_someone_claims_he_has/) [](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger/wiki/) ^/ ^[Contact](/message/compose/?to=\/r\/TotesMessenger))* [](#bot)
Me too thanks
Thank you for all the advice! It really gave me food for thought and that's why I replied so late to your comment. Now, I can say that my code is finally done thanks to you and all the other people from this sub and r/learnprogramming/. Will post an updated version asap.
I want to thank everyone that helped me and gave me advice and suggestions. I learned how to end my code earlier, combine stuff that repeats into function, be more careful because there may be easier ways to code some parts and overall optimize my code. Thank you guys, it was a pleasure! :)
Could I also have a link? Sounds interesting.
Updates are cool, but an important skill I've had to learn is when to say fuck it and do something else. It's not worth 100 iterations of a program for no reason, your time is better spent learning data structures or something else
Yeah, I feel you. Whenever I make something, I don't stop until I get it as close to perfection as I can. I think I will say fuck it to this program either way since it is shit and I don't even feel like doing anything more(like improving the interface). Guess I will look for other stuff to learn.
Actually, I decided I'll add a blogging "thing" to my github pages site. Here you can get a hand on the tutorial: http://boromak.com/blog/heroes-auto-eyes-en/ That's the computer vision part. I found my A.I. post and it's pretty much scrapped. I'll make some time for it soon and add it. Here's the GitHub repo: https://github.com/lances101/BoringHeroes
You're looking for a [Movie Texture](http://docs.unity3d.com/Manual/class-MovieTexture.html).
Marketing was hoping a name change would make it seem like an entirely new browser. I guess they were right.
I'd definitely recommend it as a data processing pipeline. You can also mix and match it with Reactive Extensions for even more flexibility and power.
What company has 100's of years of financial data lol
The Bank of England was founded in 1694. Wells Fargo was founded in 1852. 
Your data is like 3 orders of magnitude away from being "big". Unless it's growing at a very high pace (which given its length I doubt) there's nothing to worry about.
I worked at Wells Fargo, in their Express Banking (ATM) div back in the mid 90s. The amount of data about ATMs is quite large. My main app at wf: http://www.blissgig.com/default.aspx?id=27
Check out akka.net. once you get it you'll love it
* Object oriented programming * Abstraction (**Interfaces**) * Generics * Lambdas * LINQ * Asynchronous programming * Design patterns * Architectural patterns (MVVM for WPF)
Learning functional programming in C# is a great next step. It helps make LINQ's fluent syntax more understandable and is transferable to many other languages. LINQ is useful in any place where you need to filter, reduce, or map a collection or a sequence. In theory, this could let you write a single method to query a database table, an xml document, or an in memory List. 
For MVVM I would check out Microsoft's Prism here: https://msdn.microsoft.com/en-us/library/gg406140.aspx I would also recommend looking at this course at Microsoft Virtual Academy: http://www.microsoftvirtualacademy.com/training-courses/developer-training-with-programming-in-c The first few sections will probably be stuff you already know, but latter on it goes into LINQ and other things.
I would start by reading the contents of the text file using the StreamReader class: https://msdn.microsoft.com/en-us/library/system.io.streamreader(v=vs.110).aspx ...and then split each line into an array of words using the String.Split method: https://msdn.microsoft.com/en-us/library/tabh47cf(v=vs.110).aspx Is that what you had in mind?
What part of the [CAP theorem](https://en.wikipedia.org/wiki/CAP_theorem) are you providing for the business? Until you know exactly what's important to the business, you should only focus on writing well-tested, easily-maintainable code. You've said that there haven't been any problems yet, so you're done. Your software is "good enough". It's not perfect, but it doesn't have to be. When the business comes to you requesting that your software works "when the database is down" or that it "can do the same thing with 40TB of data", then you've got a place to start designing. There's too many solutions to list for those two issues and that's as it should be. You'll severely hinder your future efforts if you commit to something that's not really needed right now: maybe you go with Akka today, but some future business problem would be easily solved by MS Orleans or Apache Storm. Maybe you go with MSMQ today, but a RabbitMQ cluster would be better for some problem in the future.
Don't let them assholes put you down. 
I've no experience with unity, but I've used C# to read strings from a text file plenty. Everything you need in in System.IO, You want to make a few decisions up front. Are you going to read in all the words into an array at the start, or do it continuously on an ongoing basis as you play? Are you going to randomly select a word each time (potentially repeatedly selecting the same word!) or generate more of a randomised playlist (where each word only appears once, in a random order)? If you are going to have a relatively small text file, read it all into memory in one go up front; it'll be easier to deal with in code and it'll hit the hard drive less during play. string path = "MyTest.txt"; // By default and unless otherwise specified all paths are relative to the run-in directory string readText = ""; if (File.Exists(path)) string readText = File.ReadAllText(path); string[] words = readText.split(new char[] { ' ' }); There's some gotchas you'll want to look at there, for instance I haven't wrapped anything in a try catch. My split is only looking for a single space character (so punctuation could potentially come through, and you'll get an empty string if the code find 2 space characters next to each other). For more basic help, look at https://msdn.microsoft.com/en-us/library/system.io.file.opentext(v=vs.110).aspx If your text file is going to be huge (multi gig huge), you're better off reading line by line: https://msdn.microsoft.com/en-us/library/system.io.stringreader.readline(v=vs.110).aspx
Didn't know this was a thing on Reddit?
If you expect very large data, then this is a special requirement worth mentioning. You need more than just a `StreamReader`. You also need to periodically call `string.Split`, and to evaluate the results in between. But of course you need to skip the last result from `string.Split`, because it could be incomplete. If there's no requirement to do it otherwise, stick to the easiest solution.
The best way to learn a language if you already have programming experience is by creating things. For example, if you want to learn ASP.NET (MVC of course), make a Twitter clone for example. Along the path you will encounter many problems that will improve your C#, ASP.NET and overall .NET knowledge. For example; when you get to the point of data storage, you will learn about the Entity Framework. You will also learn about the NuGet which is a .NET package manager. You will learn about SignalR that is used for real-time web functionality. List goes on infinitely... .NET has plenty of tutorials. I would recommend you to subscribe to Pluralsight if you want to invest in yourself. There are hundreds of tutorials made by professionals.
Interesting, but do they really still have financial records going back that far?
are you for real???
I would love to have my Pluralsight back but it's like 30 dollars a month or more (I don't remember), and being a college student I can't afford that :P
I never had similar experience with .NET ecosystem, but I did have such experience with Scala tooling; And I feel your pain. But in case of .NET, Microsoft is known to put huge emphasis on backwards compatibility. So one way to work around issues of tutorials being outdated is to focus only on core .NET technologies. Both WinForms and WPF maintained full backwards compatibility so tutorial written for their first version should work in newest version. This is not true if any other library becomes involved. For example, WPF works just fine without MVVM. MS created WPF in a way that allows WinForms developers to use it. Which means you can create applications with just code-behind without use of databinding (even though I personally think that is sheer madness). Also note that there are many "types" of XAML-based frameworks. For unknowing person, they might look like same thing, but they are all different beasts. So make sure you are actually looking at tutorial for Windows Desktop WPF and not Silverlight XAML, WindowsPhone XAML or WinRT XAML. (IMO this is massive fail from MS side)
Yeah I'm going to report this
Thanks, any resources you know of? besides Head First, and the internet :P Ive covered Interfaces and Generics.
the escape sequence \n accomplishes the same thing, so you can have Console.Write("Hello World!\n\n\nHey there programmer!"); output: Hello World! Hey there programmer!
yeah, sorry, my bad
Yes: &gt;NewLine is automatically appended to text processed by the Console.WriteLine and StringBuilder.AppendLine methods. -[source](https://msdn.microsoft.com/en-us/library/system.environment.newline(v=vs.110\).aspx)
Kind of OT, but this is why it drives me nuts when application devs write data caches. If you've got any of the major relational DBMSs in your app, you already have a super-sophisticated data cache, with those thousands of man-hours of engineering. So, when you write your own cache, you are actually *harming* the performance of your application (most of the time anyway), as you're switching from a better cache to a lesser one. If you just make sure your server has enough memory, you're getting that cache for the cost of the RAM. Why spend expensive developer-hours harming your performance? (obviously you can't do this with big data apps, but for most purposes it's fine)
A few options. If you're in the throes of generating a large string with empty lines within it, you can use interpolation (c#6 example already provided by /u/c6k, so here is a &lt;c#6 example): var aLongString = string.Format( "a string{0}with many{0}new lines{0}{0}of " + "which{0}some are empty{0}{0}", Environment.NewLine); or a string builder: var aLongString = new StringBuilder() .AppendLine("a string") .AppendLine("with many") .AppendLine("new lines") .AppendLine() .AppendLine("of which") .AppendLine("some are empty") .AppendLine() .ToString(); or special-char interpolation: var aLongString = "a string\nwith many\nnew lines\n\nof which\nsome are empty\n\n"; Of course all of these examples assume you'll use `Console.Write(aLongString)` (or `WriteLine`)
&gt; Sure if performance&gt;crashing If one can avoid handling FileNotFoundException then they're better off doing so, otherwise sure, use the Try/Catch but don't allow an exception just to check if the file exists -- that's madness. 
Worth checking out this pretty recent thread: https://www.reddit.com/r/csharp/comments/318jv9/a_love_letter_in_c/ 
That's bugged me, too. Easy fix, set up a method to do it for you, and invoke the method... something like static void nl() { console.writeln(); } and then invoke with nl(). Less typing... BUT it makes your code harder to read later.
Here is the timer version wrapped into a class: class PhraseTyper { Timer _timer; string _phrase; int _offset; public PhraseTyper(string phrase, int delay = 75) { _offset = 0; _phrase = phrase; _timer = new Timer(delay); _timer.Elapsed += this.timer_Elapsed; } public void Start() { _timer.Start(); } public bool IsDone { get { if (_offset == _phrase.Length) { return true; } return false; } } private void timer_Elapsed(object sender, ElapsedEventArgs e) { if (_offset == _phrase.Length) { _timer.Enabled = false; return; } Console.Write(_phrase[_offset]); _offset++; } }
Sorry, but I'm not sure how to do that.
But it's not only FileNotFoundException, there are 8 others; or are you planning to put 9 arguments in an IF?
Instead of Thread.Sleep(50) You replace the 50 with a random number in some range (Let's say 20 - 80) https://msdn.microsoft.com/en-us/library/system.random(v=vs.110).aspx Random rnd = new Random(); .... Thread.Sleep(rnd.Next(20, 80)); 
Thank you :)
Wow. thank you. that made things so much easier... and cleared up a lot of wasted space/text lol
Async. programming: https://channel9.msdn.com/Events/Build/2012/3-011 For other tutorials, I use Pluralsight unfortunately, however, Bob Tabor is basic but very good teacher: https://channel9.msdn.com/Niners/Bob_Tabor Also, IMO, books are shit (sorry book lovers).
&gt; I've also been asked some 'trick' questions Have you been FizzBuzz'ed? 
No problem :) I saw the other guys didn't understand your question, so when I changed from mobile to desktop, I had to write a reply :) And trust me, this is the way to go. I think the only reason this was not answered by the other posters, is that most programmers are so used to functions that they didn't even consider its absence :) Functions are really REALLY useful in programming. For instance, say you want to change the sleeping time to be longer - now you only have to change it in ONE place (in the function). And it shortens the code a lot, as you say.
It's been my experience that those USB to serial devices are like magic, they turn a USB port into standard serial port insofar as your PC (and .Net) is concerned. Make a note of what port it sets itself up as and you're good to go; you'd just open that port as if it were were COM1/2. Note that there are [some funny issues addressing a com port @10 and up to be aware of](https://support.microsoft.com/en-us/kb/115831), but this might not be something you'll run into.
Can you explain atomic and thread-safe LI5?
Actually no, but I did have to whiteboard a couple algorithms of comparable complexity for an internship interview when I was in college. That interview was much more demanding than any of the 'real world' interviews I've had since. EDIT: I would familiarize yourself with FizzBuzz just in case, as apparently it does come up. Hopefully you would be able to do it without studying, but sometimes our brains refuse to work normally in an interview setting.
Honestly, not really - at least in the form of asking for a definition. I would ask them to design (usually whiteboard) the objects for something simple, say a customer. I do that so I can see if they understand how to use certain concepts, not just the textbook definition.
In addition to the answers already provided, you can also use verbatim string literals: var verbatimString = @"This is a verbatim string. It can span multiple lines and is prefixed by an @ character. Escape codes like \n and \t will not work here. Indentations are preserved. To escape a quotation mark, enter two quotation marks ""like this""."; Which would be printed as: This is a verbatim string. It can span multiple lines and is prefixed by an @ character. Escape codes like \n and \t will not work here. Indentations are preserved. To escape a quotation mark, enter two quotation marks "like this". They are of somewhat limited use, but for the sake of completeness, I thought I'd mention them.
Atomic: either it happens or it doesn't, without intermediate states. For instance, atomically writing multiple lines to the console would mean that either all lines are successfully written, or none of them are, there won't be weird things such as one line errors but the rest are written anyway. Thread-safe: safe to use from multiple threads executing in parallel. For instance, `Random` is not thread-safe (if you call `Next()` concurrently on the same instance, its internal state gets messed up), but `HttpClient` is (you can make multiple HTTP requests at the same time using the same client, they'll all behave as if they were the only request in the world).
It's definitely better to abstract that away. For one, because it lets you easily mock it for testing purposes. It also enables you to adapt to other data sources in the future without having to touch your application code.
I believe when you are using @" you can escape the absence of the escaping by using two back slashes like \\\n.
I'm ok with that, seems like that's the best solution.
It depends on the company whether or not they really want to stress the C#/asp.net questions. If you didn't mention on your resume that you have C#/asp.net experience its unlikely that they will ask you quiz like questions on them. Now if you said you're a C# asp.net expert on your resume, be prepared to get railed on the inner workings of C#/asp.net although personally I don't find quiz like questions on asp.net to be particularly useful, in determining the skill of the person being interviewed. The only case where i would ask those types of questions is if i had a team with no ASP.net experience and we were about to start a project that was ASP.net 
Dam I've been looking forward to this fight! C# and random boxing match videos! This is the best sub reddit ever. Also to save a load of money on your next flight with westjet pm me for a promo code.
I used to do a decent bit of serial port drivers to interface with traffic devices and found that not all USB to serial converters are created equal. Some of the cheaper ones just wouldn't work on some machines. Everything you need is in System.IO.SerialPort, but [some people](http://www.sparxeng.com/blog/software/must-use-net-system-io-ports-serialport) apparently prefer working with C/C++ and Win32 libraries. I got by fine with System.IO.SerialPort, dunno how complex your protocol will be. I guess it features async read now which I did not get to enjoy. You will spend far more time trying to figure out how to test the device than writing the serial code itself, proprietary protocols sometimes lie. 
Agreed. I tend to stay away from "trivia questions". 
\r\n would probably be better - or Environment.NewLine
Technical interviews can vary wildly. Sometimes it'll be a chat about a previous project. Sometimes you'll need to do some coding on a whiteboard. Some places will give you more abstract problems "How would you count the number of 'on' bits in a number?" type thing. (There's an argument over whether these purely abstract things are testing for the right thing - some places see some of these as mandatory knowledge, others will give you all the pieces and just want you to assemble it correctly) Some places will give you a computer and a project, and ask you to do something to the project (debug it, add a feature, etc) Some places will ask you to about prior experience with certain things, and explain some related terms. "Have you ever dealt with Threading? What's a race condition. Explain how you might use a Mutex". I don't think it's unreasonable to ask what the interview will contain (in high level terms, like I've listed above) so that you're prepared. 
The thing is, you still need to understand how the application actually works. A lot of stuff is structured for you, but if you are doing something performance sensitive then you really should know what's happening in the background. I think that aspect of it would appeal to you. I would suggest writing some simple command prompt programs and then checking out the opcodes that are being generated. Then maybe write some funky little programs that emit opcodes directly. Then start picking parts of the standard libraries and see how they're implemented. Want to see how they coded the HashSets you get from System.Collections.Generic? [Check it out.](https://github.com/dotnet/corefx/blob/master/src/System.Collections/src/System/Collections/Generic/HashSet.cs) I love how [async await](https://msdn.microsoft.com/en-us/library/hh191443.aspx) works and I love to look at what a complex asynchronous function with a few awaits compiles to because it is ENORMOUSLY different from the code you write. Knowing what it compiles to, I believe, is a very important part of using it. I write textbook async await code frequently and it's proven incredibly reliable, but I also know how much code is actually generated from these keywords and I think is important. EDIT: and if its in the name of learning the platform, then I think you should start by reinventing some wheels. Over at /r/gamedev people always say not to focus on writing your own game engine *unless* you want to learn about how game engines work. I have written a couple of game engines for fun, with no intention of them being actually used for a released game, simply because I wanted a reference to how game engines in general work. I also reinvented some wheels in the business side of C# + .NET coding just to see how those worked. It's for learning, so whatever you do is probably going to teach you something. Go nuts. 
I'd lean toward 1, provided that you don't need to do anything on the server with the (immediate) result of your call to the thirty-party service. Without more detail, it's kind of hard to say, however. Option 3 has me scratching my head. Mixing client and server should be easily mediated by your WebAPI and Angular's $http service (or whatever you want to use to hit server resources). Figuring that one, IMO, should be priority number one.
Yeah, that's what I was thinking, it's just the doing part that gets me, I'm getting some shut eye, but will definitely look into it, I may be able to do something with methods? 
Check out Cracking the Coding Interview. Most places are going to give you a small task and have you try and solve it. This book has sample problems and the kind of questions they ask, etc. It's geared toward the "big 5" kind of places but if you have an interview at a smaller shop it's probably easier and not harder than Google. e: well I think it's pretty weird that anyone would downvote such an anodyne post but I stand by my advice.
Never use `\n` or `\r\n` or `\r` directly (unless you really know that you need to), [because different platforms use different sequences for moving to the start of the next line](https://en.wikipedia.org/wiki/Newline). Use `Environment.NewLine`instead. It is appropriate for nearly all use cases. This will suck a lot less in C# 6 when we get static `using`: then you can just do `using Environment` to import the static members of the `Environment` class, which will allow you to just use `NewLine`.
AngleSharp + HttpClient/WebClient.
I don't use it, but I wonder, why not use that? Makes the program larger? Useless processing time? What exact reason is it to not use that? Thanks :p
I'd be okay with that, if you wanted to avoid subscribing to HID attach/detach events.
EDIT: Unfortunately, even if you implement the IEquatable interface, you still need to override the default Equals method in order for unit tests to work. See below. Implement the IEquatable interface in your class: https://msdn.microsoft.com/en-us/library/ms131187(v=vs.110).aspx To expand on this, your tests are failing because default implementation compares referential integrity. What you can do is simply override the Equals method in your class. Here is very simple example: class Person { public string Name { get; set; } public override bool Equals(object obj) { return Name == ((Person)obj).Name; } } Tests: var Person1 = new Person(); var Person2 = new Person(); Person1.Name = "John"; Person2.Name = "John"; Assert.AreEqual(Person2, Person1); 
There's another thread at the moment that brings up the point not to use "\n", but to use System.Environment.Newline, since that's the abstract form. Console.WriteLine("For addition, hit the A key and press ENTER {System.Environment.Newline}For subtraction, hit the B key and press ENTER.");
Wow, if I figure out how to do that I might just start thinking I'm a real programmer when I'm not paying attention to reality. Thanks u/Millkovic 
Hope it helps. This is another fun thing to play with: [OpCodes Class][link] That's basically the guts of it all. [link]: https://msdn.microsoft.com/en-us/library/system.reflection.emit.opcodes(v=vs.110).aspx
No. Don't ever do that. It obfuscates the intent of your code. [And that's terrible](http://i.imgur.com/XtvEKGl.jpg).
Interfaces aren't complicated, but their use in abstract and loosely coupled programming is one of the most complex and important topics.
Ok, cheers for the feedback!
Post the code and we will do a review (at least I will if I have time). Interfaces are useful in testing. In all of my programs that deal with data, I use a Repository pattern to abstract the data gathering. For example, I will have IDataService (interface) that will provide a contract for data services to use. I will have 2 data services, DataService and DesignDataService (mock data) that implement this interface. Now, using the dependancy injection I can inject the proper data service; if program is ran in integrated VS emulator, it will inject DesignDataService and will help designers a lot since data will be populated in emulator without even running the application. For all other cases, it injects the DataService.
Thank you :)
Sweet thank you very much.
perfect
Welcome. I was using amibs smart thread pool, which was actually pretty good but akka.net is so much easier and more elegant. 
ALOT of programming teachers teach this practice, mostly for Private variables, but yeah....
Something that hasn't been mentioned yet: Look at unit tests. Now! Not later. You will thank yourself. Unit testing will help you write better structured code and more stable code. It's difficult to get into, but well worth the time and effort.
Yup. Methods are the way to go. A good piece of advice is to have each method only do one thing. As in, take input and validate, calculate result, display result, etc. 
if you want to do value-wise (as opposed to reference-wise) equality testing without implementing equals() and gethashcode() for all of your classes, you can write a unit testing equality method that serializes both arguments (e.g. with json.net) and compares the serializations. it is easy, very reusable, but has the limitations of serialization (which probably won't matter for you).
The pattern is to override Equals, GetHashCode and the operators == and != as shown in [this article on MSDN](https://msdn.microsoft.com/en-US/library/ms173147\(v=vs.90\).aspx). **However**, I would recommend that you do an Assert.Equals on each property instead. Like so: void AssertTriggersAreEqual(Trigger expected, Trigger actual) { Assert.AreEqual(actual.Prop1, expected.Prop1); [etc...] } The problem with overriding Equals is that you will have to write 30 lines of code in your class, that also need a separate unit test. It also changes the behavior of your class instances everywhere. Are you sure that the equality conditions you need elsewhere are the same as in this test? The problem with your TriggersAreEqual method is that it won't show you which property that failed. Doing an Assert.Equal on each property instead will show you exactly which property isn't equal in the test logs, without having to fire up a debugger.
الوطن | اليوم.. ترقبوا نتيجة الثانوية العامة 2015 على موقع "الوطن" عاجل: كشوفات نتائج الثانوية العامة لعام 2015 More news for نتيجة الثانوية العامة 2015 نتيجة الثانوية العامة 2015 بالاسم ورقم الجلوس مصر | تكنو دار Jul 5, 2015 - نتيجة الثانوية العامة 2015 بالاسم ورقم الجلوس الثانوية العامة لطلاب مصر مرحلة من اخطر المراحل فى حياة الطالب المصرى الثانوية العامة محاطة بالكثير من ... ترقبوا نتيجة الثانوية العامة على "اليوم السابع" غدًا.. قبل ... 17 hours ago - ينشر "اليوم السابع" نتيجة الثانوية العامة 2015، وذلك بعد اعتمادها من الدكتور محب الرافعى، وزير التربية والتعليم، فى الثانية عشرة ظهرًا. نتيجة الثانوية العامة 2015 موقع المصري اليوم بالدرجات ... 11 hours ago - موجز مصر ينشر لكم رابط نتيجة الثانوية العامة 2015 موقع المصري اليوم بالدرجات التفصيلية ، حيث كنا قد وعدنا الطلاب والطالبات المنتظرين لاعلان ... نتيجة الثانوية العامة 2015 موقع اعلان نتائج الثانوية العامة 2015 بالاسم ورقم الجلوس واسم المدرسة. نتيجة الثانوية العامة 2015 فى مصر برقم الجلوس بالإسم من ... 11 hours ago - نتيجة الثانوية العامة 2015 فى مصر برقم الجلوس بالإسم من موقع وزارة التربية والتعليم نتائج الصف الثالث الثانوي النظام الحديث والقديم الدور الأول. استعلم عن نتيجة الثانوية العامة 2015 برقم الجلوس موقع وزارة ... 2 days ago - أهلاً بكم أيها القراء على موقعنا موقع كلام اليوم”، وسوف نوافيكم بكل ما هو جديد وهام فيما يخص أخبار نتيجة الثانوية العامة 2015 برقم الجلوس والأسم بجميع ... ظهرت الان نتيجة الثانوية العامة 2015 برقم الجلوس - مدونة نتائج ... 1 day ago - ننشر الموقع الرسمى لاعلان نتيجة الثانوية العامة القسم العلمى والقسم الادبيى 2015 حيث خصصت وزارة التربية والتعليم موقع رسمى حتى يستطيع ... الآن نتيجة الثانوية العامة 2015 اليوم السابع برقم الجلوس ... 4 days ago - لكل طلاب الثانوية العامة 2015 علمي وأدبي يمكنكم التعرف علي نتيجة الثانوية العامة برقم الجلوس والاسم من موقع اليوم السابع الآن وقبل الجميع، حيث ... 112 نتيجة الثانوية العامة بوابــة مركـــز المعلومـــات اعلان نتيجــــة الثانويـــة العامــــة 2015. 2015© جميع الحقوق محفوظة لمركز معلومات - وزارة التربية والتعليم.
Xamarin vs Telerik?
You could also use `Path.Combine(string,string)` https://msdn.microsoft.com/en-us/library/fyy7a5kt%28v=vs.110%29.aspx
I was able to do the first 3 videos no issues. Now going in it isn't working. 
Single slash can denote a special character and therefore the double slash is used. Aside from Path.Combine() you could use an @ symbol to negate the need to use double slashes. E.g. var something = @"Directory/" + whatever 
If you have if blocks like this one if (int.TryParse(_minusInput, out _minusOutput)) Without either an else case or a default case your program will stop if you don't meet the requirement of the if.
.GetLength()?
no way. now i'm feeling bad
Probles solved thanks to Rehcra! Thank you. I'm not a native english speaker and i often make mistakes in this word.
Don't use dynamic. :)
&gt; Single slash can denote a special character and therefore the double slash is used. Those are for **backslashes**. Not slashes. There is a difference. &gt; Aside from Path.Combine() you could use an @ symbol to negate the need to use double slashes. No. Those two have **nothing** to do together.
Well for starters yes you're definitely going to want to create an abstraction for your database so you can mock it with a mocking framework. However you have multiple options on how you can pass that around whether that's through the OnNavigateTo, through a service pattern, or region context. As for you question on commands, the same class that contains the commands should also have access to your data (ie DBContext) so why would you need to pass the DBContext at all?
Thanks for the tips! As for DbContext, I was under the impression that it should be created and discarded every time it's used. Should I in fact create one DbContext for the view model (during construction) and keep it through the life of the view model?
"Understanding what OP means" He wants to host his own NuGet packages. He can either set up a NuGet server, or just put the packages on a file share and point to that.
what u/AngularBeginner said. I know how to consume packages in solutions already. My question is all about hosting the packages.
The '_' prefix should only be used for class-wide private variables that aren't constants. Method variables should use camelCase.
Here's a quick example of something you could do. The interface: namespace Store.Domain.Abstract { public interface IProductRepository { IEnumerable&lt;Product&gt; Products { get; } } } The concrete implementation: public class EFProductRepository : IProductRepository { private EFDbContext context = new EFDbContext(); public IEnumerable&lt;Product&gt; Products { get { return context.Products; } } } Finally you could test it like this (using Moq) Mock&lt;IProductRepository&gt; mock = new Mock&lt;IProductRepository&gt;(); mock.Setup(m =&gt; m.Products).Returns(new List&lt;Product&gt; { new Product { Name = "Taco", Price = 1 }, new Product { Name = "Burrito", Price = 5 }, new Product { Name = "Quesadilla", Price = 4 } }); For this example your viewmodel would take a parameter of IProductRepository so you can use dependency injection during unit testing and pass it the mock.Object. Since you're using PRISM I assume you're also using Unity, since you should already be resolving the viewmodel on the view just register the IProductRepository to ProductRepository so it too can be resolved at runtime in the same place you're already registering the viewmodel. Edit I know this looks terrible but I can't get my formatting to look right on reddit :(
IntelliSense is your friend
This is an interesting read, I ran the analysis on our solution and our projects are around 80-90 on maintainability. In fact the worst score went to our Unit Test project, way down on 63. Pretty funny really. Looks like I have some refactoring to do.
Hey guys, incase anyone had the same question as I did, here is how I wound up solving the problem I had: private static void ProperPathPrompt(Tasker newTask) { var pathOne = newTask.DuplicateCases[0].FilePath.Remove(0, 79); var pathTwo = newTask.DuplicateCases[1].FilePath.Remove(0, 79); var destinationSet = false; do { /*Stuck Here at the moment*/ var taskDialog = new TaskDialog { Caption = "Duplicate cases prompt", InstructionText = string.Format("There is more than one location for the CUBS case {0}", newTask.CurrentTask.CubsNumber), Text = "Please press the button below that correctly indicates where you would like to place the scanned file.", Icon = TaskDialogStandardIcon.Warning, FooterIcon = TaskDialogStandardIcon.Warning }; var commandLink1 = new TaskDialogCommandLink("Case1", pathOne); var commandLink2 = new TaskDialogCommandLink("Case2", pathTwo); commandLink1.Click += caseOneCommand_Click; commandLink2.Click += caseTwoCommand_Click; taskDialog.Controls.Add(commandLink1); taskDialog.Controls.Add(commandLink2); var tdr = taskDialog.Show(); switch (tdr) { case TaskDialogResult.Ok: { newTask.Destination = newTask.DuplicateCases[0].FilePath; MessageBox.Show(string.Format(@"You've chosen to place the file in {0}", pathOne)); destinationSet = true; break; } case TaskDialogResult.No: { newTask.Destination = newTask.DuplicateCases[1].FilePath; MessageBox.Show(string.Format(@"You've chosen to place the file in {0}", pathTwo)); destinationSet = true; break; } default: { MessageBox.Show("No path chosen, default"); break; } } } while (!destinationSet); Console.WriteLine("\n\r The file has been moved to {0}", newTask.Destination); } If anyone has any suggestions on how to shrink my code, or make it better, feel free to suggest it I'm always open to constructive criticism! Credits go to: https://zahidakbar.wordpress.com/2011/07/16/using-the-taskdialog-windowsapicodepack/ And a friend of mine who set me on the right path for the answer to this problem. Forgot to include the Click methods: private static void caseTwoCommand_Click(object sender, EventArgs e) { var tcl2 = (TaskDialogCommandLink) sender; ((TaskDialog) tcl2.HostingDialog).Close(TaskDialogResult.No); } private static void caseOneCommand_Click(object sender, EventArgs e) { var tcl1 = (TaskDialogCommandLink) sender; ((TaskDialog) tcl1.HostingDialog).Close((TaskDialogResult.Ok)); } 
One thing I learned is if you ask programmers to reach 100% code coverage with unit tests, you end up with some horrible unit tests. Usually they are worthless as they are no longer testing some sort of real world scenario, but just contrived code to get it to go down a weird path, and often valid code is actually bypassed. They actually give you false confidence.
I worked at a place that had a server and it was super slick. I didn't implement it at all but adding packages and downloading them were really easy. 
I'm using Visual Studio 2015 RC with ReSharper installed. 
Jesus, that's a significantly less straight forward function than expected. 
IsDone would look nicer as: public bool IsDone { get { return _offset &gt;= _phrase.Length; } } As well as using the property again in timer_Elapsed so it reads better. ie. if (IsDone) { _timer.Enabled = false; return; }
&gt; Suppose you did override Equals to make testing easier, but then later need to know if the instances are indeed the same reference - then you're kind of screwed. Well, not really screwed... that's what [object.ReferenceEquals](https://msdn.microsoft.com/en-us/library/system.object.referenceequals\(v=vs.110\).aspx) is for. But there's a strong point to be made about not changing fundamental behavior way later in the product life cycle, particularly to facilitate testing.
you can use visual studio community edition which is basically the professional edition with a different usage license.
Async may be outside the scope of OP's familiarity.. but Task.Delay() &gt; Thread.Sleep() generally.
&gt; Use the 'var' keyword for assigning variables and use more descriptive variable names; &gt; string text = textBox1.Text; &gt; becomes; &gt; var textInput = textBox1.Text; The jury is still out on this highly contentious issue. :) In general, whenever the type is obvious from the context my team doesn't mind var, if it's not immediately obvious we generally avoid it. In this particular case I agree that .Text means it's obvious enough that it's a string. &gt; would become the following which uses the return keyword to stop execution of the code in that method Multi/mid-method returns are also something we tend to avoid. Parent's feedback is all valuable, and I only reply to point out that different standards apply across companies and teams and that style and practices definitely have arguments on both sides!
imo, dont waste your resources on it. no one cares about MS certificate anymore. if you want to learn, stackoverflow and self practice are your best friends.
Read em all. Seriously, I read programming books for fun. I take them on vacation with me. My family thinks I'm weird. My brother-in-law once tried to read one of my books and after a couple of paragraphs he stopped and said something like "I have no idea what I just read". (These days it's a lot easier since I have a Kindle. I used to have a garage full of 3 inch thick programming books).
It's definitely a wake up call for me. Luckily(kinda?) I am going to my local community college first to get my general ed done. I am going to dedicate a couple hours everyday to to learning c#. Whether it be just watching someone code or reading a book, I am going to do my best to stay deditcated. 
pretty sure that code coverage is not included in Community Edition.
Works fine for me. With the recent Flash security issue, have you updated your browser's Flash plugin? 
Don't. Plan your path, don't waste your time. Languages evolve too fast for books to be able to track it. 
Especially given you are not a native English speaker, I highly recommend Respeller Free, one of the best ReSharper extensions 
Absolutely everyone has standards and I failed to mention that sticking the standard that those around you use is of utmost importance!
That's a nice clean up. One thing is I would opt in for an Debug.Assert and keep the ==. If the _offset goes beyond the length something has gone wrong.
At first I thought you were being a smartass haha.
This has been possible for years with [XamlSpy](http://xamlspy.com/). 
I've used SSIS packages in the past. I must say they are horrible to write, maintain or debug but they definitely do the job. The issue here is I am using MongoDB. I haven't found the equivalent to SSIS for mongo - if there is one. 
Very true - good post.
Lots of .pdfs are available with the help of Google. I tend to go with books over videos. Also I recommend learning C# in Notepad++ and using the command line to compile - if nothing else, learning it will give you an idea of how the language actually works. Every who writes code will tell you (especially young guys) it's a skill, one that requires practice. Code something, not matter what it is, every day and you'll make progress.
That's the plan right now. I already have notepad++, but do you recommend that over VisualStudio?
And even more years with [Snoop](http://snoopwpf.codeplex.com/).
My network folder is over a WAN connection and I'm starting to see some serious performance problems when trying to update my packages. I would recommend trying the web app if you have a slow connection.
I think XamlSpy is older. Or at least older for me.
These are good criticisms. In response, I can only say that MP3Sharp is an entirely native C# MP3 decoder. That is the raison d'être. It will play, without fail, on any platform (including Windows Edition N, which doesn't include WMP!). It's entirely likely that using some other library would confer better performance or battery life. But you would need to rely on some other, non-managed dependency to do that. &gt;why did you chose to license it under the LGPL The original code from which this library was ported was LGPL licensed.
There are three exams for that MCSD, 70-483, 70-484, and 70-485. All of them have resources in Microsoft Virtual Academy. For 70-483, there's this exam ref: http://www.amazon.com/Exam-Ref-70-483-Programming-In/dp/0735676828/ For 70-484, there's this exam ref: http://www.amazon.com/Exam-Ref-70-484-Essentials-Developing/dp/0735676844/ For 70-485, there's this exam ref: http://www.amazon.com/Exam-Ref-70-485-Advanced-Development/dp/0735676860 These will go over everything needed to know for the exam, but they won't necessarily go into a topic as deep as you would like, depending upon your experience. From there it'll be identifying the areas you feel you are weak in and finding approaches that help you shore up those particular skills.
Thank you. I will keep all this in mind.
For that second part, I believe he/she is denoting verbatim strings, which does eliminate the need to use a double backslash, he/she is just confusing backslashes with forward slashes
Here's my programming history (I'm 49 now so this covers almost 40 years): As a kid, I started with BASIC on an Apple ][ and graduated to machine language when BASIC didn't cut it. In high school, my school had a couple of PDP-11's and a bunch of Apple ]['s. I don't actually remember what I programmed the PDP's on but I think it was BASIC. My first Comp Sci course was Pascal. I remember I had to search the docs for how the Go To command worked since I had done all that BASIC. My instructor set me straight on THAT command pretty quickly :) Co-op jobs in University mostly involved Fortran. My first job out of school was C programming on Macs and PC's and Cobol on mini-computers. Then quite a few years of DBase, then FoxPro. Then a couple of years of Oracle PL/SQL and Java. Nowadays it's all C#, JavaScript, and T-SQL (SQL Server). Programming is programming; the tools definitely change but in the end your job is to translate "what" into "how". (Client says what it should do, I tell the computer how to do that). If you're a good programmer (I'm no programming god but I think I'm pretty good at what I do) you can learn to use whatever language you need.
TPL Dataflow changed my threading life completely. I'd be quick to recommend it over async await tbh
We use Artifactory. If this is for a small company with limited dependencies, then a file share would be fine. But if you have lots of projects and lots of dependencies then I would use a service.
Nice work!
&gt; looks like getting into a real and deeper understanding of the c# Highly recommeded! http://shop.oreilly.com/product/0636920040323.do (you can find it on file-sharing sites too)
Well, to be honest I would prefer to program stuff straight away. Which means you are forcing your self to actually think about what you are writing and not just read it over and over again, but on the other hand I'm more hands-on than theoretically. Start with something small. Like my first C# lesson were basically to write a notepad clone (after some introduction to visual studio of course). Some suggestions of first projects: - Calculator in a console (just to focus more on the code it self) - Calculator with either windows forms (it's old technology) or WPF (is what you should look into) - A notepad clone with either windows forms or WPF (same as above) But keep in mind, C# was not the first language i got in contact with. It was actually C++ and straight after that PHP and then C# (with .net). But the principle still stays true (at least for me), I learnt first all about the basic stuff like: - If-cases (if, else, else if and etc) - Switch-cases - Loops (for, while, do-while, foreach etc) - Sorting (this might not be as interesting any more, but basically bubble sorting etc) - Input &amp; output - Variables and properties - Classes - Inherits - Polymorphism This is not all the stuff there is in programming, but it should give you a hunch about some topics. It doesn't really matter which language you are using, if you understand the basics in programming the only difference (in most cases) between languages is syntax (how things are written). But remember: you don't have to understand everything from the beginning, the more you code the more you (hopefully) will understand. So my tip of an overhaul plan for learning C# is (if you're using the .net framework that is): - Get to know how C# works (basically what is programming) - Learn what OOP (object orientated programming) really means - Try to get a hang of what web development means when it comes to C#. P.S I'm kind of tired when writing this, so there will be some spelling errors, some grammar stuff and of course there also might be some stuff i got mixed together (hopefully not to much). D.S
I saw it before in the list and I thought that I don't need it. Now I see that it wouldn't be a bad idea to try it out.
Will I be able to see class names for controls too, like view models?
This article **How to: Set a Property After Animating It with a Storyboard** may be helpful, too. I'm curious about this, keep me posted! https://msdn.microsoft.com/en-us/library/vstudio/aa970493(v=vs.100).aspx 
Very cool, thanks!
The main reason for the certification is that it matters to companies when it comes to salary reviews or if you are looking at moving. I agree, practice is the best. But companies still look for that certification.
It looks like the Live Visual Tree has one advantage over Snoop in that you can see the full details of the style that is applied to an element. There was a session at this year's Build about it, will try and find a link. I'm sure I'll still continue to use Snoop even once we're on VS2015 though as that lets you view/delve DataContextx that I don't think Live Visual Tree lets you do.
[This might help.](http://stackoverflow.com/questions/983999/simple-3x3-matrix-inverse-code-c)
The matrices in system.drawing aren't really that flexible, seeing as they're not really designed for being used in general calculations. Why not just write your own little arbitrarily-sized matrix class and give it an Inverse method? You should know the math behind getting the inverse of a matrix, and representing a matrix itself isn't all that hard. (An array withing an array could do it, for example.)
Thanks for these fair answers. &gt; It will play, without fail, on any platform (including Windows Edition N, which doesn't include WMP!) AFAIK, `System.Windows.Media.MediaPlayer` does not requires Windows Media Player to be installed. However, the PresentationCore assembly needs to be referenced. &gt; It's entirely likely that using some other library would confer better performance or battery life. But you would need to rely on some other, non-managed dependency to do that. Of course, as this involves some specific hardware capabilities there is a need for non-managed dependencies at some point (just like audio playback). However, as the .NET framework wraps some OS native APIs, I expect that relying on either the .NET framework or the native APIs (if not already available in .NET) is the proper way to do so... The abstraction they provides enables end-users to exploit the hardware they purchase at its maximum capabilities. As an example, just imagine the impact of Intel SST (which is implemented at the driver level) on tablet batteries. &gt;&gt; why did you chose to license it under the LGPL &gt; The original code from which this library was ported was LGPL licensed. OK.
... not to mention stale non-crossplatform projects no longer under active development, right? ;) I get it, I really do. I intend to move to MonoGame at some point. But! The example XNA project is simple enough (perhaps 100sloc?) that it will (almost certainly) run as-is in MonoGame.
Some good, free info over at SyncFusion with their Succinctly series. They just come out with a new C# one. https://www.syncfusion.com/resources/techportal/ebooks
So would the OP's library be able to use SST (or other SIMD hardware)?
Awesome, thanks again for your help! Adding it as a parameter is definitely what I was looking for. Doing some more reading, it seems that since view models are normally short lived it's generally agreed that you can have one per the life of the view model.
The tutorials on lynda.com are amazing. Very professional and through.
I'll be making my Greasemonkey-like userscript manager BHO for Internet Explorer open-souce in a few days (not really sure if you'd call that advanced, though) and will be looking for contributors. Let me know if you're interested in helping out.
Got it, thanks.
I will look into that, thanks!
I think I can do that in snoop, too, via the property grid?
Good point. I don't use Assert as much as I should and this looks like the perfect place for it.
Looks good. There is a problem in mono, that's getting to be a problem right now, as more and more webservers and dropping old ssl ciphers. Hopefully this can be used, to fix this problem: https://bugzilla.xamarin.com/show_bug.cgi?id=26658
For the OP in regards to Class Inheritance: http://www.dotnetperls.com/inheritance
Joystick used to be connected... Then I took an arrow to the knee. 
Late to the party, but don't use Nuget.Server - it's a fucking dog. It unzips each package one by one to build its index. Same thing you'd see with a network folder eventually. We are using Klondike, which is just a nice front end to Nuget.Lucene. Nuget.Lucense as the name implies uses Lucene to index the packages once to keep performance sane. Much better once we get more than 100 packages out there. https://github.com/themotleyfool/Klondike Really a network folder wouldn't be too bad if you took care to keep it clean. But having a server that implements the spec makes tools with teamcity and octopus deploy a little easier I think. 
It doesn't build that index each time a package is uploaded using the API? Interesting. Also, you mentioned keeping the network folder "clean". I have thought about this before, but really one should never delete packages. You would have to scan your entire source code solutions and check to see what packages they are using and upgrade to the latest version. It is a hassle. Plus, it would break old changesets if you ever reverted back to them.
Lots of things in the web world are getting ported to ASP.NET vNext so it's a good time to help out with anything that interacts with it. DI containers and any tools like profilers or logging systems could probably use some love with their integration story. Projects like Swashbuckle need love too. If you aren't into the web, MassTransit is getting close to v3 and I'm sure it could use help too
For just AES, the standard library already has a 100% managed implementation. 
What are they changing with that version?
Thanks for this. I will add it to my arsenal!
Have also tried formatting as number, general and text. Same results.
Sorry, that internal brackets are there in the actual code, I just forgot to include them. It's just we had developer instantiate classes in a way that i had not seen before and I'm just trying to understand why he did it that way. (Still learning lots in c#)
Thank you!
This answer comes so often. Please make us of the search function that is for Advanced-Experts. Also: http://up-for-grabs.net/
From what I've understood, Inferno is just a wrapper for System.Security.Cryptography.
I suppose to technically be on topic of the subreddit I should have posted a larger chunk of code.
It sounds like your code is returning the complete dataset for sorting when the page is reconstructed in the code behind during the postback process. You need to check for postback and reapply the filter options to your dataset (or query) before binding it back to the gridview. 
Just search for changelog. But no point in downlaoding VS2013 now when in 5 days VS2015 is going to be released. And forget about Notepad++. Part of the reason why C# is so good actually is the Visual Studio.
Actually that's kinda what happens lol. 
It's the same idea, but it's technically not a repository. It's closer to a service proxy. In fact if you design your "repository" like a service object (just an object that has a bunch of methods that encapsulate calls to the external service), it would be more like RPC and would actually make more sense. Repositories are supposed to be a facade for CRUD operations against a specific entity. A lot of what you see people do, however, is mimic RPC and call it a repository. Like I said, implementation-wise, they are very similar, but do creating a "service proxy" instead of a "repository" would be more clear and correct, I think. For example, instead of this: public interface IUserRepository { User FindById(int id); User Create(User user); User Find(User user); bool Update(User user); bool Delete(User user); } you might have this public interface IUserServiceProxy { bool SendEmail(IMail message, User user); bool AssignSupervisor(User user, User supervisor); bool GetUserSubordinates(User user); } Another semantic rule of thumb I try to remember is that Repositories talk to data stores and Service Proxies talk to web services. If you're talk to a web service, even if *it* is talking to a data store, you are not. The service proxy is a facade with more semantic operations -- i.e. remote procedure calls, whereas the repository talks to the actual data store. With both, you are creating a facade, and with both, you can use dependency injection. Functionally the same, but semantically different. [](https://lh3.googleusercontent.com/-0nHAJB4vccI/VabU_CsnMDI/AAAAAAAAHWw/nxCiizpY7uA/s0/2015-07-15_14-47-37.png) Just my .02 
He wasn't talking about concatenating paths at that point, just merely pointing it out. 
very good question!
to build on this suggestion....use the OCR vision for oxford and determine if all the words are the same on both documents. If the image is scaled and skewed differently than it's possible that there will be a 'likelihood' that the document matches another on file. 75% success would be a phenomenal start
I do hope to include OCR vision to help increase matching accuracy, though I worry that imperfections in the OCR will create false negatives in document matching. Also, when the stamped version of a document gets revised and sent to me, it will need to be matched again back to the stamped version.. but the text on it will likely be somewhat different due to the changes requested in the red pen. To account for that, I would probably need to use OCR to look only for specific key words like document titles, or revision numbers. But if there is a hiccup in the OCR on those specific words, I would be SOL.
As has been mentioned, its predominantly a wrapper around System.Security.Cryptography. So I don't think that there is as much of a concern as this isn't a custom implementation of any cryptography algorithm. Its open source, and not a huge library from what I've gone through, so perhaps reviewing the source will be enough to address your concerns. Using the .Net crypto libraries by themselves still has some potential pitfalls, which means that there's room for a wrapper library such as this one. I know a number of environments that I have been in have had their own utility library to wrap those libraries, and there's no guarantee that those wrappers correctly used the .net libraries. Having the wrapper out there and open source is much better than a home cooked one, but that's just my opinion. Also, I believe the library is essentially the application of the [author's book](http://www.securitydriven.net/), which I'm going to put on my list to read through.
wow... just like that, huh? what's a good book on Ninject?
I don't know of any. The wiki is great, though. https://github.com/ninject/Ninject/wiki
hmm, i was unaware that i would need to pay for a subscription.. is it worth it?
Inferno only uses the BCL it merely uses the correct settings for blocksizes, IVs, and ciphermodes.
Yeah, nothing kills credibility like being skeptical about a week-old crypto wrapper.
I'd downvote you 100 times if i could. Take 5 minutes and read the entire source code! 
Maybe? I'm still digging around a bit. There's lots of dependencies which i need to figure out what they do. 
likely will release with 2015.1 Update 
Here's a huge list of .Net open source projects linked to from themorningbrew.net last week: http://scottge.net/2015/07/08/a-complete-list-of-net-open-source-developer-projects/
You need to use the [Microsoft® SQL Server® 2014 Express](https://www.microsoft.com/en-us/download/details.aspx?id=42299) The express version only lacks some maintenance ui planning as far as I know. I have used SSMS for the last 17 years, it is so much better than the Visual Studio database stuff, but I'm still locked in VS2010.
I don't use the "server object explorer" it is a shadow of SSMS, especially if you get tasked with database administration too. I also only use the LINQ Entity frame work any more. 
`nl` would still be a **shitty** method name. 
Then he still mixed up slashes and backslashes.
FYI, there are plenty of other IOC libraries that [outperform Ninject](http://cardinalcore.co.uk/2015/01/28/ioc-battle-in-2015-results-using-ninject-think-again/). Autofac is my new favorite, and I found that swapping one out for the other was extremely easy. As simply as swapping out a single setup class. Having said that, I use both Ninject and Autofac in two seperate projects, and I don't have problems with either.
Can you explain that graph? What are the engineering units of the X-axis?
Fwiw ninject isn't really a good IOC container at all. Use StructureMap or AutoFac.
Release candidate in November, with GoLive license (they support production use).
Well, that's what I was doing before: string providerName; DbProviderFactory f = DbProviderFactories.GetFactory( providerName ); // inject connection string and provider to get a database client IDbClient db = DbClientFactory.GetClient( connectionString, f ); // inject the database client into a repository IRepository r = new Repository( db ); // inject the repository into my controller IController c = new AutoCompleteController( r ); So I'm doing serial injections, I get told that I need an IoC container instead of wiring it by hand. And before this, I was using factories to construct concrete objects with just a string. 
A container is great for doing all that plumbing automatically and seamless, and of course in a way that decouples all those implementations and constructors from the things that need the interface. It's perfect when you have a dependence on a contract and don't care about the implementation details. For me that is usually like 99% of the time. But in the case of the tax calculator, you *do* care about the implementation so you need something more there.
Doesn't parse; did you mean *syntax ?
I've been perfectly happy using Autofac for almost 10 years now, but is it that much better than ninject? I thought they were pretty comparable.
It's funny. I've been through dozens of interviews and have never been fizzbuzzed lol I've been asked vague riddles more often than not. 
Thanks. People who designed system crypto, as usual ignored the most basic security advice: if it's too hard to use, people wont use it. 
Depending on the situation the container can often be configured to do this automatically. If you had /uk/ in the url for instance, it could automatically create the uk version. Or it could change based on the location of the logged in user. The consumer just asks for an ITaxCalculator and gets the correct one, it doesn't care why or how.
it's free as long as you're under a certain number of calls. If you plan on doing this for your own use, you likely will stay under it. if you plan on deploying it for many users, you'll need a subscription.
i think the nature of the moving target makes the need for contributors necessary. But things look to be stabilizing rather quickly in terms of the overall API. I think you can get about 95% of the way there for the majority of these projects and tweak per beta release.
What is the book trying to have you do with the object explorer? Your database is not going to be under the System Databases folder so you can start by collapsing that.
Did you bother reading the documentation?
&gt; It is requesting that I create a database diagram for a contacts application i am creating. turns out Microsoft officially removed that feature in lieu of using SSMS. I'm confused. SSMS supports creating diagrams. If your screenshot is any indication, you're looking in the wrong place on the explorer on the left. You shouldn't be in System Database or TempDB. Find (or create) the database you're trying to work with, and create a diagram once you've added a table or two.
I say just open an account and use the free trial (2 months I think?) to spin up a simple project for free. Make sure to play around with blob storage, nosql storage, queues, workers so you get a sense of how it all works and how it's interconnected. It's not hard to learn, just a slightly different way of doing things. Like you said, Azure is expensive as hell and is more suited to very big firms. If you plan on always working for small projects/self hosted, it's good to know how it works even if you never plan to use it. It would certainly help you if you start using similar stuff but outside of the azure environment (nosql storage, worker queues, but using free software like Redis, cassandra, rabbitmq) 
Azure, and cloud environments can be great things to have on your resume. Since I started working in cloud environment I've found more and more uses for them. As I've gotten more comfortable with it I've encouraged the companies I've worked with to do more and more on the cloud. It's great both for getting prototypes up and running, for hosting production code, and for hosting internal tools. As for what you need to know...I don't think there is an answer to that. It's not usually a required skill, the way, say, DI or MVC might be. It's more of a skill that adds value, especially for senior engineers who have some sway in the companies policies. In general I find it less something the company asks for, and more a value that I can advise them on. Understanding their data storage options, especially ultra-cheap NoSQL ones like Azure Tables opens up huge possibilities for making applications more scalable and saving money on storage and archiving, as well as introducing excellent backups. Understanding their VM environment opens up possabilities of cloud hosting on-prem services like JIRA, Active Directory, Git, and Exchange. Understanding their SaaS hosting options allows you to recommend ways for a company to better host production code, set up testing and staging enviroments, and do better prototyping. And there are a ton of other services they offer: computation, web roles, etc. I don't think it's so much a requirement to get a job so much as a great way to shine in once you have a job, because it vastly expands the options you can provide to your company.
The good stuff can be found in Adblock.cs and Globbing.cs. The rest is just plugin-specific code. If you can extract an HTMLDocument from the browser, you can supply it to `AdblockEngine.Filter()` which will remove the ads from the document. If that's not possible, you can just reimplement the code from `FilterPage()`, which is pretty simple. All it really does is iterate over all elements in the document, test them with a call to `ShouldBlock()`, and remove them when the call succeeds. 
On top of that, the graph/metrics it gives isn't that great. Straight times, no breakdown of 95%, 99%, etc. No analysis at all really...
Substantially less feature rich and absurdly slow.
Maybe they renamed it but I started using it with SQL server 7 in 1998/99 as far as I can remember. The version that came with SQL Server 2000 was by far the best. I stayed on that version till it wouldn't work on 64bit OS's.
Trust Azure/AWS as you would putting sensitive information on a strangers computer. Because they still get compromised time to time. So encrypt everything, properly...
And it's going to be closed down by google :( Edit: btw it's on github, check it out
Until they finished EF7 I won't be able to start working on vNext. The current state of it makes it unusable for me.
oh that is beautiful, i will have to see if i can get this to work for me before they start charging money! i'd be willing to pay for it if i knew i could make it work, but preferably not before that. thanks again!
Good luck, hope it works out for you.
Is EF6 compatible with vNext right now?
Oh yeah, no problem at all. It's the recommended way currently to do data access in vNext 
Oh wow! That sure changes everything. Thanks for letting me know, gotta go do some porting.
no problem. only thing holding me back are things that tie directly into the middleware layer or rely on specific ASP.NET feature (e.g. autofac and swashbuckle). But autofac is working great for me now, and Swashbuckle vNext aka Ahoy is looking like it'll have a release soon. Pure .NET stuff works no problem.
Yes, but not as a chrome extension. I've actually already created the program in AutoHotkey a loong time ago, but I decided to learn a marketable programming language, so I'm just going back and remaking what I made in the past in AHK but in C# and Java.
Sounds awesome, good luck!
So 250 seconds for 1,000,000 injections is: 25.0 seconds for 100,000 injections 2.50 seconds for 10,000 injections 0.25 seconds for 1,000 injections But if I'm creating the kernel during Application_Start() and I dispose the container during Application_End(), then I only have to pay that performance cost once, right? 
I always use "as" followed by a null test.
Honestly, it's just inertia. When I started C# programming years ago, I read somewhere that "as" was better. So that's what I used. Even if at this point it isn't ideal code I'd rather keep with it so the code base doesn't mix techniques. So it's 100% pragmatism. I don't recall ever throwing an exception. I usually handle it with some other logic. The "if" is already there, after all, so there's almost always a way to handle the case when the cast fails. I should note that most of my programming is ASP.Net so the "as" casts are usually on UI elements (FindControl() for example). So if they fail it's most often because the control doesn't exist rather than because it's the wrong type. And if doesn't exist, that's usually an expected case (screen has no data, that field isn't applicable, whatever).
I tend to answer this from two perspectives: The tactical perspective: Where these things must happen, I almost always use casts. "As" with null check brings variables into wider scope than they need, invalid cast exceptions are usually desirable (fail fast!,) "as" overloads the meaning of null and can hide issues with null inputs, etc. The strategic perspective: Casts, "is" checks, and "as" are all code smells. Fix your object model.
Use the IoC container to inject the factory.
Sounds like a fun project. My first thought is that you could use a [constraint solver](https://github.com/jozilla/Cassowary.net). I'd model the domain in terms of exclusion (e.g. can't work on that day) and inclusion criteria (e.g. can do the job, the amount of times worked in x period) and based on that create a ranking algorithm to measure the 'quality' of the candidate. In the end you would be writing a back-tracking iterative constraint solver. Prototyping is fine, but you'll need to whiteboard the problem (criteria, constraints, rules, logic) before jumping in head first. It might be useful to invest time in writing unit tests too, to ensure the constraint solving is deterministic.
I think both are correct and it's not a case of preferring one over another, but rather using each one for the correct use case. (i.e. the right tool for the job) In the purely academic, everyone writes the code the right way and the OO design gods shine down on you then casting is the "correct" way of doing things. In theory there should never be a good reason to use an is or an as. In practice you run into legacy code, third party libraries, sealed classes and performance sensitive applications that all make is and as not only a good idea, but necessary. Throwing an exception is very expensive and if you're doing it often when you could be doing a simple null check then I challenge the idea that you should be throwing that exception.
When I was in high school(2002), this was the reasoning for people to "make fun" of me reading a college textbook from 1983, titled "Applied Structured BASIC". I just liked reading about programming stuff at the time. "You'll never need to know that...." "it will never be useful to you" etc. When I was interviewed for my current software development Job, I was given code samples in C# to decipher and figure out what they did (easy enough); then, as if by providence, I was provided another sample. in a dialect of VAX-11 BASIC. One of the dialects of BASIC covered in the book, so I knew exactly what I was looking at. MAT READ? MAT WRITE? good times. So yes, programming languages definitely evolve quickly, and realistically books like "The Art of Computer Programming", Code Complete, Clean Code, etc. which attempt to be as removed from any real high-level programming language as possible will have the most generally applicable information, but that doesn't mean that learning about specific programming languages- even older ones- will never be useful, because businesses do not evolve their processes quickly. (Before you feel sorry for me I don't write in BASIC, it was just needed because the C# programs I write are a Windows version of an ancient mainframe system, since we were finally able to convince our customers to upgrade.)
Take a look at genetic algorithms if you're interested in really learning something interesting. I had a class when I was a student where we (as a class group) had to develop a university schedule that worked with many constraints around room resources, time slots, professors, and quarter-to-quarter class order (cs 101, cs 201, cs 301 should be available in sequential quarters, but may also be only offered 2 quarters a year, etc. ) Since your problem has many valid solutions, if you can model the data correctly and devise a scoring mechanism for those solutions, a genetic algorithm might be a reasonable approach. But may also be overkill. :)
Ah. By the way is there like a guide on using EF6 properly on vNext, along with Identity?
call it newLiine()
The reddit trolls are out today, I only said Azure/AWS due to the OP mentioning them. Geez guys, fuck off.
I think it will largely depend on the _kind_ of code you're working with and the _intent_ of it. Here are my scenarios, _generally speaking_: 1. The type you're casting to is a `struct`. Assuming it's a non-nullable `struct`, don't have an option here. You _must_ use a cast. As such, it'll follow any guidelines I list below for casts instead of `as`. (That is, whether it warrants an `if (obj is T)` check first or just to jump straight in with a cast without the check) 1. If as the developer, I've decided that a particular piece of code **should** be of the type I'm casting to, that under no logical/known circumstances should it be anything else, (thus warrants no explicit/custom error handling code muddying the waters of the method) and that if it _is_ something else, this is bad and my code should abort, I just straight up cast. No `if` check, no `as`, just cast and forget. If there is a bug (for some reason) that provides an incompatible type, I want to know quickly and abort the code ("fail fast"). One scenario this can happen is with wrapping untyped collections and using generics. For example: public class SomeInstanceLookup { private Dictionary&lt;Type, object&gt; Lookup = new Dictionary&lt;Type, object&gt;(); public void Add&lt;T&gt;(T obj) { Lookup.Add(typeof(T), obj); } public T Get&lt;T&gt;() { return (T)Lookup[typeof(T)]; } } 1. If you have a _measured/proved_ performance issue with the double type checking casting, then _measure it first_, then use the single `as` cast with a `null` check. This is likely more indicative of other problems. If you're having a performance issue from the cast itself, then consider refactoring to avoid checking (that is, you can do a blind cast and be sure it will pass), or ideally avoid having to cast _at all_. That's the ideal scenario, if you're _just stuck_ with the way it is, then do the single type check. I do put a comment saying _why_ I've deviated from my natural code styling though so 6 months down the road I don't rewrite it back and reintroduce the performance issue. 1. If performance is not a factor, and I'm not accessing twice a field or variable that could change, and I would prefer not to pollute scope, and not refactor (where I would deem refactoring in _this special particular circumstance_ a detriment to code cleanliness/maintainability), then I can use an `is` check then cast: public void DoSomething(object obj) { if (obj is SomeType) { SomeType typedObj = (SomeType)obj; //do something with typedObj } //do other stuff always, maybe with `obj`, maybe not. //but this code doesn't care about `typedObj` and I don't want it in scope } Some notes on this case: * Yes, I'm aware that at this point I'm doing the type check multiple times (but I've already determined performance is a non-issue for this particular piece of code). * Yes, one could argue I should use `SomeType typedObj = obj as SomeType`, but I generally choose not to because of Guideline 1 above where now I have code that _sometimes_ uses an `as` and _sometimes_ uses a cast. I prefer my code to look consistent. * If I don't have other code that's running, it's just the type check and do something with the typed data, I have experimented with using an `as` and `null` check (as there are no more scoping issues), but in practice I tend to still fallback to this due to code consistency, habit, and continuity (adding/removing code keeps the new code correct without rewriting the checks) * `obj` in this case is a local variable, but if it were a field or method return value (or some other _thing_ that would have to lookup/execute twice and thus _change_ between the `if` check and the cast), then I'll tend to use the `as-null` cast/check. In practice, I don't think this scenario comes up often. (for me at least) This is generally what I do. First I look at refactoring away the issue in the first place, then I tend to fall back to the above guidelines naturally. However, it should be noted that this is for the _kind of code_ I write (application code, pure C# operational code, library code). Usually the code I have is strongly typed and rarely do I have to work with untyped/casting code. It's usually in the context of providing generic wrappers (Guideline #2) that I have to do my casting. In my scenarios I'm almost always casting from `object` or from an `interface`, so accidentally executing a custom `explicit` conversion operator isn't an issue. I also rarely have a `else` case when my type isn't of the compatible type. If they're incompatible, _in my day-to-day work_, I would want to throw an exception anyway, so I don't bother writing custom error handling code, I just let the runtime throw its `InvalidCastException`. You didn't specify the _type_ of code you're writing, or the platform (ASP.NET, WPF, Unity3D, UI-level, database level, etc.) or the kind of scenarios you're dealing with, so the only thing I would recommend is _just make sure the code you're writing is safe_. That means, do checks when you should, handle the _failure_ cases appropriately, throw exceptions when you should, don't fail silently (that is, `as`-`null` or `if(is)` check then do _nothing_ when you expected _something_ to be done). Don't do a unchecked cast, and wrap `try/catch` handlers to catch the exception -- do a checked cast instead. Don't be worried about performance (two checks) if performance is a non-issue (say, for GUI code); favour readability and maintainability instead. I realize that this doesn't actually answer your question ("Prefer cast or as?"), but the reality is the answer is _it depends_. I would argue neither is _"more correct"_ than the other, just different. Personally, I would like to see a C# language feature in the future that lets me do something like this: if ((SomeType typedObj = untypedObj as SomeType) != null) { //do something with typedObj } (But with nicer syntax. I just used the full blown check to communicate the intent) Just so I can do my check/assignment in one line and avoid polluting the outer scope. Jon Skeet recognized this too and, like he usually does, [twisted the language into something horrid](http://stackoverflow.com/questions/7113347/c-sharp-assignment-in-an-if-statement/7113387#7113387) to achieve the desired result.
Once again, I *only* mentioned them because OP mentioned it. This was not an attack against Amazon or MS. The reddit trolls are out and furious.
Every time I edit a lambda in the middle of a debug session it gives me the option to Edit or Restart. If I hit Edit and break the debug session the next time I go to Run my program it stalls for about ten seconds and then says it failed to get a lock on something. It then does not run until I restart visual studio. Does this happen to anyone else?
Wow, I was just asking if you were aware of any known breaches of Azure or AWS. No need to refer to me as a troll or engage in such rude language. Sorry if others have been trolling you but that was not the intent of my question.
&gt; Casts, "is" checks, and "as" are all code smells. Fix your object model. This. A thousand times this.
 var match = Array.FindIndex(uniqueNames, x =&gt; x.Equals("jeff", StringComparison.InvariantCultureIgnoreCase));
Thanks guys - both of you.
Not necessarily. A lot of companies are moving to a more dev ops situation where senior developers are much more involved with setting up the production, staging and test environments. This is so that architectural decisions can be made with the full knowledge of the stack its going on, what's available and what it'll cost.
I work at a mid size company with a couple hundred employees. We've looked into Azure and AWS multiple times and it just doesn't save us anything in terms of cost. Also, our turn around time on server deployments is about 4 to 5 hours from when I ask our ops people until it's up and ready to go (we automate the hell out of everything and I work with good people). So we've yet to move anything over to them. The only real push towards them at the moment is Microsoft's constant licensing changes to things like SQL Server, etc. But we're finding this just pushes us more towards alternative solutions like PostgreSQL... All of that said, I definitely think that you should learn about the platforms. Even if you ignore the whole resume padding portion, they're interesting and have their uses. If you're dealing with government clients, depending on where you are, etc. you may not be able to use Azure for hosting production applications but it works quite well for testing, instrumentation, etc. You can do things like write a set of scripts to set up your environment, push, runs your tests, then tear down. So even if you don't use it for production applications, you can always find other uses. Another thing to keep in mind is that Azure and AWS are always evolving. They come out with new features monthly. For instance AWS just released "Amazon API Gateway" and a couple other things that I haven't looked into yet but sounded cool. Similarly Azure just announced "Cortana Analytics Suite", which from the info graphic takes data from your apps, puts it through the "Cortana Analytics" light bulb cloud and then produces people... Or something. I wasn't really paying too much attention at the time. The point is, they're thinking. We like that. But also, don't get too tied up on specifics until you need something. Stick to the basics and just get acquainted with the tech, at least initially. Because a year from now, their entire catalog of offerings may change at the rate they're going.
So..? Did you even bother to read the documentation? At least once?
Whatever you do, do not purchase any of Tom Owsiaks courses. Very poor explanations. 
I've bought a few and pirated a few udemy courses and I'm not very impressed with them. They seem to let anyone make a course. I bought two very popular courses and they where not very good. I learned much more from people on YouTube then in the videos I've seen from udemy. I find pluralsight or Lynda have better instructors.
While you may be dealing with 60! possible combinations of employees, assuming that shifts overlap and an employee cannot cover two or more shifts simultaneously, this must narrow down possible schedules. So, just as an idea to get you started, the following algorithm might be useful: * Increment Schedule (I'm assuming an integer here, initialized to 0). * Create a list of shifts (I'll use the name Assigned) to represent shifts assigned to this Schedule. * For each existing shift: if the shift does not have a Schedule assigned to it, and it does not overlap with any of the shifts in array Assigned, assign the current Schedule to the shift and add the shift to Assigned. * Loop until all shifts have been assigned to a Schedule. Further optimization might be performed using dynamic programming, with a scope of n * m possibilities, rather than n!, which is doable. 
Here you go. http://stackoverflow.com/questions/2139812/what-is-a-callback
How is var related to this?
Recommendations for good YouTube vids?
Why don't you like SpecFlow? I think the concept of BDD is awesome but that it can be hard to fit all in "Given, When, Then"
http://referencesource.microsoft.com/ Edit: You can also enable debugging through the .NET runtime librarys. See http://blogs.msdn.com/b/dotnet/archive/2014/02/24/a-new-look-for-net-reference-source.aspx or http://referencesource.microsoft.com/setup.html
Xamarin has a pretty decent collection of tutorials on their site.
There's also [navigating](https://msdn.microsoft.com/en-us/library/system.windows.forms.webbrowser.navigating\(v=vs.110\).aspx) and [navigated](https://msdn.microsoft.com/en-us/library/system.windows.forms.webbrowser.navigated\(v=vs.110\).aspx) events you can handle. Are either of those more appropriate for what you're trying to accomplish?
 webBrowser1.DocumentCompleted += new WebBrowserDocumentCompletedEventHandler(webBrowser1_DocumentCompleted); Here you are attaching an event handler to the event. This code does **not** block until the event happened. private void webBrowser1_DocumentCompleted(object sender, WebBrowserDocumentCompletedEventArgs e) { System.Threading.Thread.Sleep(10); } This code blocks the current thread for **10 milliseconds** when the event occurred. You can not effectively block the execution of code until the event happened, and you should not try it. What is it that you **actually** want to achieve? That the control can't be used while it's loading? Then set the IsEnabled property to false, then set it to true again in the event handler.
Agreed, as much as I strive to wrap and centralize those kinds of things behind abstractions involving generics, with type constraints applied where possible in order to help narrow usage and guide the team onto the happy path.
I want the entire program to stop until the web page loads.
the amount of var and auto (C++) abuse I do you would hate me.
This doesn't help me.
Not the way you want, no. Also, the web browser is part of your program.... Just disable the user interface and show some loading indicator. That's the best approach. You should also get a good C# book, if you don't have one. You clearly lack the basic stuff one should know. I'd suggest Head First c#.
General question: are memes allowed in this sub? I personally do not like them (especially in a subreddit of this sort), but didn't see anything actually forbidding them on the sidebar.
Microservices is a great architecture for some scenarios. But don't jump on the microservice band wagon just because it sounds cool. There's a quite significant overhead in using it compared to a monoloithic application. If you're one team with less than ten developers, chances are that microservices are more trouble than it's worth.
Uh... You may have picked the wrong sub.
Very interesting benchmarks, thanks for posting! The "warm-up" that is detailed separately - is that the cost of JITing, or some other factor?
This "sample" has a huge problem in that it doesn't take into account multiple concurrent request. Also, there is no handling of messages coming in multiple times which could happen with rabbitmq. Also no timeout handling in case your rabbitmq goes down.
I'm still getting an error due to the perms stored in the .config file. I'm using a custom user instead of a built-in account.
Is there any reason you can't put the code you want to execute after the page loaded into the "webBrowser1_DocumentCompleted" event? // some code webBrowser1.DocumentCompleted += new WebBrowserDocumentCompletedEventHandler(webBrowser1_DocumentCompleted); // code that is executing after this declaration // move all this into event
Fair enough. I don't disagree with the point you made though.
If I chose to manually throw an exception, I would only do it when I can provide additional details that the cast exception doesn't include. Otherwise, just let it throw.
X-post Subreddit Link: /r/Unity 
Yes, that is the intended behavior. The problem is that when I do find a compatible hardpoint and add the module, the return statement isn't actually being called. Here's the updated function and console logs. This is getting weirder and weirder... // Used to specify a value associated with the module when adding it to the ship public void AddNewModule(GameObject modulePrefab, int optionalNumber = 1) { Module module = modulePrefab.GetComponent&lt;Module&gt;(); int index = -1; bool bullshit = false; //Iterates over the hardpoints for(int n = 0; n &lt; hardPoints.Count; n++) { HardPoint hardPoint = hardPoints[n]; index++; Debug.Log("Checking hardpoint: " + index + " and bullshit is " + bullshit); //If the hardpoint is empty, if(hardPoint.module == null) { //Checks compatibility with the type of hardpoint if(hardPoint.IsCompatibleWith(module) &amp;&amp; bullshit == false) { bullshit = true; //If they are compatible, create the module GameObject newModule = Instantiate(modulePrefab) as GameObject; module = newModule.GetComponent&lt;Module&gt;(); //Add the module to the hardpoint Debug.Log("Compatible hardpoint: " + index + " and bullshit is " + bullshit); AddModuleToHardPoint(module, hardPoint); Debug.Log("Compatible hardpoint: " + index + " and bullshit is " + bullshit + " and we should be returning now, no more checking!"); return; } else { Debug.Log("Incompatible hardpoint: " + index + " and bullshit is " + bullshit); } } } Debug.Log("Didn't add " + modulePrefab.name + " to " + gameObject.name + " because no suitable unassigned hardpoints are available."); } [More intense console log](http://imgur.com/OG7TTFX) This should just not be possible - I declared the boolean outside of the foreach loop and it's getting reset to false inside the loop.
If you're doing it repeatedly in a block it's probably less confusing/less polluting of the global namespace to declare an inline function just for that bit of code (`Action&lt;string&gt; wl = s =&gt; Console.WriteLine(s)`, for instance).
No change. :-/
What's the code in AddModuleToHardPoint?
That's weird. Maybe try returning a value from the function?
Yes. [Start with Unity, which is an engine scripted in C#](https://unity3d.com).
Unless String.Format() is specifically compiler-optimized, I can't see why it would be more efficient considering it must involve passing through the input string looking for {x} and replacing that with parameters. Even if it were optimized, littering your printout statement with {0} reads terribly to me - like holy crap, please never ever do that. If you're logging for diagnostic purposes, then you're obfuscating the debugging code. Why not print out each line of debug output... with a line of debug code? If you're trying to use debug output to make pretty stuff (as OP is clearly trying to do) then you get pretty alignment from your console writeline strings (Their beginning quotes line up), you have an easier time debugging any null exceptions thrown from your console writeline, etc.
Jesus christ guys, you know what we could do instead? Console.WriteLine(). Use the method intended for this, don't produce garbage code. OP Clearly stated he's a newbie. He's doing things wrong. Tell him he's doing things wrong, not helping him find silly ways to do things.
FWIW verbatim strings can be mixed with C# 6.0's string interpolation - e.g. `Console.WriteLine($@"Hello, {name}!");` Never got over the fact that verbatim strings don't account for whitespace when you do newlines, though. That is, if your var verbatimString = ... was indented 4 spaces, then the first line would have no indentation, but every other line would have 4 spaces of indentation. Ick =(.
I think it's good practice to be wary of casting unless you're dealing with reflection - it leads to fragile code, e.g. if you're taking in a parameter Car and casting it to a Mercedes. That just breaks the liskov substitution principle of SOLID design in my mind. And if you're using multiple "is" or "as", then maybe a better design pattern might help. 
GZip is not Deflate. Deflate is not Zlib. GZip is not ZLib. Zlib is not Deflate. Deflate is the data compression algorithm. It turns an input buffer into decompressable garbage that hopefully looks smaller. zlib is a two-byte header, deflate, and then a four-byte checksum. gzip is a larger header, deflate, and then checksum and length footer. If a program wants gzipped data, you cannot use zlib for that. 
Definitely not something that I worry about performance wise. I just bring it up because FXCop thinks `as` is faster and has a rule to that effect.
This. Return hasn't magically broken. If you see the output from op's extended trace, his bullshit bool changes between the first trace bit that makes into the hardPoint.module == null check and the second (6 and 7).
If you read interviews with people who are doing the big MMO games now, they all started with simple single player games. I recommend you start with the smallest bit of programming that can still be called a game, and go from there. Write a Pong or Tetris clone. Programming is a craft, and there is no substitute for paying your dues. You are a long way from having the language be the limiting factor.
&gt; Write a Pong or Tetris clone. Relevant article: http://tinodidriksen.com/2003/05/06/but-can-you-make-pong/
RuneScape was one of my motivations to learn programming when I was younger. While creating a C# clone of RuneScape would be fun, it will be extremely difficult. Even creating a clone of RuneScape Classic (the 2d version, not OldSchool) would take quite some time. As quasifun posted, I would suggest you start with a more basic 2d game to start with. Once you are confident with creating 2d games you could start to add networking and work up towards creating a very small scale replica of RuneScape. 
-&gt; Scott Allen, Pluralsight. Are you multilingual? That would increase the range of sources.
Yeah, getting the basics of a game loop and game objects is a must have and it'll be SO much easier when you've learnt what a game consists of, it's far more than you imagine it to be and so many theories to take into account. Multiplayer is a pain in the ass because you're not only updating the locations of every object but you're doing a lot of coding to make sure weird things don't happen, like spawning two of an item by accident (lame example, I'm tired). Everything is easier when you start from the bottom, you'll be WAY less limited when developing later.
This is really interesting. I have to admit, I've never really looked beyond Json.net before, and yet it seems to never get out of the bottom half of the pile. That's not to say it's a poor library (I've always had good results with it) but this will definitely motivate to see what else is out there.
Go for Unity. Just don't expect to make an MMO as your first game. Making a simple multiplayer game for a begginer would be a daunting task in itself. Babysteps.
THIS. My go-to learning tasks with any new language are Lunar Lander Conway's Life
This is my favourite Internet Post of all time.
Step one) Create the universe.
You don't want to spend your time building a 3d Engine. This has been done before and unless your are a 1 in 10,000 type developer, you aren't going to add much new to an engine of your own. Lot of smart people with a lot of time and money have focused on 3d engines, stand on their shoulders. I guess if you just really like the math, and the challenge with getting your engine code to work the same way on 3000 GPU/Chip/MB combinations, then go for it. You can make a 3d engine from the ground up in C#. It's not the best tool to use, but it can work. My suggestion, is focus on your game. Build the game logic, the back end, the art. Build your tools for managing your workflows so that as soon as you can you can be iterating your live environment. 
You could with XNA or SharpDX.
I had totally forgotten about that! Thanks :)
Keep in mind man, a team of programmers and artists and tons of other people created runescape over like what, a 10 year time period? And they were all professionals with many years of experience under their belts.
Putting a try...catch block around some "sketchy" code with some basic logging takes no time at all. The logging mechanism really depends on the rest of the project. Email, log file, database, Windows log... plenty of options. Obviously, it's important to write error-free, bulletproof code. But even then, there are unforeseen circumstances. What happens if the network cuts out? What if the disk runs out of space? What if your long running service is shut down in the middle? Error handling differs from validation in that regard. Validation is ensuring the program has acceptable input. Error handling covers everything else. One thing, though. Never EVER have an empty catch block. If you're going to bother to catch an error, do something with it. Record it, report it, or have a way of attempting the process again.
There'll always be that one corner case where you may have an empty catch block. What if your logger fails? How will you log that your logger failed? My point is, there's always an exception (no pun intended) to any rule.
Just thought I'd let anyone who's interested know. I didn't see it mentioned on here, looks like they'll be covering a lot.
I'm by no means an expert programmer or have a job that revolves around programming but I think I learned this first hand while I was creating something for my job to make things easier on day to day tasks. I wanted to make something quick and easy for myself to help move files that were scanned to my computer. Initially I thought to myself, this won't take long, I can do it in a few lines. But when I realized other people could benefit from it in the office, I offered it and realized I can't trust the end user. The biggest issue with making things is, although you as the creator know the limitations, and the parameters of your code - other people will ALWAYS find new and interesting ways to step outside your parameters and constraints. So in short, this program I've been building, more time has been spent making sure it doesn't break due to an error than the actual time it took to make the functions for mapping and moving files. Tl;dr can't trust the end user so bulletproof your code. More time spent dealing with exceptions and possible errors. 
Both great suggestions. I like Redis better because of stackexchange.redis on git hub, makes it so easy to use redis.
Database systems, like Redis, MongoDb or SQL server, are all ways to serialize data to a file or series of files, and query them. So, any home cooked solution you might come up with will, essentially, be a mini database system. Nothing wrong with that, but if you're not into writing a mini database system, there are many free options. It's worth learning how to use and deploy them. 
Then throw the exception. And, actually, depending on how the logger fails, that would probably result in an unhandled exception anyway. Plus, if your logging is failing, odds are something catastrophic is happening and the program should halt and ask for help. My point, though, was more to avoid having code that catches an exception, but does nothing with it, so the user is unaware. Don't just blindly wrap a method (like Page_Load, or Application_Start) with try...catch. There should be sufficient thought and care that goes into something like that. That, or, just write flawless, self-healing code that absolutley can never fail under any circumstances :-)
The point is to not hide exceptions that a programmer would probably REALLY want to know about. A logger failing silently is one of those things that is, erm, REALLY bad, because it gives you false trust in your application.
&gt;The point is to not hide exceptions that a programmer would probably REALLY want to know about. What you're saying here makes perfect sense. I still think that there are scenarios where you wouldn't want the execution of your program to barf just because your logger died or something, right? The catch block could eat the exception silently and execution would carry on its merry way, salvaging the situation as best as possible. This is all very circumstantial, though, and a really good example could sway the argument either way. Of course I'm coming up empty in providing one right now.
 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/watch-bajrangi-bhaijaan-online/ 
The weight of such certifications depends a lot on your country, e.g. in Germany they're mostly worthless. See also: https://www.reddit.com/r/dotnet/comments/3dj6eb/ms_certifications_questions/ Personally I think: No, they are not worth getting.
Great response. Thanks for the work you've done to create this.
&gt;My question is, how much time, effort, and coding goes into error handling? This should have been the title of your post. Imagine a subreddit full of posts with titles like "Hey, I have a question."
This is a good idea.
my resharper settings or visual studio settings?
I had to debug an empty catch issue it was evil. Don't do it! or at least try really hard to avoid it.
"Pragmatic Programming"
Stop talking about it and starting doing it.
You could use partial classes and [nesting](https://visualstudiogallery.msdn.microsoft.com/3ebde8fb-26d8-4374-a0eb-1e4e2665070c) to more effectively organize the code: [screenshot](http://i.imgur.com/rO6STUa.png)
Not a direct answer to your question, but have you considered using the [Fody module for dependency properties](http://blog.angeloflogic.com/2014/12/no-more-dependencyproperty-with.html)? ([NuGet package](https://www.nuget.org/packages/AutoDependencyProperty.Fody/))
It's worth getting for companies that are trying to get their Microsoft gold partnership. I have the Web Apps certification, but if I was hiring someone I wouldn't add much weight to the resume. The material in those tests was not very good.
regions.
thats really cool, just downloaded the extension. Do you know of a way where i can tell my resharper file template to move the accessor to the accessor partial class?
I like the "Available on Request" angle. I think certifications could be interesting to bring up during an interview if you can bring them in under the context of "I wanted to pick this up on my own," because it demonstrates some initiative, but it couldn't be forced.
Another exception is any company that has MS Gold partnership status...these are mostly enterprise vendors to my knowledge, but these shops probably aren't as common or visible in SV
http://s000.tinyupload.com/?file_id=54238432321041574221 
Came here to recommend SQLite also. It's compact and fast. Consider using it to keep track of your objects and use a blob type for storing them. Dealing with "a file" as your smallest storage unit should prompt you to re-think how you're storing data.
i have a way better theme on my work laptop, i hate these too. I just havent gotten the chance to move them over, i dont use that pc a lot.
It might impress someone in HR I suppose.
Where is the live event?
`AcceptTcpClientAsync()` is leveraging the more recent `Task` functionality, and is a lot more concise and nicer to use than `BeginAcceptTcpClient()` because you don't have to deal with callback methods, `IAsyncResult` unpacking and so on if you use `async`/`await` instead. Behind the scenes there is no difference, [AcceptTcpClientAsync() is actually just a wrapper around BeginAcceptTcpClient()](http://referencesource.microsoft.com/#System/net/System/Net/Sockets/TCPListener.cs,108d9ea6a252438a);
The best rez qualifications you can have in Silicon Valley are (a) a CS degree from Stanford, or (b) 3 years coding with one of the major name companies like Apple or Google (though a merely recognizable name is not necessarily a respectable name; for instance, I can tell you from recent experience that HP is packed with hopeless lamers).
Fack, I hope not, you will be blind in days!
Watch full tv show 'True Detective' online http://www.youmovieset.com/tv/Watch-True-Detective-575.html Watch full tv show 'True Detective' online http://www.youmovieset.com/tv/Watch-True-Detective-575.html Watch full tv show 'True Detective' online http://www.youmovieset.com/tv/Watch-True-Detective-575.html Watch full tv show 'True Detective' online http://www.youmovieset.com/tv/Watch-True-Detective-575.html Watch full tv show 'True Detective' online http://www.youmovieset.com/tv/Watch-True-Detective-575.html Watch full tv show 'True Detective' online http://www.youmovieset.com/tv/Watch-True-Detective-575.html Watch full tv show 'True Detective' online http://www.youmovieset.com/tv/Watch-True-Detective-575.html Watch full tv show 'True Detective' online http://www.youmovieset.com/tv/Watch-True-Detective-575.html Watch full tv show 'True Detective' online http://www.youmovieset.com/tv/Watch-True-Detective-575.html Watch full tv show 'True Detective' online http://www.youmovieset.com/tv/Watch-True-Detective-575.html
I've got the [source code for the extension](https://licensemanager.codeplex.com/). I'm not sure how identify which API it uses. If it requires a rewrite, it'll probably be too much trouble to be worth it. &gt;StyleCop is basically deprecated by the code analysis functionality provided by the new managed C# and VB.NET compilers (Roslyn). Use them instead. This is interesting to note. I guess most of the work then would be to figure out how to get the same rules used. 
Can the code analysis tools be used outside of Visual Studio? I'd like to use them in a build script, and my build server doesn't have Visual Studio installed on it (the build script is just an MSBuild file) 
Yes. They are part of the .NET Framework's managed compiler service (as of 4.6), not Visual Studio. They're also cross-platform (or will be).
Since it supports VS2010, it uses the deprecated (and now unavailable in VS2015) addin API. You'll have to rewrite it.
&gt; I thought Roslyn was supposed to be faster Roslyn is the **compiler platform**. It compiles your C# code to IL code. You're measuring the **runtime performance** - this has absolutely nothing to do with Roslyn. The code that was generated by Roslyn is the same as with the old compiler. &gt; Both runs are using debug, Any Cpu. Why do you measure performance in debug mode? Probably also with an attached debugger? That of course flaws the performance heavily. You should never measure performance in the debug mode. You should never measure performance with an attached debugger. VS2015 provides more debug and diagnostic tools. That affects runtime performance when debugging.
I would suggest you to remove the debug festure and running in release mode. 
&gt; ..I read an article that said Roslyn produces more efficient code, and that you should notice some modest performance improvements with it. IE it doesn't produce identical code. ... hardly. &gt; ....I thought if they're both running in debug mode, it should be fine, but you're the second person to say this, so I will try running out of debug mode. **Never** measure performance in debug mode...
As others already said, measuring performance with attached debugger makes no sense. The users of your application usually have no debuggers attached either. Also: do you have the historical debugger enabled? This feature trickled down from the ultimate version and is now available in more versions (I think).
&gt; you can do the exact same thing with an if statement in the catch block. You can't do the exact same thing with an if statement. http://www.volatileread.com/Wiki/Index?id=1087
Not easily (MMOs in general are extremely difficult, especially handling 2,000 players on a networked instance), but it's certainly possible.
easily, I have built an multiplayer engine in unity that uses [Photon](https://www.photonengine.com/en/Realtime) and it handled 12k users at peek.
Are we talking about on one seamless server instance or separated into separate instances (rooms)? It's like the difference between Guild Wars and WoW.
how did i not know about this feature?! c#6 is awesome.
I think the easiest way to get started is to install Xamarin Studio. It includes everything you need. What do you not understand about it? Basically you just create a project, write some code and hit "run".
Of all the 100 articles about this feature spammed to the sub, this has got to be the one with least useful information.
This is the only one i havent used!i dont browse this sub that often
The best thing to do is installing a virtual machine with win7 and doing your coding there. Even though mono is great it's still far from the "Base" c#
You can't, at least not automatically (without a lot of work). Think of packed JS like obfuscated code. What are you trying to *do* with the decrypted string? C# can't execute javascript unless you dump it into a web browser control.
What exactly are you trying to do here? Do you want to scrape some value from [the unpacked JS source](http://pastebin.com/raw.php?i=ySXhrL4S)? The unpacking method is relatively simple and could be reimplemented in C#, if you can reliably grab the snippet from the HTML source (?) and it doesn't change too much. The biggest hurdle is probably reimplementing JS's [Number.toString(radix)](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toString), as far as I know C# has no inbuilt method to convert integers to strings with arbitrary radixes (as used in `c.toString(a)`).
I guess what I don't understand about it is how do I use third party libraries with it? I'm extremely used to using Python, so installing libraries has always been super easy using pip. 
Although C# is great, you don't get the most out of it without Visual Studio. I run Windows in a Parallels virtual machine and use Visual Studio in that on my Mac. Also third party packages are just .DLL files so you just need to include them.
Thank you, will look more into using a VM.
... before I could really care less about the new C# 6 features. Now i'm dying to use it asap.
I believe it's the Tab order. ( you know when you tab around controls ), disable that, and you should be good.
Try this [Microsoft Virtual Academy](http://www.microsoftvirtualacademy.com/) and do a quick search on Youtube (Questpond being good starting point).
This gave me a good laugh. It may or not have been an evil laugh.
I think some projects involving the use of design patterns and that type of thing would be good too
Well is it WinForms or WPF? I bet XAML styling would work very well for this.
Yea. I was so disappointed in his course. It had tons of stars and seemed like a good course, but it was really bad. He did not explain things well. He would show you something and then just "step through" the code in the debugger. For EVERYTHING. The issue though is he would do this, and you would have a 10 min video showing what something like toUppperCase() does, but then you would have a 5 min video about a lambda expression and have no idea what the lambda does or where to use it. I ended up trying to get a refund for the course after realizing I was not learning anything
Have a look at: http://en.code-bude.net/2013/01/11/how-to-add-dlls-to-visual-studio-projects/
What you need to do exactly depends on who interviews you. I can tell you if I was interviewing you, I'd ask about your programming experience, I would ask you to talk about what you worked on, and then I would ask questions to see how much of it was your work and how much of it was someone else's. To be honest if you don't have any experience doing what I need to you do (web, mobile, or console programming) I'm probably not going to hire you. So if your interviewing for a web job, make sure you can talk about web. If your interviewing for a mobile job, make sure you can talk about mobile. Most companies are not looking for an apprentice, because there is no loyalty and everyone knows you get your best pay raises when you move jobs. Fortunately for you, you can learn all that stuff with out college, just time spent at home. ps- When I say experience I do not mean work experience. I mean programming you have done. 
That's fine, but it's been dominating the sub lately. And probably will again as soon as VS is released final.
&gt; Chances are you are going to be writing shitty code anyway unless you're Carmack incarnate, which will more than cancel out any gainz you get from c++/c/asm. I did say that.
Why are you using Visual Studio 2012? Visual Studio 2013 is freely available. Why do you use Visual Studio at all, when you're obviously only in the fifth class?
Because this was what it had on the school's computer.
Can't edit: It's a script, not a program.
Why are they bad for devs? They should help you understand what the business reason for a given feature is, giving a more human aspect.
Good job! Next step is to learn about [Big Integer](https://msdn.microsoft.com/en-us/library/system.numerics.biginteger(VS.100\).aspx).
Tip: Console.WriteLine has this cool feature. No idea what it is called. Rather than ...("Your mom weighs " + math + " kg!"); You can do ....("Your mom weighs {0} kg!", math); Which would basically replace {0} with the value of math. 'Tis handy, as you can easily see where your stuff will be printed. For example: ...("Character Health: " + currentHealth + "/" + maxHealth + "!"); looks shit and messy, when instead you could write ...("Character Health: {0}/{1}!", currentHealth, maxHealth); Which looks nicer, is easier to read and does the exact same thing :P
&gt; I did PHP for a few years now Great! Now take everything you learned from doing PHP, put it in a little box, close the lid, set fire to the box and forget it ever happened.
Good on ya mate :D Writing a buttload of dodgy programs when I was a kid learning to program was immensely satisfying. And now I'm a professional software developer. Hope you take it far :-)
If you are wanting to write recursive functions like that, you are better off in a functional programming language, not C#. 
I still subscribe to the various PHP subreddits to remind myself to never go back. So far it's worked pretty well.
I know &gt;.&gt; don't blame me, just having fun. Wanted to make stack overflow exception as said here: http://imgur.com/gallery/ZaX2AUs/comment/447474034
That's really just the beginning of what string formatting can do for you in C#, see https://msdn.microsoft.com/en-us/library/system.string.format(v=vs.110).aspx You can do things like formatting currencies (e.g. 42.2 turns to $42.20), any kind of date formatting you like, reserving space for variables so if you're trying to vertically align some table-like text output it'll be nicely lined up, displaying X amount of decimal places, or just simply reusing a variable multiple times, e.g. const string SEPERATOR = ","; string Output = string.Format("{1}{0}{2}{0}{3}", SEPERATOR, FirstName, LastName, Age); Now if the requirements for your program change rather than changing every instance of the seperator from something like "," to "|" you can just change a single variable value.
I think you have to take the box to an exorcist in those cases.
It's not a problem. It was a stupid response to his stupid "yo mama" joke.
I'm still somewhat novice, but is PHP widely considered to be avoided? If so, why and what alternative us preferred? I ask only because I've learned a bit of PHP and while it seems okay, I assumed it was the general default language for most back-end websites. Would love to hear any opinions! 
PHP might be the only language that heavy users won't even try to defend. 
http://i.imgur.com/w05mRtX.jpg
eh, I'm sorry, maybe I wasn't clear at first. That much I know, the thing is, my app has over 15 000 videos, and about 1/4th of them is hosted on the particular website (the one that returns PACKED player in the source code). In my question I just gave you example code as for what I'm talking about. The thing is, I have to do it ***at runtime***, because there is no way I'll hard-code every single video. Do you know what I mean?
This "maths" thing.... Do you attend "histories" class? How about "sciences" class? Or "englishes" class?
Thanks for posting, I've been waiting for this!
What is the JS? The stuff in the OP? What does it do?
What! when i was doing the Project Euler problems, I had to create my own BigInteger class (it wasn't optimal but it worked), didn't know there was one already in C#. 
That's kinda sad that this is one of the top links of C# subreddit
The card style seems to be unpopular, will change. The "Recent links" is a known issue, thanks.
Nope, the author is entirely incorrect. `this` is a reference to the object instance that a method is operating on.
MS DevDiv employee here, hope you enjoy! Visual Studio 2013 Update 5 also shipped today.
A `NotImplementedException` is, like the name indicates, an exception that is supposed to be thrown when something is not implemented **yet**. ReSharper highlights this as a hint to you that you still need to implement this method. ReSharper will also list `NotImplementedException`s in the Todo-Explorer. If you don't intend do implement the code, then you should throw a `NotSupportedException` instead.
Empty function bodies that throw a NotImplementedException is one of the options for implementing generated functions and properties. Its colored differently to call out that you need to finish the work on the function and implement it, just like TODO: is colored differently in comments.
There is a free Community edition that is more than sufficient for many uses. Are you sure you can't make use of that?
Redeemed my Dreamspark Premium copy, installing it now, can't wait to mess around in it :D
This is the best I could find. http://blogs.msdn.com/b/visualstudio/archive/2015/07/20/visual-studio-2015-and-visual-studio-2013-update-5-released.aspx Go to the "What’s New since Visual Studio 2015 RC" section.
I don't believe MSDN is mandatory. It has never been required in the past. It's just promoted heavily as the primary way to buy Visual Studio.
Honestly, I don't know the difference between the free and paid versions. In the past, the free version did not support stuff like Resharper, although I have not taken the time to research this thoroughly. I have MSDN at work, but this is for home projects.
That's a relief to hear. I do hope the push a retail version out soon. It's not that MSDN is bad, I just have limited or no use for it at this job, and a yearly $800+ subscription will not fly since I cannot honestly justify the cost somehow. A one-time $600 retail license wouldn't be questioned, I can do that out of my budget this year without even needing to get approval.
Just installed the RTM over the RC. Seems like everything was upgraded.
Thanks! I'll try it when I get home.
Question: Is .NET 5.0 now just .NET 4.6? I assumed 5.0 was coming out with VS2015 unless I've read it all wrong
If your company is small enough you may be able to use the Community Edition for free at work. 
So that it stands out and reminds you to implement the method.
There is no .NET 5.0. What you mean is .NET Core 5.0, which will come out next year. They're planning to release a Release Candidate in November 2015.
I solved the problem. I updated the post so you can check it if you want. Thanks for replying.
.net 5 is still in development, as is asp.net 5 (currently beta 5 ships with the final Visual Studio 2015). I assume there will be a VS 2016 as well when it finally ships.
Are you sure that's 100% reliable? It seems like the order of the split strings is dependent on the content of the packed source, because the unpacked data mustn't contain strings that will be replaced by something else. For example, the 9th element of the split array is empty because otherwise the "9" in `new SWFObject(... ,'600','420','9');`would be replaced. If it changed to a "10", index 10 would have to be empty instead which may also completely change the order of all the other strings, depending on how the packing algorithm works.
You're right. I fixed this as well though. I slightly changey approach, and basically leveled up the code. I'm using LINQ now ;s edit: I checked which parts of the link are constant, and used LINQ to fetch the rest.
Thanks, that was what I was looking for.
I fucking love Oz-Code. Saved me so much time when debugging.
&gt; Good luck with ASPX on any non Windows OS. ASP.NET vNext is making that much easier now.
Tutorial and hover animations fixed
Noice
Anyone else getting an installation failure? "Team Explorer for Microsoft Visual Studio 2015" Fatal error during installation. I'm not sure what I've managed to do wrong. It fails for me in both community and enterprise editions (enterprise from DreamSpark). The machine is a stock Windows 8.1 machine with Visual Studio 2013 alongside it.
Get VS 2015 Community. The only difference (that I know of) between VS 2015 Community and Pro is in the licensing.
You could use a Dictionary&lt;string, Property&gt; instead to speed up the lookup with a hashtable.
VSO is a not bad pricing option if you don't need more than the Professional version. https://www.visualstudio.com/en-us/products/visual-studio-online-pricing-vs.aspx The problem is the Professional version is still gimped :(
&gt; I assume there will be a VS 2016 as well when it finally ships. I wouldn't. There is usually a new VS every 2 years (with 2013 being the exception).
Hah, and literally 5 minutes later the 'page not found' link is working. Sorry to have troubled you. Maybe some kind of CDN cache delay or something :-) Here if anyone else needs it: http://www.microsoft.com/en-us/download/confirmation.aspx?id=48129
This would be considered malicious software. Post removed.
VS15 installs the C# 5 spec still. (C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC#\Specifications\1033\CSharp Language Specification.docx) Was a C# 6 spec ever drafted?
That was accurate back in 2012. Today, VS Community Edition is functionally the same as VS Pro (licensing is different, and Pro has CodeLens, but neither will really affect you as a beginner, or even an advanced dev). Just download VS Community Edition and follow the book. you'll be fine. 
Can you just split the data out into separate files?
2013 isn't going to be an exception.. The only reason 2015 took 2 years was because it was such a huge change in.. almost everything. 2016 (if it appears) will be less of a change, architecturally, and thus be a lot more like 2013 was to 2012.
Title should warn people... it's commercial and costs 79+.
Dynamic Language Runtime. It's not what you're looking for though.
How do YOU learn programming then.
Old version of C#? It was the current version until like yesterday :p.
&gt; I understand a 'fully qualified name': it is the un-ambigious name of an object via the full path, via what its a member of, from the base object. &gt; thus: system.windows.forms.label. This isn't correct. Label is a class name, and the rest of the fully qualified name is either namespaces or containing classes (which act like namespaces). There are no objects involved. The "this" keyword is in an entirely different domain, namely objects. It's a magic variable which holds a reference to the object you're "in" right now, for code inside methods and properties etc.
I think what he meant was that don't limit yourself to books. Buy the books to introduce the language to you, learn programming by actually coding and debugging.
And it's worth it.
The title is **really** misleading. Visual Studio 2015 and ASP.NET 4.6 are final releases. ASP.NET 5 and EF 7 are previews.
This is silly. They should run it like an Agile (R) SCRUM (TM) project with new code drops every two weeks based on developer whims. Estimating is for fools and no body wants a completed, production grade project. Web 2.0 or bust!
Check out Rotativa, it uses wkhtmltopdf, but maybe it works for you.
2012 and 2013 Express don't support plugins or building for more than one platform. The Community edition doesn't have these limitations but it's still free. Anyway, VS 2015 came out today. You would be well advised to download the Community edition of that. It supports C#6, has a better debugger and has several code hints out of the box. 
This isn't C#, you're better off getting help from /r/visualbasic If your intention was to translate to C#, then I think the following will work: private void drawImageButton_Click(object sender, EventArgs e) { SolidBrush brush = new SolidBrush(Color.Orange); Graphics graphicsObject = mainPicture.CreateGraphics(); graphicsObject.FillRectangle(brush, 2, 3, 40, 30); } And somewhere in your `InitializeComponent();` or in your form ctor you have to add the event: drawImageButton.Click += drawImageButton_Click;
What does the debugger say about 'soritasItems', 'soritasPrice', 'tauItems' and 'tauPrice' after entering button3_click for the second time?
Hey brother, Just wanted to let you know this line fixed it. lbArmyUnits.DataSource = itemAndPrice; changed from lbArmyUnits.DataSource = specificArmyItems;
If you're trying to break into that type of world but still want to continue using C# I'd say look into xamarin. Unfortunately for you, C# is used "most" of the time to build enterprise level applications. Well, outside of windows phone apps. Xamarin will allow you to build Android and iOS apps in C# and maybe that could be a starting point for any freelancing plans you have. 
I got lucky when I started. A company bought out the company I was working for, and I was the only one that stuck through the buyout/merger timeframe from the developer team. So a few months later, when I decided to go independent, they had to hire me as a consultant just to keep things running. I also took on more work from a local dev shop that needed more devs for the amount of work they had. 4-5 months of steady work, plus doing work for my old company. Now I've been doing contract work for about a year. Helpful tips: * Start an LLC. Lets people know you're serious. Gives you some legal separation. * Set up separate business checking/savings accounts * Make good connections with recruiters. These will be some of your most important contacts, so treat them as such. Larger recruiting firms (TekSystems, etc) are going to have ins with larger companies. Smaller, local firms will have more connections to smaller firms in your area. Make connections with both! * Do not be the stereotypical "not my problem" consultant. Focus on doing a really good job (unit tested code, good architecture, etc). If you can do that, people will want you back, and when your contracts are up, you'll have to choose from several opportunities. And the recruiters will be giving you their best clients, because they know you'll do a good job for them. * Get involved in local user groups, tech communities, etc. Its how you will make connections.
In my opinion .NET 4.6 is a total joke. There are **very few** additions to 4.5.
Ah don't worry about people who scoff at how you learn. Everyone learns differently, and as long as YOU are making progress, it's all good. Books, videos, Google, hackathons, late night, early morning, standing on your head - whatever works. I'm learning too, just for fun. Last year I'd never opened Visual Studio or written a line of C#. I'm not a comp-sci major. I have no professional programming experience. Today, six months on, I can create simple console apps, simpler Windows (WPF) apps, connect to my Raspberry Pi and turn things on and off, built a web application that lives on Azure, connects to twitter and displays your tweets - and I'm having a blast learning. I read books, watch videos, and struggle through my code, and it's great. So - just go ahead and build stuff and learn however you like. 
I've done some freelance / after hours work. Friend of mine worked for a consultant company and they had some small-fish clients they were looking to cut loose. He handed me a couple of these clients that grew into a decent amount of work. I speculated that if I could get maybe four or five such clients, based on the amount of hours they wanted me for a month, I could do this freelance work full time and make it work well for me. I would recommend, though, talking to some smaller to medium sized companies in your area. Anything from shipping/logistics to property management companies and Heating and AC companies and see if they would have need of custom software. You'd be surprised perhaps. If I was in a situation where I was forced to start beating pavement that would be the tact I'd take.
"Is there an alternative? All the places that seem interesting to work for (smaller companies making consumer tech) only seem to hire node/rails/PHP/Android/iOS or front end web developers." Are you willing to relocate? .net programmers are in huge demand in the midwest (it's more popular out here than on the coasts). Cost of living is pretty low, and you can make a decent salary. Plus, it's pretty tough to not like it out here. 
Absolutely this, I make 20k extra a year doing side work. And I'm only charging 60 an hour for it. 
I did this for a number of months. The only thing that I learned, was that my wife hates when I spend too much time working and therefore can't do side work. The end.
1. Pen and paper and a general understanding of relational data. 2. Set up your EF project and do 'Update Model from Database' 
And the previews were released a while ago (the EF7 one at least)
A thoughtful and edited book is much better than a shitty tutorial scraped together by an amateur without any qualifications. C# in a nutshell is for me THE definitive reference for advanced C#
Oh no, they have been investing quite a bit into WPF lately with plans for more in the future. But that's a little off-topic because I would like this in ~~WinRT~~ ~~Metro~~ ~~Modern~~ Universal Apps as well.
Step 1: call yourself a consultant.
Some companies are, but there's a lot you miss when you have everyone working remotely. I actually work for a company out of Utah and I'm in NE, so I'm speaking from first hand experience. We have a pretty solid business model so it works for us, but a lot of companies here are still in the "you need to be in an office from 9-5" mentality. Not that they're bad places to work for though. 
You have to find a balance. I'll take weeks where I don't do any extra work (mainly to work on the house) and I never miss something in the evening because "I have to work." Even if it's something as simple as, let's go out to eat tonight. That, plus my full time job is from home, so I'll start at 5 or 6 am, finish my 8 or 9 hours there, go to the gym, come home, and have 3 more hours in for side work by 7. Which is close to what time I used to get home when I worked at my last job. Also, my wife works a lot, and some evenings so that helps. And the fact that since I work from home, I generally get about 1-1.5 hours of housework done during "meetings." It means we can both hang out by the time my wife gets home. If nothing is going on, I might work a little later, but that's rare anymore. 
&gt; Oh no, they have been investing quite a bit into WPF lately with plans for more in the future. They've added some stuff, but it doesn't seem like there's a lot more to come. They've also improved WinForms and ASP.NET WebForms...
I would love to use the new WinRT UI framework (in Windows.UI) to keep a consistent user interface on win10, but as I understand it, doing so requires writing a UWP app and that also restricts the win32 APIs that are available. In my case, I am targeting desktop only and don't care about getting on the store (the app will be open source and free), but I think I'm still limited to something like WPF on this project. Until that is resolved (if it is an issue, I could be wrong of course), I hope WPF will continue to be developed.
There are a bunch of Win32 APIs you can call from WinRT on the desktop, and the reverse is also true (e.g. Outlook now uses WinRT notifications if possible). But in the long term, WinRT is going to replace Win32 completely, so you won't need to. That fact, IMHO, is what makes WinRT so much better than WPF: Microsoft can't afford to have features unavailable for WinRT apps. "Just P/Invoke it from Win32" is not an option in the long-term, so WinRT will eventually get all features Windows has. And that means *any* language with a WinRT projection can access *all* of Windows' features without having to write a native wrapper for every little thing.
It's an updated preview.
This is even nicer in F#, where you get static type checking of formatted print statements, so e.g. printfn "your mom weights %d" "a lot" would be a compile error.
Same here except I was more around $30k, but as a full stack developer using php and even Wordpress at times. I did work long hours though. Help cofounder a company over the last year and I miss the extra income as we build the product. 
Both previews are 11 days old: https://github.com/aspnet/EntityFramework/releases https://github.com/aspnet/Mvc/releases Fair enough, it depends on your definition of a while ago, but they weren't released specially for the occasion.
I work for a small company doing .NET in Nashville; well, it used to be small, but it still *feels* small. My work environment and team is great and leaves little to be desired. The good shops are out there, I promise you.
Well the a good share of my extra income (probably like 60%) comes from a product I'm actually co owner of. However, we wrote into the by laws that any dev work I did for it was up to me as to whether or not it was billable. Helps that we have a backer with the $$$ to afford that, and I'll still do some things at no charge, but any new features or support over like 15 minutes gets billed. 
&gt; Unless the company is using VB.NET it's highly unlikely it is legacy. .Net has been around for a decade now- there's lots of legacy .net code out there in big enterprise shops. I've written my fair share of it :)
True enough, but it's hard to gauge a "release" with a continuous development solution like this. I like it, though.
Yea I will be getting some of the income as well, but for now it hasn't been launched. Should be sometime in the next couple of weeks though.
There's a developer conference in Omaha I go to every year. There's probably a good 3k people there or so, and I'd say 70% of the people there are .net devs. 
Might be making a noob mistake here, so please double check me. This definitely looks like it works at a glance, but it looks like it may confuse the user. What I mean is that by using a Do-while loop, the loop is run at least once. And that means that the user will always see "It appears..." at least once. Is that always guaranteed to be accurate? Is it impossible that after you make the FileInfo object, the file may already be done loading? I realize this isn't your code, as cited, but I wanted to point it out just in case you're using his exact code. 
C# - for Enterprise-wide, internal Yo Momma jokes.
&gt; You have to find a balance. &gt; plus my full time job is from home gotcha
&gt; "you need to be in an office from 9-5" mentality. This is the main reason I still go to my office 2-3 days per week. Management starts to wonder why they're paying you. 
I do, but it's configured to not do that. Problem goes away when I toggle Windows Firewall on/off.
Hahahaha. I actually like it when senior engineers from my old job call me with questions, it still feels like the final, you guys had no idea how much I did until I left. I probably wouldn't bill for that time if it was just that, but I have an invoicing system in place due to all my other work, so it's not tough to throw 15 minutes in here and there, and get an invoice at the end of the month. It adds up. 
There's more to come; the team size has increased and they have a roadmap.
&gt; oh this person has been here forever, they don't do shit, but we can't fire them. My wife works for government, and this is half of their workforce.
I have trouble finding a job here for remote. I'm looking elsewhere in the country for that. 
&gt; I feel like with devs and stories/tasks/tickets you can do that. At the company I worked at previously, this was very much the case. It was a software company, we focused on the medical industry (EMR/LIS) systems. Performance was much easier for them to quantify, whereas here things are more operationally focused, and the IT dept is seen purely as a cost center. Any structure that exists here is implemented by me because there's no one else is working on development - Unit tests, automation etc. Hell, most days when I release a test build, no one tests it when I request. Logs show the only IP to connect is mine. It's been a real eye opener, because in my previous experience, everything I did was a potential money maker, and my value as an asset to the company was measured differently because the things I did were directly related to making sales. Now, they are, but in different ways -- if the system is working (point of sale) sales can happen, but I no longer create the product. I left there because I felt like I'd hit a glass ceiling. They attempted to retain me by offering stock options, but I felt like it would be bad form to stay, so I left. Fast forward 10 months and they were acquired, and I missed a pay day. ;(
Where are you at? In the Chicago area there are a lot of startup-y companies that use .NET and there are a few out in the suburbs that do too (Paylocity comes to mind off the top of my head). &gt;I'd also love to work freelance or consult but being an internal developer for a megacorp doesn't exactly give many chances to get prospective clients. I've been freelancing for about 2 years now but only have one client. I moonlight doing it so I work on it nights and weekends but I found them on Guru.com (actually they found me). There are sites like that where the companies want a local dev or your local craigslist that you may find some opportunities. You may need to be flexible in the techs you work with. For my client I had to learn VB.NET instead of utilizing my C# knowledge. 
As cliche as it sounds I personally tend to just start scripting the tables out by hand in Notepad++, SQL Server Management Studio or Visual Studio. Alternatively, you could use the database diagram feature of SSMS (assuming you're using MS SQL), EF's design tool (similar if not almost exactly the same as SSMS db diagrams), or Visio if you have that handy. There are pros and cons to each depending on the complexity of your schema - I'd say Visio is probably going be a bit more flexible managing and manipulating a very large schema visually, whereas the other options are somewhat lighter on the UI features but offer a more direct path to exporting the diagrams as scripts (database diagrams are immediately "committed" and generate the underlying schema, EF not as immediately/requires another step to export, at least last time I did it, etc). I haven't really found a great solution to designing views, functions, procedures, and other db entities other than by hand (at least not a solution that I've preferred), although I will say Visual Studio has come a long way in recent years... And that of course is all on the database side. For generating POCOs/DTOs, Entity has been generally good to me for that purpose, but there are other ORMs available (nHibernate, etc) that can generate classes from schema objects - and again there are pros and cons to each. It takes a little bit of fiddling with these tools to figure out what works best for you in your environment, and which of them offer the right, or best, feature set to meet your needs.
Ugh, I really hope so. I've switched from web dev to desktop dev because of a job offering and I'm scared this was the worst mistake learning all the WPF.
&gt; benchmark it I guess. Solid answer. Will do this, thanks. 
This. He beat me to it. 
I am actually stuck in this very situation, and see no way out of it. I'd swear PMs deliberately wall off developers from other stakeholders so that they can justify their existence. Every job I worked, the only people I had a chance to talk to were my immediate team members and our PM. Outside work, I go to networking events in the area once or twice a month but it seems like a waste of time. In particular, the link between meeting people at one of these and getting a job out of it seems awfully nebulous and luck based.
I've traveled quite a bit for someone my age and can say from my experience, the people are just nicer. That's not to say people are assholes everywhere else, but it's different here. Plus, the cost of living is pretty low compared to the coasts, and to me, that's a big one. That's not to say out here is for everyone, but I've never met someone who moved here from a larger area (usually for a job) that didn't end up staying and saying they didn't like it here. I have a friend who's from Austin and told me he couldn't wait to get back there. That was 5 years ago. He recently told me how he's never leaving now, he just loves the people and the way things are out here. I have another friend from Ireland who travels all over the world for his current job, but is looking for jobs around here because he wants to move here. The first night I met him I asked him out of genuine curiosity where was his favorite place to work. His answer shocked me when it was here. Too each his own, but out here is great.
First, Winforms will be around forever. Second, Property Grid is a great control it's only a shame that customizing it is... awkward.
Makes sense
This might be the single most fascinating debate I've ever seen on Reddit. Please guys, keep going! Was it misleading, or was it unclear?
Shhhh
Do you really think they'll keep it? Because it would be super-easy to use. I keep getting the impression that that part of the platform is going away.
That's almost exactly wrong. You get transferred or promoted if you really fuck up, but only in a way that leads to legal troubles. Otherwise, if you aren't good at your job, you stay right where you are forever. Source: I work for the government.
I used to work for Cerner and wasn't aware of any industry standard accreditation. I know we sold se in depth training to client hospitals that covered customizations, hosting, and oracle.... I am not sure who your vendor of choice is, but figuring out how they provide credidation may be a good starting point. I am very curious what you end up finding.
Depending on your specific needs, the [HL7 accelerator for BizTalk](https://msdn.microsoft.com/en-US/library/Ee409342.aspx) might be worth investigating. Assuming you can get an HL7 feed out from your EMR, BizTalk can turn those messages into XML, which hopefully can be easily mapped to CCDA. I haven't worked with CCDA myself, so I'm less sure how well BizTalk and CCDA play together.
What are you using to make the HTTP GET request? I see that building the request using the TcpClient class in System.Net.Sockets buys you a little more control over tcp options
Right now it's passing the uri and call type to a REST client which then handles the actual construction of the query. I could build my own query and execute it using the TCP client, but that would really be a last resort. This application is only a small part of a much larger chain of apps, if I don't absolutely have to rewrite these calls it would be much more preferable
RestSharp? Not sure if you can mess with the underlying tcpclient. I read in a S/O thread that mono's tcpclient is using the default window size (8KB or so) .. so maybe this will work for you instead: https://github.com/restsharp/RestSharp/wiki/Other-Usage-Examples
Break it down into schemas/namespaces rather than dumping everything into dbo.
This is a small utility right? You can always redo it down the line.
Ok, so it's a terrible hack, but just a tip. By using reflection, you *can* often access and change private member variables and methods. It'll make you feel horribly dirty, but it works in situations like this.
Yeah Environment.NewLine is \r\n on Windows, whereas on Linux it's just \n. Your code probably would have worked correctly if you had run it on Linux using Mono.
I guess it depends, i have the misses at home along with an 18 month old daughter. She's asleep by the time i get home from my day job but the weekends are difficult, it's a weigh up between provide for my family and family life. I don't plan on doing this forever, end goal is SaaS - support/extend/maintain
Since Pointer are in 64byte, if your are in x64 environment, all value types (like int, float, etc) are are smaller or equal to the size of a pointer. This means, you could need more memory with references, than without. But passing a reference to a value type implies a boxing the variable, which gives you a huge performance slow down. If you don't plan on changing the variable always use the value type directly (without pointer). The next thing is, that a lot of processors will expand the variables anyway. Lets say the smallest word a processor can address is 32 Byte, then the processor will store even smaller variables like a uint16 or uint8 in 32 Byte. This improves the access performance and a few bytes don't matter anyway ;)
When you create a project, Visual Studio will add a reference to it if you select the Web API option for core references.
In my own amateur code as well as typing using a.b.assembly references I explicity specify them when I am using a third party library. And perhaps also specify the full path when using something that is standard .Net that has behaviour that relates to a third party library. For example using standard .Net IDataReader with 3rd party ProtoBuf DataSerializer: using (System.Data.IDataReader reader = argDatatable.CreateDataReader()) { ProtoBuf.Data.DataSerializer.Serialize(file_stream, reader); }
Decimals and Guids are larger than 64 bit, as are some more specialized types like DateTimeOffset. The bigger concern would be custom structs, though, which can be as large as you want or need (e.g. for interop). Value types aren't boxed when they are passed via `ref`, that would defeat the entire purpose of passing by reference.
Yep, they're called expression bodied members.
Shit this is EXACTLY what I need. Thank you!! Was also looking to trying to use something like MapForce. Have you ever looked into that?
I would assume so. If not, windows 10 will be supported in the next visual studio
**Bits** not bytes.
Ups sry, your are right, those must be bits.
You don't need to give them the bin and obj folders. All they need is the .exe from bin/debug or bin/release (whichever one you compiled as).
Would put a \r on that Console.Write command. Would be less spammy.
Ternary/conditional operator https://en.wikipedia.org/wiki/%3F: 
It's worth noting that if/then and ternary result in slightly different assembly code. On x86 systems, the ternary operation can be much slower than the if/then operation. On x64 it's only slightly slower. Interesting stackoverflow thread on this topic: http://stackoverflow.com/questions/17328641/ternary-operator-is-twice-as-slow-as-an-if-else-block 
Thank you for taking the time to write this out. I appreciate your response :). 
Thank you for that clarification! I'll add it to my arsenal.
There's 2 parts involved to bind to a port and have that port externally accessible for a self-hosted project (meaning, not hosted in IIS). See this link: https://msdn.microsoft.com/en-us/library/ms733768%28v=vs.110%29.aspx You'll need to setup urlacl to bind to a port when running as a service/without prompt to allow listening on the port. See: Running Windows Vista, Windows Server 2008 R2 or Windows 7 netsh http add urlacl url=http://+:80/MyUri user=DOMAIN\user Then you'll need to configure an inbound rule to allow the port. See: Configuring a Firewall Exception http://windows.microsoft.com/en-us/windows/open-port-windows-firewall#1TC=windows-7 Please bear in mind that if IIS is installed on the machine, you won't be able to bind to port 80 due to IIS claiming that port for itself as it binds to specific IP addresses. See: http://serverfault.com/questions/148439/how-can-i-control-which-ip-address-iis7-uses For future reference, you'll typically use the netsh http add * command to have IIS listen to multiple IP addresses e.g. if hosting with SSL and SNI is not available, or you want backwards compatibility with browsers not supporting SNI. See: https://en.wikipedia.org/wiki/Server_Name_Indication Edit: Note that this applies to WCF services too.
N-Tier architecture is good to learn. It's essentially just dividing your webapp into separate projects to enforce separation of concerns, ie a Domain, Core, and WebUI project for handling your data access layer, business logic, and web specific code respectively. Repository is a very good pattern to learn inside and out. YMMV with Dependency Injection, it adds complexity but enhancing testability. An Inversion of Control Container (Unity, Autofac, Ninject) adds some more complexity, but makes it easier to change the concrete implementations of your injected dependencies site-wide. Learn about View Models for passing data from your controllers to views. They should typically be dumb containers without any business logic designed to provide all of the data for a view to display. 
You need to add assembly references whenever your project depends on an assembly that isn't referenced by default. Not all assemblies are referenced out-of-the-box so that your program will depend on only what it explicitly *needs*.
2 months ago it got announced, still in beta, ok, but you have to pay 90 dollars to betatest their software. No thx.
Well, your questions beg some explanation. If you have a compiled library (dll) you reference it in your project and call into it as with any other dll (ie system.dll). Other than that it all depends, you have to know the api of the process you want to call. Is it on the same computer or not, do you have to call over the network. Lots of variables. https://msdn.microsoft.com/en-us/library/windows/desktop/aa365574(v=vs.85).aspx If it's as you say classic ASP to MVC4 applications you call it seems as if you only make REST calls (ie http calls, get, post, put, delete) but you will still need to know the API. It might be so that the dll you are referring to already have implemented all the calls to your systems and then there might be a service class you instatiate and use to call the system(s) in question.
PRG (Post-Redirect-Get) is a very useful one for MVC websites. One of the main advantages of always following the PRG pattern is data integrity. Whenever you post to a controller action, return a RedirectToRouteResult to a get action rather than a ViewResult. That way, if the user refreshes the page, they don't repeat the POST action, which could have undesired consequences. You might also want to look at the Factory pattern for creating your ViewModels, which allows you to delegate the responsibility of ViewModel creation to something other than your Controllers. Here's some further reading: http://levelnis.co.uk/blog/simplify-controller-logic-using-factories
Completely understandable. For what it's worth, the license extends for one year after the v1.0 release. Although we don't offer a free trial now, we will be offering one once we hit v1.0. Perhaps then we'll be able to earn your trust as a customer. If you have any questions about Alive or the team behind it, please let me know!
I think Brett Victor said it best: [The entire purpose of code is to manipulate data, and we never see the data](http://worrydream.com/LearnableProgramming/). Programming has almost always been divided into two distinct modes: - Design time - Debug time/Run time In design time we write our code, imagining the data that will pass through it. In debug time we run our code and realize we misunderstood a library function or didn't account for an edge case. We stop the program and return to design time. In many ways this is like painting blindfolded. We blindfold ourselves and do the best we can to make our changes and guess what's going going to happen at debug time. Then we remove the blindfold and are shown where we made mistakes. We put the blindfold on and continue trying to fix them. (It's certainly possible to program this way. And it's even possible to [paint without seeing](https://www.youtube.com/watch?v=_fDcapEe4P8)!) Alive removes that blindfold. The moment we write code it allows us to see what it does. We can iterate quickly and instantly see how our program changes as we write code. Alive also helps with reading code. It's easier to understand a colleague's code when you can pass data through it and see how it manipulates that data.
Yup, this is definitely going to trip a few people up in the near future. 
Hey Josh, r/programming had interest in some roslyn work I did but truth be told I just fumbled my way through your blog to make my app work. You should post your learn roslyn series over there. I might pick up Alive for fun. I honestly don't see the value for work. But if you all could release a super dumbed down free version for community that only works on simple static methods it would be huge for educational scenarios. 
You don't access their AD server, you auth over NTLM via windows. Your server has to be joined to the domain and their browser has to support NTLM. Firefox has config settings to enable NTLM, i expect chrome to have similar. If it's a thick client you don't even need to worry about this you just use their ambient identity of the process. Don't accept anything less. If you're building intranet for a Windows Server environment it must be NTLM. .NET has all of this stuff built in. Do not attempt to roll your own authentication scheme and don't make employees have to login with separate credentials.
I'm curious if they're finally going to move MonoDevelop away from requiring deprecated gnome packages.
Character creator for an RPG game. It had a nice set of rules to work with and was something I had passion for.
You wouldn't really use it. The better alternative is to have proper unit tests and to use NCrunch. Best combined with property based testing. Then you don't have to manually adjust levers and stuff (like with Alive), but you just code and look at the results in the NCrunch unit test explorer. The code is compiled automatically (without you having to save) and the tests are executed automatically.
Try using resharper. It will suggest many of these things. Just make sure you Google the suggestions to understand what they do. 
Definitely want to try this soon. 
Honestly, securing a page by requiring a user to click a link isn't going to be very secure. There's nothing you could really do that couldn't be worked around by playing with request headers. You'll want to implement some sort of authentication mechanism to control access to the secure areas of your site. 
I learned c# on the job. So the first things I wrote were extensions for an enterprise cms. Nothing exciting. c# is a language, yeah, but to me it's about the ecosystem you use it in. I don't think of myself as a c# developer at work, I'm a .NET developer. Or I'm an ASP.NET MVC developer, or a WPF developer, or a windows services developer. Which is what, I think, can be the difficulty in trying to learn c# beyond the basic programming idioms, without building "something". Heck, build a static website generator (I know, so last year). You'd get a lot of good exposure to the ecosystem surrounding c# 
I wrote a database of my friends' addresses &amp; phone numbers on my Commodore 64. All the names and numbers were hardcoded. It was awful. But I was like 8 years old and there was no internet to learn from so I can forgive myself.
Array.Copy is a very low-level construction that you probably shouldn't be using; too much C memcpy. Oh well, promise me you wont be using Buffer.BlockCopy at least! :p
I wrote a "DivX-sorter?" Basically when i didn't had an ADSL connection back in the day, i ripped rent DVD to Divx format. I got around 500. I wrote a program that was capable to extract all the useful info about the movie on imdb and put them in a DB, i could them sort all the movie by actor, realisator, genre, year, etc... and i could launch the movie by clicking on the movie poster in the app, who used a VLC command line to launch it. I was proud of it at the time but my computer got rob with the source code on it, couldn't improve it anymore. i don't keep divx now...
I wrote a CSV 2 HTML converter with GUI with the new JavaFX Gui from Java 8, helping a friend at his job (I have his bicycle now for a while, nice trade). A program that gets a list with city names (all german cities, ~19k) and search it for a specific rule (no vocals, at least 2 Umlauts), my cousin wanted to know if such cities exists. Wrote it in Java and Rust to compare speed. My next project would be a reimplementation of the Python web crawler at my company in Java and Rust (and maybe Go because multithreading yeah). And then ... I want to do a porn crawler for a specific porn site for some time now with GUI (to have a preview picture to chose which videos to download) to enable an easy way to download without paying, the site is exploitable for years and nobody on their site cares, but it's so annoying if you deal with links in the hundreds.
One of the first USEFUL applications I did in VS with VBnet was a file hiding software. Elaborate GUI with a lot of PictureBox controls and a listbox. It appended something like .{41801927301231} to filenames that made the Windows Explorer hide the file (as a system file). Guess what files I was hiding at 13? ;D
If homework assignments count, I wrote a ray tracer in Java with Phong shading using no external libraries. Useful in that it totally landed me my first full-time programming job (brought it to demonstrate). Otherwise, the first program useful to a wide audience I wrote was a database that allowed a community to upload and share their (then-new) Nintendo DS friend-codes. This one was in PHP+mysql (*shudder*). First app to run on a company's production servers deleted about 200GB of customer data - intentionally. It was a C# Windows Forms utility that purged files generated by our SaaS product over a year ago (that were already in database backups).
&gt; which is quite similar to HTTP. Isn't Yaml similar to XML and HTML and not the HTTP Protocol ? :)
Same here. 1997 or so on screen keyboard with basic T9 style autocomplete to help someone who'd been in an accident.
My reaction as soon as I saw his class "WTF?!?". Really WTF was the person who wrote the expression bodied property thinking?
Indie company called OmegaTech. Game is in "open Beta" pretty much. No leaderboard or tournaments yet -- this type of thing and further development in general depends on interest and feedback. Really looking for feedback!
Once they release a trail or something so we can try it without having to pay 90 dollar I might buy it too then.
RemindMe! 5 hours
I made a program that converted Imperial to Metric and vise versa. 
Check if a cookie is set. If not, redirect to the page with the button... which sets the cookie when pressed, and then forward you back to the protected page. That should work, right?
Also, now that you know what the problem likely is I'd encourage a quick look at StackOverflow. I don't have the time to look for a clean solution, but maybe you do?
I did a program (back in high school) which calculated a lot of different math equation for me. I hated my math and physics homework, and that program was able to do it for me in mere seconds.
Technically you could set all the auth stuff to fire when you click the link...
I don't know but wanted to pop this in here just in case somebody does, can anyone confirm he won't have licensing issues if he chooses a free or community edition?
Generate some kind of encrypted token (e.g. IP address + current date/time), append it to the link, and check on the target site whether the token's IP address matches and the time is relatively recent.
Haha, I like your math and assigned values :p.
You might consider trying to start working within a convention. It's not that it's better, per se, but there are some benefits. You'll find it easier to read other programmers' work, having more experience with it, and you'll make it easier for others to understand yours, including future-you. That's especially helpful when asking for help, as the other person will focus on the code more than the writing style. Just some food for thought. 
I haven't downloaded the sdk yet but what I've read so far looks good. I would suggest that think a little about if the naming of tanks/teams should be static. I.e. it allows you to tailor your strategy to a specific opponent by identifying on its name. Some other AI tournaments randomize the team/player name for this specific reason so that you must use the same AI for all opponents. Edit: Oh and mad props to you that you can run the code yourself and don't have to upload it to your central server. I saw a poker AI competition where you were required to upload the code to their server. One could question why they would need that... Maybe I'm paranoid but if I were to create a poker bot to scam people with online I'd start a poker AI tournament and outsource the actual implementation to competing nerds. They get bragging rights. I get access to the planet's strongest poker AI. But maybe I'm just paranoid. :)
Are you looking to build something like this? http://forums.lenovo.com/t5/image/serverpage/image-id/2655i946FD8F1785534DD/image-size/original?v=mpbl-1&amp;px=-1
Good feedback, thanks. In terms of naming, each tank's name is based on the name of the class that defines the AI, so you can rename that to anything, even right before a match. https://codeoftanks.com/Forums/g/posts/t/7 Edit: Forgot to answer the price question. It's free.
You want [sharpshell](https://github.com/dwmkerr/sharpshell). The UI element you're talking about is called a ~~taskband~~ deskband.
Awesome! Thanks so much!
Not necessarily a program, but a batch file to open my hosts file for me running notepad as admin so I can actually edit it. For someone who's constantly testing DNS changes, it's a life saver. Just double click the bad boy and I'm editing my hosts file. 
this: http://dejco.deviantart.com/art/WIP-Welcome-Center-XML-V2-129097153
I think we have the same friend. He asked me too.
Just leave it be. Garbage collection will clean it up. If you need expiration, just create a custom class that wraps your response and contains the create/expiration date. Use that in your cache.
this, I really like this. A google search can do this for me already, but I could see the practical application for this if we ignore that fact. Any tips?
That is the main thing I used Web Essentials for, so I am looking forward to removing that dependency because I have had a lot of issues getting it to work correctly. Now that there is better support for Grunt I think I am going to learn to use it for front-end build tasks.
When I was 18 my first real useful app was written in VB6. It was a Central Station Automation Software for my Dad's small alarm company. At the time he had a couple of people that would handle montering for him and needed it to go through the internet otherwise with his old QBasic app he wrote it. He would have to move all of the equipment to their house.
It's mostly a matter of taste, I think. In 99% of the cases the slight performance difference is completely negligible. 
All the stuff you downloaded with /u/Yojihito's porn crawler? :p
It's not *that* magic when it comes to adding assembly references always, but it's flawless for missing usings. 
Well it could change tomorrow, or between 32 and 64 bit.
This isn't async code, so not really. 
Yes, it's not currently async code. Which will make things suck once the method with thread.sleep is called from the UI thread. But I do realize that adding Task.Delay and making the method be async adds an upstream async dependency that might be outside the OP's desire to learn or refactor.
Can you identify what vulnerabilities you open yourself up to when you manually authenticate using AD credentials?
In the 80's I wrote a program that read a text file, updated some fields, and wrote it back to floppy disk. It streamlined my job and made it so they could get rid of me (I was hired for data entry, and didn't know to charge them for the program). 
Romance novels? Boy Band music? D&amp;D character sheets? 
&gt; Everyone's different, but why reinvent the wheel? This is true, but creating something like this helps you learn, and it also provides you with an asset that you can reuse in a larger way. For instance my first C# GUI project was a tiny program that just gives you the answer to x to the y power. My second project was a calculator, which I used the same code as my original project. And my third was a point of sale system which I used both projects' code for. 
I'm pretty sure posting a gore/porn (different sections, don't worry) site here is not really allowed, so just PM me. But be aware it's amateur stuff, self recorded with smart phones etc, nothing fancy.
Tell the states to stop holding out and adapt the better technology. -Canada
Looks good. [Squirrel](https://github.com/Squirrel/Squirrel.Windows) has been the go to option for me when it comes to auto updates. Is this used in production anywhere? The Read Me states development was started in 2013, so has this gone through real world use? Or is this the first release? 
You do not have to use it if you do not want to... 
Why not just use grunt or gulp?
Removing just the &gt; would make it a field and make it work correctly as well.
Expression trees are just a front for an IL generator.
A good explanation about what will probably be a common mistake.
Use System.Runtime.Caching. https://msdn.microsoft.com/en-us/library/system.runtime.caching(v=vs.110).aspx This is the .NET abstraction for caching libraries. Start with the MemoryCache, then later you can swap in a different cache if you need to without changing your public API. At worst, you'll just need to write a small adapter.
On one hand, this would be nice, but it also makes the language look more messy, like C++.
The integration is pretty good for any version of ASP.NET IMO. With the VS2015 RC I switched to using Grunt for compiling and minifying SASS, and it really feels no different to when I was using Web Essentials. It was a bit of a struggle to get things set up initially since I was new to Grunt, but now it starts up a watch process when the project opens that compiles and minifies when a file changes, same as Web Essentials. Slightly unrelated, but I'm loving using bower over nuget for client libraries too, seems like a much better setup. edit: gist for auto SCSS compile and minfy you're curious: https://gist.github.com/neoGeneva/1d58fb6f6db140ad73f1
&gt; Thread safety is definitely an issue, but is also orthogonal to this problem, really. Well, that's kind of what I mean. IMO thread safety is a design issue much more than a style one. I could *imagine* some code that would overwrite your field with a different type while you're checking it -- but I don't really want to. :)
One man's expression is another's mess. The ternary operator used to be widely considered messy, now it's good style when used appropriately.
Just installed Enterprise... So far so good - thanks for sharing!
Edit in Debug Mode has been around for a long time, unless I'm missing some important distinction. It's called Edit and Continue and has been available at least since VS2010. 
Your teacher is most likely an old guard of the Unix greybeards; people who like to bash and spread "FUD" (fear, uncertainty and doubt) about Microsoft. The truth is that in 5 years both Java and C# will be very strong still most likely, but if either of two languages are more likely to die, it would be Java (due to C# being better made and rapidly catching up to the portability of Java). Also, C# will be used to make "universal apps" for Windows 10, an operating system that MS is aiming to get on to 1 billion devices within 2 years.
This is fairly on point for me. I wrote tons of small useful applications as a hobbyist -- console apps, winforms, or c++ applications but the scope of it was all too small to get a firm grasp on application development and life-cycle. It took extending those skills in a work environment, interfacing with various systems, often working around layers of red tape and 'IT Castles', utilizing existing services/APIs on the enterprise, etc, etc. I have found the environment to be a particularly good motivator, which is what it really comes down to in any kind of learning. 
&gt;That makes sense. I do have two quick follow ups questions. &gt;1. I agree that passing credentials opens you up to interception, but wouldn't you be at risk of that (at least in some form) from any authentication mechanism? Windows will protect that vector far more than you or i. &gt;2. If someone has the ability to read memory on a remote server aren't you already pretty much done for? (I'm assuming a web app here) The in memory part was more for a thick client app then thin. 
Your professor is either a time traveler or a blowhard.
It's kind of irresponsible of him - after all, no matter what his personal beliefs he shouldn't be dissuading his students from using a perfectly valid technology that can lead the way to a lot of employment opportunities. If you were feeling brave you could submit a complaint to your head of department; but in my experience the head of CS in any given university is usually the greyest greybeard of all. ;)
College professors are well known for knowing absolutely the square root of jack shit about the software development industry. Anyone who genuinely believes that Microsoft is going under in the next 5 years is severely hindered mentally. Your professor probably doesn't actually believe this, rather he is making a ridiculous statement to push his agenda on his students. This is extremely unprofessional, and you'd be smart to ignore any other unqualified statements like this from any professor. Or at least take them with seventeen heaping mounds of salt. Rock salt. You know, the kind they use to melt the ice on city streets in the winter. That salt. It's big.
Also, the .NET Framework doesn't install the fucking Ask Toolbar
Thanks! nUpdate is being used in specific projects from .NET-programmers, I would say mainly smaller ones. But it is also known that nUpdate will be included into a game that should be introduced on Steam. Of course, there are other people that heard about it and are maybe already using it. So, its development has begun in 2013 and now it is shortly before release and new features like Differential updates and Delta patching will be added. Probably you've read that in the ReadMe, too. So, it has already been used and with every new version it keeps getting better and programmers have a look at it.
Short answer: he's very wrong. You'll find certain folks in our industry that have a longstanding prejudice against anything Microsoft. Most of that prejudice comes from years ago when Microsoft was a very different company. Today, Microsoft is embracing open source, quick releases and is much more responsive to the developer community than ever before. Microsoft is certainly not perfect but no company is. I'd take them over Oracle any day. C# and Java will both be around for a long time and having either or both of those skillsets will serve you well when you graduate. However, don't get hung up on if a language will be around in X number of years. If you have a long career, you'll be learning new languages and technologies all the time. Every language you learn only makes you better and increases your ability to learn the next new language/technology much more quickly. 
Nice. You should make an Android app for it, that figures out where you are, as well. I would add a helmet-law indicator for us bikers. Version 2 could locate the nearest gun store, and shooting ranges. And locate the nearest mechanic, for the Harley riders.
F# is cool but I still haven't gotten functional programming to click with me. It's quite frustrating. 
C# will still be around in 5 years. So will Java. Even if Microsoft and Oracle both crashed and burned tomorrow, the languages and their respective platforms would hang on as going concerns for *at least* five years, *even if nobody else stepped up to maintain and enhance them*. There's just too much existing code in those languages that still has to be maintained. Hell, Visual Basic 6 isn't *quite* dead, yet, for basically that reason. It inches a little closer every year, but you can still make it run, so ... That aside, neither's likely to disappear any time soon.
The author read something about Edit and Continue but neglected to read any further. There are [new features](http://blogs.msdn.com/b/visualstudioalm/archive/2015/02/23/enc-improvements-for-net-debugging-in-visual-studio-2015.aspx) in EnC such as modifying async code and adding new methods. This is also, I believe, the first VS release with [EnC support in C++](http://blogs.msdn.com/b/vcblog/archive/2015/07/22/c-edit-and-continue-in-visual-studio-2015.aspx)
My first C program was a drawing tool. This was before we had settled on a format for pictures, so I rolled my own. This was before Windows 3.0, and we'd seen Windows 2.0 which had side-by-side windows so you could edit two files at once. Windows 3.0 had Overlapping Windows!!! OMG! So cool, you could "cascade" them, and "tile" them, too. Before GIF ("Choosy programmers choose GIF", and it is pronounced like the peanut butter Jif. NOT gif like gift!). The program is still useful in 16bit OS, so up to Win95 or so, I guess. To learn C#, I wrote a tile game. It's got a simple interface, just a couple of panels on a form. One panel shows game stats, and has a few buttons to "Undo" "Restart", etc. The other panel is full of tile-sized buttons. The user clicks on the board and magical, fun things happen. Now that the tile game is written, I could swap out the game rules to make other tile-based games. I intend to do this once; it will let me tighten up the boundaries between the engine and the game rules. If I think of a way to generalize the rules, it could become a multigame app, possibly allowing the user to make their own rules. #IShouldWriteThatDown
Continuous learning is what I love the most in this profession.
He would be right if he extrapolated information from 3 years back. Back then, MS was loosing at all fronts. Windows 8 was marketing failure, Windows Phone is widely ignored, .NET ecosystem is stagnating. If you would take all into account, then yes, MS was slowly dying. And if you told me that MS is going to open source big and critical parts of his .NET ecosystem I would look like you were crazy. But now we are here. All critical parts of .NET ecosystem is Open-Source, Windows 10 looks like massive marketing success and MS seems to be opening more and more. Hell, MS's share price started to grow after many years of stagnation. This is New MS as promised by leaving Steve Ballmer and executed by Satyan Nadella. And I hope it continues.
The even continued the on error resume next legacy with powershell...
Nokia made replaceable devices, there was no eco system, there was no network effect around their phones. Windows is completely different.
Nokia is also still around. Maybe they aren't the household name in the US they once were, but they are far from dead and buried.
One other thought: Try building the VS 2013 InstallShield LE project from the command line via MS Build. That is, open up a VS 2013 command prompt and run "msbuild" on the installer solution. 
So much this! When it really comes to just coding stuff, no matter if it's some hobby project or work related, people tend to just use what ever fits their needs. 
5 years? No, there's no way the plethora businesses running .NET software in C# will dump their software in 5 years. I worked at a business running 16-bit database software from the '80s! If you are happy maintaining existing software, a .NET skillset will keep you employed for decades. Now, creating new software is another story. Microsoft is facing even more competition in the enterprise app development field. Meanwhile, many businesses are turning towards the cloud, where Microsoft is far from dominant. Their OSS community is meager, and I imagine it will stay that way given that Microsoft's mantra has been "we'll take care of it for you" so most .NET Developers are not interested in doing Microsoft's work for them. A .NET skillset isn't going to get you into anything cutting edge, but you will most likely have a stable job for years to come, mainly maintaining existing apps. 
I heard several functional novices sing the praises of [Learn you a Haskell](http://learnyouahaskell.com/chapters), maybe that's worth a shot - it's an interesting language that's worth checking out in any case.
You are wrong. Microsoft is aware of cloud computing (Azure) and ASP.NET is really powerful and widely used.
He wouldn't even be right then - we still have COBOL programmers, and the legacy C# codebase is probably at least a magnitude larger than that of COBOL.
Haha! Was pissed about some work thing. Came to reddit for a laugh. Now I can sleep. My thanks to your teacher. :-)
If Java would rule the world - I would quit my very successful IT career and become a cleaner. C# is much more technically advanced than Java, and it is much more beautiful. And another reason to lean C# in favour of Java is that C# is a truly open language - Microsoft guarantees not to persuade anyone who would make his own implementation of C# compiler and they even released a lot of .NET library as opensource. There are international standards on C# language. With Java - Oracle will kill any alternative to their own java implementation. It's Oracle's private thing and none allowed to use it without Oracle's direct permission. (remember Google vs Oracle case?) 
It's a pretty good book I can attest to that. F# isn't purely functional though so I think /u/darkpaladin would find that easier since you can mix styles while you grasp and wrestle with functional concepts. Haskell is as pure as you can get without going into even more esotericl languages which might make the transition even harder.
Fuck, *BlackBerry* is still around...
You have a point. After I made the comment I thought that it might be easier to get into for people who have been developing in BASIC-like languages before, but not .NET
Even your statement is nuts. Mark my words, adoption of .NET is going to be increasing in the next 5 years, not decreasing.
Regardless if your teacher is wrong or not, which has been debated by other redditors, I strongly encourage you to not fall in love with your current tool. Don't consider/sell yourself as a Java or C# programmer. It is better to sell yourself as a front-end/backend/game/mobile programmer than tie yourself to a concrete (and sometimes propietary) tool. You should keep learning C#, but also try to find which kind of job would you like in the future and see which skills do they require. Anything you learn on your own usually will be bonus points, because there will be a lot of people that don't do anything but the required in their classes, so having a couple of pet projects helps a lot.
I love VB.NET and its verbose syntax, but this is more than likely due to personal bias since I came to dotnet from BASIC land. In the past 13 years I've slowly switched to C#, not because it was better, but because that's where the jobs are at.
I would heavily disagree with this - if anything, Microsoft has had a lull in a couple of platforms (Windows Phone, specifically) but its other products are having a meteoric rise in popularity and usefulness. C# is probably my favourite language and I will endeavour to use it for anything possible. For consumer development, I would say that's entirely incorrect. Like anything else though, it's very application-specific - Java is worth knowing, but you can do Android applications in C#, so it's not like it's too platform-specific. If you're a first year student, there's no way I would tell you not to have a couple of .NET languages under your belt.
Academics usually have very little understanding of the outside world. Pay no heed to it.
AFAIK errors throw... is this not the case? There's TONS of exception handling in Powershell.
if he was one of the "Unix greybeards" I very, *very* much doubt he'd be pushing Java instead. 
It depends on the settings, the default is not to. But a lot of common operations, like creating a directory that already exists, will throw exceptions, so they tend to get turned off.
Ask him if he would like to bet money on his pronouncements - tends to focus the mind, I've found.
&gt; Your teacher is most likely an old guard of the Unix greybeards; people who like to bash and spread "FUD" (fear, uncertainty and doubt) about Microsoft. Then why would he teach Java?
Or he's just wrong about this.
&gt; There are international standards on C# language. Not for the newer versions, but yes.
Then you are also wrong because you dont know the future and you dont know if they are wrong, in the same sense i am also wrong and so on
It used to be that there was greater feature disparity between C# and VB.NET, but these days the [gap isn't quite as bad](https://en.wikipedia.org/wiki/Comparison_of_C_Sharp_and_Visual_Basic_.NET#Features_of_C.23_not_found_in_Visual_Basic_.NET). Underneath, it all ends up as [CIL](https://en.wikipedia.org/wiki/Common_Intermediate_Language). Coming from C#, I had big reservations when I first started working in VB.NET but for all practical purposes these have disappeared. I mostly consider it syntax these days. The only problem is if you rely on the latest C# features, C# is always the first .NET language to get them - VB.NET support usually comes later.
I am using Visual Studio Installer in current VS2013 project. Works pretty well (we are installing Windows service to several Windows 2012R2 servers). When building your setup project, just remember to add install and uninstall custom actions to your project. Another common problem is that installer doesn't allow to install new version over existing application (there is way to do that but I allways forget how to do it...).
Also if youve ever had to deal with legacy Java applets, every - single - update - breaks something with it. Hell the update itself breaks shit...asking terminal users with no permissions if they would like to update their java or block the applet they are trying to use for work.. AHHHH.
I had a teacher like that, He told me not to bother with C#, everything will move to angular/web in the next 5 years. I explained that it was fine if the industry went that way I wanted a .NET job... obviously he laughed telling me I will never find a pure .NET job. I graduated in December 2014, Jan 2015 I started work (Was hired in december) on a pure .NET C# job, working with Azure... I regret nothing.
You set $ErrorActionPreference to the desireded preference in your script. 
Microsoft has been going under in the next five years for the last decade and a half. Look at their profits, they're as strong as ever. As far as .net, they've made tons of strides to keep it as relevant as ever. Open sourcing it was a giant one. Open source stuff seems to give hard core coders a hard on. Considering the recruiter I know has anywhere from 5-10 .net positions open at any given time (in the midwest) .net is not going anywhere. Especially with the addition of MVC a few years ago. As someone who learned to program in Java, then spent 3 years as a PHP programmer and was the typical MS hater, I was forced to use .net about 5 years ago. I literally wouldn't take a job coding in another language now. Not because I couldn't but because I honestly feel it is the best/easiest framework to code it. 
Don't submit any complaints, of all the professors I had to "teach" me to code, I felt like 2 of them could actually cut it in the real world, once I had a couple years under my belt and understood what it took to write code that actually gets used by a business or customers. Hell, one of my professors lost her job a couple years after I graduated, and applied for a company I was consulting for. She didn't get the job.
As someone who's been maintaining an application written in vb for 7 years. You can absolutely write maintainable code in it. Most programmers just hate the syntax because they're used to squigglies and semi colons. There are actually a few things about VB I prefer over C#. However, I feel like VB makes it easier to just write shitty, shitty code, if you're new. Not that you can't in any other language, but they force things on you like defining type and what not. 
Your teacher is a big dummy head
I don't think MS is gonna die any soon but companies will still have .NET applications to be developed of they stay using Windows as an OS.
The long natural way. With burst of help from all nighters and mountain dew binge drinking.
Actually, we can make predictions about the future. Some of us has been in the industry so long that we come to understand the ebb-and-flow of technology waves and can therefore predict industry direction. I have been paid quite a lot for this very skill and have demonstrated a great deal of accuracy.
Just FYI... he wasn't talking about VB.NET he was talking about classic VB.
&gt; C# is a truly open language Compared to Java, perhaps. Compared to literally anything else... sorry sir, you are mistaken.
Lol
In all fairness, if he is old guard Unix graybeard, then his memory of MSFT is rooted in the 90s. The good ol'days when protected memory in the windows stack was not even a thing. No one in software had much faith in MSFT staying power back then. Unix was so laughably far ahead of Windows.
Azure has, up to this point, been an unmitigated failure. I was at MS (consultant) just prior and through the first year of Azure. Their first year revenue target was extremely meager and they still missed it by over 50%. Things really haven't improved much since then. Even Rackspace has had greater success.
Excellent final paragraph (and some good food for thought throughout). I was trying to explain this to someone on IRC today, who'd spent 2 months trying to decide whether to learn Haskell or Python in order to write a personal-project file manager replacement.... At the end of the day, choose whatever you have to hand right now that isn't a completely inappropriate tool, and get on with using it. All experience is good experience in the long run. Many people seem to get bogged down in 'choosing a language' when they could be solving problems and actually acquiring long-term skills. Delphi has been dead or dying for about 15 years now, and yet I still earn a decent living out of it. It gave me skills I have transferred to C# and Java, that's how this stuff works, really. Most of the time the tool is chosen for me already by the client, or their previous contractors etc. A lot of the time I'm being paid to fix or add things to whatever is already there. It amazes me how people worry about the long term viability of some of this stuff, I mean sure it's interesting and important but... ...you know, just write some code. :-)
Unlikely. From a business perspective, MS has always had huge presence in enterprise markets. All the hand-waving in the world couldn't make that completely dissipate in give years. Even if MS died out (not likely), .NET is legally out in the open and can be maintained. Also, Java is owned and maintained by a company with a worse corporate attitude than Microsoft ever had. They still haven't imploded from sheer evil despite the collective ire of thousands. Your professor appears to teach his flawed business opinions and preferences as fact. Be wary of that. Also keep in mind that first-year CS classes that teach Java are notorious for being assigned the useless teachers. My own barely understood programming, much less Java. Certainly not well enough to do anything beyond parroting the book. There are some really good Java classes and teachers, but they're not in the first-year classes. Learn what you can, but don't swallow the opinions they shove down your throat. The current prognosis is good. With the new OSS .NET movements, C# is regaining marketshare on servers. It's been hampered for many years with poor MS policy and leadership, but there are no longer any platform or legal encumbrances. Node.js is gaining heavy marketshare with Silicon Valley startups, but it usually gets replaced with something more server oriented as the business grows. It's also starting the downward slope of its popularity cycle. You'll likely see just as many people working with PHP, Java and C# on the server, if not more. If C# gets a decent cross-platform UI as good or better than WPF, its popularity as a multi-purpose cross-platform language will definitely skyrocket. No language is going to disappear in 5 years. Not even the ones we wish would disappear. I personally interact with people that know and use COBOL and Turbo Pascal and assembly in the same area as people trying out Rust and working with Scala.
C + GTK
I was blown away by the simplicity of the quicksort example. I wonder how it compares performance-wise to an iterative quicksort in C, though.
Well, iI mean, They tried to be when they bought Sun, but obviously even that wasn't enough light for them.
To be honest, I've never tried but I'd think it should work.
Yea, it's kind of amazing to see the 180 they've made over the last few years after getting rid of balmer. It makes me happy because I'm a pretty big fan of their stuff. I'd probably have a windows phone (I love the UI) if it weren't for the fact that I can't get a few critical apps on there I like on my droid. 
It's not worth trying to "discipline" this professor. Plenty of professors are like this about their fields. You are there to learn what you learn. Get that information and move on with your life. Remember: professors have PhDs in their little universe. They are not the wise old man on the mount. 
vim for everything.
/r/ThreadKillers 
I work as a Sr. .NET Developer and we deploy to Azure. I love my life.
Was there any sort of explanation as to why they think this or what it a "C# and ms are bad mmmkay"? 
Life is fantastic when your in Azure also while technically a Jr. (been out of school for 7 months) I was hired direct as a Developer (between junior and senior) mostly because I did what OP is doing, I learned, developed, and even spoke at local dev groups on Microsoft technologies and practices revolving around .NET
Agreed. If your instructor had something intelligent like... Control Driven Web Development is being replaced with client driven MCVs he might have had a good argument to say Control Driven Web Development is dying or more correctly considered passe. But C#... WTF, some body need to tell [this guy](http://www.mememaker.net/meme/c-is-dead) to lay off the crack pipe. 
Yeah, let's not forget they're not working in the industry. A frightening number of college/university lecturers have never done the jobs they research and speak of.
People like different languages. The beauty is that if your front-end guys making the application GUI want to do it in visual basic, that doesn't stop the back-end guys from still using C# if that's what they prefer.
No, he wasn't. We were talking about .NET languages, and VB in this context refers to VB.NET. Even if he were talking about classic VB, what I said is still basically true.
[The only appropriate response.](https://xkcd.com/285/)
There are at least 10+ indices attempting to rate programming language popularity/usage that I'm aware of which got widely varying results making it completely useless apart from picking one which fits one's own bias. It's better to just leave such indices aside and just learn languages one enjoys. One can build his own once in the industry and learning a language never really hurts, even if it's not used as much as one likes, it's still experience.
A Windows phone is about the last thing I need. I'd be too tempted to write s/w for it. I have too little free time as it is.
I was an adjunct for a few years. The people who taught full time could not be less clued in to the real world if they tried. That there are still people making big money coding COBOL should tell you something. It's never about what's new and great, it's about INSTALLED BASE and the inertia of large companies. That said, c# and .NET are changing with the times and we need to keep up or fall behind. 
I would argue that Microsoft is (and will only grow to be an even bigger) player in the software engineering world. Look at .NET and MVC. And now when they are open-sourcing a lot of their technology they will only continue to grow in popularity (even though they already are quite popular). Your professor is full of s***
No, it's not. [The default is to output an error and continue](https://technet.microsoft.com/en-us/library/Hh847796.aspx). You can change that behavior by setting the `$ErrorActionPreference` preference variable.
I had a professor like this once... He also ended up being a pedophile and committed suicide when that bit of info was found out... Good times.
Oh okay thanks! It wasn't in the last Windows 10 preview builds, was it? Do I need to so an extra install on Wednesday? Do I need to install a package provider or can I just start installing, eg chocolatey packages? 
Yeah, it's in the latest Win10 preview. Shouldn't have to install anything extra, but it seems like the Chocolatey provider isn't currently present on Win10 (it is present in the WMF 5.0 April preview, though). We'll probably have to wait until Wednesday to get some news about it.
^ This right where. If either were to die, it would definitely be Java. The only issue is that C#/.NET is powered by Microsoft and Java is powered by Oracle. These are probably the two largest Enterprise software dealers in the US. Java might die out in the home user space, but it will never die out in the Web/Enterprise space. Java has been getting a lot of shit recently in the home user space because of how terrible it is. Chrome dropped support for the Java NPAPI plugin and all security people everywhere tells you to uninstall Java on your system unless you absolutely need it. EDIT: .NET on the other hand is gaining more and more steam because Microsoft is officially supporting OSX and Linux with it now. .NET was always beautiful for Windows because it allowed you to use unmanaged C++ code with managed C# code or Visual Basic or managed Visual C++ code or whatever hell combination you wanted. Now that is going to all platforms. 
meh. *real* greybeards use cat. 
So it says it fucked up and keeps going, how is that better?
Well, they're dying in the sense that GM was dying in the 70's. It's gonna take at least 2-3 decades before things start to look bad. And that's assuming that Microsoft will be as badly managed as GM - which is not an easy task.
I was told the same at Uni. We learn't java and that MS are dead in the water. I spent about 2 years in the evening learning C# version of all the java stuff i did. Fast forward 4-5 Years. I'm a .net senior developer! MS might be the strongest they have ever been in terms of the .Net platform going forwards! Do the programming language you enjoy!
Heh, no shit.
I've heard a lot of stupidities of professors who forgot that they didn't get involved in real business world since decades. There is, actually, a bazillion of .NET apps used in business. Moreover, don't forget that tools like Exchange, sharepoint... are fully based on the MS stack and so everytime you need to work wth or around these techno, C# comes to the rescue. And I didn't speak about the old windows form apps still used... (I'm a developer focused on MS technos since 5 years now) 
Coming from a professional C# developer who dislikes both languages: &gt;The truth is that in 5 years both Java and C# will be very strong still most likely, but if either of two languages are more likely to die, it would be Java Come on now. Java can't possibly die anytime soon because of at least one reason: Android. Besides that, it is the most popular language, after all. &gt;(due to C# being better made and rapidly catching up to the portability of Java). C# may be better made, but if you think it will be as portable as java anytime soon then you are sorely mistaken. Graphics in C# are far too entrenched in DirectX land for anything of substance to happen, and unless MS open sources or ports IIS I doubt it'll make progress in that area either. And those are the only two areas that are worth anything in C# development. 
I had our junior guy test everything with 2015, he reported lots of crashes, guess this might be why.
Your teacher is a dying breed. C# is alive and well. 
I've seen enough Nokia devices lately, couple of my friends have 'em. But BlackBerry? I haven't seen that in at least 2 years.
&gt;^ This right where. If either were to die, it would definitely be Java. That's just as laughable of a statement as the one OP's professor made, and I hate Java. You're forgetting about Android. Java is still the only viable option for Android development and Google hasn't given any indication that this will change. 
But python guys. C'mon. Its taking the hobbyist scripting world by storm. And before long, there will be literally tens or possibly even dozens of enterprises that will be inexplicably listing it as a critical candidate skill even though their LOB applications are hosted on an AS400 with a VB.NET front end. Ergo, C# is dead. This teacher couldn't find his ass with both hands, is the moral of the story.
Android Java is not the same as normal Java. It uses a different JVM and Android apps can only be ran on the Android platform (or compatible emulator). Normal Java all uses the same JVM directly from Oracle and any code you write for it will work on any other platform with Java installed. With the NPAPI plugin being killed off in one of the 2 most used browsers in the world, I cannot see Java viable for writing Java plugin apps anymore. Outside of Minecraft, IntelliJ and Eclipse, I have never used an application on the desktop that uses it. EDIT: It would be like if someone that is not Microsoft wrote a compiler and platform for C# that did not use .NET. It would still be C#, but it would not be .NET. Android Java is the same thing. It is just the language without the platform. Without the Oracle JVM, it is not the same.
Being wrong is one thing. To make unequivocal predictions on the state of a technology that flies in the face of reality is not only what fools do, its usually an indication of a profoundly deep ignorance coupled with dogma. I'd up the ante and speculate that the person is probably not qualified to teach. 
Option 2 is the more idiomatic, you have a single stream that you just apply filters on and combine with other stream as appropriate. You generally don't want to be subscribing and unsubscribing as it makes life much more difficult when you want to combine streams. One option for this sort of stuff is to use a nested observable (IObservable&lt;IObservable&lt;YourType&gt;&gt;) and then use the Switch() method on it to ensure you're always listening to the latest stuff. As the console becomes disabled push an Observable.Never through your outer stream, and then as it becomes enabled push an observable containing the stuff you want to listen to. I can provide an example if that stuff about sounds complicated! It would be interesting to hear the full use case to see if this method would help you.
Also, if you really want to, you can run C# programs in Mono on Linux, Mac, IOS, Android...
Nokia never had $92 billion cash on hand. Not to mention all the steps Microsoft has been taking lately to focus on profitability and trim the fat out of their business. *cough*Nokia*cough*
It's like oracle is trying to kill Java
this is a pain for sure. ive uninstalled Resharper and have been trying coderush for roslyn instead.
So what? We're talking about the languages, not the implementations. Everything you wrote is entirely irrelevant because you're talking about Oracle's specific Java implementation, when this thread is about languages.
He never said he thought it was dying, but noted that C# adoption is happening at a far greater rate than Java. 
We are also talking about the platform. The teacher made the statement "C# and .NET are dying". They are not. Java+Oracle is a different platform then Java+Android. Languages do not matter as much as the platform does. Any good developer should be able to pick up a new programming language within a week tops. Platforms can take months or years to learn properly. You can be an awesome Android developer, but it is not going to really help you with Oracle e-commerce. Whereas, if you learn how to make a Window Store apps in C# and become proficient it in and then are forced to use managed C++ to make an application, it is not going to much harder to do so.
"Why do they hunt us daddy?" "They use emacs..." :D
Unity? I'm not sure if it's the most popular, but it only uses it as one of several scripting languages as far as I'm aware.
Incredible and uplifting response. Thank you for this.
Both of these posts are great. I am in part a large fan of this statement: &gt; At the end of the day, choose whatever you have to hand right now that isn't a completely inappropriate tool, and get on with using it. All experience is good experience in the long run. Many people seem to get bogged down in 'choosing a language' when they could be solving problems and actually acquiring long-term skills. I have spent more time worrying about using the right technology to start dummy projects rather than just freaking doing it (amongst other things that hold me back). 
Agreed. Those who can't DO teach. Those who are capable of neither get into politics.
Dunno, been working with react.js recently. Reminds me so much of web controls but without a lot of the drawbacks since it's running on the client.
Microsoft isn't going away anytime in the near future. If you pay attention to what they are currently doing they have a lot of cool and innovative products coming out and a lot of smart decisions. Microsoft supports C# and as long as they have lots of money they will continue to push and back C#, it's not going anywhere either.
Pretty much accurate. Neither really have much likelihood to die soon (especially that soon) also I do agree C# is pretty attached to the microsoft of things. 
Great, I'm glad these issues weren't just my own. I can't wait to start actually using VS2015
I use butterflys.
The fuck is this?
No, it's not. Don't shitpost here.
Calling it an unmitigated failure is pretty short-sighted. They're breaking into a space with a lot of competition, and dominance on Amazon's part. There are also many companies that have yet to jump on the Cloud bandwagon - mid- to large-sized companies that MS likely has a foothold at. It will take a while to see positive results on paper, but it's worth the investment - and it seems like MS is committed to making that investment.
They're just languages. Once you learn one or two, switching becomes easier. C# is kind of a better language to learn in that it has more aspects of functional programming built into it and that will come in handy. If your professor thinks this is about teaching you how to use one language that you're going to be using for the rest of your career, he shouldn't be teaching. Learn C# or Java. Or both. But also try to learn a couple of others: Ruby or Python, Javascript, Erlang or Elixir.
I've used Mono for Linux and Xamarin quite a bit. :)
Oracle doens't care about Java on the desktop. Enterprise Java is doing very well and going nowhere.
Your prof is dead wrong. C# and .Net have only expanded in the past 5 years, and in the next 5 we can expect it to grow and become more open. The cross-platform nature of Windows 10 is going to expand .Net's popularity even more I think. That all being said... Java and C# are fairly easy to transition between, so I'd focus more on your course work than learning another language in parallel. 
I remember hearing the same thing back in 2001 or 2002. About 6 years later my first job was in a C# shop. 3 years later my next job was in C# as well. Like others have said, I doubt it's dying. It's definitely changing, but I doubt it'll die out by the time you finish school.
Not sure why the sudden surge in popularity in this post, but 9.1.3 was already out by the time this reached my feed. http://blog.jetbrains.com/dotnet/2015/07/24/resharper-9-1-3-to-the-rescue/
ahahha, Academics... ugh! They just don't understand the real world, one of the hardest thing I had to do when I worked for a company that hired college grads is deprogram them and remove all the garbage ideas and philosophies that work in academia but would sink a company.
Not sure if you have any experience inside MS but usually these things are measured by the size and scope of re-orgs when a technology/product doesn't meet expectations. The re-org that happened when Azure missed its targets was the largest one I had ever heard of within the company. I will say that MS's technology behind Azure is pretty awesome, it just - as yet - hasn't translated to benefits to the customer. Besides, I completely agree with you on it being worth the effort.
Sorry. My greybeardness was not sufficient.
That's why you want explicit **configurable** conventions and a framework which supports it.
The easiest way to tell who's telling the truth: search your city's CraigsList for C# and then for Java and compare the jobs.
Those that can.. do, those that can't.. teach. This guy has no idea what the industry it doing. The C# MVC skill set is a very popular skill set right now. As far as Microsoft "going away" they have the #1 Office Suite and is still the most popular OS for desktop computers. Windows and C# have a lot of legs still.
I wouldn't knock python. It's included in a lot of job listings in my area. The difference between it and other programming languages, though, is that I see it listed for a wider variety of professions. While most of the python job search results I see are for programming roles, I also see a lot of sys admin, scientific, and sometimes finance positions.
As a recent convert from the scary "Open source" world, I can see how he might be so clouded as to think that. However, I assure you that it is not a true statement. And especially after their recent moves to be open source themselves. Microsoft is making some very good changes recently that even its opponents are having a hard time disliking. 
Because the professor doesn't get to choose which language a university uses as a catalyst to introduce OOP. 
Java isn't write once either, that never worked. It's not that portable, never really was
I can't argue with you. They've been doing it for at least 8 years now, despite pleas to update the system that uses the applet.
Thanks so much for this response!
Java is being killed by forcing constant breaking updates. It is no longer dependable, so companies will look at solutions they can rely on. When looking for COTS solutions, one of the first questions getting asked by my company is, does it depend on Java? If the response is yes, further salespitch is futile. Nearly every issue in every daily call is related to Java malfunctions in enterprise solutions. As far as it goes, Java is in its death throes because Oracle is captained by retards. I'd say the killing blow happened over a year ago--we're just waiting for the body to stop twitching. Microsoft, otoh, seems to be making smart decisions with .Net. C# isn't going anywhere but up.
But that's making my point. The multi-million dollar software investment of real, large, enterprises and the ecosystem of companies that deliver software solutions for them don't jump on random bandwagons. It's exactly the employers you describe who even *can* do that. Smaller, less heavily leveraged on a platform. This teacher is not a professional developer and has no insight into this reality. Most mid career devs know that platforms like Java and .Net are the backbone of most even semi-modern business systems. They are not going anywhere, not like that silly fad of a language they call C. Who needs to write that close to the metal? It won't make it another 5 decades, I know that. /s
You shouldn't focus on any one language. Learn the fundamentals of programming and stay current on software development trends (i.e, MVC, generics, delegates, etc.). If you do this, you'll be able to jump between languages easily as they move in and out of fashion. In your teacher's defense, the open-source movement, Linux, Apple, and mobile have made many of MS's proprietary technologies much less relevant. I wouldn't use the word "dying", but they are clearly not as popular as they were in the 90's.
Not because "Java sucks," but rather because Oracle does.
A hell of a lot more than Java. Xamarin's framework is fast as hell, and using LINQ on mobile makes me happy. Plus, things like a NuGet SQLite package made life much simpler. With this said, Xamarin is expensive as hell... Let's hope that comes down.
/r/RavenousBug Only thing you forgot to mention is OP should learn about the different paradigm's learning early on how a declarative vs imperative language functions, the difference between a functional and a logical language, OOP vs functional, etc, will make it a lot easier to understand all the languages and move from one to the other, it will save you from making the mistake of trying to code in an oop style while using F# and help you understand the concepts of something like Haskel or Pascal. Oh, and learn the difference between a scripting/command language and compiled ("programming") language... https://en.wikipedia.org/wiki/Programming_paradigm https://en.wikipedia.org/wiki/List_of_programming_languages_by_type Edit: added wikipedia links
&gt; Microsoft is a dying company and will go to dust in the next 5 years. ## Dude is drunk. MSFT is at near 52 week highs. It's owned by nearly every technology mutual fund under the sun. It sounds like, if anything, he's fearful of his future needed as a java teacher. That, or he hates that Microsoft wants people to pay for their value, as if he's somehow entitled to free shit. Microsoft is moving beyond the software base. They're seeking to terminate the data center. That **everything** will be running in Microsoft Azure. If you're concerned about the future, learn c#, then learn how to build distributed apps leveragng the Azure Service Bus and Azure Service Fabric. The Fabric is such a dynamic and game changing system, the Fabric is what they used to build SQL Azure which is a cloud driven version SQL Server. The Fabric looks nothing like a database, yet if it can build a cloud scale db for millions of customers... you don't have a problem it can't solve. Also Azure is doing crazy stuff with big data with their current/soon Azure Data Lake, Hadoop, Event Hubs, Azure SQL Server Datawarehouse. Microsoft is positioning themselves to be all end all Internet of Things mega corporation. 
I wish he was right. I wish that a more expressive language was created and popularised that made us all more productive than we are. In reality languages even less expressive, with more pitfalls, like c and JavaScript, will be widely selected for new projects in 5 years. And languages like c# and java, which ridiculously similar, well be in widespread use. 
I would be glad if we finally get rid of all that old vb code we have in our company in five years.
One of the best languages is going to be dead. It had lambda and other features way before java. Your teacher is a loser.
I would argue that Java is dying, they have developed it well, but they are starting to make the same mistakes that flash did with its need to be backwards compatible creating more and more security flaws. it is starting to get to the point that people are actively avoiding java due to the extra costs of security.
Ask him what he would recommend, then let's us know, we'll tell you why he is that particular version of wrong
&gt; Java is "pure", it has very few license problems. Microsoft/C# licenses a lot from Oracle (previously Sun). C# has a lot of Java in it. Microsoft pays millions every year to Oracle in licensing fees. Oracle uses these funds to grow Java, not c# I'm quite certain this is completely false. Microsoft does not license anything from Oracle regarding C#; Nothing about C# requires that Microsoft have a License, which is almost entirely why it was originally created, as Sun terminated Microsoft as a Licensee after the J++ incident. &gt;Languages that are open and vendor neutral tend to do better (in terms of longevity) then those that aren't. The claim that Java is Vendor neutral is somewhat dubious. I'm not aware of any other company making significant contributions to the Oracle-distributed Java runtime. I cannot find any evidence supporting that being the case today. As far as I can tell everything that get's added to Java is added directly by the Java Team at Oracle. OpenJDK likely get's contributions from elsewhere but Oracle "sets the standard" as far as what new versions of Java will implement. &gt; C# has 3 vendors that contribute to it (and Microsoft has rejected 97% of those other two vendors patches, including major security issues). C# has only 1 full time open source developer (all others are part time). It's unclear to me where you are getting contributory information, For C# or Java. Java's OpenJDK can of course be contributed to by pretty much anybody in the form of Pull Requests, but I'm not sure if that is what you were referring to. C#'s compiler is on github and anyone can make a Pull Request. What sources are you using to determine these 3 vendors and how many patches have been accepted/rejected? &gt;Java has been vendor neutral and open since 1995. Implementing a Java VM or any related Java product such as an IDE and distributing it commercially, for profit, seems to require a license from Oracle, and previously Sun. This is why Microsoft used to pay Sun/Oracle when they were developing their Microsoft VM for Java and J++. Sun- and now Oracle- are in completely control of Java so "Vendor neutral" doesn't seem applicable. Realistically it's the same for Microsoft. Of course, the difference is that you don't have to pay a license fee to fork and distribute a C# compiler or a .NET Runtime. Mono, for example, doesn't have to license anything from Microsoft that I can determine. 
Just because someone is employed as a professor does not mean they are always knowledgeable and without bias. I had a prof (continuing ed class) who would rail against MS and closed source software and advocate open source and Java and Linux. I asked him where I could download the source code to Java... (Owned by Sun at the time) of course after being stunned, he asked why I would ever need to do that... He then told the class that Open Office was better than MS Office because it was written in Java... 
I got called this week for a side-contract opportunity to take a smallish C# Web Forms app to VB.NET. They justified that the cost of support was cheaper and more readily available. There is a lot of old guard who still cling to VB. In 10 years there will be mission-critical enterprise applications all over with few to support it. VB.NET was and has been pretty good. I turned the contract down. At the risk of sounding like a recruiter, if anyone is interested in West MI, message me and I'll get you in touch.
+1 use this.
Even professors can be blinkered by their topics. Its a typical atittude, "my language is hot, your's is shit". .
19 years ago my first year professor told me MS was dying and to not bother worry about them, and he told a workmate the same thing 5 years before, and he is still saying the same thing to students to this day as he advises people working on their Masters. Sadly he has given me the belief that the term 'Those he can do, those who can't teach' was invented specifically for university CS professors. 
In a simple word: No.
Web API. Learn that with angularjs and you'll be in a strong position. Also entity framework. 
sounds like a job for a factory
thank you so much for such a complete answer.
Meh. "copy con:" was fine by me.
Knowing when not to use LINQ is also very important.
Just start coding and forget about tutorials for now. Make a Reddit clone, Twitter clone, Beatport clone...
The book on the topic is "Concurrent Programming on Windows" by Joe Duffy. It covers all of the topics you listed, both at a high level and with as much depth as you can handle. http://www.amazon.com/Concurrent-Programming-Windows-Joe-Duffy/dp/032143482X/ref=sr_1_1?ie=UTF8&amp;qid=1437823355&amp;sr=8-1&amp;keywords=windows+concurrency
Yes, this book is excellent and available as PDF on this site. For me personally, it helped me grasp the concepts around multithreading and I still refer to it many years later.
Yes. Just make a BankSimulator class. That uses a List&lt;BankAcount&gt; and prints them.
http://www.pluralsight.com/ is pretty good. However my best learning experiences were through building stuff and trial by fire. I don't care how many YouTube video's you watch.
But I love LINQ =)
- Performance critical code (hot paths). LINQ is slow and produces a lot of garbage. It's easy to *just use LINQ everywhere*. - Pretty much every time you added a `IEnumerable.ForEach()` method. Awful method that goes against the LINQ principles (not modifying data).
Most definitely. Plus, you might end up making something worthwhile when you make a clone. Look at Voat.
I wrote a program in Python that calculated the how much a plant would grow over a specified number of days using the average growth rate. I still have the source code somewhere.
As an alternative to entity framework, check out Dapper. We've started using it in favor of EF, and it's been a relief.
Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby Click Here To Watch LIVE &gt;&gt;&gt;&gt;&gt;http://sportstainment.us/rugby
 ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### ###Live Rugby&gt;&gt;&gt; http://www.livebuzztv.com/rugby-tv### 
We're long past the point where languages like Python or Ruby can be considered "random bandwagons." It's all about choosing the right tool for the job.
Node is not a language and as a runtime environment it isn't really suited for general-purpose development.
Oh how silly of me. I forgot that Python and Ruby can do all those things that Java and C# are incapable of. Thus is Reddit. 
&gt; I forgot that Python and Ruby can do all those things that Java and C# are incapable of. Who said anything about that? Ruby's great for string processing. It's great for Unix-y systems. It's open source. It has an active ecosystem. It's a good choice for agile development. Jeff Atwood has a fairly good blog post on why they chose to [write Discourse in Ruby/Rails rather than .NET](http://blog.codinghorror.com/why-ruby/).
Udemy.com is currently running a sale where most of their courses are $10 instead of the ridiculously high prices they normally sell for. Use the coupon code KEEPCOOL001 at checkout if the $10 price isn't showing up right away.
Horrible course in my opinion. Jon Skeet has a huge knowledge, but he explains things very badly. This is a lot better free course: https://channel9.msdn.com/Events/Build/2012/3-011
Yep spot on regarding your book choices. Read through both and Freeman's is far better. 
Angular is not even close to as big as standard MVC in the enterprise.
Community has all of this right?
Single Page SPA Applications are the best!
Look at job postings for Software Architect titles and what qualifications they look for. Then start actively doing/learning those things. Just a fair warning, most architect level jobs require ~10 years experience. 
Also, what kind of time does it take to learn this to a 8/10 level?
Software architecture doesn't focus on specific languages or frameworks, so don't make the mistake of thinking that you just have to get REALLY good with a certain technology. If all you have is a hammer, everything looks like a nail, etc. Try to focus on the area between the business / requirements and the technology. A lot of software architecture is ensuring that you understand what's actually important to the stakeholders in the first place. Once you understand these "quality attributes," you build your designs around them using well-vetted strategies, you test, you iterate. Study up on some of those patterns. What is n-tier good at, and what isn't it good at? How does one make an architecture inherently modifiable? How do you increase robustness? What are the tradeoffs with each strategy? You might want to start with the "ilitiy" words and familiarize yourself with some of those strategies. Also - learn to love documenting. Learn the difference between communicating effectively with business (brevity, articulating business relevance) and communicating effectively with technology (completeness). If the way you wrote this post is reflective of how you typically write in other areas, it's going to have to improve. Not trying to be a dick, but this is genuinely important. tl;dr: Architecture is all about understanding what's ACTUALLY important, knowing how to ensure those important things are reflected in what you develop, and being able to effectively communicate all of this to both your business and technology stakeholders. Edit: This is assuming you're talking about legit software architecture roles - a lot of job descriptions will use the term but really mean "lead developer."
Learn all you can about the .NET framework but also research other frameworks/languages. Learn a statically-typed language, a dynamic language, and a functional language. Then start looking at sites like [InfoQ](http://www.infoq.com).
Architects focus a bit more on the why and a bit less on the how. It's also a skill that needs a lot more time writing documentation and a lot less time writing code. So, volunteer to document a bunch of stuff and see how you like it.
I would highly recommend going through [this](http://shop.oreilly.com/product/110000197.do#tab_04_2) series on O'reilly in addition to the good suggestions made by some of the other posters.. Its a paid video series and quite helpful.
I already told you. I take the specifications from the customer to the software people so the software people don't have to. WHAT DO YOU WANT FROM ME?
Architects build trunks, developers build branches, and designers paint the leaves (usually blue). Practically speaking: you need to have taken several products from prototype to market and beyond. Strong skills in GPP languages alone are not enough; you need to have deployed desktop solutions, web solutions (server and client), and mobile solutions (iOS and Android). This will give you an instinct for what will work and what wont at a low level, which frees you up to do the high level design.
https://youtu.be/nV7u1VBhWCE
Thanks.
Is this done a lot? Where I work we don't have a distinction, and everyone tends to write code except the leaders. I find that most skilled, good cs-style people who are good architects and designers, like to code too much to not do it. 
&gt; I find that most skilled, good cs-style people who are good architects and designers, Based on what? CS doesn't teach anything about software architecture, except in one or two classes. Most people are really, *really* bad at it.
Or at least look into spellcheck.
I've got a membership too, Bob's a good teacher, but its a shame that he regularly stops updating for 2-3 months without any word.