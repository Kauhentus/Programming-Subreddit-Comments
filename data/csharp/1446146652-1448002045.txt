I recently did a project like this. Another way is to create a class that contains the structure of your JSON data: public class JsonObject { public string a { get; set; } public string b { get; set; } public string c { get; set; } public JsonObject() { InitializeComponent(); } private void InitializeComponent() { a = ""; b = ""; c = ""; } } then in my example I used JavaScriptSerializer: using System.Web.Script.Serialization; StreamReader myStreamReader = new StreamReader(strJSONFile); JavaScriptSerializer mySerializer = new JavaScriptSerializer(); JsonObject myJsonObject; while ((strJSONLine = myStreamReader.ReadLine()) != null) { myJsonObject = mySerializer.Deserialize&lt;JsonObject&gt;(strJSONLine); //now you have your JsonObject you can access using your class } EDIT: Forgot to add declaration and instantiation of JavaScriptSerializer
&gt; For example, at my work we compile all the sources together each time, so that's not an issue for us. While that's fair, when you're looking at releasing an update to a library to a third party integrator, you wouldn't have a benefit like that. It just allows for more flexibility in implementation details. In your case it probably works just fine, for others, not so much.
`GetComponent` is from Unity3D: http://docs.unity3d.com/ScriptReference/GameObject.GetComponent.html
I'm working into linq stuff right now I found searching xml made the most sense to me, to start. The keywords are online, but the big ones are from, as, where, and select. 
SQLite is a C/C++ library that can create and open database files and provide commands to interact with that database. Since SQLite provides a C api, it can be invoked through C#/.Net PInvoke, just the same as how, for instance, .Net's socket class talks to the C api libraries that are provided by Windows to do networking. In order to use the SQLite library in your code, you need to have the SQLite C# API library. That library is provided by the folks who develop SQLite. This library provides all the code necessary to interact with the C API provided by the native library using vanilla C# code. In order for your program to work, you need to include the SQLite C# API library in your project so that it is compiled along with your code; and you need to have the sqlite.dll native library in the same directory as your executable (in order for .Net's native library loader to be able to find it). From there, you can use the API to create, open, and insert/query databases. Databases are stored in a single little file. SQLite also provides a command line shell that lets someone directly access a database file. This is helpful if you'd like to manually look at the database, manually fill it with data, create databases by hand, etc. Theoretically, you could re-implement the shell in C# code yourself, using the API they provide you. I hope that helps you at least understand a little bit better the pieces you're working with.
Yes that should do for now. I'll be messing with it in the coming days/weeks, thanks!
I installed SQL server express with tools and it didn't show up. Then I was just sick of it and reinstalled VS C and it still doesn't show up... -edit- sqllocaldb info gives me "MSSQLLocalDB" and "ProjectsV12" so it should be installed?
That would result in a `NullReferenceException`, not in a `MissingMethodException`.
Can anyone verify if they can find the option "Local Database" when you add a new item? I think it should work fine and it's driving me crazy. This is the problem following tutorials really, one thing is different and it totally messes it up since I don't understand yet exactly what I'm doing.
Copy json data to clipboard Fire up visual studio Edit -&gt; paste special -&gt; json as class That will give you your json data structure as classes, probably rooted in a single RootObject class or similar. Then.... string myJsonDataString = "your data goes here"; You need a copy of your data to actually run from JavaScriptSerializer js = new JavaScriptSerializer(); Create a new JavaScriptSerializer object (no need for newtonsoft for something this simple....although you MIGHT need to add a project reference to System.web.extensions) RootObject myRootObj = js.Deserialize&lt;RootObject&gt;(myJsonDataString); Convert your string to fully populated classes. That's from memory, but should be close enough.
Great. This was what I was looking for and after reading up on this I think this solves my problem. Thanks!
Whoops!
For the purposes of following the tutorial that OP is following (which uses LocalDb) it should be fine. I agree that it has limitations. SQLite is nice, but I generally use SQL Server Express for my local dev work since it more directly translates to regular SQL Server and Azure Sql instances.
I've read a lot on this blog. It's usually pretty good. I just can't look at that photo in the top banner because it's terrible. It's like the photo you put on your Tinder to show everyone that you're "outdoorsy." 
What do you mean? * It doesn't look like you are paging the results, so the collection isn't dependent on order. * You're returning a list instead of an enumerable so you're going to iterate it at least once before you return it * Moving the order clause just moves the iteration from being inside the method to outside * And there's a good chance that the caller is going to filter and transform the result of the query anyway Anyway ... I'll start a different thread with suggestions for the overload if that's really the way you want to go 
Oh I'm sorry, did I offend you? Do you not like other languages than C#? Well, most programmers do, and perspective is always nice, and the question was already adequately answered.
I'll post the full script when I get home.
That made me laugh, thanks. My blog is my Tinder and I am outdoorsy. Maybe I can write you a Greasemonkey script to hide my face or something :p
Ugh, more DI bullshit.
Get rid of the overload and `params object[] args` Then you can call var result = GetFromCache( CacheApiModuleEnum.Core, false, new List&lt;bool&gt; { true }, new List&lt;Func&lt;Account, IComparable&gt;&gt; { x =&gt; x.ID }, _ctx.prc_API_SelectAllAccounts ); and for the one that needs arguments, just change your call to: var result = GetFromCache( CacheApiModuleEnum.Core, false, new List&lt;bool&gt; { false }, new List&lt;Func&lt;User, IComparable&gt;&gt; { x =&gt; x.ID, x =&gt; x.Type}, () =&gt; _ctx.prc_API_SelectAllUsers( accountID ) ); ------------- I would also recommend not having the order and direction parameters be in different lists - you're just asking for some mismatch to occur that will be hard to track down. Make a class like this public class SortOption&lt;T&gt; { public bool IsAscending { get; set; } public Func&lt;T,IComparable&gt; Sort { get; set; } } and then change your method to: public IList&lt;T&gt; GetFromCache&lt;T&gt;( CacheApiModuleEnum cache, bool bypass, IEnumerable&lt;SortOption&lt;T&gt;&gt; sorting, Func&lt;ObjectResult&lt;T&gt;&gt; f) { ... }
The caller won't be transforming the results any other way; the ordering needs to happen within the function and be cached in that order. That isn't really relevant though, the ordering works correctly, the problem I am having is with the overload call. I am not sure why it won't recognize why a function that takes one param should go to the overload.
Thanks, I'll give that a go tomorrow, that looks like exactly what I am trying to accomplish. And yeah, I should use a class to simplify it, the way it works now is quite bad lol.
And for anything that uses `DataContract` bindings you can use `[DataMember(Name = "as")]` attribute to bind to a differently named variable.
You're still missing a set of parens around your denominator, and I think there's some confusion on what N represents.
I'll second Dapper. I don't even like using EF, although most of the examples out there user it unfortunately
Probably because u didnt post error message
Yeah, use wpf. Look into creating separate projects for each of your windows, each being written out on a user control. Make the main application project reference those other projects, and load them up each in their own windows created by the main application window. Each window then ruins independently
If you don't have the correct namespace imported with the correct using you won't be able to access the Random object. I can't remember what namespace you need to use but a quick google search will give you the right MSDN reference. 
I would write it non-recursive and use a cancellation token to time out the operation.
It works fine for me. Make sure you are using the System namespace. Try this to make sure: System.Random r = new System.Random();
The reply about me has it covered. You might want to make sure you really read around the example though, talking from personal experience, you want to be sure you fully understand what you're reading/writing
This issue is that name this app Random. That's why I got a namespace error
Ah, nuts. I just discovered I failed to use the cached value for ::typeid in a few areas. I've modified that along with one other small change that resulted in converting a boolean to an int value (didn't affect function of the code but it's bad form)
Then my suggestion should fix it. Did u try it?
No, what I did is changed the name of the program. When I created it I call it Random so I changed it to Winner. I do plan on using your suggestion since its more advanced and I can learn from it.
Thanks for the feedback, everyone! Here's some of the changes since it was posted: I discovered an Int-&gt;Boolean conversion (didn't affect operation of the application but it's bad form). I've updated the Readme.md to include some code samples. I still need to shrink the content and put a lot of it elsewhere. There were a few methods where I was acquiring the TEnum::typeid instead of using the s_type cached value. Still to do: I've discovered a way to eliminate the Enum::ToObject conversion from int value back to TEnum. This will wipe out a small performance cost on some of the enum methods (Add/RemoveFlags) that will get them about as close to native performance as I think they can get (Flag.Flag1 | Flag.Flag2).
using UnityEngine; using System.Collections; public class Laser : MonoBehaviour { public float speed = 7.0f; LineRenderer line; // Use this for initialization void Start () { line = gameObject.GetComponent"&amp;lt";LineRenderer"&amp;gt";(); line.enabled = false; } // Update is called once per frame void Update () { if(Input.GetButtonDown("Fire1")) { StopCoroutine("FireLaser"); StartCoroutine("FireLaser"); } } IEnumerator FireLaser() { line.enabled = true; while(Input.GetButton("Fire1")) { Ray ray = new Ray(transform.position, transform.forward); RaycastHit hit; line.SetPosition(0, ray.origin); if (Physics.Raycast(ray, out hit, 100)) { line.SetPosition(1, hit.point); if (hit.rigidbody) { hit.rigidbody.AddForceAtPosition(transform.forward * 10, hit.point); } } else line.SetPosition(1, ray.GetPoint(100)); yield return null; } line.enabled = false; } } Here is the script, I'm trying to make a laser. Have it move forward after being fired. The errors given are as follows: Severity Code Description Project File Line Error CS1525 Invalid expression term ')' 9 Error CS0103 The name 'lt' does not exist in current context 9 Error CS0119 LineRenderer is a type, which is not valid in CC 9 Error CS0201 Only Assignment, call, increment, decrement, and new object as statement 9 Error CS0103 The name 'gt' does not exist in the current context 9 Honestly, following this guys blog. https://www.safaribooksonline.com/blog/2013/11/20/shooting-lasers-in-unity/ I'm trying to figure out things piece by piece. 
That'll also do it! In the future you might want to make sure you don't name your project a reserved word haha
Where is gameObject defined?
Hmm, what do you mean exactly?
I built my own data access library using ADO.Net. It requires a lot more hands on, do-it-yourself SQL on the back end, but that's the only way I'd have it.
You can do it in a ForEach, but it's bad form. If (Instance.TryGet(typeof(Dummy).Name, out list)) { list.ForEach(e =&gt; { /* stuff */); } But, it's more readable and better to keep it in a loop. 
Because ForEach doesn't transform the collection, like every other Linq method. 
Any chance you can post some sample code? I'm having trouble understanding what you mean. You can use pastebin so you don't have to mess with Reddit formatting. 
http://pastebin.com/QF1jyjh2 This is just to give an idea. I'm just most worried about the last part where the you can select four different radio button options with four lists. I don't feel like making if statements for all the different combinations is the right way to do this
Why not just use Vim with Omnisharp instead? https://github.com/OmniSharp/omnisharp-vim Or emacs with vim bindings with Omnisharp? https://github.com/OmniSharp/omnisharp-emacs
I am a noob too, but can't you use case/switch? 
Since your program was named "Random" There was a namespace defined ::Random so when you did new Random() the compiler thought you meant the namespace, not the class. It's an ambiguous symbol reference and that's bad.
awesome! can't wait to dig in! 
Based on two minutes on reading, I think you can do it differently in SetChildrenIsCheckedValue. That method sets child.IsChecked, which again will trigger Parent?.SetIsCheckedValueBasedOnChildren(); You just came from that node and don't need to check it. An InheritCheckState(bool) or something can update _isChecked (not IsChecked) for all children without going upwards, just like SetIsCheckedValueBasedOnChildren() does. So.. Parent?.SetIsCheckedValueBasedOnChildren(); Children.Select(PropagateIsCheckedValue(value)); edit: do you need Select(c =&gt; c.PropagateIsCheckedValue(value)); here? 
Your question doesn't really make sense. There is no such thing as a "auto stack property". There is nothing special about the type Stack&lt;T&gt;, it's just a datatype from the standard library. 
Random isn't a reserved word. 
There are a lot of tasks which can be solved only with recursion and without any predictable stack depth, you can try it and find out how deep you can get til StackOverflow to set it as hard limit, but that's all. Async has no any relation to recursion and is not able help anyhow. Recursion is not limited to recursive callbacks which is just bad code from the beginning.
Indeed, I was just saying because it's a similar situation
OK, with some limitations, but done. Can be used like your example, works with nonstatic methods too. And parameters don't need to be value, just computable to value in current process.
Nice :d
If you mean turning it to a float I tried that as well but that did not seem to work o:
Have you tried changing: public int temp_f { get; set; } public int temp_c { get; set; } to this: public decimal temp_f { get; set; } public decimal temp_c { get; set; } at all?
Ontop of that im not even using it as an int anywhere its only listed as a string in the class and when I call it I should never even have had to convert it cause I made it show up in console as a string... Whats also funny it worked SOME times yesterday and then some times it gave this error as if it depended on the current temperature whether it felt like working or not
&gt; public decimal temp_f Wait I didnt even know it was possible to change data types taken out of a JSON API url made into c#....I realized I could change the class names but didn't know about this
Well that fixed everything, I had to turn every single int data type to a decimal.. Thank you , now I know about the decimal datatype ( never used this before ) And that I can change the datatypes I get in my classes taken from json...good to know! Thank you very much!! Suddenly I can get rid of a lot of converting in previous scripts...:)
No problem!
Ya...it is truly a page designed for IE. I am bookmarking those pages!
Couldn't he create an "auto stack property" with Rosyln? Although, I really don't know why you'd want to given Stack&lt;T&gt; already exists.
There should be no issues, but moving to Windows 10 and installing VS 2015 don't mean you have to give up VS 2013. VS 2013 will still be there after the upgrade to Windows 10, and the VS installations are side by side, so you can switch back and forth between 2013 and 2015 if you need to (after you install 2015). 
You have to be aware that Windows 10 and Visual Studio 2015 both come with the .NET 4.6 framework, which as an in-place upgrade for 4.0, 4.5, 4.5.1 and 4.5.2. The changes are small (except between 4.0 and 4.5), but exist. Regardless of your target framework the application will run under .NET 4.6.
hrm.. i realized you're correct about setting the IsChecked value on children was the sole cause of the repetitive actions. I've updated the code to this; http://pastebin.com/NNHnWDDt I'll setup my tests now to see if it does everything correctly, but with some just quick user testing it looks correct and the debugging outputs are what i think they should be! Now to figure out how to separate the base logic out one more step. I'd like to create a BaseTreeViewItemViewModel, that impliments the core of the logic without the tie to IFileSystemViewModel, so i can reuse it for other types. But that's another question entirely. Thank you for being my rubber ducky! :)
Yes, this means it's installed. 
I only said I use SQL Express for my local dev work, which doesn't involve a lot of small desktop applications that need local data stores. I never advocated installing it on a client machine for such a small task. None of this addresses the problem OP was actually having, though. The fact that his tutorial was using LocalDb, and he wanted to follow along with that. I was only trying to solve the crisis at hand. 
X-Post referenced from /r/programming by /u/mattwarren [Fast boolean searches using Compressed Bitmaps](https://www.reddit.com/r/programming/comments/3qpx1x/fast_boolean_searches_using_compressed_bitmaps/) ***** ^^I ^^am ^^a ^^bot ^^made ^^for ^^your ^^convenience ^^\(Especially ^^for ^^mobile ^^users). ^^[Contact](https://www.reddit.com/message/compose/?to=OriginalPostSearcher) ^^| ^^[Code](https://github.com/papernotes/Reddit-OriginalPostSearcher)
Mosh is the best tutor in udemy. I am looking forward for more courses from you. Thank you.
The only gotcha I've come across (coming from win 7) is the updated permissions required for writing to Program Files. Some older, and not correctly written programs were autoupdating exes upon running. They also interact with Outlook. Now this requires it to be run with administrative permissions, which doesn't allow it to interact with other programs (like Outlook) which are already open without administrative rights.
You're being incredibly rude. You have no idea what the context of this is, yet you presume to lecture me. This is solving a problem at hand. I need information on a syntactic problem; if you aren't willing to help with that, fine, but don't command me to do something else. 
I might check that out - this isn't really monolithic though, the call looks kind of ridiculous, but it isn't really that complex - it is really just calling a function with a sort, and only the function header looks complicated. A bit more abstraction and it won't really be out of place at all. I am not really interested in whether or not you think this is good design. If you don't want to help with the syntactic problem fine, but you don't have to declare this as silly, which is quite insulting. You have no idea what the context of this problem is, yet you presume to judge.
&gt; Go To Implementation THANK YOU!
I got it. It was a combination of several things. I wasn't stating version, the config was all wrong. This is the config I ended up with: ldapserver identifier="TEST" servername="ldap.forumsys.com" port="389" binddn="cn=read-only-admin,dc=example,dc=com" bindpw="password" secure="false" path="dc=example,dc=
Are all (3?) projects within the same solution? I would think VS' dependency resolution would make sure to rebuild the necessary DLLs.
Yeah, they're all in the same solution :(
Enumerable.OfType&lt;T&gt;()?
&gt; Code Analysis functionality built in I didn't even know this existed. I so wish I worked in a place that cared to use and share this kind of stuff.
I honestly don't have a clue, I'm a beginner and not much makes sense.
&gt; You cannot expand the References node W...w-what?!
Yeah I installed this over my Enterprise 2015 and it broke a lot of stuff. Currently running repairs hoping it will fix it. Basically got a ton package did not load correctly messages and a lot of windows didn't work. Couldn't open Nuget Manager or Extensions and Updates. =/ EDIT: currently completely uninstalling VS and reinstalling. Nothing I found online seemed to have worked. 
I've been in your position I think, where I did not understand arrays and how they worked, or why they were so useful. Perhaps you're past that stage but just in case you need to conceptually understand arrays lets start with it simple: Putting these values in an array versus just having these values in your program: Imagine that the numbers entered by your user were just one of two possible types of cookies (actual cookies that you can eat). Imagine that the *even numbers* the user entered were the *round cookies*, and the **odd numbers** your user entered were the **square cookies**. Imagine that these square and round cookies were on your kitchen counter and wanted to know what type of cookie each specific cookie was.. You could simply look at it and tell right? In this instance you can simply type something like Console.Writeline(firstCookie) and determine its value. But what if the cookies were in an Array? Or in this case, a cookie jar. Our cookie jar in this example will represent the array (In the future you will understand why this is not the best of analogies, but for now, lets go with it.). So your user here baked these cookies (Input them into the program), and the cookies were placed into the cookie jar unbeknownst to you (The user input put into the array). Now you want to find out which of these cookies was a round one, and which cookie was a square one (which input was even, and which was odd). For the sake of making sure I don't misguide you, lets imagine that our Cookie jar (the array) is shaped like a pringles can (http://cdn.instructables.com/F4N/FVO4/H0FLDFS7/F4NFVO4H0FLDFS7.MEDIUM.jpg). What I mean is, lets imagine that the way the cookies went into the cookie jar is the way they remained, there is no space for them to move around and mix up, the order they were input is the order they remain. We're going to have to take a look at this pringles cookie jar and figure out which are the round cookies and which are the square ones. But first we're going to need to keep track of it somehow, so lets write it on our kitchen counter in sharpie: int roundCookies = 0; // Even numbers. int squareCookies = 0; //Odd numbers They're set to 0 because right now we do not how many of each we have. Now that we've vandalized our kitchen counter with a way to track how many cookies we have lets actually glance into our pringles cookie jar: foreach(int cookie in CookieJar) //For every cookie in our cookie jar { if(cookie % 2 == 0) //If when divided by 2 there is no remainder value then the cookie must be even and therefore round. { roundCookies++; //Lets tally up one for our count of round cookies. } else { squareCookies++; // when the if statement above is not true, it means there is a remainder which means that the cookie must be odd. So lets tally up a square cookie. } } And thats it. This example may suck, but I hope at-least it provided some level of clarity, if it didnt just ignore it :p. Although it kinda skips over actually using the array so if it isn't accepted by your professor I can use a for loop instead of a foreach loop. 
Thank you very much, I'll give it a go anyway.
Delegates are method references Events are lists of delegates Callbacks are the same delegates.
Sucks to be those who spent $$$$ on ReSharper just for this feature.
Yeah, wth! I could deal with that on small personal projects but not on anything of any decent (read: real-world) size.
Yes it will, but there are various internal compatibility switches in the framework which will activate when your programs target older versions. So, for instance, the new array sorting algorithm (an introspective hybrid quicksort/insertion sort) will not be used if you target 4.0, even with 4.6 installed. 
 public partial class Form1 : Form { public Form1() { InitializeComponent(); } List&lt;int&gt; numberList = new List&lt;int&gt;(); private void button1_Click(object sender, EventArgs e) { int inputNumber; if (Int32.TryParse(textBox1.Text, out inputNumber)) { numberList.Add(inputNumber); if (numberList.Count == 10) { MessageBox.Show("Odd Numbers:\t" + numberList.Where(x =&gt; x % 2 == 1).Count() + "\r\nEven Numbers:\t" + numberList.Where(x =&gt; x % 2 == 0).Count()); numberList = new List&lt;int&gt;(); } } } } Standard winform, one textbox, one button. Tried to keep it simple.
Happy to help, if you need a more programming centric explanation id be happy to omit the cookies. :p
Thank you.
Thanks so much for your beautiful words! :) 
Any questions on how it works, feel free to ask
&gt;this isn't really monolithic though, the call looks kind of ridiculous, but it isn't really that complex - it is really just calling a function with a sort, and only the function header looks complicated. A bit more abstraction and it won't really be out of place at all. Just from my point-of-view it just seems to be doing a lot. I have that issue personally and when I see it in others code, I try to figure out a bit of what they're trying to accomplish and steer them in a simpler direction. While it may not do everything you wanted in one method call, it makes your method signatures cleaner, simpler, and in this case, your life simpler too. But again, that's a personal bias I have that, in no way, I should be attempting to push onto you. &gt;If you don't want to help with the syntactic problem fine, but you don't have to declare this as silly, which is quite insulting. You have no idea what the context of this problem is, yet you presume to judge. I mean, as /u/centurijon commented, I don't want to be rude and I'm sorry I came off as rude. You yourself called this some crazy code. I don't know the context of the situation that led you to create this solution, which makes it very hard for me to assist you because I don't know what problem you're trying to solve with this function. However /u/centurijon appears to have given you a suggestion that might work out for you in the end. I was just offering my two cents on a design choice when that wasn't the question being asked. That I am sorry for.
P.S. If you check the .NET Framework classes, you'll find that abstract base classes are generally preferred over abstract interfaces because they allow new members to be added without breaking backwards compatibility. In places where large abstract interfaces were used such as IDataReader we got stuck.
Yeah I was about to download and install, then I pictured this scenario and cancelled the download.
I had to uninstall and reinstall after ctp 1. Doesn't seem like much has changed.
To be fair to both of you, there's certainly a difference in how you'd want to design and implement a general purpose framework as opposed to an application. Ideally, you want your tooling to support a variety of approaches so everyone is happy. Well, with the tooling, at least :)
Do you have a link for this?
Yes you are correct they are a way of using methods not a special type. May I suggest that you look at the Task class and its supporting namespaces instead of .Net events, as this is really the more favoured model in most cases (UI being something of an exception. If you are feeling adventurous look at RX.net (reactive extensions) for what is often called linq to events. There is some great stuff built on top of rx like reactive UI.
While the tooling is appreciated, I stand firm on my position regarding design patterns and dependency injection. You services layer (data access, repositories, etc.) should be in a separate library from the application itself. And that library should be reusable across at least the application and the test project. So right there you've met the requirements for employing techniques from the .NET FDG. Specifically, adhering to the ones regarding backwards compatibility greatly reduces the odds you'll be spending all your time fixing broken tests. 
meh. nothing new for me in C# that would get me overexcited anyway. 
Never used ActionScript before, but after reading about it, I'd say it feels like you're just trying to maintain ActionScript semantics in C#. I would discourage that. As for AllOf, I'd do something more like: public static List&lt;GameObject&gt; AllOf(Type type) { string key = type.Name; List&lt;GameObject&gt; blah; if(All.TryGetValue(key, out blah)) { return blah; } return new List&lt;GameObject&gt;(); } or even public static List&lt;GameObject&gt; AllOf(Type type) { string key = type.Name; List&lt;GameObject&gt; blah; All.TryGetValue(key, out blah); return blah ?? new List&lt;GameObject&gt;(); } It may also be even more prudent to simply key your dictionary on the type itself rather than their name as a string, since those are not necessarily guaranteed to be unique, but the type object for a particular Type is a singleton across the entire AppDomain, so you could do: public static Dictionary&lt;Type, List&lt;GameObject&gt;&gt; All = new Dictionary&lt;Type, List&lt;GameObject&gt;&gt;(); public static List&lt;GameObject&gt; AllOf(Type type) { List&lt;GameObject&gt; blah; All.TryGetValue(type, out blah); return blah ?? new List&lt;GameObject&gt;(); } Further, if you'd like to do it all in a type safe way: public static Dictionary&lt;Type, List&lt;GameObject&gt;&gt; All = new Dictionary&lt;Type, List&lt;GameObject&gt;&gt;(); public static List&lt;T&gt; AllOf&lt;T&gt;() where T : GameObject { List&lt;GameObject&gt; blah; All.TryGetValue(T.GetType(), out blah); return blah != null ? blah.Cast&lt;T&gt;.ToList() : new List&lt;T&gt;(); } 
I fully agree with you there. A dream architecture is every project/assembly only dependent on its hard external library dependencies, and it's own interface project/assembly, and its dependencies' interface project/assembly. No actual implementations should reference one another directly. Then in your runnable applications, you can set up an IoC container with the proper implementations and a sensible composition root, and compose your objects as needed. I tend to let my test projects be a bit flexible about including non-network accessible dependencies in them to reduce the need for excessive mocking though.
The sequence isn't changed in any way. A new one is generated with whatever transformation has been specified.
 var blah = previousVariable.ToList(); blah.Select((v,i) =&gt; { blah.ElementAt(blah.Count - i).Property = null; return v; }) .ToList(); I've mutated the data in the collection while not changing the subject of the function or the collection itself. It essentially acts as a foreach loop. There's nothing that says your LINQ lambdas have to be pure.
One note, is that in JSON, a dictionary and an object are represented in the same way: {"key1" : 1, "key2" : 2} By default, Visual Studio will simply create a property for each key, rather than a Dictionary, so this almost works, just gotta make a manual adjustment every now and then.
Well you probably shouldn't be using release candidate software in a professional setting regardless.
Definitely have to make sure there's no circular dependencies for sure. I still write non-mutating integration tests that run with every build.
The last one won't actually work, `out` parameter types need to match exactly and you can't just cast `List&lt;Base&gt;` to `List&lt;Derived&gt;` anyway. 
But you can still target older versions if you want, so that shouldn't be a problem either.
ToList will generally be faster than ToArray, since the latter has to perform the same work and then trim the array to the correct size, while ToList doesn't need to do that.
Oh, yeah thats true. Edited to make it work. 
The GC doesn't call Dispose() on things unless the class has an object finaliser that calls Dispose(). It's probably XNA doing it. KeepAlive won't help you here.
I think he was giving a template of sorts. Confusing for a beginner, so not good advice, but i can see where he was going. Or maybe hes GARB. 
If you have a solid computer you maybe could use a vm with different settings to emulate different scenarios
Is this something that redgate ANTS or dotTrace can't do? 
&gt; dotTrace Can those apps profile DLLs? I have made a custom assembly and not an exe, so my situation is different to OP, but I am still interested.
I didn't see it in Task Manager. Although I just did a rebuild and the errors didn't show up.
I've run into this as well occasionally, with a handful of projects/solutions. I think it might be caused by VS designers using the built assemblies, but I've never found an actual solution other than restarting VS.
If you just need to show results for this one test, your on the right path. You just need to put that information in your report. Make sure your test captures the entire unit of work your testing. I usually run my tests in a loop and capture many operations say 1-3 minutes worth, so you get a decent sample size. Its also the perfect way to optimize by attaching vs profiler and seeing whats slow 
You on mobile? It appears that way to me too, and I'm on mobile. It lets me scroll the paste data though to see the rest of the class
If the calling project needs to use classes in another project, add a reference. Trying to be lazy is asking for stuff like this to happen. 
Eh. My computer is currently being completely reinstalled by IT because as you will find out, the VS is completely uninstallable. I ended up with VS2015 being completely broken, SQL Management Studio being completely broken etc. What worked for me for some amount of time is that our solution still works with VS2013 and compiled/started ok.
That doesn't sound good. Already lost like 2.5 hours of work on Friday dealing with this. After un installing and reinstalling vs I opened it up and it looks okay. I'll have to test a bit more later. 
It's not even an extension method, it's a class method of List&lt;T&gt;
You can also look for vshost.exe. 
Thanks. I'll try it next time it happens.
I usually just run clean on the solution and then rebuild and it fixes it
Exactly. Also, if you't going to try RC software at work, just spin up a VM.
Yup. Lesson learned here (surprisingly late in the game but eh...). The windows packaging system is still abhorrently bad. Can't believe that year is whatever it is and there is still first-party software that can't uninstall itself. Neckbeards have had that since ~95 and MS still doesn't have it.
So I don't have to define the gameobject?
No, you don't. It's defined in `MonoBehaviour` which you inherit from.
Wait, you actually have the `&amp;lt;` and `&amp;gt;` in your code? I thought they were just artifacts of pasting to/from the internet. You should remove those. Your line should say: ` line = gameObject.GetComponent&lt;LineRenderer&gt;();` without the HTML special encoding characters. EDIT: Yeah, I just looked at the guy's blog. He has improperly formatted his code for online consumption. The bad line of code in question is displayed/copied/pasted as this: `line = gameObject.GetComponent&amp;lt;LineRenderer&amp;gt;();` When it should be this: `line = gameObject.GetComponent&lt;LineRenderer&gt;();`
The "&amp;lt" and the "&amp;gt" for some reason do not want to show up on Reddit when I post it. I'm adding quotes to it so you can actually see it.
You hit it right on the head.
"10000 records, per execution"??? you should first know in what time frame those 10000 records should be recorded, i.e. 30 seconds minimum, 40 seconds maximum. And then check if it meets this criteria.
If you look at the reference source, there are actually different internal implementations based on the interfaces that the underlying collection implements. If the underlying collection supports .Length or .Count, then both ToList and ToArray know how much space to allocate ahead of time. public TResult[] ToArray() { var results = new TResult[_source.Length]; for (int i = 0; i &lt; results.Length; i++) { results[i] = _selector(_source[i]); } return results; } public List&lt;TResult&gt; ToList() { TSource[] source = _source; var results = new List&lt;TResult&gt;(source.Length); for (int i = 0; i &lt; source.Length; i++) { results.Add(_selector(source[i])); } return results; }
I've sometimes found that antiviruses may cause this.
Do you have steam running? If so, exit out of steam and then try again. Steam is "proactive" with regards to catching hackers- if you are running visual studio while running steam, every so often steam will start examining all your project files, just in case you are trying to write cheat tools . When this happens your project will fail to compile with "unable to write file" or "unable to copy file" on all files in the project. 
Yeah... But too little too late for me. ReSharper's alt+home (move up the inheritance chain) and alt+end (move down) is something I constantly use, especially with a dependency injected design full of interfaces. 
Checkout [miniprofiler](http://miniprofiler.com/). Are you trying to get the performance of the sql, or how long the web calls take? Ideally you would test the scenario on a production like system, if that's not possible I would test on what I had but would make sure the sql server is on another machine. I would then use the built in visual Studio profiler or perhaps integration tests I think Microsoft uses [xunit](https://github.com/Microsoft/xunit-performance) to do some performance tests in Asp.net vnext. I would also test response times with multiple concurrent connections, something like jmeter would help with that. Also make sure you are building in release mode and are taking averages.
We have it now in the form of app containers, but I imagine it will take ages until everything migrates. It took the WPF performance headaches to re-write VS, so I wonder how long it will take for them to re-write it on top of WinRT.
&gt;It took the WPF performance headaches to re-write VS What do you mean by this? VS still uses WPF.
Look for vshost.exe and (sometimes) msbuild.exe. They will get stuck sometimes. Check this [SO question](http://stackoverflow.com/questions/3919892/msbuild-exe-staying-open-locking-files) for a little more info.
Our weekly CodeCop news give us Ricardo. You only ever contribute to this subreddit by self-promotion. That's not very nice.
Doesn't Identity 2.0 use email by default?
Hey, so another question. In my code it sets the ray to it's origin. That is not where I want it to be. How would I go about changing it to a location that I want?
The sequence can be shuffled (7!) unique ways and each group of numbers has 2 possible values (2^7) 5040 * 128 = 645120. Your math is fine there, but I don't understand what you said about using 13. Is the number 13 special or is the first position of the sequence special?
Well just a basic knowledge about java.
If you can't guarantee that all the IOrderParts from GetPartsList are OrderParts, your code will crash. If semantically you can guarantee they are all OrderParts based on the argument, perhaps GetPartsList should be generic as well. OR make IOrder use IEnumerable &lt;IOrderPart&gt; instead of List. 
It just "knoowwwsss"
That's neat, but what if the method has overloads? What if I have foo(int x) and foo(float y), what happens when I call foo( z =&gt; { // whatever });
balls, I meant to make one int x and the other float y
Then the compiler will complain about an ambiguous invocation and you'll have to specify the type.
Grab a C# book and read it, so you have an understanding of what you're actually doing. Poking around with a stick like this does not make much sense. The code runs perfectly. You create a new vector, then you get a string representation of said vector.. And do nothing with it. You don't use the return value of the `ToString()` method call.
You have to put a `Console.ReadLine();` at the end of your main method so the window doesn't close immediately when debugging :)
And you also need a Console.Writeline(); to output what your string is.
these closure issues are common to most languages. I feel like 99% of the value of these observations can be delivered with 1% of the effort by distilling them down to a few rules of thumb, e.g. don't close over an iterator variable.
I added a line at the top of my Main method that says Using System; and with in my code I includeded a Console.ReadLine(); statement to my Main. Now, its no longer closing rapidly, but I still have nothing outputting. Help?
Guys, I'm sure that if I were more versed in programming your comments would be more helpful, but PLEASE... PLEASE do not give cryptic hints, can one of you please just post what the main method for this program would look like? This is becoming really vexing for me... :(
 Vector myVector = new Vector( 3, 4, 5, 8); var result = myVector.ToString(); Console.WriteLine(result); Console.ReadLine(); You can also chain it together or skip the result part, i.e. Console.WriteLine(myVector.ToString()); However this is really basic stuff, I'd recommend you stop what you're doing and go learn C# from scratch. Google a few tutorials and start there.
Thank you! A million times, thank you! Like I said, I've read the first 4 chapters of Deitel and Deitel How to Program Using C#, but I just....don't get it. 
It could just be that book. Different resources teach the same things in different ways. Try this and see if you fare any better: https://mva.microsoft.com/en-us/training-courses/c-fundamentals-for-absolute-beginners-8295 Even if you're not interested in programming or C#, it's a useful thing to know the basics. As a maths student, it's probably easier to tell you that what C# calls a method you might know as a function. It's all about taking an input and (potentially) producing an output. So in Maths you have f(x), in C# you have the same thing, x is the input and there's usually an output (but not always). 
Think of it how every class inherits from object. There's methods that return an object and you have to cast that object as the most specific type they are to access the all of its properties, otherwise you are stuck with the default object properties. I can't think of any method that returns an object you then need to cast off the top of my head right now. 
I wouldn't recommend it, but I think you can do this without casting if you make the variable pointBubble dynamic instead of var. It will evaluate the type at runtime instead of compile time.
Well that's a pretty shit way to learn computer graphics.
You can do foreach (var pointBubble in bubbles.Children.Cast&lt;PointBubble&gt;()) { or foreach (PointBubble pointBubble in bubbles.Children) { if you know you actually have a collection of PointBubbles
take a look at this http://www.dotnetperls.com/array-resize although you might as well just work with the stock, optimized wrapper provided by the framework... http://www.dotnetperls.com/arraylist 
Why does he want you to only use an array? Edit: also, as far as a solution goes, it seems you don't know how many items you'll ever have? So your method will need to use the Array.Resize to resize the array to add one. Then youll need to move all the items down 1 starting at the new index where the new item needs to be inserted. However, this is dumb. We have list and other data structures for dynamically storing things without a known size.
&gt; I created a list of bubbles called 'bubbles' What is the type of the objects inside the list? PointBubble, CCNode, or something else? 
So just so I get your problem, lets say you have the string "Hello" at index 3. Your professor wants you to make a method so that, lets say, if you were given the string "Goodbye", to add the string "Goodbye" to index 3, but then relocate the "Hello" string that was there before? Where does he want the original "Hello" to go? Can it go anywhere? I mean just save "Hello" in a temporary string variable, replace index 3 with "Goodbye" and then just add temporary string variable that has "Hello" in it, to the end of the array (With Array.Resize, /u/bentheiii linked great resources). Seems like you had the answer already, just got to commit to trying it and seeing what happens. Unless, I misread your problem....lol
No, that makes perfect sense. What I was missing was where to put the value that already existed there. I was complicating it by thinking I had to push back all the other values in order (like a queue) bc we are currently learning that right now as well. I knew I had to resize but my brain was coming up short on the rest but this is a good idea thanks 
Yeah, great idea, let's recommend a pre-.NET 2.0 collection. No, use List&lt;T&gt;.
Don't use arrays, they are mostly an outdated concept. Use List&lt;T&gt; which supports insertion, appending etc. and resizes as needed.
No, it doesn't work? 
Just use a List&lt;T&gt;. No one can in all seriousness mean that you have to use an array for this. It's an entirely inappropriate data type for what you need.
I think he means that's a terrible idea that shouldn't even be mentioned. It's like someone asking for help with a for loop and saying "I wouldn't recommend it, but you could use gotos"
Often assignments in school have you work with non-optimal data structures as a learning exercise. Plus, if the input is an array, and you have to output an array, then converting it to a List&lt;T&gt;, adding your item, then converting it back to an array to return probably isn't any "faster" than just manually resizing the array and moving things yourself, although the code would definitely be neater and easier to read. Not to mention than List&lt;T&gt; *IS* an array on the backend anyways. It's just a wrapper to make working with arrays more straightforward. 
Here's a pretty contrived example: public static class Program { public static void Main() { var thing = new Thing {IntProp = 3, DblProp = 3.1}; thing.PropMethod(x =&gt; x.IntProp); // int: 3 thing.PropMethod(x =&gt; x.DblProp); // dbl: 3.1 } } public class Thing { public int IntProp {get;set;} public double DblProp {get;set;} } public static class ThingExtensions { public static void PropMethod(this Thing value, Func&lt;Thing, int&gt; accessor) { Console.WriteLine("int: " + accessor.Invoke(value)); } public static void PropMethod(this Thing value, Func&lt;Thing, double&gt; accessor) { Console.WriteLine("dbl: " + accessor.Invoke(value)); } } In this case we know what type it is because we have different signatures on our extension methods. Our Funcs only access a single type, so we know what type it is at compile-time. Hopefully this makes it a little clearer. Let me know if you still have questions.
It seems to me the professor wants the students to work through the problem without the help of a List's methods. 
It's on par with casting, tbh. Both are potential mines for a runtime exception.
If bubbles.Children is a collection that will ONLY have PointBubbles in it, then change the type of bubbles.Children.
Its a homework assignment, I am sure her professor has a good reason to make her use Arrays. Of course in the real world List&lt;T&gt; would fix this in 2 seconds lol. Edit - Fixed Gender :P
I think that's the best solution for now and maybe as I gain more knowledge and experience with the other concepts I'll be able to revisit the code later and see how much easier/more streamlined it would be as a list. Maybe even by the end of the assignment. If that's the case I could probably do it both ways just to show that I can, IF that's what he wants. I've had this teacher before and he's pretty lenient as long as he can tell you understand the concepts he's wanting to teach and aren't just copy pasting stack overflow. 
For the initial cast yes, but once you start working with it you lose your compile time checking for other things. Plus the performance penalty for dynamic is pretty hefty especially since it seems like OP is making a game of some sort. There is no reason to use dynamic over a cast on this case, or 99% of other cases.
Implementing it like a queue vs just resizing and moving the displaced value to a new index is the kind of problem your professor will likely ask next. The idea he's probably getting at is for you to understand the underlying implementation and workings of a basic array backed queue. For just an array of strings, probably the easiest is to resize it one larger and loop backwards through the array moving the items back one step each iteration until you empty the "slot" at the index, then copy your string in at that index.
*shrug* both are poor options compared to using a better typed collection is all I was pointing out. It's very cliché programmer to get caught up in the differences between option A and option B when both are really bad, and only marginally different from one another, compared to option C.
Actually here http://pastebin.com/QFv6fyqV
The entire crux of OPs problem is that he must use Array, idiot.
The framework he is using has a property on CCNode called Children, and it's an array of CCNodes. I would suspect that's what he's using here.
I think you came up with the best answer. Just do both methods! Even in the same class and name differently obviously. Show your professor both ways that it can be done. This will surely give you major brownie points with the teacher. 
Piggybacking, if I have a List&lt;Base&gt;, can I cast &lt;Base&gt; to &lt;Inherited&gt; to get methods and fields in &lt;Inherited&gt;? (Assuming) Inherited : Base
No, await does not help anyhow, just making it even worse producing StackOverflow even faster http://pastebin.com/DVhPWHeJ
Just because there's always other ways to do it I'm going to mention. You could count the number of even numbers (or odd) then subtract that count of even numbers from the total number count to get the count of odd values. AND You could do the comparison (odd or even) as the values are entered and save the count then before they even get added to the array. (I doubt this is whut the instructor intended for you to do.)
Dayum. Good post.
Checkout the Array.Resize and Array.Copy methods, these should give you everything you'd need to do an insert. 
Can you use arraylists? If so, .Add should do it cause it just adds one more indefinitely.
Second Unity. I recommend their tutorials. They walk you through the process and the tools start to become familiar to you
It's a String array eh? Append your new value to the old one with some special delimiter character. Now everything fits! ;) 
Listen to this man, Unity is the best option. It can do basically any genre, is fairly easy to use, and you can use C#. What's not to like :) Plus, if you decide to add whatever else to your ascii rendering (gui, effects, etc.), you can do that with barely any extra effort. Might be a lot harder to do with a framework specifically designed to emulate console output for example.
Emgu Cv is a .Net wrapper for OpenCv, which is a pretty popular open source image processing library. 
OpenCV is an image processing library (well, it's also more, but it does a lot of image processing), and it uses CUDA, OpenCL, AVX and SSE variously (all of which are SIMD). EmguCv wraps this with C#. If you don't like this answer, I'm afraid you'll have to be more specific.
Got it sorted. Syncfusions Universal controls have the ability to extract text from a pdf. Works great too.
Thankyou i'm doing this for work as we use word docs and pdf doc's quite a bit and edit them. The reason i'm trying to make this type of program is to make it quick access as well as preventing the use an online converter as some of the documents are confidential and uploading to an unknow source isn't entierly secure. 
It is actually pretty simple to use. Here is some example code that I've [written](https://github.com/TravelModellingGroup/XTMF/blob/master/Code/TMG.Functions/VectorHelper.cs). 
To insert items without overwriting items already in the array, you're going to have to create a new array. Array size is immutable once created, so that resizable versions like ArrayList or List&lt;T&gt; use an array behind the scenes, and manage the business of creating new arrays and copying their contents for you. /u/slowpython already mentioned the Array.Resize() and Array.Copy() methods that are also used for this sort of thing. Your instructor probably wants you to understand the mechanics of this, though, so you probably want to create a new array and use a couple for loops to copy the contents. The algorithm is trivial and *should* be all over Google if you really need more help.
&gt; If the underlying collection supports .Length or .Count, then both ToList and ToArray know how much space to allocate ahead of time. Yes, which is why I said ToList will *generally* be faster than ToArray :).
OP is talking about ASCII games, Unity is complete overkill for that
&gt;The property (or method) Children is provided by the class CCNode, and its return type is an array of CCNodes. This is what I was not understanding. Thank you for pointing it out and thank all of you for taking the time to respond!
Yes there are new APIs via WinRT for serial communication. https://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.serialcommunication.aspx You need to write a Universal App though. 
Thank you for the suggestion. I've only briefly rooted around on their website, I imagine somewhere in the FAQ/Documentation the standard usage/example code to understand the basics of it?
You can use [System.IO.Ports](https://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.serialcommunication.aspx) Edit: Reddit does not like MSDN links: https://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.serialcommunication.aspx Also it might be that the exception being thrown is because of wrong Baud setting, could also be that if you get exception thrown at start of connection you have wrong port name
Makes sense to me, the teacher is probably preparing to have them implement their *own* array-backed stack and queue so the students know how those things (typically) work internally. There is actually a lot of research into the optimal growth rate for different types of "dynamically resized" array-backed data structures.
Yep listen to this man, Unity is very good and there are a ton of reasonable tutorials online.
I always hear good things about ReSharper. Am I the only person who's VS becomes insanely slow when I install this?
whoops, honestly didn't notice that. Yeah, /u/cryo List&lt;T&gt; is better in every way
I'm not saying OP shouldn't use a framework, just not Unity
Thank you! The explanation of 10e8 certainly helped. I've corrected that in code. I also ran some errants in the meantime and with a bit clearer mind after I got back home I noticed I may have misread L in the example. Equation 12 converts it to degrees (which I did use in my original post return value, but unfortunately completely forgot to mention). I was under the impression the example used this value. However, when leaving the conversion out and simply returning the radian *l*, the actual return value becomes 25.551938975843786. Much closer to the expected value. I'll rewrite to use decimal instead. BigRational is no option though. Since I'll be using Unity3D it won't fly. Way too newfangled for Unity's runtime... ;) Hopefully the extra decimal precision will move the value closer to the expected one.
Hah, radians and degrees. Always a good source for developers banging their heads against walls. When I started working on a new project, I said "enough of that" and [made my own custom types and conversions](http://stackoverflow.com/a/12232002/1269654). These classes (along with some other math-based types) have made my programming life so immensely better I can't believe I ever worked without them. Good luck with your work! I like Unity too, I just wish they were able to keep up with or be more compatible .NET in general. (Like in this case, can't use `BigRational`)
[This is why I like F# for math-y stuff](http://fsharpforfunandprofit.com/posts/units-of-measure/).
Yeah, there are other game engines out there (Paradox3D, WaveEngine) that use a much more up-to-date runtime. Unfortunately, their communities are so incredibly small compared to Unity's. The Unity community is fantastic if you ever run into problems. That said, I've got other problems to overcome related to the above as well. Turns out, Unity's *TimeZoneInfo* runtime implementation is broken too, for example. I rewrote the *EarthPeriodicTerms.CalculateTerm()* and the method above to return decimal values (though I kept *jme* a double). It's basically still the same return value with a very small difference compared to the double: With double: 25.551938975843786 With decimal: 25.5519389758437973811812877 Nowhere near enough to approach 24.01826 (in fact, it gets farther away). So I guess the question remains open for now. I really do appreciate the help though.
I had a realization and did a quick check, and umm, you're gonna love this. The code and values you have (other than `10e8`) is correct. That is, the output of "1464.01826169168" degrees is _actually correct_. When you convert the number to be the equivalent angle between 0 and 360 degrees you get... "24.01826169168" degrees. EDIT: Here's the code: http://rextester.com/WKP54437 EDITx2: I guess this comes from the linked PDF you posted, step 3.2.6 (emphasis added): &gt; **Limit L to the range from 0 to 360.** That can be accomplished by dividing L by 360 and recording the decimal fraction of the division as F . If L is positive, then the limited L = 360 * F . If L is negative, then the limited L = 360 - 360 * F . 
That's an excellent StackOverflow answer, by the way. Super useful. I gave you a vote!
Awesome! I'd upvote you a hundred times if I could. :) All unit tests now showing green. Thank you so much! edit: yes, you're right about the mention in the pdf. Clearly I need to put programming down for today and start again fresh tomorrow. Appreciate the gentle smack to the head. ;)
Thank you!
Some things I would add: * dnu=nuget, they're basically the same thing * having dnx451 in project.json will install the full .NET framework dnx runtime on Windows and Mono dnx runtime on OSX and Linux Edit: it wont install the full framework just the dnx runtime for the framework. Also "will install" refers to dnvm upgrade which VS will do automatically
That would probably be a good starter app. You could make a full on timeclock web app for practice using LINQ and Entity Framework 
Great. Will do.
"•CTRL+A works in multiline text boxes" Finally.
You might consider using MSSQL instead of Access. If you're going to have to learn something for a database solution, you'll certainly find much more use for that in the real world than you will for Access. Having used both in one guise or another over the years, I can safely say that if I ever see Access again, it will be too soon ;)
I hope they tested everything in release mode. Unlike the disaster earlier this year, lol.
Not sure, id have to know the answer to two questions. Are the cached dependencies only able to be used by the package that has them defined? Because an assembly in the GAC can be used by anything on the machine but the way it sounds here is that each project will have its own cache. And two. Will the cache have stuff like JavaScript dependencies?
Go mssql. The express version is free and it'll be enough for you
http://nickcraver.com/blog/2015/07/27/why-you-should-wait-on-dotnet-46/
Couldn't agree more with this. LINQ and EF will allow you to build a reliable and stable app. Web App or WPF would be a great start, MrBonk is also right, SQL will have a lot more use later on than Access could hope for. Good idea would be to make it all dynamically based off the DB so that you can easily bind your app to the DB Objects. Take a look at property grids to edit objects and using Insert Triggers to log the time. GitHub will have a lot of examples you can use as a start and DotNetPerls is another great reference for understanding C#
Woot! I have some code in this release.
Disaster? Hard to repro under edge conditions, multiple workarounds with granular application, fixed quickly without much fanfare. I get that finding a bug in the .Net framework is exciting, but this wasn't a disaster.
Implemented the System.Transactions APIs to support non-MSDTC promoter types. 
&gt; I imagine that vnext is a much easier term to optimize for search engines than 5, so I wouldn’t be surprised to see it staying around for some time. I wonder if the v in vNext stands for the roman numeral 5 rather than version? "vNext" is a common name for "the next version of a product", nothing ASP.NET- or 5-specific here.
If you like c# you should definitely check out .net. Whenever I look at jobs going these days, I never see a c# job posted without them wanting Web developer skills. You'll need to decide what sort of development area you want to move into, then a quick Google search should give you an idea of what languages would be best to try out.
answering call. Will edit this comment with link to textfile.
DELETE FROM table1 WHERE PrimaryKeyColumn NOT IN (SELECT ForeignKeyColumn FROM table2)
I believe you can also use NOT EXISTS if you need to handle null values (but considering theyre primary and foreign keys I have to assume there wont be no null values?)
The built in libraries for USB communication by MS are complete garbage, they don't follow specifications exactly and just overall bad for working with any device that doesn't follow "standards" 100%.
Thanks.
np
I'd pick web with ASP.NET MVC (JavaScript(jQuery, Angular), HTML, CSS, etc...) OR go with mobile apps with Xamarin in VS. MS is likely to buy them out soon and with your mobile background you might want to focus there and build android and ios apps. No idea about getting the freelance work though. Best of luck.
Thanks for that.
http://i.imgur.com/B5iZ1g4.jpg
LINQ, EF, NHibernate (which uses [relinq](https://github.com/re-motion/Relinq) to deal with some of the complexities of the ASTs) Expressions can also be used for optimizing some reflection patterns
StackOverflow is a wonderful resource. I use it regularly. Alternatively, you can also just post your questions here and you'll probably get decent help.
Are you looking for a data structure or to build a display?
While you're here, just a reminder to use bound parameters with `SQLCommand` rather than string concatenation, to avoid the potential for SQL injection attacks.
WPF? ASP.NET? WinForms? [This](https://visualstudiogallery.msdn.microsoft.com/25c51e8a-7707-439b-a98f-4c85fc911a97) perhaps. Search for scheduler controls in whatever technology you want.
Unless it's going to be editable, you could store the results in a flat file. Really no need to use a database if it's just going to be basically identical rows. However, if you do have access to a database such as sql, I'd use it. I would not use an access database if multiple copies of the program are going to be run at the same time though. The Access db tends to get corrupted that way. Or used to anyway.
This. There is a lot of money in converting access applications that cannot keep up with a businesses growth.
Oh geez. That was a very intimidating paragraph full of things that I don't know anything about haha. Guess I'll get there. Thanks.
If, like me, you're stuck with C#5, you can create something similar to the `nameof` operator: public static string NameOf&lt;TObject, TProperty&gt;(this TObject o, Expression&lt;Func&lt;TObject, TProperty&gt;&gt; selectorExpression) { var body = selectorExpression.Body; var memberExpression = body as MemberExpression; if (memberExpression != null) return memberExpression.Member.Name; var methodExpression = body as MethodCallExpression; if (methodExpression != null) return methodExpression.Method.Name; throw new ArgumentException("Not a valid selector", "selectorExpression"); } It isn't quite as versatile as `nameof` as is, but it's a good example of a real use. I also wrote a reflection wrapper, to account for `PropertyInfo` and `FieldInfo` not having a common base implementing `SetValue(object)` and `GetValue()`. It may even have been on a previous version of the framework, because I don't remember there being a one argument version of `PropertyInfo.SetValue`, only `SetValue(object index, object value)`.
Yeah I think that post (while a great bug find) caused a much greater hoopla than actually warranted. There's bugs in everything. Further, I don't think the natural conclusion from "this bug existed" is "they never test in release mode". Anyhow, thanks for the link. Seems like nothing to see here. :-)
Most likely for the scale you're talking about, you could probably just use the free [MSSQL Express Edition](http://www.microsoft.com/en-ca/server-cloud/products/sql-server-editions/sql-server-express.aspx).
A database makes things easier, but you could easily just use a flat file format. At worst, just make each time entry a different file in the time entry folder. Then when someone needs to edit their time entry, just read it. You could even make a folder for each person. That would use more space than a single file. Really depends on how many copies of the program is running at once. If you have it on everyones desktop, and multiple people can be in it at once, then I'd use either a database or individual time entry files. If only one copy is running, then you could use a single file. Editing it just means reading it and finding the appropriate entry. But a database does make it simpler. If you have one, I'd use it. But sometimes it's a pain if you're going to distribute the application, especially if the app is going to multiple sites. 
What this error means? I tested this regex online on some web apps and they said it is correct :/ Does C# interpretes regex differently?
What kind of files would you make? Just a CSV or something? And then to report it you'd just have a "for" loop totaling all the stuff? Or should I just wait til I've learned about working with files before even thinking about this stuff?
The same could be said about reflection. Why bind something at runtime? The fact is that you can build expression trees quite nicely with the 'static reflection' API, it provides a nice standardised API for this sort of thing, if you want to make a simple DSL, say to provide Excel style functional formula language, it's trivial to do so with Expression Trees underneath it. This is a much nicer construct to work with than say chained delegates. As an idea how bad the alternatives can be, I remember once hacking into VBA (I had reasons *honest*) using MemCopy API to emit machine code in x86 so I could have some dynamic code functionality. I feel dirty just thinking about that. But hey it worked and I got paid.
There are some differences with .NET-based regex and other regex engines. Here's a basic overview I found quickly; no guarantees of accuracy or completeness: http://www.rexegg.com/regex-csharp.html EDIT: Googling around I found [this post](https://social.msdn.microsoft.com/Forums/en-US/26e4848b-c5a3-4108-b09c-2c6e42cb8088/parsing?forum=regexp) suggesting to replace `(?` with `(?:`. Doing so allows the regex to compile and instantiate without errors, but I have no clue if it's still correct for your usage: Regex rgx = new Regex(@"(&lt;.*?&gt;)|(\\n)|(\.|,|\"" |\!|\?| -) | (\:(?: !\w))| (\; (?: !\w))| (http.*? (?:=&gt;|\\|&lt;|\\| ))");
Sure, a csv would work. But you could make it a fixed sized file, because the fields are all going to be fixed, I assume. You might even not have to read any records. Just make it a datetime-userid.in file (0 bytes) and datetime-userid-out file (also 0 bytes) for when they clock in and when they clock out. Then you could just do a directory read of the folder, and for each one, just load an array that you'd total up. After x number of days, you'd probably want to either move the files to an archive, or store the data into a history file. I'm assuming people wouldn't really be editing their time entries after a month or so.
Yup, bought my personal subscription to R# Ultimate yesterday. Had some snags with an old license getting in my way. But their support was helpful and quick to resolve my issue. I'm happy i switched, paying $89 for ultimate for 2 years is a good deal to me!
Thanks! Do you think it would be a good idea for me to learn the first thing about MSSQL? I feel like I won't be so lost if I learn something about it first. If so, suggestions on where to look...for info that won't be 99% over my head? Thanks again.
Sounds great. Any practical considerations?
As a side-note, I really wish there was a Community version of ReSharper - as a kid in upper school I didn't have access to educational licenses, so instead I kept using EAP versions, same would have happened if I'd known about it back in middle or lower school.
`Form.ActiveForm` is null unless **a form has focus**. It's hard to suggest anything without seeing your code.
Perpetual fallback is a scam. If you stop paying in twelve months, you have to downgrade to the version you have now.
I don't really see that as a problem. Most people will probably pay annually, which would give them a perpetual license for the latest version. I paid for my current and previous R# licenses in single payments, I don't see any reason to go monthly now.
Wow, first I saw your comment and thought, "Geez, this guy's a little twitchy." Then I looked at the website. They made it so you can't scroll quickly through the page... it throttles your scrolling to teeny, tiny increments. Ugh.
Thank you. 
If you are up for it, I would use this as a opportunity to learn SQL instead of Access. It is daunting at first, but if you will be much better off for learning that as it will apply to damn near every project you work on down the road. If you don't have a SQL server at work, and you actually plan on using this application with users and not just running on your machine, you could look into Azure SQL (a SQL database that is hosted on Microsofts servers), it is extremely cheap if you just need a small one that won't have much volume. Something like $5 a month. That will remove the overhead of needing a server and SQL licence since those are high initial investments for something you are trying with to learn. If you are just doing this on your own machine for practice, then yes you can install SQL Express which is totally free. If you are overwhelmed and need a little help, send me a PM and I would be happy to give you some assistance over e-mail.
Very cool and cleanly written. I like it allthough I currently have no purpose for it. I can learn a good amount of this. Thanks for sharing
You are definitely not too old. You are at an age where you know you need to get a career going and can eliminate the distractions and work with a laser focus on the objective. Have an honest discussion with yourself if you really want to pursue a career in software development. If your path is clear you can close the gap very quickly. The two shortest paths available to you are an associates degree from a community college or certificates from Microsoft. You can first work on the easiest C# certificate from Microsoft. Once you've completed one module you can put MCP (Microsoft Certified Professional) on your resume and get an entry level position. Once you have that entry level position you can continue working on your degree while earning job experience. It will be harder if you don't have the support of your family, but it is possible.
I hope 25 isn't too old, because I've been working at it since I was 50.
Thanks alot for the answers guys. I got a ceritificate in Computer &amp; Communication Technologies(university) . I guess, Microsoft C# Certificate is my next goal. My family supports me 100%. Anybody can judge on my code, would be really helpful!
I didn't know a thing about computers till I was about 25 (literally didn't know what a server was), I ended up doing some basic helpdesk support (after some training), turns out I loved it and explored from there. I probably didn't even look at programming till about 26/27, I'm now 29 and am about to move into my second job in .NET development. I'm not exactly a senior developer yet but with hard work and dedication I will hopefully be there one day. My advice would be to learn the fundamentals of C# and then I believe the best job prospect are in ASP.NET MVC (atleast in my area). Good luck!
this so much. Pretty much anyone, from a junior to a senior can code. granted a senior will be able to jump into API's easily and is more familiar. but what companies end up wanting is the tangibles. coding practises. familiararity with certain things like the SOLID principles. agile programming. if you know these things. the kind of C# questions that you get in interviews are all basic. Obviously if you dont know the semi-advanced c# things like collections, linq, reflection, interface patterns, unit of work etc then you may struggle. but they are all easy to pick up on
I took on my first programming position (an entry level position for a large organization) at 27, so there's still hope for you at 25 :)
Because..? I don't know anything about the projects, but you should probably back up statements like that.
I changed jobs from working in call centers to working in software development in my late 30s - doing C# at that - so no, I don't think that 25 is anywhere near "too old" to get started. Getting your first foot in the first door can be tough but I've also found that once you have that experience nobody really cares what you went to school for or anything other than can you actually write good code or not.
Use the [Path class](https://msdn.microsoft.com/en-us/library/System.IO.Path\(v=vs.110\).aspx) and the method [GetFullPath](https://msdn.microsoft.com/en-us/library/system.io.path.getfullpath\(v=vs.110\).aspx) if your program has knowledge of where it is relative to the executable.
Have to taken a Microsoft certification test lately? That are uselessly difficult to pass these days. I mean, certs don't hurt, but if he's going to spend a lot of time studying, he would be better off just building something, imo.
Is there a reason you're reinventing the wheel rather than using a calendar library or plugin?
Guys I wanna thank you for every single answer. I had a very bad day but somehow, im optimistic again. Of'course i wont reassure, I'm going to work even harder. Thanks alot :)
See my reply above. I used your help and did some other things which sorted it.
That's exactly what i was thinking. I did a research before and everybody wants a guy with at least 3 years experience. 
Sorry my bad. I forgot to ignore these things when i uploaded. 
[Link](https://github.com/shynio/Csharp/commit/e0a731a3d5c1f99ecca9bcfcb5474ab3865620c0) :P
I'd probably look at an inversion-of-control system first, such as StructureMap (I used to use), Ninject (which is what I use now), or the endless other IOC containers out there. Those get you the bulk of the plugin infrastructure. Once you get that, most plugins are a matter of coordinating (a manager class) and hooks (how to use it). That's a bit harder to generalize.
"Performance improvements" is pretty vague. It would be nice if .net had an [arewefastyet.com](http://arewefastyet.com/).
Hello, I've looked into some of the IoC containers and other plugin/manager type systems and found many of them really neat. However most of them are too large and complex/overkill for what I want, and for the purpose of learning I intend to write my project with the goals at making a system that is as extremely light weight as possible that provides me with a way to write useful code easy and fast to re-use for my own personal projects in a consistent manner. :) I kind of like the IoC container classes found here - https://github.com/JaCraig/Craig-s-Utility-Library/tree/master/Utilities 
The [Managed Extensibility Framework](https://msdn.microsoft.com/en-us/library/dd460648\(v=vs.110\).aspx) can be useful for creating a plugin-system based on interface contracts.
I use them in [**ExpressionToCode**](https://github.com/EamonNerbonne/ExpressionToCode) to allow almost arbitrary unit testing assertions with human-readable output, e.g.: PAssert.That(() =&gt; DateTime.Now.DayOfWeek == DayOfWeek.Friday); which currently tells me: DateTime.Now.DayOfWeek == DayOfWeek.Friday : failed │ │ │ DayOfWeek.Wednesday 2015-11-04 19:56:34 but it's also veeery useful for code-generation purposes (which I do rather a lot of). ---- I've also used expression trees in [**ValueUtils**](http://eamonnerbonne.github.io/ValueUtils/) to auto-generate efficient implementations of `Equals` and `GetHashCode` that avoid most nasty pitfalls in handrolled implementations, and also avoid all the boilerplate of resharper generated implementations (and it avoids a few nasty corner cases too). For example: sealed class MyValueObject : ValueObject&lt;MyValueObject&gt; { public int A, B, C; public string X,Y, Z; // ... } ...is enough to have value semantics (equals+gethashcode). --- In non-public code I've used em for dapper-like microorms, as an alternative to attributes to allow annotating properties for reflection (while avoiding the many limitations attributes have), and to generate efficient filtering and sorting code from user UI operations on in-memory data structures. TL;DR: I love my expression tree hammer, and everything is NAILS!
I realize this is for learning purposes, but to learn inheritance well, I'd advise considerable experience defining, using and implementing *interfaces* first. Interfaces are really the heart of inheritance, and contain all the good bits. "Normal" inheritance is really a bit of a hack combining interface inheritance (but only one) with a few other pretty unrelated concepts, and it's really easy to get used to making horrible spagetti with all that. If you can't do it with interfaces, you probably *shouldn't* do it with classes (in general, not just for beginners). If you need to reuse the code from some class in your new class, don't inherit, just use a plain old variable (or field...), and explicitly call what you need (and explicitly reimplement the interfaces you need).
The idea behind it is for me to a standard way of writing 'filler' classes used in my own personal projects, more so than loading the plugins. I want to avoid using large library's I do not control or understand fully in my projects, but I also do not want a scattered mess of classes/set ups thrown around between all my projects to do so. &amp;nbsp I am hoping to have a system which I can personally use to write any extra classes I need to use in my projects and have them contained to themselves and not some giant utility project. I guess I am thinking why not make them plugin-esk to help meet the goal of keeping them clean, organized, and contained.
For roll-your-own you want Reflection, a strict interface and some attributes to decorate your plugin with key meta-data. For off-the-shelf you want a DI framework like Unity or a plugin framework like MEF.
You might consider Ninject. It is pretty low overhead, small code base, fairly well tested, and doesn't include must in the core library but allows for a lot once you expand on plugins. It also can be loaded via NuGet which I consider a bonus.
I'll look into it more, thanks :). I'm not really sure why but I hate using 3rd party libraries in my code when I am not using a large portion of their functionality. It's like 1000 properties/values/methods/namespaces to use 60 of them. I really would like an ultra light weight solution to writing consistent and standard additions to my projects that only accomplish what I need them to and do not add un-needed extra complexity 
MEF is just another dependency injection framework. There are better ones.
The solution you described is something I've been doing in a current project. Each "usecase" (actually multiple of somewhat related cases) get their own repositories that have queries that answer their actual needs. In my view it's ok to give out just DTOs when they are really close to something that will get actually used. This does marry "UI" and "DL" closer together, but in the years I've been doing this galley the need for strict separation has never come forward. All the while drawbacks of always using full entities have been all over the place. edit: the repos do give out also entities, this always depends on what needs to be done.
Other than recommending to not reinvent the wheel, I'd suggest that you separate your code concerns into different layers. The piece of code you posted above seems to hold data access logic (e.g. getting the Data out of EWS via DataRows), business logic (figuring out week numbers, which days are affected, etc.) and presentation logic (this appointment will be displayed in this box). Split these concerns into different layers/classes. It will make your life a whole lot easier.
To be more helpful, do you have several real examples of things you want to turn into these plugins? Also - what's wrong with a giant utility project? I'm not saying it's a good idea for you, but there are lots of ways to organize code within a utilty project - are you sure it's a bad idea for you? You are unlikely to be able to humanly write enough code on your own to really be a *technical* problem for a single project. nuget doesn't necessarily mean using external code libraries. You can compile any of your own libraries into nuget packages, and you can host your own nuget repository in a plain directory.
So disregarding the layout of my code, the fundamentals seem to be there and it really is as messy as I'm doing it? Maybe it's time to work on an extension...
Not really, no. Just the barrage of blog posts and architects saying how this is wrong because it creates a leaky abstraction with IQueryable, it's wrong, it's bad for unit testing, and also that a DTO is a presentation-level thing, and only can be done in the service layer at the deepest, and never in the repository. Reading all of this leaves me confused.
Ok let's say it's not then. I make it another collection type. Is it a DTO? Or is it an entity?
Repository with Entity Framework = useless. Also I prefer to convert to DTO in the API layer. How do you know that the DTO for one service make sense for another?
Appreciate your response! There are a lot of very compelling arguments based upon the type of project that would make sense to use a repository vs. not use it - it's not always true to say having that layer of abstraction is always useless and should be abandoned in favor of direct dbContext access. But let's entertain that idea and say I don't use a repository (the argument is EF is already a repository and unit of work so no need to use it) ..So then let's say i'm in a controller, and I have a table that I need with 100 columns in it. This table has a relationship with many sub-entities. I don't need the full graph, so I do a projection. ..You would say that you'd do a projection to ____ in your controller directly from dbContext, then cast ____ to a DTO (directly in the controller)? So what are you projecting to if not a DTO? What is ______ ? An entity you create for the express purpose of the marriage of these two tables? So if this monster table is called "Order", but you only need an "OrderSummary", you'd make a new class called OrderSummary, and project Order into OrderSummary, and then create a DTO called OrderSummaryDTO, and cast/map OrderSummary to OrderSummaryDTO in your UI? Curious to hear your opinion! Thanks! Also I agree re: the dto for one service doesn't make sense for another.. Partly the reason why i'm asking this question. Thanks again.
I made [this](http://github.com/Banane9/SharpPlugins) a while ago when I needed a plugin thing :)
I've seen many people say CQRS is the solution to this - not sure where i'd even begin that, I saw CQRS Journey and other stuff but haven't been able to move from that to a working solution.
How about net use \\ServerName\Share 
This is just dos. Each drive has its own current directory. `cd H:\myFolder\` sets the current directory on the h: drive, but that doesn't have much visible effect unless you switch to the h: drive.
Hey thanks! That is actually almost exactly the kind of simplistic abstraction I was looking to do. This kind of stuff is what I enjoy right now. I don't want a 100 file lib added to do the task I want that takes 2 files.
There is literally no case where EF + a repository that exposes IQueryable makes sense. Now if your repository does not expose IQueryable or any other ORM related stuff I'd agree. You could change the implementation with say raw SQL or a REST service backend but with IQueryable you are married to your ORM and best case is you change EF with NHibernate (haha!) and even then you'd have easier time with a naked DataContext. I never ran into the 100 columns case so I have not taught a lot about it but I guess what you describe is what I would do. Eventually I may even create a view in the DB and map the entity to it. I might also create a class not mapped in the entity framework just to project into it. If the project is of significant complexity I usually go for a service layer so the controller only cares about view stuff (choosing the right format in web api, or feeding the appropriate view and checking if the request is an ajax request in MVC, etc.) and mapping the class (be it entity from entity framework or another business logic class) returned from the service to the DTO. I have not tried to return DTOs from the service layer in a real world project. I thought about it for one project rejected the idea and did the mapping in the web layer. Worked fine and didn't look back. Maybe it is not a bad idea I just don't know.
re: IQueryable yeah I would not expose it.. Seems like we're thinking along the same lines, but really appreciate your detailed feedback. Thanks i'll let you know how this works out! that CQRS reply below seems like where i'm headed. Any experience on your side working with that?
grinning ear to ear over all these links. Thanks so much, will let you know how I make out.
Did they use CQRS in the future projects?
It's not such an easy or practical thing to shoehorn the optimal way to do things onto an existing system. Especially when you don't have unlimited maintenance hours to re-architect the entire system. If you can deliver business value with it don't sweat those blog posts too much. Refactor the IQueryable leakage a little bit at a time when you can but especially if you are working alone don't sweat it too much. The worst enemy of working software is theoretically perfect software. 
Visual Studio is just the program you develop with. To help you with your problem your need to tell us the framework you are using to create the UI. 
I think I'll set up a quick system to add/or remove the core plugin files to my project via re sharper hotkey, and include a static factory class to create instances of my commonly used plugins easily as a core plugin file. :) &amp;nbsp; Then in any project I could simply load up a couple cs files with a single hotkey, and type out 15 letters and have plugin of any type ready all in one global spot with a standard and clear way of doing things. So all of a sudden instead of 8000 helper classes, I can load any of the stuff I will actually use on demand from one spot, and hardcode them / tune them in for releases if I want. 
Yup. The new pricing suits me also as I use multiple of their products, and renewing them all under the old system would cost much more than the single all-in annual pricing.
This solved some MAJOR stability and performance issues around GC for us. We deal with millions of small objects getting destroyed and 4.6.0 was/is a disaster for our Windows 10 end users!
Of course. MEF is a decent out-of-the-box DI framework for injecting from possibly unknown assemblies. There are better; I prefer Autofac. I figure for a newer developer MEF would have sufficient documentation and low overhead.
Yeah I love that Docker allows me to just deploy an entire environment. So slick. My experience with legacy systems is it's hard to get 100% automated/painless, but I can chip away at one or two things here and there and slowly the process becomes better and better. Every little bit counts.
It's not that it's bad, but if you're running a repository pattern, you're defining what calls you can make. If your system is setup to get TOP 10 &lt;whatever&gt;, then you should either design your system to *return* TOP 10 &lt;whatever&gt;, or you need to define the requirements of whatever is doing the querying.
I made a quick example to test your plugin system. Here it is for anyone curious. I like it a lot. http://pastebin.com/Y4G1x6G7 - BasicPluginExample.cs http://pastebin.com/LwZX5sMm - Updater.cs https://github.com/Banane9/SharpPlugins - The plugin system used.
So.. What does it do more?
Just like any other DI framework is capable of it.
It's specifically built for the doing the plugin model and using "unowned" code in your system.
You can't really stop abstracting poorly by just not abstracting in the first place... you're a beginner in every sense in any OOP language until you do ;)
So it's true that you'll never learn to abstract these things properly until you do so, but I think the YAGNI principle is relevant here. The way I'd approach this would be to write the functionality normally (and somewhat modularly - follow good OOP practices), then extract it. The issue with plugin systems is that it becomes really easy to start having leaky abstractions, because you don't really know what plugins you actually need or how they're supposed to interact.
To be clear, "yeah" as in "yeah, they support csproj files"? My team's transitioning to C# but when we last checked, omnisharp + csproj wasn't a thing.
Store the images in a resource that is accessible by both machines and read the image from there.
You could use [Visual Studio Code](https://code.visualstudio.com/) as it is a smaller version of VS (but doesn't have all the features).
This is like saying "Is it reasonable to drive to work in anything other than a Mercedes S-Class." The answer is "yes, but the only other option is a Ford KA or a bicycle." Similarly, the alternatives to VS out there are by no means unusable, but your life will be less pleasant because of this choice. There is a reason VS is so large. There are probably many features that you will never use, but the features you do use will make your life so much easier. Not just a little easier, but a huge amount easier.
Very good question. Maybe I just disliked the Express editions and used SharpDevelop because of that. The past is just so blurry. :)
For fun, I set up an environment using n++ and PowerShell. Was working on using msbuild in my scripts instead of csc but then I got real work to do and went back to VS.
You can develop in notepad if you'd like, but the big selling point of using .Net is Visual Studio.
That's why I'm trying go for this new structure with modules/by functionality. But you mean I should skip the View and ViewModel folder all togheter? Even if I structure it more by functionallity? A very simple example, I should skip this: Module\ Customer\ View\ AddCustomerView EditCustomerView ViewModel\ AddCustomerViewModel EditCustomerViewModel And instead just do: Module\ Customer\ AddCustomerView AddCustomerViewModel EditCustomerView EditCustomerViewModel
Sounds interesting, gonna look into it!
I use both VS and Xamerin/MonoDevelop, and I don't really miss VS much when I'm using the other two. I did maybe 2 years ago, but not now. 
I find Xamarin to be ok too. It does the job, and has improved immensely over the years.
The modules in my project are separate class libraries, mostly because my WPF app is a composite. On the View\ViewModel front, I do use View\ViewModel folders. I also used attributes to keep track of their relationships to each other. The ViewLocator will use those attributes to build a mapping table between the view models and the views.
+1 to this, XS has become a LOT better in the past year or two
Yep, ditch those folders.
That is one way of expressing it :D It is a very fancy editor though, i use it on and off for node development and other stuff where i don't want to wait for VS to start up.
This, if you have a project that needs to scale up (especially to enterprise levels) then the modularity of PRISM and it's patterns is great. I wouldn't use it on any project as the setup time can be prohibitive but once you're using it maintainability becomes a breeze.
I really liked the ViewModelLocator from PRISM so I'm using that right now together with Unity. But I also tried their modules, render and event aggregator. It felt pretty nice but: * I don't have any use for the render in this project. * I did't really like the event aggregator and instead use the MVVM light messenger to communicate between view models. * I didn't really like to have so many code libraries. Maybe it was just me, but it also felt a bit slow? I'm sure I have missed a lot of PRISM features but right now I feel I can do without most of it. 
Sorry, not a clue. Maybe because most newline characters on Windows is `\r\n`? But I imagine it's irrelevant for your use.
Fun?
That's not what he's saying. He's saying, that he does not know why anyone would work with any other IDE/editor when working with C#
I develop in VS but do minor changes and tweaks in Notepad++. I develop web stuff for the most part so it is easier to just open the code behind file in Notepad++ for small changes. Storage is cheap though so I would just beef up your storage. I keep my project files on a server with a massive HD and don't store anything on my client machine. 
Thanks!
First, it's Visual Studio for the majority of the download. If you only select what you need, it's much smaller but I don't know what you need... So not much I can say to cut down on the size. Second, it kind of depends on what you're doing as to whether or not it's needed. VS Code or Atom+Omnisharp work pretty well as long as you're dealing with the new vNext stuff. Less so for anything else. The Omnisharp project is currently working on debugging but that's the major hole in that project currently. That said, as time goes on, they keep adding to the project, so that might be solved before too long.
Creating the event log source should be part of your deployment process.
Yes, I know what the question was. I posted a response which tried to answer your question. I also said I wasn't sure it would help. No need to be rude about it. If you notice, I'm the only one who responded. But you might try searching on stackoverflow. There are a lot more programmers on that site.
If you want to log, that logging code is going to need to have an API. It's going to have the ability to consume text or objects and store those somewhere, probably in some text file. Perhaps your api contains an `interface ILog { void Log(LogSeverity severity, params object[] objects); }` That interface (or whatever you use) is not going to be present in your Timer plugin. Forcing various plugins to all implement the same API isn't going to help you. There's unlikely to be much value in extracting commonality between these two plugins. You can call them plugins, and that can help you *think* about the project structure, but there's no need to surface that concept in actual code. In actual code, isn't every object a plugin? It's something you can create (construct), you can trigger events on (call methods), and optionally dispose. There's no need to implement your own abstraction; the object suffices. You might even get away with a single delegate. As a rule of thumb, if your code needs even a single typecast (not a coversion like int-&gt;double, but e.g. IPlugin-&gt;ILoggerPlugin), you're shooting yourself in the foot. And this strongly looks like you're going to need to do that. Another smell is a void returning method (so you're great at state-transitions? Nope, you're human.), *especially* any void returning method without parameters. Leverage the programming environment you're in, don't fight it. C# does not have an affine type system; it cannot check for errors like "always call Init before Swizzle", so avoid implicit invariants like that. It has a type system that can guarantee that method calls are valid if you avoid nulls and casts... so try to avoid nulls and casts. It allows referencing prexisting bits of code either by name within a project, or by inter-project compile time reference... so try to use those techniques, and don't do dynamic assembly loading if you can avoid it. Keep It Simple. You don't need a plugin system, you need one (or a few) good utility libraries each with a programmer-friendly API that suited to its own particular purpose, and not a catch-all API that really does kind of nothing, and forces code to be massaged into fitting its restrictions.
Potentially, your API doesn't limit it.
Right. I can also write Event Logs into an existing Source, but with unpleasant results. There are ways to sidestep this specific problem, but that's not solving it. Let's say that the case is that I need some other, more-than-one-time operation that requires admin level and I don't have admin rights, or it's a web application that doesn't have direct human control? Then what? How to get to UAC prompt?
Have dealt with this problem for a few years (different teams). Student robotics teams want to use c# over java (see c++ as too high risk for newbie team) so Mac users get stuck with crap tooling or dual boot.
I have tried and it is a pain. Especially if you are doing .Net work. I tried for so long on a a Mac and ended up just bootcamping windows. 
Awesome! I'll PM you a code.
Hey Filip, I have you async course in my queue. Just wanted to thank you for all your time and dedication you have put forth to knowledge share.
That sounds great! What are the current topics you're reading about? I'll PM you a code!
1. C# has tons of logging frameworks already. Why write your own? 2. Why not create a `MyCompany.Timers` nuget package that you can include when you need them? 3. I agree, giant Utility projects are a terrible idea. Luckily, we have nuget packages and you can make a new nuget package for each "plugin" then when you're coding, just include the packages you actually need.
This would be really cool! I'm getting the hang of using C# at work but would be really interested in checking out some resources that could get me into the real nitty-gritty of the language. Thanks!
Cool! I'll PM you a code!
&gt;I stated that the code I posted is the one and same "answer" from all over the internet, Nope. Nowhere in either your top post or your responses to me have you said that. &gt; so you can assume I did a fair amount of searching before I decided to post a question on this subreddit, even if I haven't written that. I try not to assume what a poster knows or doesn't know. For all I knew, you might have had no idea that there was a web log. As for being rude, no, you were most definitely rude and I was merely trying to help. But regardless, mayhaps a /net use might work if nothing else.
Hej Filip! I have recently started my journey with C# for my work(in Stockholm). If you have any codes left, send me one please. Tack! 
I'd love to get one if you have one available. I'm just starting to play with ASP.NET (I do WinForms/WPF now). Thanks!
Do you still have codes left ? I would love one :) 
may i trouble you a little bit about Pluralsight ? Because i have heard about Pluralsight, but i am still on the edge of my seat of paying it :|, is it good enough for a year-or-2 C# student like me? I am learning WPF + XAML stuffs right now, so helps are needed. Also considering LearnVisualStudio.Net from Bob Tabor as well, he was a decent teacher from his series on Channel9. 
Would love to check it out! :-)
Love me some AutoMapper. Fantastic tool. Saved lots of work and confused the heck out of my coworkers that refused to ask how the magic worked.
Any codes left? I'd love to try it out! :)
If you still have any more codes, if love to try out the course!
But tell me, is that psych knowledge coming in useful at all?
I'm finishing up an ASP.NET course and would love a deeper understanding of C#. I would be very grateful if you have anymore codes. 
No. VS is the best productivity tool there is for C#. Very extensible. Very customizable. Use VS online if space is that big an issue. But as others have said, 128gb is too small for any serious machine. Visual Studio online has a free version... https://www.visualstudio.com/en-us/products/visual-studio-online-pricing-vs.aspx
I'm game. Thanks. 
If you are still a student, they have 90 day trial... http://support.pluralsight.com/knowledgebase/articles/32816-do-you-offer-student-discounts
Nope, the port name is correct as I have a function that scans and sets the port correctly. Will see if the System.IO.Ports works better then SerialPort.ReadLine();
Exception thrown: 'System.IndexOutOfRangeException' in Prog.exe ("Index was outside the bounds of the array.") Though that appears to be something unrelated, I commented out a lot of additional code and it no longer throws an exception, but once I step into the received data call, it never 'continues' even after hitting continue.
I just happen to be watching your Getting Started with Asynchronous Programming in .NET course right now. (Demo: Inside Async and Await). Way, WAY better than the Asynchronous C# 5.0 by Jon Skeet. No idea why they wasted 20 seconds just about ever other video on the title. The recording session seemed like it was thrown together without much forethought. Yours was more to the point, with good examples. Keep it up!
Yeah, learned that over the years but never was taught anything else 6 years ago, I've been relying on that information and piecework from the internet.
Thank you so much for these kind words, I really appreciate it! Thanks for watching the course! I worked hard on it, so very happy it's liked!
Cool, sent you a PM!
It's a great resource, lots of good courses that can help you along the way! I've sent a PM with a code!
Hej! That's cool! How are you enjoying it? Stockholm is a nice city! There's a really good C# community up there. Are you attending KodKaffe or other similar things? Sent you a code!
That sounds really great! I've sent you a code, enjoy and let me know what you think!
It certainly is a really good resource! I've got heaps of friends that are junior developers and they find it very useful. How about signing up for a 10 day trial and giving it a go?
Awesome! I've sent you a code, you're lucky, it was the last one :)
So very sorry, they just ran out. You can still sign up for the free trial though. And keep an eye out on my blog, I do get my hands on new codes every now and then that I raffle out :)
I am very sorry, I just ran out of codes! You can still sign up for the free trial and check out a few of the courses you really like! Good luck with ASP.NET! Are you looking at the newest features yet? It's super exciting!
thanks for the heads up. I will give it a go.
Yep. Pretty sure you are correct. csproj and friends are dead.
So this is funny, because it's the exact code I had before, and now I feel less insane that I was actually right; except for the fact that the last value in the array disappears after adding the new one. Even with this code. Resize and everything. What am I missing?? Other than my sanity
Yeah, your ICommand implementation belongs in it's own kind of core/utility namespace. IMHO, in general, namespaces are overused. And here having an Add/Edit/Delete namespace with two classes in each is to much. Why not just a Customer namespace?
Makes sense on a utility project/namespace. But what about sharing view models across projects? Anyone have an example of this organizing by feature project type that i can see? Like on github or similar.
You're comparing strings to chars. Change the single quotes to double quotes. Oh duh I didn't notice the line after Readline().
My suggestion whatever route you go - look into dapper! It works great with PG, and if you know SQL, is insanely easy to use compared to EF.
We are using it, but via plain ADO.NET given that we still use .NET 4 and VS 2012 on this project. Also when we started it the EF support wasn't that good, lacking VS integration and requiring some command line tooling. Apparently their EF 6 bindings are ok now, but require a more recent version. So far it has worked great for the load we have, as backend for a few WPF applications.
Unless you wanted to call the tolower method to reduce your cases, then maybe sting to char casting would be worth it but probably not. 
Thanks for letting me know!
It should work with debit cards as well, and it won't charge anything unless you want to extend after the 30 days. Let them down vote, whatever makes them happy :)
Works fine as a RDBMS. The admin UI tool PGAdmin kinda sucks compared to SQL servers Enterprise Manager. 
I currently have the student license for ReSharper. But I don't get a bunch of code optimization tips and I don't think it's because my code is good maybe it's just so bad that ReSharper doesn't realize what I'm trying to do
Post some of this bad code somewhere, get some human input on it.
I'm not sure what your budget is, but this series is an amazing watch. The first episode is free, and just an intro and the rest are $20 to download. The examples are all in Java, but the principles are easily extrapolated to C#. Edit: actually provide the link, d'uh https://cleancoders.com/category/clean-code
Hey there. I'm also wanting to get invested in some learning materials. I would love to try Pluralsight out. 
Writing to an existing event log isn't a problem. Creating or even checking for one under below-admin rights is. The endpoint would still be executed under IIS AppPool user, same as the main WebApp.
Optimization and code hygiene are mostly orthogonal and largely unrelated. Clean code may not be optimized, and highly optimized code is often actually a little gross. Does your version of Visual Studio offer Code Analysis tools? If it does, that can give you some idea of what parts of your solution may be too complex Code Complete, by Steve McConnell, would probably also be worth a read.
Thanks a lot :)
example: switch (Decision) { case "switch": SitchMethod(Grade); break; case "if": IfMethod(Grade); break; default: Console.WriteLine("Error encountered."); }
Thanks. I understand now why I should have used an "or". In my head I was wording it: If decision doesn't equal "if" or decision doesn't equal "switch". I forgot that if they choose one, the condition is met with an 'or' because it doesn't equal the other. Also, the reason I didn't use a switch, and this is probably my fault, but I feel like I don't understand the usefulness of the 'default' keyword. It seems like default always runs, but what if in a switch I want to execute a message when what the user enters doesn't meet any of the conditions? The problem I've found with default is that it seems to run no matter what even if other conditions are met. So let me make the above a switch real quick to explain ... Decision = GetDecision(); { switch (Decision) { case "if": IfMethod(Grade); break; case "switch": SwitchMethod(Grade); break; default: Console.WriteLine("Error encountered"); break; } }
Although for some reason this works just fine. Hahaha, yeah I guess I don't understand 'default'. Without really an example any more all I can say is that earlier on in this code I was struggling with my use of 'default' because it would be executed any time I entered the switch.
Default only runs if none of the other cases are met. It's literally the default case.
Not sure what actually classifies as a debit card, since I am from Germany, but I cannot find any way to choose a debit card on the trial page (or are mastercard, visa cards considered debit cards ?). My card doesn't have a security code for example. Thing is I actually don't really mind paying ~25€ for some good education, but there isn't really any payment option for me, so I am literally unable to give you guys money.
I can't link it specifically because I'm on mobile, but definitely check out the Rationally Unified Process. It outlines a lot of really good OO practices (UML, object diagrams, etc). Beyond that they touch on refactoring which plays a very important role in clean code. 
The method starts at [line 96](https://gist.github.com/redqueentopawnfour/db917882ab8f22dfa276) ** So it's not DELETING the entry because when I DO delete an entry at a given index with the *delEntry method at line 131 the value at the end of the array re-appears. Where is it going? Aaargh. ***MY DAD HELPED ME WE FIGURED IT OUT YESSSS
You can just do `Char.ToLower(userChoice);` instead.
I will do that if I have to, but it seems like a bit of a hack and I figured there might be a good explanation for why it is acting this way. What really confuses me is why the other binding types refresh at the right time but not the commands on the buttons.
Should I be resizing the array outside of the method, is that why it's chopping off the end value?
The use of switch in relative context to if-else, `default:` is equivalent to `else`. If no other condition matches the evaluation defined by the if-else or switch, it will result in the statement in the `else` or `default:` being run. if (condition == 1) if-statement; else if (condition == 2) else-if-statement; else else-statement; is the same as switch (condition) { case 1: if-statement; break; case 2: else-if-statement; break; default: else-statement; break; } https://msdn.microsoft.com/en-us/library/5011f09h.aspx
I'm gonna do sort of pseudo code because this holds for some languages but not others. decision = get_decision() switch decision { case 'if': if_method(grade) break case 'switch': switch_method(grade) # note the lack of break; here default: write('Error') break In this case, many languages would execute `if_method` when decision is `'if'`, would execute `switch_method` *and* `write` when decision is `'switch'` and would execute `write` only in any other circumstance. Something to be aware of. Edit: Oops replied to the wrong comment, meant to reply to /u/Servatose 
Any good reasons to use implict conversation besides for numeric/scientifc types? Like in a bussiness application.
http://facebooksdk.net/docs/web/getting-started/
Once your understanding of basic data structures is solidified, look into breakpoints and being able to step through a program. It will allow you to visualize the manipulation of data so you don't just see the beginning and end result. It makes you self sufficient in debugging your code line by line so you can really see what variables are being changed. Great for learning.
In general, there could be transformations between type that do not need to be numeric, it depends on your needs. In Scala it is very powerful in order to extend types in the way I explained. 
As an addendum, I like to use switch(Decision.toLower()) Just in case a user decided to use "Switch" instead of "switch".
I just watched your Pluralsight MSIL course today. It was very informative. Thank you also for mentioning your real-world example. It was illustrative of the "why" in addition to "how."
I've only watched the first 9 videos: like you say it is quite expensive. If you want a good insight to clean code though, there is no one better to teach you than Uncle Bob. I find the style in his videos to be really engaging and entertaining. From the ones I've seen, I'd recommend them to anyone who wants to better themselves as a developer. Maybe you could get your boss to get them for you? A lot of workplaces have a budget for self improvement.
i'll throw some low hanging fruit 1) looks like this is missing a solution file. definitely want to get this into the repository. We use the the ASP.NET team's solution structure and naming guidelines - https://github.com/aspnet/Home/wiki/Engineering-guidelines#solution-and-project-folder-structure-and-naming 2) Next step in learning is going to be adding unit tests. I'd use xUnit with shouldly for the assertions. Getting your library configured for unit tests will be a good learning experience 3) Once that's in place I'd add it to appVeyor. That will build your app and run your unit tests every commit. Another really good learning experience. 4) Once that's in place I'd look at running some things like FxCop or the static analyzers out of VS2015 for code quality. Might point you in the right direction for some quick wins there Probably not what you are looking for, but I think those four steps all lead you in the direction of clean code ultimately
Hi, Yeah - I threw it together kind of fast. However, I agree that is no excuse and it would be helpful for my next step to be documenting it all cleanly and neatly and learn to actually do unit test/standard non noob stuff :)
Missing the break statement is not allowed in C#
Hmm, one thing I might try is adding PropertyChanged as update mode for the binding :)
Ok I will try that
You may have been missing a break statement. If you leave it off you won't get an error but execution will fall through to the next case.
Vs community 16 has the tools I believe
Make an attempt. _Do_ use Google to try and do some self-learning. (_All_ professional developers search the internet for research/help/investigation. It is a vital skill.) If you still have _specific_ questions, then ask _those specific questions_. A vague post like this doesn't give anyone much to go on to help you with. Arrays, and working with arrays, are pretty basic concepts of programming and C#, so with what little you've posted, it's hard to give you any help short of "look at some online resources on how to work with arrays".
Absolutely. Check out that link I sent. VS offers an online browser IDE with cloud storage. If you are space conscious, this is fur you
No, of course, you're right; I just HAVE been for days!! The prompt was worded very strangely, and I've been all stuck up in my head over it for days, and no amount of googling helped, because I didn't understand what he was asking. But I've just been rescued by my sister's husband who works in software, he chatted with me on the phone and we collabedited so he could see my code and explain it, I feel like moses walking through the red sea right now I'm overjoyed that I *get it* and I'll actually sleep tonight. Haha. I also ironically just got a response from my professor asking for my code as well to help so I'm happy for all the support, there's no point in having a support system if I don't use it, and you're totally right my questions were super vague but I was desperate and needed fresh eyes/ears. I do appreciate your response though. I'm going to finish it up and then drink a beer and freaking relax. I might live dangerously and do both at the same time. 
Keep in mind that ASP.NET 5 was built from the ground up to run on the full .NET framework or the slimmed down CoreCLR. My best guess is common logging was tightly integrated with the full .NET framework, so it was a better choice to create something new and minimal. I'm just speculating though.
wow... the cheese is to a whole new level. 
Resharper has some optimisations i've always found look pretty gross, like inverting if and transforming everything to linq. Overall it still helps to ensure uniformity tho, which is also pretty important
I was having a lot of trouble with strings/chars, I wanted to see if the switch itself would even work, so I had switched from a,b,c... to 1,2,3... That way everything was an "int". I just didn't switch back, I guess. Thank you for catching that.
Glad to hear it's starting to click! Feel free to ask any questions that come up in the future.
Fortify
string html = "&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;; foreach (var item in collection) { html += "&lt;p&gt;" + item.ToString() + "&lt;/p&gt;"; } html += "&lt;/body&gt;&lt;/html&gt;"; something like that??! without much context on what you want it's kinda hard helping.
Make something useful. 
C# has such diverse uses. What to do next really depends on what you want to be doing eventually. Here are some suggestions: * If you want to whip up something useful really quickly, classic Windows desktop applications with Windows Forms are super easy to get into. Drag and drop a few buttons and labels, do something cool. * Mobile development is obviously very big right now. It's a bit more complicated but you can dive into Windows 10 development. You'll learn about XAML, the markup language, but also about valuable patterns like MVVM that help you write maintainable, clean code. * I'm not sure how beginner friendly ASP.NET is these days, but that's an other area to look at. Go with ASP.NET MVC, not WebForms. Can you tell us a bit more about your studying? Where do you want to end up going? Are you mostly following tutorials right now, or did you pick some books? Which ones? edit: check out the [Intro to Object Oriented Programming](http://www.codeproject.com/Articles/22769/Introduction-to-Object-Oriented-Programming-Concep) link in the sidebar. What a great resource.
Oh man how could I forget about games. Games are super easy to get started with. If you know enough to do some Euler you can make some games. Have a look at [Unity](https://unity3d.com/), the massively popular game engine you might have heard of. There are a ton of tutorials out there, but look for Unity 2D material initially. Unity lets you use C# to write the game logic (or anything else, really).
Write and design things you want.
I recommend looking at your hobbies and build apps around that. You're probably going to want to look at Windows Forms/WPF applications, this'll give you a good understanding of user input and validation. When I was starting to learn, I had a few online games I played and built apps around them. I built a boss timer to alert me of upcoming spawns I was interested in. Even if something exists, try to make it yourself, you'll learn how all of the pieces come together. 
thx!
what comes next in the book? It looks to me like the author just chose to make a 3x4, rather than the 3x3 that you might be expecting. Maybe they plan on using the extra for a total or grade, or something, since this example is pretty much a spreadsheet. That's my guess :)
Adding to the low memory issue: make sure that you can guarantee that everything succeeds fully or leaves everything in the original state even in the face of failures to allocate memory. In C#, most things may need to allocate memory - anything that adds to a collection without ensuring capacity, lambdas, foreach loops, even method invocations (due to JIT) may need to allocate memory. Recovering from that is extremely hard. That means your program must have a single point where a transaction is committed.
Yep. Programs like this tend to allocate everything at startup into static arrays/lists, and use old-style for..next loops to minimize dynamic memory allocation (and thus garbage collection time) at runtime. 
Since it seems you want to make games This course is $10 right now https://www.udemy.com/unitycourse/learn/ (I'm not affiliated) I purchased this earlier this year and can attest that it is very high quality and very much worth a lot more than $10. It is geared toward absolute unity beginners but takes you from 0 to games and does so assuming very little c# knowledge. The best part is you will learn a bit of coding/modeling/animation/physics... highly recommended :)
Ah, theres your first mistake. You posted here.
Yeah... that's not the full project at all. You only give us the sln files which simply describe the properties and filenames inside your project.
I'm really sorry this should be my full project: http://www.filedropper.com/windowsformsapplication1
Wow thanks you've finally got it to display for me! But do you know why it's just a red rectangle rather than the fractal?
how to progress your learning without being pointed in a direction by others.
Trust me dude. Education like that is worth it. Look further ahead. 
And Python. And Dart. And a lot of others.
I personally would not recommend courses. I feel like they are to limiting. I think the best way to learn is to just code. Think of a simple program that you would like to have, and make it. 
He just has it from F#.
That's irrelevant. The origin of the feature can be traced back to Simula. What is important is who gave it to the masses in a way that they can easily use it. In other news Steve Jobs didn't invent touch.
It was available for the masses in a way that was very easily usable in F#.
"the masses" and F# is a contradictory statement :)
An Action is essentially a method defined as an object. It is a delegate for an anonymous method. In an Action, the method must return void. EDIT: Actually read the comments, and the it compiles as if the ref is not there
And F# got it from C#'s CCR library. We can play this game of trumps for decades, but at the end of the day the VB/C# syntax won and the F# syntax lost.
Haven't actually tried running your code, so these are just guesses. However, you start up two tasks, and then don't make any sort of wait call, so your main should end. Could be wrong, but won't your whole program just terminate at that point? The other thing that jumps out at me is what are you doing with those while(true) loops in your Send() and Receive() functions? Won't you end up calling methods on client, after client has already had Close() called on it in Send()? And your UdpClient in Receive() seems to never have Close() called.
When you first get to the while loop, what do you think the value of number should be?
Could be a firewalling issue.
probably a bit more aesthetically pleasing would be to make this a do{...}while(); loop (just my five cents since I expect you want the code in the for loop to fire at least once
Good thinking. I was never one to think about doing do while loops. I was only shortly thought about them in school. Would it affect the performance quite a lot ?
Linq to Json is for doofing around with json strings without deserializing them into CLR objects. If your intent is to put them into objects, then you're deserializing, just use that approach. Create the model you need, and decorate it with [JsonProperty("jsonPropertyName")] then just deserialize into it var myObj = JsonConvert.Deserialize&lt;YourModel&gt;(yourString); The only catch is that you mostly need to have the model follow the same same object structure unless you wanna get into custom converters.
Definitely bone up on your JavaScript. Sounds like you're going to be doing a lot of it. I would check out ASP.NET MVC and WebApi. Microsoft has done a good job of building those technologies to make it easy for desktop developers to move to the web. As for c# code on your page, I haven't used it, but Bridge.net purports to compile c# to JavaScript. That might be an option. 
I'm calling out your usage of "usually better", when you can't make that statement without profiling your application with both usages.
Test case? Profiling result?
http://cpratt.co/async-not-faster/ It's definitely possible. I can imagine, sending that string to DB is done through small buffer. There can be huge overhead for that specific query if buffer is really small, but in exchange you can execute other queries in the "same time".
While most of the work you'll do in BizTalk doesn't require C#, it is used to build custom components that you can use in BizTalk (Pipelines Components, Functoids, Orchestration Components, etc.). You can look up examples in the BizTalk SDK installation directory. 
Just ExecuteScalar vs ExecuteScalarAsync. Nothing terribly interesting.
I wonder if I can tune that buffer. I know ahead of time when the string will be large.
I've too have been trying to find a programming buddy, so I'm in! If you want to, feel free to send me some way of contacting you! =)
Do some googling. Topics of interesting will be Console.ReadLine(), Console.WriteLine(), Math.Max(), Main().
For this assignment you'll need to know five things. * How you get started with c#, which you can read about [here.](https://msdn.microsoft.com/en-us/library/aa664628(v=vs.71\).aspx) * What variables are, which you can read about [here.](http://www.tutorialspoint.com/csharp/csharp_variables.htm) * How to get input from a user, which you can read about [here.](http://rbwhitaker.wikidot.com/c-sharp-user-input) * How to compare two variables, which you can read about [here.](http://www.tutorialspoint.com/csharp/csharp_operators.htm) * How to print out a string, which you can read about in [here.](https://msdn.microsoft.com/en-us/library/aa288463(v=vs.71\).aspx) One trick to help you with any further programming that you'll do, break everything into little pieces. Googling one little thing, like "c# user input" is a lot easier than googling specific problems. Also, Google is your friend. You can find a ton of tutorials on C# simply by googling for C# tutorials. This is most likely faster for you, and it will teach you a lot more. Good luck!
The code is as follows: Console.Writeline("Hey mate, enter a number? ") string a = console.readline() Console.Writeline("Hey mate, enter another number? ") string b = console.readline() sort(int(a), int(b)) 
Honestly you're asking these guys for their skills, might be useful to list yours as well. At least how long you've already been programming, right now there's no indication of your skill level at all. 
Ok. Well I'm a self-taught programmer (started with scripting languages when I was around 11. age 18 now), quickly moved on to Visual Basic, and from there C# which I still use primarily in development with some mixture of C++. I love DSP (mainly audio) and am currently creating a musicplayer (not planning to release, it's just fun to write and develop) which implements Material Design in WPF, and on the side I'm making my personal toolset for DSP applications which includes FFT, XAML spectrogram controls, melody/BPM recognition. I have also experimented quite a lot with the XNA framework where I've made some random games out of sudden creative bursts. Did a fluid simulation program, but planning to create a new one from scratch in C++ with physx. Then some SQL, Python, Javascript and a tad bit PHP. I'm currently in the last grade where I study electrical automation, but I plan to go study physics/software engineering afterwards. So if you need to know how the phase-shift works in a three-phase system - I'm your guy ;) Oh, I also love to play video games. 
I tried using the TryParse method initially, but I get this error: Error CS1501 - No overload for method 'TryParse' takes 1 argument 
Thanks, I will look into that more.. I'm a little hesitant as I have a stigma toward ASP.NET even though I absolutely love C#. Just seems like it's sticking out as a non-standard in the web world, but I should definitely look into it as I am very comfortable in a .NET environment in general. 
 int value; if (!int.TryParse(answer, out value)) { Console.WriteLine("Please Write a number!"); return; } //now do all the code you have checking the bounds TryParse takes two params, the string, and the field you want to set the parsed value to. TryParse also returns true or false. True if its a number, false if not.
Even as a learning experience on how not to be a webdev! There are a lot of ASP jobs around (at least in the UK) so it might be a useful skill to know.
Uh, are you ever assigning `buttonAText` to the Text element?
&gt; Just seems like it's sticking out as a non-standard in the web world Na... Your concerns are overblown. ASP.NET MVC is a solid, viable dev platform. It is also a highly sought after job skill. You'd do fine with it, especially if you are already doing well in C#. (Stay away from Webforms, that's deprecated). 
No problem, happy to help. &gt;the new client-side I think will be very straightforward in this version You might want to stick to the basics and just use javascript and jQuery. Maybe also use a simple templating library.
Can you post your whole code? Honestly, it seems like you're over complicating things, but maybe I'm missing the bigger picture. Why have so many methods? 
Have you read the FAQ?
So why are you creating classes for each button? AssignTextButtonA, AssignTextButtonB, etc. You can just use one class and assign all of them to the same class, because they're all buttons (I'm assuming). In assigntext, you're just assigning the variable buttonAtext to textToAssign. You're never actually setting the text of a button. I.e. someButton.text = textToAssign. You're just assigning it to another variable. I've never worked in unity so how do these buttons get created, is there a ui side to this or something too? 
Well was worth a try but didn't change the outcome : /
Same crap with SAP support. The "leading support member" posts "try reinstalling SAP" and the occasional link to an article behind a paywall that doesn't come close to answering the question. All of the rest of his answers link to websites that are now defunct, because surprise surprise, websites come and go quite often, especially the blogs he keeps linking to. People who answer questions with nothing but a link to another website deserve to be sent to a special level of hell.
If you are having issues with SAP, please being having to run sfc /scannow. If this post was helpful please upvote. Regards, enkafan
I handle bad user input by visiting their desk with a taser. The best user is a properly trained user! But if HR want's to get involved, the TryParse samples will do the trick, i suppose....
By button, are we talking a radio button list? Do you have a requirement document (or homework assignment) or whatever for this? Maybe if I can see the use case scenario of what you're trying to do, we could walk through the design for this. Don't take this the wrong way, but this has the feel of over complication to me, which is actually pretty common with newer coders. As you learn all this cool stuff, you want to incorporate it, but most of the time, simpler is better. Those concepts definitely have their uses, but remember, simple things fail in simple ways. If you make a program that could be rather simple overly complicated, it becomes a nightmare to maintain and update. And if you have the full code somewhere where I could just download the whole project, that would help. 
&gt; sfc /scannow I have yet to have this fix a single fucking thing for me.
Back in my day, we had to fudge our user agent to get the answer. Until Google bitchslapped them. I have a colleague to this day who swears by them :(
this code gets is to $29 "HyperPixelSpecial" but it should have been $10 for another day. bummer
Sure thing, bring the complication down some and make it simple, and then if you run into any issues, post back and I can help you out some more. 
Just tried you're suggestion. Same things seems to happen. stuck on: myVideoProcess.StandardOutput.Read(result, 0, 100); 
I remember fondly using the Google cached version to bypass their paywall.
I would be happy to PM you with a link of our software (in Beta) and it would be very helpful if you would be able to give us hints, tips and sketches on how to improve it!
From the article: &gt; "I truly believe that C# is far more advanced than other programming languages in this area" I find that quite disturbing. Scala has no support for monadic style. C# has some support but it is limited. F# has a lot more support for this and it came largely from OCaml. Haskell doubtless has support for this too. And I suspect OCaml borrowed it from elsewhere. Did you know that one of the first popular peer-to-peer clients, MLDonkey, was written in OCaml in this style 15 years ago? My big takeaway from this article is that Scala doesn't have this basic language feature for asynchronous programming. I am amazed. I had always assumed the existence of Akka meant that Scala was ahead in this context. 
you're wrong as always!
Well, how long is the message? That'd wait until 100 chars have been written to SO.
That's good to know. The message is a menu, so I think it would be about 100 characters but I'm not 100% sure. I'll check that first thing when I get in 
Instead of using synchronous methods like such, try adding an event hander to the [Process.OutputDataReceived](https://msdn.microsoft.com/en-us/library/system.diagnostics.process.outputdatareceived\(v=vs.110\).aspx) event and calling `Process.BeginOutputReadLine()` on your process after you start it. Any data coming from the process will be accessible through the [DataReceivedEventArgs](https://msdn.microsoft.com/en-us/library/system.diagnostics.datareceivedeventargs\(v=vs.110\).aspx) passed to the event handler.
Glad this exists, not that I'm going to find any exploits, but it will encourage release of newly found exploits if an attacker had initial malicious intents.
I think your are a dumb
You only say these things because you hide your identity, stupid. Obviously you should now give your real personal details or else we all will assume you are a child, a virgin, and/or obsessive masturbator.
&gt; So, at least you don't get called a ~~baby~~ dumb now. FTFY
Output: Normally I would use String Interpolation, but this is fine and your starting health is 2147483647 No way the value just got updated! No really look here it is now: 2147483629 [^source](http://ideone.com/KhINLX) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/3s7tm9/help_how_would_i_make_a_basic_c_class_using_these/cwux06e%20Include%20your%20reason%20for%20reporting%20here.) 
Thanks! I tought it was a string or a int. Sorry Im very new to programming and I did not realize that I had to imput a string than a int. 
I remember paying for that website and hating myself for it.
yeah sorry it was basically do my homework, I just got so frustrated with getting errors constantly all week and now it's due tonight lol. um i don't see that my staring health is 2147483629? ... thanks the tip kinda helps me understand what is going on to make a class. I am just getting confused on how I need 2 word them 
I think if I were facing the sfc guy in person, I'd give him eleven seconds to identify his supervisor before I beat the shit out of him. Upwards until I got to the idiot who designed the support response. Anyone else get violent tendencies or thoughts? 
Looks more cordial than SO. At least he got a reply in. On SO it would have been closed for not being relevant by some dbag, but not before someone replied, why are you doing that, you know you can just open emacs and press some insane combo and python will automatically write itself for you and then go get you a cheeseburger
*Many hours later I come back only to find OP stating they're 14 in another reply which is before I knew they were 14 and after I originally called them a mf'r and told them to f-off twice, since they were not truthful or sincere and coming across as a recruiter by using the word 'us' in replies, when the main post was about 'I' &gt; I know right, I'm only fourteen however Rather than straight delete this comment, I am modifying it with a more appropriate response to a child. As others have stated, you are talking to professionals here, so a recommended professional route you could take would be a collaborative approach to seek the help you are looking for. 1. Post C# project with VS solution file(s) to github (git init) or bitbucket if you think you want a private / secured source repository to share while you hand out perms 2. Once code files are in source control, make sure a third party can download and execute files (git clone usage) 3. Make a reddit post explaining who you are (can be anonymous but transparent, e.g. I am a fourteen your old developer and entrepenuer, been working with some peeps of mine on some kick ass project or two, but they have now gone away and I would like help and mentorship with bringing these to fruition. Anyone here willing to help me out? I have my project(s)/code in github/bitbucket and if you pm/dm me details of who you are we can work it out from there) 4. You get some kick ass replies to your post, unlike what has happened with this post. Good luck to you
Double, yum yum
Alright, maybe you're just taking a class on programming out of some kind of passing interest or it's required for your major but programming really isn't your focus with this. That's fine, sure, I get that. If you are, however, intending to go for a career in software development you need to be incredibly willing to explain what you don't understand and why to your peers/colleagues and teachers/seniors.
Haven't seen you disprove him. Only showing your recruiting schemes. We're serious developers here, not the desperate kind you want. 
They send Jon Skeet a hooker every Christmas. 
heres an example which starts the fsharp interpreter, sends it some input on the process stdin, and reads lines from it's stdout asynchronously. https://github.com/slofurno/fsharp-playground/blob/master/fplayground/Models/FsharpRequest.cs the important parts: ProcessStartInfo startInfo = new ProcessStartInfo(); startInfo.FileName = "fsharpi"; startInfo.Arguments = "--nologo"; startInfo.RedirectStandardInput = true; startInfo.RedirectStandardOutput = true; startInfo.UseShellExecute = false; var process = Process.Start(startInfo); var reader = process.StandardOutput; var writer = process.StandardInput; string output; string response=""; while((output = await reader.ReadLineAsync())!=null){ response+=output; response+="\r\n"; }
&gt;The only catch is that you mostly need to have the model follow the same same object structure unless you wanna get into custom converters. What do you mean by that? 
Inflation sucks.
DI and IoC concepts are probably the best thing to learn for writing maintainable, robust and reusable code. I know quite a few "experienced" developers who can write just about anything but spend a lot of their time fixing silly bugs in multiple pieces of code, fixing regressions and rewriting the same logic again and again, all because they refuse to learn those concepts. 
Because most dependency injection libraries are a bunch of over-engineered dingoes kidneys. You need to "inject a dependency"? Pass a parameter. There, that wasn't hard, was it?
&gt; You need to "inject a dependency"? Pass a parameter. Sure, that's exactly what Dependency Injection is. I don't know if you've misunderstood the concept, but you can do DI without using a library by doing exactly what you described. It's better to not just pass in the raw dependency, though, you want some way of pulling the right dependency at runtime, depending on your configuration. You'll end up with a method or something that takes a parameter, a string or an enum or something and spits out the dependency. Then you extend that to deal with multiple chains of dependencies. Before you know it, you've built your own DI library and all you've done is reinvent the wheel. The libraries out there are varied yes and some of them can add some overhead, but that's libraries for you and the same applies beyond just DI. There are good, fully-featured ones and there are light, nimble ones. What you want depends entirely on your needs. However, DI as a concept is crucial to writing good code. 
I agree with you about DI as a concept and with /u/johnfredcee that the simplest thing is just passing the dependencies in the constructor, nice and explicitly. This is simply good programming practice and enables testing. However, i wouldn't conflate that with using an IoC container. I've yet to run across a situation where using an IoC container wasn't actually harmful to the readability of the code. You lost me as soon as you went to "pulling the dependency at runtime based on configuration". For the majority of dependencies, that requirement simply doesn't exist and all you've done is add a layer of abstraction/indirection, moved that decision from code to configuration, and made your code much harder to read, understand, and reason about. Source: I overengineered a dozen or so apps back when I first learned about IoC containers at my old job and now (karma) I've spent the last year ripping IoC container usage out of up a large application where the original developer decided to use Unity (Microsoft's IoC container) almost everywhere.
That's my favorite. To google a question about a piece of shit code base I was lucky enough to inherit, see the exact question on SO in my google results, get excited, click link to see "Why are you doing it this way? Reengineer everything and do it my way," rage. Sons of bitches. 
&gt; You lost me as soon as you went to "pulling the dependency at runtime based on configuration". This is a much better way of doing, it though. Once you get your head around the fact that DI/IoC are just methods to enforce Separation of Concerns (SoC), then it becomes a bit clearer why you do this. When you're reading through your class and it calls a method interface, you shouldn't care how that method is implemented - it's not your concern because it's not that Class' concern. Sure if it's doing something stupid then you need to go debug it, but then why are you looking at the wrong class in that case? I can think of [one particularly great example](http://docs.asp.net/en/latest/fundamentals/startup.html) where this kind of methodology is used extensively. &gt; For the majority of dependencies, that requirement simply doesn't exist and all you've done is add a layer of abstraction/indirection, moved that decision from code to configuration, and made your code much harder to read, understand, and reason about. It's only harder to understand if you're treating the entire codebase as one monolithic block of code. It's not. It should be modular, it should be broken up into its relevant concerns and each concern should be heavily tested independently. Really, your application business code shouldn't have any dependencies outside of it. Everything should be done via interfaces and the dependencies added to the concrete implementations of those interfaces. All the DI framework does is cobble those modular pieces together so it makes complete sense for this to be defined in a single location. I don't mean to teach you to suck eggs, but I highly encourage you to look at the [onion architecture](https://www.develop.com/onionarchitecture), it's an excellent design pattern that makes extensive use of the above concepts and allows you to build some very beautiful code. It can be difficult to get your head around at first because it's the opposite of a monolithic chunk of code but once you can write applications this way, you'll find your code naturally gets much neater, clear and concise. 
&gt; Problem is, these ArrayLists "don't exist in the current context" because they are created in the main method/where the class begins. Move the declaration outside the main method and declare the ArrayLists as private class members. You can still fill the lists inside the main method like you did before.
Nice work but maybe it would have been better to contribute to Polly to add a way specify a separate TaskScheduler. [Related XKCD](https://xkcd.com/927/)
[Image](http://imgs.xkcd.com/comics/standards.png) **Title:** Standards **Title-text:** Fortunately, the charging one has been solved now that we've all standardized on mini-USB. Or is it micro-USB? Shit. [Comic Explanation](http://www.explainxkcd.com/wiki/index.php/927#Explanation) **Stats:** This comic has been referenced 2174 times, representing 2.4785% of referenced xkcds. --- ^[xkcd.com](http://www.xkcd.com) ^| ^[xkcd sub](http://www.reddit.com/r/xkcd/) ^| ^[Problems/Bugs?](http://www.reddit.com/r/xkcd_transcriber/) ^| ^[Statistics](http://xkcdref.info/statistics/) ^| ^[Stop Replying](http://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=ignore%20me&amp;message=ignore%20me) ^| ^[Delete](http://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=delete&amp;message=delete%20t1_cwvbwn7)
I'm confused, multi threading, async and dependency injection can all be very different. Dependency injection is simply decoupling your objects or creating loosely coupled classes. https://msdn.microsoft.com/en-us/library/vstudio/hh323705(v=vs.100).aspx If you're doing multithreaded processes, the true thing you need to understand and educate yourself on are race conditions. If at any moment in time two or more threads will be accessing, writing, or saving to the same variable or object, you have a possibility of a race condition - a race condition happens when a variable or object might be overwritten or read wrong because it was not properly locked. In C#, we can look for the keyword volatile and lock to help us in making our functions thread safe. 
These are areas that are addressed in detail in Jon Skeet's [C# in Depth](http://amzn.com/161729134X). Fantastic read.
Thank you! About Polly, I don't like the design decisions made there and there're many more things, not only TaskScheduler: locking mechanisms, its async policy, error handling outside of a circuit breaker.
Not everything needs it. Dependency injection != effective website. 
One does not require the other, but it certainly helps, especially when it comes to things like unit testing.
If your slash implies that these are the same, it should be noted that a singleton is NOT a static class and that neither of these will, nor have to, provide "global" access.
&gt; Not everyone unit tests either. I would argue that any untested code (or any code that *can't* be tested) isn't "effective".
I guess it depends on how good a coder you are. We have a QA group that tests functionality. 
The best solution is to create the Splash form on a separate thread before loading the main form and then do cross-thread invocation to communicate with the splash screen if needed. This will allow you to continue loading the data for the main form. You can load the main form as not visible to load any required data and then when the data is done you can kill the splash screen and switch the splash screen to be visible. I've done this in another project but it's not in a simple vanilla project for me to share. I can answer any questions that are needed.
That future is not guaranteed - without the support from people supporting existing apps, and with unsure support from people who could just as easily use a different stack to get the same features. Microsoft won't support a stack if it doesn't drive Visual Studio sales and existing ASP.NET users won't have much reason to upgrade.
ASP.NET users have a couple of very good reasons to upgrade: - It runs on multiple systems. There's no dependency on Windows and IIS anymore. This can reduce cost (licensing) and you can take advantage of existing Linux infrastructure. - It can be developed on multiple systems. This is very important when working with other web developers who are not familiar with ASP.NET and C#/VB.NET, but are very skilled in web design and in web development (CSS/HTML, JavaScript). Many talented people in this area use a Mac OS X or Linux system. - The framework is more modular. .NET is a **bloated** mess. .NET Core is designed much more modular, you can just integrate parts in your application you need. This comes right to the next point.. - You can ship the runtime with your application. There is no need to have .NET installed on the system anymore, which is installed for **all** programs. You can ship the runtime with **your** application, and it will **only** be used by your application. If there is a bug in the runtime, fix it yourself and ship an update. You need a new feature? Add it yourself. You don't run risk potentially breaking other applications by changing the runtime of your application.
Can someone explain what the difference/advantage to a normal try...catch is?
We ported an app in two days - probably would have been quicker if the docs were complete. The semantics for the MVC side are largely the same and they've taken prior knowledge and compatibility with MVC5 on board. App instantiation is all new - but a lot of pain points are now gone. It's going to take time to transition, and longer for libs to run on .Net core - but that's an optional step for your project. You can still just target the full .Net and not worry about Core.
I'd be really interested to see numbers, but I bet Microsoft loses money on Visual Studio. Even if you group in all MSDN subscriptions, I bet any profit they might make from developers are completely insignificant for an $86 billion/year company. Anyway, both your posts read like FUD. The upgrade path will require work, some people will think it is worth the benefit, others won't, but the upgrade path is pretty self-explanatory.
The question is whether it's VS doing this or R#. Try unloading R# temporarily and see if the behavior does what you want. 
Build your skills in the mean time. There are a lot of great books on Amazon that will help you learn anything you want. It's something you have to be very proactive about. Feeling like you should know more isn't really a productive way to think. Go pick up some books or an online subscription and start learning and the rest will take care of itself! Good luck :)
You don't have the closing curly brace } to your start method. void Start() { public GameObject monsterPrefab; public GameObject monster; } // &lt;-------- this curly brace is missing. **ninja edit** Use pastebin.com to post your code instead of an image. It makes it easier for people to copy and paste it to show you what you did wrong. 
Hmmm I'm running R# and vs 2015 and it is cool with this. Wrote a whole mess of one line xunit tests with no problem 
Yea... Locals don't have access modifiers.
If you only ever have one player, you can create a singleton and use it as an actor. Some people will regurgitate "Singletons are bad practice" because most of the time, when you see them, they're done wrong -- but without actually looking at the scenario. It's perfectly fine if you use it in the right context. And especially in this type of project. Just write it down somewhere that if you find yourself doing it again in the future, to consider not using a singleton.
I understand SoC and DI. Where I disagree is in needing a 3rd party framework to handle wiring up the dependencies for the entire system and moving errors from compile-time to run-time. If you don't need to be able to change a dependency via configuration, then building that capability into the system is an unnecessary cost and complexity. I am a fan of the concept of onion architecture (hexagonal/ports&amp;adapters is more the latest in this line of thought) so don't get me wrong. I just know I can get the benefit of DI using simple manual injection where I need it and I don't have to incur the costs that comes with using an IoC container. Keeping it manual also makes it painful/obvious once you start hitting some of the common anti-patterns that most IoC containers tout as their benefit (injecting 20 dependencies into a single class). I don't /want/ that to be easy because it's pointing to a bigger problem and sweeping it under the IoC container rug is not the way to address it. Thanks for the link though. I see they also cover "let's split every layer into its own project" pattern (one of my personal pet peeves) along with the "let's create an interface even though we'll only have one implementation" pattern. Feels very architecture-astronaut-y to me, tbh. :)
It's your own fault if you're running on Linux.
Hey, you have a few things going on... 1) This code should be above your Start method... public GameObject monsterPrefab; private GameObject monster; 2) You needing a closing brace '}' after your opening brace '{' in the start method. This closing brace should be before your... private bool canPlaceMonster() ...method, however. Also, /r/Unity3D can be helpful for unity-centric questions. Finally, after more closely reading through the other comments, it looks like /u/monkeys_suck posted the same thing (with a code example).
1. Ignorance 2. Doubt 3. Shame 4. Panic 5. Abandonment
I recently started making a clone of Dwarf Fortress in CSharp just as an educational thing. [In this screenshot,](http://i.imgur.com/wJwaPyn.png) you can see some dudes standing in a field surrounded by trees (which you can only just see the trunks off). [Here they are](http://i.imgur.com/gZrJEZP.png) mining into the side of a hill. Roguelikes can be as simple or as complicated as you want them to be. A non-procedurally generated world is a great place to start, and you wouldn't be the first to store your map data as plain ASCII in a text file. Eventually you can easily refactor that process to read byte data instead if you need to store more information. In my project, my map tiles used two bytes. One indicated the type of tile (grass, dirt, rock, etc), and the other was used for flags to identify all kinds of stuff *(like whether the tile had been discovered by the player yet for example, which altered how it was shown to the player, or whether the tile was lit by light or shadow).* I'd be glad to help you solve whatever problems you may run into as best I can. Shoot me a PM if you have any questions!
Could you provide an example or pseudo code please? It's quite interesting for me too :)
There are two main purposes: 1. Isolate communication with third-party services, so that your application won't be affected by their fails. 2. React to third-party services' fails. It could be a pause, throttling, fail-over, default behavior. Update: Added to README.md
How you wire up your dependencies is really up to you, I mean that's kind of the beauty of programming, there's a million ways to do something and only like 950,000 of them are wrong :P Seriously though, using a container or not is largely irrelevant and I think we can both agree that the IoC/DI Concepts are good, solid practices however you implement them. My *personal* opinion on configuration is just that, a personal one. I like things to be consistent throughout my code so I would (again, personally) extend that to configuring all dependencies in one single place rather than having some configured and some statically defined (in which case I would argue that you've probably not *really* separated dependencies but this is a judgement I cannot make without looking at your code). &gt; Keeping it manual also makes it painful/obvious once you start hitting some of the common anti-patterns that most IoC containers tout as their benefit (injecting 20 dependencies into a single class). I don't disagree with this, that is definitely a code smell and indicates that you need additional abstraction in your code. &gt; Thanks for the link though. I see they also cover "let's split every layer into its own project" pattern (one of my personal pet peeves) along with the "let's create an interface even though we'll only have one implementation" pattern. Again, I think project structure is very much a personal preference. I like splitting out the layers because it enforces the architecture, having it all in one library means someone can easily add a dependency across a layer that doesn't belong. If you can be disciplined enough to do not do that and prefer a simpler project structure then more power to you, the issue is when the team expands and you end up with team members that are perhaps not so careful . Regarding having a single implementation for an interface, don't forget that when testing your code, you can mock an interface as well so it makes sense to have interfaces for a single implementation, that implementation will be mocked when testing the classes that use it. Basically, I'm saying if you Unit test your code well and have good coverage, you'll end up with more than one implementation of every interface, even if they're just mocked interfaces. Again though, a lot of this is personal preference, ultimately I feel we both share the same end goals.
Did you actually copy-paste the code? When you are learning, this is a no-go. You should type out the code to increase the learning effect. Yes, typing out the code is tedious, but your brain has to work with the code and thus you can actually learn it. When you copy-paste, your brain focuses on copying and pasting, but not on the code itself, so it will not learn anything.
You can use something like AvalonEdit, which can be provided a simple suggestions list (or even something more complicated which uses syntactic information from the code being written).
/r/roguelikedev
You should really look at using int.TryParse() instead of int.Parse(), if you're allowed. If txtPosition.Text is empty, Parse() will throw an exception, which means your existing checks for that won't ever be hit. As a standard practice thing, if you're checking strings for equality, you should really use the Equals() method. == works most of the time with strings, which can make those times when it doesn't extra confusing. Might also be worth looking at the StringComparer class. Likewise, you should probably prefer referencing string.Empty over "". If you don't actually need to make the distinction, you should also consider using String.IsNullOrEmpty() over direct comparisons with string.Empty or null. What lines are you expecting to throw exceptions that aren't? Are you passing negative numbers to Insert() or something?
I haven't went through the documentation thoroughly yet but the following section talks about referencing custom types [Built-in types and custom types](https://github.com/davideicardi/DynamicExpresso#built-in-types-and-custom-types) You can reference any other custom .NET type by using Interpreter.Reference method: var target = new Interpreter().Reference(typeof(Uri)); Assert.AreEqual(typeof(Uri), target.Eval("typeof(Uri)")); Assert.AreEqual(Uri.UriSchemeHttp, target.Eval("Uri.UriSchemeHttp")); Following are the limitation with respect to the C# syntax that we can use Not every C# syntaxes are supported. Here some examples of NOT supported features: * Multiline expressions * for/foreach/while/do operators * Array/list/dictionary initialization * Explicit generic invocation (like method&lt;type&gt;(arg)) * Lambda/delegate declaration (delegate and lamda are only supported as variables or parameters or as a return type of the expression)
I'm leaving the text boxes empty and expecting the message box with the corresponding error to come up, but it throw me back to the source code instead. Also with the int.Parse() part, I'm not entirely sure it's necessary but I'm not sure how else I would get it to work. int.TryParse brings up a compiler error.
You can set some breakpoints to get a better idea of where things are blowing up, then, but you could also hit Ctrl-Alt-E (or Debug-&gt;Exceptions) and check all the boxes to get the debugger to break when an exception is thrown. I'd say it's probably blowing up on Parse(), though. TryParse() has a different signature than Parse(), and expects an int to be passed as an output variable. Basically, it would replace code like int index = int.Parse(txtPosition.Text.ToString()); if (txtPosition.Text != "") { with int index; if (int.TryParse(txtPosition.Text, out index)) { If TryParse() returns true, it was able to successfully parse something out of the string and has stored it in index. If it returns false, the string wasn't parseable, and you can handle the error without having to catch an exception.
I did read your full response, I don't know why you're considering that I didn't. All I can suggest is you don't put "Unit Tests" under "Testing", my view is that the job isn't done until the code is documented and covered by tests. Testing is for the QA department. And yes, I'm aware that the choice isn't always up to you. We're risking delving into careers advice at this point :)
Just to let you know I tried reducing the 100 to 3 (which would definitely have been filled by the message) and I'm running into the same problem. Let me know if you have any other ideas - I'm going to attempt the asynchronous method suggested below
How would I check this? if I run the program manually it outputs just fine. Also, interestingly, if I cause the program to end, the output gets sent to the read command. 
Please write in English.
Also, for those who prefer to read rather than watch videos, I've been working on a blog series as well: https://joshvarty.wordpress.com/learn-roslyn-now/
Adjust the exercise array with names so that you can enter a letter and then the program displays all the names that begin with the specified letter. (case independently
Adjust the exercise array with names so that you can enter a letter and then the program displays all the names that begin with the specified letter. (case independently
As well as English you should probably not ask us to do your homework for you.
i don't now how to start with it thats my problem
You're probably using `int`s, which only store whole numbers (hence the name integer). You want to use a floating point type like `double` or `decimal` to store fractions.
Ask your instructor. Your tuition goes towards paying your instructor to answer your questions.
Videos on parsing json and general design videos on windows phone also appreciated. Feel free to link me to some where if I missed a link :)
Don't you have to end up watching the videos anyway?
&gt; http://www.newtonsoft.com/json/help/html/Samples.htm So is Serialising what I am looking to do in terms of the sample on the second pages? Thats more than enough to get me on the right track. Thank you ! 
Looks neat. I love metaprogramming. 
For the first article, it helps. But all of the other articles I've posted are completely independent from the videos.
Ah, that might be what happened when I tried it, too.
I'll have a future video on some interesting metaprogramming experiments going on in the Roslyn repo. :)
Yes. Serialization is what converts the JSON data to a C# object. So, once you make an API call to get the data, you'll get a response in JSON (string in C#), which can then be serialized into a class that you define. Any fields that you don't want from the API response do not need a field in your class (the beauty of Newtonsoft).
I have a data access library (think Dapper on steroids) that uses reflection. Runtime code gen would make it significantly faster.
You don't even need to use Newtonsoft.JSON if all you want to do is deserialize to parse. reference: using System.Web.Script.Serialization; code: public Dictionary&lt;t,t&gt; deserializeJson(string JsonObject) { JavaScriptSerializer serializer = new JavaScriptSerializer(); return serializer.Deserialize&lt;Dictionary&lt;t, t&gt;&gt;(JsonObject); } 
[Auto-Implemented Properties](https://msdn.microsoft.com/en-us/library/bb384054.aspx) in C#6
Was hoping this would say how he actually got it to work.
C# 6's syntax features are all sugar and should work on any .NET 3.0-compatible runtime.
I might be missing something with what you're doing, but I believe Dapper and PetaPOCO dynamically generate methods to hydrate returned objects.
What is that evaluation extension you have on the right side within visual studio?
Yes, but I can't just swipe their code for this part.
Wish I could vote this higher. We use these today. Build up code in text, emit it and execute. Problem solved. Would probably take 4x the amount of code to generate via Roslyn unless it can be done from a template.
Yeah, that's why I added the edit to specify that in the case of arrays it will emit a normal for loop.
anyone read those? comments? thanks
Use the modulo operator. `x % y` Otherwise, what do you mean by "doesn't work"?
Weird. Just did a test and they actually seem to both be working properly. I guess it's just a problem with the rest of the code. Thanks for that though! Edit: What I meant by "doesn't work" is that the object I'm trying to rotate wasn't rotating properly, just kinda jittering.
Thanks! Could you please leave a review after watching my course? I'd really appreciate your support. :)
That's going to be handy. All I'll have to do then is tell newtonsoft the property attributes 
&gt;&gt;Foreach will work on any object that implements the IEnumerable&lt;T&gt; interface `foreach` actually uses duck typing - it just requires a `GetEnumerator()` method that returns an object with `Current` and `MoveNext()`. Early C# did not have generics, so this was the only way it could work and be correctly typed. 
Ok don't worry, I'll ask you if try it and find any problem :)
So not exactly free. He's being honorable and asking you to pay what you think it's worth. If you think it's worth nothing, then don't download it.
Well it worked, but I ended up with like 16,160 lines of code...
Fun fact: Access performance on multi-dimensional arrays is significantly worse than using jagged arrays, i.e. a 1D array of arrays. There's no fundamental reason why this should be, but it seems multi-D access invokes methods, whereas doing array[x][y] accesses using pointer arithmetic, as might be expected. Not really an issue for small data sets, but if you're doing large scale number crunching then it might start to matter. E.g. a few years back I was doing SVD matrix decomposition of the Netflix prize data, and using jagged arrays was one of the ways I used to boost performance (by quite a significant amount). Access order matters as well of course, in order to improve CPU cache hit rate.
This is not quite correct. **Deserialization** is converting the JSON string into a C# object. Serialization is going the other way: converting a C# object into a JSON string.
[This](http://stackoverflow.com/questions/8738031/deserializing-json-using-json-net-with-dynamic-data) might help.
I think the reason you've been down voted is because this question has been asked and answered a thousand times. Hell, people post beginner resources without a question quite frequently too. Definitely take a look at the top posts and try googling "beginner site:www.reddit.com/r/csharp" 
I just selected what I need, cut, select all, delete.
Look up the difference between Write() and WriteLine() or assemble the line first and move WriteLine() to after the inner loop. You also need to insert the proper number of spaces between the numbers (start by figuring out how many digits are in the current number).
Use the inner loop to format each row, write it when that completes. like.. pad each answer with spaces, so that each inner loop generates a string of a certain length. so that you get your columns.
If you just need to have 1 columns per number, you simply have to print a tab character (\t) after each number, and end every 'i' loop by a new line (*Console.WriteLine()*). Of course, if your number got bigger than 144 (12x12), you'd probably need to use more tabs, but let's go simple and use a single one for the sake of the exercice. And by the way, in C#, you don't need to declare your variables (here, *m*) at the top of your method. It's also not needed to declare a variable to print a simple multiplication. You should get something like: for (int i = 1; i &lt;= 12; i++) { for (int t = 1; t &lt;= 12; t++) { Console.Write(i * t + "\t"); } Console.WriteLine(); } Console.ReadLine(); Notes: - Why using "\t" (string) instead of '\t' (character)? If you add a char type to an integer (here, i \* t), it will be considered as a number too, and you'll get unexpected results. - Console.ReadLine() allows you to cleanly close your program by pressing Enter. It's obviously optional.
Woah, not bad! Had a good laugh :)
How did you download it? I can't find a way without buying it.
Oh yeah, I had this problem too, it's due to the console's width limitation sadly. You could do a little change by counting the number of characters in your result, and adding a inversely proportionate number of spaces. It sounds complicated, but in reality it just needs some new stuff: for (int i = 1; i &lt;= 12; i++) { for (int t = 1; t &lt;= 12; t++) { int result = i * t; Console.Write(result); int spacesCount = 4 - result.ToString().Length; while (spacesCount &gt; 0) { Console.Write(' '); spacesCount--; } } Console.WriteLine(); } Console.ReadLine(); Notes: - *&lt;any object&gt;.ToString()* returns the string representation of an object. - *&lt;any string&gt;.Length* returns the number of characters in a string. - We chose 4 to have at least one space (when the number is 3 digits long for example), feel free to use whatever you want that is superior or equal to 4 (else your numbers will end up together). - We then count how many spaces we need by subtracting the result's length to this number. - And we simply print one space and then decrease the remaining number by 1 (*spacesCount--*) until the remaining number is 0! **edit**: you can place *int spacesCount = blablabla ... spacesCount--;* before *Console.Write(result)* for an even cleaner display! for (int i = 1; i &lt;= 12; i++) { for (int t = 1; t &lt;= 12; t++) { int result = i * t; int spacesCount = 4 - result.ToString().Length; while (spacesCount &gt; 0) { Console.Write(' '); spacesCount--; } Console.Write(result); } Console.WriteLine(); } Console.ReadLine();
I hadn't heard of that, actually. I got off work right after posting. But, I'll read up on it tonight and test it in the mornikg. Thanks
Ah, that's cool. That's also a good idea, with the properties. This actually sounds like the one I'll end up going with, if it pans out. Thanks for the info!
I guess you can have your project run on traditional ASP.NET or the new ASP.NET with .NET Core. Technically, the latter also decouples your project from having hard dependencies on Windows. The cons would be access to a smaller library. That's my guess.
At this time there doesn't appear to be a ".NET Core" target, no. .NET Core expresses itself in UWP and in ASP.NET Core - the two types of supported UI technologies.
That is correct - MVC 6 can run on ASP.NET (full .NET) or on ASP.NET 5 (.NET Core). They really haven't chosen naming conventions that lead to any clarity have they?
Login to Leanpub, select a book and turn down the price slider to 0$, add to cart.
My bad buddy, looks fine on my nexus. Can you share a screenshot if you have a sec?
I see it's object but what is it really
It should be a float, because it's never written to as anything but a float. But I don't know how to check in the debugger.
Okay it's returning as a `System.Int32` but shouldn't this be able to be cast to a float?
`Parameters = new object[4]{8f, false, PowerType.JetPack, 0};`
Is this an explicit cast? Does that mean it is an implicit convert? What is the relationship between these two?
Because it's referring to Parameters as an object array, it's trying to unbox a float, but that's not a boxed float, it's an integer. See [here](https://social.msdn.microsoft.com/Forums/en-US/4b48ac71-2094-42ac-88de-60004048cb11/object-to-float-casting-problem). You can either cast it to an int (which will unbox it) and then cast it to a float, e.g. (float)(int)Parameters[3] or you can do this: Convert.ToSingle(Parameters[3]) 
http://imgur.com/g9N98nK
It looks the same on my LGG3 using Opera, by the way. 
C# can be used to make Web site, Windows Phone apps, Desktop apps and with the Mono Project or Xarmin Studio you can also write for Android and iPhone and Linux. C# is used on the back-end of web apps, where as JavaScript runs in the browser. For example my site, Blissgig.com uses c# to query a database and retrieve an article. (Very simple site) So you would use both c# and js.
Yep that looks like shit. Thanks. I'll dig into it this weekend. Appreciate the heads up.
PostSharp doesn't apply to Unity's implementation of Mono as far as I'm aware. I admit that I'm just looking at a clean way of propagating data entries into a XML database. I can't think of a better pattern. 
MS has recently moved .Net into open source and has been making efforts to engage areas other than Windows. I've been using MS tools for 20+ years, as they have market dominance, but there are other options and platforms so there is no single correct tool or answer. 
you may be able to fix this by changing 0 to 0.0f (which should make your above code work)
Have you considered running your code through a profiler? If your code is open, I've got red gate ants at work I could run on your code and get a detailed breakdown of what is holding you back. For what it's worth, I would recommend rendering to a "off screen buffer" even if you fix this - it'll remove flickering. 
You can cast an int into a float anytime. However, as some people said above, by casting a value type (like int) into object, you're boxing. For you to unbox it, you have to cast it back to it's original type. Them you will be able to do whatever you want with it. Question: Is there any particular reason for casting it into object in the first place? It looks like it isn't making your life any easier
Why aren't you using graphics card? This is exactly the application where graphics cards shine.
Also, foreach calls the enumerator's Dispose if it's IDisposable.
Visual C# is modern, high-level, multi-paradigm, **general-purpose programming language** for building apps using Visual Studio and the .NET Framework. C# is designed to be simple, powerful, type-safe, and object-oriented. The many innovations in C# enable rapid application development while retaining the expressiveness and elegance of C-style languages. - From the msdn link under resources in the sidebar. So you can build anything with it :) From simple console app to games with outstanding graphics, anything is possible.
VS is easily the best thing that came out of Microsoft
Can't you just do numbers.ForEach(Console.Write); Since the foreach takes a delegate and the current element passed to Console.Write
I would strongly suggest you replace that with a class or struct if you can. It would make it far clearer what your code is doing when interacting with the data.
Start by cleaning up the code. It's a **mess**. The first thing you can do is split up the code in methods. Then you can start using a profiler and figure out the **hot paths** in your application, which code is executed most. Then you can also see if it's really this code that is slow, or whether there is other troublesome code. Once you cleaned up this code it is much easier to see through it and clean up little chunks of code.
The language is just called C#. The "Visual C#" thing is some horrible Microsoft marketing.
Right, forgot they are cached when using a lambda
It looks good now, thanks. I'll take a read.
1. You might get some speedup if you refactor the code into static methods. There's definitely a lot of locals, some of which are assigned and used once which can replace the get-call/store/load operations with a get-call operation. It's good to have locals when you access the local 3+ times or if the local is a reference to an instance member used in a tight loop. 2. This shadingY = Math.DivRem(offsetPtr, (int)imageWidth, out shadingX); should be equivalent to this: shadingX = offsetPtr % imageWidth; shadingY = (int)(offsetPtr / imageWidth); 3. For tight loops it's pretty important to try not to access instance methods if it can be avoided. E.g. pixelsDrawn += 1; can be replaced with before the method returns: pixelsDrawn += (endIndex - startIndex); Which avoids increment pixelsDrawn with every iteration. Otherwise, you should alias them to avoid instance calls. e.g. var localReflectionWidth = reflectionWidth; Which should reflect in IL as "load local" instead of "call field getter on instance with checked instance not null" 4. Some variables can be precomputed, e.g. reflectionWidth + reflectionWidth in reflectionLocationX = (reflectionLocationX % reflectionWidth + reflectionWidth) % reflectionWidth; reflectionLocationY = (reflectionLocationY % reflectionHeight + reflectionHeight) % reflectionHeight; Or commutative law: immA * immissive in immA = immissiveBytes.Alpha / 255.0F; immR = (float)(immissiveBytes.Red * immA) * immissive; immG = (float)(immissiveBytes.Green * immA) * immissive; immB = (float)(immissiveBytes.Blue * immA) * immissive; Hope that helps. Vectors (with SIMD) and GPU processing can probably speed this up even further. Overall the C# compiler is pretty good at JIT compilation (which also means you are less in control of what the final code looks like); the simplest way to optimize a method is by doing less work. 
It seems that this issue comes from .NET itself. Since ignoring certificates does not help, the issue must be on the TLS/SSL layer. IIRC the last time I researched this there was a patch from microsoft that apparently fixed a TLS/SSL error when the keep alive packets weren't handled correctly or something. The patch was not public tho.
Ah interesting to know. Of course they didn't make it public though.
It's probably low priority. In the meantime you could try to wank something together that uses a proxy to communicate with SSL/TLS connections, since the dotNET implementation doesn't work.
Did they give you sample cards? Im wondering for example, if you have 'johndoe' for 'Employee Name' which is only 7 chars so how do you know when to expect the 'L' or 'U' if you dont have some character that represents a blank space or something.
Yeah. I have almost zero idea what you're talking about there. Sorry.
Yes, just use the Convert class for stuff like this
Cool stuff. Is it free?
I think i might be. 2nd year uni youre expected to know this but many of us dont as we are new to any forms of programming
If you're useless when it comes to it, why do you do an education that does this kind of stuff?
You know id totally do this with RegEx since the capture groups are built for looking for stuff and moving on regardless if its there or not.
Might I suggest starting by coding exactly what is given, then going back and trying to optimize to handle things like a seven character name. Get 90%, then worry about the last 10%
okay thank you!
No. But: http://www.viva64.com/en/a/0084/
A regular expression might be a good fit: Matches m = Regex.Match(line,"(.{20})(.)(.)(.{4}).(.{2}).(.{4})(.).(.{2})"); if (Matches.Success) { string name = matches[1]; string location = matches[2]; string unionmember = matches[3]; ...and so on }
which version of csc are you using? If you have an old version, it may not recognize the async keyword. What's HtmlAgilityPack? Is that a dll that you need to reference? It's also using IdleMaster.Properties. I'm going to guess you need to compile multiple files. You're also outputting an exe, but you have no main method. I'm sure that will screw things up. My recommendation is to not use csc on individual files. Instead, run msbuild and pass the solution (sln file) as the parameter.
What is your csc version? What version of Visual Studio do you have installed?
Yeah this is what I ended up doing and it's working fine now. I just was unaware that unboxing and casting were two separate operations.
I used to do this, and it's not bad, but I sort of abandoned it because no one else does it so my code stuck out a little bit. 
Unboxing is a detail in IL, not apparent in the program at all. The reason it failed is that numeric conversion and type casting are two different things with different rules applying in different situation. With the same syntax. In this case, since the operand is not numeric (but `object`), this syntax means type cast. (float)(int) is reasonable, yes. I don't disagree with any proposed solutions.
See also my downvoted (but correct) comments elsewhere in the thread :p. It's tricky, cause the syntax for conversion and casting is the same, but it's not quite the same underneath :/
https://www.reddit.com/r/csharp/comments/3sm6ze/can_someone_please_explain_to_me_why_this_cast_is/cwz9ezu
Makes sense. I withdraw my concern. :)
Yeah I wouldn't do it unless it was for my project and I could set the code style.
I did not know delegate worked that way but it makes sense. TIL, thanks sir!
I saw this style used mostly by Microsoft documentation back in the latter 90's. I actually really like the style myself, but /u/EddieValiantsRabbit is right about no one else doing it.
Wow, never thought it possible that Microsoft itself used this once upon a time... 
The double spaces are intentional?
I still think that even something as simple as the following would be better: public interface IParameter { string DataString { get; } } [DebuggerDisplay( "Type:{typeof(T).Name}, Value:{DataString}" )] public class Parameter&lt;T&gt; : IParameter { public T Data { get; } public string DataString =&gt; Data.ToString(); public Parameter( T data ) { Data = data; } } You'd still be preserving the type data and wouldn't have the performance penalty of boxing, but can still store it in a list as you are now: List&lt;IParameter&gt; parameterList = new List&lt;IParameter&gt;() { new Parameter&lt;double&gt;( 8.0 ), new Parameter&lt;bool&gt;( false ), new Parameter&lt;PowerType&gt;( PowerType.JetPack ), new Parameter&lt;int&gt;( 0 ) }; It's surely not the best solution as I threw it together in a few minutes, but I do believe it would be better than what you have now.
Define optimal? Instead of throwing exceptions it will return false. Unless you want to handle exceptions, anything can be in object. Unboxing a string and casting will also throw exceptions. Good luck!
in terms of computation time, I like things to be fast :3 especially since this project is an action platformer. thanks!
Enabling double buffering on a .NET control is SUPER easy... just set 'DoubleBuffered' property of the Form that your picture box is on to True usually you do this at the end of the form constructor (this.DoubleBuffered = true) or you can set the property using the Design View
I'm not a professional software developer so I don't know all the tricks and gigs, this is just a project I'm working on as a side hobby apart from school and work. I'm sure there are *much faster* approaches to what I am doing, but since they seem to all seem to contain subjects that I am not familiar with (such as serialization and generics), I choose not to use them; as this is the largest single project I've worked on before and I want to make sure I understand everything that's going on so if I need to go back and change something I can do it with ease. In my future projects I'm sure I'll have more knowledge and be able to implement faster ways to do things like this, however for now this'll suffice edit: [also here's a vague description of why I'm using this method.](https://www.reddit.com/r/csharp/comments/3sm6ze/can_someone_please_explain_to_me_why_this_cast_is/cwz9ezu)
This is a very odd way to go about this. Usually we want save and load operations to be explicit, so they can be bundled. Hence why every other database is built in a read/write pattern. Allocate a context of some kind, edit it, call save when you're done. Let me try to convince you out of this. What you want is a pattern more like this: using (var db = new DbContext()) { var entry = db.Load&lt;DbEntry&gt;(i =&gt; i.Name == "Test"); entry.Something = "new value"; db.Save(); } DbContext can be a class implemented by you, which provides access through Load to various data types. Then allows you to Save them. It's simple. It allows you to manage resources explicitly (through using). And it lets you bundle operations to prevent multiple file writes. I think I understand your idea of per-instance attributes now. You want to decorate the *field* named 'mute' so it knows it's named mute somehow. You could do that through an additional mapping DAL. Or, if you want less strong types, you could use dynamics. Which I just find unnecessarily complex and ugly. dynamic db = new DbContext(); db.Mute = "123"; db.Save(); Where DbContext is some magic dynamic that implements Try Set/Get/Invoke methods to allow various names access to it. Unknown whether Unity supports that. Or you could just use dictionaries: db["Mute"] = "123" Or you could have a DbEntry named Mute, that you allocate in one spot: DbEntry&lt;bool&gt; mute = Db.Get&lt;bool&gt;("mute"); Or you could have a static class that lets you access DbEntry classes, and collect them all there: Db.Mute = "123"; (where Mute is a property implemented on whatever Db is)
I like it. My coworkers are all tight about their code. Visually, I need some white space. I don't edit their code, and they don't edit mine. 
Save and load are explicit and seperate. The point is that I want to minimize framework's boilerplate. 
BTW I just read your reply about your familiarity level. Trust me when I say this: standard .NET serialization is the damned easiest thing to learn. Here it would be for you: [Serializable] public class GameState { public float ArbitraryFloat {get; set;} public bool ArbitraryBool {get; set;} public PowerType ArbitraryPower {get; set;} public int ArbitraryInt {get; set;} } ... void SaveState(GameState state, string fileName) { using( var fs = new FileStream(file name, FileMode.Create)) { var formatter = new BinaryFormatter(); formatter.Serialize(fs, state); } } GameState LoadState( string fileName ) { using( var fs = new FileStream(fileName, FileMode.Open)) { var formatter = new BinaryFormatter(); return (GameState)formatter.Deserialize(fs); } } Of course this doesn't do much exception handling so you'll want to implement that for sure. Serialization is perhaps the #1 item in your bag of tricks as a .NET developer (I'm now preparing for a flame war)
K.
I have double buffered set to true on the form but im still getting flickering. I tried [this](http://csharphelper.com/blog/2014/11/use-double-buffering-to-prevent-flicker-in-a-picturebox-in-c/) method which worked, but put a black background over my graphic, which meant you couldn't see the calculated background image.
I do the same thing. Makes it simpler for me to read so I assume it's simpler for others as well. 
Can you explain to me what 'Position' means and their values 0-19 for employee name? Is this an employee count example 20 employees? Also, how far into the class are you, what have you not learned yet or what is the last thing you learned? Is this a final project? Is it homework, is this a group project?
I did it in college, following a professor's example. Didn't last too far beyond that class though. I do think it adds some readability, but I don't consider it enough to be worth doing regularly. 
Note that if `anotherCondition` has side effects they won't happen in the first case when `varOne` is false but they will always if you split it like this.
WPF over WinForms. WPF is slightly harder to learn, but is *much* more customizable, has better separation of concerns, and overall is much better than WinForms. Bonus that WTF will take more advantage of your video card capabilities, offloading CPU power. And bonus that it has built-in animation. Here's a drawing tutorial: https://msdn.microsoft.com/library/ms747393(v=vs.100).aspx
At work I work with many different kind of flat (fixed width) files whether it be parsing them into a DB or creating them from a database. The key part is fixed width. Each field has a length and if its value is longer than its field length, it gets substringed. If its variable width, then you essientialy have a CSV file.
I put spaces in filled parens. It makes then much easier to read. if( !isIllicit ) actor.Destroy();
I can't write shader code. =( But I wanted to learn optimisation in C#. Some people wanted the project, if you were interested: http://untamed.co.uk/miscfolder/PixelShader.zip http://untamed.co.uk/miscfolder/PixelShaderSource.zip
ಠ_ಠ Code readability is not for HIM/HER, it's for the poor sods that have to fix bugs in their shitty code afterwards. You did spot the integer division bug, I assume? If they had coded: if (isMeasurementRequired &amp;&amp; marbleCount / jarCount * 100 &gt; 1) {} ...it would be far easier to identify the bug and change to: if (isMeasurementRequired &amp;&amp; marbleCount * 100 / jarCount &gt; 1) {} The parens did **nothing** and just made more parsing work for the subsequent developer. Readability is NOT a matter of personal style. It's an important community convention for the purposes of later extension, refactoring and bug fixing by other people. 
Some people wanted the project, if you were interested: http://untamed.co.uk/miscfolder/PixelShader.zip http://untamed.co.uk/miscfolder/PixelShaderSource.zip
If you plan on logging the data or you want any kind of access to historical data, then UWP or Modern App is not the way to go. These apps get suspended as soon as they go out of focus, so you are going to lose all the data when the app is not running. They are typically best used for visualization only. I'd suggest to do your processing on the arduino or, alternatively, on a service on your device. Keep in mind though that the Nokia tablet only runs RT so you won't be able to run a service there.
There are some on this thread that would love to help, but what have you tried? What are you confused about? Just doing it for you (which many people could) wouldn't really help you learn to solve problems for yourself. Help us, help you!
Hi, just a little exploration on your reply (from a game engine developer): &gt; People were suggesting splitting it into functions to make more readable, but it's the main blit loop - the overhead would lower performance. That's not necessarily true. It *might* be in this case, but be aware that splitting your code in to methods can sometimes allow the compiler and JITer to make further optimisations. Inlining (which is what you've got here, in essence), can complicate the chain-of-dependencies and increase the size of the instruction buffer and/or number of variables 'in-play', or inhibit the JIT/compiler from making simplifications (resulting in the same effect). In the worst case, you can push variables 'out' of the registers (AKA [register spilling](https://en.wikipedia.org/wiki/Register_allocation#Spilling)) or instructions out of the same cache line (not so bad, but can hurt you). &gt; That different in IL? Wow! Yes, although the JITer can sometimes inline reads, I believe I read somewhere that a quirk of the MS CLR is that writes must always be cache coherent, meaning it couldn't elide them all automatically for you (in essence, the JIT isn't allowed to be 'smart' and put all your `+= 1`s at the end as a single operation). Could be wrong on that, hopefully someone might find a source for me though. &gt; Interlocked.Increment(ref x) That does not do the same as a lock, it is only an atomicity guarantee (and also a coherency guarantee wrt other accesses). This is one of the *few ever* times where simply marking the variable as `volatile` would be sufficient (for both reads and writes), but you will see slowdown. You were not 'locked out' of reading the variable, you were just not telling the 'reading' side that you needed the value as up-to-date as possible, `volatile` will ensure that (to the best of the CLR's abilities). ----- A good way to learn this stuff is look at the IL output. You can set DLLs to be opened by default by the [IL Disassembler](https://msdn.microsoft.com/en-us/library/f7dy01k1%28v=vs.110%29.aspx) and then it's easy to see what you've got. By the way, if you're interested in computer graphics, you owe it to yourself to learn 3D programming the proper way (e.g. DX, shader programming, etc). I understand if this was also an exercise in learning C#, of course.
Even I'm on Win-10. Thanks. Any idea why that is required and why it's not signed?
No idea, I'll do some investigating once I get back on my machine
using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; namespace Timecard { class Program { static void Main(string[] args) { string intro, EmployeeName; int EmployeeIDNumber, NumberOfHours, NumberOfDepartments, NumberOfOvertime; double HourlyRateOfPay; bool London = true; Console.Write("Enter the employee name: "); EmployeeName = Console.ReadLine(); if (EmployeeName.Length &gt; 19) { Console.WriteLine("EmployeeName must be within 19 charecters. Please try again"); Console.ReadLine(); } Console.Write("Enter L if you work in London or X if you do not: "); if (Console.ReadLine()=="L") { London = true; } Console.Write("Enter your Employee ID: "); EmployeeIDNumber = int.Parse(Console.ReadLine()); This is what ive done so far Like i started comp science last year but it wasnt as detailed compared to this year. im paying £9000 a year so i cant really afford to drop out lol
So lets rethink the data types here, We have these keywords here (This is assuming one string based on positioning of the indexes btw. That means that one (1) string should be theoretically 40 indexes long): Length Keyword Indexes 0-19 Employee Name (string) (20 indexes) 20 Contains 'C' for city (char) (1 index) 21 Contains 'U' for union (char) (1 index) 22-25 Employee ID (string) (4 indexes) 26 Null or ' ' (char) (1 index) 27-28 Number of hours worked (int) (2 indexes) 29 Null or ' ' (char) (1 index) 30-33 Hourly rate (decimal) (3 indexes) 34 Null or ' ' (char) (1 index) 35-36 # of dependents (int) (2 indexes) 37 Null or ' ' (char) (1 index) 38-39 Overtime hours (int) (2 indexes) Total: 39 + 0 = 40 Let this designate your type casting at the beginning of your code. However you can append all the strings together at the end of your execution. Once this is done, you can count the indexes to see if your appended string comes around 39 to 40 indexes. 
Both are not signed on my machine, it's strange. 
Scripting / Programming language compiler + virtual machine. That's anyways fun. 
Why not use Chocolatey instead? If you choose not to, *please*, at the very least, make sure to support the PackageManagement framework (part of WMF 5.0, and integrated in Windows 10). We don't need yet *another* non-standard package management system on Windows.
I've made notes on everything you've told me, thank you. &gt;By the way, if you're interested in computer graphics, you owe it to yourself to learn 3D programming the proper way (e.g. DX, shader programming, etc). I understand if this was also an exercise in learning C#, of course. I've dabbled with SlimDX - in 2D with no shaders yet. I think I'm ready for 3D and shaders. https://www.youtube.com/watch?v=gzYhg66POE0 https://code.google.com/p/simple-slimdx-multimonitor-screensaver/ Thank you for all your help. Merry Christmas!
I created a program to generate a mod for the game Crusader Kings II. It originally started out as just creating high tier versions of the Kingdom and Empire level titles. Adding new titles to the game was pretty easy, but tedious and error prone to do by hand when there's ~2300 to add. I later added the feature of generating a new start scenario, with randomly generated characters and realms, and later on, culture groups and cultures. I no longer support it, so it doesn't work with the game anymore, but the source is on [GitHub](https://github.com/Measter/TitleGenerator) for those interested. Note: this was originally programmed on .Net 3.5, which didn't have the Task type, hence the naming collision. [Edit] I have some example screenshots. [This](http://serayen.com/ck2/titgen/vanilla-scene.jpg) was the start scenario for the game at the time, and [this](http://serayen.com/ck2/titgen/random-scene.jpg) is an example of the randomly generated realms. I don't have any screenshots of the default culture map, but [this](http://serayen.com/ck2/titgen/cul-gen-max.jpg) is an example of the randomly generated one. The culture names, and the names of the characters with that culture, are generated using a Markov Chain based word generator.
Are you aware of any examples of similar projects, preferably with its source code? 
Is this on GitHub?
That works, but the background dosent go clear. It stays white...
Thanks, it seems like it could have some good uses for host-side redundancy in some of my projects/ideas, I'd love to contribute!
I'm planning on creating a web based version due to the demand and will probably expand it to other games.
class Program { static void Main(string[] args) { string intro, EmployeeName, EmployeeIDNumber; int NumberOfHours, NumberOfDepartments, NumberOfOvertime; decimal HourlyRateOfPay; bool London = true, Union = true; Console.Write("Enter the employee name: "); EmployeeName = Console.ReadLine(); Console.Write("Enter L if you work in London or any other key if you do not: "); if (Console.ReadKey().KeyChar == 'L') { London = true; } else London = false; Console.ReadLine(); Console.Write("Enter U if you are a Union member or any other key if you are not: "); if (Console.ReadKey().KeyChar == 'U') { Union = true; } else Union = false; Console.ReadLine(); Console.Write("Enter your Employee ID: "); EmployeeIDNumber = Console.ReadLine(); Console.Write("Enter number of hours worked: "); NumberOfHours = int.Parse(Console.ReadLine()); Console.Write("Enter hourly rate of pay: "); HourlyRateOfPay = decimal.Parse(Console.ReadLine()); Console.Write("Enter number of departments: "); NumberOfDepartments = int.Parse(Console.ReadLine()); Console.Write("Enter the number of hours you works: "); NumberOfOvertime = int.Parse(Console.ReadLine()); okay ive done this so far. How would i now get that to show up at the end as 1 string???
I dont get the question tbh :/
Translation of the assignment: Ask the candidate 10 true/false questions and then grade their responses. One thing wrong with the assignment is the grammar. Remove the word "each" from the next to the last line/sentence.
ok so apparently it is not so simple dealing with transparency of layered images in winforms... id advise you just set the BackgroundImage property of your picturebox to your background rather then using two controls, as transparency will work as expected within a single control. 
I don't really have enough time in my weeks to get proper lessons, but thanks for the offer. I'll just google around when I have free time.
 public List&lt;Point&gt; FindPointsBetween(Point p1, Point p2) { const int pointCount = 6; var pointsBetween = new List&lt;Point&gt;(); for (int i = 1; i &lt;= pointCount; i++) { var pointX = p1.x + ((p2.x - p1.x) * i / (pointCount + 1)); var pointY = p1.y + ((p2.y - p1.y) * i / (pointCount + 1)); pointsBetween.Add(new Point(pointX, pointY)); } return pointsBetween; }
An int is a primitive data type and as such cannot be null. If you're binding a null value into a model with a non-nullable int, it will convert it to a 0, as null is not valid. Changing your model to be a nullable int instead should fix your problem. However, if your program is expecting an int (not a nullable int) you will need to do null checks and cast it back into a non-nullable int before using it. This may be where your errors are coming from.
1. Create an object for each candidate. 2. Create a property on the Candidate object that contains their answers. 3. Figure out the rest yourself since this sounds like an assignment, you'll learn a lot more if you do this yourself.
Sorry I was more thinking of an actual check in the code and assigning it to another variable. But you're right that .Value would be faster than casting it back to int.
IF your line is short enough that you can treat latitude and longitude as Cartesian (i.e.: you can ignore that you're really on a sphere) then you can simply find the 6 X coordinates, and 6 Y coordinates ( Xn = ((Xend - Xstart)/7)*n ), remembering the fence post problem that finding 6 points between ends really means 7 line segments. If it's not, and your line is on a perfect sphere, you can convert to polar coordinates and do a similar thing with the angles. However, if you're using large lat/long lines on the real earth (think Sydney to London in length) then you're going to want to use a proper GIS library unless you really want to learn a lot about standard ellipsoid models.
namespace Timecard { class Program { static void Main(string[] args) { string intro, EmployeeName, EmployeeIDNumber; int NumberOfHours, NumberOfDepartments, NumberOfOvertime; decimal HourlyRateOfPay; bool London = true, Union = true; Console.Write("Enter the employee name: "); EmployeeName = Console.ReadLine(); Console.Write("Enter L if you work in London or any other key if you do not: "); if (Console.ReadKey().KeyChar == 'L') { London = true; } else London = false; Console.ReadLine(); Console.Write("Enter U if you are a Union member or any other key if you are not: "); if (Console.ReadKey().KeyChar == 'U') { Union = true; } else Union = false; Console.ReadLine(); Console.Write("Enter your Employee ID: "); EmployeeIDNumber = Console.ReadLine(); Console.Write("Enter number of hours worked: "); NumberOfHours = int.Parse(Console.ReadLine()); Console.Write("Enter hourly rate of pay: "); HourlyRateOfPay = decimal.Parse(Console.ReadLine()); Console.Write("Enter number of departments: "); NumberOfDepartments = int.Parse(Console.ReadLine()); Console.Write("Enter the number of hours you works: "); NumberOfOvertime = int.Parse(Console.ReadLine()); Console.WriteLine(EmployeeName + " " + London + Union + EmployeeIDNumber + NumberOfHours + HourlyRateOfPay + NumberOfDepartments + NumberOfOvertime); Console.ReadLine(); Ive decided to it this way. I'm having a few issues atm. First of all the at the end where i have to show a whole string, bool values are showing as true or false..but i have to show L(for london) and U(for union) And also how would use the if statement where i would limit the user to input 0-19 charecters for the employeename and if they go over the 0-19 they would have to start the input again. thank you
I forgot that you had to add city or union to that string. So to save yourself some trouble you can just make 'bCityOrUnion' of type string. So when it comes to appending the string, then there will be no need to explicitly convert the type. Safest to just change it this way: string isLondonOrUnion; Console.WriteLine("(l)ondon or (u)nion: "); if (Console.ReadLine().ToLower() == "l") // Comparing user input to a lower case L isLondonOrUnion = "l"; // assign with a lower case L else isLondonOrUnion = "u"; // lower case u Now 'isLondonOrUnion' has been assign with type 'string' making it easier to append the single character of string type to the stringbuilder at the end of your code. 
Alright thank you man!! i'll have a go tomorrow morning! i'll message ya if i need help! Thanks man!!
combined with d = sqrt ( (x2-x1)^2 + (y2-y1)^2 )
That's not the same as an Action with no parameter, a Func returns a value (int in your example) but an Action doesn't. The OP should just use `Action`.
Not sure about your second question but you can just use Action without the &lt;&gt; 
I actually never knew you could do this
Thank you!!! :) += and -= also work fine now.
Cool story. I'm aware of adding and removing function pointers to/from multicast delegates and the observer pattern. I was saying that I didn't know you could add action delegates to each other.
&gt; Also, I highly recommend ALWAYS using stored procedures and not inline SQL. I don't know if that's possible with SQL Server Compact Edition. I'll check it out. &gt;Have a good week Thanks. You too.
Personally I'd avoid the somewhat outdated Windows Forms, and instead focus on WPF + MVVM
Submit your code to http://codereview.stackexchange.com/ .
Windows Explorer alternative. (okay, I'm not very far into it yet, so it does almost nothing, but I hope I don't get distracted until I do a decent amount.)
Dragablz (which I've posted about on here a few times). The version I opened sourced is actually third generation. Took a couple of goes on other projects before I was happy with how I really wanted to do it. 
Get the difference, divide it into equal parts, use that to calculate the points.
That's such a mis-feature, easily covered by `Action myNewAction = (x, y, z) =&gt; { oneAction(x, y, z); anotherAction(x, y, z); }`. But I know there are legacy reasons which predates closures.
You're welcome, merry Christmas to you too.
What about OP's second question? What did he mean, what is the answer? :D
Not a misfeature at all! Action subscriptions = oneAction; ... stuff happens // Need to subscribe to another action subscriptions += anotherAction; 
sorry the icon size has never been an issue for me. If you need more flexibility maybe something like this article is helpful? http://stackoverflow.com/questions/6008600/get-program-icons 
Correct, this is ideal for an event system in my game. For example, all game objects which need to do something when the player dies can subscribe a method to the playerDead delegate. Each game object is responsible for its own subscriptions, so it keeps everything nice and organized and safe.
Just because the tutorial is old, doesn't mean it is outdated. Windows forms hasn't been updated since VS2008 I think. Granted now you can do some different things with newer expressions in c#, but a lot of that is more advanced. 
namespace Timecard { class Program { static void Main(string[] args) { string intro, EmployeeName, EmployeeIDNumber; int NumberOfHours, NumberOfDepartments, NumberOfOvertime; decimal HourlyRateOfPay; bool London = true, Union = true; Console.Write("Enter the employee name: "); EmployeeName = Console.ReadLine(); if (EmployeeName.Length &gt; 19) { Console.WriteLine("Name must be within 19 Characters. Please type again"); } Console.Write("Enter L if you work in London or any other key if you do not: "); if (Console.ReadKey().KeyChar == 'L') { London = true; } else London = false; Console.ReadLine(); Console.Write("Enter U if you are a Union member or any other key if you are not: "); if (Console.ReadKey().KeyChar == 'U') { Union = true; } else Union = false; Console.ReadLine(); Console.Write("Enter your Employee ID: "); EmployeeIDNumber = Console.ReadLine(); if (EmployeeIDNumber.Length &gt; 3) { Console.WriteLine("Employee ID must be within 3 Characters. Please type again" ); Console.ReadLine(); } Console.Write("Enter number of hours worked: "); NumberOfHours = int.Parse(Console.ReadLine()); Console.Write("Enter hourly rate of pay: "); HourlyRateOfPay = decimal.Parse(Console.ReadLine()); Console.Write("Enter number of departments: "); NumberOfDepartments = int.Parse(Console.ReadLine()); Console.Write("Enter the number of hours you works: "); NumberOfOvertime = int.Parse(Console.ReadLine()); Console.WriteLine(EmployeeName + " " + London + Union + EmployeeIDNumber + NumberOfHours + HourlyRateOfPay + NumberOfDepartments + NumberOfOvertime); Console.ReadLine(); Currently I have this. Now the question states "The employee's gross pay (= regular hours * hourly rate + overtime hours * hourly rate * 1.5) + £1000 London allowance (if he/she works in London ), The employee's income tax (=0.14 * (gross pay - 10 * number of dependants)), The employee's union dues (=6% of net pay) (i.e. after tax has been deducted from the gross pay), for union members." How would i create all this in a separate class and then implement this into my program?? thank you!
I'm assuming this is a console app input. If so, you receive an array of arguments in your main method which will include all input parameters. If this is just a regular string in a method, you could call split on it and split it by an empty space to read through all the values that way, as strings. Then you could parse the int 
I'd probably have the user enter the values separated by a delimiter like a comma or a space. Example: Console.WriteLine("Enter input values: "); string userInput = Console.ReadLine(); string[] inputVals = userInput.Split(','); foreach (string input in inputVals) { Console.WriteLine(input); } Now you have an array containing each of the user input values and you can select the value(s) that you need. The result would be something like this Enter input values: BC,3,ZZZ1,$,Hello BC 3 ZZZ1 $ Hello 
Bit late, but parametrization of a line is an easy way to create such points. The mathy part is (you requested a formula) that you create a function p(t) = (x, y) such that the first point you know of is p(0) = (x1, y1) and the second point is p(1) = (x2, y2). You already know that the function is linear simply because it's describing a line, so it should be on the form p(t) = (k_x * t + m_x, k_y * t + m_y). This means p(0) = (m_x, m_y) and you get (m_x, m_y) = (x1, y1). Thus p(1) = (k_x + x1, k_y + y1) and p(1) = (x2, y2) gives (k_x, k_y) = (x2 - x1, y2 - y1) which gives the full parameterized function: (x, y) = p(t) = ((x2-x1)*t+x1, (y2-y1)*t+y1) t = 0 and t = 1 gives the input points, 0 &lt; t &lt; 1 gives a point between the points. And t &lt; 0 and t &gt; 1 gives points on a line "outside" of the points.
I just dont understand how i go about doing the question. Can you like explain what to do within c# and then i will try and have a go? thank you very much!
I've use webkitdotnet and geckofx in the past and neither were perfect. This was maybe 3 years ago though. Try them and see if they work for you. I think they might've been missing some particular event that I needed or thought I needed.
So it looks like you've probably got this figured out but where are you doing the drawing? One reason you may get flickering is if you're not drawing in the paint event. Also, whenever you are doing a purely custom drawn object/control in C#, I would suggest just making a custom control and doing all the painting in the paint event. This will ensure that the display will refresh at normal times and will paint all before refreshing (especially with double buffering enabled). A picture box does not actually provide you with any more drawing tools than say, a form or a panel. As the article mentions, you cannot double-buffer a picturebox, but you CAN double-buffer a custom control (although you might have to inherit from IContainer or Panel or something). Making custom controls is a really good way to create isolated, reusable code.
http://videos.criticalcommons.org/transcoded/http/www.criticalcommons.org/Members/ccManager/clips/richard-pryor-discovers-he-is-a-computer-savant/video_file/mp4-low/superman3_racehackercomputerschool-mp4.mp4
Okay i'm soo confused rn. I dont get what youre saying! okay ive created a class called gross pay with this in it so far: class Grosspay { public double NumberOfHours; public int NumberOfDepartments; public int NumberOfOvertime; public double HourlyRatePay; Using that how would create (= regular hours * hourly rate + overtime hours * hourly rate * 1.5) + £1000 London allowance (if he/she works in London ) and also how would i implement this class into the program so the values the user inputs from the console is used for this class and shown in the console application? (im sooo sorry if i sound a bit stupid its just i really want to get to grips with this and its hard for me. i really appreciate the help youve provided over the last few days! )
To add on to this explaination, For the Model class you will want to override the ToString method to return a string that is a concatination of all the values. This is the method the ListBox calls to know what value to display.
[Imgur how to process a formula in a separate function](http://i.imgur.com/L8Z6Jqi.png)
okay this is my Class Grosspay: namespace Timecard { public class Grosspay { public static double ProcessGrosspay(int gpNumberOfHours, double gpHourlyRateOfPay, int gpNumberOfOvertime) { return ((gpNumberOfHours * gpHourlyRateOfPay) + (gpNumberOfOvertime * gpHourlyRateOfPay) * 1.5); } } } and this is the program code: namespace Timecard { public class Program { static void Main(string[] args) { string intro, EmployeeName, EmployeeIDNumber; int NumberOfHours, NumberOfDepartments, NumberOfOvertime; double HourlyRateOfPay, euroGrossPay; bool London = true, Union = true; //Console.WriteLine("Please enter the following details"); //intro = Console.ReadLine(); Console.Write("Enter the employee name: "); EmployeeName = Console.ReadLine(); Console.Write("Enter L if you work in London or any other key if you do not: "); if (Console.ReadKey().KeyChar == 'L') { London = true; } else London = false; Console.ReadLine(); Console.Write("Enter U if you are a Union member or any other key if you are not: "); if (Console.ReadKey().KeyChar == 'U') { Union = true; } else Union = false; Console.ReadLine(); Console.Write("Enter your Employee ID: "); EmployeeIDNumber = Console.ReadLine(); Console.Write("Enter number of hours worked: "); NumberOfHours = int.Parse(Console.ReadLine()); Console.Write("Enter hourly rate of pay: "); HourlyRateOfPay = double.Parse(Console.ReadLine()); Console.Write("Enter number of departments: "); NumberOfDepartments = int.Parse(Console.ReadLine()); Console.Write("Enter the number of hours you works: "); NumberOfOvertime = int.Parse(Console.ReadLine()); Console.WriteLine(EmployeeName + " " + London + Union + EmployeeIDNumber + NumberOfHours + HourlyRateOfPay + NumberOfDepartments + NumberOfOvertime); Console.ReadLine(); euroGrossPay = ProcessGrosspay(NumberOfHours, HourlyRateOfPay, NumberOfOvertime); } } } like the class grosspay seems fine but i cant seem to get my head around how i will show all the stuff in the main function. can you like help me through my coding as i find it easier. i think im nearly there tho thank you!!!! Once youve helped me with this, i'll have a go with my last formulae and send it to you 
YOU ARE A STAR!!!!!! I will have a go at this during the forthcoming week!!! And if i need any help then i know who to go to ;) I cant stress enough how appreciative i am!! thank you!!!!!
`Random.Next()` has an inclusive lower bound, but an exclusive upper bound. My guess is that this slightly biases your random colors towards darker shades (since the range is actually -4/+3), so it fades toward black and gets stuck there. Try changing the upper bounds to 256 and `range + 1`.
interesting, what specs are you running it on? I have the following, with the largest solution having about 6 projects. So not very large code base i guess. My Specs; intel i7-4770 16gb ram 500gb samsung evo 840 ssd windows 10 home
I develop on a very powerful machine, and it is woefully slow. Intellisense taking many seconds to show, and you can fucking forget it being useful in an MVC view - the whole page will randomly turn red (without any input from you) because r# just forgets what assemblies to use. R#10 has been an utter shambles of a release. 
Well that link is annoying on mobile. Edit: added mirror http://i.imgur.com/WFrWwYc.jpg 
I think I've had more problems with 9 than 10 at first release. 
Thanks for the feedback, I honestly never tried that before. I'm going to take a look at that, shouldn't be too difficult to move over, as long as the UI objects behave similar. If not I'll just have to tweak a little. 
He could use json.nets Dynamics and parse that way. I'm not a fan and would highly suggest using strongly typed objects if you can but if not dynamic allocations are available. 
Well you can use WPF like you use WinForms, but i would recommend that you do some tutorials for WPF since it's suppose to be used very differently. One such example is build in support for Data-binding and the MVVM pattern. Trust me once you learn about Data-Binding and some of the other stuff you'll look back at your WinForms project with disgust :D
It still destroys your typescript intellisense on latest patch. More than frustrating.
Out of curiosity (and boredom) I tested this to see how fast it converged to zero. In my tests I set the initial RGB values to 128, and they converged to zero within 200 to 300 iterations, which is about 1/4 to 1/3 way through the first row of pixels in a 1024x1024 image.
Let me know when MS starts following this rule.
Explicit is better than implicit.
I personally like C#'s approach because it makes member visibility always apparent, whereas in C++, you need to know where the latest access modifier is located. If you're writing good code (read: no public fields, and more controversially, no private methods) then it doesn't matter most of the time anyway. 
Testability + oftentimes private methods can be extracted to another object. 
In D you can write like this: public class Foo { private { int myFoo; } public { int Foo() { return foo; } } } Or like this: public class Foo { private int myFoo; public int Foo() { return foo; } } Which is identical to C# obviously. In C++ I think the `public:` thing is a good feature. Since you often split declaration and implementations, class declarations are usually short, and you can see the entire class in a single page, which is not very common in C#. You don't end up with repeating yourself over and over like you do in C#, but in C# it's necessary because very seldom do you ever see the entire class layout.
&gt; I personally like C#'s approach because it makes member visibility always apparent, whereas in C++, you need to know where the latest access modifier is located. Which is less of an issue in C++ than it is in C# since class declarations are usually a hell of a lot shorter since they don't usually contain the implementation. A C++ class will usually be entirely visible without scrolling.
Or write classes where the behavior doesn't come as a complete surprise to the API consumer without extensive code documentation.
Oh, wouldn't it be wonderful? But realistically, you don't want to read the code of the API you're calling - you want to read the documentation of the API. Also, code is always more obvious when you write than when you read it later. Pre-conditions, assumptions and just additional useful knowledge should be documented.
Basically anything can become complex if you truly put your heart into it. What I mean by that is - after you've done something, if you truly think about it, you'll find ways to help your users become more productive. Things like: keyboard shortcuts (which can be context dependent), pretty colors on list views, tooltips (which can also be dependent on cursor position), and so on. Take any project, and if you're really passionate about it, you'll think of things to add to it -- and the challenge will be to refactor your code such that after it's done, to remain simple :P
What the OP has is explicit. It's explicit which members are private and which are public.
I have moderate knowledge regarding C# (Learning it for about 3-4 years now). I'm at delegate level, so haven't touched any internal thingy. Currently I'm developing a 2D Network Fighter game in OpenTK, more or less success :D
Not yet :) I'm downloading ATM. I'll edit if I get into developing with it. EDIT: Tried to make Notepad++ C# compatible (Intelisense, Code correction, etc..) but I haven't found a plugin with non-script version.
Meh depends. It's difficult to debate on code without having examples to discuss.
You can try running one of the older visual studio editions e.g. VS 2008 or VS 2010. They work pretty 2005 and 2008 work pretty well on a Athlon XP era PC.
Could you explain the second paragraph a little more, I don't quite understand 
Remember we're looking at a header file here, so the visibility of the elements is close to the definitions. However if this was the actual code implementation we would be digging through a possible hundred lines of code between each definition. That kind of gap makes it implicit. The c++ pattern works because of the header files you have to write. Because c# drops the header files entirely you can't do the same thing. 
Do you have access to any Azure credits? (eg. through a work or school MSDN subscription) I ask because I've considered in the past simply building a virtual dev environment in Azure, there are "ready to go" VMs with Win10 + VS pre-installed that are designed for this, then your EEEPc simply becomes a thin client!
You can get $200 worth for free when signing up which lasts 30-60days i believe 
Do you know if there are free plans about it? I was looking for the cloud9 equivalent of Visual Studio the other day but didn't find anything.
Being able to watch the log messages come in as they happen would be a huge plus. The Windows Event Viewer doesn't support it as far as I can tell, and I couldn't find an alternative event viewer supporting it. But it's pretty easy to support using the API. The program below watches the event log on your machine and prints events as they happen. using System.Diagnostics.Eventing.Reader; ... // Change ACME to whatever Source you want to monitor, or change the entire query string // to "*" to show all Application events. var query = new EventLogQuery("Application", PathType.LogName, "*[System/Provider/@Name=\"ACME\"]"); using (var watcher = new EventLogWatcher(query)) { watcher.EventRecordWritten += (o, e) =&gt; { var r = e.EventRecord; Console.WriteLine("{0}\t{1}\t{2}", r.TimeCreated, r.LevelDisplayName, r.FormatDescription()); }; watcher.Enabled = true; // Keep the process alive; the event handler will fire and display output as new event log entries are added. for (;;) Thread.Sleep(10000); }
somethint like this, typed just in reddit not real code, just an idea. var rand=new Random(); var array=new int[1024]; array[0]=rand.Next(0,256); array[1023]=rand.Next(0,256); generateCurve(0,1023); void generateCurve(int a, int b) { int c=(a+b)/2; array[c]=rand.Next(array[a], array[b])); if (a+1&lt;c) generateCurve(a, c); if (c+1&lt;b) generateCurve(c, b); }
For 2D bitmap you can take square and divide it to 4 squares by centre point with random color in range of current square corners colors.
Sorry I don't think there is a free platform on Azure. At least not for running VMs anyway. You get some free credits when you sign up and that's it unfortunately. Credits are deducted based on up-time of VMs, so you can actually make relatively few credits stretch quite far. I have about £65 in Azure credits per month through my work's MSDN subscription, which is ample for running a dual core machine with 4GBs memory *as and when I need it*. I couldn't leave that VM running all the time as it would exhaust my credits before the months end.
hehe, that is very funny, since that's exactly what I'm working on right now :P That is, allow viewing Event Log events and strings written using OutputDebugString. I may use the code you just posted :P Best, John
Thanks for all the answers. I discovered MSSQL CE doesn't like the keyword FROM in update queries. So I had to use the example here: https://msdn.microsoft.com/en-us/library/ms174122.aspx I may change to SQLite in the future.
I'm surprised there isn't such a thing for log4net providers. Specifically file/database logs. Edit: did google search and there seems to be several available (mostly in wpf form) Yalv! as an example.
i'm guessing not desktop application, because then you lose flexibility. Creating a library to do the listed things, allows me to use it in any project type (WinForm, Wpf, Console, MVC, etc...). You give me the outlet to populate data, but let me choose how to display it, type thing.
Using regexs and groups to try and do what OP is doing would make things much more complicated, and just add a lot more risk of errors or unforeseen issues (like false positives and such) during production. Unless there's absolutely no other way, or it's a simple thing like a phone number validation of ###-###-#### or something, I generally try and stay away from regexs. They can get complicated in a hurry, and generally tend to create more problems, than they solve. 
Have you looked at Application Insights (in Azure?) It does all of the above, over the combined event logs from all your machines (which is a killer feature if your system is distributed and/or scaled-out)
That is how projects should be build up in general..
Ben, C# permits you to place public, private and protected anywhere within your code but look at StyleCop for a more standard way of coding. public bool test {get; set;} or private bool _test = false; // whatever your default wants to be public bool test { get { return _test; } set { _test = value; } } you can also specify set as readonly so the set is in effect private. There are two ways of thought in C#. 1) List your variables in private, public order 2) private variable followed by the property getter and setter. I tend to like const private constructor fields public methods private methods Hope that helps Wayne
You can use [OmniSharp](http://www.omnisharp.net) to enable IntelliSense-like features in a wide range of text editors. The only big issue with it is that you still have to generate solution and project files yourself. (Also I'm on mobile so apologies if the link formats wierdly).
You can still do multiple inheritances with interfaces. The C# rule is you can only inherit from one class but you can inherit from as many interfaces as you wish. 
tl;dr ask yourself, "is this an is-a or a has-a relationship" Generally, you don't (or shouldn't) use inheritance to share code. The way to think is "Is this an 'is a' or a 'has a' relationship?" e.g. "Is this a that" or "Is a truck a car?" Well, a truck is not a car, but a truck and a car do have an engine and they are automobiles, so a vehicle base class could make sense here. However, to solve the problem of needing to share code, you'd make an object that can perform the desired action on another. So, you could have a Driving object that takes a vehicle or a vehicle that takes a driving object that has the function needed to drive the vehicle. Your amphibious vehicle would, in this case, take a LandDriver and an AquaticDriver that implement the IDriver interface, or something to that effect. This is referred to as Dependency Injection, if you want to do more research on it.
Works with large files, 2gb, 10gb etc without trying to load it into memory 
[Awesomium](http://www.awesomium.com/) I haven't used it myself yet but it looks ok. May not be the simplest but probably the one of the better ones.
i'll do it, thx :)
Actually, PRNGs usually have a more uniform distribution than true random numbers would.
Nice! Looking forward to listening to this one.
Cheers
As you've realised Moq (and it's cousins Rhino Mock, FakeItEasy etc) can't mock static classes (also sealed classes, non-virtual methods etc). This is because they create implementations of (usually) interfaces at runtime and inject behaviour/invocation recording code so you can use them as mocks. There are some mocking (or some people call them 'isolation') frameworks that _can_ do this level of mocking, they essentially hook into the runtime and modify that. It's all very complicated and you usually have to pay for these libraries. I'm not completely clear from your question _what_ you're actually trying to test. You say "I have a static class.." followed by ".. how do I test this?", which implies that you're trying to test the static class rather than another classes that uses it. I assume you're trying to test a class that uses it, hence why you're trying to mock the static, so I'll answer that question. The normal approach to this is to create an interface (e.g. IDatabaseRepository) and use Dependency Injection to pass an instance into your class's constructor. Then in real code you have an implementation that calls the real database and in the test you can create new Mock&lt;IDatabaseRepository&gt;(). Dependency Injection is a really big topic and I highly recommend reading https://www.manning.com/books/dependency-injection-in-dot-net for loads of great details! Also for some good unit testing basics in C# I recommend https://www.manning.com/books/the-art-of-unit-testing.
I share the same opinion as /u/Insuevi &amp; /u/angularbeginner. You could make a library separate, that does all the log reading from whichever source. Then write your own desktop application on top of that library. With the library you/we (developers) could then write your own MVC application, WPF application, Console Application, or even integrate it into a existing one. Much more flexible in the long run. Your desktop application would allow me, as an I.T./developer, to troubleshoot some software problems without building the front-end. 
This will help you to understand the concept of [Multiple Class Inheritance Using Interfaces in C# with Example] (http://www.fwait.com/multiple-class-inheritance-using-interfaces-in-c/) . There are also bunch of tutorials. 
To take on your earlier post... There are three pieces to logging (simplified); - writter (think log4net) - reader (your library) - viewer (your desktop/mvc/console application) You're saying you want #2 &amp; #3 to be together, when we're saying it makes more sense to build them separate (even if viewer ends up using the reader)
 using System.Diagnostics; Process.Start(filename, args); So you could use System.Diagnostics.Process.Start("cmd", "/C copy /b d:\\file.pdf d:\\Backup\\file.pdf"); to copy a file from one dir to another. Source: http://stackoverflow.com/questions/1469764/run-command-prompt-commands
Somehow, this does not work for me. I have tried all sorts of different suggestions but I cannot get it to execute shutdown. Is this some sort of security feature?
Thanks! Will take a look at that too.
I do understand where you're coming from. But at this time, the UI is tightly coupled to the reader - because I'm focusing on proving an awesome UI experience. So, if in the UI I need something that needs to be implemented in the reader, I will do it. And you still haven't answered my question - about the UI top features :) Best, John
1) I use my own :) 2a) loggly looks pretty much focused on http logging. What I want is to be focused on bug finding. 2b) I did look at seq a while ago - and it's too intrusive for me. And it also requires you to install a seq server. The UI is way too basic. 
I think if you can get a licence key and enter that in, you no longer need to sign in to re-authenticate. I haven't had to sign in at work once I entered the key. Maybe Bizspark doesn't provide the keys though? In that case it's more of a Bizspark issue than a VS issue.
What does fillArray do precisely - could you post its code? Is array1Pow7 the name of a variable or did you mean that value as a string like this: fillArray("array1Pow7")? 
how big is your company? i believe if you're under 5 employees, you can just use the free community editions of vs (they're almost entirely the same as professional). otherwise, just buy a professional license.
Here's how I would (or *will* if I can find the time...) go about it. 1) We have eight spaces that can either be empty or contain one of the four operations. One way to generate all the possibilities is to generate numbers between 0 and 255 and check the bit positions when there are 0 to 4 bits set. When I get a possible combo (say, "00100101") then all the zeroes will be "spaces" (the number will "bunch up") and the 1s will be used to put all possible combinations of the four operations. We can generate all possible combinations of the four operations for 3 spots using something similar to this Dim opers = {"+","-","*","/"} Dim q = From op1 In opers From op2 In opers From op3 In opers Where op1 &lt;&gt; op2 And op1 &lt;&gt; op3 And op2 &lt;&gt; op3 Select op1 &amp; op2 &amp; op3 (Yeah, it's VB, not C#, but change "Dim" to "var" and add a few semicolons...) 2) With that, the hard work is done. (Maybe). We need to evaluate our string to get it's value. I'd use DataTable.Compute to cheat a bit and use an existing library. Writing that function ourselves is doable, but a lot of work. 3) All that's left is to go through all possibilities and extract the highest value. A few more checks might be needed, especially with division so that we don't get weird values like "NaN" or "NegativeInfinity"... I'm pretty sure it's not the best solution (maybe not even a good one), but I'd be my first approach and I'd iterate from that. 
 Process.Start(@"C:\Windows\System32\shutdown.exe", "-s -t 7200"); Will shutdown in 2 hours.
Letting OP know people are interested in listening to their appearance on a podcast. Yup totally worthless.
Use FileStream. It provides buffered I/O, so it should be faster (especially for very large files) than trying to load entire files into memory.
Atom's omnisharp package supports creating and managing projects and solutions. It's got me curious now, so I think I might try it out just for laffs. Visual Studio Code also supports it too.
Not a desktop app because of centralized logging. If you're running a cluster of servers, you're not going to want to inspect each individually. Unless your desktop app is a client of some datastore where messages are indexed? Have you looked at Splunk and/or ELK (Elasticsearch, Logstash, Kibana)?
[.NetDamus](https://www.youtube.com/watch?v=ZK8NgQLE6Zw)
Bizspark does not provide keys. They provide a free MSDN license. When that expires, so does access to Visual Studio.
It really sounds like your data should be constructed with arrays of arrays of arrays. I've included an example below. *Edit: Code Formatting* float[][][] data = new float[8][][]; for(int i = 0; i &lt; 8; i++) { data[i] = new float[3]; for(int j = 0; j &lt; data[i].Length; j++) { data[i][j] = new float[/*Not sure how large your data needs to be*/]; } } for(int i = 0; i &lt; data.Length; i++) { for(int j = 0; j &lt; data[i].Length; j++) { fillArray(data[i][j] } }
Yes, you can definitely use methods inside of loops! You may want to revise the method you are calling to match what the loop can provide (in this case, ints). If the numbers you are inserting are simple numbers (i.e. 1-3), you can utilize a for loop's iteration number (that may be the wrong wording, but trying to keep it simple) to help create these numbers. If the data is different (such as 342, 528, 756 or other non-sequential numbers), you may want to put those inside of an array and work off of that with its own control value. (But that's a mostly healthy challenge in of itself.) What I would recommend is two for loops - one nested inside the other. Use the first/top-most for loop to control the "row" in your 3x7 array, and use the second/inside for loop to control the "column" you are inserting data. --- Let's get semi-psuedo! I'm assuming we have been given an array pre-filled with data. We'll call it *data* and assume it is 3x7 ([3][7], if that helps). Also, assume we have an output array (aptly named *output*), which is empty but of the same size (3x7). Look for it in my rendition of "fillArray". for int x = 0. while x is less than the number of rows in my array, for int y = 0. while y is less than the number of columns in this row of my array fillArray(row (our x value), column (our y value), data[x][y]) //data[x][y] would return the data found at position (x,y) of our data array. fillArray(int row, int column, int data) output[row][column] = data; Now, in my example I'm using fillArray to, well, fill another array. You can pull data from an array and use it however you will. For example, if you had an array filled with dollar amounts, you could easily iterate over each value in the array with a for loop and find the average value, highest value, lowest value and so on. All from a single loop! This is part of how you can make your code more flexible. Can the same code work with a large set of data and a super small set of data? Can it handle empty sets of data? The list of possible "can my code do X" questions can get pretty big. It may be a bit extensive compared to what you need right now, but it's a good way to start thinking when writing code! --- For loops and indexed/iterable structures, such as arrays, work well together. You can use a for loop to control where you are inserting to or retrieving from in an array. I would highly recommend playing with a single-dimensional array (such as array[], not array[][]) and test what you can/can't do, first. This site will help you a LOT, if you take some time and read through all of the examples. http://www.dotnetperls.com/loop-string-array
try this ..... http://net-informations.com 
I retract a previous statement. According to MSDN, adding two delegates together is actually a multicast. Events are a language feature that encapsulates the multicasting processes.
It would be worthwhile to post that you listened if you also evaluated it, even briefly. Otherwise, it's useless information.
Two solutions I've used (without getting into code that modifies / hooks runtime): 1. Create Proxy Class. E.g. rather than Guid.NewGuid() use guidProxy.NewGuid(). 2. Back static class with singleton, replace singleton when mocking.
Once you've learned arrays, you should probably quickly move on to, say, List&lt;T&gt; instead. Arrays are a pretty old, rigid language construct with many limitations, and shouldn't be used much, or at all, in modern code. 
After sticking with WinForms for a few projects I finally decided to take on WPF in a MVVM approach using Caliburn.Micro. I've enjoyed it so far and it made me appreciate desktop app development much more! You should check out some of the C# 6 features if you want to know what's new, I personally learned most of the new stuff from ReSharper (it's also taught me a lot about LINQ which I think makes C# such a pleasure to work in) 
Oh, and the .NET core [is now open-source](http://radar.oreilly.com/2015/06/net-open-source.html). - http://referencesource.microsoft.com - https://github.com/Microsoft/dotnet - https://github.com/dotnet/coreclr - https://github.com/dotnet/corefx edit: .NET **core** is open-source
And better than "is a" is "is a substitute for". https://en.wikipedia.org/wiki/Liskov_substitution_principle E.g. A square is a rectangle, but a square is not a substitute for a rectangle. We cannot reason about squares like we do for rectangles. e.g. if setting the width of a square also modified its height, and vice versa, then `square.Width *= 2; square.Height *= 2;` would actually quadruple the width and height of our square!
about "not desktop app" - the app could still be desktop, if it can access all the logs (from all locations), and merge them together :P Best, John
 var something1 = wrappedConnection.QueryCached&lt;int&gt;("SELECT * FROM Horses"); var something2 = wrappedConnection.QueryCached&lt;int&gt;("SELECT Name, Color FROM Horses"); Does the second call read the cached data from the first call?
I find it amusing that a site called "csharpdigest" is built using Ruby on Rails
I liked it. Here is the entire series for beginners, if anyone interested. [C# Tutorials for Beginners](http://www.fwait.com/csharp-tutorials-for-beginners/)
No. It basically takes a hash of the query (plus parameters if those are passed) to do hash look ups. If you want a cache hit to occur, best use identical queries. This class would probably not play nice if you use a lot of ad-hoc queries that aren't consistent.
This is ridiculous.
Thanks!
I've had this problem before. I resolved mine by updating the account information (password update) and renewing my sub with Microsoft through [Login Live](https://login.live.com/) so I souldn't have to re authenticate ever 2min.
Well if that's the case, then you need to use the split method as previously mentioned. I'm assuming you're splitting on a white space, so just do that and then work with the array.
I'm a company of one, so that's probably not a problem. I'm wondering if the nag logins are going to be a problem for me with community edition.
You could do it with reflection if the arrays are fields of a class. But you probably shouldn't.
Well, dotnetcore is open source, not all of .NET.
you dont think c#6 had lots of exciting stuff? lots of syntax improvements for sure. I could never go back to c#5 now.
thats awesome!!
Don't use a multi-line texbox, instead use the rich text box control. If you have the path of the image you can copy the image by its path and paste into a richtextbox control. Example: Clipboard.SetImage(Image.FromFile("image\path"); richTextBox1.Paste();
I missed the capital C on code and thought this was "Visual Studio(s) code is now open source". My jaw dropped for 5 seconds until I clicked the link, heh.
Could anyone tell me what I'm looking at? Is this JavaScript?
You said "more useless," making my point. If you have nothing valuable to add, resist the urge to comment. There are too many junky comments out there. I'm going to be optimistic and believe that after you've watched or listened, you'll have a valuable observation or two. Share those.
This is Visual Studio Code, meant to be cross platform: Windows, Mac, Linux. Found [here](https://code.visualstudio.com/) It's not an IDE and yes it's looks like this is written primarily in JavaScript. It looks like it's an app built through a web browser engine. I am guessing so it is more cross platform compatible. 
I think people in this thread are missing the fundamental purpose of VSCode. There are IDE's and there are text editors. Visual Studio and Eclipse are IDEs. Sublime Text, Visual Studio Code, VIM, and Notepad++ are text editors. IDEs are supposed to be a full suite of tools with every whizbang you could possibly need for your work, hence the name. Text editors are meant to let you fly through your code with a very narrow scope of what you need it to do. I manage my workflow between command line tools and a lightweight, no-nonsense editor with the ability to add plugins for features you absolutely have to have. I don't need SQL tools, the ASP.NET toolbox and graphical pageview editor. I don't need the built-in web browser. I don't need a GUI for my package manager. There's just a lot of bloat of features I never use the majority of the time, which is why I switched to using VSCode. I really HOPE they don't try to turn VSCode into a VS replacement because that'd totally defeat the purpose.
Yeah i guess I don't get what you're saying. To me as fast as humanly possible is that within less than a few seconds any code I run logs into Loggly and I can filter and search on any property of any of the objects I've logged into Loggly for real time analysis of the state of my system and code. More than happy to have the discussion, but I'd like to understand the criticism you're making. EDIT: Also they're platform agnostic, be it cloud, desktop, mobile, linux, windows, Mac OS, etc.
What makes it powerful? Why do you like it? A link would be nice as well.
Well, We are using RESTful WCF , so we're going to just use RestSharp I stead of a service reference, since its a pain to setup for rest
It's language agnostic and has built-in support for several languages, including TypeScript and Javascript. There's also a Go extension up on GitHub.
Or create your build on nant/msbuild and avoid project files entirely.
What is the chance to see Visual Studio for Mac OS now?
Well, as far as I've used it, they won't :)
It's built on top of the Atom IDE. Edit: Nevermind - it's based on Electron by GitHub, which is foundational to atom. Learn more here: https://discuss.atom.io/t/visual-studio-code-and-atom/16479
No, it's built on top of Electron, the application shell. AFAIK it doesn't share any code with Atom, other than Electron.
That's why you build external services that do the heavy lifting (like OmniSharp) and communicate via IPC, websockets, a pipe or something. This is what most vim, sublime, and emacs plugins do too for anything serious.
It's just a text editor right? It's not really meant as a replacement in the first place
Yes. It is more like sublime text, notepad++ or atom. 
Not totally sure what your app is supposed to do but you can use a observablecollection&lt;string&gt; with the contents of the button in list form as thr data source and bind it to the itemssource property of an itemscontrol and in the itemtemplate just have it create a button in a datatemplate with the content bound to the source. If you need a code example i can help you when i get home, im on mobile right now. Good luck!
Yes, I would appreciate greatly an example, as that's what I need most! 
On top of everything listed here on this thread, it's also the main programming language for the video game engine Unity.
MS isn't even charging for Windows 10 in most cases. But, yes. They make a crap-ton of money on their "Server and tools division"... why you'd think it's a loss leader is beyond me. **EDIT** You're also wrong about XCode. The app may be free, but you need to pay $100/year to to be an Apple dev. And that's *before* the 30% split on the apps you make. Shit, we have to pay $100/yr for our free and OSS extension (that we don't even take donations on) /r/toolbox to be included in the Safari extension gallery. 
Tools and server is something like $19b/year. 10% of that is a literal crap-ton of money. 
Yup, i paid $13K each for a few VS ultimate licenses
3,1gb?
Of course, was a bit confused at the moment because at my work we splitted our solutions due to becomming too large. 
Not just you and not today, it was for months.
&gt; My question is if we should make some sort of wrapper objects around the entity ones which we are already using for DB/WCF Yes. I know they look excessive when they are mostly the some properties as your entities but decoupling the database structure from everything else is important. There are also practical problems you run into if the ORM (EF) isn't controlling the life cycle of the entities. It also results in a more flexible and less crud based interface.
Well, you only pay 30% on apps you publish through the app stores. 
That's a minus. How much bloated horrors must lie in Visual Studio's codebase? How much legacy stuff most users will never use and would be better off as a plug-in?
The lock-statement will call this method: http://referencesource.microsoft.com/#mscorlib/system/threading/monitor.cs,5d517f5a97464e27 which in turn call system methods that guarantee this behavior of only one thread accessing the lock at a time. This leaves the C# land already and enters the process scheduler of the operating system.
Well, in my opinion it's hard to answer because it's wrong. There is very rarely a need to use arrays in modern code.
Actual visual studio was 3x10 + 1
Like Atom killed sublime? Unless Code is super performant, sublime won't die just yet. 
referencesource.microsoft.com runs fast for me.
I don't think that's accurate. Monitor is an *intra* process lock - it can only be used to lock between threads within the same process, and the reason why is restricted so is that it can do it very quickly. If it were calling into the kernel to perform locking, it would probably involve a context switch even in the uncontested case, which is not fast. Monitor is very quick. This is the same reason why SemaphoreSlim exists - its a quicker, intraprocess-only version of Semaphore. ... A better answer is that there are ways to use simple cpu instructions in such a way that you can be guaranteed to know when you have exclusive ownership of a resource. From there, you can choose to block if you find out you don't have ownership of the resource; and at that point, the OS does get involved. 
If I were you I would start from general programming tutorials, you are trying to dive into unity while not having any experience with OOP. Concerning your question - it's because on line 10 you close your MonsterLevel class definition, and "cost" and "visualisation" fields after that - are elements of class MonsterData. Correct code will look like this: http://pastebin.com/8saNJ6HA Anyway, I strongly recommend to learn programming before you continue trying making a game.
And this is why you don't straight up lie about skills in a workplace. It will always come out. In for an ounce, in for a pound. I have a feeling you're probably fucked. You're not going to be able to learn enough in 4 weeks to make meaningful business applications, and you're not going to learn enough to figure out how to solve whatever issue he's stuck on, or be able to identify any issues in the program. If you really put effort in every night, though, you will be able to learn enough to be able to stare at the code thoughtfully, ask a question about the code that's relevant, ask him why he didn't do a different way without sounding retarded, and then after he gives his reasoning be able to say "Oh that makes sense, yeah, that should work". God help you if he has a bug he needs fixed or asks you to add a feature.
There are some tutorials in the side bar here. Also a history search in this subeditor would show several suggestions from past posts. Depends on your median for learning, but there are several you tube posters out there, and some great books as well.
Or, you know, "This leaves the C# land already and enters the process scheduler of the operating system". 
With this announcement, how *ready* is C# for mac/linux development? I'm about to start a new side project, develope on different plattforms, and would like to get away from Java.
Personally I like the method of diving into a project as a way of learning. I like to pick projects that are just outside of my ability and will take about 3 months to complete. It does not replace learning fundamentals though. And it is possible this project is a little too far outside of your abilities. But that's your call. I use pluralsight for feet wetting, dot net perls for tidbits, stack overflow for problems. You can find instruction on youtube and other sites as well. Most importantly Google skills will really come in handy as you move forward. 
Heh, gotcha. Anyways this should be a good lesson in life nonetheless. To be pristine with one's word. I don't say yes to shit without knowing what I'm saying yes to :)
I would recommend NUnit. (Have been using it for a while, have no real opinion on Microsofts test framework) Bonus feature: you can run tests outside of vs in the standalone nunit executable, or internally using the builtin test runner.
I like them. Paradoxically I dislike and discourage comments in the methods themselves. Take a look at GhostDoc http://submain.com/products/ghostdoc.aspx. We use it to add a basic comment to a method, then edit the generated text appropriately. This applied to externally visible members, but even I'm not OCD enough to insist that every enum member be commented.
Okay that is such a huge help, thank you so much. I am installing Visual Studio now and will have a go at your list. Thank you :)
At this point, give up the lie and go for plan B, backing away gracefully. If you actually just said "a bit", you could say your experience at Uni wasn't very comprehensive as you were lead to believe, just really basic stuff. Really that's the best I can suggest. Just back away slowly and hope it never ever comes up again.
That's my point - it doesn't do that. An uncontested lock doesn't touch the OS. Optimized code doesn't even leave the method. Only when the lock is contested is the OS involved. 
/r/flukus is correct, `Response` is a property on the controller object. When you call the controller outside of a web context, the property is null (hence the exception). This SO discussion may be of help: http://stackoverflow.com/questions/18098585/moq-mocking-mvc-controllers-response-cookies-clear
How long depends a lot on you, but you want an answer, so here's one from recent experience. You can easily learn enough for a basic understanding in 4 weeks. A close friend of mine with limited programming background (mostly non-Object Oriented scripting languages and limited experience in those as well) did just this. He's a book guy and was extremely motivated (his desire was to convert a PHP application he wrote and was saddled with supporting long-term into a C# program, as well as get a job as a C# developer in the future). I gave him "Beginning C# Object-Oriented Programming" (2011 edition, all I had). He completed the book in a week and went on to C# In a Nutshell. Total time was 4 weeks and when he was done he was well beyond a "basic understanding"; I'd put him at an intermediate (on the early side) level and he'd actually rival several folks I've worked with in the past who were considered *experienced*. He was weak in generics (more around knowing when to implement a generic class, not what they are or how to use existing generic implementations), moderate/weak on LINQ, beginner on MVC specific things, but his core understanding was impressive -- OOP concepts/best practices and the actual code he wrote was better than some of the code I've been handed by professionals. It lacked some things that an experienced developer would find obvious (but that's subjective as heck) but it wasn't *riddled* with common mistakes and showed a pretty solid, well thought-out design (naive in some places, but nothing out of the ordinary). He could reason about his design in a way that was well thought out. He spent about 40 hours each week reading, and developing either with code he wanted to write or exercises from each book (beyond his full-time job).
Right, but that's the entire *point* of Monitor - it doesn't touch the OS unless it has to, because doing so is very slow. Contrast that with Mutex, which uses the OS for everything - hot path or not - and its performance suffers because of it. This is the *entire* reason why we have Monitor vs Mutex, SemaphoreSlim vs Semaphore, etc. The distinction is incredibly important for correctness' sake and performance's sake.
What the hell does core count have to do with the correctness and performance of the choice between Intra-process and Inter-process locks? If anything, Monitor would perform light-years better on a 36-core box than Mutex would.
yes they are. they don't have to be.
If it was that casual dude just read his code, and then straight up say "Its been so long I dont really remember much." I think your biggest mistake was not telling the truth AGAIN and saying yes to spot checking his code, and then putting it off for a whole month... Go here https://www.elance.com/ and hire someone to look at it and give you as bunch of advice. Then bring his code back to him and school him with it.
I typically make my own extension method so I never forget to call IsEnabled. logger.DebugIfEnabled(() =&gt; DoMyExpensiveThing()); # public void DebguIfEnabled(this ILogger logger, Func&lt;object&gt; getMessage) { if(logger.IsEnabled) { logger.Debug(getMessage()); } }
All depends on your requirements. What platforms are you looking at, Windows desktop? Windows Store? Multi-platform? For Windows and Windows Store, I'd say C# and WPF is the standard. For multi-platform, there are some definite challenges in using C#, as WPF only really works on Windows. By Graphical, do you mean an app that has a GUI, or a graphically-intensive app like a 2D or 3D game? C# can do any of those, and there are some good 2D and 3D libraries and platforms for C#, Unity3D, Paradox, etc...
MSDN has been slow at times for me over the past few weeks as well. 
I'll address your points 1 by 1. &gt;Loggly is quite close to what I would want in a Log Viewer. Note that even in their tutorial, they say "Welcome to loggly ... cloud-based management system". Fair, but in their context it really just means their product is an SaaS hosted in "the cloud"...aka a web app. I can understand your trepidation though. At least they let you designate an S3 account to permanently dump logs to for further management if you need to. &gt;it's not really real-time (their real time is beta, and from their doc, is a bit behind). It's probably not a big issue though Yeah it may have a couple of seconds lag...along this line, my one nitpick is no live, constantly updated view as you get in something like Seq. &gt;I don't see any way to do word coloring, or line coloring for that matter. That is very important to me. Interesting idea. I usually just filter, but I can see the usefulness there. I also really like the grid view + my text editor for viewing a lot of logs at once. &gt;I don't see a way to search within the results (like, a simple Ctrl-F) Yeah there's no built in ctrl-f, but I think it depends on what exactly you're trying to search for. If you're looking for a particular set of logs that have your desired property values, just click that value either in a known good log, or use the left panel to click a property and see the enumeration of present values and how many logs match that value of that property. This is infinitely more useful with well structured and labeled log messages/meta data. &gt;Since it's browser-based, it is slow to deal with tens (hundreds?) of thousands of messages. By that, I mean, say your result yields 50k+ rows. How will you navigate them? And no, refining the search is not always the answer If I need to analyze that many in a way that Loggly would not let me handle (an rarity for me anyway), I tend to use the Grid view, download it as TSV, and throw it into Sublime Text using the Advanced CSV plugin, which I've become extremely adept at using for all kinds of delimited files. &gt;There's no type-as-you-go search (in your search results, just type something. As you type, it will take you there). Agreed, some auto completion would be nice, but in all honesty I rarely actually use the search bar for anything but specialized functions like _missing_ or _exists_. A web based app that solves these issues would be extremely useful. A desktop one less so a, I have folks on Linux, Mac, and Windows of varying levels of technical and development proficiency (0 to expert) that all need to be able to view and search logs, and cross platform desktop apps tend to require a lot more work than web apps.
Hi again. the question for if the employee works in london or a union are 2 different questions. So i would ask the user if they work in london and then i will as them another question if they work for a union. How would i add a bool to the london question please? So if they work in london i want them to enter "L" and that should be true?? thank you.
So would you say that c# is suitable for various graphical applications including basic gui ones and 2d and 3d games?
AgeNumericUpDown.Value = Convert.ToString(x.age);
Can you double check the type of the object "AgeNumericUpDown"? Textboxes don't have a Value property.
AgeNumericUpDown is a numeric button thats pre created for you in visual studio and it looks fine to me
Try changing &gt; AgeNumericUpDown.Value to &gt; AgeNumericUpDown.Text
Ahh i think that worked 
Yes. Personally, I don't like Unity very much, I haven't tried it out in a while and I hear the Visual Studio integration has much improved, but when I looked at it Unity felt like writing a bunch of scripts, not structured C# projects. That said, Kerbal Space Program, Cities Skylines, and a host of other big titles have been written in Unity. Personally, I'm really looking forward to what [Paradox](http://paradox3d.net/) looks like in a year. Some people will tell you that no serious 3d games are written in C#, or that C/C++ is the only place to do such things. They have a minor point about performance, but you take a development productivity hit moving from C# to C/C++ that they tend to ignore. A completed game written in C# is better than a 75% completed game in C/C++ if you lose interest and feel bogged down too much to want to complete the last 25%.
You're absolutely right about Unity. It's not a "C# game", it's a Unity game where your scripts are written in C#. It uses Mono to maintain cross-compatibility, so you're limited to .Net 2.0 in terms of .Net features, but Unity makes up for that in its API where it'd be painful to not have something. And Unity is great for indie type games since the barrier to entry is so much lower than more "professional" engines like Unreal. That said, you get what you get with Unity, and you need to do things "the unity way" to get the most out of it. The more you try to fight Unity, the less productive you'll be.
With C# especially, it's incredibly easy to write easy-to-read code as long as you name things correctly, use constants liberally and use enum properly. The only time a comment is justified is when you're doing something that's really against the grain with justification. Otherwise most comments are just redundant and provide no value.
Console.Write("Enter L if you work in London or any other key if you do not: "); if (Console.ReadKey().KeyChar == 'L') { London = true; } else London = false; Console.ReadLine(); ive got this atm..how can i modify that to get it your way??
First add Near your declared data types, usually at the top of your code. string isLondon; string isUnion; Ask for user Input in body of main() Console.Write("(L)ondon: "); isLondon = Console.ReadLine().ToLower(); Console.Write("(U)nion: "); isUnion = Console.ReadLine().ToLower(); Then later when appending you string you can check conditionally if the user is london or union if (isLondon == "l") // then do stuff else // must not be letter L or empty if (isUnion == "u") // then do stuff else // must not be letter U or empty
I feel that if your code requires comments to understand, then it is too complex and you need to re-examine your code structure and naming conventions at least. I almost never comment my code. Generally, I'll only comment when I'm doing something that looks stupid but can't be done any other way because the logical ways don't work for some reason. (Mainly so I don't look stupid. :)) Now, on the other hand, if you're writing a public API that will be consumed by others who do not have access to the souce code--especially then you should write XML comments. You can use those to make .html reference or .chm file.
Depends on your requirements. For graphic intensive applications, coding against the bare metal (e.g. C/C++/ASM) is *always* going to be the most performant. There is no JIT or intermediate steps your hardware is going to have to perform to get the instructions it needs to do. We're talking serious crunching here nowadays, like rendering Avatar and stuff. For like a basic GUI? Sure. It's fine. Why do you care? If you're a 'learner', my advice is start from the lowest level to the top. C/C++ and a bit of Assembler (x86 should be fine) will do, then learn some higher level stuff like C# and/or Java. 
Try setting the date format on the xml serializer property/object directly. Not sure if the request one is actually getting used (though I'm on my phone so it's hard to tell by looking at the source on github) 
C# is great for game development. In fact, Unity Engine makes heavy use of C# (or JavaScript if you don't know C#) Edit: I stand corrected in that I should have clarified only custom scripting is done is C#.
Mono apps run pretty much everywhere if you want to be cross platform
Sorry I'm late responding to this. Been slacking and am just now jumping back in. I'm still using Windows Forms. I'm trying to figure out how to create a class that can be accessed by multiple forms. I created a class in the namespace, and that all went fine...then I created an instance of the class in form1 and that went fine...but when I go to form2, I can't access any of it. Where should I have created the instance of the class? Thanks!
Sorry I'm late responding to this. Been slacking and am just now jumping back in. I'm still using Windows Forms. I'm trying to figure out how to create a class that can be accessed by multiple forms. I created a class in the namespace, and that all went fine...then I created an instance of the class in form1 and that went fine...but when I go to form2, I can't access any of it. Where should I have created the instance of the class? Thanks!
No, I'm just putting DB results in a table. When I hit the end of one group of rows (based on a single columns value), I want to add a summary row to the table and then continue on with listing out the next group (based on that same column value). It's accounting records, tons of tedious records and an ugly HTML table. This is one of the projects I "inherited" so I can't change it under time constraints. The results are already grouped coming out of the SQL db, I just don't have a mechanism in place in my razor view to add a summary row after each group and then continue on with the next ones. 
I think I disagree here. I am taking a page from Microsofts book on this one and enjoying it so far. Here is the example I posted above if you do not want to click on the pastebin. // Bad. /// &lt;summary&gt; /// The object list. /// &lt;/summary&gt; /// &lt;value&gt; /// The list of objects. /// &lt;/value&gt; public List&lt;GameObjects&gt; GameObjects =&gt; CollectObjects(); // Good. /// &lt;summary&gt; /// Gets a current list of all detectable in-game objects. /// &lt;/summary&gt; /// &lt;remarks&gt; /// The operation of obtaining and maintaining a current list of in game objects can be a resource intensive /// operation. /// It is suggested to cache results when possible and to think of further ways to reduce calls that /// update the list of game objects, if possible. /// &lt;/remarks&gt; /// &lt;value&gt; /// The list of all up-to-date detected game objects. /// &lt;/value&gt; public List&lt;GameObjects&gt; GameObjects =&gt; CollectObjects();
This is awesome. I'm so glad there are people out there like you that spend your time and donate your expertise to create something like this and not only give it away for free, but show exactly how you did it. Quick question, is there a way to install this on an offline development computer? I'm not familiar with github (because I can't use it due to my development computer being offline). Can I just download the source and use it that way (using sneakernet to transfer it, of course)?
Alright, wanna shoot me the project folder in a PM? You could use [Mega](https://mega.nz/)
CollectObjects into a List of GameObjects is self-explanatory. That entire comment is just masturbatory cruft. And when working on a large team, the first example is 99% of what you'll get. So it's not worth it.
I do. 
Aside from my defense that "Microsoft does it", I'll add how I feel personally about them so far. Yes, it's clear looking at the code line for line in a editor of some kind that the GameObjects property gets a list of GameObject types by calling the CollectObjects() method. &amp;nbsp; So now what do we *not* know about this property? * The list takes a lot of resources to generate. It's not a cached list, or a small list when created, neither the list it's self or each object inside of it. * The list is of all *current* and *detectable* *in*-game objects. This means likely only objects from within a certain radius will be created here, that are intended to be visible to the coder. &amp;nbsp; So assuming I took your route - and decided to not spend 10 seconds writing the comments, I'll give an example of a possible issue that could occur as a result causing the library-end-user a lot of headache and a bad taste in their mouths about your library. 1. User sees the library, decides he wants to use it, creates a project and adds your .dll as a reference. 2. User sees the GameObjects property with zero commenting. 3. User creates a timer call back with an interval of 60/1000, where the call back gets the GameObjects property, and evaluates it for a condition/set of them the user is looking to log. 4. Now this user not having any information about the property via lack of comments, is calling a call back already before the last one finished. Over and over.. yikes. &amp;nbsp; Now imagine we did comment it: 1. User sees the library, decides he wants to use it, creates a project and adds your .dll as a reference. 2. User sees the GameObjects property with detailed commenting. 3. User sees the property is expensive to call and should be cached/avoided when possible. 4. User implements his own way of doing this, everything works great. 
PluralSight has a ton of quality tutorials from very beginning to advanced on .net MVC and all of the related stack. It's not very expensive for what you get. https://www.pluralsight.com/ 
This has been covered a lot. I'd recommend a search of this subreddit. A few sources are asp.net/learn, codeproject.com, and pluralsight.com ($) but has a free trial. All of these have great content.
What kind of sadist would make you use WCF now days. Call the professor out on his/her BS assignment and use WebApi instead... :) 
PS is restricted by default you have to enable it on the other server. 
&gt; I can understand your trepidation though. At least they let you designate an S3 account to permanently dump logs to for further management if you need to. Right &gt; Interesting idea. I usually just filter, but I can see the usefulness there. I also really like the grid view + my text editor for viewing a lot of logs at once. Yeah, not really ideal :D &gt; Yeah there's no built in ctrl-f... Well, it depends. The thing is sometimes you don't know the exact thing yourself - so you just start typing... I find this extremely useful. One more thing my app has - "Find Preview" - so that it previews your search results real-time (1000 surrounding rows) &gt; If I need to analyze that many in a way that Loggly would not let me handle (an rarity for me anyway), I tend to use the Grid view, download it as TSV, and throw it into Sublime Text using the Advanced CSV plugin, which I've become extremely adept at using for all kinds of delimited files. Well, that's far from ideal with me. Sometimes I need to deal with 10 logs / day (all of which are 4-30MB in size or so, some even bigger). I need to find information really really fast. &gt; Agreed, some auto completion would be nice, but in all honesty I rarely actually use the search bar for anything but specialized functions like missing or exists. Well, IMO this is one of those things if you get used to, you can't leave without :) &gt; A web based app that solves these issues would be extremely useful. A desktop one less so a, I have folks on Linux, Mac, and Windows of varying levels of technical and development proficiency (0 to expert) that all need to be able to view and search logs, and cross platform desktop apps tend to require a lot more work than web apps. I do understand your preference for a web app. But for me, it's exactly the other way. I want speed and dealing with huge logs. I want ease of use, coloring, and so on. That's just not possible for web apps. Having said that, my app is written in c#, and for sure I'd like to port it to Linux as soon as possible. Future does look bright though - a lot of .net has been open sourced by MS, Mono is getting better and better. MS jut released its latest VS that compiles to Linux... So I think we're pretty much months away from that :D Best, John
Testing if test is an int doesn't change the fact that you're trying to multiple a T by 2. That doesn't make sense to the compiler. Here's a StackOverflow link that answers your question. Please pay attention to the first answer for why you shouldn't be doing what you are trying to do, and the second for how to accomplish what you are trying to do. http://stackoverflow.com/questions/8171412/cannot-implicitly-convert-type-int-to-t
thanks!
Well you can do a few things here: 1. Make a class that is basically the "Driver" of the program. The driver will run each form, so it you can load different forms into the driver. You can have the player stats in this class, because then the only thing you're switching out is forms and everything else remains constant. 2. you can create a 'player' object, and each form can have a 'player' parameter in the constructor. When you construct a new screen you can "hand off" the player object from one screen to the next. edit: formatting
You could, for example, modify the constructor for Form2 to take an instance of that class as a parameter.
So you have a list of lists? Or a dictionary of string,list? What's your input data?
I don't like this "introduction". First, I don't really like introducing mocking framework as introduction. Mocking is advanced topic in automated testing and generally, mocking should be avoided as it makes it hard to refactor the API of the class. Second, the article doesn't show WORKFLOW of unit testing. The best (and IMO only way) to make good automated unit tests is though TDD and it's Red, Green, Refactor cycle. Making tests outside this workflow is going to look really unnecessary and tedious. Last is the example code that is being tested. Code that only validates inputs and throws exceptions is not interesting enough. Some people would even say it is not that necessary to unit test this code. Your example code should have some nice behavior, and even better if with following tests, the behavior changes enough to require drastic refactor of internal design of the unit. If you really want to have "introduction" to unit testing, then best so far is this : http://www.objectmentor.com/resources/articles/xpepisode.htm