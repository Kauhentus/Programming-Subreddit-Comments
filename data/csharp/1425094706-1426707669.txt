this really bothers me. Why does he change styles like that? http://i.imgur.com/FjS37qT.png also whats with this spacing? http://i.imgur.com/zuL7DLM.png whats a database strictures? Is that supposed to be database structures? 
&gt; var KOList = JsonConvert.DeserializeObject(result.results.HighestIV.ToString()); Your serializing, then deserializing HighestIV even though you just deserialized it above. You should just be able to write: var KOList = result.results.HigestIV; 
Which do you think sounds better: &gt; Wrote SQL statements for getting data into and out of the database or &gt; Analyzed and corrected troublesome SQL query used for blahblah reducing query time from 26 hours to 500 ms and saving the company $1,000,000 per day Good bullet points on a resume have an action, a result, and an impact. What did you do? What did that result in? What was the impact to the company/team/project. Both bullet points will catch somebody doing CTRL-F SQL, but the first one will get you laughed at by any reasonably competent human being reading your resume while the 2nd one might get you an interview.
The thing is, since you wrote this it is very likely an example of your coding style. If it weren't that would mean you went out of your way to intentionally write bad code for your resume. Is that what you did?
You should really throw in a: try ToGetHired();
 catch ( NotHiringException bigMistake ) { // ... }
It actually boils down to operations at a driver level. Stephen Cleary has a great article on it. If there's interest, I'll see if I can find it. It goes down the rabbit hole pretty deep, but interesting nonetheless. 
You tell the consumer that null is not a valid value, and it will throw in the caller's code instead of inside the setter.
No. You should read more of my postings, then you'll never say this again.
The right way is to stick to one practice. :-) Just don't mix them wildly.
Everyone can be a dick. It's not limited to programmers.
&gt; It actually boils down to operations at a driver level. That's kinda what I meant. The OS is calling async IO APIs that the driver must implement. However, some cheap hardware implements that *in software* in the driver, rather than in hardware.
You should get your keywords from the job posting.
 junk
Context please. The error message you are receiving is telling you that you are trying to convert a string(or a list/array/other collection of characters) into a single character. But you are probably not blatantly doing that since it's a fairly obvious mistake, so some context would *really* help us out here. Can you provide us with the piece of code that is producing the error? Where you are defining your variable, you're doing it in a really silly fashion. Usually when you create a c# file you should instruct what namespaces to use so you don't have to navigate through that hellhole of *System.Collections.Generic.IEnumerable*. anyway what kind of variable do you want 'cakeName' to be? If a string, no need for all this generics nonsense, just simply declare it: `string cakeName;` and done. But it from what little context we have it sounds like you are declaring 'cakename' as a string(or generic collection of 'char' objects in your case) and later asking for it to be a character, does your code look something like this?: `System.Collections.Generic.IEnumerable&lt;char&gt; cakeName;` `if(cakeName == 'A') *DoStuff()* ;` If so, your problem is this; When you define 'cakeName' you define it as a string, yet when you are comparing it, you are doing so to a character. Since the two types char and string are not the same type of data, it is impossible to compare them. To fix this there are different solutions. If you are trying to see if the string 'cakeName' is the same as the character 'A', just declare 'A' as a string. Also since you defined 'cakeName' as a generic collection of characters you must first cast it to a string, so your comparation would look like this: `if( (string)cakeName == "A" ) *DoStuff()* ;` If you are trying to see if the first letter of 'cakeName' is 'A' you should do something like: `if(cakeName.length &gt; 0)` ` if( (string)cakeName[0] == 'A') *DoStuff()* ;` And finally if you are trying to just compare two different strings, your code should look something like: `string cakeName;` `if(cakeName == "Example") *DoStuff()* ;` Edit: reddit formatting is being stupid and not letting me do code blocks for some reason. imagine indentation where necessary
because they are not both char. One is a collection of chars, one is just a single char. Think of IEnumerable is just another object type. In this case like an array. You can't convert an array of chars to a single char. You have to pull one of the elements out of the array, those are type char. If it's the first one then use mychar = cakeName.First();. If it's more then one you'll need some way of determining it's the right one. like: int i = 0 foreach(char c in cakeName) { if (i==3) { //the 4th char mychar=c; break; } i++; }
I am aware of dynamic types and anonymous types. I didn't phrase my question very well, my bad. But I didn't try to say it's a good idea to use dynamic types I'm general, but it could make look such a code CV look just cool. That's it. 
so cakeName[0] is a char, cakeName[1] is another, but cakeName is NOT a char.
Malware detected by AV.
Except a) it requires the extra complication of working with an amplified type, b) it's possible to "cheat," whereas with a null check it isn't, and c) it still only throws -- failing fast at runtime is better than nothing, but without compiler support you still have the possibility of encountering an error in production, so it doesn't really buy you much. Have you checked out Code Contracts at all? It's a very promising approach and I'm a little disappointed it hasn't caught on more.
I'd say just poor error checking and handling in the application. In reality, the data won't always be perfect if coming from a 3rd party/user so you should take this into account, and feedback relevant messages to the user letting them know their data was crap before even getting to the null reference errors. Basically do more checks during the methods, yes checking for nulls is always a PITA but if this was done, you wouldn't be seeing the problems mentioned above.
I can think of a few causes of null problems from a developer perspective: *1. Lack of input validation* Input either from users or other systems. In this case, the outermost layer that receives the input should do some null checking and throw a more explicit error message, or alternatively return a result explaining that the user needs to try again. *2. Bad specs or docs for external data or APIs* Assumptions were made that something is guaranteed to never be null, but in reality it turned out to be null anyway. *3. Simply bad code/algorithms* Lack of experience, time, skill or motivation causes code to be written in a way that nulls are created and thrown around when they shouldn't. -- But there's also the bigger picture to consider. Why wasn't this discovered in testing/QA? Did the requirements consider empty fields etc? Were the developers given enough time and resources to analyze the problems? -- As far as debugging goes, I guess better logging would help a lot. For example, in every method that accepts data directly from a user or other system, write a log message with all the input.
Yep, tried restarting it. And there shouldn't be anything funky. The only changes from the basic MVC5 template are the addition of those refs/packages, a couple of Controllers, several database Models, and this DbContext. 
Yep, got it building right before I saw this reply by removing that line. Thanks for your help!
Write Game of Life. Together with pluggable and configurable storages to save/load current states, unit tests, two different GUIs (e.g. console and wpf), perhaps a editor and a remote highscore and of course fully separation of concerns.
You are being harsh. Author has just described the string. The details about how it is the immutable and all. Author has not described the difference between value and reference type. overall it is a valid article.
Resharper will highlight potential places where Null Refs can happen in code. It puts a little line under the problem area and suggests you do a null check before running. 
Yeah, haha, we do apparently. I have never met any of them personally, but they ARE on the org chart. Maybe it's all a ruse. :-) 
`NullReferenceException` (Object reference not set to an instance of an object) is an incredibly common exception. It's always because of a programmer mistake. It should be fixed in the code even if there is a workaround because it's always a programming error. There is never a valid reason for `NullReferenceException` showing up in the log. &gt; the stack trace thrown when it happens actually included rhe variables and which was the offender. There has been some discussion about this on CoreCLR, but it seems that there is no real reasonable way to implement a functionality that would tell you about which variable was null because it's an exception thrown by the runtime, and not the programming language, so it really cannot know what variable in question is null (because the null value resides on the stack). It's too late in the process. &gt; I have access to the source code, .pdbs etc. But it's very time consuming to check out all that code, try to decide how low in the stack trace to start, and rebuild the assembly with extra logging written in. Actually I find `NullReferenceException` by far the easiest error to spot. I can in 95% of cases find out what variable is null by simply looking at the code. &gt; Sometimes after all this I can figure out what the issue is (bad customer data, configuration related, etc.), and sometimes I have to escalate it as a real defect. As I said, this is always a defect, but you can probably usually work around it when you know why it happens. So even if you do find a workaround, you should still report it as a defect. &gt; Is the software just badly written with regards to error handling? Depends on the error. `NullReferenceException` shouldn't occur in production code (although I would claim that Exceptions should occur at all, but as long as we are being pragmatic they will) &gt; I can't believe these process is typical of anything at larger companies using a dotnet Web app. It's not just .NET though. You get the same error in Java (`NullPointerException`), and C/C++ applications will just crash and burn if this happens ("Access violation" on Windows, or "Segmentation fault" on Unix). However ideally it shouldn't be common. It's always the product of sloppy work, and you will find sloppy work everywhere by everyone. No one produces perfect code 100% of the time.
redditor for 1 hour Seems legit
Download the code: http://aka.ms/scspostercode It is interesting to see the similarities and differences.
http://www.reddit.com/r/learnprogramming/comments/2a9ygh/1000_beginner_programming_projects_xpost/
There's a lot on [MSDN ](https://msdn.microsoft.com/en-us/library/gg406140.aspx)on it.
If you want something where CRUD just isn't an issue, learn entity framework. For simple CRUD operations, it can save you tons and tons of time. That all said, one of the other posters is correct, make sure you finish your project before you branch out like that, so you don't jeopardize your grade.
Sorry, but I don't see anything novel. All you really do is name off a couple very high-level architecture patterns and some libraries.
Have you checked out log4net? They have lots of "appenders" to choose from out of the box.
From your description it sounds like poor quality software. The process you have to go through to diagnose the issues sounds like it could be easier though. You might be able to use the remote debugger to step through the application without redeploying. There could/should also be the possibility to enable more detailed logging. Another thing that might make life easier is if there is a test suite, adding a test case for every bug you encounter. But to be honest from your description it sounds like there isn't a test suite.
Rather than upping the complexity, maybe investigate some architectural aids and development practices. Check out IoC, write unit tests, program by interfaces. Check out TPL even! These are the things I wish I learnt before hitting the industry, particularly extensive unit testing experience
Get the devs to use or build something like [Sentry](https://getsentry.com/)
Nice! Is there one for C# and Java?
I used to when I had management responsibilities, and at my last job the CTO regularly performed code reviews. At my current job the CTO actively writes features. 
&gt; Neither did OP mention that he's using threads. TPL still requires locking If he's using TPL, he's using threads. Just not threads he created himself. 
In the strings and characters example, this C# line is wrong: var sayHello = string.Format("%s, %s", hello, world); It should be: var sayHello = string.Format("{0}, {1}", hello, world);
Thank you very much!
I would not jump into Prism unless you are comfortable with WPF and MVVM. You say your new to visual studio and WPF. I'd learn WPF and mvvm to where you're comfortable with it first. With that, let me ask you these... Are you comfortable with heavy interface usage? Are you familiar with dependency injection? Do you know what relativeSource and how to use it?
The best way to debug something like this is to step through every line of code with a concrete example to work out what it's doing. For example, when intNum = 10; what does the line which calculates x give you? What about when intNum = 20; ? So what does that x value really mean? Could you change the variable names to make this clearer? Then what about the calculation of n in each of those cases. So what does n really mean? Again, could you make that clearer by using a better variable name? So finally, how is 'roman', the returned value calculated? What does it mean and does it mean what it says by the name? Good luck with your homework. 
We have never used string builder and I don't know what sb.Append is/does. I'm assuming it does along with string builder.
Yeah, what it is doing is counting the amount of characters in the numeral like if it was IV it would say 2 instead of 4. I need roman to return a string roman numeral so if the number given was 4 I'd want the string to return "IV". Thanks for the luck, I'll need it. It's actually a part of a big project.
You're looking at the first post on stack overflow, which is the question about code that isn't working. I'm guessing you did the same before posting here, which is why you ended up with code that doesn't work. :) Scroll down to the answers for [mostly] working examples, the answer with most votes is pretty simple, assuming you know what a recursive function is.
You need to step through the code and try to understand the logic behind it like dmeeze said. If you cant, try restarting from scratch. You could break this function down into smaller parts which would make it easier to understand. When you have the integer, what is the first step to getting the roman numerals? You need to find the largest roman numeral that fits without going over. Then you find the next largest, and so on. Thats what this is essentially doing. Hint: Your function is returning the string roman which is being assigned temporary information. The actual roman numeral characters are being written to the Console.
TIL the existence of tuples
Always using statement blocks also can prevent bugs and security issues. While not C# related, a few years back there was a bug in iOS that allowed phones to be hijacked due to an if statement that didn't use the blocks. This statement was updated to do multiple things when the condition was hit, without adding the the blocks in. Once Apple discovered the cause, they quickly updated their coding standards that all control statements, no matter their size, required statement blocks, then did a massive Refactor. All that said, it's just darn good practice to always use statement blocks on control statements, even if they're not required for single line statements. 
SetString() is returning roman, which **is** a count of the number of roman digits. If you want the actual roman numeral you have to build a string in your while loop, instead of writing it to the console.
http://numerics.mathdotnet.com/
They could have said the same thing for addition of 32-bit integers. C# creators could have just sat back and said "our users can just make a call to a C++ library if they want to add these." Additionally, they could have coped out and said, "sometimes, people use 16-bit integers, sometimes they use 64-bit; since needs can be different, we don't need addition support for any of them."
Use the proper language for the job.
Have you checked whether it is connected and if you use TCP?
Indeed, it would be like complaining why PHP doesn't support CLI without 3rd party libraries
It's always about cost-benefit. Every library that ships with the .NET framework has to be written, tested, and supported until the end of time. The cost isn't only to Microsoft - the more stuff that's included in the BCL, the larger the footprint of .NET - for all users and applications. Further, high-performance numerical computation is not trivial to implement, especially in a generic way that works across all the platforms and architectures .NET can run on. And since C# is used primarily for business applications instead of scientific computing, the value of an in-box kind of BLAS is limited at best.
Did you open your link? &gt;The following code example demonstrates sending an e-mail message asynchronously. Yes, SmtpClient can send messages asynchronously. 
What languages do have linear algebra built-in? (Honest question)
What do you have so far? What have you tried?
Although intended for graphics and game development you can use [System.Numerics.Vectors](http://www.nuget.org/packages/System.Numerics.Vectors) which is available on NuGet. On the next JIT (RyuJIT) compiler it will be hardware accellerated through SSE or AVX.
What doesn't work? What's the expected outcome? What's the current outcome? One thing I can see is that you never define `a`, yet you use it.
[Wikipedia has one](http://en.wikipedia.org/wiki/Comparison_of_C_Sharp_and_Java). edit: removed mobile link since a million bots pointed it out.
Non-mobile: [Wikipedia has one](http://en.wikipedia.org/wiki/Comparison_of_C_Sharp_and_Java) ^That's ^why ^I'm ^here, ^I ^don't ^judge ^you. ^PM ^/u/xl0 ^if ^I'm ^causing ^any ^trouble.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Comparison of C Sharp and Java**](https://en.wikipedia.org/wiki/Comparison%20of%20C%20Sharp%20and%20Java): [](#sfw) --- &gt; &gt;This article compares the __[C#](https://en.wikipedia.org/wiki/C_Sharp_(programming_language\))__ programming language with the __[Java](https://en.wikipedia.org/wiki/Java_(programming_language\))__ programming language. While the focus of this article is mainly the [programming languages](https://en.wikipedia.org/wiki/Programming_language) and their features, such a comparison will necessarily also consider some [platform](https://en.wikipedia.org/wiki/Computing_platform) features and some [library](https://en.wikipedia.org/wiki/Library_(computing\)) features. For a more detailed comparison of the platforms, please see [Comparison of the Java and .NET platforms](https://en.wikipedia.org/wiki/Comparison_of_the_Java_and_.NET_platforms). &gt;Java and C# are similar programming languages that are statically, [strongly](https://en.wikipedia.org/wiki/Strong_typing), and [manifestly](https://en.wikipedia.org/wiki/Manifest_typing) [typed](https://en.wikipedia.org/wiki/Type_system), both are [class-based](https://en.wikipedia.org/wiki/Class_(computer_science\)) [object-oriented](https://en.wikipedia.org/wiki/Object-oriented_programming), both are designed with semi-[interpretation](https://en.wikipedia.org/wiki/Interpreter_(computing\)) or [runtime compilation](https://en.wikipedia.org/wiki/Just-in-time_compilation) in mind, both use [garbage-collection](https://en.wikipedia.org/wiki/Garbage_collection_(computer_science\)), and both are "[curly brace languages](https://en.wikipedia.org/wiki/Curly_bracket_programming_language)" like [C](https://en.wikipedia.org/wiki/C_(programming_language\)) and [C++](https://en.wikipedia.org/wiki/C%2B%2B). &gt; --- ^Interesting: [^C ^Sharp ^\(programming ^language)](https://en.wikipedia.org/wiki/C_Sharp_\(programming_language\)) ^| [^Multiple ^inheritance](https://en.wikipedia.org/wiki/Multiple_inheritance) ^| [^Javan ^rhinoceros](https://en.wikipedia.org/wiki/Javan_rhinoceros) ^| [^Java ^mouse-deer](https://en.wikipedia.org/wiki/Java_mouse-deer) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cp1mt61) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cp1mt61)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
Reformatted: using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; namespace Change_Converter { class CentsToChange { static void Main(string[] args) { int change = 0; int quart, dim, nic, pen; Console.WriteLine("Input Change Value and Press Enter"); change=int.Parse(Console.ReadLine()); quart = change / 25; //calculate the remainder int p = change % 25; dim = (p / 10); int c = a % 5; pen = c; Console.WriteLine(quart); Console.WriteLine(dim); Console.WriteLine(nic); Console.WriteLine(pen); Console.ReadLine(); } } } Currently, the line int c = a &amp; 5; will cause this to not compile, since you haven't defined any variable "a".
Whenever I've used SQLBulkCopy (never tried the Ce version, didn't even know one existed) I write the data to a temporary table, and then execute sql afterwards (obviously in the same sql session) which inserts/updates as required. I don't know if Ce even supports temporary tables, but it sounds like you need a staging table at the very least.
Not really an answer for your question, but, RE: &gt;Sorry again for the complete newbie question Please, don't be apologetic. Everybody started somewhere.
Is there a pure C# Quick Reference Poster floating about anywhere?
Yes, this is still the case. Sadly, something the indie games section on the 360 doesn't seem to exist on the xbone. 
What graphics/media API will the universal apps sdk support? Some kind of managed directx?
I do not believe this submission is appropriate for the **C# language** subreddit and as such has been removed. I encourage you to post it to a more appropriate subreddit (perhaps /r/learnprogramming, /r/programmingdiscussion, or another discussion medium.)
Use http://msdn.microsoft.com/en-us/library/system.web.ui.htmltextwriter.aspx for writing HTML
Thank you very much for the solid feedback, i think adding an interface is a great idea to target the logger(s) rather than controlling a property is something i will implement. Ditto on the exception handling.
`StringBuilder` only makes sense when you have an unknown number of appends ahead of you. If you have conditional appends and/or appends inside a for-loop, `StringBuilder` shines in those instances because it handles the growing buffer for you. However, in your code example, `StringBuilder` gives you nothing. In fact, it hurts performance. C# automatically converts string concatenations to a single `String.Concat` call. It has the advantage of iterating over all the strings, creating the buffer once based on the total length (no resizing necessary), and filling the buffer. Also, it is worth noting that `StringBuilder` is designed to allow chain calls. myString.Append(a).Append(b).Append(c); myString .Append(d) .Append(e) .Append(f);
&gt; Is it worth it? This question is impossible to answer without profiling your code. Run a profiler on your app and look at where the CPU bottlenecks are. If string concatenation is one of them, try a StringBuilder. Otherwise, you don't need to care.
I read the blog posts about how it was a terrible sin, but noticed a few that mentioned compiler optimizations in later versions, so I wrote a test to chunk some strings: Test | Time (ticks) | Mem (B) -----|-------------|------- String.Format | 536 | 24576 StringBuilder | 1196 | 16384 A + v + C | 761 | 8192 Test was done on a query ~40 lines long w/ one variable appended to the where clause. (Yes, yes; DbParam, sql injection, etc. It was a codebase I inherited. Don't change the subject.) IMO, the speed isn't enough to justify concern. Memory could potentially be an issue, but O(3N) is still O(N), so that's probably not going to be a concern in 90%+ of applications. Personally, I use operator+ for simple/trivial appends, and String.Format for larger and/or more complicated functionality. As mentioned, StringBuilder may excel in much more complex cases, such as generating XML or HTML - but there are classes that exist for doing that already. Use those. If there isn't one for your incredibly complex case? Take it to a console app and run some tests.
Note that StringBuilder.Append returns the instance so you can write it slightly cleaner: public string GetGreeting(personName) { return new StringBuilder("Hello ") .Append(personName) .Append(", my name is ") .Append(myName); .Append("!") .ToString(); }
you gain IRC experience points by giving snappy remarks whilst stroking your neckbeard
I'll agree with you on the general lever. Let me explain. If we both work as developers in same company and you come to me for help - I will give you straight answer, I will solve your problem for you. Reasoning is that you'll eventually get it but you need to get the job done in the first place. So you could say that I'm helping myself by helping you which is helping the company. However, if we don't work together it's easier for me to tell you to fuck off (google it) because your question is too trivial and I'm tired of explaining many times. **Edit:** Also I'll add that if you just show up in IRC and start asking those questions, you'll get ignored because you're new. While someone who's been there as a regular for long time will get all the help he needs to most trivial questions from many people and they'll do much more than just simply give you answer, they'll hold your hand knees and neck and carry you over the lava.
&gt; Also I'll add that if you just show up in IRC and start asking those questions, you'll get ignored because you're new. While someone who's been there as a regular for long time will get all the help he needs to most trivial questions from many people and they'll do much more than just simply give you answer, they'll hold your hand knees and neck and carry you over the lava. No, this is not true. People who ask well thought out questions will get a response quite quickly. However, questions like &gt; What are classes for? are ignored. There are books for that. There is Google for that. There is StackOverflow for this. This question is answered a million times already, you can easily find results on the first pages of Google with the most simple search terms. And there are **often** questions like this, questions that the person could answer easily by showing some effort.
I once was asked to look at an application that was getting very slow and see if I could figure out why. This application opened files and read each line of the file into a string. Each new line was simply concatenated to the previous. The application read a data file that another application created and allowed that proprietary info to be shared. Testing had been done with files that had 100 or so lines. Early users never went over 200-300 lines. Lines were basically Char Delimited Files that had about 300 columns. Then the application that was creating them was updated and now put 3k columns on each line. They started saving a lot more data. And we started getting bigger customers who had 1000's of rows. Next thing you know it was taking 5 hours to parse a file instead of 5 minutes. Why? We were running out of memory on the servers. Those concatenated strings were HUGE. All I did was switch from += to Stringbuilder and it became 1000x faster. It took me less time to fix it than it now took to parse a single file. *Edit: Your example should use String.Format() not stringbuilder. 
I wouldn't say only... there are certainly cases where StringBuilder provides better perf even when you could determine how many and how long the eventual string concat call would be (specifically when you are modifying the contents of the string). You could imagine it this way: suppose the fastest way to build one long string from a number of short ones was to build up a list of the short ones and then do the concat into a single buffer all at once. You would wind up with an implementation that looks rather like this: public class StringRope { private List&lt;string&gt; l = new List&lt;string&gt;(); public StringRope Append(string s) { if (s != null) l.Add(s); return this; } public string ToString() { return string.Concat(l.ToArray()); } } And actually if you don't care about mutability of the internal string (so long as you aren't calling the methods of stringbuilder `Insert`, `Remove`, `Replace` or the indexer) this may well be faster. It is because of those methods that the implementation of StringBuilder doesn't look like that: http://referencesource.microsoft.com/#mscorlib/system/text/stringbuilder.cs The real reason to use `StringBuilder` over an implementation like the one I added above (which could be optimized considerably) is specifically to support mutability of the string. `StringBuilder` provides a **mutable** array of characters which can be modified without incurring the penalty of creating a new immutable string each time you add two or more together. It also avoids the problem of fragmenting memory in some cases (you should use `AppendFormat(...` over `Append(string.Format(...` always, and if possible it is usually better to call `.Append(s).Replace(...)` vs `.Append(s.Replace(...` or similar constructs). Edit: http://referencesource.microsoft.com/#mscorlib/system/string.cs,3207 string.Concat when passed a list simply calls StringBuilder.
For your example, the repeated `+` will be replaced with `string.Concat` by the compiler; return string.Concat("Hello ", personName, ", my name is ", _myName, "!"); `Concat` uses `StringBuilder` internally (if you pass it more than 3 objects). Switching to `StringBuilder` explicitly is only really needed if you're doing repeated string concatenation in a tight loop.
&gt; For single executions this likely isn't going to make much difference. For multiple concatenations in the same statement, it literally doesn't make *any* difference. The intermediate strings are never allocated.
I prefer #c# on QuakeNet. Much less ego (still some though).
THEY ARE BUTT TROLLS
Where is your code?
This is a job for an enumeration: public enum Sex { Male = 0, Female }
Have seen this exact issue. Using += with a 5MB string makes for two 5MB strings. Then, given that both of those are on the Large Object Heap, it's not surprising to run out of memory there.
...and name it "Gender" so you aren't constantly laughing at work ...and then for even more fun: [Flags] public enum Gender { Unknown = 0, Male = 1, Female = 2, Hermaphrodite = Male | Female }
I'm a moron :D I pasted the wrong text :D I've edited it.
sadly i am concerned about memery usage for no reason at all. Todays computer have enough memory to blew.
What kind of questions were you asking?
this
As a Junior developer located in USA, it s possible to be hire for .Net telecommute jobs?
When making a very large number of concatenations to a string, simple concatenation is a O(N^2) operation, while stringbuilder is O(N). So concatenating a million characters one at a time will be hundreds of thousands times faster with the stringbuilder. For smaller things, there's not much difference. In some languages (like php or newer javascript implementations) you can get away with simple concatenation. Strings behave like stringbuilders in those languages. But Java and .NET use simpler, immutable strings where every concatenation creates a new copy.
A very quick review. Repeated cases are not repeated in this list. - Don't commit *.suo files to source control. They are user specific files. - Don't commit the NuGet packages. Let NuGet restore do the magic, no need to add such binary files to the source control. Especially git is not very good with binary files. - Don't commit the bin/ and obj/ directories. Those are generated files. They do not belong into source control. - Have a consistent style. Sometimes you have a space between operators, sometimes not. Sometimes you have empty lines between methods, sometimes not. Sometimes you write methods in camelCase, sometimes in PascalCase. Sometimes parameters are split by a space, sometimes not. Pick a style and stick to it. This makes the code more readable. - Function.cs: Make the class static if it only has static methods. But I see no reason to make these methods static. - Function.cs, 31: This return value is pointless. You're not returning the task, and you're also not using the return value of the task. So whatever you return in line 31 is **never** used anywhere. - Functions.cs, 21: `xx` is a very poor name. What does it contain? Use understandable names. - Functions.cs, 41: No need to add additional `+ ""` at the end. It's pointless. - Functions.cs, 41: Consider using `string.Format` instead this string concatenation. - Functions.cs, 51: You could always return the result directly, instead of using the variable `exeName`. Saves you a lot of lines, since you don't need the variable, the last return statements and the breaks. - Functions.cs, 65: This default branch does absolutely nothing. - ServerHelper.cs, 14: `sIP`? What does the `s` stand for? Perhaps you wanted to write `ServerIP`? Always use expressive names. - ServerHelper.cs, 19: You're assigning a value to the variable `sv` that you are **never** using anywhere. You're overwriting this value in line 23. Just drop the initialization. - ServerHelper.cs, 17: Consider returning `IEnumerable&lt;T&gt;` instead of the list. Rule of thumb is to always release the least required type/interface. - ServerHelper.cs, 33: You're checking `svList` for null, but earlier you assigned the result of `getServers()` to this variable. This method can never return null. The whole if branch is useless. - ServerHelper.cs, 44: Prefer a single return at the end of the method. That way the flow of the method is clearer. - ServerHelper.cs, 48: Avoid general exception clause. Only catch those exceptions that you can expect and can sensibly handle. Ideally there should only be one general exception clause in the whole program, and that is on the highest level where you'll log the exception and let the program gracefully die. - ServerHelper.cs, 59: You call a method that returns a bool. When this bool is true, you return true. If it is false, you return false. You can just return the result directly: `return ServerHelper.UpdateServerList(svList)`. - ServerHelper.cs, 78: Usually the approach is to have a **pre-condition** in your method. This means you always expect a specific case to be true, else you'll throw an exception. In this case you'd check if `svList` equals null, and if so you throw a `ArgumentNullException`. This exception uncaught would crash your program, but that's okay. Passing null would have been an error, and the point is to get to know about errors as quickly as possible. - ServerHelper.cs, 78: Is the call of `ToArray` really required? I don't think so. Lists and arrays are the same in JSON. - ServerHelper.cs, 78: I saw multiple times the string `"servers.json"` now already. This should be a constant somewhere in your program, not all over repeated. - frmMain.cs, 44: You can combine two ifs by using the logical and operator `&amp;&amp;`. This results in less deep nesting. - frmMain.cs, 97: This line is definitely too long. This should be split up into multiple lines.. and ideally into an own method. - frmMain.cs, 97: Instad of this `MethodInvoke` and `delegate` you should take a look at `Action`s. Will make the code cleaner too. - frmMain.cs, 125: That whole method does way too much and is way too big. Split up logical parts into smaller methods. - frmMain.cs, 175: You're calling **twice** `lstvMain.SelectedItems[0].SubItems[1].Text.Split(':')` just to once access the first, and the other time the second item. Write this result in a variable, so you don't have to run this split code twice. - frmMain.cs, 183: Many lines with `lstvMain.SelectedItems[0]`. You can store this in a variable too. - Parser.cs, 22: Don't omit the visibility modifier. Just always add it. If you omit it, another developer looking at it will be unsure whether this is intentionally or was just forgotten / lazy. - Parser.cs, 53: Your method is called GetShort, but you return an int. You're even calling `ToUInt16()`, so why not also return a `UInt16`? - Parser.cs, 55: You're having twice `resp[curpos++]` here, which is the exact same code as it's in your method `GetByte()`. Why not just call that method? You're not calling it anywhere else.. - Parser.cs, 40: `0x00` is a [Magic Number](http://en.wikipedia.org/wiki/Magic_number_%28programming%29). Avoid those, use constants with proper names instead. - Server.cs, 13: This method is too long too. And it does too much. Split it up again.. And add some empty lines in between for readability. They cost nothing performance wise. - Document your code. I have hardly seen **any** comments. - Split up logic and presentation into different projects. That way you could reuse the logic code easily when you want to switch to another UI framework (e.g. WPF). Even if you don't plan this, it's always good to split these things. That way it's clearer where to find what code. - Add a license. No one knows what license this code is under. - Look at unit tests. The earlier you start with this, the better. You'll hate yourself if you start with this too late. With unit tests you can write tests for your code that will be executed automatically. They'll ensure (or at least try) that you won't break your functionality when changing code. Some of these points are surely arguably and personal preferences, but I still consider them solid for a beginner. Once you got the hang out of everything you'll see more what fits with you and what not.
Late to the party, but Jon Sleet wrote this ages ago, still useful http://jonskeet.uk/csharp/stringbuilder.html
Wow ! Thank you so much !
Personally I would wait to see what engines they support fo indie devs and if they work out a deal with Unity3D or Unreal now that it has the $19 a month subscription. Most of everything is handled for you and you can develop cross platform easily even if it's not a game. While it's good to know the low level api, it's not really necessary any more. This might have already happened too. 
Thanks, those were very helpful. I tried implementing it but since the first link had no parameters in the example, I had to add a few lines to make the parameters stick after choosing the parameter dates on the calendar. The parameters are now staying put and going to the stored procedure query. To do this on the web app, you have to click the calendar dates and then the "confirm" / button2 button. Button 3 is "Export to Excel" now. However, the GridView is not showing the results of the stored procedure. Could you take a look? As you mentioned, the Page_Load and some Postbacks were messing things up, mostly the calendar and parameters resetting, and that is awkwardly fixed now. But I have no idea why the GridView is not showing the results now. Thanks. Here is the updated code: .cs: using System; using System.Collections.Generic; using System.Linq; using System.Web; using System.Web.UI; using System.Web.UI.WebControls; namespace WebApplication3 { public partial class WebForm1 : System.Web.UI.Page { DateTime fmDate = new DateTime(); DateTime toDate = new DateTime(); protected void Page_Load(object sender, EventArgs e) { } protected void Button2_Click(object sender, EventArgs e) { SqlDataSource SqlDataSource1 = new SqlDataSource(); SqlDataSource1.ID = "SqlDataSource1"; this.Page.Controls.Add(SqlDataSource1); SqlDataSource1.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["BIZ_DBConnectionString"].ConnectionString; SqlDataSource1.SelectCommandType = SqlDataSourceCommandType.StoredProcedure; SqlDataSource1.SelectCommand = "Payrolldeduction"; SqlDataSource1.SelectParameters.Clear(); FormParameter fmDate = new FormParameter("@Param1", Calendar1.SelectedDate.ToString()); FormParameter toDate = new FormParameter("@Param2", Calendar2.SelectedDate.ToString()); SqlDataSource1.SelectParameters.Add(fmDate); SqlDataSource1.SelectParameters.Add(toDate); GridView1.DataSource = SqlDataSource1; GridView1.DataBind(); } protected void Button3_Click(object sender, EventArgs e) { GridView1.AllowPaging = true; GridView1.AllowSorting = false; GridView1.DataBind(); Response.ClearContent(); Response.AddHeader("content-disposition", "attachment; filename=newexcelreport.xls"); Response.ContentType = "application/excel"; System.IO.StringWriter sw = new System.IO.StringWriter(); HtmlTextWriter htw = new HtmlTextWriter(sw); GridView1.RenderControl(htw); Response.Write(sw.ToString()); GridView1.AllowPaging = true; GridView1.AllowSorting = false; GridView1.DataBind(); } protected void Calendar1_SelectionChanged(object sender, EventArgs e) { fmDate = Calendar1.SelectedDate; fromDate.Text = Calendar1.SelectedDate.ToString(); SqlDataSource1.SelectParameters[0].DefaultValue = fmDate.ToString(); } protected void Calendar2_SelectionChanged(object sender, EventArgs e) { toDate = Calendar2.SelectedDate; SqlDataSource1.SelectParameters[1].DefaultValue = toDate.ToString(); } } } aspx: &lt;%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs" Inherits="WebApplication3.WebForm1" EnableEventValidation="false" %&gt; &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt; &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt; &lt;head runat="server"&gt; &lt;title&gt;&lt;/title&gt; &lt;style type="text/css"&gt; .style1 { text-align: center; } .style2 { text-align: left; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;form id="form1" runat="server"&gt; &lt;div class="style1" style="margin-left: 40px"&gt; &lt;asp:SqlDataSource ID="SqlDataSource1" runat="server" ConnectionString="&lt;%$ ConnectionStrings:BIZ_DBConnectionString %&gt;" SelectCommand="Payrolldeduction" SelectCommandType="StoredProcedure"&gt; &lt;SelectParameters&gt; &lt;asp:Parameter DbType="DateTime" Name="fromDate" /&gt; &lt;asp:Parameter DbType="DateTime" Name="toDate" /&gt; &lt;/SelectParameters&gt; &lt;/asp:SqlDataSource&gt; &lt;div class="style1"&gt; Payroll Report&lt;br /&gt; &lt;/div&gt; &lt;div class="style2"&gt; &lt;br /&gt; From:&lt;/div&gt; &lt;asp:TextBox runat="server" ID="fromDate" Text=""&gt;&lt;/asp:TextBox&gt; &lt;asp:Calendar ID="Calendar1" runat="server" style="text-align: left"&gt; &lt;/asp:Calendar&gt; &lt;div class="style2"&gt; To:&lt;/div&gt; &lt;asp:Calendar ID="Calendar2" runat="server" style="text-align: left"&gt; &lt;/asp:Calendar&gt; &lt;br /&gt; &lt;br /&gt; &lt;br /&gt; &lt;asp:Button ID="Button2" runat="server" onclick="Button2_Click" Text="Confirm" /&gt; &lt;br /&gt; &lt;asp:Button ID="Button3" runat="server" onclick="Button3_Click" Text="Export" /&gt; &lt;br /&gt; &lt;asp:GridView ID="GridView1" runat="server" AllowPaging="True" AutoGenerateColumns="true"&gt; &lt;/asp:GridView&gt; &lt;br /&gt; &lt;br /&gt; &amp;nbsp;&amp;nbsp; &lt;/div&gt; &lt;/form&gt; &lt;/body&gt; &lt;/html&gt;
I find the site okay for quick reference type things, but yeah I prefer other places like MSDN for tutorials. Very ugly!
Unreal is free now
LOL because you sound exactly like me in my current role. I handle the same type of support incidents, sometimes with the same error and also put them into an engineering queue. I encounter these a lot and mostly it is, like others have said, lack of input validation and back code (E.g. read a registry key and try to access its value without checking if the key exists or the call returns a null object). Like you, I have access to the code, so whenever I get these, I track down the source of the issue, and report it. I rarely bother doing any logging because for the most part, for me anyway, the stack trace gives me enough information so I can pass along a "line X is where the exception is thrown" in my report to the engineers. If I ever have to do logging, it is usually a "sometimes we can an object reference error" type situation. In a perfect word, testing should catch these, but when you're dealing with a large, established code base where refactoring for unit testing isn't given a priority, these will probably still creep up (at least for me). I feel your pain!
Your code is tricky to read on my phone, but the thing you do that is unusual is to instantiate the data source in the button handler. Normally you would have it in the xaml as in this page: https://msdn.microsoft.com/en-us/library/ms228094(v=vs.85).aspx Then in your button handler you just re-bind. I found a discussion of what I mean here: http://stackoverflow.com/questions/12966722/running-a-stored-procedure-in-a-sqldatasource-on-button-click
Unreal is garbage. EDIT: Unity has more advantages than disadvantages IMO.
That's a different issue than with Test Cloud. With XTC, you have to first get accepted into the program (they are scaling up relatively slowly) and then you have to be able to afford it. Granted, it is probably cheaper than buying all of those devices and then architecting and running your own automation, but it's not a problem that a hobbyist with an indy license or even a small shop with limited revenue would need to worry about.
Oh I'm a full on Unity guy. I love it and do everything in it, but the free version is extremely limited if you want a finished looking product. The lighting leaves a lot to be desired compared to UE4. That will change soon, but the price of a pro subscription or the full price is a bit much for a lot of people. 
HOLY CRAP I NEED THIS. Time to bone up on what's coming in 6, I guess?
I think what you might be I interested in is a [dictionary](http://www.dotnetperls.com/dictionary). Have a look and if it doesn't suit your needs let me know and I'll see if I can find another solution. Good luck!
NuGet packages: leave the /SourceFavList/packages.config and /packages/repositories.config in your repo, you can get rid of everything else in /packages except repositories.config See how to do NuGet package restore in Visual Studio, and the command line: https://docs.nuget.org/consume/package-restore Take a look at the Coding Style Guidelines that Microsoft is using for .NET Core, its a good place to start https://github.com/dotnet/corefx/wiki/Contributing#c-coding-style Look at either xUnit or NUnit for unit testing, for what its worth ASP.NET vNext is actually using a fork of the xUnit project for its unit testing, there's LOTS of other options, but pick something and write some tests 
Do you know how bloody expensive this is?
To be fair, it said "easy", not "cheap". Also, consider how expensive it would be to get the same amount of testing without this. It's basically impractical. That doesn't mean it's worth the price to most people, though. I do wish they had more affordable prices for test cloud. 
$?
Strings are also interned so It's not really clear that it will give any performance gains in all cases.
&gt; Out of all the places on the web to learn about c#, IRC is one of the worst. But that's not because of the people. It's because IRC makes it **too easy** to ask questions without prior investigation. A lot of people are lazy and just ask a question and hope for an answer, instead of using Google to search for answers first.
One weird thing in the VS 2015 CTPs is that the included Code Analyzers want to turn calls to static members (e.g. String.Format()) into their "simpler" version (so string.Format()), which goes against convention.
Used by who? The only more or less official convention I can find is the naming convention on MSDN, and it says nothing about this particular case. There are a lot of common conventions, but hardly any official. I'd not see "MicrosoftLearningExperiences" as a good source. Especially since that account only exists since 2013.
More than 4 objects, actually ;). It doesn't use a StringBuilder anymore but something similar but better: 1. Iterate through the array to calculate the final length. 2. Allocate the result string. 3. Copy each item to the result.
There are many different conventions, you know, even internally in Microsoft :)
Short answer: nothing much. I saw a video, must have been on Microsoft Virtual Academy or Channel9, that explained the difference. I still don't really understand why you would choose one over the other (but then again, I'm not a trained code or anything).
Thank you for your suggestions. I am noting everything you guys say and study them. Last night i only slept 2 hours but it is worth it. I've learned so much in 1 night. Thank you !
You're right, first of all I counted wrong, and then I was looking at `Concat(IEnumerable&lt;T/string&gt;)` instead of the array versions. :) It's going to be quite a bit\* better than `StringBuilder` then, as that will first have to copy all the data into its chunks and then copy that data into a `string`, whereas the `Concat` just `ToString`s everything and copies it directly into the destination `string`. \* for various definitions of quite &amp; bit
Not according to [documentation](https://msdn.microsoft.com/en-us/library/system.string.intern%28v=vs.110%29.aspx). You can disable string interning, but it is on by default.
Then you should also learn that sleep is **very important** and 2 hour is by far not enough. Without enough sleep you'll get slobby, **forgetful** and write bad code.
1. Google it 2. Get a headache by banging your head against the wall to understand why it didn't work 3. Google again 4. Google a new time 5. Find the solution 6. Get this awesome feeling of having fixed something
How did you miss all the blog-spam about C# 6 for the past year?
/r/resumes wouldn't have understood it at all, so that would have been a horrible idea. Maybe you/others shouldn't have taken this so seriously.
The point is that every single other static call **has** to use the upper cased type name. Why use the lower case aliased type which goes against this convention.
&gt;I want to use &gt; &gt; position[anyLetter] = 10; Accessing concrete properties through indexes is a code smell. Yes, you can use a dictionary to make it happen, a la: public class Position : Dictionary&lt;char, int&gt;() But then you have to answer some more questions and code around some more edge cases: 1. What happens if Position is uninitialized and you try to access it? -- Null Reference exception * What happens if Position is initialized but has no entries and you try to access one? -- key not found exception * What happens if someone removes a coordinate from the position? -- invalid use case? the state of your object(s) is now invalid * What happens if a coordinate is added that is not needed? -- either nothing or something weird, depending on how you're using the Position * What happens if you set coordinate 'X' but try to read coordinate 'x'? -- key not found exception * What should the default values be, and how are they initialized? -- constructor? helper method? * What if [future coder] does not know the letters of the coordinates that are allowed? -- they'll have to look across all of your code or into documentation to figure out what to use Making it a concrete class (or struct) automatically resolves most of those questions: public class Position { public int X {get;set;} public int Y {get;set;} public int Z {get;set;} } 1. Null reference, same as before * Irrelevant, there are no entries that need to be set up * Irrelevant, the properties cannot be removed * Irrelevant, properties cannot be added * Irrelevant, you'll get a compile-time error * Same as before * Between looking at the object and intellisense they'll know all the usable properties
No, it does matter. You burn a whole 1.4 calories by pressing the shift key. That stuff adds up. :)
ExpandoObject is pretty much what you're describing. It's a Dictionary&lt;string,object&gt; so it has the ability to use the index. However if you cast it as dynamic, it also lets you access the properties using the position.x format. Main downside is the fact that you lose compile time checking and you're left with run time checking of data types. May not be an issue depending on what you're trying to do.
I'm going to install it on my work machine today. I've got a lot of ideas for using it. If I find bugs, you'll be the first to know. 
You push shift with your index finger? O.o
It's been working out and can press whatever keys it wants. I'm powerless to stop it really at this point.
If it develops a mind of its own... I think you might have to cut it off while you still can!
Meh. Instantiating the data source in the code behind vs the ASP is a bit of a six of one, half a dozen of the other thing. The relative weirdness here is that the GridView has no data populated at all until the user clicks a button. I would, as has been noted earlier, put that into the Page_Load event unless I was certain that the UX intends to have nothing there prior to a keypress. If you want both a button that refreshes the GridView and for the view to be populated on initial load, that's an even better reason to do it in code behind. Just make a function called, I don't know, InstantiateGridViewDataSource() and then call it in both the Page_Load (behind an if(!Page.IsPostBack) statement) and the button click event.
Fixed it. I figured the "= 0" part was implied.
I agree that there is not much to choose having controls in the markup vs huge code behind. However, I think when someone first starts with ASP using xaml is easier because the life cycle of page controls is less of a factor. I also think that markup is more flexible somehow.
If numberToFail is a constant, you should be able to solve with Newton's method combined with a numerical integrator. I've got some examples of these in Python, if you'd like something to integrate or use as a legacy example.
It's a constant, real number.
OK. Will I be able to port the code to C# fairly easy, or does it use numpy or scipy or something?
Here's an answer, either way. You inspired me to break out my College code. 6.78890656194
It's an easy port. probably. No special libraries, at least. Just time and math. You may have to massage it a bit, too. from math import * from time import time,clock def simpson(f, a ,b, n): """Integrates f from a to b using n steps. f=name of function a=initial value b=end value n=number of double intervals of size 2h""" n *= 2 h = (b - a) / n; S = f(a) for i in range(1, n, 2): x = a + h * i S += 4 * f(x) for i in range(2, n-1, 2): x = a + h * i S += 2 * f(x) S += f(b) F = h * S / 3 return F def integrate(f,a,b,n=100,rule='simpson'): """Integrates a function f from a to b using n steps and any rule. Takes a function f as an argument and approximates its integral using the midpoint rule by defualt and 100 subdivisions by default. a and b are any real number, n is an integer, and rule is a string.""" diccy={'midpoint':0,'left':1,'right':2,'simpson':3} wid=float((b-a))/n summ=0 if diccy[rule]==0: for i in range(n): summ+=wid*f(a+(wid/2)*(2*i+1)) elif diccy[rule]==1: for i in range(n): summ+=wid*f(a+i*wid) elif diccy[rule]==2: for i in range(n): summ+=wid*f(a+(i+1)*wid) elif diccy[rule]==3: summ=simpson(f,a,b,n) #else: return summ def integrateErr(f,a,b,nstart=100,rule='simpson',err=0.01,timer=10): """Integrates to within error and allows time constraints. f is the function to be integrated, a and b are start and stop points, respectively, nstart is the number of subdivisions to use which defaults at 100, the rule defaults to simpsons, the err is the accuracy and defaults to 1%, timer is the max amount of time this function can take to run, defaulting to 10 seconds.""" cerr=lambda a: abs(a[1]/a[0]) term=lambda: integrate(f,a,b,nstart+nstep,rule) nstep=5 #need better method for determining nstep appro=[integrate(f,a,b,nstart,rule),term] nstart+=nstep start=time.time() breakflag=0 while cerr(appro)-1&gt;err: appro=[appro[1],term] nstart+=nstep if time.time()-timer&gt;start: breakflag=1 break if breakflag: return None else: return appro[1] def deriv(x,f,t=0.001): """Evaluates the derivative of f at x within a tolerance of t.""" evalu=lambda x,f,p: (f(p/2+x)-f(x-p/2))/(p) p=.01 old=0 newe=evalu(x,f,p) r=1.5 while r&gt;1+t: p=pow(p,.5) old,newe=newe,evalu(x,f,p) r=abs(newe/float(old)) return newe def findzero(f,l,r,g=0,t=0.001): """Finds zeros of 1-variable functions. Finds zero of f between l and r within a tolerance of t.""" if g==0: g=(r-l)/2. gn=g-f(g)/float(deriv(g,f,t)) if (f(gn)==0): return gn if abs(float(f(g))/f(gn)-1)&lt;=t: return gn else: return findzero(f,l,r,gn,t) def f(n): return 0.002 / pow(2*n,.05) + 0.0325 / pow(2*n,0.4426) - 0.012 print(findzero(f,.5,10)) 
That doesn't seem right.
Weird. With this: solve for x: 0.002 * ((2 * x) ^ -0.05) + 0.325 * ((2 * x)^ -0.4426) - 0.012 WA gives me 1132.24. And with: 0.002 * ((2 * x) ^ -0.05) + 0.325 * ((2 * x)^ -0.4426) - 0.012 = 0 I get the value you got. 
Xamarin team has done a tremendous amount of work porting the .NET framework into a set of components that can be used for cross-platform development, and that by achieving 60-80% code re-use across platforms the licenses pay for themselves. 
&gt; pow(2*n,.05) your 0.05 should be -0.05 &gt; pow(2*n,0.4426) Yet again you have a positive 0.4426 where OP had a negative value there. You divide where OP multiplies... No wonder your solution is wrong. I don't blame you for not wanting to share your code with it being that wrong. 
Is C# involved in this conversion somewhere?
It's base 64 "AAAAAAAQexM=". Convert.FromBase64String("AAAAAAAQexM=");
Well, your answer is around 6.7, when the correct answer is around 1132. 
http://imgur.com/wqJspEn Like I even need to defend myself anymore.
So would I go from byte[] to base 64 to get 'AAAAAAAQexM='? Or do I have to convert the byte[] to 0x0000000000107B13 and then convert to 'AAAAAAAQexM='? Edit - I figured it out. Thank you for the help. Here's my answer. string temp1 = Convert.ToBase64String((byte[])reader[9]);
 byte[] bitArray = Convert.FromBase64String("AAAAAAAQexM="); string base64 = Convert.ToBase64String(bitArray); You beat me to it! ;)
No worries. Thank you for this. I'm new to rowVersion (not really a db guy) and base64 (had no idea until like, right now), so it's thrown me for a loop the past few hours. Enjoy the gold (whatever it does). :)
Wow! Thanks for the gold! By the way, if you don't mind me asking.... Why are you using RowVersion anyways? [rowversion (Transact-SQL)](https://msdn.microsoft.com/en-us/library/ms182776.aspx) &gt;Is a data type that exposes automatically generated, unique binary numbers within a database. rowversion is generally used as a mechanism for version-stamping table rows. The storage size is 8 bytes. The rowversion data type is just an incrementing number and does not preserve a date or a time. To record a date or time, use a datetime2 data type.
Keep in mind that I am assuming here... I am thinking you are using the RowVersion as a unique identifier for the row. Would be easier just to create a Primary Key column for the table to serve as the unique identifier.
Ahh I gotcha. Yea, I would go with primary key for almost anything I can think of. However, the db I'm working with has about 75 tables and a million+ entries. So I'm sure there's a reason why they used RowVersion? I assume someone smarter than me designed it that way. :) btw - I'm mostly a UI developer.
Is that LINQ or just a conversion with a lambda in place of a delegate? I've always thought LINQ was only the query language, such as: var input = from x in Console.ReadLine() where x % 2 == 0 select x;
Technically... that's correct. But since it's equivalent to the method syntax: var input = Console.ReadLine().Where(x =&gt; x % 2 == 0); and its used more it's called LINQ as well. OP's example however, is just a lambda expression.
The way I'm doing my loops right now if I want to repeat a large block of code (I'm still a noob) is to do this (example): int (nameOfInt) =1; while (nameOfInt ==1) { Insert code here } if (whatever requirement is met and you want to loop) nameOfInt =1; (which loops it back up) else nameOfInt =2; (which wouldn't loop it again) I hope that makes sense, or helps at all, that's how I'm doing some loops so far and it works well for what I've need it to do. Edit: I'm only used to doing console applications and haven't yet started doing projects with guis . 
Can you show me an example for your 3rd suggestion? Thanks
Unless your file is huge (over 20 megabytes-ish) just read it all into memory. Append your data, then write it back out.
Start with a small console app to get all the Windows Forms stuff out of the way. Write code to calculate the interest earned based on some constants in the program, then display it. Decimal balance = 0.0; Decimal rate = 0.01; // 1% rate Decimal deposit = 240.0; Decimal earnings = (balance + deposit) * rate; Decimal balanceForward = balance + earnings; Console.Writeline("Original Balance: " + balance.ToString("C")); Console.Writeline("Deposited: " + deposit.ToString("C")); Console.Writeline("Earned: " + earnings.ToString("C")); Console.Writeline("New Balance: " + balanceForward.ToString("C")); balance = balanceForward; Now extend it to loop 10 times. 
The application will output a balance after each year, and the amount remaining to reach the goal.
I'm not sure I understand what you mean by starting a small console app. How do I do this and what does it do to "get the windows forms stuff out of the way?"
So what /u/xampl9 said is basically the gist of it, it's math calculations. You'll be able to get the balance after each year from his example. The amount remaining would be something like this: TheGoal - Balance = HowMuchNeeded THEN HowMuchNeeded / interest (I think that would give you the amount needed left to deposit without the interest) 
Alright I'll try this out
Without knowing what you feel comfortable with and don't, it's hard to say where you should start. The *In Depth* series doesn't really teach the language so much as it talks about the new additions in each version. *In a Nutshell* books are reference guides, not tutorials. If you're already familiar with Java, C# isn't a whole lot different, frankly. If anything, it's easier to work with (and Visual Studio is a MASSIVE improvement over Eclipse as far as that goes). Is there anything in particular you wanted to learn about? For example, if you're working in ASP.NET, one of the Apress books on the subject might be of use. Or are you wanting to develop a WPF app, or work in SharePoint? I think that, generally speaking, if you get one of the more specialized books, you'll probably be able to figure out on your own the (relatively small) differences in the way stuff works. The biggest leap IME is between C++ and Java/C#, and if you've already done that, you're like 80% of the way there.
My compounding might be off but I just threw this together. You will need to validate your inputs from the GUI as well. Make the textboxes for "Year", "Balance", and "Remaining" - readOnly. On the form level code I have this: namespace Calc { public partial class frmFutureValue : Form { FutureValue fv; public frmFutureValue() { InitializeComponent(); fv = new FutureValue(); instantiating the class on running the app } private void btnNextYear_Click(object sender, EventArgs e) { decimal goal = decimal.Parse(txtGoal.Text); //decimal.Parse converts textbox value to decimal decimal investment = decimal.Parse(txtInvestment.Text); decimal rate = decimal.Parse(txtRate.Text); if (goal &gt; 0) // if no value is entered, do nothing { fv.CalculateNextYear(goal, investment, rate); txtYear.Text = fv.Year.ToString(); txtBalance.Text = fv.Balance.ToString("c"); txtRemaining.Text = fv.Remaining.ToString("c"); } } } } Then I have a class called "FutureValue" public class FutureValue { public int Year { get; set; } public decimal Balance { get; set; } public decimal Remaining { get; set; } public FutureValue() // constructor aka defaults { Year = 0; Balance = 0; } public void CalculateNextYear(decimal goal, decimal investment, decimal rate) { Year = Year + 1; //adds the previous balance + interest earned + new invesment Balance = Balance + (Balance * (rate / 100)) + investment; Remaining = goal - Balance; } } Basically every time you click the "Next Year" button, it calls the method "CalculateNextYear", which is the formula. I could be wrong, on it all, but I had 10 minutes to spare so hope this helps. Edit - there are probably easier ways of doing this, but I wanted to introduce you to this approach so you can get a feel for OO programming using classes, methods, and parameters. If anyone has any critiques, feel free to chime in, I'm not a senior dev.
I don't know exactly what I'm going to be doing with C#, unfortunately. I'm starting an internship soon with a company that uses it (along with ASP.NET with razor I believe). I'm unsure exactly what I'll be doing, but it sounds like mostly developing small desktop apps to start with. I mostly just want to make sure that I get a good foundation in the language. I mean I'm sure I could get code working fairly well by simply writing it as I would C++, then Googling the syntax differences, but I'd rather make sure that I'm writing idiomatic code from the start.
I'm trying to figure out how to not be a jerk about this, but this is terrible. Look into do while loops.
Your formatting is painful, sorry. And the lack of line numbers really doesn't help. But, that said, I *highly* suspect the error you are having on the call to lotteryGen is going to be your problem. When you build it, you should see the errors which would be helpful.
Haha no problem I'm new to programming so I'm not surprised my formatting is terrible. What I am trying to do theoretically is possible though right? Like the way I'm going about doing it.
Goal Seek is often a good option. It won't necessarily give you the exactly right answer, but it can get really close.
If you always use the lowercase version, you can often eliminate a using statement from your file. That's it. 
To format code properly on Reddit you need have 4 spaces in front of every line, as well as an empty line before and after the code. int randomNumberGen(int a, int b) { int amountOfNumbers = a; /*Min Number*/ int numberRange = b; /*Max Number*/ Random r = new Random(); /*creates random object*/ for (int i = 0; i &lt; numberRange; i++) { int randomNum = r.Next(numberRange); //X is a number, will create a number between 0 and X txtBoxRandomNumber.Text = randomNum; } }
You should be able to pick up C# pretty quickly, I'd suggest you start off by grabbing yourself [Visual Studio 2013 Community Edition](https://www.visualstudio.com/en-us/products/visual-studio-community-vs.aspx) and start a [10 day free trial on Pluralsight](http://www.pluralsight.com/). The beginner courses tend to move through topics pretty fast and assume some level of programming know-how. Start out by watching [Introduction to C# and .NET](http://www.pluralsight.com/courses/dotnet-csharp-tutorial). When Windows 8 just came out, Microsoft went on a bit of a campaign to get C# developers to convert to C++ and as a result there's a few resources lying around you might find useful. [C# to C++](http://www.bobtacoindustries.com/Content/Devs/CsToCpp-ASomewhatShortGuide.pdf) should be an interesting read as it mentions equivalents e.g. vector&lt;T&gt; vs. List&lt;T&gt;, although it will only be useful if you've advanced beyond novice level with C++. The biggest hurdle you need to overcome is learning how to use Visual Studio and the .NET environment (solutions, projects, builds, dependency management, testing, publishing etc.). The beginner courses on Pluralsight should get you up and running in no time.
`Select()` is used for projections of data. It will take every element from the enumeration on the left side (here `Tasks`) and run whatever projection you pass to the select method (here `o =&gt; o.Value.Category`). This is an expression, you can see it simplified as an inline-method. This method will retrieve one parameter `o` and return `o.Value.Category`. So you get a list of Tasks, then after the select you have a list of categories. Do you have a C# book?
thank you for the explanation I just ordered "CLR via C#" by Jeffrey Richter any other recommendations?
Head's first C#
Although your post is about a completely different product, do you work for free and give away all the software you produce?
What does this have to do with C# at all?
It maps to the type System.String, but yes :). Edit: please don't downvote me for providing a fact; parent even changed hos message to reflect it.
You mean in Excel? I'm trying to do this in C#.
Given your image: http://imgur.com/wSd8SIJ One issue I see right off is there is no return statement in the lotteryGen method. If there is a squiggly red line under txtBoxRandomNumber then it probably means there is no element within MainWindow with that name. It looks as though you're using lotteryGen to do two things, display some random numbers in a textbox and then return the actual picked number to txtBoxRandom.Text. I personally would segregate these two operations so that one method is displaying random numbers to a textBox, then use another to select the winning number. I _think_ that goes along with the _single responsibility principal_.
_Pro C# 5.0 and the .Net 4.5 Framework_ is a good one. Recently, I picked up _Adaptive Code via C#_ which has actually been of great help.
The two books I'm reading now are: _Pro C# 5.0 and the .net 4.5 Framework_ by Andrw Troelsen and _Adaptive Code via C#_ by Gary Mclean Hall.
thanks buddy you're my Hero. For today
I started going through _Pro ASP.NET MVC 5_ by Adam Freeman, which uses a project from start to finish, including dependency injection and mocking for tests.
It's a bitwise operation, `|` is the Bitwise OR operator. In this situation it effectively means "is both Male and Female". For example, in the below code both `isMale` and `isFemale` would be True. testPerson.Gender = Gender.Hermaphrodite; var isMale = testPerson.Gender.HasFlag(Gender.Male); var isFemale = testPerson.Gender.HasFlag(Gender.Female);
And created Dapper, which I've come to love!
This is how my repetitive code looks like. *Employee* has more thats than just "First name" and "Last name". So it would becoma a big chunk of repetitve code. if i would do this to all variables. //print everything how it is so the user can see it while editing. Console.Write("First Name: "); Console.Write(employees[chosen].Firstname); Console.WriteLine(); Console.Write("Last Name: "); Console.Write(employees[chosen].Familyname); Console.WriteLine(); Console.CursorTop = 0; Console.CursorLeft = 0; //override every line and wait for user modification Console.Write("First Name: "); SendKeys.SendWait(employees[chosen].Firstname); employees[chosen].Firstname = Console.ReadLine(); Console.Write("Last Name: "); SendKeys.SendWait(employees[chosen].Familyname); employees[chosen].Familyname = Console.ReadLine(); Console.WriteLine("Employee edited");
What exactly is it? From the description it's like a cut down version of EF?
thanks
It's a very lightweight ORM. Check it out [here](https://github.com/StackExchange/dapper-dot-net).
Just expanding on this with low level examples: Enum | Decimal | Binary :--|:--|:-- Unknown|0|000 Male|1|001 Female|2|010 So Hermaphrodite = Male | Female means Male OR Female. Or-ing the binary values gives you 001 OR 010 = 011 = 3 (decimal) So (internally) Hermaphrodite is 3
I totally agree. Also, a console app is not really recommended for this kind of thing.
Here is an example using pure C# code and the secant algorithm. http://www.nullskull.com/q/10335011/goal-seek-function-in-c.aspx 
P.S. Math.NET might have a better algorithm.
I definitely suggest creating a parent object to your age and birthday fields. Something like public class Person { public int Age {get; set;} public DateTime Birthday {get;set;} } Just create an IList&lt;Person&gt; list = new List&lt;Person&gt;(); instead. However, think about your logic. You're storing their age and birthday? Can't you calculate one from the other? Just store the birthday.
Ha, I'm an idiot, I forgot I had a duocode beta invite and ignored it when searching on google :/
So you want a List of something that has a string part and an object part. You could define your own class/struct for that, or use an existing type that fits (e.g. `KeyValuePair&lt;string, object&gt;`, `Tuple&lt;string, object&gt;`).
I get "Error 'FutureValue': member names cannot be the same as their enclosing type" at line 48, which is at the public class. 
Hey, thanks this was perfect. Made a lot of sense and made it easy to work/play around it.
Use a variable if you're using it a few times. In the first example, the code has to get an object property (myDGV.Rows), get an object from an array, retrieve another property (Cells), get another object, a property from that one too and finally run a method (ToLower()) on the value. Fine if you're only using it a few times, but if you're using it a lot, say inside a loop, you will see savings from caching it into a local variable. With your example you'd want to use a switch statement anyway... switch(myDGV.Rows[e.RowIndex].Cells[e.ColumnIndex].Value.ToLower()) { case "myValue": //do stuff break; case "myOtherValue": //do other stuff break; default: //do other other stuff } Then you'd only be evaluating the expression once.
That's what I did to make it work. But I'm wondering what would I have to do to keep Proj1 as my startup project and still be able to run Proj2 by calling the Mainwindow...
I got it working by changing the public class name. However, the calculations are not quite right. Compound interest = investment*(1+rate)^years
You can always start an instance of WpfApplication2.MainWindow in your project 1 and invoke the Show or ShowDialog method
Well, use git-svn locally and branch to your heart's content. Just make sure to rebase and merge your current branch with master before pushing.
Thanks for the tip! I've been building up a reading list of URLs per feature, but parts of the Dispatcher syntax still look cryptic to me. Will try to find usage examples in the wild.
Thanks! Virtual Academy looks like it maybe should be in the sidebar. Lots of goodies there :)
why are we developers when we don't try to break the borders?
just fill in the OleDbDataAdapter.UpdateCommand. and then da.Update(dt)
Because the other thing we do is find efficient and effective ways to accomplish goals
it was an example. I do already have [a class called "Employee"](http://pastebin.com/4B35aa68) that stores multiple variables.
but imagine you have to program something for a company that will run on all their company computers. But imagine all their computers have like 50MB RAM or so. Sure, you could use the newer and more efficent technology of newer RAMs, but this would require to change all thoose RAMs in the Computers (pretty expensive). Or you could try to get the most out of thoose lousy 50MB RAM.
I'm not looking for a symbolic solution. I want to find the root of the equation.
Do they optimize for asm.js?
No clue, I haven't used either. Just Google. :)
No, asm.js is not supported with c# yet.
http://up-for-grabs.net/#/tags/c%23
Didn't know about that one. Very cool. Sadly, I think my projects wouldn't quite work for that yet. But, standardizing on `up-for-grabs` is probably a good convention if I ever do.
I already have properties instead of fields I hope I userstand this correctly, here a example on how it is right now: private String firstname; public String Firstname { get { return firstname; } set { if (!String.IsNullOrWhiteSpace(value)) firstname = FirstLetterUppercase(value); } }
If you have a list of issues that are good entry points to get into your project, tag them as such and submit a pull request to up for grabs. Perhaps nobody notices, perhaps they do. It wouldn't hurt. https://github.com/dahlbyk/up-for-grabs.net/pulls
This is where I'm getting stuck. Adding exponents with Math.Pow tells me I can only use "double" variables. But nothing works if I use double variables. Thanks for all your help so far btw, I've actually learned a ton.
Can you paste your code here please?
Well it's exactly like yours now because I wasn't able to figure out how to change the formula into compound interest using exponents.
I will, as soon as I can break down a tasks. Most of my items on the top level are so high level because I'm still establishing a pattern to work with. But, I will as soon as I get something more stable since I don't know "write a XML loader for the entire system" is an entry-level tasks. :D
 // (1 + r) double dRate = 1 + ((double)rate / 100); // nt double dExponent = (double)Year; Balance = (Balance + investment) * (decimal)Math.Pow(dRate, dExponent); I believe this is what you want. What is happening now: Math.Pow uses the type "double". However, in our program, we are using decimals (rates/currency/etc). So what we have to do is "cast" the types, which is basically temporarily changing the type of a variable to make it work. For example: double dRate = 1 + ((double)rate / 100); dRate is double, but rate is decimal. We add "(double)" before the variable to make the cast happen. Now generally, you don't want to go around casting everything. Only do it when you absolutely have to. Let me know if this works. Full code: public void CalculateNextYear(decimal goal, decimal investment, decimal rate) { Year = Year + 1; //Balance = Balance + investment + ((Balance + investment) * (rate / 100)); // old formula // (1 + r) double dRate = 1 + ((double)rate / 100); // nt double dExponent = (double)Year; Balance = (Balance + investment) * (decimal)Math.Pow(dRate, dExponent); Remaining = goal - Balance; }
That's pretty good. I have two recommendations: 1. Capitalize the name in the 'get' instead of 'set'. That way no matter what it is set to, or even if your object changes the value it will be capitalized 2. Look into the System.Globalization.TextInfo class, it has methods to capitalize words already. - using System.Globalization; ... private string _firstName; public string FirstName { get { return TextInfo.ToTitleCase(_firstName ?? ""); } set { _firstName = value; } }
You need to explane more, because what you have surgested should work Maybe you have an issue with escaping, try putting a @ at the start of your string literal Are you typing the text directly into the database? If so try holding shift and press return
Github and Codeplex.
You know you're comparing something with itself with that statement? You are using the same index in both arguments of the compare? That aside, do you know how do debug within Visual Studio? If not you really should learn. If you run your code in VS, then when it throws the exception it will stop on the part of the code that failed and you can see all sorts of useful information. You can see the stack trace (what methods were called to get you to your current position) You can also see the contents of the various variables in scope using a Watch Window (google it if you don't know what this is) so you can check exactly what has gone wrong. Check to see exactly what your array contains. Check what the value of index is. What I suspect the problem is, is that you have an entry in your array that is null for a particular index value. When you try to reference the LName property of this null value you get the exception you're seeing. It could also be LName itself that's null and when you call CompareTo it fails. Once you learn how to debug you'll be able to troubleshoot things like this much more easily in future though. EDIT. Just read your full code. Think what would happen if your max records constant is set to 100 and there are only 50 records in your input file.
So I counted up the amount of lines in the file that I'm given, and I changed 100 to 1 more than the amount in the file (32 in the file, changed 100 to 33) and it works flawlessly except the first last name is cut off: http://i.imgur.com/CwaS1MP.png But I don't think I'm supposed to change the constant to that exact number (on the sheet it says "you may assume there will be no more than 100 records on file) EDIT: I just changed the constant 100 to the amount of names in the file (32) and it works flawlessly now. But I don't think I am supposed to look into the file and count the exact number.
So, think about it a different way. Why are you trying to sort the whole 100 items in the array if you don't know if it will all be populated with values? And my point about debugging still stands, you will be able to fix problems much more quickly be learning about that.
1) What is the actual data in the database field? 2) Are you using Form or is this a web page label? Html labels use &lt;br /&gt; I think. 3) What happens when you retreive the data and display it with \r\n? With \n? Does it do nothing or does it print the \r\n or \n?
Have you tried using Environment.Newline concatenated into the string? It's usually my go to. Sorry about no formatting, I'm on my phone.
In C#, if you have an array of 10 things: string foo[10]; they are "numbered" 0 to 9, and the "Length" is 10. But accessing foo[foo.Length] is illegal because the last item is number 9, not number 10. You're asking for one too many. Think about the very last run of the inner for loop you've got there. index is going to be nList.Length - 1. index + 1, then, is gonna be nList.Length, and there's no such item. There are other things wrong in the code too but this was the easiest one to teach. Also PAY ATTENTION to the other commenter's points about stepping through it in the debugger. You're probably thinking, bah that's so much work, it's gotta be 99% right and I just need to find that 1%... if you're thinking that, you're wrong. Use a debugger. Learn it. Coding without a debugger is like nailing drywall up without a hammer. Sure you can do it but it's gonna take longer and be more frustrating. 
Most likely the newline is being stored fine, but the label or query result viewer is ignoring the newlines.
No. Tuples, and Strings, are immutable. Even if the Tuple wasnt immutable setting a string like that would create a new instance of the string and wouldnt change the original.
The suggestions here are sound. And, if worse comes to worse, you could use a tombstone marker of some sort. Example: Put a "##" everywhere you want a new-line, and do a replace before presenting.
2015 and there's still no syntax highlighting. Really, MSDN Magazine looks like shit since a long time ago and there's no excuse for that.
Unfortunately you can't really give them a fiver and be on your merry testing way. The lowest tier is $1000 a month for an annual commitment, it's not $5 an hour so much as it is $12,000 to actually start using it. 12k might be reasonable for the enterprise (although that is actually it's own tier at 144k a year so who knows), laughable for the small team or independent developer. Xamarin has always been crap with their pricing.
Nuget.org and myget will allow you search for packages that typically have project links to the open source code projects. Becoming more familiar with nuget on its own is also beneficiary.
What you're looking at is a LINQ expression, that looks at the collection of 'planer', creates a subcollection of 'Category', and distills that down into a distinct representation of 'Category's. I use that in quotations because I'm not sure if 'Category' is a string, or an object - regardless, it uses the GetHashCode() of that object. This is called a lambda expression, or in other terms, an anonymous method. Overall, this returns an IEnumerable of every case where Category is unique.
Are there very many similarities with Python that you've found? I'm fairly experienced in Python.
Interesting. Thanks for the detailed answer. I know I've noticed at least some surface similarities, with C# sharing many features of Python I like (such as foreach loops and properties), but it's good to hear a broader perspective.
Try this: return CultureInfo.InvariantCulture.TextInfo.ToTitleCase( value );
I am indeed typing the text directly into Access, I tried shift + return which didn't work but ctrl + return did! Thank you
ok i resolved it myself i searched for an element but used the word "attribute" here's how it works now: XmlDocument doc = new XmlDocument(); doc.Load(path + @"\employees.xml"); XmlNodeList nodeList = doc.SelectNodes("//employee"); foreach (XmlNode node in nodeList) { int id = node.Attributes["id"].Value; String firstname = node.Attributes["firstname"].Value; }
Bad XPath. The @ sign in xpath is used when talking about attributes. Your XML uses no attributes. Use a tester/tool to validate your assumptions: http://www.online-toolz.com/tools/xpath-editor.php Your XPath likely should be "employees/employee" if you want to select each employee node into a list. Or you could use "//employee" if you're lazy. 
Great to hear. As a consultant I always have to introduce it for new customers.
I really enjoy Xamarin but there are some definite bugs in the Visual Studio extensions. No show stoppers but some annoyances (can't load pdbs for library code, the designer isn't as good as Android Studio...). Xamarin Studio is decent but I still prefer VS. I highly recommend using a PCL for common code and following the MVVM pattern and using something like MvvmCross (https://github.com/MvvmCross/MvvmCross/) or Xamarin.Forms for your viewmodel/databinding needs.
Is this assembly compiled in debug mode i.e. with optimisations turned off?
Not to mention concurrency issues.
thanks
I thought DUP was used for allocating space. Like in TASM/MASM you normally use DUP up when your declaring string variables and such. It shouldn't modify the stack. 
&gt; The expected behavior in this case is, the exception inside the condition is swallowed, and the condition is assumed to be false. Consider the following code: This is definitely not the behavior I'd expect..
&gt; I don't felt see much use in this whole premise (exception filters) anyway Uhm.. Often you have a specific exception type with properties, and you can only handle the when specific properties are met. The only way to do this currently is to catch the type and check your condition, and if it's not met `throw` the exception again. But this fucks up the stacktrace.. These condition filters do not do this.
The best/easiest option is probably the non-free Seq (https://getseq.net/) product made by the same guy (I think). It acts as a sink as well as provides an interface for viewing them. The interface is pretty basic currently, but its usable. Unfortunately it looks like the price almost tripled since I purchased it - try before you plunk down cash.
Does that really work? Because "firstname" in your example XML isn't an attribute. It's an element. If you want the name, you need the .InnerText of the "firstname" element.
Well, I'm actually using Elasticsearch and the free Kibana - you can visualize anything and easily create overviews with dashboards
No real concurrency issues if you push data to Elasticsearch - behind the scenes Serilog uses the official client which talks rest to the server
Performance is a good question, maybe we should test that. As I wrote, if the logging is because of an exception I don't think the issue is too big. But if you are logging lots of info and usage data I guess it could be a issue. If you are logging to Elasticsearch there is acually a binary protocol available that could potentially give a performance boost: https://github.com/elasticsearch/elasticsearch-transport-thrift
You can actually use it for free as a single instance: &gt;"Out of the box, Seq includes a free single-user license without authentication support."
Well I see your point about the stack trace preservation. I don't think I've ever done much with exceptions other than either handle them or wrap them though. Do many exceptions even have properties that are useful for branching on in the web world? Most exceptions I use are only differentiated by type and occasionally 'parameter name' etc. Only the HRESULT parameter is of any use.
From the [MSDN page](https://msdn.microsoft.com/en-us/library/system.reflection.emit.opcodes.dup%28v=vs.110%29.aspx) on the DUP opcode: &gt; Copies the current topmost value on the evaluation stack, and then pushes the copy onto the evaluation stack. The POP opcode just removes the item on top of the evaluation stack. It sounds to me like it might be doing a NOP sequence.
WebException can mean a lot of things, ranging from SocketError to InternalServerError. It was always convoluted to handle that thing. (And a major reason why HttpClient is so much better.)
Alright, the serialization is fairly cheap. I tested serialization vs ToString() override with all the properties, on an object with various numeric properties, a string collection, and an enum. In relative terms serialization is expensive, as it takes about 100% longer. In absolute terms, that is about 0.005ms per call more. Depending on how much logging you do and how performance sensitive the application is, this may or may not be too much. Oh and the base performance without the serialization is very similar to NLog's.
I don't think the C# 6 spec (even a draft) has been published. I agree; I'd expect it to behave like throwing an exception in a catch block.
It was just what I had on hand, but I suppose more specialized tools can't hurt. I'll look into dotpeek, thanks.
The spec is https://github.com/dotnet/roslyn ;)
This SO question appears to address the questions we have. The top answers appear pretty sensible : http://programmers.stackexchange.com/questions/173039/is-modern-c-replacing-c-is-microsoft-pushing-developers-to-adopt-c
It was reported in Roslyn as : https://github.com/dotnet/roslyn/issues/1114 which was then moved over to the coreclr as: https://github.com/dotnet/coreclr/issues/410.
The way this works is already defined in IL based on a previous implementation from VB. This feature is parity to VB functionality.
A lot of third party frameworks have a generic exception type with a `ErrorType` or `ErrorCode` property, because often it's not feasible to create an own exception type for every possible error that can happen. Especially in large frameworks.
For bitcoin auth I can see how having a micropayment for time limited access behind a paywall or to pay for a single download would be cool. For a general user sign in, how would a user do it? eg would they sign a message with their wallet every time they wanted to login, or is there another way?
Nah this isn't for any school project. Even tho the Serialization is pretty neat. Have to check it out 8) Thanks
there is an ongoing discussion on the monogame forums http://community.monogame.net/t/questions-regarding-xbox-one-support/1952
Hmm, we're using Introduction to algorithms at the moment for our algorithms course at uni. I gotta tell ya, if you're new to this stuff it's a bit of a big task to set yourself to and it might discourage you more than anything. I don't know the other one but it looks more appropriate to me if you're starting out with mathematical proofs. If you really wanna get into algorithms maybe start off with the videos on the MIT OpenCourseWare channel on youtube. Also, there's a youtube channel called Algorithms With Attitude. That guy explains it pretty well. 
You need to have a public default constructor. Also, WTF? while (Program._employees.Any(employee =&gt; employee.ID == ID)) ID++; Just do this: ID = Program._employees.Max(e =&gt; e.ID) + 1; And there's so much more wrong with this code...
&gt; iterate over all employees so i should use a foreach-loop instead of an Any()?
You should understand what `Any()` does.
Well, i know that it's a LINQ Expression and that it works somehow. Sorry, i I consider myself as a programming beginner. This doesnt help me: &gt; public static bool Any&lt;TSource&gt;(this IEnumerable&lt;TSource&gt; source, Func&lt;TSource, bool&gt; predicate);
[saving works now](https://i.imgur.com/5tFJt7o.png) thanks :)
Your algorithm requires the Employee IDs sorted in ascending order, correct? 
[Oh, hai](http://imgur.com/zBVP3k8). It really depends on your current level of education. Intro to algorithms will most likely have a more immediate and tangible benefit on your programming skill, but it is a heavy book in both the fact that it has a lot of pages, and it's dense. The algorithms you can follow along with and implement even if you stay math light, but the primary focus of the book is on the analysis of the algorithms. If you study algorithms, a lot of problems tend to disappear when you realize "Wait a second, this is the exact problem Prim's algorithm solves". I highly recommend taking this route. How to solve it is going to have a more abstract improvement on your programming. A math focus changes the way you think about problems. It will definitely get your critical thinking and logic up, but again, it will be more abstract and subtle about how you go about solving problems. Also, if you have taken college math classes, or will be in the near future, you are going to be overlapping subject materials very shortly.
It's about controlling and detecting updates to rows that might have occurred prior to the user saving, esp. in multiuser systems. We do something similar. If the rowversion captured at the beginning of an edit doesn't match when calling the update we block the update and alert the user that the information was updated by another user and force a refresh on the object and UI.
[System.IO.Path.GetFileName](https://msdn.microsoft.com/en-us/library/system.io.path.getfilename(v=vs.110\).aspx)
How about var fileInfo = new FileInfo(uriPath), and then the name is simply fileInfo.Name
And also I have the danger that the Employee itself is in the List&lt;Employee&gt;. 
The Path class has some really good methods: Path.GetFileName(uri.LocalPath);
&gt; How do I get started with C#? Get a book, read it, experiment with C#. Heads First C# is a good beginners book.
Thank you so much. Yeah the algorithm book says That I better be comfortable with proofs and know programming so I think I will look into that one first. 
Yes I agree. I think how to prove it by vellmen is probably the best route, 
Agreed. 
We hardly ever use `dynamic`, `new` or `Tuple` at work, because they all lead to poorly structured code.
Thanks, that makes sense.
&gt; In Ruby we leverage procs and lambdas. This is something most of the .NET developers are not used to. In C# there are really great libraries that allow to leverage unanimous functions - Linq for instance. I noticed that a lot of code contained regular for and while loops, where map, select or reduce would do. My team started to leverage those once they saw the great reduction of noise and readability of our code base. Sorry, your team are a bunch of clueless morons who don't know shit about C#. C# has had lambda expressions, anonymous methods and LINQ since 2007, and delegates even before that, and it's total common ground right now for any mediocre or above C# developer. Writing a bunch of useless for loops and shit shows your team is composed of clueless monkeys.
Congratulations on seeing that your code should be better and trying to make it so, as opposed to just saying good enough. You're already a step ahead of many programmers. 
Tuples and dynamics are useful for code processing dynamic structures like json ,hl7 etc.
Instead of using "" please use string.Empty, it is more explicit and doesn't use magic strings.
Because you're calling `IsMatch` when it's not necessary. And this won't work if `birth` can be null.
They **can** be useful. But I prefer to just create matching classes and deserialize to them. Code that uses `dynamic` is a pain in the ass to deal with. The same with `Tuple`. If a Tuple ever leaves the **method** scope I reject the code in a review.
I am intimately aware of the first point. I was desperately hoping for the second. I'm also being a bit facetious. 
If the tuple doesn't need to escape the scope of the method, why use a tuple at all instead of an anonymous object type?
Same here. Although there are uses for dynamic, I have no use for what I do. Tuple I've found I use once in while but carefully. Tuples leaving method scope can get really messy. Especially if the types are the same. Tuple&lt;string, int&gt; is one thing because you can usually imply what is what, but with Tuple&lt;int, int&gt; it's easy to mismatch them. I would like to see the use of tuple deeply integrated as part of the syntax like the swift language does to support multiple return types. 
There is [scriptcs](http://scriptcs.net/)
STAThread stands for Single Threaded Apartment Thread. The details of what that means is too lengthy to explain here, but that gives you a good google entry point if you want to look it up. It has to do with COM Apartment models. Since most windows UI is rooted in COM, you have to declare a thread as a STAThread to work with COM. Think of this as declaring your UI thread. 
birth cant be null. but the other argument proved me wrong. Thanks.
Is this algorithm better? List&lt;int&gt; used = new List&lt;int&gt;(); foreach(Employee employee in Program._employees) used.Add(employee.ID); ID = Enumerable.Range(0, int.MaxValue).Except(used).FirstOrDefault();
Using TFS is already ignoring best practices. 
No, I was referring to /u/AngularBeginner's algorithm. For yours, I'd probably replace `List&lt;int&gt; used` with an inline `Program._employees.Select(x =&gt; x.ID)` if you're going that way. But in working code, I'd prefer to either use `Max() + 1` to make a new ID, use GUIDs, or simply let the DB handle identifiers.
Oh, were it that they would implement multiple return values so we could get rid of the Try pattern for non-nullable types. bool, Int32 Int32.TryParse(string source) I'd do a little jig.
Doesn't Go implement that?
Hate the TryXYZ pattern. I'd prefer to see an object returned that actually represents the result in a structured way. class TryResult&lt;T&gt; { bool Success { get; private set; } T Result { get; private set; } } TryResult&lt;int&gt; TryParseInt(string input) { ... }
Yeah, we know how to get around it. It's just a much bigger pain in the ass than it needs to be. Which is all I've seen "sealed" really accomplish - making things harder than they need to be.
http://channel9.msdn.com/Series/C-Fundamentals-for-Absolute-Beginners from the sidebar. I'm an experienced programmer and this was the best resource I found - and it's for people who have never touched code before.
Because with dynamic you didn't gain anything. The opposite, you lose performance and compile time type checking. Just create a class, it's not difficult.
What pisses me off most about TFS is that you have to check out a file to edit it. WHY?
If you're storing smaller sets of data, you may want to look into Serialization of your data into XML or Json. http://www.codeproject.com/Articles/4491/Load-and-save-objects-to-XML-using-serialization That shows XML. If you have a LOT of data to store, you may want to look into some sort of light SQL provider like SQL Compact, but the flow of that would be very different.
`while` doesn't contradict lambdas. Here's an example from your link: while (!_systemMessageHandler.ExitFlag) This doesn't fit in any lambda. Tutorials target beginners, which should learn how to use a `while` before they use LINQ, but actual devs use LINQ.
Most, if not all, C# devs use LINQ and lambda expressions extensively.
goto has its uses: it can be used to skip to a particular case in a switch statement - which is sometimes cleaner than duplicating code between cases or calling a method - or to break out of nested loops. I rarely use it, however.
Since you're using Xamarin you may want to check out [Sketches](http://developer.xamarin.com/guides/cross-platform/sketches/introduction/) It's their take on "execute as you type" coding in C#, so you can see stuff happening. It's not quite what you get with Ruby, and you can only use it for testing code fragments, but you might find it useful.
Same with me, I'll often use a `Tuple` to get the test passing and then refactor it away.
2012 introduced local workspaces which makes all the previous issues with read only files pretty much moot. You don't need a server connection constantly either.
You can use rails console in production, can't do that with immediate 
F# implements this
I feel the same way about internal. I was working with a library and wanted to catch the custom exception type they were throwing and wouldn't you know that it was an internal so I couldn't actually catch it and had to catch all exceptions.
Creator here :-) ... I think that's the key; although you can perform deep serialization with Serilog, most of the time you're just associating a message template with a bunch of (scalar) property values, so performance is generally very close to traditional loggers. Thanks for posting your findings!
&gt; Also, subclassing to fix a bug has always reeked of bad design for me. It's just a lazy way of avoiding composition. Subclassing is one way of achieving polymorphism (in C#, interfaces are the other are are almost always preferable, IMO) and is appropriate when you want something that can be used in all the places the parent type could be used but *behaves* differently. That's exactly what we want, so I think it's actually exactly the right fix. Composition would require us to update ALL the exception handlers in addition to adding the shim we want - that's a LOT of work and what's the gain? I see no practical advantage, only an (arguable) ideological sense of purity.
Serilog snapshots (non-scalar) data at the point it is logged so that it can be safely accessed on other threads (e.g. async background serialization/posting). If it's safe to read properties of an object at the point it is logged then it's thread-safe with Serilog. Semantics are pretty similar to calling `ToString()` I guess. Concurrency is a pretty central consideration for Serilog; we make heavy use of read-only data structures, and the logging pipeline is shared-nothing and stateless, so hopefully we've got this covered :-)
What does content.GetType() return?
That's a great question. Something that looks like this (sorry for dump) - t {Name = "Podcast_226DDAD4CE0A70C45C0CB9455FC24047A475DDB33EB34B40B8E69F0D1181322D" FullName = "System.Data.Entity.DynamicProxies.Podcast_226DDAD4CE0A70C45C0CB9455FC24047A475DDB33EB34B40B8E69F0D1181322D"} System.Type {System.RuntimeType} + [System.RuntimeType] {Name = "Podcast_226DDAD4CE0A70C45C0CB9455FC24047A475DDB33EB34B40B8E69F0D1181322D" FullName = "System.Data.Entity.DynamicProxies.Podcast_226DDAD4CE0A70C45C0CB9455FC24047A475DDB33EB34B40B8E69F0D1181322D"} System.RuntimeType + base {Name = "Podcast_226DDAD4CE0A70C45C0CB9455FC24047A475DDB33EB34B40B8E69F0D1181322D" FullName = "System.Data.Entity.DynamicProxies.Podcast_226DDAD4CE0A70C45C0CB9455FC24047A475DDB33EB34B40B8E69F0D1181322D"} System.Reflection.MemberInfo {System.RuntimeType} + Assembly {EntityFrameworkDynamicProxies-HistoryPodcast.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null} System.Reflection.Assembly {System.Reflection.Emit.InternalAssemblyBuilder} AssemblyQualifiedName "System.Data.Entity.DynamicProxies.Podcast_226DDAD4CE0A70C45C0CB9455FC24047A475DDB33EB34B40B8E69F0D1181322D, EntityFrameworkDynamicProxies-HistoryPodcast.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" string Attributes Public | Sealed System.Reflection.TypeAttributes + BaseType {Name = "Podcast" FullName = "HistoryPodcast.Core.Models.Podcast"} System.Type {System.RuntimeType} ContainsGenericParameters false bool + DeclaringMethod '((System.RuntimeType)t).DeclaringMethod' threw an exception of type 'System.InvalidOperationException' System.Reflection.MethodBase {System.InvalidOperationException} + DeclaringType null System.Type FullName "System.Data.Entity.DynamicProxies.Podcast_226DDAD4CE0A70C45C0CB9455FC24047A475DDB33EB34B40B8E69F0D1181322D" string + GenericParameterAttributes '((System.RuntimeType)t).GenericParameterAttributes' threw an exception of type 'System.InvalidOperationException' System.Reflection.GenericParameterAttributes {System.InvalidOperationException} + GenericParameterPosition '((System.RuntimeType)t).GenericParameterPosition' threw an exception of type 'System.InvalidOperationException' int {System.InvalidOperationException} GenericTypeArguments {System.Type[0]} System.Type[] + GUID {8f2e4504-7a65-39cd-86b9-36b72d972c9b} System.Guid HasElementType false bool IsAbstract false bool IsAnsiClass true bool IsArray false bool IsAutoClass false bool IsAutoLayout true bool IsByRef false bool IsClass true bool IsCOMObject false bool IsConstructedGenericType false bool IsContextful false bool IsEnum false bool IsExplicitLayout false bool IsGenericParameter false bool IsGenericType false bool IsGenericTypeDefinition false bool IsImport false bool IsInterface false bool IsLayoutSequential false bool IsMarshalByRef false bool IsNested false bool IsNestedAssembly false bool IsNestedFamANDAssem false bool IsNestedFamily false bool IsNestedFamORAssem false bool IsNestedPrivate false bool IsNestedPublic false bool IsNotPublic false bool IsPointer false bool IsPrimitive false bool IsPublic true bool IsSealed true bool IsSecurityCritical true bool IsSecuritySafeCritical false bool IsSecurityTransparent false bool IsSerializable false bool IsSpecialName false bool IsUnicodeClass false bool IsValueType false bool IsVisible true bool MemberType TypeInfo System.Reflection.MemberTypes + Module {EntityProxyModule} System.Reflection.Module {System.Reflection.Emit.InternalModuleBuilder} Namespace "System.Data.Entity.DynamicProxies" string + ReflectedType null System.Type + StructLayoutAttribute {System.Runtime.InteropServices.StructLayoutAttribute} System.Runtime.InteropServices.StructLayoutAttribute + TypeHandle {System.RuntimeTypeHandle} System.RuntimeTypeHandle + TypeInitializer null System.Reflection.ConstructorInfo + UnderlyingSystemType {Name = "Podcast_226DDAD4CE0A70C45C0CB9455FC24047A475DDB33EB34B40B8E69F0D1181322D" FullName = "System.Data.Entity.DynamicProxies.Podcast_226DDAD4CE0A70C45C0CB9455FC24047A475DDB33EB34B40B8E69F0D1181322D"} System.Type {System.RuntimeType} + Static members + Non-Public members 
Extension Methods. There is a time a place for them, read: linq, but most of the time if you're thinking about writing an extension method, YOU'RE WRONG. Edit: Oh, and static classes, yuk. (I know I'm going to get a lot of hate for these comments, so if anyone wants I can write up a couple pages on why both are simply awful)
So the solution was to use if (content is Podcast){} 
Take what I say with a grain of salt because I am new to the c#/asp.net world. But right now seems like asp.net and mono and c# are going through huge changes. Microsoft had open sourced a lot of the .net framework and asp.net. Soon you will be able to develop a c# asp.net application on any os and deploy on any os. Look into asp.net vnext. Currently vnext can work on win/Linux/Mac but it's far far from ready from prime time. Currently I don't think there is anyway to access a database in vnext other then in windows. From my googling it seems that mono fully supports asp.net mvc2/3 and has limited support for 4. I've been playing around with mono and asp.net the last few days and it seems to work pretty good. One issue I have run into is database access. I know it can be done, I'm just not familiar with how asp.net does it. Like what is ADO and can I use entity? Tomorrow I'm going to look into these things more.
Saw the question here, and figured I could reply on SO as well. http://stackoverflow.com/questions/28922808/unable-to-check-type-of-entity-of-base-inherited-classes/28922978#28922978
We use Serilog (and the wonderful Seq viewer) heavily on my current project and I can't recommend it highly enough. It's particularly handy for adding correlation Ids to requests and all processing of that request and then being able to easily track the logging of that request through multiple parts of the system.
Howdy - yes, [same guy](https://twitter.com/nblumhardt) :-) I have to admit that as a start-up, we re-arranged our pricing model, tiers and so on several times in the few months after launch. It takes a while to figure out how much it costs to provide good support to each type of user (and what the "types of user" even are, in fact!) so we had to measure and adjust until we came to the current model, which we're happy with and seems to work for most people. I'd guess you licensed the five-user tier, which changed significantly since it just about overlapped the free version early on. If it comes time to upgrade and you want to renew please reach out and we'll make sure you can do that at the appropriate price. At the moment we're working on a new major version; the interface will get some refinements but "basic" is still something of a design goal. Ultimately, although Seq will grow to support ever-larger teams and installations, I would like to keep the "centralized log file, with superpowers!" feel, rather than slipping into building yet-another NoSQL-database-like-thing. It's a juggle, no surprises to you there I'm sure :-) Thanks for the support - "best/easiest" certainly makes me smile (and alt-tab back to VS/WebStorm with an extra bit of enthusiasm)!
That's what tuples and sets are for. All we need is tuple destructuring now.
Please do, because I see extension methods as a godsend.
The first one. Better readability.
It's the "unsafe" keyword for me. Though I use it a fair bit at home.
I didn't use dynamic until I was doing something reflection heavy recently. I found using a dynamic wrapper made the code much easier to write and read than classic reflection. Plus now I've got this nice wrapper that I use the next time this comes up.
i don't know your database or what your trying to do, so just check this out : https://msdn.microsoft.com/en-us/library/system.data.oledb.oledbdataadapter.updatecommand(v=vs.110).aspx 
Mmm, yea, the variable capture lambda thing, I have a feeling almost everyone has been bitten by that one at least once. It just doesn't *feel* intuitive for basic value types. 
Thanks for the help I was able to get my code to see the data base and write some of the information from it, I would like to be able to generate a list of strings from primary keys (or integers), select one of those strings (or integers) at random and then get the other data from that record and return. My current test data base (one I made just to test to make sure that everything is working) has 2 fields adj(string) and bonus(int), I would like to be able to have a query look for a adj and then return the corresponding bonus: Table Name : armorToughness Field Name : adj DataType : shortText Field Name : Bonus Data Type: number thanks for your help
Hi! Thanks a lot. I need a system that can work in school library. It can manage books, readers
&gt; I've pretty much stopped using C# and use Sorry to be rude, but gtfo
Yes I want to see those "couple pages" on why static classes are bad!
I'd really like to hear your reasoning on the extension methods.
Yes.
I think he's referring to the situation that arises when a noob modifies the code and needs an additional out parameter, and just keeps adding them over time until you end up with 20 out parameters for the same function, when a class or structure would have made more sense.
I dont have a DB I have a xml File ^^ but It's nice to talk to you guys about programming
It may, however, I've yet to run into a situation that using goto was the proper solution. In my experience, there is always a better way to accomplish the same task. goto makes everything harder with maintaining code.
I used it recently to get out of 2 nested foreach loops: var sb = new StringBuilder(); foreach (var row in workSheet.Rows) { foreach (var cell in row.Cells) { // Some nested ifs here ... if (exitCond) goto OutOfLoops; // Some nested ifs here ... if (exitCond) goto OutOfLoops; } // More code here ... } OutOfLoops: // Some more stuff here ... return sb.ToString(); So basically I'm using it like Java's labeled break. This is really the only situation so far that I prefer using goto. I do see the potential for abuse, though.
A multicast delegate or event type may be an elegant solution to what you're trying to do. As gerusz posted, reflection would also allow you to do this blindly at runtime, i.e. "do this for all properties". But I would still use reflection just once (perhaps during construction) to add the delegates rather than every time you need to execute for performance reasons. Then you call the delegate just once to perform all the repetitive operations when you actually need them to run.
Still disagree with the dogma comment. Sure it *does* work, but that doesn't make it a good idea to do that nowadays. It's incomprehensible to someone who doesn't have your very particular domain knowledge. If I found that code I'd have to spend time looking it up, versus &gt;return argument.ToUpper() which is pretty clear.
The .NET guys have made many decisions that I strongly, rationally, and can verbosely disagree with and I'm not convinced by the recommendation or arguments from even the ever-cogent and influential Mr. Skeet. In particular, I really think the "designing for inheritance is hard" line of thinking comes to a poor conclusion ("design for it or forbid it"). By sealing, you're implicitly assuming you know what's best for me and my code - which is inherently arrogant and frequently impossible. The core problem is, I think, a lack of clear responsibility boundaries. If I want to extend your class, *I* am responsible for that decision. Not you. If you change the internal details, again, *I* have to deal with my decision. It's simply not rational for me to extend your class and then assume it will *always* work that way and, even in that uncertainty, extending is *still* often clearly the best decision. IMO, you don't need the level of functionality documentation Skeet is claiming; you simply need to clearly and firmly communicate to consumers exactly what your library guarantees - *literally everything else* needs to be understood as subject to change across versions. So if you don't document an inheritance hierarchy as permanent, I extend it at my own risk. The .NET BCL authors are obsessed with cross-version compatibility (too far, IMO - they've created some weird warts rather than break compatibility with a weird use case that's also easy to fix - I refer to IList not implementing IReadOnlyList) and so I understand why they seal everything. But I also think that's it's an overly-conservative, fear-based, lowest-common-denominator approach. Languages like Python get away with ZERO concept of inaccessible (the closes they get is "discouraged", which I could see for sealed) and people still use them for huge, important projects. The .NET version philosophy is stuck in the 90s enterprise era of thinking, which has served MS well in the past and I'm sure some of their clients prefer that. But I think they'd find that, overall, their consumers would be OK with some minor breaking changes every 3-5 years.
What's not working? EDIT: Just tried it using your code and it works. EDIT 2: Are you typing into the combo box rather than selecting? Hint: add a breakpoint at the button click and step through. Pay attention to your *int month* variable.
We do need more info
Holyshit, I knew it was something silly. Thank you so much, these things are why I love programming
I seriously dont know WHY you guys to this [DRY](https://de.wikipedia.org/wiki/Don%E2%80%99t_repeat_yourself) is like the very first thing I learned. It's written in every programming book I know. Why do you guys think why I crave to hard for [DRY](https://de.wikipedia.org/wiki/Don%E2%80%99t_repeat_yourself) Code?
I've been playing around with Seq a bit...while I like the functionality, the UI is weak. If you could just make it way more customizable it'd solve most of the issues. A big issue for me is the datetime format...I don't care about the day of the week, I care about the millisecond. Just let me put in my own format string and I'd be happy. I also want to be able to control what is shown without zooming in to a single line. Right now it's dt/level/text. Let me add columns that take their values from the properties. Personally I want a column for SourceContext, and obviously there are tons of usage cases that would benefit from being able to see some custom property at a glance. Let me color the whole line depending on the level. etc. Beyond that, my typical usage pattern involves filtering based on log level and/or "SourceContext". Using the query textbox or saved queries every time is tedious. A drop-down box (stick it next to the date picker) that does that job would be far better.
Just solved it my self after hours ^^ This worked for me * to min this.WindowState = FormWindowState.Minimized; this.Visible = false; * to max this.Visible = true; this.WindowState = FormWindowState.Normal; 
Cool, thanks!
this is true, plus reflection is fun to play with :)
http://oxyplot.org/ http://resources.oxyplot.org/examplebrowser/ (Scroll down and find Candlestick - needs Silverlight for the example browser) I've not done much graphing before, but I will be soon and Oxyplot seems really good and it's quite popular!
Ok, couple of things First, c# already has a built-in method of getting month names....you don't need to do it by hand. Look at DateTime.ToString("MM") for example Second, your best bet here is to learn how to use the debugger. Set a breakpoint and run your application, press f10 to move to the next line, hover over your variables to see what they're set to At some point, you'll notice "oh crap, that should be a seven not a nine" and a lightbulb will go off as to WHY its a nine and not a seven You'll be a better programmer as a result and wont have to spend your career posting every problem you have on reddit and stackoverflow. 
That's pretty horrible, actually. Please do as /u/mordero suggested instead. 
It alters the stack trace for the current frame, but "fucks up" is a bit harsh; all lower frames are preserved fine.
Strictly speaking it's not really directly related to IL, but more to metadata, but yes. 
Consider using the generally superior XDocument class and friends (in Xml.Linq) instead of XmlDocument.
There is a nop IL instruction as well.
[Look at the Graphics.DrawImage methods](https://msdn.microsoft.com/en-us/library/system.drawing.graphics.drawimage%28v=vs.110%29.aspx) If you have added it to your projects resource file Visual Studio should have auto generated a property for the image which you can use like this: e.Graphics.DrawImage(Resources.YourImageProperty, xPosp, yPosp, playerwidth, playerheight);
While it's true that linq have been around for a long time and a lot of developers 'use it', in my experience (as far as anecdotal evidence goes, of course) people who only have experience with imperative languages often use it as a "mini sql for collections" and don't really leverage its power. I've done that as well when I started programming, with C# being the only language in my toolbelt and imperative/OO the only way I knew to build a program. Since then, I had a dive into functional programming, and that changed my mindset in a way that helped me using linq effectively. But that's not the case for the majority of the developers I've worked with. IMHO, having chosen for linq methods names very close to those of sql operations, even if it makes sense with the marketing of linq to sql coming at the same time, blurred the fact that FP concepts where introduced and limited the developers' view.
Absolutely. This is also a [code smell - inappropriate intimacy](http://sourcemaking.com/refactoring/inappropriate-intimacy) - it looks like RepetitiveThing could be inside of the `chosen` class. 
The solution to this problem is, more or less, to use reflection. However reflection adds a lot of complexity and makes the code hard to read and maintain. Now if you were building a generic solution for unknown objects then the complexity and overhead might be worth it. 
Thank you for repeating what has been said already.
I disagree, these objects look like models and the code to display an input prompt should absolutely not be a part of the model in that case. Your first criticism is valid, but displaying the input prompt does not seem like something that needs more than just a simple helper function.
why notepad++?? VS has a great regex find and replace.
Oxyplot looks simple enough for me to get a handle on. I'm going to try it out and get back to you if it works out for me. 
Know C#.
R would be something completely new outside of c# and I'm not ready to go after another language. I'll check out OpenXML. Sounds promising from what you say.
I know objective-c and have known Visual Basic since the age of 9. I just find it hard to put this across...
No, I see your point here but I think there would be a way to write it to avoid using either goto or break
I disagree, I think Visual Basic makes you familiar with visual studio and teaches you about the .NET framework
Thanks for your reply. I will test the stackoverflow approach when I get home tonight. I do have a additional question. Is there anyway to make this logic async? I want to authenticate users against my AD asynchronously as well. 
can you please explain why using `ref` would be so bad in this case?
Why not? VB is usually used with .NET, just like C#.
Well in that case you must have a fairly good grasp on solving problems programmatically which is what matters. If I were you and thinking about applying for C# dev jobs, I'd get started working on some classic 'interview' problems in C# so as to get used to the syntax. http://www.testdome.com/Programming-Tests/Csharp/18
That is the tradeoff you'd have to make I suppose. Thanks.
Here's some thoughts from Microsoft about it: https://msdn.microsoft.com/en-us/library/ms182146.aspx Particularly in your case, I can't think of a single method anywhere in the .NET framework that manipulates a string that modifies it in place instead of returning a new instance of string. If for no other reason, you should follow, not fight, the conventions of the language you're using.
Okay I just now realise that your link is to a SO question with more details. A simple solution might be to supply your username with the following structure: ... username = "organization/hderp" // or username = "hderp@organization" ... To make it async, can't you just use async &amp; await? 
And that is important and useful, but doesn't help with c# much.
There is a difference between **Visual Basic** and **Visual Basic .NET**.
Oh they're far from equal, but a shared framework means that the 2 languages can at least accomplish similar tasks. I've never even touched VB but I dare say if I had to I'd know that I can use the same classes as what I'm familiar with from C#.
Sure, I'd do that if those are auto-properties and wasn't using a macro/attribute to do the property construction. I use the multiple-cursor editing mode when making edits that would otherwise be incredibly repetitious, such as in collection initializers, JSON objects, or for values that are assigned the value of the same method call. [Here's a video (using Adobe's Brackets editor) showing how utterly useful the feature is.](http://blog.brackets.io/2014/04/15/brackets-0-38-release-multiple-cursors/?lang=en) You could also use regexes in search and replace (which I do sometimes, depending on what I'm editing), but multiple cursor editing can be a lot quicker and more intuitive, especially when you don't want to figure out the exact right regex.
Would you care about self-taught programmers with a degree in another field, say medicine?
For loops are not slow.
from my understanding won't list.Distinct leave one of the duplicates in the list?
oh, my bad. I thought it would be slower/less efficient to compare every element to each other element, especially when the number of elements increases.
It's pretty case-by-case. If you don't have a formal CS/CE/etc. education, I'm going to want to see experience coding anyways, and I'll want to see your GitHub portfolio.
Yup, I pretty much concur. RabbitMQ seems to be working just fine under Windows too. If you want a fully-fledged message bus and not just a queue access, there's [NServiceBus](http://particular.net/) (commercial license) and [MassTransit](http://masstransit-project.com/) (Apache 2.0 license). I'm still using NLog for general-purpose logging or Elmah for MVC/WebAPI components. I'll have to check out serilog myself :)
Not C# specific, but here's what has prevented me from hiring programmers in the past. Don't put something on your resume that you can't talk about. If you say you've used JQuery on a project, you'd better know what selectors and chaining are. Don't try to answer a question you obviously can't. Admitting you don't know something and possibly explaining how you would approach it goes a much longer way than "What's a delegate in C#?" "It's what actually votes in the primary." 
Now my silly [Console Game](http://github.com/ConsoleGames/Space) looks bad xD 
var does not incur a runtime cost though, whereas dynamic incurs a significant runtime cost. Have a look at http://stackoverflow.com/questions/13193799/performance-cost-of-using-dynamic-typing-in-net for some actual examples. By the nature of dynamic you lose all the type checking, so personally would not go near it as a var substitute to save declaring types. Save it for the intended use of making interop and COM types easier and runtime binding.
Well, then use the other suggestion with the Grouping :) And I for example didn't know "Go Fish" :P
thank you for clarifying that
Hello! I'm the lead developer of SciChart WPF Chart - http://www.scichart.com - thanks for the heads up Jon! If you head over to http://www.scichart.com/contact-us and ask for a trial extension, we will be happy to extend your trial. Let me know what your needs are and maybe we can help! Andrew [SciChart Team]
Thank you.
I would look into `await` for running things on a background thread and not blocking. Remember, you can only update the UI on a single thread but you don't want to block the UI thread while you are doing it. I'd probably say `await wpf` would be a starting point for Google.
If you really want to do this "foreach" style, you'll need two things: Linq and an understanding of how to avoid "primitive obsession". http://lostechies.com/jimmybogard/2007/12/03/dealing-with-primitive-obsession/ If you redesign your model to look something like this: public class Manager { public JobTitle JobTitle { get; set; } // other properties } public interface IEditable { bool IsEditable { get; set; } } public class JobTitle : IEditable { private string _jobTitle; public JobTitle(string jobTitle) { // do some validation? _jobTitle = jobTitle; } public SetValue(string jobTitle) { _jobTitle = jobTitle; } public string Value { return _jobTitle; } public bool IsEditable { get; set ; } } Now, you can write a "query" to get the input for every "IsEditable" property in your Manager class. Then you can iterate over the editable properties and call the Console editor for each one. var editableProps = selectedManager.GetType().GetProperties().Where(prop =&gt; prop.IsEditable == true); foreach(var p in editableProps) ConsoleEditMyProperty(p); Where ConsoleEditMyProperty contains the code to do the console operations. It is also then easy to extend this code to use another UI without changing your model, you'd just update the code that does the editing of a property. This looks like a lot of boiler plate code at first, but it creates a robust model that can be used in flexible ways. It prevents code repetition and bugs and encapsulates behavior in the model. You could actually end up writing less code this way when working with large object trees. I really haven't tested this code, but you should be able to work out any missing details. 
I'm fairly sure there's a free version called visual studio express available. . Some googling should find you a link.
I develop this large application and for example we use PRISM, but it's built for some reasonons our lead dev. doesnt like the event aggregator (I guess the reason was bad readability). So we use static classses like ApplicationContext or MapContext (for our GIS system), and those static classes have events you can subscribe to, e.g. one viewmodel calls the AppContext event and a different one consumes them. Not sure if im describing it well, but it's a really neat, clean solution.
Grab the community edition !
SharpDevelop is pretty good and not a particularly large download.
Solution with no linq or loop. yourList is at least an IEnumerable. var listWithoutDouble = new Hashset(yourList); var removedCount = yourList.Count() - listWithoutDouble.Count(); I am on a phone. I cant check my snippet. I am pretty sur you wouldn't have to use Count(). Use the Length property if you can.
[Scriptcs](http://scriptcs.net/) should do what you want if your internet restrictions will allow you to download it. It's a little easier than trying to use csc.
This may be straying off the topic of C#, but as it's the language I code in, it feels appropriate. The controversial thing I do is fail to really buy in to technologies: I build many, many websites for a living, but while my code runs in ASP.NET on IIS, I'm using a framework I built myself, with a completely different approach to storing, manipulating and serving complex web pages that doesn't involve HTML interspersed with C# - that seems hideous to me. Similarly, instead of using LESS or SASS, I've created my own version in the form of a server-side HTTP handler DLL that parses, caches and re-writes a syntax I've devised. While in places does more than the other standards, I'm aware it'll never really be used by anyone else, as it's specific to MS platforms. TL;DR: I code in a bubble, and don't spend enough time talking about coding, so I tend to go my own way on a lot of things - some things take longer, sometimes I completely miss out on other stuff, but... Actually, I'm failing to find a genuine up-side here :D
Any IDE pales in comparison to Visual Studio particularly for C/C++ and C#
http://www.icsharpcode.net/OpenSource/SD/Default.aspx FTFY
&gt; but the only people who would equate the two are VB programmers trying to move up the pay scale. I consider them different but equal, personally. They are missing a few features of one another (C# didn't get exception filters until recently). I work with C# and only dabble with VB.NET occasionally.
I someone how doubt OP is pulling down [$1mil in annual revenue](https://www.visualstudio.com/en-us/products/visual-studio-community-vs) * Any individual developer can use Visual Studio Community to create their own free or paid apps. * An unlimited number of users within an organization can use Visual Studio Community for the following scenarios: in a classroom learning environment, for academic research, or for contributing to open source projects. * For all other usage scenarios: In non-enterprise organizations, up to 5 users can use Visual Studio Community. In enterprise organizations (meaning those with &gt;250 PCs or &gt; $1 Million US Dollars in annual revenue), no use is permitted beyond the open source, academic research, and classroom learning environment scenarios described above.
Whatever function is throwing the exception is likely to have actual documentation describing what it considers to be unsafe input. I'd start there.
MonoDeveloper Studio on Ubuntu. Not full functionality, but still pretty good.
MonoDevelop seems to be the editor that comes with Unity 5. I've been using it a bit the past few days. It seems ok. Lightweight, decent for what it does. Intellesense is a little... clunky... maybe...
Would definitely try it out if there was items to display.
Then get submitting. :)
Every kata/example on that site has been submitted by the community, so yes.
/r/WatchPeopleCode is probably going to be my new favourite place on here now =)
What is this site all about? Can some ELI5 for me please?
You misunderstand pass-by-reference/reference types. To be fair, until about 2 months ago, so did I. when you pass a reference type into a method, you're passing a pointer to that object's location in memory. That pointer also lives in memory somewhere, so unless the parameter is 'ref' a copy of that pointer is made in a new location, but with the same value (so it points to the same object on the heap) and then passed. If you had the parameter coded as ref, no copy would be made and the original pointer would be sent. 
Yes, why? There's no reason for this requirement. You could easily sweep out spam submissions. Also, sign up is not even possible using C#.
There is no community, and you want us to do all the content creation work? Why are you wasting our time?
http://www.codewars.com/about Not sure why nor how you think I'm wasting your time. Yes, there is a community on codewars.
Yes, signup is possible using any of the languages. By using that big ol' button with "SIGN UP" on it. http://www.codewars.com/about - see those people on the scoreboard? That's a community! WOW! There's even a forum! You're also given points for submissions.
What is a kata?
There is plenty of content on that website, just not in C# yet. You could always just, ya know, not.
A small exercise designed to be practised repeatedly, with the aim to build "muscle memory" (though obviously when used in context of a mental exercise such as creating code this is a metaphor). Originates from martial arts, where constant repetition of moves or small combinations of moves are done in order to master them. 
&gt; Also, sign up is not even possible **using C#**. Please don't just partially read what other people write. &gt; http://www.codewars.com/about - see those people on the scoreboard? That's a community! WOW! There's even a forum! There is no need to be so snarky. Also, it leaves a really bad impression when one of the team has the leading position.
*reads subreddit name* Get out.
Keep. It. Simple. If I'd have to build a microservices type project with C#, I'd definitely be looking into [Microsoft Orleans](http://orleans.codeplex.com/). From what I can gather, the endpoint sharing requires a scalable, persisted storage (e.g. Azure Blob Storage, CoachroachDb, NuoDb etc.). Be sure to take a peek at this [Microsoft Orleans Introduction Pluralsight course](http://www.pluralsight.com/courses/microsoft-orleans-introduction). Orleans is a distributed actor model with no SPOF (besides storage mechanism to share endpoints), built specifically to scale independant (micro)services. I only played around with it for a few hours, but it looked somewhat better and simpler than Akka. Besides Orleans, there's no particular framework that screams microservices to me. ServiceStack is pretty good, but caters more for apps that can take dependency on some common message library. Everything you can do with ServiceStack, you can do with ASP.NET Web API as well. Microservices is not a free lunch. Even CQRS is meant to be used sparingly. You'll regret it very soon when you realize that your silver bullet requires 2-3 times longer to dev and test. For projects with multiple teams, that's a negligible cost, but if you only have 1-3 devs it's a make or break scenario. There's nothing wrong with the traditional approach to design scalable systems: * Keep your servers stateless (i.e. store user data in a database or external storage such as S3) - it's easy to spin up another VM/worker when the state of the worker doesn't need to be persisted (pretty much the promise of Docker). * Have a scaling strategy for data access/storage that's suitable to your data storage needs. This is typically the hardest thing to scale. * Cache data when appropriate (L1 = in memory: e.g. HttpContext.Cache, L2 = local network: distributed, e.g. Redis/Memcached, L3 = wan: CDN, L4 = disk access: files/blob storage e.g. reports, images, video) * Optimize your application * Use the right tool for the job CQRS boils down to serving queries (e.g. view) from hot caches (or 'views' prepared specifically to answer a query) and asynchronously processing commands (e.g. add/update) by depositing such requests in a queue for processing. The command processing in return updates the hot caches. I've used MassTransit with RabbitMQ and I can say that it works well, but the additional overhead wasn't worth it at the scale the software needs to operate at (&lt; 100 req/s). Of note, Teamcity has good integration with YouTrack - and you can run both 'free' for small teams. Carefully review your situation: your resources, your goal and your journey. Don't make decisions, especially concerning architecture, on a whim. Best of luck. 
Nothing worthwhile.
And on the join page you see this: &gt; To join you must first prove your skills. &gt; Choose your language to begin... But C# is not an available language. So you can not sign up ***using C#***. Duh.
Once some katas become available, they will be available for choosing. You can submit katas in any language, no matter your preference. You also don't need to select a language preference, that is merely for filtering your "dashboard". I've signed up with Haskell, Javascript and Ruby, but I can still see and submit everything for all of the other languages. Duh.
Want us to do your work for you? Pay us.
It's a community driven website, where *you* gain from the learning. Ya know, like wikipedia, stackoverflow, even reddit. They also don't pay their contributors. Do you demand they pay you, too?
&gt;comparing these guys to Jeff Atwood Go to hell.
Like I said, you can not sign up **using C#**. You can sign up using Haskell, JavaScript and Ruby, sure, but not with C#. That was the point of what I said. Are you part of the team? Then please stop promoting this. You're making a fool of yourself and you shine a bad light on the project. You also said before the content comes from the community. On the about page you see one of the team is on place number one on the list, so he apparently is part of the community, so in conclusion the team is part of the community. Why don't they even provide **one* demo kata for C#? They obviously don't care enough.
Hm, Thanks. I know I understood this once but have long forgotten... For anyone else who didn't immediately understand Given public class Test { public string foo; } running public void ModifyFoo(Test testclass) { testclass.foo = "I was changed"; } public void RunTest() { Test t = new Test(); t.foo = "value A"; ModifyFoo(t); Console.Write(t.foo); } is identical to running public void ModifyFoo(ref Test testclass) { testclass.foo = "I was changed"; } public void RunTest() { Test t = new Test(); t.foo = "value A"; ModifyFoo(ref t); Console.Write(t.foo); } which makes it appear that it's pass by reference. However running public void ModifyFoo(Test testclass) { testclass = new Test(); testclass.foo = "I was changed"; } public void RunTest() { Test t = new Test(); t.foo = "value A"; ModifyFoo(t); Console.Write(t.foo); } is not the same as running public void ModifyFoo(ref Test testclass) { testclass = new Test(); testclass.foo = "I was changed"; } public void RunTest() { Test t = new Test(); t.foo = "value A"; ModifyFoo(ref t); Console.Write(t.foo); } 
Not sure. I'll update this post when I'm back at my other dev machine.
Since it hasn't been mentioned yet as a message bus: Microsoft's [Service Bus] (https://msdn.microsoft.com/en-us/library/dn659461.aspx) - it uses SQL Server database to persist messages though.
I am now convinced I can never let anyone watch me code. Staring intently at the screen for half an hour, getting up to pace, sitting back down and changing two lines. New thought occurs and the last 4 hours of work get torn out and rewritten sensibly. My audience would be clawing their eyes out...
I pointed something out, you say it's not true. I made my point more clear, you still agreed. I made it even more clear, and then you say the same as me - but at the same time say I'm still wrong. Doesn't change anything. I'm still right. You can't sign up using C#, only using other languages.
The sign up button is on the C# page, HOWEVER when in the process of signing up it asks you which language you will be using. That is where we are unable to chose C# and therefor unable to sign up using C#.
Shorter != clearer || better.
&gt;Otherwise, I recommend going to the library with a flash drive and downloading the express or community edition iso (you'll need 4-8 GB of space on the flash drive). Good plan, but you'll also need to download the help files which is only possible from within VS AFAIK.
I'm all for supporting new ideas but come on guys - what's going on here? You guys designed it so get it but try wiping your brain and coming at this fresh. It's not intuitive. It's cluttered. The idea of "code kata" means nothing. Back to the drawing board.
That is true, thanks for the clarification.
Didn't know that! Thank you for the information. Bookmarked and stored.
I have tried different examples including [this](https://code.msdn.microsoft.com/windowsdesktop/HangMan-C-version-e0d17f1b) and I also tried out a [youtube](https://www.youtube.com/watch?v=E8XQ9x-7yYk&amp;list=PLjk-5kzdtBaDezZt2CVZGo7Vs02LHMqni) example but again it involves drawing the hanged man which I don't really want.
It sounds like a homework question. Is this your homework?
Kinda, I have a friend (which I sometimes consider to be my mentor) that suggested that I should do something like this. I have come up with the [flowchart](http://imgur.com/s0eVME9) myself and my mentor and I came up with the "rules" to add as difficulty.
Where exactly are you stuck? Have you started coding anything yet? Surely you have code up until you set max lives, right?
&gt; ating the second form? You have a whole bunch of ways you can choose to do this, the easiest being making the second forms textfields public instead of private. That will allow you to read the information back from the main form (form 1). Well it wont be text fields, its variables, and they are public. However. I don't want the user to have to press a button to fetch the info. They should click a button to open Form 2, after they close the openfiledialog on the second form I need it to feed back to the main form.
There are several approaches, depending on the data you need to share. They all have their pros and cons. - **Parameterized Constructor Approach:** Create a parameterized constructor for the second form and when you call it to show, pass the values as parameters. This would be the preferred approach most of the time because it correctly separates the two objects and limits dependence. public Form2(parameter1, parameter2) { InitializeComponent(); // Do whatever you need to assign them here } - **Owning Form Approach:** When showing the second form, you set its owner to the first form, allowing you to access any public members of the parent form. Less than ideal method since it opens members of one object via *public*. This is best used when you need to make changes to something on the parent form. Usually rather than make the member public, a function is written in Form1 that takes parameters and makes the appropriate changes to a private member. private void Form1Function() { Form2 secondForm = new Form2(); secondForm.ShowDialog(this); } private SomeForm2Function() { // Reference this.Owner in Form2 functions to access public variables declared in Form1 } - **Static Approach:** Create a public static class with public static variables that are initialized on program start so you can reference them anywhere in the program at any time. Rarely is this the correct method of accomplishing something; mostly people will use this to avoid a proper code hierarchy. However, there are times when a persistent "session" needs to be tracked across many facets of a program and this is often the most effective way to do it for small amounts of data. Terrible to use with large data structures. Example: public class SessionVars { static public int Variable1 { get; set; } static public string Variable2 { get; set; } } Then you simply reference SessionVars.Variable1 = 1; int myValue = SessionVars.Variable1;
not op, but what are you not happy with? If we don't know we cant help.
* What do you get out of the time and effort you've invested in this website? Personally? Professionally? Tangibly? Intangibly? * Is your content attributed to you, or is it part of a communal pool? * What rights do you have for the content you've contributed? * Can your contributions be revoked, deleted, or permanently taken offline without your consent? * Can you download or archive your contributions? * Are you comfortable with the business model and goals of the website you're contributing to, and thus directly furthering? [Source](http://blog.codinghorror.com/are-you-a-digital-sharecropper/) 
What have you tried?
For something of the nature like this, if you are not tracking suit (IE all Queens are simply Queens, all Tens are Tens, etc) I would recommend using a [System.Collections.Generic.Dictionary](https://msdn.microsoft.com/en-us/library/xfhwa508%28v=vs.110%29.aspx). During the deal phase, you simply go round robin and add a random card to the hand by checking if that TKey exists. If it does, increment the TValue, if it doesn't, add a new item to the dictionary. During each player's turn phase, you can check for a TKey in the target player's hand and if it exists, you remove that item from the dictionary and increment yours based on his TValue. If it doesn't exist, you draw (which is the same logic as being dealt one card).
I've tried looking at the files that were created. I figured it would be in WebApiConfig. Which has the routeTemplate: so i can add or remove the /api. I looked at the routeConfig but that seems to be for the main site. I looked at Web.config but nothing. I searched for values but only result was ValuesControllers : ApiControllers. but I was not able to find how to change it from api/values to /api/somethingthatisnotvalues Thanks
&gt;Because homework FTFY
if you are going to work a console app. the point of entry is main. Are you using visual studio ? It should create a simple scaffolding for you to use.
I prefer to delete everything in the config and define routes using attributes. http://www.asp.net/web-api/overview/web-api-routing-and-actions/attribute-routing-in-web-api-2
He's right about the exponentiation, he just typo'd an extra 0 in one of the constants so his result is wrong.
I will give it a read. Thanks. 
The 0 in the call to Next isn't necessary. Next(list.Count) does the same thing. 
The op's goal doesn't appear to be to learn something, just to finish the homework.
&gt; Can't even answer a question. Thinks he is funny.
You can also customise the routes for controllers and individual actions like so: Whole controller: [RoutePrefix("api/CustomStores"] public class StoresController { [HttpGet] public IHttpActionResult GetStore(Guid storeId) { } } Individual action: public class StoreController { [HttpGet] [Route("api/CustomStores"] public IHttpActionResult GetStore(Guid storeId) { } }
He probably dependency injects and loathes the singleton pattern, which depends on a static instance.
&gt; An easy and somewhat better solution is to use an efficient sorting algorithm to sort the hand first, then iterate through the sorted hand once, comparing each card to the last. This will require a number of operations proportional to n * log(n), which is much better than n2. Wouldn't that be in linear time, not O(n log n)?
Number 4 there is kind of a trick question. While a table cannot contain two *independent* primary keys, it can contain a composite key which is made up of two or more columns, that both values together are considered to determine uniqueness. As for number 15, while there is technically nothing stopping you from adding references to both technologies and using them together, I can't see that being useful in any way, since the WinForms would appear on the server machine, rather than the client accessing the server via ASP.NET. I'm sure there's some niche application that could see that as useful, but they are surely few and far between.
That is very goos to know. I was going to start making a bunch of controllers. Quick question. I am used to passing parameters by using the ? after the URL. Are there any major differences now that it will be a route ?
Good question! It does change around a bit. There are parameters that come from within the slashes and then there are parameters that come after the question mark. Here's a good example of mine: [HttpGet] [Route("api/Users/{userId:int}/Claims")] public IHttpActionResult GetClaimsForUser(int userId, String searchTerm = null, int pageSize = 100, int pageNumber = 1) { } So this is a GET method and you'll see that I've actually structured the custom route to expect the userId in there. The other parameters like searchTerm, pageSize and pageNumber would come after the question mark. You'll also notice that I've given them default values, so they are optional to pass in. An example call of this endpoint would be: http://website.com/api/Users/123/Claims?pageSize=200&amp;pageNumber=3 So when you've got the route configured like this, the params in the actual route structure are required, whereas you can make the other ones optional. It's a little bit different with POST: [HttpPost] [Route("api/Users/{userId:int}/Claims")] public IHttpActionResult PostClaim([FromUri]int userId, [FromBody]ClaimRequestDto claimRequestDto) { } What you'll notice different about this is that I've created a data transfer object which is an object that represents all of the properties that'll be passed in as JSON. It's basically a way of getting potentially a dozen parameters and putting them into a neat place rather than in the method signature. I've also specified the optional annotations of [FromUri] and [FromBody]. This is to explicitly say that the userId is from the route, and claimRequestDto is in the HTTP body. Good luck, mate! *Edit: I should note that the best convention I've found is to put methods like these into the controller of the object they are GETting/POSTing; So even though the User entity is mentioned in the route, I put these methods in the ClaimController.
Thanks for the thorough response. It is starting to make sense. I can't wait to pick this back up tomorrow. Thanks again. 
&gt; Asking someone to "Explain action filtering in MVC." off the top of their head, in a high pressure situation, with people looking at them, tells you nothing. I don't think I'd agree with that. Asking specific questions is a good way to gauge depth of knowledge. Although I always phrase it as "Have you used X", then just move on. Technical interviews save time for everyone and allow you to set up expectations.
So you are trying to find the root of a non-linear equation. Fortunately, there are a wide variety of [algorithms](http://en.wikipedia.org/wiki/Category:Root-finding_algorithms) available to do that! The most straight-forward method is probably the [bisection method](http://en.wikipedia.org/wiki/Bisection_method): basically, you take points a and b such that f(a) &lt; 0 and f(b) &gt; 0 (or vice versa). Then, you calculate c = (a+b)/2. If f(c) &lt; 0, replace a with c. Otherwise, replace b with c. Repeat until you have a and b that are sufficiently close together. This is an easy method to understand and implement, and it also doesn't require the function have a derivative (it does require continuity, but that's pretty easy to come by). The downside is that convergence is slow. It will take a large number of iterations to achieve a very small distance between a and b. There are many other algorithms available. Check out the Wikipedia page I linked above. Also, for a situation such as this one, you don't need to worry about the speed of convergence. It will quickly get you to the limit of double precision numbers. It's only when you have more expensive to compute functions, greater required precision, or more frequent calls to the solver does the speed of convergence become a concern. Generally, there are tradeoffs between algorithms (if there weren't, the worse algorithm would be quickly forgotten). The bisection method is slow, but it doesn't need a derivative and it guarantees a solution as long as f is continuous. [Newton's method](http://en.wikipedia.org/wiki/Newton%27s_method) is a good contrast. It's very fast, but it requires the derivative of the function. Worse, it can give you very wrong answers (or no answer at all) depending on the function. So there are tradeoffs to consider. Your equation is simple and it doesn't seem like you need to solve these types of problems frequently. I'd suggest something like the bisection method or secant method (mentioned elsewhere).
Yep thanks, havent used Random in a while
Why don't you use Tasks? Much easier to handle. https://msdn.microsoft.com/en-us/library/system.threading.tasks.taskfactory.fromasync%28v=vs.110%29.aspx
http://signalr.net/ It's robust, simple and performant.
Your flowchart is what you want to do. All you have to do is translate your psuedo code into actual code!
I have been at college for the last year studying software development. Apart from that I have no education in programming, I taught myself VB.NET when I was younger. 
I don't know too much about sockets unfortunately but I'd highly recommend asking on Stack Overflow. Not to steal reddits glory but Stack OVerflow is the de facto place for programming help currently.
That would just be the [secant method](http://en.wikipedia.org/wiki/Secant_method), which is a perfectly fine method to use. It converges pretty quickly, so you don't miss out on much using secant method over Newton's method. It actually has many of the same downsides as Newton's method though.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Secant method**](https://en.wikipedia.org/wiki/Secant%20method): [](#sfw) --- &gt; &gt;In [numerical analysis](https://en.wikipedia.org/wiki/Numerical_analysis), the __secant method__ is a [root-finding algorithm](https://en.wikipedia.org/wiki/Root-finding_algorithm) that uses a succession of [roots](https://en.wikipedia.org/wiki/Root_of_a_function) of [secant lines](https://en.wikipedia.org/wiki/Secant_line) to better approximate a root of a [function](https://en.wikipedia.org/wiki/Function_(mathematics\)) *f*. The secant method can be thought of as a [finite difference](https://en.wikipedia.org/wiki/Finite_difference) approximation of [Newton's method](https://en.wikipedia.org/wiki/Newton%27s_method). However, the method was developed independently of Newton's method, and predated the latter by over 3,000 years. &gt;==== &gt;[**Image**](https://i.imgur.com/d8EH0Zg.png) [^(i)](https://commons.wikimedia.org/wiki/File:Secant_method.svg) - *The first two iterations of the secant method. The red curve shows the function f and the blue lines are the secants. For this particular case, the secant method will not converge.* --- ^Interesting: [^Sidi's ^generalized ^secant ^method](https://en.wikipedia.org/wiki/Sidi%27s_generalized_secant_method) ^| [^Brent's ^method](https://en.wikipedia.org/wiki/Brent%27s_method) ^| [^Muller's ^method](https://en.wikipedia.org/wiki/Muller%27s_method) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cpbdmi7) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cpbdmi7)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
I have coded using sockets in C# for years, do yourself a favor and use something like zeromq http://zeromq.org it will give you realabilty/flexibility that you will likely never get using sockets directly unless you have years to spend in socket land...which is a dismall boring wasteland of anitquity.
&gt; Still can't answer a question.
Try reading Range.NumberFormat to a string variable, and do a series of if-else statements to act accordingly. For example, if format contains '$' it's a currency, if it contains 'm', 'd' and 'y' it's a date, and so on.
Excel store DateTime as OADate, short for OLE automation date. It is essentially the number of days elapsed since 1900-01-00 in double. The fraction part of it the time, so an hour is (1/24). You can use [DateTime.FromOADate](https://msdn.microsoft.com/en-us/library/system.datetime.fromoadate\(v=vs.110\).aspx) to convert it. You can't really "safely" check for what type of value it contains. Range.NumberFormat might give you a hint, but I wouldn't rely on it. It would be better to hard code that part, if you know the structure of the spreadsheet beforehand.
Puzzle(out y, out y); ...? Maybe I don't understand..
Answer: [ Puzzle(out x, out x);](/spoiler) 
Its super easy in wpf, but given that you're using windows forms, you'll probably have to write a custom control.
It does, thanks!
You don't need to if your code makes sense to begin with, ie doesn't use weird bit flipping instead of simple method calls. 
&gt; The only problem with this is that my Hashing class doesn't exist in a web application that can use Response.Cookies. What do you mean by this?
pretty sure that there are two genders. [this is what wikipedia shows](https://i.imgur.com/9nr8MvK.png) at [/wiki/Gender](https://en.wikipedia.org/wiki/Gender)
Response doesn't exist in the context
Ah I'm not good enough to conceptualize stuff like this out of my head yet... I need a lot of reference. I'm familiar with memory streams and such but if you could provide a little more detail then I'd love you forever :P
That's exactly the answer - basically you're passing the same variable into both X and Y - which sets their reference to the same. So when you see: x = 0; x and y both are set to 0. Then the same for: y = 1; x and y are both set to 1.
Alternatively: [ Puzzle(out y, out y);](/spoiler)
[SharpDX](http://www.sharpdx.org) has a control you can use in winforms. I believe there is an example in the samples too.
yea a buddy of mine has one of them and they're really ingenious. I think he still runs some bad written steam bot on that thing. Really bad written because It's written by me.
A program that tracked a sertain part of my screen, its all black, when the program detects change in color it will start a timer, when there is a change again it will stop the timer. Cant really explain it better. 
Ignore the other guy. What you're trying to do isn't hard to understand at all. It shouldn't be *too* hard to implement, but it really depends on you. You can easily search to find methods of getting the color of a specific pixel on the screen, set up a timer, etc. The only potentially hard part is gluing it all together.
The terminology on this question could perhaps be more explicit. I was perhaps taking this WAAAAY too far into a weird spot to make this function **return** a value, instead of being a void return type. Perhaps you should modify this to say "what set of parameters can you pass to make a true print to the console?"
It also lists [Third Gender](http://en.wikipedia.org/wiki/Third_gender) that has a slew of different meanings in different societies and periods in history. But yeah, as far as the *vast majority* of use cases go, male/female works just fine. It's those corner cases that are going to [blow up in your face](/r/tumblrinaction) though, which is always a fun time:p
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Third gender**](https://en.wikipedia.org/wiki/Third%20gender): [](#sfw) --- &gt;__Third gender__ and __third sex__ is the concept that individuals are categorized (by their will or by social consensus) as neither [man](https://en.wikipedia.org/wiki/Man) nor [woman](https://en.wikipedia.org/wiki/Woman), as well as the social category present in those societies who recognize three or more [genders](https://en.wikipedia.org/wiki/Gender). The term *third* is usually understood to mean "other"; some [anthropologists](https://en.wikipedia.org/wiki/Cultural_anthropology) and [sociologists](https://en.wikipedia.org/wiki/Sociology) have described fourth, fifth, and "some" genders. The concepts of "third", "fourth" and "some" genders can be somewhat difficult to understand within Western conceptual categories. &gt;==== &gt;[**Image**](https://i.imgur.com/6GKYAPB.jpg) [^(i)](https://commons.wikimedia.org/wiki/File:Anna_P.jpg) --- ^Interesting: [^Māhū](https://en.wikipedia.org/wiki/M%C4%81h%C5%AB) ^| [^Sworn ^virgin](https://en.wikipedia.org/wiki/Sworn_virgin) ^| [^Fakaleiti](https://en.wikipedia.org/wiki/Fakaleiti) ^| [^Travesti](https://en.wikipedia.org/wiki/Travesti) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cpbpbc6) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cpbpbc6)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
Look at this: https://msdn.microsoft.com/en-us/library/system.drawing.bitmap.getpixel%28v=vs.110%29.aspx Is this what you want to do? Or you can p/invoke the win32 function: http://pinvoke.net/default.aspx/gdi32/GetPixel.html Also found this on SO: http://stackoverflow.com/questions/1483928/how-to-read-the-color-of-a-screen-pixel
Yes this is what i want. Now it's just how to make it work, the process should be. 1. get the color of the pixel and save it. 2. Check color of pixel and save color 3. check color of the pixel 30 times a sec or more. 4. if color is the original color dont do anything 5. if color is not original color start timer 6. keep checking till the non original color appears again and stop timer. Now to make it into progamming language....
See the last link SO has some sample code....
Skip C#, use AutoHotKey. You'll have something running in seconds. Also, there's some nice AHK libraries that do more than just pixel reads. You can pass them images and they'll find them on a given rectangle on any of your screens. 
Could i pay you to make this, i dont really feel i have enough experience and time to get it done, and if you can how much will you need? It seems like you could do it easily ;)
I will take a look at this, thanks. 
Great offer but I also don't have a lot of time. I only browse reddit on the way to and from work...
*Edit: See below for some basic testing. I'm willing to say that returning one long string is probably not a good idea at this point.* -------------------------------------------------------------- I'm not sure that there's a "best" way to accomplish this, but what you're doing works well enough for anything under 10,000 rows. If your results set is very large, in the order of more than 10,000 returned rows, you might consider returning one row from SQL for speed's sake (SQL can usually concatenate that data faster than you can loop it). You might also be concerned about the length of the CC/BCC fields. Some servers cut it off after a certain number of characters as an anti-spam measure. 
Okay, I'm a high achiever and I like to make sure I'm doing things correctly and efficiently. Oh and thanks for telling me about the lenght of the CC/BCC fields, I completely forgot about that. Hopefully it won't be an issue but if it is you just saved me from a major headache. 
I did, but since you're too thick you're probably beyond help. Tootles.
I would be worried about the number of emails you are tring to post in one go. there is nothing wrong with a datarow but do look at batching your emails with skip and take, 
Are you getting any execution at all? Like, if you breakpoint in the convert, does the breakpoint get hit? Edit: i don't see an xmlns qualifier in front of your xaml declaration. Make sure you add an xmlns reference to the top of the xaml file that references the namespace that contains the converter.
&gt;still no brain I don't owe you anything. Fuck off.
Pssh, you're the brainless cunt being a copycat. You're acting like you want a fuck. I'm not gay, so end it fag
http://www.scichart.com/Abt.Controls.SciChart.SL.ExampleTestPage.html If you check out that online demo class, click on the MultiPaneStockChart (second row, second column) Within that you go to the sourcecode by clicking on the button on top right of the screen. In there you can see how they declare the converter and I'm doing the each same thing but with no result.
&gt; Insulting intensifies to homophobic slurs. Still no answer.
Grab a Raspberry Pi or a cheap rented server (Amazon AWS, DigitalOcean, Heroku, Windows Azure, others), slap some basic processing program on it, and tada. Azure is, IIRC, free if you keep your resource usage low. My homebrew "server" is an old laptop (used to be my Pi, but I needed more power) that gets all unknown traffic from my house's router. Runs Arch Linux and a hodgepodge mix of nginx, Passenger, Ruby on Rails, and (up next) Mono. If you can get something with an authoritative IP address (read: not behind a router you can't work with), it's not terribly difficult to get a basic system set up.
I'm a programming newb and I got this. Yay.
The paste is inaccessible because it's a private paste. Change its visibility to Unlisted.
I just read the documentation on this and I love it. Im just not sure how I would implement this into the program im currently working on. As you can see below I did find the solution to my problem though. I expect if I dont migrate to something like 0mq I will run into more and more problems just like this one. Thanks for introducing me to this.
Why not Public IEnumberable&lt;string&gt; EmailAddresses() { using(var conn = new SqlConnection()) { conn.Open(); using(var cmd = conn.CreateCommand()) { cmd.CommandText = ""; // add query here cmd.CommandType = CommandType.Text; using(var reader = cmd.ExecuteReader()) { yield return reader.GetString(0); } } } } Ok that was from memory and entered on an IPhone, so sorry if it doesn't work out of the box. The idea is to not store the emails locally at all, but to stream them from the SQL Server. This reduces the overhead in a number of ways, one the emails are available from the start meaning you don't have to wait for the complete list to load into the data table and two you don't have to create the data table or and I'm sure your also creating the adapter as well. Now if you want you can call the method with ToList() which will pull all the emails at once. You still avoid the data table shuffle 
I'm really just a beginner and i haven't used these before. From the looks of it this is going to be important for me to learn. Thanks for the nudge in the right direction.
Haha yeah, i actually fixed that in the example before i posted it here i just didnt fix it in the pastie lol. my actual code however didnt have this error and my async callback problem has been fixed (for now atleast). Good eye.
By the looks of it you might want to check out [object initialisers](https://msdn.microsoft.com/en-us/library/bb384062.aspx). Basically, you're able to create an instance of an object and set all the various properties you need *before* control is returned to the caller. var person = new Person() { FirstName = "John", LastName = "Doe", Age = 20 }; You can leave out the properties you aren't interested in (so in your example, LastName), while not having to create a constructor that caters for every possibility. You might also want to check out [nullable types](https://msdn.microsoft.com/en-us/library/1t3y8s4s.aspx) too. It'll allow you to set the type to null and also provide a nicer way of dealing with it (it also serves as a good indication to other programmers that the value could be null). As oscooter pointed out, you can only do this with reference types (and not primitives). String? lastName = "Doe"; //or whatever else you want if (lastName.HasValue) { //do something }
yeah. 
B========D
If you are not spotting anything wrong in the code, I have a feeling I probably messed up some internal setting or reference. I think I'm going to try to run this on VS2015 and see if something changes.
Glad you found a solution. Happy coding!
Oh! That does make more sense. I actually use those two together myself, because WebForms has a nice ASP Control used for reporting that I don't get with MVC.
&gt; Maturity decreases. Might self harm from the anger.
I'm not angry. You're the one who's so butthurt that they need to get the last word in. Or you want it in the butt.
That string concatenation, though. In this case it's pretty minor, but it's still not the cheapest operation in the world. I'd personally do it like so: public string FullLegalName { get { if (MiddleName == null) { return String.Format({0} {1}, FirstName, LastName); } else { return String.Format({0} {1} {2}, FirstName, MiddleName, LastName); } } } Or, combining several of C# 6's new features (and the age-old conditional operator): public string FullLegalName =&gt; (MiddleName == null) ? $"{FirstName} {LastName}" : $"{FirstName} {MiddleName} {LastName}";
Sometimes Visual Studio can improperly indicate that you have an error with a new class not existing (i.e. your converter) because there are errors prior to compiling that class. Take a look at the other errors you are getting to see if there are any you can fix first. Also, if that doesn't work, simplify what you are debugging and get rid of some of the variables. Comment out most the XAML file and get it to compile. Then slowly add items back in like your items (i.e. your converter) in your resource dictionary.
You may also want to consider using the async version of those methods. Slower in absolute terms, but more efficient if you are doing work on other threads at the same time.
If you are doing it that way you might as well turn on the SequentialAccess command behavior. 
I can't really give you that part of my code, but if you look up how basic encryption works in C# You can use RSA, AES etc. You will just need to know what you are getting your basis off of to re-calculate it for decryption. For me I used information about the hardware, current user and mixed and mangled some things around to get the encryption keys that I used to secure the cookie.
I extended TextWriter, did this: Console.SetOut(new AlwaysTrueWriter());, and overrode the Write and WriteLine methods to always return true.
as quick and dirty as i can make it: App.xaml &lt;Application x:Class="WpfApplication1.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:src="clr-namespace:WpfApplication1" StartupUri="MainWindow.xaml"&gt; &lt;Application.Resources&gt; &lt;src:BoolToVisibilityConverter x:Key="BoolToValueConverter" TrueValue="Visible" FalseValue="Collapsed" /&gt; &lt;/Application.Resources&gt; &lt;/Application&gt; MainWindow.xaml &lt;Window x:Class="WpfApplication1.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Title="MainWindow" Height="350" Width="525"&gt; &lt;Grid&gt; &lt;Button HorizontalAlignment="Left" Content="Swap" Height="30" Click="Button_Click"&gt;&lt;/Button&gt; &lt;Rectangle Fill="Black" Width="100" Height="100" HorizontalAlignment="Right" Visibility="{Binding RectVisible, Converter={StaticResource BoolToValueConverter}}" /&gt; &lt;/Grid&gt; &lt;/Window&gt; MainWindow.xaml.cs using System.ComponentModel; using System.Windows; namespace WpfApplication1 { public partial class MainWindow : Window, INotifyPropertyChanged { public MainWindow() { InitializeComponent(); this.DataContext = this; } private void Button_Click(object sender, RoutedEventArgs e) { this.RectVisible = !this.RectVisible; } private bool rectVisible = true; public bool RectVisible { get { return rectVisible; } set { this.rectVisible = value; PropertyChanged(this, new PropertyChangedEventArgs("RectVisible")); } } public event PropertyChangedEventHandler PropertyChanged; } } Sorry for the crappy formatting. 
Congrats! That grade is good news, but more importantly, are you understanding what's going on? And are you enjoying it?
I'm still having some trouble. But I am getting it more now. As for enjoying it...not really. LOL. That could possibly be due to the professor though.
Cool. Since you're in college, internships or research opportunities are your best resume builders. You seem to be getting formal training, and the self taught skills will not hurt.
Also, EF is literally an order of magnitude slower than Dapper. 
[Thanks, stack overflow!](http://stackoverflow.com/a/5182660) I've had this one in my wheelhouse for a while. Very useful! public class BooleanConverter&lt;T&gt; : IValueConverter { public BooleanConverter(T trueValue, T falseValue) { True = trueValue; False = falseValue; } public T True { get; set; } public T False { get; set; } public virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture) { return value is bool &amp;&amp; ((bool) value) ? True : False; } public virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture) { return value is T &amp;&amp; EqualityComparer&lt;T&gt;.Default.Equals((T) value, True); } } example usage: public sealed class BooleanToVisibilityConverter : BooleanConverter&lt;Visibility&gt; { public BooleanToVisibilityConverter() : base(Visibility.Visible, Visibility.Collapsed) {} } app.xaml, change values as necessary: &lt;Application.Resources&gt; &lt;app:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" True="Collapsed" False="Visible" /&gt; &lt;/Application.Resources&gt;
Hey the problem was with visual studio. Running it in VS2015 worked out alright. But looking at ur code, why did you do InitializeComponent(); this.DataContext = this; what's this.DataContext=this going to do?
You were right. I ran it in VS2015 and no errors. Thanks
Seems like a perfect match for Parse.com or other BaaS. They're simpler to implement than setting up a real server
Hey, the problem was in VS. It's working fine now once I restarted. I can't believe I wasted so manyyy hours on this. I guess I could look at the bright side that I figured out a lot of of the nitty-gritty of WPF. 
Now modify it to work even under /u/Sjetware's constraint: "What set of parameters can you pass to make a true print to the console?". I think your answer still works, but I'm a Java guy and am not 100% on how inline class definitions and [the comma operator](https://msdn.microsoft.com/en-us/library/zs06xbxh.aspx) interact in C#, but I think it can be done.
yeah im up to my ears in google chrome tabs learning about it now haha thanks
Have you tried writing anything yet? I was working in C++ back before C# came out, and when I made the switch I didn't find many problems. And if you've been working in C++ .net you've probably got a good grasp of what the .Net Framework offers, which is 75% of the battle. 
MSDN should be your bible then if you have that kind of background. The API reference has conversions for pretty much everything from C++ to C#. Those that aren't managed can be found on the pInvoke wiki. MSDN Ref https://msdn.microsoft.com/en-us/library/618ayhy6.aspx MSDN C# Guide https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx PInvoke http://www.pinvoke.net
Lol, I was trying to do something waaaay to complicated
I took Bob Tabor's C# Class on learnvisualstudio.com. That course is worth the 150 lifetime subscription fee just to use the videos as a reference. 
Nice, I'll go ahead and do batch emails because my understanding is that BCC and CC are limited to a number of characters. This will definitely fix that issue. Thanks. 
Feel free to look at the tests cases, but it looks like sequential access is the faster option in all cases. https://github.com/jcanady20/DataTests With 1000 addresses in the database: DataTable: Started:: Getting First Address Retrieved 1 records in 0:0:0.34 Completed:: Getting First Address Using IEnumerable&lt;string&gt;().First() Started:: Getting First Address Retrieved 1 records in 0:0:0.19 Completed:: Getting First Address :&gt;dtall Started:: Getting All Addresses Retrieved 1000 records in 0:0:0.7 Completed:: Getting All Addresses :&gt;sqall Started:: Getting All Addresses Retrieved 1000 records in 0:0:0.6 Completed:: Getting All Addresses With 12000 accounts :&gt;dtfirst Started:: Getting First Address Retrieved 1 records in 0:0:0.19 Completed:: Getting First Address :&gt;sqfirst Started:: Getting First Address Retrieved 1 records in 0:0:0.6 Completed:: Getting First Address All Records: :&gt;dtall Started:: Getting All Addresses Retrieved 12000 records in 0:0:0.18 Completed:: Getting All Addresses :&gt;sqall Started:: Getting All Addresses Retrieved 12000 records in 0:0:0.10 Completed:: Getting All Addresses Looks like in all cases the IEnumerable&lt;string&gt; trick is faster. private IEnumerable&lt;string&gt; GetAddresses(IDbCommand cmd) { using(var reader = cmd.ExecuteReader(CommandBehavior.SequentialAccess)) { while(reader.Read()) { yield return reader.GetString(0); } } } 
&gt; Strings are bizzaro reference types that act like value types in all ways other than being passed by reference. Agree with the rest, but this one seems backwards to me. Strings don't "act like value types", they act like reference types with value-wise equality comparison. There's no special treatment of strings by the runtime; you can easily write a class with similar semantics yourself.
.. Wanna talk about them? If ever there were a place where we could help each other it would be this place. One of the biggest reasons why I like contributing on StackOverflow is that I always come across things I don't understand well but in trying to answer the questions I learn a ton about it. That, or you think you know the answer and then either you go and dig in and find out you don't, or someone else smarter than you posts and you learn from reading what they have to say.
Amazon Web Services EC2 has a free tier which is, well, free. They come pre-installed with a variety of Windows and Unix OSes. No network config to do, no shitty upload speeds over a home Internet connection. Plus, no physical evidence at your location for the Feds to come after. Not that what you describe sounds sketchy or anything.
http://stackoverflow.com/questions/4660142/what-is-a-nullreferenceexception-and-how-do-i-fix-it
No, you explained what you want to do, not why you want to do it. Equivocation is a warning sign of purposeful deception. Malware often uses e-mail as a transport because firewalls almost always have those ports open. If the user is aware of what your software is doing, why isn't it using their e-mail credentials? You say "user computer" in one sentence and "I can upload" in another. Inconsistent voice is also a warning flag of deception.
MAC addresses aren't the best for this. You'd be better off just giving each user a Guid.NewGuid() and storing it locally. Have them reuse the GUID each time they send data to you. A MAC address can be used with other ID's from the system to create what's known as a 'Hardware ID'. This is used by software protection systems to make sure you only install the softare on XX number of machines. Often time they take serial numbers from HDD, MAC addresses, Video card info any physical part of the machine. They can 'break' when you replace or upgrade a part of your machine. 
oh yea. I'm sorry. I removed that part from my question because i thought it's clutter and doesnt matter for the question. It's for anonymous feedback purpose. I data such as screen size, ram, how often the user starts my app each day, what features he uses. I want to aquire such information because I want to improve my Software. For example I can promote or remove unused Features and take away clutter by doing so. This is pretty common in software development as far as I know. I think Android and iOS are doing this automatically for the developers.
It's a compete myth that if your data source changes you don't have to recompile. A simple change as returning a bit instead of a int for Boolean values will force you to fix your code. The only way you could avoid this is return all data types as strings, but no that would be horrible in many other ways. It's also pretty much a myth about performance as well. The EF queries are optimized to be pushed into the query plan cache so they gain the same benefit as stored procs do. 
&gt; Even tho I don't know where I should save them without the user being able to manipulate them. The user also can manipulate their MAC address.
To question 5, Entity Framework. To every other question, you're programming for wpf like you would for winforms, which is wrong. Read up on wpf and mvvm best practices.
I have something that I think is gonna work also thanks for ideas on how to tackle this little project
Well IME historically when .NET shops needed 3D rendering, they've used something like SharpDX et al. Of course, deferring to a C++ implementation is probably just as good. But yeah, I'm hoping my product will eventually prove useful to the .NET ecosystem. :) I hate how everything either has to be raw DX (or a manged wrapper over it) or a full-sized game engine. If you wanna keep an eye on it, www.losgap.com is the website for my project. But a lot of the site is incomplete atm, just as the project is. :) I think it'll be about a year before I can release it properly. Good luck!
The reason it is results is because I'm using it to return multiple values, and thanks for pointing out that it might return 0 I didn't realize that might cause a problem when I wrote it, I changed the 0 to a 1 and it looks like that fixed it, also so far I've only taken 1/2 a semester of C# or any programming language so I's guessing that why my nomenclature is bad
I'll have a look at it. Good luck to you too ;)
I'm familiar with overloaded constructors ( just forgot to mention it here :) ) So what I understand is that you can create a class without an constructor and it would work fine. I only have to keep in mind that the object can be created without values and also that the user, since another programmer might use my class, has no idea about the object and what to define so it would not be a good coding way since it is not clear for others and also for me since I won't keep it by heat my whole life :) Did I get this right?
It's important to consider that a laptop with both wired and wireless networking will have and show two different MAC addresses depending on which interface is being used. In other words, the MAC is kind of ok as a horrible kludge, but it's not in any way reliable. You haven't given any more details on what your actual problem domain is, but on the web, trying to reliably track users is a continually discussed problem in marketing circles (is a user on their phone the same user as on their desktop? Is a user in incognito mode the same? Should they be?) Generally they use cookies for this.
Are you concerned about people "hacking" your system by pretending to be someone they are not? Faking a MAC address is trivial on a virtual machine.
&gt; Pluralsight.com I'll have to check out Pluralsight.com. Thanks! What I am really looking for is a MVC or Entity Framework for Web Forms Developers Course. 
[ElMalakai](/u/ElMalakai) told me about GUIDs. I will use thoose for the new version of it.
I talk about saving the GUID
Yea. I know that everything is breakable in teh world of software. But it doesn't really matter that much. Even when 1% of People would take their time to destroy it i would still have 99% of correct and valuable data i can process
You have just invented the Cookie. :)
Then go with a server-generated blob that you can verify tampering.
Another quick Q I need to open a csv file and append some lines to it. The problem I encountered was that if I ran the code twice it ended up appeneding the same content twice. At every other place I can check easily or limit my searches but with a file how can I read it from the bottom? I'm trying to avoid reading the whole file. File.Append just adds data to the end. I need it to check that the line I'm adding is dated higher than the last row's date. It's a csv file. 
I dont see why this is even necessary. Use EntityFramework and be done with it
The DTO should automatically be populated by the Web API binder - you shouldn't really have to do anything special. If your method signature looked like: [HttpPost] [Route("api/Users/{userId:int}/Claims")] public IHttpActionResult PostClaim([FromUri]int userId, [FromBody]ClaimRequestDto claimRequestDto) And your DTO looked like: public class ClaimRequestDto { public Guid? ReceiptId { get; set; } public int MyNumber { get; set; } public string MyText { get; set; } } Your HTTP request would look like: POST http://mywebsite.com/api/Users/123/Claims { ReceiptId: "BF67B917-1177-4117-8698-3B27E1EC4219", MyNumber: 655, MyText: "Hello world!" } That should simply just work. If you can't get it working from this point, is the code something that you could put on GitHub for me to look at, or is it sensitive?
This looks good but unfortunately I don't have this option to use "SelectMany" I updated my question I hope it is clearer now
The error occured because of the Type for IEnumerable it has to be "Event" not "Events" .. Now there is no error but when I start the program I get an error that IComparable has to be implemented. Need to check tomorrow! Thank you anyway this helped me a lot! Is IComparable interface an need for the OrderBy?
IComparable is an interface that is used to tell LINQ how to compare two objects of the same type. The interface is a single method, Compare, that takes two objects and returns a positive integer if the first item should come first, zero if the items are equivalent, and negative integer if the second item should come before the first. However, if you are ordering by DateTime there are builtin comparers for System types. Are you sure that the Start property is of the type DateTime? It may be using some Google-defined type that would then require a comparator. EDIT: I wrote this before watching the included gif. Try this: var sortedEvents = request.Items.OrderBy(i =&gt; i.Start.DateTime); 
Yes, absolutely. Try and define your classes in a way that helps a consumer understand how to use them - which definitely includes yourself when you return to your own code a few months after you've written it!
Well for GUI development you have WPF that blows away other GUI frameworks.
Alright, so I now see that your request is coming back as 200 OK, but the response body is null. So that's a good step. Now it just seems to me like the properties aren't binding, so maybe try your JSON like: { "username": "user", "email": "email", "password": "password" } Note the extra quotation marks. Try binding an integer like: "myNumber": 12 Play around a bit - you're really close to getting it.
Mads is a wizard.
I feel like this is the future me.
I can see the Elvis operator being really handy. 
Let's all have a moment of silence for the puritan in all of us.
Doesn't Elvis Operator refer to null coalescing? That's been in the language a while. 
I love these :) It will take me some time to get used to reading all these lambda expressions in the class body. I'd heard of the Elvis operator before and look forward to it, I'm not sure what I think about using it for delegates though, I just loved the simplicity of calling a delegate directly instead of using invoke. I guess it's a tradeoff for safer code. Also a big fan of the nameof operator. I have a project where I used the [Type-Safe Enum Pattern](http://blog.falafel.com/introducing-type-safe-enum-pattern/) for the purposes of extensibility (plugins extending enum definitions) and it left a foul taste in my mouth that I had with to have all these hard coded strings in my code. I'm glad I'll have an alternative now. 
Yea, I think I figured out later that it's probably not a real problem with the object holding that global reference. At the time I freaked a little thinking it would keep the "holder" object from being garbage collected. But I had it backwards - it's only if someone still has the "holder" object referenced that that would happen. Still I found it surprising that setting it to null seemed to also set the static instance to null. (I still don't believe this, but I guess the other dev saw it happen) I think rather we probably had some other timing issue or something. Anyway, thanks for your thoughts. And good point about the read only ! I didnt think of that, I will check to see what it's doing right now.
That's different. The null coalescing operator is used to define behavior when a some input variable is null. EG: eg: string s = inputString ?? "defaultValue"; In this case 's' will never be null. We use the Elvis operator for when we want to protect against null reference exceptions. EG: string s = foo?.InputString; In this case 's' will be null if foo is null or if foo.InputString is null, otherwise it will be InputString. Had we just used foo.InputString, we risk hitting a NullReferenceException if foo is null. They both can complement each other like so: string s = foo?.InputString ?? "defaultValue"; Currently without the Elvis operator we need to do something like: string s = (foo == null) ? null : foo.InputString; which could be tedious for foo.bar.abc.def.InputString. 
The user will not be able to create a GUID that makes him impersonate another user without copying it from another users machine. All the user will manage is make his identity invalid. I wouldn't worry at least.
Sorry it was late and my brain was already in bed, I forgot to use the using System.LINQ; So OrderBy could not work. 
Great thank you I will try this at home since it is not a calendar I'm creating I need to handle it if the property is empty, good point! 
&gt; Still I found it surprising that setting it to null seemed to also set the static instance to null. (I still don't believe this, but I guess the other dev saw it happen) There is no way that will happen (again, unless you are not showing us the right code).
Dunno? I've never heard of it until I watched the video. I am also not a veteran of code either. 
I do yes.
Awesome. Are you going to put it on nuget?
Your understanding of Properties and setting them to null is correct but your also using Singletons wrong. What is the point of getting the Singleton Instance and setting it to your own property? If its for ease of use you should just do FrameWorkApp Framework { get{ return FrameWorkSingleton.Instance; } } Regardless what you are doing if you have described it correctly should not cause the singleton to be null.
I had to Google it which came up with Wikipedia referring to null coalescing, hence my confusion.
I wouldn't want to play Poker with those playing cards.
Oooooooh. I wonder, saved this thread.
Ha ha, yeah couldn't find a good image so thought a card will do ;)
Lean into it. I make mad bank.
I've been using [Blogengine.Net](http://dotnetblogengine.net/) for years now. Back when I looked for one (because I didn't want to continue using the one I built for fun) I found Blogengine.Net to be the best (there where 2-3 other good ones as far as I recall, but Blogengine.Net was best and it's still kinda actively supported).
I would say it's probably there for interop with native code that returns it.
Umbraco is the big one. Haven't got round to using it though.
Search this sub for "CMS". You'll find prior threads with a lot of suggestions. 
And in the new versions of the framework, doing a throw isn't nearly as expensive as it was before. Microsoft optimized the creation of the stack frames. I'd say the article is shovel-ware, and doesn't address his topic all that well. Like, what is best practice in catching exceptions. 
http://www.orchardproject.net/
We use Orchard CMS at my work and are happy with it. It is very extensible and easy to use. http://www.orchardproject.net
What are you going to do with this CMS? Intranet? Internet? What kind of features do you need? Document Management? Makes a big difference.
Umbraco ?
Give the man a glass of water
It's an untyped pointer. Useless until you cast it to a typed pointer (such as int*) or pass it to something that knows what to do with it. Normally native code interop. Can in many cases be compared to Object in its purpose.
Haven't looked at it - is he not caching the value?
Almost exclusively this is exactly what it is for. There are a few edge cases where you may be messing with memory in shared regions of some unmanaged resource (stuff like writing to raw GPU memory) but for the most part this is used when marshaling between unmanaged code and managed code.
And if you wanted to avoid actually using unsafe blocks, you probably handle that as an opaque pointer via IntPtr. And then since you're really never supposed to use IntPtr directly, use a SafeHandle implementator instead, since SafeHandles can directly take the place of IntPtr, void* etc.
Thanks Mads - great presentation and all in one continuous shot! ANT
Good point. I didn't design this part of the code, but that gives me something to look at and double check
Sitefinity is the only CMS I have any experience with. The company I work for has integrated our Ecommerce solution into it and it works pretty well. It's fairly simple for our end users to deal with their content needs through it. There are a couple of courses about Sitefinity on pluralsite if you have a subscription. DNN and Orchard CMS also have courses which may give you a solid place to learn how to use them all and see what works best for you.
Yeah part of the point of Singletons is to not have references to an object all over the place. Just one reference to the singleton that can be accessed from anywhere. There should be no point setting it to an internal variable/property
The `Admin` makes it sound like you're looking for areas.
Ah got it, thanks! this could get quite messy with a large project. Since you need an area for folder that goes more than 1 level deep after the "Views" folder. Views -&gt; Home -&gt; Razor Pages Areas -&gt; Admin -&gt; Views -&gt; Category -&gt; Razor Pages
Sitecore, not free though.
its a programming discussion
Lambdas have been part of C++ since C++11... C++14 brings template lambdas which are even cooler!
He asked for a **good** one.
http://www.reactiongifs.com/wp-content/uploads/2012/11/OohBurn.gif
The point? Well, I was bored at work :D Alright didn't know that, but I'm fairly new to programming so I don't know what a race condition is for example. But thanks for pointing out that little bug in my code :)
*yet*
I'll give you a quick rundown. On x86-64, you have more logical registers. That means the compiler doesn't have to push registers to the stack as frequently if it runs out of registers during a computation, which means fewer memory accesses, which probably helps a ton with speed. Advantage 64-bit. However, modern x86 CPUs support 'register renaming' - if I write to registers a,b,c and sum into a, then do that again with different values but the same registers, those two computations are independent. The CPU under the hood does actually have more than 8-or-so named general purpose registers, they're hidden, and the CPU decides what registers to actually use when you say 'write to eax'. As such, the instruction planner will see these two sets of instructions, figure out that they're actually independent and parallelizable, and will run them simultaneously using different actual registers under the hood. Advantage 32-bit. However, having more real registers helps the compiler succinctly express its intent to the CPU, instead of the CPU guessing at it. Advantage 64-bit. However, 64 bit means bigger registers, which means that fewer data items can be stored in cache; for instance pointers. If your pointers are twice as large, your cache is effectively half as big. Advantage 32-bit. To deal with that, there are some interesting hybrid modes. We're all familiar with the two normal modes - 64 bit process on a 64-bit CPU, and a 32-bit process on a 64-bit CPU. At least one more exists - a process that uses 64 bit data registers but 32-bit addresses. Now I get to use the larger number of registers, but my pointers haven't grown and so I don't get the cache penalty. This works great for a large majority of programs that are small and never need more than 2 (or 3) GiB of ram. Advantage 64ish bit. So in the end, the answer isn't always cut and dry. Generally, if you work with a lot of pointers, 64 bit might be slower. If you don't, 64-bit might be faster. If you use a lot of memory, 64-bit might be all that works.
Also consider adding the project stuff to the repo... So one can just clone it and open it :)
IIRC, .NET has been slow on 64-bit for the longest time, but that should be changing with the upcoming version of the .NET toolchain. I'm on mobile, so this is all unverified, but it sounds right to me for some reason.
Even after 3 years, I still occasionally wake up screaming after having used DNN for a couple of months.
It's a horrible idea is what it is.
Will do :) 
This isn't the least bit true. I would love (cringe) to see some of your code...
Been a developer for 20 years, 18 in web dev. my code is solid.
I was peaking through your site. I see you don't use javascript minification. I'm curious if this is by choice, or you just have bigger things to do?
I am Norwegian, I don't need to work for my money. It's part of the "you were born in the right country" package. Besides, everyone of you can come here. The more exotic your country is, the more benefits you get when you come here :P (There are even subsidaries for immigrants to get a driving license, about 60 covered by the goverment.)
You use /// instead. :-D 
Just curious! Highcharts is awesome, right? I migrated from [Flot](http://www.flotcharts.org/) about two months ago and I kicked myself for not doing it sooner. 
Yes, and in other functions, I read from that to get the output. But this function, it bombs when I try to read from StandardOutput. If I ignore StandardOutput, the process will run and just sit there without a problem but it will be left in limbo. The process I am calling is Git push -u origin master, now this process completes without a problem when the credentials are correct, but when they are not it prompts for a username/password. This is what is blowing up the calling application, if I try to read from StandardOutput while it is prompting for username and password, it just freezes the calling application. There is a prompt on the CLI when I run the command interactive saying to enter the password, which I was planning on looking for and just Close() the process and tell the user invalid credentials. But I have no way to ensure the proper credentials are entered, no way to test (git doesn't seem to have a way to validate credentials to third part servers) and I just have to run it and see what happens. Problem is, it freezes the calling application. I wrapped the call in a try/catch but it isn't throwing any exception. Any help I would greatly appreciate, I'm trying to make this bulletproof and I can't find a way to ensure the credentials are proper and protect the calling system.
You can read some of the new features here. http://www.codeproject.com/Articles/808732/Briefly-exploring-Csharp-new-features https://msdn.microsoft.com/en-us/magazine/dn802602.aspx
I know I'm late to the party, but one I came across a little while ago was [Pirhana CMS](http://piranhacms.org/). It looked pretty good, but never got a chance to get into it much. Didn't see it mentioned here so I thought I'd add it.
So you're saying that since the 32 bit jit gets out of the way sooner, but produces slower code, in some circumstances the code will run faster because the run time is dominated by jit time. I'll agree it's possible, but it's only likely in the most pathological cases. The only time I've seen it is under heavy reflection scenarios. 
[MvcCodeRouting](https://github.com/maxtoroq/MvcCodeRouting/blob/master/docs/README.md) will do this very easily and without hassle.
Sounds like if your using code first and are using SQL server you would be ok. Which sits well with my usage, I never like the edmx parts anyway.
Have you considered a library? https://github.com/libgit2/libgit2sharp/wiki
It really feels like you're using the wrong tool for the job, especially if you're looking for something to be bulletproof, but you could check the process's threads for their state e.g. foreach(var thread in process.Threads) { if (thread.ThreadState == ThreadState.Wait &amp;&amp; thread.WaitReason == ThreadWaitReason.UserRequest ) { // Do the thing! } } That might help you keep going forward, but otherwise, yeah, look at an actual git library.
thanks ;)
It doesn't have to be *underlying*; like you said, it's allowed in C#. 
Most people are; you should list them as well. Anyway, this is a bit outdated since Ctrl + T is now "go to everything".
Does this support .NET Core?
Is it just a standard windows desktop app or is it a 3d accelerated application/game you're trying to monitor? 
I don't understand. I thought a CMS was things like Moodle where teachers upload a couple files and make a couple of pages. Surely if you got a CMS someone else has made, there is no programming left for you to do?
[`Action&lt;T, ... , Tn&gt;`](https://msdn.microsoft.com/en-us/library/018hxwa8\(v=vs.110\).aspx) and [`Func&lt;T, ... , Tn&gt;`](https://msdn.microsoft.com/en-us/library/bb534960\(v=vs.110\).aspx) are your friends here. Unlike in java, in C# you cannot `new()` an abstract class or interface (unless it's a COM thing). /u/ArchangelleTheRapist's response still requires you to implement a class, which I think is different from what you want... you want to allow the client code to choose how the function works without inheriting, *injecting* the implementation from the client. In C# the pattern would be to *not* make it abstract, but rather to do something like the snippet below (note: not tested, but something like this is what you want). class District { private Action endTurn; public District(Action endTurnAction) { endTurn = endTurnAction; } public EndTurn() { if(endTurn != null) endTurn(); } } Then in your client code, you'd do something like: var district = new District(()=&gt;{ /* Do something */ }); Alternatively, you can do the injection via properties initialized with a default implementation (instead of in the constructor), but the concept is the same. Hope that helps! EDIT: typos
For some reason that code isn't running, a lot of it is showing up as invalid. I added Using System.Threading; but I am limited to .Net 3.5 support. But looking at the .net docs, it doesn't seem like even 4.5 supports ThreadState.Wait or Thread.WaitReason.
ok great, thank you for your answer :)
It looks like this uses .net 4.0 and a native C library, two limitations of the calling application (can't use native C libraries and it is based on mono so it is limited to 3.5 .net).
The solution with injection via properties would look something like this: class District { public Action EndTurnAction {get;set;} public EndTurn() { if(EndTurnAction != null) EndTurnAction(); } } and its usage would be something like: var district = new District { EndTurnAction = ()=&gt;{ /* Do Something */}, };
SQL Server LocalDB is good for getting a DB up quick and easy. &gt; LocalDB is a lightweight version of the SQL Server Express Database Engine that starts on demand and runs in user mode. LocalDB runs in a special execution mode of SQL Server Express that enables you to work with databases as .mdf files. Typically, LocalDB database files are kept in the App_Data folder of a web project. More info [here](http://blogs.msdn.com/b/sqlexpress/archive/2011/07/12/introducing-localdb-a-better-sql-express.aspx). Tutorial [here](http://www.asp.net/mvc/overview/getting-started/introduction/creating-a-connection-string). For people confused between: [SQL Express v LocalDB v SQL Compact Edition](http://blogs.msdn.com/b/jerrynixon/archive/2012/02/26/sql-express-v-localdb-v-sql-compact-edition.aspx).
MySQL is free, very common and easy to use.
The issue with the Model.VarName methodology is that if model is null, you'll throw a NullReferenceException. 
It is talking about the Windows Filesystem API which includes a lot more than just NTFS.
Others have suggested excellent answers. I just want to also add that you could also use SQLite. I have used this when the app is small with no issues. The usage is going to be very similar to using MS SQL Server. You can grab SQLite through Nuget. Keep in mind that you will need to store the database file in a location on the file system that you will have write access to. If you don't have the ability to alter folder and file permissions on the hosting provider, you should be able to write in the App_Data folder. 
If you try to use a NTFS-only feature on a non-NTFS drive, I would assume you would get an exception of some sort. 
I don't know, but given that it's a really simple idea I would be surprised if it didn't. (Man, I really got to get a VS 2015 rig setup to test this stuff.)
Did you consider using async/await ?
Think about your requirements. You must use two of each number in the range 1 - 18 to populate random positions in a 6x6 array. Where does randomness factor into this? Hint: it's not in the number generation. The numbers are already defined: 1-18, repeated twice. What is random? The position in which each number is placed in the array. So, a high level suggestion: iterate through each number, 1 - 18. For each one: 1. Select a random position in your 6x6 array 2. IF the position is 0, put the number there. 3. ELSE go to 1. Do steps 1-3 twice for each number, 1-18. Then, you will have each number placed in two different positions in your array. This is not the most efficient way to accomplish this. Try to think of ways to make it faster and more efficient when you have it working!
I hadn't really considered Code-First, since I've always done Database-First in the past. If I go with something other than LocalDB, such as SQLite or MySQL, I would still be able to start Code-First .. correct?
SQL Server doesn't have to be expensive in the way you might have encountered in larger deployments (i.e. *anything* that someone would consider Oracle for). If your needs fit under the SQL Server Express limits, it's essentially as good as any version of SQL Server for the subset of features that it supports. If your project grows beyond that scale, one option is to host in Azure and pay for SQL Server as a service. The standard tier pricing is really not bad at all: http://azure.microsoft.com/en-us/pricing/details/sql-database/
Azure? http://azure.microsoft.com/en-gb/develop/net/aspnet/
Use async/await. You actually got very lucky. UI elements can ONLY be updated by a specific thread. If the async call came back on another thread, you would be screwed. async/await grabs the synchronization context by default when dealing with GUIs and it eliminates the callback craziness that you are doing.
As others have already said, async/await is really the way to go here. But keep moving forward! It always feels good to get something going. :)
It is almost difficult to avoid using sql express from that IDE! Look up linq too if you haven't bumped into it yet. Get ssdt in your vs, the add a database project to your solution. You can author your db like you do your code, including step debugging, auto deployment, schema and data comparisons. 
The application gets some json data and does analysis on it. However, the number of requests is very limited, so I am thinking I need a database to store historic data so I don't need to hit the webservice for the same request after I've gotten it once.
This is crazy. Your model should implement INotifyPropertyChanged (consider a model base class). You shouldn't re-implement your model's properties in your ViewModel because that just makes your model pointless. Your model should not be dumb either, it should have behaviours just like your view model, it's much more than just a data model. View Models are responsible for exposing the model to the view and for view specific behaviours, it is not responsible for model related behaviours, as that's the model's job. You don't need a fancy framework to make MVVM work for you, a few simple base classes is all you really need. 
If they are Action&lt;District&gt;, why not? The common way would be to define an interface ITurnEnder, and have the client send it an ITurnEnder via constructor or property... If that interface only has one method (EndTurn), why bother making the user of the library implement a concrete version of it for just one function? Just for the sake of OO? It is basically the same thing Depending on what he wants to do, a subscribable event might be enough. Eventing allows client code to add in callbacks as well. Is that also "cute but not very OO?" Still, I think the answer I gave best simulates the java feature he was asking about.
What do you mean by that? .NET Core can execute all CLR-compatible code, which this of course is.
If it was a Action&lt;District&gt;, then in the District class, it could call endTurnAction(this) and that would do it. Another way (if the signature was just Action) would be to include the object in a closure of the lambda. I'm on mobile ATM, but when I have access to a computer again, I could share some examples in case the previous paragraph was unclear.
Dude, this isn't stack overflow. It's OK to ask questions related to C# that might have more than one answer.
One reason have that local variable is because it's part of an interface. Our object implements that interface so a message queue can process our object. The local property is part of the interface declaration, so that's where that comes from
TIL this business of closing over the 'this' is called [partial application](http://stackoverflow.com/a/411586)
OP specifically said they're starting from scratch without an existing database. However, code "first" (needs a better name...) works fine with existing databases too. If you create a new EF data model in recent versions of VS, one of the options is to generate code first models from your existing database. Word is, EDMX is eventually going away totally, in favor of code first and designers that work against code first models. So, I always recommend using code "first" even when there's an existing database, and haven't had much trouble with that approach other than TVFs being kind of tricky to work with.
He is actually only accessing the UI controls on the main thread (in the button click handler) he's just using static variables to co-ordinate passing the data around amongst the threads. That said, the code as a whole is pretty horrible and I agree that using more modern constructs like async/await would be a much better approach.
I'd read this before diving into Raven - http://octopusdeploy.com/blog/3.0-switching-to-sql
Can you deploy sql lite? I've only ever tried it in dev environment
Hi. I have same thing being implemented as synchronous way (http://pastebin.com/H8tsV359). And I really like the simple way of synchronous method but can I convert it into Asynchronous by using Async/Await? 
PostgreSQL
i'd probably just go with postgres, it's pretty full-featured and doesn't have many of the quirks you get with mysql (which is still a good db, don't get me wrong, it just has a learning curve that you don't expect). you can also store data in json in a postgres column and query it natively. i do like sqlite but you really have to get your head around the lack of features before you can use it as more than just a dumb data store.
Yes, using the IAsyncResult interface is one way of realising asnychronous program flow, but it's not recommended anymore and I personally don't like it either. I never used async/await myself before but it is the recommended way since .net 4.5 to do asynchronous work. You get a program which has almost the same simplicity as a synchronous program, while leveraging the advandvantages of an asynchronous work flow. Here: http://pastebin.com/jqBBv40c I quickly refactored your program to use async/await. I also changed some things i noticed which are not best practice. There are some more minor things which I would do differently but maybe thats personal taste and i didn't want to change your program too drastically to give you the opportunity to compare my code with your code and see what i changed. I could not verify that the program really works the way intended, because i don't have an API-Key, but i tested it and got an response from the server that my Key is invalid so i guess its working alright. You can verify that the method runs asynchnous by adding a second button to your form and bind the "button2_Click" eventhandler to it. While you're waiting for the shortened URL you still can click it and see the message box. I am in kind of a hurry so maybe some i forgot to change or delete some comments which are not applicable anymore. If things are not clear you can easily debug through the program and look step by step what it does. When you still have problems understanding something feel free to ask.
This is the best answer here.
I've never really thought about it I guess, but what am i accessing with the basic C# IO classes? Can you please educate me on the differences between the "normal" ways of accessing the filesystem in C# and this library?
Meaning i am having trouble learning where to put the code, setting it up i really don't know how to explain it.
**How** do you learn code? And perhaps how old are you? Learning code takes time. It's nothing you learn within a few weeks.
I am 16, i learn code through various online programs and i pretty much toy around with code that i write and make it do different things than it normally would, i also have a book on C# and am currently reading that.
So, you have code but don't know how to execute it? What program are you using to write the code? 
What are you trying to build? Are you using visual studio?
asp.net mvc has caching build-in as an attribute on controller methods (OutputCache, I think). The first call to the controller do the work and any following calls will just return the cached response.
For me this has been the most tempting reply so far. I'm looking at PostgreSQL right now.
Try linqpad. It's ideal for learning and trying things out. It's jus a big text editor, and you can choose to run either an Expression, Statements, or a whole Program. 
you only really need a model if that 'data' is going to be passed to "services" that will "consume" the data. aka, if you have an IOrderRetreivalService (use interfaces!) and that has a method called GetOrder, you want to pass it a Person, not a PersonViewModel. you don't want to couple the service to your view, especially since these things may be refactored into separate libraries, namespaces, and so on. even if its pointless, some people are perfectionists and they create the model. ask your team and follow what they do. that is really the best thing to do..
I have already built a few programs in VS such as a web browser running internet explorer 7, as well as a few number generators
Thank you for the tips:)
no problem. once you get a bit better at C#, you should get the book 'effective C#'. they also have them for C++ and java and so on. they are great ways to really improve in a practical manner. they are not one of those ginormous books and again are very practical.
I will have to check that out, is it odd that i find people who learned a whole language from youtube? I always wonder how they did it cause i have looked up tuts for C# on youtube before and have only came across ones that were very bland and did not go into detail about the code.
No, stay away from Begin-End methods; it's legacy async and doesn't preserve sync contexts and all that. 
Here's a quick read that might answer some of your questions: http://www.vikingcodeschool.com/posts/why-learning-to-code-is-so-damn-hard From what you said, it seems that you are now in the "cliff of confusion". Hopefully, after reading this, you will have a better understanding of what you are currently experiencing and how to move forward. Since you've been learning C# for only two weeks, you might want to consider going back to the "hand holding honneymoon" until you get the experience that you need to get over this cliff yourself. Instead of trying to build your own project right now, you could go back to following tutorials or asking for help to get you going. The big problem with where you're going is that you are trying to create new things with a tool that you barely understand. This is why the cliff of confusion is so hard to get over with. You should aim at getting a good enough understanding of the language and the tools that comes with it to be able to take something that has already been done, like a single class such as String or Date, an entire library or framework or even a whole application and break it down to the basics that you know. In other words, study what has already been done and learn how to solve problems with the basics that you've learned.
Project/code organization tends to vary between developers greatly and it depends on the project. If you are doing MVC take a look at http://www.codemag.com/Article/1405071 See if you can find an internship or part time job this summer. You might be able to find a more experienced developer to help guide you (or teach you terrible things). Lots of this is learned by making mistakes. The biggest thing is do not expect to do this correctly the first time you write code. I reorganize code all the time (via refactoring) after and while the code is written.
I am pretty sure i am learning C# I use VS
I see...thanks for filling me in!
Very appreciated.
If an API only allows Begin/End, then use [TaskFactory.FromAsync](https://msdn.microsoft.com/en-us/library/system.threading.tasks.taskfactory.fromasync%28v=vs.110%29.aspx)
You can eliminate most of that startup time by pre-generating the EF "views" for your models via the EF Power Tools extension.
Where would you suggest i start? I currently live in MI and there really isn't any tech company here.
You could try the [Yellow Book](http://www.csharpcourse.com/) which is the best C# book that I have read. 
you could make a new list if integers and add the numbers 1-18 to it twice. just use a random.next to pick a random index in that number list, pluck that number out and .RemoveAt() and put in your array. drop your random range by one, repeat. do this until all your arrays are full. heres an example i drew up for you http://ideone.com/vIfI3r of course the arrays arent in an array or anything.
You might want to remove the Console.WriteLine calls in your benchmark. Console output on Windows is notoriously slow and you're probably measuring a lot of noise with the current setup. You should also try switching to the Stopwatch class which was created for this scenario and uses high resolution timers if available.
Best way to learn is to do. You've read a beginner book now you should begin to start programming. You'll get a fuller understanding on the language when you get your hands dirty.
.NET is what most of the business world uses. It's well worth it to learn .NET.
Well that's just terrible advice.
No, there is no implicitly defined return variable in C#. Whatever you return you must either have already gotten (parameter, instance variable) or create yourself.
In VB.net you can use the method name as a local variable but the generated low level code is still the same as if you had just created a new variable with a different name and then returned that variable. In C# you can't use the method name as a variable in the way you are thinking but creating a local variable won't be a "second" variable either so its not more or less efficient to just create a new variable, do your thing, and return it.
Build something small. Pick a really small, doable project and build it (if you have Windows 8 or Windows Phone they are ideal platforms to develop on with C#, but you could just do it in Unity). Maybe make an app that makes a fart sound when you tap a button. Then build on it to have multiple sounds or random sounds. Change the colours around. Think of as many little tweaks as you can and figure them out one-by-one until your app is fleshed out. Go to Microsoft Virtual Academy and do some more courses (though they are mostly focused on .NET, but I think they have a few Unity specific ones). You can't get too much practice! If you like learning from videos there are a crapload on YouTube where people show you how to do everything you can imagine. I have a Unity blog geared towards beginners @ unity.grogansoft.com. I recommend doing the Pong tutorial. It's pretty light on coding, and shows most of the Unity basics and explains them well (I hope). When it comes to programming you really can't do anything better than practise. And complete things, even if they are fart apps or a 'hello world'. Don't underestimate the motivation you can get from actually having a finished thing you made. Get a couple of books if you can. Or print out 'cheat sheets' from the Internet. They come in handy when you can't remember syntax (it took me approximately forever to remember how to structure a simple 'for loop' in C# after learning to program in Visual Basic). 
It seems that you are confused. You are saying: &gt; avoid having to using a second, internal list In your example there is no second list. The internal list is the one you are returning. There is only one list. It is created inside your method and returned to whoever called your method. It is the same instance both inside and outside your method. Edit: `public List&lt;string&gt; GetNames()` is not creating a list, it is simply stating that I promise to return this type.
If you don't need to return a List&lt;string&gt;, then return an IEnumerable&lt;string&gt;. This avoids the need to create a list. public IEnumerable&lt;string&gt; GetNames() { //instead of GetMyNames.Add(name) do yield return name; } 
&gt; At the moment I would create a text file with the needed code and save it on my PC in an folder but I think you guys might have better ways. Organized solution with projects that are committed to GitHub. Libraries are published to NuGet for easy use.
Thanks! Looking forward to that code, as this seems like the solution I'm looking for.
Have you seen some of the people that do web development? I wouldn't worry about not being smart enough. For the last couple of years I have been the lead developer on a team that maintains a marketing automation system. We consolidate data from a dozen or so sources and spit out reports. Some of the reports are dashboard style things for the marketing drones to consume, some of the reports feed data into vendors' systems to send post cards, e-mails, swag, etc. to customers, prospects, etc. Prior to that I did a lot of user customizable PDF generation, and transactional order processing.
Why not simply use a [proper mapper](https://emitmapper.codeplex.com/) instead?
Thank you, I didn't know I can also use NuGet :) So this is everything you use? Do you have any Backups or files or anything like this on your private computers?
&gt; Thank you, I didn't know I can also use NuGet :) NuGet is for free for everyone. &gt; So this is everything you use? What would I need more? &gt; Do you have any Backups or files or anything like this on your private computers? Why would I? I have it on GitHub, it's safe.
I think I will do your tutorial. It seems perfect for my needs!
well I can see that you found the source of your confusion already. But just to throw this out there, maybe this almost does exactly what you are asking (again even though it is exactly the same thing). public List&lt;string&gt; GetNames() { return new List&lt;string&gt;(){"string1", "string2", "string3"}; //and each of those strings instead of being a literal could be a method that returns a string. like so: return new List&lt;string&gt;(){getStringFromSomewhere(someArg), getStringFromSomewhere(someArg2), getStringFromSomewhere(someArg3)}; }
Thanks :). The yield statement is pretty powerful, but you have to watch out sometimes. E.g. with some database stuff your connection can sometimes be closed by the time you get to iterating through the IEnumerable. So if you do var names = GetName(); your GetNames() function won't yield anything until you actually use *names* (e.g. in a foreach, or with any of the various extension methods). Most of the time though returning IEnumerable is better than returning a List, because you don't really care that it's a list/array/whatever and you just want to iterate over the values.
C# isn't a scripting language.
You are right, this is true and I don't see anything that would speak against it. And code snippets you also keep on github in an repository like "Snippets"?
Depends how confident you feel with the C# skills you've learned so far. Those tutorials are obviously great but they do all the work for you. Maybe try them out and see if you actually understand the code they're writing and could easily write it yourself. Otherwise you might just confuse yourself by trying to get to grips with the Unity UI at the same time as learning basic C#. Let me know how it goes.
For code snippets, I use gists on Github. For almost everything else, Github or Gitlab (depending on scope).
Ah this is what I thought of :) Thank you! 
I have a couple of test projects that I keep around that contain all of the snippets I use. That just serves to keep them all together under one heading to make it easier for me to find as I have found myself getting very disorganized otherwise. Those snippets are moved off to their own projects as I expand them out to full classes or integrate them into another Namespace.
http://www.csscript.net
yes, use the Stopwatch class for time measurements, DateTime does not have the resolution you need for a benchmark also call the code you're benchmarking once before capturing the time, so the JIT compiler has a chance to run see Matt Warren's article on benchmarking for more tips http://mattwarren.org/2014/09/19/the-art-of-benchmarking/
For snippets like that use gist. http://gist.github.com
You can use [File.ReadAllLines(filename)](https://msdn.microsoft.com/en-us/library/s2tte0y1(v=vs.110\).aspx) to read a file into an array containing the lines. As for linebreaks within quotes, I'm not quite sure what you mean?
Your link is broken.
Yeah, trouble with parenthesis in the link, it's fixed now.
Use the environment.newline constant. Different platforms use different encodings.
It's huge for sure, but I see more java in big enterprisey shops.
CVS - Visual Studio Online with TSVC. My snippets are on Github Gists.
Nah, i could dick around half an hour with IBullshit and priority inversion for no gain or do this and have it done.
I ask because, since we watched the same tutorials, knowing what you were able to do with it helps to know what I will be able to do myself :)
Well, you could use a DVCS for that. But seriously, that's why github is just another remote. 
I see, good thinking! good luck, give us an update in a few weeks/days if you can.
Without a sample of the data you're parsing, it might be hard to provide you with a definitive answer. That being said, try splitting your text file by quotes first. Assuming you have no special escape sequences where there are quotes-within-quotes, then all odd-numbered array entries will be the "quoted" texts, and all even-numbered array entries will be unquoted texts. (this works because we assume quotes always come in pairs) You can then proceed to split all even-numbered entries by newlines, and ignore the odd-numbered entries.
I really like the book Head First C#. I found it helpful.
I'm going to ignore the cell selecting and the concatenating with a text box. I think that part of the process is obvious. I think what you seem to be asking is how to insert data into a table, without relying on the datagrid to magically do this. How you do this, and the syntax for it, is entirely dependent on the DAL/ORM you are using. Let's say your using EntityFramework, it may be as simple as: var newYoudy = new Youdy(); newYoudy.ColumnA = "foo" using (var myDBContext = new YoudyDBEntities()) { myDBContext.Youdies.Add(newYoudy); myDBContext.SaveChanges(); } 
I'm avoiding doing work today, so here's my solution var lines = text.Split('"') .Select((x, i) =&gt; (i % 2 == 0) ? x.Split('\n') : new[] { '"' + x + '"' }) .Aggregate(new[] { string.Empty }, (x, y) =&gt; { x[x.Length - 1] += y[0]; return x.Concat(y.Skip(1)).ToArray(); }); It should work, but I think it'll append an additional quote to the end if the quotes are mismatched. I think Regex might be a better solution, but I'm not 100% sure what that expression would look like. Also, I just noticed you're trying to parse a CSV, in that case I'd use a third part component to handle it, there's plenty of good ones out there.
As others have stated, you're reinventing the wheel looking for a cheap and quick solution to what appears to be a simple problem, but is actually deceptive and more complex. The short version is - don't manually parse a CSV file, don't try to regex it either, use a CSV parsing library to do the heavy lifting for you. You'll be glad you did.
Will do! Thanks!
Yes, but what I'm talking about is not a language necessarily, just the large framework that makes up C#.NET which you are using. There are similar analogues in other languages. The thing about .NET is that it's incredibly large and there are many esoteric patterns which will take years to learn.
Thanks for the input! Like I said in my first comment, my goal is to work with Unity. But I also would love having a Windows program to easily move files within several folders to another common folder. I can't find a program to do just that, so I think I will do it sometime.
button1 is the name you gave (or didnt) to your button, so if you would follow those same guidelines in naming your controls it wouldn't be that way
that attitude is totally unnecessary. you're just dicks
&gt; Well, you could use a DVCS for that Isn't that exactly what git is? A checkout *is* a backup, because it contains the entire state of the repository. That's the whole idea behind git's design. If you want a backup, just have a checkout that updates on a cronjob every couple hours or whatever.
Indeed. CsvHelper does this I believe - http://joshclose.github.io/CsvHelper/
XML file: &lt;states&gt; &lt;state&gt; &lt;Abbreviation&gt;AL&lt;/Abbreviation&gt; &lt;Name&gt;Alabama&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;AZ&lt;/Abbreviation&gt; &lt;Name&gt;Arizona&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;AR&lt;/Abbreviation&gt; &lt;Name&gt;Arkansas&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;CA&lt;/Abbreviation&gt; &lt;Name&gt;California&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;CO&lt;/Abbreviation&gt; &lt;Name&gt;Colorado&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;CT&lt;/Abbreviation&gt; &lt;Name&gt;Connecticut&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;DE&lt;/Abbreviation&gt; &lt;Name&gt;Delaware&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;DC&lt;/Abbreviation&gt; &lt;Name&gt;District Of Columbia&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;FL&lt;/Abbreviation&gt; &lt;Name&gt;Florida&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;GA&lt;/Abbreviation&gt; &lt;Name&gt;Georgia&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;ID&lt;/Abbreviation&gt; &lt;Name&gt;Idaho&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;IL&lt;/Abbreviation&gt; &lt;Name&gt;Illinois&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;IN&lt;/Abbreviation&gt; &lt;Name&gt;Indiana&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;IA&lt;/Abbreviation&gt; &lt;Name&gt;Iowa&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;KS&lt;/Abbreviation&gt; &lt;Name&gt;Kansas&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;KY&lt;/Abbreviation&gt; &lt;Name&gt;Kentucky&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;LA&lt;/Abbreviation&gt; &lt;Name&gt;Louisiana&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;ME&lt;/Abbreviation&gt; &lt;Name&gt;Maine&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;MD&lt;/Abbreviation&gt; &lt;Name&gt;Maryland&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;MA&lt;/Abbreviation&gt; &lt;Name&gt;Massachusetts&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;MI&lt;/Abbreviation&gt; &lt;Name&gt;Michigan&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;MN&lt;/Abbreviation&gt; &lt;Name&gt;Minnesota&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;MS&lt;/Abbreviation&gt; &lt;Name&gt;Mississippi&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;MO&lt;/Abbreviation&gt; &lt;Name&gt;Missouri&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;MT&lt;/Abbreviation&gt; &lt;Name&gt;Montana&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;NE&lt;/Abbreviation&gt; &lt;Name&gt;Nebraska&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;NV&lt;/Abbreviation&gt; &lt;Name&gt;Nevada&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;NH&lt;/Abbreviation&gt; &lt;Name&gt;New Hampshire&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;NJ&lt;/Abbreviation&gt; &lt;Name&gt;New Jersey&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;NM&lt;/Abbreviation&gt; &lt;Name&gt;New Mexico&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;NY&lt;/Abbreviation&gt; &lt;Name&gt;New York&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;NC&lt;/Abbreviation&gt; &lt;Name&gt;North Carolina&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;ND&lt;/Abbreviation&gt; &lt;Name&gt;North Dakota&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;OH&lt;/Abbreviation&gt; &lt;Name&gt;Ohio&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;OK&lt;/Abbreviation&gt; &lt;Name&gt;Oklahoma&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;OR&lt;/Abbreviation&gt; &lt;Name&gt;Oregon&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;PA&lt;/Abbreviation&gt; &lt;Name&gt;Pennsylvania&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;RI&lt;/Abbreviation&gt; &lt;Name&gt;Rhode Island&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;SC&lt;/Abbreviation&gt; &lt;Name&gt;South Carolina&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;SD&lt;/Abbreviation&gt; &lt;Name&gt;South Dakota&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;TN&lt;/Abbreviation&gt; &lt;Name&gt;Tennessee&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;TX&lt;/Abbreviation&gt; &lt;Name&gt;Texas&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;UT&lt;/Abbreviation&gt; &lt;Name&gt;Utah&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;VT&lt;/Abbreviation&gt; &lt;Name&gt;Vermont&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;VA&lt;/Abbreviation&gt; &lt;Name&gt;Virginia&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;WA&lt;/Abbreviation&gt; &lt;Name&gt;Washington&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;WV&lt;/Abbreviation&gt; &lt;Name&gt;West Virginia&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;WI&lt;/Abbreviation&gt; &lt;Name&gt;Wisconsin&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;WY&lt;/Abbreviation&gt; &lt;Name&gt;Wyoming&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;AK&lt;/Abbreviation&gt; &lt;Name&gt;Alaska&lt;/Name&gt; &lt;/state&gt; &lt;state&gt; &lt;Abbreviation&gt;HI&lt;/Abbreviation&gt; &lt;Name&gt;Hawaii&lt;/Name&gt; &lt;/state&gt; &lt;/states&gt;
The event is named after the control as mahoua said, the underscore is an alright idea as it's easy to identify your events handlers the control/window it refers to and the function it performs on the other side.
Your XML parsing logic gets all the state models correctly - at least in the test I did locally. Does the web application obtain the XML document itself correctly? Also, how are you creating the table?
If what you want is making controls resize along with their parents then Anchors is what you're looking for. Otherwise not sure what you mean.
Do you mean "where to put the code" inside the file, as in relatively to other classes/methods/definitions/etc? Or do you mean arranging your code in your project?
Just make your own split function. It takes very little work and it is less hassle than Regex or joining already splitted strings.
Temporary fixes are rarely temporary. Just take the time and fix it right the first time. Never make a file or db change without a backup. 9/10 if you need to explain something in comments then you have a code smell / area for improvement. Never make a change without sign off from the product owner. No good deed goes unpunished.. Code like the next guy to read it is an axe carrying psychopath who knows where you live. Admit when you don't know something, "I don't know, but I will find out" Is something you should not be afraid to say, you'll be respected for it. Leave your ego at the door, every day is a school day. 
I bet this will make sense once my book comes in the mail and i can learn it
* If you show management a prototype, make sure it looks like shit, visually. If it looks good, they'll assume it's almost done and will think you're sandbagging when you tell them it'll take 2 months to finish it properly. * If you're showing a finished or mostly finished project to management, leave something visually obvious for them to suggest fixing. They'll want to contribute, so they're going to suggest *something*. If you leave a typo, they'll point out the typo. If it's perfect, they'll suggest something completely arbitrary and stupid, like moving the navigation bar to the right side. See also: "bikeshedding" * NON-PROGRAMMERS DO NOT UNDERSTAND WHAT IS EASY OR DIFFICULT. If an end user starts talking about a feature idea, DO NOT TELL THEM "that should be easy." 20 "easy" features later and you're missing deadlines on the critical features. Instead, say, "that's a good idea. I'll pass it by my boss and he'll see where it fits on the schedule." * Working a 60 hour week every once in a while to meet a deadline is normal. Working 60 hour weeks back-to-back all the time is **dysfunctional**. The project/product will fail eventually and you will be laid off. Your voluntary slavery will not be rewarded. If you find yourself on a death march, *don't stay on that path*. Find a way off. It's easier to get a job when you have a job.
Learn your tools. IDE, repository, debugger, so on. Your tools will save you time, effort and sanity. Intelligence won't get you as far as persistence especially if you persist intelligently. Spend 10% of your work time improving yourself. Find better ways to do things, look at new tools, read what other programmers are doing. Be critical. Be prepared to reevaluate past assumptions. Most importantly, take pride in what you do.
&gt; Can also do this with 100% regex, but it wouldn't be simple. Nope. CSV is not "regular" and cannot be parsed with a "regular expression." As a general rule, RegExes can't properly handle balanced quotes or brackets. You need at least a Push Down Automata (basically a RegEx plus a stack). Finally, THERE IS NO STANDARD FOR CSV!!! Excel's CSV is different than some random UNIX script's CSV etc. The "proper" handling of newlines-in-columns and nested quotes is undefined. Don't parse CSV yourself! Edit: /u/grauenwolf kindly pointed out that there is, in fact a standard for CSV files now.
Log all the things.
Also make sure to build it in release mode
I am assuming you are a junior programmer in a software company or IT department. These answers are fine, but the most important things to learn at this point in your career are all soft skills - how to get along with your coworkers, manage your time, ask for help (never asking is just as bad as asking too often), build relationships without being a kiss-ass. Things like unit testing, IDE &amp; tools, acceptable tradeoff between bugs and dev time, etc. are usually part of the company culture. Try to emulate what other people are doing. When you have been through 2-3 major releases, you will have a better idea on what areas you might want to change. There are a few small tricks. It is better to be the first one to arrive in the morning than to be the last one to leave. Bring doughnuts. Ask the senior guys about how they got started. Most enjoy telling war stories. Use work lunches to build relationships. People are more important than companies. The guy you gossip about in the break room might eventually be a hiring manager at another company you want to work for.
Yes it's possible. You should look into ad hoc wireless networking.
Sadly not on the tab page and setting it on the others only let me get scroll bars on the tab page even when I full screen the frame.
Don't give other programmers exact code snippets to solve their problems. Chances are they will just copy paste it in, change a few things and won't learn anything. Then when it breaks it's your fault, because your the person who provided the code. Not only that, but they will just bug you every time they don't understand or can't solve something. You're not there to do their work for them, you're someone who can provide a push in the right direction. If you can, quickly describe the solution in words. Nothing specific. Something like "you can solve that using breathe first search" is enough sometimes. Maybe point them to a few articles talking about what breathe first search is (they should probably know already). It's up to them to implement it. But better yet, have a discussion pushing ideas back and forth. You might not know the solution but you might be able to come to a workable solution. You learned something, they learned something. Just remember that your time is valuable too and you have your own problems to solve. But there is nothing wrong to take the time to help someone.
Thank you kind sir!
I would tend to second this question and ask why as well. This sounds a bit like the XY problem where your asking about your attempted solution to a problem rather than the problem itself. 
Get good at testing your own code. If you need your IDE and the ability to step through code to test it and verify that it works correctly, you've created untestable code. You should always be able to show and describe exactly how to verify correct behavior without your IDE. 
Don't use split for csv files. "Last name, First name" is valid as far as a csv file, and splitting on that will create two invalid cells. Use the TextFieldParser which handles all that. using System; using Microsoft.VisualBasic.FileIO; class Program { static void Main() { using (TextFieldParser parser = new TextFieldParser("C:\\csv.txt")) { parser.Delimiters = new string[] { "," }; while (true) { string[] parts = parser.ReadFields(); if (parts == null) { break; } Console.WriteLine("{0} field(s)", parts.Length); } } } }
Being a truly great programmer requires you to take the time to learn about and understand the things and processes that you are modeling in your software. If you come in and let the business people tell you what they want and build it, you will build crappy software because business people don't know what they *need*, just want they *think they want*. If you come in and learn about how they do their work and what's working well for them and what isn't and then design software that models their real world objects and their real world processes and fits into their real world lives in a helpful manner that is considerate of what they're actually trying to accomplish, written using their real world verbiage, you'll be able to discuss it with them much more coherently, they'll be able to understand the software much more easily, and they'll be thrilled to bits when they understand what you've done for them. Building positive, trusting relationships with the people you work with is half the battle. If your users understand that you sincerely care about helping them be successful and improving their lives, they'll be on your side and help you make your project a success. *This is immensely hard*. It requires you to take the time to figuratively hold the hands of your most difficult users and reassure them that it'll be all right and convince them that you care. Many organizations will not give you the time to do this. The ones that do are the ones where you can really improve the world. *Some people can never be won over.* You have to learn to recognize the difficult but winnable person - who will become your greatest ally and fight for you once they realize how great you are - versus the impossible person who made up their mind that they will never be your friend before they ever met you. The latter person needs to be carefully neutralized. Programming patterns are a tool to facilitate your work and help you think about structure, not a straightjacket to bind your work and your mind. Just because MVC is great doesn't mean you have to do everything in it, you might find a few special cases where it's easier to write some very straightforward start-to-finish code, for example. Use patterns where they fit well. Don't use them where they don't. Don't fall into the "we have to do all development by shoving together prefab modules of code that other people wrote" trap. Sometimes it's better to write something custom in house. Sometimes the prefab modules and libraries don't really meet your needs, or are poorly written. Don't fall into the "we have to write everything custom in house" trap. Sometimes it's better to shove together prefab modules of code that other people wrote. Sometimes they had the time to do all the testing you didn't have time for, or they had the focus to think of all the nifty features you haven't had the experience with the topic to have come up with yet.
This is correct. You can't handle balanced quotes with a regex. This is the only answer that matters.
Yep. You need a state machine or similar to handle this. RegEx will not work.
This seems like the best answer
I love how you focused on much of the non-technical side of professional development that is often overlooked by up-and-coming devs. Very good advice. And everyone please take the last point to heart! Consistently needed overtime should not be required! Occasional crunches are normal, but crunching all the time is indicative of deeper issues...
Learn the business behind what you are coding. Developers who can handle the functional as well as technical design earn far more than ones who are purely code monkeys.
Yeah, well I'd probably make it so the arcade program does it mostly automatically and you just have to press a few buttons and have some simple options so the users don't get too confused if they're not tech savvy. Anyway thanks for the help! I'll have to look into it some more.
Some tips I give to my new devs (highlights from our wiki) * Favor readability over performance in most cases. * The first step in performance work is always to measure. * Never catch Exception (unless you have a really, really good reason, but you need signoff from the senior architect and security lead). * Make sure the intent of your test matches the name of your test. Edit: formatting
How is that better than .NET's built-in CSV parser?
&gt; Don't parse CSV yourself! Everyone should learn how to parse CSV files, even if they end up using a library for production work. It isn't hard at all if you know what you are doing.
Write extensive comments about everything, you WILL forget what you were doing in one section of code as soon as a few hours after writing it.
&gt; It isn't hard at all if you know what you are doing. It's much harder than people think it is. You (collective) don't know what you're doing because *there is no standard*. It's a lot of work reinventing the wheel, badly. If you're talking purely as a learning experience, OK. But it's not a useful use of your time.
I disagree that doing it the TDD way is the best. I agree unit tests are needed and trying for 100% test coverage is a good goal, but I don't agree that TDD is the best path to take. It is worth trying though to see what works best for you.
The biggest regret I have in the current workplace of mine is that I didn't rewrite some of the extremely shitty code that I encountered in the beginning but rather fixed the immediate bugs it had. Back then we really had time to do things right (no continuous scrum pressure).
&gt; RFC 4180 Circa 2005. Took 'em long enough! (shows how long it's been since I've had to write code to parse a CSV file)
Formal naming conventions don't apply to private methods such as event handlers. The informal standard is [PropertyName]_[EventName], so yes you should capitalize "Button1". But really, no one would complain if you didn't.
My recommendation is to fix your controller. The controller has three responsibilities. 1. Read the important data from the request and session. 2. Pass that data to a service class that does the real work 3. Pass the result of the service class to the view If you are writing your controllers correctly, they should be so small that there is no point in testing them independently of the browser. 
Great thank you exactly what I looked for :)
&gt; Yesterday I started using GitHub and I really like it but how do you handle login credentials and other sensitive stuff in the code? I don't. Credentials **never** belong into source control. Keep credentials in an alternative location, like LastPass, then store them in a configuration file that is not pushed to source control.
There is a native [WiFi direct API](https://msdn.microsoft.com/en-us/library/windows/desktop/ms706275%28v=vs.85%29.aspx) but it will require P/Invoke. There is also a [Windows Store API](https://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.wifidirect.wifidirectdevice.aspx), but according to documentation this can't be used from a desktop app for some arbitrary reason. edit: seems like there is a [workaround for that](https://msdn.microsoft.com/en-us/library/windows/apps/jj856306.aspx).
Well, the users will most likely be connected to the WiFi that's there already, so you wouldn't want to suddenly disable internet access - most WiFi cards only support one connection or hosting.
PVS-Studio: [25 Suspicious Code Fragments in CoreCLR](http://www.viva64.com/en/b/0310/).
Well, if button1 is a non-public member, it *would* be the following the guidelines to name it like that.
When you have a discussion with a client on what they want on the software. Repeat everything in an email and email them and have them confirm that's what they want. Otherwise you build A, they deny they wanted A, they wanted B and your boss yells at you for doing A even though you know 100% that's what they said but have no proof.
&gt; Working a 60 hour week every once in a while to meet a deadline is normal. Working 60 hour weeks back-to-back all the time is dysfunctional. The project/product will fail eventually and you will be laid off. Your voluntary slavery will not be rewarded. If you find yourself on a death march, don't stay on that path. Find a way off. It's easier to get a job when you have a job. Something the games industry has yet to learn. At a recent job interview I was told, "crunch is a necessary evil".
Hi guys! I'm offering my course for FREE till 20 Mar. Get it here: https://www.udemy.com/csharp-advanced/?couponCode=20Mar
If you tell a new programmer "don't use TDD if it doesn't work best for you," I'll bet you that they: * Don't give TDD a fair chance to begin with * At some point regret their decision Making explicit how you expect something to work is a good habit, and it's the moral of TDD (or BDD, or whatever). I wish I'd understood it better ten years ago.
This isn't specific to being a programmer, but if you want to convince people you have to consider problems and talk about them from their perspective, not yours. An accounting person doesn't want to hear a bunch of technical details or patterns or whatever else.
I've looked for info on "emitting a module" and the C# metadata APIs but nothing interesting comes up. Is there anyway to set a module name via attributes? AFAIK you can set other module parameters with attributes. If it's relevant, the compiler in question is the inbuilt "CodeDom" compiler
I'd probably also have a local area networking option and the WFD method would only be for if there's no internet available.
Modern RegEx-engines don't support only regular expressions, but additionally extensions like back-references, capturing-groups and conditionals. All of which extends the language which is represented to much more than regular expressions. Of course I agree with you that you shouldn't parse CSV yourself.
The more important question is: Why bother? It's not useful for anything. Anyway. No, you can not change this with attributes. You can't change this value using C# at all. The "metadata APIs" mentioned are a C++ API, not C#.
There is a conflict here.. Controls should be private, yes, but event handlers need to be public so the framework can call them... Meh, I guess this is one more reason why WPF is better designed than Winforms
There are times I wish a breaking bug would suddenly show up just to get that mess redone properly. But then again they would probably just make us fix it and go on about our business. Pisses me off every time we get a new approved tech stack that we are supposed to use but I am still stuck with the old stuff because we were never allowed to move from VB6 to dotNet. The funniest thing is that each time they ask us to size it and we provide one they then balk over how much it cost and deny us. Then they ask how we got in such a mess anyway and I just look at them and remind them that they just denied our rewrite to bring it up to standard. 
lol at all of you assuming new programmers know what TDD is.
I assume they know how to Google a tutorial, a skill they certainly will need either way. 
Just curious, what's the reasoning behind never catching a generic Exception?
This was the solution I came up with. It is a combination of a few things I found in various places including here: First, I created 2 classes .. MockHttpSession, and MockHelpers public class MockHttpSession : HttpSessionStateBase { Dictionary&lt;string, object&gt; m_SessionStorage = new Dictionary&lt;string, object&gt;(); public override object this[string name] { get { return m_SessionStorage[name]; } set { m_SessionStorage[name] = value; } } public override void Abandon() { // Do nothing } } public class MockHelpers { public static HttpContext FakeHttpContext() { var httpRequest = new HttpRequest("", "http://localhost/", ""); var stringWriter = new StringWriter(); var httpResponse = new HttpResponse(stringWriter); var httpContext = new HttpContext(httpRequest, httpResponse); var sessionContainer = new HttpSessionStateContainer( "id", new SessionStateItemCollection(), new HttpStaticObjectsCollection(), 10, true, HttpCookieMode.AutoDetect, SessionStateMode.InProc, false); SessionStateUtility.AddHttpSessionStateToContext(httpContext, sessionContainer); return httpContext; } } Then I changed my unit test code to use these: var server = new Mock&lt;HttpServerUtilityBase&gt;(MockBehavior.Loose); var response = new Mock&lt;HttpResponseBase&gt;(MockBehavior.Strict); var request = new Mock&lt;HttpRequestBase&gt;(MockBehavior.Strict); var session = new MockHttpSession(); var context = new Mock&lt;HttpContextBase&gt;(); context.SetupGet(x =&gt; x.Request).Returns(request.Object); context.SetupGet(x =&gt; x.Response).Returns(response.Object); context.SetupGet(x =&gt; x.Server).Returns(server.Object); context.SetupGet(x =&gt; x.Session).Returns(session); HttpContext.Current = MockHelpers.FakeHttpContext(); var controller = new LoginController(); controller.ControllerContext = new ControllerContext(context.Object, new RouteData(), controller); JsonResult result = controller.LoginUser(new LoginHelper { userName = "MyUserName", password = ""InvalidPassword }) as JsonResult; This was able to successfully test the code with both valid and invalid passwords. Thanks everyone for your help 
Essential reading: http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1426600164&amp;sr=1-1&amp;keywords=clean+code http://www.amazon.com/Clean-Coder-Conduct-Professional-Programmers/dp/0137081073/ref=sr_1_2?s=books&amp;ie=UTF8&amp;qid=1426600164&amp;sr=1-2&amp;keywords=clean+code http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670/ref=sr_1_4?s=books&amp;ie=UTF8&amp;qid=1426600164&amp;sr=1-4&amp;keywords=clean+code http://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X/ref=sr_1_5?s=books&amp;ie=UTF8&amp;qid=1426600164&amp;sr=1-5&amp;keywords=clean+code 
No, not everyone. Some of the brightest people I know do web development. At the same time, so do some of the dimmest. The two most important parts to being a programmer are that you enjoy it and can teach yourself as you go. It isn't a cakewalk, but nobody gets paid to participate in cakewalks. Web programming has the most entry level jobs and will expose you to many other areas of programming. You'll eventually need to deal with databases, and security, and a dozen other related things. It is a big profession, there is plenty of room, hop on board, we can use all the help we can get.
Thank you everyone I'm really interested how other people do it so it is nice to have some ways :)
Uh.. this can be taken too far, though. You can't really treat any potential person that reads your code as an imbecile with only a vague idea of the language; for example; // sets the x to the s var x = s; // don't laugh, this kind of comment actually shows up a lot. ... or to things that are actually very obvious. By all means, if you're doing something "clever", commenting it can't hurt. Just be aware of what you comment and *why*, or you'll end up writing a novel instead of a program.
Only if you write your comments for other readers. Write them to yourself or other programmers.
&gt; They don't care if the codebase looks like 20 different drunken chipmunks hacked away at it. I disagree. They might not *know* that they care, or even that they care by proxy, but at some point "drunken chipmunk" code will come back to bite you in the ass.
Everyone wants to be a games programmer, so there's an endless supply of fresh programmers to put through the meat grinder.
That... sounds highly broken. Was it a design firm, or something?
&gt; Never catch Exception Do you mean "never catch and suppress an exception", or "never catch and handle an exception", or both?
I originally interpreted OP's question as getting the return TYPE, probably because I have done so myself at one point or another - which can be done by checking MethodBase.ReturnType. :)
"Deeper issues" like watching streams Mon-Wed? :)
Do I know you? ;)
The comments you suggested? Yes I agree, quite terrible. However it is accepted as standard good practice to write detailed and plentiful comments on the inner workings of your code so you can quickly return to it at a later date without having to puzzle over things.
Never catch the highest level Exception class (System.Exception in C#). ...except in your global exception logger, that is.
&gt;Always try to work with people better than you This is very important and as follow up always ask these people their justifications so that you can learn and hopefully pass this knowledge on.
Good to know. 
Of course, Im not disagreeing with you. Just providing debate.
I guess I should probably state that I work in primarily a web application shop. But basically the idea is that you get a set of requirements from your business users on what they want to have happen, you write those tests down (and we use automated UI tests). And then we make those tests pass. We still write unit tests, but they are no longer creating our design for us. We still use some TDD when it makes sense to do, but it's not an absolute.
Yeah but wont it be kinda hard as i am just a beginner, who would want to give an internship to me?
I actually try to take the opposite approach - write as few comments as possible, but write code in a way that it's clear what the code does to anyone reading it. There is, of course, need for comments in some cases, but my general approach is to self-document.
&gt; 'for loop' in C# after learning to program in Visual Basic Ah! It is nice to know there is hope for me yet! (finally bit the bullet and started the process of learning C#) Oddly enough, I seem to have finished the same series from Channel 9 on the same date as the OP. I wasn't thinking of unity as I am more on the data side, but your blog seems well laid out, so I may give it a try. Have to agree at least with respect to VB, getting stuff done creates that momentum that keeps you going forward... or at least it does for me. 
Well that does seem quite a pleasing deal now that you put it that way, maybe i will give it a shot, It can't hurt to try. 
Hi. Never mind. You have gone out of way to help me out. I have got few articles which can help me out. But let me tell you that your support was awesome. Thank you. 
Sys Admin here. Your first paragraph well partially true is also partially what we see wrong with developers. I ask you for a program that adds two numbers together and outputs the results and you build a program that adds two numbers together and also changes the background on my desktop to black. This isn't what we needed, wanted nor did it help anything. It gives development a bad name in my opinion. Let me give you an example. We have a software package that our front line staff uses. A few years ago they switched to a tab based approach. Each "module" opens in a new tab. They also decided to add a spot to put in a "homepage" for each user. So when you open the program it opens a tab with this arbitrary page that needs to be setup (or it shows a default stock picture of there company name). It uses IE to display the page and doesn't allow any extensions so you have to be really careful what page is placed in there. Not only that it really has no use unless you "want" to display something there. Even more idiotic we can't turn the fucking thing off. So this is all great and well but they are telling me they spent development time adding this feature in when there are real bugs in the software that have been outstanding for years. My point is don't assume because you've spent 5 minutes watching someone work that you understand all of there needs and problems. When a client comes to you and asks for something provide what they ask for, if they ask for more bill them for it. 
This is in the Microsoft.Reporting.WinForms, which isn't available in the Windows 8 apps. I could be wrong. Please tell me if I am.
Ah, my mistake. Deleted, not a viable solution.
Structures are value types, not reference types. You're not modifying the structure in your list, you're modifying a copy of it. &gt; Will I have to create the structure again and plug the whole thing back in to the list? Or is there some way I can modify just the boolean portion? What you actually need to do in this case is to not use a structure. Use a class instead.
Unhappy path - what happens when things go wrong and they will go wrong. when writing log entries about exceptions - try putting in some details to help you/support identify the data causing a problem - e.g. if package with barcode "x" is causing an issue then include the log message "barcode - 'x'" as this gives you a chance to find the one item in several thousand you were processing at the time and thus apply data fix/replicate error. Though avoid using things that will be lost in a rollback - it was frustrating when someone logged the package id, not the barcode - but the id was not recorded anywhere because the record got rolledback. 
This should be higher up because I think this is what he/she is after. I'm currently in the same boat, on my second release now and I'm literally just marching at the same pace everyone else is. I do my best not to stand out, either favorably or unfavorably. 
&gt; winners[player] = new GameResult(winners[player]._playerscore, true); Here you're using the indexer to assign the value of the right hand expression to whereever the indexer stores it. You're **copying** over the structure that you create with `new GameResult()` into your list. &gt; winners[player]._isWinner Here you're using the indexer to retrieve `winners[player]`. You're getting a **copy** of the value, since it's a value-type. Then you're changing the value of the copy. The compiler notices that you're doing something dumb. You would need to have to copy this back into your list: var gameResult = winners[player]; gameResult._isWinner = true; winners[player] = gameResult; The list is a reference type, the value within the list not.
I know that is what I am doing in the first case. I am creating a new structure and putting that in to the reference location indicated by the list and its index location. I'm using copies of what was originally there to create the new structure. Your second explanation there actually helps though, that bringing up the boolean brings a copy of it. So no, I can not assign the individual boolean and will indeed simply have to plug in a new structure
Yah I was just really hoping for a way to avoid the copying over thing and using a class. But copy we shall. 
"Mon-Fri" FTFY ;)
I can switch it to a class for my own purposes, but I have to submit it for a lab first without using extra classes. I think I'm just going to submit it as is and switch to a class for my changes. 
Thanks, but no go. I was hopeful. I downloaded the source and tried porting to a Windows 8 class library (honestly, is there a better name? you can't find crap looking for "windows 8 app c# ..."). There was about 5-10 library that aren't available in this environment. I spend an hour trying to work around them and then gave up. There has to be a solution to this. I've found a few post that say Pdf's are pretty simple to write from scratch. I just don't want to reinvent a pdf writer. And if it's as easy as they claim there's got to be a few open source projects out there. 
Not only is it not sustainable, 99% of the time you will not be rewarded for it, other than the reward of being given more death march projects.
That would actually be a good challenge for a junior programmer. How to easily find the 5 or 6 relevant log items from millions. 
I don't get where FTP fits into all of this. Can you elaborate?
Yeah I was hopeful that it might work. Too bad.
We are given contrived assignments to force us to learn the benefits and constraints of different containers, pointers, variables, etc. I think it makes a lot of sense, I've very clearly seen the limitation of structures. Now when we go over classes in full I will have that much more of an appreciation for their specific use. This has been a really effective method of teaching for me, as a student, so I personally think it's a great idea and am glad my teachers have done things like this. It helps avoid things like /u/zeus_is_black's opinion on structures, at the very least
It's just usually it's the other way around. First teach classes, then structures.
What have you tried? [This](http://stackoverflow.com/questions/19678160/set-via-c-sharp-powershell-variable) looks promising. In this case, you would do something like: ... runSpace.SessionStateProxy.SetVariable("agents", richTextBox1.text); ...
I think it's interesting that they started you with C# actually. Although many classes use Java so I suppose that isn't so weird. My education started with Python and then moved to C++. Other languages were used but needed to be self taught. In C++ it was structs first and then classes for me as well and I think that actually makes a lot of sense for education. A struct gives you the concept of grouping data together under a convenient, human readable name while still providing access to it. A class gives you the grouping of data *and* functionality while also introducing the complexity of being a reference type instead of a value type. Not to mention inheritance, virtual methods and all that jazz that can come with it. Structs are available in nearly every programming language I've encountered and with very similar rules in their definition and use, outside of C++ where structs can also be given methods and reference members although that's considered bad practice as far as I am aware. Many functional programming languages won't provide classes, but do provide you with structs for organizing data. You can actually take advantage of the pass by copy concept that is being forced on you while accessing list items. You can leverage a concept known as immutability to manage data in a way that scales cleanly to multiple threads. You lose a little bit of convenience and speed but gain safety and transparency. It's a trade-off that is pretty common in a lot of applications. 
To start, I just wanted to comment and say I really appreciate that you recognize your course examples are contrived but still have an educational value. Anyway, their assumption that you will be able to adapt it to other languages is spot on. The first language is hard, after that they tend to be much easier so long as you're staying in the same overall paradigm. You're starting with C# and classes so you're being exposed to object oriented and procedural methods of programming. If you spend a lot of time learning *just* that style of coding you may later find yourself looking at a functional programming language and having a hard time understanding what you're seeing. Languages like LISP, Haskell, and Clojure fall into this. I found Clojure the most approachable and there's a neat site for it [here](http://www.tryclj.com/). I don't want to proselytize functional coding, but you might want to be aware of what it is and try to be able to read it. Functional programming can be a really useful tool. Python and other scripting languages are really handy, and you might find a use for it in working on math homework or if you've ever taken an interest in cryptography the built in tools for modulus and modular multiplicative inverse can make toying around pretty simple. You could also try solving [this](https://imitationgame.withgoogle.com/) with Python. You can bypass a ton of the complexity using regular expressions and a dictionary. Python is wonderful for string processing. Are they talking about classes and structs as data structures? I'm under the impression that those just *organize* data while data structures are the mechanisms that actually *store* the data for accessing later. Think arrays, lists, hash maps, and trees. Sometimes you can find massive speed improvements in an algorithm by how you are actually storing your data. For example, finding the largest item in an unsorted array requires n operations where n is the size of the array. However, in a heap you can access the largest (or in a min heap the smallest) item in constant time. There is initial overhead in creating the heap and after you remove the largest or smallest item it require log(n) base 2 operations to restore the heap property. 
I had to do this with an app that was spitting out XML so i translated to xml-fo then used fo.net to make the pdf. Not sure if that is way outside the realm of usefulness for you. I've considered it for other projects because fo.net worked well and XML serialization isn't much of an issue for my case.
&gt; C++ where structs can also be given methods and reference members This is because in C++, literally the only difference between `struct` and `class` is that `struct` is default `public`, and `class` is default `private`.
[Functional programming](https://en.wikipedia.org/wiki/Functional_programming) is *very* different from assembly (except maybe [SSA form](https://en.wikipedia.org/wiki/Static_single_assignment_form), which I don’t think any machine actually uses). In functional programming, “functions” are first-class (i.e., you can pass them to functions, return them from functions, operate on them as other data, etc.). Usually functional languages are also mostly side-effect free (i.e., you don’t change state/variables) (“pure” means entirely side-effect free, like Haskell) (it’s like everything is implicitly defined `const`—think more C++, which has better and more const-correctness than C#). These languages also generally lack iteration (loops, etc.) in favor of recursion. In the end it’s much more mathematical.
Can you also inherit and declare methods as virtual in a struct in C++? 
Yes. You can even declare pure virtual methods in a `struct` (making it abstract).
/u/dinosaurdynasty does a pretty good job of explaining the general concepts of functional programming. It is definitely more grounded in math, and as a result the structure of functional programming is quite a bit different. [This is an example](http://pastebin.com/gYSCgGwH) of an arithmetic parser in Clojure. It could be made even more functional by using a `reduce` function instead but I'm still learning how to use the style myself. &gt;Classes and structures are indeed being discussed in the Data Structures course. Are they the focus of the course though? Or just being touched on before delving into the underlying data structures themselves? Usually class hierarchies and code structuring fall into a different course.
&gt;(making it abstract) An abstract struct... Not something I would ever expect to hear! Thanks for the information. I'd heard before that the difference was only in the private vs public default, but it never really sank in that this was the *only* difference until now.
&gt;And in any case, I recommend learning assembly and C at some point, in order to understand and appreciate what higher-level languages do for us :) I second this! Learning a little assembly really shed some light on what was happening in higher level code I was writing, and helps me understand some of the trade offs made between languages. &gt;And speaking of C++, templates are like a badly-done purely-functional accidentally-Turing-complete metalanguage for C++. Could you elaborate on that? I've used templates before, but I had no idea they could be treated as a metalanguage or that templates were themselves Turing complete.
Man, C++ is wacky. I didn't even think about how default inheritance would work with structs. At least the behavior is consistent though. The language offers a lot of freedom to do some incredible things, but I routinely see that freedom followed by disclaimers of "You really probably shouldn't do that though". Sort of like the quote about BCPL from the Wikipedia article: &gt;The philosophy of BCPL is not one of the tyrant who thinks he knows best and lays down the law on what is and what is not allowed; rather, BCPL acts more as a servant offering his services to the best of his ability without complaint, even when confronted with apparent nonsense. The programmer is always assumed to know what he is doing and is not hemmed in by petty restrictions. My thought on that is always, "that's going to backfire".
&gt; I would just add that it sounds more like you are the exception to the rule. Yeah... I am. (And thanks.) And I hope OP will be too. &gt; I lot of places claim all the things you are talking about but they rarely if ever deliver. Yes, quite true. My current employer hired me for all that stuff I can do, and then later decided they want me to be a code monkey instead. So I'm looking. But when an employer lets me do my thing, great software can happen.
To the gym. To the bar. To your mother's for dinner. You have lots of choices.
&gt; Yah I was just really hoping for a way to avoid the copying over thing You *cannot* avoid copying value types, *that's what makes them value types*. Every time you assign them to a variable or return them from a method or whatever else, they are implicitly copied. Even something simple like this will not work with structs: var x = new GameResult(...); x._isWinner = false; var y = x; y._isWinner = true; Debug.Assert(x._isWinner == true); 
It's probably terrible code, but you could use the collision system from a [game I made in college](https://github.com/nemec/frostbyte-project2/tree/master/FrostbyteEntertainment/FrostbyteEntertainment/Engine) with some friends. I'm sure there are non-XNA replacements for the apis we used.
I feel dirty when I get into a situation where I find myself needing tempdata. It's like the goto statement of web dev. Nothing wrong with it necessarily but there is always a more elegant solution.
Ah alright! Just wanted to check. Data structures are really important for establishing fundamental concepts and design choices. Good luck with the class!
I grew to like C++ quite a bit more after I had access to C++11. I haven't had an opportunity to look over the features introduced in 14. I did just notice that they've added `using` statements though! That's exciting. I've heard they're trying to accommodate some of the functional ideas. I just hope the vocabulary(?) doesn't get so broad that two people who are effective in C++ still wouldn't be able to recognize each other's code. Also, that first wiki mentions their similarity to LISP macros. That makes the whole concept much clearer to me. It also makes the fact that it was discovered somewhat by accident all the more amusing. I'll have to read into the wiki book when I have more time for recreational reading. &gt; POD-type What's that? I can also google it if you prefer not to spend too much more time on the discussion.
I'm late to the party, but i created a hangman game last year as coursework. I'm happy to upload it for you if you want to use it as a guideline.
I had similar things planned for http://volatileread.com/UtilityLibrary?id=2096 I guess its time to give up on that.
In the article the author mentions a performance limitation of `DateTime.UtcNow` Would anyone in the know be able to elaborate on this?
&gt;papers Sorry, that was a typo I assumed you meant programs. &gt;undergraduate student hired to help take some of the pressure off the TAs. It sounds like they found a hell of a candidate. I'm finishing up my undergraduate and it sounds like you're very well versed in concepts that I'm only just starting to get my hands on.
You are funny. But seriously, did I write something wrong? English is not my first language.
I would think DateTime.UtcNow would be faster, since DateTime.Now has to do a bunch of time-zone changes.
I am finishing a app this week that creates fillable pdfs on surface rt and kiosk. I use I textsharp (nuget) and use the built in pdf renderer. I can render to memory stream for display to the pdf viewer or send it to the print subsystem. I am on mobile now so I can't view my code until the morning. this part took much less time then I estimated. Unfortunately everything else didn't. 
What did you use instead of DateTime.UtcNow?
In its simplest implementation you need to decide if the next move will collide with something. The simplest way to do this would be using System.Drawing.Rectangle's IntersectsWith method. Edit: if you have a bitmap you could use a bitmap lookup as well which could probably be even easier.
Re-read my comment. I didn't say there's no reason to use structs; I said there's no reason to practice using them. Learn what they are, how they differ from classes, and make the appropriate choice. It strikes me as a total waste of time to dedicate an entire assignment to forcing students to implement structs.
Since so many approaches were tried for iOS, it would be interesting to see: - C++/Android - Renderscript/Android - WP8 (C#, C++/CX, C++/WRL)
Hi, Thank you. In my next benchmark, I will make sure to build in Release! Anton
I stated "advanced-beginner". I'm comfortable with data-binding, but seems like I'd have to learn database.
I've only been learning c# for 3 months or so. I'm trying to solidify my understanding of objects and how they work before moving on to database. There's still a few things I don't quite understand.. 
Thanks. Any recommended resources?
Install Chrome if you haven't, follow [W3C SQL Tutorial](http://www.w3schools.com/sql/) at least until the Order By step. Then try this [Service Based Database](https://msdn.microsoft.com/en-us/library/vstudio/ms233763%28v=vs.120%29.aspx) tutorial to play with SQL Database right in Visual Studio. Afterwards, [display](https://msdn.microsoft.com/en-us/library/vstudio/wwh8ka92.aspx) the table you created, and later learn how to [filter](https://msdn.microsoft.com/en-us/library/vstudio/hbsty6z7.aspx) the data. You won't need LINQ at all to reach that step, but I suggest to learn about [LINQ](https://msdn.microsoft.com/en-us/library/bb397926%28v=vs.110%29.aspx) and [LINQ to Dataset](https://msdn.microsoft.com/en-us/library/bb386977%28v=vs.110%29.aspx) with [Typed Dataset](https://msdn.microsoft.com/en-us/library/bb399351%28v=vs.110%29.aspx) then rewrite your app with LINQ from the ground up to learn more about data access in .NET. Practicing with LINQ will help you learn [Lambda](https://msdn.microsoft.com/en-us/library/bb397687.aspx) which in turn will help you learn about [Functional Programming](http://blogs.msdn.com/b/ericwhite/archive/2006/10/04/fp-tutorial.aspx), at which point you'll [see the light](https://msdn.microsoft.com/en-us/library/hh273069.aspx)
It's time to create innovative web applications
&gt; Re-read my comment It was such a long one, I'm not sure I can. &gt; I didn't say there's no reason to use structs; Neither did I. I specifically said they're useful. &gt; Learn what they are But of course you meant 'learn only the way that I learned'. &gt; It strikes me as a total waste of time to dedicate an entire assignment to forcing students to implement structs Understanding value semantics? One mistake so commonly-made they included a compiler error for it? Someone was still confused and so they decided to post about it? Like I said, I disagree that its a total waste of time, and I'm taking as evidence the fact that the OP decided to post here to ask a question. Meanwhile he's got jackasses like you telling him he's wasting his time or his professor is an idiot.
In my experience, try breaking up your problem into smaller problems. Take a small file on your local disk, try reading that. Now zip that file, read it again. Now put that zip in the DB, etc. Usually, one of your steps will contain an error, and just because you try doing it all at once, you overlook things.
I pretty much agree with this, a ViewModel for each control is the rule. The exception is if the control is small enough not to need a ViewModel - a customized TextBox for example. One thing I disagree with is passing the parent ViewModel to the children, this will tightly couple all of the ViewModels to the parent - either pass an Interface that has the ObservableCollection defined or just the collection itself. And btw, you don't have to pass it as an ObservableCollection if the children don't need to modify it. Simply pass it as a IEnumerable&lt;&gt;. WPF will still get the changes - I'm guessing it checks for the INotifyCollectionChanged or whatever the interface is when you bind to the collection.
Reminds me of this video: https://www.youtube.com/watch?v=lGar7KC6Wiw
If you want to measure performance accurately, you should be using the Stopwatch class anyways.
Your English was fine. I was just being sarcastic :)
First hit when you google ".net generic where": https://msdn.microsoft.com/en-us/library/bb384067.aspx
Well, you *can* avoid copying them in some cases, such as with "ref" parameters or generic type constraints.
I see, thank you for the response as well as the informative article.
I did that too ;) &lt;https://www.nuget.org/packages/OAuth2.NET/&gt;
I realized I can't remember anything from the MSDN videos. I started another tutorial series (Pluralsight C# From Stratch), which have a more organized and structured (but nor as deep) approach. One thing I felt was missing on the Bob Tabor series was a more comprehensive view of how C# works. I don't respond very well to information without context... I prefer the structured option, even though it is admittedly boring.
I have been fiddling around with bettercms which is a good solution if you are looking for a light weight cms that doesn't have overbearing external dependencies Orchard is an excellent cms but it is too heavy for a lot of the projects I build bettercms can be installed as nuget package so I don't need to store the. Cms in source control
I'll look into C++ and Renderscript on Android. Would love to try WP if someone would send me one.
&gt; “devil’s compiler” Speaking of idTech... I feel like this would fit the theme of their games nicely. &gt;Or rather compilers/processors did. Very true, it's kind of incredible what comes in modern instruction sets these days. Not to mention the fact that their hack wouldn't really even be necessary these days due to the significantly reduced processor time of doing floating point operations compared to when that bit of code was written. Sometimes I feel like starting to learn programming in 2012 like I did was cheat mode :) Also, I think it hasn't just been instruction sets and processor speed improvements over the years. It seems like the profession is still very much in a maturing state and people have been figuring out better ways to structure and organize code for large projects. Even just the tools for writing code have improved greatly. Not to mention handy frameworks like Entity.
You told me to take the chit, give the tool, get the tool back, give back the chit. You mean I have to write down the names, too?
Stopwatch. He was using DateTime.UtcNow before to calculate elapsed time, but now he is using Stopwatch.
[This should help](http://www.mikesdotnetting.com/article/255/entity-framework-6-recipe-hierarchical-data-management) I do recommend having the hierarchy and the data "pieces" in different tables. That way updating the hierarchy structure is independent of updating the inventory item data. Unfortunately that can be more difficult to do in EF, so you might want to stick with your original data structure and then try separating them later. ------------------------ Also, use a rowversion to help prevent concurrency issues. If you're using attributes it looks like [Timestamp] public byte[] RowVersion { get; set; } If you're using the fluent API (which I'd recommend, since it unties the models from the DB schema) then it looks like modelBuilder.Entity&lt;Inventory&gt;() .Property(p =&gt; p.RowVersion).IsConcurrencyToken();
Thanks. It looks like I might split it up into multiple tables anyway, because I was just informed (after having to inquire and rephrase my question several times) that the same SKU can have multiple sizes that are all 'base' cuts (ie. ordered at 24x24 or 24x48). Not the parameters I was initially given, but this changes the model I'm going to be using.
Oh okay well if you say so
HCS12 is what we are learning on right now
Dude I've got like 500 lines of code in this program, you really think the SINGLE line of code I asked for help on is the only part of the assignment?
Also thanks for not being a major jerk about what I thought was a totally innocent situation. People get kinda angry in here, don't they?
I would normally agree, but I've read tens of thousands of files from this db already, and it only happens when I hit this one section of really big ones. It works otherwise. Thank you for the input though! 
Oh I get it! Sorry, I didn't quite follow the first time. Good lord why is reddit so much nicer than stack overflow!?
No problem! I actually ended up asking myself a similar question in a program I've been working on recently. I chose to stick with a struct and just overwrite the item in the index with a new version. People do get worked up here, and in all the programming subs. I think that's partially due to being anonymous on the internet but you should also bear in mind that programming is still a very young and evolving profession. The idea that we might call programmers "Software Engineers" was laughable just thirty years ago. New ideas come out and challenge the fundamental design choices that some people have been making their entire careers. Possibly even making the tools they're familiar with obsolete. That's going to create tension with people. Not to mention the fact that the code you write is very much an expression of your thought process and understanding of a problem. Usually clean code comes from clear understanding and the ability to eloquently express your solution through a wide 'vocabulary' in the language you're using. Getting criticism on that can feel like a direct attack at your intelligence! Don't let it though. Just like any language outside of programming you have to write and get criticism to get better. Going the other way, remember how dickish people can sound when they're attacking your work and keep that in mind when you're at the other side of the table some day mentoring a junior developer.
Oh no I'm more so referring to the guy who is insulting my teachers :P I expect criticisms of my language choices, that is good But your explanation here helps. I am leaving one career for a completely different one, so I'm facing a new culture. The resistance to change you mention existed in a different form in my previous career though, and this explanation of yours has actually helped me feel more comfortable about the culture I'm about to join. So thanks again :)
Load the excel file into a datatable: http://www.codeproject.com/Questions/445400/Read-Excel-Sheet-Data-into-DataTable You can iterate through the columns via myDataTable.Columns You can iterate through the rows via myDataTable.Rows It won't be as elegant or clean as linq but it will work. From there you can pipe the datatable directly into a gridview with one line of code. Think its something like gridviewname.DataSource = yourdatatable; You can filter a datatable using many approaches however this is one method: http://www.csharp-examples.net/dataview-rowfilter/ It would be possible (but a bit trickier however very possible) to write it in such a way that it can handle any single sheet excel file. If your excel file columns are the same each time then hardcoding the column names within queries will probably be the best approach. Don't forget to check the excel files columns are the columns you are expecting!
I think a friend of mine recently replaced a Windows phone. I'll see if he's willing to donate it; wouldn't be top of the line obviously, but better than nothing. Given that so much is different between the platforms (different CPUs, memory architecture, etc), are there any platform-independent benchmarks of the hardware out there, that could give us an idea of how the raw hardware of your iOS and Android devices compare? By the way, you replied to a comment on the article and said that the iPad Air 2 uses the same processor as the iPhone 6. From what I've read, the iPhone 6 uses the A8 SoC (2 cores at 1.4GHz), but the iPad Air 2 uses the A8X (3 cores at 1.5GHz). [It apparently benchmarks more than 10% faster than the iPhone 6 in single-core, and over 50% faster in multi-threaded tasks.](http://browser.primatelabs.com/ios-benchmarks)
Yes. This is called a *generic constraint*.
I'm glad I could be of some help! I'm fairly new to the field myself and like you I came from a different but related profession. It's exciting, interesting, and challenging. I find it really rewarding! I hope you enjoy it as well.
I thought this might do it. I am using xml for everything, so it sounded great. But once again, it's based on libraries not available in windows 8 apps (i.e. System.Drawing). I actually started digging in and there is some real possibility to remove the reliance on the legacy libraries. I got as far as removing the need for System.Drawing. But it really needs to be ported to VisualStudio 2013 and I only have an express license for that. 
Serious question: why are you adverse to multiple tables? EF is built on SQL, which is a _relational_ database. It's biggest strength is in being able to build relational queries. This is good and not bad. 
Oh shit! It worked!! I have looked through countless blogs and Q&amp;A sites, and somehow I knew reddit would be the place for a real answer! Thank you.
One of the best things about C# and .NET in general is the amazing amount of high quality documentation from Microsoft and third-party sources. I am actually really surprised that your textbook is not up to snuff in explaining some very basic programming conventions in what sounds like a basic programming class. If you are looking for some very basic help on C# Microsoft Virtual Academy is where I would start. [Here is a video series specifically for beginners.](http://www.microsoftvirtualacademy.com/training-courses/c-fundamentals-for-absolute-beginners) Another great place to look for info is right on MSDN, as I said before the documentation there is incredible and if you are willing to do a little reading it can be an amazing resource. [Getting Started with C#](https://msdn.microsoft.com/en-us/library/a72418yk.aspx) is a great place to start. I am sure everyone is going to have some great resource they used and can recommend, there is no wrong answer here. The C# and .NET ecosystems are extremely rich and if the resources I linked don't do it for you then a simple Google search for "c# namespaces" will yield many many more resources for you to slecet from.
Great question! A lot of intro classes skip over the 'why' and 'how' of programming languages. Lets backup for a second - the purpose of a programming language (C#, Java, etc.) is to abstract away the actual machine code that runs on the hardware. It would be a very difficult and tedious task to write large applications in machine code. This is where the compiler comes into play; even though we have these great high level languages, hardware still only understand machine code. The compilers job is to take statements that we write in high level languages and turn them into machine code. Now, keeping in mind the above - back to your question. All of the specific words you are wondering the meaning of are keywords the language has. They are reserved for a specific function/meaning and help the compiler understand various traits about the code you are writing (context, control flow, etc.). **String** - A String is a type and a type describes to the compiler what kind of data you are working with. In this case, a string means text (words, sentences). That's why variables that are of type String usually have the " ". **Console** - (I am assuming that you are referring to the class here) The console class is a group of methods that tell the compiler how to interact with output on a terminal (the black window with a blinking cursor). You can use any methods (like WriteLine) to tell the compiler what you are trying to accomplish. Classes like this save us a lot of time, there is no need to always re-invent the wheel and write I/O code. **Namespace** - This is one of the context keywords I eluded too above, it tells the compiler the scope of variables and expressions that you are writing. **Main()** - This is a method name! It is a very important method because it is the entry point for an executable! **?** - This is the funny one - The question mark operator is actually shorthand for an if/else control flow fixture. If the variable to the left of it evaluates to true, the first expression is executed, otherwise the 2nd. https://msdn.microsoft.com/en-us/library/ty67wk28.aspx **Pro Tip** - MSDN is your friend! Microsoft has a lot of great documentation on C#... how did I find the above link? I googled "C# ? operator". Also, if your text book is not working out for you, see if your library has access to the [C# 5.0 in a Nutshell](http://www.amazon.com/C-5-0-Nutshell-Definitive-Reference/dp/1449320104/ref=sr_1_1?ie=UTF8&amp;qid=1426701294&amp;sr=8-1&amp;keywords=c%23+5.0+nutshell) book 
You're looking for a function like throttle.. But you couldn't find the built-in function `Throttle`? https://msdn.microsoft.com/en-us/library/hh229298(v=vs.103).aspx
Nice. I just know a lot of schools use LC-3, which is nice (it’s very, *very* simple) but LC-3 isn’t actually implemented by any processor.
&gt; ?: this is called the ternary operator. Simply put: a ? b : c; equals to: if (condition a is true) then { do b} else { do c } Actually it's called the *conditional operator*. It's just the only ternary operator that exists in C# (so far), so a lot of people confuse the name.
Yes, I could. But Throttle does not automatically push an update after the throttle time if an update has been received during the throttle time.
Glad to hear it! :)
Oh yeah, absolutely! I just mean that the relative cost to other operations has gone down for floating point quite a bit. I think that's the reason for the inverse square root function they were using in Quake - trying to keep the floating point operations minimal and go with a reasonable approximation of the true value. Parallel computing is fascinating to me. I love toying with threads, although I like it even more when the language supports that kind of functionality in a clean way. C# is pretty good about threading by providing plenty of thread safe data structures. Functional languages just seem to cover it so well though simply by the way they are structured.
It's not confusion on anyone's part really. It's an interchangeable term. The ternary operator in a conditional expression. Edit: unless I misunderstood that you were pointing to his reference to "the ternary" and not "a ternary" and were pointing out that other languages have others?
`null` arguments should throw a - you guessed it - `NullArgumentException`, not a `NullReferenceException`.