Hm, I think you have a good point here, I should change it soon :)
As far as I'm concerned you can do it any way that you like. As you have discovered, there are standards which people expect. C# and C++ put braces on new lines. C and Javascript do K&amp;R style, which is probably just because K&amp;R needed to save paper for their book.
At most protected; GoF suggests. But the singleton's purpose is to assure that only one instance exists, so I've done it this way (While at the same point, deviating from GoF) to show that even with different singleton classes 'instance' is always the same. I'll probably clarify this; or rework it to be more like GoF. Thanks :)
I quite often had issues with ‘undo’ not working. And sometimes the gui would show a file as being modified when there were no changes to it (especially after an undo). I have to go to the console and run ‘git status’ which seems to force the VS UI to recognise nothing has changed and behave accordingly 
I just looked at the animal example and there are already quite a few anomalies. - NullAnimal is wrongly implemented (should return string.Empty not null) - base class is not abstract - use of NotImplementedException - base method should be abstract (see previous point) I don't I need to look at any other "pattern" if a simple one is not even properly implemented. That was a good idea but maybe it's better to have some peer review before publishing publicly.
UWP is a lost cause as far as I can tell. I've never consciously used it—not once. The only times I've used UWP is when I'm forced to, e.g. Windows Settings app, Calculator and Edge. With the exception of the Settings app, there's usually a non-UWP alternative that's usually better.
I'll look at this, thanks.
Nice! I love your minimum working implementation of Reactive Extensions (RX) in about 10 lines of code. That library is hugggge, with hundreds of extensions, and it's sometimes easy to forget that it started out very, very simple.
Thank you! Only after my simplistic implementation I've finally understood what is actually happening inside Rx; and it helped me to understand the flow of it. While at the same time; the sheer amount of work yet undone, with Subjects, state of emissions and so on is mind-boggling - and it makes me really appreciate Rx team.
Regarding implementing the Singleton pattern I always consult Jon Skeets article on the topic. [Here](http://csharpindepth.com/Articles/General/Singleton.aspx) He explains dos and donts really good imo and also explains how to do thread safety the right way.
I love the effort you put into this post. Thanks so much! I think my major tripping point is what exactly the service is supposed to *do*. I mean is that where my CRUD functions go in? Do I use DI to implement it in the application? If so, how exactly do I do it? I'm sorry if this seems like really basic stuff but I've never really worked in such a structured way and I'm 100% self taught. Typically I just shove my DbContext right into my controllers wherever I need it with using blocks and the more I talk to people the more this seems like an... undesirable way to do things so here I am trying to learn better. I've also recently started learning Angular and I think what I like most is how ... compartmentalized? It is. I don't mind having more, smaller code files to work with because at least then its easier to identify what each one does. If, however, I have fewer enormous code files having hundreds of functions well, lets just say that's something I'd prefer to avoid.
There is the counter argument that property getters shouldn't have side effects. A singleton has the potential to have a lot of side effects, but I didn't check your implementation.
The simplest fix for this is just to drop to the command line to run `git stash` and `git stash pop`
In your Stragety pattern example, what's the point of the NoFlightStrategy and NormalFlightStrategy classes and the IFlyStrategy interface when C# has expression-bodied functions, lambda functions, and method-group references? Why not simply use Action&lt;String&gt;? Also, why creating custom interfaces for the iterator pattern, when C# supports also this pattern natively? Why emulate mid-90s C++ coding patterns when your language offers solutions out of the box? Don't fall into this design pattern trap. Certain patterns have their place, but a lot of them are simply not needed at all when your language already offers the right tools.
It doesn't (to my knowledge?) let you commit lines/chunks, only entire files. That along with stashing and a few other odds and ends are the main reasons I use GitKraken.
Yeah so that's one code base, with their style applied consistently throughout. That doesn't mean other companies are not allowed to define their own conventions and apply it consistently throughout their own code. While I agree that it makes sense to align on Microsoft's guidelines, if you already have an existing code base that uses a different convention (for whatever historical reasons) there's no reason to change it.
I have 20 years of software engineer experience across about 6 languages including C#. People have preferences. There’s no right answer, just compelling arguments on all sides.
&gt; And I want to justify the $50/license cost for GitKracken beyond just "I like it." But that's literally what the answer is. You want it because you prefer it. If you had a particular feature it offers that VS's tooling does not, you wouldn't need to ask others to mention it…
&gt; Instead of making your life harder by adopting other people's patterns, why don't you try keeping it extremely simple and easy to understand for everyone? How about this approach? You tell him to follow other people's pattern but then you propose him your own.
https://weblog.west-wind.com/posts/2014/Nov/29/Updating-Assembly-Redirects-with-NuGet
Another option: https://github.com/gluck/il-repack
You’re right.
C# Winforms has ***Control.Hide()*** and ***Control.Show()***.
&gt; In your Stragety pattern example, what's the point of the NoFlightStrategy and NormalFlightStrategy classes and the IFlyStrategy interface when C# has expression-bodied functions, lambda functions, and method-group references? Why not simply use Action&lt;String&gt;? And &gt; Also, why creating custom interfaces for the iterator pattern, when C# supports also this pattern natively? Answer is the same - to understand the pattern. Thanks for the input though, I'll add this to TODO list :)
&gt; Assigning a value to the first element after creating an empty array This is actually the right way of doings things, LOL.
I don't get it. You can't compile the code. How does something fall out of scope at runtime?
It's nice for picking random elements in arrays and things that index at zero: var elem = array[r.Next(0,array.Length];
Nice ! I had the same project in mind but I began it with the wrong ressources (a book based on java). Could you tell me where did you find the good ressources to help you ? Thanks !
Static state makes unit testing impossible.
&gt; but I just can’t pull myself to do it when writing JavaScript. Well, you shouldn't. These two code snippets return different values in JavaScript: return { prop: 'foo' }; return { prop: 'foo' }; The first will return the object, the second will return `undefined` due to ASI.
FYI I found this to be a good solution to my problem I posted [here](https://www.reddit.com/r/PHP/comments/8kvms9/php_applications_on_windows/).
Here's an alternative: https://github.com/toddams/RazorLight Let us know if you switched and what your findings are.
This would've been nice a decade ago, but not so much anymore. There are plenty of alternatives to PHP these days, and having worked quite a bit with PHP, I can only say that I do not want to touch it ever again if possible.
1. Design Patterns by GoF 2. Head First Design Patterns by Elisabeth Freeman and Kathy Sierra And above all, Christopher Okhravi's [series on patterns](https://www.youtube.com/watch?v=v9ejT8FO-7I&amp;list=PLrhzvIcii6GNjpARdnO4ueTUAVR9eMBpc). The way he explains really resonated with me
Not disagreeing with you, but I work with a php codebase and had to integrate it into .net stack somehow, so this tool helps me. If I had choice, I also wouldnt touch php.
If you remove "Console.WriteLine(str);" it does compile, but str will have fallen out of scope where that line is. It won't have a value any more. A more complicated object might want something to happen when it's fallen out of scope like ending a session gracefully or closing a connection.
Well if we break the problem down, we have a load of labels with dimensions and a position. These can be accessed via the 'location' property, which is stored as a Point object, and the 'Size' property, which is stored as a Size object. But how do we find the dimensions of all the label controls in your form? You can use Form.Controls to get all the controls in your form, and then check that, for each control, its type is a label. You can then store these in an array called 'walls' for example. Personally, I would just store Rect objects with the dimensions of the labels, as to not inflate the size of the array unnecessarily, and set the x and y to the location, and the width and height to the size. Now we know exactly where our walls are and how large they are, we can check that our player doesn't intersect with any of the walls. Now, wherever we have the code for player movement stored, we want to say, "okay for each wall in our walls array, does wallRect.IntersectsWith(playerRect)?". Note here the use of the IntersectsWith method, which is an extension of Rect objects. This is why I suggest storing your labels as rects in your array as this will save you time later on. If any of the rects ever intersect with the player then run your restart function. This should target your player object and move it back to your start position. I hope this makes sense. 
About Head First, I think it's that book I took but it's in java. Did you have any problem transposing the exercices from java to C#, or is it just me ? 
Depends the project you are working on. I had to take on development of an ongoing laravel project so had to code in php.
Why would a connection to a database *not* be a Singleton
Hm, for me Java and C# are the practically the same when it comes to language itself, and since design patterns by definition do not require the use of libraries (as they are building blocks by themselves) so in this case I had no problem...
&gt; Do I use DI to implement it in the application? If so, how exactly do I do it? Please see this working [Demo](https://github.com/leaderanalytics/AdaptiveClient.EntityFramework.Zamagon) that shows how to construct your service layer and how to inject services into controllers, ViewModels, etc.
That's a fair use of it. I don't think I've ever really encountered a situation where that wasn't just a code smell that I designed my seams incorrectly.
&gt; I get the idea of injecting the service but I don't have the first clue and I don't understand most of the blog posts or tutorials I've found that cover it. Stepping through working code is very helpful. This working [Demo](https://github.com/leaderanalytics/AdaptiveClient.EntityFramework.Zamagon) shows how to build your service layer and use dependency injection. 
...those are the commonly agreed upon syntax conventions for either language.
I just want to warn you :-) While learning is always good, you always have to see these pattern in their historical context (mid-90s C++). Happy coding!
&gt; A more complicated object might want something to happen when it's fallen out of scope That's not possible in C#. You'll have to use `IDisposable` and a `using` block. 
Exactly my case, and it was the same as in my last company. Php is not going away
As long as it is consistent within a project, this is as pointless an argument as tab vs space or int vs Int32. We can agree to disagree. 
Dismissing any convention as a pointless conflict of opinions is not productive in a professional context. Conventions exist to prevent pointless arguments when multiple devs share a project and have differing opinions. Can conventions change or willfully be avoided? Sure, knock yourself out. The conpiler cares not. But that doesn't mean you can't acknowledge the existence of the convention.
lol ok - I let the downvotes on your comment speak for themselves.
it was deleted
I’m not dismissing conventions. I’m acknowledging that they are not universal. If we’re so presumptuous to impose a convention on everyone who uses a particular language, why stop at the language and not insist it be applied to all bracket-based languages? Or for that matter, if you believe there is an industry-wise consensus on the convention, why does the language not enforce it the way Python does with indentation? It should at least throw warnings out if the industry is so aligned and passionate about this, no?
Yeah I know, but that's what the comment I replied to wanted to happen.
Building on top of case null when await this is false This works: case null when await this as object is false (`as bool` didn't work because it's a value type) 
Peach pie not only allows interoperability, but it'll probably provide far, far better performance.
Can you recommend any books or resources to learn about how garbage collection actually works? I have managed to find snippets in other books but usually they gloss over it. I find it super interesting.
Probably later yes, now its not much faster. I think performance wasn't their priority yet
Just because I can drive my sedan off of the road does not make it an offroading vehicle. Automated enforcing would be nice but its absence does not invalidate the purpose of conventions. Conventions, by definition, are _things the compiler does not care about (but humans do)_. To that extent, it would make no sense to have the compiler fail on syntactically correct source codes. You cannot guarantee that syntax conventions won't have any exceptions in fringe cases. There is also no intention (as far as I'm aware) to create a global convention that is applied to all bracket-based langagues. Again, its absence does not invalidate the purpose of conventions. Conventions are a guideline, not a black and white ruleset that you either follow to a tee or don't.
Uhm… is case an expression?
Since the article mentions `sizeof()`, one could also end the expression in `new bool()` instead of `false`.
Not exactly sure on how Unity works but I think you would have Block be its own class. Not sure what you mean about setting them manually but anytime you would want a new block you would just create a new Block object. Hope this helps as I dont fully understand your question lol
Aww, I was excited for a moment that they'd finally let us put lambdas *in* attributes (constructors)
I already have Block class. The problem is that whenever I create new one I have to set it's texture, few bools and some other stuff again. I was curious if it was possible to simpify the code and make it something like Block block = new StoneBlock(), so all of those values are set already by default
I love a good god game. Maybe I should play black and white again.
Are you not able to implement a no-parameter constructor in StoneBlock() and set these properties there?
Or call .Dispose()
Yea so Block would be your base class. Could have a Texture variable and whatever other variables you want all the blocks to have. Then you would have StoneBlock inherit from Block. StoneBlock would have a constructor that sets the Texture variable and other variables with values specific for StoneBlock
```case null when await sizeof((int)this) is new bool()```?
So my initial thought of just using inheritance was right? Ok, thanks for answering
Hey, you might have better luck trying /r/SuggestALaptop/. The Dell 13 XPS is pretty great, or the Lenovo Carbon X1. Those would be my go to if I had to drop my MBP.
Abitrarily long `case null when await this as bool? is new bool() as bool? is false as bool? is false as bool? is false as bool? is false as bool? is false as bool? is false as bool? is false:` Just keep appending `as bool? is false`
Thanks for the info; I'll check out the sub. 
&gt; Implementing and using disposables properly guarantees that. Yeah I meant "using" it to be included in "implement disposable properly".
Punctuation isn't allowed.
JavaScript actually evaluates line endings differently. I don't remember the actual impact, but I do remember spending four hours trying to figure out why a simple function didn't return correctly. I believe I invented several new cuss words when I finally "got it".
The sub is called r/thegoodplacegame
I agree with grauenwolf. If the method name is CanDeserialize, I would figure it would be yes or no. Can you deserialize "this invalid xml"? The answer to that is simply no. If I'm asking that question because I don't know about the state of the current XML, I'm going to be checking it regardless of why it's not able to be deserialized.
Probably not by a strict definition. But I hope everybody got the point. :)
Nice. 
Repetition. :( 
Nice!
That's 5. The sizeof is followed by a bracket.
Not sure how monogame works but you could perhaps make a block Factory class which can generate different types of blocks.
The convention is Try\[FunctionName\] for error-swallowing methods. If it worked like you described here you would then have to either start to check the xmlreader yourself, manually, adding more boilerplate code, or throw the XmlException yourself so that someone else can add that boilerplate code.
You can use JSON.Net and this SO answer to do a conversion without using a custom formatter. [https://stackoverflow.com/questions/43714050/multiple-jsonproperty-name-assigned-to-single-property#43715009](https://stackoverflow.com/questions/43714050/multiple-jsonproperty-name-assigned-to-single-property#43715009)
5
Yes, add threads, and suddenly you need a queue between producer and consumer as the thread might consume items slower than the producer. Then this introduces a time lag between producer and consumer. Which means items go missing as soon as you add an .ObserveOn(NewThread), unless you add a wait to let the thread get set up before you start to publish items. You really need that mental model of what's inside the black box to use RX. Which doesn't detract from the RX team - they did an absolutely amazing job.
The linq queries weren't abused enough yet so I constructed this abomination: public TaskAwaiter&lt;IEnumerable&lt;object&gt;&gt; GetAwaiter() =&gt; default; public async IAsyncEnumerable&lt;IEnumerable&lt;bool&gt;&gt; Test() { if (false) { } else yield return from _ in await this where true as object is null orderby false descending select new bool(); } If you're willing to pretend C# has a discard in the `from` clause and count it as a keyword, that's 20 starting from `else`. Otherwise, starting from `in` that's 15 different keywords. There's probably room for improvement as you can probably sneak in a `default` literal there somewhere.
Ah never knew that cause I never tried it. 
&gt; remove all the numbers after the last dot &gt; An example output: 123.12.4.223 &gt; I want to change the output to this for example: 123.12.1.1/18 If you want to remove the numbers after the last dot you can never get what you provided as an example "123.12.4.*" can never become "123.12.1.1/18"
But I can remove it and then add it.
Just curious, why mono instead of core? Also, I do dig what you've done here. 
You can always try but removing 223 from "123.12.4.223" and then adding "1.1/18" will never give you "123.12.1.1/18"
Await it? I'm confused.
hm no. I'll remove the numbers after the last dot. And then I combine it with another string and print it.
https://vcsjones.com/2019/01/30/csharp-8-using-declarations/
Yeah, the pattern the OP is looking for is factories. BlockFactory might have MakeStoneBlock(), MakeBrickBlock(), etc... I don't see any other way how they could be implemented outside of a factory (or a method that emulates a factory).
I'd write the license header in every source file you wrote yourself, including P/Invoke calls. You wrote down the method headers you need for your code, so it's code you wrote. The actual implementation someone else wrote is in the libs.
You should try this question in r/fsharp. There are some companies using F# in production systems, but the only one I could name is Jet.com.
Just realized it should be initialized as Chickenfeed rather than object. &amp;#x200B;
Thanks, this helped clarify the doubt
Thanks, this clarifies some stuff for me regarding "as".
Thanks, makes sense!
the pestilent slithy regex-infection wil​l devour your HT​ML parser, application and existence for all time like Visual Basic only worse he comes he comes do not fi​ght he com̡e̶s, ̕h̵i​s un̨ho͞ly radiańcé destro҉ying all enli̍̈́̂̈́ghtenment, HTML tags lea͠ki̧n͘g fr̶ǫm ̡yo​͟ur eye͢s̸ ̛l̕ik͏e liq​uid pain, the song of re̸gular exp​ression parsing will exti​nguish the voices of mor​tal man from the sp​here I can see it can you see ̲͚̖͔̙î̩́t̲͎̩̱͔́̋̀ it is beautiful t​he final snuffing of the lie​s of Man ALL IS LOŚ͖̩͇̗̪̏̈́T ALL I​S LOST the pon̷y he comes he c̶̮omes he comes the ich​or permeates all MY FACE MY FACE ᵒh god no NO NOO̼O​O NΘ stop the an​\*̶͑̾̾​̅ͫ͏̙̤g͇̫͛͆̾ͫ̑͆l͖͉̗̩̳̟̍ͫͥͨe̠̅s ͎a̧͈͖r̽̾̈́͒͑e n​ot rè̑ͧ̌aͨl̘̝̙̃ͤ͂̾̆ ZA̡͊͠͝LGΌ ISͮ̂҉̯͈͕̹̘̱ TO͇̹̺ͅƝ̴ȳ̳ TH̘Ë͖́̉ ͠P̯͍̭O̚​N̐Y̡ H̸̡̪̯ͨ͊̽̅̾̎Ȩ̬̩̾͛ͪ̈́̀́͘ ̶̧̨̱̹̭̯ͧ̾ͬC̷̙̲̝͖ͭ̏ͥͮ͟Oͮ͏̮̪̝͍M̲̖͊̒ͪͩͬ̚̚͜Ȇ̴̟̟͙̞ͩ͌͝S̨̥̫͎̭ͯ̿̔̀ͅ
This is a `Dictionary&lt;string, YourCommonObject&gt;` 
In most western countries, copyright is implicit and there's no need to write it down each time.
Nice!
Rule 1: No job postings (For Hire and Hiring) 
Hi jogai-san, Thanks for sending over this alternative! I will try using this, hopefully it supports all the functions / features and also provides a bump in performance. If it does then I will probably switch to this. Thanks!
Doesn't sound like OP is doing either. Just curious about the job market in general for a related language 
Are you going to make me compile and run that...
I poked at their post history and you are probably right. /u/the_other_sam Sorry for that, I keep seeing idiot recruiters who can't outwit my five year old nephew :) 
Also why use Regex when a parser would be easier. 
Haha. A sneaky bunch aren't they 
I see adverts for F# posts in London, mainly finance. I also get adverts that include F# as part of other .NET things.
Thanks - I was hoping i would hear of some transitioning companies. Just to stay ahead of the game. I really would like a reason to learn F# but I cant justify the time if I can't use it in the near future.
Yup, he's right. No worries :)
:) 
&gt; Continually calling an async method after the previous call completes while(true) await AsyncMethod(); Simple, no?
I'll vouch for the XPS 15. It's well built and the battery lasts a *long* time for as light/small as it is. I also know several coworkers who got the XPS 13 instead, and they have similar comments about it. Or get the $1000 Asus 15" laptop *du jour*. It'll be 98% as good as the Dell for about 55% of the money.
We have a completely-mixed .NET codebase - legacy VB, current C#, and a smattering of F# where it is makes sense. It's mostly UI test harnesses and a parser, I think 
Happy cake day!
```case null when await this is false as object is null```?
You actually write license headers?
Probably can add a `when`.
What part of serializing it is the bottleneck?
If your T is a blittable struct, serialization can be a byte copy. For instance, if you're serializing to a file, you could: - Create a memory-mapped file of the appropriate size - Open it as a `Memory&lt;byte&gt;` - Cast your `T[]` to a `Span&lt;T&gt;` and from there to a `Span&lt;byte&gt;` (using `MemoryMarshal.Cast`) - Copy between the two using `Span&lt;&gt;.CopyTo`
&gt; it will be prey to the garbage collector Correct me if I'm wrong, but IIRC the GC doesn't really care about scope - in the sense that local variables don't keep their referents alive after the last usage of the local, even if the variable is still in scope. For example: Foo foo = CreateFoo(); UseFoo(foo); // The Foo can be collected from here on // if 'foo' is the only reference to it, I think DoSomethingElse();
The pricing models are implemented in F# in the finance institution I work in. However, you need to have strong mathematical background to get the job.
There are a couple of options: you could write some code to feed an IEnumerable to a stream and use [JSON.Net](https://JSON.Net)'s stream writing. Here's an example where someone wants to write to an action result on a controller, but it should give the general idea: [https://stackoverflow.com/questions/26269438/streaming-large-list-of-data-as-json-format-using-json-net](https://stackoverflow.com/questions/26269438/streaming-large-list-of-data-as-json-format-using-json-net) [You can also write manually](https://www.newtonsoft.com/json/help/html/Performance.htm#ManuallySerialize) 
Calling Serialize and Deserialize... Super-waste of memory and several seconds for 250,000 uvec4s worth of memory
Thanks! I haven't used Span&lt;&gt; but it looks like quite efficient.
Ah, that's more dotnet core and less EF. .NET Core has wholly embraced IoC &amp; DI (Inversion of Control and Dependency Injection) You configure a container at startup where you request services using extension methods and then start the application.
Thanks for the suggestions, just in case I was unclear, I don't care about human readability, the only reason I mentioned string was because it could be the hook between binary representation (byte data) and type-to-string conversion. I'd expect with json format there's going to be quite the overhead for parsing the string and adding the extra characters.
The context is designed to be a unitofwork, so keep it short lived.
You can try to reinvent the wheel, but there are solutions out there; - [Hyperion] (https://github.com/akkadotnet/hyperion) is a good choice if you want quick and dirty polymorphic serialization. You don't need any attributes or custom code, and the resulting data is more compact than something like JSON. It's not quite intended for large sets of data, however I've used it for some pretty large payloads in the past without issue. - [MessagePack-C#] (https://github.com/neuecc/MessagePack-CSharp) is stupid fast and has the advantage of being built on a cross-language standard. There's also tooling for use in AOT scenarios like Unity, however to get the most out of it you do have to add attributes to your classes. *If you really want to roll your own,* I would suggest looking at how both of these solutions allocate their buffers, as buffer allocation strategies will likely be where most of the challenge will be (after you settle on your custom format.)
Step through the code using the debugger and you will find the null reference faster than somebody else reading your code will.
Switch to C# 8 in the preview.
Xiaomi Mi Notebook Pro
After running through this, I started here: public class Program { static void Main() { Customer customer = new Customer(); Order order = new Order(); customer.CreateOrder(order); MenuItem mi = new MenuItem(); customer.Orders\[0\].Items\[0\] = new OrderItem(); customer.Orders\[0\].Items\[0\].MenuItem = mi; //customer.Orders\[0\].Cost.UpdateCost(); } } I couldn't see where OrderItem was connected in UpdateCost. Then I noticed, in your Order\[\], each Order has a cost, but this is well above OrderItem in hierarchy. You then have reference to OrderItem.Order.Cost but this OrderItem is a Property of MenuItem, and has nothing yet assigned to it and no connection above. &amp;#x200B; So it looks like this: Customer -&gt; Orders -&gt; Order -&gt; Items -&gt; OrderItem -&gt; MenuItem (-&gt; OrderItem -&gt;Order -&gt; Cost) this is the issue. I would say UpdateCost should be a method in OrderClass. Thats my 2cents though, and I could be off.
thanks, I'll look into the Dell's a bit more...
Thanks so much for the feedback mate, a few questions as to what you wrote: Why would the UpdateCost be in the order class? I assumed that it was going to be in the MenuItem Class due to the total order updating everytime there was a new item addition. Also it seems like your diagram is a staircase that only goes one way, how will I be able to access the Cost within orders? I thought I linked the classes to be able to access each other.
I also have a core version, it's just which one I ran at the time 
I swear I’ve read this before 
My full time job is at https://www.olo.com/ and the team I am on is doing it's project in F#. Most of the company's code is C# but that could maybe change slowly if we do a good job! When applying for jobs recently I got 5 offers, 2 of them were F# jobs. Dell Virtustream and Olo, and they were the two highest paid offers. Of course when applying I had reached out to the F# community specifically (also Rust). I've also done one small side gig in F#, and at my previous job we had a little bit of F# that I introduced, and people liked it. 
Is your ultimate goal to calculate the IP range/subnet mask based on what your regex finds? Why not just combine the matches into a string and feed it to a method that does the work for you and returns your calculations expressed in “wack format”?
For DBs, use an object relational mapper like entity framework. Object composition is the most important concept in object oriented programming, and if you use static objects you are basically creating incidental data structures with globally accessible objects. Composition with dependency injection is what you want. There will be no global state and it will be easily testable. Singletons really are that evil. Yes, it is convenient, but it will blow up in your face eventually.
So initially, I would put update cost in Order, because that is where Cost exists. I understand that you are connecting the classes, but that doesn’t mean that they are accessing the objects created from the class. Which would explain the null reference, because you are trying to access Cost, but cost isn’t some sort of global variable available everywhere, it exists as a property of the object that has been created.by moving UpdateCost() to Order, you can then access the cost where it exists, in the order, not in menu item. As far as the staircase, I’m not sure how to solve the issue. It seems like you created this without using the idea of an object being created from these classes. You don’t link classes together, instead you expose methods that modify the object created. If you create the object and look at it, you see the hierarchy. I’m sure there is a way to move back up, possibly recursive, but it’s late for me. Good luck!
Why does this remind me of the game "Questions"?
This is really the only answer you should pay attention to. 
A singleton would prevent [connection pooling.](https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/connection-pooling).
&gt; but I cant justify the time if I can't use it in the near future. lol why u lazy? 
*sweet jesus*
Presumably, they can’t justify the time because they’re otherwise too busy. 
Roses are red Violets are blue Case null when await This as object is true
Oh is this bad form? We use this all the time to... Well - to... Whatever the fuck that does.
A guy posted a while back about how some company nearly drove themselves into the ground trying to use F# for everything. I wish I could post it.
That's pretty busy.. think one wouldn't have the time for Reddit then. I've got a rather loaded schedule myself but just made the jump to .net/c#/f# for a job... 
So you don't care how it's serialized? Then a binary serializer or the others' suggestion of a span cast to byte array would be a good bet
&gt; I cant justify the time if I can't use it in the near future. Do you know other functional programming languages? If you don't, then the concepts you learn with F# can easily pay dividends for how you write C# (or other languages). Purity / referential transparency, first class functions, immutability, etc. Fair warning though, pretty much everyone I know that gets to try out a nice algebraic data type system (like F# has) ends up missing it in their other languages. I know I do.
I don't. As was stated elsewhere, US copyright is automatic on qualifying work.
Discriminated Unions are life.
I'm currently doing a finance related project in F#.
I would be interested in that story.
Every time I read a line of code with a nullable value type in it, my inner voice reads it as a question and rises in pitch. ``` bool? foo = false; ``` It sounds really weird in my head.
Punctuation? `bool?` is a keyword. 
Can you provide a code sample showing typical usage?
Some books I can recomend. [C# in Depth](https://www.manning.com/books/c-sharp-in-depth-fourth-edition) from John Skeet. [CLR via C#](https://www.microsoftpressstore.com/store/clr-via-c-sharp-9780735667457) from Jeffrey Richter (a bit older, .NET 4.5) Also note that althought C# has a GC, there are several ways to optimize memory management, more so with C# 7.3 and 8.0. 
I know a whole team of people at this Finnish company doing actual apps with F#. It's pretty uncommon though.
I had a gig 5 years ago in the finance industry (Switzerland) where F# was used for various tasks. Unfortunately our task was to reengineer away the things to C# because the code was non-idiomatic and thus hard to understand and find people to work with it.
 public string ToString(IFormatProvider formatProvider) { return ((FormattableString)$"Pounds of Chickendeed: {AmountChicken:0.00}\nCost of chickenfeed: {CostChicken:C}\nCost of chickenfeed per pound : {AmountChicken / CostChicken:C}").ToString(formatProvider); } public override string ToString() { return ToString(CultureInfo.CurrentCulture); }
[https://stackoverflow.com/a/1732454](https://stackoverflow.com/a/1732454) **Moderator's Note** &gt;This post is locked to prevent inappropriate edits to its content. The post looks exactly as it is supposed to look - there are no problems with its content. Please do not flag it for our attention
Those two books are also my recommendation. Another alternative is to treat your case as if you were a complete beginner. Sometimes it helps to start from the basics. A few online resources that can help: - https://www.guru99.com/c-sharp-tutorial.html - https://learncs.org/
Both binary and JSON serializers cause a performance problem... Need to try Span&lt;&gt; really.
No, you can't pass in extra parameters for an operator. What would that even look like?
How do you imagine that the code for this would look like? Just make the ShortVector3 constructor take the 2 arguments and be done with it
Thanks for the suggestions! For a single Array2D&lt;T&gt; (that stores T[]) I could use many many options, as can already be seen by all the helpful people in this thread :) My other "soft" requirement is that it can be used in other serialization solutions, so that for example I can use Unity's serialization or even JSON if necessary to serialize a class hierarchy, which might at some point contain an Array2D. So, the most "generic" way of doing this is I guess to override the serialization of the Array class, given that I can put a few requirements on the T type (as in, be able to read from/write to bytes) so that I don't have **serialization overhead per array element**. MessagePack looks good, but it looks like a complete serialization replacement, which is not a bad thing, but it's a big thing for sure. For extra clarification, if I would use MessagePack, I would still prefer if MessagePack serialized the T[] array using my custom override. All I want really, is to be able to implement ToBytes() and FromBytes() function for the generic Array2D and also for T types, and make whatever serialization system use those functions, and it looks like Span&lt;T&gt; might be the way towards there
You can't pass 2 parameters, but you can pass a tuple.
I don't think that's possible. How would the syntax to pass an extra variable into an implicit (or explicit) cast even look like? There's one general issue with your solution though. It's against conventions to write an implicit cast where loss of information is theoretically possible. That's why you can implicitely cast an int to float, but have to explicitely cast float to int. So the proper solution would be to make more constructors, a set of static conversion methods, or if you feel fancy you might want to try to make an extension method that you then call from a Vector3. The method signature for that (with the factor as an optional parameter) would look like: public static ShortVector3 ToShortVector3(this Vector3 vector3, float customDecimalFactor = 1f) And could be used like this: myVector3.ToShortVector3(); myOtherVector3.ToShortVector3(100f) &amp;#x200B;
Well both examples just return a value, I thought you might be able to pass in some extra stuff to work with. It doesn't make immediate sense to me why the second example shouldn't work :\\
Ah I see, there wouldn't be any parentheses to put the extra parameters in. Makes perfect sense, I think I had it confused with a constructor.
I already have a few constructors like that :) This is the first time I've ever used implicit/explicit operators like that, so it's just good to understand what they can/can't do. I realised there would be nowhere to put the parameter after I tried to write an example, makes perfect sense now. Unless I'm misunderstanding, I don't think I can edit the Vector3 struct because its a part of Unity.
Or just run the program in visual studio with F5 and wait for the crash. If necessary, add NullReferenceException, to the list of “break on exception”. 
&gt; I don't think I can edit the Vector3 struct because its a part of Unity. That's the neat thing about [extension methods](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/extension-methods). You can plop those into a static class called "MyExtensionMethods" and they will be added to the class after the 'this' keyword, even if you don't have access to the source code.
Woah, thats awesome! I feel like I learn something new and the 'rules' get broken every day :p I'm going to try that out immediately but thanks for sharing, that sounds amazingly powerful.
If price is not an issue I would suggest surface book/laptop (depending on your dev area). 
You forgot to mention the biggest major difference: no destructors. Get used to checking whether a class implements `IDisposable` and wrapping stuff in `using` statemens. Generics are far less powerful than C++ templates. Otherwise, it's a much more pleasant development experience. 
You will be fine. I can also recommend C# in Depth as a book for a transition from C++ to C#. You will definitely see that C# is much easier/comfortable than C++.
there are finalizers though. but when they are called is up to the GC
&gt; Regex regex = new Regex("&lt;a href=\\"\\\\/info\\\\/whois\\\\/(\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3})\\"&gt;\\\\s\*\\\\1\\\\s\*&lt;\\\\/a&gt;"); This just disgusts me lol, i will never understand balls deep regex. 
I think the advice you've been given so far is great. You'll be able to manage C# quite easily if you're comfortable with C++. Just don't be afraid to google for "easy" things, don't feel that you're a beginning or a "n00b" because what is trivial for you to do in C++ is different in C#. It's all a learning curve. I learned C++ originally and transitioned to C# and I have to say, I love it. There's such a focus on removing boilerplate code from C# that it feels fresh without feeling unfamiliar. Then when you get things like LINQ and the lambda operator, you feel spoiled.
The most important part for me, as I made the transition, is to remember that C# will do almost ALL the heavy lifting that is needed in c++, but as for the rest, C# is waaaaaay easier to code, just remember that is better to search for solutions in google before thinking too much.
Try aspose.html. This article can help you know how to work with it [https://dev.to/asposepdf/generating-pdf-file-using-c-loj](https://dev.to/asposepdf/generating-pdf-file-using-c-loj) You can also use a Cloud API https://github.com/aspose-pdf-cloud/aspose-pdf-cloud-dotnet &amp;#x200B;
No it's not. `bool` is a keyword. `?` is syntactic sugar. It really tanslates to `Nullable&lt;bool&gt;`.
Yes linq and lambda you cannot live without.
You will be fine. The dev who are going from c# to c++ will have hard time
I think javascript is the same way. Its strange and I catch myself forgetting it from time to time.
I know what it's equivalent to (it doesn't necessarily translate to it, that depends on the implementation in the compiler), but that's irrelevant to whether or not it's a keyword. You could say that `?` is a type modifier keyword, and in that sense `bool?` is two keywords in a row. A keyword doesn't need to be a *word.*
As someone who went from c++ to c# a few years ago I found that C# in a nutshell was invaluable. You can read it like a book and you can use it as a reference guide both. I read it like a book about 2/3rds and then keep it for reference. I found that since I was already familiar with a language that getting right to the nitty gritty of the C# language was helpful. 
People already answered the question, and I tell you again, you will be fine. When I did the exact same thing few years ago, I had the feeling to transition from a stone keyboard to a quilted leather keyboard. Everything is easier and then you can focus on the right things instead of focusing of the mechanics.
Don’t use reflex for this. Split the string on periods. Confirm it is 4 segments. Confirm each segment is valid for an IP Address. Do whatever you need to do to convert the 3rd and 4th segments into wack format. Voila! No regex!
Or just use Monitor.TryEnter with a timeout
Thanks, check out [part 1](https://michaelscodingspot.com/2019/01/17/c-deadlocks-in-depth-part-1/), I used Monitor.TryEnter as one of the solutions
You can bind the key to the MAC address. Or some personal data. With the help of personal data you can restore access to the key.
You need some DRM, I think. Or a ready-to-use solution like [ArmDot](https://www.armdot.com/). This program can generate and verify keys. You can also create a key generator and link the keys to user data. Usually the key is attached to MAC address of the computer.
imo, Pluralsight is amazing for training (maybe turn on 1.5 video playback). Also, I would recommend just firing up the IDE and building something in C# that you might do or could use at your current job? Maybe ask someone with good C# experience to review and make suggestions? I really like Resharper too... it somewhat 'trains you' (or gives you things to think about) as you're coding.
Cool, I thought maybe you had a library reason or something like that. 
As someone who has transitioned from working in C++ for 4 years and recently transitioned into C# over the past year, I'm going to tell you that the transition will feel absolutely seamless after a couple of months. If you have access to Lynda, Scott Allen's video courses can get you up to speed relatively quick.
Thx. Now I get it
I had a look at this the other day and the issues I found were: The string values cant be double. For example where you add ACBA from 1421, the new list has to contain strings that aren't double, just like they aren't doubled in the original. Adding to a dictionary/list is slow especially if the capacity isn't set beforehand because resizing is required. I was hoping more for some sort of algorithm which would do the conversion without heavy memory allocation, if it is possible. &amp;#x200B; This is partly my fault for not wording the question properly, but thanks for your answer
You've received a lot of book recommendations and other resources to learn from, but I think the best way for you to learn the subtle ins and outs is to just find a small-ish project you made in C++ and convert it to C#, researching along the way. That on top of reading the books will get you where you want to be pretty quickly.
Unless you're wrapping an unmanaged resource, implementing a finalizer is usually an anti-pattern and a sign that something is wrong.
Well there is the monthly who's hiring thread here... In this sub so what what you said isn't entirely correct. 
The string: `123.12.4.223` Remove numbers after last dot: `123.12.4.` Append suffix: `123.12.4.1.1/18` I don't think this is what you want...
Years ago I was dragged kicking and screaming to C# from C++ when my company decided to convert a major application to .NET. I was convinced that the .NET implementation would never be as quick and responsive as the "pure" C++ one. I'm happy to say that I was wrong, and I've become a huge fan of C#. In many ways it made programming fun again. For me making the transition was fairly straightforward (especially since I had already done some Java) - the language syntax is similar to C++, C# generic containers are a lot like C++ STL containers, things came together pretty quickly after going through a couple tutorials. Some features take a little trial and error to get your head around (eg, async/await), but there are a ton of resources online.
I logged in just to upvote
... and function pointers: https://www.infoq.com/news/2019/02/CSharp-Static-Delegate
Cool. Any advice on when it's fine to use only a single lock? Or should I always use two locks?
ORMs use attributes when the column names don't match the property names. Serialization (to/from XML/JSON) use attributes for the same. Attributes mark parameters as ref or out (though c# gives this from you). Attributes are used for validation rules. See DataAnnotations Attributes are used to mark code as only used in debug builds (though not the only way to do this).
The move from RAII was a little jarring. Same for "treat everything as a reference except structs". Beyond that, he should have no issues.
https://stackoverflow.com/questions/607178/how-enumerate-all-classes-with-custom-class-attribute
Whenever I'm using pointers in C# I tend to use actual typed ones (i.e. `byte*`). I always found it a bit ironic that typed pointers require *unsafe* but `IntPtr` doesn't, as it's basically a `void*`, the most dangerous type of pointer ;) (seriously, void pointers in the wild have been known to drag men off in the night to their doom)
Even then, you should be using `SafeHandle`, instead of implementing the finalizer yourself.
 int myIntVar = (int)myDoubleVar; or int myIntVar = (int)Math.Floor(value);
I use Hack at work a good amount. It evolved from PHP &amp; is strongly typed, with a lot of very cool features &amp; seems like a cross between PHP &amp; C#. If this solution could work with Hack... I'd be in heaven.
It’s called Pointer ARITHMETIC. 
You need to change the DataContext of the usercontrol using code behind or any other measurement. IIRC you probably have a UserControl with a Grid as first child, then you have to set the grid1.DataContext to this.DataContext 
It's a lot more than just the four arithmetic operations. They are also proposing the ability to use boolean, comparison, and bit shift operations. Hence the reason I chose the broader term 'math'.
 I highly disagree with having inheritance for this. You're not changing the functionality of the object, correct? You just want defaults so you don't have to specify the same thing over and over again? Inheritance is way over complicating and going to negatively impact your application. I would figure a factory would be a much better approach, then if you actually need to do inheritance on your objects you could extend the functionality farther. &amp;#x200B; If for instance you're working with those blocks: public static class BlockFactory { public static Block CreateStoneBlock(int id) { return new Block { Id = id, Type = BlockType.Stone }; } public static Block CreateAirBlock(int id) { return new Block { Id = id, Type = BlockType.Air }; } } public class Block { public int Id { get; set; } public BlockType Type { get; set; } } public enum BlockType { None, Grass, Stone, Air } Don't abuse inheritance, you'll get to a complex object really fast. What if you want a block that switches between two states?
I respect your decision to use a broader term. Wholly rooted in truth by the definition of arithmetic. However, the term “pointer arithmetic” has applied to bitshifts, boolean operators, comparators etc since the birth of “low level languages, such as C++” (I’m sorry this made me laugh, I mean they could have just used C but I feel like they went out of their way). The article is short and sweet, and details some good extensibility. I’m nitpicking here. 
Thank you! That looks exactly like something that I need. How did I not think of doing something so simple myself? 
Reflection is just an api built into the framework. You don't have to do anything special to use it. For instance you can do typeof(MyType).GetProperties() to get a list of all public properties for a class. You can then call GetCustomAtribute on one of the returned properties to get the attribute.
Why would you ever do this though?
Here is a list I put together for my team just recently: First off: .h files are gone and along with it is the structuring your code and files to make the compiler happy. Next: * Interfaces - https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/interfaces/ * Difference between struct and class -- https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/index * Boxing - https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/boxing-and-unboxing * -- This is less of an issue with generic types now than it used to be. * Collections - https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/collections#BKMK_KindsOfCollections * -- Not listed there is ‘HashSet&lt;&gt;’ * -- Favor using the generic versions of things (avoids boxing issues) * Lambda - https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/statements-expressions-operators/lambda-expressions * Iterators - https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/iterators * Linq (at least to a basic level – don’t need to go crazy here) -- https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/introduction-to-linq-queries * Reflection - https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/reflection * Serialization - https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/serialization/ * Delegates -- https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/delegates/ * Events -- https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/events/ * Extension Methods - https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/extension-methods * Generics and the ‘where’ keyword - https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/generics/ * Uinit Testing via xunit -- https://xunit.github.io/docs/getting-started-desktop * Live Unit testing - https://docs.microsoft.com/en-us/visualstudio/test/live-unit-testing?view=vs-2017 * Abstract classes - https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/abstract-and-sealed-classes-and-class-members * Static classes -- https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/static-classes-and-static-class-members * Properties -- https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/properties * Anonymous types -- https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/anonymous-types * Object and collection initializers -- https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/object-and-collection-initializers * Performance tips -- https://docs.microsoft.com/en-us/dotnet/framework/performance/performance-tips * .NetCore -- https://docs.microsoft.com/en-us/dotnet/core/about * Caller Information - https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/caller-information * Covariance and Contravariance - https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/covariance-contravariance/index * Checked - https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/checked * As - https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/as * Is - https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/is * Params - https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/params * In - https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/in * Out - https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/out * Ref - https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/ref * Readonly - https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/readonly * Nameof - https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/nameof * Advanced: ( good to know, but don't worry about them yet) * Finalizers – https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/destructors * -- These are almost never needed. * IDisposable -- https://docs.microsoft.com/en-us/dotnet/standard/garbage-collection/implementing-dispose * Async - https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/ * Lock - https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/lock-statement * Using - https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/using Things to avoid in C# (unless you have a very good reason): * The ‘partial’ keyword. * The 'goto’ keyword * The ‘sealed’ keyword * The ‘dynamic’ keyword * The ‘unsafe’ keyword * The ‘fixed’ keyword Useful extensions - Install them from the Visual Studio Marketplace (Tools | Extension and Updates) * Intellicode IA - &gt; https://marketplace.visualstudio.com/items?itemName=VisualStudioExptTeam.VSIntelliCode * Visual Studio Spell Checker (VS2017 and later) -&gt; https://ewsoftware.github.io/VSSpellChecker/html/e339cac1-9783-4c2a-919f-88436c78fef8.htm Other tips: Use visual studio -- It is the best C# experience out there.. If you need to run on Linux/mac, just use the 'dotnet publish' to 'build' for those environments. Now that you are using a GUI with very good auto-complete, stop using short variable names. You are never going to type more than the first 3-4 letters of a var name anymore anyway, so why not name them something useful like 'topPointVertex' - and not mess like 'tPtVert' I also I've used Ghost doc in the past to auto-populate comments for functions-- It makes a guess based on the name of the function. The game I used to play was: if ghost doc can't guess what the functions is doing based on the name of the function then I don't fix the documentation -- I fix the function name. https://submain.com/products/ghostdoc.aspx Yoda conditionals are not necessary in C#: int x=5; if(x=5) {blah();} generates a compiler error in C#. Calling other C#/.net DLLS is trivial, so why not put a bunch of the common collections, extensions, and utilities in a shared dll other teams or projects can use? Some disagree with this but I found it useful: In C++ it is good practice to always initialize a var when you create it. int x = 0; if(y==5) { x = 2 } doSomething(x) This way you don't fall through and leave something in-initialized. Generally you want to avoid this in C# + VisualStudio: int x; if(y==5) { x = 2 } doSomething(x) The above will generate a compiler error in C# since it knows there is a path where you might use x without it being initialized. The above case is trivial, but if there are several nested 'if' branches it might just save you some debug where there is some path that should have set the var and didn't. 
Assuming you know what attributes are good for and why you want to use one, the way to use it is “simply” to iterate — either across multiple types, or, say, across all properties of a single type. For example, you might want to find all properties of a model class that are decorated with `[DataMember]`, in order to serialize only those. You’ll do something like: var propertiesToSerialize = typeof(MyModel).GetProperties().Where(pi =&gt; pi.GetCustomAttributes(typeof(DataMemberAttribute), false).Any()); I’m not in front of a computer, so the API may be different, but this is roughly it.
C# in a nutshell is a great book
It really depends what you're trying to do as to how attributes can help you. If you want to find every class that has your attribute on in an assembly, you can use the `Type.GetAssembly()` function, then use the `Assembly.GetTypes()` function and finally the `Type.GetCustomAttribute(Type)` function in a LINQ query to identify the classes to which the attributes are on.
Assume you've defined a `SomeAspectAttribute`. If you've attributed a class, struct, interface or enum, use this: var myClassType = typeof(MyClass); //MyClass uses the attribute IEnumerable&lt;SomeAspectAttribute&gt; attrs = myClassType.GetCustomAttributes&lt;SomeAspectAttribute&gt;(); //do stuff with attrs For type members (methods, properties, fields, etc.), use the `Type` class to get the relevant member: var props = myClassType.GetProperties(); foreach (PropertyInfo prop in props) { var attrs = prop.GetCustomAttributes&lt;SomeAspectAttribute&gt;(); //do stuff with attrs } //use myClassType to retrieve methods, fields, etc. in a similar fashion as properties. The action of doing any of the above is called "using reflection" because you'll be using `System.Reflection` and *reflection* basically means "to turn type or assembly definitions into usable data during runtime" i.e the code is *reflecting* upon itself. The `Assembly` class can provide attributes that are applied to the assembly itself.
Yeah I know what they are what I don't know is how to integrate them into my program. For example, say I have a class Whatever { [DisposeManaged] SomeManagedResource resource; } and I want to do something like foreach(Field f in GetAllWithAttribute(typeof(DisposeManaged))) { f.ContainingClass.AddMethodIfNotExists("Dispose", (self) =&gt; { self.clazz.InvokeMethod(self, "Dispose", false); }; f.ContainingClass.AddMethodIfNotExists("Dispose", (self, disposing) =&gt; { GC.SuppressFinalize(self); // ... }; } But where do I _write_ that loop that it will run before compile-time and generate the code I want?
The problem I find with examples like this is the implementation is far too complex for the problem that is being solved. This entire application could have been done in one controller easily. That's not to take away from the work you've done: it's good (though I'd never, ever abstract into the repository pattern and would instead use Active Record). My only comment would be that a better example would be a 'real life' one (though I don't expect you to spend lots of time on that!).
My advice is the less the better:) More locks mean more chance for deadlocks, so use as few as possible
But where do I _call_ this method from to have it run at compile-time and process my annotations and perform whatever transformations they perform, at compile-time?
I started writing this as a part of program that communicates with Arduino through serial data, the program acts as a debugger for a library, the debugger specific "messages" are already known and handled, other data are displayed as hex in a serial terminal (just two textboxes with a button), and the data to be sent are also introduced as hex values, serial port cannot be opened by two programs at a time, my first solution was to include a plugins system that receives non debugger data, my second idea was to define structs and pack/unpack data directly in the serial terminal which is the purpose of this library 
yeah I have no problem with the reflection API itself, what I want to know is how to call it at compile time
Yeah I know what reflection is and I don't have any questions about what methods to call or whatever, what I want to know is what I have to do to get that code to run at compile-time so that whatever stuff I want to do with the attributes actually gets run
What kind of use case wouldn't let you implement IDisposable? 
Laziness, whatever, disposable isn't the point.
Oh, that a different question entirely. Give me a moment.
Pretend he said "[DynamicallyLoadedPlugin]".
We haven’t made it to learning what that second line would do, but it looks cool haha. Currently I’m working on a project that is supposed to take a users weight in kgs and convert it to pounds and ounces and this alone has me rethinking my life choices 🙂
You keep saying compile time but reflection is for runtime behavior. Maybe I'm misunderstanding what you're asking for but it seems to me like you have a wrong idea of what reflection is used for.
ah, got it. Thanks. [I must have dropped this](https://en.wikipedia.org/wiki/Principle_of_charity)
What do you want to do at compile time? I'm not following.
Attributes in C# are only runtime. However, there are third party solutions like https://www.postsharp.net I think that's what your looking for.
I understand that Reflection, like any ordinary csharp code, is run at runtime. I mean, of course it does! By definition, when it runs is its runtime. But if I have `Project1`, and Project1 uses an attribute called `CapitalizeName`, and I ALSO have another project, `CapitalizeNameProcessor`, which has something like void ProcessAnnotation() { foreach(Field f in GetAllFieldsWithAnnotation(typeof(CapitalizeNameProcessor)) { f.ContainingClass.AddProperty(f.Name.ToUpper(), get: (self) =&gt; f.GetValue(self), set: (self, value) =&gt; f.SetValue(self, value)); } } then that CapitalizeNameProcessor project's runtime is _at_ Project1's _compile_ time.
This is how you can read the attributes at runtime: using System; namespace ConsoleApp7 { class Program { static void Main(string[] args) { var assembly = System.Reflection.Assembly.GetExecutingAssembly(); foreach(var type in assembly.GetTypes()) { var localAttributeArray = type.GetCustomAttributes(typeof(DisposeManagedAttribute), false) ; var localAttribute = localAttributeArray == null || localAttributeArray.Length == 0 ? null : (DisposeManagedAttribute)localAttributeArray[0]; var inheritedAttributeArray = type.GetCustomAttributes(typeof(DisposeManagedAttribute), true) ; var inheritedAttribute= inheritedAttributeArray == null || inheritedAttributeArray.Length == 0 ? null : (DisposeManagedAttribute)inheritedAttributeArray[0]; Console.Write("Type: " + type.FullName); if (localAttribute == null) { Console.Write(" does not have the attribte"); if (inheritedAttribute != null) Console.Write(" but it does inherit it with the tag: " + inheritedAttribute.Tag); } else { Console.Write(" has the attribte with the tag: " + localAttribute.Tag); } Console.WriteLine("."); } } } public class DisposeManagedAttribute : Attribute { public string Tag { get; set; } } [DisposeManaged (Tag = "I am on Bar")] public class Bar { } public class Baz { } public class FooBar : Bar { } [DisposeManaged(Tag = "I am on SuperFooBar")] public class SuperFooBar : Bar { } [DisposeManaged(Tag = "I am on FooBaz")] public class FooBaz : Baz { } } 
This won't happen by magic. You'll have to write some code somewhere that iterates over your types to find where the attribute has been used, then run whatever code you want the attribute to accomplish. There's no automation here. All attributes do is denote metadata. They do not, by themselves, accomplish anything at all. Another angle you may be interested in is something like Fody. For example, you can use https://github.com/vescon/MethodBoundaryAspect.Fody to: 1. define a custom attribute 2. write code that happens on entering or exiting a method 3. have Fody rewrite your destination assembly to automatically insert that code
How can I integrate this project with the "host" project, so that, for example, if I try to build `[DisposeManaged] public class Bar`, it will generate a `Dispose` method inside `Bar` Please don't ask why, it doesn't matter, it's a made-up example.
Are you trying to write something that will generate a capitalized version of all the property names containing this attribute? If so, I think a parser like Roslyn might be more of what you're looking for. I hope someone else figures out how to help because I'm not really following what you're asking for - particularly the "then that CapitalizeNameProcessor project's runtime is at Project1's compile time" part.
True. Turns out he wasn't a recruiter and it was just my heightened senses firing off a false positive :)
good point, never thought of it like that tbh
If you can't tie any code to attributes without using a 3rd party tool, then why does csharp even have attributes? What CAN you use them for that you couldn't just do "normally"? Like if I have `public void Foo([MyAttribute(Tag="superman")] int bar)`, what use is that? I could check if bar.class hasAttribute(typeof(MyAttribute)), but I already know it does, I put it there two lines up.
I know. I know. I know. I'm sorry for losing my mind here, but I'm losing my mind here. I _know_ that attributes are just metadata and I _know_ what the reflection API is and how it works, what I don't know is, when you say &gt; You'll have to write some code somewhere that iterates over your types WHERE do I write that code? How do I USE metadata in a way that "plain old data" in my application would not be equally suited for?
Learn how to use Roslyn. I can't say more because that's a huge topic.
maybe something in the web config uses absolute or relative paths that worked on their machine no shit i was given a job interview code base that had shit liek that. i had to change it to my username instead of "C:/users/bob/dev/project/test/config.xml" to like my windows username
Alright, let's pretend I know Roslyn and have written my AttributeProcessor using Roslyn to do what I want. How can I integrate AttributeProcessor with MyActualProject?
In addition to reinstalling the packages, did you: - delete the obj and bin folders? - delete nuget cache? https://stackoverflow.com/questions/30933277/how-to-clear-nuget-package-cache-using-command-line
This shitshow of a thread? It could have been prevented if you proposed a concrete problem that you were looking for a solution to. You ask about attributes and reflection but clarify you want code generation at compile time - for hypothetical reasons. &amp;#x200B; This feels like a major example of [http://xyproblem.info/](http://xyproblem.info/)
If you knew Roslyn, you would know the answer to that. I don't, so I don't.
&gt;If you can't tie any code to attributes without using a 3rd party tool, then why does csharp even have attributes? What CAN you use them for that you couldn't just do "normally"? You can decorate your regular code with them. That's all. There is no magic here. Instead of: public void Foo([MyAttribute(Tag="superman")] int bar) , you could also just write: public void Foo(int bar) …and then _somewhere very else_ define that you want to apply special meaning to `Foo`. That's the point: thanks to attributes, you can place this metadatum _where it semantically belongs_. Thus, the C# compiler can iterate your entire code for mentions of `[MethodImpl(MethodImplOptions.AggressiveInlining)]` and know to treat them differently. _You_ don't have to create a special, central location where you list all methods that are aggressively inlined; instead, you specify this right where the method is. Serializers can iterate your entire code for mentions of `[Serializable]`, `[DataMember]` and whathaveyou. They don't need to look where you've defined which members are to be serialized; they see it as metadata of the member itself. And so on.
You can use this very good and highly reliable third-party library for creating word document. You can easily manipulate it and do whatever you want. It is easy to integrate. You can easily use it in WPF, WinForm, [Asp.Net](https://Asp.Net), MVC, Xamarin. [Office Word](https://www.officecomponent.com/products/word) for .Net c#. It is paid library but it is easy to integrate and you can easily achieve your task without long coding. Here is the example to convert Html to Word: using System; using System.Collections.Generic; using System.Drawing; using System.Drawing.Imaging; using System.IO; using System.Text; using OfficeComponent.Word; using System.Net; namespace OfficeComponent.Samples { class HTMLtoDOCExample : WordExampleBase #if WEB , IUIExample #endif { #region Inputs public string Value { get; set; } public int Type { get; set; } #endregion public HTMLtoDOCExample() : base(null,null) { } public HTMLtoDOCExample(string commonDataPath, string outputDir) : base(commonDataPath, outputDir) { } public HTMLtoDOCExample(string commonDataPath, string outputDir, string xmlFile) : base(commonDataPath, outputDir, xmlFile) { } public override string Execute() { #if WEB ProcessForm(); #endif string htmlContent; string error; if (Type == 0) { if (string.IsNullOrWhiteSpace(Value)) { ShowError("Please specify the path to an HTML file."); return null; } error = GetFileContent(Value, out htmlContent); if (error != null) { ShowError("File Read Error. " + error); return null; } } else if (Type == 1) { if (string.IsNullOrWhiteSpace(Value)) { ShowError("Please specify the URL to the webpage to convert."); return null; } error = GetWebContent(Value, out htmlContent); if (error != null) { ShowError("Web Page Read Error. " + error); return null; } } else // HTML content { if (string.IsNullOrWhiteSpace(Value)) { ShowError("Please specify the HTML text to convert."); return null; } htmlContent = Value; } // Create a new instance of the WordDocument class. WordDocument document = new WordDocument(); Section section = document.AddSection(); section.AddParagraph(); // Check the HTML content. // You can skip the validation step to improve performance. if (section.Body.IsValidXHTML(htmlContent, XHTMLValidationType.Transitional, out error)) { document.XHTMLValidateOption = XHTMLValidationType.Transitional; section.Body.InsertXHTML(htmlContent); string fileName = Path.Combine(OutputDir, this.GetType().Name + "\_" + Guid.NewGuid().ToString() + GetExtension(SaveAsFormat)); // Save the document. document.Save(fileName, SaveAsFormat); // Close the document. document.Close(); // Ask user whether he/she wants to open the generated file. return fileName; } else { ShowError("XHTML Validation Error. " + error); // Close the document. document.Close(); return null; } } static string GetWebContent(string url, out string content) { try { WebClient client = new WebClient(); content = client.DownloadString(url); return null; } catch (Exception ex) { content = null; return ex.Message; } } /// /// Reads a file. /// /// The file path. /// The output content. /// null if no error; otherwise the error message. static string GetFileContent(string fileName, out string content) { try { StreamReader reader = new StreamReader(fileName); content = reader.ReadToEnd(); return null; } catch (Exception ex) { content = null; return ex.Message; } } public override string ActionTitle { get { return "Convert"; } } #if WEB void ProcessForm() { if (Type == 0) Value = GetPostFile("SourceFile"); } #endif } } 
&gt; Years ago I was dragged kicking and screaming to C# from C++ when my company decided to convert a major application to .NET. I was convinced that the .NET implementation would never be as quick and responsive as the "pure" C++ one. My short experience with Oberon taught me that it was possible to have GC and performance in the same language, so I became a fan of Java, and later .NET, even though I also enjoy using C++. Doing Java and .NET since 2006, having replaced a couple of C++ applications by managed ones, able to handle similar or even higher workloads. It seems there are these die hards that not matter what, will only believe something is possible after trying it out. :) Thanks for sharing your experience.
&gt;If you can't tie any code to attributes without using a 3rd party tool, then why does csharp even have attributes? What CAN you use them for that you couldn't just do "normally"? You can define _intent_.
&gt;This feels like a major example of http://xyproblem.info/ It appears that way. OP seems stuck making assumptions about attributes ("surely you can supply them with code; otherwise, they wouldn't be useful!") without even once mentioning the original problem they are trying to solve.
This 3rd party tool wouldn't exist if attributes weren't a part of C#. They are a tool, just like other keywords. You use them to CREATE a solution. If you just want to use ready-to-go AOP plugin, you can use Postsharp, which builds upon those attributes. Just like Json.NET builds upon class fields and properties (and also attributes to define .json key names).
I will try both of those, thank you! &amp;#x200B;
Haha, I'm glad you did too!
&gt;but when I'm trying to access the non-Async version from a separate project Are the non-Async versions public? It's going to be nearly impossible to understand what's going on here if you don't provide the code.
I mean no offense by this but I don't think you understand the intent of reflection like you keep saying you do. Reflection isn't used for generated code at compile time. That's the realm of a parser/compiler like Roslyn. Reflection is used for a class to do something like this: public IEnumerable&lt;string&gt; GetPropertiesWithTheAttribute(Object o) { var properties = o.GetType().GetProperties(BindingFlags.Public | BindingFlags.Instance); var propertiesICareAbout = properties .Where(x =&gt; x.GetCustomAttribute&lt;MySpecialAttribute&gt;() == null) .Select(x =&gt; x.Name).ToList(); return propertiesICareAbout; // Presumably someone will be using Reflection to also call properties in a special way at runtime. // An example of this would be marking the properties that you want serialized in a certain way. } Note this method works against Object so it has no idea about the structure of what is being passed into it. That's why it needs to use Reflection to examine the runtime structure. Attributes give this method the ability to find certain properties on the object without this class having to know anything about what he's dealing with.
Is this sort of like a ValueTuple?
1) Probably need to format the code 2) Looks more like C++ and not C#, this is a C# forum
You'll proably just need a reference. https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/index 
I would say like a struct, because in the beginning I used ExplicitLayout but it wasn't compatible with arrays so I took it off, anyway the difference is that you don't have to know the number of variables and their types and not limited to 8 properties, Valuetypes properties lose their names when compiled which makes it harder to use with reflection
Removed: Self promotion spam. Please review and follow the [guidelines for self-promotion on reddit.](https://www.reddit.com/wiki/selfpromotion)
Removed: Rule 3, Rule 4.
If you want things to read and process your custom attributes, you'll have to write some console app or powershell script that reads and procces those attributes. Then, you'll have to execute it with a custom MSBuild target. Explaining how to do that is kinda difficult. What are you using these attributes for, exactly?
It is just a native platform size int, (it is literally called \`native int\` in IL) - it just happens to be used a lot for storing pointers
Now that I think about it, you might be attempting some aspect-oriented programming in which case you should have a look at [this](https://msdn.microsoft.com/en-us/magazine/dn574804.aspx). It mentions a few AOP techniques, but since you want to pre-process the code before compilation is finalized (I am assuming?) then you'll need to look into **aspect-oriented pre-processing C#** or something along those lines.
Besides for the few attributes that the Roslyn compiler recognizes specifically (like the `ConditionalAttribute`), *all* attributes won't do a damn thing without some tool that uses the attributes in some way. Hell, if you use a different compiler, it isn't guaranteed that the "built-in" attributes are used so, basically, *all* attributes don't do a damn thing unless something is executed that knows to look for those attributes.
&gt; call it at compile time That's not a thing.
Thank you for this question, OP! I, too, am in a similar situation! I just accepted a job that is all C#, but I have an extensive C++ background! This is just the thread I needed! 
C# in a Nutshell is a great overview and reference for experienced developers
&gt; How do I run that application at compile time so that it processes my classes? could you describe the problem that you want to solve with this mechanism?
I ended up making some changes and don't have to worry about this anymore. Pretty much I extended the ObservableCollection that is used to store classes that implement INotifyProperty. Any time an item is added into the collection it will subscribe to it's event, or if it's removed it will unsubscribe. This in turn raises an event that the collection has changed. So if any of the properties is changed in Charge it will raise an event which my ObservableCollection is subscribed to, which than raises it's own event for which Shipment is subscribe to, and finally Shipment raise the PropertyChanged event to notify DataGrid.
I wasn't expecting this question to be so contentious. It seemed unavoidable to me: attributes have no value until they're actually processed. Something has to process them. By far the most natural time to process them is as late as possible before the thing they're attached to gets compiled. I'm still not sure why that conclusion was so contentious. When would ever be a better time? And if there is no better time, why isn't there an idiomatic and obvious way to implement it? So I came in with the assumption that there was.
The problem is "why are attributes useful?", so not really.
My guess from reading the above thread, is that you know about ‘aspect oriented programming’ but don’t know how that is implemented/used differently in different languages/tools. I remember the same confusion while discussing with an external consultant visiting our company once. He only knew AOP through external tools either ‘messing’ with your code at compile time, or external tools modifying the program at runtime. Based on this, he argued that AOP is dangerous, messy, and bad. Me, on the other hand, only knew AOP in the form of source code level attributes defining runtime behavior based on written code, and based on this, I found AOP to be a great help in both making the code easy to read and maintain. &gt;where do I write this loop You ask. The answer, of cause, is ‘it depends’. In one of your imagined examples, you create an attribute for disposal. To make this ‘workable’ in .net, you will typically have some kind of ‘instance manager’ that is responsible for creating and disposing objects. When disposing an object, it could inspect the properties of the object to see if there are other references objects that should be disposed of. This example is a little odd, though, because you would rather implement IDisposable and let the class manage its own resources... But in the case of dependency injection, this kind of attributes become useful. The IOC framework will of cause not know about all the classes it might one day need to instantiate, but when it is asked to create an instance, it can inspect the class and look for attributes specifying which properties that should have cakes injected. Serialization the same. So... It’s not that common to create attributes and use them yourself in your own code. It’s more common that library/framework providers gives you attributes that you can use. But they can be useful in your own code as well. E.g. in the asp.net pipeline, you can intercept all responses. There you can take a peak at the returned object, and based on attributes, you could log it’s content, or manipulate the response, or on an incoming request, you could again modify, or manipulate, or log or whatever. It’s quite useful. But first you need a problem. Then you can find a solution. And in some cases that might be attributes. 
Sorry if my comment came off as brash. Idiomatically, attributes are consumed at runtime by another part of your application. If you have a concrete example of what you want to accomplish, I'd be more than happy to try to help.
static delegates almost certainly will not be introduced, in favour of \[actual func ptrs\]([https://github.com/dotnet/csharplang/blob/master/proposals/function-pointers.md](https://github.com/dotnet/csharplang/blob/master/proposals/function-pointers.md))
It could, look: [https://github.com/peachpiecompiler/peachpie/issues/180](https://github.com/peachpiecompiler/peachpie/issues/180). Seems like its just matter of extending the parser to understand Hack syntax
And then there is [System.Runtime.CompilerServices.Unsafe (blog post)](https://ndportmann.com/system-runtime-compilerservices-unsafe/) to perform arithmetics on ref locals...
Yes, that was the second of the proposals discussed in the article. The third proposal mentioned in the same is called "Compiler Intrinsics". https://github.com/dotnet/csharplang/blob/master/proposals/intrinsics.md
Ever written a unit test? So you use an attribute, e.g. ``` [Test] public void SomeTest() { // test some things } ``` where `[Test]` is the attribute. You code the test like this, and when you run the test suite, all the tests get run. So the attribute is placed on that method and this is built in as metadata, when the code is compiled, but the actual test discovery (i.e. look at the code, find all classes with methods that have this attribute) happens at _runtime_. That's basically what a test harness does. 
It's just a way to comment code, using code, that other code can react to. It doesn't *do* anything by itself; others, or you, have to do something with the information from the attribute. Some exist out of the box, most custom stuff you gotta do yourself. &amp;#x200B; I've gotten a lot of use from the simplest of them all: `System.ComponentModel.DescriptionAttribute` All it takes is a string. How to use it? Well, consider an enum - they can't have spaces. But I want to insert a proper, human-readable text in my document, using the enum value. How? Extracting the description attribute value from the enum field, if it has one. Otherwise, just directly use the enum value text.
You’re still going about this all wrong. The use of attributes depends on what you need to do with them. You still aren’t thinking of a specific issue. 
Attributes are used to attach additional metadata to various elements. This metadata can then be used by libraries to adjust their behavior at runtime.
Yep, but it's almost certain that func pointers will be chosen over both
You can't rely on finalizers. They may never get called at all. On desktop there are cases where they won't get called, and on coreclr they will never get called on shutdown. So you will at some point leak unmanaged resources if you rely on finalizers.
If in order is fine you could do something along the lines of y[x%10].add(X[x]) where x is incrementing from 0 to amount of total X
Atttributes are largely a runtime concept but you keep asking for compile time stuff. You can write compiler analyzers for that, sure, but it’s not very common to use attributes for that. 
Exactly. Something sees the "[Test]" attribute and reacts to it. Maybe this isn't always part of the build process, but it's not unheard of for it to be. But what process is it that sees that attribute? How would someone define their own testing framework? Everything that uses attributes has something that reads those attributes. So where do those readers get defined?
What is it common to use attributes for?
I think he means Fody https://github.com/Fody/Fody 
There was some at Salesforce (formerly ExactTarget here) when I worked there many years back. I assume it is still around. 
Do you mean Fody? https://github.com/Fody/Fody If not, i am clueless. 
Attributes have nothing to do with compilation. Microsoft have written to react to certain attributes at compilation time, but Attributes themselves are not specifically about preprocessing.
We use it for things like a plugin system to start some services in our monolith server application at work. So when the server starts, we find and instantiate all classes with some attribute. (We actually do this via an IOC system, which is also attribute driven).
&gt; Attributes have nothing to do with compilation. Maybe they don't HAVE to be, but how can you do anything useful with them, unless it's before runtime?
If you need something to run at compile-time, I would recommend checking out T4 templates or using Python scripts to generate code as part of your build process.
As far as I know they're useful *at* runtime. Compile-time is the exception. They've written basically an entire framework around attributes in the `System.ComponentModel` namespace. Components can be discovered at runtime based on their attributes. &amp;#x200B; Converters can be declared for a type using an attribute so that instantiation of objects can be done through string values. This is what WPF XAML is built on. The designer windows in Visual Studio WPF/Forms with properties on the side? Those categories and placements are decided by attributes. You can create classes that have their properties placed similarly when selected, by giving them attributes. That's an example of what comes out of the box. 1. Create a WPF project 2. Create a UserControl 3. Go to the code-behind 4. Add a property 5. Add the attribute `[Description("This is a test property"),Category("Layout")]` above the property 6. Build 7. Go to the design view, open the Toolbox, drag your usercontrol (it's at the top) to the Window 8. Look at the Properties view and see your property appearing in the Layout category when the control is selected.
LINQ and bad variable names 'cause why not. ``` var len = 19; var destLen = 10; var x = (int)Math.Ceiling((decimal)len / destLen); var l = Enumerable.Range(0,len); var n = l.Select((i, v) =&gt; l.Skip(i * x).Take(x)).Where(o =&gt; o.Any()); foreach(var i in n) { Console.WriteLine(i); } ```
thanks a lot, i will try that later :)
As far as I know they're useful *at* runtime. Compile-time is the exception. They've written basically an entire framework around attributes in the `System.ComponentModel` namespace. Components can be discovered at runtime based on their attributes. &amp;#x200B; `TypeConverter`s can be declared for a type using an attribute so that instantiation of objects can be done through string values. This is what WPF XAML is built on. The designer windows in Visual Studio WPF/Forms with properties on the side? Those categories and placements are decided by attributes. You can create classes that have their properties placed similarly when selected, by giving them attributes. That's an example of what comes out of the box. 1. Create a WPF project 2. Create a UserControl 3. Go to the code-behind 4. Add a property 5. Add the attribute `[Description("This is a test property"),Category("Layout")]` above the property 6. Build 7. Go to the design view, open the Toolbox, drag your usercontrol (it's at the top) to the Window 8. Look at the Properties view and see your property appearing in the Layout category when the control is selected. This is Microsoft code going through your code, finding the attribute and *adding fields in their own process window at runtime.* They have code that essentially goes: var props = placedObject.GetType().GetProperties(); foreach(var prop in props) { if(prop.IsDefined(typeof(CategoryAttribute))) { string category = ((CategoryAttribute)prop.GetCustomAttribute(typeof(CategoryAttribute))).Category; if(propertyView.ContainsKey(category)) { propertyView.Add(category, prop); } } }
Any good real world example for cqrs? I am trying to learn cqrs but cant find a good example 
One example (but it was bad designed) I have used previously, is a configuration model with properties for each setting. I wanted to define default values for each of these properties. I created an attribute, something like SettingAttribute, and put it above each property with the default value being set there. Then in my "load" function, I would attempt to read from a data source using the property name as the key, and if the property couldn't be found reflection was used to assign the default value. It reduced the amount of code but in this particular instance it caused some constraints on what types could be used easily.
Some of the keywords mentioned are slightly different from C++ to C#. Goto I know is different. You can get far more spaghetti in C++ than C# allows. 
`void**` masqueraded as a `void*`, now we talking.
Oh God...GP is fun. eConnect will let you do web service calls or use a collection of stored procedures. I went for the stored procedures because the web service calls didn't give me enough functionality. The field mappings are a fucking nightmare, if I didn't have a GP consultant I was working with there is no way I would have figured out some of the logic behind the integrations I had to write. The error messages and error handling are pretty terrible. &amp;#x200B; Connect to the GP database and the stored procedures for eConnect should be there...or you might have to install them first. Best of luck!
I've been playing around with microcontrollers...learning C++ and trying to turn a STM32 into a synth
&gt;That's pretty busy.. think one wouldn't have the time for Reddit then. To put it in CS terms: there may be free time but it's highly fragmented, and learning a language requires a pretty significant chunk of contiguous time.
Thanks for comment. I agree that implementing CQRS and DDD for such simple domain is over-engineering and 'real life' scenario will be better. Maybe this will evolve to something closer to 'real', but now I wanted to show some people how to start, because I have seen a lot of questions about these topics recently.
Check the book for the class that assigned you this homework.
Many an innocent has been lured to their death in a dark alley, seduced by the void pointer. After they take your life they can turn into bats (or anything else) and fly away.
Do you live in the bay area or something for that job? It sounds interesting for me tbh
&gt; Many an innocent has been lured to their death in a dark alley, seduced by the void pointer The void pointers, also known as 'sirens' in many languages, have historically been known to lure men out to the depths of the sea. They tempt seafarers to come near with songs and promises of more performance (*hisss, hisss, cast me to `this`...*) only for those poor lost souls to realise only too late that the pointers have them, and their inevitable condemntation to *the void* is sealed in blood.
A GC in C# is a major difference but it's probably something you'd only have to get used going from C# to C++, not the other way around. The only thing you'll have to remember in C# is that destructors (called finalisers in C#) are not called at the end of scope but only when the objects are collected, so don't do things like make dummy objects for locking/unlocking. But C# has an IDisposable interface and "using" syntax which does the same thing. One significant difference in C# is that almost everything is a reference type. Sure you can have structs which are treated as a value type, but they have a variety of limitations, such as not being able to be inherited from, and requiring a default constructor even if it doesn't make sense, which limit their uses. Related to this, equality is a huge pain in C#. You have to override about half a dozen methods to get all equality operators and a number of equality methods to behave consistently and sensibly, and if you muck one up you get silent runtime errors which you spend hours digging into debugging til you find your HashSet isn't working because it's using the default reference comparison. I've tried to wrap these into a class to avoid all the boilerplate, but that leads me onto my next point, that only works when my class does not already inherit from something, as you can't have multiple inheritance in C#. You can however inherit from multiple interfaces, but these can't have implementations, which doesn't help for my equality class. But on the plus side, inheriting from multiple interfaces does not bloat your object, unlike in C++, where every abstract base class with pure virtual functions (i.e. and interface), bloats your class by a pointer. C# has a different method of dispatch which avoids this bloating. Finally the type system in C# just isn't as expressive. There's just some things you can't express. For example, there's an interface IEquatable&lt;T&gt;, which if implemented for T should mean T has sensible equality methods. I should then be able to write the following: `class List&lt;T&gt; : (IEquatable&lt;List&lt;T&gt;&gt; if T : IEquatable&lt;T&gt;)` Except I can't. I could do this: `class List&lt;T&gt;` `class EquatableList&lt;T&gt; : List&lt;T&gt; where IEquatable&lt;T&gt;` `class ComparableList&lt;T&gt; : EquatableList&lt;T&gt; where IComparable&lt;T&gt;` But this becomes a huge pain quickly. C++ Templates with SFINAE (and better still, concepts) allow you to express these basic ideas, however C# says no and you're stuck with throwing exceptions at runtime. C++ does give you more ways to shoot yourself in the foot (I hadn't coded C++ in a while and was quite confused by a bug until I realised I was catching an exception by value) but it is a better language overall. I found C++ allows me to express real world concepts better than C#, which jams you into this single inheritance, reference type only box with inflexible generics which just doesn't gel with many real world concepts nor the algorithms required to implement them. Perhaps one thing going to C# is the .NET infrastructure and tooling. You'll have no trouble picking up C# because it's a relatively simple language, by forcing you into one paradigm there's not as much to know. But you're taking a backwards step and you'll get frustrated by problems that C# just seems to want to fight you on. With some experience you'll make some peace with it but for me it's more like an armistice rather than a strong friendship. 
As the bowl of petunia's said, "oh no, not again."
Well, detecting the next color based on the current color sounds bad. That means that you could never have a drop down menu to choose a color. Maybe you can have some lookup table that has a theme name , then returns an object with different colors in it? This way you could have foreground colors, background colors, etc, while having a single method that accepts that theme object and sets the color whenever it needs to.
The abca list is a holding list to let you generate the final string list. The final string list doesn't contain duplicate values (see newStrings in my example) As for adding to the list/dictionary, it's really pretty fast. If you really want to optimise for speed you could use a fixed length array and then build your own dictionary implementation that uses an array instead of List under the hood. But yeah that'd be heavy on memory. You could also eek out some slight performance optimisations in a few ways by taking advantage of specific knowledge you have about this system (if you know blanks come in threes then you can bump your iterator up three instead of one when you encounter a blank... the abca table could store references to strings instead of string values which may require less memory if that list is likely to contain lots of duplicates). But yeah I personally can't think of any other way to handle this aside from manipulating data structures somehow. If you do think of anything better though let me know! The only other thing I can suggest is reviewing the code that leads to the initial lists being created. Might be better to address this earlier in the chain. Good luck!
LINQ, LINQ, and more LINQ. Learn it. It makes life EZPZ.
I recently explored exposing C++ methods to C# and was frustrated to discover this truth about `IntPtr`. ``` ADAPTERS_API int ProcessInput(HANDLE wParam, HANDLE lParam, PUSHORT button, int *x, int *y) ``` ``` public static extern int ProcessInput(IntPtr wParam, IntPtr lParam, out ushort button, out int x, out int y); ``` Just ... ugh.
By Microsoft in this case. They made the MSBuild testing framework.
There is no standard way to extend C#’s compilation phase. You have to either write a compiler or extend a compiler. Some people are mentioning Roslyn but I’ve actually found attributes useful for writing little compilers either emitting IL or compiling Expressions. Using attributes for a mini compiler allows me to make the definition of primitives implemented as methods much more data driven rather than having a table defined else where that binds function names to method implementations. There my compiler would use reflection at its runtime, but its results could of course be saved to a DLL. 
one of many things that make the C such a dangerous place
half the company is remote, i am in austin texas
It really reminds me of the way that lambdas are handled in C++ now, where you get very explicit control over closures - you can choose to not capture any local values, capture specific values OR all local values by reference or value, or define new variables that are based upon local values that are captured in the closure.
I'm not familiar with IntPtr in the CLI, but in C/C++ IntPtr (uintptr\_t) is generally a safe data type guaranteed to be able to represent any memory address on the system. Sounds like CLI totally switches that around?
/r/DoMyHomework/
You might find some of these useful https://lostechies.com/gabrielschenker/2015/04/25/cqrs-workshop-retrospective/ https://msdn.microsoft.com/en-us/magazine/mt147237.aspx https://github.com/gregoryyoung/m-r https://codeopinion.com/thin-controllers-cqrs-mediatr/
(a) - yep, you're good (b) - not sure, depends on what code you were given to start with (c) - completely missing from your solution (d) - minimum value requirement is met &amp;#x200B; Do Dirt and Clay need to be inherited? The assignment doesn't say so. What you've written is valid; you can define new properties on a derived class exactly as you've done here. &amp;#x200B;
(b) inheriting sand class in dirt class (given right in the beginning) (c) called sample name "dirt" &amp;#x200B; and okay cool thanks
I think what C is asking for, is a string variable, which stores the sample name of the dirt, where once it has value, it cannot be written to. 
ahhhh I see now. So for it to be not written to, would I have to make a static property?
Static properties can be changed. Bit of a misnomer, then, eh? :) "static" means that the property is tied to the class itself, not to instances of that classes. I don't believe a static property is of use to you here. I believe what the assignment is asking you to do is create a property that can be set once, but only once on any instance of the class. 
It needs to be initialized, i would suggest having a private variable name, set as null by default and a public variable Name. In the Setter for Name, check if name is null, if it is null, set name to the variable, else disregard or throw an exception. 
The state of .NET CMS systems is weird right now. I was a Sitecore dev for 3 years and didn't enjoy it until I switched to Kentico - I didn't realize how much I had taken Sitecore for granted. I feel like Sitecore isn't really a CMS, it's an overpriced framework for building a CMS system. You can do cool things with it, but it requires a lot of time and money and venturing forward without documentation. &amp;#x200B; I was shocked how small the Kentico community is, I was hoping there would be a user group in the DC area but no such luck. It's a good system for 80% of basic use cases, but when you have complex requirements you basically end up having to re-implement portions of the underlying Kentico libraries, with absolutely no documentation whatsoever. &amp;#x200B; Now headless CMS systems seem to be the rage. I'm all for that because I feel a lot more comfortable building my front-end in React, but most of the headless CMS systems I have been researching have 0 documentation whatsoever. Going to check out this new guy though for sure!
I enjoy using FluentAssertions, which basically makes the underlying test framework irrelevant. I like the more expressive assertions it provides.
I ended up using [Akka.NET](https://Akka.NET) last time I needed a socket interface. It was a bit of overkill, but it was an enjoyable learning experience.
Some combo of restarting VS, clearing the MEF component cache, rebuilding the solution, or deleting the .suo file seems to fix this for me.
yes, definitely a misnomer! and okay I see now.
Is this what you mean? By variable, do you mean value or name itself? Because the value coming in would make the property mutable, right? private string name = null; private double clay; public string Name{ get{ return name; } set{ if(name == null) name = value; }} &amp;#x200B;
You want to make it a property with a getter backed by a readonly field
C++ has plenty of Linq like libraries if anything they're better because you can avoid forcing everything into \`IEnumerable\`. &amp;#x200B; For example standard Linq is useless if you \`Select()\` over a tree because you lose all the tree structure.
C++ has both Linq style libraries and lambdas. These wouldn't be anything new, except for maybe the query syntax (which although I've played with never found the strong need to use). 
Is a HANDLE always a memory address? Or could it be something abstract like an array index?
Normally yes except the task forbid you from defining a constructor. So you still need a setter to initialize the value once.
&gt; t's fine to use only a single lock? Or should I always use two locks? Respectfully, I'd avoid timeouts with threading in general. Keep things atomic, clean and by the book. If you want a timeout condition, make it a first class concept that triggers as a result of some other monitoring process that then truly interacts with a condition variable. Better yet, don't do any of this type of stuff, and use a message queue and state machines.
Persistence and scaling. If your app crashes you loose everything instead of any incremental progress. That being said, how big are these files? If they are moderately sized, in memory processing is a viable option. If you have multiple processes, with large sizes, your ability to scale may be limited.
Yea, this is what I meant.
Would you say you're seeing... sharper? ;)
The file sizes are relatively small less than 10 kb per file
wouldn't setting the name to the coming in value still make name mutable after initialization?
You should be fine. Just make sure you have enough system memory or you may swap to disk and be right back where you started :)
`lParam` is a HRAWINPUT ([RAWINPUT](https://docs.microsoft.com/en-us/windows/desktop/api/winuser/ns-winuser-tagrawinput) handler). `wParam` is a [WM_INPUT message](https://docs.microsoft.com/en-us/windows/desktop/inputdev/wm-input).
Why do it that way instead of just having e.g. `class MyUserControl: UserControl { string Description, Layout }`?
How do you hook your mini compiler into the build process?
Wait? So we're shoving that complex tagRAWINPUT struct into an IntPtr?
Has this been adequately solved? I'm not sure the solutions I've seen match exactly what you're looking for, if I'm understanding correctly. Have you tried the following: public interface IEnqueuer&lt;in T&gt; where T : GraphMessage { void Enqueue(T message); } public interface IOutputPort&lt;T&gt; where T : GraphMessage { void Connect&lt;U&gt;(U port) where U : IEnqueuer&lt;T&gt;; }
How large is "one super large pdf" - 100+MB? 1GB? 100+GB?
Yep. I didn't need to work with the data in C#, so making a type for it wasn't important to my end goal.
Benchmark it to see what the app spends it's time doing. If the bottleneck is the db, for example, then it's pointless to possibly add more bugs for minimal or no savings. If the disk access is significant...then optimize. Also, how often is this thing called? If once a day? Every 5 hours?
No, because you only care that the property doesn't change, not the field. So if name is null, and Name is set, name is assigned the value of value, but if name is not null, name is assigned the value of itself, therefore the property Name is never changed
 a.dll: b.cs my-compiler b.cs -o a.dll
The disk access is the bottleneck. Retrieving the data from the db takes max 10 seconds. Then saving the files can take up to 5 mins. The app is used heavily by about 30 concurrent users daily and the reports are run very frequently throughout the day. On any given day over 100 reports might run
Yea we’re currently in the process of upgrading the server memory. 
There's a convenience `Batch` method available from [MoreLINQ](https://github.com/morelinq/MoreLINQ) which will do the heavy lifting for us assuming you've calculated `x` as above: var n = l.Batch(x); Then you can use the `Zip` method to iterate/interleave your two types to do whatever you need to do in terms of assigning them: IEnumerable&lt;ClassY&gt; destinations = GetMyClassYs(); //this can be replaced with `List&lt;ClassY&gt;` or whatever concrete types you have IEnumerable&lt;ClassX&gt; thingsToDistribute = GetMyClassXs(); var destinationSize = destinations.Count(); //can replace with `.Count;` or `.Length;` depending on your collection types var numberOfThings = thingsToDistribute.Count(); var batchSize = (int)Math.Ceiling((decimal)numberOfThings / destinationSize); var batches = destinations.Batch(batchSize); var pairs = destinations.Zip(batches, (classY, classX) =&gt; (classY, classX)); //if you have C# 7.1 var pairs = destinations.Zip(batches, (classY, classX) =&gt; new {classY, classX}); //if you are stuck on something earlier than C# 7.1 foreach (var i in pairs) { Console.WriteLine("Batch: " + i.classY + " =&gt; " + String.Join(", ", i.classX)); } 
oh i reread this! finally got it actually LOL
You could try something like: foreach (Form form in Application.OpenForms) { form.BackColor = Color.DarkGray; } That will do every open form however many you've got.
Just for the record, dynamic and var are _very_ different. Don’t get those mixed up!
I would recommend resharper. It tends to choke on bigger projects but on small ones it works great and helps learning some language features. For example if you know SQL but are not familiar with functional syntax then you can write SQL style Linq, convert it to functional style and see how it is done. 
There's always SafeHandle if you want more handle safety than IntPtr provides
No, it's exactly the same thing. It doesn't require 'unsafe' because you can't dereference it (without doing something that is unsafe). You're meant to use it as an opaque handle, which is why C# doesn't expose any of the operators currently. The reason for the proposal to add them (or to add a new native integer type) is just so we can have a native sized integer for performance without the contortions required to do so with IntPtr today.
Why do so many people use this and _ such redundant redundancy
Because code is more readable. It is easier to recognize whether it is private class field or method argument.
You can do very simple implementations of cqrs. Pub sub is a for loop, everything is synchronous, read models are implied by just accessing events directly, events are stored on the file system.
That's what the underscore is for. You don't need this as well for that. You can just use one or the other.
Sounds like you probably wanna modify the program to asynchronously write out temporary files if you need the ability to start back up half way or save memory, then continue on a separate thread with the processing. Waiting on the I/O, especially if it’s writing out that much, is just poor from a performance perspective. I’d start with keeping it all in memory then writing out only once to see what your gains are. From there, you can dynamically determine how much to keep in memory based on currently availability memory. You can query that in code or take in a startup parameter on the max you should use. If keeping it in memory drops the time to process to seconds, then who cares about persistence. As for worrying about swap, it may not matter. Windows backs all things against swap so it can quickly drop other process pages and pull them back in, if necessary. The hit may not matter depending on your hardware setup. You’ll want to look at your working set size to determine actual usage. The commit size won’t be as useful unless you’re actively using all memory.
Oh this is brilliant. I’m gonna try to keep them all in memory at first to test because we just added more memory to the server. But if it’s using too much memory then I’ll combine it at intervals of maybe 100 or so files then save those asynchronously as one file then I’ll just end up with a smaller group of semi large files which i would then combine again at the end. This beats saving and combining thousands of individual files at the end. Thanks for the idea! 
No problem. Part of my job is performance optimization for big video games. This is the kind of shit i do every day. Sometimes. :)
I’ve never actually done any kind of optimization like this before and it is a heavily used system already in production so I just wanted to be sure I’m not adding to the performance problems
What does `SafeHandle` get you?
It’s fun, to me at least. The most important thing is to always profile rather than make assumptions. You can then go from there. Good luck!
Thanks again!
For a moment I thought it was a Dota2 post. Almost weekend...
&gt; t. Maybe this isn't always part of the build process, but it's not unheard of for it to be. But what process is it that sees that attribute? Code at _runtime_. &gt; How would someone define their own testing framework? Define an attribute, write code that reads it at runtime. That's exactly how `NUnit`, `XUnit` etc got started.
Oh, i'm sorry, somehow i did not see that you were using Lists instead of ObservableCollections. As soon as i see WPF and Databinding my brain reads all Lists as ObservableCollection :/
No, no, fields as in the text box appearing in the PROPERTIES window in Visual Studio, not fields on the class. Do the points I said and see for yourself, mate.
Holy shit how fucking dense are you? "Fields in their own process window" - does a process window mean class to you? No, fields as in the text box with a label appearing in the PROPERTIES window in Visual Studio, not fields on the class. Do the points I said and see for yourself.
&gt; it will generate a Dispose method inside Bar "Codeweaving" in c# like this is a very advanced topic. Learn to do simple things with attributes, e.g. using them the way that they were intended, first.
You don't understand what reflection is. That's the problem here.
The answer for the beginner should be "no". Once they understand how attributes and metadata work when used as intended, then they can progress to bending the rules, i.e. to "no, but". Raising these AOP frameworks in response to this question is IMHO deeply confusing and counterproductive to the discussion of how C# programs generally work. Code written based on the learnings therein is going to be terrible.
In your sample code you're using the generic parameter as point, point is not a long or uint so it resolves to the method that returns 0. 
But I do have the overload for point! Did you look at the linked code? I just used a ulong here for illustration
num&lt;T&gt;(T val) is not the same as num(point val) or num(int val) In the generic version, if you call it as num&lt;int&gt;(3) or num&lt;point&gt;(myPoint) or num&lt;List&lt;string&gt;&gt;(myList) it will always use the generic version. It doesn't matter if there's a specific override, you've said use the generic version and it will. What might be confusing is that you can leave out the generic type specifier if it can figure it out itself. So in a class like your Wrapper&lt;T&gt; you don't need to call num&lt;T&gt;(default(T)) you can leave out the &lt;T&gt; bit. It works that out for you. It knows that calling default(T) is using the typeof T, so it therefore knows that it must use the generic version as T could be any type. 
But in the wrapper, I don't call num&lt;T&gt;(default(T)), I just call num(default(T)) and the problem remains... 
It’s decided by the compiler. When you’re directly calling the first class with Int32, the compiler manages to find the method that matches the type, but when you are using wrapper class it can’t because in this case the compiler is looking at the wrapper.
Seems like a really pointless thing to pick up on tbh. It's really not worth getting wound up about. 
I said this: &gt; So in a class like your Wrapper&lt;T&gt; you don't need to call num**&lt;T&gt;**(default(T)) you can leave out the &lt;T&gt; bit. It works that out for you. It knows that calling default(T) is using the typeof T, so it therefore knows that it must use the generic version as T could be any type. It doesn't pick the method at runtime, it does it at compile time. If you have a generic method you don't have to specify the type if it can work it out from the parameter. BUT, your wrapper has a generic type T. Therefore the only overload it can resolve to is the generic num&lt;T&gt; version. It will not at runtime look to see if there is another version of the method that matches T. At compile time it knows that T is not specified so it will always use it. 
&gt; I just call `num(default(T))` Ok. Well lets see what matches `num(default(T))` **at compile time**. public static int num&lt;T&gt;( T val ) { return 0; } //option 1 public static int num( point val) {return 4;} //option 2 Option 1 is candidate because `default(T)` is a `T`. Option 2 is not a candidate because `default(T)` is not a `point`. Could `default(T)` be a point at runtime? Sure. But at compile time we don't know anything about `T`.
But the compiler should know that inside call(), T is a point, so how can it not resolve it? I made another test, using another wrapper class: public class wrapper2 { public void call&lt;T&gt;( T val) { Console.WriteLine(BytesConverter.num(val)); } } This still returns 0 when val is passed in as "new point()"
That's great advice for greenfield code but you may find yourself working on a legacy app with naive synchronization such as locks everywhere. Introducing timeouts does make it easier to diagnose
What you are trying to do is possible, but you need to tell the compiler that you want to determine the correct overload at runtime. public void call() { dynamic value = default(T); //Force us into a dynamic context Console.WriteLine(BytesConverter.num(value)); //Since we're dynamic, determine overload at runtime } 
Ugh, so using overloads to "specialize" generics is a terrible idea apparently. So much for ideas from StackOverflow...
Thanks, ok got it. There's no way of specializing generics safely, so I should forget about it it seems. 
How would the compiler know that? (spoiler it doesn't) The call to `BytesConverter.num` inside the call method is exactly equivalent to: ``` public void call&lt;T&gt;( T val) { Console.WriteLine(BytesConverter.num&lt;T&gt;(val)); } ``` So it will always use the generic version. I think you are confused because visually the `&lt;t&gt;` parameter is omitted, but that is just a syntactic sugar to please the developer (by faster to type). if you don;t believe me, look at the generated IL code. Or if you can't read IL code fluently, just decompile it back to c# code.
&gt;But the compiler should know that inside call(), T is a point, so how can it not resolve it? Oh no, it has no idea. 1. When the compiler runs, you get one copy of `call` that's shared by all T's. 2. When the JIT compiler creates the machine code during runtime, you still get only one copy of `call` that is shared by all T's. \* Therefore, the version of `call` it makes can't be specific to `T = point`. \*: This is a slight lie, but for now pretend it's true. 
&gt; How would the compiler know that? (spoiler it doesn't) By knowing every possible T that is used at compile time. Which is how C++ works and why templates are more flexible than generics in this regard. Of course they also have the limitation that you MUST know all possible values of T at compile time so they don't work so well in common libraries.
&gt; There's no way of specializing generics safely Well I wouldn't call it "safe", but do see my example that uses `dynamic`.
Lol :) Design wise you need to think that if a method can take a T, the method can only do things that all T's can do (.ToString for example). you can use generic constraints, on methods as well, so you could make T more speciailised, e.g. force it to implement IDisposable. But it's not a way to sort T's into Kittens and Puppies, only things that wee on the floor (IBabyAnimal).
I'm a previous Python/Go developer who needed to write some C# for a recent project. Perhaps you've seen it already, but otherwise, I found the [C# Tour](https://docs.microsoft.com/en-us/dotnet/csharp/tour-of-csharp/) to be a just fantastic resource. I read it through carefully in 1-2 hours, and felt ready to start coding right after that. That is probably one of the absolute best and most time-efficient teaching resources for programming I've came across.
&gt; you are confused because visually the &lt;t&gt; parameter is omitted, but that is just a syntactic sugar to please the developer That's enlightening, thanks.
Thanks a lot, that's very useful info, I come from a C++ background and therefore I still try to understand the differences to generics. 
Aha, so that's the trick! But of course not without gotchas. I've read that it causes slowdown; is the slowdown limited to that statement (so in which case I ensure I call dynamic as infrequently as possible) or does it cause slowdown further down the line?
I suspected that, but I was too lazy to mention the difference between C++ and C#. My bad.
1. Every time you call this method, it needs to use reflection to figure out which version of `BytesConverter.num` to use. This is where your biggest performance hit comes from. 2. Obviously it can't inline calls to `BytesConverter.num`, but that's a trivial loss compared to 1. 3. Once you are inside `BytesConverter.num`, you are back to full speed. 4. Oh, you accidentally wrote `BytesConverter.nom(value)`. No worries, the compiler can see that there are no methods named that. 5. Oh, you accidentally wrote `BytesConverter.num(value.x)`. Well x is private, so you're going to get a runtime exception. 5. Oh, you accidentally wrote `BytesConverter.num(value.xx)`. Well xx doesn't exist, so you're going to get a missing method/property exception. 
P.S. You can dramatically reduce the performance hit from #1 in my list by writing your own reflection code and caching the results. I won't show you how because reflection code + generics is a royal pain in the ass and I don't feel like checking my notes. 
The compiler doesn’t type-match recursively because it’s possible that class A refers to B and B refers to C and C refers to A.
&gt; Edit: nvm found an informative SO answer to this in SO by Lippert. Wow, that's even more crazy that I thought. 
Thanks again! no worries, I want to write as little code as possible, so more reflection code is out of the question. So, dynamic uses reflection. typeof() uses reflection too. Would you think typeof() and using a Dictionary&lt; Type, IByteConverter&gt; would be faster/better/safer than dynamic? 
&gt; typeof() uses reflection too. I wouldn't consider `typeof` to be reflection. Maybe it is, but I'm willing to bet that your dictionary idea is going to be a hell of a lot faster than `dynamic`. 
The generic method num&lt;T&gt;(T) has a different signature than num(point) so, to put it simply, they are not overloads of each other.
We don't have the same definition of flexible. C# generics are more flexible because you can create new types at runtime. In c++ everything is set in stone after compilation. C# generics play a big role with plugins flexibility since you can load, reference and execute types (that could be based on generics) while executing the application (= hot loading plugins) which is much harder to do in C++.
Uhm, they have the same signature and they are overloads of each other. The issue is that the overloaded-method is chosen at compile time. By using the wrapper the compiler loses the information "this is a point", so when choosing the overload it will choose the generic version.
&gt; I come from a C++ background Generics and templates are completely different concepts.
I can read this easily, but I can assure you that it's still disgusting. Mostly because it's not written as verbatim string (@"foobar"), so all backslashes need to be escaped and appear doubled as a result, but also because its mixed with HTML, so you don't immediately know which part is HTML syntax and which is Regex syntax. The most complex part here is probably the repeated "\\d{1,3}", which simply states "one to three digits". Combine that with a literal dot (\\.) inbetween three times and voila, you have a Regex that can find an IP address.
Same here
&gt;but how can you do anything useful with them, unless it's before runtime? By the way, are you for real? That's like asking how you can do anything useful with *objects*, unless it's before runtime. Do you need us to explain what Object Oriented Programming is? &amp;#x200B; Or are you so advanced that you somehow write code that manages to run itself before it's compiled? If that's the case you need to make a blog post about it and teach all of us.
you are right, don't know what I was on about
:)
https://i.redd.it/fksnqm2ho1y11.jpg
Do you know, how to Merge PDF Tool merge multiple PDF files into single PDF documents online for free? I already used many online tools but unable to merge my multiple large sized PDF files into single PDF. If you know get me right solution Visit:- [**https://www.osttopstapp.com/merge-pdf.html**](https://www.osttopstapp.com/merge-pdf.html)
This might be another [xy problem](https://www.reddit.com/r/csharp/comments/ao5isa/how_to_actually_use_attributes/efyoir1/) thing. If I had a string that contains the IP range syntax, and I wanted to split it up on dots and then swap out parts, then I would not ask about regex. There probably would not be a regex at all.
What did you do with time saved on writing "VStudio"? I'm wondering because I've never saw this form :-)
Couldn't you do a DateTime.Now check somewhere?
Honest answer: don’t. I’m serious, write a smaller service runtime that you run with whatever OS scheduler you decide to use and have that just do the thing you need to do. Trying to make things be scheduled while keeping one asp .net core project is a recipe for unmaintainable code and has a lot of potential gotchas. 
Have you tried to turn your computer off and on again?
https://www.hangfire.io
With last update I have many Windows issues with indexing and changing file states (close/open). So probably it's Windows I would say
This may not be the answer you're looking for but.. Hangfire with the MemoryStorage Extension (to avoid having a database just to store job data)?
this is the best answer. While there are solutions to run background jobs in a web app, it's an anti-pattern and not considered best practice. You have awesome options these days: * Run a scheduled task via Windows Task Scheduler or cron, depending on your OS. * Create a service/daemon for these tasks. * Running containers? Throw it in another container! * Running in the cloud? schedule a AWS Lambda or Azure Function to take care of it.
Don't do it from the web app. Do either: * Windows scheduled task or CHRON job, which runs on a schedule by the OS. * SQL Agent task, which the database executes on a schedule If you want to keep the logic within your app, expose it as an API endpoint and use one of the above mechanisms to kick it off.
Generally speaking, what I see working is using your DI to inject the current user in a scoped context. This means that per “request” the data is only gotten once. Your constructor changes to not look up the data, but instead have it be a constructor parameter. You can either depend on the IPrincipal that the httpcontext gives you or use that principal to hydrate a more mature user object. 
Overloads are resolved at compile time.
&gt; Ugh, so using overloads to "specialize" generics is a terrible idea apparently. Yes, that can't be done. Specializing generics in general can't be done in C#.
&gt; Generally speaking, what I see working is using your DI to inject the current user in a scoped context I'm not sure what you mean by "in a scoped context". I'm actually already injecting a service that gets the user (rather than getting it from HttpContext), but I didn't show that because I don't feel it's relevant... but it's not the user that I'm fetching twice, it's the data. I may have misunderstood what you're recommending.
Quick sanity question: are you writing these files serially or in parallel? You might be suffering a death of a thousand cuts if you are calling into and waiting on kernel processing serially. 
They are currently being written serially but my thinking is to avoid writing to disk all together. 
So everyone Is offering options on how to do this outside the web app but not really explaining why is a bad idea. The issue is that in certain web hosts (iis especially since this is ASP.net) will terminate the web process if the site is idle for a specific amount of time as well as restart the process periodically. Both of those events occur randomly from the perspective of your app. By moving your scheduled tasks to a more reliable execution mechanism (cron, Windows task scheduler, custom windows service, third party scheduler) you can ensure the jobs are actually fired. Hangfire.io is a good library for scheduled tasks in ASP.net and I have used it, however the tasks were things that didn't matter of the service died. I used it to off load tasks that didn't need to happen during the request pipeline to increase performance and to make sure application caches were always warm. Both don't rely on the service being up and running and I also used a db backing store to ensure things would eventually get run.
Just make sure you learn from my mistake and correctly formulate your CRON tab, lest you spawn a thousand k8s pods and knock over your cluster via vnic starvation.
Hmm, beter keep that windows update pending then. Why does Microsoft use its users to test their updates...
DI injection has different “lifetimes.” You should look them up and understand when to use each. Scoped means “per getFOO.” I’m saying that if you have a lot of data that correlates to the current user (or if it’s in the IPrincipal), instead of depending on the service to grab the data, register the current user as something that can be grabbed and instead use that. IE instead of ControllerConstructor(ServiceThatGrabsUserData) use ControllerConstructor(UserGrabbedFromService). I’m on mobile right now but I can get you more info when I’m on a computer later today if that doesn’t make sense. 
If you have everything prepared already, a .AsParallel or using the TPL libraries and awaiting the Kernel operations will eliminate 90% of the wait in one go and will be your biggest bang for your buck. My recommendation would be to do the thing that changes the least amount of code and has the smallest risk of introducing bugs. I’m assuming all the data is prepared before you start writing any individual file here. If that’s not the case then this won’t work until you change towards that. 
Close and reopen the browser is often a solution to this issue (if it’s a web project). 
The data isn’t prepared. Each individual pdf is created in memory then immediately saved to disk
Ah - I think I get what you're saying! The data is not in IPrincipal, but there is a lot of data tied to each user, using the IPrincipal ID as a foreign key. So if I'm following you correctly, you're suggesting that I could inject the user (with such a lifetime that would ensure that the controller and the filter get the same instance of the user), and then the filter will ask the user for the data. The user will cache the data, so that when controller asks for the same data, it will be retrieved from the user's cache rather than from the database. That sounds like a solution which could work. I'm amazed it's this complex, but it could work. Thanks.
Kind of! I’m saying that you have the user object and however you populate that happens DURING DI. If it’s cached or loaded once it doesn’t matter. Every DI SDK allows for lambda initialization, which allows you to grab something else from DI, and then do some logic and finally return an object. It’s actually way simpler than you’re thinking, no caching required. 
As I know the effects where in small amount. And only on some machines (only one out of 5 mine machines has that issue)
I think I got autocorrected there but I don't remember what I mean
Ok, I think it's going to involve me doing a bit more research, because I'm following the idea but not the details, but I reckon I can probably take your ideas and make them work. Thank you!
If you have trouble let me know and I’ll provide a small sample. 
I'm going to ignore your provocation and ask, why in that case would I not just stick a dictionary on my class instead of an attribute, or wrap my field or method in a class with whatever fields I would use an attribute for? I guess it's wordy, is there another reason?
If you can make it so that the prep step can be continued with a task or something similar you can parallelise. Do the data bits depend on each other at all? IE report 30 depends on data from report 17 and 25?
Will definitely come back to you if I need more help!
Thank you for the help. It definitely works, now just a matter of trying to get improve speed
This is going to sound dumb but the project MUST be in debug mode to hit breakpoints.
Lifetime/cleanup management, mainly, but also strong typing (because you use a subclass for your specific handle type)
^ This is correct, if we're right about what the actual problem is.
I would like to add the if it’s a database cleanup task, then creating a sql job would be a great good idea. 
Create a stored proc and setup a database job to execute at that time. 
So glad you pointed this out. I used Quartz on a project 1½ years ago as a new developer, and felt so happy that I'd avoided some complex workflow, which would require a lot more work. It wasn't until I had deployed the project to a staging environment that I realized the background jobs weren't being run. I tried to implement a number of fixes through IIS such as setting the site as never idle, and having the web app ping itself before shutting down, so that it immediately wakes itself up after a new deploy. In the end, I think I was just lucky that I had some workarounds, including that the work could be allowed to stop abruptly without any consequences, but I was honestly really frustrated with how poorly it was documented/not mentioned in the Quartz documentation. Of course it's not in their interest to reveal this flaw. Hangfire at least tries to document workarounds on several pages such as [this](http://docs.hangfire.io/en/latest/deployment-to-production/making-aspnet-app-always-running.html).
Because a dictionary would be per-object, attributes are static data per-type. I could for example have written some code does some general work, but allow for external developer preferences and react to special cases. &amp;#x200B; For example, instead of forcing every developer to name their Property "Source", and check for that existing method on the type, I could instead simply do reflection on the incoming object - if the type has the `[SourceDataPropertyAttribute(string propertyName)]` (made that up) on it, I can retrieve the name from the `PropertyName` property, find the method on the class, then call it to get the data my function wants. &amp;#x200B; This is the same case in the `[TestMethodAttribute]` in a MSTest project. Microsoft let you name your functions anything you want, instead of forcing you either start every method name with "Test", or implement an interface. &amp;#x200B; So when you run tests, their process, (which is already compiled code, this happens at *runtime*), searches your unit test library assembly for types that have the `[TestClassAttribute]`, finds the methods with the `[TestMethodAttribute]`, then executes them. &amp;#x200B; How would you write code that does this yourself? Reflection. Where would you write the code that does it? Well, if you want the simplest answer, just put it in your Main method.
Click once is an issue
All projects were set to debug as mentioned. Cheers though.
Not a browser project. All console apps.
I had a similar issue with my ASP.NET Core project. In my case it was caused by app restart on each request because my Startup() logic was populating web.config which in its turn was causing a new Startup(), and so on. 
If you use Coravel (https://github.com/jamesmh/coravel) then it could look like this: ```c# scheduler .Schedule&lt;CleanDatabaseJunkRecords&gt;() .DailyAtHour(1); // 1 am UTC ```
Yes, I figured it out. What gave me headache was attempting to make `IOutputPort` covariant while at the same time making `IInputPort` contravariant and cross-referencing them. So I broke the generic dependencies into the following; stuff works now. /// &lt;summary&gt; /// Minimal interface needed by &lt;see cref="OutputPort{T}"/&gt;. /// &lt;/summary&gt; interface IInputPort&lt;in T&gt; : IInputPort where T : GraphMessage { void Enqueue(T message); } /// &lt;summary&gt; /// Minimal interface needed by &lt;see cref="IInputPort{T}"/&gt;. /// &lt;/summary&gt; interface IOutputPort { NodeShell Owner { get; } bool Closed { get; } IEnumerable&lt;IInputPort&gt; Successors { get; } void Connect(); void Close(); } 
Use a SQL Job
We are using an open source library called wexflow. That might be helpful.
In fact, the entirety of the LINQ extension methods work on the principal of the compiler implicitly knowing the generic type parameter at compile time so you never have to put generic parameters into your LINQ calls. Almost all of LINQ involves generics.
Lambda is love, lambda is life
Triggering from a build agent is also a good option. You got simple reporting (did/not run, how long) for free
If you are running in a cloud provider, you can schedule triggers for Azure WebJobs, Azure Functions, or AWS Lambda. 
Have a class that maintains your shared data, and make sure that it is injected into anything that depends on it. 
&gt; Because a dictionary would be per-object, attributes are static data per-type. Well, that's kind of what I mean about "how is that useful at runtime?". To follow your example, running tests seems to be something you should do _before_ you deploy.
&gt; Same for "treat everything as pass by pointer except structs". That's where `public int Prop { get; private set; }` really shines. 
C++ doesn't have type constraint issues. Since it is essentially a fancy macro, you can use it scenarios that c# can't handle. Stuff we long for such as arithmetic operations are trivial in C++ templates 
...by default. You can use dynamic dispatch for runtime overload resolution. 
&gt; C# generics are more flexible because you can create new types at runtime. ??? IIRC, it's still at compile time. It's just compile-time of the consumer, not compile-time of the library.
Usually something you might use an attribute for - defining a property editor for a visual designer's control property window, for example - is not something you want muddying up your class's api. Attributes are often used to implement and control cross-cutting behavior and that metadata doesn't belong in the class proper.
Well, you're confusing major concepts so it's difficult to explain this at all. Can you explain to me what reflection is?
&gt; How would someone define their own testing framework? By writing it.. This is going to be tough if you lack the understanding to imagine how that might work.. You'd write an executable that takes a dll/exe path as an argument. You'd dynamically load that assembly. Then you'd enumerate all the types in it looking for ones with your `Test` attribute. Then you'd use reflection to instantiate an instance of that class and call the appropriate test method, through convention or presence of your custom attribute. The code that executes that method on the dynamically loaded assembly and type would handle exceptions and verify return values. Then you might write a VS plugin to connect your test running logic with a VS hosted UI.
For issue 2) try something like a parallel foreach (https://docs.microsoft.com/en-us/dotnet/standard/parallel-programming/how-to-write-a-simple-parallel-foreach-loop)
thank you. I will check it out.
A reflection API is an API that allows you to inspect and modify runtime type information. `Type t = typeof(Foo)` is an easy way to get an entry point to this API. I can see what fields are declared on foo, what classes it inherits from, all kinds of things.
Right. Which is useful. You can reason about these things, in your code, in a type-safe manner. Attributes are then just additional information on top, that you can reason about in a type-safe manner. It's literally just type-safe comments.
Hello, I'm a first year computing student at university and I would like to know if this book is still relevant in 2019. I don't have any programming background and I'm studying C sharp in my course. Will I benefit from the books exercises or is it too outdated ? I'm current enjoying the book so far and about to start building my first game in WPF. 
Fsharp has a tiny but extremely devoted, I'd say fanatic user base. 
But since this is on ASP.NET Core, answerers shouldn't assume IIS. Do similar issues arise with e.g. Kestrel?
Yeah, and type safety seems like a very weird thing to give to *comments*.
I think binding the key to the MAC address cannot completely solve the problem.
Sounds like you solved it, good work. I've had fun with recursion and parallel programming when debugging. Those will make you question basic tenets of reality. 
Maybe. I thought attributes were strange at first too. But remember that comments aren't available during runtime, attributes are.
I had this one couple of times. In my case it was due to some sockets library not being properly initialized because server was down. VS2017 has some strange breakpoint behavior probably after trycatched exceptions. So basically check if any library got changed since last time it worked.
Yeah well.. or reflection (which dynamic is a glorified version of).
In a few of the comments you refer to how C++ works with templates and compare it to C#'s generics. They may look similar, but they are not at all the same thing and don't behave the same way. &amp;#x200B; Others have explained why the code doesn't work, so I won't go into the specifics. Generics allows you to have different types for variables and generic methods will call the generic overloads. If you want actual overloading, then that would be more along the lines of having a virtual method that you override in a derived class. abstract class BytesConverter&lt;T&gt; { virtual int num(T t) { return 0; } // or make it abstract } class PointConverter : BytesConverter&lt;Point&gt; { override int num(Point t) {...} } &amp;#x200B;
That recompilation requires you to have the project set up as a Website project vs a Web Application project in WebForms. I imagine there are still some other DLLs you would need to bring over into the bin directory on the website. DLLs are not pulled from the GAC because it becomes a versioning clusterfuck on different machines. &amp;#x200B; Not a Web Forms expert, but you may need to also have the global.asax page present. I personally think it is bad practice to copy over excessive files on the server, I don't like having the compilation configured for Web Forms sites because it leaves all your .cs code there for someone to grab if the server is attacked. &amp;#x200B; If you let VS publish a deployment, you'll end up getting the exact files you need.
Most of the info on kestrel is that with 3.0 it may be ready for edge hosting. As to whether it has the same issues: I don't think it does when self hosted but asa separation of concerns I would still recommend scheduled tasks be a separate exe ran somehow do that a badly written process can't accidentally crash your web site.
I had always been playing around with Web Applications, for some reason. Just creating a new Web Site now and it looks much more bare bones, which is preferable. Thanks!
Can you share an example of your hot loading plugins concept? Because C# generics are resolved 100% at compile time.
Well, that syntax is awful. there needs to be a way to indicate function pointer types similar to the delegate syntax.
Yeah +1 on Hangfire. Recently used it and liked it although documentation is lacking and some stuff about it are... peculiar.
Thanks! I think that's what I've currently clumsily done using a static class that contains a dictionary of &lt;Type, IBytesConverter&gt;, where e.g. PointConverter implements IBytesConverter, but your suggestion looks cleaner, without the static class.
using a dictionary as you did is not uncommon. and is perfectly fine. You'd be storing an instance of the byte converter instead
That is an abuse of the build infra though...
What about using the Name property? 
The hangfire documentation explains how to break the normal way IIS works, really. It's not cool. It's putting a square peg through a round hole.
I getting verify your account but cannot create gmail account. and how do stop verifying your account?
Do you have a Stack Overflow post up for this issue?
This isn't a tech support forum
No. I was able to find a couple of threads with this issue. The only the solution was to pass a string in the arguments for printer and the files to be printed. Unfortunately I could not get it to work. Most of the solutions incorporate a 3rd party dLL that you have to pay for. 
Removed: Rule 3.
could you give an example please, I've tried looking it up but I'm too dumb to get the examples other ppl use
The cover art certainly hasn't been relevant since the 90s.
&gt;learn how to use classes and object-oriented programming, draw graphics and animation, and query data with LINQ and serialize it to files Yeah, most of that wouldn't have changed. I'd skip the Windows Phone project completely though and it looks like this doesn't have anything related to .Net core which is becoming important.
The book uses VS 2013 and focuses on UWP development against Windows 8. When I started using the book I was using VS 2015 and didn't really have any issues due to the VS version difference. However, when I moved up to VS 2017 I found that the template they use for all the UWP applications no longer exists. Pros: * Discusses more than just the language (includes CS concepts as well). * Has a lot of exercises of different types. Cons: * It's coming up on 3 versions of VS old and 2 versions of C# old. * Some of the things it uses simply aren't supported anymore. I think it's well worth getting for learning, but there are more up to date books out there. I also got the C# Player's Guide (3rd Edition) and found it a good supplement to this book. It's much more up to date but not nearly as in depth, so I found it a great way to update what I had learned from the Head First book (which I still haven't finished due to the missing templates in VS 2017).
Ignore WPF, ignore.silverlight, ignore asp.net webforms, and asp classic. Nobody builds a game in WPF, don't waste your time 
What you are looking for is RouteData. I use it for a similar thing. I construct a serviceclient based on multiple parameters given and looked up from the user request and then pass that entire instantiated class/object as a vlue in a RouteData entry
Okay, I see. Thanks for all your help. I appreciate it.
&gt; If I'm coding against a text box, why on earth would I want properties and methods on my class that only related to design time concepts? If we're doing OO design, then we should have one class that encapsulates "Design Time Components" and one that encapsulates "Underlying Components"... Now, maybe we wanna break those rules cause they're more in-the-way than they're worth, but it's an ergonomics issue, not a design issue. with attributes: class MySerializableClass { [SerializeName("attributeName")] private Foo property; } without: class MySerializableClass { private SerializationOverride&lt;Foo&gt; propertySerializer = new SerializationOverride("attributeName"); Foo property { private get {return propertySerializer.Value;} private set {propertySerializer.Value = value;} } } Then `Serialize(obj)` reflectively inspects `obj`'s fields for a SerializationOverride, exactly as the Attribute processor would, with the added step of looking up what field it overrides. Granted it's not as _nice_, but it's not horrible.
you may be thinking of java annotations and getting their behavior confused with how c# attributes work. Check out this stack overflow post [https://stackoverflow.com/questions/553857/what-are-the-similarities-and-differences-between-java-annotations-and-c-sharp-a](https://stackoverflow.com/questions/553857/what-are-the-similarities-and-differences-between-java-annotations-and-c-sharp-a) for a better summary than I can give. Can you get something done in c# without attributes? Yes for sure. They can just make your code cleaner and easier to reason about in some scenarios. For example, the Xunit library uses the \[Fact\] attribute on a test method to let Xunit know AT RUNTIME to execute that method. You don't tell the compiler to do something, the xunit test runner knows to execute methods with that attribute. Wiring up every single method in your unit test application to run would be overly verbose and error prone (easy to leave something out). You can easily see by looking at the class what test methods will run with the explicit attributes. Another example, this one made up, would be putting constraints on a given property in a class - having something like \[MaxLength(20)\] on a property doesn't mean anything to the compiler or the class with that property, but you could write a generic validator that read MaxLength attributes on string properties and made sure the length was within those constraints. I can't think of a problem that requires attributes, and like anything you code, there are multiple ways of accomplishing the same thing, but in a lot of cases they make your code more readable and easier to reason about. I think people keep asking about what your actual use case is because generating code off of attributes at compile time is generally hacky and there is almost certainly a better way to implement what you are trying to do.
Ok, so it looks like I can access RouteData from both the controller and the authorization filter. Is it safe (and possible) to add my own properties to it? Because if it is, that could be a neat solution, thanks!
Xaml: &lt;Label x:Name="myLabel"/&gt; Code: myLabel.Content = "Hey there"; 
Thank you for editing your post with the discovered solution. I wish everyone was a good egg like you!
i changed the code a lil bit and deleted the program class there https://abload.de/img/addnachbar1cnkxe.png problem still the same
You need to refer to the method through the variable you allocated. As graph.addNachbar(...)
Azure Functions with a Timer Trigger are my go-to for background processing tasks these days (unless it takes &gt;10 minutes to run or needs resources on a server that's tricky to get to remotely).
This not static, main() is static so there is no object to call the method on. Visual Studio should be telling you this? 
addNachbar(node, nachbar) is a method of Graph, so you need to call it on an instance - graph.addNachbar(2, 3) FYI it is C# standard to have pascal case for method names e.g. AddNachbar(). And lowercase prefixed with underscore for private attributes e.g. private int _nodes;
graph.addNachbar()
I saw the new code, please translate it so I can help.
tysm 💕
I just wanted to give an update for anyone who might have this same issue. In my case, I was using the Windows Subsystem for Linux to git clone my repos. I'm guessing now that there are special characters or something that don't translate correctly when using that repo in Visual Studio.
While not EndOfStream on a StreamReader wrapping your FileStream
damn. now iam feeling even more silly. thank you!
thank you and yes, i ll change the names accordingly
For csv files use this http://joshclose.github.io/CsvHelper/ Or this https://www.filehelpers.net 
Can you post an example?
Is there anything in the NuGet package repositories?
With some boilerplate, you could use databinding from an array, where each index maps into a different label. Then you just update the array and send an updated notification to each label. A less boilerplate approach would be for that array to contain actual references to the labels. At construction time you could initialize the array with each label. Or if they are too many, just use the Name property and search for labels that follow a specific convention on the XAML tree.
It is safe. Its per request and thats the intent of it. 
You are trying to used a non static variable on a Static method
var fs = new FileStream(filename, FileMode.Open); var sr = new StreamReader(stream); while (sr.EndOfStream) { string line = sr.ReadLine(); )
use Windows Task Scheduler. If you must use a web application. You'll need to worry about keeping it alive. Then use something like HangFire.
will this iterate through each value delimited by a comma?
Add a "modified" field to your rows and use a database function if your server supports it, that takes the field you want to update, the new data, and the timestamp when the data was changed locally. If time is greater than databases modified field than update it, if not ignore it.
For each line use string.Split(","). That will return an array of strings for all the values on the line, without the commas.
That's the code to iterate through the file. You'll need to then split the line in to fields. That can be as simple as str.Split(',') or a page or two of code depending on how extensively you want to support quotes, commas in the data, escaped characters, non-ascii encoding, etc. 
This isn't exactly true. Visual Studio has an option called Just My Code (enabled by default) that won't load symbols for release-mode binaries. Uncheck that option and you can hit (most) breakpoints in release mode fine. That being said you basically can't do anything else like change variables, move the instruction pointer, or even see some variable values. The compiler does a crapton of optimization in release mode, so the compiled code may be pretty different than what you wrote--sometimes it moves things around, removes variables, etc. These optimizations are what limit the above.
CSV is trickier than it first appears. 1,5.38,John,Q.,Public,123 Main St,Apt B,Podunk,NY,(222) 555-1234,,,,, "1","5.38","John","Q.","Public","123 Main St,Apt B","Podunk","NY","(222) 555-1234",,,,, Both are correct, but they're not the same field structure. Can you spot the problem? Answer: &gt;!One of them has `123 Main St,Apt. B` as two different fields, while the other has `"123 Main St,Apt. B"` as just a single field. Take note of the double-quotes used as a field encapsulator.!&lt; If you're not prepared to handle these sorts of issues, don't write your own CSV parser. I speak from experience (and from a time before there were eleventeen free libraries for anything and everything available on GitHub).
I love the C# Player's Guide. I can't recommend it highly enough. It was a cut above the other books I tried when learning. 
Had trouble with this in a high volume web based printing app. Ended up using these guys: https://www.pdfprinting.net/
Don’t write your own CSV parser. It’s not that trivial. 
Regarding your problem, I'll try to give some insight. It comes from OOP (object oriented programming). In line 30 you create a new Graph object (an instance). This calls the constructor (line 13) and returns the object (basically the variables and the functions). In line 32 you try to call addNachbar. This is defined in 21 as a not `static` function of the class `Graph`. Due to this it has a *hidden* parameter `this` of type `Graph`. This parameter is required to access the variable `Nachbarn` inside the class. But you don't *pass* that parameter in line 32. You do so by calling `&lt;instance&gt;.addNachbar(2,3)`, so in your case `graph.addNachbar(2,3)`. Now some general tips, as the problem was already solved: I'd suggest you, to use English names for variables and functions. Of course, it does not matter for the compiler. But I (of course, very subjective opinion) find it distracting when reading code and then having German variable names in there. Maybe a better argument is, if you share your code (for whatever reason, be it open source or searching for help) it helps others not speaking German to understand your code. But only as long as you choose good variable names. If you choose to stay with German, I'd at least recommend being consistent with it. In your case you use the English term Nodes which you could translate to Knoten, but as I've mentioned, I'd recommend German... In addition, you can make `Graph.Nodes` `readonly`, as you (probably) will/should not change it later on. Furthermore, your Graph class seems not typical for a graph. Most notably I don't understand why you have an array of lists for your neighbor nodes. But maybe that's just my understanding.
We use CsvHelper, and it's on nuget: https://www.nuget.org/packages/CsvHelper/
&gt; For each line use string.Split(','). No. [In the general case, it's not that simple](https://www.reddit.com/r/csharp/comments/aol2hp/how_do_i_loop_through_comma_delimited_a_csv_file/eg1qv6b/)
It's not even UWP if it's Windows 8, its Metro.
True, I hadn't considered that. Although without knowing the contents of his data, the simple approach may be sufficient for his purposes.
Attach the debugger to all IIS processes. Sometimes it only gets one.
Are you doing this for professional work? If so, stop immediately. This is difficult to do properly and reliably, but fortunately for you it’s been done already (google “CAP Therom”). Google to find the implementation that fits your requirements, eg: “Postgresql replication”. If you try to do it yourself, you’re likely to do a lousy job of re-Inventing the wheel.
I can't tell you how many times we'd get files with unescaped double-quotes. The vendor would claim they were building the file correctly, but there's no way that they could send us a value like this and it be correct. "Eddie's Quick "Stop" Mart" 
The way I solved that in my own CSV parser was to detect if the encapsulator (double-quote) was immediately adjacent (minus white-space) to a separator (comma). If not, I'd automatically convert that encapsulator to a double-encapsulator, then it would be caught by the double-encapsulator-to-character-literal rule later on.
Can't you also output studentGrades\[i\] with the WriteLine call too?
Something like this? &amp;#x200B; &lt;code&gt; for (int = 0; i &lt; studentGrades.Length; i++) { Console.WriteLine($"Student {0} got a {1}.", i, studentGrade\[i\]); } &lt;/code&gt;
He means Inside the for loop in the second example. This is the correct answer.
That worked! &amp;#x200B; Is there anyway to do that all within the foreach loop? Or would it be most efficient to use the for loop?
You need to run the remote debugger and VS as Admin You need to make sure the deployed codes matches the open solution In my experience, it's still hit or miss. But yesterday I found an extension for VS to manage attaching and remote debugger and that seemed to work every time. Don't recall name of extension, but just go look.
hey, thank you for your insight. i think you are right and i should stick to english variable names only. the array of lists do make sense tho. since iam trying to implement a breadth first search algorithm and i think i just did it! have a look and see it for yourself: https://abload.de/img/addnachbar2iyket.png it basically figures out a way through any type of labyrinth (well, i think u know what it does). the only problem i could not solve to my satisfaction is line 40 where is use the "ForEach" command of the list to enter every element to the que. i would rather do it with a for or a foreach loop but i couldnt figure out how that works. because if i use the foreach loop on every list element i cant say "item.q.enque" or something like that. well, anyways iam happy that i did it. cheers and thank you for your critique
Use the for loop. Otherwise you need to increment manually in code But note that it says student 0 at the beginning. You probably want to +1 the index during display
In your foreach, you could do: Console.WriteLine("Student #" + studentGrades.IndexOf(grade) + " is: " + grade);
If you're using a build server to generate your remote builds then you need to add the location of the symbols generated with the build to your VS
Make sure debug=true in web.config on your remote site, that your solution source code matches remote site’s sources and that solution is built in Debug configuration.
 using System; using System.Linq; public class Program { public static void Main(string[] args) { var studentGrades = new int[10] { 88, 70, 69, 42, 90, 77, 83, 85, 89, 100 }; foreach (var n in Enumerable.Range(0, studentGrades.Length)) { Console.WriteLine($"Student #{n} Grade: {studentGrades[n]}"); } } } &amp;#x200B;
Seems to me for loop is most efficient. But depends on your assignment. &amp;#x200B; int index = 0; foreach(var studentGrade in studentGrades) { Console.WriteLine($"Student #{0} got an {1}.", index, studentGrade[index]); index++; } &amp;#x200B;
You need to copy over the .pdb files and make sure your DLLs are compiled in debug mode. 
I just tried using this the other day, but the CSV file was 40mb. It took about 30 seconds, whereas a custom written StreamReader and some DataTables (which I'm not usually keen on using) chomped through it in about 5 seconds. All estimates. Does that sounds right? I looked around and it seems that CsvHelper is not considered the fastest, so I went with the custom written tool, even though I'm sure it's not as secure.
That would run into problems if there are any repeat grades, though. None present for the data here, but it seems reasonable that another data set would have that.
sql server mirroring, where the transaction isn't completed unless both sql servers commit
You can also accomplish this with a Linq query; studentGrades.Select((s, index) =&gt; Console.WriteLine($"Student #{index} is: {s});
If this is for a profit making product and sync is just a component to you then you may want to just buy rather than build. For small single developer type applications it can be cheap. Otherwise you might want to have a shadow table of every table in the DB. The shadow table can be just operations that have occurred since last sync. Then you use the shadow tables to send a log to the remote of what operations have occurred. The remote just needs to execute those operations and then sync down the changes. Alternative log columns that track created, last modified, last updated fields along with a dirty field can yield the same kind of flexibility. Some folks better at DB design may have some opinions. 
For good measures wrap a `string.Join(Environment.NewLine, ...)` around it and than just write it to the console
You could do this in your wrapper, which will explicitly tell him which method to use: public void call() { if(typeof(T) == typeof(Point)) Console.WriteLine(BytesConverter.num((Point)default(T))); Console.WriteLine(BytesConverter.num(default(T))); }
Word of caution: It may look efficient, but `foreach` with lists have a slightly higher cost than for loops. This is because behind the scenes `foreach` requires more system calls (eg. `Current` , `MoveNext` ) than a simple for-loop. Fastest in terms of performance is a hash-able object like `Dictionary&lt;T&gt;`. (Source: [http://mdfarragher.com/2017/11/22/for-versus-foreach-in-csharp/](http://mdfarragher.com/2017/11/22/for-versus-foreach-in-csharp/))
This won't work. Select must have a return value. Console.WriteLine returns void so it won't compile. &gt;Error CS0411 The type arguments for method 'Enumerable.Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)' cannot be inferred from the usage. Try specifying the type arguments explicitly. You can do this something like this &gt;studentGrades.Select((grade, index) =&gt; $"Student #{index}'s grade is: {grade}").ToList().ForEach(x =&gt; Console.WriteLine(x)); 
Works just fine -- https://i.imgur.com/snZKI0y.png
I totally didn't work, for all the reasons listed. That'll teach me to write code on reddit without actually checking it. I posted the same answer a few minutes before it was pointed out.
This is the correct answer. A service queue essentially. Can run across multiple web servers. Can recover from shutdowns and such. 
You could make a Student class with ID and Grade as fields. Then foreach throgh a list of those.
I finally got some time to take a look at this. Here are my observations: * Wrap `StreamReader` and `StreamWriter` in a `using(){}` block so that it is automatically disposed. * What if the `watts.csv` file doesn't exist? You should be prepared for a `FileNotFound` exception and take appropriate actions to recover, such as notifying the user that it was not found, or asking them to browse to where it can be found. * You don't have any validation around the contents of `watts.csv`. In particular, the `Convert.ToInt16(columns[1])` will throw and exception if it cannot make sense of the input. * `ApplianceDA` is using static methods unnecessarily. There are cases where static methods are good but as a general rule you should try to avoid them. Instead, make the public members and then use `new ApplianceDA()` as needed. You could even provide it in Program.cs: `new frmPowerViewer(new ApplianceDA())` * `txtPricePerkWHour` needs to have a default value. The initial value of "" simply causes `Convert.ToDecimal(txtPricePerkWHour.Text)` to throw an exception. * In `GetCurrentWatts()` instead of using `applianceButtons.GetUpperBound(0)` in the for loop, use `allEntries.Count`. `GetUpperBound()` is expensive compared to `Count`. * In `UpdateCosts()` use Double instead of Decimal. Decimal is 128 bits which is way overkill for the calculations being performed. * In the mobile world, "Hover" is no longer a thing. Someone using the app on a touchscreen would not be able to see the tooltips on hover. (I realize that was the assignment. I mention this a discussion point to bring up with the instructor.) Hope this helps you. You're off to a good start in what I have found to be a very rewarding (and frustrating) journey. &gt; May your code be small as the acorn, strong as the oak, simple as the wheel, and swift as the wind.
when you say copy over the pdb's, do you mean the ones from my local solution or the ones from the remote build server to the IIS server? 
My bet is that the build server is configured to build with config = release. It should be as easy as finding the project that seems to be the culprit and simply copy over those assemblies and the .pdb file from your local bin folder to the target machine and fire up your remote debugger. 
That approach was for syncing calendar events 😂 I've tried this. It was hard. What is your use case and tech stack?
https://developer.couchbase.com/documentation/server/3.x/admin/XDCR/xdcr-architecture.html Couchbase describes their flow.
Oops, you're right. I guess I assumed I was going to get the index of the current item instead of whatever value it resolves to but yeah that's what happens when I actually run that with a duplicate value somewhere in the list.
Smells like premature optimization
That is the whole purpose of a for loop. 
While everything was in English you should have used Neighbors instead of Nachbar
And here I thought all German programmers used Linux as their development environment. Good to see you working on C#
You should read some book about generics in C#, they are not resolved at compile time which is their main difference with Java or C++. A type that has generic parameters exists at runtime and can be used to construct other derived types. For example: ``` // get a reference to the generic type for List&lt;T&gt; var genericListType = typeof(List&lt;&gt;); // create a new type for List&lt;int&gt; var intListType = genericListType.MakeGenericType(new[] { typeof(int) }); // create an instance of that new type var intList = Activator.CreateInstance(intListType); // check the type Console.WriteLine(intList.GetType()); // prints: [System.Collections.Generic.List`1[System.Int32]] ```
Wrong it is not compile time.
This is good advice assuming it's *just* two databases and not something like syncing client status (where you have 1,000,000 clients/customers) with a central database used for all clients. The IMAP example didn't make it clear either way.
They used the word 'efficient.' I'm just giving the explanation for why that is not the case (in terms of speed of execution). You can continue along assuming the opposite and be just fine in most cases.
Sure, that's not bad. RFC 4180 compliance (and more) is expensive. 
Wow, thank you so much! Will be reviewing it this weekend and making as many of those changes as I can.
What is your reason for using WPF for a game?
&gt; They used the word 'efficient.' And they said the `for loop` (not the `foreach loop`) was the most efficient. Then they gave OP the example the OP asked for, a `foreach loop` solution.
Do those usings indicate .net framework? Could be core
&gt; studentGrades.IndexOf(grade) Oh sweet Jesus please don't do this. Even if each grade was unique, it has to search through the whole array for the right index. So if you had 2000 students in your school, doing `studentGrades.IndexOf(laststudentgrade)` would have to look through 1999 students before finding the right one, while the alternative with `for` would be immediate.
This is visual studio, but otherwise yes.
Ah, I see now how your structure works. ``` foreach(int x in _nachbarn[q.First()]){ q.Enqueue(x); } // or for(int i=0;i&lt;_nachbarn[q.First()].Count(); i++){ q.Enqueue(_nachbarn[q.First()][i]); } ``` should work, but I'm not sure if LINQ is better or not. Didn't code c# for a long time. `item.q.enque` won't work, as you want to call `enqueue` on the queue `q`.
Duh. Well it looks like we were both correct(ish). So, suck it. 
Well what is it? That you can inherit many interfaces?
I’m around all weekend. Drop me a note if you’re stuck. 
Doesn't provide a clean API surface; that's just relying on developers sticking to convention and doing arbitrary property type lookups. It's actually horrible, it belongs in the internal mechanisms of a library but expecting others to write code that extracts this information in a consistent way is too much to ask.
It sounds like you want to both build a game and build the matchmaking itself? Both are probably really ambitious, but Unity might have everything you need
You are entirely correct. And I've actually constructed generic types using reflection on a previous project so not sure why I didn't recall that. Sorry!
I don't know much about your specific problem, nor am I an expert in this area, so I'm going to just throw a few things at you to see if you think they'll be useful. **TLDR** This problem is a pain. Seriously, don't try to re-invent this wheel. Read CAP theorem, you might be screwed on theoretical grounds, but probably not. There exist frameworks that can help. Bloom filters are a thing that might help if you want to keep pursuing your linked technique. **Disclaimer Time** This has been mentioned already in this thread but I'll say it again - don't do this yourself. This topic is the one of the big central ideas behind nosql databases, if not the biggest. It's a very complicated problem in general and there's some fundamental limitations you'll come across. **Theory Stuff and Better Practices** First off, if you're not already familiar with [CAP Theorem](https://en.wikipedia.org/wiki/CAP_theorem), go get familiar. It can be useful to know which of the 3 you need, since it can inform you of the types of problems you might run into down the line. It sounds like your problem is an AP problem, since I'm guessing you don't need to be in sync all the time, but would like both data-sets available and in separate places. I should note that actual CAP theorem is more esoteric than people give it credit for, but I think it's still a decent mental framework for thinking about this problem. If the problem you're aiming to solve truly requires consistency, availability, and partition tolerance at the same time, give up. Go read [Google's paper](https://storage.googleapis.com/pub-tools-public-publication-data/pdf/45855.pdf) on their solution. Spoiler alert: It involves atomic clocks and a custom ultra high precision and absolutely bounded time protocol. Frankly, I linked it to scare you away from trying. With that said, most likely you don't actually need all 3 simultaneously as strong guarantees. A nosql type of database often give you options to manage that. The "Eventual Consistency" keyphrase might get you down some interesting routes there as well. **Things between "Good Enough" and "Terrible and maybe fun." You decide.** There exist some libraries/frameworks that do synchronization. [Microsoft's Sync framework](https://msdn.microsoft.com/en-us/library/mt763484.aspx?f=255&amp;MSPPError=-2147217396) comes to mind. Do your own due diligence, I'm not endorsing it because you now know as much about it as I do. Perhaps your problem is more along the lines of something a Queue framework can solve? Look to see if RabbitMQ or something similar is a good fit for you problem. Most RDBMSs have some sort of mirroring or replication support built into them. SQL Server Mirroring, replication, availability groups, etc. for instance. If you want to keep going down the path of your linked technique, it seems like something that the strategic use of [Bloom Filters](https://en.wikipedia.org/wiki/Bloom_filter) could help with. They can answer if an item is "probably in the set" or "definitely not in the set" with a very space &amp; time efficient technique. Perhaps each of the datasets maintains one, and you can have much more efficient across-the-wire checking by transferring bloom filters around to pre-filter the data you might need to sync.
No, I already have a game; I just want to be able to send files between a game host and players.
Yeah, makes sense. I know my users will be using large Csv's so I will have to make that judgement, but I can see how for smaller Csv sources, this would be the prime tool. It was straight forward and nice to use.
"Significant" would depend on what you're actually looping over, unless the array has a few million items, there's no effect on program execution time that would be apparent to the end-user. And if a `foreach` conveys a clearer intent, or is simply "cleaner" (i.e. less code) then go with a `foreach`. CPU cycles are cheap, developer headaches are not. Or as the author of that blog post puts it: &gt; When performance isn’t an issue, use foreach
He could, but unless he's saving this to a database for later retrieval, I don't really see the point.
I'm suprised no one has brought up c# 7.1's pattern matching: &amp;#x200B; public struct Point { int x; } public static class BytesConverter&lt;T&gt; { public static int Num(T val) { switch(val) { case Point p: return 4; default: return 0; } } } public class Wrapper&lt;T&gt; { public void Call() { Console.WriteLine(BytesConverter&lt;T&gt;.Num(default(T))); } } class Program { public static void Main() { var w = new Wrapper&lt;Point&gt;(); w.Call(); } } &amp;#x200B;
Right, and when you're trying to prove a point about efficiency, it's perfectly valid to use for-loop as an example. 
Check out PDFiumViewer, programmatic printing to an installed printer.
Oh dictionary is just o 1 because it doesn’t allow duplicate keys. Basic hashing from the first data structures class in college
Because it's part of the Graph class and you need to instantiate a Graph object in order to use it. 
Well you're actually wrong, because all hashing methods have the possibility of collisions and how you deal them affects the performance.
The underscore is an old standard, even Microsoft's documentation omits it nowadays... But I guess that's just a matter of preference.
Don't feel silly. Your method you're trying to invoke is an instance method, your main method doesn't have context to access that method without reference to an instance of the other class. It's basic, yes, but nothing to feel silly about. Here's something else to try, make the method static. What happens to your access to the method when it's static? What happens when you
Dotnet works just fine in linux
I think you need to learn objected oriented principles first https://en.m.wikipedia.org/wiki/Object-oriented_programming I don’t know of any good books that’ll teach it in C# unfortunately I learned mine in Java :/
Yeah I know but I think this is Visual Studio not visual studio code
Dictionary throws an exception
base.{variable} Sorry I’ve been drinking, can’t read the code on mobile.
so in the method header, I should do? public double weight(double var1, double var2, base.{variable}) still gives errors...
Nope, your method signature (you called it header) would look like.. public double weight(double var1, double var2) And inside your method you would write.. return dirt + clay + base.quantityOfSand
Success! Thank you so much :)
No problem, it gets easier! 😁
I can’t vouch if there’s a better way to do things since I can’t read the code too well, but I’m glad it works :)
Biggest tip is make sure you understand why it works now!
Looking at it you probably don’t even need the weight method, just have a variable weight that the getter returns dirt + clay + base.quantityOfSand
I definitely do! :) kind of exciting, since I was doing too many unnecessary complicated things.
the method is for a hw requirement
You can start from learning Remoting for connection, seralization for object converting, and protobuf library for packaging and sending data
Two different keys can hash to the same value. That's perfectly legal and does not cause an exception. In fact, if you think about it for just a moment you'll realize that a string key can have far more unique values than can be generated by any practical hash function. In fact, the number of possible different values for just four character strings is a 64 bit value.
Any time you want the answer just ask. For now I'll encourage you to think about the problem some more.
any reason why you're insisting on using foreach? for is definitely the better solution in this case.
Oh my god you just mod it with the size of your array and if you have a collision you just keep going until you find an empty spot 
Another note for LINQ is the IndexOf method. It isn't necessarily the right tool for this case (it's not as efficient as just doing a single for loop - but it would work for the exact usage in the OP), but it does let you ask a list for where a given value or object reference exists. It is more useful for object lists than value type lists, at least in my mind, because of the possibility of duplicates with value types. Duplicates in object lists can happen too of course but usually not organically (ex pulling out a list of objects from a database). I sometimes find it useful when working with LINQ where I have a subset of a reference collection (ex the subset of users who are inactive in the system) and I want the index of some of them from the reference list. But as always with LINQ, there are multiple ways to get things done. 
If you want to build a game, look into Unity. It still uses C# and it's widely used. WPF is largely used for an MVVM pattern of software development. Non-game software, that is.
That's right, and traversing an array is an O(n) operation. Overall a dictionary is O(n log n) because finding a place for an item takes time
I just wanted to know if it was possible to do solely with a foreach loop. The previous lesson was on for loops and we did something similar to some of the examples posted here, so I just wanted to know if it was possible to do the same with foreach.
"So when should you use a foreach-loop, and when should you use a for-loop? Here’s what you need to do: * When you’re using LINQ, use foreach * When you’re working with very large computed sequences of values, use foreach * When performance isn’t an issue, use foreach * But if you want top performance, use a for-loop instead"
&gt;don't do: private attributes e.g. private int \_nodes; &gt; &gt; &gt; &gt;Just call it private int nodes;
Put all the grades in an Dictionary to optimize index seeking! /s
I have found hosting [ASP.NE](https://ASP.NEt)T core within a windows service works well. The windows service will host kestrel and you can implement the background service and not have any issues. As for what you are trying to do, the approach is below. Note that StartTaskDate can come from a Singleton object or configuration, etc. In terms of your delay length, keep it short otherwise your start time won't be exact. &amp;#x200B; public class MyService : BackgroundService { public DateTime StartTaskDate { get; set; } protected override async Task ExecuteAsync(CancellationToken stopToken) { while (!stopToken.IsCancellationRequested) { if (ShouldStartTask()) { await MyMethod(); } await Task.Delay(500, stopToken); } } public bool ShouldStartTask() { DateTime currentTime = DateTime.Now; // Minute granularity. Will start if the current time is within a minute of start time. if (currentTime.Hour == StartTaskDate.Hour &amp;&amp; currentTime.Minute &gt;= StartTaskDate.Minute &amp;&amp; currentTime.Minute &lt;= StartTaskDate.Minute + 1) return true; return false; } }
You find scarce documentation about .net core 3 because it is still in preview. You would also need visual studio 2019, still in preview as well. https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-net-core-3-preview-1-and-open-sourcing-windows-desktop-frameworks/
I'd say, start small and write tests. Even after 15+ years, I find myself over thinking solutions. I've found the best approach is to get something working and then refactor refactor refactor. The tests keep you in check and allow the architecture to emerge. Don't plan too much around future features as you will most likely be over engineering. So sounds like you have a person class and a station class. Write some tests about how they should interact with each other and by themselves. Try to use the semantics of your domain whenever in doubt. You have an additional class that assigns workers to stations using an algorithm. That is a strategy pattern. Generally you can define the assignment interface and implement that interface in different ways to achieve what you consider optimal. Start with a naive assignment and work in more tests and requirements until it assigns workers in the optimal way. As to how you model the assignment, there are you could introduce a StationAssignment class that has references to Person and Station. Like I mentioned before, pick the model that fits the semantics of your domain. 
I hate that they omit it! _ for instance and _s_ for static forever!
Oh yeah that happens sometimes. You need to uninstall Visual Studio, restart, and then install Visual Studio again
Quartz.net is another option but hangfire looks better 
Don't write Nachbar and Node big they are private fields. Only if they are properties you should 
This is probably not the problem you're facing, but I just wanted to put this out here: if you're using mixed managed/native in the latest couple of visual studio versions and have an old pdb format then remote debugging might not work. In VS 2015 and before was an option to enable a compatibility mode, but I couldn't get it to work with the remote debugger.
I like how you camel-cased the word the Nachbar, which is German for neighbour. It would actually be addNachbar :)
How do you come to this conclusion? I think windows is as widespread as in murica. 
Check that you're not hitting the authentication wall before the breakpoints you've set?
Cheers, this was a console app.
No problem. Might help someone out in the future.
I haven't used Kafka but read about it, you should look into Kafka and confluent: [https://www.confluent.io/](https://www.confluent.io/) [https://kafka.apache.org/documentation/streams/](https://kafka.apache.org/documentation/streams/)
You won't get far in programming when you post on reddit for basic questions already.. 
`foreach` is a prettier, easier to read version of `for` for when you don’t care about the index and just want to iterate over the items in a list. In this case you want the index so you should use `for`. If you want it to be more `foreach` like then have this as the first line inside your `for` loop: var grade = studentGrades[i]; 
Yeah, and use it by prefixing it with "this". That way there's a clear difference between local variables and fields.
If you have 22GB, id be worrying about the project size other than the install size. Projects can take gigabytes of space alone.
Other than project size, you dont need everything it gives you by default. If you are just going for C# and nothing more specific, just select the .NET desktop development and deselect everything other than Blend, profiling tools, Just-In-Time and if you want to target above .NET Framework 4.6.1 then select the version you want. Oh and .NET Core if you want to target that. If you want UWP, select it and unselect everything which is optional + go into Settings -&gt;Update &amp; Security -&gt; For developers and change it to Developer mode (Im not sure how much space developer mode takes up but you need it)
Damn, perhaps I should invest in a hard disk. Laptop has an empty slot for that.
I'm just going for C# as for now, I'm learning from Pluralsight videos. I can install the rest later right? If I do need them?
Keep in mind, a lot of Visual studio HAS to install it self to C, not sure how much can go on other drives since it depends.
Visual Studio's installer will stay in the Start Menu's apps list, you can modify it at any time.
I can move my personal files and ~~porn~~homework to the new drive and make space in C. Thanks for the heads up.
Ok, thanks.
You don't need to use base. The inherited member is accessible without it. So it's just quantityOfSand directly. 
Having both the server and the client parts behind arbitrary soho nat equipment does not make problem free connections. Why not try to put the server side on some free tear cloud service (Azure app servive maybie?) For the beginning? 
I would take a look at this project https://github.com/Mimetis/Dotmim.Sync What they did is they create for every table a "tracking" table. When something changes the info will be written with a trigger into a tracking table. When you sync you just give to the central DB the info when you last pulled. This is a very basic summary.
You won't be able to run winforms or wpf on linux. Its not supported even on 3.0 version. 
Thanks but I'm afraid this wouldn't help, as I have several functions that depend on the type, and therefore I'd need several switch-cases, which is error prone
Thanks, this is sort of similar to what I've done, but instead of if (...), I'm using a dictionary&lt; Type, IBytesConverter&gt; that calls the appropriate interface
But then you end up using this. in your contractors. :(
Aside from the advice you've already gotten, I'd also suggest different naming of your namespace. First of all, it should not use underscores. Second, the usual naming of it would be &lt;ProjectName&gt;.&lt;Path&gt;.&lt;To&gt;.&lt;Class&gt;. If you're working on the solution Foo, which contains the project Bar, and you're working on a class called StringUtils, which you have organized under the directory Utils, it should be under the namespace `Foo.Bar.StringUtils`. Of course there's some exceptions to this if you have a very complex project, but in general it holds true. Namespaces aren't just a description of the contents; it actually affects the way `using` works. Of course, don't worry about this too much in the beginning. Learning the basics of programming is more important, but naming standards are important to learn eventually, and is one of the core things to know when working in a multi-people project.
Why leave Blend? :o
Microsoft SQL Server replication publications and subscriptions. You don’t need anything else. We’ve had 200+GB databases in sync for over 15 years using replication. It’s pretty much bullet proof. 
XAML and i think you need it for the Win32 UI editor too
graph.addNachBar since it is a method from that object you have to explicitly call it 
Why would this guy need xaml? Even if he did there is the built in editor. Definitely is not needed for win forms. 
You are trying to access tho method addNachbar of the class Graph, the program tells you that Program don’t have the method addNachbar. That’s because you are in the scope of your Program class. When you create an Object Graph it would look like this. Graph graph = new Graph(); graph.addNachbar(); 
Trending on r/csharp, I think learning basic principles of csharp first will help you in future.
I already stated that i dont know if blend is needed for Win32, or WinForms as some people call it. Also its his choice with what he wants to learn, personally i went with XAML because you can do much more with it.
``` long mickeyMouse = grades.length; int i = 0; while(!!!!!!!!!!!(mickeyMouse &gt;= 0 &amp;&amp; mickeyMouse &lt; grades.length &amp;&amp; mickeyMouse == mickeyMouse &amp;&amp; true)) { float _Donald = (long) (mickeyMouse - 1); Console.WriteLine("Grade : " + grades[mickeyMouse - _Donald + i]); Console.WriteLine("Student place : " + i); mickeyMouse--; i++; } ```
and there is no plan to support Linux in the future...
Instead of parsing MSDN, why not just use the machine-readable XML Doc that comes with the assemblies? I'm not sure if the path is the same across computers, but I found the docs for the .NET Framework in my computer at `C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.X`. They look something like this: &lt;doc&gt; &lt;assembly&gt; &lt;name&gt;mscorlib&lt;/name&gt; &lt;/assembly&gt; &lt;members&gt; &lt;member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)"&gt; &lt;summary&gt;Retrieves an array of the custom attributes applied to an assembly. A parameter specifies the assembly.&lt;/summary&gt; &lt;param name="element"&gt;An object derived from the &lt;see cref="T:System.Reflection.Assembly" /&gt; class that describes a reusable collection of modules. &lt;/param&gt; &lt;returns&gt;An &lt;see cref="T:System.Attribute" /&gt; array that contains the custom attributes applied to &lt;paramref name="element" /&gt;, or an empty array if no such custom attributes exist.&lt;/returns&gt; &lt;exception cref="T:System.ArgumentNullException"&gt; &lt;paramref name="element" /&gt; is &lt;see langword="null" /&gt;. &lt;/exception&gt; &lt;/member&gt; &lt;/members&gt; &lt;/doc&gt; 
I think their documentation is also available on github [here](https://github.com/dotnet/docs)
I was talking about WinAPI, the C/C++ based APIs, not the .NET once. Sorry for being misleading. If we are talking about .NET, I think it would be even simplier to use Reflection on types 
Come on, he would be building toy programs, no way it can take gigs.
Stay with the 600MB install, add features as needed (you can modify the install and add workloads later)
I find it extremely funny tat you wrote this despite nobody asking :)
I really doubt you won't have to recompile.
Is there anything specific you are looking for? FindWindow, SendMessge, ZeroMemory, et al? I don’t think there is any tool out there that parses it; what exactly are you trying to do? I’ve been writing c/win32 apps since the late 90s, let me know if I can help. 
Have you actually tried it recently? Blend is way better than VS to design user interfaces and manage bindings, resources and templating. Doesn't even come close in the VS designer.
I want to create bindings for these functions for a systems programming language automatically, so I won't need to do it by hand. I was thinking of parsing MSDN documentation programmatically and generate code in target programming language.
Never know, iv seen instances where people have messed up and ended up filling their drives. Also always do forwards thinking, dont think about NOW. (Thats probably why i never have issues and everyone else gets plagued with them)
Interesting. The closest thing I’ve seen _similar_ to that are WindowAPI spy’s that generate code for ya with the associated sendmessage commands. You may have to write your own tool to scrape the following: https://docs.microsoft.com/en-us/windows/desktop/apiindex/windows-api-list You just have to do it once tho - these APIs don’t change. Interesting! I wanna see your end product when you’re done if you don’t mind. 
*Hey just noticed..* it's your **1st Cakeday** TNMattH! ^(hug)
"1 2 3 4 5".Split(' ').ToList();
Hi: You must separate what is business logic (what it should do, i.e. verbs) versus what is information (business model). So, you must start with the model. You will need a table/model/entity for station and workers. ## workers: * idworker (primary key) * name * role // for example, role=1 fixed station, role=2 not fixed. ## station: * idstation (primary key) * name * idworker. (the worker currently using the station). But, you are saying that workers could get sick so: ## workers: (v2.0) * idworker (primary key) * name * role // for example, role=1 fixed station, role=2 not fixed. * issick And now, you will need some sort of registry to know who used which station. ## stationlog: * idstationlog (primary key) * idstation (foreign key, FK) * idworker (foreign key, FK) * startdate * enddate So it is a rough sketch but you could figure the rest (since you know the problem). 
About desktop: * Net core is still a subset of Net framework. Plus * Net core will not support desktop on linux or macos. So it is really useless to move to net core 
Okey! I'll post the result here, if I end up doing something good with this thing. I hope I won't forget to do it. :)
('&gt;')&gt; surely? ``` ? ```&lt;(' ')&gt;
What?
Yes. But the .net core devs are saying that using it increases runtime and startup performance..
 &lt;&lt;(&gt;&lt;) 
Have a common separator char so you know where to split. Like, a comma for example. So let's say your stringVar is "1,2,3,4". You'd go stringVar.Split(',').ToList(). Let me know if you need a more detailed explanation of how that works
&gt; "1 2 3 4 5".Split(' ').ToList(); You don't event need the char - just "1 2 3 4 5".Split().ToList();
When people are learning, I find it's less confusing to omit inferred usages. In this example it's better for OP to see the explicit use of a separator char so he/she understands what the code is doing and why.
What you're trying to do sounds sort of like the http://pinvoke.net project
Really it doesn't matter (for arrays). For and foreach produce almost the same IL for arrays. https://stackoverflow.com/questions/365615/in-net-which-loop-runs-faster-for-or-foreach/472258#472258
Yes, something like that, but for the other programming language. Do you know if PInvoke guys do the function signatures by hand or do they automate the process somehow?
Why not use an IValueConverter?
Win Forms is also not the way to go nowadays. WPF all the way!
What are you talking about? I’ve been a professional developer for 25 years and I don’t think I’ve ever had a project folder over 100MB. Even including enterprise applications I’ve developed. Care to elaborate?
Must not have been large projects then. Nuget packages, sdks can easily push package cache over gb. Building a large app also outputs 100mbs of output files. I saw a single symbol file (debug symbols) around 150mb.
Dont know the original post but it might have been about a library called Hangfire? 
It’s good practice to use base dot when accessing members from inherited classes, that way it’s easy to distinguish where values are coming from.
Yes! That is exactly it! Thank you so much!
Here are some pointers and discussions about the matchmaking itself [https://www.reddit.com/r/learnprogramming/comments/7rdlzf/how\_is\_online\_game\_matchmaking\_done\_from\_a/](https://www.reddit.com/r/learnprogramming/comments/7rdlzf/how_is_online_game_matchmaking_done_from_a/) From a development perspective, you could roughly use view it like this: "Lobby object" \- Adding people to lobby \- Removing people from lobby (disconnect) \- Collecting metadata like name, client version, ping times \- Maybe some info like how many games played, fair player, things like that &amp;#x200B; "Game history object" \- Collecting game statistics, how often did you win, how often did you lose your units, how many moves went the game, did you force close the client when you where about to lose \- Maybe running the AI in the background an weighting the movements of the players against an strong AI &amp;#x200B; Then you can autochoose or autolevel people to each other with this kind of metainformation.
Don't think so. The whole point of inheritance is to be able to extend and adapt as needed. Base fixes the member to direct parent effectively cancelling the inheritance principle. There are cases where explicit scoping is requested, but it mostly points to bad OOP design.
You could also parse the WinApi header files using [CastXML](https://github.com/CastXML/CastXML?files=1) and generating the code from the result
I've been programming for 30 years and I've found the programming communities I enjoy spending time in are the ones that accept questions from new people and respond helpfully like you have. Thank you for being awesome!
Let’s agree to disagree on readability vs ability to refactor code :)
Amen, brother.
I dunno, our 80 project solution really didn't hit more than a few hundred MB. The associated git repo tho, fuuuuuuck
I certainly have projects that amount to 1GB (these node_modules folders for the frontend man...) but these are professional projects.
I think they unfortunately do it by hand, or perhaps automated but only based on data in their wiki. So your method could be a significant improvement over that approach if it's doable.
I would add .net core support and do most of your coding in .net core if possible. 
From your sketch, yes it's pretty much what I want. The stationlog is something I also want, in some way at least, to know who's been where when. The primary/foreign key I do remember from the SQL lessons, hated it, but might be worth taking a look at again. The keys you mention, are they actual keys in C# (as in SQL) or is it a synonym for classes/objects etc?
&gt;So sounds like you have a person class and a station class. Write some tests about how they should interact with each other and by themselves. This is the feeling I have, how to put it in and what should be in each class, that's still something I need to think about. And testing with a smaller scope would probably good too as you say, not fully blow all stations and people into it at the beginning, but rather learn how to interact in between them first. I'm sorry, but what does this mean in a simpler way? &gt;semantics of your domain I'm mostly puzzled about the meaning of semantics, was even when my teacher explained it... Thanks for your reply!
Core is not a subset, and Core is where all new development will happen.
I develop dotnet core with rider on Linux Rider take 800mb and dotnet core 50mb 
It's ok. This is what we call learning. :-)
Are you using .NET Core? It's kinda messed up when I make a project but it gets fixed quickly. 
Asking the good questions, !RemindMe 1w
I will be messaging you on [**2019-02-16 14:49:20 UTC**](http://www.wolframalpha.com/input/?i=2019-02-16 14:49:20 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/csharp/comments/aorife/parsing_msdn_docs_automatically/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/csharp/comments/aorife/parsing_msdn_docs_automatically/]%0A%0ARemindMe! 1w) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
If you're on Windows, make sure your project folders are on a volume formatted with 4KB clusters. Anything larger makes node\_modules fucking enormous.
I hate this kind of bug. Try closing VS, reopen. If that doesn't work, try deleting the project and solution and starting a new one. 
We are in the same boat as you. Middlesitze C# app, about 30 hard designed business forms, but higher up dislikes installing Win10 in the future for just five apps that could easily run on a basic Linux. Our first experiments running the backend under Linux port of core 2.2 where quite successful. So we simplified the app, modularize it, added some REST to it so we could quickly attach some selected Angular forms for mobile. Worked like a charm *and* they liked the high turnaround times for new features of weeks to production instead of month. But its javascript, not C#. We tried some of the current offerings, like AvaloniaUI, but we wheren't much impressed with that. The MacOS port is lacking for us. \-&gt; [https://github.com/AvaloniaUI/](https://github.com/AvaloniaUI/) Now higher ups are asking why we don't go full javascript on the desktop, with something like Atom or React Native. But the C# devs are against it ;) There is also Xamarins Forms, that some of our devs tested, but he was annoyed by the boilerplate and new added levels of Api you would need to learn. [https://mindofai.github.io/Creating-Native-macOS-Apps-with-Xamarin.Forms/](https://mindofai.github.io/Creating-Native-macOS-Apps-with-Xamarin.Forms/) As long Microsoft doesn't want to port true WPF to GTK/MacOS, these questions and limitations will pop up. As it stays for now, we might give Xamarin another try depending how much the higher ups want to give our 20% MacOS customers a thumbs up.
The windows sdk contains headers and IDL files. You could possibly use those to get function signatures. I haven't messed with this stuff in a while but I remember using midl to convert from idl-&gt;c#
It entirely depends on what you do. Games, art based project, science projects and so forth can go into the multi terabytes. It's a very wide range.
that will work but it is inefficient. the efficient solution will depend on what you are doing exactly but you might want to use a set instead of a list. or if the lists are very small don’t worry about it
Yes right. To be honest, if Oracle had enough balls to develop Java and JavaFX to make it easier for junior developers, it would be the *best* cross platform option. But it's sad that they made it a huge learning curve. Very few want to learn JavaSE or even javafx now.. Android developers get a hard on for Java but don't realize that it's also dying. In near future I see new os embracing web more.
&gt;developer for 25 years Sounds like you and your team isn't continuously adding dependencies willy-nilly though.
Yeah the more efficient version would be to make a dictionary or a set of the valid ids from the second list.
This would work, but for stuff like this I would first take all the IDs from objects, then use Linq Intersect method and check that count is equal.
It basically means how you name classes and how you structure their relationship. For example using the term 'Performer' would be a bad name for a class in your domain but a good choice in a circus domain or a opera domain. The idea is to try and model classes and relationships as close to how they exist in the real world so that they correctly represent how a domain expert views the domain. This makes it easier to enhance and audit the model because you don't need a translation between the two.
My understanding is that the docs should be on [github](https://github.com/MicrosoftDocs/cpp-docs) as md documents. This is likely your best starting point at least since this is what they use as the source when generating [docs.microsoft.com](https://blogs.msdn.microsoft.com/vcblog/2016/11/08/visual-c-docs-the-future-is-soon/). 
What does the .csproj file have in it?
I would have used a [Join](https://docs.microsoft.com/en-us/dotnet/api/system.linq.enumerable.join?view=netframework-4.7.2) in this case. ids.Join(itemsList, id =&gt; id, item =&gt; item.Id, (id, item) =&gt; id).Count() == ids.Count();
I feel there are already some good answers here but I'd like to expand and clarify them just a little since you said you're a beginner. The top comment right now is this: "1 2 3 4 5".Split(' ').ToList(); This essentially defines a string, splits it into an array and then creates a new list based on that info. (Though converting it to a List is only useful since you explicitly asked for that in your post.) Assuming you'll use Console.ReadLine() to get your input, a version with intermediate steps and explicit types could look like this: string input = Console.ReadLine(); string[] pieces = input.Split(' '); List&lt;string&gt; list = pieces.ToList(); If you want to convert these strings to integers, you could do it with a standard foreach-loop: var pieces = Console.ReadLine().Split(' '); var list = new List&lt;string&gt;(); foreach (var p in pieces) list.Add(int.Parse(p)); but it's cleaner and easier to do it with Linq: var list = Console.ReadLine().Split(' ').Select(x =&gt; int.Parse(x)).ToList(); &amp;#x200B;
Well, parsing MD files is basically the same thing as parsing HTML files. I tried to search their github organisation for md files with function names, but couldn't find any (for example CreateProcessA). Maybe the docs for these functions haven't been posted on github as of yet. Or maybe search is not working for me.
I was thinking about that but it looks like Azure's free service is only temporary and it converts to a paid service after a year or something. And pricing is really confusing because I don't know exactly what services I'll need - I don't want to design a really nice service but not be able to afford to run it!
If you only need to know the boolean: bool containsAllIds = complexObjs.Select(p =&gt; p.Id).Intersect(ids).Count() == ids.Count(); &amp;#x200B;
was just following the books instructions 
Have you changed the signature of the Main method from PSV at some point?
Imo performance will differ, depending on the collection type. Isn't linq using collection specific methods for such things?
That select statement can just contain Int.Parse, it doesn't require an explicit lambda.
Good point! My brain is clearly in weekend mode, I'll edit the post.
Have you tried changing the method definition to “public”, i.e. “public static void Main”?
(although that is not optimized as well, for some reason.)
Shouldn't that list you are parsing ints into be a List&lt;int&gt;? I know it's a minor detail but it's just something that I noticed
I know obfuscation gets a lot of flak on these forms but this is still a cool project.
I blame the weekend and my laziness, fixed it now ;)
Do you want the 'Canvas.SetLeft' and 'Canvas.SetTop' static methods?
Can you elaborate? I'm not familiar with that. I assumed per the question that we were dealing with two lists, but I am interested in learning more about your point.
Generally not, but in some cases. Like, many LINQ methods soft-cast to `ICollection&lt;T&gt;` to get a count. 
There is a selbstversuch, too. Don’t worry about that as long as you Programm for yourself. 
Neither is a subset of each other, actually. 
Rider is the bomb.
Is that overload part of .net core only?
This is beyond science
Should work, but I'd prefer something like this as the performance is more reliable: var lookup = itemsList.ToLookup(item =&gt; item.Id); ids.All(id =&gt; lookup.Contains(id));
If forward enumeration is the only operation provided, your examine would be likely the most efficient for single lookups.
&gt; the more efficient version would be to make a dictionary or a set of the valid ids from the second list Careful with blanket statements like this. The fact is, in many scenarios - common and basic ones even - creating a dictionary or set will be less efficient than a linear search over a list. Also.. more efficient how exactly.. Does the dictionary method use less memory? It's also often misleading to view the efficiency of a small bit of code like this outside of it's larger context.
Isnt Blazor still in experimental? V0.8? Surely a book at this point is going to be outdated very quickly
The `select` method transforms `complexObjs` collection into an `ienumerable&lt;t&gt;`. Intersect returns any value in the `ienumerable&lt;t&gt;` that is also contained in `ids` (like an inner join in SQL). `Count` counts those returned values.
No access modifier = private, put public in front of the class and method. `public class` `public void Main`
Regardless of the collection it does this correct? If you are dealing with entity framework it'll be an IQueryable.
&gt; Can you elaborate? Consider the `Count&lt;T&gt;(this IEnumerable&lt;T&gt; items)` LINQ extension method. The general implementation will enumerate all of the items to count them and return a result. However, many implementations of `IEnumerable&lt;T&gt;` could provide a count more efficiently. `List&lt;T&gt;` for example has an `int Count {get;}` property and has no need to enumerate through the list to count the items. Here's the actual .Net framework source for `Count&lt;T&gt;(this IEnumerable&lt;T&gt; items)`, where you can see it checks if the source is an `ICollection` and if so uses the presumably more efficient `int Count {get;}` property: public static int Count&lt;TSource&gt;(this IEnumerable&lt;TSource&gt; source) { if (source == null) throw Error.ArgumentNull(nameof (source)); ICollection&lt;TSource&gt; sources = source as ICollection&lt;TSource&gt;; if (sources != null) return sources.Count; ICollection collection = source as ICollection; if (collection != null) return collection.Count; int num = 0; using (IEnumerator&lt;TSource&gt; enumerator = source.GetEnumerator()) { while (enumerator.MoveNext()) checked { ++num; } } return num; } 
https://dotnetfiddle.net/W5SZ5M
For classes, the default access modifier is internal. Method, constructor, properties and variables are private by default.
The smallest option is free for undetermined time. it has ots limitations, but for the beginning it could/should be enough. Having both client server behind soho NAT could be a real pain
 var hashedIds = ids.ToHashSet(); foreach(var complexObj in complexObjs) { if(hashedIds.Contains(complexObj.Id)) continue; return false; } return true; This would be a better implementation of what you have I think (time complexity-wise, anyway). You only iterate `ids` once, and at worst case `complexObjs` once.
Ok sure good to know, but can you run the program if Program is internal? (I don’t ever leave the access modifier unspecified)
You will need to add .Distinct for that to work with duplicates.
Yes, it should work. You should be able to create a new console project (with unspecified access modifier) and run it as is. I also don't like to not specify it, that's why I personally like to change all the classes templates and snippets to include them.
that's true
That’s a fair point. I meant efficient in terms of time complexity. Memory would be double for the set/dictionary version. And this type of optimization is ripe for being premature. Unless your lists are large or this happens often, it’s probably not worth changing.
Better push the book out while Blazor still exists
Nice catch
Server-side Blazor (aka Razor Components) is going to be part of ASP.NET Core 3.0. Most of the knowledge developers gain using that will be transferable to client-side Blazor when (hopefully) it hits 1.0. Most of the stuff I've read on the topic recently suggests that Microsoft thinks Blazor is promising, but its progress has been slowed down by the immaturity of Web Assembly.
Now do it without using Split()!
I prefer the explicit syntax, especially for a beginner. 
 var list = Regex.Matches(Console.ReadLine(), "-?\\d+") .OfType&lt;Match&gt;() .Select(a=&gt;int.Parse(a.Value)) .ToList();
So Console.ReadLine().Split.ToList()
A most under-appreciated post. 
What's your database server. This problem is already solved by pretty much all databases. 
Sooo does this confirm blazor is going to continue to be a thing? I've put off learning it because I didn't want to waste time on something that could be discontinued
We are. Are you talking about the entire git repo size? I've had them go past 1GB when storing massive amounts of changing content, but that was website content, and storing ALL assets.
Compiling the entire [ASP.NET](https://ASP.NET) Core framework... Sure that results in a 1.7GB project folder. 1GB is that is the compiled unit tests. The largest PDB generated is 450KB. All generated PDB files together are only 21MB. &amp;#x200B; Unless you are building games with tons of digital assets, a beginner should not be warned that a project folder is going to grow so large. That's just silly. &amp;#x200B; Your comment about a 150MB PDB file is way off base.
I agree and like your tone. Have a silver.
No. Put it in a variable first, validate it, null check etc, then split it 
That's one thing, but in my mind the larger difference is that the abstract class can contain implementation code. Interface is just the contract of method signatures. 
It's gonna be fully intergrated into [ASP.Net](https://ASP.Net) Core 3.0. However, so far they've managed to only add server-side Blazor.
 string[] s1 = { "one", "two", "three", "four", "five" }; string[] s2 = { "one", "two", "three", "five" }; var except = s1.Except(s2, StringComparer.OrdinalIgnoreCase); if(except.Any()) { foreach (var item in except) { Console.WriteLine(item); } }
I'm guessing you recently installed visual studio. You need to open visual studio installer, and make sure Net core Development is installed
This post is spot-on! I also like to add in StringSplitOptions.RemoveEmptyEntries, which handles issues like a second separator in your list between two of the values you care about. Something like this from the microsoft example: result = s1.Split(charSeparators, StringSplitOptions.RemoveEmptyEntries);
Does anyone know how to make SEO-able pages with Blazor - I've been trying to investigate, and not had much luck... This would be server-side rendered HTML meta tags, H1's etc... Any links would be welcome
Why would it disappear?
I never said a beginner has to worry about, I was pointing out that some large apps can easily go over 1gb in the project folder when you compile them. Btw I wouldn't put asp.net core source in that very large app category. As for large PDBs, I can assure you they occur especially for native code. Here is an example https://stackoverflow.com/questions/4015316/whats-a-reasonable-size-for-a-visual-c-pdb-file
without doing it: i think there should be an out of bound exception (is it called that way?). because the method will try to make use of an array that does not exist.
The Claas Nerds toll bei Stativ too.
Quartz.net and Azure Webjob SDK are other options, depending on your infrastructure/desired feature set.
Just Can't Break The Habit ;)
Since it’s C and C++ you’re looking for why not just parse the headers? The functions are all already defined there so generating a wrapper shouldn’t be super complex. 
I didn't do it either, but I was getting at the use of static vs instance methods, moreso than the actual content of the method. I suggest you giving my suggestion a try mate.
So we meet again, Satan. I thought I'd seen the last of you when they exorcised you from the cubicle next to mine.
I've heard that Mono has an compatibility implementation of Winforms for Linux using GTK. Did you try that?
Again, you’re going into edge cases that are simply confusing and scaring a new dev. Disk space is not an issue when learning c# .net. 
I appreciate the kind words, 🍻
Server side Blazor is like an amusement park without the rides.
Sorry, I couldn't answer right away. Basically what /u/quentech said. My assumptions come from this and that different collections have different optimizations for searching by value. We don't search by value here though, so my bad. But at least counting will be easier on types imlemening ICollection
I would welcome this in so many ways. If I could do away without having to go down another javascript-library rabbit hole I would feel like I won the lottery. 
To go a different way, I would think about having a loop to grab multiple values from the user until you get back either nothing or a predefined exit phrase. Then, each iteration of this loop adds the value to the list at that time. Gets rid of needing to do splitting, but does change the ux which may or may not be what you want. This also allows you to validate each input at entry time (for example, if you only wanted numbers entered, display a message if they input characters and don't add that value to the list). I just wanted to put in a different perspective to show the different ways of tackling the issues. 
This is a 10 line starter program. But sure 😂 All you need for null check is to add a ? before .Split. And thinking about it... I do not believe ReadLine() will return control until it's read something. How could you type null? You could type empty string or whatever, but you can still put that in a list
The example data only includes numbers, but validating for into was not specified. Presumably they're going to output to console at some point since it's a console app, and will be treated as string there
I've played around with the preview versions, and I'm never touching JavaScript again. 
you say that now...
Now do it without regex or Linq! 
It has all of the same functionality, it just depends on whether it's a fit for your use case. &amp;#x200B; We're testing it out at my office as we port some old support tools to the web and it's been a great experience.
There is a Nuget for SytleCop.Analyzers which is a modern take and pretty good. There is also the Roslynator project but I haven't played with that.
Gotcha. Thanks! 
 List&lt;int&gt; list = new List&lt;int&gt;(); StringBuilder sb = new StringBuilder(); foreach (char c in Console.ReadLine()) { if (c == ' ') { list.Add(int.Parse(sb.ToString())); sb.Clear(); continue; } sb.Append(c); }
I’m on mobile, so it’s hard to give a full answer to this. But no, there are quite a few mistakes. - in the AmountSand class, the Sand property is backed by a field called “amount”. Change the field to be “sand”, the same name as the property but with just the case changed. - AmountDirt should not inherit from AmountSand. What you’re saying is that an amount of dirt is a special type of amount of sand, which is not true - dirt and sand are two different things. - the CompareTo method should do the comparison in your instructions, ie checking the amounts are within a certain percentage of each other. I don’t see that logic here or anywhere else. - you haven’t overrides Equals, nor overloaded == and != as your instructions say you must. Personally, I would have just one class called Sample. It will have two properties, Clay and Sand. (There is scope for each of these to be of type PositiveDouble, a class you will build which has your setter that prevents negative values, but the instructions don’t mention this so I’d leave it out for now.) The CompareTo method must compare the clay and sand of this sample and the other sample to see if they’re within the specified percentage. The instructions don’t specify how to decide if one sample is greater than another if they’re not equal, so you’ll need to decide how to handle that yourself. And then finally, there’s the Equals, == and != - it may be that you just haven’t started those yet so I’ll leave you to figure them out!
You're hired! 
Didn't even know about \*that\* issue. &amp;#x200B; \[I started working on a different replacement for Hangfire,\]([http://github.com/to11mtm/oddjob](http://github.com/to11mtm/oddjob)) after finding their code base a little too obtuse for my liking. HF looks great when you read the docs, but when you have more than trivial uses the cracks start to show quickly.
Just for the sake of variation, here's an alternative method that no one has mentioned yet: `itemsList.Select(i =&gt; i.Id).Distinct().OrderBy(i =&gt; i).SequenceEqual(ids.Distinct().OrderBy(i =&gt; i));` Can be optimized if you know there won't be any duplicates or if the lists are pre-sorted.
Sonarqube is pretty good.
When do I start? How's the pay?
It's not an official product yet. It's still in the experimental phase and can be dropped by MS at any point.
&gt;Title says it all. It really doesn't.
You don't seem to be accounting for `if(this.Weight == comp.Weight)`. Also, double check your set statement for Name.
No, I say that because JavaScript is a poor language. Proper type checking, reusability models on both sides of the client server interface, and proper development environments are a huge boon. The only reason I've ever used JavaScript is that there was no alternative. Client/browser side c# changes everything. 
😂
You used to program Java, didn't you? I say this because your example reminds me of Lombok. Attributes in C# work VERY differently. In the C# world Attributes are *explicitly intended for runtime use*. IOW 99% of them do nothing without other code at runtime doing so. That said, you can do some interesting 'weaving' at run-time. If you'd like a somewhat real-world example of how to use reflection to do so, [here you go](https://github.com/to11mtm/EasyEquatable/). No, it's not the most useful example, but it does show how you can do some nontrivial things. *That said,* there **are** attributes that impact compile time. [ConditionalAttribute](https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.conditionalattribute?view=netframework-4.7.2) is the one of the few that comes to mind. Yes, you CAN do some things with Roslyn around attributes as well. But it's not something you'd want to do unless other options such as Runtime attribute application or T4 Template (ab)use doesn't do the job. I wish I could provide some good examples, but the most I've done with Roslyn is analysis without any 'changing' of the code (worth mentioning that technically you don't change the code, but rather [create a new syntax tree from the old immutable one](https://stackoverflow.com/questions/26458782/how-modify-source-code-using-roslyn)). Hope at least some of that helps...
Your title is not as explanatory as you think it is. You need to outline the requirements in detail. Is it a command line tool with arguments? What should those arguments be? How are files selected? Are they found in the current directory? Are they found in a directory based on the command line parameters? Should it search all subdirectories or only the top level directory? Should folder structure be maintained if it searches subdirectories too? I'm assuming you only intend to select files from a single top-level folder but assumptions are dangerous and expensive when writing software. Should it move files, copy them, or have the option for either?
What’s the “string value”? Do you mean the original file path? The title really doesn’t explain what you’re trying to do. If you have a path to a file that you want to copy somewhere else use https://docs.microsoft.com/en-us/dotnet/api/system.io.fileinfo.copyto?view=netframework-4.7.2 Here’s an async Version: public static async Task CopyFileAsync(string sourceFile, string destinationFile) { using (var sourceStream = new FileStream(sourceFile, FileMode.Open, FileAccess.Read, FileShare.Read, 4096, FileOptions.Asynchronous | FileOptions.SequentialScan)) using (var destinationStream = new FileStream(destinationFile, FileMode.CreateNew, FileAccess.Write, FileShare.None, 4096, FileOptions.Asynchronous | FileOptions.SequentialScan)) await sourceStream.CopyToAsync(destinationStream); }
Tutorial makers: go forth!
I don’t see a major problem with the setter for name. It seems to be checking it hasn’t already been set, so it can only be set once. (I’d prefer an exception rather than a silent failure. And I’d also prefer a constructor, and a read-only field or property, but OP is clearly learning, and may not have learned about those things yet.)
This is why you use Node with TypeScript. Everything better and every pro you mentioned.
Are you sure you want to implement `IComparable` instead of `IComparable&lt;T&gt;`?
Off the top of my head, I believe [OOUI](http://ooui.mecha.parts/) and [Uno](https://platform.uno/) are doing WebAssembly in dotnet outside of Blazor.
Lol what else do you need to know? Do i need to tell you the string value? Or the destination folder? Simply trying to move all files that have a certain string value to a consolidated folder....
Yeah...but I don’t see a reason why it would be dropped unless they come up with a better solution for this space.
I have files all on my hard drive that start with the string video some are pictures others are videos. I just want to put them in to one folder. Dont know how to start
thanks for the feedback and the documentation. the inheritance from sand to dirt classes is a hw requirement. &amp;#x200B;
yeah the generic is fine
The free option says it's only for development/testing though - could I get in trouble for running a live service on it?
I agree with everything in your parenthetical remark. I also think that if the OP has progressed to the point where they are implementing IComparable then they should also be thinking about how to construct classes, so my "double check" comment was meant as a hint.
Parsing C/C++ headers is insane. I would recommend that to my enemies.
constructor is not allowed, so cannot use a read-only therefore :/
except people can just ignore typescript and when you work in a team full of dolts, it's just a losing game
I would recommend this book: &amp;#x200B; Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems by Martin Kleppmann &amp;#x200B;
Ah, right. Panels behave differently. In a grid you use the Margin on items. The item tells the grid what kind of space it would like to have. With canvas, the panel decides absolute position, and you use an attached property for this. u/Yuuki_minoru is correct. In XAML this would be: &lt;Canvas&gt; &lt;Button Canvas.Left="10" Canvas.Top="20" &gt;Hello&lt;/Button&gt; &lt;/Canvas&gt; Programmatically this would be var button = new Button { Content = "Hello" }; canvas.Children.Add(button); button.SetValue(Canvas.LeftProperty, 10.0); button.SetValue(Canvas.TopProperty, 20.0);
You can set it to be strict in config? 
It could be any number of reasons. They could decide that the tech just isn't viable. Or that mono WASM won't reach size requirements in a timely manner, or they decide to go all in on Node, or management changes, and so on. Microsoft knows the implications of supporting an official product. Until they're absolutely sure they're willing to go down that route, we can't assume Blazor will be supported beyond tomorrow.
and someone can check-in a change to remove it - when that guy is the VP or architect... welp, I guess it's time to move on!
I've been playing around with SVGs lately. That's a really interesting project.
If someone isn't willing to adhere to set out coding standards what is even the point of working with them in the first place. Blazor imo won't touch the JS/TS use case for a very long time if ever.
By the way, should I post a link to my GitHub project (like today) or a screenshot with all the recent additions (like last week)?
Not really an answer to your question but... In a recent [community standup](https://www.youtube.com/watch?v=WmDXgO0f-MQ&amp;t=54m48s) it is mentioned that they are working on a "Pre-Rendering Stack" that will make it SEO-friendly. 
According to Daniel Roth: Blazor (as in, the browser/WASM bits) won't ship with 3.0 but "will ship some time later. we do plan to ship it, we just don't have a concrete ship date yet, we don't have a full roadmap as to when that will land." https://www.youtube.com/watch?v=WmDXgO0f-MQ&amp;t=48:37 Razor Components != Blazor
NoImplicitAny in config?
I use unlimited version.. i didn't see any problem so far..
no "any" or making everything "any" is essentially the same thing
Removed: Rule 4. Here are some functions that will probably help you. Dive in and give it a shot. If you run into specific issues, feel free to post a new thread but include code of your attempt and what worked and didn't work. (Also, be sure to have a backup of all your files!) https://docs.microsoft.com/en-us/dotnet/api/system.io.directory.getfiles?view=netframework-4.7.2 https://docs.microsoft.com/en-us/dotnet/api/system.string.indexof?view=netframework-4.7.2#System_String_IndexOf_System_String_ https://docs.microsoft.com/en-us/dotnet/api/system.io.file.move?view=netframework-4.7.2
 Ok, i'm gonna be Mr. Pedantic Guy, regarding Blazor lingo. If you already know this stuff, great. Otherwise, i'm hoping this will clarify things / save some confusion: Razor Components is the Component model. The same Razor Components code will be used on the server &amp; client. Razor Components isn't the "experimental" thing. It's "just" a new way to do things, more akin to Razor Pages than anything to do with WASM. This will be shipped with Core 3.0. The "experimental" part is indeed Blazor - the client-side WASM runtime that renders your Razor Components. There's no such thing as Server Side Blazor. Blazor = "Browser + Razor". Razor *Components* specifically. Razor Components can be hosted on the server or on the client, Blazor is how they are hosted on the client specifically. I think this mixup comes from the fact that "Server Side Razor Components" or "ASP.NET Core Razor Components" etc lack a catchy name, whereas "Blazor" has been around from the start as a catch-all for the project. Couple handy images from a recent [blog post](https://blogs.msdn.microsoft.com/webdev/2019/01/29/aspnet-core-3-preview-2/): https://msdnshared.blob.core.windows.net/media/2019/01/blazor.png https://msdnshared.blob.core.windows.net/media/2019/01/aspnet-core-razor-components.png Daniel Roth &amp; Jon Galloway go over the relevant parts of the linked blog post in this [community standup](https://www.youtube.com/watch?v=WmDXgO0f-MQ&amp;t=15m40s) @15min40s --- Bonus for those who put up with my rant: According to Daniel Roth: Blazor (as in, the browser/WASM bits) won't ship with 3.0 but: &gt; [...] will ship some time later. we do plan to ship it, we just don't have a concrete ship date yet, we don't have a full roadmap as to when that will land. https://www.youtube.com/watch?v=WmDXgO0f-MQ&amp;t=48:37 
I mean you can block JS code and type any.
Nobody cared on your first 5 accounts, and they won't care on this one either. More spam from fake lawyer and admitted pedophile ltgerome/vevnicc/mikeeusa/mikeeusa0/gameroflibre, who quotes scripture to defend the rape of children Report the account as spam [here](https://reddit.com/report) and he'll eventually give up. He's already been through at least 4 other accounts
If this is the environment you work in... I feel very sorry for you.
It is almost always better, to return the CompareTo() method of the member being compared. That way, if you end up changing the class of Weight, you don't change the ComareTo method. `return this.Weight.ComareTo(compt.Weight)` Also, I would implement IComparable&lt;AmountDirt&gt;. That way you catch incompatibilities at compile time, rather than run time.
If you are going with that argument, then I can say anyone can write shit code in any language.
That's a huge step up from straight JS, but a huge step down in language functionality and tooling from any of the .NET languages. 
I love dot memory (jet brains, part of Resharper subscription). It really sped up finding what was causing a service to consume massive amounts of memory. In that case it was not a leak but a badly written etl function that ended up with two copies of everything in memory (and when it broke was trying to hold 1mm objects in memory)
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/dotnet] [Scarp 0.2.0. Second release of my first open source library.](https://www.reddit.com/r/dotnet/comments/ap0ndg/scarp_020_second_release_of_my_first_open_source/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Data integrity during runtime. Acvidentially shifting an index further down... and there is a big buhu.
BTW, having setters (Name, Sand, Clay) that silently do nothing is a bad idea. It is going to create a lot of headaches in later debug. Likely you want to throw an error that you got a bad value or name is already set.. Also, dirt isn't a special type of sand, so dirt shouldn't inherit from sand. Also, not sure where 'weight' is defined. Did you mean 'clay'? Also the return inside the if(obj is ...) Should be return this.Weight.compareto(comp.weight) Get rid of that if else..
You've posted this everywhere you can. People, check his post history, report for spam, and move on. Oh, and here's a little something if you still think he's an okay fellow: https://np.reddit.com/r/opensource/comments/am6xhj/host_agrees_to_dmca_takedown_of_gpld_work_after/efm2bd5/ Oh and btw this guy, mikeeusa, LtGerome, GamerofLibre, and Vevnicc are the same person, a spammer. (Oh, and thanks for the shoutout, the GPL is non-revokable after I clone the repository)
Alright, you know what? I'm tired of this shit spewing from you every waking hour of the day. Yes I am. So here's my response to your post: https://old.reddit.com/r/freesoftware/comments/al4rjr/lkml_dmca_takedown_request_to_github_regarding/ https://old.reddit.com/r/COPYRIGHT/comments/al501e/lkml_dmca_takedown_request_to_github_regarding/ https://old.reddit.com/r/linuxmint/comments/alc274/lkml_dmca_takedown_request_to_github_regarding/ https://old.reddit.com/r/devops/comments/alc8pr/dmca_takedown_request_to_github_regarding/ https://old.reddit.com/r/github/comments/alceii/dmca_takedown_request_to_github_regarding/ https://old.reddit.com/r/Ubuntu/comments/alcju8/lkml_dmca_takedown_request_to_github_regarding/ https://old.reddit.com/r/technews/comments/alcmpr/lkml_dmca_takedown_request_to_github_regarding/ https://old.reddit.com/r/opensource/comments/alcpr4/gpl_revocation_opensource_author_sends_dmca/ https://old.reddit.com/r/programming/comments/alcssa/gpl_revocation_vs_a_john_doe_dmca_takedown/ https://old.reddit.com/r/linux/comments/alczpl/opensource_author_sends_dmca_takedown_request_to/ https://old.reddit.com/r/tech/comments/ald4o6/opensource_author_sends_dmca_takedown_request_to/ https://old.reddit.com/r/linux_gaming/comments/aliku3/lkml_dmca_takedown_request_to_github_regarding/ https://old.reddit.com/r/slashdot/comments/aljb72/lkml_dmca_takedown_request_to_github_regarding/ https://old.reddit.com/r/IBM/comments/ami2f6/host_agrees_to_dmca_takedown_of_gpld_work_after/ https://old.reddit.com/r/voidlinux/comments/amlxdi/host_agrees_to_dmca_takedown_of_gpld_work_after/ Tell me, how does this have anything to do with IBM? Linux gaming? It's a 10 year old casino project that nobody uses, and if anything, it's *you* who is Chicken Little here, making a mountain out of a molehill because you can't stand being wrong. You're a pedophile who can't stand being wrong and insults everyone if they try to offer a counterargument, since you're so closed-minded. To [quote you](https://www.reddit.com/r/opensource/comments/am6xhj/host_agrees_to_dmca_takedown_of_gpld_work_after/efm2bd5/): &gt; I HATE that you scum banned men from marrying cute young girls forever ago. Motherfucker, you're insane, and you're going to learn that today. Not only did you assume that I'm white (I'm not), you also assumed that I'm catholic (I'm not), and that I give a shit about anything you say. You're wrong. You're so wrong that I'm going to make sure that everyone else knows that you're wrong too. In that same post I just referenced, you asked someone for what city/state they lived in. Gee, that seems like the smart thing to do. To give a pedophile keyboard-warrior who gets angry and calls someone a "woman-worshiping white FAGGOTs" my address would only make my day. Fuck off with your less-than-subtle tactics at doxxing people, we can see through it. Btw [here](https://www.reddit.com/r/opensource/comments/am6xhj/host_agrees_to_dmca_takedown_of_gpld_work_after/efmf7w0/)'s where you're assuming that I'm a catholic white man. For all you know on the internet, I could be the exact opposite, an atheist Latina woman (I'm not though), and let's face it, you'd have responded the same way, finding some way to condescend me and try to hit me where you think it'd hurt. &gt; Wishful thinking on your pro-women's rights pro-women-control-of-opensource (which men built) part? You FUCKING PIECE OF FILTH. ([Source](https://www.reddit.com/r/opensource/comments/am6xhj/host_agrees_to_dmca_takedown_of_gpld_work_after/efm2bd5/)) Okay wow. Let's look at the [FSF's members](https://www.fsf.org/about/staff-and-board). You know, the ones who practically *made* the GPL that you keep ranting about because you're so insecure and can't handle being wrong on the internet. &gt; Jeanne Rasata, Assistant to the President Oh wow, look, a woman. I guess she's secretly a man, since there's *no way* that a woman could have possibly contributed to open source! &gt; Molly de Blanc, Campaigns Manager Same thing. So many crossdressers on the FSF, must be a trend. &gt; Dana Morgenstein, Outreach &amp; Communications Coordinator Gee, with a name like "Dana", he must have really wanted to trick us into thinking that there are women on the FSF, and in powerful positions that deal with how the world sees them! Oh, and the most ironic one of all: &gt; Kat Walsh &gt; &gt; Kat Walsh is a copyright, internet policy, and technology lawyer. She was most recently at Creative Commons, where she was one of the drafters of version 4.0 of the CC license suite, and previously worked for the American Library Association in their information technology policy office. Kat came to the free software community through free culture. An early Wikipedian and advocate for free cultural works, she was on the Wikimedia Foundation board of trustees from 2006-2013 (Chair 2012-13), where she advised on strategic, policy, and legal issues, and currently serves on its advisory board. She is also on the board of the Xiph.org Foundation. Kat holds a J.D. from George Mason University School of Law and a B.A. from Stetson University; she is a member of the Virginia State Bar and the US Patent Bar. With your misogynistic views, of course you forgot that the laywer, the one who would have been most likely to work on the GPL itself is a *woman*. You're backing a woman's views. *How scary*. Why don't you contact her if you're having issues with the GPL? I'm sure she'd be happy to help as long as you don't realize just how much a piece of filth you are, a stain on the earth that you've become. If you claim to be a lawyer, I want to make sure that you're never my lawyer. /u/LtGerome or /u/Vevnicc, if you're ever doing any kind of law in California, let me know. I want to stay as far away from you as I could possibly be (and yes, I know that you're going to try to use the fact that I live in California against me. Go ahead, do your best).
Some thoughts about my behavior recently: I've been very misogynistic lately and I'm sorry about that. It's stupid on my part to think that posting on dozens of subreddits at a time and calling people slurs (as well as admitting to being a pedophile) would help anything progress. I've also lied about being a lawyer and what-not, and I've done stupid things. "JohnDoe", /u/comphacker, Leigh Honeywell, Alex "Skud" Bayley, and the entire Geek Feminist collective, you guys have my blessing to take my code and use it as you like. To quote YHWH: &gt; There is neither Jew nor Greek, there is neither slave nor free, there is no male and female, for you are all one in Christ Jesus. ~ Galatians 3:28
Shit: 13 years later, I'm still in the prerequisites phase (my LINQ fu is weak). 
Because everything else sucks more. There's a lot to dislike about C inspired syntax, but that's what we're stuck with. 
No. It is only performance limited. 
1) personally I love it for the versatility, I can write a web app, a service, a library or NuGet package, a web api, a desktop application, a console application, embedded software etc etc. the list is long for the amount of stuff this language can do on its own, that is why I like it. I can stay in one language and do a wide variety of applications all in the same language. 2) I don’t know anything about this, I’ve never heard of a c++ comeback. Most developers I know that work with c++ typically only do so because of some legacy application that they don’t have time to convert. 3) I don’t really give much thought to this, and wouldn’t really know the ins and outs of either to be able to tell you. 
Hmm why is xunit not preferred over nunit when it comes to core? Even MS switched to it. 
1. Actually no, bcz I use not C# but I like it and IMO C# is very good modern lang 2. No, C++ is bad designed lang, Stroustrup boasted that he knew the language he had invented 70%. This is the best anti-advertising, better to avoid such lang, we need clean understandable bug free software 3. difficult Q. I think strongly typed langs are strongly PRed nowadays. But after decade they will retreat into the shadows again bcz more intelligent compiler can work without any type hints getting from the developer. &amp;#x200B;
Excellent work . I think you should also add a section for ORM's like Dapper, LLBLGEN Pro, .. etc
1. C# is my favorite language because: 1. It makes sense to me. 2. I can operator overload, which is something I cannot do in Java. 3. My favorite game engine uses it. (Unity3D) 2. I think it will be mixed. I believe this because C# is a great language. C# spans across different aspects. It is good for people starting because you can do `var` when getting objects that are returned. And good for experts because it allows the use of pointers. JavaScript will have staying power because it is a python-like language that is meant to run on the web. C++ is still going to have some staying power because: 1. It compiles down to machine code. 2. It runs faster than managed code in pretty much every case. 1. I say pretty much every case because there might be a few instances where C# will beat C++. 3. A lot of programs are written in C++. 3. I prefer strongly typed over weakly typed because: 1. I know what object I am dealing with. 2. If I messed something up somewhere, the compiler will most likely get it so I do not have to deal with a runtime error. 3. It just makes sense to me. &amp;#x200B;
Excellent work . I think you should also add a section for ORM's like Dapper, LLBLGEN Pro, .. etc Also try to make the image fit to screen like the original repo web developer roadmap, I couldn't view this by any way on the site so I had to download it 
Why is Design Patterns all the way at the bottom? IMO, Creational and Structural patterns are concepts most mid-tier developer should be familiar with before they get to concepts like DI or IoC. 
If the job requires C# knowledge. Then do the test in C#, they probably review the code you wrote.
Thank you 
I’ve recently done a few interviews, you should invest time in efficient ways to solve things. For example using LINQ where possible.
And have to continue to use npm? No thanks
Don't try and second guess the intetviewers. If they want a C# dev, don't code in another language during the process. They won't care if you wrote their tests in c++ or 'X' language.
Do we really need any ORM other that EntityFramework? What DBMS providers is missing for EF?
Why? Its the same as nuget, without annoying things like binding redirects.
I do. But I use visual studio 2019 and it doesn't give me an option for .net framework.
I only made a new project and run it.
I did, public static void main(), static void Main(), private static void main() etc
Tried. Does not work!
I disagree on var being good for beginners. The use of var by those who do not know what they are doing can promote bad programming habits. Until they really understand what they are doing beginners should be explicit at every step of the way. 
Try setting the Main method as public
of course wee need, man. EF Core is good but still in progress, many other orm's beat it when it comes to performance like dapper , and for functionality there LLBLgen pro which it's a whole different story . so again yes for many casess ef in not enough. &amp;#x200B; and for missing providers it's oracle
Excellent road map but very ambitious for a year. Most developers spend their career learning the path you've outlined.
Presumably the singleton pattern is a must know so you can avoid it at all costs?
We have a DevArt for Oracle, but all I guess you’re right about others.
I can see both sides of the coin. On one hand, being certain you won't get a compile-time error is good for a beginner because they do not have to know the full name of `System.IO.Stream` or know that `Stream` is located at `System.IO`. Yet I also see why it should not be used for beginners. It kinda comes down to python style. Using var is like creating a variable in python with 1 extra step. For me, I would suggest to beginners to not use `var` as I am in favor of strongly-typed script creation. But that does not deny the fact that using `var` is helpful for someone just starting with C#. As a side note, I HATE Python.
Isn't it kind of heavyweight if you just need to call stored-procedures with nice syntax?
Happy Cake Day HydrA-! Today you are you, that is truer than true. There is no one alive who is youer than you.
What in the bloodiest hell imaginable by a human being? Why it doesn't give you an option to use .NET Framework?
 DevArt is really good but paid options comes with extra benefits not when there is nothing else. it's like paying to just take a breath if you want to use ef with oracle
I think you have the right answer. I didn't installed the .NET framework. Thank you for the answer! 
Ha ha same. 
1) 90% of the stuff that I need to do is easier to do than in C++ or Java. Hard stuff is harder and icky than in C++, but the productivity 90% of the time win compensates for it. Also, sane handling of dependencies; get some precompiled DLLs for the correct runtime and it works (as opposed to C++ where compiler versions, flags, etc. all must match). And strongly-named assemblies FTW. 2) I don't know. Given performance improvements in netcore and addition of vector intrinsics, I'd now choose C++ over C# for one of the two reasons: a) performance is absolutely, critical, b) libraries I need exist only for C or C++, c) I want "obfuscated" output. 3) Strongly-typed, always. I cannot imagine using weakly-typed for a project that has to evolve and being maintained over a period of 5+ years. Except for personal toy projects, every program lives longer than originally planned.
you have perfectly said my story
Does this apply to .NET core? What's the difference between .NET core and ASP.NET core? Are they the same? 
No problem. Sorry for the downvotes, I'm trying to help with that ;)
Aww thank you /u/EncouragementRobot, you're the best!
var is still strongly typed. The compiler just infers the type for you. 
Actually, there is no big difference between test frameworks but you right, MS now uses xUnit internally and this should be replaced. Also, we've forgotten Moq and this why we make that a public repository to make it better by other developers idea ;) We add it soon. Thanks!
As someone who's been doing this 20 years, here's some advice: You are going to have to learn small amounts of all of these in parallel - you won't be able to 'finish' one and move on to the next Databases - read up on why you would use sql over nosql, pick the one relevant to you next project and use it. Don't try and learn all the different types of database, just learn about what they offer DI - learn about what it is and why you use it. The built in DI container in aspnet core will do 99% of what you want. Caching - learn about why you use it and go from there Testing - this has to be much higher in the list. We hire devs and testing is a requirement - knowing how EF works isn't. Learn about the test pyramid, and how to test. Ignore BDD - you don't need it. Pick a test framework and use it (NUnit or XUnit - MSTest is poor). Mocking - look at Moq Task scheduling - do NOT do this in a website - just because you can, doesn't mean you should Design patterns needs to come higher up the list - don't try and learn them all at once - learn them as you go. Learn why you should never use Singleton And unless you're only ever going to build api's, learn css, html and javascript too. The amount of developers I see who can build a backend, but know sweet f.a. about how it gets presented to the user As someone else said, that's an ambitious list for a year, even if you follow my advise and cut a lot of it out Hope that's useful
Thanks man, It's OK as long as we trying to get thing better :)
We're going to add all design patterns ( including Creational, Structural, Behavioral ) and already we have its pull-request but the graph for it is not ready yet: [https://github.com/MoienTajik/AspNetCore-Developer-Roadmap/pull/7](https://github.com/MoienTajik/AspNetCore-Developer-Roadmap/pull/7)
I think it all depends what one's definition of "learning" a technology is. If it means you've read the documentation and maybe done a quick test program with it, you could maybe get a good way through in a year. If it means having the ability to write production code in the technology quickly and teach the code to others, then it's a pipe dream.
Yeah, you right :) The whole idea is about to share all the most important/good things to know about [ASP.NET](https://ASP.NET) Core in 2019, but learning them may take several years.
[Seetest.io](https://Seetest.io) is bad.
Hmmm, they are not the same actually. [ASP.NET](https://ASP.NET) Core uses the .NET Core internally. Many of the things in this graph applies to .NET Core too. For more details about differences between .NET Core and [ASP.NET](https://ASP.NET) Core I suggest you read these posts: [ASP.NET Core and .NET Core overview](https://weblog.west-wind.com/posts/2016/Jun/13/ASPNET-Core-and-NET-Core-Overview) [.NET Core vs ASP.NET Core](https://stackoverflow.com/a/44136528/6661314)
Yeah =)) It is its benefit. ( but it's useful sometimes )
Odd roadmap, some things are left out (Google Cloud Spanner for instance, which has a solid C#/.NET interface, great SQL API) while others are mentioned. 'Entity Framework Core' being essential. There are many other ways to do data access. 
Microsoft says Core is not a subset but it is. When Core started, it started as a subset, first as asp.net 5 beta, then later it turned into core 1.0. Later, Microsoft rebranded and says, no, it is not a subset but it is the future. **OH REALLY?**: * Pragmatically, you could do practically all core operations using net framework (excluding linux and a few core specific features), the opposite is not true. **So, pragmatically core is a subset.** * Now, Microsoft says it is not a subset but at first it was. But Microsoft talks so much. Do we remember when LINQ2SQL was the future?, or Metro? I feel so sorry about the developers that trust on Microsoft. * **Core is not the continuation of net framework**. Net framework 4.8 is here and it is more complete than net core 3.0. And yes, Microsoft says that Core is the future and net framework is the past. Fools me once...? * Core supports some net framework features and again, the opposite is not true. For example, Entity Framework. * Core is just catching up the net framework and only Core 3.0 will be production ready. Microsoft calls it the future but again, Microsoft says that Windows 10 will be the last and one version of Windows and it was BS! 
Do you ever use the answers you get from the questions you spam in every subreddit?
&gt; Why **C#** is your favorite language ? (compared too **C++**, Java or Javascript etc) You are comparing two languages that are aimed for different purposes. 
Jack of all trades, master of none. tsk tsk But where is it SOAP/WCF?. Rest is not an alternative to SOAP/WCF and I have see lots of projects that do that. Why? Laziness?. For example, if you want to interconnect systems, then SOAP/WCF makes sense. Instead, if you want to connect a smartphone/javascript, then REST if the classic choice. And about REST, WebApi is cool but it is aimed to build a CRUD. However, not every web service is CRUD. I prefer WCF/ajax because it's more flexible and it is not attached to a specification. 
!remindme 1 day
I will be messaging you on [**2019-02-11 12:32:50 UTC**](http://www.wolframalpha.com/input/?i=2019-02-11 12:32:50 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/csharp/comments/ap1ggj/aspnet_core_developer_roadmap_in_2019/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/csharp/comments/ap1ggj/aspnet_core_developer_roadmap_in_2019/]%0A%0ARemindMe! 1 day) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
You are converting DbTransaction into a SqlTransaction. Of course, you can't do that. But again, even if it works, this code is reusing a transaction but it says nothing of the connection. 
Sometimes I want to separate nested classes into multiple files, but very rarely and thats the only use i can think of
Op, I think you might be having a stroke
Partial has some cool usages, but most developers don't know when to use it to good effect. One usage is for code generation, this one is used fairly frequently. The other case is mentioned in this video: https://youtu.be/PhRFLKtJcSs?t=2305
Haven't tried dot memory yet, thanks for sharing!!
I prefer strongly typed languages. On an unrelated note I prefer statically typed languages.
1. It's cleaner, and less convoluted and weird than C++. It compiles faster, is easier to analyze (helpful for refactoring, etc). The main downside is the garbage collector (making games), which is a constant, giant PITA, but since C# 7+ it feels like they've started to take garbage more seriously (Span&lt;T&gt;, built in pools, safe stackallocs, etc). Unlike Java, C# does not treat me like I'm a child who needs constant supervision. 2. I believe (and hope) that there'll be different languages for different types of problems. That said, I do think that we'll slowly move back toward less abstractions over time. It just makes for better programs when you can reason about everything, i.e. not layer upon layer of code that you have no control over. 3. Strongly typed, no reservations. I have no idea why people think weak typing is useful.
Front end devs on my team are actively boycotting TypeScript going out of their way to put type any on everything. They write let count:any = 1; instead of let count = 1;