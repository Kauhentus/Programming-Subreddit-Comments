Not how I'd do it lol. But it's an interesting question actually because there are so many ways to do it!
&gt; Why use dependency injection in C#? &gt; How would you debug a stored procedure in SQL Server? What are the answers to these? 
There's also out params, the Tuple mentioned, and your own custom container class. If you are experienced, you should have your own reasons about why you prefer some methods over others.
SQL injection? I know how it works but why should a junior bother what it is in 2019? 
SQL injection? I know how it works but why should a junior bother what it is in 2019? 
Bureaucrats only care about one thing, securing their next fiscal year of funding. Warm bodies appearing to be busy ensure that, competent people whom deliver often times mean that funding isn't extended for unfinished projects. I've seen it time and time again where the best person is ignored in favour of someone whom matches predetermined metrics and doesn't know their arse from their elbow.
It was rapid-fire questions, we covered the above very quickly. For what the job was (maintaining legacy applications, some very old), I would have been a good addition to the team. Oh well, we'll never know.
I think the situation is probably most important. If it's extremely one-off, you could probably refactor the method inline. If it's a small set of data (like something you'd pull from JSON), I would use a struct. If performance and re-usability are less of a concern, a tuple like this could work.
Quite possibly a poor interview design.
You would miss out on a lot of devs.
Ever heard of legacy code?
 \- Dependency Injection in C# is useful for several reasons, and I'm going to group IoC into Dependency Injection. &amp;#x200B; In terms of development, they give you an easy way to follow the SLID principles of SOLID, as it breaks apart the concern of the usage into an interface. You can change the implementation or even the entire concrete class at any point without breaking the flow of the application, and helps define clear lines of what one service is supposed to do. You can code to only the public API of an interface and not have to worry on your side if you're doing it wrong (assuming the service was written well). You also get the added benefit of never having to new() up instances of objects, as it's done for you according to the lifecycle of its container, and you know what that specific class is going to be using. This is minor, but still useful. &amp;#x200B; In terms of testing, coding to an interface allows easy testable implementations to be created. If you code to a concrete example, you have to set up a mock, and care about state, and worry if something else might modify said state, etc. You only have to test the part of code you're actually trying to test. &amp;#x200B; \- To debug stored procedures, since I'm assuming it's MSSQL, just use sql server management studio. You can set breakpoints and step through like normal.
 Because if it's not caught by a lazy code reviewer, you just opened your entire database to attacks... what? If you know how it works, you should know how important it is that EVERYONE knows not to do it. If you're hard coding user input into a sql string, you're doing it wrong.
It is real world knowledge and you'd be surprised about the number of developers who misunderstand it.
I believe that's the point of the question. In JavaScript, var is just how you declare a variable of unknown type. In C#, var is typesafe because it just tells the compiler to infer the type based on the return type of whatever is on the right side. So, in C#, these should compile to the same in binary: List&lt;int&gt; myList = new List&lt;int&gt;(); var myList = new List&lt;int&gt;();
Generally in a managed language it is quite hard to affect anything outside the runtime - However, it looks like you are indeed importing Native Windows API methods and interacting with the message loop so you certainly could destabilise the system with them. Why are you doing that? You can enable mouse scroll within the confines of .Net... Why didn't some thing like this work? DataGridView.MouseWheel += new MouseEventHandler(HandleMouseScroll);
As of C# 7, there's also support for named tuples and associated syntax. (int x, int y, int z) GetCoOrdinates() { return (7, 8, 9); }
I don't need to fire anything when a user scrolls in a dgv. What I tried to achive, is a feature that enables scrolling in a dgv without having to select it/focus it. I couldn't do it on my own, so I googled a solution. 
Read it again, the problem is that it doesn't support nullable doubles as parameters
Where I'd get tripped up with something like that is, knowing what "type-safe" means, I'd be able to answer it. But even though I understand the concept, it's not a term that I'd regularly used, so if someone asked it in an interview, I'd probably not realize what they're talking about. Just one example of a lot of concepts that I might understand, stumble through. I usually try to answer something like, "As I understand that term to be ... I believe the answer is ..." Don't know if that's any better than straight up being like, "What's that mean?" though.
If you installed a bunch of .DLLs into shared system directories, overwriting existing files, then yes you may have affected the behavior of other apps.
These are not bad questions. You should have some kind of answer for all of them... some of them have easy short answers and also more nuanced answers. &amp;#x200B; These are good questions... I wouldn't run away from these... it sounds like they know what they are doing. 
What behavior are you validating? Just to check whether the runtime will stop you if you try to modify an `IList&lt;T&gt;` you expect to be read-only?
You declaration for SendMessage() might be returning the wrong datatype, others use: [DllImport("user32.dll")] public static extern int SendMessage(IntPtr hWnd, int wMsg, IntPtr wParam, IntPtr lParam); 
You declaration for SendMessage() seems to be passing in the wrong size datatype for the wParam (might be returning the wrong datatype (IntPtr vs int), others use: [DllImport("user32.dll")] public static extern IntPtr SendMessage(IntPtr hWnd, uint wMsg, UIntPtr wParam, IntPtr lParam);
Another casualty of the difference between strong/weak typing and static/dynamic typing. I don't know if I'd call it a "subtle" difference but it's certainly easy to get the two pairs mixed up!
Sharing those objects (timerLock and _timerRunningLock) can result in a deadlock or lock contention. Lock on a dedicated object instance.
No offense intended here, but I feel like in this case the question did its job. The difference between == and === isn’t like some obscure point of memorization...knowing it is fundamental to the language and a requirement to be competent at it in my opinion. It shouldn’t be something you need to wrack your brain over, in the same way you shouldn’t need to “memorize” or “draw a blank” on something as basic as the difference between the number type and the string type.
Yep. Gives a nicer error message with the parameter name. 
If people get this question wrong but otherwise do alright, that's a very strong hint that your question is poorly phrased and that you should re-evaluate it. You're more likely testing their knowledge of a word, not the concept behind it. 
Checkmate! `var thing = new ExpandoObject();`
Awesome -- thanks!
You can "build" an offline installer for VS Community, too. https://docs.microsoft.com/en-us/visualstudio/install/create-an-offline-installation-of-visual-studio?view=vs-2017#use-the-command-line-to-create-a-local-cache
Honestly, EF Core is pretty much my last choice. Just because it's maintained by Microsoft doesn't mean it's well designed. In fact, it's by far the worst ORM I've ever used even compared to EF6.
How would it work for fields? If I say 'public var MyField;' how does the compiler know what var is? I've not used swift so unsure how it works there.
The code posted above won't cause system reboots. The tech should do more work to investigate and narrow down the problem. Ideally he should have some proof or a solid theory of why he thinks your app is rebooting the system. He is probably trying to pawn the work off onto you.
My answer was kind of tongue in cheek, but for a top notch senior dev who’d been working in the industry for years, I’d honestly expect a Github account with a few repos. It’s not rocket science. 
I raise you a checkwtfmate. const dynamic var = null;
ha i didn't know that var wasn't a reserved keyword. love all the possible confusion
You don't.
Set AutoGenerateColumns to false.
Can't I have a Dynamic properties = undetermined number of columns, its all done in run time. 
better question might be "Is the type of a variable that was declared using var decideable at compile time?" or "can you explain type inference to me, in the context of the var keyword in C#?"
Swift has this general syntax for both fields and local variables: let|var name [: Type] [= initial_value] Where let is used for immutable and var for mutable. The [ ] means that this part can be left out. For the type, it can be left out as long as the compiler can figure it out. So for your example, yes you need to provide the type if there is no initializer. The reason I dislike this type inferred new is that it’s one more way to do something, which adds more mental load to the programmer.
It's used with `System.Collections.ObjectModel.Collection&lt;T&gt;`. If you initialize it with an array, the collection becomes read-only even though you can write to the array.
The only question that seems out of place in c# back-end would be the javascript == vs ===... everything else relates directly to things you would be doing for 90% of busness apps. Writing c# code connecting to an sql server... standard daily stuff.
Because it would proably be ajunior dev that introduces sql injection attack vectors. &amp;#x200B;
In what world world do you have millions of lines of code and load it into one solution? My company has roughly 30 million or so lines in the asp.net application (counting css, c#, and typescript/javascript) We have over 100 solutions for the web project and require the release team to handle the build process. I can't even imagine the time it would take for that solution to build and how long it would take to even load it, let alone find the projects you want if you decided to put it all in one solution
I'm not sure what you mean. I was responding to this:"And it automatically creates generic DataGridViewTextBoxColumn's and not mine." To elaborate what I meant, tell the DataGridView to use your custom columns by setting the AutoGenerateColumns property on your DataGridView instance to false.
The problem with c# is that the initializer is just syntactic sugar, and in reality after compiling that initializing value is just part of the constructor and it runs before the first line of the user declared constructor. Because of this, it means that we won't be seeing 'var' for fields with an initial type value set any time soon! &amp;#x200B; If you dislike this new type inferred new, do you also dislike var for being one more way do something? Genuinely curious.
I think we're saying the same thing: a blank cell referenced in an Excel DNA c# call that takes a nullable value type will receive from excel (or Excel DNA?) the default value (e.g. 0) for that type. . Are you positive excel converts blank cells to zero? Do you have a source for this? Is it an excel problem or a DNA plug in issue? 
&gt; I've been told before that questions like these means run away because it tells you what to expect. Honestly, if a company interviewed me on these questions, I'd be excited. It shows they're looking for people who understand these concepts. If you're interviewing for a senior level position, or even mid level, you should be able to answer most of these without any problems.
My understanding (not a professional developer) is that yes as long as they are explicitly defined at the time they are declared that the compiler can figure what it's supposed to be. However I've been told that there's a speed trade off and using car is slower. I don't know if that's at all true though
Still, I'm not seeing anything that could have caused a problem. Even if you were sending mouse scroll messages to the wrong window, it still wouldn't do anything you couldn't already do with the mouse.
But the question could be asked in a way that promotes some thought or something, not just asked like a Scantron quiz question. This alone doesn't really test the user's knowledge of what var or type-safe is
Some of these seem like ridiculously basic questions to the point that any programmer should know them ("Explain the type of access modifiers in C#"). Like others (and you) said, these sound good for weeding out poor candidates (those that talk the talk, but can't walk the walk), but I don't think this should be the one and only interview, nor do I think that failing one or two automatically disqualifies you (well, minus the access modifiers one I mentioned earlier). All in all, sounds a bit ridiculous lol. But wouldn't be the first time we've seen companies with not-great interview questions for programmers.
Bingo.
Why do you expect senior devs to code in their free time for no money just to appease a minority of hiring managers?
i Created a MyDataDridViewButtonColumn and MyDataGridViewButtonCell to be used on my grid. I want to use autoGenerateColumns but with my columns not the standard
Dependency injection is a fancy way of saying "design a class so that it relies on constructor parameters to initialize instead of static/global/singleton stuff." The reason you do this is because it makes your class way easier to use because the class constructor itself tells you what you need to know - no hidden secrets.
A lot nicer to use ValueTuple and destructure it on the other end. 
DataGridView doesn't support both custom/manual columns and automatically generated columns at the same time. It will not recognize the custom column and then generate the remaining columns. We can pick just one, manual or automatic. To use your custom columns, generate the remaining columns in your grid manually and set the AutoGeneratedColumns to false. 
Ok great info, ty nomad I will have to go to plan Z then. i got a comboBox that entirely changes the data in the grid, i will have to add a lot of code :(...i think
All variables can be converted to an object. Everything in C# is an object.
Yeah I know the answer to all these questions... wait what the hell is private protected...
I think they're unfair given that it's rapid fire and answering a single one wrong (including not knowing) is an automatic disqualification. They're a great starter for conversation, but I didn't know on the top of my head what the hell an "access modifier" was, because I never use that term in my day to day. But i know what private, protected, and public means, and why we use them, and when to use them. But I would have failed that.
No they can't . Try converting an `int*` or a `Span&lt;&gt;` to an object. You can't.
Then theres the developers that over use dynamic and string dictionaries and cant spell enum.... Sure they can tell you what type safe is but have absolutly no understanding of why they should use it.
I mean, I don't think that the person should be disqualified for not knowing the answer to a one or two of the questions. I do think though that if the questions are about this level of difficulty then the person should be expected to know at least 70-80% without having to look it up. Granted, it might take you a few seconds to think of the answer, but that's a lot different from not knowing the answer at all. 
Okey, I am trying to answer the questions from top of my mind without to much thinking, so just a minute per question like it would be on a phone interview: * Explain the type of access modifiers in C# * Encapsulation of data, protecting access. 3 main access modifiers, public, private and protected. If a method or attribute has the private modifier, it can't be accessed outside that class. Public enables you the access the methods and attributes outside the class. Protected is similar to private but honestly I forgot what it does exactly. * Explain the types of joins in SQL * inner join , outer join, left outer join, right outer join, cross join. Kinda hard to explain without a whiteboard or visualisation of the data. * What's the difference between the "==" and "===" operator in JavaScript? * "==" checks just the values, so '3' and 3 are true, but "===" checks also the type, which gives '3' === 3 false * What's the difference between a Dictionary and a List in C#? * the dictionary has a key value pair, the list has just single objects or values in it. * Explain SQL injection and how to protect the database from it. * a user sends a a valid sql code via input form, and that input form isn't serialized so the sql code gets to the database and makes a request. Which means, the user (attacker) can get data from the database like users and password, or insert data. * What's the difference between Ref and Out parameters in C#? * out parameter gets set inside a function but his value can be used outside it. Ref is a reference to the parameter (forgot honestly what ref does :D) * How would you return multiple values from a method in C#? * list, dictionary, out parameter * Why use dependency injection in C#? * to have services which can be reused, kinda a broad question, * What's the difference between a Class and a Struct in C#? * good question, can't remember it, struct are used for small things * How would you debug a stored procedure in SQL Server? * Depends on the problem, first check if the SQL code is giving the right result directly on the SQL server. If that works, then I would move my debugging to C# and see if the mapping and models are correct setup etc &amp;#x200B; I would consider myself a midor full stack dev with a few years of exp on various topics, which sounds bad, but is reality when you work for a small mid sized company and kinda switching tech stacks. Does this sound good or bad?
Working on a project that reads a controllers respose object and turns it into a dynamic.... Its fun, we could receive anything.
I simply don't have any reason to create a public repo on GitHub. We use GitHub Enterprise at work, but it's not like I could share it. I wouldn't expect a senior developer to necessarily have one, especially if they've been developing a long time. 
That was not a good answer I am afraid.
Named tuples.
“I see you like to make your return results convoluted, please join the enterprise development team as they need your expertise”
Maybe there was a second interview which you didn't make the cut for
These questions are pretty fundamental / conceptual. But being put on the spot in an interview situation there is a large range of error even for experienced developers.
I think these are very good questions. I've been a full stack .Net developer for 7 years and this pretty much covers my bread and butter of day to day work. However, if this was for a junior position, I wouldn't expect any correct answers . If it was an intermediate position I would expect about 50% answered correctly. A senior should be able to answer these no problem, except maybe in explicit detail. I probably couldn't tell you all the exact differences between a class and struct. In fact, if a junior was answering these questions perfectly, I would assume they were googling it or had inside knowledge or something. 
There could be, say, memory leaks in your application. Those could result in: * the application growing to about 1.5 GiB of memory (assuming 32-bit), then crashing with an `OutOfMemoryException`. Shouldn't affect other users at all, or even other processes for the same user. * the application using using too many GDI handles (typically configured to 10,000 per process; the absolute hard max is 65,535 because it's a `ushort`). I'm less confident about this one. It _might_ have effects in a terminal services environment even across multiple GUI sessions, and it _is_ plausibly an issue with a larger, longer-running WinForms app. Take a look in task manager for memory usage of your process (as long as it's below a gig, you're fine), then hop over to the **Details** tab and check the **GDI Objects** and **User Objects** columns (you'll have to toggle those manually); those should ideally remain in the hundreds. Once they hit the thousands, you may have yourself a leak problem.
Maybe you can add something about Linq. Integrated with the List/Dic question ? But it seems fine for a first eval...For a junior position i asked the candidats about the yield (iterator) and the only guy who answered not bad is now my collegue and he is a beast.
I don’t see it yet lol
https://github.com/MoonwaveInteractive/Moonwave.Text Still creating the README to show how to use it.
Or just create a new object dammit ;p
Thank you very much for the guide. I'll check that out. Just out of curiosity: what kind of structures can cause memory leaks in C#? I'm only aware of those when allocating memory in regular C. 
You are doing lots of Native Windows API dlll calls that I would not want to run on a terminal server. Definitely not a best practice. If those DLL's get called too frequently or too many times it could have bad results. Some "terminal server" implementations used virtualization technology such as Citrix which can muddy things even more.
Must people don't care and just use === all the time since it is most similar to how it is done in less broken language
No, what I'm saying is you can't have a c# call that takes a nullable value type. The signature is invalid. f(T? t) will not work. It knows how to coerce to non-nullables, but not nullables. You can do f(object tObj) and do like (psuedo) if (tObj = ExcelMissing) -&gt; null double.TryParse(tObj, t) Always possible this is fixed in a newer version 
Lol its all cool, turns out i hit the API rate limit sometime during the day anyways. I thought keeping it to 12 requests a minute was fine but oh well ¯\_(ツ)_/¯
I'm more of a backend guy, but I'll never forget the answer to this question again.
Does the portable mode support c# natively? My problem wasn't getting VSC on my PC, it was downloading the c# extension (omnisharp) correctly. I'm was able to get the extensions VSX file externally, but the error I get is when installing. It says it can connect to "omnisharp server" and something about "downloadinstallers". When I try to ignore it I still get a path error in the output. Due the name of the errors I'm assuming it needs an initial connection to download other needed things. And no, I have no way of getting onto another PC with a connection or any other way of getting a connection at all besides from my phone (and yes, I've tried hotspot and tethering, and yes I've exhausted the ways to get it to work). 
I know. Read about my issues [here](https://www.reddit.com/r/csharp/comments/azrl18/best_lightweight_c_compiler_2019/eib50o4) and also my other comments as well if you need more info on my issues. 
This is the best answer. Either your return values are logically tied and should share a class, or your method is trying to do too many things and should be broken up. 
Looks like this company is trying to hire a full-stack dev for ASP.NET MVC, in which case you need to know back-end as well as front-end and Javascript.
I prefer CLR via C#, fourth edition. 
Upvote for "less broken language" :) 
There are basically no real memory leaks in managed code but sometimes we keep references to objects that we do not intent to keep. My favorite memory leak is a dictionary with a class as key, no IEquatable override and default comparer (caching ftw). Such a dictionary can reference and bind quite some memory. In theory also unmanaged resources could be bound to the application without proper cleanup. That’s the point of IDisposable though A third possibility could be LargeObjectHeap fragmentation. Not sure if this is still a thing or whether GC improved the situation. A memory snapshot can tell you where resources are located. R# provides a really great memory profiler (but is also quite expensive).
Are they implemented as tuples types or structs?
I really like questions that start a discussion where I can keep digging until I find where their knowledge ends. A couple examples: * What is the difference between an abstract class and an interface? Why would you use one over the other? What can an interface do that an abstract class cannot ( and vice-versa ). Huge bonus points if they bring up default implementations for interfaces in C# 8 * What is IDisposable? How do we use it? Why do we use it? Why won't the garbage collector handle this problem for us? How to implement? Finalize vs dispose? * What are some ways to preserve user state in our web app? Viewstate, SessionState, Database, Cookies, LocalStorage, QueryParams, ( this one I just keep shooting down their ideas to see how many different ways they can mention ).
Never said either of those were.... I can dislike the history of a group while recognizing their ability to change.... &amp;#x200B; jfc...
It's harder to cause memory leaks of the C kind in C#, since you have the garbage collector sweeping up your discarded objects. One way you could get memory leaks is if you p/Invoke some C code which allocates memory you never free. If you're only calling the Win32 API in the example you provided then that's probably not the case. Otherwise, you could have a disposable object (implementing IDisposable) which you don't properly dispose. That could mean something like a database connection, which stays open even after the GC reclaims the associated object, simply because you failed to dispose of the object properly. Your IDE of choice should warn you when you do this. Then there's the most sneaky and sinister way, which is a "temporary" memory leak - you don't have memory which will never be freed, but you have memory which will be freed later than it could be. Let's say for example you have a massive object or collection of objects, you perform some operations on it and you calculate an int from that operation: void DoSomethingCool() { var o = new BigHugeObject(); int i = CalculateMagicNumber(o); // ... more operations working only with i } Now you calculated the int and you only need that int in the rest of the method. But until this method returns, there is still a reference to the BigHugeObject! This means that you've effectively created a memory leak until this method returns. If the method never returns (for example you do this in the init code of a server or something), then that memory leak is for the whole lifetime of your application. The solution here is to manually set o to null when you're done with it, so that the GC can reclaim it at an appropriate time: void DoSomethingCool() { var o = new BigHugeObject(); int i = CalculateMagicNumber(o); o = null; // ... more operations working only with i } This is definitely not an exhaustive list of what could go wrong, but it's just a few things that you can keep an eye out for.
...since you advertised your library as "very optimized" Given an example set of 3 columns x 10k rows, it takes 1802 ms to build the table. After changing 4 lines, it now takes only 2 ms. Here's an exercise for you - can you tell what needs to be changed?
Well Sam of New York, best of luck for your job search these are fairly standard questions for a mid maybe even junior dev that requires 2+ years of experience for being a full .NET stack dev
we need to make a tuple return all the standard data types. missing Decimal :)
In the Java world when they did finally get a type inferreable keyword aka `var`, twitterverse was like "oh no we are now python." these are "professionals" with years of experience but cant grok static vs dynamic
Interesting. The link I provided deals with returning nullable values in a fashion Excel can understand. The following link deals with creating type-safe wrappers for nullable types: https://blogs.msdn.microsoft.com/gabhan_berry/2008/02/06/the-woes-of-excels-optional-parameters-and-c-a-potential-workaround/ Please let me know if that solves your problem. In effect, you want a "Mediator" design pattern that decouples the in-proc sending of messages from the in-proc handling of messages. Your handlers are type-safe, your in-proc senders are not but contain thunking code to pass the message to your type-safe handler. I have not prototyped this but I think it should work and make your code more readable. Cheers.
Not off hand! But this is a project for every so contributions are welcome!
Questions to quickly filter out junior developers if you're looking for intermediate or senior one.
Testing right now
u/p1-o2 u/QuiZr u/zeta_cartel_CFO u/redbearsam u/williamsboots u/somethingdotexe u/efflicto u/thelehmanlip u/dr_mops u/ikkentim u/d3ds1r u/Alikont u/gandiber u/TopGunOfficial
Windows Forms is essentially a thin wrapper around Win32. A lot of objects therefore contain unmanaged resources. By and large, when a class implements `IDisposable`, you want to wrap any instance in a `using` block. (I'm way oversimplifying here. If you don't know this, you almost certainly want to read up on this.) So, for instance, if you do this: var image = new Image(); …some drawing code… image.Save(@"C:\Users\someFella\hotstuff.png"); Then odds are you've just leaked a GDI handle. You want to dispose the image, either by putting it in a `using` block, or by calling `Dispose()` afterwards. And that's a rather simple example. If you have complex form with lots of controls inside, which in turn do their own drawing and acquire unmanaged resources somewhere, and just one of them doesn't properly free a used resource, you got yourself a leak. And **if** that resource is a Win32/GDI/User handle then it might affect other Windows sessions on a terminal server. For leaks in general, I've found [.NET Memory Profiler](https://memprofiler.com) to give some good advice. In detail, it's a _ton_ of work to go through the reports of a profiler, but this tool in particular will give you warnings of common mistakes, like stray event handlers, unfreed resources, etc.
&gt; You are doing lots of Native Windows API dlll calls that I would not want to run on a terminal server. Using Windows Forms means a ton of native calls, period. The above calls to `WindowFromPoint` and `SendMessage` won't make a big difference.
Since you advertised your library as "very optimized", I looked through a critical part of your code. Given an example set of 3 columns x 10k rows, it takes **1802 ms** to build the table. After changing just three lines it now takes only **2 ms**. ``` padding = new string(groupingChar, table[x].Max(s =&gt; s.Length) - cell.Length + ColumnMargin); ``` You're iterating over the full table over and over again for each cell that you're "building the table". You can find max column width in a single full scan. IEnumerable&lt;&gt;.Max() does a full scan each time you call it. Normally I am very welcoming to new coders (even though you stated that you program for over a decade). Everyone in this industry learns every day. But yesterday you [insulted people](http://archive.is/8uNcE), calling them "**eye sore**", "**doubting that they make any money from programming**" and telling them to "**brush up on your programming before telling me how my library works**". Someone triggered you very easily because they pointed out that you don't understand certain things about static classes and memory management. That's not very mature and definitively not the correct way to handle criticism. 
Good job, you followed through, and above all else that matters. Keep up the good work. :D
As a hobbyist I got all of these except the last one. &gt; How would you debug a stored procedure in SQL Server? Never done this; I would probably check Visual Studio SQL Server Object view, create a new query and call the stored procedure, or look around in the tree view for stored procedures and check the options I have. I'd expect some sort of debugging options and feedback similar to how execution profiling is available in the same environment. Failing that I'd look around in SSMS.
You’re forgetting the fact that I, and my library was insulted and called garbage before I even submitted my code. I defend myself as well for my projects, and I expect everyone to do the same. But moving forward, I do appreciate your finding and making this library as fast as it can be is definitely one of my top priorities before adding new features. But if you have nothing else to add to the post, or the quality of the project, then I do kindly ask you to stop headhunting.
Sure thing. This is the last time you're gonna hear from me. Don't take it as an insult. I'm just trying to give you a tip because soft skills are as important as coding skills. 
I appreciate the help! Have an upvote!
Thank you!
There's huge difference between Expression&lt;Func&lt;&gt;&gt; and Func&lt;&gt; that everybody who's working with e.g EF should know.
Actually, that's not true. Dependency injection can be achieved via property injection too. Constructor injection is just one of the ways to do dependency injection 
It looks like an issue with the font not supporting the character used for dividers. I’ll be looking into this and possibly adding an option for changing the character. In the meantime, I would advise that you change the character in the code and see if that solves your issue or use a font similar to Consolas. The quality of the photo you uploaded is very low so I can’t see what font is being used.
Yea, because it's not like a lot of people just rewrite 1:1 somebody's projects just in order to have something on github, haha.
Nah. I want a real Python project combine with my C# project.
You didnt answer the SQL Injection one fully.
[https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/names-of-namespaces](https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/names-of-namespaces)
Being defensive online and in a good faith forum like a programming lang forum (r csharp) doesnt mean you get to spit out shit like some other shitposting forum ala 4chan or something. you essentially made an "adult" version of leftpad but are acting like you created a huge library like Newtonsoft
&gt; Generally in a managed language it is quite hard to affect anything outside the runtime Spawn new Threads calculating high Fibonacci numbers with the naive recursive implementation in a `while(true)` loop. Watch what happens.
If you have time on your hands then [dive into the technology](https://docs.microsoft.com/en-us/dotnet/framework/wpf/index), learn .NET and try things out. Create your own projects, check out the features they made and how they got there. You have a valuable opportunity to learn how an actual production-stage application looks like. It's not easy to just sit down, create a WPF app and distribute it as a valuable piece of software; you have a real-world example in front of you, rather than contrived tutorial samples. Study as much as you can. I wish I could just go "oh, I wonder how they solved this issue I have with my own feature in the battle-tested application, let's check the source code." Figure things out like * Have they used MVVM? * Where could they have used MVVM instead of \[insert solution\] * How did they do commanding? * Is the UI tightly coupled with the logic, or is it de-coupled and separated? * Is it single-window? * How did they do navigation?
Fun fact, at my company we cannot ask technical questions. You read that right. We are a defense contractor.
Image quality is pretty good for me when I click on the image in Imgur. As for the font it seems I'm using Monospace. I'll change the character in the library and see if it comes out right.
I use protected and private all the time
&gt; how many people really ever use `private protected` When they don't want kids
I think they are two separate things
Changed the character for the header seems to work here [https://imgur.com/udJsFvH](https://imgur.com/udJsFvH)
Glad to hear! Just need to change the one for the footer now. ;)
Perfect timing, i actually needed this for a project im currently working on. Thank you sir!
No problem! Would love to learn more about your project!
Its a trading engine that has a shell-like interface that loads different plugins. Im going to be using your code to format information that my plugins emit; written in .net core so its going to be running mostly on linux :) thanks once again, perfect perfect timing!
Expect +1 star on github!
Yeah seems like Monospace doesn't have the Macron (I think thats what its called) character that you are using. But it's all working with dashes so no foul! Just wanted to let you know what I saw!
Thank you, and yes, it’s called a Macron. Thanks for the info!
Awesome!
Thank you kind sir!
You escalated the situation to the point that your comments had to be removed by the moderators from your own post. And now you are dictating what comments should be acceptable on this post. I wish you the best in your endeavor, but you have seriously got to learn more about how to conduct yourself on open forums. You should treat all this as a learning moment. Instead of justifying your actions, you should look at yourself and figure out why you allowed yourself to insult others to the point that you were censored. 
He didn't say it wasn't possible to destabilise your system he said it was hard. 
I was insulted too, so let’s not point the finger at only me. My work here is free, and I’m not doing it for the credit. Yes, I could have handled the situation a little better but I’m at a time in my life where nothing in my life is going right because of an abusive ex and abusive boss. So I’ve got some things going on which doesn’t put me in the mood to see someone calling my library garbage or my attempt at helping others garbage. While I may or may not learn from my mistake, let’s not get distracted from the attempt I’m making now to help people that took me two weeks of time, time I barely have. I appreciate your concern and your wisdom and I will certainly hold it close for what lies in the future. Cheers!
Accidentally spawning too many threads isn't terribly hard. (Which is why most examples use Task, which uses the ThreadPool)
&gt;I was insulted too And you'll be challenged, critiqued, and insulted until you die. All that matters is how you conduct yourself. 
Understood!
Yeah, it sounds like they are on a snipe hunt and want the OP to take point. In general people who know what they are doing look for evidence pointing to the cause of a problem, they don't go to everyone who might be working in an environment and ask them to prove they aren't causing a problem. 
Lol I may try changing my system font to see how it looks then but I’m kinda okay without it looking perfect 
I would think you have to run some diagnostics to figure that out. Maybe try monitoring how much time some of the heavier calls are taking. You should always be careful with threading.
Hit Start then type in CharMap. Here you will find characters to use as a potential divider that works with a specific font. That are start learning various Alt codes. I prefer using CharMap and I’m glad Microsoft includes it.
F5 has been in decline and nginx was gaining popularity.. So asusual smaller guys got acquired
Pretty much any WPF (.net framework variant)/Winforms app on Windows rely on native calls internally. 
I agree with some other response about using the native Win32 calls in this application. I don't get it but you must have your reasons. Random reboots of a a server must affect the kernel space. There are likely kernel dumps that are being generated that could be examined. Most likely an event log will give the location of the kernel dump and perhaps even a reason. You can call MS support to ask if these dumps can be analyzed to understand the actual cause.
Wtf is Kelsey Coin?
AFAIK, reddit only pings one user mention per comment. Most of these won't get the notification.
Not sure why you have so many downvotes.
Visual Studios Community Edition is free.
I'll see if Fedora has anything similar to CharMap
I see what you’re saying, more focused on JavaScript or More demanding languages in a sense. The thing that is keeping me intrigued with the company is that they offered me a very good salary I believe for the particular area that it’s in.
VSCode and the C# extension.
you know visual studio community edition is free, right?
They told me they want full stack developers, so I believe it’ll include both front end and back end. What’s your experience in the sense? I just recently spoke with a friends Uncle who is in the industry and he told me to get into Data Science to make the most money. He said his company was hiring people and paying them 6 figures a year after a completed internship with them.
Sublime, VSCode, and VS Community are all free and nice editors
Look into Math.NET and Accord.NET, both good for matrix operations and stats, lots of other tools as well and both free
Yes
VSCode. It’s seriously awesome. I haven’t switched to it when writing C#, but all my front end work is now in Code. 
Visual studio community editon is free for personal use. If you're a student, Jetbrains IDE's (in this case Rider) are free too. VSCode with C# extensions works too, for basic learning it will do the job but the above come with a lot of quality of life features..
Nuget is nice if your shared code doesn’t change often, as then you need to manage nuget versions for each release. Submodules are nice for when you have libraries that are changing more often, as I’d rather just maintain another git repo than maintain the repo and nuget packages. 
&gt; Sublime $80 tho
What is your data source? You may be able to modify the data format in a DataTable and bind it to that. This is just a guess on my part. I don’t know if a DataTable can be used to create button columns. Maybe another data type could be used instead to bind to.
In the Table constructor is your goal to check for any nulls? If so I would have more clear exception message. Something like “The third parameter is null. Null parameters are not allowed.” Maybe a custom exception? I am a big fan of custom exceptions. Pretty neat though.
Yeah. I never have an issue with any languages using the community edition. Even free to use with Unity.
I'm curious, have you tried debugging on it? Does it work well?
I’ll definitely be looking into that. My exception and error messages tend to follow Microsoft guidelines. I try to be as concise as I can with being too flashy. I’m very generic.
I love the absolute most detailed error message possible. I am a dumb programmer and need to be told exactly my mistakes. Also I can catch TableException and handle just that. 
What’s the logic for the “Option” classes to be partial nested in Table? 
This is definitely possible within EF Core. It sounds like instead of blaming your issue on the EF Core development team you simply need to reed more documentation about change tracking within EF Core. I found this website very helpful. The DbContext and repeated sections will be of interest. https://www.learnentityframeworkcore.com
Also it's pretty much exactly the same as the pro version of VS. Unless you are working on commercial projects you won't need to upgrade. Back in the day they had Visual Studio Express which was a much more stripped down "lite" version, community edition is the real deal.
Organization purposes. Making a nested class allows me to organize properties much like a folder system. And partial allows me to have the nested class inside of its own source file for better code organization, instead of having one big table class, I broke it into sections. After compilation though the partial classes get merged into the table class. If you compile the code, then decompile it, you’ll see that both the nested partial classes won’t be in their own source file anymore, they will get merged into the table class.
 I recommend starting out with VS Code + C# Extension + .NET Core 2.2 SDK. Visual Studio Community is also free and is indeed more feature rich, but IMO this adds more noise than value for someone just starting out. (random example: file -&gt; new project in vs2019 is better than vs2017 but still pretty beefy, but being limited to `dotnet new` (w/ vscode) simplifies things in a 'pit of success' sort of manner...)
Makes sense. I would make them separate classes. I’ll download this tomorrow and play with it.
Yes
I’ve had software throw a blue screen because the serial driver was garbage and failing intermittently on reads. So yes, C# and WinForns based applications can do bad things. 
&gt; Unless you are working on commercial projects you won't need to upgrade. Even if you do, you might still be able to use the community edition.
These days vc code is really catching on. A few years ago I was working for a primarily java-based team and looked at visual studio community but wasn't impressed. I ended up using xamarin studio to develop some crossplatform stuff with mono. Worked great, big fan of xamarin personally! 
Only shows a occasional nagscreen on exit and doesn't limit any functionality. So it's basically free
&gt; it looks like you are indeed importing Native Windows API methods and interacting with the message loop so you certainly could destabilise the system with them. You could destabilise the application if API functions are misused, but not the system itself.
A tax the gullible pay for being gullible. See also cryptocurrency, lotteries, the South Sea bubble, tulipmania, etc etc etc...
it's also not open-source
Ok. But those all relied on people actually knowing they exist... Is this article written up to convince the gullible that this a big thing they’d never heard of?
Exactly. For instance, in this example class B is both: public class A {} public class B : A {} public class C : B {}
Probably. Like most scams, it matters little if 99% of people recognise it immediately for what it is, so long as you can hook the other 1%. In fact, looking like a scam is positively advantageous to the scammer, in that you don't need to waste time dealing with anyone but the most credulous. 
Heh. Good point.
Visual Studio Community costs nothing. It's very good. 
At the extreme end, I wrote my first C# programs in Notepad and used csc.exe to compile them. (It was a .NET beta or something and for whatever reason either VS.NET wasn't out yet or I couldn't get it for some reason. It was a long time ago.) So, those are technically free. Not sure I'd recommend that route, though it did teach me a lot about the structure of classes and namespaces early on.
Has he even looked in the event logs? 
Atom.
All these programs are for chumps. It's notepad or nothing bro
Using the compiler directly is probably fine with very small project without any external dependencies. And a good teaching moment as you pointed out. However, as soon as you have to resolve dependencies (e.g. when using.net standard), then you would better switch to at least msbuild with a simple .csproj (the new format is much less verbose and can be written manually). Then for bigger project, you'll need an IDE. What "bigger" is depends on everyone's comfort zone.
In the "exotic" IDE category, you could give a try to MonoDevelop (https://github.com/mono/monodevelop) or AvalonStudio (https://github.com/VitalElement/AvalonStudio).
https://visualstudio.microsoft.com/vs/community/ 
I agree, the way that you approached user feedback was not conducive to building a community around your new library. Now that I see the source, it is as we were guessing yesterday, and it is duplicating the data several times in memory in order to build the table. You belabored the point of the performance of your library especially vs competitors (who are the competitors of this?) and when asked for benchmarks, did not provide them.
CodeLens is pretty sweet, that's the only reason I'd consider paying for Pro Haven't used a single feature from Enterprise yet.
F5 is a major enterprise hardware vendor. They are seeing the writing on the wall for networking equipment and the migration to SDN / SDDC and how commodity hardware/software can build reasonably performant systems for a lot cheaper.
VSCode is my favorite
(https://github.com/lukevp/ESC-POS-.NET)[ESCPOS.NET] is a new library for generating and printing to Epson receipt printers. This is useful for controlling thermal printers typically used in restaurants and other retail establishments as receipts. One great feature of the library is that the byte generation and the streaming to the device are separate, so you can generate the data to a file or stream directly to the printer. It is implemented in .NET Standard 2.0 and works on both Linux and Windows (and should work on OSX as well). It also runs on a raspberry pi 3 b+.
Unity3D
The dispatch program at work had a memory leak problem in the REST messaging system. It would take more and more of the memory until the server system noted a problem and rebooted. Roughly every hour and a half during the day and maybe once a night. 
Yeah this isn’t a hard task at all.
TryParse() returns true or false if the parse was successful. Add and if() statement to check this value to determine whether a valid number was enter, or whether something else (text?) was entered.
Yeah a get that but, how can i use try catch instead of tryparse?
Repleace int.TryParse() with try { int.Parse() ... } catch { ... } block
Why use something that is designed to throw an exception? That being said, the Int32.Parse() method will throw an exception if the value isn't a number.
During my degree at uni our lecturer would tell us to steer clear of Rider/JetBrains products so that we could learn how to complete the code and turn that into a habit before allowing an IDE to autocomplete for us. Nowadays everything has autocomplete, but it’s good to know the fundamentals
Sort of. Yes when it works. But there's a bunch of times it would not breakpoint where I told it to and when I throw an exception (which causes a breakpoint) I'll try and get some kind of message about the file not being part of the project or source or something. However exceptions does show all the values and debugs pretty well. I had to switch to VS due to the complexity of my project and vs code not cutting it for harsh debug sessions. &amp;#x200B;
You shouldn't use try/catch in this scenario. Using try/catch for flow control is an anti pattern (See [here](https://web.archive.org/web/20140430044213/http://c2.com/cgi-bin/wiki?DontUseExceptionsForFlowControl)). TryParse inside of an if statement is the way to go.
ok thanks.
Is android open-source? I never had the open source version work on any of my phones
Thanks. How do i add a message saying "you need to press a number" or somthing when the user presses a letter
The key word "[continue](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/continue)" will trigger the next iteration of the loop. So inside your if statement, prompt the user to let them know the input was in valid, then continue the loop.
Like mathesstuss said, doing a try/catch here is an anti-pattern. You don't want to get in the habit of using it in scenarios like this and the ideal method would be to do a tryparse and control what happens based on the boolean result. With that said, it's a good way to practice using try/catch/finally blocks and as long as you understand that you're playing with try/catch and wouldn't necessarily follow this pattern on a professional project, there's no harm in it. int.Parse will throw an exception if it can't parse, and if it can, it will assign the result to the left hand side. So, var result = int.Parse("not a number"); will throw an exception. Wrap that in a try catch and play with the flow of the application by doing different things - maybe wrap a while block around the try catch and loop until you get the result you want. Make the experience good by ensuring the user gets a useful message explaining the problem. Lastly, depending on the teacher, you may or may not get marked down if you provide more than is requested in the assignment or even do only what the assignment asks, but in an unusual or unexpected way. One of the things they are grading you on is the ability to follow instructions, read a spec, and implement what was asked for. So maybe fork this assignment and do your experimentation on a different version of it if you've already completed the assignment as requested.
Thank for your top class answer, it was very helpful
A jr dev that can maximize their productivity utilizing the tools at their disposal &gt; a jr dev that knows the names of some methods.
Thank you for all your help Mathestuss
Unity is not an IDE, it's a game engine that uses VS or MonoDevelop as IDE. You can't write your code in, nor can you compile your code with, Unity alone.
You don't need to mention about "new to programming". We can see that from your question. [Visual Studio 17 Community](https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=Community&amp;rel=15)
Thanks a lot
The like statements in both queries are different. The second one with the foreach over the extensions collection needs a percent sign and a dot: “like(‘%.” + extension + “‘)”
Thanks a lot! You're a gift to humanity. I love you. I will do anything for you. You're a God. You're great. Thanks :D
I, a professional Minecraft Linguist, have found some errors in your comment and have recrafted it. &gt;thanks a lot! you're a gift to humanity. i love you. i will do anything for you. you're a Notch. you're great. thanks :d
Thankyou bot. Notch is a good word.
SharpDevelop is also decent. I used it at work for a while before we got Visual Studio.
This looks awesome. ill have to have a play.
While comments like these are hilarious, OP, don't actually try to write real code in notepad. It's fine for the most trivial things, and okay for prototyping, but not much else. It's not built you code. 
me
Okay from only taking a quick look I noticed the following. int gamenum = [random.Next](https://random.Next)(1, 21); will give an error as [random.Next](https://random.Next) doesn't exist . You need to change that to your variable name of randomnumber.Next &amp;#x200B; You have used args in the main() (this can be safely removed or used to pass a switch param to the app, however removing it is easier) - this is really petty and isn't anything bad ,just something I noticed. &amp;#x200B; I also noticed that your num variable will be unpredictable when overloaded for example 2147483647 is too high however 2147483648 is to low &amp;#x200B; And to finally answer your request. (I wouldn't make this change by the way as tryparse is fine) You would have to take your correct code of tryparse and make it int num = int.Parse(Console.ReadLine()); Then add a try catch to handle the newly introduced exception for invalid entry &amp;#x200B; I actually think it's good that you want to write error handlers in your code , however I would work on the overflowing num variable which is a real error rather than changing working code just to write a error handler that isn't needed for strings. &amp;#x200B; I'm not sure what grade your in, but you should know that your code is decent and with some tweaks would be just fine. &amp;#x200B;
Yeah? AOSP?
It allows you to build services that are essentially disconnected. Imagine a company like Amazon. They have various different departments responsible for dealing with customers and customer orders. When a customer first registers you might want to raise a message to a broker CustomerCreated. Various endpoints might be interested in that event. You might have an endpoint that needs to send the customer a welcome email. Marketing might want to know that a new customer is on the website. They can all listen to that message and do with it what they will. Security might be interested in checking whether that email address or IP address has been previously related to fraud. Rather that build some behemoth application that sits there holding web server threads open whilst it executes all of those jobs, message brokers allow you to belay those jobs to responsible parties. The idea of microservices and single responsibility principle ties closely to event message brokers.
&gt; Any individual developer can use Visual Studio Community to create their own free or paid apps. [Source](https://visualstudio.microsoft.com/vs/community/)
There is another access modifier, it's called "internal" and imo should be the standard instead of making everything public by default like a lot of people do. Allows you to control access of classes over assemblies (or projects). Don't forget that dependency injection not only decouples your code, it also facilitates testing by allowing you to inject test classes. Basically, the main difference between a class and a struct is that a class is a reference type vs struct being a value type. 
Thanks
But what if you're stranded on a desert island and need to code your way out of there and you only have access to notepad! 
no problem :D, I wasn't as well, till a few months back :D
It will no longer be an exclusive feature of pro+ in VS 2019.
Why not simply download vs community ?
Yes it has some licensing conditions for non open source conditions (IIRC, your team can't be greater than 5 ppl.) It's all at the bottom of this page https://visualstudio.microsoft.com/vs/community/
Whilst you can back-off the data processing to another system, one of the problems you have is then giving the calling client an answer that the processing was successful. There are basically three models: * Simple - HTTP POST -&gt; Process Data -&gt; 200 OK response * Request-Poll-Response - HTTP POST -&gt; Queue processing -&gt; 202 Accepted response * Client HTTP GET -&gt; Where's my data -&gt; 404 Not Found response * Processing occurs * Client HTTP GET -&gt; Where's my data -&gt; 200 OK response * Request-Webhook-Callback - HTTP POST (with webhook/callback URL) -&gt; Queue processing -&gt; 202 Accepted response * Processing occurs * Client waits for callback to their exposed API callback endpoint * Server Callback/webhook HTTP POST -&gt; Client updates their end -&gt; 200 OK response I've done all three for separate projects using either RabbitMq and Masstransit or NServiceBus and MSMQ (never again) in the MQ models, and of the three I find the Request-Webhook-Callback the best for jobs that really do take a long time. But that really is the bottom line. The complexity, not just for calling clients, but for you too has to make the extra complexity worth it over having a slightly longer response time on the simple model. The second model, Request-Poll-Response is resource intensive for you and the client. Depending on how often they poll, you could end up with lots more load on the database servers than you expected. For the callback model, development and testing is a shitshow. For anyone that's worked with developing stuff for PayPal and callbacks, you'll know the score. The only good solution I've found for such testing scenarios is [https://ngrok.com](https://ngrok.com/dashboard) which allows you to tunnel through to your local running web API instance. So, your clients who want to build their systems to accept callbacks, need to use something like that. And when it comes to corporate clients, you've got multiple firewall hoops to get through. The client starts whining that they aren't receiving your callbacks, and you find out that some dipshit network tech in BIG3 Global Services decided to only open the firewall one way on the original whitlelist firewall change request (no shit Sherlock, a HTTP connection has a request and a response going both ways). Firewall changes take 14 days and have to be signed off by a manager and IT and the stakeholder is blaming you. &lt;/endrant&gt; I think it's often better to go with the simple model and optimize the pipeline as best as possible, cache all the things you can. Depending on where this is being hosted, consider using things like Azure Functions to replace specific high load API methods (i.e. you can replace a specific POST or GET etc), and then put an Azure CDN in front of it all so you have regional endpoint availability and caching. I've done Client -&gt; Cloudflare -&gt; Azure CDN -&gt; Azure Function -&gt; Azure web app - as an example.
Vs code, vs community edition
I think you meant [this](https://www.learnentityframeworkcore.com/relationships) which doesn't even shows a code about how to load these data. &gt; This is definitely possible within EF Core. Well, yeah, but actually no. Before you spread false information, at least [you should do a google search](https://stackoverflow.com/questions/44332810/entity-framework-core-update-relation-with-id-only-without-extra-call) where people mention, that the only solution is a "hacky" way, that isn't even safe at all. So there is no built-in feature for this in EF Core, but you **can** make a workaround, which in fact I'm developing now. But it takes time as you have to be aware for a LOT of things that EF does in the background.
I know, that's why I said "might" ;)
Here I mean popularity, not the 'quality' or 'technical excellence' of EF Core (support of db-level GroupBy was added only in 2.1 - that's really shame). As a developer, you may not like EF Core, but most of us work in teams and large projects where EF Core is a 'default' choice that cannot be changed.
Autocomplete helped me learn methods much better
I can understand that premise, but I can also understand that it's just good practice to know what goes on under the hood without depending on certain tools. I'm huge on IntelliJ/Rider and love the way they've set up their IDE's, but I want to be able to know how to type things out in case I'm needing to utilise another computer that doesn't have the preferred tools that I use(it happens from time to time). &amp;#x200B; I think it's more than just knowing the names of some methods, but rather knowing the intricacies of things like methods, classes etc. that pay off when debugging.
It's definitely taught me a few things that none of my lecturers knew, for sure!
The whole calculator to pen and paper nuisance from school comes to mind...
Autocomplete is how i learned C# hahaha. "Ok, let's press `.` and see what I can do with this thing"
TIL. 5 users if your company has under 250 PC and under 1 mil US turnover.
Same same... :(=)
Nahh its some freeky arse single thing... One day, before I retire I am going to get to say.... I need a private protected accessor here.
&gt; See https://blogs.msdn.microsoft.com/ericlippert/2009/01/26/why-no-var-on-fields/ for info on why that won’t be happening! Yeah I know that, but again, it was written 10 years ago. &gt; If you dislike this new type inferred new, do you also dislike var for being one more way do something? Genuinely curious. No, I use var always. I’d have preferred a type annotation more similar to Swift/ML etc., but here we are. I just don’t want even more ways. 
I once did a C# test for an Amazon interview without an IDE and nailed it. Then I decided Amazon was slavery.
Doesn't c# have some project files that are generally not really human friendly? or does VSC bootstrap it like Vs does
Just to nitpick, Unity does come with mcs.exe, it would be pretty useless if you couldn’t compile your code with it. ;-)
Even less feature rich if you're building a framework app.
Yes.
How can I fix this?
I wasn't contradicting you just clarifying in case it helps anyone ;)
I guess you learn something new every day, thanks for pointing that out!
Download .NET Core SDK (2.2) Use whatever editor you want and compile with "dotnet run".
TryParse will return a bool if I’m not mistaken, try: If(! Int32.TryParse(Console.ReadLine(), out int num)) { “You didn’t enter a number” } Also your conditional logic could be changed to one if, else if, else. 
The data is stored in sql local db. But I load it to a class model that stores it. I could bind it to the DB directly is this way we can solve this. What do you mean by : " Maybe another data type could be used instead to bind to "
Ctrl + -
Thanks, that's kinda great
Use the dotnet cli.
Seriously?!! OMG awesome news. May I ask your source? I can't find anything about it
That's why when your team gets to big just use vscode ;) our team is much larger than 5 and we all use vscode. A few of the more senior guys use visual studio community. There will be some things you need it for perhaps nuget stuff or build settings which I'm sure you could just do manually or through vscode if you know what to do. But I make changes to our .net core projects each day with vscode.
Removed: Spam.
Same. Vscode is my go-to editor now. I still use vs2017 for.c# but angular I use vscode. I could probably switch to vscode for most things...
This is where the reddit hive mind kicks in.
Good to hear! Forgot you’re not running Windows, my apologies!
Does this mean that methodAfterElapsed1 have to wait for methodAfterElapsed2 the before running?
Removed: Rule 3.
I never understood this problem new learners complain about.. I started with a problem I faced while working on anything and coded my own tools for it. There was never a part where I spent my very precious life in sololearn bs. That too on mobile! My gosh, you also want to learn how IDE's like VStudio work, so why not directly learn on them? Here's an example how good professionals work and sort of bridge the gap: I wanted to compare a file's hash with that of a virus hash. Antiviruses do it. But I wanted something that doesnt take my data and is my personal tool. So I made it in C#. All the doubts were solved by using search engine and testing. It boiled my brain if I got stuck at something, but I literally has 50 tabs open for the same problem. I tried all solutions, mixed them, improved them and came with the best suited code for my problem. Thats all.. Thats how you bridge the gap. Just make something useful to you and others. Also open up any github project and try to read others source code for problems. Most codes have comments. You can also browse through thr commits made by developers read the changes made and how the new code may be better. 60% part of development is research. For unity game developoment, maybe open a youtube tutorial and follow it all along. It may take weeks, but you'll have your own project in the end. Then keep updating it and make it unique. Hope this helps.t
But it requires effort lol Why not just go to college or read the book and let people teach you? /s
Hard way = real hax0r Easy way = n00b kiddie ^ rule of life. OP's choice if he wants to be digital dictator or a d$ck suck3r
&gt; A few of the more senior guys use visual studio community. So they're violating the terms and conditions and put the company at risk.
You can even combo it. 5 users with Community and 3 with Pro for example.
code first, learn after. (as long as security is not an issu) 
*How to gap the bridge between learning the basics and actually coding something?* The very easy and true answer: By actually coding something. Something simple. Then something else, but a bit more complexity. And so on and so forth. Learning and doing are not two separate things. I myself do cycles of learning from a book and doing code sprints. You firs have to be honest with yourself: Do you have the capacity and drive to actually learn programming? Only proceed if the answer is a YES comming from deep whithin... &amp;#x200B;
!εε7 w/ u keed haha
As an alternative to keybinds, forward/back buttons on your mouse (if it has them) work as well. That's what I use at least.
SLN files are not large, but just lists of GUIDs. I wouldn't want to edit those manually, even in VS. CSProj files are just XML, and with the new project format, not even very big or complex. They used to require every file in the project to be listed, but now it assumes every file is included unless you blacklist it. And most of the other attributes are optional. So a valid project might be as small as 10 lines of fairly simple XML.
Not necessarily. Depends on how much more ”much more” is for this person.
He wrote: &gt; our team is much larger than 5 Which means no one in the team can use the Community edition. It does not mean "up to 5".
Yeah that’s just ridiculous. JetBrains has tools for generating stupid stuff like constructors, getters, and setters, not building the logic of your program. 
Thank you for raising awareness of this. It gives a good impression of Moonwave Interactive.
This is the only answer
I think you are watching all the tools you have at hand (Python, C#...) and this fascinates you. The possibilities are endless (and possibly overwhelming). You want to do something but you don't really know what, so the gap between learning and doing is an abyss. Define a simple project. You can get some ideas from [this post in Medium (freeCodeCamp publishes very cool articles btw, check them out)](https://medium.freecodecamp.org/want-to-build-something-fun-heres-a-list-of-sample-web-app-ideas-b991bce0ed9a) or you can automatize some task in your daily life to make it it easier, making your way [as far as possible from tutorials and stuff](https://dev.to/raddevon/stop-doing-coding-tutorials-1o4l). Good luck!
Let's just be clear, it is NOT exactly the same. It is missing some really nice features.
Just download Visual Studio 2017 Community (VS17). A lot of people are recommending VS Code, but you'll have to download and install many extensions that 1) you'll have no idea what they are for and 2) VS17 already has. Once you get comfortable with C# and programming in general, you'll be able to make a better, more educated decision about VS17 or VSCode. You don't need the paid licenses like Pro/Enterprise/Ultimate (whatever they call it these days). I use VS17 Community at home for personal projects and VS17 Professional at work. Now, if you *want* professional *and you are a college student*, you may be able to use Microsoft's Dreamspark (they changed the name recently so this isn't the name anymore). When I used it, I got VS17 Pro for free until I graduated and I just needed to provide my school email and waiy for my Microsoft to verify with my school, though I am not 100% sure the latter happened because I vaguely remember having almost instant access to Pro once I provided my school email. Hope this helps.
it does not have codelens or a lot of other nice features
It has improved a lot in the last few months
You know the answer. If he did, he would not be blaming random people.
The website I provided and the one you linked to are the same thing. You should read up on the change tracking information in the DbContext section. It may not have an exact code example of what you are trying to do, but the documentation on change tracking may be useful to read. I’m not spreading misinformation. If you provide me with a concise explanation of what you are trying to accomplish I will pull together an example. 
* Write Tetris in C# with Winforms * Write Tetris again in C# with WPF or MonoGame I used games as a way to learn the ins and outs of the language. If Tetris is too hard, try making Pong first. For bonus points, make Tetris/Pong multiplayer :-D. This may not appeal to you but it helped me immensely. FWIW, I had no intention to get into game development (and still don't) and I have primarily worked on financial and call-center software in an enterprise environment.
How do you build with VS Code?
Hey, thanks for the reply! I think I didn't explain my problem properly. I do realize that I need to actually code something to practice and to learn. For example, with Python I try to do all the sample problems the author suggest in the book, and I always try to play around with what I just learned and to apply it in actual code; I don't just read the book. What I struggle with is: 1. That right know I don't really have any personal tasks or projects that I could solve or automate with code, so I never really know what to code. 2. That I'm too overwhelmed by just starting big projects. Most of the time, I don't even know where to start or how I would do things, especially when I have never even heard of the concepts/skills/whatever you would use to tackle a certain project. Call me a n00b, call me lazy, call me stupid, I don't really care. Over time I have figured out what works for me. And what works for me, is expanding my knowledge, and then jumping into more complicated projects. In Python, I know what Regexes are and how to use them, how to find, read or write files, how to save data and access it again at a later time. And now I feel like I'm ready to tackle independent projects, and I will. I know that this is just what works best for me. And I just want to switch back to C# because I simply like it better and wanted to know if there were any recourses that would help me learn C# like I did with Python. Sorry, this was a bit of a rant. I was a bit disappointed by the hostility of the other comments. Your edit seems to be exactly what I was looking for, thank you! 
&gt; Visual studio community editon is free for personal use. It's free for commercial use for small companies. 
Visual Studio Code is also an option https://code.visualstudio.com/
&gt; The website I provided and the one you linked to are the same thing. You should read up on the change tracking information in the DbContext section. Which many peopel disagree with because it's just unstable. And I too ran into many issues with changing the status of the EntityEntries. &amp;#x200B; &gt; If you provide me with a concise explanation of what you are trying to accomplish I will pull together an example. You must came from Stackoverflow the post itself is pretty self explanatory, yet you still don't get what is the goal. &amp;#x200B; So even more "simpler" form: * Create a model * Add a related model (ForeignKey) navigation property to it * Edit the model by editing the relation (change relation), to change the relation, you must NOT query the related model again, all you can use is the primary key (ID) of the related model. &amp;#x200B; Why? Because the relationship (ID) will come from a DropdownList, which can not POST back the entire related model, only the ID. And re-querying the related model just to update the foreign key is very inefficient.
I'm having some trouble understanding how can I set up graphql-dotnet to query other services... do you know if there's any example available?
I'm guessing the guy just starting off doesn't care about easily reviewing change history. Codelens is about the only difference between community and pro.
It takes experience to both be able to push through frustration and define "done" in a way that you can reach it. Most of my projects started from asking, "What's a program that would use this cool new feature?" So I'd write that part first, or do just enough infrastructure that it made sense to try it. Then I did the new thing. Then I wasn't excited to work on the project as a whole anymore, and it fell to the side. This was particularly hard 15+ years ago when it was harder to get anyone to notice your projects or talk to people who could mentor you. I think it's also an exercise in learning to distill your requirements to their bare form, which is something you learn via hard knocks. Today I tend to try and separate my ideas into, "What's the minimum I need to be done?" vs. "What would I like to do after that?" I usually finish "done". I only do the rest if I'm still excited when I get there. But 15 years ago, I'd define "done" as "a minesweeper game with a high score table and an about dialog and a toolbar that has these images on it and unicorns and ponies." One of those things is a requirement. The rest is just junk that made it feel 90% complete when I was actually done. 
Yes thats a good point. Huge scope never ends and then beginners keep adding new features to incomplete scope.
On a very slow laptop I was able to build a table of 3 columns and 10,206 rows in 5 ms. Definitely a major improvement. Thank you for pointing out my mistake!
I use MonoDevelop on a Linux machine and I and had no idea there was anything exotic about it. 
As in Visual Studio, with MSBuild. But the best way is to use a build server 
Codelens will be in community 2019 and is already in VS Code
What exactly is CodeLens? I can't find docs on it and it's a feature in vscode I'm never sure about
The things I've found most useful when choosing a learning project are it should be something I fully understand where "done" is before I start, and it should be something with a little challenge I make beforehand. ### Done "Done" is your hardest thing to define in a personal project. You absolutely have to tell yourself where it is and make sure you define it at the best point. That means getting skilled at removing cruft. If you want to write "a minesweeper game", don't add on "...with a timer, and a high score list, and completely customizable difficulty levels, and..." Every "and" you add to your project is time. Some of those will be exciting and you will finish them. Some of them will be boring and you won't. In a professional gig, you have a paycheck and ethics to motivate you to do the boring parts. In personal projects, you shouldn't be doing stuff that bores you. So get used to bare-bones if it means you get to test out the concepts you want. My hobby work 15 years ago was custom WinForms controls. I didn't think about, 'What's a viable application that'd use a traffic light indicator?' I just wrote the control and some debug buttons to run it through its paces. Now I'm learning HTML/JS via writing big forms. I don't find CSS and graphical design so exciting, so I adopted a black-and-white approach with minimal styling. It'll seem like cheating. I've moved "done" to a lower bar, right? It turns out this is how customer requirements work in the real world. They're not good at it. They'll bring you some leaves and ask you to give them water and matches when they really want "a cup of tea". They'll think of a game like Minesweeper in terms of "a timer, and this many difficulty levels, and a high score list" but none of those things are actually a required part of a Minesweeper game. Learn to separate your project into "what I need to show it off" and "what I will do if I'm still excited after that". It's a valuable skill. ### Fully Understood (Small) When you are learning, you lack experience. You don't know what you don't know. If it takes you 4 or 5 pages to type a description of your application, odds are it will take 10-15 pages to describe the parts you haven't thought of yet and the lessons you have to learn along the way. So pick a problem you can design in half a page, that way you only have to learn 2 pages of lessons before "done". The chasm between "what I think I know" and "what I do know" only shrinks with repetition. Every time you do a completely new project, all bets are off. My kit for learning a new application tends to be single-form applications that calculate things I can hand-check. A simple calculator is also a good GUI project. If I can't implement it in less than a day in my best language, how can I expect to implement it relatively quickly in a new one? Obviously if you want multi-form applications and such you need bigger, more complex apps. I move to those after I can do the single-form ones without stumbling. Focus on making projects small. Small is achievable. Remember the Minesweeper example. Each of the "extra" requirements like a high score table are small. But when you add 10 small things to an already-significant project, it's like adding a very large thing. Make projects without the word "and" in their description. ### Challenge This is easy when it's something you don't know: the challenge is learning it. But I also like to repeat some of my projects when I'm learning a language. How do I make that challenging? I try to choose a new approach or add a new feature. Maybe this time I want to try a new unit test framework. Maybe this time I'd like to use different UI elements. Maybe I want to see if I can finish it faster than some amount of time. There are a lot of ways to shake up the same requirement into different projects. Even if I add a "useless" new feature, that's something. The hope is each time I finish a project, I'm faster, because I remember the pile of things that didn't work. Sometimes, you'll fail. Some ideas are bad. Sometimes the lesson learned is, "Well, you can't actually implement this application that way." Remember that some of the most important science discoveries of our time came from *failed* experiments. Failure is done, so long as you learn a lesson. That's why I like repeating lots of small projects I've done several times in new languages. I already have a lot of knowledge about what does and doesn't work in them. So instead of struggling with, "How do I write this program at all?" I struggle with, "How do I do this one pattern in this language?". The only way to get there is to do an awful lot of programming. Eventually you'll start to see every big program as lots of tiny programs all jammed into one box and working together. The more tiny programs you write, and the more often you write them, the more you'll find you can do complex things in any language. 
*For example, with Python I try to do all the sample problems the author suggest in the book, and I always try to play around with what I just learned and to apply it in actual code; I don't just read the book.* Imo that's the right way to work through a book. *What I struggle with is: That right know I don't really have any personal tasks or projects that I could solve or automate with code, so I never really know what to code. That I'm too overwhelmed by just starting big projects. Most of the time, I don't even know where to start or how I would do things, especially when I have never even heard of the concepts/skills/whatever you would use to tackle a certain project.* After you have some solid basic .NET/C# foundations and you already have done some small and simple command-line projects (yes, there is some in Rob Miles book), I would advice to choose an applied technology which is **mature** and state of the art at the same time and builds on top of .NET/C# and where you have some interest in it. Applied technologies are like "ASP.NET Core MVC" (server side programming for web), WPF for Windows GUI, Some .NET Android framework to develop Android app etc. Here you rinse and repeat your learning: get a good book for that technology, read and try the basics of that technology then choose some small/limited scope project and implement it. Don't choose a project idea on a whim. Read and think about it a bit, talk to some more experienced .NET programmer what he thinks of the scope. Etc. Since you will work on it for weeks it makes sense to get a feeling of the scope and complexity in advance. Also it always makes sense to be conservative when choosing a scope for the project. As you are in, it will get bigger and bigger (Scope crawling is the name for it) which can easily grow bigger then your free time or willingness to finish it. So for example some home/learning projects I actually did to learn new things (NOT IN ORDER OF COMPLEXITY): -(currently) ASP .NET Core MVC: A web based wedding page, for sending out invitations and managing responses, managing page setup and content -Implemented the "Seam Carving" algorithm and around it some basic and ugly WPF window to show the results -Implemented some basic 2D platformer (Rob Miles book!!) based on the now dead .NET XNA framework -Implemented some basic WPF app for displaying and managing data -Implemented some basic Youtube Video/audio downloader based on Youtube explode (NuGet) 
I think it's the difference between learning something as an exercise and applying the knowledge for real. You can set up the Roman numeral converter kata and say no IDE allowed, and if bad things happen then you've learned something. But if you're working on code we might care about later on, use an IDE.
Except that Microsoft literally wrote “up to five”. “For all other usage scenarios: In non-enterprise organizations, up to five users can use Visual Studio Community”
As long as they have less than 250 PCs and less than $1 million in annual revenue up to 5 users can use Visual Studio Community On the bottom of the page under "For organizations" https://visualstudio.microsoft.com/vs/community/
I stand corrected, thank you.
I stand corrected, thank you.
&gt;Also it's pretty much exactly the same as the pro version of VS. Unless you are working on commercial projects you won't need to upgrade. Back in the da You can use community on commercial projects if your team is up to 4 devs and you don't earn 5 millions a year, something like that. On the download website you can see all the conditions, but it's pretty nice.
You can't find any docs? Really? Did you try to Google for "CodeLens Visual Studio"? https://docs.microsoft.com/en-us/visualstudio/ide/find-code-changes-and-other-history-with-codelens?view=vs-2017
I am more on the front end. But basically run the .Net projects through docker and its does all the building and dependency stuff.
Thanks, I didn't knew that their compiler was free on the command-line, it's nice to know.
No probs. It’s quite nice of Microsoft, especially if you want to get started on a project with some friends that may turn into a business.
[CoreHook](https://github.com/unknownv2/CoreHook) - A library that allows you to intercept application function calls and allows tracing of function arguments by hosting .NET Core in a target application and writing function detours in C#. It will be updated to support features coming to .NET Core 3.0 like AssemblyDependencyResolver. It supports detouring public API functions and private functions with symbols as well. Always looking for more feedback and help improving it in any way as well.
This is impressive for a single person's piece of work.
Thank you! Contributions are welcome as well, though ;)
UWP apps run in an [isolated AppContainer](https://docs.microsoft.com/en-us/windows/desktop/secauthz/appcontainer-isolation), which means they cannot access other applications.
That's by design. The KeyDown event is generated from a WM_KEYDOWN window message. But only active/focused windows receive window messages from the keyboard. To always receive keyboard events you need to use a keyboard hook.
Technically, only one control can have input focus at a time. That is the only thing that is supposed to respond to input. But. MORE technically, in API, there is a focused *application*, it has a focused *window*, and that window has a focused *control*. Windows itself only really knows about the focused window, and it sends input messages to that window. The window is responsible for interpreting that input in terms of the focused control. So you probably want the calculator to interpret the '5' key press if and only if the calculator window has focus, and probably not "even if it's minimized keep seeing keys". In Windows Forms you can do this by setting the form's `KeyPreview` property to true. When it's true, all keyboard events are raised for the form in addition to the specific control. There are some alternatives like hotkeys, but this is good enough for most scenarios. I'm pretty sure WPF has a similar property.
Yes, this. The additional features are only really useful if you are collaborating with a team (in which case, you would need to upgrade anyways) as far as I can tell. Make an app, publish to azure websites in seconds. Beautiful. Though I do love me some VSCode for .NET Core and powershell stuff.
Looks really great! I'd love to try it out as soon as I work with a WPF app again
Yeah I really only use Windows for my day-to-day job but even then we run Kali on our interceptor machines so I focus on that as often as I can. I'm mainly a Mac/Linux user for my personal uses other then gaming.
No need to be a dick. I don't use visual studio often and was looking for docs in relationship to vscode. 
Im getting a text file with words seperated on each line. Using the regex to split it. The words split fine but the execution of all the code is incredibly slow, 5 minutes and my PC was still frozen. OnInputEntered is used for lookup of words containing a specific substring (word). This is where the code gets stuck
For .NET Core, you just download the SDK and then use the fantastic CLI. "dotnet new console --name HelloWorld" Then CD into the project directory and dotnet build and dotnet run. I believe there is a CLI for .NET Framework but I am knowledgeable about that.
There's also a Windows API (https://docs.microsoft.com/en-us/windows/desktop/api/winuser/nf-winuser-getasynckeystate) 
True
It only means that they can't run at the same time. It won't guarantee which runs first. 
Just some small stuff that you could consider improving &amp;#x200B; If you change the random generator to `random.Next(1, 100)` the text is wrong. maybe reuse some numbers somehow? Maybe you could take in an argument what the maximum number is (could default to 20) Do some refactoring of methods to make it more clean looking Check if the number is within the range and not just say it's smaller or larger. I.E 10000 would be larger .. but it's not in the valid range. 
Where are you calling `AddToDictionary(string text)`? In a loop? If so, you could factor out the `Regex.Split` so that it isn't created on each call.
To start you don't need to loop to add to the list. Use something like this instead. list.AddRange(\_currentDictionary.Where(m =&gt; m.Contains(word)));
I know. But there must be a way. I recall seeing it once before. Maybe with uri schemes?
Its only run once on start. OnInputEntered runs on every keystroke (when its enabled). As soon as I press a key it freezes
Does this have performance benefits?
Yeah, that setup with .NET Core is awesome and is what folks should be learning now.
I don't think I've ever seen Dependency Injection used with restraint. It has been an "all or nothing" affair. And every time I've seen it used, it renders code grossly bloated and difficult to debug.
Well as stated you could do something like _dico.AddRange(text.Split(',')); This doesn't take care of doubles entries or any check like string null or empty in your input
Use [semantic versioning](https://semver.org). However, you need to be aware that, in the .NET world, there are *three* version types (assembly version, file version and informational/product version), each doing something different. Their differences can be summarized [here](https://stackoverflow.com/questions/64602/what-are-differences-between-assemblyversion-assemblyfileversion-and-assemblyin). Tips: * You should generally only increment the MAJOR version for the *assembly version*. So your info and file version might be v3.6.42 but your assembly version will just be v3.0.0.0. * The file version needs to be compatible with MSI-based installers due to registry constraints which can be found [here](https://docs.microsoft.com/en-us/windows/desktop/Msi/productversion) (note that product version in the article is the file version). Generally, if you are using semantic versioning, you will likely be fine. Also note that the default behavior for MSI-based installations is to completely ignore the REVISION when determing version precedence (i.e v1.2.3.4566 == v1.2.3.8777 in MSI-land), so you should *not* use the REVISION in the *file version* for anything significant. Due to this, I usually recommend setting the REVISION equal to the build number, usually supplied by the CI build software being used (i.e Atlassian's Bamboo), and set the first 3 version components equal to the MAJOR.MINOR.PATCH expected for semantic versioning. * The informational/product version *must* strictly adhere to semantic versioning rules if the assembly is expected to be built into a NuGet package. Otherwise, you'll have to write custom MSBuild instructions or other workarounds to specify the version for packing the assembly into a .nupkg. * The informational/product version is also typically your "public" version, the one you'll display to users/consumers. There's more info, but I think that will get you started. People might have other, perfectly acceptable ways to version software but what I said above maximizes compatibility with existing technologies and minimizes development headaches.
That block works fine, and doesnt take long. The issue is in the OnInputEntered method
Poor mans benchmarking, measure using a stopwatch var stopwatch = Stopwatch.StartNew(); // code stopwatch.Stop(); With this you can get a baseline before you do any optimization. As you said, it's probably the foreach loop in OnInputEntered that's the issue. Next step would be to evaluate if your current choice of collection is the best, based on the usage I suspect that you can find a better collection
Looks really cool! I am going to use it
It looks like you're trying to do some sort of auto-complete. You have a list of words, and you want to find all of the words that contain the user input. Is that right? &amp;#x200B; Option 1: Use parallelization. I'm guessing that \_currentDictionary has a large number of entries. So you can speed it up by running your Contains search in parallel. Here's some pseudo code: * Break the hashset into n subsets, each about the same size. * In parallel, run the contains check to fill n lists. * Once all the parallel step is done, concatenate all the lists together to get your result. Since OnInputEntered runs on every keystroke, you might also decide to only run the autocomplete algorithm once the user enters a minimum of 3 characters, just to keep the results to a reasonable size. &amp;#x200B; Option 2: Use caching. Since you run this method every time the user types a character, you can bet that the new string is identical to the old string, but with one character added to the end. If you actually check for this, then you can cheat on subsequent searches. Here's some psudocode: * If the previous run's input is contained within the new run's input, check only the results from the last run. * Else, check \_currentDictionary * loop through the options, adding them to a new list * cache the list and input before returning, so you can use them on the next pass &amp;#x200B; Option 3: Use Tasks to do the work in the background This won't actually make it faster, but it will make the UI respond faster. Make the method async and run it in the background, and make the task cancel-able. That way, if the user hits another key, you can cancel the previous task and just start over with the new input. If the user waits, they get the result of the method. But if they keep typing, the UI responds immediately. Win-win! &amp;#x200B; Of course, these options can be combined for even more performance gains.
so if I want it to not run at the same time, I should use the same lock?
I need fast lookups, so i thought hashset would be good as there are no recurring values
Parellelization certainly seems interesting. Ill try that
Great stuff
Hashset could be fast, the string comparison is not (in your where clause) 
You don't get CodeLens in community edition. Which is not a needed feature, but it is nice to see just by glancing at a method if it's referenced, how many times, and who last worked on it.
Isn't that where the problem is then, OnInputEntered() instead of AddToDictionary()?
Does AOSP have any builds? I don't think "open source" counts if it doesn't run on anything
The datagridview can bind to a few different data types. In my work I’ve worked a bit with the DataTable object, and it’s one of the data types the grid view can bind to. You’re binding to an SQL database, and I was thinking if you transform your data queried from the SQL db to another data type that could possibly support button columns, and bind to that. Unfortunately I don’t have a straight up answer, so I was hoping it might give you some ideas which could work. But, based on the other comment, if it really is unsupported, then it looks like you will have to build the datagridview as you read the data, rather than a straight bind. This will be slower for performance (but it’s should be possible to work around), and would take more code :( 
Who says coding tetris is a good start? 
Shift+F11 jumps out of current method if you’re debugging. 
If you use semantic versioning, then specify how **you** use semantic versioning. It's very vague in what constitutes a breaking change (as it is language dependent). Do you care about binary compatibility? Or do you care about compilation compatibility? Because even renaming a parameter name can be a breaking change.
Aren't those available as nuget packages?
But there are fundamental things that a dev has to know. You don’t want to destroy a dev’s productivity because they don’t know what their equivalent of print is. You don’t want your dev to have to google the format for a struct in the language they are using. You do want these beginner devs to work without autocomplete until they can get these basics down. 
As far as I know, it's just source. If you want a full build of an AOSP ROM you'll have to look elsewhere as they're phone specific. xda-developers tends to have a lot of resources.
Long time ago a friend build a custom version of stepmania using a windows form. Obviously performance was not the principal objective. its perfectly possible to build it using bitmaps, timers and events.
Someone else already touched on this, but for what it’s worth, this isn’t how you use a hashset. The useful efficient function of a HashSet is seeing if it contains an exact key, which you are never doing. Instead, you are effectively iterating over the hashset running a linear search for substrings in each key. It would actually be faster to use a List instead of a HashSet for that collection, since a HashSet has creation overhead that a list does not. That said, this change won’t be large enough to noticeably increase performance, but it’s worth knowing regardless.
Other interesting topics like; * What is their data access layer? * Do they even have one? * How does it fetch data, and share it with the rest of the application, or even other processes? * Is data being duplicated? * UX: Is the application nice to use, or are people miserable? * Why is it good/bad to use from a user's point of view? * How does the code look like in the parts of the app people dislike? * How does the code look like in the parts of the app people like? This list is pretty endless, I'm sure you can come up with more yourself.
The Office\_Core.STW nuget package offers these. HOWEVER..you'd be safer using something like EPPLus to manipulate Excel files; that way you app would work in any scenario. 
Correct 
A tic-tac-toe app is a good place to start, either that or a simple calculator app.
Try creating a sudoku solver if you want a challenge. Or a calculator if you want something really simple. Depends on what you really want to focus on. 
If the user is always typing from the beginning of the word (i.e. you're not trying to find "food" by searching "oo") then you can use a [prefix tree (aka trie)](https://en.wikipedia.org/wiki/Trie).
This is not a sub for doing your homework for you. What have you tried and what isn't working/making sense?
I agree.
OP didn't ask specifically for what constitutes a breaking change -- he seemed more focused on the BUILD and REVISION components of a version which I covered when I suggested sem ver and with my tips. If *you* want to know what I consider a breaking change, let me know and I'll give my opinion.
Hard to understand your problem exactly but what I think you want to do is have a variable that holds the mindate and a variable that holds the maxdate. Then when a radio button is selected, it would set min and maxdate variables. So that way they change based on the radio button thats selected
Your condescending attitude towards me in unwarranted, seeing as how I am trying to guide you to the answer. &amp;#x200B; The example you give in the last reply is not really descriptive of what you're doing. Seem like, however, your replied to a different user with the information I wanted. It sounds like this is what you are doing: &amp;#x200B; 1. GET Model1 (including a collection of Model2) in the UI 2. Update something in Model1 via the UI 3. POST the updated model back to the API, including a list of Model2 entities, all of which only have the Id property set, all other properties are null. And I assume this is where you run into the problem. You are trying to update only Model1 fields, but the change tracker is tracking the collection of Model2, and since all the properties are null except for the Id, it sets them null in the database. Correct? &amp;#x200B; If so, I'm working on a code example of how to correctly handle the update. \~30 minutes.
I see, thanks
You can always just download the project and setup GIT locally. No need to connect it back to the mothership if you are worried about that over writing your changes.
Yeah, u/x0nnex has clarified this
Thats what i've done, but the problem arises when I go from the war time era whose max year is 1946 then try and go into timeline 2 whose minimum year is 2018, it gives me an out of range error and I've even attempted setting the datimepickers value to something in the range of what ever radio button is selected but its still gives me that out of range error.
This looks good, Ill try this
I am trying random stuff since hours. I can't make sense of it. Thats all.
Jesus even for myself coding tetris would be a long problem/project to solve and Ive been a pro dev for years anyways I'd say tick tac toe. That was like my Java 101 "final" project in school that we were assigned, and for the time it was challenging to program - 2d array - how to walk it - draw on some sort of control (Id suggest WinForms or just keep it simple with a console board) - how to determine the win condition etc
Might help if you post the code. Are you setting the datetimepicker value before or after changing the range?
Would I be able to apply new updates from the original dev project if I wanted? How do I set that p from visual studio 2017? Do I need any extensions?
I've tried before, after, tried splitting them up and setting it in between. I left it in between the two since I couldn't get it to work anyway. [this should be the code](https://pastebin.com/r9kU4RHL), I added the other parts of the code as well, with the dates I'm working with.
You should probably start by checking with your instructor or teaching assistant or something.
Impressive! I sadly haven't worked with WPF for a while, but I'll make sure to try that when I do
Think I have found your issue, when I reproduce your code I get the error "'MinDate' must be less than MaxDate.". Pretty self explanatory. In the SetDates function you start by doing dateTimePicker1.MinDate = DateTime.Parse(StartDate); The issue is that the MaxDate is still set from the last time the function was called. What you want to do is reset the DateTimePicker1 everytime it is going to be changed. This should work: private void SetDates(string StartDate, string EndDate) { dateTimePicker1.MinDate = DateTimePicker.MinimumDateTime; dateTimePicker1.MaxDate = DateTimePicker.MaximumDateTime ; dateTimePicker1.MinDate = DateTime.Parse(StartDate); dateTimePicker1.Value = DateTime.Parse(StartDate); dateTimePicker1.MaxDate = DateTime.Parse(EndDate); }
oh gosh you're such a life saver thats been bothering me for weeks thank you!
This is a programming design and logic problem. Not just c#. Recursion is an initially difficult concept. Once you figure out how to talk to yourself, you’ll figure it out. 
I would imagine if you branch the original project on your local machine immediately... sure? You are asking for a lot of cake and wanting to eat it to.
&gt; It has been an "all or nothing" affair Good! That's what it's meant for &gt; I've seen it used, it renders code grossly bloated and difficult to debug. Then you need to work with better developers :). Interface segregation can make things harder to observe, but that's usually a good thing unless you're doing heavy modifications. It's better to look at an abstraction instead of an implementation, however it can be annoying that you can't F12 into a method because it goes to the interface, that I do agree with.
So in the diagram, the flow is 3: save to outbox, 4: commit transaction. But what if the commit fails? Should the message remain in the outbox? Should it get its status updated? What if it were already sent, before you managed to update the status? Should a new message be sent? At the very least, saving to outbox should be postponed to until after the transaction has succeeded.
&gt;And I assume this is where you run into the problem. You are trying to update only Model1 fields, but the change tracker is tracking the collection of Model2, and since all the properties are null except for the Id, it sets them null in the database. Correct? Well, for clarifying for the 5th time: yes. I just wrote it down like 3 or more times by now. &gt; If so, I'm working on a code example of how to correctly handle the update. \~30 minutes. No need. 1; I already found in Google the "hacky" workaround, and I already implemented it. 2; It is still not a reliable or official way.
Say you have 2 models: &amp;#x200B; public class Model1 { public int Id { get; set; } public string TestField1 { get; set; } public string TestField2 { get; set; } public ICollection&lt;Model2&gt; Children { get; set; } } public class Model2 { public int Id { get; set; } public string Message { get; set; } } &amp;#x200B; And you GET the Model1 in the client like so (JSON): &amp;#x200B; { "Id": 1, "TestField1": "test3", "TestField2": "test3", "Children": [ { "Id": 1, "Message": "dont update me" }, { "Id": 2, "Message": "dont update me" }, { "Id": 3, "Message": "dont update me" } ] } &amp;#x200B; Apparently in your situation, the Children would get listed in a dropdownlist and drop all properties besides ID, and you would update some Model1 Properties. So, lets assume the Model you POST/PUT to the API to update is the following: &amp;#x200B; { "Id": 1, "TestField1": "test10", "TestField2": "test10", "Children": [ { "Id": 1, "Message": null }, { "Id": 2, "Message": null }, { "Id": 3, "Message": null } ] } &amp;#x200B; Notice TestField1 and TestField2 have been updated, and the Children all only have the Id set. &amp;#x200B; Now we will update ONLY the Model1 fields, leaving all children as they are. public Model1 UpdateParent(Model1 model1) { foreach(var child in model1.Children) { _context.Model2s.Attach(child); } _context.Model1s.Attach(model1); _context.Entry(model1).State = EntityState.Modified; return model1; } &amp;#x200B; You would also need to call SaveChanges() on the DbContext at somepoint. &amp;#x200B; In this example, the model returned back in the Update method would look like this: &amp;#x200B; { "Id": 1, "TestField1": "test10", "TestField2": "test10", "Children": [ { "Id": 1, "Message": null }, { "Id": 2, "Message": null }, { "Id": 3, "Message": null } ] } &amp;#x200B; Although all the Children's Message fields are null here, this is because the Children were never loaded, they were simply attached to the context as Unchanged. You already have all the Children in memory in the UI, and you know they weren't updated, so this is no problem. &amp;#x200B; Now, next time you query for Model1 where ID = 1, the following will be returned: &amp;#x200B; { "Id": 1, "TestField1": "test10", "TestField2": "test10", "Children": [ { "Id": 1, "Message": "dont update me" }, { "Id": 2, "Message": "dont update me" }, { "Id": 3, "Message": "dont update me" } ] } &amp;#x200B; Notice that the Model1 fields have been updated, and the Model2 Children fields remain unchanged. &amp;#x200B; Does this help?
There is nothing in this code that would reasonably take 5 minutes to execute, even if you have million of entries in the dictionary. How many times was OnInputEntered called during those 5 minutes? Are you sure the problem isn't in PopulateList? 
saving it after the transaction won't give at-least-once delivery. In case the process crashes after the first commit. 
Your condescending attitude towards me is completely unwarranted since all I am trying to do is help you understand your problem. &amp;#x200B; There is no need for a "hacky" workaround - see my other reply for the correct way to do this using the DbContext.
Also the transaction isolation level should be set to "read committed".
I don't have access to them now.
Thanks for the suggestion. I'll look into it.
Removed: Rule 4.
Okay. Well, here's a couple things: Forget the computer and recursion for a moment, and figure out how to do this on paper. That is, figure out an algorithm for generating all combinations 3 elements of the set {1,2,3,4,5}. Then, generalize that to generating all combinations of *n* elements of a set of cardinality *m*. You don't need to make this a *sophisticated* algorithm, just one that's correct. It's very difficult to implement an algorithm you don't understand, so start by understanding the algorithm. If the algorithm you wind up with isn't recursive, look into ways to *make* it recursive--your textbook can probably help you here. Unless you are *required* to use the method signature you presented above, it may be easier to generate combinations and return them in a collection (to be iterated and printed out in Main()), rather than generating and printing them as you go.
Can you do it with a pen a a paper, without code? My reasoning would be: For input 3, I need every possible combination that starts with 1,2. Then I need all combination that starts with 1,3, then 1,4. Then, all combinations that starts with 2,1 then 2,3. &amp;#x200B; From there, I'd have some form of logic in my head from what I have scribbled on the paper and start doing some algorithms on the paper.Then I'd ask myself what the inputs have as an effect on my logic. Once the pseudo-code looks good on paper, I'd translate it to C# and that's the easy and fast part.
We really need more like this. Despite being officially abandoned by Microsoft WPF has been the only legit way for nearly a decade to develop native desktop Windows apps and still there are little to no supply of high quality themes. I really hope you keep up with your superb work. I suck at design so the only thing I can do is appreciate...
It was only called once, populatelist is empty right now so couldn't be it
I did. You attached the child models to the context, which is 1; "Hacky" as it is "unofficial" behaviour. 2; If you go throught the StackOverflow link I linked, the first major reply is just what you posted here. And the subcomments instantly points out why it is not a good idea. The data will come from UI, which is "unreliable". You attach + modified version will create new entries in the DB if the POST-ed ID doesn't exist, a simple user with basic knowledge could flood the DB with entries. Except if I pre-check the validity of the ID, which is another query, which is I'm trying to avoid in the first place. &amp;#x200B; Also I was "rude" because I already posted several examples and explanation, all you had to do is check that few comments. AND even tho the post is pretty straightforward, your first moment was the regular StackOverflow attitude: Q: How do I add two integers in C#? A: I don't really understand what you trying to achieve, can you post your entire codebase, with your CV, a drop of your blood, a virgin sacrifice and the source code Windows 10? &amp;#x200B; I consider myself an average programmer, and even I can understant 80% of the posts on StackOverflow, where the first comment is the regular bullshit: "I don't really understand what you trying to do". And also in my eye: this question is pretty stupid. You could ask for a specific stuff, like reason, whats the problem excatly, whats the unwanted behaviour, but no. People on SO chose to totally not understant posts worded in nearly childish language so everyone could understand.
mark as closed! reddit saving more lives than stack overflow
Without looking at your given code, consider the basis of recursion. - make your problem smaller - keep doing that until you have an easy to solve problem - try to solve that - have an end state As I see it. The easiest set of permutations is that of a single digit. That’s just 0 (or 1) through 9. Try to find the difference with a more complex problem (2 digits) and work your way back. A solid grasp on recursion as a principle is paramount tho. Without that, you won’t be able to solve something this complex 
Can you give a reason why please? 
I'm not going to provide a direct solution since this is homework and meant for you to understand on your own, but it can be done without recursion obviously. Since that might be the harder part to visualize at first why don't you focus on creating a method that uses for loops instead, and worry about the recursion last? 
As u/Wtach answered - saving messages to the outbox is part of the transaction so saving data and messages to outbox is atomic operation (all or nothing). Speaking in terms of design patterns saving to outbox is part of Unit Of Work - [https://martinfowler.com/eaaCatalog/unitOfWork.html](https://martinfowler.com/eaaCatalog/unitOfWork.html)
\[CryptoTrader.Tax\]([https://www.cryptotrader.tax](https://www.cryptotrader.tax)) - A capital gains reporting platform for cryptotraders to pull in trades across multiple exchanges and create a tax report that details their gains/losses for the year.
EPPlus looks AMAZING. I didn't realize this even existed. I'd been dealing with an issue related to .NET Core running on Linux where I had to cut all Excel related features because of this. Thank you!
u/FizixMan Hypothesis confirmed, I wasn't pinged but also I changed my Reddit username since his comment.
otherwise the outbox-processor will be able to read the rows that are currently not committed (and could potential be rollbacked). See Dirty Reads: https://en.wikipedia.org/wiki/Isolation_(database_systems)#Dirty_reads In case of the event bus /message queue example: If a dirty read would happen, than a message could end up in the messageQueue, but the part 2:Processing (what ever it did in the DB) would be lost, but the 4:Event would be sent out. Which is exactly what we want don't have here, we want: "all or nothing".
&gt; A lot of people are recommending VS Code, but you'll have to download and install many extensions Exactly [one extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode.csharp) gets you started, and i'm pretty sure we can all guess what it does :) &gt; many extensions that [...] VS17 already has Full VS has more than one needs to get started, way more. It's like using a raspberry pi to blink an LED. VSCode + C# extension gives basic refactorings*, debugging (minus edit and continue), multiple breakpoint types, git... &gt; Once you get comfortable with C# and programming in general, you'll be able to make a better, more educated decision about VS17 or VSCode Agreed. But learning a subset of full VS (vscode) is easier than learning full VS. Then move up from there if you want. --- *: refactorings is an example of something full VS does better than VSCode/C# extension. It's also an example of something that doesn't matter much when starting out.
It's not like I was just asking you to clarify for shits and giggles. The problem asked in the stackoverflow post you linked is different that your problem. Their problem is that they want to add a dependent entity to a principal entity without a foreign key in the dependent entity without first doing a select for the principal entity. You are trying to update the principal entity without updating dependents. Those are different problems, and that is why I needed you to clarify the ambiguity before I could answer with some code examples. If your question had been as explicit and concise as "How do I add two integers in C#" then I wouldn't need clarification. Sometimes the people your asking for help also need to ask some questions to understand. &amp;#x200B; Moving on... &amp;#x200B; I don't know why you think this is "hacky". I would say it is common practice to use the DbContext as I did in my example. The change tracking API was provided for a reason. Do you have any documentation that says this? I'd actually like to read it if so. &amp;#x200B; &gt; You attach + modified version will create new entries in the DB if the POST-ed ID doesn't exist, a simple user with basic knowledge could flood the DB with entries. Nope - This isn't true. "Before you spread false information, at least you should" actually test and have knowledge about what your saying. With the code sample I provided, the following behavior is true: { "Id": 0, "TestField1" : "string", "TestField2" : "string", "Children": [ { "Id": 0, "Message": "string" } ] } &amp;#x200B; * If "Id" on the parent is an ID which DNE, then a DbUpdateConcurrencyException is throw, so nothing is created/modified. * If you add extra Children, whether their Id's exist or not, the parent entity will be modified, and nothing will happen to the children. * If you remove children from the parent, the parent entity will be updated, and nothing will happen to the children. &amp;#x200B; My code example isn't perfect. It returns all the children which were in the request regardless if they existed or not. You could hypothetically fix this a few ways depending on your needs. If you don't need to return the updated object, don't - just return a bool. If you don't need to return the children after an update, just set the children to null upfront. If you do need the children, at some point you're going to need to make a query. But it isn't a hack, and it doesn't have the behavior you say it does.
What are you running the server side JavaScript in? Are you wanting to call c# code from inside a node server and vice versa?
There are some really good ones out there but there is little left if one does not like Material Design or Metro UI. Anyway, more libraries to choose from is better, I guess. I hope WPF gets a little attention back when it is supported by .NET Core 3.0. Thanks for your appreciation, btw :)
Thanks for responding. I'm more looking for guidance as to what tools are available and what architecture I should consider, as I haven't written any code yet. It's just an idea at this stage. From what I've read, you can embed open-source JS engines into various languages. I'm interested in the possibility of adding scripting capability to an app to allow an app administrator to modify workflows. For example the app might get some data from a database, and it's configured to run a JS script when this happens. The app makes the data available to the script and the script can then do something, like send an email for example. It might look like [JS pseudocode] var product = SomeClass.GetProductQty(sku); // get the product available quantity matching this SKU - app goes off to the database and the function returns an int if (product.qty == 0) // There are no available items { SomeClass.SendEmail('productguy@mycompany.com', 'Order more of + ' sku + ' please'); } This gives the administrator some control over the actions of the app by using the functions expressed to the scripting engine, e.g. GetProduct and SendEmail.
You could run node js on a server and then make http calls from your C# code. I honestly wouldn't do this unless I had some compelling reason to and would favor writing all of your back end code in C#. This would simplify your environment.
Well if your colleague already has it probably from source control. But otherwise just create the json file and put it in the project.
what is the framework you are using to make web apps? ASPX PAGES? ASP MVC?
https://nodejs.org/en/
EPPlus does an amazing job handling excel related things. I have used it quite a bit and I'm always surprised as to how much functionality I can get out of it. A few quirks here and there but overall an amazing (and stable) solution.
Maybe depends on what database you're using. &amp;#x200B; If you're using something with snapshot isolation the GET process won't see it unless it is committed. &amp;#x200B; If you're using something without snapshots, you need to synchronize on something. An advisory lock or read committed would work. How you should sync the processes is specific to the database you're using.
Heh, yeah :-)
Okay. So if we are using the x.y.z format then what are build numbers? Why does Windows have a build number? Even in COD 4, when you open the console, it has a build number. If x.y.z is popular and “correct”, then why is Microsoft using w.x.y.z?
Nice. Thank you EULA hero. 
Dude I've been using codelens for years and just found out what features i thought were just built into VS lol. dont need to be a "google it" bitch maybe post some shit posts in /r/pcj to cleanse your mind
Did you work at Amazon? Was it in the West (Portland/Seattle area) Did it suck ass (aka slavery)? asking for a uhhh friend :)
Ah yes, use the Tricycle that can be shoe-horned somehow into a Sports Car (Visual Studio), when the sports car is in your garage the whole time.
Build numbers are a way to identify the *exact* build that produced the binaries, though this isn't always the case. If I build my software that has a versio of 2.7.1 and it is the 37th build, then my file version ends up being 2.7.1.37. The first 3 components match the info version and the 4th component I use to identify the build. With semver 2.0, you can actually use the info version to specify the build number as well like this: 2.7.1+37 It really is up to you, but you gotta keep in mind that existing technologies might place restrictions on those attributes (the CLR restricts assembly version, Windows + MSI restricts file version, NuGet restricts info version, etc). For software that show a single build number, they are likely emphasizing it for tracking its providence (i.e the *exact* build that produced the binaries as well as a collection of all commits for that build + other ALM data). As far as why Microsoft used w.x.y.z, that depends on how old the software is. Microsoft is using semver for newer stuff but maintaining their old versioning scheme for older, existing software. You'd have to ask Microsoft to verify that, of course. Does any of this help?
While I haven't used either product, I'd start by looking into [V8.Net](https://www.nuget.org/packages/V8.Net/) which is a .NET wrapper for Google's [V8 JavaScript Engine](https://github.com/v8/v8). There may be other .NET wrappers for it but V8 is the JavaScript engine Google uses in Chrome so I'd stick with it unless there are compelling reasons to look at something else.
Try something similar to http://www.pythonchallenge.com/? I've just recently (like the last six months) come back to C# after playing in the Python and Powershell arena for a few years. I think what you program in isn't as important as figuring out how to solve the problem before you. After that the programming language is just a tool. A lot of people like starting web sites, and others enjoy writing backend code. Try some of each and see what you like doing.
Thank you so much for all your responses. I figured out in the end that it was the input data type that was causing the format exception error. I ended up having to do arduino.ReadChar and then parse the incoming data. 
Generally you can't call a function in a different language unless you can compile both language to object files compatible with eachother. Neither C# nor JS compiles down to C compatible linking so your options are A) Do something like ShellExecute which executes a binary. You can use stdin/stdout to send/get data B) Have a socket in your C# code that will read in a command and execute the function for you and send the results through the socket (maybe as JSON data?) &amp;#x200B;
nah
Nope. I decided soon after that test. I have a friend from Seattle whose husband worked there. I live in Melbourne, Australia.
Generally speaking allowing runtime dynamic code execution is usually a bad idea from a security standpoint. The first question I'd ask myself is how much customization of the actions is actually required. People end up creating all manner of complicated rules engines to dynamically apply algorithms for things at runtime, so this is a dark hole to go down without understanding the level of customization required. Perhaps the strategy pattern and MEF or some kind of factory might be a better option?
they've hidden a lot of the garbage now. "dotnet build" will be sufficient for many cases. 
Just create the file. Then I think you can use environment variables to set which file is used at runtime. 
&gt; Despite being officially abandoned by Microsoft WPF Sources? As far as I know, WPF is still alive and see fixes in every know and then, in quality updates of the .Net framework. Same goes for WinForms.
Is there a reason you want to mix C# and Javascript server side?
Yall doing it wrong, this is how you are supposed to write clean code -- [CLEAN CODE GOD of 2019](https://www.youtube.com/watch?v=immEmU3W6UA)
Just make a copy of one of your files and rename it to appsettinge.Production.json, the project should automatically group it based on naming convention. Also, If you use webhost.CreateDefaultBuilder in program.cs it automatically includes appsettings.json and appsettings.{environment}.json by default. https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/web-host?view=aspnetcore-2.2
I use "reference" lens at least 100 times a day. I personally wouldn't want to live without it
After reading you use case in the comments, the language Lua is more commonly used for this sort of this problem. Here’s an old example, but complete proof of concept: http://www.godpatterns.com/2006/05/scripting-with-lua-in-c.html?m=1
well they abandoned it in a way. they open sourced it so that people can add things to it instead of having microsoft do it.
He wants to write the application in C# and allow users (designated admins) to add additional scripting workflows. These admins won't know C# and, I assume, he wants to use JS because it's a popular intro language (maybe the admins know JS already, too)
https://github.com/tjanczuk/edge
In ASP.NET MVC you can call a C# controller function from javascript using ajax. 
I think the most straight-forward way would be to just create a c# console application and call it with some parameters from node. (you are using node, right?) You could also have both applications communicate with each other via a queue or something. 🤔
ChakraCore is the Microsoft tool for making hybrid JavaScript and C# apps. It uses their previous engine from Edge (they announced they’re switching Edge to be chromium based a few months back) It sounds like you’re comfortable with Microsoft tools and docs so you might look there over one of the V8 wrappers. Otherwise, if you want to be running a Node app and calling C# functions you should look at dotnet-script and write scripts that you can call from Node using child process exec.
yep I agree this would be the most straightforward method. That said if you absolutely positively have to call c Sharp in process try https://github.com/tjanczuk/edge
If you want full consistency, then why not serializable isolation level?
sudoku solver is a great idea. Could be an easy CLI app too. pass in an array with missing components and returned the completed array
I don't think you understand open-source.
Probably shouldn't put it in the project / source control, assuming it contains things like connection strings. Just get a copy of the file from your colleague.
At 5 min, something else is most likely going wrong. The code you’ve posted shouldnt be that slow. That said, there are already some good suggestions. Check out “Bloom Filter” for another possibility (often used for auto complete). Also consider splitting your collection (Hashset) into smaller subsets for possible memory allocation issues, though this is unlikely especially on a desktop. Make sure the text file is only read once. For profiling, does search time increase linearly? Your algorithms have linear runtimes. Half the data and see if it halves the time. This could point you towards other underlying issues. 
Remember, that what's easy for you, could not be easy for others. Nice advices though
Have you tried running profiler?
You should put your appsettings.json in source control BUT keep secrets (passwords) out of it. Instead, use something like [User Secrets](https://docs.microsoft.com/en-us/aspnet/core/security/app-secrets?view=aspnetcore-2.2&amp;tabs=windows#secret-manager), integrated security, token replacement in your CI/CD, Azure Keyvault, ... 
Try looking at Trie’s
Both options will be compiled/optimized to the same binary code, or very similar at least, so it's mainly just about readability and clarity: e.i choose which one you think is best for reading and clarity.
There's no best way for this. The first is a bit more clear to understand if someone else would read your code The second is just the same as a oneliner. I would prefer the first solution but it's up to you. 
last seen 7 days ago [https://www.reddit.com/r/csharp/comments/axjjfn/a\_later\_c\_version\_will\_be\_introducing\_records/](https://www.reddit.com/r/csharp/comments/axjjfn/a_later_c_version_will_be_introducing_records/)
Which would you choose?
Just so you know, this link was blocked by corporate firewall (FortiGuard) for containin pornographic material... I'm not judging, there are probably someone that thinks " **Automatic conversion of NUnit tests to xUnit using Roslyn** " is arousing, but there are limits... &amp;#x200B; Good article by the way. I've been looking for some practical application of Roslyn. &amp;#x200B; (Medium article if others are blocked by firewall: [https://medium.com/@detunized/nunit-to-xunit-automatic-test-conversion-6854588c8b03](https://medium.com/@detunized/nunit-to-xunit-automatic-test-conversion-6854588c8b03))
Or more usefully, use WEBAPI
If the method, or parameter, name for either is long I would go with separating, otherwise I would go for inline
Thanks. This just speaks volumes about quality of that firewall =]
It’s funny that something like this would gain traction as “oh, that’s a cool idea”, but this is exactly what the MacBook Pro touchbar is supposed to be. And that’s been labelled a useless gimmick. 
Really clean! Impressive work 😊
Rather than using multiple arrays to do this, perhaps it's worth considering [two-dimensional arrays](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/arrays/multidimensional-arrays)? That way your code only has to interact with a single array, instead of juggling multiple. So the first time a row appears, enemies appear in the top row. After five seconds, you then move all the array elements one row down and replace the top row with new enemies. Rinse and repeat. 
if you were to split up the line 3. Would you put the param at the top? of method()? await method(); await method1(); await handler.startupmethod(class.method(gettheitem.method12334233253523()));
There's an angle bracket in that method declaration that shouldn't be there...
Depends if it is the first `await` of the method or not. If not then there are differences. Consider: ```cs // version 1 async Task Method1(object param) { await Task.Yield(); // placeholder for another await await Operation(GetDate(param)); } // version 2 async Task Method2(object param) { await Task.Yield(); // placeholder for another await int date = GetDate(param); await Operation(GetDate(param)); } // version 3 async Task Method1(object param) { int date = GetDate(param); await Task.Yield(); // placeholder for another await await Operation(date); } ``` In version 1 and 2, `param` is "captured" by the state machine generated by the compiler for the `await` statements. What it means is that if param was holding a lot of memory (and is the last reference to that object), then it might live longer than necessary. In version 3 however, `GetDate(param)` gets executed before the first state of the state machine, and hence is not "captured". In some cases, it might matter.
Same content, just reworded, so I suspect this is plagiarism.
I'm terrible at keeping secrets.
Not necessarily (see my comment), especially if more than one `await` statements in the async method.
No, not necessarily but the question is focused on the standard which is what I focused my answer on. There are many more exceptions to this rule, especially if we consider Marshaling, but they're not directly relevant to the question at hand. Though I do think it's good to show off other cases as well, so thank you.
[removed]
Definitely not new.
Ok awesome we haven't really covered that in class only mentioned them so I will def look into trying to do that Thanks
To what extent was the touch bar user programmable? Also, physical keys. 
It was designed to hold shortcuts for users who can’t remember keyboard shortcuts. 
Isn't VS Code a good choice? 
Like to develop on a mobile device?
Right, but I can choose exactly which functions I want on this and change them on the fly. Could the touch bar do that? 
None.
I know there is a "portable" feature, though it seems to me that its just some saved settings files and project which are imported into a remote ide? Installing software is not an option, so it has to be completely portable.
Well, kinda. For school actually, and for security perpuses we aren't allowed to install any software. 
var Tree = (Tree)Program.arrayName\[0\]; //Get the first element. cast it to an object of Type Tree var Property = Tree.propertyName;
For that, I would choose to use an online editor. I have no specific recommendations on that front. But I'm sure a google search will provide you with that. 
I would use a `List&lt;Tuple&lt;int, int, Enemy&gt;&gt;` or even a Stack where the first int in an entry is the time when the the enemy appears, the second is the place and the third is the enemy object. 
Definitely&gt; Is
&gt;Hm, good idea, haven't thought about that. &gt; &gt;Even though I dont think that it wont be the best solution since schools PCs arent of the most modern Hard/Software, I'm gonna check some out. Thanks
Maybe I misunderstood the point of portable. How does this work with SharpDevelop? Is this something in the browser or Remote desktop? 
im sorry im a little new, could you break that down for me please? just so i understand what its doing &amp;#x200B;
Well, basically it means that there is just an executable which starts the IDE, without any setup which installs the IDE on your pc.
https://try.dot.net Online editor in the browser with some intellisense. Not sure how far you can go with this in a realistic sense though. 
Accessing the static array on the Program class. Getting the element at position 0. The part about (Tree) tells .net this is an instance of Tree. Not an instance of Object as the array has them defined as. (All .net classes inherit from Object). this is called TypeCasting. [https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/casting-and-type-conversions](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/casting-and-type-conversions) The rest is imply accessing the property on the Tree object. Not sure how to simplify that part. &amp;#x200B;
Wait. on a second look. This wont work. why is the property on the tree static. Youll only ever have one shared between all the tree's. You can access it via Tree.propertyName. You You
First, you know the Array is only going to include 1 type in this code. Why not make it an array of Tree instead of object So you don’t have to box the type all the time when working with the array? 
Aside from that code not compiling, this just seems to show what ASP.NET Web API has always done?
You mean the typo bracket?
Gave it a try already. Non of them had generate-code options yet.
That's is, apparently. OP is inferring that's a new feature.
&gt;. ive already attempted to access it using Tree.propertyName however it only returns "fir" &amp;#x200B;
You might be out of luck then. Can't you have a computer at home with your project, and use an online editor to try things out while at school? It's hard to assist when we don't know what you need or what you are trying to accomplish.
It shouldn't be a static property if each class requires its own value.
the object array?
Yes&gt;
No `public static string propertyName { get; set; }` should be `public string propertyName { get; set; }` &amp;#x200B; &amp;#x200B;
Or go fancy with an array of arrays and keep getting your X's and Y's mixed up... :p 
this worked! thank you everyone who helped
i got it working now thank you though &amp;#x200B;
That is a very fair point. So, situation is: When coding in c#, until now I stuck to Sharpdevelop. But since exams are comping up, I would like to have an IDE which assists on as much as possible, so I can focus on the algoritm. As well time is very few. We are not allowed to install anything, but allowed to bring everything. &amp;#x200B; Online compiler are a good point as said, they just "SEEM" to lack of convenience features like auto inserting code, like getters setters, lines etc, which could save up much time in a situation of an exam.
You should check if this is actually allowed, I imagine it's not. And if that is all you need, then try.dot.net should be enough.
Are you allowed to use online resources for your exam? Such as stack overflow or similar sites? If so, then learn the structure and programming fundamentals and instead of needing code insertion, you will just need to know what to reference on stack and the code will be a copy/paste away. That being said, I'm not trying to encourage cheating as you will get nothing from college doing that. I only suggested this if you are able to utilize resources you otherwise would be in the real world such as SO. 
As someone who only have experience with NUnit, why would you convert away from it?
All their submissions seem to be plagiarized. They all read like they've been through some thesaurus or google translated to/from another language. Thanks for catching this everyone. The submission has been removed and the user banned.
As the article states I converted "without any good reason" whatsoever. That's true. This is probably a clear case of being a hype victim. Putting jokes aside though, I just wanted to try to form an opinion. I got a feeling that xUnit is a bit leaner and simpler. Not that I suffered from the NUnit complexity or anything like that. And I have to say for far I don't see any advantages. I think documentation is worse. Actually much worse. The tests look the same. There's a [Theory] kind of test which doesn't exist in NUnit, but I have not applied that so far. But I'm not sure it's a game changer. Just a way not to have a loop in your test and make the framework loop for you. Example: https://andrewlock.net/creating-parameterised-tests-in-xunit-with-inlinedata-classdata-and-memberdata/#using-the-theory-attribute-to-create-parameterised-tests-with-inlinedata-
&gt; I want to make a copy git clone &gt; on gitgud Create a gitgud account (whatever it is) and clone from that web site &gt; make a branch which I can update with the latest dev version git checkout -b branch_name &gt; I can update with the latest dev version (...) So if there are any commits that I don't want in my project I can just ignore them git merge or git cherry-pick &gt; I don't know how to connect it to visual studio It seems that you have a git problem more than a C# problem. Did you read the free book on git-scm.com?
Winforms is the old stuff, WPF is brand new with vectorial stuff. It would be suicidal to abandon it. Maybe you're thinking of JavaFX instead which has been abandoned by Oracle?
they are abandoning their role in wpf in terms of developing new features or fixing esoteric bugs. i have seen as much mentioned by microsoft, but i forgot where. someone asked if they were going to update wpf, and the guy basically responded that wpf is in legacy mode, which is one reason they open sourced it. i know perfectly fucking well how open source works and what it means. it seems all the downvoters don't understand the actual situation.
Ok I've done a little bit with lists so will have a look into that way aswell Thanks
Have a look at Roslyn, Microsofts official and open-source .NET compiler. Easiest option might be to translate the script into a C# syntax tree if the language structure is close enough, that way you may be able to let the C# compiler take care of the hard stuff like overload resolution.
xunit is also written by the people who made NUnit but gave up on it as they didn't like the direction it was going. xunit is my preferred framework. Either way at least its not MSTest like it's still 2004.
&gt; gave up on it as they didn't like the direction it was going Do you have any links? I'd like to read about that. Just curious. I also would to find out which direction NUnit is going.
Maybe it thought "NUnit" or "xUnit" was a porn name, which would be cool actually.
Is this a Windows service? Seems like a service would be a good way to implement this. As far as exception handling goes, you can either use a logger like Nlog or write to the windows event logger. You could also write a simple SMTP client app that send an email to whoever is involved in case of a catastrophic failure. 
https://code.visualstudio.com/docs/editor/portable * Click download but select `.zip` instead of `User installer` or `System installer`. * Unzip somewhere. Find where you unzipped it and create a folder named "data" * Launch vscode.exe; it should now be portable. 
In practice, I think it's often much easier to translate it into source C#. The Roslyn API is quite verbose to work with, at least directly.
Dat x rated unit
Yes, it's a server service. But how can I like make exceptions retrying every 3 seconds for example? Like if requestion data get an error 500 or 404
You mean translate one to one to C# code, using the parsing classes, and then use the SyntaxAPI to compile ? &amp;#x200B; :hmm: I'll take a look at it
I'm looking into it... thanks
Great, thank you, even though it's not a solution for my original problem I'm giving it a try
Yes, we're allowed to look up things online. As well I know all of these concepts, it's really just about algorithms. &amp;#x200B; Because of the points you mentioned, everyone knows exams are a joke actually, they don't prove anything. Though I have to do them.
I always follow a standard for me that if I don't need a parameter more than once I use it inline. I find it easier to keep track of everything that way. Since it looks like days will likely only be used with handlerToDoOperationsOnDays I would pick option #2 but thats just how I like to do things.
Short; Do version 3 to be safe?
I'd recommend using the library Polly. 
VSCode isn't an IDE but a text editor https://stackoverflow.com/questions/52829919/why-vscode-is-not-an-ide
If we're picky, sure. In every regard that is important, it acts as an IDE if you have the right extension
[&gt;](https://i.imgur.com/6Z2K7ZZ.gifv)
Sorry but dumps are a loser's approach to life.
MSTest has a lot of advantages over xUnit for example, you can provide messages on every assertion. Which is kinda important once you get beyond writing the trivial ine-test, one-assertion style they adore. MSTest also supports Inconclusive results, which are handy for integration tests where you need to detect setup failures as distinct from test failures. I only use cubit because it has much better handling of data driven tests. 
Can you spark up each one of those API calls on their own threads? This would ensure that they do their own thing and would not depend on the next cycle coming in too quickly before the previous one has finished it's thing. Provided you put a thread lock on the function that writes data to the database. 
Can you spark up each one of those API calls on their own threads? This would ensure that they do their own thing and would not depend on the next cycle coming in too quickly before the previous one has finished it's thing. Provided you put a thread lock on the function that writes data to the database. 
Yes. AddRange checks the length of IList and resizes the array once, while foreach will resize it multiple times 
I'm not sure I agree with your first statement. How is this not possible with xunit?
I would not start with Unity. Better go with a basic console application so that you can actually see everything that happens. In this case you are just getting confused because Unity calls Update which I assume is not really easily controlled by you
I love this idea lmao, I may just do this with my stream deck 🤔
It just isn't. A lot of their assertions simply don't have message parameters. So I have to download the source and add them in.
VS Code portable mode. [https://code.visualstudio.com/docs/editor/portable](https://code.visualstudio.com/docs/editor/portable)
I have added more functions to the library and released a new nuget package. Give it a shot!
I didn't read through the whole thing: I skimmed it. As such, I might've missed something. Just wanted to put that up front. &amp;#x200B; You spend a good amount of time talking about how Classes exist to organize data. I think this is one of the most common mistakes I hear about classes. While classes are capable of data encapsulation, and it's definitely a useful feature, the primary purpose of classes is *algorithm* encapsulation. They provide a separation of concerns between different pieces of an algorithm, allowing you to more easily mix and match code together. You talk a bit about methods as things a class can do, but the important part is actually that they provide an *abstraction* of what a group of related classes can do. &amp;#x200B; A lot of people like to use polymorphism with classes like 'Animal' and 'Dog' to explain this. But the example I find most useful for understanding this concept is a StreamWriter, because it's a real thing that's fairly easy to understand. &amp;#x200B; `writer.WriteLine("Hello World!");` &amp;#x200B; Is this code writing to a file? To the terminal? To a webpage? To a debug console? To an event logger? To another program? To a memory buffer? It doesn't matter! You're allowed to use a stream writer, and the stream writer could do any of these things, because this part of the algorithm doesn't care. &amp;#x200B; By separating things your code *needs* to know from the things your code *doesn't* need to know, you end up with code that can be used equally well in a motorcycle, a car, and airplane, or a rocket ship.
But you're not tied into any specific assertion library or methods. Personally, I like FluentAssertions, the syntax reads well and the messages output are excellent.
Thanks for the feedback. I agree that an important part of classes is the encapsulation of your logic. That might actually be a nice second part. I think you need to have a solid grasp of WHAT a class actually is, before you can start talking about all the benefits of using them properly (I'd like to link that with the solid principles). I considered writing about those, but this post started to become lengthy as it is. Also, I fully agree that this post needs to be extended for polymorphism, but I'm taking babysteps. 
xUnit for me is far more stable and friendly with the visual studio test runner (works with Resharper's Test Runner though). For whatever reason NUnit is completely broken for our integration framework tests but when I converted to xUnit it worked fine.
Yeah, I remember that too now. I couldn't get it to work with VS2017 and that was an initial push to try xUnit.
I can’t think of a use case for something like this. This actually causes confusion because I cannot see the immediate value this generates vs private functions which through naming conventions can describe intent and provide as documentation. 
The intended use, like I said, is mostly creation of logical sections and preventing variable bleed. To me _personally_ I enjoy reading code with a short scope like in the example, because I can know exactly where all variables created in that scope are used without needing to scan the entire method. I guess the advantage over private functions is that this is more private than private...the code belongs to one method only, and also has access to any “global” method variables. Really the advantages between this and local functions are all pretty similar. However, if the average dev finds them confusing, well, I guess that’s what I was looking to learn here, and that would probably be reason enough to use a private method or a local function instead.
Did you actualy do it? I had a look at the source at one point and it seemed like I would have had to re-write all the exception types as well as the assert methods, so I didn't bother. I just use assert true so I can pass a message 
When do you expect your next blog post to come out? I'm genuinely curious where you take this project.
I've only ever used local scopes when I play around with MonoGame. In MonoGame/XNA, you use an instance of `SpriteBatch` like this: spriteBatch.Begin() spriteBatch.Draw(myTexture, new Rectangle(0,0,100,100), Color.White); //other draw calls spriteBatch.End(); Since I hate the fact that the draw calls aren't disposable (though I've made a class to do this before) which would allow me to wrap it in a using statement, I've used local scopes to do this: spriteBatch.Begin() { //draw calls } spriteBatch.End(); Now that I think about it, I've used local scopes when generating XML as well such that the scope helps me reason about the element tree of the XML document. However, I have never actually *needed* to write out an XML document "manually" and I just use XML serialization. Honestly, adding a local scope adds noise to the code and I wouldn't suggest its usage. However, if you find a case that it actually helps make the code readable then by all means use it (but don't abuse it -- it is barely ever used and can trip up other devs).
&gt; Application connects to a server and receives commands via web sockets At that point, I'm not sure a desktop app is even the right way to go. JS APIs for Web Sockets are probably more mature. That said, whether MVVM is "the right way" is more of a stylistic choice. In a nut, the MV* patterns are an arguably cleaner approach that scales better to larger apps. In contrast, relying largely on something like what Microsoft calls "code behind" has a much nicer learning curve and will get you started fast, but also quickly turn into a mess.
The only place where I've seen arbitrary scopes used reasonably is in C++ for things like std::lock_guard or a custom profiling system that logs in the destructor (Unreal). In C#, the equivalent is the using block, which is more explicit about why you're making a new scope and much better IMO. If you're using them in C# it most likely means that you should refactor your code instead
I would probably insist on this code being re-written to not reply on {} for scoping
POG is shorthand for PogChamp, an emote used in [Twitch.tv](https://Twitch.tv) in reaction to surprising or exciting things. OP is either using it sarcastically or is mistaking the angle bracket for new unannounced syntax...standard Poe's law warning applies.
A day or two, I'm hoping.
I use Shoudly a lot and love it. Will look into FluentAssertions though.
In addition to it being open sourced, they also have a free community edition (non-commercial) version available to download and use.
Why not just write c#? I know you have to use this thing, just wondering why? 
Use a List and just add new ones on a timer or similar.
If you have a ui bound to data MVVM is great in wpf. When the data changes your ui will auto rebind and update. Sounds like exactly what you want. Plus I would say wpf is designed with that pattern in mind.
Awesome, I'll keep a tab up in my browser!
its like they were going to make it async like `Task&lt;ActionResult&gt;`, decided not to, and left one of the angle brackets. 
Yep. Not for all of them, only the ones I was actually using. And yes, it was as big of a pain as you imagine. https://github.com/docevaad/Chain/tree/master/Tortuga.Chain/xTests.Tortuga.Chain.SqlServer.source/shared/Asserts
Which is the only reason I put up with their dogmatic nonsense. If I could figure out the VS integration, I would create my own testing framework designed around support more than just unit tests. But even starting with xUnit as a basis I just can't get it to work.
You could use text templates and/or CodeDOM to generate source code &amp; go from there.
Well, experiment with different approaches. Compiling source code is simpler, in my experience, but... try it out :)
If your methods are getting convoluted enough that you need local scopes to clarify your intentions, then it's probably time to take a step back and reconsider your design.
Best use case I've seen (although I don't really do it much myself) is inside switch case statements. switch(i) { case 1: { var local = doSomething(); ... break; } case 2: { var local = doSomethingElse(); ... break; } }
It did exactly the same thing with monogame. Created an extension method that returned a wrapper that called start on creation and end on dispose. Also allowed switching render targets and stuff. Was very useful.
&gt;Good analogy. Just to add to this... a lot of developers using C# 5 and higher accidentally use 'Thread' when they really should be using Task/async/await stuffs Quick Q.. Im dealing with data acquisition from hardware connected via USB. Data is acquired over a long period, usually a number of hours, but could very well be days/weeks. In this situation, wouldnt a dedicated thread be the best option for reading from the device and saving data to disk. If not, how would you do this?
Just started using this at work for timeouts and retries. It's soo good!
You'd likely be better off using async/await. Managing your own threads can quickly become a nightmare.
Can you just use auto properties they take like no time to type. Also does it support snippets?
&gt; I can’t think of a use case for something like this. Using the same variable name for related purposes. But yes, I rarely use it now that local functions exist. Although I also dislike a local function called just once, right after its definition.
It doesn't really make a difference. It will compile the same. But when debugging the first one would allow you to inspect the returned value easier.
I find that the MVVM is a simple and easy way to display data in a UI. I'd definitely still use it in a read-only setting. In fact, I have used it for some reporting and it worked very well.
Did you verify the proprietary tool doesn't have command line usage? I can't imagine someone building something like that and tying it to a specific IDE.
You'll need to define clone better. Shallow clone? Deep clone? Somewhere in between? Depends too much on your object graph. Usually you would make your objects that cross thread boundaries immutable and use other mechanism to communicate state back. Sometimes people cheat and serialize then deserialize which can be fine depending on the performance you need.
Its a DataTable that I'm attempting to clone. I'm unsure of how to get it to clone at all, right now I'm just passing it on task creation.
The point is to do it with recursion..
I would say it depends on you. Clean mvvm is helpful for two aspects : unit testing coverage is better and extending the well be easier since there is less dependencies. Now is it worth the extra performance and development time, it's up to yoi
Even the WCF rest services (predecessor to Web API, never got released) could do it already.
&gt;The intended use, like I said, is mostly creation of logical sections and preventing variable bleed. ...methods?
Hey, where did you find dumps? There are a million sites selling dumps and theres no way of knowing which are legit.
That example won't compile due to a missing semicolon. And with the semicolon it looks very much like If (..); { ... } And all alarm bells in my head go off. I'd just wrap that code instead to a sane interface.
The data table has a .copy method that does clones all structure and data
That was my idea at first, but management let that happen only on special cases :| Actually that has been a point since I began (4 mo.), but in the meantime I want to try and do it myself
Yeah, well these guys ... :facepalm:
I like to use them this way as well... if I recall correctly I think I read somewhere that they kind of regret not having this be more standard.
Can this be used outside of Visual Studio? With Rider or Monodevelop or VSCode? Can this be used with Mono or .NET Core?
If you look at what you describe a bit more abstract then there is no difference between events raised by users through your UI layer or events originating from another external source like the websockets commands you mentioned. The MVVM pattern excels in abstracting the UI implementation from the rest of your application logic and is actually a good choice for any wpf application that does a bit more then displaying a 'hello world' text. Also I service you to look for a good WPF MVVM framework to use because you will definitely have a lot of boilerplate coding to do if you implement it yourself. Especially the fact that you need to synchronize the incoming websockets events on the UI thread is something you want that framework to handle. Using the websockets in .net doesn't have much matured support outside signalr but using that will require the server to also use signalr. Also the .net framework version is not compatible with the .net core version. Another option is not using WPF at all and use something like electronjs.
First I would get looking for a new job haha getting stuck on some proprietary thigh can be a CV killer. Second if it's very similar you may be best off converting it to c#. But I would assume it does something special otherwise what's the point of it?
you could have a time do a function on Tick that creates the baddies
never seen this before but I like it better than the standard way
Are you connecting to the right DB? Does your procedure have the login as a user?
&gt; Are you connecting to the right DB? Yes because I'm seeing the generated TSQL on the SQL server side. &gt; Does your procedure have the login as a user? I'm sorry, but I'm not sure what you mean by this?
you mean a constructor with a parameter? ... if so, yes am i missing something here? :D
Ah, dindt know
Try the ODBC driver instead of the SqlServer one?
Or use Sentry to notify. 😊
I found the jump to be very difficult.
This is very useful, thank you very much for the help. 
What are you looking for? I'm not sure I follow.
Way too late. That train left a long time ago already.
This is pretty easy, get rid of the DataTable and use a [Thread-Safe Collection](https://docs.microsoft.com/en-us/dotnet/standard/collections/thread-safe/) instead. DataTables were great at the very beginning but they are cumbersome and has a lot of unnecessary overhead. Using a collection would negate having to create clones of objects.
I looked quickly on the source code (mobile only) and I have few comments. - There is a difference between imperial and US units - only few conversion ratios are defined as constants. Mostly it is derived from these constants. Your code uses constants everywhere with very low precision (4 decimals?) - do you really need from/to conversions? Isn't it always "from = 1/to" - some mesurements in Europe are done in weight while US does the same in Volume or vice versa (eg Paint). Density + corresponding math could be usefull - conversion constants should be public. Sometimes you need to do a nonstandard conversion that is not supported natively. Eg "you need 1 ton of asphalt for 1km of road" =&gt; "xxx pounds for 1mile" - that are basically two dependent conversions. I work on an application for construction measurements with similar conversions. I would like to replace our code with some 3rd party, but some tests to ensure it does not break between release are a must. It is a good start
xUnit is specifically designed for unit tests. But the vast majority of my tests aren't unit tests. I've got performance tests and stress tests and integration tests and I/O tests and... Using xUnit is like trying to rivet with a carpenter's hammer: it barely works and you don't really understand why until someone gives you a riveting hammer. They look the same, but a couple minor details make all the difference. For example, let's say that I'm writing a basic CRUD test. I write 12 fields, then read them back. Were all 12 fields correctly set? No, the 3rd field was not. At least that's what xUnit tells me. Really the 3rd, 4th, and 12th field were wrong. But it aborts with the first failed assertion, so I don't get the full picture. (And no, I'm not going to follow their recommendation and write 12 different tests for the 12 different assertions.)
in such a company : - anyone who makes production code with VS must have a pro license. - anyone who doesn't may do without it, e.g.: research VS suitability for a commercial project. you don't have to install a pro version (which is a separate download), just a pro license is enough and you can still use community. source: had a chat with MS sales rep online an have a transcript for the record.
I want to kind of expand on that person's comment. But I also want to start with: you wrote a very good article! Classes are important and you did a good job hitting upon a lot of the reasons why. I'm glad you didn't talk about inheritance in-depth. I think the most important thing about classes is they represent data and a set of actions that can be performed on that data. I think inheritance is too often taught from the perspective of "reusing code" and it leads to some really bad problems that are hard to understand until you've made several messes. Have you read *Code Complete*? It's a good read if you like thinking about this side of development. A thing that was life-changing for me was the book's suggestion that you should only write two kinds of classes: * **Data** classes are properties, but no methods. Their job is to represent data. * **Logic** classes are methods, but no (or few) properties. Their job is to accept data, perform work with data, and return new data. Nobody ever mentioned that to me in my first 6 years or so. But once I gave it a try things got *so much easier*. So uh, if you do plan to keep blogging like this, I recommend *Code Complete*. Also, believe it or not, I think *Head-First Design Patterns*, despite being a Java book, is the absolute best introductory material to SOLID-like practices I've ever seen.
Although this is the easy option, I would recommend a redesign and doing something like cornelha recommended and using a proper threadsafe collection type or maybe a messaging mechanism to pass the data (or a pointer to the data) around instead. Depends what your application is doing and how big/complex it is going to be really but if you're making something serious using DataTables, let alone cloning them and passing them about, is probably not the best way to scale and manage complexity
I'd hire you. You've demonstrated a desire to get out from under one technology and learn another. In my tenure as a development manager, that's as important as having experience and skill set. 
What an absolute xUnit 
I totally can imagine it. The programmer that wrote the tool was like "I like this IDE, I only use this one, so I'll write it for this" and the company went with it. The more IDEs and whatever to write and support, the more time they have to spend on supporting that. And for an internal tool, I've seen companies just take the easy route of "we're just all going to use this now, good luck".
Thanks for taking your time responding. And thank you for the compliment. I haven’t read ‘Code Complete’ or ‘Head-First Design patterns’ yet, but I’m at least planning on reading the former. Right now I got stuck in ‘The imposters handbook’ on the Lambda functions topic. But once I finish that I’m heading into Code Complete for sure. 
I suppose it all depends what kind of position you're applying to. But yes, web forms isn't really considered a valuable technology any more. It has been more less replaced with MVC about a decade ago. And now even MVC can be considered outdated with all the client side frameworks and (micro) service oriented architectures. It's not that they are bad tech, just how the market flows. Considering all that, fiding a job with just web forms might be hard unless you live in India and support legacy applications. MVC should be OK, but considering you're limited experience you probably should look at junior positions. I think what mostly threw the people that interviewed you off is the unit tests thing. There is absolutely no excuse for not knowing that in 2019 if you're calling yourself a professional developer. Among other things like DI, git etc. It's the basic toolbox. If you're not using it you should. There are several wonderful books on the subject. One I can recommend for you is "Adaptive Code: Agile coding with design patterns and SOLID principles". Reading and understanding it will be a breakthrough for you and make you a 10x better developer. It covers exactly the subjects you said you're lacking in. 
I'm always surprised how many languages follow the old C design of switch case statements, it is particularly egregious in a language like CSharp in terms of syntatical consistency.
There's not really a time when MVVM is "right" or "wrong". It's a specific implementation of a larger pattern called "Presentation Model". All that pattern says is you should separate your UI code from your logic. MVVM is an implementation of that idea using data binding between properties to facilitate loose coupling. Whether you use MVVM or not, you have a UI and your logic has to communicate with it. The difference is: **With MVVM**: &gt; I have an `ObservableCollection&lt;string&gt;` that represents the messages that are being displayed. When I want to display a new message I add a string to that list. Since that collection is bound to an ItemsControl that displays each string, it updates. **Without MVVM**: &gt; This class needs a reference to my `MainWindow`, which has an element named `_messages` that has a `Text` property. When I want to display a new message I need to use concatenation to add a newline and the message to that property, then do some extra work to scroll the display to the right position. So like, MVVM feels like a lot of work, but it actually does a lot of work for you in terms of connecting your program's data to UI. User interaction's only half of the story. *You* also interact with the UI from behind the scenes.
If the code behind is going to contain a lot of logic for how the data is manipulated, it wouldn’t hurt to have a view model for each view. 
That's a [Fact]
Yes. Key reasons: * knowledge of relative legacy and more modern practices * desire to learn * willing to pitch ideas on improvements to management You've got them covered. Now how you can maybe look to improve where you are before you do leave? You mentioned testing. Best thing to do for now while you wait is get into the habit of doing it as you work. Ask your manager if you can start trialling TDD in the same way you did with MVC. Same with your methodology. Ask if you can use a more Scrum approach. Maybe things like CI/CD as well if you feel a little dev-opsy. Just keep requesting you try things to your manager. Worst he can say is no. Also, how big is your team? Could you maybe mentor someone more junior in something you already know? If you were the first to bring in MVC, maybe others don't know it as well? Could you host an informal training session to get the rest of the team up to speed? This just scratches the surface of ways to improve yourself and your prospects. End of the day, you're doing great. Just keep on adding strings to your bow, as there is always something new to learn 😊
Interesting example. I’ve seen this done before, but in my head I never considered this part of the same “feature.”
I would definitely hire you in my team because you want to improve the efficiency of what you are doing and you have the courage to pitch it to your manager. Learn unit testing and TDD: this is a must have skill to have for a developer. 
So yes, WebForms is considered legacy technology nowadays. There are still WebForms jobs around but they'll typically not be as well paid. It sounds like you're taking the right direction and using MVC however a front end web developer (of any seniority) would typically required to have built more and bigger systems. The problem may be that you have too much seniority (so yo have 3.5 years experience) but you only have experience in MVC for about a year...and have only built one app. This is a level of experience they'd be looking for junior MVC devs. It SOUNDS like you have significant app design experience...so maybe emphasize that (not saying don't mention WebForms but I'd 'deempahsize; it) . You SHOULD be writing a Resume for each position...take not what they're asking for and build yours in such a way that it 'checks off' all the requirements.
If you can figure out how to unit test ASP.NET Web Forms, you would be an incredible asset to the community. It's not an easy thing to do.
Agree. Also - in some shops it might be considered an asset not to have someone that is set in their ways.. I'd definitely consider him for a junior level position with the expectation that my more senior developers could mentor him around our process and stack.
scintilla is a Windows Form control being hosted inside the WindowsFormHost. WFH is almost like you are running an emulator inside wpf (not exactly, but essentially). No wpf styles can be applied because its markup isn't being rendered by the wpf renderer. Another gotcha you can run into is that the z-order isn't preserved either for WFH. It will basically always render on top of all WPF content.
1. He also mentioned MVC 2. Web.Forms is just the UI framework. You can easily write applications with clearly separated and testable layers when using Web.Forms. A basic clean design would be to abstract away all the business logic into some kind of command pattern and let the UI events call it. You don't need to test the UI, but 99% of the application is the business logic which should be testable. 3. Saying you're a Web.Forms developer is very limiting. I cannot really imagine how that works.
Do you have a database schema, should it be dbo.Account?
Yeah, I would. At my current job we give people the same test I had to take: it's a small task involving parsing some csv data as phone calls and applying some business rules. What we look for is the approach to the task, meaning how the user structures their code, if they use classes/objects or just a bunch of primitive types and such (and ideally if they choose to go for LINQ to help them out for some final stuff). To me, someone knowing better than to needlessly instantiate the same object in a foreach loop or to use the appropriate .net type for the task is a lot more valuable than someone who padded their resume with whatever hot technology is "in" right now. P.S.: we use web forms. And windows services. And a bunch of other stuff. In the end, code is code.
I’d much rather use Blazer moving forward, because that’s something that has actually caught the eye of Microsoft - if it ends up being successful, MS might just fold it into its stable of default features.
I understand why you would discuss Scrum with your manager, since that's something that involves both of you, but why would you ask him about TDD? It's your responsibility as the developer to know and use the proper tools. Management doesn't care. Or actually they do ... about the quality / maintenance costs. TDD is one of the most proven paths to good software quality. Still don't understand why you would even discuss it. A lot of people would say it's the only way of doing things and wont even consider doing it differently (not saying I'm one of them, but it's a popular trend). 
It would help if we could see the actual code snippet of where the statement is called from at runtime. I've not used MS SQL/T-SQL outside of random client support, however I'm pretty sure 'set @p1=3' is your problem. Why's it being set before it's prepared? If that T-SQL is generated as a result of some code you're running, that would be the next place to look. &amp;#x200B;
The bulk of his experience was with Web Forms, which is why I focused on that. You do make a good point that you can find ways to make testable code, even if it isn't perfect. I have worked on sites where the pattern you describe in point #2 is a guiding principle, but in practice I have never seen a Web Forms code base nor been able to implement one that can keep things this cleanly separated. The difficulties with testing in Web Forms sites was one of the big drivers behind the ASP.NET team creating MVC.
Let us talk and exchange ideas and Q&amp;A(s). I am just happy on the results of my hard work here. It has rich features to the fact can be considered as Hybrid ORM, and still managed to maintain its its performance and memory efficiencies (as I am obsessed). Link to FransBouma last run: https://github.com/FransBouma/RawDataAccessBencher/blob/master/Results/20190307_netcore.txt This may be my last post for this version, until the new features will be developed and released.
Thanks, I am currently learning Dependency Injection along with Angular. I'll add unit testing to that list.
You seem like a decent dev. Sometimes I get that the environment doesn’t leave much time for testing. I see a lot of devs working in “project” only firms, where they get a contract with the hours already estimated (which is always wrong) and then devs have to work overnight to make the deadlines somehow. The first thing they cut? Tests. A lot of people say - a but you are not a good dev if you leave this happen. In a perfect world sure. Real world is different though. Managers are stubborn no matter what you tell them. Anyway unit testing, DI and “clean code” are things you have to know these days. They are not luxury anymore, as they were 5 years ago. If you don’t get to use them in your job, make an extra effort to so it in pet projects and put them out there for potential employers to see. As others said: Keep up what you are doing, make sure to use the feedback from interviews to find gaps in your knowledge and make a plan on how to improve them. I’m pretty sure in no time you’ll get something. Good luck! 
A couple of comments, after reviewing on mobile: * The requirement to create an instance of a converter to me feels limiting and awkward. I would expect a library like this to be completely static. I see why you did it, at least I think (to get the inheritance going with that base converter), but there are still better ways to do this, even if it’s caching a static instance for each converter. * More opinionated, but I think it would be really nice for a library like this to have value type “wrapper structs” available. For example, if you had a “Temperature” struct, say it was implicitly castable to a decimal, and that struct “knew” its unit, you could offer really slick, easy-to-read conversions. struct Temperature { ... } Temperature myTemp = Temperature.FromCelcius(35); Temperature myConvertedTemp = myTemp.ToFahrenheit(); decimal result = myConvertedTemp; // or decimal result = myConvertedTemp.Value;
I did some abstractions for the imperial system. The precision is little low, couldn't find exact numbers for these. I will add more units for imperial system to convert between tomorrow (imperial system is kinda messed up, different numbers for different type of same unit). Thank you for taking time to write feedback!
&gt; I think you need to have a solid grasp of WHAT a class actually is, before you can start talking about all the benefits of using them properly (I'd like to link that with the solid principles). Then start at the beginning. What would the same program be without classes? someInstanceOfAClass.SomeMethod(foo, bar); is just SomeMethod(someInstanceOfAClass, foo, bar); So why do we have classes at all? We technically can do anything you can do with classes with data structures and functions. Why is it better to model a system as classes rather than just tell the computer what to do in nice, deterministic steps? 
Thank you. My team is very small, 4 people including me and one is wordpress. I did hold a very small session with my team after I learned MVC, explaining to them what I learned, what MVC is all about and why we should use it. I'll gather some information about TDD and talk to my manager about it. 
I agree with that, but still you should test what you can, instead of just ignoring it completely. There are always parts that can be tested: core business logic, rules, input file parsing, output file exports, conversions, helper methods etc. Also the truth is that if you're in the unit testing / DI mindset it naturally guides you in the direction of producing better, cleaner, code. Which is the largest advantage of it all.
Let us talk and exchange ideas and Q&amp;A(s). I am just happy on the results of my hard work here. It has rich features (and) to the fact it can be considered as an Hybrid ORM. Even with its rich features, we still be able to managed and maintained its performance and memory efficiencies. Here is the link to FransBouma last run (always thanks to him): https://github.com/FransBouma/RawDataAccessBencher/blob/master/Results/20190307_netcore.txt This bencher is the only bencher I am trusting based on the results. The result above only show only the 'FetchSet' (no Inserts/Updates/Deletes operation). This may be my last post for this version, until the new features will be developed and released.
Sure, go ahead and over engineer it by using MVVM. That's what it's there for.
Now hold on a sec there... we don’t know if OP is white, or, god forbid, a man. You can’t just go rogue and start hiring based on skill set and demonstrated passion for tech. Not in this day and age.
Thank you for the book recommendation! So after building 2 apps using MVC I heard about dependency injection so I got the book: Dependency Injection in .NET by Mark Seemann and I learned the way I built those two apps was not maintainable at all and my code would be considered spaghetti code. So now I'm learning DI.
Correct. Thanks, that makes sense.
You my friend have been hit by [impostor syndrome](https://en.wikipedia.org/wiki/Impostor_syndrome )
We do test our apps but without writing test cases in code. We manually test various cases...not really sure how to explain it...
You're probably right, and getting lack of responses from companies is also contributing to it...
&gt; There is absolutely no excuse for not knowing that (unit tests) in 2019 if you're calling yourself a professional developer Ehh. You should definitely know what the concept is, and how to throw together a quick and dirty test that `Assert`'s something. However, that being said, there's a *lot* of places that don't do unit testing *at all* let alone have proper coverage. I work as a consultant/dev, and every client wants 100% test coverage...that is right up until they realize that they currently have 0%, and it will take a non-trivial amount of time/effort to get even close to the goal. Usually, shortly after that revelation, testing gets pushed to the side in favor of forcing more business stories into the sprint.
Holy smokes where's *The Imposter's Handbook* been all my life? I didn't know this was there and I'm extremely happy you introduced me to it.
Thank you for your kind words. I am currently learning ASP.NET Core along with DI and then angular...I will add unit testing to my list.
15 years into the industry. If I hadn’t have been able to grow... Back when Windows 3.11 was coming out and Novell was where network sharing was at... I’d be stuck in RPG or plain C. I was in love when VB6 came out. Learn everything you can. It shows that your mind is elastic and still capable of learning. The majority of my work is coming into someone else’s mess, assessing code I don’t know, and coming up with a resolution. Being able to learn is essential. Good job. 
It depends what I'm looking for. Most jobs will list 10 (let's say) requirements and would be happy to hire you if you had 5 of them and had the right disposition to easily pick up the other 5. In your case you've probably got fewer than the 5 out of hypothetical 10 because you didn't bring up any front end frameworks, CI/CD, etc. You've demonstrated a willingness and ability to learn, which is good, but perhaps the volume of things you need to learn is too high for a given employer. My advice is to 1) stop looking at this in terms of being employable or unemployable, and start thinking about it in terms of ticking the right number of boxes and being a good fit for the company/team, and 2) pick up additional skills so that you can tick more boxes. Also worth pointing out is that you're getting to the point in your career where employers will start seeing more value in your skills and experience more than your potential. This goes back to #2 above.
Web forms suck but if you're good at one tech I believe you are likely to be good at others. Bonus points for being able to learn things on your own.
Companies are companies, I've found that if they're a pain in the hiring process, you probably don't want to work there anyways.
I should not have giggled about this. It's a serious issue. (narrator voice: but he DID giggle)
That's called manual testing. There's nothing wrong with it, except it's much more time consuming / expensive and much worse in catching regression errors. Unit testing gives you the comfort that you can fully refractor everything underneath your API layer and if the tests have good coverage and are 0 passing you're probably OK. With manual testing this would be very hard to prove. Without it any change (especially over time) has a large probability of breaking 10 other things. That's the major reason why unit tests were invented. They are in no way in opposition to manual testing. You should do both. I would really recommend for you to read the book I referenced earlier. It explains it much better than I will ever be able to (writing on a phone and English not being my primary language) 
Yes, but if its not done already its a change to the process and if the other devs have to maintain it, then this should be something that the manager is made aware of and the other devs trained on as well. Plus not being familiar with the process, there will be an element of "training time" to get used to it and may increase delivery times until a basic understanding of the methodology is grasped. Always best to explain things like that beforehand rather than have the boss come over and ask why its happening as it puts you at a disadvantage when a simple conversation could have explained it.
These were used extensively in the old Macro days of C/C++. But back then some really complex macro's existed. I wouldn't use them personally (outside of switch statements, in which I always scope) - mainly because they look weird to me and anything which isn't "normal" isn't great for readability in code. To your example though, since your variable isn't immutable, then you can just re-assign the variable since the type would be the same and so I don't see great benefits to this. 
Try focusing on a Javascript front end framework. Something like Angular, React.js, or Vue.js. I find that a lot of places that use [ASP.NET](https://ASP.NET) use it for backend API development. SPA frameworks are much more popular with businesses than MVC/Razor apps. With the front-end Javascript skills you would be far more valuable since you could work with any REST backend.
Thank you for explaining. I will definitely look at the book you suggested.
Where are you located (generally speaking, don't put specifics)?
Fuck off.
I had noticed a lot of job postings for .NET developers asked for front end tech like angular/node/react...So I am currently learning ASP.NET Core for API and Angular for front end.
You recognized web forms is limiting and took initiative to learn MVC. You'd be a top contender in my book just because of that.
For a junior level position absolutely. You could either be applying for the wrong positions or might want to redo your resume. You could probably post it on here and get pointers if you want. 
I think that is a good path. Also make sure you know your way around databases, be it SQL Server, or Mongo DB etc ... Lastly make sure you are comfortable with Git.
I’d definitely hire you based on the current information. You’ve shown the motivation to learn and try new things and advance in that. I would suggest you keep doing that. No experience with unit testing? Go try it.
What you just said would be an incredible asset to the community if they just worked that out. The concept of a basic clean design is beyond the reach of most as far as Ive seen. ;)
oh yeah I have decent exposure to SQL Server, creating relational Dbs, views, stored procedures. Our stack is Sql Server/Asp.NET/bootstrap/javascript. At work we use TFS.
LinqPad?
&gt;LinqPad I download it and it seems promising but I didn't get how I can link my sketches with external DLLs.
this! for beginner it is very important to get the point down, that it is just syntactical sugar. Nothing fancy! Usually a beginner to OO actually already knows, what a function is and what a struct is. So make it easy for them. Don't talk about metaphors or "real world" examples (person, patient) that will usually confuse them, because it is to far away from code. Metaphors / abstractions make sense for people are already a little familiar with it.
Totally agree. In every case where a decision to forgo "doing things right" to do things quick (ie almost every project I've been on), going back and addressing that technical debt has never been done in my experience. It sucks, but that's the reality of development costing money. It's fun reading blogs about proper way's to do things, and yet I'm constantly being told to do what's less than ideal because of time\money.
You will like aspnetcore it is just awesome.
Looks like EF Core is pretty solid, at least for what this benchmark tests.
MSTest is version 2 now, no longer 2004. What are you missing from it?
What are you missing from MSTestv2? My hunch says whatever you think it lacks, it has
As a C# recruiter I would mention a couple of things; does your CV say what they want to hear, and does your experience back this up in the interview. **Getting Interviews** If you are not getting interviews then your first task is to make your CV look appealing to the hiring managers so that you get an interview. Take the specifications that you are applying for and write down the primary technologies or experience required. It is likely that MVC, TDD, entity, JS + JS framework are common requirements for a web role. Are you able to (without blatantly lying) that you have some experience of these? If you can't then these are the technologies that you need to start looking at. I would say that TDD or testing in general is one of the first to look at. Despite other comments to the contrary, you can test your application if it has been structured correctly and so there is no reason that you can't start implementing this straight away. Some comments imply that because it's webforms that you can't test which is wrong; the literal front-end is problematic but you can do a pretty decent job if you use something like MVP to test the front-end layer and everything else behind this. Outside of that all of your data-access can be separated, as can your business logic and you can test these just like an MVC application. You can even move your data-access to WCF/Webservices if you wanted and add another technology to the mix as well. 6 months of a heavy approach to testing and you can legit say that you test. You can literally write your first test tonight! The MVC aspect is only a small part of the whole application, so there is no reason that you can't develop these other skills without moving out of the current position that you have. Getting interviews is your first task. **Lying** Depending on the company that you interview with, you will probably get caught if you lie on your CV but you would not believe the amount of bullshit that exists on CVs. That said certain companies interview terribly and will never even spot the lies on your CV so in some cases you can literally lie completely and they will believe you. I wouldn't advocate that but the problem is that the more conscientious that you are as a candidate the worse you will fare against other candidates that embellish or completely lie. As soon as you can make a case for why you have the skills then add them to your CV; you will soon realize that you have gone too far when you get brought in for interview and fail miserably. As a final point I would be happy to look at your CV if you feel that this could be letting you down; PM me if you want. &amp;#x200B; &amp;#x200B; &amp;#x200B; 
EF core is faster than dapper? 
The on you saw above is for set-fetches (commonly used). In the individual fetches, here is the result. Handcoded materializer using DbDataReader (GetValues(array), boxing) : 0,10ms (0,00ms) per individual fetch Handcoded materializer using DbDataReader (GetValue(Ordinal), boxing) : 0,10ms (0,00ms) per individual fetch Handcoded materializer using DbDataReader : 0,10ms (0,00ms) per individual fetch RepoDb (RawSql) v1.8.0.6 : 0,12ms (0,00ms) per individual fetch Dapper v1.60.0.0 : 0,12ms (0,03ms) per individual fetch LLBLGen Pro v5.5.0.0 (v5.5.2), Poco with Raw SQL : 0,13ms (0,00ms) per individual fetch ServiceStack OrmLite v5.0.0.0 (v5.4.0.0) : 0,13ms (0,00ms) per individual fetch Raw DbDataReader materializer using object arrays : 0,18ms (0,00ms) per individual fetch Tortuga Chain v2.1.0.0 : 0,18ms (0,00ms) per individual fetch LLBLGen Pro v5.5.0.0 (v5.5.2), Poco typed view with QuerySpec : 0,22ms (0,00ms) per individual fetch Entity Framework Core v2.2.2.0 (v2.2.2.19024) : 0,29ms (0,00ms) per individual fetch LINQ to DB v2.6.4.0 (v2.6.4) (compiled) : 0,36ms (0,03ms) per individual fetch LLBLGen Pro v5.5.0.0 (v5.5.2), DataTable based TypedView : 0,37ms (0,03ms) per individual fetch LINQ to DB v2.6.4.0 (v2.6.4) (normal) : 0,39ms (0,00ms) per individual fetch NPoco v3.9.4.0 (v3.9.4.0) : 0,49ms (0,03ms) per individual fetch LLBLGen Pro v5.5.0.0 (v5.5.2), Poco typed view with Linq : 0,79ms (0,00ms) per individual fetch 
Feature-wise, definitely they are solid with this performance and efficiencies.
Sounds like you need help selling yourself then. If you want you can PM me your resume and I can help you. Sanitize it first because I’m a strange dude on the internet. 
&gt; But yes, web forms isn't really considered a valuable technology anymore. It has been more less replaced with MVC about a decade ago. And now even MVC can be considered outdated with all the client side frameworks and (micro) service oriented architectures. Big companies move at a glacial speed. I know of a number of big companies still doing Webforms or just dipping toes into MVC. Big companies are not agile, and often are maintaining old code bases that there is no ROI to re-writing them in MVC or Angular. &gt; I think what mostly threw the people that interviewed you off is the unit tests thing. There is absolutely no excuse for not knowing that in 2019 if you're calling yourself a professional developer. Many large companies do not afford you the time to unit test. Hell many don't even give you QA resources. I've been a PROFESSIONAL developer for 24 years and one 1 company even did any unit testing and that stopped when deadlines got tight. 
Also learn unit testing. Not just because its required at almost all organizations but because its super helpful. I find issues with my code daily because of unit testing. When unit testing use the Arrange Act Assert pattern. Also I would dabble in some light DevOps reading. If you’re at a small shop you are probably doing most DevOps principles already. Get some CI/CD tool (like TFS/Azure DevOps) in your pipeline and you will have no problem getting a job.
JavaScript isn’t a part of a stack, it’s just a given of you’re doing any web development. Bootstrap just barely qualifies as a framework, as more often than not, it’s just used for its CSS. 
There are still a lot of code bases out there that use webforms. Professional, production tools. There's not always a good ROI in re-writting a tool, just so you can use the newest frameworks. Many companies won't spend the money. Honestly if I tell you that you're not the right fit, it's that your personality won't jive with the rest of the team. Some places (where I work for instance) that's important. They want people who get along. Keep at it, look for entry level positions. I know you have done some stuff and that's a better base then many college graduates, but bigger apps require a "fuller" skill set. You may have the breadth but not the depth they want. For example, many people I interview say they've worked with SQL server, but then when I dig into their experience they've never built an index, don't know what a primary key is, or how to optimize their queries. They've basically done some select statements and a few joins. 
In the no-change tracking large set fetch it is, yes. (I wrote RawDataAccessBencher) It can because it uses an assumption that's also used by Linq to DB: it uses the schema of the resultset to determine which columns will be NULL and which won't. This can help with the IsDBNull check. Typically you check each value if it's NULL, and that takes time. If you can 'reasonably' assume it's never NULL, you can go straight to the Get&lt;type&gt;() read on the reader. There's a problem with this however. The meta-data this is based on can be outdated and you could get a schema of the resultset which says "this column isn't null" while there IS a NULL value in the resultset, causing a crash. I had to roll back the optimization in LLBLGen Pro because of this. So all in all, it's 'faster' (by a few ms), but the price to pay for that is IMHO too high. FTR, all other benchmarks, EFCore is slower, sometimes by a long shot. 
Hey, thank you for offering to look at my resume. I will PM you.
TDD is important because it brings quality and delivers value. Managers like to hear about things like that, and that you have a particular focus on it. That's of more use to them than what web framework you've learned.
Share a copy of your resume, because I work at a small university doing a lot of different .NET development and I can't bat away recruiters fast enough. 
Yes but everyone knows it is desirable - expressing that you have strong experience in TDD and that's the way you prefer doing things is what a lot of people want to hear. No one really cares about adding unit tests to legacy code, but, especially when hiring, people like the idea that their new devs are at least going to add some coverage
Wouldn't bother too much with mongoDB btw. It got a lot of hype and stuff but people realized it's not useful for most applications.
Online compilators like .NET Fiddle / Rextester
I would say that if you aren't even getting a proper interview, your problem is either the resume or cover letter. I paid a friend of mine to work on both, and he made some pretty great improvements that greatly increased my call backs. Also you should lie and say you do unit test, the concept is simple and if they call you on it just write a couple asserts and they'll be happy. The place I'm working at told me they are 100% test coverage but then I get in and realize that is not even close to true and involves separate functions for testing vs production ( seriously, I asked why this function had 0 references and was told it's what the test framework uses.. wtf guys )
Hi Frans, I do the the first touch of the DB and have all the meta caches on the memory. This is the thing you shared to me on my first PR to that bencher, and I optimized RepoDb with that approach (and it improves a lot). But of course, micro-ORM like us does not have a change tracking, which in result would crash the library if not handled properly in compiled expression. And so do the EF. That is as well the reason why I wrote most Integration Tests in nullable columns so the handling probability is high.
I am in the NYC area.
PM sent!
Also check out RoslynPad. I pay for LinqPad commercial version. I think it was $50 to add code-completion/intellisense. I often use it to prototype simple logic, mainly thanks to its rich data visualization features. For Regular Expressions, I use [http://regexhero.net/tester/](http://regexhero.net/tester/) which depends on Silverlight and will likely be obsolete in a few years, but in the man time is absolutely the best tool out there for debugging complex .NET Regular Expression regexes.
Unit tests are great, but how do you convince a paying client of their importance? Ok scratch that, how do you convince them that you charge more than another developer for producing less features? (Because a proportion of your development time is writing tests). Usually the true cost of skipping the tests isn’t seen until theres a change later down the line or a bug onsite. I’m not saying it’s right, I’m saying there’s a lot of clients that are pushing for more features in less time at less cost (in my experience - which has lost me work as I’ve not backed down on the no tests option) 
can you do &lt;controls:MyUserControl Thumb.DragCompleted="{Binding EventToFire}” /&gt; ?
Where are you located? I might have a job you can apply to :)
[you're one of today's lucky 10,000](https://xkcd.com/1053/)
Something not said often for .NET developers but the Federal Government is a huge .NET shop. A lot of agencies use .NET and more and more are moving to Azure. If you can, get yourself a clearance. A good way to get a clearance is the military. With a top secret clearance you will literally get 30 job inquiries a day. Something to think about.
Yes, UWP is a lot more restrictive, which is the point so that apps from the microsoft store can be trusted. They're working on it, allowing for more settings to make it a more viable choice for enterprise applications and tools, and I have a tab open to [dive into it](https://docs.microsoft.com/en-us/learn/paths/develop-windows10-apps/), but currently I just use wpf.
Once you learn DI, the next step is to learn AutoFixture, a tool built by Mark Seeman and probably the principle reason for his fame in .NET community. AutoFixture is very similar to DI, except that instead of registering concrete implementations, it let's you registers arbitrary implementations \_in a method scope\_ and re-use them throughout that test's method scope. I mention this because you don't have a lot of experience writing tests, and one of the ways you can be productive and still write tests is to write tests where you don't have to type a lot. AutoFixture will help.
I think the answer will always depend on "three fors": "**for** how much, **for** how long, and what **for**".
I am located in NYC area. But willing to relocate.
TDD is useless https://dhh.dk/2014/tdd-is-dead-long-live-testing.html
I've applied to a federal position recently, but do you need to have a clearance beforehand or will they help you get it after you get the job offer?
Sometimes. We hire good people and then get them clearances. It takes awhile to get a secret and a real long time to get a TS and above.
I'd like to help, too. I have written resume parsing tools intended for major staffing agencies, so I understand a lot about things most engineers never will.
For that you don't need any commands just bind the value of the slider to a property in your viewmodel and in the settee of the property you can call a method that should get executed on change. If you really need to use an event with binding you can look into interaction trigger (example here: https://www.technical-recipes.com/2017/how-to-use-interaction-triggers-to-handle-user-initiated-events-in-wpf-mvvm/)
This won't work for events. Directly binding only works if the control's dependency property is of type ICommand, than it can be directly bound to a command property in the viewmodel
There are so many more factors than what tech you know. Your difficulty could be related to your resume or interview skills, so you should talk to someone about how those are. I'd be happy to look over your resume and offer pointers if you want to PM me. Do you have any open source or projects available for hiring managers to look at? At 3.5 years into the industry, some might expect you to have started building a portfolio of sorts. As far as the tech goes: Webforms is dated, and MVC is considered by some to be getting there (though any established company will likely have several MVC apps instead of the latest and greatest client frameworks). But the frameworks and languages you know right now are not as important as your willingness to learn, adapt, and work hard. I started programming my junior year of college. Got a decent internship at a small start up my senior year, eventually dropped out to work for them full time. They let me go and I moved to a medium sized American metro (~2mil population). I had no degree and only a year of experience, and after many interviews, I managed to get a job at an established company of about 400 employees. A good hiring manager should recognize the traits that go beyond what technology you happen to know at the time. And if they aren't able to look beyond that, they honestly might not be a great place to work, because they might just be looking for someone to churn out quick and easy solutions. I hope this helps.
Sweet. A buddy of mine is hiring in Boston or Austin: https://www.rapid7.com/careers/jobs/detail/?gh_jid=1531405 Let me know if/when you’ve applied and I’ll let them know.
Sorry in advance for the smartass answer, but while(true) { Code evaluating all the variables } See which one finishes first.
Sorry in advance for the smartass answer, but &amp;#x200B; while(true) { Code evaluating all the variables } &amp;#x200B; See which one finishes first.
would it be simpler to try a new design pattern such as registering and calling commands? this removes the requirement of using ICommand and allows you to use void here is some bare bones stuff to get you started. &amp;#x200B; CommandHandler is instantiated by ViewModel (which is abstract and inherited by MainViewModel. &amp;#x200B; In the MainViewModel constructor, register the commands that you would like to use. Each Command requires a string Name, a bool CanExecute and a void Execute. &amp;#x200B; Note that the string you use to name your command is required to be the same string you use as a RoutedCommand in the Commands.xaml resource dictionary. &amp;#x200B; After registering your commands, you need to make sure that your app knows to aggregate all of your static resources so check out the App.xaml and add all of your resource dictionaries. &amp;#x200B; Last thing, make sure that your App.cs knows what type of System.Windows.Controls you want to fire events for when their elements change. &amp;#x200B; CommandHandler.cs [https://hastebin.com/emacicodap.cs](https://hastebin.com/emacicodap.cs) Command.cs [https://hastebin.com/nakirosubi.m](https://hastebin.com/nakirosubi.m) ICommandAction.cs [https://hastebin.com/oyewobifal.cs](https://hastebin.com/oyewobifal.cs) CommandExtensions.cs [https://hastebin.com/xexowifane.cs](https://hastebin.com/xexowifane.cs) Commands.xaml [https://hastebin.com/fawoloyoro.xml](https://hastebin.com/fawoloyoro.xml) App.xaml [https://hastebin.com/fulegixabe.xml](https://hastebin.com/fulegixabe.xml) App.cs [https://hastebin.com/hihehexako.cs](https://hastebin.com/hihehexako.cs) ViewModel.cs [https://hastebin.com/igixawuxej.cs](https://hastebin.com/igixawuxej.cs) MainViewModel.cs [https://hastebin.com/ixamepihag.cs](https://hastebin.com/ixamepihag.cs)
Cool. I'll have to give it a try. 
&gt; What are you missing from MSTestv2? Multiple failed assertions in one test. I don't think anyone offers this as a built in feature. 
Thanks especially for regexhero. At work I needed a .NET regex tester.
I was hoping for Detroit area. We're looking for someone just like you right now...
&gt; Among other things like DI, git etc. It's the basic toolbox. If you're not using it you should. So I should be using unit tests, dependency injection and git? Did you forget lambda expressions? /s
Back when I was applying for jobs a couple years ago one company I had an interview with then sent me a coding challenge and I completed it using Forms. After submission I got a call telling me I was not the right fit or what they were looking for and wouldn’t go into much more detail. To this day I still suspect it’s because I used forms... Looking back if I had to do the same challenge again I would 100% do it as an MVC application. Although their feedback was poor in my opinion, it was a good learning experience for the road.
Awesome, tysm...I will let you know!
Im very interested, lmk where I can apply.
I agree, I asked for feedback after my interview as well and got no response.
Ty, I will look into AutoFixture
I agree that your example would work but the value that I’m binding to isn’t in the main view model. It’s in another model. But the command I need is in the main view model. I did find a way for it to work though. I’ll post that here shortly.
I was meaner in my original reply. The basic mstest template uses mstestv2, so people make the wrong assumptions. It makes "Either way at least its not MSTest like it's still 2004" essentially misinformation.
Sounds more like integration testing, not unit testing.
Sounds like you know back end. Now focus on front end and get a full stack job. Focus on one js framework, doesn’t matter which one - angular, react, whatever. Sounds like you have the drive and ability to learn - that is the most important part of being a developer. Most folks consider web forms to be “legacy” technology. I still use it, in combination with some angular, jquery, etc depending on project requirements and time constraints. It’s stable and it has a lot of use cases. If you want more work with web forms specifically, focus on companies that will need help with legacy projects. Think slow movers - banks, law firms, government agencies. They all use whatever they already have until it’s absolutely imperative they switch over. Startups and tech firms, on the other hand, typically want you to use the newest technologies, which can be great in theory but many times become obsolete/deprecated in a few years. If you’re willing to adapt and change every few years then go the “new tech” route. If you like stability stick with legacy projects. I’d recommend doing a little of both so you stay relevant but have a level of comfort and expertise in what you’re doing. 
Agreed. Better to know sql server than mongo. 
I would definitely hire you. The ability to teach yourself new skills is important. Plus you went and learned a whole new architecture and framework to write a new project in it. You did that of your own initiative. That shows me you have what it takes to at the very least start as a Junior Engineer somewhere with a quality team. A lot of people don't have experience with unit tests, but what matters is just knowing what they are and how to write one if you need to. Doesn't need to be super fancy. You're going to have a lot of interviews which just aren't the right fit. The thing is that there are so many variations in product, clients, and the company cultures themselves that it doesn't always matter how skilled you are. Try a new recruiter; good ones are unforgettable and I often have to sift through a few recruiting agencies to find a great one. Don't forget to always try and connect with people you meet professionally on LinkedIn so that you can grow your network. I know it's silly and a lot of people over-hype it, but it's basically a digital contact book which can be invaluable 5-10 years down the road when you are looking for special opportunities. &amp;#x200B;
I'd be happy to do the same if you're interested
Pex has some interesting features for generating unit tests, but I don't see it being the right tool for something that has to call out to a database.
The dotnet script global tool https://github.com/filipw/dotnet-script
Thank you so much.
None the less, `CustomTestDataSourceAttribute` answers the main reason I switched to xTest in the first place. 
It's all good and well that as a hiring manager you'd hire him. But he can't get past the recruiters, presumably because he doesn't have the correct buzz words. Recruiters are scum.
Nightingale - a fast and resource efficient rest api client built entirely with UWP (C# and XAML). https://jeniusapps.wordpress.com/nightingale/ 
The recommended approach is indeed a new console project, but I like to use [https://dotnetfiddle.net/](https://dotnetfiddle.net/) when I want to test something real quick, e.g. what kind of exception something throws, what a certain method outputs in a specific situation, etc.
There's not going to be something as big as a VS 2019 release every episode, but there is a LOT of stuff going on in the .NET/Microsoft/Azure world. We just recorded episode 2 and we probably went a bit longer than we should have, just because there's so much stuff to talk about :)
Tests show the feature you are delivering works now, and will work forever as long as your tests are green. What is the point in delivering features that will be buggy and won’t work.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/learncsharp] [Looking for good EF Core Relational Database Tutorial](https://www.reddit.com/r/learncsharp/comments/b0u9jg/looking_for_good_ef_core_relational_database/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
So I was able to accomplish this by referencing System.Windows.Interactivity and then doing this to my Slider in the UserControl... &lt;Slider&gt; &lt;i: Interaction.Triggers&gt; &lt;i:EventTrigger EventName=“ValueChanged”&gt; &lt;i:InvokeCommandAction Command=“{Binding MyCommand}” /&gt; &lt;i:EventTrigger EventName=“ValueChanged”&gt; &lt;i: Interaction.Triggers&gt; &lt;/Slider&gt;
What do you mean?
Great! I will send you a PM!
I would encourage you to sign up for a free Pluralsight account. You get 10 days free, you could burn through several entity framework courses on there pretty quickly before the ten days is up. 
its really a tough situation. alot of places want trending or obsolete stuff. on top of companies wanting superstar devs in their 20s with 40 yr old dev experience for low ball rates depending on your area. most companies dont even need sr devs they just need experienced devs but are sold on the outsource dev dream that becomes a nightmare when its too late. i get more job offers who ppl needing dead tech than i do for csharp tbh. i personally feel you should learn what you want and just keep your eyes open for opportunities 
I think if you have a very long process that is blocking, doing that on a dedicated thread outside of the thread pool can be a good idea. TPL has a thread limit, and the idea is that these threads should free up regularly to be shared. However, the current limits in TPL are high enough, honestly, you will probably still never have an issue and can just use [Task.Run](https://Task.Run) for your long running task and you won't run into any problems.
Whats wrong with cshtml5?
You can use WPF with XAML islands to have uwp based controls embedded in the WPF app. However, the overall look of the app is still WPF, not uwp. Out of curiosity, what problem are you trying to solve that requires an app that can be shared as exe? UWP can already create an icon in the system tray btw, using some desktop extension APIs. 
well the sharing as an exe is more something of a convenience thing. I know that you can export is as an .appx but enabling sideload etc. isn't really that nice
Hello. I'm by no means a developer as I'm currently studying at Launch School. Can't recommend it enough! I think they could help you get the skills you need. :)
What do you mean by convenience? Sending the exe via email? Because deploying the app to the store and sharing the download link is a good system if you're planning to share with end users. 
I know this isn’t going to sound helpful, but do not use loops. This kind of computation needs a much more complex algorithm - this one will never finish. Try searching “game tournament outcome algorithm” or something. 
Well that's sadly not really fitting into my use case, I can't describe it that well. 
That's fair that it doesn't fit your use case. If you haven't recently, perhaps give the uwp app package sideload option a try though. The UX surrounding that may be smoother than you think. 
The curly bracket of the inner loop isn't surrounding the code; it will end up being a forever loop as long as a data stream isn't available. Also, you're missing a semicolon at the end of the first line... where the server object is filled. 
Hi, thanks for your reply. The inner loop (while(!dataStream.DataAvailable){}) is intended to not surround the code. The whole idea is that it sits there until the data starts coming in. Semicolon at the end of the first line was a copy/paste error from IDE into reddit. Sorry about that.
It's tough to say without seeing the exit from the loop... my first thought was should run isn't being set to false until outside of the loop. Can you post any more?
Keep applying. The fact that you're getting responses means that you'll eventually land a position.
The "shouldRun" variable is set to false when the network stream receives the word "Finished" from the code that's supplying data. There are plenty of print statements way before we reach that point though. I also tried changing the declaration of the while to say: int count = 0; while(count &lt; 1) { count +=1; //Do stuff } And that ran fine, once. When I changed it to say while(count &lt; 2) though, it wouldn't run a single time. 
That's worth a shot, maybe. I'll try it tomorrow, thanks. 
Have you tried a for loop? Loop it through ten times and print the integer with every loop to see if you're iterating. I'd stick an addition print in the inner loop to make sure the operation below isnt keeping data from being unavailable indefinitely 
React has something like 70% market share in frontend frameworks, so if you're able and are wanting broad employment possibilities, React may be a better play than Angular.
Are you sure that the empty loop is working? That pattern can cause issues. It’s possible that the empty loop consumes all resources and prevents anything else from being processed. You’re waiting for a flag to be set, but you spend all of the system resources polling, and you no longer have any processing power to actually update the flag
Yes, I've tried that. Putting in print statements doesn't work. The moment the executing code hits that while loop, everything freezes up and I don't get any output.
That's interesting. What's the proper way to go about something like this then? How do I have my C# code sit there waiting for the data until it arrives, besides saying "Don't do anything while there's no data available, then when the data arrives go ahead and do all this stuff"?
One of the goals of object oriented programming is grouping related concerns together. The baddies have attributes such as position and how much health they have left (or, if they're one hit and dead, if they are dead or not). And these attributes should be grouped together. A baddie object that has X and Y position and if it's alive (along with any other attributes) would solve your problem. You could initialize all of these objects as the game starts, but with some of the baddies off screen (with negative Y values if origin is top left). As they do their progression, the ones that should appear will do so naturally as everyone steps down. In game programming, you're going to have a standard game loop. Usually (but not always), you're going to want to initialize all game objects before you start the game or level and then all of the game loops will perform the same functions with the game objects themselves doing things that are specific to them. Special logic like "Do x until y condition is met" is sometimes necessary, but should be avoided whenever possible. In a small game like this, it's not a big deal, but as games get bigger, it'll spiral out of control really fast.
https://docs.microsoft.com/en-us/dotnet/api/system.net.sockets.tcplistener?redirectedfrom=MSDN&amp;view=netframework-4.7.2
&gt; What is the point in delivering features that will be buggy and won’t work. because it's not a black and white world where that's how it works. It's usually deliver a feature that works, but not as scalable as it could be. Tomorrow's problem will often be ignored to address today's problems, especially when the people who are making the decisions, and paying the checks, don't tend to be devs/former devs in the business world.
That doesn't seem to work, for whatever reason. I don't see where it's doing the type of waiting that I had in my version above.
Happy cake day man
If API does not support partial results then nothing you can do.
That’s because you’re not doing it right. Reread the docs server.AcceptTcpClient should be inside your processing loop. It will block the thread until it receives data. Then it will continue to read and process whatever data it receives. Compare the docs to your own code you will see that you are making that call outside of your processing loop
#NEVER EVER HAVE AN EMPTY LOOP #EVER Now that I got that out of the way I suspect it MIGHT work if you delete that stupid line. `Read` will block until you receive data. I wouldn't be surprised if `DataAvailable` doesn't update until you do a `Read`. Also `Flush` is generally used when you are WRITING data which you're not doing here. 
One step at a time. Could you use SQLite as a substitute or does it need to be SQL Server? Would JSON be acceptable as "a formatted text file"? I often use poor man unit testing. I put all my test in one big file and call \`Test.Start()\` as the first line of my console app. Works well for small projects. Using SQLite I'll always do it as a memory database.
Await async is one of my favorite additions to c#, only behind LINQ. Vastly simplifies the majority of the calls you have to make that are asynchronous.
Have you tried a decompiler like DotPeek? If it's a mix between C# and VB.NET and builds .NET dlls, the tool might be written in .NET itself which would let you decompile and tweak it. Otherwise, using ANTLR and the grammar you've set up, just parse the file and for each token in your language, set up the AST in Roslyn and then compile the Roslyn AST to a .NET dll.
Have you considered making your own styles for controls? Right click on control &gt; Edit template &gt; Edit a copy
Good read. Thanks for sharing.
Are you using that data adapter to manage a DataSet? Why not just call cmd.ExecuteNonQuery()?
 using System; using System.Linq; using System.Collections; using System.Collections.Generic; using System.Data.SqlClient; class Program { static void Main() { string str = "Data Source=(local);Initial Catalog=Database;Integrated Security=SSPI"; ReadData(str); } private static void ReadData(string connStr) { string query = "SELECT QUERY HERE"; using (SqlConnection conn = new SqlConnection(connStr)) { SqlCommand cmd = new SqlCommand(query, conn); connection.Open(); SqlDataReader rdr = cmd.ExecuteReader(); while(rdr.Read()) { // Do Something With Results } rdr.Close(); } } } &amp;#x200B;
Just wanted to say, I can google: [https://docs.microsoft.com/en-us/dotnet/api/system.data.sqlclient.sqldatareader.read?view=netframework-4.7.2](https://docs.microsoft.com/en-us/dotnet/api/system.data.sqlclient.sqldatareader.read?view=netframework-4.7.2) &amp;#x200B; So ... I mean, the docs are out there, you just have to look.
tested it. the database is updated when i run it the first time. close the program and run again. the data magically is gone.
The problem is the industry. The car mechanic hopefully at least turns the car on and takes it for a spin after he replaces the engine. You would never tell your mechanic “can I save a couple bucks by having you not drive it around the block”
Are you sure that you are not overwriting the file on compile? If it's part of the project, hit F4 and check the copy settings. 
You can't just say something is official, especially if it's incredibly obvious it's not. There has no statement, so it can't be official, and you can legit just go to the WPF open source project.
If you're interested in an ORM for Access, I've got you covered. var dataSource = new AccessDataSource( connectionstring ); dataSource.Update("Sheet1", new {Name = empName, Rating = rating}).Execute(); https://docevaad.github.io/Chain/Introduction.htm 
is this it?
what should I set it to?
Agreed. I've had a few cases in the past where I needed to run an async method in a place where you normally couldn't (a console's Main function being the primary case), but they've even fixed that (as the article mentioned). Such a great feature.
LINQPad also has a [built-in RegEx tester](https://twitter.com/linqpad/status/1031478320183926784) and it’s pretty awesome too.
&gt; do you really need from/to conversions? Isn't it always "from = 1/to" Temperature conversions, in particular C &lt;-&gt; F are not as simple as 1/to.
I like RoslynPad over LinqPad in that for free you get intellisense and bracket completion. I don't like RoslynPad in that the bracket completion in the current releases is completely bonkers (it's *trivially* easy for it to go haywaire and you end up with `(()something == somethingElse).Dump())))))`), and while they actively develop it (including having fixed this bug) the only way to get a version more recent than *November 2, 2017* is to download the code and compile it yourself. (The setting to turn off the broken featue was checked in at the end of November, 2018.) They actively develop the thing and then don't actually do releases. On roslynpad.net or the Windows Store. Drives me nuts. So now I'm considering just biting the bullet and bying the commercial version of LinqPad. I love it, except for the lack of intellisense and bracket completion.
Is your goal to calculate wins and losses for each team as well as cumulative score, etc? Then O(n\^2) is the best you are gonna get, and contrary to a previous comment, I think using loops is a totally acceptable algorithm. I would just change your code to be: public void IteateTest() { while(j&gt;0) { for(int i = 0; i&lt;j; i++) { Code evaluating vars... } j--; } }
- xUnit is supported by the .Net Foundation, NUnit is not. - xUnit was rewritten to be flexible, NUnit is originally a port of JUnit, and less flexible. - your personal taste - your team choice
The first version is also easier to debug as you can both see the value of the `days` variable in the Debug windows as well as be able to attached conditional breakpoints (that depend on the value of the variable)
Hashsets guarantee uniqueness without throwing. Without him stating, you don't know if that's the intent or not. If it is, it would be much more efficient to use a hashset than a list. Also, hashsets have overhead of adding items, not creation. I assume that's what you mean, but that's not what was said - this is more for the OP to understand.
"Copy if newer" or just exclude it from the project entirely and copy it manually. 
Poor wording on my part. I did mean on population, not instantiation. Good point on the possibility of someone using a HashSet purely to enforce unique entries. I did make assumptions about his intention based on the code and the fact that he was trying to be “efficient,” but I could have been wrong, and I appreciate the clarification.
The only thing I ever found unit test good for is making sure functions spit out the desired results after I twiddle with the function other than that I prefer just running it a stepping over the code. 
Thats a good point
But taking a car for a spin is the same as “oh it works for me” no way is that unit testing If it was done to the same level you could have tests like: Hill starts Cold weather Hot weather Fully laden Nearly out of fuel Premium fuel Wet wether High speed Persistent idling Driving a car round the block is the same as running it once clicking a few buttons and say yeah that seems to work.
Maybe the example is poor, my point is a good mechanic knows how to be a good mechanic. And a good software developer should know how to be a good software developer. And unit tests should be part of that solution ‘the business’ shouldn’t be saying “cut unit testing to save money/time” it drives me nuts to see 1 bug ‘fixes’ create 2 new bugs when a test harness can catch many bugs in advance. Unit tests assert that all work done in the past still works as expected if I make new changes. In the not-so-good car example “with unit tests” if I do work replacing the wipers, I run all my unit tests that were done in the past. That means the mechanic comes to my house and drives my car around the block EVERY TIME I make any change. Because at one point he asserted “your new engine should work like this”. Obviously that isn’t going to happen in real life. I’m just trying to drive home my point. 
I love reading these posts with clear and short code snippets, with detailed descriptions. Nicely done!
Willingness to learn is top notch. Other than that I would look at your defensive coding and overall code quality (since you mention that you don't know unit testing yet). Also I would recommend looking a bit at the .NET Core framework as we're moving towards .NET Standard and .NET Core more specifically. &amp;#x200B; Passing a general code review and demonstration of old code (even if it's webforms and mvc), I would definitely give a +1 on the recommendations.
A very meager "demystified" article. Mentions the state machine, but doesn't even walk through it or even shows it.
Depends on your other skills. MVC isnt that hard, but as asp.net dev you have to know way more than asp.net. You have to know db stuff and many companies require you to know js and one of that fancy frontend frameworks like react/vue/angular so it really depends on the company and position you are applying on. I moved to asp from winforms 6 months ago and it took like 2 months to find the job. Many interviewers were like "oh boy why do you even think the web is your thing? go back to your dragndrop desktop stuff"
It was interesting when it was presented many years ago, but then it was nearly dead silent. Nowadays there are many better supported solutions out there. And with Microsoft's focus on Blazor I can only see this project die off.
How are you going to access Todo's notes without List&lt;Note&gt;? You'd have to perform joins at c# level instead of performing just .Include(x =&gt; x.Notes) and let it join at SQL level.
Try something like that I can't test it rn, but try something like that: var todo = new Todo(); _context.Todos.Add(todo) todo.Notes.Add(new note()); _context.SaveChanges();
For main, they fixed it by adding the one-liner you’d otherwise write, though. Not to take away from the feature.
No worries, and for the record I do write and believe in unit testing. Wanted to clarify the car analogy for other readers too. However some corporates that outsource and purely focused on driving down cost and are very short term focussed, this means that some jobs that should go to a good developer may end up going to a cheaper developer. Exactly the same can be said of cars, if you appreciate that you have a good mechanic and understand that you want your car a long time and can afford it, then you will pay. But if you are a fleet manager in a business, then you might have a different set of values (hopefully safety, but definitely cost - and if the vehicle only has to last a couple of years, and will be replaced) What I would say, especially for the OP, most companies that really value software developers and look at employing them rather than contracting them, will almost always be after unit testing, and in any of your personal code you should have unit tests (even if just for practicing, but absolutely if published to the likes of github)
Good and short read, but I think the concept of threads and tasks are mixed up a bit too much here. Besides the underlying threadpool, there is not much thread in tasks at all. 
As far as I know the only thing you can do is calling the API and retrieve the specific elements you need, and leave the rest. *At least, I did that.* 
Consider using .NET Core if you can. Visual Studio's built-in Command Line Application template will get you started with a basic app skeleton. Use the .NET Core template even if you're not going to use .NET Core - you can always change your TargetFramework to the relevant framework version you want to target the full framework instead. This will give you all the goodies of the new SDK-style project system. Consider using [Dapper](https://github.com/StackExchange/Dapper) for your data access. It's a thin layer on top of the built-in ADO.NET stuff but it makes life a lot easier. Consider using [xUnit](https://xunit.github.io/) for your unit tests. Consider using [McMaster.Extensions.CommandLineUtils](https://github.com/natemcmaster/CommandLineUtils) for your command-line parsing (unless you're just having a single command line option - the config file path - in which case you won't need command line parsing). I'm not sure what format you want your configuration file to be in, but I'd recommend JSON. Consider using [Newtonsoft.Json](https://github.com/JamesNK/Newtonsoft.Json) for your serialization/deserialization - it's the most commonly used JSON serializer these days. If you do use .NET core, you have a few different [deployment models](https://docs.microsoft.com/en-us/dotnet/core/deploying/) to choose from.
Thanks. For this scenario I feel that either approach is acceptable, but I've recently come across some libraries I've needed that only have async read methods. It feels kinda silly to use an async method when I have a dedicated thread. It made me question my approach.
The closest design wise I believe is telerik library. But regardless to any library or custom design, you won't have same as UWP (especially if you don't want to run as Admin), since UWP has direct access to windows itself. 
Good article and gives IMO everything you really need to know to understand enough of async/await to use it. But for calling "demystifying" I would have hope for a more in depth look at the inner workings like a small example how the state machine is being generated. For everyone interested in at least looking at a real example of a generated state machine I through together this [sharplab.io example](https://sharplab.io/#v2:EYLgZgpghgLgrgJwgZwLRWQTwHYGNXIxJQC2yANACYgDUAPgAIAMABAwIwDcAsAFDNt2AFh79WHAKyi+2UigAOUXBBYBlInFwxVASwBeEACooYLPgG8+La2wDMggGxsATIIDsVm5d43fdx2xCLACyUDrYABQAlJ5+LN5x1gC+sX6pvgz2HE4MABxsTgDCAPZw2DCGxRHhpiRQAB4xPokJib5gxQjV5Sw6LAC8LEycvSwAPCx19SM6NDRNbb6tiywAkAwAnCwA6gg6MBDVUaIryek2Kc1x59aZAXkFO3sH3aY6Cy03fhwbRyeJl18lySQA===)
I looked at your CV and cover-letter, and other than the testing aspect I wouldn't say that there is anything specifically that sticks out as it being a bad CV, in fact the opposite. Overall the "shape" of your CV is good. Employers like to see things that they understand and don't have to think too hard about. You went to uni, had an intern role and now have 4 years at the same company doing development; this is the path that people like so no issues here. Constant tweaking of the CV is always a good idea, and in particular making certain aspects really stick out depending on the role that you are applying for but ultimately this is small-stuff and not something that I would be overly bothered by. A very minor point would be add some aspects to the cover-letter which are specific to the company that you are applying to. **What might be going wrong?** I wrote a long reply to another post a while back which might have some use to you [https://www.reddit.com/r/csharp/comments/9zevmp/trying\_and\_failing\_to\_find\_professional/ea9807m](https://www.reddit.com/r/csharp/comments/9zevmp/trying_and_failing_to_find_professional/ea9807m). The gist of my reply was that ultimately its a numbers game; if you have only applied to 3 roles you aren't yet in a position to think that there is an issue as you haven't sent enough CVs out. You need to become a recruitment consultant for a while and do the sort of things that we do. Find 100 companies that you want to work for, find the dev managers and hr managers of all those companies, send your CV to them all on a speculative basis. If that doesn't work, repeat. If you have made loads of applications then what else? **Speaking to them directly** Don't be afraid to call the companies (difficult I appreciate for some folks) and say "I sent an application in for the C# role and I would like to discuss my application with you". Nothing salesy or cocky. You deserve to know why you were rejected and hearing this directly from the companies themselves might give you some really useful feedback. Additionally applications get lost, emails not read etc. By speaking to them you can often make stuff happen that 95% of others are too lazy to do. Do not feel that you are taking up their time; it took you time to apply and it's common courtesy to have some form of communication. **Wrong types of companies** There might be a little leap to go from a uni to google in one move. If the roles you are applying to are massive multi-nationals with huge devs teams it might be that they are rejecting you due to the size of applications you develop, that you are part of a small team, that the structure is not as Agile as they are. With this in mind, by all means apply to google, but also other companies that might not be exactly what you want but that will offer some form of stepping stone. Getting out of the uni is the first thing as in the UK I would say that their is a perception that uni/council/government/education type places are just not as professional as "proper" software companies. There might be a local engineering company that has 2 developers which doesn't sound totally sexy, but you might get something that will push you forward a little bit. Stay there 2 years (companies hate people who jump too often) and then move up a bit. **Testing/Agile** Obviously mentioned testing before but companies are equally as interested in the environment that you have worked in and also then general professionalism of building commercial software as a living. Agile and proper testing are very important for a lot of companies so try and develop these more if they aren't there. Are you hacking together systems, or do you have a specific methodology for your development? Do you try to use agile even if it's just for yourself? SOLID principles? Proper OO design and development techniques? UML? I can't comment on whether you have these but I think that it's something to contemplate and at least be aware if you are portraying yourself as such. Ultimately finding a new job can be challenging, especially if you are not an exactly perfect candidate but I think your CV looks quite good so think about the points I've made particularly the link to the other post, even if you discount them because they are in place already. Again, happy to help and you can PM me if you want.
It's also worth knowing what hides behind async keyword. I wrote a blog post about that - http://damian.laczak.net.pl/blog/2018/09/02/c-async-and-await-who-are-you/ Because there are some clever things going behind.
The sort of developers still insisting on using MSTest are same sort generally who refuse to use newer versions of anything, so wouldn't be using V2.
Thanks for the tip, at least I know I'm in the correct direction... Regarding the decompiling, "off the record" we use that internally (some politics involved and we are not supposed to decompile it) and that is actually my kinda fall back plan, but because, I assume, it's an old tool, the proprietary system do everything manually (parser, lexer, IL emit, etc), and I want it to modernize it a little bit
A bit daft, but interesting given that the boss of Microsoft's Visual Studio division is Julia Liuson, who is herself Chinese.
hahaha... Definitely crossed my mind... I think, because is a tool aimed to project managers that "can code" or with technical skills but not really developers... Think of it like Excel macros on steroids... 
Perhaps it underscores how ridiculously sensitive some people are.
You should be using MVVM with WPF or UWP. There are several MVVM libraries to help with this.
How do I get the guy with green hat back for my VS installation? I cant wear enough green hats myself.
&gt; And now even MVC can be considered outdated with all the client side frameworks and (micro) service oriented architectures. Try telling this to certain devs I've worked with that *still* think MVC is the second coming.
I don't think it's actually offensive, I think it's more that they were being mocked. Like my gf won't let me get a green hat for the exact reason.
Part 4: [https://altkomsoftware.pl/en/blog/building-api-gateways-with-ocelot/](https://altkomsoftware.pl/en/blog/building-api-gateways-with-ocelot/)
Part 4 Building API Gateways With Ocelot [https://altkomsoftware.pl/en/blog/building-api-gateways-with-ocelot/](https://altkomsoftware.pl/en/blog/building-api-gateways-with-ocelot/)
Part 4 Building API Gateways With Ocelot [https://altkomsoftware.pl/en/blog/building-api-gateways-with-ocelot/](https://altkomsoftware.pl/en/blog/building-api-gateways-with-ocelot/)
Which ones? Those bothering to complain about the change seem waaay too agitated.
I've changed my array so that it's now a list, the bad guys are a class so I call on the class in the list so when I get a chance next to look over it I will be attempting to a couple of the suggestions here so thanks for the replies 
Which sort of proves his point :)
I was trying that a lot. Somehow they didnt work. I dont know about the sharpdevelop architecture, but I doubt it's a compiler bug? &amp;#x200B; As well I wonder why they removed generating properties from the program.
It's a bit of a stretch to say that 'someone was offended', or that anyone complained that they were feeling personally attacked by it. I don't think every company should know every cultural trap they could ever fall into, but it's fair enough for people to say, 'I don't know if you've thought of it already, but there's a connotation to this that might make people generally uncomfortable, or that people would laugh at you for.' &amp;#x200B; Companies spend millions with branding companies and designers picking the right colour schemes and iconography to evoke specific brand values in the minds of their customers, really subtle things that no-one else would consciously pick up on. If they think that's worth it, it's also fair to want to minimise the associations with negative values. &amp;#x200B;
That's why I asked the question, because it feels like over engineering and a lot of boiler plate code, what would you suggest?
I never thought I'd see someone use "Bing" as a verb either. 
Pass a reference to form1 to the Form2 constructor.
For real? We are this deep?
With Visual Basic, every Form Class has what is called an "Implicit instance" that is the same name as the Form. C# does not have implicit instances associated with the class itself- you must create and manage them yourself. The easiest way is probably something like this within Form1 to show Form2: Form2 form2 = new Form2(); Hide(); form2.ShowDialog(); Show(); Form1 will hide itself, show Form2, then when Form2 is closed it will show itself again. Alternatively, you can hook the Closed event- this would probably require that Form2 closes itself appropriately, though, rather than merely hiding it: Form2 form2 = new Form2(); form2.Closed+=(s,a)=&gt;{this.Show();} Hide(); form2.Show(); If you really want instances associated with each class, you can define them as part of the class. For example: public static Static = new Form1(); Would allow you to "access" a Form1 by using Form1.Static.Show() and Form1.Static.Hide(). As an aside, however, having usage of Windows "navigate" between different Windows in this fashion is incredibly clumsy from a UX perspective. If you open a dialog, in almost every case it should open separately without hiding the main window from which it was summoned. If you want to prevent interaction with the main window until the operation is complete with the "sub" window, then you would use ShowDialog() to show that window modally.
Removed: Rule 3. As you say, it's quite likely a caching issue. One workaround is to append something unique to the end of it, like the current datetime ticks: string myPictureUrl = "https://ksml.fi/kamera.jpg?unique=" + DateTime.Now.Ticks; That way whatever caching mechanism always has a unique URL and (hopefully) shouldn't cache it. If it still is, then feel free to repost it, but please include the code you're using to load the image.
Removed: Rule 4.
I’ll worry about offending China when they start being a responsible world citizen.
Poor guy..
Default template mstest is v2.
&gt; It's a bit of a stretch to say that 'someone was offended' The first comment is literally a Chinese guy asking for it to be changed because it's offensive to his culture.
Snowflakes. Everybody is a snowflake. This is what the world has become. 
So its hard to come up with an equivalent context, but lets imagine they had animals saying their phrases wrong on a loading screen for the installer describing updated error handling and the animals were: &amp;#x200B; * Dog saying Wert! Wert! * Cow saying Maaaaaaa * Duck saying Cuck! Cuck! Cuck!
TL;DR: Microsoft are calling their Chinese userbase cucks.
[removed]
Can we change the image to a line of tanks with a lone figure standing in front of the tank? Also add language Taiwanese Guoyu and have it default to be the local for any installs in China? And then I feel sorry for the Chinese army. All those wives cheating on their husbands while they defend the world under heavan. [Poor green hatted Chinese military men](http://en.people.cn/n/2014/0920/c90786-8785523.html) 
You seem to be punishing Chinese *citizens* for their *government*.
I assumed that's what OP was talking about. 
&gt; A fix for this issue has been released! Install the most recent release from https://visualstudio.microsoft.com/downloads/ . Thank you for providing valuable feedback which has helped improve the product. Shame on you Microsoft
My house is made of glass so I can't make statements this righteous without being labeled a hypocrite. It just seems like a kind thing to be considerate. Surely your governments policies don't define you.
Two things, first - who, if not the citizens, are responsible for a government? Second - widespread mysticism, disdain for the environment, misogyny, and imperialism - those aren't things the government has pushed onto its populace, those are flawed mindsets that people embrace. The Chinese government *could* attempt to modernize the mindset of its citizens; it *could* invest in large-scale socioeconomic policy reform and education, in environmental protection and clean energy, and go against the popular values of its citizens - but it chooses not to, even though in many ways it'd actually be easier in a dictatorship / communist regime than it would be under democratic rule.
Also people are willing to spend a lot of time arguing about how something that doesn’t affect them is a waste of time. 
&gt; Two things, first - who, if not the citizens, are responsible for a government Not the citizens of China. Is this a joke? You think Russians enjoyed Stalin too? Or the Khmer rouge?
Embedded DEEP within Chinese "culture" is the idea that the Chinese people are a master race. It's been this way since the Han dynasty. From https://www.theguardian.com/commentisfree/2009/jul/10/china-han-identity-uighur: &gt; a very powerful sense of Chinese cultural identity has evolved which has subsumed and taken precedence over other identities such as ethnic, regional and religious for the great majority of the population. There are a host of ethnic minorities in China but they often have a weak sense of identity and are relatively small in total number. History has taught the Han that other groups will and should ultimately be absorbed and assimilated as Han. There is a belief that the Han enjoy a superior and far more advanced culture. As a consequence, there is a very weak sense of, and respect for, difference. Respect is a two way street, but beyond that, I just don't see value in respecting a "culture" that's actively working to destroy the planet.
The irony in people getting mad about people getting mad will always be the best thing about these issues. 
90% of the Chinese population identifies as Han. Also uighurs speak and write Arabic, and thus aren't offended by green hats.
Oh how terrible. Yeah I certainly don't have respect for your opinion on this. What a joke. 
You don't happen to be Chinese, do you? lol
No
Uighurs don't speak Arabic and you're not addressing the point. 
They do bear some responsibility for letting their power get so solidified. Yes, it's near impossible for them to resist meaningfully now, but it wasn't always this way, and the signs it would end up like it has have been there for a long time. But, like I said, *some* responsibility. 
I guess German Jews had it comin then eh
https://en.wikipedia.org/wiki/Uyghur_language I actually learned something just now, I thought it was Arabic, but it's actually it's own thing branching off arabic. Regardless... it's not Chinese so my point about green hats meaning nothing to them stands.
All Irish people should complain. They like green hats. 
I understand your point. German Jews enjoyed the holocaust. Russians loved Stalin's rule. Cambodians enjoyed their time with the Khmer Rouge. And North Koreans really love the feeling of famine and torture. 
Funny thing is... those are all in the past tense... except the North Korean one... which is still kept in present tense largely because of... wait for it... China!
If during the very early days of that party's ascent to power they didn't bother to resist, then... yeah (I note your use of "had it coming" is a strawmanning of my position, however, made in bad faith). It's a nuanced thing; it's not binary. *Some* responsibility doesn't mean there aren't other groups that are more at fault.
I love a good developer rant. Why does it require VS 2019 Preview 2? Because of the sln file? Can't you just ninja edit the sln? 
Going through the motions of grasping this for my current project. Good read, I appreciate it
Ok. We're not getting anywhere. How about Saudis. Or Palestinians. Doesn't matter, you're pretty set on hating Chinese people. Catch ya later
Wait lol what? This isn't a total troll move? This is a thing?
If you find that ironic, you don't understand what snowflake means.
Must use SQL Server. The database already exists out there, so I don’t have to worry about distributing it or installing it. Nope, can’t use JSON. This file is getting sent to a legacy mainframe system which has very specific input requirements. 
Don't forget about the muslim "reeducation" camps
https://github.com/dotnet-architecture/eShopOnContainers https://dotnet.microsoft.com/learn/web/microservices-architecture
Do snowflakes trigger you?
So Chinese people under 50 are responsible for their government because they weren't alive to resist Mao. Strong argument there. 
Thank you all 😊 and thanks for the heads up with threading, I'm definitely no expert at this yet. I just wanted to share how I managed to grasp it, and why you would use it over other traditional ways of writing asynchronous code
Looks like we got an edgy boi here. My mommy said to stay away from people like you.
I thought that comments made by a Wang are surprising. 
He says, in defense of snowflakes
You are a special kind of retarded.
this is pretty much the console starter app, yes?
I'm a bit confused how snowflake applies when it's a cultural thing of over 1 billion people.
Why don’t you listen to your mother?
Maybe add double buffering. If you have a form: then add 'form.DoubleBuffering = true; For double buffering individual controls, here's the answer: https://stackoverflow.com/questions/76993/how-to-double-buffer-net-controls-on-a-form
*insert hysterical, stupefied laughter*
I'll have a read over these, thank you
Why xUnit over nUnit?
It's a big topic. CQRS is a good starting point. There's lots of resources out there on microservices, clean architecture and code, .NET best practices. Lots on youtube.
Yawn. I was totally expecting the green hat backlash. What will shock and amaze me is if I read that after over a decade of willfully annoying their users, the VS team has fixed the issue where hundreds of temporary script files cause Solution Explorer to scroll away from the files the user is working on when debugging a web app. Now THAT will be newsworthy. 
It sounds more like you need a SSRS report then a C# app. kardall answer is probably the most straight forward. Use Main(string[] args) instead to get the arguments passed in. Use a StringBuilder to build your output then use File.WriteAllText to save it to a text file.
You didn't bing it did you?
So green is offensive. But purple means bad luck in Italy (or Spain I don't remember). You can use blue because it means gay in Russia. Red is the color of blood so obviously not. White? Black? Yellow? No it's obviously racist. Gray is the color of mourning. What about orange? Well I'm. Sure it is offensive in some country. Seriously that Chinese snowflake should just realize that China is not the center of the world. And since most people there don't even pay the software license but just pirate them why should Microsoft bother. I seriously hope this issue will be closed as "won't fix" because it is ridiculous.
No, I just assumed something so ridiculous was... Well ridiculous. 
Windows Forms or HTML.
Take your hobby argument and shove it somewhere else you dullard
NUnit is fine too. I swapped over to xUnit a while back because they added .NET Core support before NUnit did, from memory. It feels like xUnit is slowly becoming the dominant unit testing framework, at least in OSS projects.
Only if it is renamed to Visual Studio 4. And support links go to Google or this Reddit thread.
I saw one about CQRS yesterday which is what prompted me I’ve previously cast the view model in the controller to a lower entity to perform update but it’s always felt wrong. I prefer to have lower level code taking something in and manipulating it to perform operations on. I struggle without seeing working examples of how it all fits together. I’m trying to improve my level of understanding over architecture in a real world example of my existing code. I’ll continue to read over CQRS, thanks 
&gt; "Bing" as a verb either. They do this all the time at MS (or at least use to). I have attended several events at Microsoft UK and all of the hosts/instructors do it. Yes, there *was* snickering from attendees. You could see the hosts/instructors die a little inside every time they had to say it. 
That’s what I think. Google simple application and piece together. You did more than I thought was appropriate. [then again, OP could be the infant in the photo](https://www.reddit.com/r/thisismylifenow/comments/auepen/crossposting_this_to_rstellaris/?utm_source=share&amp;utm_medium=ios_app) Maybe OP needs to go to /r/slavelabor/
&gt; I’ve previously cast the view model in the controller to a lower entity to perform update but it’s always felt wrong. Oh wow what? No please don't do that. You should be injecting services etc into your controller.
Replaced it with a picture of Winnie the Pooh
Could you please Chandler Bing that for me?
That's gonna hurt their social credit score.
public async Task GoLickAPandasAssAsync() { } go ahead, I'll await.
Yeah no truth... scary stuff. Also the social credit score...
Because it's *not* a cultural thing of the *other 7 billion people*.
Instantiating objects inside a for each has no effect as the compiler will correct this. https://stackoverflow.com/questions/1884906/declaring-a-variable-inside-or-outside-an-foreach-loop-which-is-faster-better
That's not what I meant, though. I was refering more along the lines of someone instantiating some helper class, for example, although they should only instantiate it outside of the loop and use it inside. Yes, I've seen this done. 
It happens. We once offended some people with a picture of feet. Different cultures are different.
Chinese influence is bigger than ever.
&gt; who, if not the citizens, are responsible for a government? Given the reality of the form of government in China, I’m not sure what you’re asking. Yes, they call themselves a republic, but that’s really only on paper.
ok, so if i understand correctly, chinese users are complaining about an image an american company is using on software for more than just china? ... gtfo
You have a very simplistic view of politics and in particular the psychology of group dynamics. Read up. Blaming a Chinese citizen for their government is a shitty thing to do.
So [Luigi](https://upload.wikimedia.org/wikipedia/en/thumb/f/f1/LuigiNSMBW.png/220px-LuigiNSMBW.png) is probably a no-go in China then?
The notes table would have a todo id, not the key because you’ll have duplicates of todo id, then you just pull out all notes that have a todo id of “x”. 
2 billion Chinese people. Roughly a dozen heads of the communist party. That said - again - these mindsets - it's not like the government is forcing the Chinese people to be misogynistic, or anti-environment, or imperialist, or ridiculously superstitous to the point of eating shark fins to get hard ons or whatever. That's THE "CULTURE" ITSELF and THE "CULTURE" ITSELF is thus not deserving of being respected. To be clear: every culture has ridiculous beliefs. Christmas is ridiculous. Putting ashes on your forehead on a certain Weds is definitely ridiculous. But those don't hurt other people. Chinese culture is rooted in misogyny and Han master-race bullshit, and the world does itself a disservice by respecting it. 
Not to mention the wide acceptance of cheating to get ahead, at least in video games. From what I've read, many of the asiatic countries like China and I think South Korea have a "cheating is OK" policy because if you are cheating, you are using all of the available tools to "win" in life.
Why don't you "respect" his opinion on these widely accepted facts about Chinese culture?
In another life, back in the 90s, I wrote a tech book. Got some modest royalties, few grand, cool but not life changing. One day, I find a Chinese translation of my book on ebay. Asked my publisher... hey, I didn't know you guys translated my book! Do I get Chinese royalties? They said, yeah no, we didn't, this is just something that happens in China, and since it's impossible to enforce intellectual property laws, there's nothing we can do... sorry! That was my first experience with Chinese "culture." I wonder how many copies of that book were sold and how much money those people made...
And just like that I now own a green hat. 
Only fascist use "cucks" as an insult. I've been told so by a leftie I argued with just before he called me a fascist.
&gt; But the world doesn’t bend over backwards to accommodate Christians or Catholics when they’re offended. Ahahaha yes it does
Even Chinese who see that don't give a shit, it's an example of one of the many crazies out there getting their voice heard.
&gt;then you just pull out all notes that have a todo id of “x”. Isn't it basically SELECT * FROM Todos WHERE Id = 5 SELECT * FROM NOTES Where TodoId = 5; vs SELECT * FROM Todos WHERE Id = 5 JOIN NOTES ON Notes.TodoId = Todos.Id; ? 
I'm not familiar with the culture. I was basing it on the given statement: &gt; However, GREEN HAT is offensive in Chinese culture.
https://www.google.com/search?q=%22Bing%22+as+a+verb
If the point of a snowflake is that each one is unique (they're really not, but whatever), then applying it to a whole 1/8th of the population seems strange. Surely there's a more fit description.
It's only offensive if you're the one wearing it. Seeing someone else wearing it is more funny/embarrassing for that person.
You don’t even need the first select, only the second. The todo table would contain high level information about that todo list, like a name and how many items it has. Then when you click “edit” or whatever it redirects you to a new view passing in the id of the todo item you want to edit. The controller would then go to the database and say “give me all the note records where todo equals id” and display them. 
Well that was fast: http://greenhatted.com
Probably designed by the Japanese to annoy the Chinese.
hah, I had already googled and gotten the basics identified. Thanks!
Interesting on the SSRS suggestion - how flexible is that when it comes to exporting to a file?
The `ExecuteD` string interpolation test matches concatenation performance because it compiles to concatenation: https://sharplab.io/#gist:7f3f6689d02a03f8c6e016de9af56ddc
Excellent. Now save that as a barebones for future projects. 
&gt; There is a welcome background image shows a guy wearing a GREEN HAT riding a bike. Sheesh, Visual Studio is not saying you or any user are this guy with the green hat. Also, the Chinese army uses green hat. 
You said you are using SSDT. Do you not have a SSDT project in your solution? It would get checked into source control and it produces a DACPAC that can be deployed automatically using the DAC Framework (there's a NuGet package for it). SSDT projects are very nifty and useful, especially if you work for a company that only allows DB admins to deploy databases (you can just hand them the DACPAC). A few of our projects are EF database-first. I wrote some code that automatically deploys the DACPAC to a target database when the EF context is first used, similar to how EF code-first migrations are deployed.
A question that comes to mind is: What is the expected contention and read/write ratio? There are a lot of strategies and various existing concurrent collections that you could use to build this, but you have to know some details about how the collection will be accessed before you can design its implementation, I think. 
If you wanna see some complaints put a red hat on him.
I appreciate the suggestions. Thanks!
Post has been removed. When you're at a PC please take the time to properly format your question: &amp;#x200B; **4.Request-for-help posts should be made with effort** Make sure any code is properly formatted, explain what you have tried, and where applicable try to create a [Minimal, Complete, and Verifiable Example](http://stackoverflow.com/help/mcve). Be clear and courteous. If a question that could have been easily Googled is asked without indicating what and why those typical results didn't work, it will be removed. Help posts that have had little effort put into them will be removed at the discretion of the moderators.
Sounds like you called him a cuck. 
I can't believe so many people in both the MS thread and this one thinks this is an unreasonable change. Holy shit, what a bunch of unprofessional babies.
The Chinese government is not the same as the Chinese citizens. Don't lump them together and call them both bad.
Right? This is the most inconsequential thing to get angry about, whether it's keeping the hat or reverting it. And yes, I know I'm a hypocrite by continuing to talk about it.
Yeah, I know it annoys lefties. Frankly I don't think that's insulting but insults work if the opposing side is insulted :)
Makes sense
Once you start doing them as a design-driven activity you'll find that they improve productivity massively, therefore work achieved and higher quality = happier customer
To start, I would put a wrapper around a `SortedList&lt;TKey,TValue&gt;`. Each operation would be protected by an internal `ReaderWriterLockSlim`. If after testing this doesn't work for you, you can try other implementations by changing the implementation but not altering the public API. *** &gt; Should lock everything by default, and have a public or internal Lock()/Unlock()? Locks should almost always be internal. Figure out how to do it right once, then bake it into your class so you can't screw it up later when using the class. (technique: encapsulation, example: `ConcurrentDictionary&lt;TKey, TValue&gt;`) &gt; Should have async versions of Add, Remove, etc.? Probably not. The cost of using async methods will most likely dwarf the cost of the actual operation. You do want `AddRange` so you can add multiple items under the same lock acquisition. &gt; In most cases, I'm dealing with an extremely high number of records, nearly a gigabyte's worth of data. That sounds a bit high for a single data structure. Have you considered using a local database instead? 