development != scripting Unity Engine's graphics is still written primarily in C++.
&gt; For graphic intensive applications, coding against the bare metal (e.g. C/C++/ASM) is always going to be the most performant. The extra performance doesn't come free in C++. It requires effort. By default C# will perform better at string manipulation because C++ will do more copying than C# does unless you make a big effort to avoid it. &gt; There is no JIT or intermediate steps your hardware is going to have to perform to get the instructions it needs to do. This is done *once*. C++'s primary advantage is being able to take more time doing optimizations than C# can in the JIT phase. I would like to note that Space Engineers is written in C#, and despite doing CPU-heavy stuff performs quite well. Most of the time you have to ask if the extra effort is required by what you want to achieve, and even for graphical tasks most of the time I would claim the answer is "no".
How come Unity only supports .NET 2.0? Mono has been supporting .NET 4.6 for a while now. I'd rather program in C++ (which is my personal pref anyway) than in old .NET without killer features like async and TPL, eww.
I don't understand dichotomy between XP-way and "mockist" way. To me, they are both necessary, as it is necessary to both test input/output behavior and class's interactions. The choice between the two only happens if the you are mocking object that can be part of the unit test. Mocks are necessary if mocked object cannot really be part of the unit test, most probably because it has dependency on something that cannot be isolated. Which is exactly your case. But you can still make an example that doesn't require mocking. And it would result in much simpler and understandable introduction.
Unity itself supports .net 2.0, but you can really do whatever you want. I have easily added and used .net 4.5 in unity.
So what gameplay feature are you thinking of that is CPU intensive? Most games regardless of the complexity don't tax the CPU at all. The only recently released game that does a lot CPU side for gameplay reasons is Cities: Skylines but it is written in C# ...
https://www.youtube.com/watch?v=4FFG1NqKzCg
It is actually .NET 3.5. In any case, it boils down to Unity folks not wanting to pay Xamarin for new licenses. The ones they have are from when Mono was being developed at SuSE.
Why not something like kernel.Load(AppDomain.CurrentDomain.GetAssemblies()); or kernel.Load("*.dll"); in NinjectWebCommon and skip creating the unecessary projects?
I'm reading this too ;-)
My model type is IEnumerable. This is also where I ended up. Haven't gotten too far Into it yet but it's on the right track. I was approaching it all wrong yesterday. I'm an old school php guy, not very familiar with MVC or Razor.
Well, I would be quite interested at seeing a Serilog sink that sends logs to your app so I could try it out without having to change any plumbing.
lol.
You can provide some control over what T is in a generic, but that's generally used to ensure certain Interfaces or that there is a default constructor. For example: public class ProcessorFactory&lt;T&gt; where T: IProcessor, new() { public T CreateProcessor() { return new T(); } public void Process(T processor) { processor.Process(); } } In this case, you're ensuring the class can only be created with a generic that implements IProcessor and also that has a default constructor. This allows compiler level checks. Without the where check, you could create the class for any type and the class may not even have an empty constructor, which would break all the things. [Here](https://msdn.microsoft.com/en-us/library/bb384067.aspx) is the MSDN article on the keyword.
Definitely, I think your solution is good for non-closely occurring resource blocking. I've just seen nonacademic solutions for this sort of thing turn into that horrible "It's 4am, where's my data?" call.
It is only a bad practice because in c# there is no way to restrict the generic type to numbers.
 public partial class exampleform : Form { **private Player playerStats; ** public exampleform(**Player playerstatsfromanotherform**) { **this.playerStats = playerstatsfromanotherform;** } private void exampleform_Load(object sender, EventArgs e) { } } so if this is what it would look like for #2. Note that playerStats **is not a global variable**, it's called a private field and it only exists as long as the parent object (the form it is part of) exists. Edit: formatting
Damn this has helped me so much! Thank you so much for this, man. It really helped!
If he wanted to only use numbers, he would be throwing an exception when it is not a number.
Thank you for suggesting MS Sql Express, haven't heard about that. I thought MS offers only paid solutions at DB field. I will have a look there as thus rowversion feature seems promising 
A field with currently editing user should be in db, do I understand that correctly? And then be nulled after saving/canceling edit activities, correct? That sounds good, exactly what I was looking for
I worked it out in a slightly different way because I had to calculate sum values for the entire group. The weirdness for me was that the header for each group contains all of the sums. It had to appear before the individual items were listed. As my first venture into using Linq, it's a bit confusing but I like the flexibility it provides. Going forward I think I will rely on it a lot more but I am picking up the pieces on this project so I tried to work with what the last dev had started just to keep the timeline on track.
It wasn't security. And yes, it got patched months ago.
really, I've never found it to be that slow. Not saying its fast but when I kick off websites or whatever its reasonable. Hanselman probably has something on his account that is a preferred customer deal and could make things faster. If I ever spend $10k+ I will let you know.
Rather than using a lambda _expression_, make it a multiline lambda _statement_: var SqlData = Mydb.SomeTable .Where(x =&gt; some_condition....) .Select(x =&gt; { var calcVal1 = SomeCalcFunction(x.col1, x.col2, x.col3); var calcVal2 = AnotherCalcFunction(calcVal1, x.col1, x.col2, x.col3); return new { Col1 = x.col1, Col2 = x.col2, Col3 = x.col3, CalcVal1 = calcVal1, CalcVal2 = calcVal2 }; }) .ToList();
Correct. However as the other redditor mentioned, this is not always the best solution. The "save" stored procedure would save the values and set that field(s) to null. The user, or your code, would have to explicitly set that value, and check it before the edit starts. Also, you'd best have a Server Job run at night to reset all the values to null. This is in case the user leaves the record in lock mode all day. That's the reason for the field(s), so the user who is attempting to edit can know who and when. "James started editing this record on July 1st, 2015 at 12:45pm" That way the new user can yell at the other person ("hey, save the record or close your app") So, if you have this field you need to know when to clear it.
&gt; Method that starts with `get` with void return type I don't love this either, it kinda goes against general convention. That said, this is a code-behind file, and this method handles the "getting" of appointments (of a specific type) and then applying dates to the list of display boxes (calTitleCol, calContCol). It makes sense, but defies convention. &gt;Try to find a way to reasonably split those out. A good point, I'll see what I can do here. It's a little tricky because of the timing of certain operations, but it may help to wrap certain things up in their own methods. &gt;What happens when I call `getInitialCalendar` twice? Nothing obvious. Pretty much the same principle as refreshing a single frame in a website. That's one thing I did consider, especially since during debugging I have a bad habit of using edit/continue and jumping back several statements. &gt;What's basetem? It's declared before any of these methods are called. I use a template for an employee, and inheritance to differentiate between employees, managers, shift organisers, etc. Looking at the entire class, it's reasonably obvious, but I've omitted certain statements and/or methods for data protection. &gt;It might be worthwhile to actually introduce an Appointment type... Interesting thought. How efficient is it? My application is already quite heavy, but I think the idea of defining a type either in this class or in basetem, allowing access between different types of employees. Thing is, there are certain pages that are only available to certain types of employee, and bringing Appointments (part of Exchange Web Services) up a few levels increases the risk of repeating myself. &gt;What happens if any of those methods are called twice? Hm. I think the real danger lies with `calcWeekDisp`. If this were somehow called *outside* of `getInitialCalendar`, it would probably just add another 7 days to the list, without displaying anything. Not an obvious fault, but one that would probably fuck with my data a little bit. The other methods require specific overloads, so I'm less concercened about them... although not entirely placated. &gt;be more declarative, as in, stating what something is instead of how to construct it Could you give me an example of this? I'm trying to picture it, but I'm having a little difficulty in doing so. &gt;Gist I can't believe I didn't know about this! This is all brilliant feedback, I'll have a good think about this over the weekend. Thanks!
Likely just a syntax error. Can you copy/paste the _actual_ code you have? If I had to guess, you're missing the wrapping curly braces around the multiline statement. That is, perhaps you have: .Select(x =&gt; var calcVal1 = SomeCalcFunction(x.col1, x.col2, x.col3); var calcVal2 = AnotherCalcFunction(calcVal1, x.col1, x.col2, x.col3); ... ... Instead of : .Select(x =&gt; { var calcVal1 = SomeCalcFunction(x.col1, x.col2, x.col3); var calcVal2 = AnotherCalcFunction(calcVal1, x.col1, x.col2, x.col3); ... ... EDIT: Regarding your comment on the .NET version, you should be fine. These features have been in there since (IIRC) C# 3.0.
Not just his Azure interface speed, but also the response time of his nuget package manager. I find that it's slow even on brand new projects.
I showed my tutors the code and they recommended me doing another class and in it i should workout grosspay, incometax and uniondues. problem is that i cant get the value worked by gross pay to be used for my incometax
I don't have access to VS to test this with Linq-to-[SQL/Entities], but can you use the `let`syntax in your query? using (MyDataContext Mydb = new MyDataContext()) { var SqlData = (from x in Mydb.SomeTable where some_condition let CalcVal1 = SomeCalcFunction(x.col1, x,col2, x.col3) let CalcVal2 = AnotherCalcFunction(CalcVal1,x.col1, x,col2, x.col3) select new { x.col1, x.col2, x.col3, CalcVal1 = CalcVal1, CalcVal2 = CalcVal1, }).ToList(); e.Result = SqlData; } Equivilent works fine in standard LINQ (see [pseudo equivalent](http://ideone.com/TBzr01))
&gt; Interesting thought. How efficient is it? It's such a small overhead that if you're writing code and getting it reviewed on reddit, costs for instantiating meaningful abstractions may never ever matter to you. If you think it does, then I encourage you to be scientific about it and test that theory. Benchmarking is pretty hard to get 100% perfectly right, but it can still be informative. Take a look at the [System.Diagnostics.Stopwatch](https://msdn.microsoft.com/en-us/library/system.diagnostics.stopwatch.aspx) for a useful tool. There's also that quote, "premature optimization is the root of all evil". If performance is a problem you should diagnose that and fix it. If you have Visual Studio there are many great diagnostic tools in there and learning them will make you a valuable asset on any team you find yourself on (seriously, lots of .net devs never bother to learn those, so you'll appear wizard-like among your peers). &gt; example of being declarative vs building things up I was really on the fence about leaving that as a comment because it can feel really subjective. Specifically what made me think to say it at all was it seemed like I was reading a lot of lines that were plumbing for more interesting lines. Things like... int index = dayList.IndexOf(day); string dayStr = day.ToString(); dayStr = dayStr.Substring(0, 3); calTitleCol[index].Text = dayStr; To me the interesting bit is `calTitleCol[dayList.IndexOf(day)].Text = day.ToString().SubString(0,3)`, now, you could turn that all into one line but some will find that super hard to read (which is subjective, in the single line version there's many less variables to keep tabs on so there's an argument to say it's simpler). There's the fact that much of the foreach this snippet is in is fiddling with `calTitleCol` and `calContCol`. Is it possible to just define the collections (`calTitleCol` and `calContCol`) in terms of `dayList`? Something like... calTitleCol = dayList. Select(day =&gt; new Foo(){ Text = day.ToString().SubString(0,3), BackColor = day == DayOfWeek.Saturday || day == DayOfWeek.Sunday ? System.Drawing.Color.Firebrick : System.Drawing.Color.Eggplant } ).ToArray(); As an aside, I have a sneaking suspicion that dayList.IndexOf(day) just happens to coincide with the appropriate calTitleCol index as the code is currently written. That smells like a potential future bug. Also, if you need the index, why bother using foreach over dayList at all? I like doing code reviews and talking about code, feel free to PM me if you want a second opinion on some code in the future.
Your origin repository has been updated since your branch was created. Before you can push, you need to fetch then pull (merge) those changes. Hopefully the changes won't conflict with your changes. If all goes well, you will then be able to push.
Commit all your changes (or stash them but i don't think team explorer can do that) before pulling. How can that happen in the first place i don't. Maybe you pushed code from another machine?
Ok so click the [image link here](http://i.imgur.com/d8EWNyV.png) to understand how to instantiate one class in another. Also shows how to call another function or method from another class.
The short answer would be, click "Fetch" then when that was done, click "Pull". I'm curious what you are using for your origin repository. Did you clone an existing repository or is origin pointing to your own respository at visualstudio.com or github?
its not letting me commit changed, i never pull anything. i push code from multiple different pc's but i dont think im supposed to do it the way im doing it. I put the visual studio solution on a flash drive and work on it mostly at home, and push occasionally from a different visual studio/git account. i cant push the whole repo because some projects in the VS solution have company sensitive info
its pointing to my own git repo. i havent commited for a long time, would pulling overwrite all the changes ive made since then?
Fetch will allow you to see what is out there that is different from your version. Pull does a merge of those changes and yours. It wouldn't overwrite your changes, BUT: 1) changes would merge into your code where they were made in different lines, so you need to know what the differences are. 2) if you have changes in the same line of code you will have to manually merge the lines and that can be a pain if you haven't done that before.
Yeah, definitely have incorrect syntax (in both versions of your code). Try: .Select(x =&gt; { var avg = x.Average(y =&gt; y.Quantity); return new { pid =&gt; x.Key.pid, avg =&gt; avg, av2 = 2 * avg }; }) .ToList(); Something to note is that anonymous types (that is, the `new { }` syntax) requires each property to have a name. Having just `new { x.Key.pid }` without a name is not valid. Also, when in doubt, you can always make a simple class in favour of using the anonymous type. This could be a good example where you have a class that stores `pid` and `avg` and has a property `av2` that simply returns `2 * avg`. If you did, then your `Select` clause might look like this (assuming your class was named `ProductAverage`): .Select(x =&gt; new ProductAverage(x.Key.pid, x.Average(y =&gt; y.Quantity))
Console.Read() is one character at a time. Is there a reason you can't reuse Console.ReadLine()? names[i] = Console.ReadLine();
You're defining names variable as an array of strings. Then trying to use Console.Read() which returns a int. So either; names[i] = Console.ReadLine(); OR names[i] = Console.Read().ToString(); Edit: as /u/valheita pointed out, Console.Read() doesn't work like this. So removed my suggestion, as it was incorrect.
I'm trying to make all the inputs come right beside each other
 int numberOfNames = Console.Read(); This isn't going to behave as you would expect. The int value will be the ASCII value of the first character. If the user types 5, you'll get numberOfNames = 53
Normally, you should not need this. You would just drag and drop the log into my app - if the syntax is not automatically recognized, you can manually edit it. Having said that, you can get my app from here - https://github.com/jtorjo/logwizard If there's anything you don't understand, please let me know. Also, if there's an issue with your log file, just post it on dropbox and send me a PM with the link and I'll take a look ASAP. Thanks! Best, John
There are a ton of places where the "senior" devs have 15 years experience, but it's the first year 15 times repeated.
oh your are right, i'm sorry. I have never used Console.Read(), was just a quick look at documentation. Sorry about that. I've edited my point to reflect this, thank you for pointing it out.
"we use lots and lots of open source, and i can easily bring in more open source" Am I the only one who found that hilarious? Both the phrasing, and just the idea that microsoft is now all about open source software.
You can try loading the assemblies into the app domain explicitly before calling Load. I've noticed some jankiness if I let Ninject handle loading the assemblies itself.
I think you're looking for something like Java's `StreamTokenizer`, e.g. so you can type "5 3 2 bob [enter]", then read 5, 3, 2, and "bob". That doesn't come out of the box in C#. You can hack simple alternatives through setting your console cursor position after taking input, or implementing your own version of console readline, which delegates to Console.In.ReadLine which is implemented as follows: public virtual String ReadLine() { StringBuilder sb = new StringBuilder(); while (true) { int ch = Read(); if (ch == -1) break; if (ch == '\r' || ch == '\n') { if (ch == '\r' &amp;&amp; Peek() == '\n') Read(); return sb.ToString(); } sb.Append((char)ch); } if (sb.Length &gt; 0) return sb.ToString(); return null; }
What are you actually attempting to accomplish? What determines a name? Is it space delimited? Does it include first and last? etc. If it is simply space delimited, could you not just do var names = Console.ReadLine().Split(' '); var numNames = names.Length; ? 
I agree that there are many issues. This is something I did at one job where there was medical data, patient medicating. The value of the person and date allows the user to know who and when a record was locked. I had a job that ran overnight to clear all records, but it could be set to run at regular intervals looking for any record over X time. However, all that said it is likely that there are many better ways to handle this issue. There are many ways this can go wrong, not just long locked records. So yea, you are correct to warn the developer about the pitfalls. My big statement is that developers need to get used to gathering better specifications. Knowing what the users want, and in what conditions BEFORE you write the code is going to allow them better create the application.
I purchased MS Access on the day it was released (late 1992) as it was the first Windows db that was affordable. (&lt; $90) Prior to that there was Superbase which was over $500. I quickly moved to SQL Server and Oracle because of the limits of Access. It could be find for a few users... but SO many issues. When SQL Server Desktop Edition came out I have attempted to get people to use that, or some of the open source dbs. But MS Access is dead to me... has been for many, many years
I would get out of there. Try to get in an environment where you're exposed to new ideas and constantly being challenged. Had someone tell me once "If you're the smartest guy in the room, find a new room"
Honestly the only benefit you will get from this is the ability to call legacy libraries. For the math-heavy stuff you are unlikely to see such a performance gain over writing it managed and using nmath or similar to make it worth the trouble. For c-style function calls you can use p/invoke to create a wrapper method for the c function. You decorate the method parameters with attributes that do things like state the layout, the type of unmanaged pointer or type, etc. Check out pinvoke.net (the web site) for examples that call native win32 methods. 
I know it's a limitation of N-tier architecture, but is anyone else not a fan of having Ninject dependencies in all your projects? Ideally, I'd like Ninject to be referenced once in my application. Is that even a concern? Maybe a buffer project, 'MyApp.Ninject', that is referenced by the UI project, that sets up all the Ninject Kernal dependencies on startup. Does anyone have some advice on that?
using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows.Forms; using System.IO; // for File I/O using System.Collections; // for ArrayList using System.Runtime.Serialization.Formatters.Binary; namespace cw1 { public partial class Form1 : Form { [Serializable] // 'Serializable' tag allows for simple file I/O later private struct OurDataList //Our array list is called OurDataList { // The data types making up the struct for this form public string Name,PostCode; public int age; public char gender,Nationality; public int weight; // This is the constructor for x public OurDataList(int x) //(1 and 2) Here x is of type OurDataList and later on is an int { Name = ""; age = 0; gender = ' '; weight = 0; PostCode = " "; Nationality = ' '; } }; public int y; string filePathName = @"F:\software dev\TestDataFile.dat"; //This creates a dat file in the file location that you specify //This doesn't affect the area that you save the project at ArrayList ClubData = new ArrayList();// (3) int currentMemberShown = 0; public Form1() { InitializeComponent(); OurDataList x = new OurDataList(0); ClubData.Add(x); //Club member of x is added into x varible (4) //Add line above but change to ClubData.Add(y); instead //Also do the same for z LoadBtn_Click(null, null); ShowCurrentMember(); } private void ShowCurrentMember() //This section shows the inputs that have been entered { OurDataList x = new OurDataList(0); x = (OurDataList)ClubData[currentMemberShown]; NameTextBox.Text = x.Name; NatTextBox.Text = Convert.ToString( x.Nationality ); //Convert to string first as only strings can be displayed in text boxes if (x.gender == 'm') MaleRadioButton.Checked = true; else FemaleRadioButton.Checked = true; WeightTextBox.Text = Convert.ToString(x.weight); //Converts weight to string to display in textbox AgeNumericUpDown.Text = Convert.ToString(x.age); // Code for varible y OurDataList y = new OurDataList(0); y = (OurDataList)ClubData[currentMemberShown]; NameTextBox.Text = y.Name; NatTextBox.Text = Convert.ToString(y.Nationality); if (y.gender == 'm') MaleRadioButton.Checked = true; else FemaleRadioButton.Checked = true; WeightTextBox.Text = Convert.ToString(y.weight); AgeNumericUpDown.Text = Convert.ToString(y.age); // more stuff here } private void textBox1_TextChanged(object sender, EventArgs e) //Code for Name text box { OurDataList x = new OurDataList(0); //Name of the data list x = (OurDataList)ClubData[currentMemberShown]; x.Name = NameTextBox.Text; ClubData[currentMemberShown] = x; OurDataList y = new OurDataList(0); y = (OurDataList)ClubData[currentMemberShown]; y.Name = NameTextBox.Text; ClubData [currentMemberShown] =y; //Do the same for z } private void label6_Click(object sender, EventArgs e) { } //SAVING private void button1_Click(object sender, EventArgs e) { // CREATE a file for saving (technically a 'FileStream') FileStream fs = new FileStream(filePathName, FileMode.Create); // Construct a BinaryFormatter and use it to serialise the data to the stream. // this "serialises" the ArrayList into binary (i.e. not to human readable text file) BinaryFormatter binFormatter = new BinaryFormatter(); // Write the file to disk binFormatter.Serialize(fs, ClubData); // Close the file fs.Close(); } private void AgeNumericUpDown_ValueChanged(object sender, EventArgs e) { OurDataList x = new OurDataList(0); x = (OurDataList)ClubData[currentMemberShown]; x.age = Convert.ToInt32(AgeNumericUpDown.Value); ClubData[currentMemberShown] = x; } private void MaleRadioButton_CheckedChanged(object sender, EventArgs e) { } private void FemaleRadioButton_CheckedChanged(object sender, EventArgs e) { } private void WeightTextBox_TextChanged(object sender, EventArgs e) { OurDataList x = new OurDataList(0); //Code for Weight x = (OurDataList)ClubData[currentMemberShown]; x.weight = Convert.ToInt32(WeightTextBox.Text); ClubData[currentMemberShown] = x; } private void NatTextBox_TextChanged(object sender, EventArgs e) { OurDataList x = new OurDataList(0);//Code for Nationality x = (OurDataList)ClubData[currentMemberShown]; x.Nationality = Convert.ToChar(NatTextBox.Text); ClubData[currentMemberShown] = x; //Adds current member into Club Data array } private void ClearBtn_Click(object sender, EventArgs e) { } private void LoadBtn_Click(object sender, EventArgs e) { // OPEN file for loading FileStream fs = new FileStream(filePathName, FileMode.Open); // Construct a BinaryFormatter for de-serialisation of data from the stream. BinaryFormatter binFormatter = new BinaryFormatter(); // Read the file from disk ClubData = (ArrayList)binFormatter.Deserialize(fs); // Close the file fs.Close(); currentMemberShown = 0; ShowCurrentMember(); } private void textBox4_TextChanged(object sender, EventArgs e) { } } } 
`ArrayList` is a class coming from .NET 1.1 and should not be used anymore. You should always use the generic version: `List&lt;T&gt;`
Well we are starting from the basics so we could learn what you suggested later on 
`ArrayList` is not basics. `List&lt;T&gt;` is basics. `ArrayList` is simply an obsolete type that should not be used anymore, when you're using .NET 2.0 or later. Using `ArrayList` makes a lot of things more difficult.
By List&lt;T&gt; You don't mean linked lists do you ?
The program is a supposed to pair up names. In the actual program I'm going to have two different string arrays. For example: Bob Dylan Harry Harry Dylan Bob Bob is partners with Harry and Dylan is partnered with himself (which would return the output "bad")
No, I mean the .NET type `List&lt;T&gt;`. Whether it is internally implemented using a linked list or not is an implementation detail (it is not).
namespace cw1 { public partial class Form1 : Form { [Serializable] // 'Serializable' tag allows for simple file I/O later private struct OurDataList { // The data types making up the struct for this form public string Name,PostCode; public int age; public char gender,Nationality; public int weight; // This is the constructor for x public OurDataList(int x) //(1 and 2) Here x is of type OurDataList and later on is an int //OurDataList can access these return types because these are public //And so they don't be need to be in the code more than once { Name = ""; age = 0; gender = ' '; weight = 0; PostCode = " "; Nationality = ' '; } }; public int y; //Varible Y for storing second member public int z; //Varible Z for storing third member string filePathName = @"F:\software dev\TestDataFile.dat"; //This creates a dat file in the file location that you specify //This doesn't affect the area that you save the project at ArrayList ClubData = new ArrayList();// (3) // Our arraylist is called ClubData int currentMemberShown = 0; public Form1() { InitializeComponent(); OurDataList x = new OurDataList(0); ClubData.Add(x); //Club member of x is added into x varible (4) //Add line above but change to ClubData.Add(y); instead //Also do the same for z OurDataList y= new OurDataList(0); ClubData.Add(y); OurDataList z = new OurDataList(0); ClubData.Add(z); LoadBtn_Click(null, null); ShowCurrentMember(); } private void ShowCurrentMember() //This section shows the inputs that have been entered { //This section is for varible x OurDataList x = new OurDataList(0); x = (OurDataList)ClubData[currentMemberShown]; //Whats entered is added into ClubData NameTextBox.Text = x.Name; NatTextBox.Text = Convert.ToString( x.Nationality ); //Convert to string first as only strings can be displayed in text boxes if (x.gender == 'm') MaleRadioButton.Checked = true; else FemaleRadioButton.Checked = true; WeightTextBox.Text = Convert.ToString(x.weight); //Converts weight to string to display in textbox AgeNumericUpDown.Text = Convert.ToString(x.age); // Code for varible y OurDataList y = new OurDataList(0); y = (OurDataList)ClubData[currentMemberShown];//Whatd entered is stored in y and added to ClubData NameTextBox.Text = y.Name; NatTextBox.Text = Convert.ToString(y.Nationality); if (y.gender == 'm') MaleRadioButton.Checked = true; else FemaleRadioButton.Checked = true; WeightTextBox.Text = Convert.ToString(y.weight); AgeNumericUpDown.Text = Convert.ToString(y.age); // more stuff here } private void textBox1_TextChanged(object sender, EventArgs e) //Code for Name text box { OurDataList x = new OurDataList(0); //Name of the data list x = (OurDataList)ClubData[currentMemberShown]; x.Name = NameTextBox.Text; ClubData[currentMemberShown] = x; OurDataList y = new OurDataList(0); y = (OurDataList)ClubData[currentMemberShown]; y.Name = NameTextBox.Text; ClubData [currentMemberShown] =y; //Do the same for z } private void label6_Click(object sender, EventArgs e) { } //SAVING private void button1_Click(object sender, EventArgs e) { // CREATE a file for saving (technically a 'FileStream') FileStream fs = new FileStream(filePathName, FileMode.Create); // Construct a BinaryFormatter and use it to serialise the data to the stream. // this "serialises" the ArrayList into binary (i.e. not to human readable text file) BinaryFormatter binFormatter = new BinaryFormatter(); // Write the file to disk binFormatter.Serialize(fs, ClubData); // Close the file fs.Close(); } private void AgeNumericUpDown_ValueChanged(object sender, EventArgs e) { OurDataList x = new OurDataList(0); x = (OurDataList)ClubData[currentMemberShown]; x.age = Convert.ToInt32(AgeNumericUpDown.Value); ClubData[currentMemberShown] = x; OurDataList y =new OurDataList(0); y= (OurDataList) ClubData[currentMemberShown]; y.age = Convert.ToInt32(AgeNumericUpDown.Value); ClubData[currentMemberShown] = y; } private void MaleRadioButton_CheckedChanged(object sender, EventArgs e) { } private void FemaleRadioButton_CheckedChanged(object sender, EventArgs e) { } private void WeightTextBox_TextChanged(object sender, EventArgs e) { OurDataList x = new OurDataList(0); //Code for Weight x = (OurDataList)ClubData[currentMemberShown]; x.weight = Convert.ToInt32(WeightTextBox.Text); ClubData[currentMemberShown] = x; OurDataList y = new OurDataList(0); //Code for Weight y = (OurDataList)ClubData[currentMemberShown]; y.weight = Convert.ToInt32(WeightTextBox.Text); ClubData[currentMemberShown] = y; } private void NatTextBox_TextChanged(object sender, EventArgs e) { OurDataList x = new OurDataList(0);//Code for Nationality x = (OurDataList)ClubData[currentMemberShown]; x.Nationality = Convert.ToChar(NatTextBox.Text); ClubData[currentMemberShown] = x; //Adds current member into Club Data array OurDataList y = new OurDataList(0);//Code for Nationality y = (OurDataList)ClubData[currentMemberShown]; y.Nationality = Convert.ToChar(NatTextBox.Text); ClubData[currentMemberShown] = y; //Adds current member into Club Data array } private void ClearBtn_Click(object sender, EventArgs e) { } private void LoadBtn_Click(object sender, EventArgs e) { // OPEN file for loading FileStream fs = new FileStream(filePathName, FileMode.Open); // Construct a BinaryFormatter for de-serialisation of data from the stream. BinaryFormatter binFormatter = new BinaryFormatter(); // Read the file from disk ClubData = (ArrayList)binFormatter.Deserialize(fs); // Close the file fs.Close(); currentMemberShown = 0; ShowCurrentMember(); } private void textBox4_TextChanged(object sender, EventArgs e) { } } } 
Meaning that in this case I don't need to declare Variables Y and Z to store new member data right ? And i need to take the lines for those out as well too 
Yes, you can get rid of those, they aren't doing anything at all. ClubData is storing everything.
 OurDataList y = new OurDataList(0);//Code for Nationality y = (OurDataList)ClubData[currentMemberShown]; y.Nationality = Convert.ToChar(NatTextBox.Text); ClubData[currentMemberShown] = y; //Adds current member into Club Data array Including these lines then ?
All of that can be replaced with ClubData[currentMemberShown].Nationality = Convert.ToChar(NatTextBox.Text); As long as OurDataList is declared as a class instead of a struct (up at the top).
I don't think i can change that to a class though because this program has to use both structs and arraylists in it Its one of the requirements that i can't circumvent 
I can understand that.. I've done Oracle too and Sql server is much better. But wait until you try open source dbs like Postgres, where you can actually see how the set operations are made because you have access to the code. Sql server is a black box of guesswork.
From another point of view, one could make the assertion that the code should only be as complicated or "advanced" as necessary to meet the functional and nonfunctional requirements. Any additional complexity for the sake of challenge can create situations where maintainability is compromised. I always write code with junior developers in mind as I want them to be able to pick it up and make changes. Don't mistake challenge for over engineering. If anything, accept the challenge to take the most complicated code and reengineer it so your worst developer could easily maintain it. That being said, I recommend using your time and talents to work on infrastructure. Do you have a continuous deployment pipeline? Can you recreate a build of your application by pushing a button? What does your test coverage look like? What does your DR scenarios look like? Are you virtualized? If so, can you help bake a new better OS? Lots to work on. Just need to get started. 
Your limited experience clearly proves that choosing a RDMS is a dichotomy between SQL Server and Oracle.
Maybe the goal is to teach them the value of generics later
I'd rather take some pay cut than work on something that I don't care about at all. Even if you pick a more daring business venture, you can't really go poor in software development
It's weird, I'm from the Philadelphia area in the US and here its the other way around. Startups offer huge salary's but usually go out of business shortly after if they don't succeed. I work for an insurance company that has a really niche market and do rather well. But like you said, the tech is on the older side. For my internal apps i have free roam to use what I want, but our web apps have to target IE8.
Well Islandwood took plenty of code of other projects like Cocotron, Klib, Ack, Paradox-deps. Astoria was basically a modified AOSP. Visual Studio Code uses Atom and Chromium. &gt;"Desperate times call for desperate measures".
Just grab a book and follow along by typing in all of the code by hand. I did this early in my career with Visual Basic over two weeks, got my first development gig from it. Just realize that like martial arts, programming is a journey, not a destination. I've been programing in C# for decades and am still learning new things. Follow Scott Hanselman's advice and learn a new programming language every year, it will enhance your C# code, even if you never actually write production code in that language. I'm currently learning both F# and PowerShell. Welcome to the ranks of professional software developers.
I've been trying to create a new web app for the last few hours. The blade that opens when you click "New" is empty and the title says "Loading...". It's a bit pathetic considering how long they've had these type of problems.
A majority of the people that use the site are bankers, and for some reason banks and most insurance companies are severely behind on the tech curve for "security" purposes. I even had a Director of IT explain to me how IE was a really good web browser. I nearly laughed him out of the room. In the past, IE was the only browser with built-in Active directory support. So it was easy to deploy policies to an entire domain and quickly. Now Firefox and chrome have support for domain policies so it doesn't make any sense. Older IT people are like old dogs, can't teach em new tricks. 
It's not a bad thing to understand even if modern C# programmers typically depend on generics far more frequently.
...I am embarrassed I didn't think of this. I was on administrative account but I don't think studio was running with admin rights, so that is likely why it didn't work. Ii thought that there must be something that prevents the program from shutting down the computer. Thank you for your help.
Which is also coming from .NET 1.1 and should not be used anymore.
I think you're looking for something like this: https://msdn.microsoft.com/en-us/library/system.io.filesystemwatcher.changed(v=vs.110).aspx
Thank you, that's kind of what I'm learning towards but it's also refreshing reading some of these other peoples opinions.
So from what I understand, FileSystemWatcher does something whenever a file is changed, so I can just have the text box load the file when it's changed?
I see this a lot but I hope you don't have the logic for reading the file directly in the button click? It seems a lot of people abuse the UI layer like this, reading the file etc should be in another layer with appropriate abstractions. MVC, MVVM, etc etc.
Personally, I haven't used FileSystemWatcher or attempted to solve this requirement but it appears that you specify a path to a file to an instance of FileSystemWatcher and it will fire events when the file changes. Listen for the events that you want and update the text box when the event is triggered. You could also do this without FileSystemWatcher by using a `while (true) { }` loop and with every pass of the loop, check if the file has changed and update the text box accordingly.
Meant to say Skeet does something similar in the first chapter of C# in depth as well.
Well, it's not completely an implementation detail since certain time complexities are guarenteed for List&lt;T&gt; which would not be possible with linked lists. 
 Console.ReadLine() // Assumes String String stringWord = ConsoleReadLine(); However you can cast the string as another type String stringToInt Console.ReadLine() // Assumes String stringToInteger = Int32.Tryparse(ConsoleReadLine(), out stringToInteger); Console.ReadKey() // Assumes Single Character int someNumber = Console.ReadKey(); Console.Read() Blocks execution waiting for input int result; do { Console.WriteLine("Displayed # is: {0}", result); } while ((result =Console.Read()) != 0); When result reaches 0, Console.Read() will return when the input is final.
That is a very good point, I forgot about that.
Hmm I don't think you understand how async/await works completely. It makes no sense how you are using it, putting "await" everywhere; you might as well leave it out. Why not just: public List&lt;Task&lt;string&gt;&gt; GetWebData(IEnumerable&lt;object&gt; objects) { var groupedobjects = objects.GroupIntoLotsOf(100); return groupedobjects.Select(objGroup =&gt; My.WebRequestAsync(GetUrl(objGroup))).ToList(); } Note the ToList; it's not wise to use lazy iterators here, as the tasks will then only get started when people iterate the result. Anyway, now the caller can use Task.WhenAny to wait for one of them, cycle through them and check if they are done or similar. Alternatively, if you want to return a task that only completes when all the sub tasks are done, public Task&lt;string[]&gt; GetWebDataAsync(IEnumerable&lt;object&gt; objects) { var groupedobjects = objects.GroupIntoLotsOf(100); return Task.WhenAll(groupedobjects.Select(objGroup =&gt; My.WebRequestAsync(GetUrl(objGroup)))); } 
Well, technically, you can't. In C#, methods must always be a member of a class, and must always be called on an instance of that class. The one exception to this, in C# 6, is static methods on static classes. You can import a static class's members into the current file's scope by `using` the fully-qualified static class name, just like you do with namespaces. For instance, `using System.Math;` will allow you to use the static methods of the Math class without having to qualify the method name (example: `Math.Abs()`). Warning: you should *only* create static classes when you need a set of purely-functional utility methods that produce no side effects (meaning they only operate on their arguments, and store no state of their own), or when you need to implement extension methods for a type. [Here is some documentation](https://msdn.microsoft.com/en-us/library/79b3xss3.aspx) on importing static classes. You also need to add a project reference to your console project, referring to the class library project. You should also *really* go read the MSDN documentation on C# and Visual Studio before asking questions. A book would be helpful too (look in the sidebar). These are very fundamental questions that are well-explained in the documentation, and in order to become a good developer, you absolutely need to develop the ability to research and evaluate information independently. You also need to be able to summarize what you have tried, and what isn't working (include specific error messages). This is for your benefit, but it's also a courtesy to the people you're asking for help, since you're demonstrating that you're not just asking people to do your work for you. 
Why are so many vids private? Videos 28-57. Thats more than half the playlist..
It's certainly not a *bad* way, for quick testing and experimenting. You'll want to look into proper automated testing methodologies, such as unit testing, which help structure your code in ways that make testing of individual components much simpler. You'll also want to check out the C# REPL, upcoming in VS 2015 Update 1, which provides a console-like interactive C# session, which is *immensely* useful for testing code snippets and exploratory programming. &gt; And in that case i was just thinking that in my Console project i would like to just call the functions directly or at least somewhat shorter that by their full name. That just isn't possible, by design. You can use `using` statements to import namespaces from your class library assembly, so that you don't have to fully-qualify *class* names, but instance methods, by definition, are bound to object instances, and cannot be used independently.
&gt; But your method (well, my suggestion for the replacement) is indeed async, even though we don't use await. You mean that in theory, the code is still working asynchronously without the async keyword in method signature. I know where I screwed up. I know that async should only be used with IO-bound work but in my code I was treating cpu bound work also as something that could be async'ed away. 
Well i was actually thinking about looking into unit testing, especially since i can properly use what i learn from that in my day job. So perhaps i will look into that for my next project. For this project i am trying to learn more about Visual Studio Online, Work Items and all that stuff.
If you can get the JSON or XML response and copy to clipboard, VS has a neat utility under paste special which lets you create classes from the JSON or XML in the clipboard.
Yep that was the issue. Thanks :)
Why did you bother to argue about this? OP said very early on he has a constraint that he must use ArrayList. Move on...
If you include the "class project" as a reference in your "console project" then you can call any public methods in the "class project". It really is as simple as that. Or am I not understanding your question?
That NuGet package manager looks better than the one that actually comes with VS2015... How do I install the update? So far I've been extremely disappointed with the VS2015 version of NuGet compared to the old version (and it's not just me, there's heaps of negative reviews of the new one in the Visual Studio gallery, compared to mostly positive reviews of the old one)
&gt; where you can actually see how the set operations are made because you have access to the code Have you actually tried to do this? I've found SQL Server's query execution plans to be *much* more useful than chunks of complex code :)
&gt; Is there any simple way to parse an xml/json string to get a particular expression tree and just reuse that whenever needed? I don't know about JSON, but for reading XML I've had great success using [Xpath](https://msdn.microsoft.com/en-us/library/d271ytdx\(v=vs.110\).aspx).
Yes that is kind of how to do it. But lets say my class project is called, Functions, and the Class in the project is called Functions, and the method is called myFunction, to call that i have to write. Function.Function.myFunction(); I would like to only write myFunction(); But i think nerdshark has already mentioned that it can't be done.
No this persons bank was using IE9 with no intentions of upgrading. 
That last paragraph will be true 99% of wherever you go. You will never have enough time to do it properly
Need more info. What is the exact error you get, where does it happen, what have you tried, etc.
This is all assuming valid user input of 1-12 for months (I've got some exception handling elsewhere for that). When I plug good numbers in for the month it still tells me the index is out of bounds. The picture I posted is using a single array because the multi dimension was overkill as I really only need the values of number of days in the month. 
Thanks a lot! Was looking for something like that!
I never said you couldn't. I explicitly excluded static methods on non-static classes, because static `using` statements don't work on them.
Just like to point out he is using the business license prices. If you are looking at just buying it for yourself here is the price break down: $ 129.00 /1st year $ 103.00 /2nd year $ 77.00 /3rd yr onwards They have a bundle for all their products for these prices : $ 249.00 /1st year $ 199.00 /2nd year $ 149.00 /3rd yr onwards IMO if you are a .net developer its more than worth the money for all their tools.
Right off the bat, they are declaring stuff that needs to be persisted in what appears to be a event handler. This is probably a XY problem, ~~hopefully OP updates.~~ Edit: Thought this was learn programming. It is not. OP post in /r/learnprogramming
Looks very nice and powerful but simple also. Thanks
There was mention of Pattern Matching (using the new switch), I think it was in the keynote of day 1 but im really not too sure when exactly.
Thanks for clarifying the prices! I didn't know I was wrong!! I should update my post now. In my post, I argued that if a developer earns more than $4 an hour, they should invest in ReSharper! Now, it drops to $2 an hour!!
No .NET Core support?
If you have an .edu account its free. 
I've really come to love SQLite over other DBs for personal projects. The *not needing a server* part is particularly awesome. I'll have to try this out on my next project. *Also excited to hear the new version of EF has SQLite support*
Yeah, they do. And good to know because this is getting frustrating thinking your code is wrong when it's just Visual Studio being some hot ass.
Interesting! Currently using MicroLite but this looks promising.
I completely agree. All of Jetbrain's IDEs and tools are worth the money. 
Interesting. I suppose this is good for smaller objects like user settings or something. 
Not just .edu: all you need is a school email and a student card. I'm from a Belgian college which can't use `.edu` so it's a regular `.be` and my email together with a scan of my student card got me everything Jetbrains for free.
You changed the text, but not the header.
My big issue with ReSharper is that I've been using it since my first day in .net because my company had it. My main issue is that I'm not sure how much ReSharper I use. I know I use it a while lot but I'm not sure how much of it I'm using.
I've tried ReSharper on two separate occasions and just couldn't get on with it. My biggest gripe was how much I found it really slowed down the Visual Studio UI, which affected my programming 'flow'. I found it bloated and overly intrusive - Visual Studio in it's default form has (I feel) the perfect blend of features without becoming overbearing. I feel that R# had intruded and over-customised every part of the Visual Studio I had come to love. I know people say 'you can turn off the various features', but I don't have time to go through each one finding out what it does (isn't R# supposed to save me time?) Lastly, after I disabled it, I found it hadn't restored some of my 'pre-R#' environment settings. Some other downsides worth considering it if you do use it - don't become reliant on it. Chances are, in a professional environment, your company won't be using it. 
It is awesome. Yes it is.
I am not using implicit declarations ReSharper! I just figured out how to change what it warns for, I like it a lot more now.
Hey, I haven't heard back. I'm hoping to get more information about the problems you are facing with MimeKit and MailKit from my other comment.
I'm not op, but I've run into several developers that don't know that the "var" keyword is implicit typing and not a dynamic type. They were used to seeing it in other languages in the context of a universal variable or pointer type thing so they avoided it. Some people just don't like it. Others don't use it if they can't tell the type right away, like function return values. I use it to save line space. I've never really had a problem with it.
True, every once in a while I work on a station without it and I find some auto complete things missing.
We frequently run in to this where I work, even with code that works perfectly. I've given up using the XAML designer altogether. I know that isn't a solution to your problem, I just wanted you to know it's probably not something you're doing wrong.
That doesn't seem to be the problem. It doesn't even give me the option of writing my name to the console. I added a Console.ReadKey(); following Hello + name for good measure and this works in the VS debugger, but I still have the same problem through the Command Prompt.
Love ReSharper. I hate developing without it. I did a presentation at our work to try and make it a company standard so every developer would get a license for it.
There are a number of people that prefer to see the explicit type of a variable in many cases. You can see a reddit post [here](https://www.reddit.com/r/dotnet/comments/3rhgnm/opinions_on_the_use_of_var_in_csharp_lazy_or/) where people give reasons for it. 
Give up on XAML and desktop applications in general. Write only web-based front ends and live a longer and happier life.
I'm guessing you're getting the following error; Index was outside the bounds of the array. take a look at your for loop and the sizes of numberOfQuestions and candidateAnswerKey and AnswerKey 
I **absolutely** love R# for various reasons (code cleanup, inspection, file structure, templates, hierarchy, ctrl-e-u is a time saver). Whenever I work on a computer without R# I find myself dearly missing 'alt-enter'. I, however, disagree with the author about the gap between R# and VS growing over time. Over the last few years, VS has integrated features that are part of R#. Refactoring, find usage, test explorer, code analysis (built-in), just to name a few. They are still behind in terms of functionality, but I think Microsoft is doing a good job closing that gap. My only (small) gripe with R# is its Unit Test Sessions window, its UI seems to become buggier with each release. That being said, I still use it (even though VS now has its own).
Makes me sad they moved to a yearly subscription model :( Edit: seriously... downvote isn't a disagree button.
Honestly i was in the same boat but since they added the license retention after 12 months of having a sub its not a big deal for me. I didn't want to drop the cash for them before so at least for me it works. 
This has been discussed to death. Jetbrains' initial proposal had some issues, but due to community response they put in a perpetual fallback license. Most customers (myself included) are very happy with the new license.
I hate ReSharper. It's slow, annoying, and if you have to work on any codebase written by people who don't know life without ReSharper, you'll find their code flat-out impossible to navigate (since they rely on ReShaper for this instead of good code architecture, the resulting codebase is scattered and horrible). *Edit: To my ReSharper fanboy downvoters -- if you can't write C# without ReSharper, that doesn't mean ReSharper is an indespensible tool. It just means you're bad at C#.*
All the pain isn't worth it until you get good at it, then all the features become valuable, even invaluable. Whenever I read a comment like "I couldn't get into it" for any tool, my first thought is "perhaps you didn't use it long enough." I say "I cant' get into it" for EMACS and I know I just haven't used it long enough to make it work for me.
Exactly my thoughts as well.
Agreed - https://www.visualstudio.com/en-us/products/visual-studio-community-vs.aspx
Unfortunately, yes.
Thanks for letting me know! I just did.
thanks for the help everyone, followup question, so if I upgrade to the 2015 version could I still use the book that /u/SevenOctillianAtoms recommended? Or should I buy the 2013 version instead? (the newest I found)
Wouldn't be too hard to support Core as it (from a quick glance) seems to be PCL compatible already.
No need to F12, just hovering your mouse over "var" shows the actual type name.
Not to mention how much faster it is to refactor code when your using var.
Check your project properties, the linker part, and try with different settings. It says that it can't find your dll.
if you want to hit a db once and use it to see if a record exists with a matching attribute from another recordset. list&lt;Orders&gt; listOrders = GetTodaysOrders(); for each (customer in listCustomer) { if (customer.id == listOrders(x =&gt; x.CustomerId).any()) { //print all order item ids and quantities } }
Starting with vs2015, we are attempting to move on!
Jetbrains has no way to know if you did that, though, and there's no reason for a developer to really care (from their point of view, they benefit from getting the personal license and Jetbrains is still getting paid).
You're right that on their own, none of the pieces of data you described uniquely identify a user. But *together*, and with a dash of statistics, you can say with a "good enough" amount of certainty that User A and User B are, in fact, the same user. Do they have the same profile info? Do they always (or at least almost always) come from the same IP or IP block? Do they have characters on the same servers? Do their in-game characters interact in ways that suggest the same player (sending each other gold or items for 'free', etc). You can use heuristics to come up with a probability of a match, and use that to drive your designations. It's not something that runs instantaneously. It probably runs continuously over time, analyzing behaviors, perhaps even making predictions to see if they're correct (ex: I'm 95% certain User A and B match, so I'll monitor their IP's. If I see a match again, I'll call it 96%). In the odd case where there's a mismatch, Customer Service can resolve any issues.
Yes, you are correct that there is no way they can detect it, but as a Software Developer myself, I can't recommend that someone should willingly violate a software license. But to each his own.
I bought that class just to get better at ReSharper. People just want to complain.
eh, I dunno, I've been using Resharper 7 for roughly 4 years now and only had to pay the 1 time fee for it.
Assigning events, clear button for example: btn.Click += (s,e)=&gt; txt.Text = String.Empty;
One of my university assignments involved a 400 character line of chained LINQ queries something like this: a.select(a =&gt; a.b).where(c =&gt; b == c).where(b =&gt; b.d == c).select(... etc. That would have involved at least 13 levels of nested foreach loops had I done it otherwise. Neither was particularly pretty but LINQ + lambdas was shorter and at least possible to understand by reading it.
"Exacerbated" is a better description. Personal offense has little to do with it, but you're right that I am not treating it as meaningless. And from your connotation, I think you expect me to be ashamed of that or something.
... Just be grateful you learned something from a better programmer. That way you become a better programmer. If you don't want to have your opinion scrutinised, don't make it public. 
lambdas allow your code to be a lot closer to your intention. For example: the perimeter of a triangle is the sum of the length of the sides. public double Perimeter() { return Sides.Sum(s=&gt; s.Length); } as opposed to public double Perimeter() { var length = 0; foreach (var side in Sides) { length += side.Length; } return length; } The closer your code reads to the english you would write as steps to automate the better. your brain is much (20x) smarter in english than code. 
&gt; Some other downsides worth considering it if you do use it - don't become reliant on it. Chances are, in a professional environment, your company won't be using it. Chances for that are slim. I worked as a consultant for some years, and every .NET shop also had ReSharper. When I started in my current job I even requested ReSharper (and NCrunch) in my contract, which is a easy sell. Compared to my salary and benefits ReSharper is a very small cost with a huge benefit for the company.
Why are you stuck in the past? Use VS 2015, it's free, and use MonoGame instead of XNA, XNA is dead, MonoGame is a crossplatform XNA
The first problem is that you need to learn how to paste code on reddit. From "formatting help": "Lines starting with four spaces are treated like code"
&gt; You could also do this without FileSystemWatcher by using a while (true) { } loop and with every pass of the loop, check if the file has changed and update the text box accordingly. And then the GUI and entire program will hang in the meantime :p.
Ah, I guess I was meaning from a *student* perspective. Sorry for the miscommunication. I guess I never really thought of it from a Faculty/Staff POV.
If you're a beginner the book won't matter too much. C# is C# - the fundamentals (as well as core programming fundamentals) are still valid today. But...as other say, you are much better off with up-to-date references, as they have new functionality (some of which makes programming much easier and simpler), and why learn the 'old way' if it's been improved? I have Microsoft Visual C# 2013 Step-by-Step and it's pretty good. I'd recommend combining it with other books and online content (such as videos - Microsoft Virtual Academy will help a lot, and it's free). There isn't a big difference between C#'s 2013 version (C#5) and the current version (C#6), so getting a C# 2013 book won't set you back.
I work for an alphabet soup agency, and we do a *LOT* of .NET and every developer I've spoken with uses R#.
I can understand how it can come across that /u/Fs0i criticized your code- they said theirs was "better" (which implies yours was "worse"). When criticism seems okay is culturally dependent. As a U.S. Midwesterner, I'm pretty loathe to criticize. Sometimes I'm kind of blown away by how readily other people criticize. On one of my first programming jobs, the CEO asked us "How many of you are from the Midwest?" About half of us raise our hands. "Let's talk about your disability," she said. "When a someone in New York parks in the wrong spot, everyone shouts at them, 'You're in the wrong spot!' When someone in the Midwest parks in the wrong spot, everyone thinks to themself, 'well, they must have some reason...'. For our code to improve, we must be critical of ourselves and others." I see where she was coming from when she said that, but I think it must be qualified- we don't have to be critical of ourselves or others, but we do need to be critical **of the code**. This becomes a lot easier when we don't tie the **code** to our ego. I now think that criticism of code makes a great deal of sense. Programming correctly is hard. Our first attempts are almost always suboptimal, and there's an enormous skill ceiling. It's not like walking, where once you've got it down, you're done. It's more like the game of go, with tremendous improvements possible over the span of your career.
When I've review other programmers code at work I see this quite a lot. Theres nothing inherently wrong with it but it can cause a few headaches if you're working on production code and theres a high chance that it will change.
Out of interest, why would you class that as silly?
Can lead to heavy branch nesting if you adhere to it very strongly. I try to reduce return statements as much as possible, but especially in languages with no exceptions (like C) its not always very pragmatic to return once. Returning early on errors is essentially the same thing as your first example. There's a related style one of our leads if very fond of where he basically refuses to use continue statements in loops, which also tends to make his loop code very nested.
Personally I like to declare my return object first then work down and return it at the bottom unless there is a specific case to return in multiple places (which I can't think of right now). For me, I can look at a page of code, look at what is being return and work out how that object is being constructed and not have to worry about multiple instances where the function type is being return in different places. It just makes things simpler for me. But like with most things there are for and against arguments.
It's usually fine, I've just seen instances where it becomes a real mess because someone didn't think a little more carefully about the logic. Especially in functions with a lot of side effects. I say it's "silly" because many of the people I've met that adhere to it, do so religiously regardless of the context. 
Feel the same. Which I why I handed in my resignation last week to find something else.
Just for the record don't go for this shitty work around. Console apps should not block like this because in an actual console it is useless and in a script it is outright evil. Instead just start the app with ctrl + f5 in visual studio. It will add "press any key to continue"
Do you have some code examples of this? I'm having a little difficulty imaging exactly what you mean
I agree. A lot of my early code looked a lot like the second example. It makes sense (especially to me as a younger programmer) to have a single logical "path" through a function. Now I return as early as possible, and my functions look so much cleaner. It's also easier to read, because I know that all the things like argument checking (and base cases, etc!) are taken care of at the top.
Agreed. I do plenty of ternary returns like: ``` return result == 0 ? null : result["data"]; ``` when it makes sense to do so depending on the expected behavior of the function (returning `null` for no results, for example). In this case, the ternary operator makes for a very readable, compact chunk of code. Awesome. On the other hand, there are times where I will explicitly describe the logic, because using a ternary (while shorter) would make it more opaque. I know some people love nested ternarys, but I think it's hard to read. Just because the compiler can understand it, doesn't mean that the other humans who read your code will.
OK, Thought about this over the weekend and I think I'm getting close: Here's what I have now: .Select(x =&gt; { var avg = x.Average(y =&gt; y.Quantity); return new { pid = x.Key.pid, avg = avg, av2 = 2 * avg }; }).ToList(); This only gives me a compiler warning on x =&gt; ... "A lambda expression with a statement body cannot be converted to an expression tree." I thought that perhaps the .GroupBy() might be messing me up but I tried removing it (and changing x.Key.pid to x.ProductID and replacing the x.Average() with var avg = x.ProductID as a simple test.) but I still get the same error.
For me, the worst is a massively-branching function I wrote for my first freelance project (I was ~15 and had been programming for only a few years). The program was a schedule/inventory management system for a cafeteria. Every day, the administrator had to log in and input current inventory for tracking. Except, some days (like weekends and school holidays) didn't count. Instead of just letting the user say "today is a holiday", I decided I had to write a function to determine it programmatically. Instead of storing this data in my database, I decided to hardcode the logic into an enormous branching if statement that checked for weekends, federal holidays, school holidays, etc. It was brittle as hell: it assumed the local system date was authoritative, didn't deal with DST, and would require a recompile + redistribution (by sneakernet) if any date changed, ever. No unit testing, either. Just me trying it on a normal day, logging into the program, and saying "well it looks like it works". Makes me cringe every time I think of it. The project got axed and never went into production, which was better for everyone.
I'll preach a bit: use braces {} to prevent headaches later on. :)
I omitted them for neatness. If there was going to be more than one statement then yes, curly braces are fine. Lack of curly braces kind of implies "Hey this is the only logic after this condition" which makes it easier to read. For me at least.
Some other useful things to refactor to allow for less error prone skimming of code: * Compare dates and times in time-line order. As in, only use &lt; and &lt;=. * Do not use !foo.HasValue, use foo != null instead. This puts the negation closer to what it's negating.
I"m going to agree with /u/Protiguous. It saves headaches later on when you're going to refactor code and end up trying to add a line to an if statement.
Except for those instances in a work environment where the newest happens to have some edge-case bugs that grind all your dev machines to a halt. You do *not* always want the newest. Depends on context. :)
Anything I wrote more than five years ago. Which makes roughly 5/6ths of all code I've ever written.
It's amazing. If you are a student or know someone who is a student, you can get 3 months for free. You can get 6 months for free here: https://www.visualstudio.com/en-us/products/visual-studio-dev-essentials-vs.aspx
I am part of the interviewing team at work. Simply having a Pluralsight membership will not get you much credit, but watching the videos and being able to discuss what they covered will help your case. If you then managed to actually put some of it into practice, even on a trivial little github test project then you'll be at a pretty big advantage over other candidates. As for the site itself, it's mostly high quality and generally seems to be a good starting point for learning new things - but it's not infallible. Make sure to research stuff elsewhere as well to get a full picture 
Yes.. I work with a dude that hates braces since they add extra lines to the code that are unnecessary. He tends to subscribe the philosophy that you should code as much as possible in one long line and if someone can't understand it when they take over the code, that's on them. 
The technique you are showing here is called guard clauses. http://refactoring.com/catalog/replaceNestedConditionalWithGuardClauses.html 
Actually there is something inherently wrong with it, it increases the cyclomatic complexity of the method (number of paths through the code) and increases the number of automated tests that you have to write to fully cover the code in tests. http://blog.codinghorror.com/flattening-arrow-code/
That's terrible. It also makes debugging harder. It doesn't make any difference to the compiler, so use that extra space on your screen to simplify complex statements into simpler ones.
This still won't be 100% accurate, but if each licensed copy of the game has a unique id that is sent to the server for each game play session, that would probably provide a valuable clue.
translated it to english. There's one more problem, it it supposed to create a "results" txt file but it doesnt. Do you have some more time to explain me in more depht what should I do in a methods "process" and "words"? everything below foreach is wrong there and even when I changed it up to what you said it didnt start doing anything
Cool. I got rid of it. Sorry I put the world at risk.
I've just started on this.. I'd really like to add more 'bad' ideas to it. :) Like nested ifs. namespace WorstApplicationEver { using System; using System.Collections.Concurrent; using System.Threading.Tasks; /// &lt;summary&gt; /// I wrote this so as many lines as possible make you stop and say "wtf, why????", yet still be /// perfectly 'legal' code (but doesn't have to have expected results). /// As much code as possible to do the least amount of work. /// &lt;/summary&gt; public static class Program { #region Public variables /// &lt;summary&gt; /// Not an array. /// &lt;/summary&gt; private static readonly ConcurrentStack&lt;String&gt; Array1 = new ConcurrentStack&lt;String&gt;( new[] { "morning", "evening" } ); #endregion #region Private Methods /// &lt;summary&gt; /// Pun intended. /// &lt;/summary&gt; public static Exception NullReferenceException { get; } = null; #endregion /// &lt;summary&gt; /// Empty constructor. /// &lt;/summary&gt; static Program() { } /// &lt;summary&gt; /// &lt;para&gt;Unnecessary task.&lt;/para&gt; /// &lt;para&gt;No array index checking.&lt;/para&gt; /// &lt;para&gt;Fire &amp; forget task.&lt;/para&gt; /// &lt;/summary&gt; /// &lt;param name="args"&gt;&lt;/param&gt; public static void Main( String[] args ) { Task.Run( () =&gt; HelloWorld101( "World" ) ); Console.ReadLine(); } /// &lt;summary&gt; /// &lt;para&gt;Unnecessary task.&lt;/para&gt; /// &lt;para&gt;Badly named method.&lt;/para&gt; /// &lt;para&gt;Blocking wait.&lt;/para&gt; /// &lt;/summary&gt; /// &lt;param name="message"&gt;&lt;/param&gt; private static void HelloWorld010( String message ) { Console.WriteLine( message ); Task.Run( () =&gt; { while ( Array1.TryPop( out message ) ) { Console.WriteLine( message ); } } ).Wait(); } /// &lt;summary&gt; /// &lt;para&gt;Badly named method.&lt;/para&gt; /// &lt;para&gt;Unnecessary looping.&lt;/para&gt; /// &lt;para&gt;Unnecessary &amp; bad math.&lt;/para&gt; /// &lt;para&gt;Magic numbers.&lt;/para&gt; /// &lt;para&gt;Blocking waits.&lt;/para&gt; /// &lt;/summary&gt; /// &lt;param name="message"&gt;&lt;/param&gt; private static void HelloWorld101( String message ) { One: try { Array1.Push( message ); if ( DateTime.Now.Hour * 144 &gt;= 1708 ) { throw new ArgumentOutOfRangeException( DateTime.Now.Minute.ToString(), NullReferenceException ); } throw new NotImplementedException( DateTime.Now.Second.ToString() ); } catch ( ArgumentOutOfRangeException exception ) { Array1.Push( exception.Message ); Task.Run( () =&gt; HelloWorld110( exception.Message ) ).Wait(); } catch ( NotImplementedException exception ) { Array1.Push( exception.Message ); Task.Run( () =&gt; HelloWorld010( exception.Message ) ).Wait(); } catch ( Exception ) { goto One; } } /// &lt;para&gt;Badly named method.&lt;/para&gt; /// &lt;para&gt;Unnecessary looping.&lt;/para&gt; /// &lt;para&gt;Missing parameters.&lt;/para&gt; /// &lt;para&gt;Magic number.&lt;/para&gt; /// &lt;para&gt;Blocking waits.&lt;/para&gt; private static void HelloWorld110( String message ) { One: try { if ( DateTime.Now.Hour &gt;= 12 ) { throw new ArgumentOutOfRangeException( message: DateTime.Now.Minute.ToString(), innerException: NullReferenceException ); } throw new NotImplementedException(); } catch ( ArgumentOutOfRangeException exception ) { Task.Run( () =&gt; HelloWorld110( exception.Message ) ).Wait(); } catch ( NotImplementedException ) { } catch ( Exception ) { goto One; } } } }
/u/CalvinR already provided a good trivial [example](http://refactoring.com/catalog/replaceNestedConditionalWithGuardClauses.html) In this example imagine that _isDead, _isSeparated, _isRetired, can all be True (because they could be if this is a insurance payout thing) and therefore have an important precedence order. "One entrance, one exit" is an outdated style largely popularized when people also abused GoTos for anything other than garbage clean up. In my professional experience people cling to it out of dogmatism, not because its objectively better in all scenarios. 
If something like what you've posted were anywhere near the worst violations of if-else, I would buy lunch for the entire office.
I know it's not an attack. What you're doing is actually standard practice, and is highly encouraged behavior in many many contexts. It's a good thing most of the time. Think about Amazon, the company. It makes a great product. They have great programmers. And they have a huge culture of criticism. And I think most people walk away from work each weekend thinking, "that was really hard. I took a lot of shit from a lot of people, and even though it was enriching, I'd like a break from that." Sometimes they think even worse things, judging from the NYT piece. And giving a n00b some simple linq examples on reddit, in my mind, is an example of something that should be taking a break from the culture of criticism, unless I'm severely leading him astray. And that's were I sit. I'd like to still engage in programming topics on the weekend, but I'd like to leave the culture of criticism behind or ahead for the things that really matter.
I think I got the index problem out of the way by changing for (i = 0; i &lt; word(instead of numbers).lenght; i ++) but now i come to a problem that it creates a new results file but its completely blank
(Why are people voting down above comment? It's a discussion, we don't have to agree, just contribute. Come on, people.) I always, almost without exception, use braces, mostly to avoid doing extra changes when adding/removing statements in a (e.g. if) block, thus writing less code, getting a more consistent code base (no braces I forgot to remove), and nicer commit history.
Thanks for all the help everyone, It really made my day to see so many people helping me with this, thanks and have a nice day :)
You're all wrong. It's literally anything you've written using a singleton. :p
My honest opinion? They're only reading his first sentence before deciding to downvote. Humans man. Weirdos.
Ahh, I think this is because it's trying to convert the code into an equivalent SQL query to be run directly on the database (which would not be possible). Perhaps try getting the database data first, then doing the calculations: .ToList() .Select(x =&gt; { var avg = x.Average(y =&gt; y.Quantity); return new { pid = x.Key.pid, avg = avg, av2 = 2 * avg }; }) .ToList(); Note the initial `.ToList()`, that will grab the database data first, then you can iterate on it (with the `.Select`) to do the conversions, then a final `.ToList()` to create the list of your anonymous type.
Sad this is getting downvoted and not because I happen to agree with you. There's nothing wrong with what you said and if people want to downvote just because they disagree then they should realize downvoting is supposed to be mainly for disruptive, non-constructive comments....
I find a lot of coders still can't get away from using half a dozen if statements in a function when they can use none. I generally use the first example listed just because it looks cleaner to me. But I've been known to go over my own recent work and find I've gone with an even uglier version of the second exanple. What shames me is when I do something like this: if x some logic and then immediately after: if x more logic Sadly I don't think I've yet to write a program that I couldn't remove idiotic things like this even just a week after originally writing it.
Ah, that worked! Thanks.
Apple had a security vulnerability due to leaving out braces. That's why they're mandatory in our code base. 
seconded. and if you would like to turn the designer off by default it can be done in 2015 by setting Tools-&gt;Options-&gt;XAML Designer-&gt;"Default document view" to Source View.
None of those arguments make any sense to me. I've been coding with languages with curly braces (C/C++, C#, Java, Javascript) for ~21 years and I never (ok, very very rarely) make mistakes related to curly braces. Very rarely have I seen other developers make those mistakes as well. There is no mental hoop I have to go through to realize that the single statement following an if(condition) or else keyword is only part of that block. I look at it and I understand it--immediately. To me, unnecessary curly braces are just clutter that makes it harder to get to the parts of the code that actually, you know, *do* stuff. 
One piece of advice I've seen is to always have the expected branch be first. Which is okay if both branches are actually doing something different and then continuing.
Your last line is incorrect, it should be: Console.WriteLine("The current acceleration of gravity: " + timeVariableThree); The concatenation needs to happen inside the call to WriteLine.
First day of work, fresh out of school, only programmer at the company. I had no idea what I was doing. Needed to add a new tab to a tabStripControl in VB6 that would only show based on a database value. Made a brand new tabStripControl but with the extra tab. Put the controls in an array. Wrote code that hide/showed one control or the other based on the database value. Then changed all of the code on the form to use a modular level variable that told me which TabStrip index to use. Something like... tabMain[tabControlIndex].Tabs Why didn't I just add a new tab?
Haha, that's great. I know I've done similar stuff.
This is just a simple thing to remember about every single object in C#: they all have a ToString() method (inherited from the Object class). So you can add any object to a string, and get a string as a result! Got to remember that the primitive types aren't real primitives either, every int, double, float, etc, are Objects as well.
Brother of dragons? 
Thanks!
I'll go against the common sentiment: I prefer the old-timey approach of "every method should have a single exit point and declare their return vars at the start, guard clauses are a no-no." (Also, braces every time, and newline for brace. I am *seriously* uncool.) The main reasons to use guard clauses, IMO: because it results in slightly terser code, and -- and if we're being honest, this is the real reason -- it's more aesthetically pleasing and modern-programmery-looking than having big ol' tacky if/else blocks. The main reasons to do things the unsexy way, and I acknowledge these are somewhat subjective: it makes your logic completely clear and explicit. Every fork in the path is clearly indented and can't get lost in a muddle of code (unlike a throw or a return). You have a single path of logic to follow and know that every part of your method will be reached. If the result of fully laying out your logic is some seriously lengthy code or major nesting, this is a proper indication that you're maybe trying to have your method do too much -- a "smell" you might otherwise miss. 
Im a C++ dev, but I can second the motion of using guard clauses, they absolutely make code paths clearer. Good tip!
I added a bug. Can you spot it? if (param1a == null) { throw new ArgumentNullException(nameof(param1a)); } if (param2bc == null) { throw new ArgumentNullException(nameof(param2bc)); } if (param3c == null); { throw new ArgumentNullException(nameof(param3c)); } if (param4ed == null) { throw new ArgumentNullException(nameof(param4ed)); }
Makes no sense to me either. I've been programming for 4 years, not 21, but as soon as I see no bracket I know it's only the next line; it's instinctual and I don't think about it. This is reinforced even more by the fact that the indentation is incremented on the next line. Every time I hear the argument that it's better to always put the brackets, it makes ZERO sense to me.
Awww yeeee. I was really hoping for pattern matching, records, and first-class tuples in C# 6, but I'm really glad they'll be available in C# 7.
Late post I know, but I thought you should be aware that Console.WriteLine has many overloads; one of them matching the signature of String.Format(). So you could also do Console.WriteLine("The current acceleration of gravity: {0}", timeVariableThree);
Also always look at the dates on the courses. Some of the stuff they have there can be out of date.
Check Google guava preconditions. I would use something like that for this.
Before I really grokked ReactiveUI I wrote some incredibly complicated rx linq queries that touched data sources that observed all kinds of local and non-local state transitions. They didn't even work. Once day I looked at the code and git reset --hard the lot.
It's worth it. There's a lot of content and its from top notch people in the community and its very diverse in the topics that are covered. I know you think that $29 a month sounds like a lot, but if that can land you a job making an extra 5 or 10 grand a year than its definitely worth it. Extract that over time and it'd be crazy not to.
~~missed a quotation mark there buddy.~~ edit: Also, *technically* ^((sorry!)^) the requirement for C# string interpolation is C# 6, not VS 2015.
Well sorta, but not really. C# is a language that let's you have mutable state. So adding null checks is doing it properly, it's defensive coding. In other languages this might be unnecessary, but this is C#.
 Of course it is subjective, but I feel the opposite. I feel like it's easier to read other people's code if you return as soon as possible as it's easy to see requirements, constraints, etc... The old way tends to make the logic more dense and can sometimes make it harder to dissect the real purpose of the methid frim all the fluff.
Sneaky but I don't think if (param3c == null); will compile? Anyway if I typed this ReSharper would just reformat it into separate lines
At the end of the day, I guess "easier to read" just means "closer to however we personally do it."
Yes, as it is instantly highlighted by the IDE. Do you use notepad? http://imgur.com/Z5DmtTD
Yet it was in the source code I was reviewing for months.
Don't apologize. I've looked at resharper, but never really seen the point.
... isn't this the C# subreddit?
If **most** developers find your code less readable, but you still do it because you disagree, consider yourself the bad apple.
Why is Visual Studio integration so expensive? 
do you have any links that show examples?
Definitely worth it. IT pros have to take responsibility for their own continuing education and this is an excellent resource. I've been a member for quite a while now. Their VMware virtualization courses are excellent!
I'm with ya brother. C# is a little different, omitting braces only affects readability. Omitting braces and semicolons in javascript and php may still allow the code to run without errors, but its possible the results will be unpredictable. Its not worth the headache to me. I found it's best to stick with formal use of braces, semi colons, etc. With the logic laid out simple and readable. 
Frankly, Google is filled with search results regarding the use of closures to simplify all sorts of development tasks including but not limited to the implementation of classic design patterns, and you could have run your own search in the time it took you to post your comment.
[The true horror.](http://i.imgur.com/7bnbTSC.png)
If you have to step through it in the debugger you'll probably refactor it into steps anyways.
Add in that debugging ios requires a mac and I just do it all in xs on a mbp. Less of a hassle. 
I wish I could have asked, 'will people ever stop moaning about the price?'. :-)
* Since the whole point of Xamarin is cross-platform development, why do they charge per platform? * Are there any plans to improve support, rather than relying on customers helping each other in the forums, or using "technical chat" phone calls to push Xamarin University subscriptions? * Why can't Xamarin University training be done on-demand, like Pluralsight? * Any plans to maintain the often outdated and broken examples?
This!
Once you've gained some knowledge, buy Jon Skeet's https://www.manning.com/books/c-sharp-in-depth-third-edition
If you only want one platform, then do it natively, surely? Honestly, why would you pay to use a framework that would give you far worse results than doing it properly? We still have a business license, but we ended up going native because what we were trying to do was too difficult in Xamarin (although I can see it being useful for other projects). I'm glad to hear your experience of their support is good, but mine was awful, frankly. We were offered 8 screen-sharing sessions if we signed up for Xamarin University, but having tried the free intro modules I wasn't even remotely interested in that. Seriously, in the one half-hour support call we were granted they mentioned Xamarin University at least 5 times. And no, we weren't asking noob questions, the stuff we were trying to get help with probably isn't even covered by the University (why wrapping specific C libraries worked in iOS but not Android).
We do have project and architectural documents as well as a training course for first time developers that will be working with Xamarin. The code it's self will follow a coding standard and have commenting through out the code base. As i have been a .Net dev for about 7 years and now moving into Xamarin i want to hopefully do the path of least resistance with starting out the multiplatform development.
They're useful anywhere a delegate is required. Another common use case is adding to an event, whether it be a small/one time method off a wrapper for another method with the wrong signature.
Can't you make Zodziai return; when it has found the first numerial and moved it?
Oh sorry forgot to translate it. just did now. what should it return?
then come and where I should implement the function ? excuse but are one junior dev c # I 'm learning from one month to this part 
ouch! &gt;.&lt; That's got to suck. Good find :) That said, isn't that just as bad as this? if (param3c == null); { throw new ArgumentNullException(nameof(param3c)); }
[Compression and decompression problem with zlib.Net](http://stackoverflow.com/questions/6620655/compression-and-decompression-problem-with-zlib-net)
Sorting routine: List&lt;string&gt; sortString = new List&lt;string&gt;() { "bill", "fred", "alice", "roger" }; sortString = sortString.OrderBy(x =&gt; x).ToList(); for (int i = 0; i &lt; sortString.Count; i++) Console.WriteLine(sortString[i]);
I haven't been shown List in my course. What does it do, you know, so I can get my head around it?
A **List** comes from the *System.Collections.Generic* namespace. It's like an array but with a lot more functionality. Using the **List** with *Linq* makes day to day tasks easier. using System; using System.Collections.Generic; using System.Linq; static void Main(string[] args) { List&lt;string&gt; sortString = new List&lt;string&gt;() { "bill", "fred", "alice", "roger" }; sortString = sortString.OrderBy(x =&gt; x).ToList(); for (int i = 0; i &lt; sortString.Count; i++) Console.WriteLine(sortString[i]); } [List&lt;T&gt; Class](https://msdn.microsoft.com/en-us/library/6sh2ey19%28v=vs.110%29.aspx) [Getting Started with LINQ in C#](https://msdn.microsoft.com/en-us/library/bb397933.aspx)
Thanks.
Yep. But since all three of the `if`based errors are incredibly rare, I don't tend to sweat it. 
But do they? Or are you just assuming that's the case because it makes your argument easier?
You have not put enough into this. The blank spots in your code show a complete lack of having even started. You have pretty much just boiler plate. That's not enough. You need to ask specific questions. Or make an attempt to get it working (and a serious attempt at that), then ask what you're doing wrong. As it stands, you've done the equivalent of posting an essay question and said what each paragraph would be about. Do you understand what a binary tree is? Draw one out on paper. How do you add to that tree (on paper)? What would the different types of traversals look like? As an aside, why do you have a tutor if they're insufficient? Tutors are expensive. If yours sucks, then dump them. Poor english skills are unacceptable of a tutor.
I'm top of my class in my Game Development module. My bad for struggling with this one task out of about 20.
Somebody didn't read the linked site and looks a little foolish...
You should have email support with a business license. I have always had great turnaround time and good responses from their support email. I've had to assemble example apps to demonstrate bugs in the past because I'm not about to send them our business' entire app, but they're very responsive and I've never once been marketed the University. I think I usually email ios+priority@xamarin.com or something, as I live primarily in the ios space. The support email is available in your account settings on their site.
Learn LINQ. You will fall in love with it.
To be fair their pricing is atrocious. I think people have a right to complain about that. The fact that to get VS integration you need to pay 999/yr is terrible for someone like me who just wants to craft apps in my off-time but not use my company's license. I could get the $25/mo Indie license and it'd do the job (and is likely what I'll do), but I really love Visual Studio.
The linked site has the following as their datasource: public FilteringSample() { InitializeComponent(); List&lt;User&gt; items = new List&lt;User&gt;(); items.Add(new User() { Name = "John Doe", Age = 42 }); items.Add(new User() { Name = "Jane Doe", Age = 39 }); items.Add(new User() { Name = "Sammy Doe", Age = 13 }); items.Add(new User() { Name = "Donna Doe", Age = 13 }); lvUsers.ItemsSource = items; CollectionView view = (CollectionView)CollectionViewSource.GetDefaultView(lvUsers.ItemsSource); view.Filter = UserFilter; } Simply adding in the filter I suggested would dynamically filter out the datasource. I didnt want to put this much detail in my post as the OP would not learn anything from me doing all the work for him.
To be fair, you have to understand that some people are going to be a bit puzzled. Obviously we're all biased because we're well past the point of simple programming problems and looking at simple ones makes things seem ridiculously easy (like a mathematician viewing addition and multiplication). That said, I'm not sure what part you're having problems with and my personal experience with binary trees was that they just "clicked" the moment I learned about them. Since I didn't have issues in learning them, I can't really give general advice and you haven't really explained what specifically is the roadblock. I guess my starting point is "have you done a linked list before?" Because the coding of a binary tree is very much like a linked list in how nodes refer to other nodes (except now it's a tree instead of a list). Yours is actually a binary SEARCH tree. Perhaps that will help you? Wikipedia should have a very good page on those. Binary trees are very general and say nothing about where to insert nodes. Binary *search* trees have specific rules. I assume that since you're able to figure it out on paper that you know this insertion rule. To program it using a while loop as your code shows (could alternatively use recursion by passing in the current node that you're inspecting, starting with the root node), you'd keep track of the current node. Check if the value in the node is less than or greater than the current node, then go left or right based on that. If left or right is empty, insert it there (just like how you'd append to a linked list). Be sure to handle the special case of inserting to an empty tree. One other piece of advice is to remember that you're working with references here. These `MyNode`s that you have everywhere are all references. That is, you're storing a memory address which "points" to where the data is stored. So you can think of storing a reference somewhere as akin to storing a link to that data.
So here's the problem with these types of questions on here: We don't know the intent of your lesson or the scope of your knowledge. You're probably better off reaching out to someone who instructs your course or another course-mate. At any rate, my typical recommendation would be to perhaps use a SortedList or OrderBy on a List, but from your other post here I see you haven't been introduced to lists yet, so I'm guessing what the course intends for you to do is to do a rudimentary sorting algorithm yourself. What you probably want to look into is using [String.Compare](https://msdn.microsoft.com/en-us/library/system.string.compare\(v=vs.110\).aspx). Then, when the user clicks the third button you'll want to look at each value in the first list box, compare it to the third text box's value, and if the String.Compare's return value indicates that the value you are looking at in the first list box is alphabetically greater than the entered character/string in the third text box, move the value to the second list box. This should be enough to point you in the right direction if I'm interpreting your lesson correctly.
I added an explanation to my parent comment on why this is bad design. Hope this helps.
I added an explanation to my parent comment on why this is bad design. Hope this helps.
I've done this, to add my nodes. theTree.Insert(25); theTree.Insert(15); theTree.Insert(26); theTree.Insert(13); theTree.Insert(22); theTree.Insert(30); theTree.Insert(20); theTree.Insert(23); theTree.Insert(28); theTree.Insert(23); theTree.Insert(16); theTree.Insert(17); But Now I'm getting problems saying - "MyBinaryTree does not contain a definition for Insert"
How would you expect that to work? Honestly, it's like you're completely making up code without any reason behind it. As the error says, your `MyBinaryTree` class does not have a method named `Insert`. Presumably you meant `InsertNode`. Which you must implement, first, otherwise it's gonna be an infinite loop and will hang forever.
I'd pass a `StringComparer` to that `OrderBy`: sortString = sortString.OrderBy(x =&gt; x, StringComparer.CurrentCultureIgnoreCase).ToList(); There are 3 main different `StringComparer` types that come in both case sensitive and case insensitive instances: * `CurrentCulture`, `CurrentCultureIgnoreCase`: uses rules for the current culture ("en-US" here on my machine for example); suitable for comparing things like names of people or places for user display. * `InvariantCulture`, `InvariantCultureIgnoreCase`: uses rules for an invariant culture; suitable for persisted data read out and in from external sources or sorting in a way that data gets displayed in a fixed order regardless of user's culture settings. * `Ordinal`, `OrdinalIgnoreCase`: `byte` comparison; suitable for data generated programmatically or for security comparisons All the IgnoreCase versions do is uppercase the strings before the compare happens (according to uppercasing culture conventions).
Thanks once again. After reviewing the query code and making a few more modifications I was able to reduce what used to be a 19 second query down to about 400ms!
Glad to hear it!
This works as a charm. Thank you! 
Holy. This guy. Enjoy yourself that made everyone laugh.
Just write return; it returns nothing, which is should when it is void.
Awesome this will help, i don't know what the Xamarin rep will do with the information but i will certainly pass it along that these are issues that need to be corrected i've seen the documentation side, didn't know it was outdated.. this is good to know.
4 spaces before each line tells post that it's code. // code 
alright thanks for the comments guys, i'm sorry i'm very new to reddit.
The point? It saves you unnecessary lines of code by filling them in for you. 
Thought the exact same thing. I used to use documentation for my problems and I would notice simple sorting methods I could use. But I always felt lit that was too easy, so the first time I provided the answer in both ways with a comment about it. He said to do it the hard way. Eventually I was taking more time figuring out if I could use certain functions and methods.
Here's an ongoing tutorial that builds a kanban-type board using ReactJS + Alt. Gives a good primer on webpack, too. https://survivejs.com/ 
Just 'cos you've never seen the sea, doesn't mean it doesn't exist...
Yeah, it can be tough sometimes. With schoolwork it's very important that you know what you're supposed to be taking away from the lesson and not short-changing yourself. In this example, we could give plenty of pointers that would lead him to Lists and Linq and the OrderBy methods that would do the heavy lifting for him. But is that what he should really be taking away from this lesson? I doubt it. It's highly likely that the instructor intended for him to break the problem down and implement a solution himself versus using a method in the framework that would do the sorting for him. It's that type of problem solving that most CS courses set out to teach you, in order to get you to think like a computer and hone that ability to break down problems and solve them.
Best resource you can buy. Especially if you are learning something new.
It's a command that tells the code to pause/stop execution and wait for the user to input something in the console. Once the user has inputted something (denoted by pressing "Enter"), the full line of text that the user inputted is then deposited in the `userValue` variable and the program code resumes execution. The wording of it is such that when the method is called, there is no line of input yet. It's the invocation of that method that allows the user to write their "next line of the standard input stream"; in that sense, the wording is correct.
If they're unnecessary, why include them? In any case, VS already supports snippets. 
Back in high school I wrote some C code during a caffeine fueled allnighter. Coded from about 6PM on a Friday evening to around 6AM the next morning before I collapsed from exhaustion. When I woke up that afternoon I found sort-of working code that did about 80% of what I needed, much of which I didn't even remember writing. Although the code mostly worked, I couldn't figure out how. Any change I made to the code managed to break more (seemingly unrelated) things than it fixed. After tinkering with the code for a couple of days I finally discarded the entire thing and started over. Needless to say that was the last time I tried coding past bedtime. 
Awesome, thank you.
Thank you for pointing me to the article. unfortunately, I get an error referring to no argument given that corresponds to the required formal parameter 'computerName' when trying to reference the assigned textbox to GetWindowsInstallationDateTime
And I'm sure Guids can collide, but I'm not going to stop using them.
You'll need to give more than "I got an error" I would GUESS you're missing a reference. If you see a line of code that has a red squiggle under it, hold the mouse there for a moment, if you see a short blue line, select that it it will give you options to add the reference. And/Or take a screen shot or type the message. I am heading to the gym now, so I'll check back in a few hours.
I want to use ASP.NET simply b/c that's where I see all the jobs are in my midwest metro city. How about React+Flux+ASP.NET+JQuery+ Bootstrap? What if I want create nice looking drag and drop components, where do i get them from? I cant see on bootstrap website. Thanx alot homie!
Use Registry.LocalMachine instead of the OpenRemoteBaseKey call. OpenRemoteBaseKey is for accessing the registry on a remote computer.
Why don't you put a Console.WriteLine inside the loop and check it out? I think: Console.WriteLine("num = {0}, sum = {1}, r = {2}", num, sum, r); ... would help explain how it works and give you an idea of what is going into those numbers.
GetWindowsInstallationDateTime(System.Enviroment.MachineName) This might just work. That method takes an arguement i.e. your computer name.
I didn't say "if you assume..."
If you know ahead of time the quantity of strings you're going to be concatenating, you can do even better than `StringBuilder`! https://msdn.microsoft.com/en-us/library/0wkb0y3w(v=vs.110).aspx
The training mode is pretty cool. The first time it does something automatically a box appears, giving you the chance to say "yep, that's cool" or "nope, don't do that again". This drops the annoyance level quite rapidly. I also like how every refactoring option is hidden behind one keystroke. So need to remember a bunch of shortcuts. It's always been faster than resharper, but the new version screams. It uses Roslyn, so the IDE pays the cost for parsing up front. Resharper still has its own parser.
Num = num / 10 is changing what num is. So as it loops it is getting the next digit.
Ah, the value returned is a DateTime, not a string. try this: string sComputerName = System.Environment.MachineName; textBox10.text = GetWindowsInstallationDatetime(sComputerName ).tostring(); Several points here. Please take these with the kindness that they are intended. 1) NAME YOUR OBJECTS. Text1, Text2, etc are NEVER acceptable names. Right now you are starting, programming is about creating good patterns. Pattern yourself NOW! There are a number of [naming convention patterns. Read some of this on my site](http://www.blissgig.com/default.aspx?id=17) 2) ALWAYS! use exception handling. Always. 3) Learn to read this stuff, you're new so again I am not making fun of you. The code required an input and you didn't provide it. (oops) We all make mistakes. I have been doing this for 20 years and still miss things, so also learn to give yourself a break.
It's just adding up all of the digits in a number, so "123456" outputs as 21. It does this by more or less iterating through each digit by first getting the modulus (remainder) of the number divided by 10, then dividing the number by 10 to remove one of the digits, and then updating the sum. I don't know that this is the way I would do it (I think I'd convert the number to a string, then iterate through each char in the string, convert those back to ints, and add them up) but the fun of programming is that there's often multiple ways of doing it. You wouldn't use "num" at all in adding things up because all "num" is, really, is how many digits you have left to add to your total. I *guess* you could use it the last time but I think that would be overly confusing.
That is called "how to make code as inaccessible as possible". Most experienced programmers look down on this because they know that good code should be easy to decipher. I *guess* if you were writing that statement in JavaScript then there might be a small gain in overhead but even at that there are 3rd party tools that will minify your script for you to save that kind of time.
Yeah... the real issue here is that there's comments indicating that in the future you could add code underneath them. Fortunately since you're creating an if/else statement rather than a simple "if" the compiler will catch this and error out, but really, the only time you ever want to use an if statement without braces is if you are 100% sure that you aren't going to need another line later on. Even then, you aren't saving any actual time in either coding or the actual running of the program, so why leave them off at all?
This isn't a homework help subreddit.
No it doesn't, it requires a buffer large enough to hold references to all the string sections. Until that rope is turned into a string (via an application of `string.Concat()`), it doesn't need to allocate the block of memory used to store that string. This is the same trade off used for any lazy data structure. You pay an up front cost for holding references to the objects necessary to compute the result, but don't do the work to actually compute it until as late as possible.
Don't want to read too fast.
Thanks guys! Not a computer science major just interested in learning 
Concat will make a copy of the array that you pass in before it assembles it into a single string. Not entirely a huge deal, since it's just an array of pointers. But it could add up if you have lots and lots of small strings. Theoretically, you should be able to perform the concatenation with one allocation and one pass of copying. And lo, if you're willing to do the same tricks as the runtime, you can: http://stackoverflow.com/questions/32217255/is-it-possible-to-concatenate-a-list-of-strings-using-only-a-single-allocation
Learn the difference between unit tests and integration tests.
Yer thought as much but from memory of testing the vs one before we chose SourceTree company standard one was just the complete lack of intuitive design of tools. Properly all there but hidden under layers of menus which isn't fantastic. 
&gt; All the examples online are for encrypting and decrypting strings [First result for "C# encrypt picture"]( http://stackoverflow.com/questions/4438691/simple-encryption-decryption-method-for-encrypting-an-image-file)
Is it still an integration test if the data source is mocked, though?
What's the point of this line? var productsQuery = dbContext.Products.AsQueryable(); DbSet implements IQueryable. If you check the docs, calling AsQueryable on a collection that already implements IQueryable just returns the collection itself. So the above line is functionally equivalent to var productsQuery = dbContext.Products; In the other method, why make the parameter nullable if it's an error for it to be null? public ActionResult Details(int? id) { // Ensure an Id is passed in if (id == null) return new BadRequestResult(); Just make it non-nullable and you can eliminate that conditional and let the framework handle it. One less test you have to write and maintain. 
Is it mocked though? you are still using full EF, and a regular database. Sure, it is a test database that contains test data, but that doesn't really work any different from using the production db.
Shortly: The MVP is IMHO the way to go. I did a research a while ago and I ended up using MVP which was a very good choice and nice experience. It fits very well the WinForms technology. At that time I was interested in MVVM pattern but ended up on this stackoverflow thread [UI Design Pattern for Windows Forms (like MVVM for WPF)](http://stackoverflow.com/questions/595469/ui-design-pattern-for-windows-forms-like-mvvm-for-wpf) and also some other one with full story about trying to implement MVVM in WinForms. The problem with MVVM is the lack of double side binding feature in WinForms, so you will have to break the MVVM pattern and put some code in Code Behind.
Also doing a WinForms project. I try to use MVVM concepts and the already existing binding support for WinForms, as much as possible. Just not all controls support bindings, so you will need some glue code here and there.
I don't think anybody is working on Windows Phone, including MS.
Any c# example for this ? All these patterns are confusing me.. 
I know this post was a while ago but did you ever resolve this problem? I've got exactly the same problem and nobody seems to have the answer. Seems quite common too.
If StringBuilder is not enough, have a look a this guy's technique: https://www.reddit.com/r/csharp/comments/3in125/string_hackery_or_how_to_initialize_your_own/
Are you able to use coreclr with vs2015? If so, how can you set it up?
Ah I see, I never thought about putting .txt in quotation marks, just tested it and it worked, thanks a lot!
Sorry...it was a long time since I did WinForms. However...casting my mind back, basically, I did: Your view (Form) would have an interface with methods to change the view, and events raised based on user action (button click etc). Your presenter would receive your domain model, and configure the view using the interface, listen to updates coming from other users via your domain/services, and subscribe to the view interface to then post the data back to the domain/model. Once I had this separation it was way better than classic MVC or MVP (although the difference is obviously quite subtle). 
Yes, you are able to use it. Install the tooling (get.asp.net), then create a new web project and select that you want to use ASP.NET 5. By default the project supports .NET and .NET Core.
Hey, hope you don't mind helping me again (I'm new to this haha). So [this](http://imgur.com/Zt01Zn9) is my code at the moment, instead of adding to that one file at the end of the loop, what would I do so that if they want to add another user, it would save the details of the new user onto a separate file?
Once I was finished with this program I was going to create functions for each process to try and clean the code up but I've not been introduced to 'syntactic sugar' yet, so you've been very helpful. I've saved this for future reference, thanks a lot, I appreciate it!
Use PBKDF2. It's implemented directly in .net with the Rfc2898DeriveBytes class, so you won't be rolling your own implementation in production code. Google should provide plenty of guides on how to use the class correctly.
Hi sorry i am new to C#, please could you enlighten me? 
First you need to connect to the database. You already wrote down the other methods you need. I am not at home to provide a code snippet (on my phone). But have a look here: http://www.codeproject.com/Articles/4416/Beginners-guide-to-accessing-SQL-Server-through-C
I wept.
sorry, I posted from my phone and couldn't easily link it. Follow vietnr1's article, it should make it clear. Once you get it set up, the sql is easy and secure (you will use parameters to prevent sql injection.) 
Thanks so far i have connected the database and created a blank class within a folder called app code, now i just need to create the methods. I will have a look at those resources now. Thank you very much. 
&gt;getAll() - to get all data from a table cmd.CommandText = "Select * from TableName" &gt;Insert - insert a new row into the table cmd.CommandText = "Insert into TableName Values ( columnname=colvalue, ...)"; &gt;Edit - edits a row in the table cmd.CommandText = "Update TableName Set columnname=value,... Where &lt;condition to be sure you only change what you want to change\&gt; &gt;Delete - deletes a row cmd.CommandText = "Delete from TableName where &lt;condition to be sure you only delete what you want to delete\&gt; &amp;nbsp; Use cmd.ExecuteNonQuery for commands that don't have a result set. cmd.ExecuteReader for the getAll function (code below) using ( SqlDataReader reader = cmd.ExecuteReader()) { while (reader.Read()) { //do stuff } } &amp;nbsp; Edit: Also, encase your connection in a try/catch with a finally block having connection.Close(). If there's an exception thrown it will prevent rogue/zombie connections from hanging on your database. You can send me a pm if you need more help or have followup questions, most of my job deals with the database in some way.
IMO validating a property at a time is setting yourself up to trouble. Setup whole entity and then validate its state. Just as an example validating State when you don't know Country isn't going to work, but when you have the account setup with this info, you can validate it. When you validate it as entity, you can use it as a class without reflection misuse. Additionally, whaaat the fuck is going on with password? 16 characters limit? Seriously? And App.Current.Resources["bullshit"].ToString() ?? Please, just use Resource strings and you'll be able to find references and stuff.
Couldn't this be done in the property setter? Or as psi- suggests: validate every property at the same time. 
i'm using IDataErrorInfo which has this[string columnName] where columnName is actually a property name where i check if the value of the given property is valid. https://msdn.microsoft.com/en-us/library/system.componentmodel.idataerrorinfo(v=vs.110).aspx i'm using something like this, where i don't validate directly in a get set but use a method https://tarundotnet.wordpress.com/2011/03/03/wpf-tutorial-how-to-use-idataerrorinfo-in-wpf/ this is the code from the ss: https://gist.github.com/anonymous/aea96e42a25892e3e18d
Ugh. This appears to be one of those places where you will only be able to eliminate so many smells, due to the collision between the MSFT history of "stringly-typed" programming and WPFs nature of confusing (and causing people to confuse) view and model. :( At least nameof now exists to help things out a little. All I can really do for you in this case is to suggest that you tighten up some of the mild duplication so that the unique work of each piece stands out as clearly as possible, and that if/as the class grows (or when you have to do this with another class) you might want to replace the switch with a dictionary of validation delegates (or similar) keyed on property name so that they need not pollute your model. Also, I while I worked with WPF during its first several years and again briefly a couple years back, I haven't worked with that part of WPF (heck, WPF in general) for a while so forgive me if this isn't possible, but you might want to see if there is a way to have WPF use a separate class to perform the validation work for a given model class. That'd tidy things up another nice step. EDITed for those who can't see the forest for the trees. 
Well, to something equivalent to that at least. 
Those bracket indentations after the case statements are killing me.
I did mess around with that, but that still require a copy of the underlying array. In my case, the arrays themselves were still very large so I wanted to try to get it down to exactly one allocation and no array copies.
You program? 
I'm guessing you mean the solution explorer? Do you have Show All Files clicked on? There's also a Refresh button there too.
Application level authentication? Can you put the credentials (encrypted) into a shared database, and just verify against that? Maybe I'm not understanding your problem though.
I can, and do currently, but, due to how DPAPI works, I have to encrypt the credentials for each machine that will be accessing the credentials. So... for, say, one service account, and, I have 5 servers in the farm, the database will contain the same credentials, 5 times. 
I suppose I could encrypt a hash key for each server, and then decrypt the final credentials with the hash key each time, which would be more scalable.... 
One of the reasons I like C# way more than java is you don't need to hold that shift every time you want to type String
Not a huge problem, it works.... However, I am mainly trying to discover what other developers are doing for these situations
Yes, that's default VS.
Thanks for the help. I'm now stuck with the following. I have 2 projects that generate 2 class libraries (dll) -- I use dnu build to build them I have a 3rd project: ConsoleApp that uses those 2 class libraries to run some tests. I use dnu build to build it. ConsoleApp has a main and dnu build produces a dll. My question is: How can copy these 3 dlls to a different directory (or different os/machine) and run dnx to execute the ConsoleApp? 
Sorry, I haven't used dpapi so wasn't realizing just what you were having to do. Are you required to use dpapi? Sounds almost like the net effect is just to limit access to approved users on approved machines. If that's all it is, you could get the same effect by not using dpapi but checking the machine's encryption code (perhaps the name of the machine encrypted with dpapi) along with the user's name and password encrypted through another method. Then you only need one set per user and one set per machine.
And no special characters? OP, I'm going to be blunt: your password requirements are bad and you should feel bad. You're making your passwords less secure for no reason.
That's how I like mine to look.
To elaborate further, it's because `case` doesn't use braces! They fallthrough to the end of the `switch` or until a `break`. Thus, it's just a regular block and unrelated to the `case`. It's indented because the `case` body is indented. Nifty example: switch(foo) { // These braces are necessary case 1: doSomething(); // Normal! break; case 2: doSomething(); { doSomethingElse(); // A meaningless block... bad! } break; case 3: { doSomething(); // Also a meaningless block... break; // Break can be anywhere } } It's weird and I see no reason to do it. I'd consider it bad practice on the account of being unnecessary and confusing fluff. I've never seen anyone format it like OP. I suspect that they forgot the syntax. Then the indentation is correct because there isn't supposed to be braces around `case` bodies, so VS assumes it's just a regular block in code (which you'd keep at the regular indentation level, and the norm is to add one indentation level to the body of a `case`).
To be able to deserialize this I would first highly recommend checking out JSON.NET. The second thing is that you need to know what the datatypes of the fields are. From the example you posted I would expect you are going to end up with several classes. Something like: public class MyClass{ public long Start {get;set;} public Results[] Results{get;set;} } public class Results{ public Guid HopperId {get;set;} } After looking at your example, the top most object in your JSON had a property called "Start" and it has a zero. This indicates to me that it is most likely numeric. It also has a property called Results. Results is an array (the [0] gives that away), and the first entry has several more properties on it. This tells me that this is a collection of classes, so we will need to define a class that represents these objects. Whatever the property name is in JSON, you simply name your property that and when you deserialize, it should be populated automatically (as long as your data types are correct). If you don't want to use their naming schema, you will simply need to define mappings. You can look up how to do that in the JSON.NET documentation.
Happy to help :)
namespace cw1 { public partial class Form1 : Form { public class NameConparer : IComparer { public int Compare(object x, object y) { return ((OurDataList)x).Name.CompareTo(((OurDataList)y).Name); } } [Serializable] // 'Serializable' tag allows for simple file I/O later private struct OurDataList { // The data types making up the struct for this form public string Name, PostCode; public int age; public char gender, Nationality; public int weight; // This is the constructor for x public OurDataList(int x) //(1 and 2) Here x is of type OurDataList and later on is an int //OurDataList can access these return types because these are public //And so they don't be need to be in the code more than once { Name = ""; age = 0; gender = ' '; weight = 0; PostCode = " "; Nationality = ' '; } }; public int y; string filePathName = @"F:\software dev\TestDataFile.dat"; //This creates a dat file in the file location that you specify //This doesn't affect the area that you save the project at ArrayList ClubData = new ArrayList();// (3) // Our arraylist is called ClubData int currentMemberShown = 0; public Form1() { InitializeComponent(); OurDataList x = new OurDataList(0); ClubData.Add(x); //Club member of x is added into x varible (4) //Add line above but change to ClubData.Add(y); instead //Also do the same for z OurDataList y = new OurDataList(0); ClubData.Add(y); OurDataList z = new OurDataList(0); ClubData.Add(z); LoadBtn_Click(null, null); ShowCurrentMember(); } private void ShowCurrentMember() //This section shows the inputs that have been entered // This section of code is is used to show the data of the current member { //This section is for varible x OurDataList x = new OurDataList(0); x = (OurDataList)ClubData[currentMemberShown]; //Whats entered is added into ClubData NameTextBox.Text = x.Name; NatTextBox.Text = Convert.ToString(x.Nationality); //Convert to string first as only strings can be displayed in text boxes if (x.gender == 'm') MaleRadioButton.Checked = true; else FemaleRadioButton.Checked = true; WeightTextBox.Text = Convert.ToString(x.weight); //Converts weight to string to display in textbox AgeNumericUpDown.Text = Convert.ToString(x.age); // Code for varible y OurDataList y = new OurDataList(0); y = (OurDataList)ClubData[currentMemberShown];//What is entered is stored in y and added to ClubData NameTextBox.Text = y.Name; NatTextBox.Text = Convert.ToString(y.Nationality); if (y.gender == 'm') MaleRadioButton.Checked = true; else FemaleRadioButton.Checked = true; WeightTextBox.Text = Convert.ToString(y.weight); AgeNumericUpDown.Text = Convert.ToString(y.age); // more stuff here } private void textBox1_TextChanged(object sender, EventArgs e) //Code for Name text box { OurDataList x = new OurDataList(0); //Name of the data list x = (OurDataList)ClubData[currentMemberShown]; x.Name = NameTextBox.Text; ClubData[currentMemberShown] = x; OurDataList y = new OurDataList(0); y = (OurDataList)ClubData[currentMemberShown]; y.Name = NameTextBox.Text; ClubData[currentMemberShown] = y; } private void label6_Click(object sender, EventArgs e) { } //SAVING private void button1_Click(object sender, EventArgs e) { // CREATE a file for saving (technically a 'FileStream') FileStream fs = new FileStream(filePathName, FileMode.Create); // Construct a BinaryFormatter and use it to serialise the data to the stream. // this "serialises" the ArrayList into binary (i.e. not to human readable text file) BinaryFormatter binFormatter = new BinaryFormatter(); // Write the file to disk binFormatter.Serialize(fs, ClubData); // Close the file fs.Close(); } private void AgeNumericUpDown_ValueChanged(object sender, EventArgs e) { OurDataList x = new OurDataList(0); x = (OurDataList)ClubData[currentMemberShown]; x.age = Convert.ToInt32(AgeNumericUpDown.Value); ClubData[currentMemberShown] = x; OurDataList y = new OurDataList(0); y = (OurDataList)ClubData[currentMemberShown]; y.age = Convert.ToInt32(AgeNumericUpDown.Value); ClubData[currentMemberShown] = y; } private void MaleRadioButton_CheckedChanged(object sender, EventArgs e) { } private void FemaleRadioButton_CheckedChanged(object sender, EventArgs e) { } private void WeightTextBox_TextChanged(object sender, EventArgs e) { OurDataList x = new OurDataList(0); //Code for Weight x = (OurDataList)ClubData[currentMemberShown]; x.weight = Convert.ToInt32(WeightTextBox.Text); ClubData[currentMemberShown] = x; } private void NatTextBox_TextChanged(object sender, EventArgs e) //The try catch method is used to act as a safeguard and prevent any code that wasn't work to not have a adverse effect on the overall program { OurDataList x = new OurDataList(0);//Code for Nationality x = (OurDataList)ClubData[currentMemberShown]; try { x.Nationality = Convert.ToChar(NatTextBox.Text); } catch { x.Nationality = ' '; } ClubData[currentMemberShown] = x; //Adds current member into Club Data array } private void ClearBtn_Click(object sender, EventArgs e) { } private void LoadBtn_Click(object sender, EventArgs e) { // OPEN file for loading FileStream fs = new FileStream(filePathName, FileMode.Open); // Construct a BinaryFormatter for de-serialisation of data from the stream. BinaryFormatter binFormatter = new BinaryFormatter(); // Read the file from disk ClubData = (ArrayList)binFormatter.Deserialize(fs); //Close the file fs.Close(); currentMemberShown = 0; ShowCurrentMember(); } private void textBox4_TextChanged(object sender, EventArgs e) { } private void CheckBtn_Click(object sender, EventArgs e) { } private void SortBtn_Click(object sender, EventArgs e) { ClubData.Sort(new NameConparer()); currentMemberShown = 0; ShowCurrentMember(); } private void PreviousBtn_Click(object sender, EventArgs e) { --currentMemberShown; ShowCurrentMember(); } private void NextBtn_Click(object sender, EventArgs e) { ++currentMemberShown; ShowCurrentMember(); } } }
As do I. I tend to do the same for the other types, too. So `Int32` not `int`, `Char` not `char`.
Well, this **is** the best practice recommended by Microsoft. Hate, that Resharper tries to screw all my static mambo, but: *ain't nothing gonna break my stride ♩ ♪ ♫*
You shouldn't create an object when you can use a primitive edit: yeah that's the case in java not C#
What font is that?
I second this, just look at the time to brute force password under different requirements. 7 characters vs 8 vs 9, character set size, etc. Just one extra character or character set can make it exponentially harder to crack .
Yeah, but badly.
Yep. Minimum length and done. Then just check for common words, like "your password cannot be 'password'"
I'm guessing at Consolas. Personally, download DejaVu Sans Mono if you want a really good development font.
Fall-through from C was disallowed because it's such a common source of bugs. You can fall through by using `goto` if you really need to.
Indeed! Why the hell would he only allow letters and numbers? Does he want the passwords to be unsafe? 
Yes. File.Copy(sourceFileName, Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory), Path.GetFileName(sourceFilename))) Places sourceFilename (for example c:\temp\oranges.jpg) onto the desktop. edit: If you want to use a image as a desktop you will need to get a little (a lot) more dirt under your fingernails. As far as I know there is no built-in function in .NET to do it (but there is maybe a nuget package?) To do it yourself you would use the function [SetSystemParametersInfo](https://msdn.microsoft.com/en-us/library/windows/desktop/ms724947%28v=vs.85%29.aspx). As you maybe can see, this is not a .NET function, but rather a part of Windows' native C API. So we need to create a .NET wrapper method (called Platform Invoke, or P/Invoke). This is done (usually, there are more ways to Rome) using `[DllImport("user32")]` which tells C# (and .NET) that this method is an external method that points to a method in User32.dll's function table. The method must be `static` (no instance of the owning type is required), and it must be `extern` (telling C# to not expect a method body). And then it requires a little bit of knowledge about the Win32 API to transform. Though in this case it's fairly simple. BOOL WINAPI SystemParametersInfo( _In_ UINT uiAction, _In_ UINT uiParam, _Inout_ PVOID pvParam, _In_ UINT fWinIni ); Into this [DllImport("user32")] private static extern bool SystemParametersInfo( uint uiAction, uint uiParam, [In]string pvParam, // Despite it being declared as In/Out we use just [In] since we don't want to marshal any return value in our case. uint fWinIni ); From the documentation we know that uiAction should be `SPI_SETDESKWALLPAPER` (which is 0x14 in value) and this doesn't indicate that it needs any parameters, so uiParam must be 0. The fWinIni indicates if we want to persist the change or not. For this we say "Yes!" and pass 3 (Update = 1, Broadcast change = 2, both = 1 + 2). We should be able to call this method like this: SystemParametersInfo(0x14, 0, @"C:\Documents\Oranges.jpg", 3);
&gt; It's prompting the question in a console window with the first line the first line only writes something to the console. it doesn't know that it's a question or a sentence or anything, it only takes the string between the quotes and sends it to the console.
Hello there. How can I display the SQL query that results from a linq statement? I've seen it in blog posts but I don't know how to do it. Thank you. 
There's a HaloSharp NuGet package that should ease the use of the API. You can view the code [here](https://github.com/gitFurious/HaloSharp). Doesn't really answer your question, but you can use the library or at least check out how it's done there.
Hey Sorry I have for all of the posts, i have finally sorted it but am unsure how to bind these functions to the grid view? Thanks 
have you tried removing the Route Attribute from the GetLocations method ? Then try this again : GET https://myapi.com/api/locations/GetLocations?id=25131&amp;start=1446595200000&amp;end=1448538202901
I fixed it! See https://www.reddit.com/r/csharp/comments/3uc72i/issues_with_webapi_and_angular_call/cxdo3cm Didn't realise this was how WebApi wanted it forming, not worked with it before.
There you go: using System; using System.Collections.Generic; using System.Linq; using System.Text; namespace TestApps { class Program { static void Main(string[] args) { //Suppose that you save the date in the file that you have, you just have to do this. var datesInFile = new List&lt;DateTime&gt; { DateTime.Parse("2015/11/26"), DateTime.Parse("2015/11/27"), DateTime.Parse("2015/11/28"), DateTime.Parse("2015/11/29"), DateTime.Parse("2015/11/30"), DateTime.Parse("2015/12/01"), DateTime.Parse("2015/12/02"), DateTime.Parse("2015/12/03") }; var maxDate = datesInFile.Max(); var minDate = datesInFile.Min(); Console.WriteLine((maxDate - minDate).Days == 7 ? "Congrats you did all your exercices" : "Oh oh you lazy fuk..."); } } } 
OK thanks for the reply. :)
I was using glimpse for this example.
Since it was from pre-release through about 2009, with only a brief revisit in 2013, how about "what feels like a decade, since WPF and I go back nine years." Better? You know what I get from reading the sub these days? Homework questions, random scripting idiots, butthurt about favorite tools not being perfect, and pedantry. Fuck it, I'm out.
What are you trying to do? The node &lt;Attachment&gt; contains binary code that corresponds to a .pdf file? Those 20 something character does not look like they would translate well into a .pdf file?
Never thought i would meet a white supremacist programmer 
http://stackoverflow.com/questions/1412863/how-do-i-view-the-sql-generated-by-the-entity-framework
Wow thanks a lot! I'm saving this for future reference as well. I love the messages at the bottom by the way haha.
This is a little too complex for what I've learned so far, but I very much appreciate your help. Saying as I'll be doing C# as part of my course for the next few years I'll save this and I'm sure I can use this to help me in the future, thank you!
I've found that and I just didn't understand how to use it so I decided to to learn it thru trial an error and I got it to work the way I was doing it finally, thanks tho 
Damn, that's interesting. I usually keep that kind of programming articles for my pauses at work, but these ones got me hooked. Simple and clever solutions to real developing problems. That being said, I've never had any interest in functional programming, so I wouldn't ever could have thought of that all.
I have not looked at this closely, nor tried it (because I don't have my Surface Pro yet), but I find it intriguing. Maybe it's in there, but what about the possibility of making it fully configurable instead of just hard-coding it to the "common functions"? Also, can it distinguish between single- and multi-touch? That would give you greater context for popping up your menus.
Sunderland uni? I think I've pretty much got it sorted now, it was a massive pain in the arse but I've eventually figured it out, thanks though :) My code's at like 600 lines now, so I REALLY need to try and make some functions if I have time.
It's all within reach. The configuration can be done via VS settings, so that everyone can customize it in "Options" window. I hard-coded it because it's less work and to encourage early discussion about available actions. It's possible to detect multiple touches - initially the control was brought up by a single three finger touch. The code that does it is recorded in the commit history.
Since we are all going to sunderland uni and struggling with the same thing, mind if someone can help me here?
Is it the the two calls to `String.IsNullOrWhitespace` you are calling duplication? If so how would you refactor?
Not the OP, but probably with a method like void Validate(string input, string inputName, int maxLength, string regex = null) { if (string.IsNullOrWhiteSpace(input) || input.Length &gt; maxLength) ... } or something similar. I don't really like the name `Validate`, but I'm lazy. 
That's a genuine question, not a sarcastic comment: what are the applications/uses of this?
The code I posted was a refactored version. Compare my version of the constructor to the original here: public Customer(string name, string email) { // Validate name if (string.IsNullOrWhiteSpace(name) || name.Length &gt; 50) throw new ArgumentException(“Name is invalid”); // Validate e-mail if (string.IsNullOrWhiteSpace(email) || email.Length &gt; 100) throw new ArgumentException(“E-mail is invalid”); if (!Regex.IsMatch(email, @”^([\w\.\-]+)@([\w\-]+)((\.(\w){2,3})+)$”)) throw new ArgumentException(“E-mail is invalid”); Name = name; Email = email; }
How are you opening the file? It sounds like you're creating a new one each time, and overwriting the old one.
+1. Good've done better with this example
I feel like hoisting isn't specific to loops. I thought it had more to do with the compiler moving declarations around to the beginning of their scope (for JavaScript the top of a function, c# top of a block).... It's problematic in interpreted languages sometimes if you aren't careful.... Compilers will frequently throw errors in the situations that an interpreter may not. Additionally, the example of array.length isn't a great one because I'm quite sure that it's a property and arrays have a fixed size.... So..... A call to length isn't calculating anything..... Though I suppose the concept would make sense in other contexts. Generally.... This post gives me a weird feeling. I could be way off base. Edit: so apparently hoisting can mean different things given different context... Which makes sense I guess. 
Shhh, your Java is showing...
Some buttons in Visual Studio are small and hard to touch. But mostly it was a fun project I did when traveling to explored the internals of Visual Studio
Thanks! Hope it works, I haven't tested it on a high DPI screen.
You don't stop at just writing bad but working code. You break down the problem into smallest steps you can, then write a test for the next step BEFORE you have written the code that does it, *then* you write the code under test to make the test pass, *then* you refactor that code until you have something you are happy with, *then* you write the next test. After a while you'll learn where the right balance between dogmatic and pragmatic TDD is. There is so much information available out there for TDD, especially for beginners, that you really, really do not need to ask us to sell it to you. That is lazy.
Bad code is usually harder to test, so the testing itself creates a pain point that gets solved with good code. This is a very general statement. It's entirely possible to write good code without tests or bad code with them, but it works as a rule of thumb.
Bad code that has accompanying tests is better than bad code without. And maybe even better than decent code without. There's two primary advantages. First - and all else being equal - your code will be of a better design if it's testable. Second - tests are also about risk reduction. You can think of tests as protection against future regressions/bugs.
I work on the Visual Studio team - I just wanted to let you know this looks really neat and I'm excited to see where this goes!
Not if you know what you're doing. 
Assuming you're using the `Process.Start` method, I believe you can use the [`ProcessStartInfo.StandardOutput` property](https://msdn.microsoft.com/en-us/library/system.diagnostics.process.standardoutput%28v=vs.110%29.aspx) to read its output.
I've often seen this pattern called "microtypes". I've used it a lot, you do need to be very diligent in making sure team members adhere to the ideal, sometimes it is difficult to break habits.
Welcome! My mission complete.
Since you are learning new thigs, it might be good to try out Json.net for storing state in json files: http://www.newtonsoft.com/json/help/html/SerializeWithJsonSerializerToFile.htm http://www.newtonsoft.com/json/help/html/DeserializeWithJsonSerializerFromFile.htm 
Strong nationalist. Japan's outdoing us in skills right now.
HIS VARIABLES SEEM TO RESET ONCE THE PROGRAM EXITS.
I'm taking it further over Christmas! https://www.reddit.com/r/dotnet/comments/3smv59/please_help_id_like_to_learn_how_to_optimise_this/cxej8aj
Looks sick, i got a surface pro 3, ill test this today!
No, there is no such functionality and it would go against the principles of OOP. When you need something like this, then often composition is what you want, not inheritance.
&gt;I feel like hoisting isn't specific to loops. Yes, JavaScript prevails in that field and uses the term in the way you described. In other languages like C#, Java, C, C++ it has Loop-invariant code motion meaning. &gt;Additionally, the example of array.length isn't a great one Agreed. The word "calculation" isn't the right one with array.Length. The hoisting here is to avoid unnecessary read of the field from the main memory at each iteration.
&gt; Is there a way to make all the methods and fields private so I can only set the properties of the button in the constructor? Your base class should never depend on the derived at all unless it's abstract... You can use an abstract class or virtual methods to enforce certain behavior in derived classes, to an extent. But best case scenario is that the base class cares almost nothing about what derived classes do as long as they implement any abstract methods. You could have an abstract method that "Gets Button" and call it in the constructor from the base class and assigns it to a private field. 
I don't like how the listing of fields to validate is being moved to the controller. Perhaps these fail checks could be moved to the Customer class? [HttpPost] public ActionResult CreateCustomer(CustomerInfo customerInfo) { Result&lt;Email&gt; emailResult = Email.Create(customerInfo.Email); Result&lt;CustomerName&gt; nameResult = CustomerName.Create(customerInfo.Name); if (emailResult.Failure) ModelState.AddModelError(“Email”, emailResult.Error); if (nameResult.Failure) ModelState.AddModelError(“Name”, nameResult.Error); if (!ModelState.IsValid) return View(customerInfo); Customer customer = new Customer(nameResult.Value, emailResult.Value); // Rest of the method } Also, more general question: Why wouldn't you move the primitive object nullity check from before the assignment to the property setter, reducing code duplication?
Why didn't you include any of this in your post? It says nothing about saving or loading data.
yikes....your code is very confusing to read. Which makes it hard to help you too. I'm going to try my best here to answer your question, If you want some help refactoring to make it more readable, please ask and i'll try my best to help you there. I'm guessing to delete the currently displayed 'person/OurDataList' you want to use something like; ClubData.RemoveAt(currentMemberShown); currentMemberShown--; ShowCurrentMember();
Thanks! Do you want to come in and tell my team this same thing? :)
https://pcaro.es/p/hermit/
&gt; Yes, JavaScript prevails in that field and uses the term in the way you described. In other languages like C#, Java, C, C++ it has Loop-invariant code motion meaning. The general meaning subsumes both of these. It's also used when a local variable has to be promoted to a field in some compiler generated object, in order to implement closures.
You're not understanding this... I'm not inputting "81.5kgs" as the string to be converted, I'm inputting "81.5". That if statement was a workaround that didn't actually work
Because you are calling the pure method `String.Replace` without using the result value for anything. ReSharper would have underlined this call with a blue squiggly. String methods *never* mutate the string: strings are considered immutable by the BCL. edit: otherwise /u/cryo is right about cultures. You should call it a input error if the user uses the wrong decimal separator since you generally cannot assume anything about it. Use double.TryParse instead of Convert.ToDouble. In fact I have no idea why developers use the Convert class at all with the exception of the Base64 conversions.
I didn't mean to be rude, just to clear up his misunderstanding. I'm now using a specific CultureInfo for my country so will update when I've tested it (I don't have the problem locally on my pc so debugging won't help. I have to upload it and see what it does live.
At the moment i'm stuck here - https://gyazo.com/7eadcfe3bd73826df75c7644c162c189 it runs the timer and its working till the first event is handled and the screenshot is taken. then it crashes saying its wrong cast? 
TDD/ Unit tests will save you time later on. Just because you're able to retest logic a lot easier after refactoring. 
When you start working on legacy code that was developed by some other guy that left the company, you'll have to be very careful about the changes you make into that code. That's code that you don't know and that will take some time for you to grasp. At that time you'll be thankful if he left tests so that you can have confidence that your changes didn't break the build. Always think about the next guy who's going to have that painful task of start working on code that was built by someone else and that will most likely have a very different thought process. My point is: tests and code comments are a mark of a good professional.
I [shipped](https://www.reddit.com/r/dargon/comments/3ugpyb/dargon_alpha_builds/) a League of Legends modification installer named Dargon. You can check out its source code [here](https://github.com/the-dargon-project/dargon-root). Some interesting stuff over the last week: * Revamped project structure. People were getting hintpath build errors when pulling our code and pushing after an `Update-Package -reinstall` would break someone elses' build =(. Anyone know a better solution? * Simplified deploying our multi-process application during development. [(Source)](https://github.com/the-dargon-project/dargon-root/blob/master/dev/start-nest-core-and-client/Program.cs). Basically, you can [use reflection](https://github.com/the-dargon-project/dargon-root/blob/master/dev/client-bundle/ClientBundle.cs) to locate a referenced assembly, then (assuming assembly-name == csproj name) find its project directory. * Experimented with booting the CLR from C++ code. [(Source)](https://github.com/the-dargon-project/the-dargon-project/blob/master/DargonLibCpp/src/clr_host.cpp) [(Picture)](https://pbs.twimg.com/media/CUpOjTOWIAA25cx.png:large) and writing interop code in C++/CLI. Tl;dr: It does all its work in-memory via api-hooking. I'm looking to move the busy work to C# code (easier maintainability) and hope there's not much performance impact \^_\^. Btws, if you're looking for an open-source project to contribute to, we need a lot of help :P
i shall try this on monday at work and try and get some more info from it. wb is the webbrowser object.
Nice work!
It work between my two computers on my lan, i'll try it on aws and azure . Thank you :) 
I released an open-source tool to unlock 'locked' files or folders that cannot be deleted/renamed/copied. It's called DeadLock: http://codedead.com/?page_id=822
Don't know anything about c# at all. Having said that, where is wb declared? Outside that function? Because wp gets disposed of at the end might have something to do with it breaking after the first time. Might need to declare wp inside the function.
It also seems you are using while() loops when in reality the whole program should probably 1 while-loop and the while(MenuChoice==X) are supposed to be if(MenuChoice==X). This way everytime the loop reaches it starts, its gonna print out the options and read the input and do appropriate actions. Then on the next iteration same thing (unless the user picks Exit where you can simply type "break;" or put in the while(MenuChoice != 5) meaning while the user havent put in 5 as a menuchoice do another iteration.
Try putting the client on your computer and the server on a hosted vps. If it works fine, then I'd blame your router or isp. Have you tried removing the router and connecting directly to your modem? If it fails there, then it's probably your ISP.
Unless requirements constantly change (which they do) and your constantly updating your unit tests to reflect new requirements. So the original set of unit tests are no longer relevant and were just an expense and maybe retested the original logic once or twice. I forget who said it but if a unit test is written and never fails in its life then technically the cost to write it was a waste as the code is thrown out. yes you could argue it helped you think through your business logic, which is true for non trivial things but in my experience a lot of unit tests test trivial use cases and the cost to write tests that test non trivial use cases require building a architecture that supports extensive mock and as well as adding a great deal of complication to your stack to setup the mocking. I'm not saying unit tests don't have their place, in highly critical components they are almost a must but I think religion of TDD unit tests everything even when there is zero cost benefit of doing so. 
TL;DR It know because of how it is.
&gt; for (count; ArrayA.Length &lt; 100; count++) What's the point of the useless initialization statement in the for loop?
It's useless but it shows the point that you don't have to initialize the variable there you can use existing one.
 Soundplayer player = new Soundplayer(Properties.Resources.SOUND); Where SOUND is the resource name of your sound file, this shouldn't be a path.
Thank you!! For some reason that was only thing I didn't try
wb is declared at the top with the timer and config. 
the first thing you *should* try every time is use google when you have a question, and try to put together the pieces that you find. I know that it's easier to post questions to reddit, but you need to learn putting together the "lego pieces" yourself :)
You don't even have to have an initialization statement: for (; ArrayA.Length &lt; 100; count++) works just fine as long as count has been declared and initialized before you get to this statement.
Thanks - don't roll your own graphs, the databinding aspect of it is a headache ontop of the layout and design. Some graphs are really slow and memory hogs like you wouldn't believe. These guys are good: http://www.scichart.com/
Unfortunately, this app requires a sound feature of some kind, which is kind of related to UI. It will be very different if they make a web app than a WPF or Universal Windows app. But you're right, there's lots of architecture that is agnostic to the sound feature. 
I don't want to do web, maybe a feature if you're online to search for a song online maybe on YouTube or something, but that is wish list. I want to do a Windows app, what are my options?
Like sasken said, worry mostly about the internal architecture first. You'll want a rudimentary and temporary UI for now, so choose whatever you think you can hack stuff out in the quickest. (For me that would be winforms.) But be sure to separate your UI code from your internal code so you can build your interface later! A sound library I've used in the past is NAudio.
Then why did you try to prove to me white skin was better than dark skin lol?
if this is a homework thing and you have to use file streams, then there are decent answers here. If you're not tied to streams as a requirement, then i'd look at some options like; 1. sqlite (single file database) &amp; dapper (simple object to database entry mapper) 2. csv format 3. (de)serialization into xml/json formats option 1 offers most flexibility, but is probably biggest learning curve, especially if you're not familiar with databases.
Thou shalt not read a known file from disk without checking if the file actually exists first. Otherwise embed it as a resource. 
Right, I missed that the result wasn't even being used. I advised against using such a replacement in the first case, though.
Thanks for the detailed reply. Is something like the following then closer to what I should be doing ? In terms of treating the driver as a singleton, in future I might be hoping to do parallel execution of the scenarios. So I'd want a completely new driver for each and every test that's run. // Feature Feature: As a user I need to be able to log in To do what needs doing Scenario: Log in When I navigate to the "login page" And I log in as "username" and "password" Then I should be redirected to the "home page" // Specflow Steps StepsConstrcutor() { IWebDriver driver = new IWebdriver(); LoginPageModel pageModel = new LoginPageModel(driver); } ("When I navigate to the "(.)"") WhenINavigateTo(string p0) { pageModel.NavigateTo(p0); } ("And I log in as "(.)" and "(.)"") AndILogInAs(string p0, string p1) { pageModel.Login(p0, p1); } ("Then I should be redirected to the "(.)") TehnIShouldBeRedirectedTo(string p0) { assertAreEqual(pageModel.GetPageTitle, p0); } // Page Model Class LoginPageModel { private IWebdriver driver LoginPageModel(IWebdriver driver) { this.driver = driver; } public void NavigateTo(string url) { driver.GoToUrl(url); } public void Login(string unsername, string password) { driver.FindElement(By.Id("usernameInput")).SendKeys(username); driver.FindElement(By.Id("passwordInput")).SendKeys(password); } public string GetPageTitle() { return driver.Title(); } } // Driver Setup Class DriverManager { private IWebDriver driver; [BeforeScenario] void SetupDriver() { IWebDriver driver = new IWebdriver; ScenarioContext["driver"] = driver; } [AfterScenario] void TearDownDriver() { driver.dispose; } } 
In my definition the page object is a composition of components. A login page knows that there are two TextBoxes that have the name "txt_username" and "txt_password" and a Button that is called "btn_login". The PageObject would now look for the described HTML elements and would have to instantiate the concrete component class. This component would encapsulate the access to one specific WebElement instance that was found by the selector.
Can you give me an example of this in action please ? I'm just struggling to understand how this is implemented. 
Windows 10 universal app
&gt; So is there much value in having the page class at all when the steps just call the methods and not just having everything in the steps ? To paraphrase Simon Stewart (Selenium developer) "If you have Selenium calls in your stepdefs, you're doing it wrong". A big part of the value page objects provide is in maintenance. Let's say you change the way a page behaves: Without page objects you might need to dig through a dozen files to update all the tests. With page objects, you open one file, make a change and call it a day. You page objects should provide a layer of abstraction that exposes WHAT the page does not HOW it does it. For example: page.log_in_as(user, password) instead of page.username = user page.passowrd = password page.login_button.click Likewise your gherkin should be [declarative instead of imperative.](http://latentflip.com/imperative-vs-declarative/). The idea being that your tests should capture the requirement (The user can log in with a valid username and password) not the implementation (The user enters this here and that there, then clicks this button). 
There are multiple problems with your code which could cause errors, for a start: 1. When working with sockets, one Send call does not guarantee that whole message will be received in one Receive call - because of this you need to implement message framing. 2. Connect, Send and Receive can fail which would be indicated by thrown exceptions. Put try/catch clauses around those operations and log the error messages. These can help you find out what's wrong with network communication. You might want to take a look at http://blog.stephencleary.com/2009/04/tcpip-net-sockets-faq.html (it also explains message framing) 
Unregistering and re-registering helped - thanks for this!
Already fixed it. Thank you. At the end I just did this: this.Hide(); Main mainScreen = new Main(this); mainScreen.Show(); And then created a new variable in the other form that was equal to my last form
No limitations on apps or size. It has the same functionality as a business subscription as far as I know. I'm sure they'll tell you if you email them.
Thanks, I appreciate that.
Always a pleasure to help out a fellow test enthusiast. :) I hope that the concept is understandable now. I left out all the syntactic sugar and additional complexity to show how the basic concept works out.
&gt; It's true, but String.Format() would have ended up calling .ToString() internally regardless, so we're not introducing any new allocations here. Our fix has allowed us to avoid the two unnecessary boxing allocations, but the allocations caused by .ToString() cannot be avoided. Actually the code in that example will call the `IFormattable.ToString(string, IFormatProvider)` method 2 lines up in the source (`int` is `IFormattable`). It doesn't matter for the type `int` because `int.ToString()` internally calls the same implementation as `((IFormattable)int).ToString(string, IFormatProvider)`, but it could matter for user types. 
It may have been a better idea to pass an object to the new form vs passing one form to another. If you need one form to affect the actual visual state of another, then I would look into a pattern like mvvm. Having one form dependent on another is pretty nasty
What error do you get when it breaks? 
Thread.Sleep(100); // scale accordingly
Interesting. Is there a githib repo for this? I'm just curious what the source code look like for unlocking a file.
Quite right that the platters will always spin at full speed, but the other parts like the heads, the I/O, the onboard buffering chips etc only get exercised when data is being read/written. Similarly, you're right in that nothing you're going to throw at the drive is going to do much to stress it outside of that first factory format, but OP is a bit vague in what his dad wants him to do. 
Still breaks. Unfortunately. Have not tested higher. But might give it try later! Thanks for possible lead!
You haven't specified what format these 3 columns take in your .txt file. Such a file is just a stream of characters. Let's assume, as an example, the (common) case that the file is formatted such that: * each row is a line in the file (sections of text separated by newline characters), and * each column in each row is separated by some other separator string (commonly a comma, semicolon, tab, space, etc.). In this case, you basically need a way to: * read the file line-by-line, * for each line, split it into substrings for each of its columns, * parse each substring into a double, and * store each double into the appropriate data structure. I recommend you research each of these pieces individually.
[removed]
Ok I'll try this process. And for the file location, I found the file, right clicked and went into properties. Copied and pasted the file location into my code and added \FileName.txt . I printed out the file then but nothing printed. Is my location incorrect?
I'm going to assume the issue here isn't that you actually need to break the drive, but instead that your dad has asked you to "try" to break it and wants you to write code to that end. Maybe this is the wrong approach, but it sounds like something I might tell my son, expecting him to learn more from failure than success. 1) multi-thread 2) Try big files versus tiny files. 3) how many zero byte files can you write? 4) what happens if you make a really large file and then kill the thread that's writing to it? Can you force some kind of corruption this way? 5) formatting, partitioning: can you write a program that will partition the drive? I have no idea how involved this would be. How many partitions can you get in there before things just stop working? 6) Firmware/ drivers. Can you get low-level access to the drive and REALLY screw things up? (I don't know either. CAN YOU?)
Not sure how to go about loading a file in C#. Google and Stackoverflow truly are your friends. You might have to save your code in the same directory as the text file, I really don't know to be honest.
this should be close to what you're looking for; const string filename = @"C:\somepath\sometxtfile.txt"; List&lt;double&gt; columnOneData = new List&lt;double&gt;(); List&lt;double&gt; columnTwoData = new List&lt;double&gt;(); List&lt;double&gt; columnThreeData = new List&lt;double&gt;(); IEnumerable&lt;string&gt; lines = File.ReadLines(filename); foreach(string line in lines) { string[] columns = line.Split(','); if (columns.Length != 3) { continue; // skips this line } columnOneData.Add(Convert.ToDouble(columns[0])); columnTwoData.Add(Convert.ToDouble(columns[1])); columnThreeData.Add(Convert.ToDouble(columns[2])); } edit: forgot to format string to double type
Brilliant. I could never have done this on my own thank you so much.
If your location was incorrect, I'd expect your program to throw an exception rather than print nothing. Although, if you copied the folder and pasted it directly into a "string", you might have a problem. See, in C# the '\' character is an escape character, meaning it goes with the character after it to make a special character. To actually put a '\' in your string, either start the string with an @, as in @"string\with\backslash", OR double up all your '\\\'.
Seek out tutorials like this one, which shows you how to do file reading: https://www.youtube.com/watch?v=FmUAxoyQ3DM
Ugh, wow.
Tried this and it worked. Thanks a million!
I have a Public Class called 'User' where the input will be stored. I thought about creating a: bool loggedin == false; and after that somehow compare the login information to the already stored one and see if they match, if they do, I'd set the loggedin == ture but I don't know how to compare pairs of information (email + password) and how to work according to that.
Assuming the program opens to a window with two text boxes, and a button. The button click event takes values of two text boxes and assigns them to two variables. Then pass that variables to a method to compare to your memory database of users/passwords OR hardcoded values. I don't know how much c# knowledge you have, so hard for me to give you an useable example. But the simplest is to hard code the username/password. Then compare values, and store if they're valid or not. Something like... var enteredUsername = txtUsername.Text.Trim(); // txtUsername is from form var enteredPassword = txtPassword.Text.Trim(); // txtPassword is from form bool isValidLogin = verifyLogin(enteredUsername, enteredPassword); private bool verifyLogin(string username, string password) { // These are hardcoded values... normally would be from database const string validUsername = "john@doe.net"; const string validPassword = "god"; if (username == validUsername &amp;&amp; password == validPassword) return true; return false; } Hopefully something like that, gives you an idea how to do your own. As now isValidLogin is your test to see if user has access to other areas of the program. Or you could just deny them right from the login window, with an message that their credentials are incorrect. 
Well, good luck. S22.Imap's code won't work reliably because it assumes you will get an EXISTS response for each and every new message arrival, but that is not necessarily the case. You may receive multiple message in a single event.
Told my dad that before he told me to try and break it... He wants total failure.
It seems that he wanted to compare to a parallel array so he could just use the username to find its position in its array and then do if (username[position] == enteredUserName &amp;&amp; password[position] == enteredPassword) return true;
Throw it down some stairs or hook it up to a car battery then. All you're going to do trying to do it in a computer is burn a ton of electricity and time for no good reason.
Var x = foo() and then you can store x on a file if you want ?
Thanks a lot, now it seems much easier. I'll try to implement something like you showed me. Lets see how it turns out.
Public and private are not your only options. I would suggest looking into the internal, protected, and protected internal access modifers. From what it sounds like, protected might be what you're looking for. https://msdn.microsoft.com/en-us/library/ms173121.aspx
Hey, thanks for the input much appreciated Im still at a loss about some things For say a comobox, would you expose a collection or add / remove methods for the view ? How would you create an instance of a view? basically how would a program.cs main() look like ? Im trying to figure out if i should be creating a presenter that creates a view or create a view that auto binds to a presenter.. so confusing
I know I'm late to the party, but i'm going to respectively disagree with point #2. Granted, you have much more experience than I, but it is my understanding that sometimes you do not want to handle all exceptions, particularly in areas where bugs should *never* occur. In those situations you normally want a loud and hard fail so the user knows something went wrong.
No problem. I used to somehow hit the combination to disable Outlining and it would drive me nuts that there's no combo to enable.

mono_dl_open_file isn't exported as [icall](https://github.com/mono/mono/blob/master/mono/metadata/icall-def.h), so you can't do that.
It's not about the IDE it's about creating mobile applications in C# running on iOS and android. It's not free normally, but there is a completly free version for students.
You're attempting to access a property named "qscriteria" on the instance 'h'. Since it doesn't have that property, it throws the error. What are examples of the values in qscriteria and qsvalue? What class is Model? I am going to make a presumption that you're trying to do a search where qscriteria contains a property name (such as 'id') and qsvalue is the value you're wanting to match (such as 51). So you want to only get the model entires that have id == 51? The advanced answer to that usecase is 'reflection' but that is dark magic and quite complicated. The real answer is that you kind of can't do things this way. You would need to have a function that takes h, qscriteria, and qsvalue, then runs a select statement on all expected qscriteria options and test h for each. For example (and I assume h is the Movie class because I need something): private bool Match(Movie movie, string property, string expected) { string value; switch(property) { case "id": value = movie.Id; break; case "title": value = movie.Title; break; case "genre": value = movie.Genre; break; default: return false; //in case the qscriteria isn't valid } return (value == expected); } Of course, you may want to do some null checks, maybe worry about things being different cases (lower vs upper), things like that. There are some dangers in this approach, since this method will need to be updated whenever your class gets updated (new properties). Using this approach, you'd only change things slightly in your original code: var data = Model.Where(h =&gt; Match(h, qscriteria, qsvalue)).ToList();
First, because it means you're doing a synchronous wait on an API meant for asynchronous tasks, which means you might be blocking a thread that shouldn't be blocked (e.g. the UI thread; blocking it will kill your app's responsiveness). Second, because there are some contrived scenarios in which it can cause deadlocks.
You are correct, this is what I'm trying to achieve. This is happening in a view as a search refinement. In my case the Model is an IEnumerable passed from the controller, qscriteria is a field name in that list and qsvalue is obviously the value I want to filter on. To take it up a step above, these values are coming from two drop down lists and a text input which is used on 7 different pages, each with different options for qscriteria. In my use case, the option values are the actual field names for each models list. That being said, a switch statement might be overkill since I can simply assign the value of qscriteria as the field I want to sort on. To further complicate the coding, my form also contains a comparison operator drop down which I test in a Switch statement to assemble the query (Contains, equals, StartsWith, and EndsWith) So essentially, once I get this in place for a single view, I will just C&amp;P the code to the other 6 and change the Drop Down list values to whatever fields I want to be able to sort on. I know it's ugly but this is an internal service tool and it's subject to change. I can tighten it up later to common helper methods but for the time being I just need it to work so people can start using it.
Not sure if that's what you need, but to fold all code blocks use ctrl+m,o
Thanks :). I'll take a read
`await` and `Wait` are not the same thing.
You replied to a guy that said not to use `wait`. It certainly seemed like you thought they were they same. It was a confusing comment. You may have known that, but other people who don't know about it may not have realized they were different.
k
What kind of error are you getting?
&gt;&gt;should never occur The issue here is the word "should". The problem is that we cannot **absolutely** know if the code is PERFECT. And anything less than perfect **needs** exception handling. I had a piece of code that was to loop from 1 to number of rows in a grid. Easy enough... and yet, somehow, sometimes, the loop would keep going even after it got to the end. Yes I have been doing this a long time, but also I can be wrong about any number of things. (understatement) Don't let your inexperience make you think you know less than me, you could be really good, you could know things I don't. Exception handling is one of my [Rose Rules of Development](http://www.blissgig.com/default.aspx?id=22) because there is an infinite number of situations where the code can screw up.
Great, thank you! That's really valuable to know. It's an interesting point you raise about receiving physical items as opposed to just digital material. We'll consider how we can tackle this. Maybe a load of high quality merchandise for lower-value rewards and Addons-extensions to the physical kit for higher-value rewards. Any thoughts on this? Does merchandise attract people or does it receive a similar poor reaction? Lastly, have you come across any other good crowd funding platforms that might be more appropriate?
I'd support this. How about a USB stick that has the docs, videos and source on it? Another reward could be beta access as a first look view of your development process. This would give people early access to build out their own features as your project gets further along. If you can get a deal from Microsoft for the OS a VirtualBox image with a full dev environment would be an especially sweet reward. I didn't know about FlingOS until you posted this, glad you did, I'll check it out. BTW, if you do a Kickstarter, post a video and make sure the production quality is good. I bet the hardest part is answering the question, "Why should I support this?" I mean, what does a backer get besides knowing they helped a team further their project which produces no consumer level goods or services? I suppose supporting education is a benefit. Seems like your demographic is developers, I guess your rewards would have to appeal to them. 
The USB stick and beta access are great ideas. I don't know much about crowd funding. I'm only going by what I've seen here on Reddit. It seems the consumerish products get a lot of love because you typically get the product. Whereas intangible things don't do as well. I'd suggest going through the sub I mentioned to see how similar projects were treated and ultimately did. 
include the System.Linq namespace. Then you can just use the built-in Max() extension method on any IEnumerable. Scrap your Max method - it adds nothing. :) using System.Linq; static void Main(string[] args) { string file1 = System.IO.File.ReadAllText(@"C:\file1.txt"); List&lt;double&gt; Array1 = new List&lt;double&gt;(); List&lt;double&gt; Array2 = new List&lt;double&gt;(); List&lt;double&gt; Array3 = new List&lt;double&gt;(); IEnumerable&lt;string&gt; lines = File.ReadLines(@"C:\File1.txt"); foreach (string line in lines) { string[] columns = line.Split(','); if (columns.Length != 3) { continue; // skips this line } Array1.Add(Convert.ToDouble(columns[0])); Array2.Add(Convert.ToDouble(columns[1])); Array3.Add(Convert.ToDouble(columns[2])); } var maxValue = Array2.Max(); } 
You don't reallocate snakeX/Ybuffer when your snakeSize increases, so it stays at the initial length 10.
I think it would have been easier if I had learned MVC first, but since I came from a Windows Form development background, and then Web Forms development seemed very straight forward. MVC abstracts things to the point it is unnatural to not have a button click event when you have a button. I created this project to document the many unknowns to me using MVC pattern versus Web Forms. Thank you, and think happy thoughts before you reply. 
I do, i ahve this line of code: if (snakeX[0] == appleX &amp;&amp; snakeY[0] == appleY) { appleX = rnd.Next(1, 80); appleY = rnd.Next(1, 26); snakeSize++; snakeX = new int[snakeSize]; snakeY = new int[snakeSize]; }
i added on the bottom after the snakeSize++ two lines updating the snakeX and snakeY snakeX = new int[snakeSize]; snakeY = new int[snakeSize]; But i still have an error, could you maybe run this http://pastebin.com/bcdimqsU in your console application, and tell me what i need to change now? and i will probably try to change the code and make a buffer, but i first want to get the game to work, then work on compressing it into being the most efficient. "You need to walk before you run" XD
Deadlocks... deadlocks everywhere.
What have you tried?
This is really an algorithm problem, rather than a programming problem. You're lacking fundamental computer science basics, so I'd recommend an algorithms book. [This one](http://www.amazon.com/Introduction-Algorithms-Edition-Thomas-Cormen/dp/0262033844) looks pretty popular and has good reviews.
Calling Wait in a code base that uses particular synchronization contexts will cause deadlocks. 
I've started doing something similar by taking postback and Viewstate out of my Webforms apps and replacing refreshes and data queries with Ajax calls to [webmethod] server-side form-level code. It's a little tricky at first sending parameters into the methods, but you'll learn a lot about JSON, encoding, and reading things into dummy classes to make yourself productive more quickly. I haven't moved into Entity Framework or actual MVC work yet, but I feel like my transition strategy to "something better" is on its way. One thing sorely missing from MVC lessons are business case studies that take problems from requirements to design to implementation with the target of an MVC architecture. Most things are all empty cup. I'd love to see more "here were the reqs for our existing system and here's how we took those to our new architecture given the existing system still runs.
I am writing a Windows Shell replacement ([IronShell](https://github.com/IronManMark20/IronShell)) in WPF/C#. The Shell is still very early on, so using it for day to day would be unwise, but I also am working on a [file browser](https://github.com/IronManMark20/Explore10), which is a bit more usable. The idea is to have a metro themed shell that replaces Explorer. EDIT: As requested, [of Explore10, the file browser](https://i.imgur.com/lzC3T5P.png), and [the shell](https://i.imgur.com/Y9ZFLKl.png) 
No technical support. This is just getting to know the license.
So the way I'd start is with a description of what you're trying to do and why, eg: comments! Then fill in the code (or comment each line in your existing code) I'd be doing something like this. Yes, it's wordier and uses more local variables than you really need but when you're confused clarity is way more important than brevity. I've left ... In the important parts for you to fill in yourself since that will help you learn, but I think explaining in comments and with descriptive variable names helps understand what you might be missing. (Apologies in advance for stuff, doing this on my phone) // compare each element against the next in the sequence to find the biggest difference and update these when we find it: double greatestDifferenceValue = double.MinValue; int greatestDifferenceIndex = int.MinValue; // for every element except the last one (which has no "next") for (int index =...;...;...) { double currentElement = ...; double nextElement = ...; double difference = currentElement - nextElement; // if this difference is the greatest then save it! if (difference &gt; greatestDifferenceValue) { greatestDifferenceValue = difference; greatestDifferenceIndex = index; } } 
Good time to learn mvc with vnext out. There will be a bunch of developers needing to learn some stuff again with this latest release
Re your backup app: are you using shadow copies to overcome open files such as psts ? Endpoint backups is my springboard project now. I started off with Cobian and manipulated it's configuration files as I needed to get something out fast (we were in need of central management and deployment via GPO) but as the project progresses I have become more and more tempted to take over the core and play with the shadow copy app. I am also working to integrate with Ad to the point where the server side app creates the GPOs itself to make the app simpler to use.
My most recent rewrite, i haven't put back in vss usage yet. I did have it in a previous write, using AlphaVss library. There was an update, which stripped support for xp and reduced the number of dlls required. But for some reason this update broke everything i had, as i wrote a wrapper around that library. I plan to rewrite the wrapper and reintegrate it into my backup app soon. I am disappointed they didn't update their nuget library, as the newer version only seems downloadable via their website. I've looked for another vss solution, but haven't found one as simple as alphavss's implementation yet. I'd be interested to know if you or anyone knows of a better way to implement vss into a backup solution. 
Your professor is likely going to want the values from the other arrays matching the "max" one from Array2. So in this case, you need to know what element of Array2 contains the maximum element. The easy way to do this based on what you already know about looping through lists and arrays is something like: private int FindMaxIndexOfList(List&lt;double&gt; arrayToCheck) { // Place to save the biggest we've seen so far. Initialize it with a very small value double biggest = double.MinValue; // What index it was found at int index = 0; // Have to check them all! for (int i = 0; i &lt; arrayToCheck.Count; i++) { if (arrayToCheck[i] &gt; biggest) { // Save what we found biggest = arrayToCheck[i]; index = i; } } return index; } And then you can do something like this: int foundMax = FindMaxIndexOfList(Array2); Console.Writeline("Array1: {0} Array2: {1} Array3: {2}", Array1[foundMax], Array2[foundMax], Array3[foundMax]); 
Why are you posting separate questions under two different accounts, with the same code: /u/Rilandi /u/Thenovice1 First problem i solved for you that you copied and pasted. Without any understanding of the solution... https://www.reddit.com/r/csharp/comments/3umv0b/i_have_a_txt_file_it_has_3_columns_with_an/ Second problem you asked and someone else answered for you: https://www.reddit.com/r/csharp/comments/3uqby0/question_max_value_of_an_array/ third problem you asked is this post... and also posted it on this stack overflow post... http://stackoverflow.com/questions/33987493/how-to-calculate-the-largest-slope-using-of-data-points-of-2-arrays-explanatio i can respect you getting stuck and looking for a little help, and i don't know what the rules are on this subreddit, but seems like you're just trying to get everyone to do your homework for you. Which is disappointing to say the least. 
Slightly off-topic, but I'd go ahead and upgrade to 2015 Community. 2013 won't get new upstream features, and 2015 should be completely backwards compatible.
OK. I'll try that then. Thanks.
ill give you some info 2 secs 
Ok I see your problem statement now. Personally I'm awful with payment and interest type calculations, so I don't think I can be much help. You might try re-posting your query and provide that information, along with any attempts you have to create those formulas. I'm sure someone with experience in that area could better help with that piece.
If that's literally the questions, I would respond for those questions that it's invalid code. If the teacher disagrees, it's easy enough to prove. If you want to be sure, then you could add the corrected code and show what the corrected code would show. 
Are you in the same class as [this](https://www.reddit.com/r/csharp/comments/3umv0b/i_have_a_txt_file_it_has_3_columns_with_an/) guy? Your current code looks pretty darn similar to [this](https://www.reddit.com/r/csharp/comments/3umv0b/i_have_a_txt_file_it_has_3_columns_with_an/cxg5pnv) solution in that thread. Anyway, /u/chemass' answer will get the job done but I doubt your professor would want you to solve this problem by just using a built in function. There'd be no learning in that. /u/xampl9's answer will solve your problem just fine and actually shows some thinking. Just make sure that you understand what's going on in the code. Copy/pasting code from the internet is a slippery slope that can lead to trouble if you don't take the time to understand what you're copying. 
You should call it, c you 7am sharp. Or something like that. 
OP doesn't know how to call a function and store the returned value; I don't think he's ready for delegates. OP asks for help storing the result, not the function. 
I know there is a link in the sidebar under the heading "Getting Started" but I prefer to download the full .iso file. I just thought I'd post the link to it, i.e. it leads to a page that gives you the choice to download the full .iso file.
I just thought I'd post the link here. No harm in that.
AFAIK the .iso can be directly selected in the download options. You can either choose to download the web installer (default) or the full iso. It's just a click on the download dropdown. But, as you said, no harm done in posting the direct link.
I understand. How do you you get from the stage of not being able to a do a task like this to being able to though. I have only started coding recently it seems like a large jump.
https://en.wikipedia.org/wiki/Design_Patterns The book contains examples in C++ and Smalltalk, but they are easily adaptable to C#.
Honestly, most of the design patterns are agnostic of the language they're implemented in. Some of them are more applicable to a certain programming paradigm (functional vs oop vs declarative) but most of them carry across. If you find a great source but it's implemented in Java, then those very easily carry over to C#, for example. I would probably recommend plural sight for video courses (but it's not free, which is a bummer if you're looking for free resources). Then there's the [Gang of four](https://en.wikipedia.org/wiki/Design_Patterns) book if you're more into learning via reading, but it's a very very dry book. Head first design patterns is another great book, it's a bit wishy washy sometimes but it's a good way of at least getting you started. One word of warning, design patterns are great but they can very easily lead to the "If all you have is a hammer, everything looks like a nail" syndrome of applying patterns and over-abstraction for the sake of it. 
thanks for the advice. Glad to hear that there is a Head first book. Will give it a try. Thanks again 
Thank you for this. but is there any tutorials on applying some of these features. Just an idea will be helpful
I use [ZXing](http://zxingnet.codeplex.com/) which does the job quite nicely.
Hello there. I'm in the same position as you. I've always used web forms with vb.net. A month ago i started a new project for a client and I decided to transition to MVC with C sharp. I have to tell you that it has been the most enjoyable programming I've done in a while. I am loving C sharp (although I feel nostalgic about having abandoned my old friend Visual Basic) a lot. And the MVC paradigm is a little more difficult but I'm finding the controllers quite convenient. I've already finish one module of the project. Although it is very small I took the time to follow best practices. I learned from the asp.net website and from multiple sources on the Internet. I am using code first for the database. Migrations. ViewModels. Repositories. And for the UI I did myself a favor on this transition and made a budget for purchasing a component suite. Telerik is too expensive. Syncfusion is too poorly documented. DevExpress works great, is well documented, and is only $800 for both the web forms and the mvc components. I'm getting that one. So don't feel desperate. If I could do it in a month taking 3 or 4 hours daily and some weekends, then you can also do it. And at the end you'll feel great because you were able to evolve with the times. 
It's been 25 years since I was in a classroom. I'm glad you think that my code shows some thought behind it. :) :) After a while, you start to learn what the typical homework question looks like. And OP needs to learn how to use the internet for ideas, but not exact code. That is how you get flagged for an honor code violation.
I.. Want this :) When are we gonna see a trial version ?
One possible problem is that you're creating a new Program class object for every save. It may be having unintended side effects. I would get rid of that, and just make the methods static, at least for now. You're also making a new thread inside of the do loop. I'm reasonably sure that's the problem. Make the new thread outside of the loop, and call the save and sleep inside. Edit: Actually, I realize that the code is just opening a new thread every 5 seconds and running once each thread, then ending on it's own. I'm not sure if that's a problem but I would suggest you just make one new thread, and then have a loop inside of Save() instead of just ending.
I meant no disrespect, I can understand why you might not pick up on the homework. I had seen other questions from this person. 
Release will be by the end of the year, but you can already start running the analyzer on your projects: http://files.viva64.com/beta/PVS-Studio_setup.exe
I second this.
Best Design Pattern book I've ever read. Uses real world examples that even a child could understand, it's great. 
PatternCraft should get an honorable mention. :) http://youtu.be/yZt7mUVDijU?list=PL8B19C3040F6381A2
i have been a .net developer from 1.1 and a java developer before that. If you are just starting with patterns then this is THE book to get. there are a lot of great books that you can dive into and get great patterns from but this is where i would start.
I just downloaded the one in the linked post and [it's updating VS](http://imgur.com/XzWPwbX). You can also download an [offline installer](https://www.microsoft.com/en-us/download/details.aspx?id=49989) if that's what you're looking for
Building on that, if you're just looking for the same information returned by IPConfig - adapters, addresses, gateways etc. the sample in the MSDN docs below yields the information. https://msdn.microsoft.com/en-us/library/system.net.networkinformation.networkinterface(v=vs.110).aspx
Finally... "Go to implementation"... shortly after C# 6's : "?."
What if we already have RC1 installed?
RC1 should remain installed. You may need to set dnx-clr-win-x86.1.0.0-rc1-final as your active runtime using the dnx manager command line tool after the install, though. Not sure if the Visual Studio Update 1 installer changes that or not (but it's very possible that it does).
Yes this
this is really useful. thank you for your hard work but i think i will need a couple of hours of work for this to work properly. Thank you very much for changing this project from "hopeless " to "very possible" :) 
There is no asynchronous code here. You should rewrite TestButton to async and never use Thread.Sleep
The installer is the updater. It, you know, *installs* the update.
This kills the resharper
With ASP 4, the code editor context menu contained options to "Go to Controller" and "Go to View". I was hoping that Update 1 would bring that feature to ASP 5, but it looks like that didn't happen. Does anyone know how to get this functionality back for ASP 5 projects?
That would be slick - any chance you've got screenshots available somewhere, I'd love to take a look but (honestly) I'm too lazy tonight to clone/build.
What do you think? I am curious for feedback. :)
I doubt anyone paid for a Resharper license for that feature alone...
Have you tried using ArraySegment&lt;byte&gt; to slice into the buffer? It eliminates a lot of copying, assuming you can use GetBuffer().
Is there any chance that you will eventually support other .Net languages? The majority of our code base (80%+) is in VB.Net and I'd really like to review it with a tool like PVS-Studio.
[My face when I read this.](https://i.ytimg.com/vi/I_JfV0yf4lM/hqdefault.jpg)
I 've just put the server on AWS and It worked ,Thank you so much :)
https://www.reddit.com/r/programming/comments/3uudbn/what_text_books_tell_you_about_inheritance_in_oop/
Nice analysis, how did you create that memory dump image? What tools shows you the links between the nodes like that?
escaping the illegal character with a back slash will work static void Main(string[] args) { string[] CharacterArray = new string[3]; CharacterArray[0] = " "; CharacterArray[1] = "!"; CharacterArray[2] = "\""; }
Thanks!
Ugh, that's going to be really hard. You'd need a new pointer type that's like a weak reference, but with a GC-triggered callback.
Option 2: var verbatimString = @"I said, ""Double the quotes in @ strings, backslashes have no effect.""." We usually use this for paths: var myPath = "C:\\Windows\\Win32\\Drivers"; var myPath = @"C:\Windows\Win32\Drivers"; 
[removed]
Not sure I like the names, but the theory is sound.
I wanted to point out that string[] CharacterArray is creating an array of string objects not char objects. I think you want to do the following: char[] CharacterArray = new char[3]; Now since everything is a character instead of a string you would surround the character with ' instead of ". CharacterArray[0] = ' '; CharacterArray[1] = '!'; CharacterArray[2] = '"';
[MemProfiler](http://memprofiler.com/). My employer wouldn't pay for my copy, and I liked it so much I bought my own license. Worth it. It does have a bit of a steep learning curve, though...
https://www.ebooks-it.net/ebook/c-6-0-in-a-nutshell-6th-edition
http://file.allitebooks.com/20150511/Concurrency%20in%20C-%20Cookbook.pdf
I wish C# allowed the same form as VB: Dim array = {"a", "b", "c"} 
Yes, but "sub" seems to imply a part of the larger array while "slice" implies that you are carving out a copy. But that's not how SubString currently works, so I'm probably going to lose this debate.
wow I'm an idiot. I don't know what I was searching for before but I couldn't find dictionaries as a concept. Looks like they exist. I'll delete this once someone confirms that I'm being stupid.
It's already answered, but just keep in mind putting a \ in front of something will escape it in c#. By escape, I mean if the character is supposed to do something else, putting a \ in front of it will tell c# hey, treat this as a string, not what it's usually reserved for. Using a \ to escape things is pretty common across a lot of languages too. So just be aware of that. Welcome!
So much shame.
To avoid making a new thread...I have another question if you could answer. I'd like to make my dictionary accessible throughout a form...and I always struggle with this (I'm very new if you can't tell). Where in my code would I put it? I tried it with an array, and put it in the form1 area, but it keeps saying the array doesn't exist if I call upon it within a button. I'm sure there's a simple answer, but I can't seem to figure it out. Here's what I have: http://pastebin.com/a90Wtqyk Thanks!
You're declaring variable V within the constructor of the class, which isn't accessible from other methods because it's out of it's scope or "view". Make you're declaration of V at the beginning of the class, outside of the methods, to make them accessible to all methods in the class, then keep you're initialisation of it's data in the constructor http://pastebin.com/PFEMEUiU
To be fair, many developers also don't know about structs and have a hard time doing memory conscious coding in C#. It is always **new** for the win!
ARRAY INITIALIZATION IS SERIOUS BUSINESS. RESHARPER WOULDN'T LET THAT MESS THROUGH.
I have 3 month from 7-pm to 11 developing a cloud based condo management application. https://bitbucket.org/fagro/condo :) 
`public Form1()` is the constructor. In C# the constructor is a method with no return type that has the same name as the class. The constructor is called when the class is created and usually sets up default values and whatever else the object may need to do its job. So if I had a class called `MyClass` with a list of strings inside it, and I wanted to make sure that the list of strings was initialized to an empty set (instead of `null` by default), the constructor would look like this: public class MyClass { public MyClass() { SomeStrings = new List&lt;string&gt;(); } public IList&lt;string&gt; SomeStrings { get; private set; } } If you don't need a constructor, then you can leave it off.
Has it gone smoothly for anyone? Running into the same issues as the RC version had. 
You definitely need to do some basic reading of Object-Oriented Programming, I would take a step back away from forms and dialogs and play with a small console project, get used to making classes, methods and properties, it will certainly help when dealing with WinFoms Also you said you come from python? The constructor is the same as init
Unless you have an SSD. Mine was done in ~1 hour.
The public partial class part is the declaration of the class. It says: this is where my class and its contents start. The 'public Form1()' part is the constructor. It means: this is the code you have to run when my class is created. Maybe you know you can do things like: List&lt;int&gt; someList = new List&lt;int&gt;();. List is a class and it has a constructor like any other class. When you say 'create a new List', the constructor of List will run, doing some scary stuff we don't need to know about. The constructor name will ALWAYS be the same as the class name. It will also have no return type (like 'void' or 'int' or 'string'). This basically the object oriented model and if you try to figure it out by just trying, you will end up with a lot of holes in your knowledge. I really strongly suggest reading about what object orientation is and how it works in C#. It will clear up so much for you. 
I used the web installer and so far I don't have any of the problems you mentioned.
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ WEEEEEEEE!
I prefer the term 'view', because that's what it is. 
I like that as well.
Do not make DoWork async. When DoWork is async, it will immediately appear completed and RunWorkerComplete will execute. See [this question](http://stackoverflow.com/questions/31673510/why-does-not-httpclient-work-in-backgroundworker) for more details.
It's a good first step. Now how about a STANDARD SHORTCUT KEY. I've seen three screenshots of this "feature" already, each showing how awesome it will be to pull up the shortcut menu and click to show implementations. Are keyboard-only programmers no longer the norm? Does no-one else need to use this feature a bit more quickly? I understand how MS folks have to pretend that R# doesn't exist when they announce features like this, but no-one else should. This type of navigation was available in the first version of R# I used way back in early 2008. Not only that, but R# also let's you see *base classes*. I know, right? Maybe VS can squeeze that into SP2 without taxing Roslyn too much. I see the power offered by Roslyn, but feel like they should step on the gas a bit with adding/copying the more obvious navigational features from ReSharper. At this rate of innovation, I'm happy I just re-upped for two more years of ReSharper.
Couple things. You read the _bytes_ of the text value, then try to treat those bytes as an integer. I'm assuming that the text file has the _text_ written as "19"? It won't work this way because the "19" is encoded as _text_, not as a number. Your file _writing_ code looks OK though. Try using [`File.ReadAllText`](https://msdn.microsoft.com/en-us/library/system.io.file.readalltext%28v=vs.110%29.aspx) instead to read it as text ("19"), then [`Int32.Parse`](https://msdn.microsoft.com/en-us/library/system.int32.parse%28v=vs.110%29.aspx) to convert that "19" as text to `19` as an `int`, then write that back to the text file.
Ahh, thank you. I knew it was something silly. This is very different from the way I am used to coding so it is a lot to take in. I appreciate the help.
I'm not sure why Microsoft is pussy footing around with copying R#. Just pull in all of them.
I use Griffin Framework pretty extensively. It can do a lot without being overly bogged down, and the main developer is very responsive to bug posts and pull requests. There's also Griffin.WebServer which is essentially an abstraction around Griffin.Framework, and it's pretty easy to stick Razor on top of it if you want to use a familiar syntax.
Well, that title is effective click fodder. Equally effective for the author is the straw man they refer to as the 'data architect' in the given example, who is clearly concocted to illustrate the author's point. In most data driven applications the modelled classes should be described by the data structure. No serious data architect is going to model a data structure which ultimately inherits from an entity/table called 'thing'. Better advice for beginners (whom this article claims to be targeting) is to model classes on entities described by the data structure. Unless class behaviour needs to inherit from a base interface (for example IEnumerator, IComparer) it is wise to stick to the given data structure and not create undefined inheritable classes to express one’s ‘mastery’ of the colon in class declaration. And that’s advice from *my* “15 years of professional experience”, as quoted from the article ;). IMHO what introductory text books tell you about inheritance is correct but thankfully free from examples which would confuse a beginner. If you don’t want to learn about exclusive subtypes now, don’t worry you’ll have to.
&gt; System.Immutable.Collection Problem is most of methods accept arrays but not ArraySegment. It would be cool if ArraySegment would be synonym for array itself 
Your weekend project looks amazing! I might start using it.
[http://pastebin.com/uyNudJzt](http://pastebin.com/uyNudJzt)
what are you trying to accomplish with that code? edit: never mind i was putting in the wrong input. If i call it like; CallBack("100-1024-38-400", 3); i get the System.Collections.Generic.List`1[System.String] message. let me keep looking. What are you expecting?
Well, strange, but after "successful" install Visual Studio got removed. Also installer stuck several times for 30 minutes at least before I had to kill it and start over.
There's a long list of features in Resharper that I like, I do expect many of those will end up in open source analyzer projects (I guess with VS2015 and Roslyn it's a lot easier)
And what that should mean? Real data/result samples? Because your code has no sense.
And result?
System.Collections.Generic.List`1[System.Int32] Unhandled Exception: System.FormatException: Input string was not in a correct format. at System.Number.StringToNumber(String str, NumberStyles options, NumberBuffer&amp; number, NumberFormatInfo info, Boolean parseDecimal) at System.Number.ParseInt32(String s, NumberStyles style, NumberFormatInfo info) at System.Int32.Parse(String s) at loop.Program.Main(String[] args) in C:\Users\chedd\Documents\Visual Studio 2015\Projects\loop\loop\Program.cs:line 173
This together has even less sense. It's just meaninglessly converting string forward and back, and then trashing the result.
Depends where you live in the world.
I've made a number of projects on top of Nancy, and have really enjoyed it. Having it run through OWIN means I can use middleware like Hangfire easily as well. I use it any time I want to set up a standalone web project, or something that needs to run on Mono.
This is the right answer, "CharacterArray" is clearly intended to be an array of char.
I create a modern desk top log utility. See https://github.com/RolandPheasant/TailBlazer It is early days yet and I am currently working on performance. The latest release can handle a 250Mb file no problems. However in work support have to deal with log files up to about 20Gb so my current task is to handle files that size and so far the results look promising. The project is only 3 weeks old and when the performance has been perfected I have loads of feature planned
Update 1 took me 4 hours to install, and required a PC reboot :|
F12 is the shortcut for Go To Definition. If the method you're looking at is defined in an Interface, F12 will take you to that Interface and you still won't see how the method is implemented. The new Go To Implementation feature will take you to the concrete implementation of the method (or let you choose from a list of all the implementations in the solution, if there are multiple).
I have pretty much the same questions only that i am thinking of buying an imac for my home and would like to do .net dev when working from home. 
I've been working on mac+parallels since 2007. Aside from the mac hardware premium, there are no downsides to working this way. Parallels has been 'feature complete', as far as I am concerned, for years; each version is a smidge faster and fixes a minor quirk or two, but there's very little reason to upgrade (except when they require ugrades to run host new operating systems, which is a pain... but even upgrading every two years, I have no doubt that I get my money's worth out of the software). Transferring data between the two systems is easy. Parallels will by default mount your Windows drive on the mac desktop, and your home folder on the Windows desktop. You can modify which folders get hosted, or choose not to host any. Copy/paste works as expected, and you can choose to strip or maintain text formatting between the platforms, which is extra nice. You can drag files between windows folders and mac folders and it works perfectly. You can share your cloud folders between platforms. Or you can completely isolate the two operating systems. Parallels offers two ways to display the hosted platform's applications: you can either display windows applications 'like mac applications', or you can run all windows applications in a separate windows-only desktop. I like having a separate windows desktop for my windows files, so I can't comment on the former, although it does seem like a neat feature. You mentioned that you're considering a macbook. I'm using the 2013 Air/1.3ghz i5/8gb as my mobile device. The machine has more than enough power to run anything I can throw at it. Apps run at native speed, or as close as I can't tell the difference. VS clean+rebuild on my largest personal project (about 60k sloc) takes about 5 seconds. My main machine is a 2014 iMac 5k/4ghz i7/16gb - as you might expect, everything on that machine is instant or so close as to make no odds. As you noted, the main draw towards hosting windows on OS X is the ability to easily do develop on either platform. I do just this, and X Code is, like VS, plenty fast on this machine. Being able to host an iPhone simulator on the same computer as your Xamarin code is perfect; I wouldn't do it any other way. The only consideration as to whether a Macbook Air would be enough for you is that simulating a retina display iPhone on a non-retina screen is an unpleasant experience. In summary, I use the environment you are considering, and it's great. Everything works as I expect it to, with no perceptible speed penalties. I would go so far as to say there are no drawbacks aside from the higher cost of Mac hardware. And if you have an iPhone, you'll really appreciate having your data automatically synced between your desktop, laptop, and mobile. This morning I read your post on my phone in bed, grabbed my laptop, and was able to navigate to your post with one click using handoff. Pretty spiffy.
Just a quick question: Which reddit client do you use that supports handoff? Or am I completely missing something.
Safari. Not only can I see every 'tab' I have open on any of my safari browsers - even those that are sleeping - but if I've recently looked at a page on one of my devices and switch to another, I can open the tab on the new device with a single button press.
Im curious: what reasons do you have to not run osx and mono?
Explorer10 looks really slick! My laziness is cured, I'll be checking it out tonight. The shell looks interesting as well. It's hard to tell from the screenshot what the functionality is (not your fault; a limitation of screenshots for something that has a lot of subtle features). You mentioned it's a project in its earliest state and I doubt I'll be your target audience. I have yet to find a shell of any kind that I find useful for my workflow. Generally, I use pinned apps on the taskbar to launch the programs I use, one of which is ConEmu which I use to launch everything else. It looks moderately well designed to work with a touch screen (I'm not sure if that's a plus or a minus in Windows since I have a touch screen and have done everything I can to shrink the size of touch enabled inputs -- preferring a mouse/keyboard to smudging my display). I've used many, many shells from popular (KDE/Gnome/Win/MacOS) to obscure (really pure WMs): [AmiWM](http://www.lysator.liu.se/~marcus/amiwm.html), [i3](http://i3wm.org/) and several others (AmiWM is just a fun blast to/from the past). If you're just looking to produce something that looks cool and unique, that's a plenty sufficient goal on its own. If you're looking to solve a particular use case for a shell, then be narrow and opinionated with your UI (a philosophy I generally hate). For me, I am fine with what each of the major shells provide for general use. They're "kind of good enough" in that they do many things, and when doing many things there's no way to do one thing well. In Windows, my desktop has twenty or so icons, none of which I have seen in months. My taskbar has a five pins, all of which are open when I'm using my PC. I use ConEmu for everything else. It's a failure of all shells that I almost always drop to the terminal; the least friendly, most general, user experience for miscellaneous launching/management. That smells like a "hard problem" to solve in that each shell has left out just enough general purpose features to cause me to drop to console, but put in just enough generality to make using the built-in menus not worth the energy. One of the obscure shells I really like is i3. I'd never run something like that for general use; it's very limiting, but I have a VM setup that I use exclusively for sysadmin type work. The tiled window manager lets me pull up each, execute commands and consume the information I need efficiently. It's the perfect purpose-built shell for that need. On the even narrower, I've written a [shell for Windows that turns the OS into a communications kiosk for visitor authentication](https://www.youtube.com/watch?v=aV3kaBo4GQM). You'll have a much smaller target audience, but if you focus on solving a specific use case, you'll be able to hone it and target the most useful elements to its purpose. Just my 2c. Nice work!
Nice. The problem of log sifting is a huge one. When some projects I support are set to DEBUG, the logs are enormous and take hours to get at what matters. I've written several tools over the years to print/filter logs and have not found a general purpose one that covers even "some" use cases. It looks like you may save me several hours of work in the future. If you're ever in Detroit, I'll buy you a beer. :)
My traveling machine is a: 2014 Mac Book Pro * 2.4Ghz Intel i5 * 8Gb Memory * 13" Retina Display * 500Gb SSD * windows 8.1/OS X I've been running boot camp + parallels since the first week i got it. I don't use it everyday, but i use it probably twice a week or so. And like /u/ZaneDubya my only complaint would be the continuing cost of upgrading Parallels so that i can upgrade my OS X. Which I've had to do twice in the couple years I've owned it. Speed wise, i have not had noticeable issues compared my main (desktop) machine that is an; * intel i7 3.2ghz * 16gb memory * 500gb ssd. * windows 10 * 4k display The mac book has been the best designed / feeling laptop I've ever owned. The cost is really the only negative when combined with Parallels and boot camp for a windows "virtual machine". The only laptop I've ever used that has come close to the same feeling is the new surface laptops (3.0 pro i believe). Good luck! edit: my mac book is running OSX not iOS :P 
Very happy TailBlazer user here! I just posted a comment on another logging tool -- I've modified your code locally to let me parse the log format I generally use so that I can chop up and customize the output accordingly. It's not suitable for a pull request because I've hard coded the format, but if there's interest I can generalize it and provide a UI for defining (spare time, so it won't be coming any time soon :) ...) I've not run into limitations with log file sizes, though, I'm using your tool exclusively for tailing multiple logs during program execution and Log4Net is configured to roll over to a new file after a size is reached. It really performs quite well.
You're lucky. I spent most of the evening last night getting it installed. The installer failed half-way through on the Team components leaving me with a Visual Studio 2015 that didn't launch. Repair failed, as well. In the end I had to wipe out every file associated with Visual Studio (%userprofile%\AppData\Local\VisualStudio\&lt;version&gt; and corresponding files in ProgramData as well as Secondary Installer). That got me to an install that didn't return errors, but Visual Studio was still broken. After an hour of fussing with it, I had an IDE that worked but couldn't be registered (interestingly enough, it didn't complain about this despite the fact that I'm running Enterprise edition -- I'd imagine it would start after 30 days, but since the component required to register was broken, I'd be dead). After installing a minimal install, repairing it, then adding everything back and updating all of the extensions, it worked again. I then spent 2 hours reinstalling every extension and recustomizing my environment. Had I known it would take from 5PM until 2AM to get this working, I would have just reloaded the whole machine.
Hadn't thought about using Safari to browse reddit on my Phone :D. Thanks!
I'm currently running a 2014 rMBP, 2.2 Ghz, 16gb ram, vanilla Intel integrated graphics. No fancy Nvidia or Radeon chip. * I don't only do C#/.net dev. I'm not really tied to the Windows platform. I'm a big fan of OS X, and the rMBP is one quality piece of hardware. I don't really care about expandability. I just want something powerful that I can depend on. I was one of those Linux nerds in my teens + early 20s. OS X was a natural transition for me when I no longer had time to maintain a Linux machine. (this was ~ 2003, a very different time for Linux). * Parallels. I used to do Bootcamp, but it's not worth the hassle as Parallels does a great job. I had poor performance with VMWare. * Not really. In the past Windows has been a pain with the Retina screen, but Parallels does a good job managing that now. Otherwise, you have to learn the replacement keys for those the mac keyboard lacks (e.g. there's no Num Lock on the expanded mac keyboard, but Parallels maps that to the 'Clear' button). Adding the 'fn' key in use of Visual Studio keyboard shortcuts can be a pain. All of these are very minor issues. * I've been doing this for awhile: Windows 7 &amp; 8.1 ran awesomely in Parallels. Win 10 is pretty good performance wise, I've had some issues, but were mostly solved by disabling junk like Cortana. * Absolutely. No regrets. I'm going to switch to a newer rMBP on the next new hardware release. &gt; The downside, of course, is working between two operating systems. Its not a downside at all. I would recommend going the Parallels route and using 'Full Screen' mode instead of 'Coherence' mode. In 'Full Screen' the windows VM just becomes another desktop just like any other full screen app. Coherence mode tries to push the VM into the background and run Windows apps as if they were native OS X apps, I really dislike this. 
Which Windows version were you on prior to 10? 7 and 8.1 ran awesomely for me, but I've got a noticeable performance degradation in Win 10 on the latest Parallels release.
Which is annoying when Updates 1 -&gt; 5 on 2012 combined take less than an hour....
Yes your professor is right microsoft is going down. Its a shit company from day one anyway just 2 many dumb people out there getting fascinated with windows. I personally use windows my self because its user friendly other than that its a overpriced piece of shit and linux is getting close to what windows has to offer rly fast and its better operating system by default so yea microsoft will go to dust wont be 5 years probably cuz they have tons of cash, but is happening.Net is like dumbest platform ever, basically they just remade all the shit we used to do and just shuffled it around changed it name and NET was born. Anyway it was never made to do what you want it was made to make money they earned tons of money when vista and 7 came out and it was like windows xp slightly altered but splashy new looks i never understood how people buy all that shit and dont use their brain.C# language i never rly used it but it looks like its the mainstream favorite, so if its popular tends to stay alive doesnt mean it will be gone if microsoft goes someone will remake something similar or same. But net is dead big time believe me everyone who uses net this days work in some company that had to switch since they are tied to microsoft technology. Other than that who in the right mind would use something like windows when you can get linux for free. I use windows because some games are only made for it like blizzard games but the thing i realized over the years is FUCK microsoft and fuck blizzard and those intel fucks and fuck all companies alike they are whats wrong with society they milked tons of cash and did nothing with it no respect for people, communities, but society responds to those kinds of things thus evolution isnt waiting for anyone. No wonder microsoft is changing strategy noone buying that shit anymore i still use XP windows and will switch to linux soon. Also those crash reports not only they were selling people shit products and still are you as a buyer are active solving their programming problems by sending them those reports Windows all in all is one big fail of a beta product and even that is questionable. My friend has some cheap ass tablet i hate that crap but NEVER HAVE I EVER seen it crash or do something u didnt want it to do. Sorry got carried away i never write this long.This is all from personal experience i used DOS up to windows 8 and ima stick to XP till i switch to linux soon. Only thing microsoft does good is make you an idiot as a developer but hey at least ul be good at it :D Dont look at statistics and all that marketing crap every company will denie its going down and stuff like that and those believers will believe in it long after its dead all that crap is misleading. As for those idiots in this post saying the educators that educated them and educate others dont know what they are talking about you have no clue about academic institutions and their ties in society. Yes professors dont work the industry but they understand it and have ties to it and are respected for it and have different perspective on things than someone working in industry that doesnt make it wrong or less important. FANatiko gave you a good advice, personally i use VB/vb.net/C and ASM vb net only for fast user interface design, other than that its useless and retarded. Not sure what ur interest are what fields you like but i always suggest C as entry level its supported by probably all platforms (i mean every platform probably has its version of C) and go from there and probably is a good idea to go with linux since its a global effort means people all around the world are involved and its getting stronger and better every day and everything is well documented you can even get actively involved. Sorry again for big post hope it helps. P.S. forgot to say: and fuck google.
I normally run 64 bit Windows 8.1 via Bootcamp and when doing iOS development I run the same Windows installation via Parallels on OSX. Works great, there are no real performance or other issues. This is with a 2013 Macbook Pro, 2.8 ghz, 8 gb.
Or... You know... Properly design your classes to not have those properties in the first place when you don't want them.
I had a MacBook for a while, but I honestly can't work with it. Personally I just need the keys Page up/Down and the the delete key, which are all missing on a MacBook. Instead you need to use FN + up/down and FN + Backspace (which is called Delete on a MacBook). Additionally the FN key is in the lower left, and the CTRL key right of it. This is not configurable (like in Lenovo). It may sound something trivial, but to me it matters a lot. Even more when you frequently have to switch machines.
* I am also a iPhone developer, which requires a Mac. Also, I have to switch to Java from time to time, and I like being able to emulate a linux box. Macs are versatile that way, I can develop for almost anything. * Bootcamp and Parallels, depending on need. My client app is iPhone, my web services are in .Net. So sometimes I need to debug both at the same time. * Ctrl,option,command mapping. I never did remap the control key in mac, so on mac I do Command-C vs Ctrl-C on Windows. Lots of keyboard shortcuts are different. * OK. Get a solid-state drive and a lot of ram. The more ram you give windows the better. You are better off using Bootcamp. * It is fine, it is just a machine. The Macbook is docked, connected to two monitors, with a separate keyboard and mouse. But if I wasn't doing iPhone I probably wouldn't do it.
A lot of people where is work. All macbook pro's. Some have it dual boot, some have just windows. Some experiences: * windows doesn't seem to handle retina very well with some Ui elements being too small * the fan seems to be more active under windows * with dual boot you can access windows files in Mac mode * macbook performance is of course excellent, these laptops are amazing quality * we also use better performing gaming laptops which are around half the price, have more memory, but do tend to get loud after a year or two So main reasons to get Mac: * iOS publishing * build quality (also screen) Main reason to get something else: * cheaper * better gaming performance
Readit on Windows mobile is quite good.
That is very interesting. I have not noticed any slow down at all. I installed win 10 from scratch, and am also running on the latest update of parallels 11. I hate to say it (and this sounds like something I might have said in 2008 - or, for that matter, 1998! ha!) but I've always noticed that Windows is faster with a clean install. My only advice would be to reinstall Windows onto a new partition. Reinstalling windows remains the "blowing into cartridges" of our era.
Very interesting feedback. Thanks!
Yes. I am forced to use parallels currently in my job and it sucks balls. No idea what the requirements are of those who has a "positive" experience but I wish this software will burn. Network connection bugs, recurring lag and total freezes. Lower general performance in all applications. I'm sure you will have a much better experience if you do a real windows install with bootcamp. Would if I could. I've heard it's very good actually. 
Awesome! Thanks!
I prefer the hardware, and as I use VMs for development I can keep my personal web browsing and apps separate from development environments.
I've been doing this for a while under Parallels. If I had it to do over (and money wasn't a problem) I'd get a MBP for daily use, and a Surface Pro for the .NET development. Why? Because OS X grabs the F12 key. Yes, you can remap it, etc. etc. but it's just not the same. BTW, VSCode on the Mac is very fast, but is just a text editor at this point. I'd *love* it if the full Visual Studio got ported. 
Seems like every presenter I saw at VS Live was using a MacBook. I'd love to, but doubt my organization would go for that. 
indeed :)
What OS am I supposed to be tied into? I am not interested in using Xcode to build the next 'poking bird' game for iOS. Love .NET
Ok, good for you!
Visual Studio is great and if you're working ASP.NET odds are you need an IIS environment, at least for right now. Everything about .NET is just easier on a windows platform, in theory as .NET Core becomes more flushed out that may change but for right now, it's just a more pleasant experience to work in Windows.
&gt; The biggest quirk is just remembering the keyboard shortcuts switching between the two systems If you plug in a keyboard at your desk, you can flip the control and command on a plugged in keyboard.
Say you have a List&lt;int&gt; Primes that is filled with all prime numbers. To get the max you would do: int highestPrime = Primes.Max(); See here for how the Max() extension method works: https://msdn.microsoft.com/en-us/library/bb535031(v=vs.110).aspx 
Thanks for your answer! That's exactly why I want to know. Good alternatives for other platforms will pop up eventually. I am sure Microsoft are looking into it aswell.
Thanks for the link!
Its a time limited offer. I think it ends at the wnd of the year. After that its 3 months
I use a Surface Pro gen1 for teaching code. It runs Visual Studio just fine.
&gt; I am sure Microsoft are looking into it as well I legitimately hope so. I'm as big of a fan of open-source/free software as anyone, but I actually think I'd buy VS for Linux if it existed. Visual Studio Code is pretty neat - that's another option that may become viable as it progresses.
F*** me sideways, that's sooooo awesome. Tnx a lot for the heads up. 
Short answer: CSS Short-ish answer: Third Party CSS I have no idea whose but it is a pretty common thing and there are tons of products out there that will make websites look impressive. You could reach out to the guy and ask what he used.
Ive been developing with mono + f# + emacs on OSX for a good 9 months and its been the best and most productive development experience I have ever had. I don't miss Visual Studio at all. I only use windows when I need to use SQL Management Studio. I thought I would be doing a lot of work in VS so I bought the beefiest 15 inc MBP I could get, and it since I am not, its total overkill. I never realized how much of a hog windows and VS could be until I switched =*(
Surface pro 3 here. Works great with visual studio. If you need a lot of space though... prepare to carry around an external due to lack of space and there's only one usb plug on the SP3 which is a bit of a downer. But I love taking notes on the thing, onenote is a godsend in college/work.
Strictly speaking your where clause is returning the highest odd prime number, since not all prime numbers are odd (2 is prime and odd) your implementation is not correct for all lists of prime numbers. 
Strange, it just gave me a code with a form to setup a new account. Aw well. 
I use a MacBook Pro to keep the desk that holds my PC tower steady. 
Do you mean the Surface Pro or the Surface Book? They are different. I'd be interested in a comparison, too, if anyone can give one.
I've never had an issue with Coherence for Visual Studio.
sorry i am running windows 10 on my desktop and 8.1 on parallels. So far 8.1 has run very smoothly, i haven't upgraded the parallels yet, but am planning on it. I just purchased the newest version of parallels last week in preparation (and to upgrade my OS X to the newest version)
Ah, thank you. i will make the correction above. I like the integration parallels has with boot camp, specifically being able to boot into the windows instance, which i also share when doing the parallels instance. Does virtual box do something like this on Mac? I don't mind the cost, as the productivity i gain from this setup is worth it. Was just one of the small complaints i have regarding this setup. I've used vmware player and virtualbox (long time ago) on windows, and enjoyed them both. But never anything but bootcamp/parallels on the Mac.
Ahh, great. thank you.
ha, i have the same problem but with the end/home keys. I use home &amp; end keys way more than i realized. I just deal with it, but your post reminded me!
It's all at work. I can type up what I was trying to do later. 
I have one of these http://www.microcenter.com/product/440932/WinBook_TW802_Tablet_-_Black And its brutally slow to run VS and SQL server. Installation took like 6+ hours (vs 1 or 2 on a fast desktop). Due to space limitations I had to install stuff on the SD card, and had to use a hack to get sql server to install there. Since then I have never really used the tablet, it just collects dust. Also you can't really develop well on an 8 inch screen. I recently got a Gigabyte Brix j1900 for 100 bucks. You have to add your own ram and HD (4gigs is 20 bucks) and its much faster.
That's my biggest complaint about the Surface Book. There's no way I'm spending an extra grand to get a decent amount of RAM and SSD storage space. 
Json.NET http://www.newtonsoft.com/json/help/html/serializingjson.htm 
I have a couple of those cheap atom based tablets for testing our WPF apps, and they are painfully slow. I certainly wouldn't want to have to run VS on them. 
Coworker has one. Get the bigger drive. The i5 CPU is fine. 
Amusingly, the site is completely unusable on windows mobile.
&gt; Does virtual box do something like this on Mac? Not that I know of. I don't dual-boot, as my only use of a Windows VM is to run XP for a single program. VBox also doesn't require an upgrade with each OS X release.
Same applies to iPhone 
* Boss' choice * First used Parallels, generally UI and performance were ok. But after Windows disk image got broken several times tried Virtual Box. Virtual Box was pain in the butt, poor performance, horrible support for multi-displays. So tried Bootcamp. Bootcamp was not able to do anything with some error without any solution. Had to do everything manually. Still had problems with drivers for some devices. * The main quirk is keyboard. * Parallels is OK, if you make backups often. * Never. Actually I was able to get real PC.
What a nonsense. Size of pixel has no relation to drawn size.
I JUST BOUGHT PLURALSIGHT ON MONDAY FOR CYBER MONDAY FFFFFFFFFFF
Thank you :D Wheee! :D Happy Dance! :D
Interesting note: Last week I signed up for the standard 10-day free trial with PluralSight. After 10 days, the account would auto-renew if I do not cancel it. Not only did this offer work with my existing account, but Microsoft also does the favor of disabling the auto-renew feature on the trial account after it's activated. Pretty cool.
I gave the machine back and requested a proper machine. Now I got a neat little ThinkPad. It has the same issue with the FN and CTRL key, but you can at least switch those keys in the bios.
It's also worth noting that not all design patterns need to be implemented in C# as some of them are baked in. Observer pattern, for instance. And some other are baked into the popular frameworks used in .Net like Unit of Work, for example, is baked into Entity Framework's DbContext
This project is less than a month old and solid foundations are being built. A rich reactive set will soon follow. Check out https://github.com/RolandPheasant/TailBlazer/issues for feature requests and if anything is missing feel free to raise an issue
Typo - rich feature set!
I definitely had it enabled
You're welcome.
It's a site with training courses for tons of different tech related subjects. If you're new to C# development, or any kind of development actually, this is a very good resource! Give it a try, it's for free anyways!
In case you run into any issues or anything with LogWizard, please drop me a note. I want to make it as easy as possible :P I might take you up on that beer for sure ;) I plan to take a trip to US next year :P Best, John
Thanks! No complaints otherwise? 
I don't think you want to reverse the string, regardless of endianness. Other than that this is pretty spot on.
None. He uses it on the airplane when he travels and it fits pretty well on the seatback tray. If he's going to be heads-down for a while, he'll plug in an external monitor, bluetooth keyboard + mouse. 
Weird, it works perfectly on my 1520. What is broken for you? Even all the formatting is perfect for me.
Could probably have a better title and scenario in the article. Like when would you not be able to use [JsonIgnore] attribute or some similar stuff? If I understand this correctly, this seems useful if you want to include more properties than you exclude. Let's say I have a class with with 100 properties. I want most of the properties, but I can't just JsonIgnore across the board because other things need those properties sometimes. If I want all but the last 2 properties, normally I would return SomeCollection.Select(sc =&gt; new { Prop1, Prop2 &lt;prop 3 through 96&gt; Prop97, Prop98 }); But with this I could just return SomeCollection.Boycott( x =&gt; x.Prop99, x =&gt; x.Prop100); That seems like it could be useful, because most of the time I want the Id property but sometimes i don't. Unless someone knows a better way than this. 
It was actually inspired by polymer: https://www.polymer-project.org/
Ever tried a surface? I've used one briefly, and have heard good things about the newer series. 
Maybe throw it up on a github repo, and link it here? I'd be glad to review it, and give my two cents. But there are several ways to skin a cat. If your code is readable, testable (you have at least some tests right?), and achieves the end result then you're well on your way! I'm sure there are people here with better experience than myself that would throw their two cents in too. Keep in mind that learning new technology is great, and most developers have their application(s) they keep rewriting with new libraries, or design patterns, or technologies. Those applications help with learning, and are great to keep around. But these are typically personal projects, and not ones planned to be released (privately or publicly). 
Windows (since windows 7, I think) has hi res scaling adjustments to deal with exactly this problem (this is a separate thing from adjusting the resolution): http://www.digitaltrends.com/computing/windows-10-review-high-resolution-support/
Well, it wasn't my laptop, and the boss was an IT professional, so he knew what he was doing. He still had problems reading it. He'd be taking it when he did presentations and shows. Maybe it was a matter of other people not being able to see it. I don't know.
My browser is using a 12 point font. My resolution is at a certain setting. If I increase my resolution, the text gets smaller. Call it whatever the heck you want, but the text gets smaller. Microsoft calls it a font size. Blame THEM.
I think you are right. Posting a github repo/gist/pastebin of an example is a good idea. In my experience reddit's coding community is more than happy to provide feedback, most of it is well thought out and the posters are more than happy to reply to additional questions. I have posted 3 projects that I believed were ready for feedback (1 in c# and 2 in vb) both of these solicited good amounts of feedback that I found very valuable. Criticism is a very important part in learning. Otherwise you get stuck doing things a certain way because that is the way you have always done it. 
Does anyone have an idea about how this works? It looks like magic. You pass some lambdas, and somehow he's able to interpret the lines of code within them.
Thank you so much for your time and review, i will be adding this :) Perfect, when you get the change to look for more details let me know. 
No problem, good luck!
Great! I needed some extra training!
I figured it out. I think int i; int c; int i = System.Convert.ToInt32(txtWeek.Text); for (c = i + 1; c &gt; i &amp;&amp; c &lt; 54; c++) { radgridName.MasterTableView.Columns[c].Visible = false; } This hides all columns that are (week value + 1) and less than column index 54 (because I have extra columns that always need to be shown.
yeah, I was using HTTP Client to send the request. I'm getting a 400 bad request, but I'm not sure why. I think I need to do a fiddler to see what the python client is sending out for that request, so I know what I need to send. I really want this to work, because an unofficial hangouts client for windows(and windows phone) that supports group messaging would be pretty awesome.
It's worth mentioning that the new interpolation is part of c# 6, and not available in prior versions. But yes, it's nice to be able to do interpolation and verbatim together.
This feels like an [adapter pattern](https://en.wikipedia.org/wiki/Adapter_pattern) to me.
The most likely issue is that the data is being sent as [www-form-urlencoded](https://en.m.wikipedia.org/wiki/Application/x-www-form-urlencoded#The_application.2Fx-www-form-urlencoded_type). It seems that if you use: var response = await httpClient.PostAsync(url, new StringContent(body)); It will send your data without trying to encode it.
Are you certain `requestData` should be a JSON string and not POST data?
Yeah thanks, sorry I think C# 6.0 was already released or just about released when I started programming this year.. so I forget there are people not using the latest versions often times with good reasons. :)
Here is some more things I've noticed... 3 - All your business service classes have try/catch blocks with just throws in there. I'm assuming this is for debugging, but should be removed from production code. 4 - None of your services implement the delete method of your repositories? 5 - None of your Controllers impliment deletions either, is this by design? You have no logging at all. You should implement a logging library (like log4net), and log at the very least on your data access layer, and domain layer. You have zero tests. I know testing is a debate, but consider writing some for your data access and domain layers at least. Finally you could/should setup your services to receive their repositories via their constructor. This will allow you to mock/test your service layer. With a testable design you typically can setup dependency injections too, which have their benefits! // something like this? public AdministratorService(IRepository&lt;Administration&gt; repository) { if (repository == null) throw new ArgumentNullException(nameof(repository)); _repository = repository; } I'll leave the Web portion to someone with more experience in web design. 
I can read the second one. 
Wow. C# had not been conceived of by Anders Hejlsberg when I started programming. I'm old.
Most of the time I've worked with oAuth, it wants the request to be `application/x-www-form-urlencoded` in which case your payload should be formatted like this: `client_id=OAUTH2_CLIENT_ID&amp;client_secret=OAUTH2_CLIENT_SECRET&amp;code=auth_code&amp;grant_type=authorization_code&amp;redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob`
look up on www.meetup.com there is probably a .net/c# group near you. 
Nothing jumps out at me immediately, except I'm wondering why you use all async functions? Especially for connect and accept; you're waiting for them to complete anyway. Just use the regular blocking calls. I Haven't really done async, I usually just use select on a single thread.
I don't want to create the dcumentation by a tool, I want is to sync for example interface methods doumentation between inherited classes, mostly that. SharpDox seems to solve one problem!
What if the server is accepting multiple connections at once? The client side though, I agree
Just so you know, the text inside of the methods is not C# code. It's lua code for another game which I am using C# to format to help take some tedious stuff out of writing it. So yes - I can read the second method perfectly fine and is exactly how it would look had I wrote it in a lua editor, minus the formatted param unit name that I used interpolation for.
You should absolutely 100% switch to an IObservable socket pattern. For example, http://stackoverflow.com/q/3118289/57986
One thing you always always always want to think about with singletons is thread-safe init. You want a lock around that if==null { init } block. Otherwise you should set aside a week or so to debug the race condition you end up with one day. 
Thanks for the reply! I've tried that, but it seems to not like it either. I'm not sure what's going on, this piece of code to convert it to a string works fine, but when i try to send the object through protobuf and what not through a different way, it doesn't work. http://hastebin.com/udimewopix.cs Cheers
1. - its not that XAML is a more generic application. its that it is more expandable. easier to use practises and easier to de couple your logic and views therefore easier to follow best practises and methodologies 2. - Grouping items in folders, generally are the namespaces you use. like MyApplication.Models.Whatever would be /Models/Whatever, obviously this would change if for example you were using partial classes to separate the POCO and the methods in a class, then maybe you would have a folder called 'logic' or something, but the classes would need to be in the same namespace 3. - You dont? var helloMessage = "Hello World!" would be fine in any code review ***edit - Most code reviews, The idea that using types in variable names is a bit dated at all of the places that I work at. mainly because of the better IDE now, you should know the scope of your application and what is what already. And if you have to ask yourself 'What actually is this' - Chances are, you shouldnt be messing about with it. Putting for example var strHelloWorldMessage = "Hello World!" seems silly to me, because if you were following the code, you would know what it is. And you can generally tell the type by how it is used, or by its name (the message bit) or by in the worst case scenario, hovering in the IDE*** 4. - it depends on where you work and their practises. We tend to use the types for controls. Like var btnHelloTrigger = new Button(); but for a string it would just be var helloMessage = "Hello" 5. - DI makes it possible to test things properly. It stops your classes from relying on other things, especially if you use interfaces to do this also. If you have a Database for example, and you have a class that gets all users, you could pass in an IDatabase object you previously created, stopping the dependency on the whole db. When doing unit tests, you can create your own IDatabase object, and populate it with data in code, then test your expected outcomes without depending on the database itself, which may be subject to external changing 6. - Yes, I do. - scalability of projects is important, the simple projects have a tendency of getting bigger and bigger with time. and if you start sloppy. you finish sloppy
&gt; When starting a new project, should "windows forms application" be avoided in favor of the more generic XAML applications? It depends. I mostly do web apps so for me neither of those are a sensible option at all. Neither is a sensible option for your unit tests or console apps either. &gt; Why is it that we are supposed to less complex type initialization as "var vardescriptionType = new Type();", but for "string" we have to specify it? Are you? we aren't. We are asked to just `var` everything. You have a different local convention. &gt; is it "var vardescriptionType = new Type();" or rather "var typeVardescription = new Type();" ? This is a question about variable naming. IMHO, the prefered style is `var description = new Type();"`, i.e. you don't usually need to embed type info in the the var name - don't use "Hungarian notation" in c#. Just describe what it does. Though sometimes what it does is quite local and boring and looks like the type because you don't need much of a description for a var that is scoped to 3 lines of code. e.g. `foreach (var dog in kennel.Dogs) { dog.woof(); }` &gt; Dependency injection: I don't see the point of it, It helps a lot for large apps, particularly if you want to unit test things. You can explain DI in small apps, but you don't need DI in small apps. &gt; do you really ... implement interfaces for everything If you are doing Dependency injection you will want interfaces on *a lot of things* so that you can replace them with mocks in test. In general if a class is a dumb DTO it will never have an interface - that would be pointless. If a class is a service or repository then it will, so that it can be mocked in tests of its consumers. I would be very wary of doing "best practice" on "everything" when you don't know why that best practice originated and why you would want to use it. If you follow any "best practice" blindly without any context you might end up with some head-scratching WTF code. 
Takes by far longer than 15 minutes and has plenty of bullshit questions. I doubt this will result in any worthwhile results. Most people will probably just start clicking through the survey to get a chance of winning the "prizes".
SignalR is much slower than pure HTTP.sys WebSockets. If you are building a low latency high capacity system its better to stick as close to the metal as possible.
Going to sound stupid...but have you tested your protobuf Serialise/Deserialise methods *without* the sending over sockets? Literally just call Seriealise then immediately call Deserialise. It's a fairly trivial thing to Unit test. 
&gt; Neither is a sensible option for your unit tests or console apps either. Does it mean that unit testing is "worse" using XAML applications than using Windows Forms? &gt; I would be very wary of doing "best practice" on "everything" when you don't know why that best practice originated and why you would want to use it. I totally agree. For me it is quite the contrary: I see no point in some best pratices (for example: interfacing everything) which given the frequency this best practice is mentioned probably means that I am missing something important. Given the answers I am receiving, I think in this particular case the core of the problem is that I have not been working enough with unit testing to understand the advantages of using interfaces. I still remain a bit baffled that Hungarian Notation is considered a "bad" convention (all three answers mention the same thing). As I mentioned in another answer: &gt; var customerResults = CustomarAdo.GetResults(); // now I want to do something with these results... but I have to know in which form I am receiving this results &gt; So for this example, I could imagine using either renaming "GetResults" as "GetResultsAsList", or "customerResults" as "customerResultsList". In this case you know immediately that it is going to be a List of objects, and these objects are going to be of type Customer. I don't know if that makes sense, but my goal when programming is that I try to remove as much as I can all the "cognitive surcharge"... Thanks a lot for taking the time to answer, this discussion is being very helpful.
&gt; I still remain a bit baffled that Hungarian Notation is considered a "bad" convention It originated in the "C" programming language, which is a lot looser about types, particularly with what a pointer pointed to, and could cause serious errors if you get it a bit wrong. So it was a way of the programmer tracking type information that the compiler didn't. This is not really the case in C#, so continuing to insist on it would be a case of blindly following a "best" practice without understanding that the need for it had gone. &gt; now I want to do something with these results... but I have to know in which form I am receiving this results I would prefer to name the results as something that describes the intent, e.g. `var customersWithPendingOrders` or `var searchMatches`. The compiler can tell me that I have a list of customers, but it can't tell me why. But bear in mind that variable naming is partly subjective, there are no hard and fast answers. It's like asking if you prefer one author's choice of words to another's. You have an opinion, and other people may or not agree. And the compiler doesn't care. &gt; Does it mean that unit testing is "worse" using XAML applications than using Windows Forms? That's not my speciality, but I think that it's easier in XAML - XAML is a later and more flexible design than WinForms, so testing will be easier. 
OK, I think now I get it. Yes, the underlying structure could slightly change (for example: IEnumerable to List) and you would not like to rename all your variables because of that. It makes sense indeed. I also get that there can be exceptions, such as loginButton as you mention. In this case I use the notation mentioned by /u/liamht : btnDescription, mainly because accessing to the form element list in Visual Studio is not just one click away... so I know I can type "btn" and intellisense will tell me the rest (works also if "button" is at the end of the word as well, I know).
1. It depends on what you need, but I much prefer WPF over WinForms. WPF has a steeper learning curve, but once you "get it", it is much easier to develop with, has a better separation of concerns, handles custom UI much better, etc. 2. There really aren't any. Generally I'll group things by what they are and then their "category". This should closely match their namespace... \Models\Users\User.cs etc. 3. That's preference. Personally I use `var` as many places as possible because a) I like it b) it makes refactoring easier c) it shortens code for things with complex names d) using the full name doesn't add much - 99% of the time I can easily tell what the variable type is. 4. I only use hungarian notation for UI controls, so neither. `var objectType = new Type();` 5. That or you've never seen it implemented properly. You can use dependency injection to fake/mock functionality. This means that you can use it for unit testing to make sure that methods are called as expected, results are calculated as expected, exceptions are thrown under certain conditions, etc. On top of that, I also like using DI to fake a database when I'm prototyping applications. That way I can change what the DB structure is like as much as I want to suit my needs, and then only have to create a real DB once the application starts to approach readiness. 6. Define "everything". Any logic I want to inject is behind an interface, so generally any collection of business rules or data access has interfaces defined for them. On top of that, if I have properties that are common between a lot of objects, I'll make an interface to match those properties and often write up some extensions to make working with those properties simpler or more centralized.
 I don't think that's the issue, but I'll look into it regardless
Had to Google BTFO, and it made me laugh! XD I hope I didn't come across as the world's biggest A-hole, or anything. :)
I actually considered using the Dictionary.TryGetValue in my examples above, but since I didn't know the experience level of OP I didn't want to complicate my answer any further by having to explain out-parameters (and I was way over my page-limit as it was). And regarding AddOrUpdate, that is a method on ConcurrentDictionary, which I think that OP should prefer to use over adding locks to the indexer.
Thanks for the answer. &gt; 4/ some piece of magic passes in an instance of IRepository a constructor in your class when it is created (this is the basic function of DI); This is the part I need to work on. Although I've read about inversion of control / dependency injection, and I've seen it implemented, a couple of hours are not enough for me to grasp the gist of it. I guess what I needed was some information about relatable problems that this type of architecture solves. There have been some good ones, including yours, listed in this post. I guess now it is time to roll up my sleeves and dig until I grasp the concept. 
So that doesn't answer the question.
My guess is it will eventually pop up as an update from within Visual Studio. Right now it seems the download is the only way. 
But wise... or that is what we like to tell our selves each time we get older ;)
Happened in some production code at my work.
Your General Naming Conventions link is busted.
&gt;I have no idea where to start. You're not gonna find much love for "do my homework please" assignments in this sub. If you really have no idea where to start, I'd start by reviewing the course material, and reading the MSDN pages for IndexOf, Replace, and the other methods the assignment mentions. Also, try google: http://stackoverflow.com/questions/21061792/piglatin-translate
Yeah, by no means am I asking someone to do it for me. I simply don't know how to use those in a way to translate any of that. Thank you, I'll check that out.
Can you provide some performance statistics on why WS might be better, specially if u have to write your own layer? I would imagine that if the browser supports WS then the overhead with SignalR is very minimal and writing your own layer would be very BAD. I am interested in some performance stats if you have any because I will be using SignalR for some work and want to make sure I make the write decision.
That really doesnt answer the question how raw WS would be better. but okay 
I have never done any database work in C# or .NET but I'm gonna go ahead and guess that Entity Framework or Linq-to-SQL creates a default instance of `Foo` somewhere (using something like [Activator.CreateInstance()](https://msdn.microsoft.com/en-us/library/wccyzw83%28v=vs.110%29.aspx))- and now it can't. Might be wildly wrong though.
I think that's the problem I'm having. We have not learned about splitting strings, or arrays yet. Is there another way to do this? If not, I'll just google how to split strings. Thank you.
Well you know, the stack trace would give a clue.
[General Naming Conventions](https://msdn.microsoft.com/en-us/library/ms229045\(v=vs.110\).aspx)
I am not sure what you are trying to do, but it looks wrong. Is it important that the index is a key or are all keys known at compile time? If all the keys are static, you could let the type system do the work for you: public sealed class DataStore&lt;T&gt; { private DataStore() {} // this is thread safe initialization due to how static initialization is specified public static DataStore&lt;T&gt; Instance { get; } = new DataStore&lt;T&gt;(); public void SetProperty&lt;TValue&gt;(string propertyName, TValue value) { ... } ... } Then define your "data store keys" as types: public class SomeQuantizedStore {} ... DataStore&lt;SomeQuantizedStore&gt;.Instance.SetProperty("SomeValue", number); You could be really fancy and make `DataStore&lt;T&gt;` inherit from `DynamicObject` and then: public sealed class DataStore&lt;T&gt; : DynamicObject { private DataStore() {} public static dynamic Instance { get; } = new DataStore&lt;T&gt;(); ... } DataStore&lt;SomeQuantizedStore&gt;.Instance.SomeValue = number; Or if your keys must be strings, something like this instead: public sealed class DataStore { private DataStore() {} // doesn't have to be static, doesn't matter either way private static readonly ConcurrentDictionary&lt;string, IDataStore&gt; instances = new ConcurrentDictionary&lt;string, IDataStore&gt;(); public static DataStore Instance { get; } = new DataStore(); public IDataStore this [string id] =&gt; instances.GetOrAdd(id, key =&gt; new DataStoreItem()); private sealed class DataStoreItem : IDataStore { internal DataStoreItem() { } // implement stuff here } } public interface IDataStore { // expose what you actually want here } 
Resharper is wrong in this case. EF requires a parameter-less constructor as it dynamically creates the class. Put the constructor back and suppress the warning. 
You are correct.
Why would you do this over simply using events? [Events are an implementation of the observer pattern] (http://pastebin.com/exYgDszn). I'm not sold by this post at all, there is nothing in there to persuade me to go to that effort to reinvent the wheel. If I'm concerned about 2 way references and memory leaks I make sure resources are released correctly. If I want to decouple subscribers from observables I'll use the [event aggregator pattern](http://martinfowler.com/eaaDev/EventAggregator.html) Am I missing something? Is the only benefit here the use of IDisposable?
Roslyn *might* be able to catch this someday. The problem is the class is instantiated at run time - there is nothing at compile time that says "hey, we are using this constructor". To add to that, I believe EF uses Emit in the background so even checking for reflection calls wouldn't catch it (Emit outputs dynamic IL at runtime). If your entities have a base class (they should) you can write a unit test to ensure anything inheriting from said base class has a default constructor. That's the route we went at a former job of mine as we often ran into this problem. 
&gt; Just [mainly] wondering why EF's runtime execution isn't factored in somehow at design time, either by the compiler or ReSharper. EF is retarded. Seriously, that's the only reason. EF could mandate that its operations only work on classes that adhere to the `where T:new()` type parameter constraint, but for whatever reason it doesn't. So instead we get yet another runtime failure. 
[removed]
&gt; Why would you do this over simply using events?. Events are an implementation of the observer pattern You wouldn't. The post serves to focus on a high level concept of the Observer pattern and considerations in implementation (hence the title 'basic overview'), and not C#/.Net in particular. Nor is it meant to convince anyone to reinvent the wheel. Yes, events are an implementation of the Observer pattern. Do you never take the time to look 'under the hood'? Diving into using Events without actually understanding how they work is inadvisable. The purpose is not to examine the most optimal implementation of the pattern within the framework, but rather the basic idea of the pattern as laid out many, many years ago. 
&gt;&gt; Neither is a sensible option for your unit tests or console apps either. &gt; Does it mean that unit testing is "worse" using XAML applications than using Windows Forms? This reply was in the context of "when starting a new project what should I choose". The reply you got was taking "project" to mean a C# Project - as in a .csproj file rather than a project as in "something I'm going to make". The key distinction being that a Solution will typically have multiple projects in, some of which are Unit Test projects which are added using the Class Library template rather than the Winforms or XAML templates. The choice of UI has little bearing on testability directly as you don't test the UI with unit tests (although there are UI test frameworks available they're far less commonly used than unit tests). That said, when using MVVM in a XAML application you gain much more testability over the function of your UI since your ViewModels are completely isolated from the UI (they don't even know it exists). There's a bit of a learning curve to MVVM but it's worth it in the long run. If you want to learn about MVVM and XAML etc there's some great tutorials and courses on PluralSight which Microsoft are offering 6 months free of right now with their Dev Essentials programme - https://www.visualstudio.com/en-us/products/visual-studio-dev-essentials-vs.aspx 
using system.ComponentModel.DataAnnotations; [Key] attribute along with a [DatabaseGenerate(DatabaseGeneratedOption.Identity)] // Obama sucks. 
I wasn't concerned about performance at all but rather correctness. If all keys are known at compile time, the possibility that your keys are typed correctly or incorrectly in some other part of your code arises. Strings are not checked for spelling mistakes (types aren't either, but once you have one spelled incorrectly, you are stuck with it everywhere unless you change the name of the type). Consider you have: gameplayStore = DataStore.Instance["DataStore"]; in one part of your code and: gameplayStore = DataStore.Instance["Datastore"]; in another. Now you have 2 keys :/ That was probably not intended. The standard ways around this are by relying on some kind of constant value in both locations: public enum DataStoreLocations { DataStore, SomeQuantizedPlace } and then change the indexer to use the enum instead. A neat trick (or horrid abuse of the type system depending on how you look at it) I've come across is to use types for the discrimination instead: public DataStore&lt;T&gt; { public static DataStore&lt;T&gt; Instance { get; } = new DataStore&lt;T&gt;(); Now you must create types in order to access the instances you are looking for. You cannot spell a location wrong (or use a wrong case) in one place and not another because it would be a compile time error. You still get thread safe discriminated singleton access, but you didn't have to do anything special in an indexer (like rely on a `ConcurrentDictionary` or locks and a separate class for the actual storage stuff so you didn't have the weirdness of `DataStore.Instance["a"]["b"]["c"]["a"]` due to a lack of separation of concerns). --- A method `.SetProperty&lt;T&gt;(string name, T value)` also suffers from this issue but you weren't asking about that so I didn't say. I did suggest you could make that nicer by using `dynamic`: internal class Program { private static void Main() { dynamic instance = DataStore&lt;SomeQuantizedStore&gt;.Instance; instance.key = "Value"; instance.Key2 = 100.10M; instance.Key3 = Guid.NewGuid().ToString(); string key = instance.key; decimal key2 = instance.Key2; decimal key4 = instance.asdfKey2; Console.WriteLine($"{key}, {key2}, {key4}"); } } public class SomeQuantizedStore { } public class DataStore&lt;T&gt; : DynamicObject { private DataStore() { } public static dynamic Instance { get; } = new DataStore&lt;T&gt;(); //you want some sort of actual xml storage solution instead private static Dictionary&lt;string,Tuple&lt;Type, string&gt;&gt; storage = new Dictionary&lt;string, Tuple&lt;Type, string&gt;&gt;(); public void SetProperty(string name, object value) { if (value == null) { storage.Remove(name); return; } storage[name] = Tuple.Create(value.GetType(), string.Format(CultureInfo.InvariantCulture, "{0}", value)); } public object GetProperty(string name) { Tuple&lt;Type, string&gt; result; if(!storage.TryGetValue(name, out result)) return null; var converter = TypeDescriptor.GetConverter(result.Item1); return converter.ConvertFromInvariantString(result.Item2); } public override bool TryGetMember(GetMemberBinder binder, out object result) { var property = GetProperty(binder.Name); result = property ?? new NullObject(); return true; } public override bool TrySetMember(SetMemberBinder binder, object value) { SetProperty(binder.Name, value); return true; } private class NullObject:DynamicObject { public override bool TryConvert(ConvertBinder binder, out object result) { var returnType = binder.ReturnType; if (returnType.IsValueType &amp;&amp; !(returnType.IsConstructedGenericType &amp;&amp; returnType.GetGenericTypeDefinition() == typeof(Nullable&lt;&gt;))) { result = Activator.CreateInstance(returnType); } else result = null; return true; } } } edit: fixed exception when key not found and type is not nullable
It is actually easier than that. public sealed Foo { //required: sealed private Foo() {} //required: private constructor //required: this being the only static member public static Foo Instance { get; } = new Foo(); } That is thread safe and lazy. The private constructor will not be run until the first access of `Foo.Instance`. If you have other static fields then it is not necessarily as lazy as it could possibly be (it initializes all fields when the first one is accessed), but with only 1 static field, this is both safe and completely lazy (assuming you are targeting framework 4 or later; edit: it is thread safe in all frameworks, specified lazy post 4).
Thanks for the input. I'll try to find the original comment on the matter for reference. Perhaps I didn't phrase it correctly. I agree with your statement though. The class will "feel noisy". Thanks for the input!
Based on my use for it (real time client side notifications, internal chat, internal email) SignalR was plenty fast enough. I guess the decision you make is based on whether or not latency is tolerated within your application. Like someone above mentioned, latency kind of needs to be non-existent for stock trading applications. 
This same thing can come up with a few different serialization libraries like Protobuf-net and MsgPack too, just fyi. They depend on that constructor but there is no (easy) way for Resharper to know that. Also noticed that EF will create unnecessary using statements, so you can never make your code totally rehsarper happy unless you get rid of them after every time EF autocreates those class files =0 
Everything starts out small ;)
Alot of TX? Why stop at T16 sometimes and T8 others?
What is TX? I stopped at 16 because Func stops at 16. Where did you see I stopped at 8? It's probably a mistake.
This is great n' all, but you haven't provided the most crucial information for a Kickstarter campaign. Why do you need backers?
What you say makes perfect sense, but I don't really get the sealed thing. I often heard of developers that curse other developers for making sealed classes.
Honestly I very rarely use inheritance in my own code. I use containment a lot more than I use inheritance. So take that into account. But the rationale for sealing classes that I was taught is this: if a class isn't DESIGNED for inheritance, then it should be sealed. Only if you are intentionally developing a "parent" class that will be used in an inheritance hierarchy should you not seal it. If you have access to the source code then you can always un-seal a class. But of course if you're using a library developed by somebody else where you don't have the source code and you really need to inherit from that class then it would be a problem if it was sealed.
more data for statistical reasons, my answers are probably the same as many others'. 1. use wpf for all new projects. winforms is only really still supported for legacy reasons. 2. these are all subjective and generally don't matter as long as you pick a standard and stick to it. 3. you have to specify the type wherever the type cannot be inferred. var blah = "blah"; works fine because we know it's a string. var blah = null; does not because it could be any nullable type. 4. neither is that common these days. you'd most likely just see "var description = new Type();" 5. one of the biggest benefits of DI is that it makes your code easier to test; you can easily mock out a complex service and inject it into the class you want to actually test. 6. first, it isn't a best practice to make interfaces for everything. second, you don't need interfaces for everything to do DI. an interface is just another level of abstraction. create interfaces where it makes sense. have 2 different logging implementations that you want to use interchangeably in places but that don't share implementation code? an interface is great for that. if you're only ever going to have one of something, it doesn't really make sense to make an interface for it.
Is this line of code wrong? var request = Encoding.UTF8.GetString(buffer.Array, buffer.Offset, buffer.Count); I ask because what if you didn't receive exactly 4096 bytes then this would decode incorrectly. Would you not want to use received.Count for the size of the buffer? Also, I would use [CreateClientBuffer](https://msdn.microsoft.com/en-us/library/system.net.websockets.websocket.createclientbuffer(v=vs.110\).aspx) to create the ArraySegment since it seems to be optimized for the internal send/receive sizes
This is the correct answer. Thread over :) Though I would say some TDD is good.
What about internal?
&gt;EF could mandate that its operations only work on classes that adhere to the where T:new() type parameter constraint, but for whatever reason it doesn't. So instead we get yet another runtime failure. Great idea. Seriously. 
https://help.github.com/articles/open-source-licensing/
You wrap your library up in a downloadable package that other people can easily install without having to download from github or compile from source. It's not too hard - see a tutorial like https://vkreynin.wordpress.com/2010/12/08/baby-steps-to-create-nuget-package/
OK, got it. /u/see_sharp_dotnet gave me a helpful link about it.
If you actually try to write some code and show us where you get stuck you might actually get some help. And do not even bother trying to say you do not know where to start.
No, I have done that after someone here suggested I'll split the code into different files.
The argument for NOT sealing is that you can't possibly predict all future uses of your code. I have never encountered a scenario where I said, "oh, thank god they didn't let me extend that class." But I have encountered plenty where I've cursed at the coder who thought s/he knew my needs better than I do. Even in library code - the worst case is that I break when we upgrade the library (tests should find this) and I have to either 1) tweak my extending class slightly or 2) do all the crazy redesign/rework I would have had to do to work around the sealing in the first place. So I take the opposite approach - unless I have a very good reason to seal a class (i.e. performance or security), I don't. Personally, I wish the keyword wasn't even in the language.
This doesn't get into the benefits one bit. What you can do easily once you've gone from events to observables is that now you are working with basically a stream of objects. This allows you to easily do things like "only give me the keypress event once the user has typed three characters, has stopped typing for 250ms and we aren't processing the previous request" with a handful of lines of code. Obviously that's all done with events, but you end up with some pretty impressive spaghetti code that is tough to read and debug. Intro to RX has some simple examples that gets into why this introduces some interesting patterns - http://www.introtorx.com/content/v1.0.10621.0/01_WhyRx.html 
I mean, I got the cells.cs and I got the main form, as well as the grid and clicking down. However, I am not sure how to make the cells move. I also don't know anything about the neighbors, I believe I am supposed to have a function to count them, but I am not that experienced with C#, it confuses me. I really am lost. No joke. Hence why I came here to maybe get some help. 
Haha. I wish I had time to play video games again ;-; 
You should probably exclude your .suo file from your repo.
I made a thing... https://gist.github.com/bbarry/a317261b816cc859832f#file-usage-cs the public api is nicer, but I'm hitting the nail with with a nuclear warhead. Check it out, use it (or don't). Building strong types with reflection so you have no strings in your code that could potentially be a problem at runtime...
mobcrush.com and mobcrushland.com
This is a great article on dependency injection. This is what really made it sink in for me. http://www.martinfowler.com/articles/injection.html As far as *why* you won't really see much benefit to it until you're actually using it in something more than just a small project. DI has major benefits when it comes to making your code more maintainable--especially large projects. It also has huge benefits when it comes to unit testing (it's nearly impossible to do "true" unit testing without it, IMHO). I've been a propent of DI for a while now and let me tell you your inability to not see the point is in fact very common among people who've never used it in a project before. But after they've used it for a few months they usually wonder how they've managed to develop anything at all without DI.
Basically, yes. 
Many people seem to prefer the .Extension() method syntax to the query syntax. `let` is a pretty compelling argument that it's good too.
If you are using the annotations you should mark the constructor (or type, don't remember which) with `[PublicAPI]`.
When it comes to testing private method, here's an exercise for you: Write a method, maybe 10 lines or so, that does something you can test. Write tests for that method (or write the tests first, whatever tickles your pickle). Now find a couple lines in that method that you could extract to a private method, but don't extract them yet. Are those lines covered by your tests? They should be. Now, extract those lines to a private method. Are those lines still covered by your tests of the public method?
Sure it does. By design, It's wrapped in an DBSet&lt;foo&gt;, as a member of the context that inherits DBContext. So...two clear indicators that it's an EF entity. 
Nope MonoDevelop. :) I'm doing this all on a mac. :) Your code does compile in Xamarin Studio with the latest version of Mono. Unity 3D is just older. 
Do you have SQL Server 2008 installation media?
The only thing I don't like about the query syntax is you need to wrap it in paranthesis to call .ToList().
Oftentimes you can move private methods into another class where being public makes more sense.
It forces R# to treat the type as if it might be in use by some 3rd party code.
Sounds to me that the solution that is expected is a function that finds the index of your hyphen (I'm assuming the input string will be something like "Atin-lay Ig-Pay"), replace the hyphen with an empty string, go one index forward, replace "ay" with an empty string, then insert that to the front what is left over.
Put your caret on the property, Alt+Enter, Copy comments from base https://imgur.com/wTmxFbQ
No it isn't. EF requires one because it is using reflection internally. A default constructor is not required for serialization. Some deserilizers require a default constructor (xml) but not all. 
Please post your code so we can review
I'm more of a visual person. Here is a simple scenario for #5 and #6 of your questions using the concepts kind of outlined by /u/kyalo40 above. Note; this is a short specific example of code, but you could have a more generic repository code like in my comment of this post -&gt;[reference post!] (https://www.reddit.com/r/csharp/comments/3vab0c/code_review_on_little_aspnet_mvc_project/) Lets say you're tasked with building an application which uses a simple Person model as such... public class Person { public int Id { get; set; } public string Firstname { get; set; } public string Lastname { get; set; } public int Age { get; set; } } You don't want to setup a database, or use some other method of persistent storage, you want to jump into design / flow of the application. So you create your Service layer using this repository interface, and the in memory (using lists) repository type to start with. You start building the rest of the application around IPersonRepository using InMemoryPersonRepository. public interface IPersonRepository { Person FindById(int id); IEnumerable&lt;Person&gt; FindAll(); Person CreateOrUpdate(Person person); void Delete(int id); } public class InMemoryPersonRepository : IPersonRepository { // implements all functions defined in IRepository, using a List&lt;Person&gt; } Your app is complete, or near complete, and you are ready to persist data so you can go live, or test larger scales of data. No problem, you create a new repository type, and change where you defined IPersonRepository to use: public class SqlPersonRepository : IPersonRepository { // implements all functions defined in IRepository, using a Sql Database } Your app is running so well, you need to scale out. So your boss says, they want the app to be accessible across multiple locations, so you move your repository to a cloud environment. Something like; public class ApiPersonRepository : IPersonRepository { // implements all functions defined in IRepository, using web api calls } Your repositories are interchangeable, because they all have to follow the method definitions in the IPersonRepository interface. So you can change anywhere you see IPersonRepository to any of the classes defined above, without breaking another piece of the application. Most of your application doesn't know or care where IPersonRepository is getting it's data, it just needs to be able to use the data it returns. DI concept takes this one step farther. You define / register which repository types to use when creating an instance of IPersonRepository. And only need to change the define / registration location when you switch repository types to make the above changes. These concepts also allows for mocking of interfaces when testing classes that use say the repository to obtain data. Those classes are now easy to test! hopefully this wasn't to much of a ramble, or repeat of what others have said.
just curious, why do you need to do that? or is it just that the syntax bothers you? edit - nevermind, you said that the syntax bothers you :P
I have added some code examples in the README now.
How would I do that? I don't see and .suo file in my local files. How would I prevent in from being there in the first place next time?
Thank you for your help, I appreciate it. &gt; hopefully this wasn't to much of a ramble, or repeat of what others have said. Absolutely not, it made it a bit clearer for me. Specially combined with the [source code](http://pastebin.com/ieNvxmsR) you wrote in that other post review. This was a useful key concept as well, I think that makes it click for me: &gt; DI concept takes this one step further. You define / register which repository types to use when creating an instance of IPersonRepository. And only need to change the define / registration location when you switch repository types to make the above changes. It may seem obvious to people already using DI, but as that was not my case I think this is some key piece of information that lets me understand a lot more why / how DI is used.
Why are you splitting at dots?
no, Type is the third column but when I check the return value with MessageBox.Show ( tablo.Rows [ 0 ] [ 0 ].ToString () ); it shows the Type value correctly.
i have no idea why it works and what is trim. Also i changed Admin instead i went for 1 and 0 so it worked like this: if ( Convert.ToString ( tablo.Rows [ 0 ] [ 0 ] ).Trim ().ToLower () == "1" ) { addAUserToolStripMenuItem.Visible = true; MessageBox.Show ( "haydi" ); }
Trim removes trailing and leading whitespace. 
Yup. I think the query syntax is elegant but having to wrap it in paranthesis kinda ruins it.
Rotating rainbow colors would work until you figure out the text color peaking.
It would be neat if it started at a certain WPM and then got more intense the faster you got, so you'd feel like you were on CSI and the only way to hack into the villain's computer would be to type faster than the CPU can process.
Colours based on WPM is a quality idea. Gimme gimme.
``` string message = (userValue == "1") ? "boat" : "strand of lint"; ``` This line uses the ternary operator to do all of this in one line: string message = string.Empty; if (userValue == "1") { message = "boat"; } else { message = "strand of lint"; } With the ternary (?:) syntax, you can declare and assign the variable in one step and save 6 lines of code. 
Please reformat your code. If you put 4 spaces in front of each code line, reddit treats it as code. What kind of column type is Type in that SQL table anyway? What do you get if you run the query in SQL itself? Btw, Type shouldn't really be used as a column name. Use Role or something.
When I first learned how to write tests, I went overboard and tried to Test All the Things. If you're chasing a code coverage number, you can indeed use tricks to test private methods, or make everything public. I stay really far away from that now. One big advantage of having a good test suite is that you can refactor with confidence, but by testing private methods and the other "guts" of your classes, you lose that because your tests are so closely tied to implementation details. My testing methodology isn't perfect by far, but my goal now is to test *behavior* rather than implementation. Usually that translates to higher-level tests that only care about interface contracts. 
Whao. Can it do fancy colors?!
We built this to make working with our larger models in an Angular SPA application easier to work with. Hope it's helpful to someone.
Their is a Implementation by Microsoft itself: https://msdn.microsoft.com/en-us/library/system.security.cryptography.md5cryptoserviceprovider(v=vs.110).aspx
https://joshclose.github.io/CsvHelper/
You should be able to speed things up by increasing the buffer size http://stackoverflow.com/questions/1177607/what-is-the-fastest-way-to-create-a-checksum-for-large-files-in-c-sharp/1177744#1177744
The naming is inconsistent and Enums should be capitalized, looks like a low quality blog post.
+1 to this, no need to reinvent the wheel. Have used this library several times with no issues.
Yes, interesting solution. You are checking the first three elements of the byte array, which I considered doing but I consider that polluting the hashing mechanism. I should be able to hash as fast as I can on Java in C# too. So far I have managed to shave it down to thirteen or so seconds. Which is still a good ten seconds off my Java time.
I do agree on the hashing as fast as Java. When are you comparing your times though? Start to finish, or just the hashing process itself? But since ComputeHash is already returned, isn't the hashing mechanism over with? Just skipping formatting on hex values that doesn't match the criteria?
[List&lt;T&gt;](https://msdn.microsoft.com/en-us/library/6sh2ey19%28v=vs.110%29.aspx)
https://msdn.microsoft.com/en-us/library/6sh2ey19(v=vs.110).aspx
var myList = new List&lt;string&gt;() ; myList.Add("foo"); if(myList.Contains("foo")) {...} //true
OP obviously lacks very basic/fundamental programming knowledge, so just telling him exactly what to do is the wrong approach IMO.
That runs for me in about six seconds. [**This**](https://gist.github.com/anonymous/f099abc6784872ff36a4) is what my code looks like. Ignore the duplication of code, I am doing it on purpose. You'll need to NuGet in [**this**](https://www.nuget.org/packages/BouncyCastle/1.7.0/) library. I figured out how to use part of it and it did shave off three seconds for me.
I am about twice as fast by avoiding allocations: http://pastebin.com/WdaQxpfG
A newer way to initialize the List: var someStrings = new List&lt;string&gt;() { "One", "Two", "Three", "Four" };
Because you know you only want a hash with six zeroes you change hashing mechanism, instead of keeping it pure. As I said earlier, I could have done the same thing. But I was keen to keep the hashing mechanism pure, and attain the speediness of Java.
But I am not touching the hashing mechanism. `provider.ComputeHash()` computes an md5 hashcode of an input byte array. I don't need to write that at all. Converting back and forth from a `string` to `byte[]` and allocating the spaces needed for that and invoking the garbage collector when that happens is what is causing you slowness.
Brb modding my PC to use a TI-89 processor. 
Unless it's part of the public API surface, make it internal. Though if breaking a piece of functionality into a separate project is a good idea (such as for DI reasons), I don't hesitate to refactor it out and make it public (avoid `InternalsVisibleTo` unless there's absolutely no other choice).
They serve somewhat different purposes, and I'd say that DataAnnotations is complementary (in fact, might be fun to add a Jschema validator to our model generation as an option). sharp2Js is really just a client-side model generator. Most of the benefits, at least for us, are around wrapping our DTOs to provide computed properties and other housekeeping/utility functions in an angular context (data binding). Another advantage is design-time model code-completion. We have some really large models and Webstorm (our editor of choice for the front-end) picks up on the model signatures. At the end of the day, we like working with typed models, but stubbing all those out by hand is more tedious than it's worth, so we wanted a generic way to generate those models for us. Maybe the last noteworthy distinction for us is that sharp2Js doesn't have a dependency on any serialization library, and the configurations are meant to keep it fairly neutral to handle as many variants as possible. We use Jil, and have used ServiceStack.Text, but we don't use JSON.Net because of the relative performance increases seen using Jil.
Honestly, I think you just re-implemented [ConfigurationManager](https://msdn.microsoft.com/en-us/library/system.configuration.configurationmanager%28v=vs.110%29.aspx) and its ConfigSections.
Well the mainframe program is run inside Attachmate. So it does have an API. Not sure how you find specific fields though.
Why is the hashset better?
 if (hash[0] == 0 &amp;&amp; hash[1] == 0 &amp;&amp; (hash[2] &amp; 0xf0) == 0) return counter; clever :)
Have you looked into automation applications like Autohotkey or AutoIt. The task you are performing can be easily scripted and performed using these two similar programs. Both of these applications could easily perform all the tasks that you specified. You can probably learn and have something up and running in no time. Both apps can make an GUI interface for the end user, open an IE session and log into web app, then parse the html from IE for the information that you need, copy and paste it into Excel, etc... it's what these two apps were written to do.
IMO the way to go is "Hey, you should learn about data structures!" and link to https://en.wikipedia.org/wiki/Data_structure and https://en.wikipedia.org/wiki/List_of_data_structures
This is awesome! Thank you so much for letting us know about this!
I did about 20 minutes of research and couldn't come across it. Thank you for this!
Did a quick look on my phone. You are instantiating a new instance of user every time regardless of whether you found it in the database or not. When you do that, it basically tells EF that you want to insert a new record. If you just update the fields it should update the record. It's the change tracking in EF.
No point. The intention is for others to be able to use the private key.
Wow... That is pretty awful code.
Not much wrong with it, to be honest. What do you think that's wrong?
That's like telling a kid asking how to zoom the camera that he should go to film school first.
Oh nice! I hadn't seen these before. We'll probably use this when we switch to typescript. Thanks!
1. `UserHostAddress` does not contain the IP address of the user when the request is proxied. 2. `getOperatinSystemDetails` disrespects the common naming guidelines (pascal case for method names). 3. No method documentation. 4. No argument check for the parameter `browserDetails`. 7. **Doing Pokémon exception handling.** 8. **Using exception handling as flow control!** 
The EF context is on the API base controller which my controllers inherit from, it's referenced as 'Repo' in code.
Ah, I see. I would use something like this (http://www.entityframeworktutorial.net/change-tracking-in-entity-framework.aspx) to show what entites EF is considering for updates/inserts/etc. I'm a little fuzzy - the object's that you're fetching are (should be) attached to the context right out of the Find method. Are you overriding your SaveChanges method at all? I can't wait for EF7 - it fixes these types of issues (and no more Find methods). 
Names are not necessarily unique
This is amazing, I wonder how hard it would be to do in Chrome or Firefox.
Thank you! This is easily the best advice i've gotten on multiple websites. I wasnt aware of this Chrome function and it was of a great help! I have already been able to log in using HttpWebRequests, which is more than i was able the last few days :)
What is Pokémon exception handling? 
Presumably this: catch { if (browserDetails.Length &gt; 149) return browserDetails.Substring(0, 149); else return browserDetails; } &gt; Gotta catch 'em all
I spent about 3 hours on this trying to figure it out. My programming teacher is very poor at his job. Just has us copy down what he writes rarely makes us make our own game.
Thanks for the response, I spent over 3 hours looking at my code and I am still scratching my head, I feel like it is a simple mistake, if you could look at the source code that would be great! Thanks in advanced. http://pastebin.com/07izxkbR I use the break on each code so then no infinite loops are interfering. 
Alright, thanks will do ^^
No, I just want everyone on the domain/intranet to be able to access the site to be able to get the information, and only allow the information that that their account has access to from the WCF service. Is there something like that, that I need to put into the web.config?
You're welcome. It's curious how the offer isn't more widely known, I thought something like this would have been announced by microsoft in a big event.
[removed]
[removed]
The disruption to our workflow from the web app not being properly synced to the mainframe platform. It's a known issue. But im confused, are you saying I should not be looking for API Access? I could ask someone in the company who works on the mainframe platform if they know how to access the particular fields I want but as I'm just a clerk I don't know if they would share it with me. The web app people have said they dont have a public API and do customizations on a case by case basis.
You should use TryParse instead. That's what it's for.
What's wrong with this? if((string!=null)&amp;&amp;(!string.IsNullOrWhiteSpace(obj.property[i].value)) { d.Cost = int.Parse(obj.property[i].value); }
Yes this. Please use TryParse instead of using exceptions for call stacks. It makes the code clearer, plus exceptions are expensive because they are supposed to be used in EXCEPTIONal cases. This means the compiler is optimizing for the non-exception case. Throwing exception results in expensive call stack walking.
This will work only when obj.property[i].value is null or empty, if it contains string value it throws error.
Thank you for this, I'm still new to C# and didn't know about this method. Exactly what I was looking for!
Yeah, I mean, if you know absolutely for sure it's going to be able to transfer to an integer yeah - use parse. Most stuff I have worked with doesn't always seem to be the case though - as evidenced by what OP was trying to do.
No one's mentioned in general..... If you're writing fast code - AVOID TRYCATCH AT ALL COSTS! That bitch is slower than checking many edge cases. That's when the exception's thrown though - unless that happens the code is pritty much the same. Although - *sometimes* the JIT won't optimise in quite the same way in a try block - especially if variables are shared between it and outer blocks of code. http://stackoverflow.com/questions/52312/what-is-the-real-overhead-of-try-catch-in-c http://stackoverflow.com/questions/1308432/do-try-catch-blocks-hurt-performance-when-exceptions-are-not-thrown http://stackoverflow.com/questions/1350264/try-catch-performance 
My pleasure. You could also try out this Nuget package: https://www.nuget.org/packages/FluentConversions/ I am biased since I wrote it. But it is a convenient tool for converting things easily.
You should update the readme on the github page with some examples. It's an interesting library and if it does what I think it does, I'd probably use it. 
Sure, but I at least start out with the assumption that the data is sane. It's easy to fix a thrown exception. It's however much harder to fix an error where no exception is thrown.
Well, I come from a world where data is not sane... and most real world projects I have worked on over the years seem to be the same way.
I've been looking for something like this for a long time! WPF in my opinion is the nicest way to create UI based applications and I've worked with alot of APIs, from Win32 to Css. Good look! and I hope Xamarin or even Microsoft take an interest. 
Although TryParse already sets the output to 0 if it returns false.
Primitive ints default to 0, so it doesn't even need to be explicitly set
No need to "avoid at all costs" - if something is truly exceptional, then just do a try/catch for it. It's exceptional, it shouldn't happen anyway, so the performance hit isn't really a problem. The `try` part of a try-catch is no longer than just running the code normally. It's only when an exception gets thrown that you incur the performance hit. Do not avoid try-catch at all costs. It can be quite useful. Even in code where performance is important. As long as you use it properly. Now, the other side of that - you should avoid using try-catch for *flow control* at all costs *in any code*. If something happening is a normal use-case (note that bad data entered by a user is still normal use case!), look before you leap! Check that your variable isn't null, or whatever else before just jumping forward. If you stick to using exceptions in exceptional circumstances, and looking before you leap to try and avoid throwing an exception in standard uses, then whether or not your code is supposed to be high-performance doesn't matter. Exceptions won't affect it.
Yeak, ok..... I mean in performance critical areas... But sometimes an exception is much cleaner than a fukton of checks.
Yeah, I over-generalised. &gt;Now, the other side of that - you should avoid using try-catch for flow control at all costs in any code. If something happening is a normal use-case (note that bad data entered by a user is still normal use case!), look before you leap! Check that your variable isn't null, or whatever else before just jumping forward. Yeah, I should have thought longer, and would have said something similar. (I hope).
In C#, throwing exceptions is very expensive. int.Parse in loops in notorious for this. As people are saying, use TryParse instead - it was introduced in C# 2.0 for precisely this reason... 
Yes, it does. You're right, removed it.
Sorry if I was unclear. I meant the API was the direction to look. If you are just a clerk, why is it up to you to do this? With the current median wage for a developer, you are probably being asked to do something you are not being compensated for appropriately. 
&gt; If you're chasing a code coverage number, you can indeed use tricks to test private methods, or make everything public. If you can't reach 100% coverage of your private methods just by testing the public methods, that's a sign that the private methods contain some useless codepaths.
A void method does not return anything, it simply does something. Right now your GetAll() method, which is void and doesn't return anything, is executing this query ("SELECT * FROM Authors") onto the database. Once it has the return of that query it goes into this: if (reader.HasRows) { while (reader.Read()) { Console.WriteLine(reader["Author_Name"].ToString()); } } That is writing the name of the Authors into the Console. That's the action your void GetAll() is doing. You want GetAll() to return the data as a datasource? My suggestion is to change it from a void method to return the data type that you want and construct that data with the reader. 
Thanks for your help i will try from there, just thought i had my getall sorted that all i need to do was to return a value at the top. 
I would suggest using a community version of Visual Studios to create this application in C#. C# is definitely better suited for small desktop apps than C EDIT: Also I'm pretty sure you can use C code in unsafe blocks in C# so you may be able to use some of your existing C code in your C# app
I think the biggest question is what type of industry are you trying to get into or what type of product are you trying to build? Meaning, you wouldn't really want to build a web service in C, but you might choose that language to build something like simulation software. Also, /r/cscareerquestions
Thanks for the reply, already have the visual studios community and following yellow book as of now, i'll stick to it
Sure thing, man. And the simluation software I referred to was simply an example. I used to work out at Kennedy Space Center and we were surrounded by military contractors that would hire for C developers all the time to create simulation software. For small business apps I'd say definitely stick with C#.
Ugly. Why not use something like [csvhelper?](https://joshclose.github.io/CsvHelper/)
Also true.
You can use [Mono](http://www.mono-project.com/) and [Xamarin Studio](https://xamarin.com/studio) on a number of platforms. [Visual Studio Code](https://code.visualstudio.com/), too.
I don't have a link confirming this, but I remember reading that some or all of the hashing functions in the cryptography namespace run in a fixed time to prevent timing attacks. So regardless of how fast it can hash, it's going to wait until enough time has passed before returning a result. 
Ah, I see. I guess I can understand the logic behind it. Would love to see the article on this if you come across it again please.
Do not write your own CSV parser.
Pretty much. It's not small or subtle, as the app is now taking on this gamification as its main role. It's a lifestyle app, like a journal/log of activities a person can do. Now they want to assign points, badges, and ranks to these activities. Was wondering if there was an "standard" approach to this, or if it ends up being a lot of custom/one off coding type of thing.
No, not at all. Data-driven game development is a *big thing*. Create classes to represent your basic entity types (badge, rank, score, whatever). Provide an admin interface for creating customized instances of these entities, which can then be assigned to players when a certain event is raised, etc. You need to read some books on game development to get an idea for the common patterns involved, because what you're thinking right now will make things far more complicated than they need to be. Most important patterns for you: event/flag/game script system and data-driven game entities.
Sure it is. XNA was huge.
In that case, RIP.
Perfect! Is there any book, online blog or resource you could recommend over another?
Not really, I don't do much gamedev. Most of what I know is just picked up randomly.
I do a ton of socket programming. There probably isn't a book that covers sockets exclusively. Allow me to share my experience. Most of the c# client-server examples you'll find are either complete garbage, or woefully inadequate. You'll really need to absorb little lessons from each of them. I would first learn how to use c# sockets before you jump into using the TcpClient/UdpClient wrapper classes so you get a better understanding of how this stuff works. [Start with the basic syncronous/asyncronous MSDN examples](https://msdn.microsoft.com/en-us/library/w89fhyex%28v=vs.110%29.aspx) [Teach yourself about the dreaded half-open TCP socket](https://en.wikipedia.org/wiki/TCP_half-open) [More half-open stuff](http://blog.stephencleary.com/2009/05/detection-of-half-open-dropped.html) [Then look at some advanced client-server applications that handle all of the possible drop states](http://www.codeproject.com/Articles/884583/Advanced-TCP-socket-programming-with-NET) 
This is pretty off-topic IMO. This has nothing to do with c sharp, the language.
Well, like someone else said, Mono with Xamarin Studio is a possible option.
well its not "one off" if you design your core game engine correctly, but AFAIK there is no off the shelf solution ot it.
you're building an achievement system and might have better luck googling for that term rather than generic gamification stuff. the publish-subscribe pattern or something similar is a good way to approach this. you'll be storing some relevant information as part of your user object. whenever that information is changed, a message would get published. various subscribers would then perform the necessary checks to see if an achievement should be awarded. you wouldn't necessarily have to write more code to add additional achievements if you make a data-driven system. chances are most of your badges are going to fall under a small set of categories. add the appropriate checks for completing some task with an id. your achievement would be defined as the task id to look for and the number of times that task needs to be completed. adding another one could theoretically be as simple as adding another data entry.
Hey, professional gamedev here, and as luck was have it, I've done adding an achievement system to a game before :) There are a couple of approaches, depending on what your badges are awarded for. Generally such things fall into two categories: boring statistics, or one off achievements. For the boring statistics, it should ideally be based off of stats you're already storing. In that case just make a data store of some kind (a table if you've got a DB), detailing the requirements for the badge, what stat (in what table), what value to beat, whether beating is higher or lower. If you need to make compound stats add a system for that. Then hook a check for entries in this table whenever your stats database gets written to. This way any stats-type achievement being added should be as simple as adding a data line, and that's it. For one-off type achievements, there's two options. Cheat and reuse the stats by making whatever the event is increment a DB line, and make an achievement requiring a value of 1, or bespoke code for that achievement in particular. The bespoke code is common in games, because one off achievements are usually for quite unique situations. While I'm writing this effort post, if you want to see why bespoke code for this kind of achievement isn't so bad, look up an achievement called 'Little Rocket Man' in one of the Half-Life games (HL2: episode 2, I think). Please try and make at least one of your badges as weird/interesting as that :D
As someone just starting to learn C# from the basics (I have some 101 level experience in programming from a few years ago), this is awesome. I had no idea this sort of stuff could be accomplished with relatively small program and a few dozen lines of code. I'm not sure how inspiring this is to seasoned devs, but this is super cool to me!
Yeah I have written a few games for the 360 using c#, it's actually the main thing my company has been doing for the last 5 years. The clr and garbage collector implementation were horrible though, garbage collections also take around a second so we have to make sure it never runs during gameplay.
But xamarin studio still requires installation... or is there portable version?
I'm sure there is. Worst case scenario, you could build it on a system at home and then copy it to a thumb drive or something to run on another system. Running VMs is another option, if your school has some VM hypervisor preinstalled on their systems. A third option might be to containerize the application, if you have MSDN access.
It will be difficult to avoid recoding when token rules change ( requirements changes ). One of the easiest things I can think of is to make a global MVC handler that runs after each request. If the response is successful and the route matches a "scored" list, then grant some tokens. You could load the route list and point lookup via web.config or database or something. However this will make it harder to implement if you want to grant a variable amount of tokens based on the request/response, so be careful.
Have you looked into open badges from Mozilla? It's what I used to build our badging feature. One thing to keep in mind is you'll probably some sort of public verification page so Peele that earn them could possibly share them. I basically built my badging classes, then created a public api to serve up the data from them, then used that for all my various pages.
I could have sworn there was one minor difference in the syntax somewhere. Maybe I'm remembering the array syntax and confusing it with the pointer syntax. I do know that arrays are declared differently. 
Nice post. Don't forget to cross post to /r/dotnet for ASP.NET posts.
Then fml maintaining those hundreds of stored procedures.
Why would GUID's be stored as varchar?
That's the way I roll. Most apps don't need hundreds. If performance matters hire a DBA.
Enterprise Library 6, Data Access Application Block and stored procedures. https://msdn.microsoft.com/en-us/library/dn169621.aspx
Dapper. There are extensions to it for crud if you need it. 
It's funny when SQL, practically the highest level way to access your data, is referred to as "low level plumbing" by ORM pundits.
Amen to this. We've experienced nasty deadlocks in production and it's impossible to debug the generated SQL. It's great for prototype stiff but it's not enterprise-ready IMO. If you're just interested in mapping models to SQL rows check out dapper on github
You could possibly host a VM on Azure or just run a VM on school computer with .NET framework running and IDEs