would i even be able to help on this? i know nothing about actual medical stuff. Ill download the source in the next few days and take a look, what would you want me to do? since there are no issues listed im not sure where i should start.
There is a feature in Visual Studio under Edit -&gt; Paste Special that is called Paste JSON as Classes.
Can you come up with an every day situation where you use this? It's one of those features (to me) that sounds neat on paper, but I have never come around to use.
I have some code that does this. PM me on monday and I can help out.
I am interested as well, can you give a brief explanation of what objective do you pursue? I would like to contribute. 
I'm looking for help. It's not too large a project for new devs, but large enough to get you in the mind set. It has web api, winform, and angular projects. Link is below, if your interested let me know I'll help get you started.. which will help me document it better. üòÅ https://github.com/bluesektor/TreeMon
Will do thank you
I would happily modernise the UI side of this, and add more options to make it more professional. 
I did it as you proposed here with throwing a new exception. This is rely good approach!
The `public string {}` block is the property.
If you reference a dll it will not pick up its dependencies automatically. If you reference another project it will work. Nuget can solve these problems for you too. 
10-4, I guess that makes sense. Is there a way to reference a Project that is outside the current solution? Only things I see available are to pick a .dll, .exe, etc? And yeah, I figured it might end up that I need to use Nuget to pre-package my referenced project, I guess that's okay too just haven't done that before.
Try using the "--self-contained" option https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish?tabs=netcore2x 
Thanks, I will try that out too - that seems like the right kind of option to take care of this. But maybe I'm just better off using Nuget; I will play with both options.
https://github.com/Wyamio/Wyam Static site generator with a decently active dev community.
Linq to Sql is deprecated, according to Microsoft, with Linq to Entity being it's successor.
If it's outside the solution, you may need to set up a nuget repo
This is the best thing I've ever seen. Thank you &lt;3 
Everything a network admin needs: https://github.com/BornToBeRoot/NETworkManager Would be great, if some people would help to work on it. New features, fix bugs, documentation ^^
I was taught properties are like a 'safe' or a backing store, useful for various things. Like in your example here you have a setter that only sets the value if it is greater than zero. Why It makes sense that it's a 'safe' is that the private variable, in this case _x, can only be accessed in this scope. You can't access it from outside of this class, even if you were to create an instance of it. That's where the get and set come in. If you want a property to be read only, you'd define only a get, meaning this property could only ever be read, and no value could be set (unless done in the scope of that property). If you want a property to be write only, you could define only a set, meaning you could set the value, but it could only be read from within scope. 
Yeah, the majority of the work on the project is based on the UI- user enters vital signs or other parameter, I‚Äôve already created all the modeling of rhythms and other medical-type modeling, and then displaying to the simulation window. The next step is integrating the maternal fetal heart monitor- I already implemented in the UI a place for obstetric vital signs/parameters to go (fetal heart rhythm, contraction rhythm) and have yet to make the simulation window to mimic an actual fetal heart monitor. Creating the ‚Äúdevice‚Äù that is simulated is mostly a matter of copy/pasting the class I made for other device windows and changing the UI. For more info on what a fetal heart rate monitor looks like, Google ‚Äúfetal heart rate monitor‚Äù. That was the feature that I was going to be content calling it version 1.0 when it‚Äôs done... lol. Even though the whole program is stable and usable. 
I actually redid the UI a bit a few months ago. It was WinForms and I (learned and) rewrote it into WPF. There are screenshots in the website somewhere that reflect the change. But in the same vein, I must say that since the program is a simulator, UI is a majorrrrr portion of the program and is essential to it being accepted as a teaching tool and taken seriously, so any help is appreciated. 
I fee your pain. As an engineer who has created some programs to achieve various things, not being in ‚ÄúIT‚Äù causes havoc when trying to develop/deploy something - deploying an EXE is all but impossible, and most of my work runs in the Visual Studio ‚Äúrun‚Äù mode, to keep it away from requiring admin rights! If it‚Äôs a dashboard, have you considered PowerBI for your project? It seems you can use a number of non-VBA languages, including Python. It may help with deployment and can use a number of sources (inc XLS) for data input. https://community.powerbi.com/t5/Community-Blog/The-Languages-of-Power-BI/ba-p/69104 
I‚Äôd like it to be a usable, accessible, trusted tool for practice in educating health professionals. It is too technical to be a standalone teaching tool, but is pretty thoroughly helpful when used as a teaching tool and for testing scenarios. It simulates advanced medical care that takes place in premier hospitals across the world. It literally simulates what people call ‚Äúlife support‚Äù devices. But it can be used to teach basic nursing and medical skills as well. My main objective has been creating it to be useful (done), accessible (done, open source), scalable and expandable to simulate more devices (to do), and to get the word out to potential end users (hospitals, universities, medical students, nursing students). And by adding support for languages, it opens up the potential user base to the entire world. I have also realized that there is potential monetization for this project (side-loading custom built simulation exercises, for example, with the custom exercises being closed source), but it clearly hasn‚Äôt gotten that far, and I really only want monetization of additional features if it will further the project‚Äôs main goals of being usable as a teaching tool and accessible (open source and free).
alright i'm just assuming you've googled and found https://msdn.microsoft.com/en-us/library/system.icomparable(v=vs.110).aspx but didn't quite understand it - which is fine. Basically the compare to method expects you to return an number that indicates wether the position of this element in the list should be lower or heigher than the object it's being compared to. so -1 or -100000 for "dude this object goes before the one it's being compared to!". 0 for "meh equal" and +1 to over 9000 for after. so you'll need to come up with criteria these employee objects should be sorted by. By alphabet? by organization hierarchy? Neat thing about IComparable is: most value types implement it and behave like you'd expect. So you can just in your custom Object call thatValue.CompareTo(thisValue); in alot of cases.
Here are my advices on your code. First of all, you shouldn't use ArrayList anymore. You should consider using a List&lt;Employee&gt; instead, it's been standard since .NET 2.0. Next, the easiest route would be not to implement any IComparable logic, and instead use the LINQ methods for sorting: var employeeList = new List&lt;Employee&gt;(); // add employees employeeList = employeeList.OrderBy(x =&gt; x.Name).ToList(); That way employeeList will be sorted (because Name is a string and already implements IComparable) with little effort.
A couple of examples I can think of off hand are traversing collections in a strange order. If you need to traverse BST in a custom order it's useful (e.g. lowest-first, highest-first, leaves-first, etc). Since the yield returns are evaluated lazily, you can also use it to calculate only the parts of collection you need. The following may be a bad example but, if you needed a collection that consisted of the results of 1000 REST calls, you yield return the result of each REST call to delay the invocation of the next REST call. If at runtime you determine you only needed the first 4 REST call results, you saved yourself from making 996 REST calls. Yield return definitely isn't a feature that is used every day, but it's definitely more straight forward that writing your own IEnumerator/IEnumerator&lt;T&gt; class 
Exactly, perfect dude.
Are you planning on keeping it open source &amp; free etc?
https://github.com/powershell/powershell ????
To expand on this comment with some more code information for those who are interested. A property is essentially just syntactic sugar for a private field and a getter and/or setter method(s). During compilation, the following happens: class Foo { // This single auto-property... public int Bar { get; set; } // Compiles to roughly the field and methods below: private int _bar; // not the actual compiled name, illustrative purpose only public int get_Bar() { return _bar; } public void set_Bar(int value) { _bar = value; } } If you want to do more than simply using an auto-property (such as validation as shown in the OP), you'll need to create the backing field and getter/setter code yourself. Note that code within the curly braces of getters and setters is really just a regular method block. This also explains the availability of `value` in the property setter. It is the parameter of the compiled `set_Bar()` method. Also note that the code above won't compile as-is, as there are naming conflicts between the manually created getter and setter methods and the ones to be compiled for the property. Properties can have a different accessibilty for getters and setters. For example, you could do: public int Bar { get; private set; } This would allow public access to the getter and makes the setter a private method, essentially turning it into a read-only property. The setter is then typically called within the constructor or other methods in the class. Recent versions of C# also allow the omission of the setter in a property entirely (`public int Bar { get; }`). In that case you can still set a value, but only within the class' constructor, much like `readonly` fields. Finally, while it is true that most properties do indeed require a backing field for that property, that is not always the case. Since properties are basically regular instance methods under the hood, they also have access to the value of other properties (if they have a getter) or private fields. So this too would be valid even if the `FullName` property lacks a backing field of its own: class Person { public string FirstName { get; set; } public string LastName { get; set; } public string FullName { get { return FirstName + " " + LastName; } } }
For continuous communication, web sockets are probably the way to go, and I‚Äôve found SignalR to be a nice wrapper around web sockets (and in fact, I believe SignalR uses other technologies to achieve the same thing on clients that don‚Äôt support web sockets).
&gt; nt in the list should be lower or higher than the object it's being compared to. so -1 or -100000 for "dude this object goe THX, that solution looks grate and neat, but unfortunately I need to make it with IComparable. This is one of the exercises for my studies. By the way, I have found this tutorial: https://www.youtube.com/watch?v=aziIUaN2mtk The guy is doing the same thing that I want to achieve, but he is not implementing any additional interface. How is it possible? 
Do you want to write a solution yourself, or are you looking for a solution for what you want to do? It sounds like something like MSMQ, RabbitMQ, ActiveMQ, ZeroMQ, or Kafka might offer the features you want in a mature package that you don't have to spend time developing for yourself. Specifically for logging there are also many options that you might want to investigate. Some of these include agent software that will read existing txt log files and deliver them to a logging system where other applications can access them.
Correct, it does deal with the prerequisites. However, when I made the Outlook ribbon button I used VSTO which required at least .NET 3.5 (client had 2.0) and VSTO Tools which they didn't have either. I'm not 100% sure but I think it would be a lot harder to (if not impossible) to do it with VSTO.
Yes, C# is a great starting language. C# and Java share many design decisions so learning one makes learning the other much easier. The markets vary by region, so you may want to find out where you want to work and find the languages most sought in that region. Here is the latest stack overflow developer survey https://insights.stackoverflow.com/survey/2018#technology-programming-scripting-and-markup-languages Recently it's been just as beneficial to learn multiple languages as learning one very deeply. The important thing is to learn to program. 
Yeah, I was just asking here because I'm positive there is way smarter people here then myself. My dad used to say, multi heads will always come up with better solution than one :) .. The current application writes a line every second, so everything I tried so far to transfer it is little bit behind (I receive it 10 sec later on the other end). 
That looks like really interesting. I will definitely take a look. Thank you for the reply.
As `r2d2_21` said, definitely avoid using .NET 1.x classes like `Hashtable` and `ArrayList` in favor of the generic classes like `List&lt;Employee&gt;`. Also, when consuming these classes, you'll find LINQ convenient. When implementing a class, however, it is indeed a good idea to implement `IComparable`. You're generally on the right track. `IComparable` works by comparing two objects. The argument `object obj` is the *other* object, whereas `this` is implicitly the *current* object. The aspects you want to consider: * is `object obj` always the same class as your current object? * how do they compare? Typically, there are one or more properties of the respective classes. In your case, I'm guessing there's only one property, at least for now. So you want to compare that. * you've already considered that `obj` can be `null`. However, can any of the properties be `null` as well? * lastly, once you have these aspects figured out, don't actually implement the comparison. Instead, call `CompareTo` on each of the relevant properties. E.g., call `this.Name.CompareTo(otherEmployee.Name)`.
I'm always looking for contributors to work on Ombi! My media request app. Got quite a large community now, written in Angular 5 frontend with a . net core 2.0 backend using EF. Check it out! HTTPS://github.com/TidusJar/ombi
Can you tell us a little more about what you want it to do? You said you want to send text data from one system to multiple other systems. Do you need multiple sources and multiple receivers? Or just one source and multiple receivers? What operating systems do you need to support? If a client is offline when a message is sent, do messages need to be stored so the client will not miss messages? Is it important for messages to not be missed or delivered out of order? Any idea where the latency in your current solution is? You can probably trim that 10 seconds down quite a bit if you want to tune your system up a bit.
I would recommend C# especially if you can marry it up with some JavaScript and web development stuff. I used to work in Environmental/ HVAC and hated it so pushed myself to learn C# and web development stuff. I was then lucky enough to get a junior role in it. Best move I ever made. 
I think C# was the easiest for me to learn. Syntactically everything just seems to make more sense to me and working with it is a lot easier. Lots of jobs using .NET MVC at large companies and small. Newer versions of the language and .Net core framework have been huge improvements too. 
I am. I want it to be accessible around the whole world. Even for schools and students and hospitals that may not have the resources to buy pricey simulators or actual devices to teach with. It‚Äôs why I implemented localization and plugged in rough translations for about 10 languages so far.
Look at click-once, which can be deployed to a file share and distributed as a file:// link. Click once can also prompt the user to update their dot net framework themselves and is not "installed" in the same way as an msi. But to flip the argument, most of us here are in IT and the reason why we hate programs developed outside of the department is because people leave and two weeks later we get a call because their mission critical program has failed and nobody knows how to fix it. More than once I've rewritten something based on observation because no source can be found and no original specification document exists.
thanks for the direction, I got it working public class ApiKeyRequirementHandler : AuthorizationHandler&lt;ApiKeyRequirement&gt; { private readonly IHttpContextAccessor _contextAccessor; private readonly ApplicationDbContext _appContext; public ApiKeyRequirementHandler(IHttpContextAccessor contextAccessor, ApplicationDbContext appContext) { _contextAccessor = contextAccessor; _appContext = appContext; } protected override Task HandleRequirementAsync(AuthorizationHandlerContext context, ApiKeyRequirement requirement) { string rawAuthHeader = _contextAccessor.HttpContext.Request.Headers["Authorization"]; if(string.IsNullOrEmpty(rawAuthHeader)) { return Task.CompletedTask; } string[] headers = rawAuthHeader.Split(", "); Dictionary&lt;string, string&gt; authHeaders = new Dictionary&lt;string, string&gt;(); string sentApiKey = ""; foreach(string header in headers) { if(header.Contains("APIKEY")) { string[] splitHeader = header.Split(" "); authHeaders.Add(splitHeader[0], splitHeader[1]); sentApiKey = authHeaders["APIKEY"]; } } var searchApiKeys = _appContext.apikey.AsQueryable().Where(a =&gt; a.apikey == sentApiKey); foreach(ApiKey foundKey in searchApiKeys) { if(foundKey.apikey == sentApiKey &amp;&amp; foundKey.isactive) { context.Succeed(requirement); } } return Task.CompletedTask; } }
I will try to explain the best I can ... So, I have application like a watch dog, keeps as eye on anything that is going on the network drive. So the log is really simple. Example: 08:20am: User x created file 08:21am: User x deleted x file 08:22am: User x did this and did that So, pretty much any changes to the network drive, application saves it to log file and creates a new file every hour. So, for one entire day, there will be 24 log files named by Date.Time. Files are saved to the same folder. As of right now, I usually just login with remote desktop to keep an eye on the app. So, my idea is to create desktop app for (Windows 7 &amp; 10) that can read the text file/application activity real time. I do not have access to the current app source codes or anything. It was created by someone who worked here years ago, so there is no way for me to use that app as server also. My only option is to create server/client and try to read the log files somehow ... Hopefully you can understand my explanation .. Thank you. 
Websockets/tcp sockets
Just wondering what you class to be a beginner level language? I found c# to have the least intricacies while learning, it has a lot of things that stop you fucking up, basically giving you stabilisers when developing. It also has a simple development environment, just install vs and get started on a console app. 
Pick it up, find some good project style tutorials (building an entire app or something from start to end), and head on over to r/learnprogramming when you got questions :-) 
To be honest, this is why many orgs went the web route. Getting IT to roll things out is a pain in many businesses. Web on the other hand takes no such act of God. The data part may be more difficult for you though. If you want to stick with C#, you may want to consider .Net Core and [Eto.Forms](https://github.com/picoe/Eto). Or run a .net core backend with an electron frontend. That would get around the deploy issue possibly. That said if they didn't have .net 3.5 installed then their setup is old considering that came with Win 7. That might mean really old Office, which means no OpenXML lib... And if you need Office integration, the .net core stuff is a non starter at the moment... I guess we would need more info on your requirements/what you're working with but there's a number of options to do what you want.
I got it to display a bunch of stuff for each food button. How do I go about adding values(prices) with them? Do i need a two dimensional array? can i do that in c#?
VSTO will let you use the Excel front end while coding in C#. In my experience, Click Once with VSTO doesn‚Äôt need admin rights but I don‚Äôt know if that‚Äôs universal or just my organization. 
Lmao I swear you're in one of my classes. I just wrote something like this last week. 
This does sound right up SignalR's alley (client subscribes to a server's logging group and gets pushed updates from the server).
Curious: why does RandomList implement ICollection instead of IList? I‚Äôm sure you‚Äôve got a good reason; I was just interested in hearing your rationale. I‚Äôm just glancing at the code on my phone and saw your backing data is a list, and you have an index access method.
I used click-once but I still couldn‚Äôt get it installed without Admin rights. I get your flip side argument and that‚Äôs exactly why I‚Äôm looking for other options. 
Is there any benefit to this over just writing a shuffle extension method?
Data is the issue with web stuff. I‚Äôve created a couple internal dashboards using Flask and Django which everyone likes but we don‚Äôt want to hold our clients data. The only office integration i really need is ability to push charts into PowerPoint decks but in a way that they‚Äôre not pictures but actual charts. I looked at .Net Core when it first came out but will take another look along with Eto.Forms, thanks!
IList must implement Insert and RemoveAt. When I started coding I was implementing IList, but I didn't see any sense implementing that method's in this type of list.
That makes sense to me - thanks for explaining.
how the f am i suppose to get my head around a project that huge on my own?
RandomList has some features. If you add another item to your RandomList, you don't have to shuffle again. Readability and separation of concerns makes that everything time you see a RandomList in your code, you'll know you're working with random stuff. I confess I only think of this until now.
does [CsvHelper](https://github.com/JoshClose/CsvHelper) help?
He's using `string` objects in his list. The `string` class _does_ implement `IComparable`, so he can use it as-is and sort out of the box. If you're using your own custom class, you have to implement the sorting behaviour. C# doesn't know how you want to sort it, so you have to tell it how. There's information and an example implementation here: https://msdn.microsoft.com/en-us/library/system.icomparable(v=vs.110).aspx
Huh, now that‚Äôs surprising 
Agreed. Had been using Nunit for years, but moving to .net core caused TeamCity issues with the test runner. Moving to xUnit solved that with no build configuration changes and local test runners (live unit testing, ms test runner, command line "dotnet test" and resharper test) all work.
And using String.Empty tells anyone reading your code (including yourself later) that the empty string was intentional and not actually a string value that's missing.
 &gt;**TL:DR; Content-Type (application/json) is mandatory, and Content-Length results (even though it's 0) in API errors. How do i add Content-Type to Windows.Web.Http.HttpRequestMessage/HttpClient without Content-Length? I don't understand the first part. I have always used an Accept header of */* for all GETS and never had a problem. I have never heard of an API requiring a content header on a GET. Content type is almost exclusively for POSTs and PUTs. Why are you worried about content length? The API should give you the whole payload as content length is only set if you PUT or POST. If you using http client, just open an httpresponse after the client. This is standard httpclient usage and is found in the msdn documentation. 
Some feedback: * Your [out of bounds checks](https://github.com/nminaya/RandomList/blob/52e085a1bf7fae3a67bec2b8da17f961bacf0106/RandomList.Core/RandomList.cs#L36) on operator [] are incorrect (should be &gt;= Count) * Your comment below about adding an element to random list not reshuffling is [incorrect](https://github.com/nminaya/RandomList/blob/52e085a1bf7fae3a67bec2b8da17f961bacf0106/RandomList.Core/RandomList.cs#L91) * Every single call to BuildRandomIndexs assigns the output to _randomIndexs - I'd recommend handling the assignment in the function itself * Nit: Plural of "Index" is "indexes" or "indices" * The [dispose method on your enumerator](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/iterators) should probably be a no-op, instead of new-ing an unrelated enumerator and disposing that * Not sure why you're using yield-return in IEnumerator&lt;T&gt;, but creating a whole new class for GetEnumerator() - IEnumerator&lt;T&gt; implements IEnumerator, you can just call your function there. * Would recommend using the [Fisher-Yates shuffle algorithm](http://www.i-programmer.info/programming/theory/2744-how-not-to-shuffle-the-kunth-fisher-yates-algorithm.html) for higher-quality randomness (link includes explanation) * It looks like every modification operation (add, in particular) re-shuffles the list. You could potentially implement a dirty flag and only shuffle at observation time, with the thought being to minimize unnecessary shuffles. Lots more complicated for some totally unnecessary perf, though. Neat. Good job. 
 var list = new string[] { "Uno", "Dos", "Tres", "Cuatro" }; var random = list.OrderBy(o =&gt; Guid.NewGuid());
Check out Pluralsight
What‚Äôs the link for the android class?
I don't get it either. If i strip the content-type header all i get back is errors, and the same errors if content-length is present. I'm not worried about content length, but their service is. Accept is one of the headers that I'm already sending too.
Pluralsight "NET core fundamentals" by Scott Allen
Sounds like you want to learn c# and asp.net. c# is a language, you can build pretty much anything with it now including Android apps. Asp.net is the framework you can use to build web apps. I would also recommend pluralsight, I would recommend doing the c# fundamentals course then move on to the .net core fundamentals course where you'll build a working app. After that there a ton of courses you can do to further improve your knowledge.
Pretty outdated in 2018...
For each position in array, get the equivalent position in the other array and pipe the value through the method and store the new value
Anybody know what movie trailer this is from originally?
try this one.. https://www.amazon.com/Pro-ASP-NET-Core-MVC-2-ebook/dp/B076SPVBXW by the end of the book you have a full functioning system.
I've got this bookmarked, but I haven't watched it yet. Jeff Fritz of Microsoft did an 8-hour ASP.NET twitch stream, building an application from scratch. The archived video is here: https://www.twitch.tv/videos/229614321 
C# is not the answer to all software questions. You'd be better off with Java - it was originally designed to support self-modifying code at runtime. There's even a version that runs in the browser now.
Please don't. Because *each item* doesn't have a consistent guid the collection isn't [totally ordered](http://mathworld.wolfram.com/TotallyOrderedSet.html). This is fine, but not as 'simple': var list = new string[] { "Uno", "Dos", "Tres", "Cuatro" }; var random = list .Select(c =&gt; new { c, g=Guid.NewGuid() }) .OrderBy(i =&gt; i.g) .Select(i =&gt; i.c); https://blogs.msdn.microsoft.com/ericlippert/2011/01/20/spot-the-defect-bad-comparisons-part-one/
Currently, I'm converting all my old .NET projects to Java. As a language, it's just so much cleaner and I've decided that LINQ is far too terse. Splitting all that LINQ out over several lines has been quite cathartic. Once that's done, I'll have the experience I'll need before moving onto "jaget" (think of nuget for Java).
 public class Configuration { private static Configuration _current; public static Configuration Current =&gt; _current ?? Initalize(); private Configuration() { // whatever you need to do here, read from file etc } private static Configuration Initalize() { var newConfig = new Configuration(); var previousConfig = Interlocked.CompareExchange(ref _current, newConfig, null); if (previousConfig != null) { // Was a race and another thread set it first return previousConfig; } return newConfig; } public void Reset() { _current = null; } }
I struggled with the networking course. Met my wife and we went into business together, Childcare. Now we're getting divorced and I need a career. Luckily I'm 31, and have some time left! I've worked in Visual Basic when I was at college, so I will hopefully remember it. 
It is only a Advertisement for JavaZone. But I really wished this would be done as a full movie.
No one cares bro.
You're out of touch with reality. .NET Core blows Java out of the water.
This is my preferred method on any "non-atomic" static variables. I'm at loss (probably something I don't know) why use Interlocked here. Hmm okay, in case there is something self-modifying and "reasonably important" like call count stats or something. In general I just let the race-loaded instances overwrite, the hard work is already done and anyone caching `.Current` is an "calling DateTime.UtcNow in a tight loop is ok" idiot like me.
You could clear all the variables by reflection. Loop through all the static properties and set them to null / default. But honestly it sounds like you need a bit of a redesign. Looking into dependency injection with autofac you can use owned contexts to clear the whole dependency graph and recreate it.
Interlocked is probably overkill :)
Dude, the date.
&gt; I'm at loss (probably something I don't know) why use Interlocked here. My assumption / the way I read Initialize() is that the intent is to prevent Configuration() from running unnecessarily, e.g. if Configuration is relatively expensive or has real world side effects. Since this is home automation, we might end up with flashing lights or the disco ball half popping out of the roof twice. Specifically, the null coalescing operator in Current is not thread safe, i.e. if (_current == null) and two threads call Configuration.Current, both may end up in Initialize(), when we only need one to hit that; thread 2 can wait for thread 1 to rebuild the config and return that. However, perhaps because it's day 3 of my extended long weekend, I'm not sure that is accomplished. If two threads both hit Configuration.Current when _current == null, both will call Configuration() before doing the interlocked compared. There might be some magic going on (my project for the past year has been mostly single threaded and/or comprehensively thread safe), but it feels like some form of double locking before calling Initialize() would be called for, assuming that Initialize() truly should only be run once. Again, I'm quite tired, but maybe something like this? I'd be happy to be corrected if I've missed something: using System; using System.Threading; public class Configuration { private static object _initLock = new object(); private static Configuration _current; public static readonly TimeSpan MaxConfigurationTime = TimeSpan.FromSeconds(10); public static Configuration Current =&gt; _current ?? Initalize(); private Configuration() { // whatever you need to do here, read from file etc } private static Configuration Initalize() { bool lockTaken = false; try { Monitor.TryEnter(_initLock, MaxConfigurationTime, ref lockTaken); if (lockTaken) { _current = new Configuration(); return _current; } // If we are here, we couldn't get a lock before the timeout. // Do whatever is appropriate here. // Perhaps log this and then throw an exception that the caller can handle or not, retry a few times, whatever. throw new ApplicationException($"Failing acquiring initialization lock after {MaxConfigurationTime.TotalSeconds:N2} seconds."); } finally { if (lockTaken) Monitor.Exit(_initLock); } } public void Reset() { _current = null; } } 
Check out Codegasm by BarnaculesNerdgasm
I know it's April First, but this just triggers me. :&lt;
I've had the same projects going for a while now: - Unnamed "text graphics" game (engine) May be missing some creative direction, I'm not 100% sure what to do with it. - Home automation system (rewrite) Microservices on a bus, controlling temperature and lighting. Current iteration works fairly well, but the code is a mess and I've been wanting to redesign it.
After writing stuff like that, I go and just use `[Lazy&lt;T&gt;](https://docs.microsoft.com/en-us/dotnet/api/system.lazy-1)
Try ".\cartgame\images\car.png" BTW if you prefix your string with @ (@"") then you don't have to double up those backslashes. Backslash is an escape character, the @ means take everything in the string literally.
Pattern matching is a recent addition that I love, makes for far cleaner code. The =&gt; get and set syntax is beautiful too. &lt;3
Thinking about this more, the reason why I wanted to give slot info to the weapons is that there are some items that need to go into specific slots. There's a pretty huge variety of things players can equip, so I want to use a database to store it all instead of hard-coding, which means that the weapon itself needs the ability to say where it should go. It doesn't need to know where it actually is, though. Still, it needs to be able to say "I go in right arm, slot #1" in one way or another. And since there's both a name and a number involved in saying where a slot goes, and some items have multiple slots, it seems like it needs the ability to return a Slot[] with a method at minimum. 
Are initiating a HttpResponse within the client? You will get errors as HttpClient only handles the connection.
Ive had a similar issue that i solved at the company where i work atm. So we had like 5-6 different systems doing .txt logs all over. What i did was to create a console app that i ran at a schedule (a service works fine as well if you want to play around). Anyway i use the UNC path to access the log, just read it into memory, parse each row and then i send them to a log-server which has a simple rest api. This way i can monitor all logs from a centralized website hosted internaly on the company network. From what it seems you could use a similar system and create another webapi if you need other applications to use your activitylogs. 
Correct answer. 10 day free trial. Courses almost all come with downloadable sample applications that you can code along w/ as you do the training. https://www.pluralsight.com/browse/software-development/c-sharp 
Thank you for all the observations. Fortunately this project it's in GitHub. I'll create an issue for each point you said.
DateTime.UtcNow *always*. Localisation is a UI thing. The best bit oF OO l feel. 
I was trying to joke that the commenter might be in a time zone where it's not April 1st currently, but apparently it wasn't a very good joke.
Oh, I got it - hence the word "fool" in my post.
Well, as an example, Microsoft‚Äôs own [Small Basic](https://en.wikipedia.org/wiki/Microsoft_Small_Basic) is much simpler: it has fewer keywords, and has a simplified API (but access to .NET proper of you want it). You mostly don‚Äôt have to understand concepts like OOP to get into it. But OP has since replied and mentions some VB experience, so maybe C# will be fine.
What are you going to do when you have a player with multiple right arms? You could follow diablos way of using an ItemType enum. 2h, pants, 1h, offhand, etc. Then let each slot support different item types.
Are you doing the _request_, or are they reading your _response_? Because if the former, `Content-Type` is not the header you‚Äôre looking for. You want to change your `Accept` header instead.
We need a SeQueL.
I wasn't aware it could be run like that, I'll definitely check it out. Thanks letting me know!
`Lazy&lt;T&gt;` is single init; it doesn't deal with resetting which the OP was asking for
Then you do `_theLazyConf = new Lazy&lt;T&gt;(InitLazyConf);`
C# about 2 year Coding in general 20 or so. This static variable is stuff we wrote when we were learning and has now become our core backend and we didn't know any better we just wanted the data in the class when we access it from another class. We have some limitation with working with this hardware VS2008, .net3.5 CF and its sandboxed we only got reflection about 6 months ago (manufacture is re-writing stuff into sandbox) &amp;nbsp; I would love to create a new instance of the class but the first use case of this core back-end we cant do that with out rebooting the processor or rebooting the program running. There's a Wizard-like way of programming and then there is the full C# solution which I can create a new class just want to make sure other parts of the same program can access that data.
Agreed, but knowing the history it is a pretty entertaining bit. 
I'm not opposed to re-writing everything or redesign but I want to make sure we do it right with the end goal we have in mind which is why I am here. I will look into reflection when we wrote this we did not have access to reflection that came about 6 months ago. (we wrote this 2 years ago)
A web app to track pot holes in my local area. So I can bundle the info up and send it to my council. 
Thanks I'll try this out not sure if I have access to Interlocked yet... here is an example of my current back end publlic class Core // This is the already written stuff { public static Dictionary&lt;int,string&gt; data1 = new Dictionary&lt;int,string&gt;(); etc... } public class SystemConfig // What I am writing now { // Read from file etc... private Core _core = new Core(); } My problem is the changes I will need to make to Core to be able to do what I want. We also have 5 other library's we wrote that will contain static variables like this as this is what we wrote to learn C# when it became available for us to use 2 years ago.
public static variables are hard to do much with; if they were public properties instead (over private variables) then you could replace them at runtime using something like pose (if you couldn't change the libs) https://github.com/tonerdo/pose
&gt; one true home of object-oriented programming Are you talking about Smalltalk?
What about Noda Time?
Not sure I understand your question... .net standard is more about library compatibility than the code itself. To maximize reusability you should target the lowest .net standard version on any package or project. The .net standard contract is implemented both by the .net framework and .net core implementations. See https://docs.microsoft.com/en-us/dotnet/standard/net-standard
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/unity3d] [Fast way to generate value based hashes for a class in C#?](https://www.reddit.com/r/Unity3D/comments/88rio3/fast_way_to_generate_value_based_hashes_for_a/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
So with that example, if you wanted different implementations per platform/runtime, you can leverage the [target frameworks](https://docs.microsoft.com/en-us/nuget/reference/target-frameworks) portion of a nuget package and package it that way with a seperate dll being in each runtime's folder. lib/netcore2.0/MySharedApp.dll lib/net45/MySharedApp.dll lib/uap/MySharedApp.dll So if each of those depended on another library, say the interface portion, you could make it a dependency in the nuspec and make it use a common version of netstandard that all of them support, that is if they aren't being bundled into the same package/dll.
It was an (unfunny) April Fool. Stick with C# - it's the future!
Sorry, I don't engage in smalltalk.
Will do thanks, always forget about April Fools.
Huh. Definitely seemed like they took clips from done movie and subbed/dubbed it, but I'll be damned. That's incredibly well done.
The game is BattleTech, so the mechanics are a bit different than what you're probably thinking - a unit is a mech, not a person. I used "weapon" as a shorthand, to avoid going too deep into game mechanics. The one I'm most worried about is cockpits, actually - depending which cockpit type the player picks, it can occupy 4-6 slots, some of which have different names, and which can go in different body parts. So a standard cockpit takes up slots 1-3 and 5-6 in the head, while a torso-mounted cockpit takes up slots 1-2 in the head, 11-12 in the centre torso, 1 in the left torso, and 1 in the right torso. And there are three different names that get attached to those slots("Cockpit", "Sensors", and "Life Support", but for construction purposes they're all part of the cockpit), which move around depending on which cockpit type you use. So it's kind of a mess. Being able to ask the item what slots it wants to occupy isn't a big deal for the actual weapons(which can be moved round pretty freely), but for some of the other components used in construction it's extremely important. The main list of legal options is going to be stored in a database, which I'd like to import and store in variables of the same types as those used in actual unit construction. So my plan was to have a bit of code that strips the database into a bunch of arrays, such as LegalCockpits[], which would be of type Cockpit[]. Each different kind of cockpit you could use would be an entry in that array, and when the player picks which one they want to use, it'll just set the Cockpit for the active mech equal to the appropriate item in the LegalCockpits[] array. But for this to work, I need to be able to ask the Cockpit type what slots it wants to occupy, at least if I want to do it the way I've envisioned. Perhaps I'm totally barking up the wrong tree here - it'd hardly be the first time. But that was my thinking, as described a bit more fully. 
If you are interested in WPF the PRISM guide is very good. https://msdn.microsoft.com/en-us/library/gg406140.aspx 
 DateTimeOffset.UtcNow Perfection
You can put a wrapper over the top? (as it sounds like you are doing) Though then you wouldn't need to use pose either :) 
Not C# specific but Unity has tutorials on developing basic games, and coding is a part of that. Perhaps check those out.
https://stackoverflow.com/questions/27895504/how-do-i-enable-nuget-package-restore-in-visual-studio 
Redesign your architecture using .NET's **Managed Extensibility Framework (MEF)**. You'll use MEF to design a plugin architecture. Then you can use `AppDomain` to rebuild your app during runtime. Any calls between the main AppDomain and the plugin domain will be marshaled through via inheriting from `MarshalByRefObject` or with WCF pipes. Further, your 'plugin' domain would have a single **composition root**. In that root, you could instantiate a `UnityContainer` for IoC and dependency injection. When your plugin needs to be rebuilt, calling `Dispose` on your 'main plugin entry point' should dispose of that container (which should dispose the bulk of your plugin, if not all of it) and anything else that needs to be disposed. Rebuilding your app is as simple as re-loading the plugin via MEF and passing in an 'application context' that your plugin can use to communicate with your framework. That context object will need to inherit from `MarshalByRefObject` if you go that route for communication.
I don't know what I am doing wrong, but I followed all the steps as accurately as I could and it is not installing the packages.
[https://scottlilly.com/learn-c-by-building-a-simple-rpg-index/](Learning C# by Building a Simple RPG)
&gt; Managed Extensibility Framework (MEF) Is this available in .net 3.5? I am limited to that version right now. That might change with the next release of Processors for my industry but right now that is my limitation
I really enjoy pro c# and .net by apress. You learn by doing and the book is huge. I plan to finish it in a month or two. Plurarsight felt too fragmented for me.
For another game, I could see that working pretty well(heck, even a few of the related computer games - that's more or less how MechWarrior 4 worked). But for BattleTech, it wouldn't work at all. 
The core of the processor that is the main control unit is running windows CF. The next generaion of processors is running linux and this should allow us to move into more modern versions of .net.
[Create &amp; Fake](https://github.com/CreateAndFake/CreateAndFake): A class library that handles mocking (like Moq/FakeItEasy), test data generation (like NBuilder/AutoFixture), and validation (as in Asserts). Been working on it for the past year, and just hit 1.0 with it.
Here is my "Roadmap" with some ideas, known bugs, improvements: https://github.com/BornToBeRoot/NETworkManager/wiki/Roadmap I am currently working on a PuTTY with tabs (like SuperPuTTY) but in my application. If you have own ideas let me know, this list is not yet complete... Maybe the next i want to create is a wifi scanner (native wifi api), but then i have to drop support for Windows 7, 8, 8.1... cause this is only available in Windows 10 via the new UWP feature... I already started creating a documentation, but i want to add one page for every tool (IP-Scanner, Port-Scanner etc.). https://github.com/BornToBeRoot/NETworkManager/tree/master/Documentation I've started writing some code to open the articels out of my application: https://github.com/BornToBeRoot/NETworkManager/blob/master/Source/NETworkManager/Models/Documentation/DocumentationManager.cs Is english your native language? I think it would also be great having more languages (currently english and german) available: https://github.com/BornToBeRoot/NETworkManager/tree/master/Source/NETworkManager/Resources/Localization
!remindme 3 days
I will be messaging you on [**2018-04-04 18:04:48 UTC**](http://www.wolframalpha.com/input/?i=2018-04-04 18:04:48 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/csharp/comments/88olm2/does_anyone_know_of_a_c_tutorial_that_walk_you/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/csharp/comments/88olm2/does_anyone_know_of_a_c_tutorial_that_walk_you/]%0A%0ARemindMe! 3 days) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
When the program executed, I believe the current working directory is set to the directory containing the executable (so `\bin\Debug` or `\bin\Release`). If so, `.\cartgame\images\car.png` will work but OP needs to specify a "Copy always" or "Copy if newer" build action for the files under "images" in Visual Studio.
Indeed! That slipped my mind good spot.
Where are the actual equipment rules for the game? I'm curious enough to help you out in a more detailed way. There's a bunch of different pdf's for the game mechanics, but I'm having trouble finding the mech building aspects. 
I have already read this tutorial, but it's not clear enough for me. I want to sort this objects by alphabetical order. Could you please show me exact implementation of that in my code?
yes sir, I have found this article and I don't understand it correctly. I want to sort this objects in alphabetical order. I don't get idea of value of string. Could you please show me how to implement this logic into my code? 
If you get really ambitious, you could stand up an Open 311 instance for your town. :) www.open311.org The specification is open source and doesn't target a specific technology stack.
Thanks for the heads up on that. Looks pretty interesting. 
 static void Main(string[] args) { double[] array = {20.3, 44.6, 32.5, 46.7, 89.6, 67.5, 12.3, 14.6, 22.1, 13.6}; bool isValid = false; double num; double test; try { while (!isValid) { Console.Write("Enter value &gt;&gt; "); string entryString = Console.ReadLine(); num = Convert.ToDouble(entryString); test = array[num]; isValid = true; } } catch(IndexOutOfRangeException) { Console.WriteLine("Index was outside the bounds of the array"); } }
This seemed like a fun exercise so I threw this together using expressions and attributes to mark what members you want included in the hash. https://pastebin.com/i7t5c3qB Did it at work in .NET Fiddle so can't attest to performance or whether all the bugs are ironed out, but it'll give you an idea of how it could be done if you didn't want to add a library dependency. I'd imagine performance should be fine, though - first time it's called, you'll get hit with generating and compiling the expression, but after that you'll just get hit with a dictionary lookup and an object.GetType() call (which I don't think allocates?).
HAHAHAHAHHAHAHAHAHAHA
Wowww that is some high production quality for a video 99/100 cant even understand.
Wow, thanks. I think such effort deserves gold, it also seems like a neat solution! I will still post what I've come up. 
Here's how I might approach this. https://pastebin.com/J70m0gYr
How many Xenoprimates does it take to load a car image?
Doesn't really matter as much the language, but rather the environment you're planning to use. If you're looking into using C#, Unity has a good environment and supports most VR platforms. Also if you're looking to get into Microsoft's Hololens, C# is definitely the way to go:
Unity is currently used for about 70% of mixed reality content (AR and VR) and Unity uses C#, so it's probably your best bet.
If you've already played with Java then C# would be an easier transition. Stick with C# because then you can focus more on what you want to do with VR and less on syntax quirks in languages like C++. The performance difference will be negligible because you'd need a semi-decent CPU/GPU to run VR/AR anyway.
This looks like something that would be better suited using regular expressions (also known as regex). I'm on mobile right now so I can't help you with code but C# has good built in support for regex. There are also websites that will help you figure out what regex will work with your expected input.
Dude what the fuck are you doing?
Thanks for the advice! Will further iterations of unity reach graphics levels that will eventually be quite realistic? Because from what I‚Äôve heard for right now one of the biggest reasons to look toward unreal engine, is it‚Äôs graphic capabilities. For what I‚Äôm interested in for the immediate future I‚Äôm sure unity will more than suffice, but what about when I eventually want to look towards hyper realism?
you could split on ")(" and remove the 2 leftover "(" and ")" but since you say this is just the first part and the format has additional parameters: using System.Text.RegularExpressions; something like: https://pastebin.com/BqtMjU34
Irrelevant in you're just looking to shuffle a list
I wouldn't be too concerned about this. You can already make really good looking games in Unity, and the realism aspect is much more up to the developer's skill rather than the engine's, especially at your stage. Personally I would learn the language and development process first, and once you're comfortable with that then consider switching. However, that stage may be years down the road. All in all, stick with Unity for now as it has better support for VR, a bigger community and user-made content to make VR games with, and an easier workflow for beginners to get into. Only when you're pushing the limits of Unity should you consider the pros/cons of switching.
Is there any scenario with a currently high end computers (the specs of which will be relatively standard in 5 years) would notice any stutter or lag in the VR experience.
I went ahead and provided the regex solution https://www.reddit.com/r/csharp/comments/88u26a/simplify_string_parsing/dwna2me/
Just to close this up in case anyone finds value in it in the future, I did indeed end up packaging my DLL (Listener in this example) using NuGet which did pull the Dependencies along with it. I have a little work to do so that I can debug this NuGet dependency within the Solution, but for now all is working well.
Probably. Unity is still using Mono, and I don't even think it's up to date. It would be great to see Unity transition to .NET Core, but I can't see it happening any time soon.
Probably not. But you can whip up some micro benchmarks using the Stopwatch class and see.
Are you using WPF? look into data binding. if that's the case you can databind the itemsource of the listbox to the name of the item in the list. it's kinda multi step process. I just learned this stuff but holy crap is it nice. 
ok so line by line for (int i = 0; i &lt; array.Length; i++) you are saying to create an int variable named i and have it equal to 0 you are then saying if i is less than the length of the array. the length of the array is determined by how many things are added to it. 3 spots would be 0,1,2 .. ARRAYS START AT 0 next you are saying every time it checks if its less then or not . add 1 to it. array[i] = DataMng.ExchangeMultiLuckDrop(soloPlayLuckDrop[i]); is saying array[the number i] = (some object.somemethod(pass in a different array at same number i) SO BASICALLY you are just taking whatever that value returns and putting into an array that you can now use cleanly without destroying the original array and makes it easier to use the data return array; returns the array to whereever you called the method from soooooo to i can only guess what is happening here but array[i] = DataMng.ExchangeMultiLuckDrop(soloPlayLuckDrop[i]); you are passing datamng.exchangemultiluckdrop a number. This method is going to do some math and return a different number. that different number is going to be stored in a position on the array. 
Don't use content-type on GET. Use Accept headers. And no, response isn't a message. Response on a GET is the payload you're seeking. It's the response of the API you are pinging. 
so did i in the pastebin link :P I wouldn't match "\d" - you'll get potential data corruption if and when the format spec changes and a random number appears making it impossible for you to get the relationship a bracketed comma deliniated format as this implies. I'd much prefer an exception.
I still don‚Äôt really understand it until i mess around with it myself. So you‚Äôre saying I have to remove static and then before every menuitem(,,) I also have to put that new item thing? I really am not trying to cheat because I h e to use this homework as an example for a final project which I‚Äôll probably end up posting about lol. Thanks btw
You mean the specification of the regex \\d?
no the input string format =) imagine what happens when suddenly (1,2,3)(4,5,6) becomes (1,2,3)(2,Pendelton Street) (4,5,6) 
Internal and any related modifies have no effect on performance. It is just a way to structure your code and hide it from being called from other code. Performance tunning is very subjective to the application itself. The best thing you could probably do at this point is to run a .NET profiling tool against your code. I like JetBrains dotTrace https://www.jetbrains.com/profiler/, but there are others. dotTrace has an add-on to Visual Studio that will let you profile while you debug the code or you can profile the code running outside an IDE. It is a very simple process to run the trace. The results of the profile will show you the hotspots in your code and where most of the processing time or actual time is being spent in your program. It will also show you how often methods are being called and from where. Run the tool a couple different ways to see what kind of output it gives you. I like to use the line by line trace though. Then focus on the hot spots it identifies and think about how you can speed up that part of the code. This will be the most efficient thing you can probably do instead of speculating what might be your performance bottle neck. Don't forget to run the tool again after you fix one hotspot, there are bound to be others. Repat the process until your code is performing as desired. If you find a piece of code you can't figure out how to optimize, share it on here or stackoverflow.com. It is easier to give direct pointers in these kind of things when you give an example a section of code that you know has a performance issue.
Any amount of parsing can be broken when the input string changes. Preferring an exception makes assumptions about OP's application that might not be necessary. The input string format is more likely to change to (1,2,3,4)(5,6,7)(8,9) than to add a random street name
&gt; I am writing a 3D engine in c# That's cool, I did the same last year. Might I ask what you're making? Just an engine? Or a game too? Is it just for fun/learning?
Your phone has a g-sensor in it already, right? Seems like a cool app idea to auto-map potholes using a phone app.
I think object.GetType() is cached after first access. 
Maybe in some reflection scenario it could conceivably make a tiny difference, but other than that there should be entirely no difference. Whether it's public, private or internal doesn't matter for what the compiled code looks like, it's just metadata.
the comment was about a sudden unexpected number. the street name wouldn't be matched =)
Which do you feel is more likely to happen?
For learning. I just want to make a testbed where I can try out graphics techniques. I use https://github.com/mellinoe/veldrid for my API abstraction since Im on a Mac
Could try to do a regex split into a list of integers. Then do something like intList.Where(x =&gt; Regex.IsMatch(x, @"\d")).ToList(); Just to know I am on mobile and haven't tried it. 
I actually looked more into that after posting and found a Jon Skeet answer on SO that addressed it, doesn't indicate when the allocation happens but it is always the same instance. &gt; &gt;From the C# 4 spec section 7.6.11: &gt;&gt;There is only one System.Type object for any given type. This means that for a type T, typeof(T) == typeof(T) is always true. &gt;(Additionally, if you get the type via reflection it will always fetch the same Type object too, but that's not in the spec.) https://stackoverflow.com/a/7856091
either. Doesn't make a difference. You usually want both to plain fail. I said it was nitpicky and depending on where the data comes from. If performance is a non issue and reliability key i tend to .Remove all matches from the input and log the result. Which is usually overkill. I just brought it up as a common point of failure you can take atleast halfhearted steps to avoid. 
I'd still take the same approach on a MacOS and it .NET Core, that isn't a factor except which tool you use. You won't be able to use dotTrace and many of the other popular Windows only tools of course. The Profiling API is part of .NET Core. Visual Studio for Mac uses this in the Xamarin profiler. Or you can roll your own which would hook in to the Profiling API and still be more helpful than Stopwatch approach. With Stopwatch you'd still just be guessing where your issue is. This can be a huge task on a code base of any real size. Take a look here https://stackoverflow.com/q/47103572/481816
Linq is not the proper tool for doing this, start by sorting the list then finding the combinations of numbers by iterating normally.
Wouldn't you want to just sort the list in descending order and take the first n items that add up to intX? The selectMany path you are going down doesn't easily scale to n items. You can think of it as either a cross join or as a foreach loop in another foreach.
I tried coming up with something. Tried multiple solution off of stackoverflow but nothing worked for my case. Or at least I wasn't able to make it work. Any further tips are welcome.
That‚Äôs the exact course I bought this weekend. Already been looking at it today, a little disappointed that there‚Äôs no practical side to it (yet?) I.e. learn by doing. 
Sounds great, that's what I wanted to do in the first place. But same as I replied above, I cannot make any other example work for my scenario so any further tips are welcome.
From what i've heard and seen. It seems he continues on with his teachings but not as much guides in terms of in depth how to practice it. But that's fine with me, Basically, when I learn a course or new things I write them down on a notepad, then I proceed to practice multiple times with what i've learned. That's how it's sinking in with me at the moment.
There are image manipulation libraries suited for performance and you can get them for use with C#. That's going to be your bottleneck.
...I CAN‚ÄôT NOT use content-type. Without it, I get a 200 ok response with a custom error message from the API as the payload/content/body whatever you want to call it. It‚Äôs not my API I‚Äôm not responsible for the stupid decision to require it but i am having to deal with their ignorance 
&gt; (...) Thanks, that was actually something I did not understand correctly. It is how I hoped and assumed it should work, but my reading about .net standard made it appear as if .net standard acted as a contract system primarily and actual implementations were not really done often there. So what I should really be doing is putting core interfaces I use often that are very modular and designed well in a .net standard project, and including the most commonly useful implementation of them with it and only writing changes to the interface (i.e a new implementation inside the new project) as needed with a reference to my .net standard library. 
Let's walk through a postman call: If you do a Get on the API with the Auth headers set, and another header set as "Accept": "\*/\*". And nothing else. You get a 200 ok but you get an error from their service? 
Not even in reflection either I would imagine, since private/internal calls show up there as well
C# uses curly braces just like C does, C# is a little less close to the metal than C. C# has a garbage collector so you don't need to worry about freeing your memory. You can use a lot of C things like pointers too, but they're limited to unsafe code which you have to explicitly declare and enable. C# supports a lot more programming paradigms than C, for example functional programming or object oriented programming. I would say that C# is a more productive and safer language, whereas C offers you more speed and control, but imo the transition shouldn't be too hard.
Then delete the accept and put in content-type: "whatever_itis" , nothing else. And its 200 ok and the payload/ response load you need? 
It really just depends on how familiar with OOP you are. If you understand the concepts well a language like C# will be easy to pick up. What I tell my students is to pick something you really wanna build and then try to do it in whatever new language you want to learn. I've spent 20 years as a windows developer. To learn each new ui framework I redeveloped a winamp-like media player over and over again (gdi, winforms, wpf, winrt and again in uwp). Find a passion project, learn some of the basic design patterns and have at it.
The basics of programming (abstractions, control flow, etc.) transfer directly. The syntax of C# is close enough to C at a glance, but the workings are more comparable to VB.NET. The biggest difference (in my limited college C experience) I've found is working with variables and memory. Make sure you learn about the C# memory model and the differences between it and C.
We can refactor that's not a problem. However we are in a sandbox the hardware manufacturer has written so if they don't expose it to us we cant use it unless we write it ourselves from stuff they have exposed.
I don‚Äôt think you should have any problems with getting familiar with the core C# syntax as it is, in my opinion, pretty much the same as the C syntax. I guess it comes down to the Object Oriented part of C# which is the ‚Äúbig deal‚Äù so to say. That depends on your prior experience with the concept of OOP, irrelevant of the programming language. My advice would be getting to understand the idea behind Object Oriented Programming (encapsulation, classes, inheritance, overriding...) and in parallel realize these ideas in C#. There should be plenty of material on the web. After that, you could start getting familiar with all of the cool things C# has to offer, like LINQ etc. which make life easier. Good luck!
This is a fairly broad question but you can do it one of two ways: 1. Start small and go big- learn algorithms, data structures and collections and then to organization and architecture and then etc.... this is the college method. 2. Find something you‚Äôre interested in (game design, web development, machine learning) and learn what you need to do exactly that. There are a lot of books and classes out there that will teach you how to do a particular thing, without breaking down every since nuance of c# 
&gt;I needed to find two entities from a list where the SUM of their attack is equal or higher than a variable. wait you have no constraint on the max value of the sum? return the sum of the two highest values.... ?
What exactly are you trying to do? It sounds like you're attempting to solve a knapsack-style problem- trying to find the smallest set of items with at least N attack? Trying to find all sets meeting that condition?
I still have yet to try the delete Accept thing, but not it‚Äôs a string of json
With C#, you will probably be using more of the .NET Framework (which is a good thing) compared to when you were programming in C. You can also use the [NuGet](https://www.nuget.org/packages) package manager to easily incorporate third party libraries into your program.
[CsvHelper](http://joshclose.github.io/CsvHelper/) or [FileHelper](https://www.filehelpers.net/). If you know your data structure up front or are writing out a fixed format, use FileHelper. If you're looking to read a CSV into memory and then figure it out second then use CsvHelper.
Removed: Rule 4. There are learning resources in the sidebar and check out the resources available at /r/learnprogramming.
No, `internal` is just an accessibility modifier.
Wonderful sweet syntactic sugar too. (In the Java 5/6 days you had to use AspectJ at compile time to get auto-props. It was a dark time when you had to define all your getters and setters.)
If you're shooting for code reusability as your main goal, I'd say anything that isn't dependent on a specific framework (eg Windows forms) is a candidate for going into *a* .NET Standard library. Now, you ideally don't want to make kitchen sink utility libraries with a ton of unrelated helpers and extensions, and putting something that *could* go into a .NET Standard library with related code in a .NET Framework/Core assembly situationally has its merits just for organization, but don't be afraid to put more in that library, or make another .NET Standard library for it. That way it won't be tied to one or the other. For example, I've been doinking around in MonoGame making a game, and had a library that I had built with some utility stuff, a library for some custom serialization, a library with code to help with plugins, and a few others all included in the project as project references. None of them relied on anything .NET Standard couldn't provide, so I was able to switch all of the projects to .NET Standard except for the MonoGame project (since it's the entry point, it'd have to be either .NET Framework or .NET Core). Now I'm free to use all those for other projects with different runtimes without having to do any real extra work. For you, you could make a library that contained your ISettingsManager interface and some universal implementations, or you could make it have just the interface and the "standard" implementation, and then put other implementations in other assemblies. Maybe it even makes sense to include other stuff in the library with the settings manager, or include it in a grander library that uses it - whatever you find works best as the balance between portability and organization.
In my school we started out with C++ and later transitioned to Java. There is some fundamental differences in thought between using an object oriented language like C#/Java and an imperative language like C. That being said, learning Java was not much of an issue for most of the students, as it has a similar syntax and does a lot more of the heavy lifting for you. C# is a lot like Java, except better. You will need to get used to instantiating an object (think like a struct in C, but it also has functions) in order to call functions and keep track of state. Other than that you will not find huge syntax differences between the two languages. A good tip when you get started is to avoid putting any logic in your Main class. As you get more comfortable with OOP you will figure out what belongs there, but if you are coming from C you will probably want to put to much logic in your main class and in main functions. If you are finding that most of your functions are static, you are not doing things OOP and should rethink your design.
Sort the list in Ascending order, and take the largest number that is less than Y where Y = X - Sum(All previously taken numbers)
Appreciated! But just glad I could help. Since posting it, I noticed a few shortcomings: * Not thread-safe * Does not appropriately handle members from base types * Only ever uses default comparer, which may not be desirable if you want hashes to be consistent across sessions * Hashes members in arbitrary order, making testing difficult I've fixed those and gussied it up, you can see it here if you're curious: https://github.com/MrHotkeys/HotLib/blob/master/HotLib/AutoHashCode.cs
This video is in Go, but it is a great video about lexing/parsing in general. While doing this from scratch may be overkill for this scenario, it isn't super hard to do it from scratch, and it is good to learn because it will be handy having this skill in the future. https://www.youtube.com/watch?v=HxaD_trXwRE He uses a goroutine and a channel but you can just ignore that and dump the tokens into a List&lt;T&gt;, or use a Task and concurrentqueue if you wanted to duplicate exactly 
Sort the list in Ascending order, and take the largest number that is less than Y where Y = X - Sum(All previously taken numbers). If there are no numbers left where N &lt; Y, take the next smallest number.
&gt; C things like pointers too, but they're limited to unsafe code Yes but I would add between ref, out, and delegates you can do a lot of what you can in C. 
Yes.
English is the only language I know sorry. I think I can help with documentation and some of the improvements. I'll poke around and see what i can do. Networking wasn't a strong skill of mine but it was interesting. What about adding a packet sniffer? similar to Wireshark?
I was hoping this was an April fools joke. It wasn't 
While you code for static analysis would be tough. Imagine you have a function with two branches. If you are calling that function which would you display? There could be drastically different execution paths for all but the most simplistic of functions. So that leads to profiling. I know things NCrunch will show you loves of code that is covered by a tests performance all long with them. That's nearly real-time. I bet other test coverage tools do the same.
See *halting problem*
One thing I had to get used to when transitioning from C++ to Java/C# is the implicitness of reference/value types. It was a bit of an uncomfortable idea to me at the beginning. In C#, variables of class types are always references to objects in the heap. Structs are value types. You‚Äôll be familiar with the difference of passing these around between functions (ie, pass by value vs pass by reference). What you‚Äôll have to get used to is that this is all implicit. Pointers/references/dereference operators are implicit. You won‚Äôt see or use * and &amp; and -&gt;. Most of the time, at least. Also, welcome to PascalCase land.
Well... the time complexity of that is easy to find (it tends toward infinity), but put in a conditional return and it's no longer so easy.
Basically, yes. I don't need all of them, just the first with the smallest set of items. (i think :-P)
This is basically impossible to do for a compiled language. The C# compiler does a lot of tricks for you that may be hard to predict in a simple plugin. Profiling your own app may be the only real solution. 
Can't you use EF to load the two datasets and then manually join them together based on the index field. I don't think EF will handle the transform for you but it should be doable once you have grabbed the data. 
 private void atxt_TextChanged(object sender, EventArgs e) { SetBtxtEnabledState(); } private void ctxt_TextChanged(object sender, EventArgs e) { SetBtxtEnabledState(); } private void SetBtxtEnabledState() { int valA = 1; // or 0 if you want btxt to be enabled by default int valC = 1; int.TryParse(atxt.Text, out valA); int.TryParse(ctxt.Text, out valC); btxt.Enabled = !(valA &gt; 0 &amp;&amp; valC &gt; 0); } 
[Cosmonaut](https://github.com/Elfocrash/Cosmonaut) is the side project I'm working currently. It is an entity store provider for CosmosDB which makes storing your POCO/DAO object in collections and retrieving them or manipulating them really simple. It borrows the Entity Framework idea and offers a much leaner experience. The project readme on Github showcases the functionality and i also wrote a story on medium describing the coding experience and the difficulties faced. The project is open source under MIT license. Github: https://github.com/Elfocrash/Cosmonaut Nuget: https://www.nuget.org/packages/Cosmonaut Story about the development: https://medium.com/@nick.chapsas/i-made-an-entity-store-package-for-cosmosdb-in-c-cosmonaut-243434273d45
By abstract interfaces do you mean abstract classes that use interfaces?
How does a timer loop _exponentially_? Also, a code example may help us understand what your goal is and what's going wrong.
Not Ionic is the right framework.
No need for separate event handlers, just link both text boxes to the same handler. If you need to know which text box triggered the event then you can just cast sender as TextBox.
My advice is: you're doing it wrong. Contraints like these on form field interdependencies result in suboptimal user experience. You should check the validity of the form at ok/apply/submit time instead. To help users with interdependencies, consider displaying hints instead.
Given list 1,2,3,4,6 with goal 5. Take the first number N where N&lt;5, which is 4 and add it to list L. Then take the next N where N &lt; 5 - Sum(list L). Since at this point list L only contains 4, Sum(list L) =4. 5-4=1. There is no number less than 1 in the list, so take the lowest number from the list, which is 1, and add it to list L and you are done. List L now contains 1 &amp; 4, which sums to 5.
&gt; No need for separate event handlers Agreed.
I think this is important: don't mix reference/value types with passing by reference/value. In all normal uses, you'll be passing by value. If you pass a reference type, then you pass the reference by value as well. Passing by reference must be explicitly enabled by the `ref` keyword and it gives you the ability to assign a new value inside a method and be applied even outside it.
This works great for the list we mentioned. But what if the list is: 3, 3, 3, 4, 6. We would take 4 and add it to the list, then we would go 5-4=1 and look for the lowest on the list which is 3 and add it to the list. We would end up with 4 and 3, which is 7. What I need in this case is 3 and 3 which is 6 and is the **lowest** combination. I think I could probably loop through all the starting numbers, from 4 all the way to 3 and then look for the lowest sum. But dang, since I'm not dealing with INTs which I could easily sum and store, I will have to think about it some more. Thanks for the idea, though!
Yeah, although as a caveat the problem is NP-conplete, so basically there are only hard-to-calculate solutions. If your list has a small number of items you should still be able to do it, bit it will likely be by trying every possible combination or doing something more efficient but more complex.
&gt; possibilities that I serialize the classes and compare the serialized value [...] this approaches are very slow (and serializing just for hash creation most likely means that I generate garbage, which is unwanted in a game). I'm not a game developer... that said, my gut says to either send all the meaningful data objects in their entirety (compressed, if you have bandwidth concerns) or to use a cryptographic hash like SHA-256 to discourage malicious actors who can work out ways to generate collisions that are accepted by your system. I think a complete "right" answer is likely to depend on how big you need your current solution to scale, what shape your data starts in (1000000 objects of 20 bytes each may demand a different solution than one for 20000 objects of 1000 bytes each), how often the synchronization check will need to run, etc. `dotnet/corefx` has a [HashCode.cs](https://github.com/dotnet/corefx/blob/6ae0da1563e6e701bac61012c62ede8f8737f065/src/Common/src/CoreLib/System/HashCode.cs) based on xxHash32 (your own version of `s_seed` can just be a constant), which seems like a reasonable alternative to the way you're mixing it. A few small things to note... for (int i = 0; i &lt; fields.Count(); i++) { // ... } ^ that up there is comparably slow. Not only does `.Count()` run a type check and virtual dispatch instead of just (I think) a `ldlen`, but it also isn't a pattern that the JIT recognizes to optimize away the bounds checks. Just do `fields.Length`. if (!someDictionary.ContainsKey(key)) { someDictionary[key] = ValueFor(key); } return someDictionary[key]; Even in the more common "fast path" where it's cached, that ^ still does two dictionary lookups each time it's used. Suggested alternative pattern: T result; if (!someDictionary.TryGetValue(key, out result)) { result = someDictionary[key] = ValueFor(key); } return result; That brings it down to just one dictionary access. object fieldVal = fields[i].GetValue(value); If `value` is a non-nullable value type or a non-null instance of a nullable value type, then this line will box it and generate garbage. In this case, you actually **know** that it's going to be a value type. I don't really have a proposed solution to this, other than saying that you may want to re-evaluate your assumption about the impact of garbage and see if there are any other approaches you've considered before but rejected on the basis of how much garbage they generate.
Validation logic should happen before you parse
Ah, I'm working on a project now and you just made my life simpler 
`EqualityComparer&lt;object&gt;.Default` will box the input when calling `GetHashCode(object o)`, which generates garbage, which OP claimed is unwanted (though I'm not sure if that's actually true). Here's a way to get the value of `EqualityComparer&lt;T&gt;.Default` if you don't know the type at compile-time: var type = typeof(int); // or anything... var obj = typeof(EqualityComparer&lt;&gt;) .MakeGenericType(type) .GetProperty(nameof(EqualityComparer&lt;object&gt;.Default)) .GetValue(null); Console.WriteLine(obj is IEqualityComparer&lt;int&gt; cmp &amp;&amp; cmp == EqualityComparer&lt;int&gt;.Default);
You'll need one of these: https://shop.r10s.jp/furuta/cabinet/02955340/imgrc0124270623.jpg
No, an abstract interface is what you get when you use the 'interface' keyword. As opposed to the other types of interfaces such as the public and protected interface on a class.
Taking all the sums of a list will be an O(N!). Unless you can guarantee a very small list I wouldn't do that. After doing some googling on my own, this is starting to look like a harder problem than I thought. It might be NP Hard.
I wonder if you can just use a custom struct for each class to encapsulate all the data members that need to contribute to each hash (explicit / sequential layout to ensure consistency across systems), and then using copy-pasta from [`System.Runtime.CompilerServices.Unsafe`](https://github.com/dotnet/corefx/tree/6ae0da1563e6e701bac61012c62ede8f8737f065/src/System.Runtime.CompilerServices.Unsafe/src) (because you probably won't be able to use it directly on .NET 3.5), implement xxHash on each properly-sized chunk (padding the last chunk with zeroes if the struct isn't sized to a multiple of the chunk size). I dunno. This seems like a lot of serious brainpower that could be avoided by just touching each class in question to do its own thing, maybe by doing it one class at a time in 15-minute chunks while you're between other things. Or a compromise that lets you serialize something to an unsafe buffer like this, assuming that you also tell the caller how much room you need: void SaveTo(byte* buffer) { (*(int*)buffer) = this.id; buffer += sizeof(int); (*(float*)buffer) = this.xPos; buffer += sizeof(float); (*(float*)buffer) = this.yPos; } and then you can use that same code to save it to a segment of a pinned managed array for an eventual `Stream.Write` call or to a `stackalloc`'d buffer for hashing a single instance without generating garbage. Reflection-based solutions, unless you can find one shrink-wrapped for you, just feel like they're going to be a lot of difficult code to solve a simple problem.
Yea, and I just figured out it's going to be **even more** complicated because there will be multiple intXs. And once entities are used for one intX they are to be removed from the available list. So if we were to iterate through intXs one by one, we could end up overshooting the first intX by 1, which would be the most ideal scenario for said intX, removing the entities used from the available list, whereas if we took the second intX as the first one we could end up with the exact value and hence have more options for the rest... What have I gotten myself into??? :-D
Thanks for the info!
Thanks for reviewing the code! I will keep that in mind for my game. 
Thanks for looking through it! That's a good catch, I forget that happens. I was trying to cheat and not have to look up the correct method with every member, but that's definitely more preferable than a bunch of garbage allocations. For posterity: https://pastebin.com/wSVuFQKp
Step 1 is definitely to clearly define the problem. From what I understand, you have a set of items, each with their own weight ("attack" ). You also have a set of target values. You want to partition the set of items such that the each partition sums to at least the target value, while minimizing the total overrun? Or minimizing the largest overrun? Or some other metric?
At that size, you might feasibly just iterate over the 10! permutations and use the greedy algorithm to score each. Depends on how often you're running and what you're running on.
I think this is an argument why you get a computer science degree. Having that background makes you constantly think about the Big O.
&gt; From what I understand, you have a set of items, each with their own weight ("attack" ). You also have a set of target values. Yes, a set of items, their weight = attack. And a set of target values, let's call them bins. Each bin has it's own "capacity". And when I say set, I mean anywhere from 1 to 7 items and 1 to 7 bins. &amp;nbsp; &gt; You want to partition the set of items such that the each partition sums to at least the respective target value, while minimizing the total overrun? Or minimizing the largest overrun? Or some other metric? I want to "fill the bins" in a way that each bin is full with the goal of having as much "weight" left over after each bin is "filled". The weight that goes over when a bin is filled is not supposed to enter the calculation. IE bin capacity is 5, I fill it with 6, the 1 going over is lost. &amp;nbsp; Example: **ITEMS:** Item1.Weight = 4 Item2.Weight = 3 Item3.Weight = 3 Item4.Weight = 6 Item5.Weight = 7 **BINS:** Bin1.Capacity = 5 Bin2.Capactiy = 8 **SOLUTION:** (not sure if correct lol) Bin1 = Item4 = 6, which is over the capacity, which is OK Bin2 = Item2 + Item5 OR Item3 + Item5 OR Item1 + Item2 + Item 3, in all of the scenarios the weight left is 7
Try to google Export MySQL Database and Import MySQL Database
First hit https://www.itworld.com/article/2833078/it-management/3-ways-to-import-and-export-a-mysql-database.html Hope this helps
Okay, so some observations. Maximizing the remaining weight is equivalent to minimizing the total overrun. If we have a bin with X weight remaining and an item with X weight, it's optimal to immediately put that item in the bin. If the smallest item is larger than the largest space remaining in a bin, just pick the smallest N items to fill the remaining N bins. Otherwise, try putting each item in each bin that will hold it, recurse on remaining bins/items, and pick best solution.
I would add to /u/AbradantMatthew that Unity 2018.1 is starting to introduce the scriptable rendering pipeline and some other graphics-focused tools. They're starting to make a push towards better visual fidelity, and I'd imagine it won't be too long before they're production ready (currently they're in a beta-like state).
99/100 can't read? Weow, the youth really is going to hell. 
!remindme 3 days 
I really don't want to say this because I praise you for using it instead of "wah-lah" like ... people do, but you put "viola" instead of "voila". Nooice. =P Thanks for the laugh, and thanks for being awesome (in my opinion) for using the real word. Now let me actually read your post. ;-)
You're going to have a real hard time finding people to help you out with such issues, because most people don't mess with emitting. When you emit, any minor detail you mess up means catastrophic failure with no details, as you just learned. I'm going to list here potential issues you might have here (it can be multiple, even), because to be clear, I can only guess for the most part: * You have a method named 'foo', but you can't name a method the same as a type. * Your constructor modifies your field before you initialize it. You never set your field to the input interpreter. * You're setting the scope of the interpreter to a new scope of the interpreters current scope (wtf)... still, without initializing it first. * You're casting your foo type to IValue... does it actually implement IValue? Does IScalar inherit IValue? * You have a method Inspect, from the interface IValueExpressible. Does foo inherit IValueExpressible? Does IScalar inherit it? * Type names should be capitalized. And that's just the most obvious ones. You could have a lot more issues in your emit setup behavior and how you're doing things.
``` C -&gt; C# Java -&gt; Javascript Car -&gt; Carpet ```
Haha, nope. Not in any sort of a general case.**Anything** that leaves the confines of the CLR runs for an unknown amount of time. Say, hits a database, even local, even an in-process one. Who knows how much time a database will take. And then... even if the code is 100% inside the CLR... how much time an anything takes depends on the OS scheduler, CPU branch prediction, cache performance and a host of CLR-related factors. **If**, however, there was a massive online database of various code snippets, and a pretty evolved AI to match your snippet to what's in the DB... something could be dine, I guess... üòÄ
The stack trace shows that the error comes from the invocation, since it successfully finds the constructor.
this... I am so confused by OP lol
Removed: Rule 4. There are plenty of learning resources to get you started. You didn't mention the platform you're using, but most likely you can access the TextBox's information using its `.Text` property. From there, you can fill out some `string[]` array. Take a dive into the various learning resources available to learn how to use arrays and access user controls.
It's fun though. Isn't foo.foo the ctor in this case? I'm not going back to look, I'm using the wrong machine and I'm technically with "family". Bung the code in the ctor into a try catch and bob should be your uncapitalised uncle in this camel case.
Via Unity, yes and coming from Java you shouldn't have much problems picking it up. Game development has a different pipeline to most other software development, so don't expect Enterprise Patterns to be such a big deal when coping with framerates and game loops. Otherwise, its probably gonna be Javascript that will take over the whole world and Sumerian is a good upcoming Amazon backed platform to use as an intro to both Javascript and VR. C++ may be a bit low level to start to be honest, and writing your own engine is just going to be a frustrating slog. But, if you're still brave enough for C++, check out Lumberyard and Unreal Engine and again, this will be a tough slog.
It will become a background hum in a week or two after graduation. "Fuck it, put it in a List" will be your new mantra ;p 
Well that's never going to work :) It does explain the specific exception :) 
Hmm, that's odd. The generated C# doesn't show that the field is initialized, even though I'm definitely emitting an initialization. ctorIL.Emit(OpCodes.Ldarg_0); // Load to set interpreter ctorIL.Emit(OpCodes.Ldarg_1); // Interpreter param ctorIL.Emit(OpCodes.Stfld, interpreterField);
`InvalidProgramException` means your IL itself is bad, just to be clear that it's not related to reflection or anything like that. Did you run [PEverify](https://docs.microsoft.com/en-us/dotnet/framework/tools/peverify-exe-peverify-tool)? If you're going to be handcrafting IL code, PEverify is your new best friend until you surpass the compiler. I used to write a lot of IL code for .NET/WCF back in the days. I don't have a lot of time at the office but I'll try to circle back tonight if you don't find the issue.
the two you listed work well. if you're going into the non-free tier if things, i've worked with Checkmarx in the past. .net under-the-hood and has a simple client with a robust (.asmx) api layer. integrates well with most all CI/CI tools also
Like others have said, regex is great for this. [RegExr is a perfect website for debugging and editing patterns.](https://regexr.com/) Here's a quick solution I made using regex: public static List&lt;List&lt;int&gt;&gt; SplitParts(string input = @"(0,1,2)(3,4,5)(6,7,8)") { var pattern = @"\(([0-9]),([0-9]),([0-9])\)"; var matches = Regex.Matches(input, pattern); // validation. if (matches.Count == 0) throw new FormatException(); // convert matches to list of integer lists; "(0,1,2)(3,4,5)(6,7,8)" -&gt; { { 0, 1, 2 }, { 3, 4, 5 }, { 6, 7, 8 } }. var partLists = new List&lt;List&lt;int&gt;&gt;(); for (int i = 0; i &lt; matches.Count; i++) { var parts = new List&lt;int&gt;(); for (int j = 0; j &lt; matches[i].Groups.Count; j++) { // skip first group as it's the entire group as string. if (j == 0) continue; var value = matches[i].Groups[j].Value; // will always be a number 0-9. var number = int.Parse(value); parts.Add(number); } partLists.Add(parts); } return partLists; } Each part has to match exactly or it'll be skipped, so you can just parse because they're guaranteed to be integers.
Oh wow, thanks, I didn't realize that was a tool. The first error was that `this` wasn't initialized, but after adding a call to `typeof(object).GetConstructor(Type.EmptyTypes)`, the error I now get is `Stack must be empty on return from a void function.`
Ah, I did not mean to conflate. You are right, of course. My point was that in C#, variables for objects are always references, without ampersands and asterisks.
Using `triplet.Groups`would be easier.
You know, I thought that only this one case would be enough for me. There are 3 cases actually: - if a and c bigger than 0, then make b disabled - if a and b bigger than 0, then make c disabled - if b and c bigger than 0, then make a disabled Truth is, I think a separate method would be useful. But if you guys think not, then tell me how please.
Gave it a quick try, but sadly the error remains the same, except for the updated string.
The regex specifies a `\d`, so you don't have to worry about other stuff; It'll always be a digit. Be careful of `\d` though, [because it means *digit*, not *number*.](https://stackoverflow.com/a/273144) It's usually better to use `[0-9]` because that ensures it will be a number.
The user will know about one of the three textbox will be disable. I make a tutorial that starts with the program in a new form. But thanks, gonna keep in mind at my next project.
well recheck a few things: Open the .ttf with the windows default font thingy or any equivalent tool that shows the font name. Make sure anything past the "#" matches it exactly. The Fonts folder is in the root of your project? fa-solid-900.ttf is the exactly correct filename? I tried downloading Font Awesome just now and it comes in .otf format by default did you run a converter? The name in the .otf is "Font Awesome 5 Free Solid" try that
I did a search using that. You cannot define a field with the name "(interpreter)". Parenthesis aren't valid for a field name. Which is why the class says "\u0028interpreter\u0029" is the field. Which, isn't a valid field name. I tried it, and it gave me a weird error. Secondly, you should probably specify "HasThis" in your calling conventions for your constructor instead of "Standard". Might not be necessary, I'm just comparing with my emit code to compare with. Third, are you finishing your constructor? A constructor still has to call OpCodes.Ret when you're finished with it. I'm pretty sure I see a few cases in your switch that doesn't end with returning it. In fact, I'm specifically looking at your "fn" one that doesn't, which appears relevant because you're creating a function. Which leads us to, your constructor code could be getting confused with a later set of your method code, because you used the same name for each, which you can't do. ... I would really suggest not having one monster class handling all this, which is quite difficult to read and leads to issues... Like how I suspect you're going to have big issues when you try to create two classes, because you define a dynamic assembly with the same name each call.
&gt; Open the .ttf with the windows default font thingy or any equivalent tool that shows the font name. Make sure anything past the "#" matches it exactly. Checked and confirmed identical (also checked on a few other .ttf files, same problem). &gt; The Fonts folder is in the root of your project? &gt; fa-solid-900.ttf is the exactly correct filename? Correct for both. &gt; I tried downloading Font Awesome just now and it comes in .otf format by default did you run a converter? I actually used the .ttf file in the `web-fonts-with-css\webfonts` folder. I did not run it through any converter whatsover. Did do a quick check just now on the .otf file and the extended solid name, but that too didn't help.
Tried a sample app with ‚Äú#Font Awesome 5 Free Solid‚Äù rather than ‚Äú#Font Awesome 5 Free‚Äù and it worked for me
Cool SO question on order of Linq statements https://stackoverflow.com/questions/7499384/does-the-order-of-linq-functions-matter
Assuming that this is MSSQL, ask your friend to open Management Studio and from the left pane to expand "Databases," then right click on your database and select Task -&gt; Back up.... From the next screen select "Backup to" -&gt; Disk, add a location and press OK. This will save a .bak file in the destination he chose. Then he can send you the .bak file and you can use it to "Restore" a database. To do that, you need to open Management sutdio, right click on Databases, select "Restore database," choose Device from the next screen, click the small button with three dots, which will open another screen, click Add, navigate to the .bak file and click OK. 
.NET or .NET Core?
Yep, that's just what I needed. Thanks!
The goal of a randomly sorted collection isn't "totally ordered". It's specifically not ordered by any details of the actual data. For some reason, you gave an example that doesn't change anything at all. Literally, your example is no different than the original, except you created a type to keep the guid only to discard it a statement below it for no reason. You changed nothing actually relevant. Nothing about your link talks about any of this. Your link deals with how to properly order things, not about random collections.
It's not valid C# code but it is valid IL code. It works.
Just .NET
&gt; Which leads us to, your constructor code could be getting confused with a later set of your method code, because you used the same name for each, which you can't do. You can do this just fine so long as the signatures are distinct. It won't work in C# but it will work in IL. The actual issue was twofold: there was no call to the base class constructor (System.Object) and there was an extra value on the eval stack (from the Run method) that didn't get popped off.
Np, anytime. 
In a situation like this, a try/catch won't help. The IL code is malformed which means the runtime cannot JIT this for execution. If you should run into a situation like this, use tools like... * [PEverify](https://docs.microsoft.com/en-us/dotnet/framework/tools/peverify-exe-peverify-tool) - to verify the image * [ilasm](https://docs.microsoft.com/en-us/dotnet/framework/tools/ilasm-exe-il-assembler) - can be useful to verify your IL code quickly and play around.
Trying this post again on a mod recommendation, as it didn't appear to turn up first time around. &gt; Open the .ttf with the windows default font thingy or any equivalent tool that shows the font name. Make sure anything past the "#" matches it exactly. Checked and confirmed identical (also checked on a few other .ttf files, same problem). &gt; The Fonts folder is in the root of your project? &gt; fa-solid-900.ttf is the exactly correct filename? Correct for both. &gt; I tried downloading Font Awesome just now and it comes in .otf format by default did you run a converter? I actually used the .ttf file in the `web-fonts-with-css\webfonts` folder. I did not run it through any converter whatsover. Did do a quick check just now on the .otf file and the extended solid name, but that too didn't help.
Great advice :) I'm expecting the code we're seeing to be obfuscated to obscure some work specific details (Did I say this already? I forget what I posted!) so I'm taking any generated code here with a pinch of salt. 
&gt; there was no call to the base class constructor (System.Object) A problem that is in part from using CallingConventions.Standard instead of CallingConventions.HasThis, like specified above. &gt; there was an extra value on the eval stack In some of the paths, he never returns from the constructor to begin with, like specified above. ... there are a lot of issues in the code.
&gt;&gt; there was no call to the base class constructor (System.Object) &gt; A problem that is in part from using CallingConventions.Standard instead of CallingConventions.HasThis, like specified above. These are, strictly speaking, completely orthogonal. The calling conventions do matter for invocation but the evaluation stack matters for the JIT pipeline. &gt; In some of the paths, he never returns from the constructor to begin with, like specified above. I'm confused by this -- I see a `ret` on [line 95 here](https://pastebin.com/vCVJs6ay). Am I looking at the wrong IL source file? ü§î
It's the best C# reference for experienced programmers IMO.
&gt; Which is why the class says "\u0028interpreter\u0029" is the field. Which, isn't a valid field name. I tried it, and it gave me a weird error. As long as it's a UTF8 string with less than 1023 bytes, it's a valid identifier. While this isn't directly accessible in C#, you can play with this in F# by using double back-ticks around whatever function name you want. ` ¬Ø\_(„ÉÑ)_/¬Ø ` is a valid name if you hate your coworkers. 
&gt;Seems to work for the instantiated class item, but not for a string. ?
It's not. If he had specified CallingConventions.HasThis it would work just as well as having manually adding the base constructor call. I'll leave it up to your imagination on why this would be the case, although it should be obvious when you view the [docs](https://msdn.microsoft.com/en-us/library/system.reflection.callingconventions) on it and decipher the difference in IL between a static and a instance constructor. &gt; I'm confused by this You're not looking at the actual code, which is supplied in the third link. I am. Which is how I know the CallingConvention issue.
I'd stick with the built in code analyzers. They're pretty comprehensive and not everyone wants to run Resharper.
I presume the intention is for this code to be accessible in C#, since it's an interpreter for C# (not just the property, I mean the library). But I could be wrong.
ok that is perplexing. all xaml dictionaries in the same namespace? you said you checked the resource behaviour.... err try the .otf version with the added solid in the name string? like.... at this point i'll suggest getting a different font to work and debug fontawesome from there: download roboto: https://fonts.google.com/specimen/Roboto?selection.family=Roboto (selec font top right, download down arrow in the popup) add the .ttf files to your solution set to resource and never copy. add &lt;ResourceDictionary Source="./Styles/Fonts.xaml" /&gt; or the equivalent of what you are using to app.xaml. MAKE SURE it's the first item in the list. resource dictionary load order matters. In Fonts.xaml or your equivalent add: &lt;FontFamily x:Key="RobotoRegular"&gt;pack://application;,,,/Fonts/Roboto-Regular.ttf#Roboto&lt;/FontFamily&gt; If that one works but doesn't for font awesome you have a problem i can't diagnose. I don't have VS installed on this machine so i can't actually test what works for me witht fontawesome but i'll try it at work tomorroq
A string is not a reference type like an object. You have to return it
Honest question; how does anyone find a LISP readable?
If you already played around a bit with C# and are an experienced programmer you should look into "C# in depth".
You might have better luck checking out \r\Crestron. There's a whole bunch of us Crestron guys that check that subreddit out, and several of us have S# experience. That being said, what is the signature for the method you're trying to assign? It has to be a void method with one parameter that is a BasicTriList type. Otherwise it doesn't match the signature of the anonymous delegate you're trying to assign it to.
You may want to try re-writing your generation using [Sigil](https://github.com/kevin-montrose/Sigil) as it will fail-fast (i.e. will throw as soon as you do something sufficiently wrong, not on execute) and be a little more helpful from a troubleshooting standpoint. 
In the code in provided at the bottom
Hmm so maybe I should just use an int to represent what I'm doing. It really doesn't have to be a string 
Thanks, I keep an eye over there as well. I had this working a while ago and lost some code when I changed jobs. I just can't remember what I did differently. The method signature is correct. The issue is at boot time when I try to assign the method to the DigitalPressAction. 
i'm pretty sure resharper is a superset of the built-in analysis features. it's also an industry staple. so, i'd probably recommend using that since you have access to it. if you want to run analysis on check-ins, you can check out https://www.sonarqube.org/. it seemed pretty good at c# analysis and doesn't cost any money. some people like seeing the weekly reports with test coverage and such.
Check that there's actually something in the UserObject. That's probably where the null reference is coming from. 
&gt; It's not. If he had specified CallingConventions.HasThis it would work ... I'm admittedly being pedantic here but it is an orthogonal issue. I get your point that it's possible to tweak the caller to get bad IL code to execute in this specific situation. That's technically true but now we're requiring the caller to have intrinsic understanding of implementation (e.g., type derivation chain).
Of course string is a reference type.
Wow, three hidden comments when I arrive. Anyway, you don't need to use the Action constructor: (tp.BooleanOutput[6].UserObject as DigitalJoinUserObject).DigitalPressAction = (x) =&gt; Room.officeToLaptop(x); Should work. 
They're both good. But I wouldn't break an automated build if they report problems as they can both be a little over sensitive, and the things they report need investigating. I personally pay attention to the R# alerts as I code, then run Code Analysis every few days or right before checkin. 
... what? I'm having trouble understanding "my point".
In this case yeah I would absolutely make a single method that checks all textboxes and appropriately sets their states, with handlers set to call this method on all of them.
The easiest and fastest way is to: * Install MySQL on the new machine * Shut down the MySQL service on the old machine * Copy all the data files to the new machine MySQL database files are binary compatible. * Start MySQL on both machines. MySQl DB files are binary compaible across platforms.
God no, I wouldn't touch anything other than C#. This was an April Fools! Super excited for Blazor - C# in the browser and completely eliminates Javascript.
I would just like to mention that I don't think the `CallingConventions.HasThis` is strictly necessary, and I never originally used it since all of the [Microsoft examples](https://msdn.microsoft.com/en-us/library/system.reflection.emit.typebuilder(v=vs.110).aspx#Examples) for `Reflection.Emit` just use `CallingConventions.Standard` for constructors and stuff.
How about this: while (true) foreach (var x in collection) // Do something with x here.
Will you be inserting or removing items during processing?
No, I'll update the post
Are you sure `tp.BooleanOutput[6].UserObject` is a `DigitalJoinUserObject`?
I'm good. The earlier loop wasn't adding the userobjects. I think there may be an error in the class. 
You can use `yield return`to create a looping enumerator like so: public IEnumerable&lt;T&gt; LoopIterator&lt;T&gt;(ICollection&lt;T&gt; collection) { using (var enumerator = collection.GetEnumerator()) { while (enumerator.MoveNext()) yield return enumerator.Current; enumerator.Reset(); } }
public static IEnumerable&lt;T&gt; Iterate&lt;T&gt;(this T[] source) { } public static IEnumerable&lt;T&gt; Forever&lt;T&gt;(this T[] source) { var idx = 0; for (;;) { yield return source[idx++]; if (idx == source.Length) { idx = 0; } } }
MountainValuableCap
Why the downvotes? I think this is safer than using `enumerator.Reset();` as it isn't always implemented correctly.
Well, tell us how it goes after you, um, put some effort into it. Good luck!
Thanks, but it does not say anything 'bout XAML. And I really don't want to go back declaring my UI in code.
Just a note on using `IEnumerator.Reset`, from the MSDN page: "The Reset method is provided for COM interoperability. It does not necessarily need to be implemented; instead, the implementer can simply throw a NotSupportedException." AFAIK the `Reset()` method isn't best practice, and it's likely safer to simply dispose the enumerator and make a new one once it is exhausted. Adapting your code: public IEnumerable&lt;T&gt; GetLoopIterator&lt;T&gt;(ICollection&lt;T&gt; collection) { while (true) { using (var enumerator = collection.GetEnumerator()) { while (enumerator.MoveNext()) yield return enumerator.Current; } } }
If you divide a number by 10, it will drop the one's place (assuming integers). If you mod (%) a number by 10, it will give you only the one's place. Ex: 1234 / 10 = 123 1234 % 10 = 4. You may need to do some work to adapt these facts into C#, but that's the main idea.
Hm, that's unfortunate. Seemed convenient if you're in a performance critical section of code. Thanks for the correction.
This is not a csharp relevant post. This is a homework assignment that happens to be in csharp. You're on the wrong sub
great explain , thank you very much!
 Why? Ionic is a fantastic platform. Ionic v4 is introducing web components for fast UI design, built for both PWA's and native apps (for full code-sharing capabilities) and allows your UI developers... to be your UI developers. If your front end developers can make a website, they can make an app (or PWA, or both.) On top of that, it's the only out-of-the-box solution for debugging Service Workers, which is an amazing tool. I don't see how you could dislike Ionic.
Packet sniffer would also be great, but capturing network packetes is a system level task. So we need something like Pcap. =&gt; The user has to install a driver. I found a sample on codeproject with SharpPcap: https://www.codeproject.com/Articles/12458/SharpPcap-A-Packet-Capture-Framework-for-NET I add it to the roadmap. If you have any questions, you can contact me via PM.
I'm biased, but a fair bit of it is still very relevant. A few of my favorite chapters that I'd recommend reading: - Introduction to Parallel Extensions - Productivity and Quality with Unit Testing - Asynchronous programming with async and await - Adapting to Inversion of Control - Are you Mocking me? Each new chapter starts with a overview of "What will you learn", have a look at that and see if the content appeals to you? Hope this helps :)
Cool, thanks for the reply. I will try to find time to check it out
Or if you want to avoid enumerator alloc: public static IEnumerable&lt;T&gt; Forever&lt;T&gt;(this T[] source) { long i = 0, cnt = source.LongLength; while (true) { yield return source[i]; i = i++ % cnt; } }
How about implementing a doubly-linked list. With the "first" item having a reference to the last and the next, and the "last" item having a reference to the first and the previous. There'd be no first or last item then, only a circle of items. Not sure if it'd drive the GC mad, though. 
Try creating this function in your player class public void AssignStats( string class) { If(class == 'sniper') { This.health = 100; This.dmg = 10; } } And call it like Var p1 = new player() p1.AssignStats('sniper');
Wow looks great. Thank you so much for sharing ;-)
I'd say prior experience helps, but some chapters will be easier to follow along than others without it. If you've worked with other programming languages before, this is probably a good resource if you want to jump into C# and understand concepts and how they apply in .NET, for things such as asynchronous programming, using dynamic, parallel programming, unit testing and code quality.
I see. Thank you! I'll give it a go.
Thanks for sharing!
Use async methods with cancellation
If you can create a list of issues, I will give it a chance and help you out although I expect to be able to contribute only on weekends. 
So, remember how earlier in the thread you mentioned this? &gt; The name in the .otf is "Font Awesome 5 Free Solid" try that Yeah.... about that... I completely overlooked that until just now. And it turned out to be the actual solution too. I now have working icons as intended at the cost of feeling really stupid for wasting your additional time. Thank you so much for helping me out. Really do appreciate it a lot.
If Equals returns true for two instances, then GetHashCode must return the same value for both instances. Therefore, the rule is that GetHashCode must only include fields that are compared in Equals. It can use a subset of them, if you wish, but not a superset. Therefore, definitely do not include Z in your hashcode calculation. The other property of your GetHashCode is that it produces values with a low probability of collisions, so if you don't include all your equality fields then at least ensure you include the ones that have the most variance.
Sweet, that's exactly what I assumed and have been doing. I just wanted to check there weren't any side effects to ignoring properties.
Removed: Rule 4.
Removed: Rule 4? 7?
You can use HTML templates, preview them with WebView control, and convert HTML to PDF for printing.
Sm√∂rg√•sbord* ;) Nice of you to release it for free. However it feels like nowadays there are more up-to-date free resources online. I don't want to sound lile a jerk, but can you give any reasons why your book is still worth reading? Does it cover anything unique?
they stream coding sessions now? that's bomb
Here is a Linq version that buffers the input on the first pass and then enumerates over a list infinitely after that. As added bonuses, you can pass in streaming input, the caller doesn't need to implement or use a custom collection, and has the ability to be cancelled by the caller. It iterates over a list, but the list could be translated into an array for the infinite looping if GC and the looping performance itself matters here: public static class LoopForeverExtensionMethods { public static IEnumerable&lt;T&gt; Forever&lt;T&gt;(this IEnumerable&lt;T&gt; input, CancellationToken cancelationToken) { var buffer = new List&lt;T&gt;(); foreach (var item in input) { if (cancelationToken.IsCancellationRequested) { break; } buffer.Add(item); yield return item; } while (true) { for (int i = 0; i &lt; buffer.Count; i++) { if (cancelationToken.IsCancellationRequested) { break; } yield return buffer[i]; } } } public static void TestForeverLoop() { var input = new List&lt;int&gt; { 1, 2 }; foreach(var item in input.Forever(CancellationToken.None)) { //Do Something } } }
I'm pretty sure I wouldn't have sold any copies outside Scandinavia if I used "√∂√•" in the title! ;) As I mentioned in another comment, I have a few favorite chapters which covers topics close to my heart. There are of course plenty of other resources online which teaches the same technologies or patterns, in different ways. The chapters on async, parallel programming, mocking/testing/IoC haven't really changed much since I released the book so I'd recommend checking those chapters out. The book is unique in it's way that I try to get to the point quickly, and not spend 20 pages on something I can explain in a paragraph. The benefit of self-publishing is that I didn't have any requirements on the amount of pages. Let me know if you do read it and find it useful, it's always nice to hear from people what they think!
I‚Äôll definitely do that. Thank you for your interest btw- I‚Äôve been really busy lately (new job at new hospital) but I‚Äôve always wanted to learn how to open this project up to the community for contributors. I‚Äôve been developing it full-stack... it‚Äôs tedious!!!! I‚Äôm reading up on how to make issues and guidelines/resources/etc and will make them this week. Is it possible to add as a collaborator on Github to send messages there when I update stuff? I‚Äôm new to ‚Äúsocial‚Äù programming- I‚Äôve mainly used Github as a repo/dev tool/storage. 
https://blogs.msdn.microsoft.com/ericlippert/2011/02/28/guidelines-and-rules-for-gethashcode/
Re: 6. There is a 92% chance that the person looking at the code is future you. Don‚Äôt be a dick to future you. 
This is the best answer, it is simpler *and* better performing than the others. Op's original % operator solution is a tie. Don't try to make it C#ish, try to make it simple and fast. When you can do both you have won. 
How different is core from MVC as far as day to day coding is concerned? 
arrays implement IList though, fyi. Most things do it seems. More than anything though why not just use IEnumerable here for the collection instead of ICollection? Otherwise, awesome.
This is true if it's a one off I guess. 
The cancellation token is interesting.. I was just going to say that in the block of code using these methods you just need to make sure you break at some point, but this gives an interesting alternative way to do this.
Seconded. By that nature though you might as well simply use IEnumerable&lt;T&gt; since arrays implement that by the very same nature as well.
Another recommendation from the MS guidelines is that you don't use fields to calculate the hash that are mutable because a collection of existing objects that can suddenly change their hash can cause problems. Although this seems like it would be tough unless you're pretty strict about the ID being the hash and equality comparison for entities and making value objects immutable.
Looking through all of these answers makes it seem like: 1) Do not use Enumerable.Reset(). 2) Use IEnumerable&lt;T&gt; as even arrays implement it. So, the simplest form of the code is probably: public static IEnumerable&lt;T&gt; Cycle&lt;T&gt;(this IEnumerable&lt;T&gt; e) { while (true) { foreach (var elem in e) yield return elem; } } This allows you to do some fun stuff like this: var i = 0; var rand = new Random(); foreach (var elem in new Func&lt;int&gt;[] { () =&gt; rand.Next(0, 1000) }.Cycle()) { if (i++ == 100) break; Console.WriteLine($"Iteration #{i}: {elem()}"); } Has anyone checked if buffering the IEnumerable on the first pass is important or not? I've seen that done in an example or two here but no explanation of why it's necessary. Is it a GC thing? 
You are awesome. I really think the "what will you learn" parts are probably really helpful for beginners. I will pass on the info. Thanks!
That had to take quite some effort but like some have said, is it still relevant in 2018? I'm sure it is, especially if it addresses common scenarios which all developers face throughout the continual learning process. However, I HAVE to ask, how many people advised against that stupid name before you finalized it? My very first reaction was, what a retarded name for a tech book, whether it's filled with gems or nuggets, the title evokes a visceral reaction. Recommend a retitle and 2018 edition with c# 7.1 content. Good job but get to work!
whoa, I never even considered that.
note that at times Equals/GetHashCode needs to be equality by identity, and not imply equality of the entire object (all its fields). this is a key requirement for things like NHibernate (and I assume EntityFramework) where the Equals/GetHashCode are used to keep track of detached entities.
I took this to be your point: &gt; It's not. If he had specified CallingConventions.HasThis it would work just as well as having manually adding the base constructor call. I'm not trying to be antagonistic here, just wanted to point out that this could be misleading for readers who stumble across this post while learning about IL. 
Be careful about this. I realize you can get away with using incorrect calling conventions in various scenarios but that can quickly come back to bite you. There is a reason for this callout: &gt; [`Standard`: Specifies the default calling convention as determined by the common language runtime. Use this calling convention for static methods. **For instance or virtual methods use `HasThis`.**](https://msdn.microsoft.com/en-us/library/system.reflection.callingconventions(v=vs.110).aspx) (emphasis added) Btw, those examples were written by technical writers and ... how do I say this ... sometimes they have mistakes. I would refer to actual .NET code for better real-world examples. * [dotnet/corefx search](https://github.com/search?utf8=%E2%9C%93&amp;q=repo%3Adotnet%2Fcorefx+extension%3Acs+language%3AC%23+CallingConventions.HasThis&amp;type=Code) (Btw, I'm in Azure now but I used to work on .NET and wrote IL generators for .NET frameworks. Sticking to the documented standard will save you pain later.)
still looking?
This also properly handles the collection if the contents change, since the next time through the loop, it's a new enumerator.
That's kind of a dangerous assumption. *You* might not plan on doing it, but at some point, someone might need to.
Well, that is something I don't know but I know you can attach a message to your commit explaining what you've done in said commit. That message is visible to everyone and it might work for you.
great reply, thank you very much - both for the reply and your contribution to the community of developers. a very necessary task.
Don't know for certain, but looking at the error I think it looks like the connection is opened and never closed. Maybe it helps to extract the connection variable to outside of the try catch block, instantiate it in the try block and close it in a finally block. Just make sure it's not null üòä
Got into this practice a long time ago, along with tagging //end of whatever onto any }, no matter now small. that function that was 5 lines void ValidateData() { if(something == 0) { return false; }//if something == 0 return true; }//ValidateData It makes it really easy to know where you were meaning to close things when that becomes 30 lines. And I've been bitten on more than one occasion where I was too lazy to do it because it was "only a couple lines" only to wish I did down the road. 
There's probably another exception in that try-catch block that you aren't handling that occurs before connection.Close(); is called. Try using a using block: using (var yourConnection = new OleDbConnection(connectionString)) { your code here.... } 
This is the only way I write SQL also, have to do it that way or you will be distracted eventually and make a large mistake.
In theory killing every vhost process that might be accessing your exe. in practice: close vs, reboot your machine, burn the debug folder ( delete everything inside it), debug. In my experience once VS desides to get that particular hiccup it'll keep happening untill you clean house.
Have you tried doing a "Build | Clean" first? I find that in Visual Studio I often have to do a "Clean" before I can do a full build. It's random, so these days I just do a Clean before every build. 
I searched and apparently this 'WebView' is only available in UWP?
I didn't know all those things in #1 were called defensive programming. I just thought that they were good OOP. I would consider it to be "never trust input data and always validate it'. 
Is decoupling interface and implementation for testing 'do[ing] nothing but obfuscat[ing] the code', or is that fair?
Haven't seen that practice in a long time. I don't think it's a great idea, personally. If the opening of the block changes (e. g. `ValidateData` is renamed, or `something` gets compared to 3 instead of 0), you also need to go update the comment. Instead, I find that it's usually better to refactor methods aggressively, and give them good, descriptive names. Reduces the likelihood of a block taking up your entire screen.
I got into the practice of not writing methods 30 lines long.
Sorry, but I don't really care for the //end-comments. It's too easy to change the code and forget to change the comment, and suddenly you've got a situation where the code and the comment says different things. 
Is this pure asp.net site? :)
I don't want to touch java for this ;(
This was relevant when you didn't have a good IDE. This is just a waste of time now even more so when changes occur and it must be maintained. Also, any other need to have this is just an indication that your functions / code blocks are too large and need to be refactored.
What about dependency injection though? 
If you await on the GUI thread, and don't call Co figureWait(false), the continuation will run on the GUI thread. If however you await on a thread pool thread the continuation may run on any other thread pool thread, regardless of whether you call ConfigureAwait.
What defines a "GUI thread?" Because I've tried decorating my main thread with the [STAThread] attribute to emulate that, but with no change.
What? Who said anything about java?
Ops, my fault. Well you can see in the code I provided that this type of thing does not work ;(
This will still fail if an exception is encountered though, right? I thought that's what `IDisposable` and the `using` keyword were for.
I would add upfront favoring composition over inheritance. Inheritance is that shiny hammer in your toolbox that you just got, and everything starts to look like a nail. And so you go around hammering a bunch of screws, and a few weeks down the line everything is falling apart. I find it is one of the biggest pitfalls for beginners in design, because they tend to be taught that's what OOO is all about. This is actually a part of SOLID, the Liskov substitution principle, which gives a view in when inheritance should be used. But sadly enough, it's the shortest and least defined aspect in the entire article. Another good indicator is if you actually want to override behavior. You should be using inheritance to get other behavior for "free" when the object really isn't logically one of those types. 
Yeah, just tried that with a "DispatcherSynchronizationContext". Just seemed to deadlock the app. :P Just trying to figure out what's happening under the hood.
Sure! That would be awesome. I'm looking into creating something like that myself.
All those do is clutter up the code. It's really just a bandaid for making long methods in the first place where you can't tell where the ending brace is. I would rather see (much like others leaving comments here) clean code that isn't tainted by comments that just add fluff for no reason. IDEs already highlight the beginning and ending brace if you put your cursor next to one, so these just make it harder for everyone else to read the code.
Context != thread. TPL does not guarantee distinct threads, it makes promises about context and scope. What are you trying to do? cross thread errors typically mean you need to lock a shared value. While TPL does an OK job of allowing you to skip a lot explicit threading code (like locks) you may still need some depending on how you are doing things. 
Close your application.
Here you go https://www.filipekberg.se/2014/05/21/goodbye-wordpress-hello-snow/
Not trying to actively do anything at the moment. Just trying to wrap my head around exactly how/why Tasks do what they do.
You'll either get a compile error (missing brace, or similar) or you'll leak resources at runtime (consume all items in a connection pool, or similar). Better to write the closing part while it's still fresh in your mind to prevent frustrating debugging sessions later. :) 
They are both working on chat bots. weird.
But "technical reason" includes "it does something not friendly to unit testing and will be difficult to mock". e.g. anything that makes a filesystem or network call.
Yep, saw that on your blog after reading your comment. I'll be looking into this a bit more now, have a few sites I need to move away from wordpress and into a static form. Overhead should be small enough especially when using a cached copy by cloudflare.
Unless you are doing some seriously crazy shiznit, you should never need to touch `SynchronizationContext`. If you want to see what's happening under the hood, hit up the [Reference Source](https://referencesource.microsoft.com/#mscorlib/system/threading/Tasks/Task.cs).
Yes it does. But still - there are people who are "Interface All The Things!!!" when there's no reason to. They're annoying to work with, as they're also usually pretty dogmatic about other stuff.
Agreed. Which is one reason I really didn't want the "Default Interface Implementation" language feature to get put in. (putting implementations on interfaces directly.
Possibly dumb question - did you do a "show all files" and add your .exe file to the project? Or change the build configuration?
~~Why are we getting compile errors? Who's leaving braces open?~~ Reread your original comment and saw where my confusion was coming from. VS2017 automatically sandwiches code for you, and I assumed that you were suggesting something different.
Well, I kind of went all in and I've got 3 servers mid-tier, a loud balancer and storage which is about $150 or $200 per month. But since I'm a Microsoft MVP I get a bit of credit each month to spend on Azure. So out of my own pocket it's basically $0. I could have settled with a simple website instance which is super cheap, but since I have the credits and want to learn more about Azure (so I can teach others) I just spend it all. 
I prefer Python over Bash. And in the other cases it was simpler in Python. Now I have a simple command with some simple options and the environment is not polluted with a dozen of aliases.
Overflow of what exactly? The length of the array?
Do something you love. Love movies, baseball cards, sports stats, whatever. If you aren't being paid for it. Take something that you've always wished existed, and start making it. Most enterprise apps are about storing and presenting data in a useful form. By choosing something you are passionate about you will have the expertise to make something good, and you will have the motivation to enhance a hobby. Making pretend stuff get's a little rough for me at least. You can also try to pick up something on freelancer, but I wouldn't recommend making any promises just based on taking a course unless you have experience already in another language. edit: Also later when you tell someone about what you did, or put it on a resume, you will be knowledgeable and excited about the project. double edit: codingame.com is pretty awesome for doing something chalenging with a quick reward. Not asp.net, but c# which is 95% of asp.net. You can do javascript as well for an additional 3% of asp.net. No CSS love though :). yet another edit: Copying something else is also good. That way you aren't focused much on what to do, but just how to do it.
I wouldn't consider chatbots on the same league as PUBG or Fornite...
what if they fight each other to the death, though?
Yeah, strange. I'm haven't picked up on why that is.
....go on...
...it's only a matter of time.
Hey I also stream coding from time to time! Granted I‚Äôm in python, it‚Äôs awesome to see other programmers starting to take up twitch
There's not such thing as X. Here is the definition of X showing that it is a real thing. P.S. If we really want to be pedantic, there is no such thing as the "main thread" either. Any thread, excepting those marked as background, can keep the application alive. 
I agree. I think there might be a few game-developer channels, as well (even some using unity/C#). What's your twitch handle?
YAGNI?
Thats fair, they are doing something. Just dont start using them everywhere just because.
The common pattern is class that is compartmentalized gradually accumulates public members 'because that's where it should go'. Eventually you realize that your design has broken down and you now have a god class. So the refactoring isn't "change the parameters type" it's how do I define the responsibilities that are there, how do I separate them, then how do I get their dependencies to them so that I can instantiate them. Instead of glomming additional public members onto a class you define and interface for your new functionality you can more easily maintain separation. It is 10% more effort up front, but can easily save you from having to throw away an entire project down the line.
Oh noooooo. I was absolutely April Foolzded. Tell nobody! :)
Ouch, this is a nasty one. Is the pivot table data stored in the workbook? If so then you can get the source range from the cache and read from the source range. See https://stackoverflow.com/questions/8239469/how-to-find-the-data-source-of-a-pivot-table-using-openxml
I recently went from a C# job to Java and found the hard way that your best library design could be fucked by someone implementing something you hadn't declared final (C# sealed.) So for my own work I use Kotlin. Everything is final by default and you have to explicitly declare something able to be overridden. And though not at all the standard I find myself using inheritance in production to take crappy objects I have to work with and overriding their faults and unhandled exceptions that serve no purpose other than fixing design flaws and, as aconsequence, making things more complicated than should be.
Are you running multiple isntance of Visual Studio and running another while trying to build? If so you probably have Edit n Continue debug setting enabled which unfortunately will lock assemblies like this.
So what is the type of IEnumerable and the real difference? I‚Äôm a little confused about the distinction. If I have: IEnumerable e = new List&lt;int&gt;(); How is that different from: IEnumerable&lt;int&gt; e = new List&lt;int&gt;(); ??
So what is the type of IEnumerable and the real difference? I‚Äôm a little confused about the distinction. If I have: IEnumerable e = new List&lt;int&gt;(); How is that different from: IEnumerable&lt;int&gt; e = new List&lt;int&gt;(); ??
My understanding is the interface will not allow you to get properties of those classes the way you showed it, only the implementation methods. Instead of IStapler redStapler, you would need RedStapler redStapler to get the properties. I‚Äôm still confused about composition. No offense but this answer didn‚Äôt really help.
You would use composition *instead* of inheritance specifically in the case where you don't need polymorphism on the composed type. This might be because it implements an interface that can be separately inherited or because inheritance was just the lazy way to compose the two objects. Will try for an example in a moment.
I see. So is polymorphism not REALLY used in the real world very often then (other than compile time, overloaded methods)? Because I keep hearing that 99.9% of the time you should favor composition to inheritance. If that‚Äôs the case, you could not group objects together and have polymorphic method execution.
So now the class and interface accumulate methods. Not really an Improvement. Moreover, interfaces make it difficult to mark methods as internal, which is hugely important for reducing the API surface area and promoting good dead code detection. Interfaces have their place, but their not without tradeoffs. Unfortunately these are often ignored in favor of pretending that we're 90's era VB programers.
I have 2 currently. 1. Monitor application that is currently used across all of the company buildings where i work. It's not something i had to do, but made (and maintain) in my off time. Nothing to show though since it contains some non-public information. Backend is C# using Hangfire for scheduling. Frontend is ASP.NET Core 2 (and html/js ofc). MS SQL for storage. But like i said, can't show much. 2. [Realm](https://github.com/arxae/Realm-Rpg). Discord bot that allows people to play a RPG. Call it a mudlike if you will. Using [DSharpPlus](dsharpplus.emzi0767.com) for Discord communication, [RavenDb](ravendb.net) for storage and [ClearScript](https://github.com/Microsoft/ClearScript) for some scripting. I decided that i don't want to hardcode content (locations, events, skills, etc...). So most of it has a generic implementation which can be "dressed up" in database to behave differently.
Haha, well I tried :P It will expose whatever is on the interface though; both methods and properties. If you really need to be able to treat `StaplingHolePunch` as a `RedStapler`, you can use both inheritance and composition to do so. There are limits, C# is not a language with multiple inheritance, but it's usually the kind of thing you can design around. class StaplingHolePunch : RedStapler, IHolePunch { //etc }
ah, a spider eye loop, havent seen that in a while :)
Internal applies to the whole interface, not individual members. This is a huge limitation because if a parameter is declared as IFoo there is no safe way to access IFooInternal. Likewise, if all parameters are based on the interface then you cannot safely call methods not declared on the interface. Really I shouldn't need to say this, but far too many people don't understand the implications if this.
&gt; But then it‚Äôs more obvious that ‚Äúyou‚Äôre doing it wrong.‚Äù Bullshit. Adding methods to the interface is required if that's the only way the object is accessible. The IDE will even automatically add the stub on the class when you alter the interface. 
Interface is an object is the wrong way to think about it. Interface is a capability. What is the minimal set of interfaces to make a capability workable? If you have a new capability then you have a new interface. 
I got baned from the csharpfritz stream for complaining about balance and calling people noobs and hanzo mains. I don't understand why this is normal twitch chat behavior.
Hmm. I think he's going for a more calm twitch stream. There are communities of good vibes or chill streams where behavior is different. Probably should've been warnings or timeout first.
Chat bot 1 used ‚ÄúHello world!‚Äù IT‚ÄôS SUPER EFFECTIVE!!!!
&gt; If you have a new capability then you have a new interface. And then what? Update every parameter and return type from `IFoo` to `IFoo2Ex` like we did in the COM era? Nothing you said was wrong in absolute terms. But in the context of this discussion it isn't a tenable option.
We kind did a project at my c++ class. Polymorphism is great. For example, you have a person class (which you would have variables like date of birth, first name, last name, height and weight) and you would have another class such as student, so it would be logical that a student is a person, so if student inherits from person, you will not need to create variables that belong to the person. Because once you create and instance of student it also creates an instance of a person with all the variables from person available to the student class. If you learned encapsulation, all variables will be hidden through private, making variables safe as long as you use setters and getters. Now let's say that you want to add address to both of the classes. I would suggest that you create a class for address and person in its constructor would create an instance for address, that way both student and person would be able to create an instance of address. That would be composition. Even though address is used in both of the classes, it is not suggested that both classes inherits address because address is not a person or student per say. Plus, address can be used on different programs without being related to person or student. 
A typical pattern may be IFoo would also implement IAsyncFoo as opposed to slapping the async functions into the existing interface. I don‚Äôt know how the context of the discussion implicitly provides a counter factual to my argument that ‚Äòclasses that are broadly used or are public should be consumed through interfaces and those interfaces should be stable.‚Äô Does that statement put constraints on the developer? Yes. Does that mean that the developer needs to think about the long term implications of what they are doing? Yes. Does it lead to a healthier code base through well defined behaviors? I would argue that it does. Whatever works for you works for you. If we were on the same team I would push you towards using more interfaces and would make efforts to demonstrate their value. I‚Äôm sure that your have design preferences that you would try to get me to use as well. 
The only thing that I can think about is that you would create just an instance of the person class into the constructor of the student class. That way you would still have access (it would be indirect indirect) to the person variables but it wouldn't be inherented. The only thing that it would change is how you would access those variables. In inheritance you would be able to do something like this student2.getFirstName() In composition it would be like this student 2.getPerson().getFirstName() Provided that you create a private person in its constructor and create setter and getters for that. So inheritance makes the process more streamlined because when you create an instance of student you would automatically get all the variables of person without manually create an instance of a person class. You could still manually create and instance of person inside the student class but it would be too cumbersome to call through each class the variables when you need. Like if I created another class called studentEmployee which inherit from student. If I wanted to use a function it would be this StudentEmployee1.getFirstName() If it was a composition it would b StudentEmployee1.getStudent().getPerson().getFirstName() In order to make the same call. 
The only thing that I can think about is that you would create just an instance of the person class into the constructor of the student class. That way you would still have access (it would be indirect indirect) to the person variables but it wouldn't be inherented. The only thing that it would change is how you would access those variables. In inheritance you would be able to do something like this student2.getFirstName() In composition it would be like this student 2.getPerson().getFirstName() Provided that you create a private person in its constructor and create setter and getters for that. So inheritance makes the process more streamlined because when you create an instance of student you would automatically get all the variables of person without manually create an instance of a person class. You could still manually create and instance of person inside the student class but it would be too cumbersome to call through each class the variables when you need. Like if I created another class called studentEmployee which inherit from student. If I wanted to use a function it would be this StudentEmployee1.getFirstName() If it was a composition it would b StudentEmployee1.getStudent().getPerson().getFirstName() In order to make the same call. 
Are you telling me to apply for jobs on freelancing websites with the basic portfolios that I managed to create using the knowledge of the Lynda courses?
I like the way you explained. But I don't think an interface is the best way to explain to him about composition. Interface is sort of inheritance, but you have to implement the code for all the methods that you would be using it. While if you import the class and just create an instance in its constructor. Like you said it will still provide methods and properties that belong to the person without inheriting or implementing anything. You would invoke methods diferently though. 
In .NET the runtime Type of "e" is the same between both those statements. It's just basic polymorphism that allows you to treat anything that implements IEnumerable&lt;T&gt; as IEnumerable too. There are even afew more interfaces inetween that point like IList&lt;T&gt; and ICollection&lt;T&gt; and some non-generic ones too I think. The main difference is what you can do at compile time with "e". "e" will always be the same runtime type but if you use IEnumerable then you will have access to methods and extension methods associated with IEnumerable. Which is usually far less preferable than than the generic IEnumerable&lt;T&gt; extension methods. The IEnumerable will look as if it's a collection of System.Object which technically all collections are but usually not a good thing to treat them as such. You should pretty much never use IEnumerable. You'll probably only see it being used when it shouldn't be or in really really old .NET legacy code before generics were introduced.
ConfigureAwait(true), which is the default, keeps you on the same context when called from a UI context or ASP.NET request context, and yes, the context can change threads. With the GUI, as long as you access the UI from the UI context, all will be fine. So after awaiting on the UI context, if the remainder of the method is going to modify the UI, then you want to return on the same context. Otherwise, you can pass "false" instead for a performance boost. ConfigureAwait only works at the method level. Say you have method 1 that awaits method 2, that awaits method 3. Let's say you're using the UI context, and let's say 1 is called on this UI context, and 1 awaits 2 but doesn't call ConfigureAwait. Then 2 awaits 3 but does call ConfigureAwait(false). The remainder of method 2 after this call will execute on a thread pool thread, but when 2 returns, the remainder of 1 will be executed on the UI context, because that's what method 1 was using. A context is what's really important. Threads execute with a context. Unfortunately, I can't actually go deeper into what a context is, but perhaps someone else can.
Thats such a good idea. I did that, the function works the way I want, but the changes don't stay. Like I debug it while its running and I see it updating stats, then I check the outcome after its done and the variables are unchanged. Any idea why? I'm stumped. Code here: https://gist.github.com/MajorMojo/566195e94e341e24c2d58801e9e3a493
&gt;While if you import the class and just create an instance in its constructor. Sorry, I'm feeling a little slow tonight. Import the class?
Most? Async/Await for sure, but most OO features weren't F# first.
not fair! I suggest you make a new account, streamsnipe him and post the a clip of it on snapchat.
Not all of us have the luxury of doing this in other peoples codebases, similarly not all methods are equal and can have their single responsibility compressed into just a few lines. In the codebase I'm currently digging through and fixing up, 100-400 line methods are commonplace. I'm amazed there are not `goto`s.
Thanks for sharing this, defenitely gonna check this out!
If you type that out in Visual Studio it gives you the error needed to understand your problem: "Using the generic type 'IEnumberable&lt;T&gt;' requires 1 type arguments". You need to specify the type, which in the second example you specify as int.
Probably because you already have your app running one way or another. Check in your taskbar or in your task manager and delete the already running task. 
Then again, if you‚Äôre using mutable objects as keys you‚Äôre asking for trouble. 
&gt; note that at times Equals/GetHashCode needs to be equality by identity, and not imply equality of the entire object (all its fields). What do you mean by identity? Normally that means it‚Äôs the same instance, in which case your implication doesn‚Äôt make sense since the same instance obviously has all fields equal to itself. 
Anyone know any Java streamers?
To be fair I got banned for 10 minutes
No, but there is a subreddit just for developer streamers I found out about yesterday. However, I don't see any Java streamers on there, yet. https://www.reddit.com/r/WatchPeopleCode/ 
I think you need some historical context for this because it might help frame some of the "advice" you're getting or got. This is the abridged cliff notes version: Developers of a certain age learned OOP as lots of inheritance. The problem is, when you only have a hammer, everything starts to look like a NailBase and while you could work around the problems a better solution to many of the problems being solved was to embrace composition. So the advice used to be "prefer composition over inheritance" which means "Do you need inheritance here and could composition be a better solution?". This has, through Chinese whispers, become "FEAR INHERITANCE FOR IT IS EVIL!". It's so evil that there's a proposal for default interface implementations in the C# pipeline... So try and embrace the actual advice which is that inheritance is great but it's one tool of many, and more situational than its hammer like exterior would suggest. To answer your specific Enumerable question, composition and inheritance, especially where interfaces are used are not mutually exclusive. You could have CollectionBase which implements IEnumerable and have half a dozen derived classes which modify its behaviour. Alternatively you could have CollectionComposite (don't start putting composite at the end it's just for example) which also implements IEnumerable but has the implementations injected. Its IEnumerable implementation would then call the implemention we injected.
the id of the entity (in the database) could be one field, the primary key in the database, and the other fields are just the other columns. then then Equals/GetHashCode implementation would only use this one field, and not all the fields. this kind of equality is also useful for other scenarios, where the identity of the object should be what constitutes equality, and not the values of all its fields. NHibernate is just one common example of this.
Agreed
Also, also: you can sort of bodge together non-virtual polymorphism with composition and custom casts, i.e. public implicit operator Bar(Foo x) =&gt; x._bar; but managing virtual overrides would require something like public class Bar { public static string DefaultToString() =&gt; "Bar"; private readonly Func&lt;string&gt; _toString; public Bar() : this(DefaultToString) {} public Bar(Func&lt;string&gt; toString) =&gt; _toString = toString; public override string ToString() =&gt; _toString(); } public class Foo { private static string DefaultToString() =&gt; "Foo"; private readonly Bar _bar; public Foo() { _bar = new Bar(DefaultToString); } public implicit operator Bar(Foo x) =&gt; x._bar; } Which gets pretty unwieldy pretty fast.
Yep. You have to be okay with making mistakes, but try to accomplish things. The best attitude to try something new, in my opinion, is to implement it in whatever way you can, but always make a mental note,"This is probably not the best way to do it. Someone will probably come along with a better way.". Wherever you make that kind of guess, put a comment in the code to reflect that concern, which will encourage others to fix it as they come across the code. You don't want to paralyze your development by not trying to do something before you are "ready" because you will likely never be ready without trying.
It depends on your level of computer fluency. If you are a total noob you may have a lot of wasted time trying to figure out how to work the editor. The C# language is the same either way though! Whichever way you go, be patient. Learning the C# basics can be a 1 or 2 year thing. Unity is a whole second area of knowledge to learn on top of that. 
MonoDevelop and Visual Studio are just IDEs. Visual Studio is a little more complicated than MonoDevelop, but it will serve you much better in the long run, as it is more widely used. The code you write will be the same in either, and it will work very similarly. You may need to look up a tutorial on attaching Visual Studio to the Unity editor so you can run and debug your code from VS, but that's not overly complicated, and isn't strictly necessary. It's just sugar on top. As far as compatibility, the IDEs have no bearing on that (Okay, that isn't quite correct, but at a basic level of programming, if you're not messing with configurations, they should both "just work"). The authority will be running the game in the editor and ensuring there are no errors in the console. Another option is Visual Studio Code. It's a lightweight code editor that has lots of the nice features of Visual Studio (highlighting, IntelliSense, debug capabilities, etc.) but in a much easier-to-use package. There are plugins to support Unity development, too. It's what I use and so far I like it! If you have any questions on Unity, feel free to DM me. I'm by no means an expert, but I've been using it for a couple of years and I know C# like the back of my hand. 
Do you have any idea what the sieve is and what oop means?
Potentially, it really depends on the needs of your implementation. If the objects are private, such as in your example, it doesn't really matter if they are interfaces or not since you have 100% control over how those objects are used. If those object are public, then yes you very likely will want to use an interface so only the methods and properties you want exposed are exposed. There are three main purposes for interfaces. The first is a form of mulitple-inheritance without true multiple-inheritance. The second is when you will not have complete control over the type of object being passed into another object. The final is when you want to make sure other developers on your team stay within a specific scope when using an object. 
How do you code adding two numbers only objected-oriented?
[Phoneblocks](https://phonebloks.com/) is a good real life example of composition. It's a smartphone that requires you to plug small blocks (camera, memory, cpu, battery, ...) onto it based on how you want to use your phone. Don't take many pictures? Buy a cheap camera. Store lots of music? Buy better/more storage units. The base phone (with its slots) is like a conposed objects (with its properties). The developer of the phone (class) doesn't care about which blocks (compositions) will be used, as long as they are compatible (implement the needed interface). If I develop a new type of block, the developer of the phone isn't required to uodate their model to account for my newly designed block.
What do you mean by adding two numbers? the sieve is a prime number calculator for a specific number of numbers. For example all prime numbers from 1-1000. 
Can you post more code, perhaps a minimum, complete example? How does f2 get initialized?
sure, here is the full program void Start () { string masterFile = Path.Combine(Application.dataPath, "sample.py"); string t = Application.productName; ProcessStartInfo p = new ProcessStartInfo(masterFile); string f0 = "1000"; string f1 = "Quantum State"; string f2 = "True"; p.Arguments = string.Format("-n={0} --prime='{1}' --save_file={2}",f0,f1,f2); print(f1); print(t); print(p.Arguments); Process P = new Process(); P.StartInfo = p; P.Start(); }
I'm interested in your channel too!
How about a couple of classes: - Number, which encapsulates a number, and includes a `bool? prime`, set to null before the sieve is run, then either true or false after it's been run. (Thinking about this some more, maybe the optionality of the bool isn't required, and you can just default everything to true, then change it to false if it's not prime...?) - Sieve, which encapsulates a `Number[]`, and includes a method to run the sieve. It could also include private methods as required, for example a method that takes as a parameter a prime number, and marks all multiples of that number as not prime. It would also include a method that returns true/false depending on whether a number is prime or not - this method should throw an exception if it's called before the sieve is run (or perhaps it could run the sieve if it's not already been run?)
OOP has functions. Sieve of Eratosthenes is a function. So public class Foo{ //implement sieve function }
The point SirSooth is saying is it's an algorithm that can be implemented with fairly simple math using primitives. You don't need OOP, you just need a class with a method.
You need for loops, if statements, arrays, bools and ints. The only reason you need a class is C# requires it to have a Main method.
Isn't this spam?
&gt; You need for loops, if statements, arrays, bools and ints. Of course you do, but that doesn't mean it can't be OO too. If the sieve was a part of a larger project, and the larger project needed to check whether something was prime or not, you'd create a class that encapsulated prime numbers. That class might be implemented using the sieve of Eratosthenes, or it might be implemented a different way, but whatever way you do it, you'll need some combination of loops, if statements, arrays, bools and ints. But you can still wrap it up and encapsulate it in a neat OO class, that the rest of the program can use when it needs it.
Thanks. The data is stored in the workbook. But the solution in the link isn't working for me. I get a syntax error. I added: Excel._Worksheet exWks = (Microsoft.Office.Interop.Excel.Worksheet)exWbk.Sheets["WorksheetName"]; var pivRange = exWks.PivotTables[0].CacheDefinition.SourceRange.FullAddress; But the VS editor doesn't like the "0" in the 2nd line. The error is: *Cannot apply indexing with [] to an expression of type 'method group'*
Right, but that wasn't the question that was asked. The question was asked in such a way that implied OP thought the algorithm might be implemented differently in OOP. Your reply detailed an over-engineered approach that doesn't actually implement the algorithm, but instead finds if a given number is prime, for which there is a more well suited algorithm. We have a problem in our profession of people over-engineering solutions.
Try string f1=@"Quantum State"; you want the quotes included in the value.
If anyone should stumble upon this and wondered how I solved it. I just made 2 views. The first view being a page that shows all possible filters (there are 16 in my case). Once these are selected all values are put into an instance of my main class. This gets used in the controller to filter all the data (comparing each object with the object created by the view). Then the collection of data that matches the request is given as input to the second view where the table is printed. 
https://docs.microsoft.com/en-us/dotnet/csharp/misc/cs0642
Like me and every dev I know, you can start with the MVC music store tutorial :P https://docs.microsoft.com/en-us/aspnet/mvc/overview/older-versions/mvc-music-store/mvc-music-store-part-1
The ‚Äúunreachable code detected‚Äù will also go away when you remove this semicolon. It‚Äôs telling you that the `break;` in the block after the `if(...);` statement will always occur, so the `j++` can never happen. Once that block becomes conditional, both warnings will go away.
With the latest version of Visual Studio and .NET framework, they have removed the .nuget folder (I found this all out from talking to certain developers) and stored it within the "sln" and "csproj". I also found out that they reduced the number of lines within the files as well as how packages were referenced to stop any issue from occurring.
The OOP may not be the best choice but it is what he's been asked to do. The reason may be to just demonstrate encapsulation, for example: I have an object of type Sieve and I can call sieve.CalculateNthPrime(n);. Internally, the Sieve may contain several collections that allow tracking of previous results (perhaps for performance reasons). Some reasons that could make it beneficial to the caller: * I ask for the 9th prime after already calculating the 10th prime. An optimal Sieve will return the already calculated 9th prime without any additional compuational expense. * I ask for the 11th prime after already calculating the 10th prime. A memory optimised Sieve could use the pre-calculated primes (rather than a table of not-prime vs prime flags) and a slight bit of additional computation to then calculate the newest prime. This could obviously be done functionally, but OOP can still provide a nice abstraction for the caller. Why an object and not a series of static functions and variables? Ease of testing.
error: expected ‚Äò)‚Äô
https://github.com/NetPowerON/SieveOfEratosthenes
oh i missed the VS2017 comment. Yea, I'm still on 2015. Hoping to upgrade soon
How are you storing them?
This guy OOPs.
https://twitch.tv/zerg3rr , I made sure to add some more information to my original comment as well!
https://twitch.tv/zerg3rr , I made sure to add some more information to my original comment as well! Edit - if you‚Äôre just starting I may even be able to help ya! I‚Äôd be more than happy to help you figure out some of your problems if I can
 // This outputs, literally: // Quantum State Console.Writeline( @"Quantum State" ); 
&gt; I recently went from a C# job to Java and found the hard way that your best library design could be fucked by someone implementing something you hadn't declared final (C# sealed.) I went from Java to C#, but I've also had the benefit of having read Effective Java... it has several examples of using a non-final class (`java.util.Date` specifically, which has been around since Java 1.0 and is now deprecated) to potentially "sabotage" otherwise safe code.
This sounds like a trick question by your interviewer to get you to realise that object orientation is not the solution to all problems.
That's awesome, but is that even what OP asked? We don't know because we're given only a 9 word question that says nothing of caching, calculating Nth prime, etc. The fact OP is asking this question says to me it's not for a programming job but it's in fact for a programming assignment.
WTF is that even allowed by the compiler? I know why C did it (made writing the compiler easier) but there's no reason for it in this day and age.
So, you've committed a few mistakes here not just in your code, but also in how you've gone asking for help. I want to try to help you with both so that you can ask your questions in the future more clearly. First, your approach to the post: Your post's title doesn't seem to have much to do with the question you're asking in the body. Your title complains about `save_dir='My Docs'`, but your text is talking about `save_file='Quantum State'`. Please, be consistent when asking questions. The code that you gave in the post didn't show any of the context about how it was being used; we're not magicians, context is important. Thanks for posting the context after we asked, but in the future, try to present a Minimum, Complete, and Verifiable Example. StackOverflow has your back here: https://stackoverflow.com/help/mcve You should've posted your code by updating your original post, instead of in the comments. If you instead put it in the original post presents it in context and makes it so that everybody will see it; by putting it in the comments, it might get buried if the discussion got larger. You didn't give us a clear example of what went wrong. In your original post, you don't give us a single symptom nor error message. In your update above, you allude to an error but you still don't post it: &gt; there error I get from terminal is that it " State" is incorrect syntax or something to the liking 'Something to the liking' isn't really precise, so that gives us nothing to work off of. We can't google that, we can't look through the known error outputs for what you're calling; it doesn't give us anything concrete to work off of. Be precise, please. ... Your actual problem: when arguments are passed to a program, the argument string is split apart by the OS's program loader by splitting on spaces. You're trying to fix that with `'` characters, but that's not the right character to do that. If I pass in `-a -x -b2=3` to a program, it'll turn into an array of strings that looks like this: public static void Main( string[] args ) { Console.Writeline( args[0] ); // Prints: -a Console.Writeline( args[1] ); // Prints: -x Console.Writeline( args[2] ); // Prints: -b2=3 } I think you already knew that, but I wanted to just make it explicit. If you want the OS loader to preserve spaces in tokens, you have to use the `"` char. You can test this yourself by writing two programs, one that prints its arguments, and one that calls that program passing in various argument strings. If I pass in `-a -x --welcome_msg="hello world"` to a program, it'll turn into an array of strings that looks like this: public static void Main( string[] args ) { Console.Writeline( args[0] ); // Prints: -a Console.Writeline( args[1] ); // Prints: -x Console.Writeline( args[2] ); // Prints: --welcome_msg=hello world } In order to assemble such as string in your code, you'd have do something like: string args = string.Format( "-a -x --welcome_msg=\"{0}\"", "hello world" ); And then to emulate what you're doing: If I pass in `-a -x --welcome_msg='hello world'` to a program, it'll turn into an array of strings that looks like this: public static void Main( string[] args ) { Console.Writeline( args[0] ); // Prints: -a Console.Writeline( args[1] ); // Prints: -x Console.Writeline( args[2] ); // Prints: --welcome_msg='hello Console.Writeline( args[3] ); // Prints: world } ... If you want to play this yourself, you could create a program that prints its arguments, and a test program that calls it to see what it does: ArgPrinter: public static void Main( string[] args ) { foreach( string arg in args ) { Console.WriteLine( arg ); } Console.WriteLine(); Console.WriteLine( "Press enter to continue:" ); Console.ReadLine(); } ProgramCaller: public static void Main() { string programExe = @"..\..\..\ArgPrinter\ArgPrinter\bin\Debug\ArgPrinter.exe"; string args = string.Format( "-a -x --welcome_msg=\"{0}\"", "hello world" ); ProcessStartInfo startInfo; startInfo = new ProcessStartInfo() { FileName = programExe, Arguments = args, }; using( var testProc = new Process() ) { testProc.StartInfo = startInfo; testProc.Start(); testProc.WaitForExit(); } } ... One other little thing with your code - try to use meaningful names for your variables. Having two variables 'p', and 'P' that differ only in case and are only a single-letter is a really bad way to write code.
authentication features as in JUST Asp.Net Identity, or are you using Identity Server 4 as well? It's angular, but I wrote an example a while ago: https://github.com/Dispersia/SurvivorQuest ^ uses identity server 4 with an auth server (even though you could easily fuse the auth server and api), using OAuth with an implicit flow for authorization. If you aren't using identity server (or openiddict, etc), then you could simply do `dotnet new mvc --auth=Individual` and then it will create the views and everything for you to log in, just delete the views and call the controllers like how their views do.
I'm not sure what you are doing but where it's going doesn't look pretty. You surely don't seem to know much about ASP.NET. Before you are going to create some huge security holes in your software or just very badly working website you should just stop. Then start from the basics, buy a good ASP.NET book are read it until you understand it. P.S. Also Java and JavaScript two completely different languages.
That would be awesome. I've got enough experience to know basic structure but that's about it. I can do the basic conditionals and loops, even write a function or two, but that's about it. Short of writing anything but text based games and varying versions of a calculator, that's all I've got. That's why I'm trying this program a day thing. So if you have any programs you'd like to challenge me with, fire away! Only guidelines are must take ~1 hour or less to complete and it can't use external libraries, just stock python 3.4
I think you are on the right track with your two proposed solutions, but need to take it a step further. I am not a home automation developer, I don't have experience rebuilding the way you describe it, but what I would do is create a data access layer that is a go between your data and what wants to see your data. An object would request data from this layer, then this layer would determine what data needs to be sent back, and would send back another object with that data. What this will do is make it so there is only one object that is worried about if the data has been updated. It can then inform all of the other objects when that data has been updated, and send them the new updated data. It is essentially a fancy Singleton, but it separates out the data from the accessing of that data. Now like I said, I have no experience with what you are doing, so this might be completely useless, but I hope it is not.
Any reason it can‚Äôt use external libraries? You could try looking into a simple UI with tkinter, or possibly going through a list of files looking for a specific item (like a specific string within one of your files). You can always come back to a project as well I hope, therefore extending your hour long timeline.
Isn't it enough that the dependencies for A have been registered when A is being instantiated?
returnedBusinessNameRegularTest - Test fails because businessNameValid is never explicitly set, resulting in a default value of False. Same goes with all the returnedSymbol tests. You're asserting properties on the StockInformation class that haven't been touched so you're just getting default values. Did you intend to call StockInformationValidation after constructing the class? That method looks like it sets the properties you're trying to assert against. 
For sure. I just wanted to know the ins and out of python before I worked with libraries. 
Hi friend. So I think you are just forgetting to call StockInformationValidation in your tests. You have a constructor for the class StockInformation but you don't set the variables you need in it. For example your test: [TestMethod()] public void returnedBusinessNameRegularTest() { // Arrange IWebService db = MockRepository.GenerateStub&lt;IWebService&gt;(); db.Stub(d =&gt; d.loginInfo()).Return("AP1a\nApple\n155p\n10000\n¬£2000000.00"); // Act StockInformation login = new StockInformation(1000, "Pa$$w0rd", "AP1a", db); bool actual = login.businessNameValid; // Assert Assert.IsTrue(actual); } fails because you don't set the bool businessNameValid in your constructor method. However you do seem to set it in your method StockInformationValidation(). So just call that. By the way, once you set your db in your constructor you don't need to pass it in again in StockInformationValidation. So your code would look like this: var login = new StockInformation(1000, "Pa$$w0rd", "AP1a", db); login.StockInformationValidation(1000, "Pa$$w0rd", "AP1a"); and StockInformationValidation would look like this: public void StockInformationValidation(int userID, string password, string symbol) { db.authenticate(userID, password); db.getStockInfo(symbol); string loginInfo = db.loginInfo(); etc.... 
This is actually my first time to ever use a list instead of an array 
It worked! Thank you SO much /u/HairyFlashman!! I can now clearly see where I went wrong - Still got a lot to learn but at least this final blocker is cleared!
I'm fairly certain it uses reflection to accomplish this, but yes, it looks at registered services, and passes in the matching implementation type. For example, if you request (via controlled constructor) an IDataService, AspNet searches registered services for that type and passes in the implementation. Your controller will be instantiated once for each session, so the start of the session marks the time the service is either passed in, or instantiated, then passed in.
Aah cool. Thanks a lot for the explanation!
I ran across this recently and found it pretty useful for my purposes of diving into Core and React, although it doesn't deal with Facebook/Google login: [https://www.pointblankdevelopment.com.au/blog/124/react-redux-with-aspnet-core-20-login-registration-tutorial-example](https://www.pointblankdevelopment.com.au/blog/124/react-redux-with-aspnet-core-20-login-registration-tutorial-example). Taken from a working solution rather than just being a sample so there's a good deal going on but it's pretty stripped down. There's also an Angular one by the same author linked to in the second paragraph.
Aww shucks gold? Gee that was nice. If you need more help message me I'm bored at work. 
This is how I learned https://docs.microsoft.com/en-us/aspnet/core/spa/angular?tabs=visual-studio
[This page](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection) explains it in (probably) unnecessary detail.
I am building an IRC... suite, I guess? The idea is that you can host an IRC client server on a machine that you can then connect to from any device with the appropriate application (or anything that can connect to the REST API). For example, you open up any app that can connect and communicate with the REST API hosted on whatever machine. You can then send a message, which will trigger a POST request that is sent to the IRC client server running on your machine. This POST request is dissembled and the relevant message is sent to whatever IRC server you intended to send it to. The same idea but backwards for receiving messages from channels. I started this project before Discord was even around, and I've been working off and on as eventually I run into a problem I can't (at the time) solve. I then come back to it and realise the problem was super simple and I'm an idiot. Hopefully this time I can actually finish all the different components haha
Do you host either of these on GitHub?
Ah, I see. I don't have my own home at the moment, but I've always liked the idea of doing some custom home-automation like what (seemingly) you've got. Let me know if you get something general enough that I could take a look at
One thing I‚Äôm realising working with junior developers is that sometimes they bind 2 or more concepts together when learning. Can really stunt their understanding. I‚Äôm not suggesting you‚Äôre doing this. But is there anything wrong with finding tutorials for each individually? TDD is universal. Once you understand it you can apply it to most projects, albeit not always in the same way. I‚Äôm currently working on an MCV web app and TDD Ing the controllers. The view doesn‚Äôt seam feasible to me and my models are mostly poco at the moment so I‚Äôm just applying normal TDD principles and adjusting where necessary. 
&gt; Since you only have 1 thread adding, couldn't you simply remove the lock in Search? Then enumerating may fail with "Collection was modified; enumeration operation may not execute." when write happens during enumeration. The version is ImmutableDictionary is a good one. Actually it is better that the second UserRepository. In the article I have not used it deliberately - I wanted to focus on the transition from mutable to immutable without changing the data structure (which can be anything actually, not list or dictionary for whom their immutable conterparts exist).
https://docs.microsoft.com/en-us/dotnet/api/system.io.directory.getfiles
Thanks. I feel like this brings me a step closer to what I'm after - I could use this to get the name of a zip file, but I would still have the problem of distinguishing it from other zip files, right? Or would I be able to use wildcard characters in the getfiles string without an error? Unless I'm misunderstanding altogether. 
I don't think this covers ASP.NET MVC in particular, but it's otherwise good: The Art of Unit Testing: with examples in C# by Roy Osherove Over the years, I've developed a very strong opinion that your controllers should be kept very basic. Do most of your work in a separate class and use Inversion of Control/Dependency Injection to keep your data storage at arm's length too. At a minimum, you end up a with a controller, a logic class, and a repository class. You use Moq or NSubstitute or a similar framework to provide stubs/mocks for your tests. Do not let the HTTPContext leak into the logic class and do not let the database leak into either. The context, especially in legacy ASP.NET MVC (vs Core) is possibly the biggest pain to handle in unit tests, so keep it out of most of the things you're unit testing. These are old hat concepts at this stage. I don't know that I'd trust anything from MS directly that is that old, but there's certainly plenty of people in the .net community that have produced good TDD in .NET tutorials. 
You are completely right. Using CompareExchange is the very good way and should work well when the writes are sparse.
Externalizing state can still be a useful refactoring. In this case a simple immutable dictionary fits the way the data structure is used, but in a more complex case you might have a data structure representing say a table and several indexes. I think the subscription would be better done with a multicast event instead of the pattern you have used. You also need to have a reliable way to trigger unsubscribing when a caller goes out of scope to prevent the leak you have (stuff gets added to _subscribers, making you hold the lock longer and longer and never GCing the objects that are in that list until the repository goes out of scope). The result would be something like this class UserRepositoryState { public UserRepositoryState(ImmutableDictionary&lt;string, User&gt; users) { Users = users; } internal ImmutableDictionary&lt;string, User&gt; Users { get; } } class UserRepository { private readonly object _syncLock = new object(); private ImmutableDictionary&lt;string, User&gt; _users = ImmutableDictionary&lt;string, User&gt;.Empty; public event EventHandler&lt;UserRepositoryState&gt; Change; public void Add(User user) { lock (_syncLock) { _users = _users.Remove(user.Name).Add(user.Name, user); } Change?.Invoke(this, new UserRepositoryState(_users)); } public IReadOnlyCollection&lt;User&gt; Search(UserRepositoryState state, string criteria) { var list = state?.Users.Values.Where(u =&gt; u.Name.Contains(criteria)).ToList(); return list as IReadOnlyCollection&lt;User&gt; ?? new User[0]; } } class PhoneBookService : IDisposable { private readonly UserRepository _userRepository; private volatile UserRepositoryState _userRepositoryState; public PhoneBookService(UserRepository userRepository) { _userRepository = userRepository; _userRepository.Change += Update; } public IReadOnlyCollection&lt;PhoneBookEntry&gt; Search(string criteria) { return _userRepository.Search(_userRepositoryState, criteria) .Select(user =&gt; new PhoneBookEntry { Name = user.Name, Phone = user.Phone }) .ToList(); } void Update(object sender, UserRepositoryState state) { _userRepositoryState = state; } public void Dispose() { _userRepository.Change -= Update; } } At that point I dislike how the repository object is now tightly coupled with the implementation details of the state object, but that is another post...
I‚Äôve always thought that this was good: https://www.telerik.com/blogs/30-days-tdd-day-one-what-is-tdd
I did see that one. It's saved in my bookmarks, but ya, it didn't deal w/ external providers. That might not be as difficult as I'm thinking it is in my head though.
I think it's so you can do one line if statements
you're missing the piece most people group into 'dependency injection' without thinking about it and that's the inversion of control container. you register things with the container and it handles resolving the actual dependency instances for you. /u/AirRabian mentions how to use the basic built-in one in ASP.NET Core. `AddTransient` means that anytime something needs a dependency of that type, a new instance will be constructed. there's also `AddSingleton` which means only one instance will ever be created and that single instance will just be used anytime a dependency of that type is needed. there's other framework code in place so that resolutions are handled for you automatically when your controllers are constructed. you can also replace the built-in ioc container with another one like autofac: http://autofac.readthedocs.io/en/latest/integration/aspnetcore.html.
&gt;string zipsource = @"C:\zipfile\source\\**folder"** + "\*web\*" + ".zip"; In the bold part, there's no trailing "\\". Did you omit it in the actual code or did Reddit just try to escape the quotation? 
&gt; I‚Äôm currently working on an MCV web app and TDD Ing the controllers. The view doesn‚Äôt seam feasible to me and my models are mostly poco at the moment so I‚Äôm just applying normal TDD principles and adjusting where necessary. Are you me?
 Hi, I run a software company in the UK since 2009 and I am looking for a C# Dev to convert a GoLang app into a C# DLL (you an work remotely). A group of us are starting a new company to specialise in Blockchain tech, and we will be hiring devs. But to get things moving I will be funding the first project myself, as it‚Äôs an important component for future development. Our first requirement is to create a C# DLL version of the GoLang Factom client. https://github.com/FactomProject/factom The GoLang client connects to the Factom Network of peer-to-peer nodes, via a JSON RPC port. The API is documented here: https://docs.factom.com/api#factomd-api We want a fully managed .NET DLL, to provide a first class experience, in developing apps for Factom, leveraging the .NET environments intellisense. There is already a C# client. https://github.com/CryptidID/FactomDotNet But it‚Äôs basic, and incomplete. Key requirements: Support the full Factom API. LINQ Support. Full asynchronous stack. Cross platform. 100% C# Managed code This will be open sourced eventually, so nice clean documented code in essential. I‚Äôm looking for an experienced C# Developer. I can‚Äôt promise additional work beyond this project, however the new company will be hiring, and the .NET projects to follow, will depend on the success of this client. To apply, please look at what is involved. Let me know your thoughts on it. Pay is negotiable.
I attempted this in Visual Studio 2017 using the Ribbon Objects with the ability to use the Visual Designer and had absolutely no luck. However, using the XML equivalent was another mater. You can convert from Visual Designer to the XML equivalent by right-clicking in the Ribbon or you may have been using XML the entire time. Inside the XML version of the Ribbon, tab and group both expose an idQ property. Setting the idQ property to the same string allows two tabs (or groups) to be merged from completely separate VSTO add-ins. I did both actually. The caveat is that the properties must also be from a shared XML namespace. So I added, xmlns:x="myNameSpace" to the customUI node and the added a property to the tab node like idQ="x:SharedTab". I found a close enough example @ https://msdn.microsoft.com/library/aa722523?f=255&amp;MSPPError=-2147217396. Then, I tweaked it for your requirement. Works Great. HTH. 
Once you have the files, you may want to use regular expressions as wildcards do not work the same way as you would expect in tsql. This will get you which file name you need. Build your expressions [here](https://regex101.com) Stack overflow on the subject [here](https://stackoverflow.com/q/6607679/8321642) Regex documentation [here](https://msdn.microsoft.com/en-us/library/system.text.regularexpressions.regex(v=vs.110).aspx)
That's not right. Even a single-line if statement should still have a body.
Thanks a lot for your inputs! I'll try it out tomorrow after a good night of sleep :)
Does it? I thought that if(x==y) y++; Was valid?
Yes!! This helps me out. Thanks for taking the time
We do TDD at work and it's been a learning curve for me. Unit testing is amazing and fun. Integration (end to end) testing is easy but flaky. JavaScript testing is the worst thing I have ever had to do as a programmer. I think it could be our testing framework, but I have decided (as the FE lead on our full stack team) that JS testing should only be done on re-usable global components and Ajax calls. It's not worth the frustration and effort for testing everything. However we are moving to Vue and with that switching testing frameworks, so maybe things will get better. 
I know you are not asking for this but... try VueJs? My favorite frontend framework so far and it is super easy to learn.
`y++;` is a body. `;` is a empty body. The later is what I think shouldn't have been allowed. 
Ah yes. Sorry i was thinking body meant it needed brackets to form scope. There must be some reason why it's allowed, right? I mean the design team must have a reason?
I'm still thinking "because that's how C did it" was their main thought process. I can think of few mistakes in C#'s syntax design that aren't also in C.
I have a tip...write a method to return ModelState errors as a list of strings, and return them with status 402 on validation errors. Have a way to catch 402 errors and display the error messages in your angular app. That way you don't have to mess around with client side validation and you just need to put validation annotations on your model classes
Will this also work if my second Addin is installed without the first one?
Yes. They essentially have equivalent independent code. They just happen to agree with each other. No master but peers.
Not too much, there‚Äôs a lot that c# can do and the gaming side is only a small part. Things that overlap are mostly just syntax. Plus unity does a lot of the nitty gritty work for you with classes and prefabs and referencing objects with certain actions such as rigid body. Software dev works more on the GUI side. Overlap is syntax imo 
Thank you that's exactly what I needed to know!
I recently converted a hobby site written in vanilla javascript/webapi to Angular. I would suggest the following - 1. Start with the Visual Studio template and make sure it works. 2. Play with removing and upgrading packages. This will surely break it, but you'll learn how the ecosystem works by doing so. I upgraded to Angular 5 and Bootstrap 4 before doing anything else which made me research how to fix the problems that doing so brings. 3. Try to read about how Webpack works. Otherwise there is magic afoot and that's never good. 4. The default launch is IIS Express. Blah. Change it to dot net especially if, like me, you are targeting Linux as a deployment. 5. Realise that Blazor is where its at and write off your investment in learning Angular.
I want to be a game developer but I think it might be kinda hard to get a job when the time comes...
Personally, even though I'm a heavy test advocate, I focus more on business logic and calculation methods over trying to test controllers. Corollary, slim down your controllers so that they don't have messy and complex logic in them. When I do have to test controllers, it involves heavy use of Moq. And in the case of controllers for a Web API surface, external testing using some other automated tool is better. (We'll use Postman or Swagger for ad-hoc testing of API endpoints.) Every time I have to unit test (really it's an integration test) a controller method, it's probably time to step back and see if it can be refactored. TDD really is universal, the hard part is figuring out what is worth testing and how to test behavior instead of implementation.
Observe WorksheetName == SheetWithPivot That will solve it. 
BOOM! Here's a Pluralsight course for exactly what you seek. Build an enterprise level application with ASP.NET Core + Entity Framework + Angular: https://app.pluralsight.com/library/courses/aspnetcore-mvc-efcore-bootstrap-angular-web/description
Volatile has relation to exceptions neither in Java nor C#. It's only preventing optimizations which can keep using same value if value got changed in other thread. If you want to modify and read same object in multiple threads us lock. That would be the easiest solution for you.
Options from easy to hard. 1. lock keyword 2. Reader/writer lock 3. semiphore 4. Interlock.exchange 5. Volitile
Options from easy to hard. 1. lock keyword 2. Reader/writer lock 3. semiphore 4. Interlock.exchange 5. Volitile
Pro ASP.NET MVC 5 will get you off to a good start: https://www.amazon.com/dp/1430265299/ref=cm_sw_r_cp_awdb_t1_EzAXAbD7R20J8
No, that's impossible.
What is the proper methodology for using lock? Do I wrap a lock around my puts and gets of changing a certain variable? Then even though both my threads run different code, they still use the puts and gets which are locked? Thanks for helping.
The right place to start as a beginner to programming is absolutely anywhere you want. Don‚Äôt worry about relevance, he‚Äôll you could learn whatever abomination GameMaker calls a programming language, and you‚Äôd be able to leverage much of what you learn.
It has nothing to do with same code. If multiple thread are using lock(lockObj) that ensures that at any given time during the execution of your program only one of those threads will execute the block of that lock instruction. You may understand better if you debug this - a neat trick is to use sleeps to increase synchronized block duration. For example assuming you have an integer variable called number: Thread 1: lock(lockObj) { Console.WriteLine("Thread 1 acquired lock"); Thread.Sleep(5000); number = number + 1; Thread.Sleep(5000); Console.WriteLine("Thread 1 releasing lock"); } Thread 2: lock(lockObj) { Console.WriteLine("Thread 2 acquired lock"); Thread.Sleep(5000); number = number - 1; Thread.Sleep(5000); Console.WriteLine("Thread 2 releasing lock"); } 
Do you want to simplify reading news? My advice is to use the Feedster app. All the news from social networks and other sources in one place, fresh interface and easy to use. More info here: [thefeedster.com](http://thefeedster.com)
Random thoughts... 1. Each variable must be protected by a single lock object. So if one function calls `lock(x)` before updating `y`, all other functions must all call `lock(x)` before *reading* or *writing* to `y`. 2. One lock can protect multiple variables. 3. Try to keep locked regions as short as possible. If safe to do so, pre-calculate as much as you can before actually acquiring the lock. 4. Calling `lock(x)` does NOT protect `x` in any way. The object `x` is just the padlock, exposed for all the world to see and mess with. (Which is why lock objects are often private.) 5. Do you really need a lock? Can you use a `ConcurrentDictionary` or `ConcurrentQueue` instead? (#5 is really important. Once Microsoft created those my use of locks dropped by 95%.) 6. Document you locks. private readonly object _syncRoot = new object(); //protects _foo, _bar, and _baz. 7. The traditional name for the lock object is "SyncRoot". (This goes back to .NET 1.0 and the originally collection classes.) 
When you lock, you have to lock *something*. You can lock the same thing from two bits of code: int shared; Object sharedLock; // code snippet 1 lock (sharedLock) { shared = 123; } // code snippet lock (sharedLock) { shared = 456; } 
Here's a [runnable example using lock](https://dotnetfiddle.net/ln8BtC) (sometimes it'll work without locking, best to run it locally on a multicore processor to see the synchronization issues). The Credit() and Debit() represent your threads that run completely different code. The don't know anything about each other, but they can both see the same lock object, so they can synchronize their activities using the lock keyword.
Which wallpaper?
Are you talking about the thumbnail? 
What about this one: https://www.amazon.com/dp/148423149X/ref=sxts_sxwds-puwylo_rv_1?pf_rd_m=ATVPDKIKX0DER&amp;pf_rd_p=3534076942&amp;pd_rd_wg=rU58U&amp;pf_rd_r=6XX2FG98ZDRHPT4Z67ZP&amp;pf_rd_s=desktop-sx-top-slot&amp;pf_rd_t=301&amp;pd_rd_i=148423149X&amp;pd_rd_w=Phw0H&amp;pf_rd_i=ASP.NET+Pro+MVC+2&amp;pd_rd_r=c098776a-c5f2-4a8a-b209-1433c55a484a&amp;ie=UTF8&amp;qid=1522906247&amp;sr=1 Is ASP.NET Core MVC the same as ASP.NET MVC for the .NET Framework?
So lets say I have two different classes accessing shared variables of another class. These are two seperate threads that don't share the same code except the class with the shared variables. Do I put a lock on the put/get of each variable, and I'd be set?
Okay, I think I'm good to go. I'm gonna Google ConcurrentDictionary and ConcurrentQueue now.
Yea. It‚Äôs awesome üòé 
&gt;If you put lock on put and get does not really help if the threads use the previous value. When you use puts and gets, the only way to access the variable's value is through them. And everyone of them would be gated by a lock. 
Yes, I know. I guess my question is whether the instantiation is lazy or eager? 
Json as in Dictionary&lt;string, object&gt;? If so, you can get all names with: var allFieldNames = myDictionary.Keys; and their values with either a lookup: var fieldValue = myDictionary[myFieldName]; or as collection with: var allFieldValues = myDictionary.Values;
A lock inside a getter/setter only protects against a small set of potential issues (struct tearing and reordering), it's not a panacea. For example, a simple bit of code like `obj.SomeProperty += 1` consists of multiple steps (get current value, increment, set new value), independently locking steps 1 and 3 doesn't make the operation in its entirety thread-safe.
Absolutely, there's tonnes of overlap. Though if you're wanting to learn C#, there's also a lot to distract you when it comes to Unity, because game dev isn't just about programming. You could build almost any kind of client-side software with Unity. You could use Unity to replace a WPF app, for instance, though it's probably not the best course of action. Unity, WPF, ASP.NET MVC and other C#-related frameworks that you encounter all share the same language, but also have specific things that you need to learn about them. There's always more than just the language. I wouldn't expect to learn to program in Unity and then just dive into an MVC project, for example. You need to learn the ins and outs of the framework, and similarly if you build an Android app with Xamarin, you need to learn the ins and outs of Android too. Hopefully that makes sense. Whilst there's a lot of overlap, there's also a lot of difference. 
I have to say, I'm really looking forward to this. VS 15.7 can't come soon enough.
Yes, I know. When I do gets() and set(), I don't do it by standard convention. I forgot that most people wire them directly into operaters. I would never access a shared variable outside a lock, which is what that code you presented is doing. That is good for others to know who are reading this though! My code is mostly just a simple array of strings, I want to push a string or pop a string and put to an unshared variable. It is real simple stuff. I think if you wanted to get into math like you said, you'd probably need to make a specific function for adding that specific variable and an int amount to it. In that function, use the same locks as get/set custom functions. Personally I understood not ever accessing a shared variable outside the lock designed for that variable, but maybe other people it could help understand. All shared variables of the same type always need to be behind the same lock. If you have a group of variables who are always together, you can have one lock for them all, but even if you use just one alone somewhere, it still needs to be behind the lock. 
Yes
What if I wanted to use data binding to set the properties? Or what if I wanted to have some code behind executed when value of the property changes? What if I wanted to react on something happening within the user control? To me, this video presents extremely simple and trivial problem. Also, what you created would be simpler to implement through item template instead of custom user control.
&gt; It‚Äôs only preventing optimizations which can keep using same value if value got changed in other thread. It also uses appropriate memory barriers when accessing the value, although that doesn‚Äôt mean much on the strong memory model on x86. On ARM, however...
Sure there are various ways to implement the functionality. its all about how one approaches it. 
I created it in paint.. by taking a screenshot of the application and my desktop.
I exceeded the post size limit in trying to respond to this... Please see my responses below this one.
Now, in the real world, we tend to like running our code on more than one processor. We create threads to do this. Those threads are purely operating system threads (actually, in the .NET Framework, they're CLR `System.Threading.Thread` instances), and will get scheduled on at least one but up to the total number of available processors. Your entire program could be marked as being processor-affine (via tools like the Windows Task Manager), meaning that it gets to run only on those processors specified by the user. Regardless of how many processors your program runs on, it still creates threads, which still interact with shared data, and that sharing needs to be synchronized. All of this is to establish _why_ you need synchronization. The answer is to ensure correctness of your program's results in a multi-threaded environment. Now, _when_ do you need synchronization? The short answer is any time you're sharing data structures where operations must be performed atomically. Let's pretend that we're sharing a `Queue&lt;int&gt;` on two threads, t1 and t2. t1 is a producer thread, and t2 is a consumer thread. Here is some code for our hypothetical threads: // Shared data: Queue&lt;int&gt; ints; // t1 for (int i = 1; i &lt; 1000; i++) { ints.Enqueue(i * 5 % 4 + 37); } // t2 while (ints.Count &gt; 0) { int n = ints.Dequeue(); Console.WriteLine("Received value n = {0} from producer", n); } Now, let's establish some assumptions: 1. The Queue&lt;T&gt;.Count property is implemented as more or less a single instruction (it's a field lookup) 2. The Queue&lt;T&gt;.Enqueue(T) method consists of at least two: modifying an internal linked list, and incrementing the count 3. The Queue&lt;T&gt;.Dequeue(T) method consists of at least two as well: modifying an internal linked list, and decrementing the count (This is just for the purposes of my example - the actual implementation of Queue&lt;T&gt; is much smarter than this.) Based on these assumptions, the routines executing on the threads above are not safe with respect to one another. Let's pretend that in calling _Enqueue_, t1 gets interrupted, and t2 gets scheduled to run in place of t1. This happens _after_ t1 has modified the linked list, but _before_ it has incremented the count. When t1 was interrupted, we had 6 elements in the linked list, and the internal count was equal to 5. t2 just started, sees that the count is greater than 0, and happily starts dequeuing data. For whatever reason, the system decides _not_ to schedule t1 to run until _after_ t2 has completely drained the queue, and terminated execution. What we see is five results get printed to the console (in this super hypothetical - but possible - scenario). But t1 is still adding data to the queue, and will eventually terminate, but it will occur _after_ t2 terminated, and we're missing the data we wanted. So, when do I need synchronization? The answer is, "it depends." If Queue&lt;T&gt; were implemented using some form of internal synchronization - locks, semaphores, or anything else to synchronize *threads* - then we might not need any synchronization in our program. Unfortunately, Queue&lt;T&gt; can do this all it wants, but it's not addressing the fact that in t2, we have two dependencies: 1. Count is greater than 0 2. Dequeue It's a safe assumption in the scenario that I've outlined that as long as the first condition holds, the second is fine. But what if we said, "Console.WriteLine is a blocking, I/O-bound call, and we could implement this faster with two consumer threads"? We also take the time to fix the bug mentioned above by adding an _addingComplete_ bool that gets set by t1. Here is our new program: // Shared data: Queue&lt;int&gt; ints; bool addingComplete; // t1 addingComplete = false; for (int i = 1; i &lt; 1000; i++) { ints.Enqueue(i * 5 % 4 + 37); } addingComplete = true; // t2 while (addingComplete == false) { if (ints.Count &gt; 0) { int n = ints.Dequeue(); Console.WriteLine("Received value n = {0} from producer", n); } } As noted above, the only synchronization is implemented entirely in the queue itself, and exists to ensure that one and only one thread is allowed to modify the state at any one time. It turns out that for our scenario, that property is helpful, but still leaves us with a problem. Even though our hypothetical Queue&lt;T&gt; prevents two threads from modifying the internal data structures of our queue concurrent to one another, we still have a race condition in our code. _Our_ race condition occurs between the _read_ of `ints.Count`, and the call to `ints.Dequeue()`. It turns out, we need for everything from checking the condition on the queue, to obtaining the result from the queue, to appear as one single operation, across all threads. To achieve this, we use the C# `lock` keyword, using the `ints` variable as both our lock _and_ as our data structure. And now we have _yet another_ new program: // Shared data: Queue&lt;int&gt; ints; bool addingComplete; // t1 addingComplete = false; for (int i = 1; i &lt; 1000; i++) { lock (int) ints.Enqueue(i * 5 % 4 + 37); } addingComplete = true; // t2 while (addingComplete == false) { int n; lock (ints) { if (ints.Count &gt; 0) { n = ints.Dequeue(); } else { continue; } } Console.WriteLine("Received value n = {0} from producer", n); } Alas, _this_ code is just about there. You see that we're still not synchronizing access to the `addingComplete` variable, which is problematic, but we'll eventually get where we're going by going through the exercises mentioned herein. Importantly, regardless of _what_ contract Queue&lt;T&gt; provides, all operations about Queue&lt;T&gt; in _this_ code are safe. One and only one thread is allowed to access the queue at a time, and there are no race conditions between when we query the current member count, and dequeue the result.
Now, all that said, there are various synchronization primitives that can be used, and there also some generic rules that you should always try to follow: 1. When using thread-affine locking primitives (such as a Mutex or a CLR lock), all operations inside of the lock should occur quickly. 2. In general, locks should be read-only - they should not change between accesses, or they may break synchronization 3. Many readers can safely access a data structure at the same time without risk, _provided_ that those readers do not modify the data structure itself in any way (our hypothetical queue did not support this, because Dequeue _did_ modify the data structure). 4. Others. You can spend years and years researching this. Primitives: 1. CLR locks (see the C# lock keyword) 2. Mutexes (thread-affine) 3. Semaphores (generally not thread-affine) 4. Reader/Writer locks (thread-affine, uses per-thread state) 5. Manual/Auto Reset Events (not thread-affine) 6. The CountdownEvent class (on .NET, can't recall if this is thread-affine or not) Anyway, this is probably the _most_ detailed response I've ever typed to anything on the internet, so... I'll leave you with some recommendations. I think [Jared Parsons](http://blog.paranoidcoding.com/) summarizes the problems pretty well [here](http://blog.paranoidcoding.com/2009/02/11/why-are-thread-safe-collections-so-hard.html) and [here](http://blog.paranoidcoding.com/2014/05/22/ban-the-term-thread-safe.html). You can also have a look at [Joe Duffy's blog](http://joeduffyblog.com/). I'd also _highly_ recommend his book [Concurrent Programming on Windows](https://www.amazon.com/Concurrent-Programming-Windows-Joe-Duffy/dp/032143482X). He discusses general operating systems concepts, some of which are specific to Windows, concurrent programming in C# and C++, and various other details... Really great read.
If you only need to increment an integer or long shared between thread, i recomment using Interlocked. Here's a working example: var count = 0; Parallel.For(0, 100000, i =&gt; { // count+=1; Interlocked.Increment(ref count); }); Console.WriteLine(count); If you comment the interlocked line and uncomment the "count+=1" You'll see that count won't be 100 000. You can use Interlocked.Add to add a value superior to one. It is really usefull if you want the sum of some properties in a huge list. Parrallel.foreach is a must to, i recommend checking that out.
I think that if your backend is dot net, Blazor is going to become irresistible, primarily because of the ability to share code between the front and back ends. Consider the advantages of implementing data validation just once or being able to change your model in just one place.
I have done it in a real production project with Google/Facbook/Twitter with React and Asp.net core. I use graphql/relay.js but if you are using a standard REST API with asp.net controllers it's even simpler. Social External Login Files: https://github.com/SoundVast/SoundVast/tree/master/src/SoundVast/wwwroot/components/account/login/socialLogin Url File: https://github.com/SoundVast/SoundVast/blob/master/src/SoundVast/wwwroot/components/app/routing/routeConfig.jsx Controller: https://github.com/SoundVast/SoundVast/blob/master/src/SoundVast/Components/Account/AccountController.cs The basis is this: Send the request to the `ExternalLogin`, then capture the return value of this request in the front end using your routes, check if the user already has an account or not and do something based on it.
What I personally found super useful was using [NSwag](https://github.com/RSuter/NSwag). You can use it to create a Swagger documentation of your API, but what's much more important you can automatically generate Typescript models and services from it. This saves so much time worrying about how to design your services and looking for errors because you forgot to change something in your model on the client. It's a bit of complicated to get started because it has so much functionality but heres a quick rundown how I did it: 1\) Add `NSwag.AspNetCore` and` NSwag.MSBuil`d 2\) Enable the middleware in `Startup.cs::Configure` \(The [TypeNameGenerator](https://github.com/RSuter/NJsonSchema/wiki/Type-Name-Generators) is optional, but all my models all ended with DTO, but I didn't wanted that suffix on the client\) app.UseSwaggerUi(typeof(Startup).Assembly, new SwaggerUiSettings() { Description = "MyAPI", SwaggerRoute = "/swagger/doc/swagger.json", IsAspNetCore = true, TypeNameGenerator = new DTOTypeNameGenerator() }); 3\) Annotate all your controllers and functions you want to expose on the client Example: [HttpGet("simple")] [SwaggerOperation("blog_getBlogEntry")] [ProducesResponseType(typeof(BlogEntryDTO), StatusCodes.Status200OK)] public async Task&lt;IActionResult&gt; GetBlogEntryById(long id) { ... } This will later generate a service called `BlogService` with a `getBlogEntry(id: number)` function which returns a `BlogEntry`. 4\) Create your `nswag.json` configuration file. I recommend just experimenting a bit with the [NSwag GUI](https://github.com/RSuter/NSwag/wiki/NSwagStudio) for Windows to find a configuration you like, but you can also just configure everything manually. Mine looks about [like this](https://gist.github.com/stefan-schweiger/78a9fd1f8ae67790300b7dfdae550dd1). \(The file itself should be saved in the root directory of you project\) 5\) If you want to autogenerate everything after every build add this to your `.csproj` file &lt;Target Name="NSwag" AfterTargets="Build"&gt; &lt;Exec Command="$(NSwagExe_Core20) run" /&gt; &lt;/Target&gt;
I‚Äôm glad someone finally mentioned queues. More often than not, you can choose an architecture that avoids the need for explicit locks by having separate strands with queues. And that may also be faster.
I highly recommend using NSwag, because it does not only autogenerate TypeScript classes from your model, but also the client services to access your WebAPI. \(I've posted more information in [my comment](https://www.reddit.com/r/csharp/comments/89smfj/can_anyone_who_has_experience_building_angular/dwuflkf/)\)
Removed: Rule 4.
Removed: Rule 4.
There is a preview version
Removed: Rule 4.
Removed: Rule 7, spam.
Quoting in Windows is generally very messed up compared to UNIX since it‚Äôs each program‚Äôs own job to both quote and unquote. This also means that certain nested quoting command lines are impossible to express altogether. The ' is generally not accepted by any program. PowerShell does, but converts it to " execution time. You should stick to " but there is no way to make it always work. 
Downloaded it yesterday and rebuilt part of one of my tools with it. Definitely a game changer. Strong types, dependency injection, and syntax that makes sense to me (no offense to Javascript devs) make it really fun to use. I may wind up missing some features of jQuery but I think I'll get over it.
What are some of the advantages of using identity server? We're about to start a new project at work and I'm struggling to come up with a plan for authentication. The lazy side of me wants to just use JWT because it's easy and stateless. The lack of ability to invalidate tokens makes me feel uneasy though. 
Say you're trying to protect a variable that gets changed in several threads: int invoiceCount; You'll need to create a locking variable to protect access to it. Typically it's of type object but you will occasionally see other types. object invoiceCountLock = new object(); You then use that lock variable to protect access to your data by using it in a lock statement every where you access it: **thread1** lock(invoiceCountLock) { invoiceCount++; } **thread2** lock(invoiceCountLock) { invoiceCount++; } This means that the lock variable needs to be available everywhere those locks get called, so it'll often be a member variable. And I've seen it as a static member too, for when the locks are in different classes (not a good pattern, but I've seen it ...) 
Removed: Rule 7, spam, redirect.
VS 15.7 is not shipping with Blazor support. MS may still drop this project as it‚Äôs currently labeled ‚Äúexperimental‚Äù (probably unlikely given the excitement about it). If they do keep going with Blazor, it‚Äôs still 1-2 years out before we get a 1.0 release.
Its not completely useless its something to think about the current way this is designed does not support that given the two ways we have to program the system. We are talking about a major refactor for the next version so it will defiantly be a topic of conversation.
JavaScript Interoperability is still a big problem to solve, but I don‚Äôt think we would get a full version of Blazor without it.
If you are using Unity, as others recommend (and I agree if games are your interest), be sure to use the latest Unity with C#6 support and .NET 4.6/4.7 and .NET Core 2.0. This may not mean much to you, but the language and supporting standard libraries available using these settings vastly improve the experience and make C# much more functional. This is something you will appreciate more as you gain experience. 
I do a lot of coding in various LISPs. One way is using whitespace properly. Another thing I love is ‚Äúrainbow parens‚Äù in my IDEs and syntax coloring. Of course I have been doing this almost three decades...
I couldn't find this piece of information shared anywhere on the web, so I wanted to share my solution. The code in this blog will programatically enable the accessibility interfaces in Chrome, without having to use something like Selenium, or a command-line switch.
Is there an assembly reference I need for this or something? "Observe" isn't recognized by VS. Also, The data isn't on another sheet. The data is in the pivot table's cache. The data source references the same Workbook on a SharePoint site, but it doesn't reference an existing worksheet. It's more like: 'https://SPshare.dom.com/sites/grouppage/[WorkbookName]FirstHalfOfWorkbookName'$A$1:$CN$192293 I'm pretty sure it doesn't try to access that data source at all though and is just working off its cache. If I try to refresh the table it gets errors trying to access the data source.
Sure, because `ISomethingImportant` requires and instance of `IAnotherDependency`. But what would happen if you register the dependencies in the inverse order. Consider the following: `A` requires `B` and `B` in turn requires `C`. So now you register the dependencies as such: - Register `A` - Register `B` - Register `C` Up until this point nothing have yet to be instantiated but all dependencies have been registered with the container. At this point, if you attempt to get an instance of `A`, what would happen? Would it throw up because it cannot find `B` even though it has been registered? Or would it work fine because it has been registered although after `A`?
Go to the directory in question and uncheck read-only in properties, and apply to all subfolders/files. This happens to me when source-control craps its pants.
Makes sense. I see all those parens and get lost. Thanks!
Thanks for the clarification. For some reason, I thought it was coming with 15.7.
I really hope this can keep developing but at some point it's not 10 seconds to load and initialize and 25mb of DLLs to load for a single hello world app. 
You've accidentally linked to the "#comments" anchor which jumps the page to the end of the article. So this submission is removed, but if you re-submit it without the "#comments" anchor (that is: https://blogs.msdn.microsoft.com/sqlsecurity/2015/08/27/using-always-encrypted-with-entity-framework-6) it will be fine.
Yes, exactly! Unity hid a lot of the stuff that was happening. Which can be great but for my learning style it was actually a problem. In hindsight, I would have probably done even better beginning with a language that is "closer to the metal", like c++. But I really like C# and I'm sticking with it :)
I was saying it looks like you pasted in some code that references "WorksheetName", you should be able to change that to the Name of the sheet with the Pivot table on it.
If you're looking at hooking *all* keys, then the hook is the way to go. Actually replacing text will be trickier (replacing a single char at input is easy, retroactively going back and fixing spelling errors requires you to know where it went) The user may tab halfway trough a word, write something somewhere else, and then tab back to finish whatever he was doing. (Doable but has some complexity) Though some programs may not support you editing their content at all, varies quite a bit. 
Stop with comments like this one: /// &lt;summary&gt; /// Calculate output value of the neuron. /// &lt;/summary&gt; /// &lt;returns&gt; /// Output of the neuron. /// &lt;/returns&gt; public double CalculateOutput()
What's wrong with them? They're very useful to anyone who is using your code. 
Hopefully it can be done in the future by using a local instance of dotnet, so people who have it installed (meaning, Windows users) can get faster loading times.
HTML like tags are totally unnecessary.
I think it's in the preview release so you can try it out. 
For what it is worth I think they are totally wrong. gaming is only a small part of what c# can do? games can include database interaction, servers, distributed systems, machine learning, physics, UI, 2d, 3d, sound, text, parsing, anything and everything. 
You just don't get it, if get returns the shared variables value and set sets the value for the shared variable and you use lock only inside get or set your code will not work as expected.
I have the pivot table, and I have the cache in the pivot table. I just don't know how to read the data inside. I've been trying to work with pivotCache.Recordset, but I haven't been able to figure out how to read it or at least dump it to a datagrid.
Is it really in the MB's now? In the demo vid it was like 300 KB.
This one in particular (and many others in this example) are useless. If method was named GetNeuronOutput, there would be no need for this comment as I can see from the name what its purpose is.
Yea ,but the summary provides a higher level of detail. I wouldn't call them useless. I've used them in the past and have never seen any performance degradation or anything like that. Again though, this is getting away from the point of this post.
What about simply GetOutput()? neuron.GetOutput() tells you exactly what's going on.
I am not talking about comments in general, I am talking about comments that describe obvious methods like this one. This comment in particular adds absolutely no value.
I have done some small work around the System.Automation class in .NET, I would typically use Linqpad alot for DB checks in my previous job but start branching out in PS and others, small example: PowerShell ps = PowerShell.Create(); ps.AddCommand("Get-Process"); var result = ps.Invoke(); I believe PowerShell has lots of wsman hooks and this could be used to bridge the gap, personally I think removing PS files from the equation is the way to go, then handle the exceptions in a central location, usually a PSObject is returned, you can out that to a JSON also then iterate that for loose coupling. MSDN: https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.powershell?view=powershellsdk-1.1.0 Curious how you get on so do let me know with some examples, thanks 
I don't have a great understanding of DDD but could you elaborate on why that's a good choice vs another method?
Last time I checked it was pretty bad but it seems to be better now. [Still a little over 1mb for a todo demo](https://i.imgur.com/iUHlTgV.png) There is still over a 500ms pause when loading everything in webassembly and this is running on an i7-8700. Last time I was playing around with it I was on a slower i5 and the pause was exceeding 5 seconds. 
The one you're describing doesn't, but that doesn't mean comments done in this style are useless. You're making it sound like it should never be done.
Mosh Hamedani. Great teacher.
If I never access a shared value outside of a lock, and only use non shared values outside of them, I'm cool right? 
I agree, comments have a tendency to rot. Redundant comments that are just the function name with a space thrown in + "of the {class name}" provide negative value overall.
Why classes when you can use matrices both for neurons and synapses?
Maybe I'm bad at explaining stuff. I do not change the functionality of + and = with my gets and sets. If I never access a shared variable outside of a lock, then there is no problem right? Is there anything wrong with this code: SetStringBufferOneMore(String s){ lock(_locker){ SharedStringBuffer.Add(go); } } string GetStringBufferOne() { lock(_locker){ if(SharedStringBuffer.count==0) return null; string s; s=SharedStringBuffer[0]; //somehow shift the array down to eliminate 0 element return s; } } Those getters and setters are fine, right? 
I agree, first course i did was his MVC... helps a looot.
Oh thanks, I'm Brazilian and even here many people already recommended me his courses. I'll be taking them, then.
When does a resource ever provide exactly what one is seeking? Unlikely. Take what's there and build on top of it. The foundation is there. The scaffolds are risen. Now go build that house! 
Why is the thumbnail a wedding photo?
No the comment will not effect the application performance, however it will hurt developer performance because the dev might spend time reading this useless comment
Mosh
This is the reference source for .net list https://referencesource.microsoft.com/#mscorlib/System/collections/generic/list.cs Look at the comments. Why would a huge team of skilled developers do that in your opinon?
Working on a Turn Based Tactics game in Unity: [DevLog](https://voxstudios.wordpress.com/).
Lol that's my Google+ profile picture.
GZIP lol
That seems fine from a synchronization point of view as long as you do not make assumptions about the count of items in the list from outside the class. Also if your use cases are like that you may want to take a look at System.Collections.Concurrent namespace ...
I don't know much about Udemy, but I'd say create a visualstudio.net account and then get a free 3 month subscription to pluralsight.com 
just use Agile and Scrum. it will all work out in the end
Compression is still effective on DLLs. Just for shits, I tried compressiong 25.7MB of DLLs. The resulting file is 3.3MB.
Not really. What is the output? The number of connected neurons? A matrix calculation? The name of the neuron? The method has a crappy name.
Those comments are very different from the one OP is commenting on. They are detailed and give more information than "does foo."
That makes sense.
designing the business logic first, then figure out how to implement it. The domain is the center of the software, and should be database agnostic. If you go database first, you are essentially locking yourself in to that database
What would you suggest?
Damn you got me good. It does make sense since it's basically instructions and code, definitely not "random" binary like an image or sound file. 
So like an ActiveX component in the browser? Careful what you wish for lol. Browser sandboxing is important so what you're describing is a terrible idea from a security standpoint. 
Too bad? Doing documentation comments no matter how simple the method creates consistency and habit. In this case, there is clearly something extra in the comment. Guess what it is? "Of the neuron part". No, the variable calling it can't just be presumed to be "neuron". Yes, you could presume it's calculating output of the neuron, but that's just an assumption. Could it be better? Sure.
The critique is not against documenting your code in general: You should do that! It's about "nondocumentation/undocumentation/obvious documentation". Such as documenting `Person.FirstName` with "The first name of the person". The documentation in List.cs provides additional value. Have a look at `List.Add` for instance. We can infer that "something will get added to a list", from the method name alone, meaning; if the documentation was "adds an item to the list", it would be pretty useless, but it isn't. Instead, it provides valuable insights about the code. [Have a look](https://referencesource.microsoft.com/#mscorlib/System/collections/generic/list.cs,216): &gt; Adds the given object to the *end of this list.* [...] It then goes on to provide implementation-details: &gt; [...] If required, the capacity of the list is doubled before adding the new element.
Consider for a moment a jar labeled "Cookies" ... OK. Do you think another paragraph is needed to describe the contents of this jar? Possibly, -right? Would: *"Contains cookies"* provide you with more valuable insights about it? Or would you rather *reserve* that spot to describe it in more detail, say: "Contains sugar sprinkled, chocolate-chip cookies". I'd prefer the latter, and I think spending time writing "Contains cookies" on the jar is a time-waste in the first place, and effort should be put elsewhere.
I use it on every site I build, but my CSS skills are feeble and wheezy. The next site I do (which will be primarily for internal consumption) I intend to use Bootstrap4 because it has a couple new things that I think would be helpful. All that said, my web apps are very utilitarian where consistency and features are far more important thatn appearance.
It's not about *avoiding documenting*, it's avoiding documenting only the obvious surface-level of your code. I agree with you, documenting members regardless of simplicity should be done routinely, but I don't consider "Does &lt;method name&gt;" to be documentation in the first place. If you think long and hard of how to document your member and all you can come up with is just "word + &lt;member name&gt;", then skip it all together, its intent is clear enough.
Bullshit. Even MSDN is riddle with useless shit. `SomeClass.Property` with comment `Gets the Property`. Useless.
I hope people don't miss the point of the article just because some silly comments. It's a great article, and I don't think ops excessive use of XMLdoc should in any way affect that. It's common practice to document as such. It's just a discussion about code style, and I hope that it's people trying to genuinely improve that frequent this sub.
It's a framework. I don't like rolling my own because I'd rather focus on the stuff I want to work on instead of reinventing the wheel for someone that doesn't impact the results as much. I like Bootstrap in general because it has what I want but you can still make it look very different than the stock image.
And now look at Clear, SyncRoot, the Indexer, RemoveRange, Reverse, Count, etc.
Nice cherry picking. And now look at Clear, SyncRoot, the Indexer, RemoveRange, Reverse, Count, etc.
Look at Clear, SyncRoot, the Indexer, RemoveRange, Reverse, Count, etc. There is no detail it's exactly like OPs comments
BS what? You didn't contradict anything I said. &gt; SomeClass.Property with comment Gets the Property. Useless. Boo hoo. So what? &gt; Don't need a comment to tell me that (I)Neuron.CalculateOutput() is going to calculate the output of that neuron. "Yes, you could presume it's calculating output of the neuron, but that's just an assumption. Maybe somebody would like the clarification. Could it be better? Sure. Is that an argument against doing it? No."
Make a videocall with your phone using whatsapp or another messaging app
Is there is a local library with a computer that has a web cam?
I'd be open to doing something to that effect, but one of the issues here is that the test platform itself won't let me proceed without having the webcam. I haven't gotten any indication from the company that they can turn that off in the test platform itself. Maybe they can, maybe they can't, I don't know.
Yes it's an argument against doing it. So: Bullshit.
There's a library that's close to me, but I'm not sure if there are computers with webcams. I'll check online and see if they list that web cams are available or not.
Though the request is indeed unreasonable. Buy a webcam someplace you can take it back. Use it to take assignment, return it.
All the time. Between Bootstrap 3 and 4 I learnt the CSS flexbox system, but with Bootstrap 4 I prefer to use theirs.
Type the following in. On the line that says `class FooBar...` right click `IFoo` and select Quick actions and refactorings... (or use Ctrl-.), select Implement interface through '_foo'. Do the same for IBar. interface IFoo { void Foo1(); } interface IBar { void Bar1(); } class FooBar : IFoo, IBar { private IFoo _foo; private IBar _bar; } 
Just to suggest that calling the library might be more informative than visiting their web site.
&gt;I think it's a bit much to ask me to go out and purchase a web cam. Proctored online exams are becoming really popular, so it doesn't surprise me that they're asking for it. More than likely it's a 3rd party company that handles the assessment and live monitoring. Usually you hold up an ID to the camera, pan around the room, then show your computer/workspace is clear, then take the assessment. IMO it isn't an unreasonable request. You can get a webcam for pretty cheap ($10 on Amazon) and I would much rather take an assessment in the comfort of my home rather than an office conference room.
Then I recommend you go with what you know. No framework is for everyone. My choice for using Bootstrap comes from my experiences and conflicts, they may not match your own. I do have a tendency to focus on using other people's code, even if more complicated, because of those experiences.
Good idea and agree, this is an unreasonable request and also provides insight into the mentality and ethics of the requestor. I would tell them you finally found a web cam - it was so far up their ass it was unreachable - and they can keep it there. 
I let the frontend devs who work on the project decide. Most of them pick it. I never asked why.
Expression-bodied members already gets us most of the way there. public void Foo1(TFoo arg1) =&gt; _foo.Foo1(arg1); public int Foo2 =&gt; _foo.Foo2(); I don't think we need more than that, because there are too many cases where you're changing one or two things about the behavior, not simply composing them.
It does it with far far less effort than default CSS, the whole point was to make it take less code. Look into flex wrap in particular.
That's presumptuous. I simply looked at the most commonly-used method in the class, and the EnsureCapacity method that it calls, and found their comments to be illuminating as to the workings of the class. As to your examples, I would call those comments useless. Why would a team of skilled developers do that? Probably because it was internal policy to comment everything. Do they add anything? Only clutter.
True. But it was meant as under the hood transformation :) 
There are some apps/utilities that will let you use your phone camera as a webcam in Windows, and as I understand it, some of them will act as though it's legit webcam hardware. Maybe you can take a look into that. (For example, I found this just now: https://www.makeuseof.com/tag/use-smartphone-webcam-computer/ no idea if it works or works well, but there are _plenty_ of hits on google for both Android and iPhone.)
Tim2343, any luck today? Just curious.
Let's assume you're correct for a moment... how does it being "a waste of time" contradict anything I said? It doesn't. You're missing some logic there. &gt; that isn't already documented by the code You also don't seem to understand what documentation comments are for. They are primarily for people who **aren't reading the code**. It doesn't matter if the code clearly shows what happens, because the intended reader isn't reading the code. Already described why the initial example adds a little clarification. Which, if you didn't need personally, would never be an issue because you wouldn't look at the doc comment, now would you? Also, it takes more time suppressing the issue. Nobody says you have to write bad doc comments either. Write good ones.
Then don't. Furthermore, documentation comments primary user is not for somebody reading code. It's for somebody using it, who may or may not have access to the code itself.
This bit is contradicted: &gt; Doing documentation comments no matter how simple the method creates consistency and habit, as well as getting better at them. It doesn't promote "getting better at them" it promotes "doing the bare minimum to stop that stupid CS warning." which leads to more wasted comments = mean average quality of comments is shitter over time. --- &gt; You also don't seem to understand what documentation comments are for. They are primarily for people who aren't reading the code. It doesn't matter if the code clearly shows what happens, because the intended reader isn't reading the code. Documentation comments will still include the name(s) of the entities they are commenting right there alongside them. Hence my immediate reference to MSDN. So a) yes I do understand, seemingly better than you, and b) No, they don't add a single thing.
The benefit of XML comments is that ypu can make API docs using something like Doxygen. When looking at the docs, you won't have access to the code so all the self documenting code in the world wouldn't help.
Doxygen includes the name(s) of the things being commented. Your point is invalid.
Without parsing, how the fuck are they supposed to know if the comment is good or not? And again - show me an API document that doesn't already include the names of the interfaces, methods, types, and I'll tell you it's a shit document.
My only production core app is just a web api so no front end for it. That said, when I do personal projects I like to use [Bulma](https://bulma.io)
How is your new claim at all relevant to anything? People don't read all the code of every library before they use it. They rely on intellisense comments often. How do we know if it's good? Typically if it clarifies what we need to know nicely. Everybody hates libraries lacking doc comments because you think your code is readable so you don't have to add them. It's never as readable as you imagine it. &gt; And again - show me an API document ... "Again"? This is the first time you've said this particular line. It also seems opposite of what you're trying to say. 
Yes I found this out the hard way when I tried to I herit some HttpWebRequest classes a year or so ago. I legit hadn't seen usage of effective sealed classes and simply assumed that I could implement and override whatever. My best API design could be (and has been) blown up by inheritance. God damn you people would you just extend my classes rather than destroying my hard work. 
Given that a web cam is less than the combined cost of a pen, pad of paper, and decent folio you will be taking to the interview, I'd say if you are serious about pursuing a position at the company, a ten dollar expenditure isn't much at all.
You don't understand the point. No one is saying comments or this style of comments is bad. People are saying not every method has to have a comment.
They don't have to, but I believe they should if it's doing something important.
If you changed the name to "GetNeuronOutput", I would dearly hope you put "Calculates the output." as a doc comment. In your quest to remove the doc comment, you removed the most descriptive term in the whole method name, and then made it misleading. Which is hilariously ironic to me. I also think it's a little weird you put the type name into the method as well. CalculateOutput is perfectly fine. Adding a doc comment that clarifies it is as one might infer, the output for the neuron, is a perfect use of a doc comment. The name is terse, but it adds a little detail to intellisense should you need it. Perhaps some more details could be added to make the comment better, such as, "... based upon stored inputs." or something like that, but as it stands, it's not hurting anyone.
great thread that completely answers my question. Thank you for the link!
Does this still work? 
I believe so. I have a work account that has a 90 day trial, as well as a personal account that also has a 90 day trial.
I don't have the exact code sample in front of me but I'm certain you can specify which item to remove, either by index or some other convention. 
Note they use tryparse. It's a super useful function.
Ask them if they have a conference room you can use. BTW, the reason for this is there have been candidates getting someone else to take the assessment tests for them. The company finds out once their new hire shows up and can't perform. So they're skittish. 
The idea is that the runtime would be shared between apps and caches but yeah, definitely needs work. From what I heard they haven't even begun to optimize the size yet.
I'll try it out. thanks
I would suggest keeping in mind that while the server technology is called Web API, you don't actually want to create an API. You want to create a backend for a web app. Know the difference.
From the little i know remove will always get the first item that matches. I can only suggest you should rather work with your inventory as an array so that it removes the item stored in that grid position then take the first item off the list as well so that you can still keep count etc?
We can all cherry pick. 
Yep
I plan for the inventory to be infinite, hence the list. As for the list removing the first item that matches, it doesnt. As you can see in the other screenshot i provided. It just removes the first object in the list. I wondered if at first if i used the .remove function wrong but apparently it has been used correctly which completely baffles me
Impossible to tell from what little you've posted. If it's really the `List.Remove()` method that's the problem, the best guess I have is that the `Item` class contains a broken `Equals()` implementation.
This. Post your item class.
So like using a public CDN for popular libraries so that your users have a cached copy already? 
Yes! Mosh is fantastic. I own all of his .NET courses and they are all great. 
They impead my reading of the code for one. Moreover, nothing in those comments gave anyone any insight that should have been obvious from the method name
Yes it would work in the same way as it does with other browser resources like jquery, from what i understand. Either the browser or the framework would know if the dependency is already available on the client, either from your site or another that has the same dependency, so it wouldn't have to redownload it, it would only need your assemblies. 
Curious about this too. I‚Äôm software and game dev but looking to get into a little web dev. Started with bootstrap and as a newbie it helps out but I‚Äôve heard that it‚Äôs better to just learn the CSS yourself for both practice and the ability to have full style control
Oh. I was actually hoping to hear your thoughts on the matter. It's fine if we'd do it differently, but I did want to see your take on it.
I suspect you're right based on the number of times I've seen "smart" people try to override Equals and then break one piece of framework after another because they tried to implement some sort of business rule as an object comparison. I've seen completely different people do an equals on a DTO that only compared the Id field, but then they make it nullable to handle new entities and then spend all kinds of time debugging their "Bulk add" method that now can't tell those many entities with null ids apart. I'm not advocating for null ids, I think you should use separate Add DTOs, but if you do need them, don't try to use them in Equals.
Inherently, the hosting framework is also being benchmarked. You could say it‚Äôs mostly about routing, serialization and model binding. 
You want [RemoveAt(Int32)](https://msdn.microsoft.com/en-us/library/ms132414(v=vs.110)) [Remove](https://msdn.microsoft.com/en-us/library/ms132413(v=vs.110)) will always remove the first one.
I would learn CSS, then Bootstrap, that way you know what's going on under the hood whichever way you choose. 
The pluralsight benefit comes and goes, it's currently available but wasn't a few months ago.
Plus u can send dicc piccs to all the hotties *ass dance*
Seeing that now. I'd tried to do it a month or so ago, with no luck. Tonight, got it done with ease.
I meeeeaaan.... I wouldn't recommend that during the interview process, but sure.
I'm glad you followed up. I just thought you were being sarcastic about not knowing, implying that our name suggestions were so bad you couldn't make sense of what the method was doing anymore. I think I see where you're coming from though. A function named to tell you that it gives you an output would be comically unhelpful. I was thinking about it in terms of the inputs and outputs of a neuron, where the inputs are summed and fed into the activation function to calculate the neuron's output. Domain-specific exposition like that is what I'd put in the documentation comments.
 One of most reliable way to remove an item is to design your ‚ÄòItem‚Äô class to have a unique identifier property preferably of type Guid. This was each item in your list will have a unique ID. Then you can modify your remove method to take in an ID as a parameter. At this point, your remove method will only need to search for the item by ID within the list and remove it once found. You can do this exact logic using LINQ and a simple lambda expression. 
hahaha found Red
Maybe it's common, but it's unreasonable, and a huge red flag.
I find the webcam thing annoys my too. But dude. Common. If you want the job get a freaking webcam. First payslip will be worth it surely ?? Or put it on your amazon wish list let me buy you one. It‚Äôs like 15 dollars for a HD one??? Your mom can lend you the money too!! Stop creating fake barriers for your self. Look beyond the shit. If you don‚Äôt want to work for the company move on. If you do then buying a webcam is not bending over backwards. Don‚Äôt take it the wrong way dude. But grow up a bit seriously. 
Thank you for the detailed answer. However, this comment suggests to me that you don't know too much about neural network optimisations, or which aspects of neural networks are functionally powerful. &gt;for example a network with a different activation function in each node Care to provide an example where this would be useful? I mean at the level of granularity of a single neuron, not just a layer.
IGTR
Your equals and gethashcode implementation are returning true for apples and bows. You likely forgot to check on type. Food id 0: Apple == Weapon id 0: Bow because you only compared by id, for example. You could fix your value equality, but you probably want reference equality to begin with, or to assign a unique id to each instance and use that to compare with.
I‚Äôm going to ‚Äòsecond‚Äô the Pluralsight recommendation. I think it‚Äôs easily worth the monthly cost. The is a 60hour C# pathway on there that really does cover most of what you need. Enjoy!
You already got an answer, but in StackOverflow spirit I'll post a non-link answer. Use `Convert.ToDouble` if: - `null` is valid input - You don't expect it to fail Use `Double.Parse` if: - `null` is not valid input - You don't expect it to fail Use `Double.TryParse`if - `null` is not valid input - You expect it to fail occasionally So I would claim in the general case what you want is `Double.TryParse` if input hasn't been validated, and `Double.Parse` if input has been validated. In my opinion converting `null` to `0.0` which `Convert.ToDouble` does is not desirable behavior.
Never.
As a full stack developer makes webapplications I just don't have the time to reinvent the wheel. Maybe I could make my own css framework that handles responsive well, but why should I? Some extra css for each application is enough to make it nice enough.
why would OP have any reason to override `Equals()`? 
If you're interested in web stuff, check out the docs for ASP.NET Core. They're actually pretty good. Read the Intro then follow the Tutorials. https://docs.microsoft.com/en-us/aspnet/core/ 
Would you say the material on pluralsight is generally more advanced? I.e. (given limited funds) would it make sense to go through beginner's stuff elsewhere and then be able to fully use the 3 month trial for more in-depth training?
https://www.amazon.co.uk/Pro-ASP-NET-Core-MVC-2/dp/148423149X I'm currently using this book. The author prefers not to use templates meaning you actually learn to read the code properly rather than just following mouse clicks. Because he doesn't use templates he writes everything in a way that you can use Visual Studio code as well as Visual Studio. It's great if you have an older computer/laptop or plan to develop on a Mac or on Linux.
Avoid `async void` like the plague. The only reason it permits you to implement an `async void` method is for events. You should always pass up a Task and let the caller `await` it (or in turn pass it up the callstack).
The `async` modifier does not *make* a method asynchronous, it only *allows* it to contain asynchronous `await`s. An `async` method is synchronous until you await something. The `async` on `test()` is pointless, and I'm guessing `new Scans()` is blocking the thread so the UI can't update.
Essentially, all code up to the first `await` in an async method is run synchronously; the await is replaced during compilation with a Task.Run and ContinueWith referencing the rest of the method. If there's no await, there's no Task.Run and no concurrent execution. If you specifically want to run concurrent/background code, wrap the contents of the method with Task.Run and only use the async modifier if you're also using await in the method.
Thanks! I will look into that path! At first sight it looks very different from other "total beginner's" curricula and I find that a bit confusing. Just not as step by step as I'd like it to be. There's "Fundamentals with VS 2015" and then suddenly it jumps to the oddly specific "Equality and Comparisons". I think I might still have to get a more solid base before I take that path.
Very handy when you don't control the data, or even if you do really.
I‚Äôd recommend learning .net core in an all-inclusive resort with a steady stream of mai-tais coming to your private kaban-a as you sun yourself while reading .net core books or watching videos on YouTube. Pluralsight or udemy. Between chapters, you can take a dip in the pool or ocean to reflect on your new found knowledge. Once the sun gets low in the horizon, or a tropical cloud starts dropping rain, stop by the included restaurants for a bite and then head back to your room to practice via coding on some personal or open source project. The next day, repeat. You‚Äôll have mastery of .net core 2.0 in no time and have a good tan to show for it. Use sunscreen. 
It's how the Remove() method is able to tell which Item to remove. "Is this item in the collection equal to the one I want to remove? No? What about the next one? No?" and so on. 
I know what be it does, I don't understand why you would override it for this.
What do you mean templates? If you mean project templates, then the results of almost all .net core project templates work in Visual Studio Code without modification.
What do you mean templates? If you mean project templates, then the results of almost all .net core project templates work in Visual Studio Code without modification.
I have definitely been doing it wrong, this sounds much better.
Better syntax so TryParse isn't as annoying: if (Int32.TryParse(someStringInput, out var parsedInt) { //do stuff with parsedInt } This way you don't have to declare the 'outted' variable on its own line.
And here I was going to say .NET docs and Pluralsight. I need to try your approach moving forward.
as there is bug in code, someone has done something wrong. "why have they done that" is irrelevant to the discussion. 
You can track https://bugs.chromium.org/p/chromium/issues/detail?id=628922 in case it is ever fixed properly. Personally I abandoned UIA and just used IAccessible for the automation I needed, but thanks for posting this IAcccessible2 tip.
I wouldn't call images and sounds random, but most of the files are already compressed. On the other hand, binaries aren't :)
I had looked at that link, and it looks like a bug where UIA and IAccessible were completely inoperable. That isn't the case here. If I enable it for the session or use the command line switch, it works correctly. Those options didn't work in my situation, so I needed a programmatic approach.
Nearly every project. Flexbox and bootstrap are not mutually exclusive. https://getbootstrap.com/docs/4.0/utilities/flex/ 
If your not very familiar with databases you could easily design yourself into a corner by developing your business logic layers first.
There‚Äôs a pretty nice course ln Pluralsight from Shawn Wildermuth. If you do a quick search on google, you‚Äôll find you can get a 3 free months subscription on Pluralsight. 
the `out var` is new syntax added in C#7, more good syntactic sugar that means one less line of code to write
I switched to IAccessible instead of UIA and found it to be considerably less flaky. UIA often had unexpected delays, hangs and exceptions. In some respects IAccessible more limited than UIA (it is an older tech), so before embarking on anything check it's worth doing a quick check if it will support your particular case. Notably, Edge on Win10 only supports UIA, not IAccessible. For a while, UIA didn't work properly on multiprocess Firefox (at v52), only IAccessible (but I *think* they've fixed that now) For enabling Chrome accessibility, I went with the [documented](http://www.chromium.org/developers/design-documents/accessibility) method of hooking for the EVENT_SYSTEM_ALERT with objectId == 1. As you've probably noticed, [#342319](https://bugs.chromium.org/p/chromium/issues/detail?id=342319) means that this only works if your software is running before Chrome is run, which is irritating. That's the bug I meant to link to! So your method of IAccessible2 poking is still required if Chrome is already running (I think that's suggested in the bug somewhere). You might find some useful stuff for browser accessibility in my https://sourceforge.net/p/webautotype/code/
there is a unique identifier for each item, a variable within the object. the only thing i think it might be is that i am using sub-classes of the constructor Item to distinguish between types of items. perhaps that is causing the issue? 
Yes, project templates. They will all work, but when you start in Code, there is no option to begin with a project template. My point is that any of the tutorials in the book can be followed in both VS and VS Code. With almost every tutorial I've seen that uses VS instructs you to start with a template of some sort (depending on what your learning), while this is by far the quickest way, you don't really learn as much.
I haven't done any kind of override for Equals. everything is as it should be by default - i'm not smart enough to start overriding things, that'll only create more errors than it fixes
Ive updated the post to give a link to download the whole project, all the scripts are in there
Hands On ASP .Net Core 2 his is an informative course and moves along quickly. 100% OFF for limited period In this course we‚Äôll explore the basics of building applications in .NET Core 2. This modern cross platform framework is gaining popularity fast, and we will learn this framework through actual building of applications. https://deal5star.com/hands-on-asp-net-core-2/
You can do it in VS Code via .Net Core CLI with dotnet new. I do agree with not learning as much in the case of templates though.
Nice, thanks for letting me know. I can keep that in mind for later.
[https://channel9.msdn.com/](https://channel9.msdn.com/)
I like this book as well. I type everything out which helps with the understanding/memorization. Each chapter has a self-contained project you create from scratch.
Because gettype is not equals the string, Weapon. Try attach a tostring to GetType in the if statement.
GetType returns a Type object, not a string. You can probably get the result you're looking for by doing a ToString() on the object returned by GetType().
 == typeof(Weapon)
I know c#, I want to learn asp.
Looks to me like you need a slash (/) between "full_path" and the file name. Otherwise it's not a file in a folder, it's a file named "Click_Speed_TimesClick speed results....txt"
I would suggest using Path.Combine instead of manually concatenating strings to make the file path. Have you checked if your folder is actually being created?
weapon is a child class of Equip and Item
what he said is still correct. You're only going into that if block unless it's a weapon, which is exactly what his code says. If Unity finally supports later C# versions, you could even do `if (ItemToEquip is Weapon weapon) { Debug.Log(weapon.GetType()); equipWeapon(weapon); }`
Thanks! Its now saving in the correct directory :)
The debugger is your friend. When your code isn't working, step through it and see what your code is actually doing as opposed to what you THINK it's doing :) 
I know. But this could potentially solve his problem. I will not judge his style of coding. What ever make him produce some code so he can have fun :)
.GetType() returns a Type object
nice!
All of the replies here have been great, but what's missing is the post that gives OP the definition of the .Equals() extension is and actually does. https://msdn.microsoft.com/en-us/library/bsc2ak47(v=vs.110).aspx Equals compares more than just the value of a thing. Plus it depends on whether something is a value type or a reference type, also type equality. Depending on the entities you're checking, the game changes. The MSDN link explains it all. 
The libary
It looks likes you have a lot of inheritance going on... Weapon&gt;Equip&gt;Item&gt;MonoBehaviour&gt;Even more base classes. It could have been overridden incorrectly in one of the classes you didn't write. You might want to try overriding Equals and GetHashCode in your Item class, and see if that fixes it.
I've learned most of it in my basement. 
 while (number &gt; 0) { sum += number % 10; number = number / 10; }
Honestly this sounds like the dream
Do you mean add up all digits in the string representation of an integer? If so, do number mod 10, add that to the sum, subtract it from the number then divide the number by 10. Repeat until the number is zero.
either i &lt; number.ToString().Length or just use a while loop and add the remainder of a division by 10 (modulus operator)
I just worded my google search poorly I see now. I didn't get that stackoverflow article to come up; I just got a bunch of looping through arrays. But thanks that worked. If it were up to you would you convert to string or do the dividing by 10? Just curious. 
Thanks I appreciate it. That works and it makes sense. 
I have done a little practice with foreach. Is that a little more efficient than the for loop?
'async' tells the compiler to convert the method in to a state machine. Each 'await' within the method marks the boundary between states. Each state executes synchronously. Asynchronous behavior only happens "between states". Therefore, if an 'async' method contains no 'await's it will contain a single, syncronous, state, and execute entirely synchronously.
I was trying to add up all the digits in an integer. There was no string in my code above. Sorry, I probably didn't make that clear enough. But thanks that did work.
I'd probably do the dividing by 10. Even though performance is probably fine either way, it's definitely overkill to convert something to a string when another option exists.
Thanks! I'll try to figure it out with the one line. Always feels good to accomplish something with one line of code!
The difference is not so much about performance. Use a for loop if you need the indexing variable for something inside the loop, else use a foreach
The resources used by either approach are probably too small to be measured. You should use the approach that is most clear and `foreach` more clearly represents what you are doing (looping through the digits of a number). If you really need maximum performance, use something like [BenchmarkDotNet](https://dotnetfoundation.org/blog/2016/11/10/welcome-benchmarkdotnet) to find which is faster. Edit to add: If performance is an issue, it would be better to use the remainder/divide approach that others like u/polynomial666 are suggesting.
Alright thanks I will keep that in mind going forward. 
Thanks for that explanation. I just learned foreach, so I don't know a whole lot about it yet.
You were told a better solution is to use `Path.Combine("path", "to", "file.xml");` In the other thread. Is there a reason why you're not making use of that advice?
For future reference; what you're looking for is called a [**digit sum**](http://mathworld.wolfram.com/DigitSum.html). And u/polynomial666 has been kind enough to [provide the optimal solution for decimal numbers](https://www.reddit.com/r/csharp/comments/8aboql/is_there_a_way_to_loop_through_an_integer/dwxceiy/). Stay away from string parsing for this problem.
Are you sure you are identifying the correct item with your code that detects which item is clicked (that you pass to the Remove() function)?
What do you currently know? As someone using ASP.NET core for a while here are the things you want to know. I think a project might be a good way to learn a lot of this unless you are very new to all these concepts: * [Dependency Injection](https://joonasw.net/view/aspnet-core-di-deep-dive) Dependency injection is built in, and they got it right (IMHO comining from frameworks in other languages). * [Logging](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging/?tabs=aspnetcore2x). Its built in and you get it setup for free with Dependency injection. You can also setup Log4net/setilog/etc to go through the built in logging, but I really suggest you understand how the built in logging works. This will also give you an understanding of appsettings.json, and the other sources of configuration. * Application Insights. Its a splunk like thing built into Azure. You should set this up, and learn how to query data out of this. This is really awesome for troubleshooting things. Seriously, at some point take a deep dive into this. * [Configuration](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?tabs=basicconfiguration). * Goodbye web.config hello appsettings.json. * In addition you have appsettings.(Development|Production)json and environment variables. There is no "web.config transform" The files and environment variables all stack on top of each other at runtime. This is key to understand because it lets you do devops right. You put your default config inappsettings.json, you put development specific things in appsettings.Development.json and then on production, you set environment variables. * Authentication * JWTBearer and OpenId authentication with Azure. Unless you have another preferred cloud (so AWS I guess) you should really look into setting auth up against Azure. However, be aware there are two versions of the auth endpoints, v2 and v2. * Microsoft Graph and AzureAD Graph. Unfortunately you can't get all the data you can store in Azure AD in a token. You have to call one of these endpoints to get that data. * [On the topic of Azure Role and Group based permissioning](https://docs.microsoft.com/en-us/azure/architecture/multitenant-identity/app-roles) * Claims and Identity are the objects to look at on the .net side * Ok on to the UI stuff and REST stuff * Razor. Not much has changed here * learn node, and typescript outside of ASP.NET. Because all the gulp tasls etc integrate into Visual Studio * ASP.NET Core MVC. Pretty straght forward if yoou've used asp.net MVC * Web API. This is REST specific and I have not learned thisd * **BONUS** learn Azure functions (or AWS lambda if that is you're thing) because you will soon realize that "serverless" is the way to go for most REST APIs and "static html" sties "with rich client side javascript" is the way to go 
haha, yea I'm sorry. I'm a little bit new to this so I tend to ask every time in unsure. I will stop spamming tonight, I promise :)
&gt; Async isn't 'start this work on another thread then continue with this method' Yeah, I thought and hoped that tagging a method with async would make it run on a separate thread. I probably just don't grasp the full extend of what Async/Await has to offer, but I feel like that would have been much better and more useful functionality.
int sum = Enumerable.Range(1, 182).Sum(); Edit: read the better description of the question in the comments and realize this is what OP meant.
Ah ok. Well it should catch and fix some of these / mistakes, so do give it a go and you can always post more questions if you get stuck :)
This way is more readable: int sum = number.ToString().ToCharArray().Select(x =&gt; Int32.Parse(x.ToString())).Sum(); 
Sadly I haven't been able to get this to work. If Chrome is running before my code runs, accessibility remains stubbornly disabled even after running this method. Could you confirm what exception you expect to catch from the serviceProvider.QueryService call? I'm getting an exception with an 0x80070057 HResult (E_INVALIDARG). What version of Chrome did you test this works with?
Yeah, I was pleasantly surprised with the quality of the tutorials and the structure of the topics there. 
a bit of the opposite tbh... 
Maybe I'm just weird preferring use method calls with descriptive names over code that is more algorithmic.
upon some testing, I think i found the solution but also a new problem. It is correctly finding the path where its suppose to create the xml file, but since Im trying to use the Roaming folder in appdata windows block access to change anything there. I confirmed this by trying the direct path to the roaming folder and it gives me this error message "Access to the path 'C:\Users\TheWilley\AppData\Roaming\Click_Speed_Test' is denied.'". So how can I grant it permission or am I better off just using another folder?
Not that this was a perf question, but this is about as bad as you can get it as far as perf goes to solve this one problem.
If your keys are integers, you could use a List and call ToArray() to give a readonly copy to things that need it, as long as they don't need to get updates from where the list is actually being changed. If you *do* need that sort of behavior, there is also IReadOnlyList&lt;T&gt;. List&lt;T&gt; includes a method, AsReadOnly(), that casts the list to a readonly list using that interface. Dictionary&lt;K, V&gt; also implements IReadOnlyDictionary&lt;K,V&gt;, but you'd need to do the casting yourself or add a similar method in your own, derived class.
Okay, so this is really embarrassing... It turns out that the XML file was not written in the first place and thus the XML reader didn't have anything to read. I managed to fix it now and everything seem to work fine. Thanks for the help, and I'm terribly sorry for not looking closer before heading to the internet xD
Continuations are incredibly powerful. You shouldn't make statements like 'x would be better than y' when you don't understand y.
It was my understanding that if you use matrix representations, your calculations are much faster since you can do operations in parallel and your memory is heavily optimized to solve such linear systems. Are you not sacrificing all that using classes, which could be problematic for huge datasets?
I'm sure they are. That's why I said that it's probably because I don't yet understand the full extend of it.
Ok, I'm actually curious how you find that more readable at all. Here's basically how I read OP's: While we have any positive* value in a number, add the last base-10 digit to a sum and remove the last digit from the number. Basic digit sum. Here's basically how I read yours: Convert the number to a string. Convert the string to a char array and loop through that, parsing each character back to an int value into a new int enumerable\*. And then finally take the new int enumerable* and sum them all up. That's not even considering the obvious performance difference (just the fact that the ToString method essentially does a similar loop to OP's *twice* by then again in Parse). OP's is just much less complex in terms of what I need to consider when I'm reading the code, making it easier to read, to me.
I dunno. I used classes for feed-forward, arbitrary topology (no predefined layers) networks, with different activation functions per neuron (added by mutations) in gaming and genetic art applications. They worked awesome, zero performance issues, and the code was easy to read and debug. If you want to evolve novelty fast, different activation functions per node works well. I'm sure for massive data sets a matrix representation offers plenty of benefits though. It seems common enough.
I'm confused as to why we would want to engage LINQ for this. What is wrong with good old fashioned for and while loops?
&gt; subtract it from the number then divide You don't need to do that in C#, as integer division truncates the remainder.
it works but i dont think that create a new ReadOnlyDictionary instance every time i set a new value will be a good idea 
Just drop the . length should work right? Regardless of performance.
`Enumerable.Range`
just cast the dictionary to a readonly dictionary then. it already implements the interface.
You do it as private Dictionary&lt;int, string&gt; _screens; public IReadOnlyDictionary&lt;int, string&gt; { get{return _screens} }; There are actually code analysis settings that will push you towards doing it this way.
That's a really good way to look at it. When you see a base10 number on the screen, that's just a helpful view for humans - the computer sees it in base2. And you *can* view the base2 'digits' of a number pretty easily with bitwise operations: var digitValue = (number &amp; 1 &lt;&lt; digitNum) &gt; 0 ? 1 : 0
If you want it to just run on another thread you could do something like `Task.Run(test);`. That will probably end up executing on another thread from the thread pool.
 .ToString().ToCharArray() Obviously means you are getting an array of the digits in the number. Int32.Parse(x.ToString()) Means you are converting the character into a number Put it all together, you take the digits in a number and sum them together. For OP's solution, unless you connect the dots between % 10 and / 10 as being forms of digit manipulation, you aren't going to piece together that what is doing is "summing the digits" just by looking at the code. 
https://media.giphy.com/media/1M9fmo1WAFVK0/giphy.gif
Using delegates does not equal LINQ.
I don't think I've seen an actual explanation for why this is happening. When you concat that string on line 114, if the object you're passing into either side isn't a string, the compiler will call `.ToString()` on the object. `ToString()` on the `Type` class just returns the type's name. That's why using `ItemToEquip.GetType().ToString().Equals("Weapon")` would work, but using `ItemToEquip.GetType().Equals("Weapon")`wouldn't, because it's comparing that `Type` instance to the string instance which will return false. Really, you should be using `if (ItemToEquip is Weapon)` instead.
Loop.For(int i, Predicate&lt;int&gt; condition, Func&lt;int, int&gt; func, Action&lt;int&gt; action) { while(condition(i)) { action(i); i = func(i); } }
 while (number &gt; 0) // stop when there's no more digits { sum += number % 10; // modulo 10 effectively takes the last (right-most) digit and ignores the others number = number / 10; // integer division by 10 removes the last digit, so you're ready to read the next one }
Oh, LINQ
Well, obviously. ;-)
You can't index [] on an integer. I was hoping that would work, but it didn't sadly.
Yeah I agree. Whats wrong with the old fashion way? To be honest there are tons of stuff you can do in a more ‚Äúelegant‚Äù in .NET....... BUT WHY? (to reference the Ryan Reynolds gif). What fundamental problem does this approach solve?
It's not the method calls that people are downvoting, it's that you're using string manipulation (relatively slow) over arithmetic (fast). If it's any consolation, I first thought of a similar solution to you, but I think the top answer is much more elegant.
&gt; unless you connect the dots between % 10 and / 10 as being forms of digit manipulation I would. % 10 and / 10 on any form of integer is clearly getting/removing the last digit of that integer in base-10 for whatever needed reason. To me, that's just semi-advanced arithmetic, and using arithmetic operators is the most clear of that intent. I'd still just find it confusing if I'm working on anything nearby with string manipulation and move over and see that line. All of those methods are commonplace in some string manipulation and seeing them makes me think "string manipulation", not "arithmetic" like it should. That said, I suppose I can see how you could read that easily enough if you get past the confusion I have with it.
I've had a look at the Unity base 'Object's [equality comparison](https://gist.github.com/axiieflex/2918ac5ac9b6a2833488) at it's a little odd, but maybe there is a good reason they did it that way... I don't know enough out it. It has been overridden to compare the value of .GetInstanceID() (and a few other things). It would be interesting to know if each object returns a unique value for GetInstanceID() As a workaround for your list, you can try remove items from your list using a reference comparison. list.RemoveAll(i =&gt; object.ReferenceEquals(i, itemToRemove)); If the list was going to contain a large number of items, then you'd really need to look at overriding the Equals method and == operator. 
Awesome - thanks.
You should probably go looking for something like the unfold() method. A LINQ-y version might be called Disaggregate, and might look something like public static IEnumerable&lt;TResult&gt; Disaggregate&lt;TState, TResult&gt;(this TState seed, Func&lt;TState, (TResult, TState)?&gt; generator) { var state = (result: default(TResult), state: seed); while ((state = generator(state.state)).HasValue) { yield return state.result; } } I don't know if I'd call the while solution 'clean'; at the least, it has the same problem with needing state defined outside the Funcs being used. As most everybody else has pointed out, though, the usual solution in C# is run-of-the-mill a for(;;) loop. It's actually idiomatic, and almost anything involving Funcs is going to mean closures. What problem are you actually trying to solve?
Could really use some #regions (C#).
Sorry I didn't see that bit, instead of doing int[i] how about sum += I; instead?
If you are expending effort to make something Linq-ish you are getting the worst of both worlds. Less efficiency and less natural code. Keep it as a while or for loop. 
Dude........
It works, it's just incredibly inefficient. It would never pass code review anywhere I hope.
I started C# a week ago. This is still a work in progress. See the [test file](https://github.com/jabbalaci/JabbaCustomExtensions-for-C-Sharp/blob/master/JabbaCustomExtensionsTest.cs) for some usage examples. Target audience of the project: Python programmers who start learning C#.
What your looking for is called [Summation](https://en.wikipedia.org/wiki/Summation) You're really close using System; namespace Summation { class Program { static void Main() { int userNumber = 0; Console.Write("Enter an integer: "); var input = Console.ReadLine(); if(int.TryParse(input, out userNumber)) { int sigmaResult = 0; //User knows what a number is for (int i = 0; i &lt;= userNumber; i++) { sigmaResult += i; } Console.WriteLine(sigmaResult.ToString()); } else { //User doesn't know what a numebr is Console.WriteLine($"{input} is not valid. Please try again later."); } } } } 
What application are you imagining that adds together the digits of billions of numbers?
Enumerable.Range(0, y).ForEach... Works pretty well.
&gt;LINQ &gt;easier to debug Yeah, okay. 
Unless you're incredibly constrained by your hardware, readability and maintainability should be more important factors than shaving off nanoseconds from your run time. If you find the more efficient solution more readable and maintainable then good for you, but don't pretend saving a nanosecond of computing time is the most important factor in all your coding decisions.
true, but if you are designing an enterprise app, you are probably familiar with db design and repository patterns etc... I'd assume
Yep, and if you like exploring binary encodings, it's always fun to explore floating point representations. Bring some Wellies, it gets deep quick.
&gt;easier to debug too. xD
I really wouldn't have thought it necessary. 
&gt; Yeah, I thought and hoped that tagging a method with async would make it run on a separate thread. Read this and remember it: MULTITHREADING IS HARD and there is no free lunch. There is no such thing as an easy way to do multi-threading in a high-performance and safe way. Period. In any language. There are pure functional languages which handle it all for you by making everything 100% immutable, but I wouldn't call programming in one of those languages "easy" and there are usually tradeoffs between automatic parallelism and memory usage. What you're *trying* to do with `async` is actually done with `Task.Run(func)`. But remember what I said? MULTITHREADING IS HARD and there is no free lunch. Using `Task.Run` takes a thread off the ThreadPool. If you do not `await` or `Task.Wait()` to make sure that the task finishes, then it's very easy to use up all the threads in the ThreadPool, at which point everything else that wants a thread from the ThreadPool sits around waiting. Using Task.Run() in a high-volume scenario like a webserver is probably going to cause performance problems under load that may not show up until load spikes from low to high very fast, at which point everything just seems to come to a crawl and all your requests end up timing out after 30 or 40 seconds. Using Task.Run() to do a small, finite number of things in an app is probably OK, but you still can't just fire-and-forget.
I did something similar, when I came to C# after doing PowerBuilder for many, many years. The PB function to get text from the clipboard is ClipBoard(), and by convention PB global functions begin with "f_" -- so I created f.ClipBoard() where f is an instance of my extensions class. I think it's so much cleaner than: Clipboard.GetText(TextDataFormat.Text) Similarly, my f.Ns(myVar) is the equivalent of: if (string.IsNullOrWhiteSpace(myVar)) "Ns" stands for Non-string. I like my short version SO much better. The downside is that **anyone looking at my code gets confused by my (ridiculously large) collection of extension methods**. As a result, they hate my code, because there is so much that's unfamiliar. For that reason, I never use my extension methods at work. **My point is that you should probably focus on learning C# as opposed to re-implementing Python methods.** It's comforting, and fun, to write the methods that remind you of Python. It's a bad long-run strategy, though. Nearly everything you've written has a straight C# native implementation. Learn to code the C# way! :) Just my two cents, worth every penny.
floating point is a bitch. now tell me the code specified to use integers.
The solution works. OP can learn from both. If one is "obviously" better then it will be obvious to OP too. There's no need to downvote it to oblivion just because it's not your preference.
It seems the majority disagree and would rather have the better solution promoted via a handy voting mechanism.
i would recommend splitting up the methods into different classes, depending on what type they are for. having string and list extensions in one class can get confusing (and long) also does python capitalize also make the rest of the string lowercase?
You took the words right out of my mouth. While learning C#, I tried to jerry-rig features I was familiar with from Python/Bash into C#. Just learn the way C# does things and you might find the extra verbosity more clear.
In a park is nice!
Drop .Length and change sum+=number[i]; to sum+=i;
What you're looking for is what's called an "indexer". Search `C# Indexer` in Google and you'll find your answer.
https://github.com/elw00d/consoleframework is another option that has been shared on this sub before. Never used it myself, but it looks cool.
I agree. The reason, which I didn't articulate, that I mentioned debuggability is because the linq solution lends itself to being turned into the sort of code you've given above, whereas for many coders the solution using modulo and integer division is basically a black box. There's no way to expand it. There's no intermediate steps to try to understand. The reply asking for it to be explained was at -1 votes when I responded to it, so clearly there's some resistance even to the idea that it needs to be explained. Obviously no one who frequents /r/csharp (apart from that one reply) has any problem with such simple math concepts, but the people who one day replace them and need to maintain their code might. I could write an essay on the maintainability of this simple piece of code. It depends a lot on the context of the code, and none was given, so you can't assume anything. It might seem obvious to use the mathsy solution now, but a future version might be parsing strings of numbers which contain the letters "AJQK", in which the string-based solution is likely going to be easier to adapt, or it might need to parse hexadecimal strings, in which case the modulo solution might be preferred but only if the coder maintaining it understands it well enough to make the changes. But saying "don't even consider this other way of doing it", which the votes say to me, is just short sighted.
line 3 and line 4 should be encapsulated in their own methods and then put in partial classes while we're at it.
Hey, sorry I didn't have a machine to debug this myself. I'll investigate this weekend.
I'm curious as to why you'd want to? Very unique problem. If it were me, I'd be lazy and cast the int to a string, break each number out into substrings, snd parsing each number string back into an int and adding them up. ``` int myNum = 882; string numString = myNum.toString(); int total = 0; for (int i = 0; i &lt; numString.length; i++) { total += int.parse(numString.substring(i,1)) } ```
This functionality should really be interfaced and injected as a dependency.
Only thing missing here is the recursive version public static void Main(string[] args) { int number = 888; Console.WriteLine(addIntStr("" + number)); } public static int addIntStr(string num) { return num == "" ? 0 : num[0] - '0' + addIntStr(num.Substring(1)); } Pretty stupid method, but works.
Also, use Dependecy Injection and split the class into multiple files. 
NCurses is one of the big ones in C++. Makes sense that there'd be a C# Port. Googled "ncurses C#" Here's some of the interesting links: http://www.mono-project.com/docs/tools+libraries/libraries/monocurses/ https://github.com/Maxwolf/WolfCurses https://github.com/sushihangover/CursesSharp https://github.com/rnowley/csharp-ncurses http://curses-sharp.sourceforge.net/ 
It'll be the same number regardless of the base, just written differently.
Make sure you know [why you are picking what you are](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/comparison-of-xpath-and-linq-to-xml) not saying you are wrong, but as you see XML is a rabbit hole. If you are converting an XSLT then I can understand your desire for xpath. Beyond that, honestly I stopped using xdoc and xpath almost 10 years ago now. Its a different way of thinking about XML but its much more natural in the .NET language compared to the mess xdoc makes. 
Thanks!
 static IEnumerable&lt;int&gt; EnumerateDigits(int n) { int i; while ((n = Math.DivRem(n, 10, out i)) != 0) { yield return i; } yield return i; } 862.EnumerateDigits() // 2, 6, 8 .Sum(); // 2 + 6 + 8 = 16
&gt;It'll be the same number regardless of the base, just written differently. Will it? Base 10: 8+6+2 = 16 Base 2: 1+1+0+1+0+1+1+1+1+0 = 7 (111 in base 2) Base 5: 1+1+4+2+2 = 10 (2 in base 5) etc.
Needs some MVVM, me thinks.
Ahhh, string math.... run !
https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition
Oh, I gotcha.
 while (number &gt; 0) { number = Math.DivRem(number, 10, out var digit); sum += digit; } I feel like you should always use DivRem if you want both even if it turns out to be no faster.
Absolutely, pm me a resume or any questions you have and I'll send it on to get you a phone screen.
For my solution to handle negative numbers, all you would have to do is wrap the number around a Math.Abs().
Don‚Äôt use udemy. Get the Pluralsight free trial from Microsoft dev essebtials
[SadConsole](https://github.com/Thraka/SadConsole)
Clearly you have not worked ‚Äòanywhere‚Äô; most companies do not do code reviews and all companies are infested and running on top of far far worse code than this. The reddit echo chamber does not mean, unfortunately, the average company works like this. And yes, I agree with you, it should not pass review. 
Anyone maintaining this in the future should have learned long division with remainders in grade school. If they didn't then we've got bigger problems. And no, being "less-math minded" is not a reasonable excuse for not understanding integer division. The math involved is elementary school level.
If you wouldn't mind, would you give me a quick ELI5 on how or what you would use this for? Still learning. Thanks :)
I don't think I understand these things well enough to ELY5. Can I recommend to you the [C# Programming Guide](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/index)? Interfaces, composition, and inheritance are the things you want to read into.
Thanks for the tip, splitting up the methods into different classes is done. Python does work like that: &gt;&gt;&gt; "rEaLLY?".capitalize() 'Really?'
I agree that it can be confusing for others. I plan to use it in my own projects. By implementing these methods I also learned a lot about C#, so it's a good exercise to get to know a new language. However, there are some things that I use all the time in Python and I don't understand why there are missing from the stdlib. For instance string / list slicing. There are also lots of `.To*` methods but `string.ToInt()` is missing. In Kotlin, for instance, you can convert anything to anything with `.To*` methods and I found it great. In the long run I will get used to the C#-way, but right now I'm very happy that I can customize the language with custom extensions.
We use `int.Parse(s)` and/or `TryParse` et al. It's not less convenient, just different.
I learned Unity from a [Udemy course](https://www.udemy.com/unitycourse/) that was on sale for $20. It takes you step by step from beginner to nearly advanced, teaching you everything you need to know, including coding. There's free courses and tutorials out there, but you'll be hard pressed to find a fully structured course for free. $20 is very cheap for 50+ hours of training.
Int.Parse, Double.Parse, Decimal.Parse, BigInteger.Parse... These are the methods you want to use in C#. They're better, really, because when you want to make a new C# like parseable class, you don't go making a new extension method on string, but just follow convention adding a .Parse to your new class. For instance, XML isn't handled by taking a string and going .ToXElement, you instead do XElement.Parse(s). Whilst you *could* add each of these as extension methods, along with their TryParse variants, I don't know why you *would*.
&gt; over code that is more algorithmic. It's also 77 fucking characters long.
Just to pedantic this is really suboptimal. Imagine you have a Turkish locale where the capital form of 'i‚Äô isn‚Äôt ‚ÄòI‚Äô or languages such as Gaelic where some noun cases take prefixes that are usually not capitalised. Also beware of `.Substring(0, 1)` to get the first letter. You‚Äôre getting the first character. In same languages letters can be composed of multiple characters. (Danish has ‚ÄòAA‚Äô, and others have ‚ÄòD≈Ω‚Äô, ‚ÄòLJ‚Äô, etc.)
Did you mean to reply to someone else?
Since you are playing around on the CLR, check out r/fsharp :)
Yeah maybe. 
Sorry, this is for char. For string you need string.Concat(Enumerable.Repeat(s, n))
https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/serialization/ Use serialisation?
Doing things without following/copying code. You need to understand code yourself. Use Unity Scriptibg API and use youtube and forum tutorials just to give you idea on how it should be done but DO NOT copy paste code :). I am just gonna do a shameless plug here and say you can check out my youtube channel for some tutorials :D https://www.youtube.com/channel/UCbvf5o21cb0Ra9pdpkogHYA
Keep in mind there's nothing to stop people casting it back. Sometimes this is okay, as a "if they want to do that, they know there be demons", but anal retentive me generally prefers to store a System.Collections.ObjectModelReadOnlyDictionary in a local field for one-time allocation and return that instead. Just generally feel uncomfortable returning internal data structs, even if cast down in such a way that there not immediately writeable. Same with returning an internal array (even if cast down) for enumeration, you *can* but I'd rather not.
^The linked tweet was tweeted by [@wieslawsoltes](https://twitter.com/wieslawsoltes) on Apr 06, 2018 22:00:43 UTC (5 Retweets | 19 Favorites) ------------------------------------------------- \#CoreRT \#AvaloniaUI \#Xaml based native C\# \#GUI app using \#SkiaSharp! [@shanselman](https://twitter.com/shanselman) [@migueldeicaza](https://twitter.com/migueldeicaza) [@terrajobst](https://twitter.com/terrajobst) [@mattleibow](https://twitter.com/mattleibow) [Attached video](https://video.twimg.com/ext_tw_video/982377540961447936/pu/vid/674x360/iNtNzTtIMRIkKpTe.mp4) ------------------------------------------------- ^^‚Ä¢ Beep boop I'm a bot ‚Ä¢ Find out more about me at /r/tweettranscriberbot/ ‚Ä¢
I bought the same course (on sale for about $10, I believe). It's very well made and I can recommend it. Personally, I would also recommend learning C# basics from a book or total beginner's course - either beforehand or simultaneously. Yes, the unity course does teach you coding, as u/TB1080 wrote. However, it focuses on a lot more than just coding in C# and Unity does a lot of things for you behind the scenes that you're not able to see (object and behavior creations of all kinds). This can be overwhelming and detract from wrapping your head around what objects and classes are and other basic ideas. But if you supplement that course with some very basic C# (all this is assuming you start with no prior coding experience) then you should be all set. 
Thanks, the code was modified. If `n &lt; 0` then it must return an empty string, so I kept the `if-else` branch.
Did it work? 
Etc, not et al.
Thanks. Well, if the string interpolation is too jammed, I find it harder to read.
I prefer ‚Äú‚Äù as well. They result in slightly different code, at the IL level, but I bet they JIT compile into the same thing. 
OK, done. Thanks.
Since then I've found [this](https://stackoverflow.com/questions/263191/in-c-should-i-use-string-empty-or-string-empty-or-to-intitialize-a-string?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa). They say `""` can be easily confused with `" "` (space). I dunno...
I think you need to specify, what do you want to achieve... Because this code looks completely wrong :( ... Length of the array is 15, but you have 5 places, and your iterations runs 6 times... it doesn't make a sense to me. "Fisherman Horizon" is correct output in this case. At first you set placeName to "Balamb Garden" and in next line you overwrite it with "Galbadia Garden" and so on ... 
So basically what you're doing wrong is that the "createPlace"\-Method is simply replacing the values of some fields in the **same** object. Now I don't know for sure what you wanna achieve, but I assume you just wanna have an Array which stores MapLocations? So basically what you should do is make for each location its own instance, like this... var worldMap = new MapLocation[] { (new MapLocation()).CreatePlace("Balamb Garden", 255.55, 255.55); (new MapLocation()).CreatePlace("Galbadia Garden", 255.55, 0.325); (new MapLocation()).CreatePlace("Deling City", -322.23, 32.1); (new MapLocation()).CreatePlace("Winhill", -243.2, -120.05); (new MapLocation()).CreatePlace("Fisherman Horizon", 0, 0); }; btw. your naming is a bit odd: In C# we write data\-types such as string, double, int etc with lower cases. Methods always start with captial letters =\&gt; CreatePlace and you should also call your Array worldMap.
The fields will be private so OP can't read from them. Also your constructor is syntactically wrong.
You had syntax errors in your own code you hypocrit.
The constructor is correct...
Great to see that you can't take feedback.
Nope. Closing brace is the wrong way.
As others have said, it's not totally clear what you're trying to achieve. But I think what you're *trying* to do is this: MapLocation[] WorldMap = new MapLocation[15]; for (int x = 0; x &lt;= 5; x++) { WorldMap[x] = new MapLocation(); } WorldMap[0].createPlace("Balamb Garden", 255.55, 255.55); WorldMap[1].createPlace("Galbadia Garden", 255.55, 0.325); WorldMap[2].createPlace("Deling City", -322.23, 32.1); WorldMap[3].createPlace("Winhill", -243.2, -120.05); WorldMap[4].createPlace("Fisherman Horizon", 0, 0); You mis-understanding is not to do with arrays, it's to do with loops. The code inside the loop should be the code that you want to run over and over again. In your example, you have 5 calls to `createPlace` inside the loop, so *each time through the loop* you were calling `createPlace` 5 times - that means you were calling it 25 times in total. Then, only after calling with with the arguments relating to Fisherman Horizon (and overwriting all the other places with Fisherman Horizon details) were you adding it to your array. I would urge you to learn how to use the debugging tools in Visual Studio. If you had single-stepped through your code, you would have realised that your method was being called 25 times instead of 5 times, and this may have helped you figure out the problem. There are multiple other problems with your code which others have pointed out, including: - The functionality of the `createPlace` method should probably be in a constructor, not in a method - You are creating an array of size 15 and only putting 5 items into it - Method names should be PascalCased, i.e. starting with a capital letter - There are better ways of initialising array data, as pointed out by several other comments However, the most fundamental problem which you need to address before any of these (imho, and based only on this one little code snippet) is to understand how loops work.
I think maybe you could try a bit of Linq: int valToDigitSum = 862; int result = Enumerable.Range(1,valToDigitSum).Sum(); 
I was just saying that your syntax was wrong, which was true, no need to take it personally
I'm not taking it personally. I get irritated because you're not pointing out what issue you saw. You just say "syntactically incorrect" and that is not constructive feedback. The issue was that I had written `;` instead of `,`. `new [] { Value }` is perfectly legal.
I didn't had the chance to work on it yet -working on another project lately- I will go back for it next week, thanks for asking i will post my solution once I'm finished
oh uhm... i also meant in different files XD while its possible to have multiple classes in one file, its bad practise. it may be used for an enum that is only used by that class, but not multiple classes. i see. you should use that as an example in the documentation text, because i was confused. i see you also used only the implementation for the extensions like List&lt;T&gt;. both List and string implement IEnumerable&lt;T&gt;, so you could possibly create a Slice method for IEnumerable. for the list stuff you should try to use IList at least or IEnumerable too. that way the extension are available for more types.
OK, makes sense. Before attacking the problem, could you tell me what project structure to use? Currently I have `JabbaCustomExtensions.cs`. I guess I should split it up to `StringExtensions.cs`, `ListExtensions.cs`, etc., keeping the same namespace everywhere. Then what to do with the tests? Should I create a `tests/` folder? Should I also split it up to `StringExtensionsTest.cs`, `ListExtensionsTest.cs`, etc.?
_Et alia_ isn't wrong here. It means _and the others_, and _alia_ is the neuter plural case i.e. it can be used to refer to items or things and not just people.
I would assume that if the person wants XML they want a schmea that is less insane to work with than the default XML output done by .NET.
Or just use https://msdn.microsoft.com/en-us/library/system.globalization.textinfo.totitlecase(v=vs.110).aspx ?
 public static int AddDigits(int n) =&gt; n == 0 ? 0 : (AddDigits(Math.DivRem(n, 10, out var i)) + i); The string parsing solutions are really going about all this the hard way. It preserves order, but involves a bunch of type coercion. (This one seems mildly clever for exploiting the numeric relation between number chars, though.) If order is really that important, the thing to do is probably to just build out the array of digits (size is `Math.Ceiling(Math.Log(n, 10))`) and do the usual divide-and-remainder thing to fill out the array elements in reverse. The array size is pretty small for the limits of memory in a contemporary computer (i.e. `long.MaxValue` is 19 digits), and the two floating point calculations (ceiling and log) are probably less expensive than all the stringifying involved, though I probably should benchmark that to be sure. There are stylistically better ways to coerce an object to a string, too, like using the object's `ToString()` method, or using interpolation (if you really dig terse syntax): string s = o.ToString(); string s = $"{o}";
This happens because by default all work happens in the main thread, same thread that is responsible for the UI rendering, this is something that happens in all operating systems GUI. So you will need to pass this long running process/webservice call to a secondary thread or use async/await.
Just to clarify, the code here won't compile as CreatePlace returns void. You would need to add the new instances first in the initializer list and then call CreatePlace on each array value afterwards like so: var worldMap = new MapLocation[] { new MapLocation(), new MapLocation(), new MapLocation(), new MapLocation(), new MapLocation() }; worldMap[0].CreatePlace("Balamb Garden", 255.55, 255.55); worldMap[1].CreatePlace("Galbadia Garden", 255.55, 0.325); worldMap[2].CreatePlace("Deling City", -322.23, 32.1); worldMap[3].CreatePlace("Winhill", -243.2, -120.05); worldMap[4].CreatePlace("Fisherman Horizon", 0, 0);
[/r/titlegore](https://www.reddit.com/r/titlegore/)
Fill the program.cs with content! /// &lt;summary&gt; /// The main entry point for the application. /// &lt;/summary&gt; [STAThread] static void Main() { Application.EnableVisualStyles(); Application.SetCompatibleTextRenderingDefault(false); Application.Run(new Form1()); }