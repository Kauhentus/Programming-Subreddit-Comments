Yeah. It’s a game server. So each play field has its own long running task that maintains the heartbeat of the play field. There can be many playfields. (Dozens). Also each player has its own long running pair of tasks that manage the inbound and outbound messaging queues.
Ah you see, context! So you have: * Many play fields * With many player * With many background threads * With a background thread All running on one server, and you're wondering why spinning up another thread can take 10 seconds? How many logical processors does your server have? (`Environment.ProcessorCount` will give you the answer) if it's fewer than the number of threads you're trying to create then the OS has to context switch between each one giving each thread some time to process, then stopping it, doing a bit with another thread, stopping that, etc. This can quickly become time consuming. Do you need all those threads? You might simply need to upgrade your hardware or if you need a huge number of threads, what you're doing might be better suited to specialized hardware like a GPU.
OP probably means the set of statements you usually put at the top of a file, e.g. `using System;` VS and Rider will both add those automatically as you use various libraries, like LINQ or generics.
Thanks, that article is great. A file-reference URL is exactly what I need. If I store the file reference ID in the thumbnail filename and the metadata in extended metadata attributes, it looks like I can avoid having a database entirely.
It's = It is.
That is the biggest reason I asked this question here, I also don't know what "data-driven approach means, I also googled it before asking here, but I assumed the same thing
I find this to be very annoying and would love to see it added as a feature. As of now I just google the class I’m referencing and then add the `using` statement manually. PITA. It can remove unused using, why not add the missing ones, right?
You mean Com Truise?
using System; namespace OldMacDonaldSong { public class OldMacDonald { private Animal\[\] \_farm; private static int SIZE = 5; public OldMacDonald() { /\* Create your farm, an Animal array \*/ \_farm = new Animal\[SIZE\]; \_farm\[0\] = new Animal("Cow", "Moo"); \_farm\[1\] = new Animal("Duck", "Quack"); \_farm\[2\] = new Animal("Dog", "Woof"); \_farm\[3\] = new Animal("Cat", "Meow"); \_farm\[4\] = new Animal("Pig", "Oink"); } public void Sing() { for (int i = 0; i &lt; SIZE; i++) { Console.WriteLine("Old McDonald had a farm, E-I-E-I-O\\n" + "And on his farm he had a " + \_farm\[i\].getName() + ", E-I-E-I-O\\n" + "With a " + \_farm\[i\].getSound() + " " + \_farm\[i\].getSound() + " here and a " + \_farm\[i\].getSound() + " " + \_farm\[i\].getSound() + " there...\\n"); } } public static void Main(string\[\] args) { new OldMacDonald().Sing(); Console.WriteLine("Press any key to exit."); Console.ReadKey(); } } class Animal { private string \_name; // e.g. Cow private string \_sound; // e.g. Moo public Animal(string name, string sound) { \_name = name; \_sound = sound; } public string getName() { return \_name; } public string getSound() { return \_sound; } } }
thanks
Check your overall cpu usage.. you maybe hitting hardware limits
I don't use using statements, I use a disposer factory. Much easier. Var thing = new disposer&lt;Repository&gt;(). When disposer disposes it disposes everything it's tracking.
Yeah that makes more sense.
It is annoying, but I've found it has increased my knowledge of the libraries and APIs thag make up .NET
public interface IAnimals { string Name { get; } string Sound { get; } } &amp;#x200B; public class Dog : IAnimals { public string Name { get { return "Dog"; } } public string Sound { get { return "Bark"; } } } &amp;#x200B; public class Cat : IAnimals { public string Name { get { return "Cat"; } } public string Sound { get { return "Meow"; } } } &amp;#x200B; class Class1 { static void Main() { // Polymorphism IAnimals dog = new Dog(); IAnimals cat = new Cat(); &amp;#x200B; Console.WriteLine("Old McDonald had a farm, E-I-E-I-O\\n" + "And on his farm he had a " + [dog.Name](https://dog.Name) \+ ", E-I-E-I-O\\n" + "With a " + dog.Sound + " " + dog.Sound + " here and a " + dog.Sound + " " + dog.Sound + " there...\\n"); Console.WriteLine("Press any key to exit."); Console.ReadKey(); } }
is this somewhat correct?
Code is more of an editor, not an IDE. It's basic, and that's why people like it. It's not language specific. You don't use vscode to do that, you use the command line. If you want that feature then it should be added to the dotnet command line, not the editor imo.
This should answer the question: [https://github.com/OmniSharp/omnisharp-vscode/issues/1117](https://github.com/OmniSharp/omnisharp-vscode/issues/1117)
[https://github.com/OmniSharp/omnisharp-vscode/issues/1117](https://github.com/OmniSharp/omnisharp-vscode/issues/1117)
[https://github.com/OmniSharp/omnisharp-vscode/issues/1117](https://github.com/OmniSharp/omnisharp-vscode/issues/1117)
Yes? Just click the light bulb icon that appears when you use a type that hasn’t been imported yet (or press Ctrl + Period or whatever the shortcut is)
Vscode has this feature. You just need to use the shortcut to do it when typing out the type. I'm type SqlCommand and with cursor at end of d, press Ctro + period. You should get the option there. On a Mac it's Command + period.
No code actions available. Should I configure something else?
I have "no code actions available" in quick fix menu.
Do you have c# extension installed?
There is an extension called auto-using
Of course I do, everything works besides this feature
I will check it out, thank you
Do you have the C# extension installed? How are you opening your project? If there is a problem with omnisharp (used by the C# extension) loading the project, then you might not get intellisense and problem fixing tooltips.
Almost :D Main needs some work. I will help you out once i get on pc cuz writing code on phone is pain. But basically you can create list of IAnimal and then add your animals to that list. Then you can iterate over that list (e.g. with foreach) foreach(var animal in animals) { Console.WriteLine($"The { animal.Name } makes that sound { animal.Sound }"); } And done. Your code follows the S.O.L.I.D principle of open-close, you dont ever have to change that foreach if you add new animal in future.
I just use File-Open folder. Is this the wrong way?
Second this, as this extension adds using automatically, instead of suggesting it as an auto-fix. This is more in line with ReSharper's workflow.
Well, I managed to get it by pressing the lightbulb, lol. But I used to use Quick fix menu in VS and i kinda don't understand, why doesn't quickfix menu duplicate lightbulb menu
probably wrap it in a class that keeps a list of some kind for the ordering alongside the dictionary. or just extract and sort the data into a list when serializing
&gt;I switched some out for ConcurrentDictionaries to try and be as thread-safe as possible Just using a ConcurrentDictionary doesn't make your code thread safe. You need to think that through. One example, how will you serialize and deserialize the dictionary while other threads and adding and removing items from it? &gt;does anyone know of any alternative to ConcurrentDictionary that is thread-safe, serializable and ordered. ConcurrentDictionary is not ordered. Again, you need to think more about concurrency -- what is the order of the items when two threads add an item at the same time? There is a reason that none of the concurrent collections is ordered.
The average person isn't a programmer so I would imagine both look pretty foreign. Even if you are a JavaScript or Python developer, I think C# example would be more universally human parseable (to programmers).
Yes, I did it on my phone so I'm not sure if I did it or the phone corrected me. haha
This guy knows what's up. Listen to him
Cracking the coding interview by Gayle Laakmann McDowell does quite well on this subject in general. As for OOP questions I’d say know the four basic principles, so Abstraction, inheritance, Polymorphism and Encapsulation and how you can apply them with examples.
Yeah, i've heard of that book. Actually ordered it yesterday :) Thanks a lot for the response
Thanks, needed this tips :) I'll try to implement this in my code.
Let me know if this works out for you :p
I'll may need help with the foreach though :)
No, if you have the extension installed then that way should work fine. Omnisharp should detect the proj file and try to instpect the code it finds. Maybe you have something in your global or worskpace settings for the project disabling your tooltips for problem fix suggestions.
&gt; I dislike loops in code when a brief Linq statement would suffice Absolutely, I like your approach, looks quite elegant. I wish I could upvote this answer hundreds of times. Thank you very much indeed for very thorough review! &amp;#x200B; Have problems with StringBuilder - no *.Contains()* method. I guess I should do *updateStatement.ToString().Contains()*. &gt;And of course, you should consider SQL Injection. What if someone changes their car description to Robert'; DROP TABLE \[Brand\]; [?](https://xkcd.com/327/) And yes, I believe I should use some framework for producing SQL statements?
Great, thanks for the detailed answer.
&gt; I wish I could upvote this answer hundreds of times. You're very kind, but a replay and enthusiasm is all I need :) &gt; Have problems with StringBuilder - no .Contains() method. But I believe you need a `.Contains` method due to design decisions. If you're building up the string yourself why do you need to ask it if it contains something? It'll only contain it if you put it in! That's how I got away with removing the the `if` statements in my example. I don't need to ask if the SQL contains _UPDATE_ because I know it does - I added it! &gt; I believe I should use some framework for producing SQL statements? Well, what you're really writing _is_ a framework for SQL statements, so using a ready created one is sort of missing the point. Everything you're creating is already part of Entity Framework (and more!) so to just use another framework to avoid SQL injections would miss out on the educational experience of writing your own. The way we usually get around SQL injection is to use parameters, for example see this answer: https://stackoverflow.com/a/7505842/1830205
So with more features from Winforms and wpf being added to core, are they intending to eventually make .net core a replacement to .net framework? Or will it always just be a subset of the framework with some useful cross-platform features?
**But basically you can create list of IAnimal and then add your animals to that list.** Then you can iterate over that list (e.g. with foreach) foreach(var animal in animals) { Console.WriteLine($"The { animal.Name } makes that sound { animal.Sound }"); } &amp;#x200B; \-This is what I have most trouble with. Where should I declare the interface array and how to add the animals so I can iterate through them with foreach?
thanks for letting me know. it's being changed in the next release.
Removed: Rule 7.
In the 1st line of Main. Something like this. List&lt;IAnimal&gt; animals = new List&lt;IAnimal&gt;(); IAnimal dog = new Dog(); dog.Name = "Dog"; dog.Sound = "Woof"; animals.Add(dog); Etc... Ofc you can do some syntax shugar to make it shorter but I think this method is easier to understand when you do it first time
These might help you out: [https://github.com/FAQGURU/FAQGURU](https://github.com/FAQGURU/FAQGURU) [https://github.com/charlax/professional-programming](https://github.com/charlax/professional-programming)
You can check out the last section of [this article](https://devblogs.microsoft.com/dotnet/update-on-net-core-3-0-and-net-framework-4-8/) for a little more info. tl;dr - core is going to get all the cool new features because they can move fast and break things, while the framework will continue to get security updates and some feature updates at a slower pace. They're encouraging new development to start with core.
Will check it out, thanks :)
&gt;I implemented your advice and it works. I will be very thankful if you could see the current code and tell me if you have more tips, and does it still follow SOLID principles? And is this polymorphism because it doesn't deal with methods in the base and derived classes. Thanks again. namespace OldMacDonaldSong { public interface IAnimals { fixed IAnimals\[\] farm\[5\]; string Name { get; set; } string Sound { get; set; } } &amp;#x200B; public class Dog : IAnimals { public string Name { get; set; } public string Sound { get; set; } } &amp;#x200B; public class Cat : IAnimals { public string Name { get; set; } public string Sound { get; set; } } &amp;#x200B; public class Chick : IAnimals { public string Name { get; set; } public string Sound { get; set; } } &amp;#x200B; public class Pig : IAnimals { public string Name { get; set; } public string Sound { get; set; } } &amp;#x200B; public class Cow : IAnimals { public string Name { get; set; } public string Sound { get; set; } } &amp;#x200B; class Class1 { static void Main() { // Polymorphism IAnimals dog = new Dog(); { [dog.Name](https://dog.Name) = "Dog"; dog.Sound = "Woof"; } IAnimals cat = new Cat(); { [cat.Name](https://cat.Name) = "Cat"; dog.Sound = "Meow"; } IAnimals chick = new Chick(); { [chick.Name](https://chick.Name) = "Chick"; chick.Sound = "Cluck"; } IAnimals pig = new Pig(); { [pig.Name](https://pig.Name) = "Pig"; pig.Sound = "Oink"; } &amp;#x200B; IAnimals\[\] farm = new IAnimals\[5\]; foreach (int k in farm) { Console.WriteLine("Old McDonald had a farm, E-I-E-I-O\\n" + "And on his farm he had a " + [k.Name](https://k.Name) \+ ", E-I-E-I-O\\n" + "With a " + k.Sound + " " + k.Sound + " here and a " + k.Sound + " " + k.Sound + " there...\\n"); Console.WriteLine("Press any key to exit."); Console.ReadKey(); } } } }
It’ll become the default .NET eventually.
i did this in main, but I am not sure how to declare the array of IAnimals it says Interfaces cannot contain fields when I try in its class: IAnimals\[\] farm = new IAnimals\[5\]; foreach (int k in farm) { Console.WriteLine("Old McDonald had a farm, E-I-E-I-O\\n" + "And on his farm he had a " + [k.Name](https://k.Name) \+ ", E-I-E-I-O\\n" + "With a " + k.Sound + " " + k.Sound + " here and a " + k.Sound + " " + k.Sound + " there...\\n"); Console.WriteLine("Press any key to exit."); Console.ReadKey(); }
To the devs who worked on DataVisualization, our sincere thanks. Currently, we are handing rendering off to another Windows service, running on .NET framework. When Core 3 is released we can fold that back into the main docker code.
And it makes a lot of sense. When .net was originally Windows only, it made sense to bundle the framework as part of Windows to simplify security and patching. However now we're cross-plat, bundling a runtime as part of an OS update is less useful. Plus the Framework has a lot of stuff that _seemed_ like a good idea but was really not (I'm looking at you, GAC). A great chance to get rid of the cruft.
Well, sorry for my absense. Thanks for all the replies. The project has to be done all within C# code and Windows App Form through Visual Studio. I got recommendations from my teacher, such as: Minesweeper, tic-tac-toe, connect 4, alpha go or Chinese chess
&gt; Everything you're creating is already part of Entity Framework Yes, I use Entity Framework for all my projects. Not trying to reinvent the wheel. I'm very curious about how frameworks function internally. Trying to replicate certain parts of them to learn to write elegant code. &gt; If you're building up the string yourself why do you need to ask it if it contains something? Indeed we don't even check if the string contains any words, instead we just check if any of the fields were modified. I understand now.
Saw it later, tried it and it worked. Thanks. Is this example of polymorphism?
&gt; Trying to replicate certain parts of them to learn to write elegant code. Well, you're well on your way and it was a great start. I wish you the best of luck. If you have any questions or more code reviews I'm always keeping a close eye on the /r/learncsharp subreddit for interesting posts like yours, or you can even message me directly.
I would argue the GAC was never a good idea. They took the idea of regsvr32 and made it into a folder structure you could "see" and then provided a way to loosely tie yourself to an assembly. The order of precedence was misunderstood by many, and Microsoft ignored/skipped the better solution (self contained deployment) for the easiest (OS as a sandbox). The worst part is we had countless folks telling developers they solved/eliminated DLL-hell! But, they only prolonged it.
You havent specified Column and Row definition in form. Your margins are fixed. Its like textbox Amount is in column 3 or 4. Its row is undefined. Get some examples with column and row definition and use it as atribute of textboxes and other controls on form/window. If you define column and row for every control on forms you would solve problem..
Thanks a lot again!
Irrelevant nitpick, but `ConcurrentStack` and `ConcurrentQueue` are ordered. But they don't support random access and arbitrary insertion/removal which makes implementing that a lot easier.
Copy the contents to/from Dictionary during (de)serialization and there you have it.
Yes, this is exaple of dynamic polymorphysm. Your code can still use some improvements, e.g. Never use meaningless names like "k" instead of "animal". Visual Studio's intellisense gives you no excuses for long names
&gt; they solved/eliminated DLL-hell! But, they only prolonged it .Net Core has caused the most DLL hell I've experienced in 20 years. It's been better for a while now, but pulling a nuget that targeted netstandard libs into a solution with MVC 5 projects was a complete shit show for quite a while.
Just would like to share my recent contribution to open-source https://github.com/aliakseiherman/eixample Replicated AspNetBoilerplate's functionality. Any feedback is greatly appreciated :)
You might be interested in ManagedEsent.. uses builtin database in all Windows versions.
so in .Net Core 3.0 we will have the the good ol' EF6 but cross-platform, so what is the purpose of EF Core now?
Mixing FX and .Net Core is a choice you make if you are willing to have assembly bindings all over the place. That's the cost of that choice, and isn't .Net Core's "fault" so much as it is a consequence of that decision.
For understanding SOLID, you have Tim Corey tutorial on YT for all 5 principles, he explain it in detail and with code example. Its great and free. Just google Tim corey solid principles.
New features will be added to EF Core but not EF6. Check out this short article: https://www.infoq.com/news/2019/01/EF-Core-3.0-Roadmap
&gt; are they intending to eventually make .net core a replacement to .net framework? Sort of. I don’t think Fx will ever go (at least not for another decade), but for new or continued development, Core is increasingly the way to go. (There are exceptions to that, still. For example, Xamarin still requires Mono instead of Core. Among other reasons, Core cannot currently do AOT compilation.) &gt; Or will it always just be a subset of the framework with some useful cross-platform features? I assume Core will always be more lightweight, modular and cross-platform. Don’t let WinForms/WPF being platform-specific confuse you — at its core (hur), Core has no such dependencies and lets you deploy to different platforms. It also, quite unlike Fx, allows for self-contained deployment. You’re far less reliant on the destination having certain prerequisites.
The thread pool will start new worker threads over time when it's exhausted its pool, but it will not instantly start enough threads to satisfy all queued work items at once. If you queue enough items at once and they don't finish quickly enough, you will see larger and larger delays. If you have long running synchronous methods, don't use `Task.Run`. Use `new Thread() ` or `TaskFactory.StartNew()` + `TaskCreationOptions.LongRunning`. If your methods are CPU-bound, starting more threads probably won't help as there's only so much your hardware can do If your methods spend a lot of their time waiting (IO, queues, locks, etc.), starting more threads may improve throughput but the preferable and likely more performant solution would be to use async instead so the same number of threads can service more methods.
You can store it in a config file and if can store that in a git ignore file if you're using version control.
Common practice is to store the connection string in app/web.config. It's secured that way, but it's the same format with plain text password. May I ask why this is a problem for you? The password will at some point be stored in plain text anyway.
EF Core is a lot faster than EF. (When it doesn't do stupid shit like process the query client-side.)
EF Core is a much cleaner codebase, given that it's a ground-up rewrite. It's much more maintainable, and it's going to get all the nice features moving forward. EF6 is just in maintenance mode.
I use integrated authentication.
Why are you creating a new version of a List? Why can't you just have an instance of a List&lt;string&gt; hanging out somewhere? Your code is broken because you call `new Woordenlijst()` when the constructor signature is `private WoordenLijst(string value)`. There are two things wrong here. When you try to create an instance of your class in the getter, there's a capitalization error: the "l" should be capitalized. Secondly, the constructor takes a string as an argument. Thus, when you instantiate the class in your getter, you need to pass a string into the constructor.
The lack of true spatial types still pains me. I have several performance sensitive projects that cannot be ported to .NET until someone comes up with a real solution for supporting SqlGeography. (We have a crappy solution for SqlGeometery, but that's only useful for things like mapping out a mall or university.)
It must be context switching. Interesting.
Can I read about Xamarin intentions anywhere? Is it destined for Core eventually or is it too difficult?
Difference between abstract class and interface. What is the IDisposable interface and when/why should you use it ? Can you have memory leaks using C# with a GC? How? Name some Design patterns. What are the SOLID principles? When should are the difference in terms of performance (O(n)) between an array and a list? When should you use one or another ?
Use a dummy, named datasource or regular app setting in the web.config that's checked in and then configure it directly on the web server either with a text editor or with the IIS manager. Alternatively, in Azure you can do the same through the azure portal. Settings applied via the portal override whatever is in the .config. As a third alternative you can apply the connection string settings on a per-server basis in (I think) the machine.config. If you're in an AD setting just use integrated authentication and configure your app pools to run as a user that has the access it needs to SQL Server.
The Core folks [*are* experimenting with AOT](https://github.com/dotnet/corert), but they’re not as far along as Mono. (Why does AOT matter? Performance questions aside, you cannot ship your own JIT and be approved as an iOS app; the only JIT Apple lets you use is their JavaScript one. Thus, it’s absolutely critical for CoreRT to get that working before Xamarin can even *consider* moving.)
Added a edit in the original post to clear some things up...
I think the short way to say it is ".NET Framework is the new VB runtime". .NET Core is the new place where fancy stuff goes. .NET Framework is hanging around so the $billions of infrastructure built with it can still run. MS has to say, "We'd like you to port," but the truth is a ton of code can't and won't be ported to .NET Core *ever*. So it'll be there 10 years from now, with the "It Just Works" promise, working alongside VB6 programs that people also don't want to keep using but have to. (Also by then .NET Core will have been similarly abandoned for something else.) The nice thing here is at least this time when MS has updated their runtime, it didn't come with (as) dramatic API surface changes. If you've used .NET FX for a decade, you can probably start a .NET Core project and the only problems you'll have is NuGet loves to hand you the wrong packages. I'm sure that part will get ironed out as soon as someone makes an CLI tool that generates XML configuration files that tell a script how to set up a PowerShell environment that configures NuGet properly for your project.
It'll be the margins messing it up I recon. If you resize the window it'll all go to shit.
It's also means belonging to it.
Yea... I don't think a junior should know about Big O or how exactly a GC works. Its more important imo that juniors know how to learn and understand basic principles and why they exist.
I do know asymptote notation and what idisposable is and how to use it. When it comes to solid, i've listened a 5 hour lecture on interface segregation principle and i do know some design patterns. But i haven't read about gc a class. I feel like it depends on the company what they think junior need to know and that's kinda awkward
I'm very excited to see query types made equivalent to regular old entities. No more writing extra code to use DB views.
If you have long running work that needs to be done, you should either use TaskCreationOptions.LongRunning or manually spin up a separate Thread. (Not Task, Thread) Blocking Tasks should be short lived. (IO Tasks usually don't block. So there can be dozens of those)
I finished my Bachelor 4 months ago and I can tell you these were some of the more popular questions in my C# interviews
Aight, thanks for helping out
Ofc the questions are more likely to be tailored in regards to what they plan to make you do. IMHO, a junior in a C# should have a good understanding of different data structures (pros and cons), design pattern, and should have good problem solving skills. Be able to right meaningful and non-brittle u it tests and such
Interviewing for internships is super tricky. Especially if it's a college student. While they may have some experience in what you're looking for, it's best to look for somebody with potential then somebody who can answer questions. As most of them won't be able to.
Well for starters I'm looking for an internship (probably not payed) so i guess i wont be doing anything impactfull. I do know defensive coding technices and unit testing
Hmm, interesting. Well i guess i can prepare the coding interview book and some problem solving tasks and work on those above suggested questions and hope for the best
I answered this in another thread and got a lot of crap for. There’a a lot of good stuff on the thread. https://www.reddit.com/r/csharp/comments/a9rcla/how_to_build_a_career_in_this/eclt61j/?utm_source=share&amp;utm_medium=ios_app
That sounds like a good plan. I also recommend asking them to go over their projects that they have listed in detail, and ask them to dig deeper on their contributions to group projects.
It processes client side if you use some LINQ that the provider supports
I half agree with you. In those early days, everything being a separate package caused a lot of headaches. It was worse when you encountered things like the core framework pulling dependencies on say Stackexchange.Redis or (my personal bane) Newtonsoft.json.
.NET Framework is basically legacy. 4.8 will likely be the last major release and, like VB6, it will mostly be in maintenance mode for the next 20 years.
Well, all depends on the company. But yeah a compsi bachelor / master is usually questioned deeper than a high school stud
Basically you have to buffer, as suggested. But be careful of memory allocations. And maybe look at Pipes in. Net core.
http2 ftw
Do not touch `DataReceived`, `BytesToRead`, `Read`, `ReadLine` or any other related `SerialPort` members. They're basically impossible to use correctly. *Only* use [`SerialPort.BaseStream`](https://docs.microsoft.com/en-us/dotnet/api/system.io.ports.serialport.basestream) and read it like any other stream, e.g. in combination with a [`StreamReader`](https://docs.microsoft.com/en-us/dotnet/api/system.io.streamreader).
i've never really used any sort of stream before, but ill take a look at BaseStream
You have just discovered the pain of using the WYSIWYG designer. Do yourself a favor and learn to use the xaml only, its not difficult its just a lot to digest in the beginning. Stick to a grid system and you'll be fine.
No. Absolutely incorrect.
One more option is to store the password/username in a real trust store such as AWS KMS/SecretManager/etc and template in the username and password at runtime.
Go read the documentation for those two events.
for me because I'm on the $10/mo plan and you can't use web jobs or scheduled tasks within Azure.
MainForm_Shown is called as the result of the WinForms Message Loop seeing a WM_SHOWN message. However, while the event handler is processing, that message loop will not process any additional messages. That means that nothing in your user interface will do anything. If you need to perform longer-running operations, you need to have it run as part of a separate thread or Task, then post messages back to the UI thread to update the display (with WinForms this is easily done via Invoke()).
Framework is dead, yes
 var manager = new RecurringJobManager(); manager.AddOrUpdate("RemoveExpiredCalendars", Job.FromExpression(() =&gt; new RemoveExpiredCalendarsCommand()), "0 55 11 1/1 * ? *"); That's just a stand alone command I have that simply checks if any calendar objects ended before today and removes them. Using your methods, should I assume that adding something along the lines in my startup.cs of public void Configure(IApplicationBuilder app, IBackgroundJobClient backgroundJobs, IHostingEnvironment env) { var command = new RemoveExpiredCalendarsCommand(); var myCron = "0 55 11 1/1 \* ? \*"; backgroundJobs.Schedule&lt;IMediator&gt;(x =&gt; x.Send(command, CancellationToken.None), myCron); } trying to run this task daily... And you're right, about all the blog posts being light on the side of details... yeesh I actually think they just throw darts and hope someone catches one with the quick of their palm.
Apologies. I will remove my post.
Far from but Ok.
A thread pool starts with (if I remember right) the number of virtual cores on your CPU, but if all the threads in the thread pool are being used, then every 2 seconds it creates another thread. If you have a heavy demand on the thread pool with very little awaits/long blocking synchronous operations, then you'll experience thread pool exhaustion until it can build up enough threads to run all the tasks.
Mind you this is only true for hot tasks (which includes [Task.Run](https://Task.Run)). Cold tasks (such as methods that return a Task but aren't marked with the async modifier) won't run till you await them or call .Wait()/.Result on them.
The problem is that, by default, it does this silently when your query becomes too complex. It's not great when this means that EF tries to pull 200m lines into memory to filter it down to 10 lines, because that makes your website sad. Fortunately it is fairly simple to globally disable that behaviour.
 TaskCreationOptions.LongRunning is absolutely preferable to working with raw threads. In this day and age you have no business touching raw threads unless you have a very good reason for it.
Newtonsoft's JSON library should work fine for serializing to JSON and deserializing, although if it really doesn't work for you just deserialize to a Dictionary&lt;,&gt; then do "new ConcurrentDictionary&lt;,&gt;(deserializedDictionary)". As far as ordering, what kind of order do you need it to be?
So as said above use the BaseStream property and read from the stream in a loop. Send a delimiter from the device (like you said, a \n character will work) and buffer the data until a full message is received. Something like this (sorry, on mobile) Task.Run(Async() =&gt; { var data = new List&lt;byte&gt;(); while (true) { byte[] buffer = new byte[1024]; int numBytes = await serialPort.BaseStream.ReadAsync(); if(numBytes &gt; 0) { var receivedData = new byte[numBytes]; Array.Copy(buffer, 0, numBytes, receivedData, 0); // this is probably the wrong order, but copy the data from buffer into receivedData data.AddRange(receivedData); // Ok now you have some data if(data.Contains("/n")) { // Do something with the message, then remove data from the buffer data.RemoveRange(0, data.IndexOf("/n"); }}} Sorry for the horrendous formatting, but the general gist is this; start a new thread, and asynchronously wait for data to arrive. When it does, add it on to a buffer. Then check that buffer for a full message as defined by your delimiter. If you find a message, do what you want with it, then remove that data from the buffer. As long as your code that does something with the data isn't too slow (I'd raise an event with the message anyway), you should have no problems with speed. Be aware calling Async reads on serial ports means you often receive one byte first then the rest of the data in the next loop, but with a proper message read loop you won't have any problems.
Added some in the edit, sorry
Added more info in the edit
I have thought about it and think it might be something I include as an additional service/step.. call it something like “image QA service” I need to find some time to work on it. Not had a chance recently :(
Using powershell you can get user input. So request the credentials from the user then insert that into your connection string. That’s he beat you can get. You can’t encrypt the string
EF should really only be used for transnational systems
It’s == it is*
Should be fairly easy to figure out when that happens. Love it when that’s the excuse a dev uses to write thousands of lines of spaghetti ado.net for simple CRUD
Oh man, I was literally just going through that hell last week trying to get Stackexchange.Redis running in a .NET standard project on top of an old version of Mono. Not fun.
&gt; until someone comes up with a real solution for supporting SqlGeography It is open source.....
Only if freezing potentially every dependency is an option. Package authors were targeting netstandard1x without net4x targets and pulling in all the System.* stuff from netstandard. And, what, you're going to suggest people swap their 10+ year old code bases from not touching any standard/core bits to fully migrated over to core in one shot? Get real.
Such methods are not "run" in that case. They either execute synchronously, in which case I re-iterate that awaiting them as no influence, or they represents some other asynchronous patterns (like waiting for a remote resource). In all cases, calling the Wait/Result on the awaiter has no influence in their execution. An awaiter just schedules a continuation on those tasks. If the task is never "started", then waiting on it will just block indefinitely, it will not force them to be started.
I am "being real". That's the cost. I wasn't saying you need to re-write. I'm saying you have to evaluate what it takes to move your libraries forward. With the options of open source code, you can also fork and compile in whatever you want. Again, it's your choice if you need it. For us, StackExchange.Redis and GraphQL.Net had some conflicts that needed to be resolved with assembly binding.
I am surprised they are adding winforms. I would love to hear people's opinions on starting a brand new project with winforms over wpf?
Do you know enough GIS math to reimplement it from scratch? I don't.
&gt; When should are the difference in terms of performance (O(n)) between an array and a list? I'm guessing you mean a linked list.
WinForms has better performance by default and requires less knowledge to become proficient. And it adopts the Windows theme so it looks decent by default as well. So lots of people still perfer it. Honestly, if I didn't have an open source theme that I drag from company to company I wouldn't use WPF for utility projects either.
How the heck do you write "spaghetti ADO.NET"? It's not like EF or NHibernate lazy loading where database queries can happen anywhere. God I hate lazy loading so much. My application is so dependent on it that I literally can't change my ORM.
You are confusing it with Silverlight.
To the best of my knowledge, the only way to create such a "cold" `Task` would be to explicitly use the `new Task(Action)` constructors. There is effectively never a reason to do that, and the handful of places in the framework that do it as a very specific optimization all make sure to start the task themselves instead of returning an unstarted task. In any case, neither `await` or `Wait` will start such a task: var task = new Task(() =&gt; Console.WriteLine("Task started")); Console.WriteLine(task.Status); // "Created" task.Wait(); // deadlock
I knew the easier to learn part but I didn't realize there was a performance gain
"silently"? I've been using EF Core for like year and iirc it always screamed about client side evaluation.
ur shocked that rewriting 15 years old soft made it faster? :P
The thing about WPF is that it's really easy to create surprising complex layouts where the child controls need to be sized, then their parents, then the children again, etc. in this kind of negotiation process. Throw in a list with hundreds or thousands of dynamically sized items and this gets crazy pretty fast. The trick is to make sure that you have some fixed size controls. If box A is hard coded at 150 pixels, you don't need to ask all it's children to calculate their sizes. And that matters if you have hundreds of box A's in a virtual list. Speaking of which, knowing how to ensure that virtual lists are actually virtual counts for a lot two. Your memory costs explode if you have to create controls for data items that aren't actually visible.
Yes, actually. The general trend in the industry is to add more features and leave performance as an afterthought, with each release slower and more bloated than the last.
Microsoft have basically said that there will never be a framework 5, and at the moment it's not even likely there will be a framework 4.9. That's not to say that framework is going to disappear anytime soon, but active development is ending and new language and runtime features are unlikely to be ported to framework moving forward. If you're just keeping a legacy product ticking over, that's fine. We've all got a few of those, but if you're designing new things it's time to have framework as an option of last resort. TL;DR it may not be dead, but it's still done.
At least 10 years away for that.
It has been confirmed that 4.8 is in fact the last version, barring minor security releases as long as windows components continue to use .net + 10 years.
Try the Form.Shown event. https://stackoverflow.com/questions/218732/how-do-i-execute-code-after-a-form-has-loaded
This is something I would hate having to do it on school... But now that I'm working with c# for an while, i have developed an joy from solving problems and I really enjoyed reading this article! And that image with the kids show how one can get frustrated with something that shouldn't be that hard, its just how you look at it... Wish more people realised that earlier on their lives, many people get demotivated and stop studying what they enjoy because it got 'too hard'.
Thanks for the feedback and very happy to hear that you enjoyed the article. Also, learning is a life long process anyway, so might as well keep cracking (as you are) :)
I imagine you meant transactional. I've benchmarked EF against a couple micro orm's I use and it's often just as fast.
You can also click whatever's underlined by the error squiggle and hit `Ctrl + .` to bring up that menu.
Yes
Would you believe that the GAC is based on the ideas of WinSXS and that is serving Windows itself almost 20 years now? GAC is fine - for people who take care. It enables neat OS-level optimizations on loaded modules and a host of other things. Self-contained deployment is fine, too, but .net Core, for one, doesn't give you that as easily as .net, does it? Shipping several identical runtimes around several apps won't be appreciated by your OS (disk neither, but hey who cares). People (you included) tend to give *wildly* different weights to different advantages of one or the other approach - and change opinion over time. Sure, the context changes, but nowhere nearly as much as aforementioned weights. Meh.
A lovely article brother!
That isn’t really the purpose of the HTTP protocol imo, there is a keep alive header just to persist the connection for future requests but, I think you should probably be using WebSockets if it is something that is more continuous.
Absolutely! Margins actually are not meant for positioning elements. They are for declaring space around elements. Wpf is built on the concept of layout managing controls . These are the content controls like grid, stack panel, flow panel and dock panel.
Thanks friend, glad you liked it :)
Take a look at SignalR
能在微软工作的都是技术大牛😀
Try changing client timeout to infinite or max value. Also you can google "httpwebrequest long polling"
非常好
 In China, c# is more popular than Java
 Every language has its value of existence
Perhaps you've already disabled it. This is the docs on how to do it (note, this is specifically referred to as optional) https://docs.microsoft.com/en-us/ef/core/querying/client-eval#optional-behavior-throw-an-exception-for-client-evaluation
Aggregates are the main culprit for this. Haven't got any specific examples, but chaining two GroupBy together will often cause issues. Often this is spaghetti code, but a significant portion of the time the code is clean and sensible. The issue is that client side evaluation is basically a sales tactic to gloss over the query translation being less comprehensive than EF 6 - to my mind, this should always be opt in behaviour by adding an AsEnumerable. That's very specific to my experience though - I'm sure people disagree with that and love client side evaluation.
I would try changing the [NewLine](https://docs.microsoft.com/en-us/dotnet/api/system.io.ports.serialport.newline?view=netframework-4.6.1) property of your serial port to match your end of line character "\n" and just use the [ReadLine](https://docs.microsoft.com/en-us/dotnet/api/system.io.ports.serialport.readline?view=netframework-4.6.1) method to get the string. You can do this inside of a Task to keep your application responsive. \*///// setup serial port SerialPort serialPort = new SerialPort(); //// make sure to change this to match your EOL serialPort.NewLine = "\n"; serialPort.Open(); Task.Run(() =&gt; { while (serialPort.IsOpen) { try { string message = serialPort.ReadLine(); ReceivedMessages.Items.Add(message); } catch (Exception e) { MessageBox.Show(e.Message); } } });*\
Sorta. You probably still want them on the externally visible bits of your API, because it's a option to turn the nullable reference type feature on, and it only generates warnings. If somebody calls your code from a location where the feature is not enabled (or is explicitly disabled), or where they've just elected to ignore warnings, like 90% of programmers do, you could still get passed a null value someplace you don't want it.
But firstly I need to show timer in GUI and then run that longer running operation which also start this timer.
SQL, General knowledge in databases
I'd give the response of /u/Canthros a +1. I'd still at least keep null checks for all public API. I'm fond of small minimal helper libraries for this purpose, for example: internal static class Ensure { [MethodImpl(MethodImplOptions.AggressiveInlining), DebuggerStepThrough] public static void NotNull&lt;T&gt;(T value, string paramName) where T : class { if (value == null) throw new ArgumentNullException(paramName); } } And then just quick and easy: Ensure.NotNull(nonNullStr, "nonNullStr"); Ensure.NotNull(otherParam, "otherParam"); I like this approach because: - I'm generally a huge fan of pre-condition checks and the "fail hard and as early as possible" approach. These checks are solely for **developer mistakes** that should be fixed ASAP. - The method will never be executed with invalid input arguments, not even partially. The method has clear pre-conditions, and all pre-conditions are checked before any code is executed. - I can clearly see which parameters should not be `null`, even without nullable reference types. This can be applied nowadays already. - It does not harm performance very much (`AggressiveInlining` is set, and it's *just* two arguments and an if-check). - It does not annoy debbuging (`DebuggerStepThrough` is used). - It's shorter and less to write than the usual 1-4 lines for the "normal" `null` checks, e.g. `if (otherParam != null) throw new ArgumentNullException(nameof(otherParam));` It can be expanded with additional checks, e.g. `NotNullOrEmpty` for `string`s, or `ZeroOrPositive` for `int`. If C# 8.x will get [caller argument expression](https://github.com/dotnet/csharplang/blob/master/proposals/caller-argument-expression.md), then it can be optimized: void NotNull&lt;T&gt;(T value, [CallerArgumentExpression("value")] string paramName = null) { ... } Ensure.NotNull(nonNullStr); Ensure.NotNull(otherParam);
Literally no idea what the first equation in the article is talking about.
You should look into using `async..await` or try using a `BackgroundTask`.
I tried this and it worked perfectly. Thanks a million!
Awesome. That makes me happy because it was kind of a guess
Can get rid of those magic stings with `nameof(otherParam)` too. I know you got rid if them in the end but it's a neat tidbit for other lurkers.
Oh, yeah, I forgot about those. Gonna adjust my post.
If this one doesn't top the list, I'll eat my hat. Figuratively, before anyone asks for a video.
What about Xamarin? It got mobile platforms, and I think it got PC platforms, at least there was plans for it.
I mean that's how serial works right? Anyway, regardless of what library, you'll have to treat it like any remote/network stream and use buffers, look for headers, ect.
[Symbolism](https://github.com/dharmatech/Symbolism) has some basic support for variable elimination: https://gist.github.com/dharmatech/d6d499f14c808b159689 Great article Rohit. :-)
You should still be able to encrypt the connection string directly in the web.config file and decrypt it on the fly when you use it. [Here's a walkthrough.](http://www.beansoftware.com/ASP.NET-Tutorials/Encrypting-Connection-String.aspx)
Cross posted to /r/gplcas as well.
 Task.Run(Async() =&gt; { var data = new List &lt; byte &gt; (); while (true) { byte[] buffer = new byte[1024]; int numBytes = await serialPort.BaseStream.ReadAsync(); if (numBytes &gt; 0) { var receivedData = new byte[numBytes]; // this is probably the wrong order, but copy the data from buffer into receivedData Array.Copy(buffer, 0, numBytes, receivedData, 0); data.AddRange(receivedData); // Ok now you have some data if (data.Contains("/n")) { // Do something with the message, then remove data from the buffer data.RemoveRange(0, data.IndexOf("/n"); } } }
Been looking for something like this forever, will be checking this out later!
No .NET Standard, so don't ask!!
Haha. Is there a generator for that?
The translation on this makes it a little difficult to follow in places.
Sure is. A pretty badass one, so I deserve very little credit. :\\
Srsly? Have a link for it by any chance? :)
[Retro Wave](https://photofunia.com/categories/all_effects/retro-wave) on the poorly-named [PhotoFunia](https://photofunia.com/). The entire site has hundreds of free generators, but most require a picture. &amp;nbsp; The power of the information superhighway, man... we're truly living in the future here!!
Now with 3x more Laser Raptors.
Is this the splash from fucking hotline miami?
Thanks. Also for the pointer :)
Will do. Appreciate the pointer.
You mean x=0? Its just the simplest equation possible.
So far about 10% of my installs, which is surprisingly high. Especially since you only get the option to pay after playing 30 games. I think it's probably because my most popular reception so far has been the chess variant subreddit. Also, small point, but I don't call quite call this an ad. Ads to me are intrusive, obnoxious, mind melting crap that lures you into addictive pointless games, purchases, and activities. My game will never have ads, except for my unskippable popup asking for 3$. I was actually pretty confused for awhile whether to say if my app has ads. Apparently it doesn't since it's not penny-monetised with an ad service.
"internal" can also be used for breaking down complex logic in a way that can be unit tested. Again, with the InternalsVisibleTo attribute. Usually, you only want to unit test your public methods and properties, but sometimes it's best to test an internal method in isolation.
/r/sbubby
Looking at this makes me feel like I'm 9 again. Very well done.
The big long underscore followed by the (1) made that more difficult to understand than necessary.
 WinForms does not have better performance by default. It has better startup times for smaller apps, that is true, but WPF being both hardware accelerated and supporting ui and data virtualization by default makes the apps much faster
In EF Core 3.0, LINQ queries will [no longer be automatically evaluated on the client](https://docs.microsoft.com/en-us/ef/core/what-is-new/ef-core-3.0/breaking-changes#linq-queries-are-no-longer-evaluated-on-the-client).
WinForms has highly optimized controls implemented in C++ at the OS level and far simpler UI elements to start. Saying WPF is faster than WinForms because it has hardware acceleration is like saying that a 40 ton earthmover is faster than a Ford F150 because the engine is bigger. WPF can do a lot more, but there's a big cost associated with it.
Good. Thanks for the info.
&gt; is like saying that a 40 ton earthmover is faster than a Ford F150 because the engine is bigger. No it's not, take the linux kernel vs zircon for instance. Linux is over 15 million lines, Zircon is 10s of thousands, yet they know Linux's kernel will always run faster. How? More code can mean you can make more scenarios to optimize better. WPF is heavier in terms of memory, yes, but one of the benefits you get is improved performance. Bigger and more code does not mean slower.
I tend to avoid `Grid`. I find combinations of `StackPanel` and `DockPanel` can handle most situations, and are easier to reason about.
WoooOow I Always wanted that. What is the UI Framework you are using ?
Yes, and in some scenarios WPF is faster. But that doesn't contradict what I said, which is by default WinForms is faster. I even went into detail explaining the common behaviors that make WPF slower unless you have the necessary specialized knowledge.
Use \[BindProperty\] attribute on Authors Also, post the front-end razor syntax so we know for sure.
Thanks for the feedback. I can try and change that later. What to you would make more sense? Long space?
Nah, it’s closer to far cry blood dragon
The importance of unit tests, test coverage and TDD. Also if you’re being given simple projects maybe look at doing them using OOP, TDD or other more complex patterns to make it a bit harder for yourself.
Hello, I hope you're well today! I think it largely depends on #1) what you'd like to do and #2) (to a lesser extent) where you're at as far as current skill level. To expand on those two: \#1) At least for me, I'm more motivated, I put in more work, I care about the end result, etc... much more if I'm doing something I think is cool and interesting, something I like. It helps keep me excited about programming and learning new things. Also, thinking about your end-goal with learning software development will help direct you toward what new things you might try to learn. If you want to be a web developer, you might start learning ASP.NET or another web framework. If you think you might like to develop mobile apps, maybe start looking at Xamarin. Or if you're interested in desktop applications, you might look at WPF, just to try something new from WinForms. The world is your oyster! \#2) I think this one's only important as it dictates whether there might be any knowledge gaps that could/should be filled in. So like, delegates, generics, regex, testing, any of those concepts that are a bit more advanced but still have widespread application in C#, I would consider those essential. If you already know a lot of that, you're in a great spot! \+++ IMO those are two things to think about that might help decide where to focus your learning going forward. A few other quick ideas: \- Working with NuGet and packages, becoming familiar with that ecosystem and integrating packages into your own projects. \- Along those lines, you might create your own class library to help with learning/putting into practice code re-usability. \- Working with databases. I think databases are so prevalent, it'd be good to have experience with SQL or a NoSQL like MongoDB, something like that. \- Learning version control, probably git, unless you think you might use something different going forward. But git is probably largely industry standard and would be great to start with. \- Digging a bit deeper into design patterns and best practices, if you're at that point. In my experience, me looking at those a bit has helped add a bunch to my toolbox as far as structuring my programs. I hope this helps, best wishes!
I too am a C# Developer. I own my own company that produces software used by thousands of people, but business has been slowing a bit lately and I'm wanting to look for other opportunities, hopefully with smaller companies doing SaaS. My C# knowledge is very extensive, especially around .Net Core and C# 7+8. I do SQL, REST, WPF, UI Automation, and a ton of other stuff. I specialize in performance and stability. Would be happy to hear from anyone hiring!
The front end I was thinking of using was Blazor.. I can’t see why it wouldn’t work on the NAS as long as your NAS can run docker containers... I really do need to start work on this again considering how much interest I am getting!
I have a private github repo where I stash stuff in markdown files (or other file types, but preferably plain-text of some sort). VSCode + some markdown extensions gives me a place to brain-dump without caring too much about style or organization. I have a 2nd repo where I do programming challenges (that one is public). Each top-level directory is a different puzzle / problem. No real organization here either, I'm just scratching my itch. If it starts to look like something with legs, I'll move the code to its own repo.
synthwave c# coding playlist when?
Learn how to use LINQ - https://code.msdn.microsoft.com/101-LINQ-Samples-3fb9811b
&gt;I said its not OCP, nor SRP. That's not a real argument. SOILD is what you use when you can't actually justify your opinion.
Everytime I see a new edit of this meme I immediately hear Jump by Van Halen playing in the background
As long as your data class is immutable it's mostly down to preference. Problems arise when you have a data class with public fields which can be directly modified by services, it's a perfect recipe for spaghetti.
Reading that three times, I still have no idea what you are trying to say. Where's your concrete, technical reason to challenge the design? What specific problems are you foreseeing. The concept of a "code smell" is just a way of saying "this doesn't feel right, let's look into it further". You don't argue whether or not something is a code smell, you just use it to decide what to look at.
Just have the equation by itself on its own line. If you want to give it a name, put it under the equation, like you would an image or graph.
My question is, when do I know or should be worried that data class is something to refactor? So far, I only see it being the case, when oo flow is needed (polymorphism). Anaemic design implies on procedural flow.
By immutable, do you mean fields with get only properties or in general - access through properties?
Did omnisharp install correctly? I noticed it sometimes fails and random stuff no longer works. And afaik, omnisharp provides this functionality, not vscode
Optimally get-only properties but you might have to use properties with private setters if you want to use entity framework.
What's your alternative? Copying the data from one object graph to the next every time a field is changed? Encapsulating business logic into a data model is fairly basic OOP/domain driven design patterns. When done correctly, it provides a good separation between generic concerns (e.g. validation, calculated fields) and service specific concerns. More on the topic https://www.infoq.com/articles/CSharp-Models
I simply find model processing itself (excluding persistence) being too much for itself. Thus I prefer many small pieces. Again, this kind of turns into a shotgun surgery, so that's why- silly me- here confused asking for more experienced colleagues to guide me🙂
While I don't have a strong opinion as to which way is better, I've naturally trended towards anemic models. Assuming both techniques are done "well", this seems like another case of consistency being more important than which particular style is used. It seems like a difference of `(Service) -&gt; (DDD Object)` vs. `(Service) -&gt; (Domain Logic Object) -&gt; (DTO)`, where `DDD Object` is essentially `Domain Logic Object + DTO`...so /shrug Not to dismiss your concerns, but there are certainly much bigger pitfalls to worry about, such as using the same data objects for your persistence and web service layers.
Immutable is more than just read-only. Not only are the properties are get-only, but they also can not be changed by even by internal methods. Additionally, the values the properties return must also be immutable.
When it becomes a problem. Generally speaking directed refactoring should follow this pattern 1. There's a bug 2. We fixed the bug 3. The reason the bug occurred is X 4. We see X is occurring in these other classes 5. Refractor to correct X Consistency refactoring is somewhat different 1. X uses pattern A, Y uses pattern B to accomplish the same thing 2. Decide if A or B is preferable 3. Refractor so all of them use the same pattern Consistency is far more important than ideology or even simplicity. Your real "code smells" are things that look different without reason.
Oh yes. So for example if I have such a data class for a team containing a list of object, it should not return a List of players. It should return IReadonly list :)
But what does the _(1) mean?
Lovely! I do agree! Though anaemic design implies on procedural flow (external, asking). For example, to refactor many if/switch cases depending on some property we would prefer using polymorphism. Would you consider this being inconsistent?
Noted, let me see if I can edit.
It means the equation is tagged with the number 1 for later reference. But this is obviously creating confusion. Will try and update later today to something more obvious.
Anemic Domain Models are antipatterns, use Rich Domain Models instead. By abusing ADM you are not using OOP at all, data and behaviors are supposed to go together. Also from SRP's point of view, data classes violate SRP since S = Single, not zero. Having too many responsibilities is poor class design, having no responsibility is also not the right design.
You've hit on an interesting point and it depends on how you architect your system. Sometimes it makes sense to have the code that operates on an "Account" in the Account class. Sometimes it makes more sense to have it in some sort of Transaction class that coordinates two Accounts. At this point the Account may still have a "Debit" method, but if it has to call in to check for cleared balance, uncleared balance, overdraft extensions then your "Account" class suddenly got heavy. Or not. If the Account is a remote entity perhaps you need to wrap the Transaction up in an extra layer of transactional resilience. Account may well be just a pointer (bad choice of words, an indicator of) the details required to ask the system to transfer cash. Once you get to the externalisation of functionality and serialisation of operations then you start to ask yourself "Why isn't this mutator code external to the data?". &amp;#x200B; It's not an easy one to answer with a yes or no, you have to understand your code, your project and the system you're supporting. Neither are wrong, but you're not wrong to suggest your alternative.
I meant that if you want to use anemic domain model it should be immutable. In the case of a rich domain model, it's not that important.
You can't change an event in time, it happened. So when something new happens it's a new event. You can record this in two ways. One: have a "Time" object and add an event to its list of things. Or Two: write a new event of what happened next. Two works if you don't have a "Time" parent object. &amp;#x200B; One changes the original record, Two adds a new record. Both work in different situations unfortunately :)
1: x=0
1: x=0
Framework will be receiving no major updates besides security fixes. It’s dead. It’s legacy.
Dead and legacy aren't the same thing. Legacy code still runs. And people will still write new code against it, probably for many years to come. In the case of .NET Framework, there are some things that you simply can't do on Core such as work with SQL Server's geospatial data. Contrast this with Silverlight, which is losing the browsers needed to run it.
You can represent the set of changes that happen to a data model as a sequence of applied changes to an immutable model and then collapse them in bulk in a transaction and replace the previous model with the new one as part of a commit. Alternatively you could make your backing data an immutable dictionary and cast your way to victory (this is a bad idea): public class MyModel { readonly ImmutableDictionary&lt;string, object&gt; _data = ImmutableDictionary&lt;string, object&gt;.Empty; public string MyFoo { get { if(_data.TryGetValue(nameof(MyFoo), out var r) { return (string)r; } return null; } } public MyModel WithFoo(string newFoo) { return new MyModel { _data = _data.SetItem(nameof(MyFoo), newFoo) }; } } and so on (reddit code likely slightly wrong).
Generally speaking I avoid polymorphism if I can just use switch statements. Deep inheritance trees are usually a bad idea for data models. To refractor a bad example, LameDuck doesn't inherit from Duck, which doesn't inheit from Brid and Animal. You should have one class called Animal with Species and IsLame as properties. Those properties may encapsulate if/switch statements.
&gt; For example, to refactor many if/switch cases depending on some property we would prefer using polymorphism. Consistentcy means having a preference and sticking to it. Even if it's the wrong preference in my opinion, I would still support it over having a mixture such that developers don't know where to look when making changes.
Yes you can, but it takes an ungodly amount of work to do it right and has serious design problems when mutation B is dependent on the change made by mutation A. Sometimes it is necessary, such as infinite undo. But if we're talking about a typical service request where you don't need that level of traceability then there is no benefit.
Recreate that when you have an object graph that's three levels deep. And for giggles, do some timing both on how long it takes to code and how expensive it is in memory/cpu time. I suspect that you won't be happy with the results.
The problem that a lot of programmers get into is that a lot of applications don't really have a lot of "domain logic". A lot of websites or services are basically just CRUD engines with a little bit of validation and maybe a handful of "if this, then that" event triggers thrown in. I have worked on apps like this where something like 30% of all the code we wrote was just book-keeping logic so EF would serialize our objects correctly to the database! The remaining code was either mappers to and from DTOs for sending over the wire or basic data validations, or structural stuff. The advice of "you need to have a rich, non-anemic domain model" only applies if you're working in a rich domain. Chances are pretty high (at least in my experience) that you probably aren't working on a project like this. In that case, of course your domain models (if you have domain models separate from your view models and data models, which many setups don't require or even encourage) are going to be very thin. Don't force-fatten any class just because somebody told you that bigger is better. I would generally say that domain model classes shouldn't take any (or, very few) dependencies and shouldn't do much orchestration. If you need to delegate work, you're probably better having a service class to orchestrate everything and manage the dependencies. A lot of what you see as the "canonical" examples, like a CalculateTotal method on an Order class also really don't work well in practice. Order total calculations can depend on things like local tax rates, currency conversions, coupons and sales pricing and other factors, which won't live in your Order class. You're going to need to delegate those things to dependencies, and you'll probably want an OrderTotalCalculator class to orchestrate everything. The order will want some of the methods to get components of that calculation, like getting the taxable and untaxable subtotals, or getting product dimension information to help with shipping cost calculations. Many anti-patterns tend to be based on personal preference. Things that I, as the author, find difficult to read, modify or manage. There are some things that large numbers of people have generally agreed on, but that doesn't mean they are universal rules. Figure out rules that help you produce better code for yourself and your team, be consistent, keep complexity low and readability high.
Collections and enumeration * know all collection types provided in the BCL * understand how enumerators work * write a custom collection from scratch Garbage collector * understand how it works * best practices to make it more efficient Threading and memory model * understand threads and tasks * understand atomicity and volatility * experiment using the `Interlocked` static class * mutable vs immutable class/struct Those are advanced topics that I expect a candidate to be able to explain or reason with during a job interview. I'm not interested in someone that just knows the language (anyone can do it), but rather with someone that understand how to use it for the task at hand.
&gt;I would generally say that domain model classes shouldn't take any (or, very few) dependencies and shouldn't do much orchestration. &amp;#x200B; Absolutely 100% agree... so many of the articles I was reading through today that were demonizing anemic models had examples that were laughably simple compared to a real world system. &amp;#x200B; \&gt; Order total calculations can depend on things like local tax rates, currency conversions, coupons and sales pricing and other factors, which won't live in your Order class. Exactly. This is why the rules are implemented separate from the data. Trying to implement behavior inside a data class without coupling it to a handful of other data classes,pulling configuration settings from three or four other sources and wrapping it all up to in some runtime defined output format? Much better to have it be exactly what it was meant to be... "This is the order it is composed of this, I don't care how you use this information but if you want it to be considered an order it is composed of this information"
A correctly written n-tier app is structurally pretty much the same for a apps of all sizes. In almost all cases the anemic domain model is the correct choice.
That's not actually making the class immutable, it's just a really expensive way to store the state.
How would this be mutable? If each property type was immutable and the backing state cannot be changed, this seems like it would be immutable to me. I agree it is a really expensive way to store the state.
The single responsibility of a domain model is to model a domain object.
Uh, what? What makes you think VSCode can't do this? You're not doing something right.
What if you are using a functional language?
VS Code &lt;&lt;&lt;&lt;&lt; Visual Studio for C# Pick up the community (free) version
Get Visual Studio, not VS Code.
I've often found that the tutorials and samples the MS provides are a good start. Keep in mind that their examples are just to demonstrate one specific thing and are therefore seldomly production-ready. Also, no matter where you look on the web, you're bound to find more older, out-of-date examples than the latest and greatest. But I'd start here: [https://asp.net](https://asp.net). Go the the "Learn [ASP.NET](https://ASP.NET)" section.
Thanks for the reply. The URL I am wanting to connect to is an HTTP one, can I still connect using websockets or does something special need to be done to the server? I notice it uses a different prefix ('ws'). Am a noob to this so any help is appreciated.
Yup. Run the app pool as the user/pass. Don't need to store the credentials in plain text
There’s good courses on Pluralsight. I would suggest just start making APIs and learn as needed. It will pay off, but definitely check out YouTube and Pluralsight. I recently published a video on the dotnet core CLI in case you wanna check it out. https://youtu.be/HUvBSCp9UMo
Personally I think what you're wanting to do is the way to go. It offers full separation of concerns and lets your frontend focus on being a React frontend, and your backend focus on being a RESTful API. React falls out of favor and/or you want to switch to something new? Get bored of having a .Net Web API and want to try something else? You're totally free to do so if both are fully decoupled.
It is kind of special yeah, normally you have to basically have a websocket endpoint on the server running
The class is being changed each time you make a new property dictionary instance and assign it back into the mutable dictionary field.
https://open.spotify.com/user/123788171/playlist/65nDJeorUCZ5PEMXuyt8bh?si=n27jf08wS1qjo2A5oetEXg this is my work playlist
Yes, it turns into violation of L too soon. 🙂
Is it .net core? If you have a VPS you could run it there for around $5-$10/mo? I know you said free though - I don't know where you can host .net core (or framework for that matter) projects for free.
Information: \- I'm using Microsoft Visual Studio. \- C# \- Windows Forms Application \- .Net Framework 4.5
If your requirement is specifically for Virtual Machine, then 'Vultr' and 'AccuWeb' are good option. For shared .net hosting, 'A2Hosting' is a very good option.
Oh wow, thanks! I completely overlooked that typo 😅, got it working! Mostly wanted to try if I could (as practice 😊). In hindsight... You're right, though. I changed it so the list just hangs around in the other class, instead of giving it it's own class.
Neither Atom nor Visual Studio Code are IDEs; they are (beefed up) text editors. While that is sufficient for some things, a full fledged IDE will always be more suitable. They offer a lot more functionality. As to your actual issue, to me it sounds like your csproj isn't set up right. As you may have guessed, an IDE can help you with that.
My rule for choosing between an all-public structure and an encapsulated structure is, if the elements can be changed independently without breaking any business rule, then it is a ADT/DTO/anemic class; if the elements must conform to invariants, then it is a domain class.
anyone know what fonts are being used for this?
Brilliant title.
Thank you really much for your help :) gonna look into everything you mentioned. Have a nice day!
Thank you for sharing! I dont know these things too well know but I will look it all up. Have a good one! :)
Alternative strategy: * go to the wikipedia page of C# (here: https://en.wikipedia.org/wiki/C_Sharp_(programming_language)) * write down any term or definition you don't understand well or would like to know more about * research those items * try to write some basic applications that illustrate those (one at a time) * fail doing so * do some more research to understand why you failed (if you did not fail, try harder) The last points especially are very important. There is a limit of what you can learn by reading a book or a blog post. Writing code yourself and making mistakes will teach you more.
“Once I’ve done all of that and got the basic thing working” This is my problem with many tutorials. /r/restofthefuckingowl
This is a quick overview of how the app evolved ... not a "How to create a AVS client in C# that runs on the Apple Watch" video. I'd have been there for five hours instead of five minutes. I could do a deep dive into how the iOS and WatchOS client works as my next video ... is that what you are looking for?
I've used [blacknight](https://www.blacknight.com/) they're pretty reliable.
In addition to the other comments: Unless you are actually transforming layouts clean up spurious render transform origins. They show up because you dragged the wrong handle. You specify a design height and width but not a runtime height and width. Do you want the form to be resizable? If no, specify the actual height and width of the page instead of design height and design width an then WYSIWYG. If you do want a resizable form, consider how you want things to resize. Do you want fixed control sizes anchored to edges? If yes, specify the width and height of that control, set the alignment to the edge you want to follow and set the margins. Also set the margins of the side you are not anchored to to 0. If you want things to resize, consider using a actual grid and/or combinations of stackpanel and dockpanel. I personally don't like stackpanel for overall layout, but it is useful for keeping labels and controls together. I can post some different examples based on your code if it would be helpful. Grid and dockpanel for just about all overall layout. If you do resize, consider limits on sizes using max and min width/heights (for the page and the controls) The rest is just general and not specific to the layout question. Remember styles. Anything that will be common to lots of controls should be in a style. The style should be a resource at the right level (could be global, could be local to a single grid). Personally I don't name controls unless I expect the code behind to touch them, expect grids which I name for the section of stuff so it's clear what the structure is. I also try not to have the codebehind touch controls if I can help it, unless it's strictly a view concern (I aim for MVVM whenever possible). If you're doing MVVM also set the d:DataContext in the xaml to point to the viewmodel. That should enable intellisense and similar useful functionality for your bindings.
Actually yes. A deeper dive is far more useful in this instance.
Sounds good, thanks for this feedback. I wanted to start with a "big-picture" overview of how an app evolves to reach iOS, WatchOS, MacOS, WearOS, Android and Tizen whilst re-using as much as possible, before going into details. If the next video is titled "The Rest of the F\*\*\*\*\*\* Owl", at least one person will know why :-)
Hi, it is difficult to answer what essentially skills are, since in different goelocations and different companies opinions vary. It also heavily depends what you want to do with c#. For example for desktop application I would say you will need to known WPF and mvvm with all things that come along (basically solid principles ). I would say this is essential, but I am aware that there are many parties who will disagree
Name it "The Rest of the Flipping Owl" :)
It is odd, I've been dealing with that too. If you select work or school account on project creation it scaffolds differently than if you use connected services in the project folder.
It would be better too if there was a documentation for people using it in non-razor-mvc project. I use dotnet core as a WebApi and everything that's scaffolded is useless. You can look on pioneercode, I've found a few articles there that might be helpful to you.
SRP = one reason to change. Reason #1: you need to add a data member.
Hi, is this content in a blogpost? Personally not a fan of video
No just a video because I wanted something I could animate and talk over. I will look at releasing both a blog post and video in the next one though. Thanks for this feedback.
I prefer Oxyplot.
I have never heard of them. Thanks for the tip. Always on the hunt for somthing better
I've done this a few times recently, I can't share anything custom that I wrote for my clients but I'll do my best to outline the steps that I took to achieve a more or less "out of the box" identity experience. 1. Create a new project without authentication. 2. Make sure to add the EF packages relevant to your implementation. 3. Add -&gt; New Scaffolded Item -&gt; Identity 4. Package Manager Console -&gt; Add-Migration ScaffoldIdentity (or whatever you want to call it) 5. Package Manager Console -&gt; Update-Database &amp;#x200B; At this point, you can either take a look at the code in your migration file or use a database tool such as SSMS to check that your tables were created correctly. My database tables look like this: From this point, individual user account management is taken care of out of the box, unless you want to customize something such as adding a field to the user. Managing other users and roles from the UI is something else, you will need to write code that suits your use case. It is pretty straightforward as long as you stick with the built-in UserManager and RoleManager classes. &amp;#x200B; A good example of the UserManager is already in Pages -&gt; Account -&gt; Manage -&gt; Index.cshtml.cs. Using the RoleManager is pretty similar to UserManager but there is not an example built in. [Here](https://gist.github.com/CodyJohnston/76ac24ffc0998a2adcea6f7bc2b01b1f) is a very simple example class that shows basic usage of the RoleManager in the context of a Razor Page. I didn't write the HTML to hook up to it, I'd be happy to help if you end up needing it. &gt; (I assume) compatible with their \[Authorize(roles="...")\] annotation. Correct. &amp;#x200B; If you are interested in having more granular access control, you can look into RoleClaims and Policy-Based Authorization as well, which is a pretty cool feature. &amp;#x200B; I hope this helps you out. If you have any other questions regarding overriding User, Role, UserManager, or RoleManager defaults, you are welcome to message me and I'll be happy to help with what I can.
Language!
I also prefer "anemic" data models. The four principles of OOP are perfectly compatible with the idea, and IMO it is more true to SOLID (though in all honesty, the more I grow as a developer, the less weight I give to certain letters in that acronym). I'm partial to implementing OOP in a way such that "objects" are the things that **interact with** the data model to do interesting work like validation, presentation, manipulation, persistence. For example, I have personally never agreed with sentences like "this object should know how to save itself to a database and load itself back from the same", though the exact reasoning for why I disagree has changed as I have matured as a developer. I also recognize that this is a **preference** based on **opinions**, and that perfectly sane and reasonable people can think the exact opposite of everything I said above (and this may very well be me in a few years, depending on what experiences happen that might give me a different perspective).
I just installed Rider and it seems that everything is working okay now. Thanks for the help
No just a video because I wanted something I could animate and talk over. I will look at releasing both a blog post and video in the next one though. Thanks for letting me know.
There recently was a post here about Clean architecture, you should look into that.
&gt;I tend to avoid `Grid`. I find combinations of `StackPanel` and `DockPanel` can handle most situations, and are easier to reason about. Me too, but sometimes, the layout I have in mind just doesn't work unless I use a `Grid`, and then when I start using a `Grid`, it's done before I know it. Most recently, I wanted to have different-sized buttons on the left and right, and then a link in between them on the exact center of the window. I can `MinWidth` the window to ensure that nothing overlaps, and then plop the link in the center of the same row as the `DockPanel` with the left and right buttons. I've also reused the same window with different sets of controls that get displayed depending on an enum value that doesn't change throughout the lifetime of the window. In addition to the enum value showing / hiding the controls, it also changes which ones should expand to fill the window. Name a couple of `RowDefinition`s, swap their heights in the codebehind after initialization, and go to lunch. It's so much more powerful.
https://www.youtube.com/watch?v=x9MzRGyotn8
Delegates. Learn delegates forwards and backwards. Delegates are often better than interfaces when writing generic code. In my project, I'm using delegates on data structures, sorting algorithms, graph searching, symbolic mathematics... Pretty much everywhere. https://github.com/ZacharyPatten/Towel You can also break type safeness in C# using generic type and runtime compilation, and you can store the runtime compilation in a delegate. This allows you to perform generic mathematics. Interfaces have their purposes, but they are too restrictive in C# compared to using delegates. And delegates are faster usually.
Will do, thanks. I've been programming for 35 years and learned a thing or two on the way, but the nice thing about our industry is that there is always more to learn. I've not really talked about the architecture, just the code organization, but I'm pretty happy. Ultimately I am happy to have actually shipped something to several app stores, that people find useful, and that I can re-factor at will (as I did this weekend), with a core tested library that I can share across all the platforms, with clear abstractions of the platform-specific dependencies.
This might be helpful: [https://itnext.io/a-simple-mvvm-implementation-in-client-side-blazor-8c875c365435](https://itnext.io/a-simple-mvvm-implementation-in-client-side-blazor-8c875c365435)
Agree not sure who up voted this guy
I looked into this and the issue with line length is that it requires knowledge of the language to know where it is safe to add a line break, editorconfig don't want to take this burden on
Thank you for your advice! Currently researching all the terms you and the others mentioned :)
It was assigning it to a dictionary field of a new instance via an object initializer, which doesn't work (like I said there are probably errors in code typed directly in a reddit text box). Here is a version that compiles: public sealed class MyModel { private readonly ImmutableDictionary&lt;string, object&gt; _data; private MyModel(ImmutableDictionary&lt;string, object&gt; data) =&gt; _data = data; public MyModel():this(ImmutableDictionary&lt;string, object&gt;.Empty) { } public string MyFoo { get { if (_data.TryGetValue(nameof(MyFoo), out var value)) { return (string) value; } return null; } } public MyModel WithFoo(string newFoo) =&gt; new MyModel(_data.SetItem(nameof(MyFoo), newFoo)); }
If it's .NET core you can use the Secret Manager https://docs.microsoft.com/en-us/aspnet/core/security/app-secrets?view=aspnetcore-2.2&amp;tabs=windows It's not encryptet as of now, but might be in the future.
Okay. This one is now immutable.
I just see Vice City haha
I found it to be pretty useful as is, and I'm glad you shared this with us. Doing individual aspects would be the next step, but this tutorial is general enough and it shows the progression over time that explains why you made the decisions you made.
Well, I'm using razor in mvc, I'm just not using "razor pages". It's a terrible name
I don't use dotnet for the frontend at all. There's no point. My frontend is made with vueJs. It's been created for what it does : display information to the customer. My backend is made with dotnet core. That way it can run on any environment, it's clean, easy to maintain. WHY THE FUCK would I do my front end with dotnet ? What does it bring ?
TL:DR &amp;#x200B; We use identity server and to make things easier in dev I want to stub it. *ClaimsIdentity* takes a second argument *AuthenticationType*. Its important you set this property. You can set it to what ever you like. Once set *IsAuthenticated* will return *true*.
Thank you for sharing this. Also, thank you for taking criticism so well.
You can check Xcode benchmarks here https://github.com/ashfurrow/xcode-hardware-performance Not actually Xamarin.Forms but I think you can get opinion about MacBook VS iMacs performance
Thanks ... I learned a lot dealing with App Store reviews :-) I'm thinking of doing a post on that ...
Removed: Rule 3, Rule 4, spam.
Removed: Rule 3.
I always struggle to read code pasted in Reddit so I haven't fully read through what you are doing. First thing that comes to mind though is to create a new class that encapsulates the notion of a 'dice' it would have a value or side property this would be an int and an image property which would contain the image loaded from the resource file you can then implement some custom functions (or if you feel like getting advanced overload the addition operator) for adding two dice together
Removed: Spam. Please review and follow the [guidelines for self-promotion on reddit.](https://www.reddit.com/wiki/selfpromotion)
I have seen that before but it doesn't mention the MBP Core i9 2018 32GB RAM and iMac Core i9 2018 64GB RAM.
Just want to point out that `Authorize(Roles = ...)` only uses the roles defined as a comma-delimited list for the value of the `ClaimTypes.Role` claim. The roles value comes from the claims collection from the `System.Security.Claims.ClaimsIdentity` class. So, when the authentication middlewares goes to create a `ClaimsPrincipal` for the user, which is functionally a collection of one or more `ClaimsIdentities`, the resulting identities (and consequently the resulting principle) will have a collection of claims. Assuming any of those identities defined roles using the `ClaimTypes.Role` claim, those roles will be available to be used in the `Authorize` attribute. What I am saying is that the use of roles in the `Authorize` attribute doesn't rely on ASP.NET Identity at all. ASP.NET Identity is a membership provider that also provides the mechanism in which those EF entities get translated into a `ClaimsIdentity` and `ClaimsPrincipal`. Other auth mechanisms (like JWT bearer, oauth, openid, google/facebook/twitter) are all about verifying an expected form of credentials and, upon successful verification, creating a `ClaimsIdentity` to ultimately be added or merged into the final `ClaimsPrinciple` to be used by the web app for things like authorization.
Created a extension that runs T4 templates on build time. You can select templates to ignore, and you can also set to run after build. &amp;#x200B; [TTExecuter](https://marketplace.visualstudio.com/items?itemName=TimMaes.ttexecuter)
The iMac will outperform the MacBook but personally I need the ability to move my complete workstation to various clients so I have a MacBook. I would just pick based on your mobility needs. Either one will do you just fine.
I don't immediately see anything wrong with your logic here. It looks like you're adding two ints, perhaps it's a binding issue if you're using wpf either that or your variable scopes are wonky. Creating a dice class would be more elegant but it'd be overkill since it would just be a thin wrapper around Random. If you upload your entire solution somewhere, that'd be better. Also, you shouldn't need to but it is possible to go from string to int with int.Parse. Going from. Image to int would be a lot harder and would be more work than it's worth.
Still babysteps for Blazor ATM. Best practices and SoC related stuff will pop up very soon I think.
Okay I will try int.Parse basically when I run this I’m getting error that says cant Convert string to int or can’t covert image to int.
Both will be fine. Decide if you need to develop on the move or whether you are fine working at a workstation. Things have come on since Ivy Bridge.
https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/azure-apps/?view=aspnetcore-2.2#deploy-aspnet-core-preview-release-to-azure-app-service
Will having 64GB or 32GB RAM make a huge difference?
That's what I was thinking as well but wanted to hear others' opinion considering the significant cost of the machine
 diceImages might be declared as an int\[\]/List&lt;int&gt; when it should be an Image\[\] or List&lt;Image&gt;. If you don't want to upload your code, a screenshot of your error list would be good.
Yeah, I totally agree. Reading this is cancer
Thanks! I was purely just trying to deploy from Visual Studio directly... on top of being new to Blazor I'm also pretty new to Azure, so I just figured that was the best way. I'll give that a shot later on tonight.
iMac will be much better than MacBook Pro. In past I have 2013 iMac (27 inch, lowest specs) and 2013 15 inch MacBook Pro (highest specs). But iMac was near 2 or 3 times faster. I think the same will be with 2018 models. What you really need to do is to upgrade iMac fusion drive to ssd. And it will be a monster computer! P.S. Currently I have 2018 15 inch MacBook Pro not customized high specs. I prefer portability:)
Thanks for your comment but it's scared me a bit :-( Does form factor make all that difference? Is that because of thermal throttling?
You'll be poorer :) Unless you're doing 4k/8k video editing professionally you won't need it, but if you have the cash to splurge and you want a machine with a little more future proofing, you could get 64 gig. I don't know if modern Mac desktops still have expandable ram, I assume so. If that's the case, go 32 gig and take a hit later if you really need 64 gig, but I doubt you will.
`int.Equals()` only uses objects (its signature is `bool Equals(object, object)`) and since objects are reference types they cannot be saved as constants. When you write a value (like `int.Equals(0, &lt;something&gt;)` ) the compiler sees it as a constant value. Since the method uses objects and not ints it will try to cast it into an object, but those are not allowed/cannot be constant. Even if it did you should avoid it since casting primitive value types to objects (which is called boxing, and unboxing for reverse) is expensive. It is much easier both to write, maintain and read `==` instead of `int.Equals()`. All types that are comparable by `==` implement the IEquatable&lt;T&gt; and/or IEquatable interfaces which provide the `Equals` method, or vice versa depending on how you look at it. `a == b` is basically just syntatic sugar for `a.Equals(b)`. If you use `==` or `Equals()` you won't have to switch types either. Hope this helps and good luck!
Yep, iMac has much better cooling so Apple can insert better components. For example iMac uses desktop level CPUs (the same for graphic cards but they are not critical for programmers). MacBook Pro has mobile friendly CPUs and GPUs. Latest iMac with highest specs for example has 9900K 3.6 GHz octa-core (Turbo Boost up to 5.0 GHz) 16MB cache, the Intel’s highest desktop CPU you can buy. And MacBook Pro has 2.9 GHz i9-8950HK six cores, up to 4.8 GHz in Turbo Boost and 12MB cache, it is mobile friendly class of CPU. You can compare these models on Intel site. So to summarize, of course it’s my opinion, if you need performance - you will buy iMac. If you need portability but still very powerful computer - you will buy MacBook Pro.
hah, thank you. I did (!fields.Agent\_ID.Equals(0) ? ct.Agent\_ID == fields.Agent\_ID : true) and its working.
You can as a self contained app from VS but I like the Docker way best.
You are looking at the problem backwards. In your `rolldice_Click()` method, you are choosing some random numbers to pick the images of the two dice. Then you are trying to figure out what numbers they represent. Instead, you should be picking random numbers that represent the numbers on the dice (i.e. a number between 1 and 6, so you'll need to change your call to `rand.Next()`). Then, you can find the image that corresponds to that number. Hint: if the number is 1, the image will be `diceImages[0]`. If the number is 2, the image will be `diceImages[1]`. Etc, etc. And another hint: when you write `diceImages[xxx]`, the xxx in the square brackets can be an equation (the correct word is actually an "expression"). In fact, looking a little bit closer, you're almost there already, because I've just spotted your `dice` array, which very nearly contains the values of the dice. **To answer your original question, though:** Can you convert an image to an int? Yes, using image processing, which is not something you should be trying to do as a beginner. Can you convert a string to an int? Yes, with `int.Parse()`, or, for better handling if the string doesn't contain an int, `int.TryParse()` - but I don't think this will help your problem, becaue you don't have a string to work with.
The equals function you are using is expecting an object and not an integer. Why not write it as... (fields.Agent\_ID != 0) ? ...
It isn't spam, it is open source, and free and contains 1,100+ lines of C# code, &amp;#x200B; how is that SPAM. I am not selling flip phones. &amp;#x200B; Reddit sucks, you don't appreciate free code someone works on 16 hours a day for 6 months, so screw you.
yea, I did (!fields.Agent\_ID.Equals(0) ? ct.Agent\_ID == fields.Agent\_ID : true) and it works. &amp;#x200B; I am making one query with multiple int params, and if one is blank then just ignore.
No, I don't know anything... However, I'd suggest that in most cases, writing method syntax becomes second nature very quickly. Any developer who isn't confident with it would actually be better *without* a tool, so they can get familiar with the syntax quickly and understand it properly. And for the few circumstances where writing method syntax isn't straightforward (joins, group queries, etc), you're better off leaving it as query syntax because it's far more readable. Sorry that doesn't really answer your question though.
Your mixing-and-matching of conventions is giving me a brain haemorrhage. `fields.Agent_ID == 0 || fields.Agent_ID == ct.Agent_ID` is the criterion you seek.
Nice! &amp;#x200B; It actually worked out even better for me as I can add a description to the password prompt. Looks a lot safer and I don't need to handle their passwords.
That won't ignore 0. If the agent\_id is 0 then the user did not select an agent parameter. &amp;#x200B; that is looking for where agent\_id is 0. What I needed is if fields.agent\_id is 0, then do not apply this parameter. fields.Agent_ID == 0 || fields.Agent_ID == ct.Agent_ID
What I have posted is a reduction of what you have posted. I'll break it down for you: Firstly, `||` is the "OR" operator. It will attempt the first expression on the left and, upon a `false` result, attempt the second expression on the right. (For any pedants among us: I acknowledge that with LINQ, this is only correct if the underlying LINQ provider and subsequent technology implements fail-fast OR.) This means if `fields.Agent_ID == 0` is `true`, we have our answer already. We do not even need to attempt the second expression. If `fields.Agent_ID == 0` is `false`, we then fall onto `fields.Agent_ID == ct.Agent_ID` To expand my solution, it is programmatically the same as: if (fields.Agent_ID == 0) { return true; } else if (fields.Agent_ID == ct.Agent_ID) { return true; } else { return false; } Which, I hope you'll see, is semantically identical to your solution, but with fewer operators and a bit easier to read.
Wow! Congratz and thank you for sharing your experience.
Nah, we just free ball it. No error-handling, no custom errors. Just an IIS error page that dumps the exception including database details. Try Catch Finally has way too many curly braces for our tastes. /s
ahhh.. thank you. Yeah that is way easier to read. Going with this.
That's actually a very valid point, I'm going to remove this requirement from my list
I'm not big on C# webapps, we mostly use Java or Go for those. For desktop applications you have: &gt; AppDomain.CurrentDomain.UnhandledException += new UnhandledExceptionEventHandler(MyHandler); That should give you a starting point to google a similar approach for web (or perhaps the same?)
thanks for all the answers :) Combined with DotNetDoctor's answer with using a while(port.IsOpen) to constantly read the buffer and using a Task i managed to make reading data extremely accurate. i edited the post with the answer :)
what would be the est way to upload the code?
When you write "standalone program", is that like a console application or a PowerShell script? I haven't got that much experience with PowerShell and this might also be the wrong subreddit... Nevertheless, you are probably on the right track I think 🙂
I think that's perfect. So long as you log the error out properly, and ideally have some sort of centralised logging solution.
hey thank you very much for the response! this definitely gives me a different perspective and i will try to work with this! I did try something that sounds similar to what your talking about here (i think, again i am a noob so this might be a very stupid way to do this but this is what i had): &amp;#x200B; &amp;#x200B; /\* Random rnd1 = new Random(); int diceroll1 = [rnd1.Next](https://rnd1.Next)(1, 7); &amp;#x200B; if (diceroll1 == 1) { dice1.Image = diceImages\[0\]; &amp;#x200B; } else { if (diceroll1 == 2) { &amp;#x200B; dice1.Image = diceImages\[1\]; } else { if (diceroll1 == 3) { dice1.Image = diceImages\[2\]; } else { if (diceroll1 == 4) { dice1.Image = diceImages\[3\]; } else { if (diceroll1 == 5) { dice1.Image = diceImages\[4\]; } else { if (diceroll1 == 6) { dice1.Image = diceImages\[5\]; }\*/ &amp;#x200B; sorry if the formatting is bad and this doesnt include a part where i tried to create another variable to capture the random number that was generated. but, the issues i was running in to here were : 1. I could not figure out a way to basically take the random number that gets generated and capture it as an int in order too add it with the 2nd roll... OR i would still get an error that said "cant convert image to int." 2. I had an identical version of this(with diff variable names) for the roll of the 2nd dice in seperate methods. For some odd reason my dice would roll doubles every time.. very weird lol but probably something that i did notice was not correct therefore i switched back to this for loop. &amp;#x200B; is this what you are referring to or am i still on the wrong track with this? i tried this and ended up switching back to the for loop. Again, I am in an intro class and have very little exposure to c# so if this is completely stupid, please forgive me lol. &amp;#x200B; Thanks again though regardless! I really do appreciate the insight! If you think this is the right track I can punch this code back in see what error codes I am getting.
&gt;Since macOS doesn't support UWP, I will have to run a Windows 10 inside a VM just to be able to target UWP as well but that's a different story. The extra RAM will be quite helpful when running a VM, but 32 is already a fair bit. You could configure your Windows VM to 24 GB and still have enough to spare for the native OS, then suspend it when you want a beefier Mac experience. &gt;The new iMac with 64GB of RAM or MBP 2018 with 32GB of RAM. Has anyone got any build benchmarks on those two machines? Will the extra 32GB RAM make a noticeable difference? In terms of just the CPU, [the maxed-out iMac is 43% faster in multi-core, and 15% faster in single-core](https://browser.geekbench.com/mac-benchmarks). Which isn't that much, given that it also has 33% more cores to begin with. Since you're doing Xamarin development, it matters how much the toolchain (MSBuild, Mono, etc.) actually take advantage of those cores, which in my experience is… not a lot. Single-core performance matters far more. SSD performance matters far more. I couldn't find SSD speed numbers for the MacBook Pro over at http://barefeats.com, but I _believe_ it's in the same ballpark. That leaves you with a 15% performance boost, really, which in my opinion isn't that much.
The concern is the component. So having functions tied together with markup is fine. This was one of the main philosophies behind react. Separate concerns, not technologies (html/javascript). Bringing a full-fledged language into the view opens up the power of that language beyond uses the framework designers have accounted for. And since this is a SPA framework, you'll be dealing rest endpoints returning models not view models. You can implement domain logic and validation at the domain/model level, and reuse that code all the way into the view. You might look into the react/redux (MVU) pattern if you are not already familiar. The one-way data flow and centralized state make working with ui much simpler to manage.
You can configure a friendly generic error page in IIS and use that to catch anything you miss. Whatever you do, never show the full error/stack trace in the browser on production.
Don't associate the image with the value, associate the value with the image. It's more efficient and easier to build a function that "rolls" 2 dice variables and then outputs the appropriate dice image based on the results of the roll.
yes I always have a generic error page, but i still use try and catch in almost all controller methods, how do you go about yours?
So your pro having the code for a component and the components UI (HTML) in the one file? I don’t know how much code a component will need yet so it might actually work out that if the code is getting too large then it might be an indicator it needs refactoring into other child components...
Hmm, I'll have to check these out, thanks! I generally like to read documentation when learning something new, but when I've needed it, I've found the .NET documentation to be thorough, but very lacking in context - otherwise I just don't know enough about the ecosystem to understand what it's talking about half the time 😂
Interesting read and solving the exact problem I am predicting* may happen. *i say predicting as I don’t actually know how big the file will get yet, it may turn out to be overkill engineering a whole MVVM setup for some basic components which contain very little c# code..
Cool! Thanks for the suggestions, I'll check out your video!
Instead of try and catch in every action method, you can create Exception action filter and decorate your controllers with that filter. This way you can have a centralized place to log any un-handeled exceptions
That's the kind of answer I was looking for. &amp;#x200B; Would be great to some some numbers as well from the people who have used MSBuild and Mono on both machines. Thanks!
You can actually go one further and register a handler in Startup.cs so you don’t even need to decorate. Depends on what you need of course.
Yes, and trying to maintain a functional approach helps keep things sane by design. Some people try to tout reusability with components, but it is the functional aspects that are the most useful. IMO, your pages should be like a react container pattern IMO. They just pipe data or functionality to components and thus your components are encapsulated by their props.
You can still use a code-behind approach with a separate file, you don't need to use the @functions block so you can code how you like. They show you how to do this in the last .net community standup if you're interested. I think it's to appeal to more people, i'm not sure if i'm going to use the functions block yet. I'm trying to decouple everything into smaller and smaller components so perhaps i'll keep it - early days yet but as soon as we can access the DOM via webassembly and don't need to rely on JsInterop then I doubt i'll write another line of javascript /cheer
Pastebin or google drive would be a good start. &amp;#x200B; You can rewrite all those lines of code you just posted to the following: \`dice1.Image = diceImages\[diceroll1 -1\];\`
Do you have a link for the community stand up you mentioned? It does kind of appeal to have all component code both UI and functionality in one file.. Any examples where you have had a need to interact directly with the DOM and blazor has made it hard?
&gt;And since this is a SPA framework, you'll be dealing rest endpoints returning models not view models. And you can implement domain logic and validation at the domain/model level, and reuse that code all the way into the view.You might look into the react/redux (MVU) pattern if you are not already familiar. The one-way data flow and centralized state make working with ui much simpler to manage. [https://youtu.be/ap60h3eQE5Y?t=3061](https://youtu.be/ap60h3eQE5Y?t=3061) timestamped at the the point they talk about it
For point number 1: The .cs file your working with should be something like the following: ``` public partical class Form1 : Window { //Code you've pasted on reddit } ``` To capture your dice rolls, you can declare your dice inside the Form1 (or whatever it's named) class like the following: ``` public partical class Form1 : Window { int[] dice = new int[2] //Code you've pasted on reddit } ``` Then you can say: ``` dice[0] = rnd1.Next(1,7) dice[1] = rnd1.Next(1,7) ``` And: ``` dice1.Image = diceImages[dice[0] -1]; dice2.Image = diceImages[dice[1] -1]; int sum = dice[0] + dice[1]; ```
And you need to add rich behaviors that will make use of this data member.
In .NET Core I think unhandled exceptions are dealt with/configurable with middleware, if you happen to be using MVC5 this is a really good article https://dusted.codes/demystifying-aspnet-mvc-5-error-pages-and-error-logging A generic try/catch in every action sounds like a pretty bad idea, just let the framework handle that for you. If you have actions that can still render in some partially broken state, like if an api call is throwing an exception that's when you might want to wrap the call in a try/catch block, return a 200 but let the user know something is timing out or whatever. If your site is indexed by search bots I'd recommend logging 404 errors as well. If you're using something like google analytics they'll send you alerts for things like spikes in 404s but I like to log them myself to set up 301 redirects etc. Also make sure your error pages are sending the right error codes, 500 for an unhandled exception and 404 for a page not found.
You did great, you have an architecture that works well for you, you are shipping on time, fixing issues quickly, refactoring easily. I think its smart to learn about various architectures but you seem to be doing just fine. I think the previous commentor is getting downvoted for just tossing some buzzwords at you without tieing it into the content you showed.
Thank you!
I've thought about this. thanks I'll take a look at it
do you mean like a middleware or something, how do i go about it
do you mean like a middleware or something, how do i go about it
.NET Core has middleware built in I believe and you can go down that route. Alternatively there is ‘UseExceptionHandler’ which you can pass a lambda to and log from there.
It kind of seems too good to be true, and I certainly wouldn't trust something like this to "just work". If you have two database connections to two different servers, it seems pretty difficult/impossible to commit a transaction *simultaneously* on both of them. And if it's not simultaneous, there's a chance that the network goes down or something between the first commit and the second. I mean, I'm sure that smarter people than me have worked on this stuff, and there's probably a lot of stuff I don't know about, but promising transactionality across arbitrary requests to arbitrary servers is an extraordinary claim that probably requires some justification.
&gt;o you have a link for the community stand up you mentioned? &gt; &gt;It does kind of appeal to have all component code both UI and functionality in one file.. &gt; &gt;Any examples where you have had a need to interact directly with the DOM and blazor has made it hard? Also, I didn't mean to imply it was difficult to use JsInterop at the moment, I manage a large JS SPA project at work and I just don't like the ecosystem around it (node, npm, gulp, webpack etc). There's so many community and professional things being developed at the moment for blazor that I doubt that we'll be lacking in replacements sooner or later. [https://github.com/AdrienTorris/awesome-blazor](https://github.com/AdrienTorris/awesome-blazor) has most of the links to a load of stuff that's already been created. Personally I'm looking at cutting my teeth on an internally networked server-side Blazor project so there's no dependency on WebAssembly and we can learn a lot before graduating onto developing new Public-facing Client-Side projects when it's ready.
Now we are getting somewhere! Thank you! This is exactly what i was looking for. Now i just need to make it so the game either continues or stops based on what the sum is equal too. &amp;#x200B; when looking at the code that says " diceImages\[dice\[0\] -1\]; " I'm just wondering what the "-1" actually means. I've never seen this written like this and i have to know what it means for my final write up lol... thanks again mate this was a life saver.
String: yes Image: hard, but yea.
\`dice\` is an array (effectively a list) of integers. \`dice\[0\]\` gets the first integer in the array, so the computer takes the following steps if you rolled a 3: \`diceImages\[dice\[0\]-1\]\` -&gt; \`diceImages\[3-1\]\` -&gt; \`diceImages\[2\]\`
int [] scores = new int[11]; This creates an array of `System.Int32` of fixed size `11`. If you try to index out of this or add more items, you will get exceptions.
https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/new-operator https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/arrays/ https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/const https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/constants
r/learncsharp or r/learnprogramming will be better places for questions like this. 1. `new` signifies that a new object is created, rather than a type (i.e. `int[]`) being described. It's kind of arbitrary, really, and something of a leftover from C/C++/Java. 2. `const` means that the variable or field cannot be assigned a different value, later. That is, const string s = "Foo"; s = "Bar"; // compiler error C# doesn't really allow you to reuse a variable name inside the same or a containing scope. This is sometimes known as *shadowing variables*. In C#, there are a couple exceptions to this general rule: * If your type has a field named `_foo`, you may declare arguments and variables named `_foo` in its constructors and methods. You can always get to the field by using the `this` reference. * If you type has a method named `Foo()`, a derived type may declare its own `Foo()` method. Depending on some particulars, it may *override* the original method, or just hide the original with its own. This is a bit complicated: you should read up on the `virtual`, `abstract`, `override`, and `new` keywords and do some tinkering to see how this all interacts. What applies to methods also applies to properties.
new int[11], is really "Hey computer, I need memory to store 11 integers", and the variable 'scores' is your reference to that memory. const is a keyword that lets the compiler exchange the compile time value wherever it's used, so in a sense a const variable doesn't really exist.
You know `CreateDirectory` can create the entire tree, right?
I'd love it if you can go deeper on binding native libraries (like amazon login library) for Xamarin and Xamarin Forms
Shit now I do.
Shit now I do.
You can also simplify your linq calls: Select(f =&gt; new FileInfo(f).Name.Substring(0, 4))
Razor scaffolding for the identity features works in MVC apps too. You can mix and match them. Not ideal but it does work if you just want the basics out of the box.
Good catch, thanks!
Nope! thanks. Guess I just never thought about it.
So basically I can get rid of if (!Directory.Exists(picturesWindows10WallpapersPath)) { Directory.CreateDirectory(picturesWindows10WallpapersPath); } right?
Yep.
Does this allow you to bypass authentication then? I don't get the purpose.
You'll want to switch to Environment.SpecialFolder.LocalApplicationData if you want Users\&lt;User&gt;\AppData\Local, instead of getting the roaming path then fixing it.
In spite of the downvotes, this still amused me.
This is C# subreddit, and C# is primarily an OO language.
And to model a domain object, the domain object needs to have both data and behaviors.
Key words in the comment "if transactions are supported there" assuming the API you're calling also has the same understanding of transactionscope and does a lookup. Of course it sounds too good to be true because a lot of other stacks are mired with issues and people have gotten comfortable only using functionality provided at the surface-level, doing their own workarounds all the time. The wheel keeps being re-invented by everyone, often poorly. And anything from Microsoft the last decades has just been ignored by the masses since it was "cool" to hate on them, despite the fact that they've provided robust solutions for 99% of use cases. The word "ecosystem" in other language discussions bugs me to no end as they always imply .NET was somehow missing a critical feature, yet no one bothered to look. The key thing about Microsoft .NET code is that they leverage a lot of p/invoke and often make the GC stay away from certain objects, which means Windows itself is helping ensure state validity, it's not just your application process that has to handle all of this.
The more you learn at this point, the more you'll learn how much you don't know, too :c Best things for you right now would probably to ask your manager for more or more consistent feedback, and/or try to get a list of your wins and accomplishments going.
i don't know why it always feels this way whenever I'm joining a new company. i wish there was a drug to take to battle imposter syndrome, lol
Actual imposters don’t feel that way. Take that to heart. It’s a good sign you know there’s a lot you don’t know. I have 16 years and there’s a lot I don’t know. There’s just a lot to know.
Don't worry about all the trendy frameworks and abbreviations, as long as you know how to encabulate a basic samoflange your skills are already miles ahead of most developers.
I was at a conference where a woman who was a NASA project manager who oversaw a dozen (I forget the actual number, it was a lot) successful space shuttle launches. She won awards for her performance and admitted to us that she was always afraid someone would discover that she was an impostor. It's a real thing and after decades in the industry I still don't know how to fight it.
wow 16 years! you must have seen it all
it's this a typo, I don't know how to encabulate a simple samoflange
wow! it's real. if a woman that experienced can feel that way then who am i
The devs at my work deal with millions of datapoints yet can't create a basic relational sql database. They decided SQL wasn't performant enough 4 years ago because their massive single table took too long to read from. Their alternative isn't much better. When it started crashing they just asked our clients make reports of smaller periods of time, and increased the timeout to 5 minutes. Most of the analytic code they deal with is just passing XmlElement and XmlNodeList around in functions where the parameters have names like "element" and "nodelist", but then proceed to quite a few assumptions about the content of those elements. &amp;#x200B; Basically if you are of the opinion that data should be represented by a class that describes the meaning of the number 5 then I'd say you're ahead of the curve. Or maybe I'm just working with people who drove off the curve years ago and convinced themselves that all the bumps and potholes are features.
For development it bypasses it so you don't need to struggle with identity server tokens etc
Well. [Here's some code that my superiors consider acceptable.](https://www.reddit.com/r/programminghorror/comments/8p93b5/code_reviews_no_we_dont_why_is_there_something/)
so many things wrong with those codes bro! wtf????
ikr
Great job. Some of these pictures ive wanted for a wallpaper
It's a lot like the process of flannilin injection, except you can leave out the auto-corroborator.
Whether it’s a “smell” or not doesn’t matter. You need to decide why you care. Why do you care that some internet blogger thinks that this method is a smell? As long as it works fine for you, what what’s the problem?
That's pretty good for two years. Key understanding: if you're the best programmer in your company, you'll still have impostor syndrome until the day you die. Come to accept that it's just a form of fear, not a real signal, and in time it will be less concerning. Get good at SQL.
Right, but you have to buy the elubonic pillar, flannilin toolkit, and the elbow grease.
Learn to build in a way that people who may not think the same way as you can understand it and in a way that makes it easy to identify the source of issues when they come up. Nobody cares what languages you know, but if you can find the problem in someone elses code and they can find the one in yours quickly it will make you more valuable
Don't stress, it's not a real thing.
\&gt;2 years of experience \&gt;not knowing how to encabulate even a basic samoflage https://i.redd.it/tktuko0517501.jpg
18 years full time in c# specifically and I still learn new things fairly often. Somehow I missed `unmanaged` as a type constraint was introduced, just learned about it last week.
The fact is you will never know enough and there is always more to learn(or relearn what you forget). Been doing this for a decade and I can never keep it all in my head or read about every topic I want to. It never ends. learn about .net core DI framework, Web Api, Angular, Cloud Service stuff, Message Queuing(Rabbit MQ), No SQL(MongoDB, Redis), HangFire, Design Pattern stuff, Akka.net seems cool, Blazor, CI/CD processes, Docker, Kubernetes, Microsoft ML.net, WPF, Xamarin, F#, Arduino/Rasberry Pi(GPIO), Windows Universal I think i could continue this forever heh.
That is a good sign. As people have mentioned, the more you know, the more you are aware that you don't know. Don't be intimidated talking to people who know more than you about various things, they know these things because they've worked with it before, you may not have. The more experience you get with various concepts/languages/platforms, the more comfortable you'll be. Just remember, programming is 90% googling things you've probably already googled before.
Worrying will make your work suck. The amount of potential differences in background are so vast, the only way that you'd be an impostor is if you lied about what you can do on your resume. If you didn't, I guarantee that if you don't know how to do what they're doing, they're probably expecting that and only hoping you'll learn fairly quickly. Really, that seems to be all they really want from developers. People that can and do learn fairly quick. Because this field changes so much, that's really the one thing you have to be good at.
Totally agree with this. I'm 15 years in and still feel like this as well. I'm not convinced that it goes away, but it does change. I think it's because as your confidence builds your responsibilities increase. It keeps you on your toes though! Things that I think help are: 1. Keep learning. I listen to some podcasts and get an email update of interesting articles which help keep me up to date with me stuff coming along. 2. Get involved in an open source project you find interesting if you have the time. It lets you take on different roles and work with different people than you do in your day job. If you start your own project or get really involved you can get a taste of running a project etc. 3. Don't just learn frameworks or languages, learn design patterns and different ways to think. For example, I found learning F# really useful when writing C#. Working in different industries is really helpful with this as you learn techniques that you can apply elsewhere. 4. Be professional and have high standards. Attention to detail is important. Care applied upfront will normally save you maintenance hassle later on. 5. Answer questions on Stack Overflow. It's a fun challenge and you get to help someone. It's a good way to tackle lots of problems to keep you thinking. 6. Most of all, try to enjoy it. The best developers/engineers I know have a real passion for their work. Try to maintain that and all the rest will follow.
What about spline reticulation?
Try to identify a pain point in the system you work on and become a subject matter expert on that issue. You might just find a way to make everyone’s lives easier while simultaneously building your knowledge base. And as others have said, it’s kind of always there, and not necessarily a bad thing. Try to focus on using it as motivation to continue developing your skills, but don’t let it keep you up at night.
How could someone rape our beautiful language csarp to produce a miscarrige like this?! That guy should do javascript at max
Pro tip: when downloading elbow grease be sure to cover your desk with baking paper. It helps contain the mess and the grease won't stick to it.
A **const** field *has* to be initialized at declaration and after that can not be changed. A **readonly** field *can* be initialized at declaration or be initialized in the costructor. It's value can set multiple times as long as it is in the constructor
You're probably worried about the folks at your new job thinking you're a fraud, or not up to speed on the latest stuff, or whatever. Guess what? They're mostly worried *you* think that about *them*. Almost all developers have these kinds of confidence issues, with the exception of the ones who are monstrously arrogant or legitimately ignorant. There's nothing you can really do about the latter type. For the former, the smartest thing is to ask questions and seek their advice -- starting with the question you asked here. Then you know exactly what new things to focus on in order to be relevant at your new job, and as a side benefit, you make your new coworkers feel less threatened and more comfortable with you.
Here's some perspective for you, at least: I have over 15 years of experience, I'm shaky on all that shit except SQL (the only thing I feel decent at), but they pay me enough to ignore the impostor syndrome terrors. You'll do fine.
If you're forever a student of your craft you are never an imposter.
Everybody wants *turbo* encabulation, these days.
He is a beginner no reason to berate him.
Try 25+ years... ALWAYS something new to learn. Even the new stuff we are doing at my current job is bit "unknown". Not so much out of my league, just not enough experience in the particular technologies to feel confident in... yet.
Mmmmm sort-of-obfuscated code. Nice.
The .NET Rocks just did a podcast followup episode to their original episode with a guy that wrote a book about Imposter's Syndrome. I think the book talks about learning the CS fundamentals so you're confident in your abilities. [Original Episode](https://www.dotnetrocks.com/default.aspx?ShowNum=1385) [Recent Episode](https://www.dotnetrocks.com/?show=1629) [Book](https://bigmachine.io/products/the-imposters-handbook/)
Sure it’s not. _crosses u/Siliddar off the candidate list_
Yeah, code is written to be read. If writing it in method syntax makes it harder for understanding - that's a wasteful operation. It wastes developer's time when he will try to read it in six months.
The more experience you have, the more you realize you do not know.
THE #1 skill you need isn't technical. It's team work. Check your code in early &amp; often. Actively listen to feedback. Don't try to clean the house unless your room's clean (which it will never be). Some technical skill is obviously useful. Embrace unit testing and delivery automation. These things will launch your career better than inverted binary tree sorting or whatever other gatekeeping algorithms are out there.
https://en.m.wikipedia.org/wiki/Four_stages_of_competence Sounds like you're right between step 2 and step 3. Just keep at it and you'll get there soon. In the mean time, look into the build process of applications. That's always seemed to wow it with other people for me
There will be plenty, it's a fairly well known meme at least in the reddit community.
Thanks!
 I mean seriously he should just be a janitor or some other menial labour if he can't keep up with us.
Terraform, puppet or similar, CICD, bash, docker. I feel the same way dude. I learn as i go mostly.
&gt; public override object Invoke(object[] args) &gt; every return is a string wewlad and I thought some old code that used objects then cast them back to their types was bad (I was like dude hello, use generics please?) this code was written in 2015. New programmers though, can't really blame em.
maybe an idea for the mods of /r/csharp is that we require a gist of code or something. maybe a paste bin link. that way the code is at least formatted for copy paste noobies that don't know reddit's markdown of four spaces for a line of code
The more you know, the more you realize you don't know much. So in other words, "the more you know, the less you know". &amp;#x200B; It's ok, you don't need to know anything (nobody does). What you need is strong foundations (know all the basics about the language and the most used types in the BCL) and the ability to find the information you need to solve cases you know less about.
I stopped reading before the first else statement. Surely this cannot be real?
What do you do?
Hey, man. Don't pawn him off on the javascript guys. They are doing the best with what they've got. They must lie awake at night wondering if the npm team is going to infect their webservers with ransomware. Besides... typescript is... ^(quite nice)
With regards to your post, I'm not 100% positive how to read it. It starts with "Free Code This Way", and I don't know what that is supposed to mean in the context of the post content. Then we have: &gt; Can someone tell me how to embed a video properly like all the other posts here? &gt; &gt; Thanks So, am I supposed to read this as a post asking a question how to embed a video? Embed a video in your program? In reddit? Using the reddit API? Then a link to your general github repo which is a collection of various, unrelated projects (as far as I can tell) and seems to be unrelated to your question. Then: &gt; Codey can explain it better than I can: &gt; Meet Codey. Get It? Codey. Which is a video with some guy saying that "we have a failure to communicate" quote, a minute of watching a drone simulation with some nice music, then a plug for your github repo, and weird hair thing at the end. So what is this? A question post with a "signature" plugging your github profile? If it's a question post about how to embed a video with C#, you're missing pertinent information for us to answer, like the platform or GUI framework you're using. (Rule 4) If it's a question how to embed a video on reddit using a reddit C# API, then you're missing pertinent information about what C# platform you're using and what reddit API you're using. (Rule 4) If it's a question how to embed a reddit video using reddit's website as a user, that's not a C# related question. (Rule 3) If you're posting it with your github as a "signature" that's unrelated to the question, that's a bit spammish, especially since you did posted the video here: https://www.reddit.com/r/csharp/comments/bgfpqh/meet_codey_get_it_codey/ (spam) Note that I didn't remove your posted video in the link above. That's still there as we do allow people to plug their open source projects (as long as they don't do it excessively) and that video does link to your github and at the end you talk about it.
I'm glad you turned that into hunger for knowledge, rather than an insecurity to hide. What I suggest you learn is WPF and MVVM aswell as anything related to .NET Core, because apparently WPF is gonna be cross-platform soon, meaning it'll be a big, big player in all-things-linux, all-things-windows and all-things-ios.
I've been working on a game-modding website for a few years now. I haven't really shown anyone it and would appreciate it if someone gave it a look over. For the most part it's "Done". Originally I made this in ASP.NET Razor pages... but I just made it static HTML now so I can host it for free on gitlab. https://wilcoforr.gitlab.io/modding-realm/
Design Patterns above all else. Including libraries, languages, and IDE. You will need to learn how to build a specific functional piece of code by yourself. You will need to architect and make decisions about the function, flow, and flexibility of the application. Those all are dependent on your knowledge and understanding of how to implement them and when to do so. It takes practice, but it will start to come naturally. Next, Business. Read about economics. Learn about legalities of your given business. Learn about cool math things you can do to solve equations or simple puzzles to keep you up to date, agile, and flexible.
Work on a legacy codebase. If that doesn't lower your bar I don't know what will.
Ive ran into issues with that, the docs clearly says it will until it wont and blows up with path not found exception. O..o. \..O../
I have serious impostor syndrome and would love general advice for dealing with it.
Cool, Im just concerned about loading each and every img as a bitmap, even before you decided to use it, you have logic that checks if it exists inside the image handler itself. If the file already exists you shouldn’t load the image. Another issue is that loading images to determine width and height can be expensive if you have lots of files to enumerate. I would recommend using something that only looks at the file header. https://stackoverflow.com/questions/111345/getting-image-dimensions-without-reading-the-entire-file
Right now, I'm a full stack developer. We currently use c# for services and API and angularjs for our legacy apps. Transitioning to .net core microservices and react/typescript front end. Also use technologies like elasticaearch for big data searching. We deal with a crapton of medical data that we try to identify, classify, breakdown and curate for other companies.
thanks! this is why code review is a useful thing. i agree I shouldn't even create a bitmap if the image already exists.
You're still encabulating your samoflanges in 2019? Get a debeistering framework and jasicate them already.
Reference: https://www.youtube.com/watch?v=Ac7G7xOG2Ag
Further readying on the link i gave suggests using the System.Drawing.Image.FromStream(stream, false, false) will give you the dimensions without loading the entire image, and it works on any image .Net can load
Removed: spam. Please review and follow the [guidelines for self-promotion on reddit.](https://www.reddit.com/wiki/selfpromotion)
That's so 90s, it's spline rerererere-reticulation.
Alright mate, so i've been working with what you gave me and i am now one step away from making this complete i believe. I seriously appreciate the help because i wouldnt have got this far with out it lol. If you can help me with this one last thing that would be amazing! &amp;#x200B; Basically my problem is that after the initial roll i need to capture what the number rolled was. &amp;#x200B; &amp;#x200B; I have decided to split this up into 2 different buttons because i cant think of how to do it other wise. for my first button (the initial roll) i have : &amp;#x200B; private void rolldice\_Click(object sender, EventArgs e) &amp;#x200B; { &amp;#x200B; { &amp;#x200B; int\[\] dice = new int\[2\]; int sum; &amp;#x200B; Random rnd1 = new Random(); dice\[0\] = [rnd1.Next](https://rnd1.Next)(1, 7); dice\[1\] = [rnd1.Next](https://rnd1.Next)(1, 7); &amp;#x200B; dice1.Image = diceImages\[dice\[0\] - 1\]; dice2.Image = diceImages\[dice\[1\] - 1\]; sum = dice\[0\] + dice\[1\]; &amp;#x200B; &amp;#x200B; if (sum == 7 || sum == 11) { [MessageBox.Show](https://MessageBox.Show)("You Won!"); &amp;#x200B; } else &amp;#x200B; { if (sum == 2 || sum == 3 || sum == 12) { [MessageBox.Show](https://MessageBox.Show)("You Lose!"); } &amp;#x200B; else { if (sum == 4 || sum == 5 || sum == 6 || sum == 8 || sum == 9 || sum == 10) { [MessageBox.Show](https://MessageBox.Show)("You now need to roll a " + sum + " before you roll a 7 to win"); } &amp;#x200B; } } } } &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; the section of code below that shows " // int test = dice\[0\] + dice\[1\]; " is where i am having trouble. I basically will use the first button to roll the dice and then i want the 2nd button to basically capture what the current sum of the dice shown is and then roll the dice... if the roll is the same number, they win, if it is a 7, they lose. This is where I am stuck. what the code below does currently is it will just show the "You lose" on a 7 and thats it lol. &amp;#x200B; My second button looks like: &amp;#x200B; &amp;#x200B; private void button1\_Click\_1(object sender, EventArgs e) { int\[\] dice = new int\[2\]; int sum; &amp;#x200B; // int test = dice\[0\] + dice\[1\]; &amp;#x200B; Random rnd2 = new Random(); dice\[0\] = [rnd2.Next](https://rnd2.Next)(1, 7); dice\[1\] = [rnd2.Next](https://rnd2.Next)(1, 7); &amp;#x200B; dice1.Image = diceImages\[dice\[0\] - 1\]; dice2.Image = diceImages\[dice\[1\] - 1\]; sum = dice\[0\] + dice\[1\]; &amp;#x200B; if (sum == 7) { [MessageBox.Show](https://MessageBox.Show)("You lose!"); } else { if (test == 4 &amp;&amp; sum == 4) { [MessageBox.Show](https://MessageBox.Show)("You win"); } else { if (test == 5 &amp;&amp; sum == 5) { [MessageBox.Show](https://MessageBox.Show)("You win"); } else { if (test == 6 &amp;&amp; sum == 6) { [MessageBox.Show](https://MessageBox.Show)("You win"); } else { if (test == 8 &amp;&amp; sum == 8) { [MessageBox.Show](https://MessageBox.Show)("You win"); } else { if (test == 9 &amp;&amp; sum == 9) { [MessageBox.Show](https://MessageBox.Show)("You win"); } else { if (test == 10 &amp;&amp; sum == 10) { [MessageBox.Show](https://MessageBox.Show)("You win"); } } } } } } &amp;#x200B; If you can respond to this and help i would be greatly appreciative!!
Seems like middleware is the answer for everything custom when it comes to [ASP.NET](https://ASP.NET) Core. Have had to resort to it quite a bit for our custom auth stuff.
The dapper library makes all of that easier. I recommend checking it out. The compiler / language will call dispose at the closing curly brace. Dispose will close the connection.
I second the getting good at SQL. The data layer will always be valuable. The tech with it will change, but SQL will remain. Plus, data is freaking beautiful.
As a 15 year guy in a new role fighting the same feelings as OP, I needed this.
A recent article title says it all "I've forgotten more JavaScript frameworks than most people will ever learn"
Thanks dude, I will check these out!
I've been a developer for 20 years and I still feel the same way when I start a new job. Try not to worry about it, you'll feel better in a few weeks. Just use that feeling to keep pushing yourself forward and learning new things.
Well, that's the point. It is not just some Internet blogger, it's Martin Fowler and in general as you can see the opinion is split in two camps.
go through the comments, alot of good advices
lmao man, i need to enrol a udemy course on this
I haven't done WinForms in a very long time, but a couple things from looking: Your DataGridView1, is it being set to a new DataGridView? Are your columns showing up correctly? At your dataGridView1.Rows, you're adding a empty row - can you try populating the row with data before adding it to .Rows? e.g. string[] row = { "1", "made up monthly payment", "amount to interest", "s", "s" }; dataGridView1.Rows.Add(row); Have you tried using the debugger for your click event? You're rebuilding the DataGridView1 each time with the columns and shouldn't need to, but worry about that later. Try stepping through the code to see where it stops.
That's a great idea. To be honest I don't remember exactly how I did it, but I do remember it being tricky. If I do a deeper dive on it I will also have something to refer to.
Nah, the iOS specific implementation of Alexa isn't really useful information for a broad swathe of people - lessons in sharing common code, and developing for sharability, are definitely valuable lessons.
Yeah but my point is that I don't use dotnet mvc. I only want a web API, but in the documentation (and in what is scaffolded) half the code is in those cshtml pages. Also, I struggle since yesterday because I can't generate an URL action with the code that was generated by usermanager because it contains characters identified as a double escaping sequence. Whatever :/
Yeah, since it's only for Dev the overhead isn't crucial. I did the blog mostly to get it indexed on Google becasue I didn't find anything on the few first posts
You're still there 10 months after posting that trainwreck?. I hope it's due to golden handcuffs, otherwise you deserve better!
If you are just using Web API then you should take a look at Identity Server 4 and OAuth. You should just need the JWT token in your Web API layer.
I'll have a look, thank you. The thing is I never did authentication before, so I hoped the official documentation of my f*cking framework would do the trick. Guess what ? :3
You seem fine. I’ve been doing C# since version 1 and I thought I knew everything there was to know. Just started a new job working with Unity and I feel like I did at my first job. Use the place to learn as much as you can and you’ll do great.
Partly golden cuffs, partly the fact that I can talk the ears off my managers with technical details they don't want to understand. I can make their eyes gloss over immediately which means I'm left alone to basically study and to figure out my own tasks. It's neat.
Can you expand on how to 'get good at SQL'? I've just started as a junior developer at an insurance firm, but I'm trained in games development so I know barely anything (they know this). What would you say you need to learn to be good at SQL?
A lot of good resources out there. Learn Entity Framework, then begin to understand how it works. Basically learn to create, delete and update a database comfortably using C#, it will teach you how to use the localdb server using Visual Studio. Then start doing it directly with SQL - you should download the data workload in the VS installer. Mind you, it's mainly to *understand* what EF is doing, I wouldn't recommend you start writing hundreds of lines of SQL manually in production code - the entire point of EF is so that you no longer have to leave the .NET environment yet still be able to easily interface with databases.
Thanks. I've been working through multiple courses with ASP.NET, MVC, EF so I know the basics. I also went through the 4 hour SQL course freecodecamp has on their YouTube - I understood mainly everything (except the last two lessons) but have yet to put it into practice.
Microsoft recently released MS SQL Server developer edition as a free download. Basically you get the complete featureset of SQL Server free of charge for learning and testing features. Becoming an expert these days is more accessible than ever.
just write a lot of sql and read sql books same as any language
There is so much wrong with this code that I am not sure where to begin... * You don't need two queries. Use "select usernames, passwords from Games" and .GetString(0), .GetString(1) * Use filtering in your SQL "WHERE usernames = '@checkuser'. Read up on parameter use. You don't need to return all the rows in the database, just one that matches the username * you are closing readpass, but not readuser. Also, both of those should be in using() {} block, which would take care closing/disposing of the reader even in case of the error * username check should probably case-insensitive * SqlCommand and SqlConnection implement IDisposable as well, put them to using * Check for admin before ever querying the database * Create forms closer to the use, as you probably don't need to create both admin and home.
My guess is that having the queries interleaved doesn't work well. But I could be wrong, as I have never used MySql connectors from C#. To find out, do you still get an issue if you execute the queries one by one and as a first step save all results in a list (for each query), then do the processing. Something like (pseuco-code): ```cs var finduser = new SqlCommand(query1, connection); var readUser = finduser.ExecuteReader(); var userList = new List&lt;string&gt;(); while (readUser.Read()) { userList.Add(readUser.GetString(0)); } var passList = new List&lt;string&gt;(); // ... same for passList // note: be careful if both lists don't have the same number of elements for (int i = 0; i &lt; userList.Count; ++i) { // your check logic } ```
"Why is samoflange trending on stack overflow?"
Or just use EF Core to better control the database and the entity mapping
also it gives me this ( java.lang.NoClassDefFoundError was thrown) when I press the red thing below the "App1.Android"
&gt;Use the place to learn as much as you can and you’ll do great. thank you, this is exactly what i will do
This reminds me of a powershell script that I wrote last year to go a similar thing: [https://gitlab.com/rhodri/Windows-10-Picture-Grabber](https://gitlab.com/rhodri/Windows-10-Picture-Grabber) Its pretty simplistic but does the job. Nice to see some C# that does a similar thing.
* Hash and salt your passwords * Instead of shoveling the whole user table around (twice no less) query for it in the beginning "WHERE username ='username'". If you get nothing back, the user doesn't exist. Then check against the password
Personally, I’d say learn MySQL first. Widely used, and I find it has clearer syntax. There’s no real need to stay in the walled garden of MS.
ADO.NET (which is what you are using here) has two different ways of accessing data: - In "Connected" mode, you run a query, then stay connected to the database as you read each row of data, one by one, from the database - In "Disconnected" mode, you run a query, then copy all of the data into memory. You can work on it while it's in memory, and then if needed, you can save it back to the database The DataSet and SqlDataAdapter classes are used in Disconnected mode, so that's what you're using here. In Disconnected mode, the DataSet contains all the data. It contains a collection of tables (a query normally only returns one "table" of data, which may or may not correspond to a table in the database, but DataSets support multiple tables whether you need that or not), and those table(s) contain the data. The SqlDataAdapter is used to move data from the database to the DataSet and vice versa. The line `da.Fill(DS)` fills the DataSet with the data from the database. (The other important method is `da.Update(DS)`, which saves data back to the database. That won't work in your code, because although you've set the `SelectCommand`, you haven't set the `InsertCommand`, `UpdateCommand`, or `DeleteCommand`.)
Yes, it does. Use preview branch [https://github.com/jincod/dotnetcore-buildpack#preview](https://github.com/jincod/dotnetcore-buildpack#preview) for that
How do you know it is impostor syndrome and not actual incompetence for the new role?
that's why i listed the things i know
We lack the baseline here. Maybe you landed a job at some company full of geniuses or you managed to get hired in a higher position than your current skill. After all you can be perfectly competent for your years of experience but be put in positions where this experience is not enough or is irrelevant.
that's not the case here, i went through a series of interview and for me to have gotten the job, it means I passed all the assessments and I'm qualified for the job. it's a regular software developer role , and they're also aware i have just 2 years experience. i feel I'm actually qualified for the role but since it's a new environment there will always be new things to learn which leads to the imposter syndrome
I don't think learning new tech will help you that much. Sounds like the you need to get familiar with the codebase. You may look at the tech used in the project and pick up a piece that you don't know to learn in your free time.
Exactly, I just need to get familiar with their codebase. I felt this way also when i was resuming at this my current job. but i eventually turned out fine. it's over a year now and I have handled several existing projects and also developed new ones.
Actually lol'd.
Be careful of bosses that cleverly use the natural impostor syndrome inclinations of software developers to get you to commit to things you shouldn't. They may say something like "This is an easy task. My kid could do it!" to get you to feel stupid and overcommit to an impossible deadline or take on a ton of technical debt in your solution. Bottom line is, if they say really believe that they could get someone with less skill to do a thing, they would. If they don't you know they're just a manipulative piece of shit. Source: Worked for a manipulative piece of shit.
It's not walled anymore, though. If we're gonna talk about "ecosystem" here then a full, free access to the most powerful sql server is absolutely crazy cool, as it integrates with so many other interesting features elsewhere. And if I wasn't recommending SQL Server I'd just say he can use localdb that comes with Visual Studio.
This made me die inside a little.
I currently work for one, sometimes you just have to be the bad employee and stand up to those kind of bosses
I didn’t like the new color on methods in VS 2019. I tried to find which color I should change. I didn’t find one but you can revert to the 2017 style by disabling Tools &gt; Options &gt; Text Editor &gt; C# &gt; Advanced &gt; Use enhanced colors for C# and Basic. Sadly this reverts all of the 2019 color enhancements back to 2017. If any one know which color controls the method only please drop me a line.
Well, no. If we’re going to not be a walled garden, there’s no reason why we shouldn’t suggest Postgres. Its by far the best around. SQL Server is only alive because of that walled garden. It’s time for it to die off.
Nah I got some options that are vesting in a little bit. To quote Stanley, "This here's a run out the clock situation" :)
I'm sorry, have you heard of our Lord and Saviour NoSQL?
Anything prefixed with `User Types`
windows server IS ransomware.
Use ToLookup(): var companyDomains = domains.ToLookup(x =&gt; x.CompanyName, x =&gt; x); This creates IGrouping&lt;string, Domain&gt; (or whatever your model is called). You can iterate this with foreach or access like a dictionary items.
\*\* But still contains a SQL-like API - technology depending
I'm ill, so knocked this up. It's not pretty, but it works. CreateDummyData just creates dummy data of type TheThingsByCompany ina list so we have something to work on. Then I use LINQ to group by company. The result is an enumerable of anonymous typed items. Each item has a company name and the set of TheThingsByCompany related to that company in a list. The LINQ bit is in query syntax, but it's fairly straight forward to convert it to a fluent c# syntax. class Program { static void Main(string[] args) { var sourceData = TheThingByCompany.CreateDummyData(); var result = from thing in sourceData group thing by thing.CompanyName into byCompany select new {Company = byCompany.Key, Things = byCompany.ToList()}; var first = result.First(); // First set of items for first company. Console.Read(); } } public class TheThingByCompany { public static List&lt;TheThingByCompany&gt; CreateDummyData() { var result = new List&lt;TheThingByCompany&gt;(); var companies = new[] {"Company1", "Company2", "Company3"}; foreach (var company in companies) { foreach (var i in Enumerable.Range(0, 5)) { result.Add(new TheThingByCompany{CompanyName = company, WhatEver = i}); } } return result; } public string CompanyName { get; set; } public int WhatEver { get; set; } }
You can use Linq's GroupBy operator to accomplish this. It would look something like this: &amp;#x200B; `var domainsGroupedByCompany = domains.GroupBy(d =&gt; d.CompanyName);` &amp;#x200B; See this link for documentation: [https://docs.microsoft.com/en-us/dotnet/api/system.linq.enumerable.groupby?view=netframework-4.8](https://docs.microsoft.com/en-us/dotnet/api/system.linq.enumerable.groupby?view=netframework-4.8)
That's a nice solution.
Never thought about teaching EF first, but it makes sense. We currently are having a few shitty DBAs eating crow because when doing the navigation properties EF is forcing them to explicitly say what kind of join they used between tables, forcing the fact that they've been doing a one to many for what should be one to one in their faces.
Open the solution explorer and click the 'show all files' icon in there at the top. Is the file there?
Will have a look, I did search for members but didn't find anything. Thanks
Read up about design patterns or architectural patterns
Interesting, the name is User Members - Methods. Its black in the color picker so thats why I didnt notice it. Changing from black to any other color like red works. Now my methods are red, chaning back to red and it gets the " Use enhanced colors for C# and Basic "-color instead. So it seems Black is a singal for that option to override color. Not my first choice how to solve this :D
A cromulent augmenicity of samoflanging
Not exactly staying on topic here, but just out of curiosity, how big is your angular front end that you are transitioning to react/typescript? I'm asking because my client has a ginormous angular front end and they're considering transitioning (to something).
 [https://imgur.com/a/fsLRO3w](https://imgur.com/a/fsLRO3w)
They were "Custom" on my install. I set everything to "Default" (yes, it took me ages) and now it's as it was in 2017. There are a couple others you may want to check, from memory these include "Keyword - Control" and "Operator - Overloaded"
I guess I just disable that option, then I get it like 2017
Therapist: samoflange isn't real, it can't hurt you Samoflange:
I’m not sure I understand your question. What structure? Is there a particular error you have a question about?
You should definite your classes outside of the conditional.
I would assume there is some method of those classes you would call in the while loop. Also, if the book will never be false, you can just do while(true)
Just also saw that you are assigning i to true with = instead of testing i with ==
Unless if there's a recent language change that I missed you cannot declare a `class` or a `struct` within the body of a method.
You can define nested classes but you can't define a class in a method. Move the class definitions out of main. You could move them inside the Program class, next to Program or ideally into their own files.
You can only declare types inside a namespace, class, or struct. A method is not any of those, therefore it is not licit to declare a type inside a method. (There's a kinda-sorta exception with anonymous types, but they're not declared, just instantiated--their definition is inferred by the compiler.) Consider using r/learncsharp or r/learnprogramming.
why not GroupBy instead of ToLookup?
You know your way around the collection framework? Know when a linked list vs list is appropriate. Dictionary vs sorted dictionary. What about very basic algorithm type stuff? If you needed to find the smallest item in an array, but based on a custom comparator that you’ve written, what would you do? Sort the whole array and take the first one? Can you do better?
To me that seems like the wrong placement for ConfigureAwait. Since it is possible for you to use an async method to get the object you use in using statement in the first place. Something like "await using (....) {}.ConfigureAwait()" makes it easier to understand where it should apply.
GroupBy returns an expression that can be further manipulated, ToLookup writes the new structure to memory, so it really depends on further usage
I know my way around collections, I tend to use linq alot when working with collections. I know basic algorithm, I'm not so good at algorithm or solving algorithm challenges, how can i get better ? &gt;Sort the whole array and take the first one yes this is how i would achieve it, is there a better way this could be done
Meditation helps centering oneself. In my case, I'm a Christian, so my meditation is prayer. My identity isn't in my ability as a developer, but who I am in Christ. I went from very simple Web Form applets with no EF, to full fledged MVC, WebApis, and now .Net Core application development with EF, and a ton of new design patterns that I knew nothing about. I was constantly feeling overwhelmed by my co-workers getting similar tickets out in 1/2 and sometimes 1/3 the time it took me. Praying (meditation) calmed my nerves and help to remind me to rely on something greater than myself, and over time (6-8 months) I learned all the things required for my position to make me a valuable addition to the team, and even make pattern suggestions and design suggestions to other team members. You can do it!
`=` is the assignment operator. `==` is an equality operator.
See: Entity Framework, LINQ
thanks so much I'm a Christian and i pray and meditate (the Buddhist type) also. I'm really glad you were able to overcome the feeling and also improve yourself over time. that's the kind of experience i want for myself few months into the job
Your website has way too many ads.
And wordpress takes all the money :/
You'll get there! Have faith in yourself, and never be afraid to ask God for Wisdom and clarity for menial things like, "Lord, remind me how to make a constructor without using ReSharper" I know that's a funny simple thing, but never a bad time to ask God for help.
lmaoo. funny
It is pretty sizable, but not unmanageable. We have what we call v2 and v3 apps. v3 is greenfield development for the most part, so almost everything we do there is new. v2 (current clients we have) has parts of it converted to React, as time allows, and we then release updates in chunks. So yes, part of our UI is Angularjs/Bootstrap, and parts in React/Material, but the color schemes and branding are reasonably similar so it's not too jarring.
I doesn't feel that way but I am sure I have seen more than I think I did. I have worked in E-Commerce since 2004, so while I am a full stack dev, there are areas that just don't apply to my work life and therefore I haven't needed to learn.
The point of her talk (Which was exceptional) was that she brought a small amount to the greater whole. But that didn't make her contribution insignificant, in fact she was the linchpin that kept all of the moving parts connected. We all have a role to play and it always feels insignificant (or worse, overwhelming) but it's not only significant - it's critical. For example, if there is a rock star on your team then that person should be handling the most difficult of problems. If you are handling the day to day "easy" stuff, then you are providing an exceptional service, because the rock star isn't weighed down by day to day. A good manager goes out of their way to make everyone feel important regardless of their task. Unfortunately, not every manager is even aware that they should be worried about such things.
I have no idea if this is the best way to measure them (in fact, I'm pretty sure it's not), but our angular UI is about 1000 js files (that's our in-house developed ones), and about 600 html files (templates). It's my first experience with a large (?) angular front-end, so I was curious how it stacked up to other projects in terms of relative size. It sounds like you are built to more easily migrate. Ours is all the same front-facing client, so I don't know if we could migrate pieces. It would be fun to plan and try, though!
Thank you for the reply. I did not realize this and am trying to write an app on the fly while our dev is on vacation. I am the SQL guy... I've removed the classes entirely and just let everything exist in Main(). Now I'm stuck here. [https://imgur.com/a/8InXW3h](https://imgur.com/a/8InXW3h) I just want to be able to sleep the program for 5 minutes using an infinite while loop. Of course if I get it to work I'll add a catch and set i = false, but for now I can get past this. This tells me I have an extra { somewhere, but I'm not finding it. I used count to see how many of { and } there are and there are an equal number of each...
&gt;Thank you for the reply. I did not realize this and am trying to write an app on the fly while our dev is on vacation. I am the SQL guy... I've removed the classes entirely and just let everything exist in Main(). Now I'm stuck here. &gt; &gt;https://imgur.com/a/8InXW3h &gt; &gt; I just want to be able to sleep the program for 5 minutes using an infinite while loop. Of course if I get it to work I'll add a catch and set i = false, but for now I can get past this. This tells me I have an extra { somewhere, but I'm not finding it. I used count to see how many of { and } there are and there are an equal number of each... Thank you for the reply. I did not realize this and am trying to write an app on the fly while our dev is on vacation. I am the SQL guy... I've removed the classes entirely and just let everything exist in Main(). Now I'm stuck here.[https://imgur.com/a/8InXW3h](https://imgur.com/a/8InXW3h) I just want to be able to sleep the program for 5 minutes using an infinite while loop. Of course if I get it to work I'll add a catch and set i = false, but for now I can get past this. This tells me I have an extra { somewhere, but I'm not finding it. I used count to see how many of { and } there are and there are an equal number of each...
 Thank you for the reply. I did not realize this and am trying to write an app on the fly while our dev is on vacation. I am the SQL guy... I've removed the classes entirely and just let everything exist in Main(). Now I'm stuck here.[https://imgur.com/a/8InXW3h](https://imgur.com/a/8InXW3h) I just want to be able to sleep the program for 5 minutes using an infinite while loop. Of course if I get it to work I'll add a catch and set i = false, but for now I can get past this. This tells me I have an extra { somewhere, but I'm not finding it. I used count to see how many of { and } there are and there are an equal number of each...
 Thank you for the reply. I did not realize this and am trying to write an app on the fly while our dev is on vacation. I am the SQL guy... I've removed the classes entirely and just let everything exist in Main(). Now I'm stuck here.[https://imgur.com/a/8InXW3h](https://imgur.com/a/8InXW3h) I just want to be able to sleep the program for 5 minutes using an infinite while loop. Of course if I get it to work I'll add a catch and set i = false, but for now I can get past this. This tells me I have an extra { somewhere, but I'm not finding it. I used count to see how many of { and } there are and there are an equal number of each...
I absolutely hear your pain. A few years ago I created an application to hopefully help with this, in that you can link documents/files to see what relates to each other. It is not specifically the help that you want, but maybe the concept will help you. I originally envisioned some form of flow chart, but that is not how the app ended up, which is why the app was abandoned. (it works, but not at the level you and I need) &amp;#x200B; Details, and it's free of course: [http://www.blissgig.com/default.aspx?id=7](http://www.blissgig.com/default.aspx?id=7)
How it would look like without {} because these are not required?
Hope you feel better, soon.
My apologies.
By sorting the entire array, it’s doing an awful lot of work that is not required. It’s putting every element into its correct place, but you only care about the first one. So you need to find the min. For a collection that is sorted by the objects themselves, you could just use the min function. But, since this example requires a custom comparator, you can’t use that. A much more efficient approach would be to only iterate the collection once, keeping track of the current min value. Once you’ve examined every item, you’ll have your minimum. Much better than sorting the whole thing. You can do this as an ad hoc implementation, or you can create your own linq like extension method to do MinBy. Something like: public static TSource MinBy&lt;TSource, TComp&gt;(this IEnumerable&lt;TSource&gt; source, Func&lt;TSource, TComp&gt; selector, IComparer&lt;TComp&gt; comparer) where TSource : class
Yeah we have maybe 300-400 js files. Also, we have a dedicated React/Typescript resource (with help from us, as needed) to revamp parts on an ongoing basis.
You are close. Keep the code in the first picture. Then add the main function back in and call your functions from there.
thanks alot. I have alot of improvement to do on my algorithm skills. time to revisit codewars and hackerrank
You can also use a common approach and deploy two places. The client-side assets can be published to a static website. This is a really inexpensive solution - just create an Azure Storage account (v2) and enable static websites and publish the client-side assets there. The server-side portion be deployed to an App Service or, as mentioned, in a container.
When thinking about getting better with algorithms, you need to ask yourself, how can this be done, but by doing the minimum amount of work as possible. The problem I see with new developers is not necessarily overusing linq, but they use it without any regard to what is actually happening. Linq is great, but when you couple inappropriate use with a lack of understanding of what's going on, performance can really suffer. I've seen developers string together some impressively long linq queries, and they work fine when the scale is in the 100's of elements, but once things get into the thousands or more, performance really suffers, and the code needs to be refactored.
I must be misunderstanding. When I try I get the same missing } error. [https://imgur.com/a/QZ6k1SI](https://imgur.com/a/QZ6k1SI)
I'd move those functions and method definitions out of main but keep them in the class. Then your main can call them. Another approach to finding structural (unmatched braces) errors I'd to copy everything to a new file, and then start with a blank main . Bring each method or function in one at a time and see which one breaks it. Don't worry about compile errors during that step only look at structure.
This is a great, well thought out post. Thanks!
&gt; WPF is gonna be cross-platform soon This is not true. WPF will only support Windows, even on .NET Core.
It's not as extensive as this person's done, but I've experimented with 128-bit AES-NI in C# lately too. Single-threaded performance is a little over 6 GB/s on my machine. https://gist.github.com/Thealexbarney/9f75883786a9f3100408ff795fb95d85
linq can easily be misused especially when you don't understand what's going on and don't place things in the right order. scaling is one aspect where i don't really trust myself even though i actually build my projects with scaling in mind. but i haven't actually deployed code that &gt;10,000 users use daily . I'm looking forward to doing this at the new job, hopefully
`ToArray()` should do it, but I don't know what DimensionList is or how it behaves. Any change that the problem is &gt; Console.WriteLine(temp1[0]); &gt; Console.WriteLine(temp1[1]); is printing from `temp1`, instead of `temp0`?
Close hah. You'll get there. Here's an example structure. I'm on mobile so forgive spelling / capitalization. Class Program { Static void DoSomething(string parameter) { // Do something with parameter here } Public static main (string[] args) ( Var parameter = args[0]; // Parse out what you need from args. Do not pass args directly to your function. DoSomething(parameter); ) }
&gt;ToArray() should do it, but I don't know what DimensionList is or how it behaves. The problem is that it keep overwriting the first element of temp0, it is not incrementing it, so the rest of the 9 values are empty Maybe this screenshot will help in understanding: https://imgur.com/a/qtr0HaR &gt;is printing from temp1, instead of temp0? that was a typo. please ignore that
[removed]
Perfect example on how to not make a website, thanks.
Let's break this down: string[] temp0 = new string[10]; You're creating an array of size 10. But then, inside the loop, you repeatedly do this: temp0 = dimensions.ToArray(); Each time you do this, you've overwritten whatever was in `temp0` before. So that, by the time your loop finishes, the only thing in `temp0` is whatever came out of the *last* item in `results.Results`. So if that last item only has one result in it, then `tempo[1]` is meaningless because `temp0` only contains one thing. So, how to fix it? Well, I don't know, because I don't what you want to do. I also don't know why you need an array - can you return a list, instead of an array, for example? If you could return a list, it would be quite easy: List&lt;string&gt; temp0 = new List&lt;string&gt;; foreach (var series in results.Results) { IEnumerable&lt;string&gt; dimensions = series.DimensionList.Select(x =&gt; string.Format( x.Value)); temp0.AddRange (dimensions); Console.WriteLine( string.Join(", ", dimensions)); } Console.WriteLine(temp0[0]); Console.WriteLine(temp0[1]); (If you really need an array, you could call `.ToArray()` on your list after you're finished.) Very important to note that in my modified version, I've only ever used `temp0 = ...` once, in contrast to you. Every time you write that, you're overwriting whatever is there already. As an aside, though, please use better variable names than `temp0`.
Ah. DimensionList is an collection of one element, but you're saying you want to drop the dimensions from the entire list of Results into temp0. You should look into SelectMany(), instead of Select(): var temp0 = results.Results .SelectMany(x =&gt; x.DimensionList) .Select(y =&gt; y.Value.ToString()) .ToArray();
Doxygen is your friend, it's very good for producing automatic documentation of a project http://www.doxygen.nl/
Use official SQL server provider as an inspiration. Its open source. Also official docs on msdn have some tips.
Why not the visual studio profiler?
Good point although I always use {} even for one line statements. Another problem I can see would be what happens with multiple using statements or a using statement that contains multiple variables. Putting it at the end would probably mean ConfigureAwait applies to all dispose async calls which probably covers 99.9% of cases. But there could be that edge case where you don't want to call ConfigureAwait for first dispose but apply it to rest. Although I would claim that code would be extremely difficult to understand and would be prone to produce bugs by someone refactoring it without realizing the importance of ordering so it should probably use another pattern to make it more readable. However with the proposal in the document, I am still not sure what code would like where you want to apply ConfigureAwait to both retrieveal of object and disposal. Maybe something like this would work, but it would still not apply to multiple variables case: await using (var foo = async GetAsync().ConfigureAwait(false)).ConfigureAwait(false) { ... }
Very cool! Lot more succinct than my "script" /program in C#
 // Makes the JIT remove all the other range checks on keys _ = keys[10]; This bit is confusing to me, how does this tell the JIT to ignore range checks?
This is the right answer. It will show you where your problem areas are.
Pulling this out of my butt, so correct me if I'm wrong, but since the code explicitly accessed index 10 without an error, the JIT can safely assume that all other indices below and including 10 exist, so it doesn't have to emit a range check
If I'm not mistaken it verifies that there is 10 elements and then just can skip boundary checks for smaller indexes. Seen optimization like this, but it was a for loop. When it was normal loop it had to check for every index, but when the loop was from end to start, then it checked bounds just once.
Listen to this guy's butt. I remember seeing some optimized code where people loop through an array from highest index to lowest to get the same range check optimization and not change the algorithm too much. Doesn't look like the same could be done here, so I guess just accessing the last element and throwing it away is faster than range checking 10 times.
Let me just take a quick look at my crystal ball... huh, nope, nothing about the source code of your homework in here. Guess I can't be of any help, sorry.
Thank so much for this, it worked! Since I generally code in C, hence I was trying to use incremental operator within the loop so that it doesn't keep over-writing on the first element of the array but it was continuously throwing an error as to cant convert from STring[] to String, but anyways your solution works like a charm!
ah, I actually did try to convert to list, but the only place where i was going wrong was with the following line: temp0.AddRange (dimensions); as I used, dimension.ToList() because I thought dimensions needs to be converted from enum array to list but seems like it doesn't need to because your solution works!
Hmm that makes sense but it reminds me of an article about non 0 index based arrays being supported in the clr, so sounds like that could fail?
You only do this if kind of optimization if your code creates and controls the array and you know exactly how many elements will be in it.
You could try something like [Array.Copy()](https://docs.microsoft.com/en-us/dotnet/api/system.array.copy?view=netframework-4.8#System_Array_Copy_System_Array_System_Int32_System_Array_System_Int32_System_Int32_), which would get you there with some extra bookkeeping. If you know that the `dimensions` would always have exactly one element, you could also use [Single()](https://docs.microsoft.com/en-us/dotnet/api/system.linq.enumerable.single?view=netframework-4.8) to get that one value, but you'd still need to keep track of where it went in `temp0` (so as to just overwrite the same location in the array, over and over). The lazy solution is something like I presented, though.
That's sad news - you are right ofcourse, I must've misread what the changelog said.
What have you tried so far?
Poster didn't know there was one, probably...
Thank you, really appreciated :)
Essentially the code I showed in the comment. I tried imbeding the movement method in an if statement in this method, but that did not work. I'm really at a loss for how to get the playerobject to move from (for example) square 1 immediately to square 38 (where the ladder goes).
Exactly. In this issue there's a comparison of the JIT output and performance with and without that line: https://github.com/dotnet/coreclr/issues/24158
What is the code for the 'move' method. The snippet you shared literally just reads into an array
For our documentation we create several products and it depends on the audience. Training manuals for end users, as an example, are documentation. So is code-level comments that pop in intellisense. In broad strokes: * Identify your audiences, and build materials for them. It won't be a one-shot deal. * Method level stuff is described at the method level. * Project/library level documentation is stored in the repo at the wiki level. How to work with di, packages you need to install first to work on it, etc. * Overall how-this-piece-talks-to-this-piece stuff is handled in a visio. * Help desk material is (I feel) best handled in a big word/google doc that can be copy/pasted into knowledge base articles. So there's one "master manual" but you can easily move pieces into a ticketing or self-service system. * Small &lt;1 minute videos for end users about "Let's perform action x together, here we go." There are probably other ways to do it. We've got several dozen large software products with piles of documentation and we follow this format for all of them. It might not be perfect, but it's consistent.
private void MovePlayer(int roll) { int gameplay; int pPosition = playerBoardNumber[playerTurn - 1]; if (pPosition + roll &lt; 100) { pPosition += roll; gameplay = gameplayPositions[pPosition - 1]; if (gameplay &gt; 0) { pPosition += roll; } playerBoardNumber[playerTurn - 1] = pPosition; Vector3 newPlayerPosition = squarePositions[pPosition - 1]; newPlayerPosition += player0[playerTurn - 1]; playerArray[playerTurn - 1].transform.position = newPlayerPosition; } else { playerBoardNumber[playerTurn - 1] = 100; playerArray[playerTurn - 1].transform.position = squarePositions[99] + player0[playerTurn - 1]; } } I have the GenerateGameplayArray() called in my start function
This should help you get started. https://docs.microsoft.com/en-us/visualstudio/profiling/profiling-feature-tour?view=vs-2019 and https://docs.microsoft.com/en-us/visualstudio/profiling/cpu-usage?view=vs-2019 and https://docs.microsoft.com/en-us/visualstudio/profiling/memory-usage?view=vs-2019
It's a bit round about but if you're using microservices you could stand up a net framework 4.x web api to access the data and call it from the core app. It may not work within your organization but it's a way to get access to the data with out having to write and maintain a custom database provider. If you have to write your own provider looking at the SQL or pomalo my sql provider will be a helpful start
And how do we know if a square is a chute or a ladder?
The built-in visual studio profiler is nice but it doesn't always (almost never) show me instantly what the problem is. Whenever I profile memory/CPU I use the Resharper tools: DotMemory and DotTrace. In my opinion the tools are easy to use and they provide many functions to show you where your issues are. For CPU profiling I mostly use the timeline profiling feature from DotTrace because it provides an overview of what each thread is doing at the time and can give good insight on the efficiency of your code. I have used SciTech .Net Memory Profiler before I used DotMemory because it is able to load memory dumps and analyse them for leaks but now that DotMemory also supports loading memory dumps I switched to DotMemory as it's way easier to use. A free tool to profile CPU is CodeTrack: [https://www.getcodetrack.com/](https://www.getcodetrack.com/) I have had mixed success with this one. I also don't think it provides a really good interface/toolset but hey, it's free! I don't know of any free memory profiling tools outside the one in VS.
&gt; I wouldn't recommend you start writing hundreds of lines of SQL manually in production code - the entire point of EF is so that you no longer have to leave the .NET environment yet still be able to easily interface with databases. I find that for more complicated queries, it's easier to write SQL than to do it in EF.
the streamreader txt file has 100 numbers. If the square is 0, then nothing happens, if the number is any other number, the player moves to that square on the board (if you land on 1, you move to 38). txt file is laid out like 38 0 0 0 etc
Depends entirely on how the data is modeled - if there's only typical dependencies then very basic include statements will get you most of the way through navigation properties. No reason to write lots of joins when the classes already have an understanding of its relationships - EF will fetch it for you. If the classes are flat without navigation properties, queries are id-based without properly planned aggregate roots then the EF code will become messy. The idea is that if you plan ahead properly in the business logic part of your app then you won't have to write complicated queries. This is of course not always possible if the database already exists, but there are still important considerations to make, instead of just representing each table with flat data-storage objects, as I've seen happen a lot.
Keep in mind that EF Core 3 is full of breaking changes. So if you get this working, it will need to be updated for the next version.
In my current project, more than 90% of the queries are simple enough to be easily done with EF as you describe. But the remaining few percent are annoying or impossible to achieve with EF. These are typically more involved reporting type queries. I don't think it's a data modeling issue; the tables are well normalized, and we are using the standard navigation properties.
idk why you're getting downvoted. This is clearly the best answer so far.
I find that Red Gate ANTS is better at finding performance problems. And DotMemory is better at finding leaks.
You can punch this sort of thing into Sharplab.io and compare IL if you're curious. They are not quite identical: the first creates a delegate from DoWork() and passes it to Task.Run(Func&lt;Task&gt;); The second grabs a cached delegate that calls DoWork() with some Task-related state machine magic and passes that, instead.
I knew it but in my very short time exploring it, there wasn’t a quick win. It seems like it needs some background and experience before a novice like me can use it. But surely I’ll keep going back to it if nothing else gets available as option. Looking at something which will get us out of water (I know it sounds cheating/ short term thinking) but I need a quick win here.
Once it gets to the point that you have to collect data like this, there is a pattern for it, and a refactoring may be in order. The concept of aggregate roots is very nice - instead of representing and exposing every minute detail of data in your database you instead create class objects that have an understanding of their relationships, beyond just navigation properties. Again, depends on the scope of your app - DDD might very well be overkill for what you're trying to do, and it requires more extensive planning, as well as willingness to actively refactor design as you get a better understanding of the application domain. Not to mention the time it takes to fully understand what exactly is meant by aggregate roots. There's books about it and hours long pluralsight courses, so it's not exactly easy to get the point across in a reddit comment.
Thanks for the help. I didn’t know about sharplab, that helps a lot
Thanks for the pointers!
.Net does support those, but they're different types from regular arrays (and ones that cannot be expressed in C#). So if you have e.g. `int[]` in C#, you can be sure it's a 0-based array. To see this, try: (int[])Array.CreateInstance(typeof(int), lengths: new[] { 1 }, lowerBounds: new[] { 1 }) This throws: &gt; InvalidCastException: Unable to cast object of type 'System.Int32[*]' to type 'System.Int32[]'.
I wish I had an android phone so I could check it out and give feedback. It's a really interesting project. I'm still learning C#/.NET and I'm passionate about mental health.
This is good news for ML.NET
Thanks
Thanks for the inputs
I had somewhat of a similar problem. I needed to get the resolution of all monitors, and needed to know when the display config changed. I never managed to do it from a service, I had to launch a process into the user session to be able to actually get the correct info.
Thanks for the link to the book. My problem with profilers is that I can never understand how to get what I need to fix my problem from the tons of information they tend to spew out. Does the book explain how to use a profiler to resolve memory issues or explain concepts from the perspective of one or more profilers?
So, kind of...it's far more in depth into how the memory management works in .NET. Check out dotMemory though it has some pre-built templates to analyse common issues. Should say that memory analysis in .NET (or other frameworks) is rarely a quick fix type situation...again unless there's terrible crimes happening in code (no dispose etc) the gains can be hard won....
why are you adding roll to pPosition again again if gameplay is greater than zero? shouldn't you be assigning pPosition to gameplay (which if i understand correctly would "move" the player to that location).
I had this problem, pinvoking some kernel calls should work for you.
 let resultDateString = moment.tz(initialDateString , format, zone).utc().format(format); As you're only specificing a general "zone" but not a specific timezone like CET/CEST, what happens if `initialDateString` lies within the ambiguous hour that could either by directly before or after a DST change?
thank you, will go through your explanation
If I understand you correctly then depending on the Date we picked we need to figure out whether the Date belongs to Summer Time or not. For instance Spain is now 2 hours ahead of UTC. Not long ago it used to be just 1 hour ahead. I don't know how to pass CET / CEST to moment correctly. One more thing - I hardcoded the timezone. Really it should be dynamic. The page should work out timezone and DST dynamically (by location of a hotel and the date we picked).
The problem is that when summer time *ends*, 02:59:59 CEST ticks over to 02:00:00 CET (for example) and the hour 'repeats'. It's impossible to unambiguously determine DST based on local date/time alone during that hour, the value "02:30:00" could be either. [According to the moment.js docs](https://momentjs.com/timezone/docs/#/using-timezones/parsing-ambiguous-inputs/): &gt;Moment Timezone handles this by always using the earlier instance of a duplicated hour. [...] You won't be able to create a moment with the later instance of the duplicated hour unless you include the offset when parsing. OF course for this example usecase one may well argue that not being able to make a booking with a check-in happening during one specific hour in the middle of the night once a year is perfectly acceptable, but for other applications it may not be.
Thanks for sharing. These would be great candidates to put into an editor.config file. Also, the only class/code in your repo doesn’t follow the guidelines.
I'm a bit late responding to this but - why does Add-Migration know to add migrations for things like Roles that haven't even been defined yet?
&gt; Indention: Use tabs with size of 4. Them's fightin' words!
Good question. When Identity is added to the project, the scaffolded DbContext class (Areas -&gt; Identity -&gt; Data -&gt; ApplicationContext.cs) inherits from IdentityDbContext. `public class ApplicationContext : IdentityDbContext&lt;ApplicationUser, IdentityRole, string&gt;` If you look at the [source code](https://github.com/aspnet/AspNetCore/blob/master/src/Identity/EntityFrameworkCore/src/IdentityDbContext.cs) for IdentityDbContext, you can see where the tables for UserRoles, Roles, and RoleClaims are defined and configured. The rest of the user tables are defined and configured in [IdentityUserContext](https://github.com/aspnet/AspNetCore/blob/master/src/Identity/EntityFrameworkCore/src/IdentityUserContext.cs), which IdentityDbContext inherits from.
Especially for a hotel booking app, you want to store local time, along with the time zone. [Jon Skeet - Storing UTC is not a silver bullet](https://codeblog.jonskeet.uk/2019/03/27/storing-utc-is-not-a-silver-bullet/).
For events it isn't enough to just check for null. You need to either save to a local variable and then check for null or use ?. You could probably say the same for a delegate/Action/Func with ?.Invoke Also don't forget to remove the event handler (-=) when done with it. This is a major source of memory leaks. The best recommendation for events is probably to not use them at all. For embedded assignment, it's useful for e.g. reading from a Stream. Also Try* methods, although I'm not sure they count. Just use with care.
You should definitely listen to the two latest podcasts from codingblocks.net they talk about how to handle datetime including a summertime, offsets, leapdays, leapseconds etc...
Guys, First off thanks for some useful tips (you all are awesome, I expected nothing less!). I spent sometime today in getting hands dirty with dome trial version of dotMemory. Please route me to appropriate forum, if there is one where I can ask a follow-up question (I'll try SOF if unsuccessful here). &amp;#x200B; Question: I found memory consumption as per various snapshots I took was not as bad as it appears from the Process in Task Manager (its a console app which processes a big data load). What I found was Gen (0 thru 2) consumed very little to mediocre memory (at least in various snapshots), but a major chunk was assigned to a category of "unused memory allocated to .NET". &amp;#x200B; Does someone has guidance on why is it still assigned to .NET, how to claim the memory so the memory foot print doesnt look as bad on server (so can make sys admins happy!).
int i = 0; while(i &lt;= 7) { Sum=Sum+i; i+=2; }
For loops work by looping until something evaluates to true or false. We use them highly for iterating through a collection. While loops run all of the time, they can even restart until a condition has been met. They can be quite dangerous and or problematic but there definitely are uses for them. As a beginner you are going to want to focus on for loops the most. Very rarely have I come across a situation in which I had to use a while loop, and I’ve been programming for 6+ years.
This makes me want to inspect all my code’s IL.
IMO, here's how I see the difference... * For loops are great when the number of iterations are known, whether it be a constant or the result of a once-off calculation (like `collection.Count`) * While loops are great when the condition needs to be evaluated during every iteration (like reading a file line by line, and you have to evaluate whether or not you've reached the EOF). These are two similar tools (loops) with different applications depending on the scenario. Sometimes a while makes more sense than a for, and it doesn't mean one is inferior to the other. I decide on which one to use with the simple guide above :-)
I cant act on that since you dont tell me what you think is wrong.
#Tabs forever
Pretty sure it's .editorconfig
You're right - they're basically the same thing. The only difference is that for-loops allow the programmer to specify something that happens before the loop starts (e.g. `int i = 0`) and something that happens after each iteration (e.g. `i += 2`). The exact same behavior could be achieved using a while loop and putting `int i = 0` before the loop and `i += 2` in the end of the loop body. By using a for-loop however, it is clearer to the reader (or to me at least) that the loop variable `i` ranges over the values `0, 2, 4, 6` in that order. I don't need to look at three different lines - it's all there on the very first line. And that is the point of for-loops.
While(true) is super useful inside of coroutines in a way I don’t think for loops could be. They’re also good for when you don’t know how many times you need to run a code segment, which in my experience in game dev is very, very often.
I knew doxygen from some java-docs a few years a go. Gave it a try and Im amazed. Took some time to configure, but the result is great. Thank you for this tip
Sanitizing input will always be import.
You could have a test where you try to SQL inject attack your API in different ways. It should put your mind at ease.
Yep
never - trust - inputs
Not sure what you people are doing but I use while loops all the time.
For-loops are just syntactic sugar for while loops. for(A; B; C) { D; } is equivalent to { A; while(B) { D; C; } }
parameterised input just means it won't execute as SQL when it hits the SQL server. there's nothing stopping anyone from writing a javascript script that calls methods from their external javascript file that's dumped right into your page when the value is read from any text field. that's why you always without fail must sanitise inputs no matter where they're located. also keep in mind that a malicious user can change inputs that are hidden from the UI, so even if he's typically not allowed to write &gt;&lt;"" etc due to JavaScript blocking the characters, there's nothing stopping him from modifying the content where JavaScript won't trigger.
Always sanitise your inputs. It's a small but major step that could save you headaches on the future.
I suggest reading [Avatao Blog Post](https://blog.avatao.com/XSS-Case-Study/) . Google had an XSS attack vector on it’s main page despite sanitizing... There is never a silver bullet.
Take a look at http://www.jsfuck.com/ Even when sanitizing inputs you are in trouble and without it you are doomed. So yes. Never trust user input and limit it as much as possible. Enforce max lengths, data types and so on. Always sanitize and escape any output. Be paranoid :-)
How would you do cross communication between dependencies without events? Curious as we use events a lot currently.
&gt;from their external javascript file that's dumped right into your page when the value is read from the database and presented as "safe", such as a name in "Hello Username". ASP .NET's Core render engine escapes parameters inserted into View by default then how?
Are you writing custom param binders that escape input "on fly" instead of using framework's ones?
I mean I know, but data inserted to View is escaped, so it aint gonna be executed as js
I don't, but I'm not sure how it could be abused because framework escapes it by default when creating View and EF Core uses params
Sanitization matters any time you're concatenating strings with different formats together. For example, if you're concatenating HTML together with some plain text from the user (e.g. their name) then you have to escape the plain text, because for example &lt; &gt; has no special meaning in plain text but it does have a special meaning in HTML. So to make the strings compatible formats, you have to convert the user's name to valid HTML text by escaping it. In your examples, e.g. SQL parameterization and view rendering, the framework is doing the underlying string concatenation for you and so it also manages the different formats of those strings, escaping where necessary. So it's not necessary to escape anything yourself there. Any situation where you are concatenating strings together yourself, think about the format of those strings to decide if one needs to be escaped to be valid in the format of the other.
Is while syntactic sugar for if + goto?
This is going to become the most downloaded extension of all time imo.
Essentially? Yes. Syntactic sugar is not a bad thing. C# is full of it, and so are most modern high-level programming languages. (Gods, I wish Java had extension methods...) But it is worthwhile to learn what they actually stand for, especially when you're starting to learn programming. Too many programmers use `for(int i=0; i&lt;[collection size field / property / method]; i++) {...}` as if it was a holy prayer and get stumped when they need to use it for something else.
````for (;;)``` compiles to the exact same thing as ```while(true)```
This makes 2 assumptions 1) nobody at your office is using html.raw() or anything similar to work around some other harmless usecase issue where a &lt;pre&gt; tag wasn't rendering properly, and that nobody ever will. 2) your view engine will always be cshtml
What about when you do an Ajax call? Or use at the end of a src attribute Maybe your view doesn't do that now, but what if you modify it to do that in the future and don't remember to check since you got used to not worrying about it. Never get complacent with security
&gt;It's tightly coupling your software to a piece of technology, and a coding practice, that could be avoided by just following a fairly simple and widely accepted industry standard. That's why I'm asking about those binders how people do that? do they write custom data binder to escape every input? do they write custom attributes to escape every input? do they escape input in every controller's method "manually"?
Insufficient data for meaningful answer.
Could you include your code? Thanks :)
Ah, I was hoping to avoid that. It's not that great of an issue, I'm just curious as to whether someone knows what that the "¤¤¤" meant.
There's some good advice in there, but a lot of it quite old fashioned. There's no mention of ```var``` for example or linq which has its own stylistic quirks. Some of it is a bit weird/wrong: &gt; Finalizers: Avoid. Use the C# Destructors. Do not create Finalize() method. There's no such thing as a destructor in C# the ~ prefixed method is a finaliser. Also, While you should generally call Dispose, or put an IDisposable in a using block, HttpClient is an example of when you don't do that. There's no specific convention that says you must call a "Close" method either, and there's no guidance here on what to do if you have Dispose and Close in the same class. Also, being picky, HttpClient is a weird edge case where you never call Dispose. There are a few others, but that's one that catches people out. The event advice could be updated to include the null conditional operator, another operator that isn't mentioned. &gt; AssemblyVersion: Increment manually. Depends. If you do CI you probably want them incremented automatically and if you're not doing CI you should probably be doing CI. Also no mention of having a global assemblyInfo. You do later say "avoid 1.0.*" syntax, so perhaps this just needs tidying up. &gt; 47: Never declare an empty catch block They have value. Sometimes you just want to nom it. Also, there's a typo in the code example just beneath it. Also, no discussion of the new (c# 6) exception filter stuff Use lock rather than Monitor.Enter is fine, but related, there's no discussion of ```async await``` &gt; Delegate or Event: Treat as a Field. Sure, but no discussion of its property like syntax where you expose its add and remove parts. &gt; Segregate interface implementation by using #region statements. This one is just personal preference, but #region is a dreadful idea anywhere. The code commenting section has issues. 30 and 32 seem to have lost their content in the mark down somewhere :) &gt; 25. Always explicitly initialize arrays of reference types using a for loop. Is this related to the jit optimisation related to bounds checking when using for as opposed to foreach? Speaking of which, I see no reason to avoid foreach for string arrays (35). 34 in the same section says avoid recursion, use loops or nested loops. A recursive method can be converted to a stack based model, but not really a nested loop model. I only skimmed through. It's generally good advice, but really needs updating for anything post c# 5 and .NET 3.5 era stuff.
I agree, but how? custom data binder? custom data attributes? performing ``var first_name = SanitizeInput(input.FirstName);`` on every input's property?
I don't suppose you were trying to output it with a specific culture that wasn't available? I had a similar experience when my app was deployed in a Docker image based on aspnetcore-alpine. All formatting chars were displayed as ¤'s. Turns out no cultures were present on alpine. At all. Since you haven't posted any code maybe you can look into that.
&gt;level 1rockvistaOriginal Poster1 point · 5 hours agoGuys,First off thanks for some useful tips (you all are awesome, I expected nothing less!). I spent sometime today in getting hands dirty with dome trial version of dotMemory.Please route me to appropriate forum, if there is one where I can ask a follow-up question (I'll try SOF if unsuccessful here).Question:I found memory consumption as per various snapshots I took was not as bad as it appears from the Process in Task Manager (its a console app which processes a big data load). What I found was Gen (0 thru 2) consumed very little to mediocre memory (at least in various snapshots), but a major chunk was assigned to a category of "unused memory allocated to .NET".Does someone has guidance on why is it still assigned to .NET, how to claim the memory so the memory foot print doesnt look as bad on server (so can make sys admins happy!). May be due to high fragmentation on the LOH or that the GC just does not feel like collecting. If you have lots of memory to spare and basically no memory pressure, why should the GC bother to stop your app to collect?
Looks like three [generic currency symbols](https://en.wikipedia.org/wiki/Currency_sign_(typography)). Dunno why you'd be getting that, though.
Op, nobody in this thread knows what they're talking about. I bet you already know more than them. Don't follow their advice
The extension extension is my favorite extension.
That's odd. I'm literally just returning a double value from a different class. Haven't had anything like this happen before.
Well, **somewhere** you try to transform it to a string.
Imagine real life. Do a squat **for** every sock on your floor. You **know** the amount, so you do it that many times. Alternatively, **while** the sun is out, do a squat. You could be doing only one squat, or maybe zero if the sun has already set. Or maybe hundreds if the day just started.
I think I read somewhere that `for (;;)` is actually better because it doesn't evaluate anything (basically replace by a non conditional jump), while "while" does evaluate the condition. But may it depends on the compiler version. Possible an old compiler wasn't doing the optimization.
You can [express pretty much all of the loop structures in terms of one or the other loop structures](https://sharplab.io/#v2:C4LgTgrgdgNAJiA1AHwAIAYAEqCMBuAWACgNscAWQo41AJnRoGYyA2bWsgdkwG9jMB2ZrjapymALIBDAJZQAFAEpe/QWoBuUsJgCemALyYoAUwDumADIyAzsAA8c4AD5emHDEy0PjDwF8qamqqgZgAYgD2YACiUgDGABYW4eEADvI6igEhYZFJqemZwYEA6vEyADbGeWkZWSEAIuGlFVXJNYVE2ZgAklAAZnIywMbNldUFdYEA4uHA4eO1RUGd2bgAnPIARIA8G4Ag+5sdar5FRSlgMprDrNjiEdFxiW12ACpO8riMLy4ZKish61s+pFjA8DpM1ECwCCEph5JptAAPTByXTKPh/LpkDYIw7ZY4Y/HLNRnC5SK4iG45MDVL7vHCfV6o35dAGbSFgpaCUhwrSYABeBl0ADopsZgFEoBAALbGMBkyJKNGckIAehVmGAZWsyO1UkwsXK0useikUDgmDJOhSMliUnKmEhmHKbSFysCjp52lsqUFfKFEnC6mMADljAjgEo8JhvSkozHff7AyGwxHFEqMZjBPDMEjDH6AMIQMBQqDAcGZrHyHHlkKEvFFOsCU7nS7Ga5iTCjVqpWkfL5M9EsnAbTamMqVDkZrlYT38wU6EViiXS2XysCK5kVsctWF+gNB0PhpSYABkJ/5QsLxeMpZ1mGzOM3Fa5w6ruMzjcCn8/zdJ5JwojiI0XY0q8dIMt86ZDiOcDhJgQoIZg24Tu+gTctmAqGAuoripKMpynM65pk+mIyH0u6JgeKYboOz6CLBJF0VmvK5heV4lmWbrPgC1ZcXiSHjm28h7kmh6pqhXSfkcDYnBiJKtu24i9AMUBDCMgmgW8faMj8tH/K+mxyCpakCS0k4sjOGHzouuErgRCrEXpmLIUJwCQMYUFMci5HyAAhCJVFHo5mAAEZQlIADWUZSRWD4JuxN6cVOmY8RJ9bJZg36ycSLZkm2FIdjMcyaeB/a6W6rIAOazHBAC0tWYLBUAAOTAI1cGajY5mrJZvKYcKOHLvha40XxAjOqkADKwBaKAY3eRR+7JkFnlMXFeaXkWHE1piqU7V01VzE6bTTbN+2CL4ghullRC+EAA=).
You can't. Because as much as you try to write the promise-land, someone will forget to use it.
For loop is very structured. It lets you initialize something before the first loop iteration (and if that initialization declares a new variable, the variable is scoped to the loop), it lets you define condition to continue looping, and it lets you specify an action to execute after each pass through the loop. Because of this, for loops tend to be used where we need this structure. Using a for loop where we don't need all of it's parts feels "heavy", it's too much structure if you don't need it. Sometimes, for instance, you'll see the two loops used interchangeably, though preference in this case would be for the while loop: for(;condition();) while(condition()) for loops are often treated specially by convention. For example, most people won't modify the loop control variable in the body of the for loop. This is bad form: for (int i; i &lt;= 10; i++) { ... i = i + 5; } Compilers won't warn you about this, generally, but whoever is doing your code review is probably going to give you crap about it. In a for loop, the loop control variable serves a special purpose, so coders tend to treat it specially. If, on the other hand, you need to modify the loop control variable while the loop is executing, you'll probably want a while loop. There's less structure and people have fewer conventions around it. If I want to find the innermost exception object, we typically use a while loop: while (e.InnerException != null) e = e.InnerException; So, as a general rule of thumb, for loops are used when we want a fixed number of iterations and have initializers, conditions and actions to perform after each loop, and when we don't need to monkey with the loop control variable inside the body of the loop. While loops are generally used when we only have a condition and that condition either doesn't depend on any particular variable or when the loop control variable might change in the body of the loop. Basically, it's the principal of least surprise: Be consistent in the way you use your loops, so that when you see a loop in the wild you know what to expect from it.
Theory: What about doing it on layer between http request and controller? Just like ASP .NET Core binds it right now, so nobody has to remember about it because that's gonna happen under the hood For example here's code that can extract form data if (HTTPContext.Request.HasFormContentType) { foreach (var item in ctx.Request.Form) { Console.WriteLine(item); } } Or I'm thinking wrong?
The difference is "scope". With a `for` loop, the variables initialized in the "header" are only visible inside the scope. On the other hand the `while` loop (and its cousin `do while`) tends to "leak" the loop variables outside of the scope. It could matter in some cases. In all other it is a Metter of style ans code consistency. When you see a `for` loop you expect an iteration. When you see a `while` loop you expect to have some "conditions" trigger the end of the loop.
You generally can't apply the exact same sanitation method to every request. For example, you might think, "I'll just ban single quotes". But then you have someone whose last name is O'Leary and that doesn't work. Or you require a-zA-Z and kanji is inadvertently banned. You need to understand what you're sanitizing in each instance and work appropriately for that. The best way to do that right now is code review and code analysis tools.
So, we're doing something like ``var firstName = SanitizeInput(input.FirstName, SomeSpecificSanitizationRules);``?
I've seen that when a variable got assigned the result of a divided by zero calculation, I think.
I don't get it, are you suggesting op should html encode their strings even though their template engine already does it? That's objectively wrong, then you will cause all the user's &amp;s to be transformed into &amp;amp for example which is clearly incorrect behavior. &gt; It's tightly coupling your software to a piece of technology No it's not. Not using the framework is what creates coupling: by escaping manually you are creating strings which are dependant on being output a certain way. For example what if you are escaping all your strings manually, and now you decide you want to change from html output to json output. You will have to change all your escaping code because it's coupled to the output code. The view renderer should be responsible for the escaping, not your controller code
No, don't do this OP. In the case you are considering, your framework already sanitizes that string. I think people here are misunderstanding your question
#Tabs &gt; spaces
I'm pretty sure they both compiled the same since 3.5
But if I started returning data in json instead of throwing it into ``View`` then I'd need to do it, or not? Because let's consider this example: I have controller's method like that: public async Task&lt;IActionResult&gt; Index([FromBody] TestInput input) { } I'm posting json like that to that method: { "Test" : "&lt;script&gt; alert('123') &lt;/script&gt;" } Then Visual Studio sees it like: https://i.imgur.com/wbUajOz.png
I'll look into that. Thanks!
Sanitizing things you get from your database is still sanitizing input, just indirectly. On actual user input, you sanitize the data logically, i.e. phone numbers follow the right format, no one's trying to put "ayy" in a number field, etc When rendering, you sanitize/validate the user input that you stored in the database, to make sure it doesn't do anything sneaky. Sanitizing input has always been a murky concept in practice, because it's not just direct user input, but any indirect untrusted input, whether read from a file or a database. It's more about validating input and sanitizing output, really, I suppose.
Yes, it should be stored in the database just like that. Otherwise the data would be tied to a specific output format and you won't be able to change it later. Plus you should be doing any sanitization on the output side anyway, so by doing it on the input side too that means it's going to be happening twice, which is wrong for reasons I described elsewhere in the thread. If you wanted to change your code to output JSON instead of HTML, then you could return a JsonResult instead of a ViewResult from your controller method and ASP.NET will serialize it into JSON automatically, intelligently escaping each field specifically depending on what data type it's supposed to be. For example: https://stackoverflow.com/a/4565715
Would be nice to have editorconfig rules for these to copy paste.
Thanks I was confused about having things like ``Thomas &amp;#039;De Second-Name`` In database because working on it would be tricky as hell outside your application
&gt; working on it would be tricky as hell Exactly. The database is a storage of facts, not a storage of outputs. Keep the data in the working format while it's in the db and only convert it to the desired output format once you actually know what that output format is gonna be.
About: &gt;JsonResult instead of a ViewResult from your controller method and ASP.NET will serialize it into JSON automatically, intelligently escaping each field specifically depending on what data type it's supposed to be. Hmm, that's what did you mean? ``return Json(new { test = "&lt;script&gt; alert('test') &lt;/script&gt;" });`` changes into: ``"test": "&lt;script&gt; alert('test') &lt;/script&gt;"``
Regarding your edit: that's working just fine, &lt; &gt; doesn't need to be escaped in JSON because triangle brackets don't have any meaning in JSON/JavaScript. You will notice though that double quotes DO get escaped here though because those actually have another meaning in this context.
Ehh I forgot about context dependency Anyway thanks!
&gt; There's no such thing as a destructor in C# the ~ prefixed method is a finaliser. That's not *strictly* true. They are actually called destructors in the C# specification: https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/classes#destructors As for &gt; Do not create Finalize() method. That won't actually compile, so no rule is needed.
Ok, that's the last thing probably: I'm having ``&lt;script&gt; alert('test') &lt;/script&gt;`` in db, I'm returning it in json, so it's stil dangerous, but in the next step for example I'm escaping it with e.g angular/react/ or some js https://docs.angularjs.org/api/ngSanitize/service/$sanitize &gt;The input is sanitized by parsing the HTML into tokens. All safe tokens (from a whitelist) are then serialized back to a properly escaped HTML string. This means that no unsafe input can make it into the returned string. &gt;Angular automatically sanitizes data if you use the ng-bind-html directive. This means it strips out HTML entirely. I got this right?
https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-options/command-line-building-with-csc-exe
You can actually read a file line-by-line in a for loop extremely concisely. Assuming your file is opened in a StreamReader: for(string line=fileReader.ReadLine(); line != null; line = fileReader.ReadLine()) { &lt;do whatever with the line&gt; } (You should probably add some try-catch around it.) Tricking out for-loops is also great fun because it allows you to modify the collection you're looping through, unlike foreach loops (while loops are also useful for this). Say, you want to loop through a List `foo`, removing elements from it matching a predicate and moving them to list `bar`: for(int i=0; i &lt; foo.Count; /*intentionally empty*/) { if(SomeBooleanFunction(foo[i])) { bar.Add(foo[i]); foo.RemoveAt(i); } else { i++; } } IMO the best way to decide whether to use a `for` or a `while` is: * Do you absolutely want to guarantee that the loop runs at least once? If yes, use a `do {...} while(&lt;continue condition&gt;);`. If no: * Do you want to loop through a collection without adding or removing items? Is the index of the item unimportant? If the answer to both is yes, use a `foreach(var x in collection) {}`. If the answer to any of them is no, answer the following questions: 1. Is the continue condition a simple one? (like `line != null` or `i &lt; foo.Count`)? 2. Do you need a loop variable that can be set up in a single instruction and is irrelevant outside the loop? 3. Do you want to give this loop variable (or another one) a new value in each loop? If all three are true, use a `for`. If two of them are true, consider using a `for`. If only one or none of them are true, you should use a `while`.
 [https://www.youtube.com/watch?v=SsoOG6ZeyUI](https://www.youtube.com/watch?v=SsoOG6ZeyUI)
It depends what you want. What you've done so far is escape the string so that it can be legally included in some JSON as a JSON string. Now, when you parse that JSON, get the string and want to include it in an HTML element, you will again have to escape it for inclusion into HTML code. For including it in the HTML code, you have a couple choices. I think for this situation, ng-bind-html is probably NOT what you want, because ng-bind-html specifically allows some "safe" html tags like bold, italics, etc. I think what you actually want is to allow NO html tags, so you would just use regular ng-bind or {{double curly bracket notation}} to insert the string. These two methods escape ALL html so that the string will be fully converted to plain text.
This is a temporary solution, as I would have to mention the file name everytime using "-reference" parameter in the command line. Is there any way to mention this filename in the coding file itself?
Removed: Rule 4. Please make sure your code is properly indented and formatted for display on reddit.
I would happily help you if you edit your post to make this code readable. [https://www.reddit.com/r/web\_design/comments/neukr/posting\_code\_snippets\_properly\_on\_reddit/](https://www.reddit.com/r/web_design/comments/neukr/posting_code_snippets_properly_on_reddit/)
[Walkthrough: Use MSBuild](https://docs.microsoft.com/en-us/visualstudio/msbuild/walkthrough-using-msbuild?view=vs-2019)
Use a proper build system. Compiling like that is gonna suck when you have more than one file. Or at least, put the commands to build it in a batch file.
Are you refering to the build option in visual studio? It only creates .exe file. Here is the thing: I want to compile my .cs file using csc.exe so that I can get .dll file I need .dll file because I am writing a powershell script which would than run the .dll file
I wasn't, I was referring to the command line msbuild tool. However, Visual Studio can produce dll's just fine. Set `Project properties -&gt; Application -&gt; Output type`to `Class Library`.
&gt;I would have to mention the file name everytime using "-reference" parameter in the command line. Write a batch script or just use a proper project. &gt;Is there any way to mention this filename in the coding file itself? No.
&gt;I need .dll file because I am writing a powershell script which would than run the .dll file PowerShell does not require it to be a .dll file. PowerShell can load the .exe just fine as well, as long as it's a .NET Assembly.
Not OP, what kernel calls did you make to resolve the issue?
**CLICK** **CLICK** **CLICK** **CLICK** *yucky*
Any recommendation to address GC Fragmentation? Can I find the source which is populating LOH if yes? May be I can stop that.
hi i changed it to a pastebin link.
thanks i changed it to a pastebin link.
Is one extra menu level really that bad?
 [https://pastebin.com/TD2Pp1uL](https://pastebin.com/TD2Pp1uL)
Sanitizing inputs was never the correct thing to do. This is what bad software written in PHP does. Input is properly encoded.
Umm... MSBuild is specifically designed to interact with compilers and other build tools for you so you don't have to. Project files are MSBuild XML schemas. Why, exactly, do you need to use csc.exe directly? You could always use the Roslyn/C# compiler libraries directly to generate assemblies during runtime. If you want a DLL, you just need to create a `Class Library` project instead of console/windows/web app. If you need to run some code from Powershell, just expose a static method in your library like `MyLibrary.MyClass.Run(string[])`. Powershell can then call that static method directly after it loads the assembly.
&gt;PowerShell can load the .exe just fine as well The .cs file is supposed to return an array of string which i am supposed to use in powershell script, if I call .exe file than would it still return the data to powershell script?
&gt;Why, exactly, do you need to use csc.exe directly? Here is the thing: My .cs file contains a function which returns an array of strings, now I want to use this string in my powershell script. So I though converting .cs file into .dll file will help me in doing the above. And I want to compile my .cs file using csc.exe so that I can get .dll file
Thanks for the suggestion, will experiment on translating doc into codebase style.
You are upvoted nicely but you didn't answer the questions. If you are using csharp then it's assumed they are probably running .NET Core or some .NET Framework. They are talking about View's so they are probably talking ASP.NET Core or Framework. Unless they are doing something stupid then they are probably pretty safe. Views are escaped. So this removes JS or naming issues, unless they are doing something dumb and *abnormal*. Meaning we shouldn't assume someone is going to do Html.Raw() or something silly. If we have a wild webdev doing that then that's on them -- not the OP. &gt; So, the only kind of dangerous scenerio may be with API, but I'm not sure thoughts? So in this case the framework *should* still protect you, assuming you're using normal libraries such as LINQ and EntityFramework and not doing something silly like an ADO.NET "SELECT..." and whatnot. They seem too competent so I'm going to assume they are using normal C# frameworks. So they are safe here. &gt; Are you writing custom param binders that escape input "on fly" instead of using framework's ones? *I* am using the framework (.NET Core 2.2 and soon to be 3 when it's out of preview). So to answer their other question: &gt; Do you insert into database data like Andrew-&amp;amp;#039;Queen? This depends. If it's in a professional setting (e.g. internal app) then I have to be super specific and I use more of a whitelist instead of a blacklist idea but I also *rarely* deal with kanji or crylic or whatever. At most I see spanish. However, historically I've just allowed whatever will go in nvarchar and if the user is stupid, then the user is stupid. I've occasionally ran reports on anything not from the English alphabet to see if I can spy anything super unusual and learn from. I honestly just let the framework handle it and bank of the fact that some superviser isn't going to name themselves "SuperHornyGuy6969" in the same way I hope they won't use emoji's in there too. **Feel free to correct me if I'm wrong** -- but I've learned to trust .NET to sanitize things for me *if I follow their rules*. I have no reason to believe otherwise. I also find it *very* telling how people here say "you should always sanitize your inputs" and almost every single one of them ignores telling you how, or offers any specific examples, or anything useful at all.
No, the assumptions are that people encode shit and that they know how to encode in the engine they are using. Anything else does not work and believe me I have tried. I have tried. One day you get your data into environment that is not HTML and the problems come. Also you already have one non-HTML environment that is the database. What are you gonna do, ban quotes because you don't want to make the assumption that everyone at the office will use parameters?
An .exe file is essentially a .dll file with a main entry point and some additional metadata. You would load and call methods in the .exe just as you would with the .dll. Don't execute the .exe.
The thread is so full of shit my head hurts.
.dll and .exe are the same thing. If your function is public and static, do what u/pgmr87 said, and target the .exe file in the loadfile method.
yes
Sanitizing is different than encoding and there is no magic recipe that's gonna fit all use cases. The frameworks (.net, angular, etc.) are indeed encoding by default and thus protecting you *unless you work around it*, for example using Html.Raw. Note that binding HTML code is not always bad, you may need it in some applications if you want to allow your data to carry some formatting (a mail client? a blog?). In such case you have to manually *sanitize* the input, stripping the unwanted and potentially armful tags and attributes (all scripts etc.) before storing into the DB (as a general rule a prefer to sanitize the input instead of the output, but it could also be done the other way around).
Yes. When my company moved from svn to github (enterprise) I looked around at what people were doing in other orgs. It was chaos. So in our org we have service-something, library-something, utility-something. I find it very helpful.
I only recently realized that csharp has the goto statement. So just use that 😀
Yes, you can use a memory profiler for that, like dotMemory, track the allocations and see what is allocating memory. Maybe your memory is not consumed by managed memory at all but unmanaged memory, but you should be able to see that as well when you analyse the software with tools like dotMemory.
It's great to know _how_ to compile by hand, but it's so much easier using Visual Studio. Or VS Code. Create a class library project, put your code in there and hit build. Plus if you're not already using an IDE, you'll find coding is much more comfortable and productive in a proper IDE.
If you want to go barebones, you can just write CIL directly. Jokes aside: There's a difference between knowing what certain syntactic sugar statements actually do (and being able to reduce them to their non-sweetened versions if necessary), and eschewing them in favor of those more basic forms. Sugar and salt exist for a reason: the former - when done right - results in more readable, cleaner code with less boilerplate, self-repetition, etc... and the latter can prevent programmers from making accidental mistakes that are hard to debug later.
Sure will give it try.
&gt;int\[\] dice = new int\[2\]; creates a new array which you access again a few lines later &gt;int test = dice\[0\] + dice\[1\]; dice\[0\] and dice\[1\] were only declared so when you try to use them the default value for int is used, which is 0. That means test should be 0 because obviously 0 + 0 = 0. I think what you want is some variable to actually hold the previous score. &amp;#x200B; Also maybe replace those if else statements below with a [switch case](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/switch).
No idea in your case but the #1 mistake people make when writing a sockets app is to assume it’s message based. It is not - it’s a byte stream protocol. So you will need a loop that receives chunks of bytes and appends them to a buffer until some logic determines that you’ve read “enough” to convert to a message.
Declare your sum from the first button outside your event. This will let you access it from both buttons. Also there is no need for this if statement. if (sum == 4 || sum == 5 || sum == 6 || sum == 8 || sum == 9 || sum == 10) If it's not 7 or 11, and the not 2, 3 or 12 then it has to be one of the other numbers. Just do an else.
I'm guessing a global variable would be fine for keeping track of the previous score. Once you add it you can remove &gt;test = dice\[0\] + dice\[1\]; ,replace all &gt;if (test == &lt;number&gt; &amp;&amp; sum == &lt;number&gt;) with &gt;if (previousScore == &lt;number &amp;&amp; sum == &lt;number&gt;) and add &gt;previousScore = sum; at the very end of this function
Try using the [SendKeys class.](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.sendkeys?view=netframework-4.8)
unfortunately you can't really pattern match [ValueTuple](https://docs.microsoft.com/en-us/dotnet/api/system.valuetuple?view=netframework-4.8). If you still want to use a switch case you can do &gt;if (sum == 7) { MessageBox.Show("you lose!"); } &gt; &gt;else if (sum != previous) { previousScore = sum; return; } &gt; &gt;// now we know that sum and previousScore are equal &gt; &gt;switch(sum) &gt; &gt;{ &gt; &gt;case 4: MessageBox.Show("you win!"); break; &gt; &gt;case 5: MessageBox.Show("you win!"); break; &gt; &gt;... &gt; &gt;} you don't even need to put previousScore = sum at the end because thats already the case
i have a library where these kinds on constraints would have saved me a ton of typing! so does microsoft!
No. Once upon a time, humanity had to worry about hackers and people making typing mistakes. Fortunately with today's more evolved humans, we no longer need to worry about such things. Feel free to use unsanitized inputs.
I'm encoding the things into bytes, if that's what you mean...
I don't write my own parameter binders, but I prefer to store sanitized data in my database. It causes other problems, but they are less severe than being hacked. But this also depends on the use case. What kind of application are you writing? What is your technology stack? Who are your users? You would probably not not do the same thing if you are writing an API for an internal application as if you are writing a public SPA for instance.
Yes!
Because it isn't useful by itself. You also need a way to access the static functions like op_add and op_subtract. This requires a major change to the generic system and no one has proven to MS that it would be useful enough to justify the expense.
Depending on why you want to do this, you might want to look into something like this [Stackoverflow: C# - How to Simulate F5 keypress in IE](https://stackoverflow.com/questions/3047375/simulating-key-press-c-sharp) &amp;#x200B; Note: This might be super easy for a Running C# App, or focused Window, but can get tricky for background applications.
To make a dll, you can use the /target:library flag: csc /target:library MyLibrary.cs If you you referenced other assemblies in your code, you can include them by using the /r: flag: csc /target:library /r:WebDriver.dll MyLibrary.cs If you have a bunch of assemblies you need to reference, you can save them in a response file (.rsp) like this: /r:WebDriver.dll /r:WebDriver.Support.dll /r:Newtonsoft.Json.dll Then you can compile as such: csc /target:library @MyResponse.rsp MyLibrary.cs
This is such a useless comment that completely ignores what the OP is asking. He never says he trusts inputs, he is saying beyond the industry standard techniques to avoid attacks (such as using SQL params instead of raw concatenated strings) what else should he be aware of with using inputs from the user.
My take on this is that it's seemingly useful, until you realize that it's hard to constraint all number types so some "number constraint". Should be allow all number types? sbyte, short, int, long, float, double, decimal? Should we only allow the whole numbers? byte, short, int, long Only the positive whole numbers? byte, ushort, uint, ulong
Can you give an example? I work on a large cloud saas product and I don't think any dev has added an event for 5+ years, nor have I seen one in any of the open source libraries to which I have contributed. EAP has also been firmly replaced by TAP for years. When I see events, it really feels like legacy code. I put them in the same bucket as things like non-generic collections. Communication between services is done via http or cloud queues or publish/subscribe topics. Communication within a service is just done by method invocation. Being microservices makes them each relatively simple. IObservable is also one way to avoid events, although we barely use that either.
Thank you. I figured it out :)
Another plug: F# supports this.
Allow to constraint to having the operator+ defined.
Most programmers avoid infinite loops. Haha
Just use double and call it a day.
when you use 250 times a day some extensions menus, 250 days per years, it means 62 500 extra clicks per year for zero extra productivity benefit, so yes it is that bad
Do you have the source code published anywhere, so we can install this securely?
I fully agree. I know I've run into this myself. I'm surprised this doesn't exist as part of generics.
Not to mention BigIntger. Or my custom rational or complex classes.
I think these would be a good starting point - sorry it's in F#. IIRC, you can get all the monitor information using these and likewise API's. The program was an attempt at making a program that would modify the brightness of my desktop monitors based on a light sensor (ran into issues with the light sensor, fixed them, and never returned to this project). I used F# just because I wanted to learn it, a bad idea. Invokes: [https://github.com/Silvenga/DdcSharp/blob/master/DdcSharp.Core/NativeApis.fs](https://github.com/Silvenga/DdcSharp/blob/master/DdcSharp.Core/NativeApis.fs) Usage (e.g. height/width): [https://github.com/Silvenga/DdcSharp/blob/master/DdcSharp.Core/MonitorApi.fs](https://github.com/Silvenga/DdcSharp/blob/master/DdcSharp.Core/MonitorApi.fs)
I guess that would help in some scenarios, and maybe it would be sufficient if you could specify what operator you need rather than what the type should represent, but that might make it still difficult to say "I want to add numbers, and not strings"
I've often wanted the same, but I think it's difficult to come up with a universal design that's worthy of being permanently codified in the language. A couple of issues that crop up: - Creating a magic constraint for hard-coded primitive types is undesirable because then generic numeric methods won't support `BigInteger` and third-party `BigFloat`, `Half`, `Rational` etc. implementations - `T + T` doesn't always result in another `T`, e.g. in the case of `byte + byte = int32` - Not all types support the full set of arithmetic operations. A generic `Sum(IEnumerable&lt;T&gt;)` method would also be useful for working with `TimeSpan` which has an `+` operator, but you can't multiply or divide timespans. You'd probably end up with a bunch of `IAddable&lt;T, TResult&gt;`, `IDivisible&lt;T, TResult&gt;` etc. interfaces Of course you could just accept the limitations and compromise on a partial/special-cased solution, but I understand why Microsoft has been hesitant to do that since once they do that they're stuck with it for eternity. There actually are traces of an abandoned `IArithmetic&lt;T&gt;` interface in the reference source. It's still in the early stages, but the [`Shapes proposal`](https://github.com/dotnet/csharplang/issues/164) may ultimately bring this functionality to the language
also &gt; Always prefer C# Generic collection types over standard or strong-typed collections. er what? Does this guy mean like the old List() of old lol. sometimes i think a lot of developers still have no idea what weak vs strong, dynamic vs static typing is. weak vs strong is pretty bad terminology, most people mean dynamic vs static.
f# does it, copy them :)
I’ll definitely look into these and see what I can glean from it. Thank you for the information!
I think it's based off some pretty old guidelines, I think the key thing is to get them up to speed with where we are now and hopefully that will feed down .
Always remember rule one. "There's always someone smarter than you, and they are probably an asshole". ;p &amp;#x200B; Knowledge assimilated hopefully, but I reserve the right to screw up in future :) &amp;#x200B; ^(and than you)
Rust has a very easy way to do this. use std::ops::{Add, Sub}; trait Number: Add&lt;Output=Self&gt; + Sub&lt;Output=Self&gt; + PartialEq + Copy { // do whatever } I guess the C# equivalent could look like: public class Number&lt;T: operator+, operator-, ICloneable&gt; { } That would be pretty cool and support anything that has specific operations, not just numbers (unless I guess you wanted to restrict SPECIFICALLY to numbers, but I don't know a use case for that)
i mean why not just use https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/inside-a-program/coding-conventions idk if the OP linked his own work or what not. the code samples are wrong in his/OPs markdown too.
&gt; e.g. in the case of byte + byte = int32 It does in VB, further mudding the waters.
An illustration of the issue: if you have application messages that are 5000 bytes long, the typical tcp/ip maximum transmission unit is about 1500 bytes. So it will take 4 packets (3.33 rounded up) to get a complete message. What about the leftover 1000 bytes in that 4th packet? Well the packet might only be 500 bytes. Or it might have the first 1000 bytes of the next message. You have to check for that.
No, setting the Output Type to Class Library in Visual Studio will compile your project into a dll.
 To some degree, I think that the perfect has been allowed to be the enemy of the good, here. But, it's also a hard problem, and the current proposals seem to have some potentially unappealing tradeoffs WRT to object allocations. More pressing concerns, and proposals that could solve the problem seem perpetually just around the bend (cf. [extension everything + shapes](https://github.com/dotnet/csharplang/issues/164)). F# has some interesting capabilities in its constraint system, but I think they're mainly managed at compile time (not that I grok anything about F#'s compiler--just a guess, and not by an expert on anything involved). This seems to be an approach that the C#/Roslyn team have rejected as workable.
We use naming conventions as well and it seems to do the trick. The hard part is enforcing the conventions. That said, I'd _love_ to see more functionality for organizing repos on GitHub. Tags would probably be best, imo.
Check your connection string for the OLE provider and make sure the same provider version is installed in your buddy's computer.
We put the "type" on the end, but more and more we're just dropping the type part of the name (we're up above 50 repos now). It's easy enough to search for a repo-name and as long as everyone knows what "WittyBunny" vs "DrabHouse" in terms of project names, it all works out. In C# terms... one git repo per .sln file is the general guideline. Ideally, your git repo name should match your application service name. So if your API is at `https://someapi.yourcompany.com` then your repo name should probably be "someapi". GitHub also automatically displays the "readme.md" file when you view a directory (or repo). So you can communicate a lot that way.
It sounds like you are trying to perform generic mathematics! :) Well I have the solution for you... You can perform generic mathematics using generic types, runtime compilation, and delegates. Check out my project here for the source code: https://github.com/ZacharyPatten/Towel
https://github.com/ZacharyPatten/Towel :P
https://github.com/ZacharyPatten/Towel :P
https://github.com/ZacharyPatten/Towel :P
https://github.com/ZacharyPatten/Towel :P
F# is garbage... They are doing object casting under the hood... You can do it in C# just fine. Here: https://github.com/ZacharyPatten/Towel
https://github.com/ZacharyPatten/Towel :P
You missed the point completely (generic constraints), but had to take the chance to plug your library.
 [https://docs.microsoft.com/en-us/dotnet/framework/network-programming/](https://docs.microsoft.com/en-us/dotnet/framework/network-programming/)
Damn, this is pathetic.
My project is doing generic mathematics... That is the entire point of this post. I'm showing you guys how to do it.
Sure let me just run this random exe!
What is...? Did you even look at the readme? It is doing generic mathematics... I'm giving y'all the answer
&gt; What is...? Posting your link under every comment is.
Most of our stuff runs in Azure, so we can use Application Insights there to figure out "what service talks to what" (at the boundaries of each service).
Line 13 is the only place where you read from the connected client and this is done a single time per client. The receive method will read data until the buffer you provided is full or there is no more data waiting to be read at the moment (and will block if there was no data to read, but the Socket is still connected). While it won't support multiple clients, a decent place to start to experiment would be to put your Socket.Receive call into a loop until Socket.Receive returns 0. You should then see all data from a single client, but you won't be able to support multiple clients. This is the part where async can come into play. The simplest model is to take each connected socket and spawn a new thread[1][2] for it where the new thread will read from the socket and do something with the data (e.g., write to console to get started). This ignores lots of fancy stuff in .NET / C#, but is a good example of how those fancy features are being implemented. There are lots of frameworks / libraries / just .NET classes that can make some of this easier. [1] https://docs.microsoft.com/en-us/dotnet/api/system.threading.thread?view=netframework-4.8 [2] https://www.tutorialspoint.com/csharp/csharp_multithreading.htm
Cause everyone was wondering how to do it. I'm new to reddit... I assumed in order to notify each person I had to comment on all their comments... Is there another way? :D
Sorry for not answering the question, I just see this sentence keep coming: &gt; My generator is a .dll I'm not trying to be rude here, I just want to understand the message. When I hear this my first thought is... yes, what else would it be? I have a colleague with C++ background who has been using C# for the last year, and he keeps bringing up that his code is a .dll and I always get so confused by what he's trying to convey; that his code is in a library? Well, yes that is how compiled .NET code is stored. What's his point?
gooood pointttt i love it
[Flame graphs](http://www.brendangregg.com/flamegraphs.html) are useful visualizations of memory/CPU usage. Capture a profile, then get a visual representation. I think Rider's dotMemory / dotTrace can produce something like that - or it came from Visual Studio. Sorry, I delve into this about once a year, it may have been PerfView that generated the graph.
So i should do something like... Do { Socket.receive... }while(socket.receive() != 0) or? (Of course the method isn't going to be EQUAL to zero)
Besides, your comment does not answer the question **at all**: How to limit generic type params (to which the answer is: You can't). It only shows that you can do such things per reflection / IL Emit, which is obvious.
&gt; That is the entire point of this post. The entire post is about having additional generic constraints. Your library does not provide anything about that.
Why not just create a dll project and add It?
Yeah, I considered that. But I just wanted to make it clear that it's not a console application or game.
Why aren't you including the source code?
You CAN'T... Generics in C# are handled at run time. You will never be able to restrict it in that way. There is no base "Numeric" type in C# and there are reasons for that. This is the ENTIRE reason they made the "dynamic". However the dynamic type is slow as balls compare to the method I use in my GitHub project.
Reddit is a discussion forum, not your personal email marketing alternative. Spam is still spam even if there's a human behind each post. On mega posts with tons of votes, there's some small justification for duplicating a response in different places. On a low-volume subreddit, there is zero justification. People can read all the posts in the thread easily.
Jesus Christ, stop.
Amazing how you still completely miss the entire point of the post. You can limit generic type arguments already (e.g. `where T : class`), and OP just issued the wish for additional constraints (which yes, are not possible in C#, but are possible in F#). &gt; Generics in C# are handled at run time. You will never be able to restrict it in that way. void MyFunction&lt;T&gt;(T arg) where T : class {} MyFunction(6); // Tadaa! Error! The type is restricted (aka constrained).
required? to prove that's not a trojan or even close?
No source code, interfacing with my steam account? That's goinna be a no from me dawg.
Something like that to start, yup. It tends to be (my csharp is rusty, there might be a better structure): byte[] buffer; int received = 0; do { received = accepted.Receive(buffer); // Do stuff with whatever's in buffer, up to received bytes of it } while( received &gt; 0); Reading a bit more in the other conversation, the other poster is probably alluding to framed messages. The overall idea is that you first write to the socket some metadata that tells the server what real data you're going to write afterwards. From the client's perspective this could be something like: 1. Write a single byte that tells the server what type of data is following. This could be 0x01 for 'Incoming chat message' 2. Write 2 bytes that tells the server how many bytes are in the single message the client will write for the chat message. The 2 is rather arbitrary, but allows up to 16k bytes per message. 16k is enough for anything, right? :) 3. Write the bytes of the chat message. The server then reads the first byte to figure out what kind of data is incoming, 2 bytes to figure out the length and then uses Receive until the full chat message is received. You now have a different problem, what happens when there's data after the first message (you go back into the original loop to parse, etc). I strongly support the way you're building your v0. It really helps understand what's going on with network sockets, etc. There are entire frameworks for handling this kind application (DotNetty is a port of a popular Java framework for doing async network servers), but they are all rather difficult to grok without doing what you're doing first.
ok i put the source code in 5min
You clearly don't understand how generic code in C# is compiled... Using a "where T : XXXXX" is absolutely no different from just writing a function that takes a XXXXX parameter rather than a generic type. Anyone who is asking for multiple constraints is essentially asking for the ability to inherit from multiple classes. That is not allowed in the language.
Ok... I guess you don't want to know how to perform generic math in C#... Which is the entire point of this post. :P You try to help people...
Good ol' VB.
&gt; You clearly don't understand how generic code in C# is compiled... Using a "where T : XXXXX" is absolutely no different from just writing a function that takes a XXXXX parameter rather than a generic type. You clearly have no understanding how generic code in C# is compiled, so please do yourself a favor and stfu and stop making a fool of yourself. public void MethodWithGeneric&lt;T&gt;(T arg) where T : ISomeInterface {} public void MethodWithoutGeneric(ISomeInterface arg) {} .method public hidebysig instance void MethodWithGeneric&lt;(Program/ISomeInterface) T&gt; ( !!T arg ) cil managed {...} .method public hidebysig instance void MethodWithoutGeneric ( class Program/ISomeInterface arg ) cil managed {...} No different, right? https://sharplab.io/#v2:C4LglgNgNAJiDUAfAAgBgATIIwG4CwAUMgMyYBMmWA7IQN6HqOanIAs6AsgKbAAWA9jADqYPgHEuAOy4AnMAGMAPABUAfAApl6AIYyA5gEp0Ad16yu6LSHQBJAMr8AtlxuTgsgGbb5F2gF8GJhJMdm4+QRFwgFdgCWk5eXV7Jxc3T28LXUN0f0DGPOZ0MDSZLx9bB2dXd1KMnL90Qj8gA=== Besides: You **still** miss the entire point of the thread. Amazing.
Yes but other people won't be notified. My GitHub is a direct solution to what everyone is commenting they want an answer to.
you can try rendering the image as a bitmap, save it to somewhere on your server with a random file name like `string randomName = "img-" + System.DateTime.Now.ToFileTime();`, serve it back to the page then you can maybe delete all rendered images every day or every hour, set up a job for that. or just delete the previous image saved on the server when the user presses the button to generate the image again. a constant file name would probably be best for this case. I'd advise on using ASP MVC 5 and not core because ASP MVC 5 is the easiest since .NET Core is still "newish" and the documentation is kinda all over the place https://stackoverflow.com/a/1349318
Always doing the right thing instead of the "technically correct" thing. I wish more languages were like it.
Wha...? I don't remember f the old C# shapes proposal would have allowed them as constraints. Totally was excited about shapes on general...
I prefer it hidden away, I don't need to click on it that much. I mainly use resharper but I know all the hotkeys I need.
Ah, so it's just to say it's not an executable. Gotcha. Mind you, there's really no difference between exe and dll other than that exe has an entrypoint. Also .NET Core makes the code with your Main method (entrypoint) into a .dll, even when you make a console app. There's no created .exe unless you specify windows as the runtime explicitly when you build.
I'm not missing the point, and yes boxing can be prevented using generics but that is the only difference between the versions. Everything I said was still valid. Anyone who is asking for multiple type constraints is essentially asking for the ability to inherit multiple types.
They're looking for a compile time constraint, not a runtime solution. Your library is not a solution to what was asked about.
If that was possible it would mean that primitives could implement interfaces, wouldn't it?
Yeah, I plan something like that with the bytes being send beforehand so the server knows what's it getting. Thanks, I'll get into it tomorrow because I'm going to sleep. Thank you very much. I'm getting into the networking stuff in c#, so I figured out that this is the best thing right now
&gt; Yes but other people won't be notified. If they wanted to be fucking notified about every goddamn post in the fucking thread, they'd turn on motherfucking notifications in their app. That's not what people use *discussion forums* for. &gt; My GitHub is a direct solution to what everyone is commenting they want an answer to. No, it isn't. Read the fucking thread and understand what's being asked. It isn't a solution to the OP, and the people discussing the OP aren't looking for a solution. And a 2-month-old, unproven library under heavy development by a single developer is not a ***solution*** to anybody's problems but your own, it's just an open source project with more problems waiting to be found. An unproven *math* library, at that. At least you're not trying to roll your own encryption, I guess. But seriously, stop spamming.
Why would the connection string need to be different on another computer? They use relative pathing for the directory part, so as long as I have the files in the same place it should always work, shouldn't it? How do I see what provider he has? If he has a different one, can I just easily replace it, or will I get that nonsense you get when you try to mix versions of office products? I know from my previous project that if you already have say, Office 2010 installed, you can't install the Access 2016 Engine.
&gt; Everything I said was still valid. You said there is no difference. I **clearly** showed you a difference, you even **acknowledged** there is a difference, yet you still claim everything you said was valid. I can't even comprehend that logic. &gt; Anyone who is asking for multiple type constraints is essentially asking for the ability to inherit multiple types. Again: We already **have** multiple type constraints. And it has **nothing** to do with inheriting from multiple types. void Test&lt;T&gt;(T arg) where T : A, B {} interface A { } interface B { } Two constraints: `A` and `B`. Two. Multiple.
I come from a game development / unity background. With unity we essentially have small modules for each feature but features need to know when something has been loaded. We currently subscribe to events to know when this has happened, we don't want to tightly couple through calling functions on other objects. Obviously events have us coupled but the object listening doesn't care about implementation just if something happened.
If you have a file in memory, you can stream the binary via SignalR and concat the chunks together on the client; I've used this to load dynamic gifs.
Neat! I'm a new developer whos team uses Microsoft's technology stack. While I am very ignorant about the inner working of DevOps, it's nice to see what's happening after I send my code off. Maybe unrelated but are there other similar videos like this one about [Asp.Net](https://Asp.Net), MVC, or .NET development? &amp;#x200B; Thanks for posting
out https://github.com/sp0ok3r/Mercury
*There are only two hard things in Computer Science: cache invalidation and naming things.* *-- Phil Karlton*
I was so excited about the shapes proposal... but it doesn't seem to be coming any time soon. :( &amp;nbsp; Regarding extension everything, if I may toot my own horn a little. Awhile ago I created what my limited experience thinks was a cool generic way to implement "extension properties" (well, *functionally*). Anything you wanted extended had to have a marker interface applied to it. An abstract class would then extend the marker, with any "extension properties" (*ahem*) there. nbsp; A little lazy reflection, some convoluted nested dictionaries, and by the power of `ConditionalWeakTable`, voila. At the end of the day it still had to rely on extension methods, only with conventions be damned (`oldValue = obj.SomeExtProp()`, `obj.SomeExtProp(newValue)`). It wasn't exactly blazingly fast either. And to top it off, there was 0 work put in to make it thread safe. &amp;nbsp; Still kinda cool though, at least for an unload-shit-work-onto-this-sometimes-sorta kind of developer like me! :P
out https://github.com/sp0ok3r/Mercury
I would probably serve the [image as base64-string](https://stackoverflow.com/questions/10889764/how-to-convert-bitmap-to-a-base64-string) and put that in the src of a img-tag. For that you could either * have the server build the view (put the base64 in the img in razor) and serve a new view on each generation, forcing a browser reload or * have a dedicated http controller method for generating a new image and return it as the base64-string. Then on the view with JavaScript trigger a request against that endpoint on the click of the button and put the response into the image. In both cases ASP.Net MVC would be pretty straight forward and I personally don't see any reason not to use ASP.Net Core
Web is pretty free form. But in general, go with an ASP.net web project. You’ll want a controller that has an end point that returns a file/image stream. To do this without saving the file to disk, you’ll want to save the image data to a memory stream which you’ll stream from the end point. Look up these terms: - ASP.net API controller - ASP.net serve image - C# convert image to MemoryStream If you save the image to the memory stream the same way you write to a file stream, then return that from your ASP.Net controller endpoint you should be able call it in a browser and see your image.
Shapes. I've loved that proposal. C# 9.0, fingers crossed!
Code???
I've given it a careful thought, turns out there's a chance that the hotel staff will be EITHER *notified twice* about our arrival OR *won't be notified at all* due to non-existing hour. **Thanks a lot for pointing out this issue!** But then I believe there's no way we can handle this issue using UTC. **Am I right in thinking that keeping Check-In Dates in a hotel's local timezone will help to get rid of this problem?** what I'm talking about is: * yes, we keep Check-In Dates in a hotel's local timezone, so the db record is Apr 24 2019 14:30:00 (and **not** 12:30:00 as with UTC) *not sure if we need to keep timezone-offset in the DB - probably best to avoid keeping timezone info, I believe it's of no help because of DST* * when a hotel staff person navigates to staff-member portal to see Check-Ins - the back-end will treat the dates as being related to hotel's local timezone
Unless I'm gravely mistaken, they already do: interface IFooable&lt;T&gt; where T : struct, IComparable, IComparable&lt;T&gt;, IConvertible, IEquatable&lt;T&gt;, IFormattable { } interface IFooBarable : IFooable&lt;int&gt; { } // NOPE: interface IHerpityDerpity : IFooable&lt;char&gt; { }
Unproven? Wtf? Go run the code for yourself. It works... Don't call it unproven. And yes... It is a solution. The fact that there is no "Numeric" base type in C# and the fact that the language is defined so that you cannot inherit multiple non-interface types (meaning multiple non-interface constraints aren't possible with generic as they are resolved at runtime)... All that leads me to believe that the poster of this post is asking how to perform mathematics on generic types. YOU CAN perform mathematics on generic types using runtime compilation. That is why I'm sharing my project. Is IS a solution to this issue.
&gt; C# 9.0, fingers crossed! ETA 2025.
Check for conflicting versions of all the OLEDB related DLLs (there are many), all the way down to MSJET40.DLL (or MSJET35.DLL, or etc). Unsure of what DLLs are being used? Look up the COM classes in the registry to see where they are actually being resolved to. Easiest suggestion? Run Windows Update on both machines until they are sync'd.
&gt; It works... Don't call it unproven. Apparently, you don't even know what "unproven" means.
You'll never amount to anything, so don't bother asking for help, retard.
Enlighten me o great dictionary... :D Wtf does "unproven" mean?
Never mind we just found out the server was down... my code was fine... Thanks for caring though.
How will I know if they conflict? How do I find working versions?
Find the DLLs, right click properties, view the file versions.
Another easy try: &gt; installing the Microsoft Access 2016 Runtime found on https://www.microsoft.com/en-us/download/confirmation.aspx?id=50040 solved the problem (and boosted the access speed to the database too).
You got me curious, I'll try to break the compiler when I get home from work!
Thank you :)
So I find them on my machine, note down the file versions, then compare with the file versions on their machines? Can I just copy my DLLs over?
I means "not proven". And "proven" means 1) Used by someone other than the original author (i.e. more than "works for me!") 2) In a real-world situation 3) Without showing performance, correctness, or security problems. and, for libraries specifically, 4) Provided some productivity benefit over doing it the old-fashioned way. Unit tests showing that it produces correct mathematical outputs aren't enough to prove it's ready for prime time. What you have is a "field of dreams". You've built a stadium out in the middle of nowhere and you're the only one playing in it.
&gt; Can I just copy my DLLs over? No no no, that would be very bad. COM objects (eg: OLEDB classes) live inside DLL files, but they are registered in the system registry. Very often many applications installed on a computer have dependencies on the same COM objects. Blindly overwriting DLLs with earlier versions will break other apps. The only way to safely do it is to find the latest versions (COM objects are always backward compatible, in theory) of these DLLs and run an installer that safely writes them and updates the registry. If this is the first time you've encountered this, [its known as DLL hell](https://en.wikipedia.org/wiki/DLL_Hell), and is the bane of Windows programmers. .Net (vs COM) avoids much of this because each app can have its own version of DLLs rather than requiring a DLL to be shared by all apps installed on the comptuer. Cheers.
Thanks! Now I have something to look into!
&gt; image as base64-string Why? What do you gain over returning image/jpg bytes?
I DO have unit tests! I DO have performance tests! (Although the performance test are still in my "Theta" project and haven't been moved into "Towel" yet... So I understand why you would assume they don't exist). The code IS being used by people other than myself. (The nuget package is new, but I've had the code functional for years, not just since 2 months ago). I wrote an article about it back in 2015 and people have been using the practice since). The code IS being used in real world examples. As for security... Come on... The only issues are those inherited by Linq runtime compilation, and runtime compilation should never be fully exposed to the end user (that would be the same as letting someone script their own code). I guess my code is "proven" then.
While your library looks worth looking into, it doesn't really solve my goal of constraining members. &amp;nbsp; For a simple illustration, say I want a generic way to implement, I don't know, the size of some data chunks my library is dealing with. Some kinds of data chunks might be super small (headers), some might be super large (a binary array for a 8K PBR texture atlases). &amp;nbsp; Now I want to make sure that different parts of my code have access *only* to what they need. In the example, this of course wouldn't work: `IDataChunk&lt;TSize&gt;`. `IDataChunk&lt;TSize&gt; where TSize : struct` gets you closer, but that still allows things like `SomeChunk : IDataChunk&lt;char&gt;` which should be a compile-time error. &amp;nbsp; The closest you can get is constraining `TSize` to `struct, IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable`, but that still doesn't guarantee anything. On top of that, you still could have `SomeChunk : IDataChunk&lt;int&gt;` and tell everyone that somehow, the size of some byte chunk is -400,000. That's not a scenario I want to allow, so the only slamdunk solution now is to check if the value is both one of the built-in number types (*just in case*) &amp; not negative, then throw an exception otherwise and hope the offending client handles it.
That's kind of a broad topic, considering networking is a career path. Could you be a bit more specific?
They already could. But the interesting functions are static, which are not part of the interface.
If you are actually looking for a syncronous rest client, check out http://restsharp.org/
Make an ASP.NET Core MVC project, make a controller that returns a `FileResult` which contains your image (use your .dll to write the output to a stream). In your UI, set `href` of your `&lt;img&gt;` to the above mentioned controller. Tech stack: ASP.NET Core MVC, Razor
Just click F12 while pointing at a primitive type like int, you'll see the definition and all it's interfaces :)
Buddy you gotta stop
Holy cow. I'd considered using your library in the past, but based on your behavior in this thread I'm never even going close to it. You should stop commenting before you alienate more people.
Haskell has this feature, of course. \[It's called "Typeclasses"\]( [http://learnyouahaskell.com/types-and-typeclasses](http://learnyouahaskell.com/types-and-typeclasses) )
Common libraries are named like assemblies, ex “Domain.Tools.Ldap” Other code is named by project “Project1.Databse” or “Project1.UserConsole”
You can change the project type in visual studio to output a dll (IIRC called a class library)
Yeah this is what I needed. Thanks for the response! And I will look into the switch case. I’m a noob with c# i knew the if statements were not efficient lol.
Okay thanks for that I will change it.
Gotcha. What you appear to be asking for is currently impossible using generics though. It sounds like you shouldn't be using generics at all if you absolutely need to enforce compliance. You should be using old fashion overloads. Old fashion overloads will allow you to restrict what types your code supports. So instead of using a generic, write an overload for IDataChunk&lt;int&gt;, IDataChunk&lt;float&gt;, etc. Yes... Method writing tons of method overloads suck... But that is the only way to restrict types when you don't have control over those types to add custom interfaces to them. There is no built in "Numeric" interface in of course, and even if you added your own you would never be able to get the primitive types (or any external type) to inherit it. You have no control over external types. And... Multiple non-interface constraints will never be added to C# so long as you can't inherit from multiple classes/structs, because Generics are resolved at runtime (because generic code is compiled at run time for each generic you use) whereas method overloads are resolved at compile time. Hope that helps. Let me know if anything is unclear.
Thank you for the advice. Would you happen to know where I can find these DLL's? Would it be easier to change things to use .Net?
Why would you think it's difficult or that it'd require compromise? All numeric types can be sorted into well defined algebraic structures with concrete operatiors on them, and all that can be translated directly to code because programming is just math in disguise. All these constraints you're talking about have been studied for years by abstract algebraists, for example the property that T + T results in T is called "closure", and the fact that some types are divisible is because they have a "multiplicative inverse". The categegories are actually quite clear: - `byte`, `ushort`, `uint` and `ulong` form what's called a Semiring, which means they can be added and multiplied together and have identities, which are elements that don't change a number when an operation is applied, for example `0` is the additive identity because `x + 0 = x` (simplifying here but stay with me for a moment). - `sbyte`, `short`, `int` and `long` form Rings, which are like Semirings but they also have an *additive inverse* i.e. they can be negated. - `float`, `double` and `decimal` form Fields, which are like rings but they also have a *multiplicative inverse* i.e. you can take their reciprocal. You can easily translate those into interfaces, for example implementing `IRingElement` means you must define the addition and multiplication and negation operators but also identity elements (as C# properties for example), and everything else like subtraction and modulo can be deducted by the runtime using these simple operators (e.g subtraction returns `add(x, negate(y))`). This also means third party libraries can implement these interface (`BigFloat` is an `ISemiringElement` and `Rational` is an `IFieldElement`), and your function that takes an interface type will happily take these third party types alongside primitive types that implement the interface. C# is the cool kid, it has features that many comparable languages like Java lack, and I think this a feature well worth putting effort into especially considering the concrete logical foundation behind it, plus it can be immensely useful for applications like the OP's. Sorry for the garbage formatting but I'm on mobile, and sorry for the huge wall of text but I get really excited about this useless nerdy-ass shit.
Try installing the "Microsoft Access 2016 Runtime" https://www.microsoft.com/en-us/download/confirmation.aspx?id=50040 Didn't work? Try reading here: https://social.msdn.microsoft.com/Forums/en-US/d5b29496-d6a1-4ecf-b1a4-5550d80b84b6/microsoftjetoledb40-32bit-and-64bit
 &gt;*There are only two hard things in Computer Science: cache invalidation and naming things.* *-- Phil Karlton* There are only two hard things in Computer Science: cache invalidation, naming things, and off-by-one errors.
Actual URL to the thing: https://www.humblebundle.com/software/full-stack-webdev-bundle Quit the referral ID, spam facade bullshit.
I had to solve this for a remote control application I made. Take a look at the OpenInteractiveProcess method here: [https://github.com/Jay-Rad/Remotely/blob/master/Remotely\_Shared/Win32/Win32Interop.cs](https://github.com/Jay-Rad/Remotely/blob/master/Remotely_Shared/Win32/Win32Interop.cs) You'll also need to grab the other classes in the Win32 folder if you want to use it. But basically, you can call this from a service in session 0 to launch a process in the active session (whether it be console or RDP). With the current code, the new process will have access to the UI and will also have service-level privileges. I needed the privilege level for remote control. This may be overkill for your purposes, though. You may want to create the new process with lower privs. One of the method parameters is the desktop name ("Default", "Winlogon", or "Screen-saver"). There's another method in there, GetCurrentDesktop(), that will tell you. But it must be called from a process that has a window station (i.e. not session 0). So I launch the new process in the Default desktop, then check the current desktop name. If it's not in the correct desktop, I relaunch it. In case it's helpful, here's a good article on sessions, window stations, and desktops: [https://brianbondy.com/blog/100/understanding-windows-at-a-deeper-level-sessions-window-stations-and-desktops](https://brianbondy.com/blog/100/understanding-windows-at-a-deeper-level-sessions-window-stations-and-desktops)
You should look into signalr which will make your life much easier
I'm not trying to be an asshole. :P I'm trying to educate people. I only commented on comments that appeared to show interest in how to perform generic math. If I really wanted to be an asshole I would make my code proprietary rather than open source. If you don't want to use my code or practices, fine. Your loss. People won't ever know about how to perform generic math unless I show them. :)
This is kinda like what we do. If it's a service it's Domain.Services.ServiceName, if it's a utility it's Domain.Utilities.UtilityName.
:O If only we had a language that tried to combine the best features from the top 10 languages... then we'd need something that combined the best features of the top 11 languages.
Holy cow, I never thought of using a for loop like that for reading files!
Incidentally, Microsoft experimented with the idea and threw it away in the .NET 2 era (cf. `IArithmetic`). If/when people can agree on a design, Shapes will resolve this.
&gt; It sounds like you are trying to perform generic mathematics! :) Close, but that wasn’t quite the question. &gt; Check out my project here for the source code: I AM A FILTHY SPAMMER Why are you doing this? It doesn’t promote your project; it just makes you look bad. Your project doesn’t provide a suitable constraint because it cannot, because the language doesn’t currently support this.
&gt; What you appear to be asking for is currently impossible using generics though. That is the entire premise of the thread in the first place, yes.
If there is one all it is is basic parsing. That’s all the library would consist of is parsing. This is something that would be easy to do and I encourage you to make your own as a learning experience and to add to a portfolio.
https://symbolics.mathdotnet.com
No... You didn't even read the comment. It isn't impossible... It is only impossible with GENERICS. It is easily possible with method overloads.
There's no way to specify "a numeric" in .NET. None of the numeric types share an interface. It's been a request for C# for as long as I remember (I think I first wanted it in about 2007). But it's pretty complex and hard to imagine a spec that'd make everyone happy. So we implement more auto-property syntax sugars instead.
Aaaand at this point You should've used `dynamic`
Err, come again? How would that stand in for extension properties?
&gt; It isn’t impossible... It is only impossible with GENERICS. How do you set a generic type constraint without generics? &gt; It is easily possible with method overloads. Yes, and making pie using only bread is easily possible when all you want is to eat bread.
&gt; Generics in C# are handled at run time. Uh. No?
Your comment is encouraging the use of a custom interface that will prevent the support for primitive types without wrapping them. You are spreading bad code practices. You are the one that needs to stop. :P The author of this post clearly wants his code to work with primitive types. Your version sucks.
&gt; People won’t ever know about how to perform generic math unless I show them. :) Except we’ve already established that C# doesn’t offer the feature OP wants, because C# lacks typeclasses, shapes, or similar. Your library won’t fix that.
Yes. The generic code is built for each type the first time you invoke it with each generic type. This is basic knowledge... Think about reflection, you can use reflection to look up a type and call a generic method using that reflected type. This is at RUNTIME.
Generics have significant implications during compile time, not just runtime. &gt; Think about reflection, you can use reflection to look up a type and call a generic method using that reflected type. This is at RUNTIME. Yes.
Rust does as well with traits
That's the whole point, You didn't need to make any extension properties, with performance like that. That's what `dynamic` is for. I understand it might have been a just-for-fun trying to get it to work project, but with actual code it's just reinventing the wheel. And totally not undermining the idea, it's awesome You got it to work like this :)
Because you’ve thrown away compile-time type safety or IntelliSense at that point. (Were you doing this on existing types?)
Yes there are compile time implications but the logic must occur at RUNTIME (as explained in the reflection example) to build the code for the generic type. That is why C# doesn't support multiple non-interface constraints, because at runtime a type will never be able to have inherited two different types. &gt;Yes. And yet you wouldn’t say that a regular type is “handled at runtime”. This quote doesn't make any sense. What is a "regular type"? All generic types must be resolvable at runtime.
&gt; Honestly: At this point I must consider you either a troll, or having medical conditions. I’m done correcting you. I’m guessing they simply don’t want to acknowledge that they misunderstood the original question or have some details of how genetics work wrong. Which shouldn’t be a big deal, but I don’t know what the point is. I don’t know if Towel is a good library or not. I do know it won’t magically implement typeclass-like constraints. Case closed, really.
&gt; Yes there are compile time implications but the logic must occur at RUNTIME (as explained in the reflection example) to build the code for the generic type. Constraints are evaluated at compile time. That is the only thing relevant in this entire thread.
Ahh - let's begin. &amp;#x200B; The reality is that you need to not look at a framework as a black box. You need to test around it. While the best case might be that data ingress into your application might be 'well know' - in reality data will find it's way in/out of your app in unexpected ways. You need to account for this. Therefore it's always safe to assume that all data in your app end to end could be hostile. The Threat Modelling process is one way to achieve this. So tangibly, while your [ASP.NET](https://ASP.NET) for or database provider might be escaping text on it's way to the database. There is strong possibility that data will find its way to the database via other means. Therefore don't build your security architecture on a set of best case assumptions. &amp;#x200B; Furthermore it's key to understand what parts of your stack are doing what. Once again, don't treat the framework as a black box. Also ... go fuck yourself.
Wouldn't that include Strings?
Agree on following the rules: it's a good place to start. But remember it's also important to assume that someone, somewhere the rules get broken (e.g. by a 3rd party component, your colleague who doesn't follow the rules). Trusting inputs is about understanding defense in depth and how threats can present themself in an app.
&gt;Constraints are evaluated at compile time. That is the only thing relevant in this entire thread. Constraints are not only compile time. That is incorrect. That is the point...
 In Elixir you can easily do this: def double(a) when is_number(a) do a * a end I hope C# adds something similar.
This is what markdown is for. So you don't have to use raw HTML in the DB and it can be applied to non HTML interfaces as well
This is interesting but your documentation parsing is very limited. Methods and Classes can be much more complex and show up very differently in the documentation. I developed this library https://github.com/igloo15/MarkdownGenerator That is a dotnet tool to translate C# dlls and xml to markdown files. When I was parsing the documentation I made a solution similar to yours but what I found is that anything containing generics or methods with the same name but different parameters end up not working with this solution. I am still working on making my solution better but it can get pretty complex with the different things you have to consider.
Just a reminder, under no circumstances is it acceptable to solicit work or offer work that would be considered a violation of Rule 2. That is: &gt; No malicious, intentionally harmful, or piracy-related software &gt; This includes downloads, tools, help, discussions, or anything related to creation, use, or distribution of malicious or piracy-related software.
If it's a mature codebase with other users, then I apologize. You linked the github, and the first checkin was a couple of months ago and the readme says it's still under heavy development.
If you're using some command that often then you should have set a keyboard shortcut long ago.
DataTable.Compute() can do basic math from a string. Idk about about algebra though
You are fucking hilarious.
My methodology can still support complex stuff like generics and indexers and operators, but it is a little more complicated. I fully plan on adding that kind of support when I have time. All you have to do is properly match the reflection type to the "name" attribute as it appears in the XML file. I'm by no means saying that this is the best way to do it... But this method is extremely simple (only requiring a few hundred lines of code) compared to most libraries I have seen, so I figured I would share it. :) My problem is that I want to just generate an HTML tree. I don't want markdown, I don't want a full website... I just want a simple HTML tree with classes so I can apply my own custom CSS. I plan on dumping that HTML tree into a single page on my website. Thanks for the link to your project, I will definitely give it a look. :)
Thanks for this
Thanks for this.
Thank everyone. Bit to digest here!
Removed: Rule 5.
Removed: Blogspam, Rule 6.
[Take it easy guys.](https://i.kym-cdn.com/entries/icons/original/000/010/390/ohyou.jpg)
You are not keeping track of the client's socket you get from calling Accept() as soon as that for loop does another iteration the server completely "forgets" there is a connected client still.
Check out NCalc, [the original project](https://github.com/sheetsync/NCalc) is not maintained but it looks like [this fork](https://github.com/ncalc/ncalc) is still active. I've used it a few times in the past for similar things and even with custom functions.
I don't like dots in URLs Heard from a friend today about a repo at her work that has a space in the repo name. Then when you clone it that gets turned into %20 and git loses its shit
I have used mxparser which I found to be quite good: http://mathparser.org/
Write a parser, its not that hard
Well I mean the problem I see is that your not properly parsing parameter names. You do ParameterType.ToString() which will not work. Try two methods with the same name but one takes an int and the other takes a two dimensional array int[,]. Your method would only match the first method or maybe no method at all. There are alot of possibilities in parameters for methods and constructors what about nullable ints or generic parameters. The latest thing that got me was that `T[]` is not considered generic so my parsing didn't work correctly. Your solution falls apart when methods or constructors have generic parameters, nullable, multidemsional arrays and other things. Figuring out that part is the most complicated part This is a snippet from my test suite /// &lt;summary&gt; /// Test Generic Method Param 3 /// &lt;/summary&gt; /// &lt;typeparam name="T"&gt;Generic1&lt;/typeparam&gt; /// &lt;param name="normalParam"&gt;Param1&lt;/param&gt; /// &lt;param name="normalParam2"&gt;Param2&lt;/param&gt; /// &lt;param name="normalParam3"&gt;Param3&lt;/param&gt; public void TestGenericMethod&lt;T&gt;(T normalParam, List&lt;T&gt; normalParam2, T[] normalParam3) { } /// &lt;summary&gt; /// Test Generic Method Param 4 /// &lt;/summary&gt; /// &lt;typeparam name="T"&gt;Generic1&lt;/typeparam&gt; /// &lt;param name="normalParam"&gt;Param1&lt;/param&gt; /// &lt;param name="normalParam2"&gt;Param2&lt;/param&gt; /// &lt;param name="normalParam3"&gt;Param3&lt;/param&gt; /// &lt;param name="normalParam4"&gt;Param4&lt;/param&gt; public void TestGenericMethod&lt;T&gt;(T normalParam, List&lt;T&gt; normalParam2, T[] normalParam3, T[,] normalParam4) { }
Do you have a concrete example of when this would be useful? I'm intrigued but struggling to see why this couldn't be accomplished with overloading (more work obviously). I'm imagining something similar to overloading the + operator in C++ but I could be way off.
one solution is to start another app from service in user process what will get and return resolution
Are you asking for basic Math or basic algebra? Sounds like algebra.... Otherwise you can use System.Math
I'm currently using this in a project for a similar use case and so far it has worked great.
What are you talking about?? My comment is discussing a change to the language, where did I mention a custom Interface or wrapping?
That arrogance is astonishing.
Not going to down vote you on this, but honestly, giving a fuck about how it's implemented is only so important. F# discriminated unions? It's just a giant modern C#, type-aware switch statement. The int values returned are based on strong type checks against the type you're supposed to be programming against (as opposed to the compiler just generating some state value returned through inheritance), and *that's a good thing*. The language features that enable this in F# aren't doing something magical that you couldn't do yourself, they're doing it in an expressive way that minimizes your effort in expressing your intent. I *can* write F#-like code in C#, but I'd never *want* to. I can, for instance, do immutable stuff in C#, but it's a lot more work than it is in F#. My point is, yes, you can emulate all the F# stuff you want in C#, but it doesn't take away from what F# gives you.
Not that it's much help, but Joe Duffy wrote about this exactly on his blog for the Midori project. I believe they called their language M#, and they had at least some support for what you're describing. Visit joeduffyblog.com for more info, and read the Midori posts.
Your right about the lack of a good GUI framework. I think Microsoft are working on something big here, but it will be a few years away. The ideal state would be to make something which runs on Web, Linux, Windows and Mobile. They have Xamarin, Blazor, Web Forms, Razor Pages etc etc. It would be amazing if the could do something universal with all these frameworks.
I like Python, but its complete blind spot around multi threading limits it to scripting vs enterprise applications. I also think they serve slightly different purposes and both gain from that specialisation. I.E both C# and Python would be worse at what they do if they tried to replace each other.
Thanks, definitely will look into it.
I already do use dozens of shortcuts, but shortcuts cannot be an answer to everything in such complex environment with several extensions installed and used daily. Telling users just use shortcuts because we just hide away your extension menus, with no way to revert back, is a major usability mistake.
Does this mean you should strive to be the smartest asshole around? :)
I gave up on the smartest part of that years ago :)