Q1 - I'd use FileInfo / DirectoryInfo for type safety. Q2 - the " : this()" in constructor basically calls different constructor of the class before running the code, example: public MyClass() { Console.Write("Constructor 1 "); } public MyClass(int a) : this() { Console.Write("Constructor 2 "); } public MyClass(int a, string b) : this(a) { Console.Write("Constructor 3 "); } would result in: Constructor 1 Constructor 2 Constructor 3 I don't think it's possible in C# to get constructor to replace itself with another object. What you should do instead is to make [factory](https://en.wikipedia.org/wiki/Factory_method_pattern) for it: public static EntityObject EntityObjectFactory(string name) { var o = StaticListOfObjects.FirstOrDefault(x =&gt; x.Name == name); if (o == null) return new EntityObject(name); else return o; }
CoreCLR (outside windows) is what Mono was 6 years ago. Think about it. -- reading more of what you said, just use windows server 201x. In terms of business dollars it is effectively 0. If a business can't afford Windows Server, it can't afford to exist, honestly.
Did you post the correct code block? It seems irrelevant to the question you posed. The code line you did post that seems relevant: `length = distance * SCALE_FACTOR`, if I understand correctly, in order to store it as an `int`, you converted like this: `length = (int)distance * SCALE_FACTOR` This converts `distance` to an integer via truncation (e.g., 2.9 converts to 2), _then_ multiplies it against `SCALE_FACTOR`. This can cause some significant rounding errors. For example, if `distance` is 0.5, and `SCALE_FACTOR` is 100, you would expect 50. But instead it truncates `distance` to 0, then multiplies against 100, which results in 0. In other words, the above line is equivalent to this: `length = ((int)distance) * SCALE_FACTOR` Instead, make sure to apply the conversion as the very last step. In this case, it's as simple as wrapping the expression with parenthesis: `length = (int)(distance * SCALE_FACTOR)` Such an expression will first multiply `distance * SCALE_FACTOR`, _then_ truncate to an integer, thus resulting in 50. If you didn't want truncation, but prefer rounding, use the `Math.Round` method first before converting to `int`: `length = (int)Math.Round(distance * SCALE_FACTOR)`
I'll add one more thing to this great reply. The standard rounding in .NET may not give you the results you expect. Take a look at the MidpointRounding argument for Math.Round(). https://msdn.microsoft.com/en-us/library/system.midpointrounding(v=vs.110).aspx
For homework you should really ask your teacher and fellow students.
this is the single dumbest, most uninformed post that I've ever come across in this sub. I signed up just to point this out. jfc.
If you can't afford windows server, you can't even afford a minimum wage employee
And what if you plan on scaling up to 100 servers at the time of launch and would rather spend the $615,000+ on hiring another 8 developer for a year instead of Windows Server 2012 R2 Datacenter licences which are listed at $6,155. 
[removed]
False statement is false statement. Windows and sql server are hyper optimized with a little help from a reverse proxy. Stackoveflow serves a billion page views a month with 2 dozen servers.
This, and all other "C# 6 feature(s)" blog posts, has been done to death. There's not all that much to say about them in the first place.
Um... I'm pretty sure the Bitmap class allows you to set transparent pixels. You have to use the right encoder to save it though. You know the "alpha" color in ["R(ed) G(reen) B(blue) A(lpha)" is "transparency" right?](https://msdn.microsoft.com/en-us/library/system.drawing.color%28v=vs.110%29.aspx)
Actually I think you only have to use a "png" extension and it will pick the png encoder - so you can just use the regular bitmap class if you're working in winforms... http://stackoverflow.com/questions/5124713/can-bitmap-object-be-save-as-png-or-jpeg-file-format
Yeah, no. In my eperience MSDN always have a full page of documentation with sample for code for every tiny method call.
#1080p Link ✈ [CLICK TO WATCH HOTEL TRANSYLVANIA 2 Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292) ------------------------------------ #1080p Link ✈ [CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292) =================================================================== ✦ ✦ #720p Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!] (https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================================================== ✦ ✦ #Megashare Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!] (https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================================================== ✦ ✦ #Putlocker Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!] (https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================================================== ✦ ✦ #Blu-ray Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================================================== ✦ ✦ #DVDrip Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================================================== ✦ ✦ #HD Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292) ** =================================================================== ✦ ✦ #Viooz Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================================================== ✦ ✦ #Solarmovie Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292)** #1080p Link ✈ [CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292) =================================================================== ✦ ✦ #720p Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================================================== ✦ ✦ #Megashare Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================================================== ✦ ✦ #Putlocker Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================================================== ✦ ✦ #Blu-ray Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================================================== ✦ ✦ #DVDrip Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================================================== ✦ ✦ #HD Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292) ** =================================================================== ✦ ✦ #Viooz Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================================================== ✦ ✦ #Solarmovie Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================== #1080p Link ✈ [CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292) =================================================================== ✦ ✦ #720p Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!] (https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================================================== ✦ ✦ #Megashare Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!] (https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================================================== ✦ ✦ #Putlocker Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!] (https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================================================== ✦ ✦ #Blu-ray Link ✈ **[CLICK TO WATCH The Intern Online Free Full Movie HD!](https://www.facebook.com/rocco.benini/posts/413932285459292)** =================================================================== 
Not every application is a forum sitting behind a proxy cache. Try hard to imagine a use case for serving up something other than static pages. 
With all of the nonsense you're spouting I feel pity for anyone unfortunate enough to employ you. 
I have 100% success rate, a decade strong.
Wow thank you so much for your big reply , this is extremely helpful. Do you mind if i ask another question? I am playing around with this but I get an error from this line Debug.Log("Current Temp: {0}", weatherData.main.temp); it says Error CS1503 Argument 2: cannot convert from 'float' to 'UnityEngine.Object' fixed it but getting this instead The type or namespace name `Newtonsoft' could not be found. Are you missing a using directive or an assembly reference? EDIT: all I had to do was drag the same DLL that you select in visual studio via add reference into the unity asset folder to remove the error: 'The type or namespace name `Newtonsoft' could not be found. Are you missing a using directive or an assembly reference?'' it works now. 
Test the water first. If you know your stuff it should come through in an interview. I'd say make sure your resume is well written and practice your interview technique. The job I'm in now, for example, I got with no experience in web dev (but experience elsewhere), but the company offered to pay for my MCSD exams.
I'm part of the hiring decision team at my job; personally I put next to zero stock in certifications. Anyone can study and memorize things for a test. To me it's a lot more valuable if you actually build a site or two and show me what you can do. Like an artist's portfolio.
Certs are mainly useful for your company to get free or reduced rate stuff from Microsoft once they have a certain number of employees with specific cert levels. They do next to nothing for you personally, particularly if you are still seeking a job. If anything, it would be a distraction from the search process. What you need now is practical experience. Build some personal, practice sites with MVC. Implement ASP.NET security. Nothing fancy - the "blog engine" is overdone, but that's because it is a concrete site with simple requirements. Put your code on GitHub as a portfolio. The tools you need for this are all free, so you don't need a big outlay of cash when you are just trying to get started. 
Contrary to delete, for instance, moving a file works even if it's open by someone else (with correct sharing modes), which is also an advantage. Although moves are still not atomic like on UNIX/Linux :(
I'll be the contrarian here to the blind hate on the certs. I do think it'll help get a job, especially at a large corporation. We always need more people with certs to maintain our Gold Partnership. Plus 9 times out of 10 you'll need to be approved by someone in HR. They have their run books on what to look for, and for better or worse certs shows up a lot on them as a checkbox for candidates. As to you personally - studying for the cert will give you direction on what to learn. Those certs cover a wide variety of stuff so you'll need to branch out quite a bit to feel comfortable passing the test. In the past a lot of what they tested on I considered hot garbage like the drag and drop magic coding tools in Visual Studio. As long as you aren't out there reading brain dumps and just taking the test I think there is a lot to be said for the current MCSD Web App curriculum and what it covers. Now, here's the rub - the only theoretical value in having a cert is it is a piece of paper showing you are "an expert" at that topic. And no offense, you clearly aren't. You'd be bringing down the value in the certification, but as the other comments indicate there is a lot more disdain for certs than respect already. If you pass it, I sure as shit wouldn't put it on your business card, treat it like proof you "know it", or use it as a badge of honor. It was a direction and goal you set for yourself in your learning process and nothing more. Ultimately I think if you walked into an interview are armed with a github account like others have said (and more importantly have contributed to open source projects) plus with an explanation you used the certs as a strategy and direction for learning ASP.NET then more power to you. I'd hire you assuming you weren't a weirdo. Not for a senior job, of course, but it'd get your foot in the door.
There is no overlap between FxCop and StyleCop, they serve completely different purposes.
Sounds like you might be better off with _no_ framework, myView.DataContext = new MyViewModel(); This is just as MVVM as using any framework, and you won't tie yourself into something during a big refactor which you might regret. Then you can evaluate existing frameworks over time.
Since you have the using statement at the top of your code, you need to make sure the library is referenced to your solution/project. If you're using Unity, i'm not sure how to do this, as i'm not as familiar with unity. But just 'google adding external packages to your unity project'. Maybe someone with more Unity experience could chip in here too. if you're using visual studio, it's just right click on references and click manage nuget packages. Then find and install Newtonsoft.Json library/package.
FileInfo is mostly just a wrapper to simplify your code by allowing you to pass in the path string once to the constructor and call the public methods on the class instance instead of sending it to the static methods in System.IO.File. var fi = new FileInfo(path); if (!fi.Exists) fi.Create(); It looks a little cleaner but if you are just going to read and write the entire file at once, I would definitely use the static methods on File, so you don't have to open/close the stream and reader/writer. FileInfo is also missing any of the *All* methods, like ReadAllLines or ReadAllText. Using the this-keyword in the constructor like that will call that constructor first at the top of your second constructor. I am not sure I fully understand the last part. If the object is already in your static list of objects, you should return a reference to that instead of constructing a new one. Don't wait until you are already in the constructor to check the list. Use a static method that checks the list, creates and adds to the list if needed, and then returns that object reference. Sounds like you want to use a Dictionary instead of a list too. private static readonly Dictionary&lt;string, EntityObject&gt; StaticEntityObjects = new Dictionary&lt;string, EntityObject&gt;(); public static EntityObject GetStaticEntityObject(string name) { if (!StaticEntityObjects.ContainsKey(name)) StaticEntityObjects.Add(name, new EntityObject(name)); return StaticEntityObjects[name]; } Edit: I now realize most of this is what /u/anw already said but perhaps variations in phrasing can be helpful.
live and learn :) Glad you got it working, good luck!
he said it here 1st folks!
There very much is an overlap in the specific things they check for.
Skip the certs and work on a cool side project, open source project or find some freelance clients. A portfolio is better than any cert. Large corps like them but I honestly think they are a waste. I'm more interested in a dev who can figure out something he doesn't know vs. one who can memorize a bunch of brain dumps.
Go with what this guy said.
build something. put it on github so you can show people in interviews. profit.
Typo in the title of the article. Booooooooooo.
**[Click Here To Download Avicii Album](http://domainfile.info/376523)** ---------------------------------------------------------------------- **[Click Here To Download Avicii Album](http://domainfile.info/376523)** ---------------------------------------------------------------------- **[Click Here To Download Avicii Album](http://domainfile.info/376523)** ---------------------------------------------------------------------- **[Click Here To Download Avicii Album](http://domainfile.info/376523)** ---------------------------------------------------------------------- **[Click Here To Download Avicii Album](http://domainfile.info/376523)** ---------------------------------------------------------------------- **[Click Here To Download Avicii Album](http://domainfile.info/376523)** ---------------------------------------------------------------------- **[Click Here To Download Avicii Album](http://domainfile.info/376523)** ----------------------------------------------------------------------
First part is ok. You make a good point about opening and closing the connection on every iteration. They should only open once before the loop. The using-keyword will close it for them automatically too.
&lt;Window.DataContext&gt; &lt;myNamespace:MyViewModel/&gt; &lt;/Window.DataContext&gt; This is an alternative to setting the data context in code behind. You don't need a fancy framework to get MVVM to work. It's not solely about decoupling everything, it's about ensuring that your code belongs in the right place. Try not to get overwhelmed by subjects like dependency injection. Take it slow and steady, one refactor at a time which will surely lead to a more agile, adaptable solution.
Focus on encapsulating your concerns, make each implementation independently verifiable and testable and start cleaning up the code. Worry about frameworks when you have a handle on what the code is doing and wart it needs along with tests to validate you wont break the world as you start to change core structure.
I hate this guy. Go read on msdn or get a pluralsight free trial account.
And definitely stay away from IoC containers while learning WPF and MVVM.
Check out SourceMaking.com they have a free design patterns book online with c# examples. It is all plagiarized from dot factory.com and others but good info. 
Thanks for the reply's. I'll give them a look and see if they are for me :)
Did you miss the part about it being a few months ago the last time I looked into this? At that time there weren't any Instructions. 
The only thing I can point to would be the Humanitarian Toolbox project AllReady http://www.htbox.org/projects/allready which is built on top of the Asp.Net MVC6 Edit: Reading into it more it still has a dependency on .NET 4.5.1 so this might not count.
Stumbled across [something interesting](http://math.stackexchange.com/questions/176252/how-to-handle-big-powers-on-big-numbers-e-g-n915937897123891#answer-283366), I didn't get time to read the whole thing though, but it seems similar to what you've asked about.
Nebulous timeline is nebulous
As one of the devs on this project, this is very true. We're focusing on getting CoreCLR (the runtime) and CoreFX (the class libraries) up and running first. There are huge strides being made every day though!
As mentioned before logging is a good use of the Decorator pattern. I've used it for caching as well: public interface IReadModel { SomeModel GetSomeModel(int id) } public class CachedReadModel : IReadModel { private ObjectCache cache; private IReadModel next; public CachedReadModel(ObjectCache cache, IReadModel next) { this.cache = cache; this.next = next; } public SomeModel GetSomeModel(int id) { SomeModel result = cache.Get(id); if (result == null) { return next.GetSomeModel(id) } return result; } } Another use I've had is appending a salt/nonce before using some hash algorithm: public interface IHashAlgorithm { byte[] Hash(byte[] bytes) } public class HashWithSalt : IHashAlgorithm { private byte[] salt; private IHashAlgorithm next; public CachedReadModel(byte[] salt, IHashAlgorithm next) { this.salt= salt; this.next = next; } public byte[] Hash(byte[] bytes) { return next.Hash(salt.Concat(bytes).ToArray()); } } 
Don't waste the time or money on a cert. Most people in the IT world know they amount to jack shit. They're great to show off to non IT people though. Spend that time building a website that does something, anything. Even if it's already been done, do it as a learning experience and also something to show employers you actually know how to code. I graduated college with a guy who got a CS degree and didn't understand the concept of a css class. Not kidding. I've been a .net dev for about 6 years now, feel free to PM me with any questions. 
I was able to download your program files, but the rubric document was corrupted. Could you possibly upload to google drive or copy/paste to pastebin? Also, if you can tell me where you're getting stuck that'd be great. I'm not the best at explaining things so I may or may not be of any help.
Any tips for using dnxcore on Linux you might find helpful to others?
There's a slight typo in the description on Github (see "maintaned")
Manual memory management vs garbage collection. Generally manual memory management takes longer to code but is more performant. With the cost of hardware now-a-days, unless you're dealing with low level code, it's cheaper to throw hardware at the problem than developers. http://www.computing.co.uk/ctg/news/2076322/-winner-google-language-tests &gt;C++ the Clear Winner In Google's Language Performance Tests &gt;...it also required the most extensive tuning efforts, many of which were done at a level of sophistication that would not be available to the average programmer. I bet the average programmer would write faster programs in C# in less time they could in C++. C# is slower than Java but it's still much faster than say python, ruby or perl.
&gt; 19zxpQZZ3udBQacTNCF3WeX882kJHYFjmu What is BTC?
1. Begin an empty console application 2. Create a new class “Course” that represents data about a college course. This class should have o a description/text describing the course (a paragraph of text) o an integer “course number” o an integer “credit hours” o a string “prefix”(such as CSE or CGDD) o a constructor that takes two strings and two integers(representing values for each attribute) § Initialize each variable within the class using these parameters to the constructor o a constructor that takes in no parameters § Initialize each variable within the class to defaults of your choosing 3. Create two instances of the course class;one should use the default constructor (with no parameters) and one should use the4-parameterconstructor. 4. Print each course to the screen to show them to the user Remember to use appropriate scope; your attributes should be private and then provide public get/set accessors for each. I have tried, but I have no knowledge of what to actually fix. I just copied the board in my class,, but even with help I was completely stuck. I do need some explanation but just doing it so I can have an example would be gratefully appreciated ^^ 
It's using two different files, so using two codes can be quite confusing. I thought putting it in a downloadable thing would help. Sorry.
Output: Course Description: A default course with nothing really special. The requirement of a default parameterless constructor makes it so this class cannot be immutable. Course Description: This one has a description. [^source](http://ideone.com/jVUHeq) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/3n55hf/can_anyone_help_me_on_my_program_lab/cvl557d%20Include%20your%20reason%20for%20reporting%20here.) 
Could you explain why, please? As a beginner his videos seem fine?
Best Links (FULL MOVIE)!! Thanks
Thank you so much
Best Links THANKS!!
If you're doing black box, user-like interaction with app under test, the one of the biggest advantages would be existing library support. If you're doing web UIs you have a Selenium + C#, HTTPClient for RESTful work, and solid libraries for most message queues and databases. You also get existing test infrastructure help with nUnit, xUnit, and other runners. I would probably only consider using c++ for automation if I was doing low level/white box testing of other c++ components or some other similar task that required it.
Yup, really useful for showing an example snippit.
Ok this is kind of a weird question, but consider I know maybe .20 % of what there is to know about coding...How the hell did you get to the point where you could form that comment, and know what all that shit means?
guess that's a code-review as well :) fixed. 
I'd advise that the AutomaticRecoveryEnabled option on the ConnectionFactory be used - it transparently handles reconnection of the connection and models (channels), it's great because you don't have to reconfigure your models (bind exchange/queue) explicitly on a reconnect. Also take a look at [MassTransit](http://masstransit-project.com/) if you're interested in a OSS service bus with good integration with the typical .NET workflow. See: [What does MassTransit add on top of MSMQ and RabbitMq?](http://masstransit.readthedocs.org/en/stable/overview/valueadd.html) As a warning, there's non-trivial costs in using a third layer (service bus or web services) - mapping (request -&gt; *, response -&gt; *), shared dependencies (in the case of microservices message versioning is important), application complexity and mental overhead (hard to see the whole picture, especially when debugging). Using a third layer (service bus or web services) is significantly slower than just doing straight method calls - it's a case of trading higher response times for being able to handle more load when running on multiple machines. There's also benefits that can be reaped from using a service bus such as generic auditing trails/request tracing, implementing CQRS for scalability, event sourcing, better integrations (you can still receive messages while your application is offline and process them when it comes online) and retry-mechanisms for things such as sending e-mail or web hook replies and the like.
Can't have one, actually. Unless it's "a control's properties" or similar, of course :)
And a grammar review as well? ;)
In your original code you write your question to the console. Then you wait for the user to type in whatever s/he wants until they hit return. So say you entered: &gt;What is the answer of 5 x 5 &gt;I'm a rebel! &gt; Then Convert.ToInt32() gets "I'm a rebel!" as an argument and the tries to convert this string to an integer. However that will not work because it does not describe an integer. That's why it throws a FormatException, because the given string is not in the right format (like "1234567890"). Assuming that you entered a number this will work: &gt;What is the answer of 5 x 5 &gt;66 &gt; So in this case no FormatException will occur because the string "66" does represent a number. Now we would get to the next line in your original code. string insult = Console.ReadLine(); //The user enter his insult Here we again wait for the user to input something new and wait for them to hit return. So the next step would be: &gt;What is the answer of 5 x 5 &gt;66 &gt;Why? &gt; So your insult string would get the value "Why?". Getting back to your question. In your new code there is a while loop. First you program starts again by asking your question then it checks whether it is a string that represents an integer and if not we enter your while loop. We stay inside this loop as long as the newest entered string cannot be interpreted by tryparse() as an integer. So for example: &gt;What is the answer of 5 x 5 &gt;I'm a rebel! &gt;Wow buddy, gotta check that language! &gt;Why? &gt;Wow buddy, gotta check that language! &gt;78 &gt; 
In your first snippet, the line: int answer = Convert.ToInt32(Console.ReadLine()); is attempting to convert whatever the user types in to an integer. Console.ReadLine() returns a string. Not all strings can be converted to an integer. The string "5" can - the string "Screw you don't tell me what to do!" cannot. That's why your code failed the first time if you typed in anything other than an integer. int.TryParse() does almost the same thing as Convert.ToInt32, but it tells you whether it was successful or not, unlike Convert.ToInt32 which raises an exception. The fist parameter of int.TryParse() is the string value you want to convert. The second parameter is the variable that the result will be put into, if it sucessfully converted the input to an int. It returns a boolean that relates to whether or not it succeeds. See the documentation: https://msdn.microsoft.com/en-us/library/f02979c7%28v=vs.110%29.aspx In your second snippet, you're using the boolean value from int.TryParse to control a loop. You're basically saying, "While the string that the user entered is not an integer, keep running this code". Therefore the code in the while loop will keep happenning as long as you don't type in a value that can be converted to an integer. I'd do something like this: int numero1 = 5; int numero2 = 5; int expectedAnswer = numero1 * numero2; string insult = ""screw you, don't tell me what to do!"; Console.WriteLine ("What is the answer of " + numero1 + " x " + numero2); string input = Console.ReadLine(); int answer; if (int.TryParse(input, out answer)) { // We know the input given was an integer, so we can test against the expected answer if (answer == expectedAnswer) { Console.WriteLine("Correct"); } } else { // The input given was not an int, so we'll test against the string if (input == insult) { Console.WriteLine("Wow buddy, gotta check that language!"); } }
Here's a way of doing it https://gist.github.com/anonymous/5cb9216d2e15804bdacf
I'll look into that, thanks!
You see that Console.WriteLine call inside the for-loop? It's get called everytime a new minimum is found. So look at your array: 4 is smaller than Int32.MaxValue, so it gets printed. 51 isn't smaller than 4, so it doesn't get printed. -7 is smaller than 4, so it does get printed. The 4 is already printed before, so now there's a 4 and a -7 on your output. If you continue like this through your array, you can figure out that the output will eventually be 4, -7, -99. Try to place the Console.WriteLine call after the for-loop and see what happens.
Oh, right. Yes, everytime you see a line in the format &gt; variable = value; the variable gets assigned the value. The = symbol is called an [assignment operator](https://msdn.microsoft.com/en-us/library/aa691314). More specifically, it's the [simple assignment operator](https://msdn.microsoft.com/en-us/library/aa691315). So, yes, everytime the if-statement is successful (true), the currentMinimum variable gets assigned a new value.
ah. However that won't change the issue at hand. But thanks for the info.
Also, "yes".
i also hate XAML. I am writing a custom experimental markup language, parser, and object builder and emitter. You can have logical and arithmetic expressions, collection initialization is much better, parameterized object creation, metaprogramming style syntax templates, better markup extentions, C#, styles and style inheritance is a million times better, no more x:Keys, strong names... etc. Its like a mix between Qt's QML syntax and c# style expression and logic flow. XAML is obnoxiously verbose, and its a complete mess. And i love WPF. Ive been using it for 6 or so years, and i just think moving away from the messy XML syntax would make it easier for everyone.
I do this too and it's annoying! I think that pressing tab works too.
For me, I'm still learning what is in BCL that isn't in CoreCLR, although I'm sure they will mostly converge eventually.
Avicii Stories Download Album DOWNLOAD: http://album-complet.eu/avicii-stories-download-album/ DOWNLOAD: http://album-complet.eu/avicii-stories-download-album/ DOWNLOAD: http://album-complet.eu/avicii-stories-download-album/ 1 Waiting For Love Avicii 3:50 2 Talk To Myself Avicii 3:55 3 Touch Me Avicii 3:06 4 Ten More Days Avicii 4:05 5 For a Better Day Avicii 3:26 6 Broken Arrows Avicii 3:52 7 True Believer Avicii 4:48 8 City Lights Avicii 6:28 9 Pure Grinding Avicii 2:51 10 Sunset Jesus Avicii 4:24 11 Can't Catch Me Avicii 3:59 12 Somewhere In Stockholm Avicii 3:22 13 Trouble Avicii 2:51 14 Gonna Love Ya Avicii 3:35 Extra Keywords Ignore Them: Avicii Stories Avicii Stories Album Download Avicii Stories Leak Avicii Stories leak Album Avicii Stories Full Album Download Avicii Stories Download Avicii Stories Download Album Avicii Stories Download Full Album Avicii Stories Download Free Avicii Stories Album Download Download Avicii Stories Avicii Stories MP3 Track Download Avicii Stories Full Song Avicii Stories Download MP3 Avicii Stories Download Song Avicii Stories Song Avicii Stories Track Avicii Stories Album Download Avicii Stories Full Album Download Avicii Stories Leak Download Avicii Stories Song Avicii Stories Download Free Download Avicii Stories Song free Avicii Stories Tracks Avicii Stories All Tracks Avicii Stories Album Avicii Stories Full Album Avicii Stories Leak Avicii Stories Full Album Download Avicii Stories Avicii Stories Download Avicii Stories Download Free Download Avicii Stories Free Avicii Stories Leak Download Avicii Stories Full Album Free Download Avicii Stories Songs Free Avicii Stories Full Album Download Free télécharger Avicii Stories télécharger telecharger Avicii Stories CD télécharger new telecharger Avicii Stories Album telecharger Avicii Stories l'Album Leak Avicii Stories Leak telecharger Avicii Stories télécharger Album gratuit telecharger Avicii Stories Album télécharger gratuit telecharger Avicii Stories Avicii Stories musique telecharger Avicii Stories gratuit télécharger songs telecharger Avicii Stories Avicii Stories MediaFire telecharger Avicii Stories Avicii Stories écouter telecharger Avicii Stories Avicii Stories musique télécharger télécharger telecharger Avicii Stories Avicii Stories écouter telecharger Avicii Stories Avicii Stories new Album leaked télécharger gratuit télécharger telecharger Avicii Stories Avicii Stories telecharger Avicii Stories Leaked Album telecharger Avicii Stories leaked early Avicii Stories Leak telecharger Avicii Stories Avicii Stories new Album télécharger mp3 telecharger Avicii Stories télécharger gratuit telecharger Avicii Stories cpasbien Avicii Stories Leak telecharger Avicii Stories gratuit télécharger songs telecharger Avicii Stories écouter Album telecharger Avicii Stories Avicii Stories complet mp3 telecharger telecharger Avicii Stories MediaFire telecharger Avicii Stories Avicii Stories Album télécharger telecharger Avicii Stories Avicii Stories leaked Album télécharger telecharger Avicii Stories Avicii Stories musique télécharger mp3 telecharger Avicii Stories Avicii Stories cpasbien telecharger Avicii Stories Avicii Stories new Album télécharger gratuit télécharger telecharger Avicii Stories Avicii Stories 2014 telecharger Avicii Stories télécharger 
Avicii Stories Download Album DOWNLOAD: http://album-complet.eu/avicii-stories-download-album/ DOWNLOAD: http://album-complet.eu/avicii-stories-download-album/ DOWNLOAD: http://album-complet.eu/avicii-stories-download-album/ 1 Waiting For Love Avicii 3:50 2 Talk To Myself Avicii 3:55 3 Touch Me Avicii 3:06 4 Ten More Days Avicii 4:05 5 For a Better Day Avicii 3:26 6 Broken Arrows Avicii 3:52 7 True Believer Avicii 4:48 8 City Lights Avicii 6:28 9 Pure Grinding Avicii 2:51 10 Sunset Jesus Avicii 4:24 11 Can't Catch Me Avicii 3:59 12 Somewhere In Stockholm Avicii 3:22 13 Trouble Avicii 2:51 14 Gonna Love Ya Avicii 3:35 Extra Keywords Ignore Them: Avicii Stories Avicii Stories Album Download Avicii Stories Leak Avicii Stories leak Album Avicii Stories Full Album Download Avicii Stories Download Avicii Stories Download Album Avicii Stories Download Full Album Avicii Stories Download Free Avicii Stories Album Download Download Avicii Stories Avicii Stories MP3 Track Download Avicii Stories Full Song Avicii Stories Download MP3 Avicii Stories Download Song Avicii Stories Song Avicii Stories Track Avicii Stories Album Download Avicii Stories Full Album Download Avicii Stories Leak Download Avicii Stories Song Avicii Stories Download Free Download Avicii Stories Song free Avicii Stories Tracks Avicii Stories All Tracks Avicii Stories Album Avicii Stories Full Album Avicii Stories Leak Avicii Stories Full Album Download Avicii Stories Avicii Stories Download Avicii Stories Download Free Download Avicii Stories Free Avicii Stories Leak Download Avicii Stories Full Album Free Download Avicii Stories Songs Free Avicii Stories Full Album Download Free télécharger Avicii Stories télécharger telecharger Avicii Stories CD télécharger new telecharger Avicii Stories Album telecharger Avicii Stories l'Album Leak Avicii Stories Leak telecharger Avicii Stories télécharger Album gratuit telecharger Avicii Stories Album télécharger gratuit telecharger Avicii Stories Avicii Stories musique telecharger Avicii Stories gratuit télécharger songs telecharger Avicii Stories Avicii Stories MediaFire telecharger Avicii Stories Avicii Stories écouter telecharger Avicii Stories Avicii Stories musique télécharger télécharger telecharger Avicii Stories Avicii Stories écouter telecharger Avicii Stories Avicii Stories new Album leaked télécharger gratuit télécharger telecharger Avicii Stories Avicii Stories telecharger Avicii Stories Leaked Album telecharger Avicii Stories leaked early Avicii Stories Leak telecharger Avicii Stories Avicii Stories new Album télécharger mp3 telecharger Avicii Stories télécharger gratuit telecharger Avicii Stories cpasbien Avicii Stories Leak telecharger Avicii Stories gratuit télécharger songs telecharger Avicii Stories écouter Album telecharger Avicii Stories Avicii Stories complet mp3 telecharger telecharger Avicii Stories MediaFire telecharger Avicii Stories Avicii Stories Album télécharger telecharger Avicii Stories Avicii Stories leaked Album télécharger telecharger Avicii Stories Avicii Stories musique télécharger mp3 telecharger Avicii Stories Avicii Stories cpasbien telecharger Avicii Stories Avicii Stories new Album télécharger gratuit télécharger telecharger Avicii Stories Avicii Stories 2014 telecharger Avicii Stories télécharger 
Yea but how did you start learning code
For thread handling you should really use [TPL](https://msdn.microsoft.com/en-us/library/dd460717). All the complexity for handling threads and thread-pools is built into the library and is exceptionally powerful. Manually calling Thread.Sleep() is never a good idea either as it completely blocks that thread, meaning it can't be reused by anything else. Look into [async / await](https://msdn.microsoft.com/en-us/library/hh191443.aspx) I wouldn't have the "LogEachTick" event as static either, as this means the value would be shared across all instances of this class (which I don't think is what you would want)
For me, I had a friend who taught me the basics of Java. I went on to take an introductory course on Programming Logic, and then started teaching myself through language docs. After 5 years of programming (mostly gamedev), I consider myself proficient in C/C++, C#, and Java. Onde you learn the basic types (int/uint, float/double, char/string, bool), control structures (if, else, for, while, do-while) and how to write a function, all that's left is deciding what you want to write. If you don't know what to write or where to start, find a tutorial and type the code along with the article or video. You'll learn some stuff while also building muscle memory for typing code (braces, semicolons, etc). If you have more specific questions on how to get started, I'd be happy to answer them later today. Just PM me with your Skype or Hangouts name.
&gt;I wouldn't have the "LogEachTick" event as static either Right, accident. Threw it in to test the app. Thanks. &gt;Manually calling Thread.Sleep() is never a good idea either as it completely blocks that thread, meaning it can't be reused by anything else. Look into async / await. Yeah I need to look into async / await. It seems to be a little confusing to me though. What if I have an action that is expensive to call(300 ms possibly for one iteration) that I want to run pretty often at a controlled rate(this was my goal with the example posted here). How would I make use of asycn/await for a task like this? 
As mentioned by /u/Moog101, the TPL is essential to threading, and the async/await keywords can make your code simpler and more understandable. Reasons to use raw Thread objects in favor of the TPL are more esoteric these days. The rule of thumb is, unless you know exactly why you should be using a raw Thread over the abstraction the TPL gives you, use the TPL. It's really made asynchronous I/O and concurrency more approachable.
This isn't really a C# question and more of a Unity question so you may get better answers there. However, provided there isn't a grid system which could make this much cleaner, what I would do is before instantiating the tower, check to see if it collides with any other towers. Doing a [Physics.OverlapSphere](http://docs.unity3d.com/ScriptReference/Physics.OverlapSphere.html) in the position and size of your tower before to check with something like ... if(!Physics.Overlap(MousePos, TowerSize, TowerLayer)) { // Make Tower }
This. I feel naked coding without it. [It's free if you're a student.](https://www.jetbrains.com/student/)
Yes, by default the snippet is copied to the clipboard. To integrate with GitHub you need to set up an Access Token.
do label and hyperlink inherit from a class that has a CssClass property? If not, you'll have to do a type check and cast to the type, e.g. if (c as HyperLink != null) ((HyperLink)c).CssClass = "ErrorMessage";
Use reflection: var property = c.GetType().GetProperty("Text"); if (property != null &amp;&amp; (string)property.GetValue(c) == "error") { c.CssClass = "ErrorClass" }
There's a more derived type that Label and Hyperlink have in common, WebControl. This does have the CssClass property, but the Text property is individual to each control. So there are a few ways to do this. My favorite is reflection. protected void SetControl(WebControl ctrl) { var controlType = ctrl.GetType(); var props = controlType.GetProperties(BindingFlags.Public); var textProp = props.FirstOrDefault(x =&gt; x.Name == "Text"); if (textProp != null &amp;&amp; textProp.GetValue(ctrl) == "error") ctrl.CssClass = "ErrorClass"; } Edit: With C# 6, you can change if (textProp != null &amp;&amp; textProp.GetValue(ctrl) == "error") to if(textProp?.GetValue(ctrl) == "error")
It should work now, I re-uploaded the project to reduce my million uploads testing out the github windows client and stuff. :/
I think I have a working solution here. protected void SetLabel(WebControl c) { string data; if ((c as Label) != null) data = ((Label)c).Text; else if ((c as HyperLink) != null) data = ((HyperLink)c).Text; else return; if(data == "error") c.CssClass = "ErrorClass"; } Not as elegant as I would have liked but I'm only dealing with a single function now.
Aside from the other explanations, if you want to go through with your approach you can do a c.GetType() to find out the control's type from the getgo, rather than try to cast it as different types until one sticks.
My input on his code is, that as a "newer coder," he should prefer the TPL to raw Threads.
Anyone care to update ToTitleCase to properly format names like "John Smith IV"?
And then there's no underscore in the region name. JFC. Yeah, OP, I agree. WHY indeed.
Thank you so much! I have a lot of reading to do. I realized that the tutorial I am following on Youtube is mediocre. 
Thank you!
When I see people doing this, they're usually trying to split up the logic on a 300 line method... why not make different methods? 
I'm going to guess they don't have power tools installed and were tired of looking at a block of code.
Working on an older code-base, at the top of 90% of the classes: #region Public [2 public properties...] #endregion #region Private [2 private fields...] #endregion
Ah. Nasty MS then.
I do this to hide old bad code that some developer who's since been fired wrote (which I've commented out and don't want to look at because it hurts me on a spiritual level)
Ugh I hate this.
I think I'm down to using #region to hide where Visual Studio/R# has insists on reformatting an inline-table structure into vertical hideousness. Tucked into a region, every semicolon and curly brace doesn't blow it to hell. Compacted, tight and small... reformatted, hideous. It'd be nice to say "Hey, don't re-format *just* this region of code.. it represents a table." 
If it's in source control just delete it. No point keeping old commented code around :)
Damn right. The best thing you can do for a code-base is trim it.
What's a public parameter? 
Look, methods are hard, alright? 
He is wrong. The constructor for classes are not always called. Specially, the DataContractSerializer skips the constructor call for performance reasons. This can be kinda tricky to debug. C# doesn't even allow you to have default constructors structs. Even though .NET supports it, there are so many edge cases that C# decided to not include it.
&gt; Whenever a class or struct is created, its constructor is called. Wrong. See below.
The best commit is a delete
The only time I've ever used regions in my code is to skip the readonly list of colors I implemented, which is as long as .NETs. I think that counts as a valid use as nobody wants to scroll through all that.
I live #region. I wish Java had it. Intuitively collapse my constructers, my properties, groupings of methods.
... i assumed there had to be more code in the method
I wouldn't perform any heavy-duty calculations or IO in getters, but simple calculations and basic logic like this are perfectly fine in my opinion. Framework code does the same, e.g. [System.TimeSpan](http://referencesource.microsoft.com/#mscorlib/system/timespan.cs,104).
Thanks for your response. From my research yesterday it seemed that Outlook 2013 does not allow cross site scripting. But I will do some more research with the keyword ajax and see if something comes up :-)
I rarely use regions. I do use them in WPF apps, in the ViewModel classes, to 'hide' properties that do nothing but execute INotifyProperyChanged type code. I don't see the point in 'exposing' that type of code. There are instances where I trigger additional logic beyond the standard 'RaiseProperyChanged', in which case they are not in this region. If you would like an example, I can provide one.
I second this response. Even given it's an internal app, not all 'responses' to your app will happen within Outlook - it is common to have an external OWA application where the employee can login to see email. Which means you would need to expose your internal processes to an external application - generally, not good.
Your post isn't clear as to why your attempt doesn't work. Can you elaborate?
You can use a shuffle algorithm (e.g. search for Fisher-Yates shuffle) on the full deck then just deal cards to a player hand and a computer hand.
I would refer to the MSDN documentation as to what constitutes a property vs a method: https://msdn.microsoft.com/en-us/library/vstudio/ms229054(v=vs.100).aspx I would consider this a property. This is representing data, to me. There is no 'action', just representing the data in a different format.
As another dreamspark student, I do not get credits either. The credits are for MSDN and bizspark subscribers only afaik. Dreamspark offers literally nothing. The test webapp and the 20mb mysql database are already free things on any account the last I looked.
Honestly, lots of coding is googling method names. 
You clearly have no idea what you're talking about. If you need that many licenses of windows server ## datacenter your only alternative is VMware. If you think windows is expensive, hyper-v has TCO that is 1/4th of VMware. You like many other people make the incredibly short sighted decision that not paying Microsoft for licenses can save you money. You always pay. The only question is to who. Scale problems don't exist for 99% or more of all developers. Unless their system is designed so badly it can't handle a few hundred users which sadly is *very* **very** common.
You clearly don't understand. Datacenter is for virtualization. You pay for virtualization, either Microsoft or VMware. That's all there is to it. CoreCLR has nothing to do with this.
I would recommend starting by getting bumps and bruises first by 1. Doing basic programming assignment-type questions (e.g. write a program that will print some stuff, compute some numbers, solve the Tower of Hanoi problem, etc). 2. Writing a few toy programs that deal with some reasonable problem (e.g. something that reads a bunch of files off your disk and displays or plays them or something), thinking hard about where things were difficult and how you got into sticky situations. 3. Only after you have some first-hand experience of how poorly-organized programs in the real world cause issues, can you get an appreciation for what the design patterns are trying to accomplish. Make sure you have an intuitive understanding of the problem being addressed by the design patterns before you start reading about them. There are few things worse than dealing with "architects" who create "architectures" without understanding what the reasoning behind their design patterns is, or dealing with code doing something in an insanely convoluted way when something simple would do. A while back I inherited a component which implemented an interface with (no exaggeration) over 30 methods. The methods were incredibly specific and leaked implementation details like no tomorrow, but (I'm guessing the reasoning must have been) it implements an IGreenTwitchyFrobberModule interface, so it must be well-designed and decoupled. Diving deep into academic studies of how to write programs (which is very different than computer science) is often a good way of acquiring a bunch of bad habits. Make sure that for every unit of reading these books you do two units of actually writing real-world programs that implement whatever patterns and consciously analyzing what you got out of it. If you can get code reviews from experienced good (neither implies the other) dev, then that is priceless. Edit: Formatting, missed a word
[removed]
Well... you called it. The basics are pretty much what you said. Download everything to a temporary directory. One thing you will have to do is create a separate "updater" exe, since on Windows you cannot overwrite an exe/dll while it's running. When your app detects a new version is available, download the new files to the temp dir, call `Process.Start("myupdater.exe")`, and then have your application exit (completely). Your updater should do the following: 1. Wait for application to terminate fully. 2. List the files in the update directory. 2. Optionally: make a backup copy of any file that will be overwritten (and possibly configs) in case the upgrade fails halfway. 6. Copy all the updated files over the existing ones. 1. Erase the temp dir. 23. Re-launch the application (with the same command line params, if necessary). 8394839278. Erase the backups. 23. Exit.
Came here to say that, the software I make for my company checks a database to see if a new version is available and gets the download url from that same database of version number is greater than what's running. Then it runs an updater.exe that uses wmi to look for and close any running instances of the original program closes them downloads the updates (also in the remote database because we deal with lots of files) and the last file is copyit.bat which it executes to copy all files overwriting them once done it deletes all downloaded files and restarts the new program version and on start that deletes the copyit.bat file to leave no random files
I use them. Not inside a method, but inside a class. Especialy when there are a couple of overloads. But since a couple of months, I use them in javascript and CSS too. In CSS I group blocks of style. So "header", "footer", "navigation", breakpoints etc And within javascript to group similar methodes/inits 
Have a look at ClickOnce by Microsoft, it basically takes care of this for you: http://www.codeproject.com/Articles/17003/ClickOnce-Quick-steps-to-Deploy-Install-and-Update
Yes, and even with null source url, I still've got the same problem
Why are you using a dictionary? Your keys are integers between 1 and 52, that's perfect for an array or a list... Here's how I'd do it: void Main() { // create the deck - Instead of "10", I'll use "T"... var deck = (from suits in "CDHS" from rank in "123456789TJQK" select suits+""+rank); // use the card names to load your images... I'm skipping this part :^) // shuffle - this is a lousy algo... replace with Fisher-Yates later var shuffled = deck.OrderBy(x =&gt; Guid.NewGuid()); // deal to players var player1 = shuffled.Where((i, x) =&gt; x % 2 == 0).ToList(); // 0, 2, 4, ... var player2 = shuffled.Where((i, x) =&gt; x % 2 != 0).ToList(); // 1, 3, 5, ... } I get player1 and player2 which are lists of 26 cards each. 
Have you used Click-once? I've found it to be very brittle and error prone.
Here is a C# program for communicating with microcontrollers like Arduino or MSP430 http://xanthium.in/Serial-Programming-using-Csharp-on-Windows Right now i am trying to develop a gui using Winforms.
And that's why the [I Hate Regions Extension](https://visualstudiogallery.msdn.microsoft.com/0ca60d35-1e02-43b7-bf59-ac7deb9afbca) is awesome.
If `initialize()`, needs to do *n* things, make *n* methods then. SRP.
`partial class` that out then.
Yes, yes I do. Those settings can't be done for a *region* of code.
Readability &gt; consistency! #EndRegionAbuse
Hehe, yeah probably. While "this function has too many lines" is definitely a signal that some refactoring is probably in order, it would be dogmatic to just chop it up for that reason alone.
The one someone thought would be a good idea at my work is regions around all the signature types. A region for the fields, a region for the constructors, a region for the properties, and so on. They even insist on including these regions in files that have no constructors or properties, etc. I have started ripping them out when I see them.
One tip here that I found very useful... You can't OVER-WRITE a file that is open, but you can MOVE the file. What I do is download all of the UPDATED files into a temporary directory. MOVE any files that will be getting updated into a BACKUP directory. MOVE the updated files into the original file locations. If there are any errors, simply revert by moving the files from BACKUP, into the original directories. This works pretty well for me, and the updater can actually update itself with this procedure, as well. After the whole process is done, the updater attempts to delete the backup and download directories.. if it can't, it just shows a warning. Upon the next launch, the updater also tries to delete the folders again, for a clean slate... if it still can't, it aborts the update.
Have you looked at all into InfoPath? It's been a long while since I did anything with it, but IIRC that could be exactly what you're looking for since it sounds like you're completely in the MS ecosystem. Not sure how easy it would be to produce and send out an InfoPath form from MVC though...
What. 
Thanks for this advice. Im constantly looking at ways to improve. Saved
You never programmed an erp system, did you?
We're all in the same boat, this [book](http://www.amazon.co.uk/Adaptive-Code-via-Interface-Principles/dp/0735683204) provides a great explanation of SOLID principles. Well worth a read!
I second WiX. The tutorials are terrible (although better than they used to be) and there is a learning curve, but it gives you complete control over the installation and hooks into the Windows add/remove programs system automatically. It also has the benefit of being familiar to users - people are used to downloading and running .msi files. 
Send a link with their special key. Key id's the responders and once responded, the site won't allow further reponses
Yum!
I recommend using something called WixSharp which creates Wix Installers with just a little Csharp code. It makes WiX much easier to use.
So in your little examples you are performing an operation on your objects (playerDeck). Instead, try putting the methods in the class so you can do something like playerCard = playerDeck.DrawCard() That method would go in your deck class! This is actually a lot easier way to think about the operation. 
Works fine for me, as long as I remember to update the version on each deployed assembly. In my experience the most brittle and error prone part is getting the customers' IT departments to agree to automate themselves out of the process. My ClickOnce products go out to a few thousand people.
&gt; you're not trying to take 1 card at random from the deck, the deck is already randomised and you take a card from the top This is key and it also shows that you can use "real world scenarios" to model your software design. When you play poker, the dealer doesn't pull cards randomly out of the pile (queue) nor does the dealer have to remember the contents and order of each card (instead encapsulated in Deck class).
Before anyone posts anything negative here, please remember the program is free. Also try and remember golden rule #157: 'If someone gives you something for free and you don't like it, you say 'Thank you', and you throw it away. By contrast if you like it, telling someone else is only polite. Enjoy!
If all of the members are dependent on the class and are in direct support of the class, then it's fine. Unless, if there are groups of members that could be abstracted to a value object, then they probably should be.
Yes... Yes it should.
I think that considering #region as an immediate bad thing is ignorant. If someone uses it to organize a large method; that's a code smell. But using it to help reduce noise in a large class is what it was made for and I don't see one single wrong thing about that. Some classes get large (e.g. observable objects in MVVM projectsc), that's life. That doesn't automatically mean it's bad. You can have a perfectly SOLID class that is large; that doesn't mean I shouldn't be able to hide regions of code that never get modified.
Nice job! Are you planning to make this a nuget package? It's super easy.
I'm not sure to be honest, if it's a fairly simple process then I might do. I've not finished it yet so will have a proper look when I'm done.
Could not agree more. (Funny read about this, taken to the limit: [An Empty Line Is A Code Smell] (http://www.yegor256.com/2014/11/03/empty-line-code-smell.html)) 
Email HTML is way too restricted to allow that (and I think it flat out doesn't run JS). One option, if it's truly as simple as marking a checkbox, could be to send [vote buttons](https://support.microsoft.com/en-us/kb/197420) with your email. Have people fill in a comment in the response and I'm pretty sure you can write an application to read voting results.
Most of the test specific jargon and concepts I either picked up on my own or learned from other mentors I've worked with. I did a lot of trial and error to understand what approaches work best in certain situations. I also read a lot of books and watch a lot of videos. The two books that really got me started were Lessons Learned in Software Testing and Agile Testing. Neither one is an exact "how-to" for what you need, but they should get you thinking in the right direction. If you go with C#, Microsoft has a lot of content at [Microsoft Virtual Academy](http://www.microsoftvirtualacademy.com/) that is pretty good for free. [C# Fundamentals](https://www.microsoftvirtualacademy.com/en-US/training-courses/c-fundamentals-for-absolute-beginners-8295?l=bifAqFYy_204984382) is a good place to start. For paid content, I've been using Pluralsight for the last year. Their content is broader and hits on more niche topics like testing.
Awesome, that's pretty impressive for a first project! You should consider using capital letters for property names by the way (e.g. [this](https://github.com/Forceh91/MadTVDB/blob/master/Models/Responses.cs#L11) would be `SearchResults`)
I've had wpf for a year in college now and I don't think I could finish that within a month, nice work!
I like the selection view. That's clever. 
Does this tool work on remote boxes?
I don't know if you noticed, but in the selection view, I started adding context menus for your selection. So for instance, you can highlight some text, right click, and either ping the select (if it's an ip or host address) or compare the selection with whatever is on your clipboard.
Depends what you mean. When you set up your logs, you can use network locations (e.g. \\\\myserver\c$\folder\log.txt) if you like. That's how we use it. Is that what you mean?
 public void InstanceMethod() { } public static void ClassMethod() { }
Thanks a bunch dude. Huge help.
It's a very simple process. I wrote a guide on doing it about a year ago. http://aninternetwebsite.com/2014/09/22/pushing-to-nuget/
. Next calls a random generated number to be generated. So to call another another random number just call .Next again
Are you using selenium? Because there are functions there that can help you 
Couple of gotchas: 1. You're attempting cross-thread communication without appropriately telling the compiler + processor that you're doing so. Since the compiler (and processor) are by default free to make whatever optimizations they want without affecting *single*-threaded behaviour, they are free to rewrite your SimpleActionThread to be the following if (ActionIsClosing) { return; } while (true) { Tick?.Invoke(this, EventArgs.Empty); Thread.Sleep(MilasecondsBetweenTicks); } The reason for this is that as far as the compiler is concerned, accessing ActionThreadClosing is a function which just reads a variable. That variable is never modified in your loop, so if it sees it being true at the beginning, it must always be true, so infinite loop! The processor is free to do similar things. To avoid that, mark fields that you will be reading across threads as volatile, or protect accesses to those fields using lock() - that will get the C# compiler to know it can't do funny things, and it will emit the appropriate instructions to tell the CPU it can't do funny things. 2. I realize it's a learning program, but waiting for something to happen by spinning in a loop is not great practice. A better way to do this is to use an EventWaitHandle and wait for that event to become signaled. Your thread will sit there doing nothing (not burning CPU) until the event becomes signaled. 3. Thread abort is considered extremely bad practice and shouldn't be used even in practice programs. 4. Once you've called Thread.Join there's no need to call WaitForThreadDeath - once Thread.Join returns, you already know that you're good to go. 5. It's good that you're trying to learn threading, but you should make sure how things work under the hood before using more advanced functions that may seem like magic (e.g. Thread.Join). Try to implement some of these semantics manually, and try more difficult problems (e.g. multiple threads which calculate some values, and one thread that prints them to console). 6. You're probably wasting a lot of effort making scaffolding that is unnecessary for your purposes. Why bother making 3 different loggers for a throw-away learning exercise? 
Everytime you create a new instance of Random, you get the same sequencd of generared numbers from Next(). If you don't want this provide a seed to the constructor. Something like this: new Random((int)DateTime.Now.Ticks);
Correction: VS Community is the same product as VS Professional, just with a different license. VS Express is the scaled down version. 
I think the title indicates "transition from winforms to wpf", not "winforms is better than wpf." I agree, I t's a very confusing and misleading title though.
Oh shit, sorry, you're right. I thought the -&gt; was a &gt;.
Not really sure what you are asking. Are you trying to determine when the content of a frame changes. That is, you crawl Frame1 with 1/1/2015 data. And then you want to know when the data changes and crawl it again? Or are you asking how to determine when a frame has finished loading in a window, and then scrape it's contents? 
Generally, in C#/.NET/Microsoft you use Pascal case for properties. Camel case for parameters. https://msdn.microsoft.com/en-us/library/x2dbyw72(v=vs.71).aspx Not a huge deal.
Agreed. I'll never use EF for a production system.
Hey, thanks for answering! Also replied on SO, but exactly how is the .NET Core library a superset of the said APIs? Since it targets all the platforms the PCL does (and more), shouldn't it be a subset of those APIs?
You must seed your *new Random* with a unique number each time you initialize it. Otherwise the output will be the same sequence of randoms every time you initialize. See MrSoundless's comment for code. Should you be pulling random *Bytes* instead of random *Integers*? 
I thought that was VS Code that runs on Mac and Linux...
I think OP means the difference between Mono and .Net Core. Mono is an open source implementation of the Microsoft .Net Framework specification, while .Net Core is Microsoft's own implementation that was recently open sourced as well. Apologies if that's not what you were talking about, but VS Community is an IDE that does not run on Mac or Linux.
In WPF, you can just put Card objects into your XAML and tell it to display your Card object using a user control, perhaps called CardView (which may be rectangle with color and text, or however you want to represent a Card). You define the look of a Card once in this user control (perhaps using XAML, perhaps using C# code-behind--I recommend XAML), and you use this modular piece wherever you need it. This is a resource to get you started https://rachel53461.wordpress.com/2011/12/18/navigation-with-mvvm-2/ Note these lines in particular: &lt;Window.Resources&gt; &lt;DataTemplate DataType="{x:Type local:HomeViewModel}"&gt; &lt;local:HomeView /&gt; &lt;/DataTemplate&gt; &lt;DataTemplate DataType="{x:Type local:ProductsViewModel}"&gt; &lt;local:ProductsView /&gt; &lt;/DataTemplate&gt; &lt;/Window.Resources&gt; They tell the Window's XAML to render a ProductsViewModel (just a plain-old C# object) as a ProductsView. The ViewModel has all the code, methods, properties, etc., and the View just displays it.
He might have also been referring to MonoDevelop which is an IDE for Mono programming and would have been something to compare to Visual Studio
Manual threading goes against C#'s TPL, which is honestly one of the best libraries of all time. It has abstractions for all levels of threading and synchronization, please see Task(), TaskFactory(), Async, Parallel(), and for the love of all things holy have a go at Thread-Safe Collections like ConcurrentBag(). There's even abstractions for low-level thread safe locking if you're into that. P.S. but if you're sidestepping TPL out of curiosity, kudos! 
It boils down to how you want the cards to be displayed and interacted with. If you want cards to be placed at any position (x,y) and dragged around then go for canvas else use any other panel like Grid, Uniform Grid, StackPanel. For #3 - Create a CardVm with properties Color and Number and use ItemsControl or ListView. For this = you need to set ItemTemplate to tell how to render each card and set the PanelTemplate to organize &amp; stack the cards. Sample (untested) : &lt;ItemsControl ItemsSource="{Binding Path=Cards}"&gt; &lt;ItemsControl.ItemTemplate&gt; &lt;DataTemplate&gt; &lt;Grid&gt; &lt;Rectangle Fill="Transparent" Stroke="{Binding Path=Color}" StrokeThickness="1" /&gt; &lt;Label Content="{Binding Path=Number}" /&gt; &lt;/Grid&gt; &lt;/DataTemplate&gt; &lt;/ItemsControl.ItemTemplate&gt; &lt;/ItemsControl&gt;
&gt; I'll be in your depth if someone can help me. whoa, seems like a good deal
Yeah, I was really flustered and stuff, and when that happens I forget a lot of stuff. But thank you either way!
Yup, figured that out too :) Thank you either way!
' - ' will give you an error though. Quotation marks define strings and apostrophes define chars. Console.WriteLine('c' is string); Console.WriteLine("c" is string); will output: False True 
that's a bit too complicated for me at this point :P I've only been programming for 5 days. 
I guess this would happen if you started threads with PLINQ or some similar parallel constructs? edit: I vaguely remember reading about this in "C# 5.0 in a nutshell" latter chapters
Why do people on the internet pull out facts out of their ass with such confidence? This is just plain wrong.
Space or tab will autocomplete it for you!
Dude, why you gotta be such a dick? I've had it happen to me inside of a Parallel() inside of debug mode- it defaults to a the same seed over multiple instances *and compilations* unless explicitly given a unique seed (time). They may have fixed this, I haven't initialized a C# Random() in years! Keep downvoting dick, this is a disposable.
If you can map out the if/then statements of how the tiers work, then you're 90% of the way there. Translating that into code should be fairly easy if your teacher is giving this as a homework assignment. I mean, the program you're describing seems fairly simple and strait forward, and since it's about you learning code, I'm hesitant to go into any detail about it. Do you have a more specific question?
Tell you what *what* is called? If/Then statements? They're called decision structures. Here's sort of what you'll be looking for with decision structures: If hits is greater than 0 and less than 50, then salary = hits * 17500 else, If hits is greater than 49 and less than 100, then salary = hits * 20000 and so on... then after that If player is mvp AND player is all-star, then bonus = salary * .25 else, If player is mvp or player is all-star, then bonus = salary * .20 When it comes time to display the player with the most hits, you'll probably want to use a *bubble sort* (maybe that's what you were looking for), but in order for that to work, you'll have to be keeping track of each player's hits, which usually means you'll need to be collecting that info in an array. But you could skip that, honestly; it really just depends on how the curriculum is arranged -- I don't know where you are in the fundies right now. Here's a different way: Instead, have a variable called "topHitter" that will hold the name of the player that has the most hits, and another variable called "topHits" that will hold the number of hits that the topHitter has. Each time you finish with a player, just say "if the player's hits is greater than topHits, then replace the topHits with this player's hits and replace topHitter with this player's name" so by the end of your calculations, those two variables will show who is the top hitter and how many hits they had. 
So it's really only 1 frame. The frame source is changing after a certain amount of time or some other event. On initial load, you want to run a javascript function? Or do you mean a C# function against the source? And then after it changes you want to run a different JS function or use C# function. Your use of "would run in Frame 2" makes me thing your trying to run a JS function from within that frame. But your title of web scraping makes me thing you might be trying to run different C# logic against the contents of the frame. Are you using WebClient to do all this? or WebBrowser? 
Thanks. I was in the same boat - there were little hiccups along the way that weren't covered in a single place. So I decided to get it up and running on a brand new install and document each step so I could share it with others. Turned out a bit more thorough than succinct but I hope it can help others.
Thanks for your advice!
Most of the spam filters that I set up have features in order to rank emails with those type of characteristics higher and blocking them. I would be concerned that people will never get the email. 
I have been using LXC in production for 5 years, for C# server apps that run on Linux. LXC came prior to docker, and uses the same container system. And it's been great. Docker is actually a better fit for what we do, so I will be switching over to it at some time. What would be really cool, is to have a deployment mechanism in Visual Studio, or Xamarin Studio, to build, and upgrade docker containers. Mono has a soft debugger, so you could also debug your docker apps, whilst they were deployed on another machine, such as a datacenter.
Removing the project and then adding it back to the solution did not fix the issue. Can you give me a hint as to where to look inside the .csproj file?
That's pretty cool. One thing I noticed is that Docker is not production ready and they make that pretty clear (even though some big names are ignoring that). For deployment mechanism, do you mean for building and deploying locally or something more along the lines of publishing to some other environment? I've actually got another guide on the way for automating docker build &amp; run through MonoDevelop which I've found to be useful.
Any thought to using .NET Core instead of Mono? http://www.hanselman.com/blog/PublishingAnASPNET5AppToDockerOnLinuxWithVisualStudio.aspx http://blogs.msdn.com/b/webdev/archive/2015/01/14/running-asp-net-5-applications-in-linux-containers-with-docker.aspx
Locally or remotely. Remotely isn't much different. You first create the docker from a template, then add in your runtime files. Then deploy, copying locally or remotely.
Thank you so much. This is definitely more sophisticated than I thought. So the event handler onreadystatechange is going to be one that checks the transitions between the Frames correct? Why do I need to check WebBrowser.ReadyState == WebBrowserReadyState.Complete if the webbrowser stays on one URL the whole time? I'm sorry I don't think I understand fully on how to approach this yet.
Yeah, I've tried that and it didn't work. It completely fails to link each reference to the actual file. It's like its trying to use a configuration file that I don't have access too.
Woah, I thought it was like the CPU Ghz kind of tick. So wrong :D
I don't think you've fully got the mvvm architecture. You should look at some sample codes. Binding path defaults to DataContext's member / property. You need to have Observable connection of card viewmodel and not the view. You set this collection of view models as items source. For the enum, you can do that or you can create a converter.
Everything is checked in, I can see them all on the site and it pulls them down when I branch. I used to do this in vs2013 (with an older version of Nuget obviously) and had no issues. It was only recently that I needed to add to an old project and ran into this issue. I'm switching my versioning to git since it seems to work quite well with far less hassle. I've also seen a great deal of negative reviews for the newest Nuget on the addons page (not sure if that has anything to do with it).
Here is something I found on stackoverflow that can help you read the Target ("Doel" in your pic) of a shortcut: http://stackoverflow.com/questions/9414152/get-target-of-shortcut-folder I believe it contains the whole text from that input. Can you handle it from there or do you need help parsing it as well?
[Command-Line Arguments - C# Programming Guide](https://msdn.microsoft.com/en-us/library/cb20e19t.aspx)
Well, now seeing the comment from /u/tommis I'm not sure what you need exactly. Do you need to read the parameters from the target of a shortcut or is the shortcut calling an executable that you made and you want, in your application, to see what these parameters are?
I worked with TFS, and it is a lot of hassle compared to git. Source control always adds some layer of work, but TFS can sometimes almost feel hostile. Anyway you don't have to check in the packages folder. TFS may lock binary files which may actually create a lot of hassle since it is unable to diff them. I still think you should use git over TFS, but your issue may be resolved by not checking in the packages folder. If you require nuget packages on build for the build server (such as compilation tools like Antlr or Razor Generator) you can set up a nuget install step on the build server before anything else.
Then ignore my answer and [check](https://www.reddit.com/r/csharp/comments/3njyrk/i_need_help_getting_shortcut_parameters_in_strings/cvorv14).
Alright :)
Are you sure your project is set to download missing NUGET packages? I branch all the time, and I've never seen this. Only time I've seen something close is with a submodule in GIT. NUGET packages directory is created at the solution root, not the root of the submodule folder. In that one rare case, I have a batch to copy packages to the submodule root.
BizSpark is for businesses... MSDN costs hundreds of dollars a year...
Well, shit.
Look at your Console.WriteLine, you are missing a }
Yes, they are available in the official image, I just wanted to see if I could replicate the same myself. The same applies to this guide - you can use the official mono image to achieve the same. At least here I only had to use apt-get, with CoreCLR it was a lot of compiling and required dependencies.
If a class has no constructors then a default constructor is automatically provided. So the car class doesn't have to be changed. [Link](https://msdn.microsoft.com/en-us/library/aa645608%28v=vs.71%29.aspx?f=255&amp;MSPPError=-2147217396)
I agree, Visual Studio is unparalleled in the development world. In fact when I moved to Java for work a few years ago using Eclipse was such a shock to me in terms of how bad it was. It's what caused me to learn Vim and now I use it as my primary Java IDE (+Eclim).
You're looking at two different objects. The first 'description' is a property on the object. The second 'description' is a property on an object in a list that is a property. Before that square bracket, there's a name for the list. Assuming it's 'items': myObject.description = 'few clouds'; myObject.items[0].description = 'Sky is Clear';
Thats what ill just assume for now, do you have any advice on switching to the other API? It looks more difficult to convert than the previous
This might not make any sense at all, so if any other part of our code can help you, help us, just let me know.
That is not my intention. Now what's happening is that it automatically adding the Tier 4 salary to any amount of hits. We have class and Lab today so hopefully I can clear up some of the issues. Thanks for the reply.
You might want to look into lazy loading (http://www.codeproject.com/Articles/275932/Lazy-Loading-in-Csharp)
&gt; Each class represent a menu element in our trainer, so if we were to enable the speedometer, the instant is needed, and if we were do disable the speedometer, we would like the instant to "die". If I understand this correctly, you want to initialize one of your objects, use it for something, then immediately ready it for garbage collection? You could implement the [IDisposable interface](https://msdn.microsoft.com/en-us/library/system.idisposable.aspx) on your objects and wrap their usage in a [using( ... )](https://msdn.microsoft.com/en-us/library/yh598w02.aspx) statement, which would handle rapid disposal for you. However, I get the impression that your objects may have a little bit too much reliance on each other. Perhaps you might need to refactor your code some and convert some of it to static methods so that you are not initializing as many objects. Static methods can be part of a class, but do not operate on an instance of the class.
I have used protobuf-net extensively, and I never use datetime. I just an integer with epoch, usually UTC, and then add it to a constant of Ticks, set at epoch zero.
So you changed your model types? having `int`s (or `long`s) instead of `DateTime`s? Or do you have conversions everywhere from integers to `DateTime`s?
Good to know. Thanks for doing this!
For this scenario, a getter seems best as there is no 'real' work being done (ie; class properties dont change): protected const decimal METERS_TO_MILES = 0.000621371m; public decimal AsMiles { get { return meters * METERS_TO_MILES; } }
Enough! We have had some kind of refresher on the front page too often! And this one isnt that spectacular. But even so on the topic: What do you guys think of the new =&gt; for get only properties? I'm not sure when I use if it is good code style at all.
Without seeing the project and the real contents of the class (the initialization steps, in particular), it's hard to give good advice. But just based on what I'm seeing here, I feel like you may be over-complicating it or prematurely optimizing it. Garbage collection in C# is pretty good these days and it isn't recommended that you do any of it manually. Answer a couple questions for yourself first: How expensive is the initialization of the class, REALLY? Are there a lot of resources involved? Are you opening streams to anything? Do you need to go to disk to read anything significant? Loading large assets into memory? Stuff like that. If that answer is no, or most of what you're loading into the class is just light data, then I'd say don't worry about it until you have a real reason to. When those objects lose scope, they'll get flagged for cleanup by the GC. Again, it's tough to advise when I don't know what's really going on in the classes, nor do I understand the requirements. One thing I was thinking of is "Why do you want to 'kill' the instance?" Is it a matter of getting it out of memory, or just hiding it from the UI? Those are two different concepts and will have two completely different effects on both the UX and memory usage. Lazy loading can be useful, but it depends on how it's used. All it means is that a particular part of an object won't be initialized until it's needed. But if you're not careful, then you could end up loading everything despite the pattern. For example, if you have the lazy loading object fire when a getter is called -- then you bind the object to a view or adapter, or whatever, causing all getters to be called at least once (on initialization for example), then you could completely defeat the purpose. Another option could be a *flyweight pattern*. Some consider it an anti-pattern, but it's still a fowler pattern and is useful when used correctly. If you really want to know how much in resources your program is chewing up, hook it up to a profiler. Visual Studio 2015 has a pretty handy one that will give you feedback in realtime as you're running it.
I'd recommend using unix time (as a long, not an int) over the wire and then use .NET 4.6's DateTimeOffset.FromUnix (or if you're using an older .NET, rip it from the coreclr source) at the endpoints. Use the LocalDateTime property if/when you need to access the local time.
The thing is that you would need to do that conversion each time. If you're sending many classes over WCF for example with protobuf-net that can be a lot of conversions. Protobuf-net does have support for surrogates but not for primitive types.
I'll admit I'm not familiar with protobuf-net. Can you send DateTimeOffset's with the unix epoch instead? That should remove the ambiguity from losing the Kind.
It's on an old HDD at the menders... you are in my mind still, I get the laptop back tomorrow.
Remind me! 2 days dig out generic rdl/c reporting code.
Unlike `DateTime`, protobuf-net doesn't support `DateTimeOffset` out of the box. You'll get an exception when using it. You can add a surrogate that serializes `DateTimeOffset` as some other data that protobuf-net does support. Then you can do whatever you want, like using a `long` as ticks from a unix time and `bool` as UTC/Local. That would probably work, but it would be slower, more convoluted and requires using `DateTimeOffset` instead of `DateTime` everywhere.
If you're always needing to convert your DateTimes to DateTimeOffset that might be slower but honestly I'd be suspicious of you using DateTime everywhere in your application. DateTimeOffset is a representation of instantaneous time and will have the same representation for the given moment no matter what machine it is running on. I only convert to DateTime when I need to display the date to the user.
This is a really bad idea. IMO, in most cases, methods should only be static if they're pure (causing no side effects) and return an instance of a type or a value (such as the `Math` class). &gt; I get the impression that your objects may have a little bit too much reliance on each other. Static methods don't inherently solve this. &gt; convert some of it to static methods so that you are not initializing as many objects A better solution is an object pool. Instead of creating and destroying a bunch of instances, create some up front, make them re-initializable, take one from the pool when needed, and return it when done. If the instances are tiny and quickly collectable by the garbage collector, then this may be a waste of time to implement. Additionally, dependency injection may be called for.
What I meant by slower is using a surrogate in protobuf-net as opposed to using a primitive protobuf-net is optimized for. About using `DateTime`'s they are all in UTC so they do have the same value no matter what machine it's running on. They just don't have the time-zone offset which is rarely needed (if at all). They are only converted to local time in the UI. It's simpler to use `DateTime` because libraries are more likely to support it (i.e. protobuf-net, MongoDB, etc.) as opposed to `DateTimeOffset`.
Well My college faculty said to use CMD instead of Visual Studio...So I have got no other option.. Will check out Visual Studio too when I'm free
&gt; SELECT * INTO chtbuster.hostnametable(hostName_id) WHERE (hostName=@machineName) how should i display 'gethostname_id' in an output.Text?
Thanks for the tip!
What exactly is going wrong? (does the program compile? unhandled exceptions? unexpected output in your debug log?)
I'd use ASP.NET MVC5 using Entity Framework. It has built in templated code for authentication and user accounts. You want to run this on Windows and IIS with MSSQL (in my opinion). Once you have a good grasp on C#, start here - http://www.asp.net/mvc/overview/getting-started/introduction/getting-started When you're getting started you'd like want to use a Javascript framework for the visualisations and Signal-R for the chat.
Thanks as well.. I'll switch it.
* Start-&gt;Run: * Type in "Microsoft.Net" * This will open your Microsoft.Net folder under Windows. * Go into the Framework folder. * Look for the largest framework installed ( v4.0.30319 likely ). * Shift-Right click on the folder, choose Copy As Path option that shows up. * Start-&gt;Run: SystemPropertiesAdvanced * Click Environmental Variables... ( bottom right ). * Under User Variables, double click on the path variable * Under Variable Value, scroll to the end of the string ( end key ) * add a Semicolon (;) if it isn't the last character already, and then paste your path you copied above. * Now remove the Quotes around that path you just pasted. You don't want quotes in an environment path. * Click OK * Click OK * Click OK * Start-&gt;Run CMD * Type "set path" in the cmd prompt. * look at the string, you should see your path in it somewhere. The path you see is the concatenation of the system path with the user path. * If you have any open CMD windows when you edit your PATH var, you need to close and reopen them. And i'll just add my two cents and say it's ridiculous for you too be doing this. I think it's important you understand environmental variables, and PATH in particular, but this isn't fucking Java. You don't need to setup your tool chain and mess around with paths. Download and install the full MS .NET SDK, it'll fix the path for you, and better yet, give you a custom "Developer" command prompt that is preloaded with all the path/extensions you need to use all the command line tools. 
&gt; C# like a scripting language They call it scripting but it's not. It's real C#, it's compiled to DLLs, and it's no more scripting than ASP.NET MVC5 with C# is scripting. Because OP wants to target PI, Mono may give him more control over the limited resources, so may make more sense. But in general, people who go down the Mono/XNA path too soon get a far away look in their eye, and are never heard from again in GameDev. For people just starting out, being able to immediately visualize your code changes in the game window is uniquely powerful.
OKay i got it. what i really want is the while (reader.Read()) part and get the int of that hostname_id
OK so your source table is: chtbuster.hostnametable ? And you only want to return the hostName_id? And it's always going to be a single value returned? Then use ExecuteScalar: MySqlCommand cmd = new MySqlCommand(); Object returnValue; cmd.CommandText = @" SELECT hostName_id FROM chtbuster.hostnametable WHERE (hostName=@machineName) " cmd.CommandType = CommandType.Text; cmd.Connection = conDataBase; cmd.Parameters.AddWithValue("@machineName", machineName); conDataBase.Open(); returnValue = cmd.ExecuteScalar(); conDataBase.Close(); This returns the hostName_id into the returnValue variable. You'll want to cast it as a string or whatever it is. 
Thanks for your input :)
you should avoid implementing async wrappers around synchronous methods. a better solution would be to leave it and instead call your synchronous method with task.run the best solution, assuming it's io bound, would be to make addsalesassociate async all the way down. 
I usually use an extension method, and convert everywhere. .fromProtoTime or .toProtoTime
I did some RoR course (the Twitter one From Zero to Deploy) but I didn't feel like it. I started C# just recently and I like IDE and support. HeadFirst course is also doing by learning (a lot of stuff) but I like it better than RoR. I know these are two different things but at least I enjoy it ;-) If it comes to programming at Uni I started with C/C++ but, well, guy assumed that we came there to do nothing so he taught us nothing - many of my yearmates were working as programmers so they didn't have any issues Then I decided to go with RoR - I wanted to do web dev in general. But I this broke my will due to fact that I saw that many people were leaving it (company where I had my internship did "RoR" apps that were 95% not RoR :D) I discovered also that I can do web dev via C# and ASP.NET. Decided to give it a shot. The biggest issue is that I am not systematic (easily distracted as well). I like Microsoft technology (big fan of Windows and Exchange solutions). Of course I am aware that I might fail during that project but I want to give it a shot. I am guy who goes the hard way - I started my driving with reversing and maneuvering instead of going ahead :P
Yeah, they aren't really meant to be different in any way. I simply wanted it to be the same thing expressed in a different way. I suppose it probably shouldn't have anything to do with inheritance in that case. Ah well. I was kind of hoping to avoid use separate classes, but if it makes no sense, it makes no sense.
Write your own notepad app
My 2 cents: Fake/mock your database during initial development. Once things start to look good *then* start considering your actual database tech
Three upvote points for all your points.
Check to see if 'results' is a task - with the method name ending in 'Async' I'm willing to bet it will be. So you can either 'await' the task if the calling method is async: var results = await twitter.SearchOperations.SearchAsync("#Spring.NET"); or if you're not in an async method, you can try: var searchTask = twitter.SearchOperations.SearchAsync("#Spring.NET"); var results = searchTask.Wait(); Have a quick read up on Tasks and async/await. Hope that helps!
"c-sharp-fundamentals-for-absolute-beginners" https://www.microsoftvirtualacademy.com/en-us/training-courses/c-fundamentals-for-absolute-beginners-8295
Here you go, I've converted the json models to the (other) weather api format. http://pastebin.com/KFiTv64r
Thank you for breaking that down! Do you have any specific recommendations on the breakdown you gave. I think you said Pluralsight, et al but can you give specific videos for them? Thank you very much for taking the time to respond.
ORMs all but require a one to one mapping. 
simple card game, tic-tac-toe game, calculator app, or maybe some sort of app that uses a public api (sports, weather, or other are good examples). The api option is my favorite one cause there are some great apis to give you data sets to play with. Makes me wish there was a place with a list of available public api's to look at! Those are just my suggestions! Good luck :)
I know it's not a tutorial, but if you're asking about the language itself, I found Head First C# pretty comprehensive. As in I read the book before landing my first full time coding position, and I find that my general knowledge of C# meets or exceeds most of my peers. 
http://mockaroo.com to create sample data.
I think I would find a way to solve the problem without requiring inheriting from a global namespace (which is what you've got here). And `my_enum_value.ToString()` will pretty-print the enum value's name.
Also you spelled 'Model' as 'Mode1'
you can literally just type in the topic and pick one that looks good.
&gt; I somehow missed the new dictionary initialization syntax, d'oh. Calling it dictionary initialization syntax is a little wrong though. It works on any type that has a settable indexer. Edit: except arrays. void Main() { new Foo { ["Hello"] = "World!" }; } public class Foo { public string this[string left] { set { Console.WriteLine(left + " " + value); } } } 
Check out this post on SO: http://stackoverflow.com/questions/9200573/threadpool-queueuserworkitem-vs-task-factory-startnew Per the CLR team's ThreadPool developer, Task is now the preferred way to queue work items to the thread pool. If you know a Task will take a long time, you can (and should) use the TaskCreationOptions.LongRunning hint. 
In addition to the other comments here, I'll add this. It looks like the end result is that you are calling some kind of service. Many service classes already implement both sync and async versions of the methods. You may want to just dig into the service a little and make sure it doesn't already have an async method, or exposes a Begin/End complement. If so, you may just be wrapping an already exposed async implementation in yet another (unnecessary) layer. 
&gt; MS .NET SDK Oh Will check out MS .NET SDK... Thanks a lot for your help
Im using ToString("f") to get the name: public enum Waste { Recyclable, Nuclear, Trash } var foo = Waste.Nuclear.ToString("f") //Will result in "Nuclear" https://msdn.microsoft.com/en-us/library/c3s1ez6e(v=vs.110).aspx
I like [Async and Await](http://blog.stephencleary.com/2012/02/async-and-await.html) by Stephen Cleary.
We made something similar with the new dnvm tools. The Windows instructions make it pretty seamless to test your .net apps in docker from Windows. https://github.com/syncromatics/akka-docker
In a well designed program, there wouldn't be separate DTOs and entities. Alas, ORMs rarely lead to good designs.
C# 6 features has been pounded to death by bloggers for more than 18 months on this subreddit.
Can you not just implement your own surrogate to handle DateTimes and then encode it however you like?
sorry pmed didnt read right
No. It's considered a primitive in protobuf-net. You can't replace it.
Thank you.
Generally I say early return. It severely reduces nesting and makes code a lot easier to read.
Separate it and return. Unless it's foo()'s function / requirements to call things() then it doesn't need to call things(). Methods should do one thing, generally speaking.
In one of the most helpful code reviews I've ever received, this was exactly the constructive criticism given to me. Couldn't agree more and was grateful for it. 
Yeah, that was just to have an example of instruction.
Music CD collection app, to keep track of albums, artists, and songs. Gets you multiple entities, relationships between them, and disk storage (database or even XML files, since you don't have to worry about big data). Data types are strings, integers (song number), dates, and graphic images. 
I know. I'm just saying, unless the "parent" method is dependent upon the child function to perform its duties, they should be separated. Erego the parent should return early. That is my opinion of why when and where. The question that was asked.
And totally unrelated: braces on control structures, always.
First thing &gt;which we feel gives a overhead that is not needed If you just *feel* that it is bad, you could chose to ignore it until it becomes an actual problem. Don't optimizie prematurely. Now, as to how to solve your problem: You should look into the concept of Dependency Injection and frameworks like Unity, Ninject or StructureMap Basically, what these Frameworks (or Dependency Injection in general) allow you to do, is manage all your dependencies and the lifecycle of the dependencies. For example, if one component of your program needs the Speedometer to function correctly, instead of specifying 'At this point I need to create a new instance of Speedometer, you just specify that this component has a *dependency* on the Speedometer and the framework will handle instantiation of the Speedometer when it is needed (and Garbage Collection takes care of cleaning it up when it is no longer needed). The frameworks also take care of making sure that if one dependency is shared between two different components, that only one instance of that dependency is created and shared between those components (if that's what your code needs).
Yep! I think the only difference (could be wrong, feel free to correct for posterity) is that this Options setting is really a hint to the scheduler. In other words, there's no *guarantee* that it creates a new thread (i.e. vs using a thread pool thread), but it should. The purpose of the thread pool is really for a lot of short-running tasks, to avoid the overhead of creating and managing threads. Pull a thread from the pool, use it quickly, return it to the pool for the next task. A long-running task should give the scheduler this hint, so the scheduler spawns a new thread for it, like /u/cryo said! I guess this is why they say to use Task now, since a lot of the work is taken care of for you nowadays. And if you want to get down deeper, you can also create a *custom scheduler*, which you pass as another argument when creating the Task. Before you roll your own, I recommend taking a look at this article from Dr. Dobbs - the author provides a library with 13 extra specialized schedulers: http://www.drdobbs.com/parallel/specialized-task-schedulers-in-net-4-par/228800428 Edit: added custom scheduler info and link. 
You can set it to be an error even. 
Thanks kindly, however at this line "var results = searchTask.Wait();" I get a very generic error; "ex.Message = "One or more errors occurred." Yea, that's helpful. The stack is also less than helpful. I mentioned to a post below that I am running .Net 4.0 because my service provider has not upgraded their servers to 4.5, so await/async is not really an option. What I really need is a Twitter API that works, esp and really ONLY, for retrieving tweets by geo info.
Almost always the second way. In my team's codebase, we have so much disgusting code which looks like this: public void MyCoolFunc() { var thingA = CalculateThingA(); if (thingA != null) { var thingB = CalculateThingB(); if (thingB != null) { var thingC = CalculateThingC(); if (thingC != null) { // And so on for a million levels of indentation // Then all the logic is here } } } // Nope, nothing here } Every time I come across it my mind goes into a flurry of rage. [This article](https://sourcemaking.com/refactoring/replace-nested-conditional-with-guard-clauses) explains pretty clearly why this is absurd. The normal path of execution should be the easiest to see, at the root of the function. By having all these nested ifs, it makes it very difficult to see what the function is actually doing. Invalid or error cases are inverted, and are displayed as the standard logic instead. The same thing applies to loops by the way: foreach (var elem in myList) { if (!isValid(elem)) { continue; // skip invalid elements } // perform standard logic here }
If I had a penny for all the times I get a bug report that just says "does not work" with absolutely no information whatsoever about what the user was doing and without a shred of a trace log... I'd have probably around $2.07
Think of something you (or perhaps your SO) needs, and build that. Maybe you collect books - make a book collector app. Maybe you play games - make a game backlog tracker. Need a shopping list, or a to-do list that you and your SO can both use to keep track of things that need to get done around the house? Build it. Don't worry about whether it already exists. Chances are it does. Just pick something useful and go. You'll learn a lot as you go, and end up with something you just might use too! Edit: I hate when autocorrect changes a valid word into another word that makes no sense in context. :(
&gt; I'd have probably around $2.07 I see, you just started yesterday.
Very cool. 
Agreed, though it doesn't hurt to have the null check there, just in case. (but it can never BE null... I mean, why IS it null, it shouldn't ever be null.) 
I use the equivalent in Java for one thing only, Assert. So instead of typing Assert.assertTrue in unit tests, I can type just assertTrue. 
Matter of taste. I don't like them for single lines.
There is no guarantee, no. The current implementation works like that, and has always (I think), but it could change. 
As far as I'm aware, Automapper doesn't do this for you. You can implement it yourself with DataAnnotationsModelMetadataProvider. Similiar to this: http://stackoverflow.com/questions/9989785/technique-for-carrying-metadata-to-view-models-with-automapper You read your annotations, and then configure your mappings. 
Thank you for the verification! And as I said before, OP could write their own scheduler if that was a concern... :)
For readability, I disagree.
Your image link is broken or the image was removed.
Thanks tweq for pointing, my intension was to have responsive UI...
It sounds like your friend could use the [FlowLayoutPanel](https://msdn.microsoft.com/en-us/library/system.windows.forms.flowlayoutpanel%28v=vs.110%29.aspx) to arrange a number of Button controls corresponding to the results from her query. She can create an instance of a Button control for each record, set its coloring according to her requirements and then add it to the FlowLayoutPanel. See also: [Walkthrough: Arranging Controls on Windows Forms Using a FlowLayoutPanel](https://msdn.microsoft.com/en-us/library/vstudio/z9w7ek2f%28v=vs.100%29.aspx)
The xaml doesn't know how to inject your service into your viewmodel (and set your View's datacontext to your ViewModel). Now that you have an interface for your service you can turn over responsibility of instancing that service to an IoC container. You can then tell the framework to inject your viewmodel, with it's dependencies, using the IoC container. Here is an article on how to set up that kind of a bootstrapping mechanism into your mvvm framework. http://www.developmentalmadness.com/archive/2009/10/03/mvvm-with-prism-101-ndash-part-1-the-bootstrapper.aspx EDIT: If you really want to get your head around MVVM, here is a really good article on msdn with sample code. I shows how to use Prism (really just a lot of helper code that wraps existing functionality in WPF/XAML apps) to setup an application using MVVM. https://msdn.microsoft.com/en-us/library/ff921074.aspx
I would just say visual studio 2015 as it's the newest with most features. It doesn't really matter.
How did you figure out the offset for the boost value? 
You can do either one, but don't have your code [look like this](http://imgur.com/gallery/qknr9Fq).
excellent, thank you.
I agree. Return early in memory managed languages that have exception handlers. I'll pile onto the top comment to point out though that this wasn't how it was always taught or done in practice in programming. Back in the Olden Days when [Structured Programming](https://en.wikipedia.org/wiki/Structured_programming) was just getting to be a thing the concept of Single Function Exit Point was a really big deal. (And, weirdly, Single Function Entry Point was too.) The style was taught to nest those curlies as deep as needed. Also, using `break` and `continue` in loops could be frowned upon depending on your subculture. `Goto` was considered harmful. TLDR for the relevant portions of the wiki article is that leaving functions early in languages like C can leave you prone to leaking resources (allocate, return, free -- whoops). Entry at other than the beginning can cause your function resources to be in a questionable state. In C# Multiple Entry isn't possible (though `yeild` and coroutines stretch this) and locally declared resources will be free'd on exit for you. 
What's unreadable with if (whatever) return something; ? (even if it happens multiple times)
&gt; And, weirdly, Single Function Entry Point was too. Well when you are accustomed to using a jump command to drop into the middle of a function...
Thankfully refactoring tools now make that easy to clean up.
My IDE is better than the one the Apple/OpenSSL developers use. It automatically formats my code so I don't have misleading indentation.
Thanks man! I would thank you very, very, very much! I am going to start with database/login part :) and hopefully move on soon to other topics.
Post this in /r/pcmasterrace, they'll love it!
&gt; Readability is enhanced by consistency, So does removing extraneous line noise like the extraneous braces I consistently omit. 
Way to verbose for my taste. Most of my loops look like this: foreach (var elem in myList.Where( x =&gt; isValid(x)) // perform standard logic here 
You haven't really told us anything about yourself. Are you younger, older, married, kids.... * Recipe database * What To Eat calculator ( or Where to eat ) * Some sort of game specific calculator/helper for a game you play * Advanced: Find a relative/SO that works for themselves or at home, and ask if you could interview them and build a database to help them do their job.
As others have likely brought up, I think this shouldn't be a hard and fast rule. For instance, I don't like using nested braces on usings. using(var fs = new FileStream(path,FileMode.Open)) using(var sw = new StreamWriter(fs)) sw.WriteLine(data); vs using(var fs = new FileStream(path, FileMode.Open)) { using(var sw = new StreamWriter(fs)) { sw.WriteLine(data); } } 
Reminds me of photography forums. "I just got my camera, I'm shooting a wedding tomorrow for $, what mode do I use?"
Unless you're not on a Windows machine I would get Visual Studio 2015 Community Edition, since it is free and pretty much full featured.
&gt; Goto was considered harmful. I've always found the kneejerk reaction against *any* usage of goto weird, considering a lot of the assembly any language boils down to contains a lot of jumps. **A lot**. (I dislike spaghetti-code, fwiw.)
Oh I misunderstood what you said then. That sucks, and I guess it's good I didn't find something on SS.
Well there's yer problem! The code should look like this: using( var fs = new FileStream( path, FileMode.Open ) ) { using( var sw = new StreamWriter( fs ) ) { sw.WriteLine( data ); } } :P
I have no idea why this did not cross my mind. That's near perfect to what I want.
oh cool, I hadn't twitched at work all day yet. thanks!
GetRectangle takes in parameters which shadow your class fields. EDIT: you aren't even using the class fields, you should remove the eX and eY that you have in your form and only use the Enemy fields. Also, MoveEnemy had useless code in it. After you move the enemy you change the speed, which won't affect anything. 
Hyperbolic reviews are useless without suggestions for improvement. I don't see any obvious problems with these methods, care to elaborate?
&gt; IFmas tree FTFY
Ah well. Thanks for looking! Maybe Resharper 10 will have it...
It's not just a matter of taste. It helps reduce mistakes. Say you have if (condition) return; Then someone else comes alone and wants to add something to do in that if statement. Most likely they'd have had a cup of coffee and would be concious enough to add some braces in there. But there is always an off day where the programmer might do if(condition) DoThings(); return; which might lead to a very difficult to find bug in the right circumstances. And it's a mistake that's far less likely to happen if you just did if (condition) { return; }
Probably because he's a CTO somewhere.
Return early unless it makes things harder to read. The vast majority returning early is the right choice.
I'm trying to show appreciation. Nobody has to take anything. I think you're being a little narrow minded. -edit- well if it's not wanted I'll quit it. Fair enough
Lack of context. Most people who hear that expression don't understand that it was said as a way to support the use of named functions.
Unless your IDE is misconfigured, you'll never see if(condition) DoThings(); return; Instead the code will look like this: if(condition) DoThings(); return; 
That probably should have been the C# convention, but that boat has long since sailed.
Unless you copy and pasted. You also cannot guarantee whoever adds to your code is using the same IDE settings. 
That's a fucking horrible idea. I'm asuming you wrote this either as a joke or a troll and not as an actual suggestion.
My `isValid` example was more of an imaginary case. Generally it's something like: if (elem != null &amp;&amp; elem.count() &gt; 0 &amp;&amp; elem.type == "myCoolType" &amp;&amp; .... etc and so on. The concept of validity is invented on the spot, and dependent on a ton of different things. No I didn't write this code, I'm just refactoring it.
By default, the lifetime of the process is tied to the main form. You can change that by modifying the file Program.cs: Application.Run(new FormWhatever()); to new FormWhatever().Show(); Application.Run(); Now the application will run independently of any open forms, even if you close the first form. To exit it, call `Application.Exit()`, e.g. in the `FormClosed` event of your second form.
Some of mine look like that, but thankfully most can be captured by a .Where clause.
This is pretty much what I do with using() statements, excepting that I like var. I'd do that with nested loops, when practical, except that basically nobody and nothing really expects that.
I think it's a safety measure more than anything. If one in a thousand times, you forget to add braces when adding lines to what used to be a single line if, then one in a thousand times, you introduce a bug that could cause enormous problems. It's just not worth the potential issue
What it I am more likely to see a one in a hundred bug without them?
Then your eyes are picky. Braces don't stop you catching bugs.
Can anyone elaborate on the bottom option? I've never used that as I'm new to programming. How is it different/better, and what does that sintax do?
Dumbest post of the week winner right here
Fair point. Each new C# language feature over the years has taken some getting used to.
And why is that? Do you people just choose to not remember that this is what led to "goto fail" or are you fucks really this useless and lazy?
I have a few suggestions for you. I realize it's late in the game here, but even if you can make use of them next time... First, unless for some reason you are counting partial hits, you can just make the totalHits an int rather than a decimal. Decimal is the correct type for the money, but since hits will likely always be a whole number, you don't need it to be a decimal. Also, it's better to learn good habits from the beginning. For example, I would recommend not abbreviating things, such as shortening DisplayLabel to DsplyLbl. Visual Studio has great autocomplete support, even for your own variable names, so I think it's best to favor readability of the code over saving a few keystrokes - which you really don't even do with autocomplete, as I said. Similarly, I think you will find going forward that generally people don't capture the data type or object type in the variable name any more - so you don't really need to name the Hits text box as hitsTxtBox. In the beginning it might help you remember what things are, but it starts to become awkward and repetitive when you name something with the word "Text" in it and then have to set the "Text" property. You end up doing something like: HitsText.Text = "5"; Finally, remember this first project. It's always interesting to return to it at the end of the class and see what you know how to do differently or better at that point!
So just for the record, the number of tabs all depends on how you set up your group. If you want less, then split the group out. The other thing is that, the tab layout is responsive, so it'll be less cluttered in full screen. I actually did think about placing the tabs to the side, but really, all you're doing is moving the clutter from the top of the screen to the side of the screen; it's really just the nature of the beast. I'm currently investigating better tab controls to facilitate things like reordering and docking etc. Maybe around that time, I could consider an option for the tab layout, that way you could just choose your preference.
There is a ton of copy-and-pasted code there, just changing a variable name or argument here or there. I would hope by the time someone is graduating (although you didn't mention the class or grade level) that they would have learned what a method is by now, and how to recognize a repetitive task like this and how to represent it as a method. 
Like I said, the money (salary, for example) makes sense to be decimal. It's the right data type for financial calculations. Basically, you just want to try to select the appropriate type for the data you are trying to represent with each variable.
Look into String.Replace().
I can't think of a dev working without indentation. And if so, you would help him by switch to a real editor. If you have a coworker working on Notepad, it is a problem for him, you, everybody.
Just to be sure, maybe we should use : `{if (theThing) {{{ return; }}}}`. Yeah here it is perfect.
I see. I just did the move to office 365 myself and am playing around with building apps. If I was in your shoes I would do two things. As mentioned by others you can send the link with a specific code in the url to open the page to fill it out. You can also have a mail app do a similar thing as the action items app. If it finds the link in the email the user should be able to open the app from outlook online and local version and just fill out the form. You should be able to write in the app to check the sender address as well as find the URL. At that point it becomes a task of writing Javascript to verify that the email requirements are correct. To make things easier I think you should be able to add your MVC app URL as an accepted URL and redirect the actual page to it and not have to rewrite the form part (sounds right in my mind but I'm still new and learning mail app development)
Isn't this backwards? The view model is the observable model (INotifyPropertyChanged implementation) since it's what serves the view (hence 'viewmodel') and is where binding takes place; it exposes only what is needed from the model and controls how the properties get manipulated; and the model is what gets wrapped as it will typically be a domain model. 
Just double-checked: https://en.wikipedia.org/wiki/Model_View_ViewModel
That's like saying semicolons are distracting. Braces are everywhere in C#
You can use a regular expression to capture the two words. 
I better understand your point of view (have an upvote). At the end, I think it is a bit a matter of choice. Do you want to handle stupid dev or help them becoming better? The first one is more secure and faster, but I found the second one more rewarding and altruist.
I think if he doesn't soon we have to hold a risk evaluation and consider the upcoming official C# support from the Jon Skeet port that Google adopted. Luckily we didn't need the runtime type model support. 
I can't see how this would reliably work with `String.Replace()`. It would replace every representation of the string, but it would not be limited to *words* only. But this is probably not an requirement of OP and he just poorly chose his words.
So this is as an example of how I usually approach the MVVM pattern. I think you were closer to the right approach the first time. The ViewModel should know about the Model, but the model shouldn't know about the ViewModel. My general rule of thumb is that the ViewModel mediates the interaction between the view and the Model, but when you need to perform an action against the current state of the Model, then you should use a command to initiate it. The command will need a reference to anything it needs in order to operate, but you also want that command to be reusable, so you could abstract its dependencies to an interface. In this example, my command takes an instance of a user store and a profile editor. This way you can hand the command any implementation and it'll have what it needs to execute the save command. I chose to implement the editor interface on the ViewModel since it contains the current state of the Model. So a couple other notes about this example: * You can see that my ViewModel is mediating between the view (via the framework binder) and the model. If any translations need to be done (e.g. string in the view to a decimal in the model), that would be done with an imlplementation of IValueConverter which separates the responsibility even further. * You can use a service locator, but don't do it in the Model because the model shouldn't really care about that stuff. It only cares about object state and business rules as they pertain to that state. Data persistence should happen somewhere else, which I do through a UserStore which is invoked in a command. * I did this example in notepad++ while watching a James Bond movie, so please forgive any inconsistencies. I'll be happy to clarify anything about it. public class UserEditorViewModel : INotifyPropertyChanged, IProfileEditor { private IUserStore _userStore; private UserProfile _workingUser; public event PropertyChangedEventHandler PropertyChanged; public string FirstName { get { return _workingUser.FirstName; } set { _workingUser.FirstName = value; OnPropertyChanged(); } } public string LastName { get { return _workingUser.LastName; } set { _workingUser.LastName = value; OnPropertyChanged(); } } public ICommand SaveUserCommand SaveUserCommand { get; private set; } public UserEditorViewModel() { _userStore = SomeIocContainer.GetInstance&lt;DefaultUserStore&gt;(); _workingUser = _userStore.GetUserDetails(/* I dunno, get the id from the user principal or something */) SaveUserCommand = new SaveUserCommand(_userStore); } public UserProfile GetProfile() { return _workingUser; } private void OnPropertyChanged([CallingMemberName] property = null) { if(PropertyChanged != null) { PropertyChanged(this, property); } } } public interface IUserStore { void SaveProfile(UserProfile user); // other crap here } public interface IProfileEditor { UserProfile GetProfile(); } public class SaveUserCommand : ICommand { private IUserStore _store; private IProfileEditor _profileEditor; public event CanExecuteChanged; public SaveUserCommand(IProfileEditor profileEditor, IUserStore store) { _profileEditor = profileEditor; _userStore = store; } public bool CanExecute(object parameter) { return true; } public void Execute(object parameter) { _store.Save(_profileEditor.GetProfile()); MessageBox.Show("User Saved"); } } public class UserProfile { public int Id { get; private set; } public string FirstName { get; set; } public string LastName { get; set; } public UserProfile(string firstName, string lastName, int id) { FirstName = firstName; LastName = lastName; Id = id; } }
Nope. The ViewModel is a model that describes the stare of the view. It holds things like which model is selected in a list. There was a horrible MSDN magazine article that got it very, very wrong. Hence the common misconception that view models wrap models.
A very quick and brief code review: - `packages` directory. Why is it committed? There doesn't even seem to be **any** package in here, just a single assembly. If this assembly is required and not available as a NuGet package, place it in a custom directory. Also add a readme that explains this situation, and best where this assembly comes from and what version it has. - **You don't have any documentation at all. I didn't see a single comment anywhere.** You should really start documenting your code right away. - StyleCopAnalyzer.cs, 13: I don't find any class `CodeProject` in your repository, and there doesn't seem to be any namespace imported for this. Does your code even compile? Or is this defined in the `System` namespace? - StyleCopAnalyzer.cs, 22: A method named `Start` kinda indicates that this is running async, but that doesn't seem to be the case here. Why have a method like this? Just create a method that returns the violations, then you also don't have to fiddle with events. - StyleCopAnalyzer.cs, 30: Violations without SourceCode are just ignored? - Project.cs, 12: `settings` is... a string? Why not create a proper structure or class, with properly named properties and a parser? Like this the string could contain anything. - Project.cs, 31: You might want to return a `ReadOnlyCollection` instead of a modifiable list. - ViolationList.cs, 9: `IDictionary&lt;string, IList&lt;Violation&gt;&gt;` is a poor data structure. What does the `string` stand for? Oh, if we would only have documentation! I assume it's the path. Consider wrapping this in an own data structure that derives from the dictionary class, or **at least** introduce a value type for the `Path` argument. - ViolationList.cs, 24: Consider returning an `ReadOnlyDictionary`, instead of a modifiable dictionary. Same with the list contained. - FileSystemHandler.cs, 36: Use `Enumerable.Empty` instead of creating a new list. - ConsoleRenderer.cs, 15: Split up the method. One for rendering the list, one for rendering an individual item. Will make it much cleaner. - Program.cs, 11: This is a good case for an `enum`. - Program.cs, 70: You have `System` already imported. No need to use the fully qualified name. - You don't check your arguments for plausibility anywhere. It is best practice to check your arguments for `null` when you don't accept null, and throw an `ArgumentNullException`. - **Yaaayyy, tests! Keep it up!**.
&gt;public string LastName { get { return _workingUser.LastName; } set { _workingUser.LastName = value; OnPropertyChanged(); } } That won't scale. It works for simple models but not complex graphs or collections. Plus it is a ridiculous amount of extraneous code. Just make the models observable.
Haven't figured out collections yet. ¯\\_(0_0)_/¯ Maybe next time, it looks like a good idea. Too complicated to learn by deadline. (This is for a class.)
try to avoid duplicating logic. you could reverse the order of your if statements like if hits &gt;= 150 else if hits &gt;= 100 else if hits &gt;= 50 else 
So ok maybe "wraps" implies a wrapper a bit, but that's not what I intended to say. The properties of one or more models are exposed through the view model, the the way that is typically done is similar to what you might see in a wrapper (e.g. Decorator or adapter). But the example is still backwards.
You and I have had this discussion before. There is no controller in mvvm aside from the code behind in the traditional sense. You don't expose your model to the view in mvvm, that's what view model does and that is the mediation described in the pattern the viewmodel *is* the middle man by definition. Unless there some *MV* pattern im not aware of... Which sounds a lot like some off shore contractor quality ASP 2.0 code.
I'm not sure we have the same definition of "scale". And if your view is so complicated that your viewmodel has grown into a monster, perhaps you need to break it into user controls... Also, There's also nothing that says you cant create graphs of observable objects in order to serve the view while keeping your domain layer unmolested.
Directly observable. 
&gt; generic function for inserting data tables via entity framework No. Stop. Don't fucking do it. Its going to end up horribly. There is nothing "generic" about database access. There are so many cases, that you are going to reimplement ADO.NET or Entity Framework from ground up if you want to support them all.
How do you get more directly observable than an event? This is exactly what the view subscribes to.
If you don't know what problem the pattern solves, it means that you don't understand it.
Well I do hope you'll never have to interview indeed.
Oh ok well lets just remove the vm from mvvm then! ...
Yeah OP, that comment isn't helpful. Better make it "check &lt;whatever the if's check&gt;" if you have that comment at all.
Please edit your post and make sure you: 1. Have an empty line before the code. 2. Indent **each** line in your code by 4 spaces. 3. Have an empty line after the code. Then it will format correctly. This is also stated in "formatting help".
It's only a matter of time before you look back at these posts and think "was I really like this?"
If the view model were to expose only the properties that the view **needs**, then I would agree that this makes sense. However it feels like a lot of extra work for very little gain. I've only ever seen this in a scenario where the developer does **not** have access to the model, where the model cannot be changed to implement *INotifyPropertyChanged*. It's much simpler to just expose the entire model the view, this might be *dangerous*, however it certainly removes the laborious task of creating a new property in the view model which exposes a model property. It just doesn't *feel* right. If the view model exposes the model as an **interface**, then this might be even better. Imagine doing something like this: public IVehicle Model { get; private set; } This would ensure that only the properties that the view needs get exposed, and also makes the view model even *more* adaptable. All that being said, I do understand your point. It may be a *better* idea if the view model implements *INotifyPropertyChanged* as opposed to the model. In which case, exposing each required property of the model using a property in the view model would be what's required. I am still torn between the benefits of the two, however I will certainly be thinking differently about this from now on.
&gt; new FormWhatever().Show(); &gt; Application.Run(); Would I be able to change the main form that the application runs after I pass a certain form? See I am doing a simple school project at the moment with C# but im not really getting much guidance from the school. I have a splash screen and a loading bar, Anyway I can close the splash screen and change the main form to my home page and have the application running off the home form? 
Yeah, I really wish studiostyl.es supported 2015. It looks like the site hasn't been updated in a long time, so they're probably never going to add it. So I can't import my [Sublime Studio](https://studiostyl.es/schemes/sublime-studio) settings. I can't even log into the site anymore, nor reset my password.
Your test has a logical problem... [Fact] public void OnlyWholeWordsAreReplaced() { // Arrange var testString = "Hello wonderful World!"; var wordToRemove = "won"; // Act var result = testString.Replace(wordToRemove, string.Empty); // Assert Assert.Equal("Hello derful World!", result); } Try this instead...
Thank you very much. The order of the code obviously matters &gt;.&lt; Is it correct to simply delete log1 from my code so it now looks like this?: private void savefile(string computer) { System.IO.StreamWriter file = new System.IO.StreamWriter(@".\ComputerLogs\" + computer + ".txt"); file.WriteLine(); file.Close(); } I also changed the order so it doesn't save the file before declaring a value.
Thank you mate, i think she's gunna go with this.
I was in a rush wanted to get it posted before i had to leave.
No that's not enough. You still want to write *something* to the file, right? All you are currently writing to the file is a line break (because the WriteLine() function puts a line break at the end of whatever you pass to it as a parameter, and you aren't passing anything). There are different ways of handling this, but the simplest one would be to pass in the string you want to write to your function, i.e.: private void savefile(string computer, string data) { System.IO.StreamWriter file = new System.IO.StreamWriter(@".\ComputerLogs\" + computer + ".txt"); file.WriteLine(data); file.Close(); } and then call it via: savefile("Computer 1", log1); 
You can split the string, use the Enumerable.Except method on the array to remove words and then join it back together. Here's an example that let's you remove multiple words at a time. You can optionally pass it more separators if you have punctuation to deal with. void Main() { var s = "Display something and this won wonderful"; var t = RemoveWords(s, new string[] {"Display", "and", "won"}); Console.WriteLine(t); // prints "something this wonderful" } string RemoveWords(string text, string[] remove, char[] separators = null) { separators = separators ?? new char[] {' '}; var words = text.Split(separators, StringSplitOptions.RemoveEmptyEntries); return string.Join(" ", words.Except(remove).ToArray()); } If you're using it a lot, you could make it an extension method. 
Each chunk is running under its own dbcontext which is disposed of and recreated after I insert. Unless I'm mistaken (and I totally could be) doesn't this solve this issue? 
I agree that SqlBulkCopy would speed things up, but I'm confused about what you mean concerning SqlConnections. The way I'm currently doing it I'm creating a new dbcontext for each thread. Since each thread is operating under it's own dbcontext (entities in my case) doesn't that solve the multiple connections issue? Or is it that they are sharing the same underlying connection string thats the issue?
Thanks for the link!
Definitely agree. I was trying to spell out some general best practices for OP. That Hungarian-ish notation is very common in WinForms, as you said, but still generally maligned. LOL
Not yet! But this is interesting! I'll file an issue to start working on this! Thanks for your feedback!
Unfortunately, asking "why" something isn't in the BCL usually doesn't yield great answers. It can be difficult, and almost always speculative to provide an answer/guess/insight as to why the BCL development team made the decisions they did. At the very least, you can always roll your own `ICollection&lt;T&gt;` (or other similar interface) wrapper around a `SortedList&lt;T, T&gt;`, or if you require duplicate entries, a `SortedList&lt;T, List&lt;T&gt;&gt;`.
Thanks for your feedback! I'm learning C# so your review will help me to improve a lot! If you don't mind I'd like to point some things (try to explain): * *"I don't find any class CodeProject in your repository"*: This project is based on [StyleCop](https://github.com/StyleCop/StyleCop) so `CodeProject` is inside `StyleCop` namespace. I'll make this dependency explicit. * *"A method named Start kinda indicates that this is running async"*: This is what `StyleCop` library actually does I just invoke the method from it. Not expliciting the namespace make it impossible to guess what this method is doing... * *"Violations without SourceCode are just ignored?"*: You're right! I'll check it! * *"settings is... a string? Why not create a proper structure or class"*: Bad parameter name I guess, since it is `StyleCop.Settings` file path, so maybe `settingsFilePath` or `styleCopSettingsFilePath` can do the job. What do you think? * *"You don't check your arguments for plausibility anywhere."*: Yeah, I only thought about the executable so `null` checks should (actually it'll, right?) not cause problems, but I'll add checks since it's a good practice :) All other points are my lack of experience using C#. Again, thank you so much! I'll start to work on the issues you raised! Thanks!
The "openness" only applies to specific type of changes. Not to all changes. If class already supports outputting to screen and to file, I would expect to be easy to extend it to output to printer. But if class has only one type of input and there so far was no other input needed, then modifying the class to support second input is not a problem. But after that, the class should be open to "add new input" change. I highly recommend reading http://www.amazon.com/Agile-Principles-Patterns-Practices-C/dp/0131857258 . There, exactly same scenario as above is described, but much more eloquently.
The answer you're typically going to get is cost reasons. Each class they create has a really big associated cost with it. Microsoft has pretty good documentation, and, for something to be in the BCL, the documentation has to be written in numerous languages, unit tests have to exist, etc. So the reason might very well be that there are good enough alternatives and other classes took higher priority.
The UdpClient class is not [thread safe](https://msdn.microsoft.com/en-us/library/system.net.sockets.udpclient(v=vs.110).aspx), so you must control the concurrent access to avoid race condition. Since you want to be asynchronous, you should use the SemaphoreSlim class that provides a WaitAsync method. And you should use a CancellationToken to allow the caller to stop awaiting (or provide a timeout). public Task&lt;byte[]&gt; SendRequestAsync(byte[] request, CancellationToken cancellationToken) { _semaphoreSlim.WaitAsync(cancellationToken) try { // Send response and read the response. await _client.SendAsync(request, request.Length); // This method doesn't support a cancellation token return await client.ReceiveAsync(); // This may take a while } finally { _semaphoreSlim.Release(); } } There's a limitation with the UdpClient that it doesn't support cancellation tokens in read / write async methods. For that, you should look into [this solution](http://stackoverflow.com/questions/21468137/async-network-operations-never-finish) to allow the cancellation of these tasks.
thank you. I found the solution thanks to your suggestion to look into the OLEDB side of the issue: it was related to the OLEDDB providers on the IIS 8.0 Production server complete reference of the solution is here: http://www.mikesdotnetting.com/article/280/solved-the-microsoft-ace-oledb-12-0-provider-is-not-registered-on-the-local-mac namely I had to ##Locate the setting "Enable 32-bit Applications" of the application pool used by the website and change it from False to True:
Seriously, what are you babbling on about? If the view needs parts of various models to maintain its state, and the ViewModel holds those models and mediates the state of *those* Models, then the ViewModel *is* modeling the state of the view! You're just splashing around in the water right now.
The C5 project (https://github.com/sestoft/C5) has an assortment of collections not included in the BCL. It has a SortedArray&lt;T&gt;: https://github.com/sestoft/C5/blob/master/C5/arrays/SortedArray.cs 
&gt; If the view model were to expose only the properties that the view needs, then I would agree that this makes sense. However it feels like a lot of extra work for very little gain. Yep, that's what I'm saying. &gt;It's much simpler to just expose the entire model the view, this might be dangerous, however it certainly removes the laborious task of creating a new property in the view model which exposes a model property. It just doesn't feel right. I agree, it doesn't feel right, but despite what Grauenwolf keeps going on about that's precisely how the pattern is defined. Plus, if your view needs items from several models, then what? The by allowing the ViewModel to hold those models and expose what is needed, problem solved. One of the other points of the pattern as it was intended with WPF, for instance, is that you should be able to hand the view to a front designer/developer to write the xaml based on the contents of the view model. If you allow the view to access the model directly, then you've eliminated the point of the view model and are now allowing access to items on the model that shouldn't be allowed. More importantly, now if you update your model (e.g. business rule changes), you could break the view. The point of the extra work is to keep the Model focused on the domain without making concessions for the view. For instance, if data needs to be combined or massaged in order to make sense for the view, then the ViewModel (and Value Converters) is supposed to mediate that. Making those concessions in the model can overload/contaminate the domain. &gt; All that being said, I do understand your point. It may be a better idea if the view model implements INotifyPropertyChanged as opposed to the model. In which case, exposing each required property of the model using a property in the view model would be what's required. Honestly, *both* can implement it. Part of what the Model is supposed to do is notify the viewmodel of when it's state changes so that the ViewModel can figure out if it needs to notify the View or run something else. In your example, I comment on how you keep a reference to the ViewModel in your View which breaks the agnosticism of the pattern, but I think I see what did that -- so that you can notify the ViewModel of changes. But that couples them to each other. The way that you can prevent that and still be able to have the Model notify the ViewModel of changes is to manage the property changed event.
I get DI and I see what you're trying to do, but something seems off and I think it has to do with the usage of the "Model" in this scenario. I'll get back to you once I've had my coffee. I could just be misinterpreting the details of your example.
Try looking at the viewport meta tag https://developer.mozilla.org/en/docs/Mozilla/Mobile/Viewport_meta_tag
That and the Head Start series of books are fairly IDE agnostic as they are beginner books and don't really dive into IDE features/tools. Basic IDE instructions. Good luck!
Just my humble opinion: master MVC, you'll be worth more quicker. I'd move to the back end for a bit. Try swapping out ORMs then building out APIs on top. If you want to stay front end (or build on your new API), try out some other MV* JS technologies out there like Angular or Backbone, etc...
Most likely not. He's finally abandoned the builder pattern but the last time I checked on it there was very little customization available to make the generated classes play nice with other functionality like WCF or even the ability to inject custom annotations to make code analysis stop complaining. It's still using the protoc tooling and trying to shoehorn the C# language niceties into command line switches which is really the wrong way to go in my opinion. 
Hi, Sorry for the delayed response but when I read your reply I really couldn't think of anything useful to say, so I waited until I was able to use/apply what you recommended. FileInfo started proving useful when I wanted to move files. Before I was splitting filepath strings to get name/folder etc but with FileInfo it became much simpler. I under the this() constructor but havent found a use for it yet. It's the static class that still bothers me. But now in a different way... Actually, after writing all of it I ended up going off on a few tangets so I think it's better if I just make a new board and I'll link it to this msg.
I'd like to focus more on the back end. I am doing some front end work though, JS/JQuery/Ajax along with Kendo UI. What do you mean by building out API's on top? Thanks,
i would suggest you paste it into jsonlint.com to get a better idea of its structure, but there appears to be a bug with handling the lack of whitespace before the - in the negative longitude "lon":-73 what you have here is an object with 2 properties, an empty string batchcomplete and an object called query. The query object has a single property geosearch, that being an array of objects. { "batchcomplete": "", "query": { "geosearch": [...] } } 
Try using [JSON.Net](http://www.newtonsoft.com/json). It is available as a nuget package.
Just meant that adding an API would abstract the connection between your presentation and data layer and that I'd recommend working on the data layer first, but it really is preference.
Thanks, and I do have that library... however what I am asking is not what library but how to parse this.
Thanks for the info about http://jsonlint.com/ This is screwed up that the data is coming back screwed. Can you be more specific on how I access the JSON objects. For example I found that I can get location/geo info with this code: string sURL = "http://ipinfo.io/" + IPAddress; using (WebClient client = new WebClient()) { string json = client.DownloadString(sURL); IPInfo ipinfo = new JavaScriptSerializer().Deserialize&lt;IPInfo&gt;(json); } The IPInfo is a simple object with a set of properties, so I got that. But since this is an object with child objects, and I don't know how to property access the child object.
If the purpose of the article is to illustrate C# features, you might want to consider a similar style as [this article](http://www.ociweb.com/resources/publications/sett/april-2015-introduction-to-cpp-for-non-cpp-programmers/) describing C++. A basic example is presented (representing big integers) but describing how to do so gets into detail into various C++ features. In that way the article still seems cohesive - it is just one example being described, rather than jumping from unrelated technique to unrelated technique - but still illustrates various aspects of the language.
While you can deserialize into a dynamic object, I recommend you build classes to represent the objects you want to deserialize. The standard convention is to make a class with an empty default constructor which exposes public properties matching the properties of the json string. Typically in javascript properties are camelCase, so that is what you should expect. I tested this with your json using my preferred library, Jil (https://www.nuget.org/packages/Jil/), but JSON.net will have an equivalent. I don't feel bad showing you how to do this as an example, as this is a common task, and hopefully you will understand what to do in the future. var response = JSON.Deserialize&lt;WikipediaResponse&gt;(json); foreach(var geo in response.query.geosearch){ Console.WriteLine("lat: {0}, long: {1}", geo.lat, geo.lon); } class WikipediaResponse { public string batchcomplete { get; set; } public WikipediaQuery query { get; set; } } class WikipediaQuery { public GeoData[] geosearch { get; set; } } class GeoData { public int pageid { get; set; } public int ns { get; set; } public string title { get; set; } public double lat { get; set; } public double lon { get; set; } public double dist { get; set; } public string primary { get; set; } }
Re: classes. Thanks, I got that. (I'm not THAT ignorant. tehe) I don't know about JIL, so thanks I'll take a peek into that. have a great day
That DI stuff will mess with your brain for awhile and you won't really get why you're doing it until you work on code done by a dork that just won't do it. You can't test it and you can't change it without breaking whole piles of crap.
The namespacing between your interfacing and implementation classes doesn't sit well with me. Example, IFileSystemHandler is located in the StyleCop.Baboon.Analyzer namespace, while the single implementation of it exists in the StyleCop.Baboon.Infrastructure namespace. I would think from a logical perspective that the IFileSystemHandler would exist in the infrastructure namespace as well.
That is usually an 'AggregateException' - there should be a collection of Exceptions contained within it. Truth be told though, it's not difficult to use System.Net.WebRequests and JSON.NET to roll your own - I ended up doing that at work for our own library, as I was getting annoyed with the number of dependancies it was pulling in. Admittedley, I was using the HttpClient (I think it's 4.5 only) but the principal is the same. 
Sounds interesting, except the hard language why there are so many downvotes? 
I have Visual Studio 2013 now but it came with this thing called Blend? Doesn't look the same as in the book either. Still on the first chapter.
You have no idea what you are talking about. Many of these classes are sealed for other reasons. When something is inheritable, someone will surely poke with it and it adds ton of new challenges such as reliability, preventing "abuse", security... Instead of shipping out "incomplete" inheritable classes, Microsoft sealed them. In the future, I am sure many of these won't be sealed. Now read the exact reasons here: http://blogs.msdn.com/b/ericlippert/archive/2004/01/22/61803.aspx
Short answer: if your product is not a library that you're providing to your customers OCP shouldn't apply. Refactor at will. Long answer: adding functionality to your library should be allowed without breaking existing code. In C#, and other statically typed languages, it boils down to: rely on base classes with virtual methods to define what you expose and what you depend on (your contracts). This lets the clients extend functionality by creating classes that inherit the contract without messing up the original code and other classes that depend on the contract only. Warning: this gets a bit hairy when mixing it up with the L and I parts because, in my opinion, they are not independent, and if you start taking them too seriously nothing gets done without endless discussions and without getting a big pile of complex code that doesn't improve the product. Keep it simple!!!!
I'll have to take a look then. Thanks :)
Thanks for your feedback! I thought something like: Analyzer is a higher level package so it defines that a `IFileSystemHandler` is needed and the lower level packages (Infrastructure which may not be a great name, btw) provides implementation of this interface. Makes any sense?
I was talking about how Microsoft regularly violates the Closed principle and adds new methods to previously shipped classes, even ones that are not sealed. But yes, Microsoft often violates the Open principle as well and seals their classes. In short, .NET is not SOLID and that's a good thing.
Do you have a link to the book you mention? Not seeing an immediately apparent match upon searching.
You're running the wrong application, "Blend for Visual Studio 2013" is used to build XAML UIs for WPF and UWP applications. Check your Start menu and look for one application named only "Visual Studio Express 2013".
That was my first thought, I don't have a application called that at all. I guess I need to redownload?
This may or not may be your issue, but in the switch case of OpenTextFile(), only .txt files actually close the filestream, in the case of .rtf files, there is no filestream.close(). switch (fileExtension.ToLower()) { case ".txt": using (StreamReader streamFileReader = new StreamReader(fileStream)) { richNotepad.Text = streamFileReader.ReadToEnd(); } fileStream.Close(); break; case ".rtf": try { richNotepad.LoadFile(filePath, RichTextBoxStreamType.RichText); IsFileOpened = true; IsFileSaved = true; break; } catch (ArgumentException) { using (StreamReader streamFileReader = new StreamReader(fileStream)) { richNotepad.Text = streamFileReader.ReadToEnd(); } richNotepad.Focus(); break; } } IsFileOpened = true; IsFileSaved = true; } } 
Hi, im currently on that exact course,C# Essential Training with David Gassner,(http://www.lynda.com/C-tutorials/C-Essential-Training/188207-2.html) im not sure how you landed there friend, the tutorials are short and to the point, and ive been going through it quite well, i have to insist that you perhaps look carefully through again, he sometimes confuses me too but ive gone from complete noob to not so complete noob, im currently on complex classes and i started with the basic install and history of .net.
I would think back to your entry level courses and go from there. Some possible ideas; * The "How old are you? Have some beer/soda/milk" scenario * Tree Traversal * List Sorting * Palindrome Test * Towers of Hanoi * Fizzbuzz * Factorials Implement these using through "obvious" means and then implement them using the nicer features of C#/.NET framework (for example, use the Microsoft.Win32.Registry class to demonstrate tree traversal, or use LINQ with some of your examples that use collections).
Would creating PDFs with iTextSharp work? I've had success in the past using it to generate [invoices](http://imgur.com/et2wfLw) and various other forms for clients.
Why would you need it? Just .Sort a regular list. Ok, I admit it can sometimes be useful but in my experience that's quite rare.
It is short and concise in a good way until that point. Easy to understand because they are mostly easy concepts. Let me know how it goes for you when you are going to do the challenge after doing the "Visual programming and Event handling" part.
Could you recommend me a good starting book? I have gone through the complete basics, but I need alot of in depth explanation of different methods and such to really get the grasp on how everything works. I guess I am a dummy when it comes to computer languages, but I am really determined to learn the language. I have tried some challenges one codestacks and codewars and such, but I have no clue on how to solve the beginner challenges, which kinda demotivates me a bit.
Exactly this. I ran into the same thing last year I just had to find it in my program files.
I've used iTextSharp before for merging pdf's I found it a bit complicated to use. Is their pdf creation easier?. Also, I've tested tables for myself and found out that in firefox it will not split rows. This is done by default. So I think I'm going html route here but I would like to see iTextSharp samples if you have them.
Programming is really hard at first, there is a pretty big barrier to entry Over time you learn enough theory and experience enough challenges that you can easily relate new material to things you have already encountered. To be honest I have no idea about beginner books, is there a book store near you where you could browse through a few books and see which books you prefer? The one thing I can recommend against is buying a bigass reference book that you will barely touch, which is a mistake I made.
That's there because I do the UI first and then take a day or 2 before I code. So I put the comments there for myself. Some I remove some I don't.
Thank you for the answer. The way I have understood the programming learning process thus far is that you just have to grasp how the framework works at first and understand the entire syntax and learn most of the language itself. After that it becomes "easy" to look up what you need to solve problems that may occur and going deeper in utilizing the library or even just utilizing the for iteration to it's fullest and understand everything you can about that. The thing is that I really like to make small programs by myself and only use references to simple stuff that I don't know how to do, but when stuff becomes more complex, I really hate just copying others code(even if only 1 line) if I don't understand how it works, or not being able to look up the stuff I need to do at all(well finding a solution). I have the determination, but I have no idea whatsoever what I can do atm, or where to start and what to learn. Just making small codesnippets all day to learn some small stuff isn't that fun, and it's hard for me to include the stuff I learn in small projects to move forward if you understand what I mean. Thank you for the help!
I don't think you can with the standard or custom numeric formatting strings. You might be stuck with having to format it yourself by manually parsing out the decimal portions then inserting a comma every 3 digits. public static string FormatNumberWithDecimalGrouping(decimal number) { //the absurd number of "#" symbols is to account for all decimal points as per: //http://stackoverflow.com/questions/7795161/c-sharp-how-to-string-format-decimal-with-unlimited-decimal-places var fullString = number.ToString("#,#.#############################", CultureInfo.InvariantCulture); int decimalIndex = fullString.IndexOf("."); bool containsDecimal = decimalIndex != -1; string integerPart; if (containsDecimal) integerPart = fullString.Substring(0, decimalIndex); else integerPart = fullString; string decimalPart; if (containsDecimal) { decimalPart = fullString.Substring(decimalIndex + 1); //this regex inserts commas every 3 digits, a variation on the answer here: //http://stackoverflow.com/a/9932155/1269654 decimalPart = "." + Regex.Replace(decimalPart, ".{3}(?!$)", "$0,"); } else { decimalPart = ""; } var formattedNumber = integerPart + decimalPart; return formattedNumber; } With usage: decimal quotient = 123456.654321m; string output = FormatNumberWithDecimalGrouping(quotient); Console.WriteLine(output); //outputs "123,456.654,321"
Sounds like you want to mine bitcoins or something using a distributed system.
Assuming you're suggesting to treat both sides as integers, insert commas as thousands separators, then put them back together, the big issue from this is from what side of the number the commas are inserted at. Consider the number "1234.5678". Formatting both sections as integers would produce: "1,234.5,678". While /u/erlegreer didn't specify (and his example is ambiguous), I would assume that the correct formatting is "1,234.567,8".
How do you know how to sort &lt;T&gt;? Doesn't seem like you can write a generic sortedlist without having to implement IComparable&lt;T&gt;. I my experience you only need a list sorted when you need it sorted not when adding to the list. I'm sure some case exists but I haven't run into it. OrderBy seems to do the trick. Does the cost of keeping it sorted really outweigh calling OrderBy only when you need it? It makes sense they didn't create it.
I am new but couldn't you myString.Replace(".", ""); and then myString.Format({0:N} myString); I am a super duper beginner so I am almost definitely wrong. 
You write the code to pass the test, not write the test to pass the code. He was totally correct. There's nothing wrong with /u/AngularBeginner 's test as it was written. I think it's *your* logic that is messed up. That or you don't quite get what unit tests are for. The substring is "won" and the test is supposed to test that the specified *word* was removed. Since the word "won" doesn't exist in the test, the result should be no change in the string which is what he is asserting. The test fails because the intended result actually is wrong. If the test was RemoveSubstring, then it would imply that the string should have been modified.
Here is some code for specifically formatting a decimal in that manner as an extension method: static string ToFormattedString(this decimal num) { var intPart = (long)decimal.Truncate(num); var frac = num - decimal.Truncate(num); var decPart = frac; var ib = new StringBuilder(); var db = new StringBuilder(); while (intPart &gt; 0) { ib.Append((char)(intPart % 10 + '0')); intPart /= 10; } int sep = 0; for (int i = 1; i &lt; ib.Length; ++i) { if (++sep == 3) { ib.Insert(i, ','); sep = 0; ++i; } } for (int i = 0; i &lt; ib.Length / 2; i++) { var tmp = ib[i]; int end = ib.Length - i - 1; ib[i] = ib[end]; ib[end] = tmp; } do { decPart *= 10; db.Append((char)(decimal.Truncate(decPart) % 10 + '0')); }while ((decPart - decimal.Truncate(decPart)) &gt; 0); sep = 0; for (int i = 1; i &lt; db.Length; ++i) { if (++sep == 3) { db.Insert(i, ','); sep = 0; ++i; } } return ib.ToString() + "." + db.ToString(); } edit: alternatively using `decimal`'s ToString(): static string ToFormattedString(this decimal num) { var str = num.ToString(System.Globalization.CultureInfo.InvariantCulture); var sb = new StringBuilder(str); var pos = str.IndexOf('.'); if(pos == -1) pos = str.Length; int sep = 0; for (int i = pos - 1; i &gt; 0; --i) { if (++sep == 3) { sb.Insert(i, ','); ++pos; // Add newly inserted ',' to the position of '.' sep = 0; } } sep = 0; for (int i = pos + 2; i &lt; sb.Length; ++i) { if (++sep == 3) { sb.Insert(i, ','); ++i; // Skip newly inserted ',' sep = 0; } } return sb.ToString(); } 
You can accept and anonymous function or an IComparer&lt;T&gt;.
Thank you so much for the guidance, i hope that one day i may be able to return the favor !!! :)
I did not redefine anything. What I wrote is ORIGINAL definition. Its people who don't understand SOLID that say "no changes allowed EVER". Read http://www.objectmentor.com/resources/articles/ocp.pdf (article release 1996), which is first definition and description of OCP. Also, the book I recommended is written by same author as the above article. I highly recommend reading it, because it will make you stop showing how misinformed you are.
The issue isn't with saving, but with loading. You're opening the file at Stream fileStream = openFileDialog.OpenFile(); but you're only calling `fileStream.Close()` it it's a .txt file, not if it's a .rtf file. Add `fileStream.Close()` to `case "rtf"`, or better yet wrap `fileStream` in a `using` directive as well. Also, you're providing `filePath` and not `fileStream` to `richNotepad.LoadFile()`, which will cause it to open the file independently a second time instead of reading from your already opened stream.
 C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\devenv.exe launches my VS2015.
The test will never go green because that code doesn't solve the problem of removing a whole word from a string. It removes a substring of a string from a string. The point of writing the test that always fails is to demonstrate that the suggested solution does not actually meet the specification of removing a whole word. Basically, the test written was a metaphor, not a legitimate unit test. It was a metaphor for the solution suggested not meeting the specification of the problem. It could never pass because there was a situation where the suggested solution would not pass. As a metaphor it is perfectly correct. You can read more about metaphors with regard to communication between developers to in chapter 2 of Code Complete, which I suggest to all current and future developers as required reading.
I guess what I'm saying is that yes, the syntax is wrong but correct implementation wasn't that message that being conveyed. It's basically pseudo-code.
Hm. Well, putting it in the program class seems to make the setup work, but usage is still red...
Method goes into class, usage goes into method. You need an async method for this to work (read about async/await in your book).
Thank you very much .
use modulo for determain if a number is even or odd. if(input % 2 == 0){ console.log("EVEN") } 
 Console.WriteLine
@dsa411 Kudos for pointing out the use cases! :) If you want to learn more about the ways you can take advantage of method interception, particularly with CodeCop, please go to our site at http://getcodecop.com and use the bottom right widget to subscribe to our 5-Day Free Email Course on Method Interception.
Yeah. The BCL isn't big on advanced data structures, really.
You also need to learn how to formulate questions, I think. It really takes a lot of guessing to figure out what your actual problem is, such as what's the context? Do you need to parse a line of text? Do you get invoked as a program? Do you need to scan the system for something? People helping you are essentially picking one of the above, since it's entirely unclear from your post.
VS is an IDE and a compiler, it doesn't run anything. VS itself only runs on Windows. You mean the .NET Framework or .NET Core, the latter of which can execute .NET programs on Linux. Mono can as well, and is more mature at this point in time. Mono also contains a compiler than runs on Linux.
I have looked at the wiki, but I don't have a use case that applies at the moment. My days are spent in Delphi, TSql and smaller utilities that are mostly in C#. When I have time to poke around I will give it a try.
I've tried it that way but it gives me: Error CS0029 Cannot implicitly convert type 'GetURL.conditions' to 'string' Assembly-CSharp-vs C:\Users\me\Desktop\P\Projects\MKP\Assets\Scripts\Weather\GetURL.cs from weatherCondition = (conditions)Enum.Parse(typeof(conditions), "something, something"); 
Your problem lies elsewhere, the error says you're doing an invalid implicit conversion. Check the type of 'weatherCondition'.
Sorry im not sure I get what you mean &gt;.&lt;
This article on [Solid Architecture] (http://www.codeproject.com/Articles/703634/SOLID-Architecture-principles-using-simple-Csharp#Understanding“I”-ISP(InterfaceSegregationprinciple) looks good. **My Opinion**: I assume in your example that DontTouchMe() solves a problem, and IDontTouchMe defines how the problem will be solved. With OCP the idea is *not* to modify IDontTouchMe to solve a different problem. As mentioned by @ilawon it's really easy to violate (I)nterface Segregation and (L)iskov substitution this way. It's possible that as a team you were wrong and IDontTouchMe really should be expanded...but only because the scope of the problem it solves has expanded. Not because you want it to solve *two* problems. The beauty of SOLID and polymorphism is that if you code in this way then eventually you will have a bunch of clean, clear Interfaces and abstract classes that can be put together in a variety of ways to expose a variety of needs all while guaranteeing that they can be swapped and passed among each other (within reason) and that new solutions can be composed with a lot of reliable code reuse. I hope to catch more of your questions. You're at a really exciting point in the learning curve.
Really sorry can you please try to explain another way?...Im a dumb dumb.
AHH! GOT IT! conditions weather = (conditions)Enum.Parse(typeof(conditions), weatherCondition);
You can't put a cube in a circular hole.
lol + 1 for funny, but it was more aimed towards syntax but i got it now :)
I got it btw i understand now its : conditions weather = (conditions)Enum.Parse(typeof(conditions), weatherCondition);
working how i want it to , thanks!
Thanks that worked! I was going to try something like that the other day, but I was getting an error but I got it figured out now.
I want to join actual SQL views. The table structure of this DB is huge but the software behind it has a reporting tool which generates the views I am trying to pull data from. For my purpose, there are no tables involved.
Thanks!
For the GPU bit, look into CUDAfy.NET
Oh, ok thanks. I'll read... Hang on how'd you know I'm a student?
There's probably a better way to do this by you could create an attribute for your enum that contains the value returned from the Web api and compare that instead of the enum itself 
I don't know if you are a student. But everyone who wants to learn programming language should get a book.
What I'm trying to accomplish is a quick response tool. We've had a lot of our clients get hit recently and it can take 1 or 2 of our technicians down for a couple hours while they lock down shares and restore from shadow copy. I'm trying to give us a tool that will do all of that for us, the way that we mitigate the problem. Not all of our clients elect to backup the way they should, so VSS is our only hope for some. The tool enumerates affected files and restores to a VSS snapshot of our choosing.
Have you used your search bar to look for Visual Studio, or are you just manually looking through the start menu? Try searching before re-downloading.
I think the best way is to read the data that is used to create the chart in Excel, and return it as a JSON object. Then recreate the chart in the browser using something like [Google chart tools](https://developers.google.com/chart/). A less desirable hacky way might be saving the chart as a raster image, then displaying in the browser. Check out [EPPlus](http://epplus.codeplex.com/) for working with Excel files in .NET. 
Yeah the local workstations are usually a loss because it deletes VSS, but the server's VSS snapshots are usually in tact, and that's the data we care about haha
You can add a System.ComponetModel.DescriptionAttribute to the enum values [Description("Something is Complete")] Completed = 1, The description should then be accessible in code and can be used for comparison.
You can use views in Entity Framework and it's pretty simple. Just create a model class and DbSet matching the view's name (or name it whatever you want and add use the [Table("YourViewName")] to specify the view to map the class to (there's a Code First from existing database wizard to help with that). Once you have your models set up, you can use regular LINQ that will result in SQL join queries. For example: var accountsDbtAndAbt = db.VwAccountsDbt.Join( db.VwAccounts, // right side of join accDbt =&gt; accDbt.AccountId, accAbt =&gt; accAbt.AccountId, // specify which fields to join on (accDbt, accAbt) =&gt; new { // project the product of the left and right sides to the desired result accDbt.AccountId, accDbt.AccountName, accDbt.Dbt, accAbt.Bucket30, accAbt.Bucket60, accAbt.Bucket90 } );
Please provide what you've tried
How?
...and you are either on crack or you are a M$ fanboi in need of some serious therapy if you honestly beleive that Java is more likely to die than C#. Java is EVERYWHERE....the JVM and it's clones are light years ahead of the CLR w/r to general architecture and the quantity/quality of research and language eco-system. C#/.NET is more or less a niche platform at this stage and you can blame Microsoft's previously BS commitment to a truely open C# and .NET back in the early 2000s.....
...yeah...Java is a sinking ship....that explains why it more or less it is THE platform/programming language that runs any back-end/enterprise that is serious about scalability and reliability....that's the reason why Twitter and Linked-In dumped their respective "hot, modern, easier to program in,blah blah blah" platforms for Java when they found out what most seasoned Java developers whom write software that people actually use and expect to work know....that's the reason why Google is more or less a Java/C++/Go shop...that's the reason why Android user-land is written in Java....that's the reason why the entire Hadoop eco-system that is blazing hot write now is written in Java...that's the reason why the JVM is the #1 vm that has been cloned...used for research...and the breeding ground for new languages.....oh...wait....
http://www.asp.net/get-started/websites my suggestion would just be to dive into the deep end and start looking at asp.net mvc. it'll take you a bit longer to figure things out, but i don't think i've worked on an asp.net site that wasn't mvc in the past 5 years or so.
C# is server side. You still use HTML, CSS and JavaScript regardless of what stack you are in if you are making web sites. You can get started really fast by deploying something local like [Orchard CMS](http://docs.orchardproject.net/) using [Microsoft's Webmatrix](http://www.microsoft.com/web/webmatrix/) But if you really want to get into the details, make an [ASP.NET MVC site with this turorial](http://www.asp.net/mvc/overview/getting-started/introduction/getting-started).
On mobile but general syntax is.. from c in db. Customers join o in db.Orders on c.CustomerId equals o. CustomerId select new { o.OrderDesc, c. CustomerDesc } 
Hi, Gathering from what your goals are as stated (simple website, one page) i definitely recommend you take a look at HTML &amp; CSS before doing anything with C#. Eventually, you might need a server back-end architecture for more advanced tasks such as routing, database access, or a service layer, and this is where any C# skills you have will come in handy. It's not necessary, however, as these things can be done in many other ways. If you're more interested in actual programming than just markup and layout, dive into JavaScript, then JQuery and other frameworks such as AngularJS or Aurelia. If you just want to practice your C# skills, i would recommend working on a different starter project than a website. Good luck!
You need to write a regular expression the looks for a CRLF between a &lt; and &gt;. Something like this: &lt;([^&gt;\r\n]+)(?&lt;BadCRLF&gt;[\r\n]+)(.*?)&gt; [See it in action here.](https://regex101.com/r/aA8nV8/4) Then just replace the "BadCRLF" named group with empty string, and you're all set.
Project mono.
Yes that's it. 
Here you go. Who likes homework anyway. using System; using System.Text; using System.Linq; static class Extensions { public static bool IsOdd(this int number) { return number % 2 != 0; } public static bool IsPrime(this int number) { if ((number % 2) == 0) { return number == 2; } int sqrt = (int)Math.Sqrt(number); for (int t = 3; t &lt;= sqrt; t = t + 2) { if (number % t == 0) { return false; } } return number != 1; } } public class Program { public static void Main() { Console.WriteLine("Enter a number, I'll tell you if it's even, odd or prime."); int number = ReadNumber(); Console.WriteLine( "The {0} number {1} is {2}prime.", number.IsOdd() ? "odd":"even", number, number.IsPrime() ? "" : "not " ); Console.ReadLine(); } static int ReadNumber() { var buf = new StringBuilder(); for (; ; ) { var key = Console.ReadKey(true); if (key.Key == ConsoleKey.Enter &amp;&amp; buf.Length &gt; 0) { Console.WriteLine(); return Convert.ToInt32(buf.ToString()); } else if (key.Key == ConsoleKey.Backspace &amp;&amp; buf.Length &gt; 0) { buf.Remove(buf.Length - 1, 1); Console.Write("\b \b"); } else if ("-".Contains(key.KeyChar) &amp;&amp; buf.ToString().IndexOf("-") == -1 &amp;&amp; buf.ToString() == "") { buf.Append(key.KeyChar); Console.Write(key.KeyChar); } else if ("0123456789".Contains(key.KeyChar)) { buf.Append(key.KeyChar); Console.Write(key.KeyChar); } else { Console.Beep(); } } } } 
You can build yourself another database ( not the account software DB ) and use a cross-DB join to make your composite View. They shouldn't have any issues giving you your own DB. Failing that, just do what I said up above, bind to them just like you would Tables, and EF will handle passing the join to the SQL query engine. 
&gt; &lt;([\^&gt;\\r\\n]+)(?&lt;BadCRLF&gt;[\\r\\n]+)(.*?)&gt; But you should mention that this Regex will also remove all perfectly valid newlines within cdata-tags: &lt;root&gt; &lt;element&gt;Hello World!&lt;/element&gt; &lt;element&gt;&lt;![CDATA[Hello. This is a perfect valid case. These newlines are intentionally.]]&gt;&lt;/element&gt; &lt;element&gt;&lt;/ele ment&gt; &lt;/root&gt; Resulting XML: &lt;root&gt; &lt;element&gt;Hello World!&lt;/element&gt; &lt;element&gt;&lt;![CDATA[Hello.This is a perfect valid case.These newlines are intentionally.]]&gt;&lt;/element&gt; &lt;element&gt;&lt;/element&gt; &lt;/root&gt; 
Oh, I second that. As a government worker I LIVE in this crap.
For a simple website you can use WebMatrix from Microsoft. http://www.microsoft.com/web/webmatrix/
From what I've read docker containers are currently exclusively linux based so only asp.net 5 can run in a docker container until they release a windows based container next year, can anyone confirm?
That would need HTML
ah, ok
tongue-in-cheek more than anything.
Further still, take a look into Angular JS and some of the other JS frameworks. It's amazing what you can do with a Web browser, some Javascript and a REST JSON api
If you wanted to really get crazy, you could use WPF and bindings to disable/enable the portions of controls that require others to be done first. Also I can keep clicking on a topping and it will add forever. Also when I add a pizza and get a report, the total is ~~empty.~~ further down, but I can't scroll because the scrollbar is disabled.
You need to move the printLayout method into it's own class. Right now your Pizza class is doing too much, and this method specifically is a totally separate concern. You can also better encapsulate the price switches. Maybe move it out into a separate class, resembling an abstract factory, that will only handle calculating the prices. That way, when you need to change how prices are calculated, you don't touch the Pizza class at all. Also public anything should be Pascal case, don't let those java dorks tell you otherwise.
Only a little bit, I'm planning on playing around with it some more. Have you used it?
I'm just going to touch on a few things that are popping out. **Pizza Classes** You have too many different types of pizza classes, if the only difference between the different types of pizzas is the name, the list of toppings, and some notes, then they shouldn't be different classes. So instead of adding a Meat lovers pizza like this to the list of pizzas options.Add(new MeatLovers()); You just add it like this: options.Add(new Pizza { Name = "Meat Lovers", Toppings = new List&lt;string&gt; { "Sausage", "Pepperoni", "Bacon", "Ham", "Beef" } }); Now this may look like it's more stuff in the Main.cs, but the advantage of this is now your Pizza's are data driven instead of being classes, so you could potentially read the pizza type and toppings in from a file, which would allow you to add new pizzas without recompiling the application. Also I'm using the proper [.Net naming convention](https://msdn.microsoft.com/en-us/library/ms229043\(v=vs.110\).aspx) (Pascal Case) for properties. Also you may want to look at having sauce as a basic topping instead of a note, it allows customers to modify the basic pizzas by just removing it as a topping instead of adding a note. ** String Concatenation ** It's a good habit to not use += to add to strings, in this case it's not a huge deal but when it gets to large number of strings it gets slow and uses memory. [Here is a good Microsoft Knowledge Base Article on it](https://support.microsoft.com/en-us/kb/306822) So instead of doing this: public string printLayout() { string notes = ""; string nl = Environment.NewLine; //use the toString override to start the line with the //size and name notes += this.ToString(); //check that there are toppings if (this.toppings.Count &gt; 0) { //if there are add the Toppings heading and toppings with 8 spaces before notes += nl; notes += " Toppings:"; foreach (string top in toppings) { notes += nl; notes += " " + top; } } //check if there are notes, if yes then add them to the layout if (this.notes != null) { notes += nl; notes += " Notes: "; notes += nl; notes += " " + this.notes; } //add the price on a new line notes += nl; notes += "Price: "; notes += String.Format("{0:C}", price); return notes; } You should do something like this: public string printLayout() { string notes = ""; string nl = Environment.NewLine; //use the toString override to start the line with the //size and name notes += this.ToString(); //check that there are toppings if (this.toppings.Count &gt; 0) { //if there are add the Toppings heading and toppings with 8 spaces before notes += nl; notes += " Toppings:"; foreach (string top in toppings) { notes += nl; notes += " " + top; } } //check if there are notes, if yes then add them to the layout if (this.notes != null) { notes += nl; notes += " Notes: "; notes += nl; notes += " " + this.notes; } //add the price on a new line notes += nl; notes += "Price: "; notes += String.Format("{0:C}", price); return notes; } **Adding a list of items to a ComboBox.Items Property ** Now this might be a bit more advanced then you are right now but instead of updating the toppings the way you are it's better to do it in less lines of code (less chance of introducing bugs) private void updateTops() { lstCurrentTops.Items.Clear(); if (toBeAdded != null) { foreach (string top in toBeAdded.toppings) { lstCurrentTops.Items.Add(top); } } } So I'd do something like: private void updateTops() { lstCurrentTops.Items.Clear(); if(!toBeAdded.Any()) { //exit early so we know we don't care if there are no toppings to be added. return; } //ObjectCollection.AddRange takes an array so conver the toppigns to an array. lstCurrentTops.Items.AddRange(toBeAdded.Toppings.ToArray()); } You'd do the same for other places where you add items from one list to another. So the code in the _Load method in pizza.cs would go from this: foreach (Pizza pizza in options) { cboType.Items.Add(pizza.name); } to this: cboType.Items.AddRange(options.Select(pizza =&gt; pizza.Name).ToArray()) Now this uses Linq to convert the list of Pizzas in options to an array of the names of the pizzas which is then added to the cboType combobox. So it might be beyond where you are now but it's nice to know. Also using linq would simplify (but make more advanced) a lot of your code. So the updateSubtotal() code would go from private void updateSubtotal() { decimal subTotal = 0; foreach (Pizza za in pizzas) { subTotal += za.price; } lblSubTotal.Text = string.Format("{0:C}", subTotal); } to: private void updateSubtotal() { decimal subTotal = pizzas.Sum(za =&gt; za.Price); //You can format a number type using the [.ToString](https://msdn.microsoft.com/en-us/library/fzeeb5cd\(v=vs.110\).aspx) of that type instead of String.Format lblSubTotal.Text = decimal.ToString("C"); /*The above code could even be shortened to one line like lblSubTotal.Text = pizzas.Sum(za =&gt; za.Price).ToString("C"); but you might find that harder to understand */ } Now that's enough for me as I have to go dto bed I could probably give you a bunch more but it's mostly advanced topics that you might not have gotten to. The main critique would be on using the .Net Naming Conventions (But at least you are consistent in your naming) and turning the pizzas into data driven pizza objects instead of sub classing. 
/r/reviewmycode/
Enums should be capitalized.
use 'var' all the time 
Learn: 1) How to connect MySql database in C# Windows Forms application? 2) How to populate ListBox control using database programming in C#? 3) How to save data or write data in TextFile using StreamWriter class object in C#? 4) How to use Exception Handling concept in C#? Topics: Populate ListBox in C#, TextFile writing in C#, Use of StreamWriter in C#, MySql Connection in C# Application, Database Programming in C#, Exception Handling in C#
Using var **always** is the fastest route to unreadable code.
F5... F10, F10, F10, F10, F10, F11, F11, F10, F10, F11, F10, F10, F11, F10 *Oh! So that's what the problem is.* Shift+F5 *Fix* **Repeat**
Keep the recursion going, I'm learning!
You've got a lot of duplicated toppings code by representing them as strings. There would be nothing stopping you mis-spelling one somewhere, which could cause undefined behaviour somewhere important. And currently, the pricing you have is very simple. Create your own is one price, a named pizza is another. Does that mean I could get two different prices by choosing Greek, and adding the individual toppings from Greek separately? That doesn't seem very realistic. There should be a topping struct, with a name and a price. And a list of available toppings. That way, you wouldn't have to manually create a CheckBox for every one, you could bind a ListBox to the list, or dynamically create them from code. You also might want to consider some sort of MVVM structure, and using data binding.
no sound, instead you write stuff in text editor? man, i stopped right there. i respect the will to teach, but either do it right, or don't do it. If you don't want to talk, write a tutorial and post it. These kinds of videos i watch for 10 seconds top, before i close the tab
Damn stack overflows...
tbf the separate toppings thing is very realistic. You can do the same in most pizza places.
It's a very, very, very good thing to learn. ASP.net is a hot topic and it's only going to get hotter when vNext becomes production ready. It lets you get the best of both worlds - HTML/CSS/Javascript to create some really beautiful user interfaces that work on almost any device and C# to do the heavy lifting in the background.
Select the yellow arrow and drag it to the point you missed.
sorry for the question, but where can i download it?
You don't need to 'use' anything. You can go File &gt; New &gt; File and chose an html file to get started. Visual studio should give you the basic syntax you'll need &lt;!DOCTYPE html&gt; &lt;html lang="en" xmlns="http://www.w3.org/1999/xhtml"&gt; &lt;head&gt; &lt;meta charset="utf-8" /&gt; &lt;title&gt;&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;/html&gt; Then add whatever tags you wish and you're all set
My thoughts as well. There's an option in ReSharper to "use var when the classtype is clear" For example: var result = OrderThePizza(pizza); would be flagged as being wrong, because you wouldn't know what var would be without checking the return of the method, or at the very least mouse over the "var". But, he would allow things like that: var names = new List&lt;String&gt;(); because it's more succint than List&lt;String&gt; names = new List&lt;String&gt;(); and the type of the variable is still very clear by reading the line of code. I think it's a very good way to actually make the code more readable using "var".
I have been using VS for 20 years (VB 2.0) and I never knew this one. Thank you VERY much, this will be very helpful
I don't fully understand interfaces or lambdas (HS senior), but I'll look at it. I was just trying to do it this way so that it's coming from the form that will be active, I can just make it so the main form will create the new one.
Indeed. Esp in this career, it is a never ending learning process.
Can anybody tell me why I got downvoted in my own post? For that matter, why would *anyone* in this post be downvoted? This has been useful and helpful to me, please don't downvote anyone here.
Thanks for the feedback. I am curious how the print layout class would be set up. I have been struggling with creating appropriate classes and have been falling back on the idea that a class should mirror a real life object, with that being the case would this be like a printer? Similarly the price calculator, would that be like a cash register or am I completely on the wrong track? Edit: It looks like /u/socmonkey05 covered this in his pastebin, now I understand what you are saying.
holy cow, thanks for that pastebin! I don't know why I didn't even think about writing static classes, that makes this whole thing make so much more sense. 
this was the direction I was going.
Thanks for that feedback. The idea is that if you wanted a greek pizza with bacon on it, you could do that and be charged the same up cost of the extra topping, while a BYO pizza you could add as many toppings as you wanted and the price should increase as you go. I grabbed the pricing from a local pizza place's menu, so hopefully it makes logical sense to get the greek pizza instead of building your own pizza with the same greek toppings. Can you elaborate on this, I am not quite sure I understand what you are saying? &gt;You've got a lot of duplicated toppings code by representing them as strings. 
Awesome insights so far. Thanks guys.
This is super pretty. I need to get into WPF, I attempted to rework my Win Forms application in WPF recently and epically failed.
You are definitely overthinking some things, but that may be helpful in trying to deconstruct what you are after. Classes, simply, should be a collection of data and methods that are highly related to each other in what they do. In the printer case, there would be a couple of ways to handle it; The Pizza class might take an IPrinter object in its constructor, and you would call into that IPrinter instance when the method is called on Pizza, passing the *this* instance to it. That would be reminiscent of the [Facade Pattern](https://en.wikipedia.org/wiki/Facade_pattern). Or you could have it set up so that a method on an instance of a Printer class takes a pizza in and does what it needs to. This latter would be a cleaner way of doing it, since a Pizza having a dependency on a Printer doesn't make too much sense. For the pricing, a cash register is too high of a level of a thing, and it does too much. What would a Cash Register class contain in it? A real cash register has a calculator in it, possibly multiple inputs (keypad, card reader), multiple outputs (receipt printer, network connection, display), a store of physical currency - all of these are totally separate things that should be totally separate in how each component is represented in code. In our case, we just need the calculator. Make a PizzaPriceCalculator class, throw your logic in it, and split it up some: public class PizzaPriceCalculator { public decimal Price(Pizza pizza) { if (pizza.Name == "Build Your Own") { return PriceBuildYourOwn(pizza); } return PriceSpecialty(pizza); } private decimal PriceBuildYourOwn(Pizza pizza) { ... price logic here ... } private decimal PriceSpecialty(Pizza pizza) { ... price logic here ... } }
Read-only is actually all I need for the app I'm creating.
Sure, it's just a normal method. You can call `seat_Click(null, null);` if you want. Of course you're currently using the `sender` argument, so you'll have to modify the method if you don't want to provide it. Depending on what you're trying to do, you may want to split it into two methods, something like private void seat_Click(object sender, EventArgs e) { Button clickedButton = (Button)sender; string s = clickedButton.Name; int i = Convert.ToInt16(s.Substring(3, 1)); int j = Convert.ToInt16(s.Substring(4, 1)); DoWhatever(i, j); } private void DoWhatever(short i, short j) { if (btnSeat[i, j].Text == clientIP) { btnSeat[i, j].Image = Image.FromFile("../../firstwarning.png"); MessageBox.Show("The program cannot."); } listBox1.Items.Add("i = " + i); listBox1.Items.Add("j = " + j); }
but id still use btnSeat[i, j].Click += new EventHandler(seat_Click); when i call this in another function?
Likely a cloudflare issue. Edit: Also, if you're not already aware of it, the [Transient Fault Handling Block](https://msdn.microsoft.com/en-us/library/dn440719\(v=pandp.60\).aspx) from Pattern &amp; Practices is execllent. this is a great workflow to use this application block on. There's lots of potential errors that don't necessary mean the server is down. You can handle the edge cases as Transient Faults, have it auto-retry, and then eventually fail out completely if the error condition doesn't change. Anytime I need to communicate over a network, I use this application block. 
Well, the particular workflow is being developed for monitoring internal applications, If for any reason I cannot access application A across our LAN, we need to trigger notifications to have everything validated. I just found it extremely weird that reddit does this on the hour ?_?, no issues from microsoft, google, twitter, or any other A name websites. Also- There is a built-in retry, which will retry for a specified amount of times, with a specific delay.
Instead of overloaded constructors I'd use a factory class, basically a static method on the pizza class that will spit out a fully constructed pizza. Properties are usually not setup in constructors in .net.
Type isn't what you want. As others have stated, you can make it a generic method. You can also just make the argument accept the base class, since all Form objects will have the Show() method defined. So your method would be something like: public void ShowWork(Form frm, Object data) And in the section where you are showing it directly rather than using invoke, you'll just call frm.Show(). Whatever the data object is, if that's something specific that all of your forms use, you could create your own base class derived from Form, with a Data property, and that would be the base class your method would accept. That way both Show() and the Data property are accessible no matter what form you pass in. Along with generics, this would be another way to enforce at compile time that the correct form type is always passed into this method. 
Kudos for adding [solved] right at the top of your post!
Yes, exactly.
Not a big fan of EPPlus if your just reading excel. You're better off using https://exceldatareader.codeplex.com/ which supports more Excel versions, and is faster. If you need to write Excel, then nothing beats EPPlus. Also more documentation for Excel Data Reader. Anyhow, here you go: var theFile = new FileInfo(pathToFile); using (var ep = new ExcelPackage(theFile)) { var theWorkbook = ep.Workbook var theSheet = theWorkbook.First(); var data = theSheet.Cells["A1:P34"].Value } More info here: http://www.nudoq.org/#!/Packages/EPPlus/EPPlus/ExcelPackage 
hmm how about this kind of scenario sir, i have already declared a text value in an array button (ex. array[0,0].Text = "192.168.1.1"; array[0,2].Text = "192.168.1.2"; ...so on) and then I have a function which receives Ip address of a client receivesIP() { //new client found client = "192.168.1.1"; } how can i call that array inside receiveIP ? something like receivesIP() { //something client = "192.168.1.1"; if(array[i,j].Text = client) { //dosomething } }
As I said, we have built in retries... Ie, It fails. It will retry 4 times, every 20 seconds. After which, if it is still down, there is some legitimate issue that needs to be looked into.
Thank you so much for all this feedback. The fog is slowly dispersing on my understanding of OO design. 
Yes that is right. How should I do it?
Good questions: The animations are all handled for you. How the dialog content is removed depends on how it is launched, but the Popup itself will be closed for you. If you pass content "up" via the OpenDialogComment the close process will automatically remove it. If you have bound the content via MVVM, then maybe you'd want to dispose a view model or something, that's will be your responsibility, as per normal MVVM. You will actually receive hand off (via the event - which you can abort, or via the async/await if running from code) just before the actual close animation starts to run, so you can then move your flow onto your next task/screen/action. The key is the DialofHost.IsOpen properly is not directly bound to the internal Popup.IsOpen (Popup.IsOpen gets set via VisualStateManager storyboards). This means the dialog can close, and the Popup close animation can still run. I'm hoping I've got most bases covered; popups have always been a ball-ache in WPF...
So once you have clientIP, just iterate your array looking for the (.Text == clientIP), at that point you'll have a btnSeat button. So you can btnSeat.BeginInvoke to change it's color to green. Make sense?
yeah but where shall i do the iteration? should i make a new function for it?
(updated the original post with a - choppy - gif of the anim)
[Let's hope this helps](http://code.tutsplus.com/articles/how-to-authenticate-users-with-twitter-oauth--net-13595)
looks awesome! is your dialoghost's dimmer hittestvisible to force the user to respond to the dialog? And if you click the dimmed area, does it treat it as a dialog close request?
Thank you for the help it has been immensely useful. I have been looking into how to wire up some buttons. I have been looking at this [tutorial](http://www.codeproject.com/Articles/126249/MVVM-Pattern-in-WPF-A-Simple-Tutorial-for-Absolute) and I don't fully understand the Relay command class. The ICommand seems simple enough two methods one to determine if the command can execute and one to execute the command. In the RelayComand class I don't quite understand the 'Action&lt;object&gt; action' Why is this needed? Also what is the correct way to handle a Messagebox or new window in MVVM.?
What is the business problem you're trying to solve? You really should begin with the end in mind and see whether or not: * A DSL is necessary. * If Irony, despite being old, is still okay to use. 
We have determined that a DSL is necessary. And Irony is working fine so far. I just want to poll the community to make sure I'm not missing out on something that is clearly a better library.
will take a look on it tomorrow if no one else write something up before then. 
ok. Thanks for even thinking about it. Have a great weekend
Thanks, that really helps me understand that better. 
This looks great. Any idea if it would work in Win10 IoT Core on the Pi? I'm developing some embedded control stuff and just starting to get down to the UX side of things.
The Linux server can Host your website. You make the html pages and then install apache. Apache will serve those pages to anyone who connects. In simple terms at least. 
This is reddit. People are upvoting your question and are partipating/helping. Sometimes I help too, and sometimes I just ignore it. I don't see a problem when people are helping eachother (especially in programming). My comment should give you an other option in case you are being downvoted. But I think as long as you are not spaming or use this sub as "homework-solver" you are fine. btw: As a rookie, [try to get a hard copy of "clean code".](https://www.google.ch/?gfe_rd=cr&amp;ei=uAQYVu39K8LD8gfEgoTYAw&amp;gws_rd=ssl#safe=off&amp;q=it-ebooks.info+A+Handbook+of+Agile+Software+Craftsmanship)
Interesting. I've got the same exception when hitting different services using HttpWebRequest (Meetup API and Gmail API namely for now) but it doesn't seem to be as regular as yours. From the little reading I have done so far it seems that the protocol handshake fails: I have tried restricting to TLS only (using ServicePointManager) to no avail though. Please let me know if you discover the root cause as I'm very interested!
Yeah. I would make a "FindButtonByIP()" function and put your code in it. Because your using a 2d array, you have to iterate everything to find a match. You may want to consider a better way of storing your data. For example, if you know you're going to be looking up by an IP address and want a button back, then maybe this should be a dictionary of IP, Button. Then you can just use dictionary["IP String"].Value to get your button. 
does this excel data reader hold the formatting of the cells from the Excel file? Precisely, the "percentage" signs from the cells and their conditional formatting? thank you
Thanks on both counts!
For a class last semester we were asked to utilize 2 different APIs to populate information in an app. Now this was written in VB.NET, I can provide you the repo but it might be a little confusing. [Repo](https://github.com/FreeMasen/PatIO) note: those yelp api credentials are not valid. I found that the [Weather Underground](http://www.wunderground.com/weather/api/) was a good place to start. They have a very basic API that will generate xml or json and doesn't require oAuth2. If you want to get started with oAuth2 logins, I found [Simple oAuth](https://www.nuget.org/packages/SimpleOAuth.Net/) to be a good library. It didn't help me understand what was going on but it made making my API calls to yelp super easy. 
No conditional formatting. Excel data reader just pulls out the data, leaves all the metadata. You can infer the '%' based on the storage type.
Have you looked at http://www.antlr.org/ yet?
It may be due to me hitting http://reddit.com, the process which forces me to use https might have an issue.
Ive looked at this but I dont seem to understand it, would you mind trying to explain ?
OK good. I'll dig in a bit deeper
You already got a lot of great feedback in this thread but I wanted to chime with my thoughts on your statement that classes should model real life objects. I think that makes a lot of sense for your domain models but I wouldn't apply that principle to an entire application. Classes can contain absolutely no data and instead be a chunk of related business logic that can do related stuff. 
Irony is a really fantastic library, despite being old. I personally hate it for reasons that probably won't matter to you. I'm the author of a tiny parsing framework called Ancora myself. https://github.com/Blecki/Ancora
An object mirroring a real world object is a good way to start thinking about object oriented design, but not a good way to end thinking about it. :) Your thinking works fine for *domain models*, but not everything in your application strictly falls under these objects. One thing others are describing is the *single responsibility principle*. Give it a read; I think it may help! https://en.wikipedia.org/wiki/Single_responsibility_principle
Nope, I also don't have a callback URL set on my test app. That's only necessary for web apps using JSONP, I think. Using the credentials you checked into the repository, I can see that the `user` variable is null after the call to User.GetLoggedUser(). Also, [I forked your repo](https://github.com/nerdshark/TwitterConsole), moved some stuff around, and added some more error logging. It's definitely working with my Twitter auth data, but it breaks on yours, so my guess is there is something wrong with your test app setup.
You already have access to them from other methods, so I am not sure what your question is. Do you mean you want to access them from a different class?
Thanks for that. This is all really helpful. 
If you need i and j to exist in compareHere() you can pass them in. Within initializeBoard() you would then call compareHere(i,j); And compareHere() would need to be made like this: public void compareHere(int i, int j) { // Now you can see what i and j are. If you happen to change // them here though, they will not change in initializeBoard() // You also don't have to actually call them i and j in here if // you wanted to call them something else, too. } 
Hmmm is there a way I can change it? Like the click event but not using it? I added this in initializeboard() String buttonName = "btn" + i + j; btnSeat[i, j].Name = buttonName; btnSeat[i, j].Text = buttonName; String buttonNames = "str" + i + j; pnlSeat.Controls.Add(btnSeat[i, j]); btnSeat[i,j].Click += new EventHandler(seat_Click); and then made a click event private void seat_Click(object sender, EventArgs e) { Button clickedButton = (Button)sender; string s = clickedButton.Name; int i = Convert.ToInt16(s.Substring(3, 1)); int j = Convert.ToInt16(s.Substring(4, 1)); if (btnSeat[i,j].Text == Dog) { btnSeat[i, j].Text = "Dog"; } } well when i click puppy then it changes into a dog, how can do this withoug the use of "clicking"?
You don't need to change the counters, just the button text, right? So all of this is needlessly complicating things. Here's what I think you're trying to get to, going back to the original post: string Dog = "Puppy"; Button[,] btnSeat = new Button[2, 2]; private void initializeBoard() { for (int i = 0; i &lt; 2; i++) { for (int j = 0; j &lt; 2; j++) { btnSeat[i, j] = new Button(); btnSeat[i, j].Width = 80; btnSeat[i, j].Height = 80; btnSeat[i, j].Left = (90 * i); btnSeat[i, j].Top = (90 * i); pnlSeat.Controls.Add(btnSeat[i, j]); } } btnSeat[0, 0].Text = "Puppy"; btnSeat[0, 1].Text = "Kitten"; btnSeat[1, 0].Text = "Duckling"; btnSeat[1, 1].Text = "Chick"; compareHere(); } public void compareHere() { for (int i = 0; i &lt; 2; i++) { for (int j = 0; j &lt; 2; j++) { if (btnSeat[i,j].Text == Dog) { btnSeat[i, j].Text = "Dog"; } } } } Because you're just trying to detect and change the text of whichever button is found to match the contents of Dog. So compareHere() just uses another nested loop to check each one.
The Intellisense seems to work decently well in 2015, but as stated it has always been a bit of a problem. Remember to use the XAML for it's intended purposes. Most ANYTHING you can do in XAML could theoretically be replicated in C# if you want, and some of it definitely should be. XAML is great for creating simple object instances and setting their properties, but the C# is there for when the "heavy lifting" needs done in the background. I view XAML as almost like a hybrid of HTML and CSS on web pages. The true functionality added by XAML is the live phone interface that allows you to drag and drop common elements. Without the XAML code this functionality would not exist. Use the heck out of drag and drop to place everything you can, and then use the XAML to clean up and fine tune the formatting (and obviously to set up major variables like grids etc.) The Properties Windows is also a great helper to combat the Intellisense issues as it allows the creation of events from preset methods for all of the most commonly used scenarios. I initially hated XAML as well, but at some point it "clicked" as to how they are intended to work together. XAML shortens the formatting of a LOT of lines of code by parsing string literals for you (common when aligning objects), and by compressing multiple methods into a single line of XAML code (such as on margins.)
"Prase" in our language it means "pig" :)
Not sure I understand your query string. Should @username not be replaced with an actual username passed into the string? 
Thanks, but LinqToTwitter requires .net 4.5 and as I mentioned I am stuck with 4.0 That library does seem like the one I would want to use in future apps. Have a great weekend
Please let me know how to send you the money. I am going to create new credentials and see wth is going on. Thank you VERY much for your time, and finding out that my creds are an issue is a big help too.
Use an IDE, like visual studio community edition. You'll create a project. Put each class in its own .cs file in the project. Ask of your methods for that class go into that file.
Thanks man, looks damn interesting.
Okay. Them you have a project set up, right? Just remember, each class had its own file. Ask methods and properties for that class go in that file. Research object oriented programming
Thank you, I will check that you. 
You did say that... and I didn't notice because I saw "LingToTwitter" and I immediately thought "been there, tried that" So my apologies to you. I will give you some gold for the attempt and time. It's the least I can do, please let me know if that is not enough. /u/nerdshark Helped me last night and it turns out that there is an issue with the Twitter credentials.
You can make a program store stuff in a text file, checkout StreamWriter. I am not sure why, since you can just open the file of that class. In your project folder look for file Program.cs If you want to use the object in a different class check Inheritance. 
It's more intuitive, easy to write by hand, and capable of parsing the most complex context sensitive grammars, but very hard to generate and prone to infinite recursion.
I love how the first section of this article tells me to never build a query exactly the same way I was trying to build mine, haha. Thanks a ton for the link man, it's exactly what I was looking for! I really appreciate it!!
Thank you so much dude!
no problem. i think its good to know how to build outside of your ide. i was actually about to edit my answer to add that you could also spread your program class across multiple files, since that might have been what you were looking for. using System; namespace program { partial class Program { static void Main(string[] args) { var person = new Person(){Name="VitaminNigga"}; PrintName(person); } } } using System; namespace program { partial class Program { static void PrintName(Person person){ Console.WriteLine("hey my name is {0}", person.Name); } } }
Build a string inside the loop and display it after: string text = string.Empty; while (reader.Read()) { text += reader["processfilename"] + "\n"; } MessageBox.Show(text);
got it, thanks!
Thank you, let me know if you have any questions.
Please consider using a StringBuilder instead. 
Under around 12 iterations, string concatenation is faster
Please don't do this.
This is a terrible way to do development. Terrible.
As already mentioned, Visual Studio already does this for you. If you really, really want to do it from the command line, at least use a makefile or something. But you're just setting the guy up for some bad habits.
Any reason for using Express over Community?
Hi Steve, I am following this tutorial: https://www.youtube.com/watch?v=bFdP3_TF7Ks and the guy uses express. What is the difference other than the plugins compatibility? Thank you
Each Express editions are geared towards specific use case (Web, Desktop, Windows (Metro), Phone). With Community, you can work with all those use case at the same time in the same solution.
No problem, I totally understand. Thanks for the gold, that is really kind! Glad you have been able to solve your problem, good luck with the rest of it.
Actually, I have been thinking. You took the time and gave me a viable answer (haven't tried it, yet. But I will.) so I'd like to also give you $20. Please let me know how to get it to you. (Paypal, Check, or?) Have a great weekend and thank you again for your time. 
The short answer is no, it wouldn't. Visual Studio is an exceptional IDE (integrated development environment). Especially when working with .Net languages like C# and VB.NET. CSharp projects use the extension .cs, but these are really just text files. The difference is, Visual Studio instinctively knows how to work with them with no extra effort. A lot of the advice given in here is terrible for someone who is obviously very new to this. The fact you're thinking of separating code for readability is brilliant, you're on the right track, but you need to spend some more time with the basics, look at sample projects etc
http://www.ckode.dk/programming/eval-in-c-yes-its-possible/
It's meant to enable the implementation of and interop with loosely/dynamically-typed languages like Python, Ruby, and Javascript, as well as greatly simplifying COM interop. It also allows you to easily do things that are very hard or tedious to do otherwise, like dynamic method dispatch and applying structural changes to single instances of a dynamic type, which enables lots of opportunities for. This is *great* for interactively experimenting with implementations, rapidly prototyping ideas, and changing behavior at runtime. Yes, using dynamic typing means that you'll have to be more careful about runtime errors, but that's what testing is for. Ruby, Python, various Lisps and Schemes, and a lot of other languages use dynamic typing with a lot of success, by the way.
Your suggestion would not make it any more random - a PRNG should be evenly distributed. They generally generate a random value, then just use modulo and addition to put it within your range - your suggestion wouldn't help with an evenly distributed PRNG. For a game, you can generally just use the standard built-in RNG and tell it what your bounds are. If you really want better random numbers (esp if you're doing anything involving crypto), look into generating cryptographically secure random numbers.
Nope, statistically they'll have the same result
Using modulo is a bad idea due to the issue of modulo bias. `System.Random` multiplies the requested range with a double between 0 and 1 instead.
That's really interesting. Thanks for pointing that out.
If you have to ask, don't use it. I've been using C# for 10 years. I've only used dynamic several dozen times. It is an expert level feature. Note, dynamic will rarely, if ever help you with reflection. Dynamic will not ignore access modifiers so you can't use it to easily access private members. Dynamic also doesn't have a sane way to even check for the existence of a property. In most cases Dictionary&lt;string, string&gt; will be better or use of anonymous objects new { foo = bar }. Note that passing anonymous objects outside a method is commonly useless the only reasonable way to read it later is new RouteValueDictionary(anonymousObject). All of these cases are highly specialized and if you don't know exactly why it's the right choice... it's not the right choice.
And how do you check if your property exists? With reflection or using some kind of a dynamic dictionary wrapper? I'm glad you bought this up, because I got a big object with many fields for deserialization and frankly for some time I thought they were pretty useless. They do have an option to declare what kind of fields you are looking for, though - which is good for code readability. But I guess the same could be done with some attributes on the target class or some intermediate class.
Some of the drawbacks you listed can be resolved by inheriting from DynamicObject and overriding your own functionality e.g. properties as in a dictionary.
Use the normal JObject methods.
In my experience, it's only really necessary in very specific and weird corner cases. Personally, the only time dynamic has been really useful for me is when I needed to get around an actual limitation of the language. Turns out there's no way to make generic attributes (surprise!) and I wanted to get **static** type information into the execution of my attribute so I could cast the supplied Object (which was actually a generic type) properly. Instead, I asserted it was an instance of the generic type, then assigned the Object to a dynamic and used it like the generic type I knew it was.
Oh no, I have no code so far. I need help with C# Windows Forms syntax. I've only worked on Console Applications so far.
Just to nitpick, randomness does not imply an even distribution. Random means unable to be predicted.
The easiest thing to do is to declare a new Random, and call it every time you need to grab a new number: //somewhere in program setup var rand = new Random(); //when you need a new number from 1 to 4 (the second value is exclusive so it must be 1 greater than your required range var nextInt = rand.Next(1, 5);
You would need to store each customers choice somewhere and reset the choices on customer change.
I figured but, how do I link the two datasets? I know what to do, I don't know how to do it :/
So, the first thing I would do, is open a new WinForms project and place the controls on the form via drag and drop from the toolbox. The next step would be to load the data you want to show in the code. Then you can think about, displaying those.
You are using statically typed language for a reason. If you don't have that reason, why even use statically typed language? IMO dynamic is practically useless except some extreme edge cases like dynamic language interop. I disagree with using dynamic fo JSON parsing. I prefer creating strongy-typed DTO class that is then serialized/deserialized.
This is exactly how Random should NOT be used. Even distribution is guaranteed only for numbers from one Random instance sequence.
The story is a whole lot more complicated than that. To be more precise, good RNGs have a property that any predicted next value can not be more accurate than "random chance." Pseudo-random number generators (PRNGs) attempt to approximate that. Think about the obvious implication of this: if the RNG/PRNG does not have an even distribution, then one could predict the next value more accurately than just random chance by picking the numbers that are more likely than others. Thus, randomness *does* imply an even distribution (though, the reverse is not true... an evenly distributed set of numbers isn't necessarily random).
1. WPF will create an instance of your `MainWindow`, so it will run the constructor. 2. In the constructor you have a slight chance to create a new `MainWindow`. If x is unequal 0, a new instance is created and the constructor is called. 3. In the constructor you have a slight chance to create a new `MainWindow`. If x is unequal 0, a new instance is created and the constructor is called. 4. In the constructor you have a slight chance to create a new `MainWindow`. If x is unequal 0, a new instance is created and the constructor is called. 5. In the constructor you have a slight chance to create a new `MainWindow`. If x is unequal 0, a new instance is created and the constructor is called. 6. In the constructor you have a slight chance to create a new `MainWindow`. If x is unequal 0, a new instance is created and the constructor is called. 7. In the constructor you have a slight chance to create a new `MainWindow`. If x is unequal 0, a new instance is created and the constructor is called. 8. In the constructor you have a slight chance to create a new `MainWindow`. If x is equal 0, nothing happens further. Steps 2-7 may vary. Also, `Random` is using a seed to create pseudo-random numbers. If the seed of two `Random` instances is the same, they will both create the same *random* numbers. By default it will use the current time as a seed. And code executes **fast**. This means it is likely that your multiple `Random` instances share the same seed, and thus always return the same next random number. So if your condition is true one time, it is likely that it will be true a couple of more times.
That makes sense, thank you
Make Random static
You'll want to use the LINQ Where method instead of Find. The foreach error you're getting is because the Find method only returns one result, not a collection. That will be resolved when you move to the Where method which returns a collection.
Yes, I've been playing with it on and off for the past few months. A single container app that hosts a Cassandra database and .NET REST API ported from WebAPI 2 to MVC 6 (Web API seems to have been merged or something, wish I knew more about that).
Perhaps you are creating the record and verifying its existence within a transaction, but not committing said transaction? Are you calling SubmitChanges() on the DataContext?
In this case I would put a trigger to react on delete in that table with contents of something like "waitfor delay '6:00:00'". Then when you see from SQL Profiler that there is this trigger running (or you've done whatever you need to trigger this removal), "break" the application and go through stacks to see what is using the delete (it'll be stuck in SQL execute code). But why are you messageboxing there and not using breakpoints? 
Sorry, I haven't really used ADO.NET since I got hooked on LINQ to SQL. Perhaps the table is being accessed/deleted indirectly through a view or a foreign key deletion is cascading to the record you created. Set breakpoints in Visual Studio on lines that delete records from the database. If nothing jumps out at you, I'd just step through the code in the debugger and execute a SQL script from outside the application at various points to figure out when the record exists and when it doesn't.
Thanks.
Visual Studio **2008**. Are you serious?
&gt; If you have to ask, don't use it I don't think that's particularly good advice. I have a colleague who didn't use using statements or interfaces because he didn't know what they were for. Had he just asked, we'd have much neater code instead of the clusterfuck that is our internal codebase.
I am describe an algorithm with practical steps proves with C# code or you can perform it in any language it's your choice. Graphic layout of tool works on this algorithm is depends on your thoughts.
Just be sure to don't add up random numbers, that defeats their purpose very easily, if you need the values to be in a different range, you have to multiply or divide.
Read the documentation for `int.Parse` and `int.TryParse`.
This is the exact situation I've used dynamic for too. Don't recall the exact details but I had an `object handler` that I knew was of type `IHandler&lt;T&gt;`. Needed to run it through `Execute&lt;T&gt;(IHandler&lt;T&gt; handler);`. You can do that by casting to dynamic like so: `((dynamic)this).Execute((dynamic)handler);`. It's a nice alternative to reflection.
Forget using Word and VS2008 making up your own "encryption" algorithm is dangerous and stupid. Even dumber is putting the key in the actual output. .NET has standard symmetric and asymmetric encryption algorithms built in. Use those. They work.
There's a far divide between a standard language feature and niche expert case features. My statement of if you have to ask to use X is because it's backwards. When these highly specific scenarios arise the question ends up being "i was able to do Foo but i feel like there would be a better way". You shouldn't start with a solution in search of a problem. It's like when you first learn about expression trees or IL generation. The next thing is not "great! how can i add these to my app?". These things are highly specialized tools that only need pulled out when all others have failed/done very poorly. In general all of these tools stay in the tool box. They're like star point screw drivers. Yes you might need one some day, but you'll have very bad outcomes trying to use it on standard phillips head or flat head screws.
If you only care about the existence of a value, you can compare it to `null`. If you want to know if a property with a possible null value exists, you'll probably have to fall back to casting to a `JObject` and look at its properties, or perhaps cast the value to a `JToken` and compare that to `null`.
You are not evaluating the result of the parsing. The max value of `Next()` is exclusive. This means your value will **never** be 10.
Great vid thanks fella, this is the kinda tutorial I was hoping to find.
Thumbs up for the tip :), Thanks
I guess I should have written it a little better, in that it tries to parse and if successful 'j' is true and then assigns the parsed value to 'guess'. If it seemed like I implied that the parse itself was being evaluated, that was not my intent. As for the random number, I suppose this is true. I've never really used the function before in what I've learned so I was unaware that Next() was exclusive. I grabbed the random number bit from OP's code.
I use it a lot for creating data access layers when I don't have access to the entity framework, say, for unity3d games. Simply make your own by defining a set of classes which match your table structure in the db and when making calls to the db, reflect through a generic types properties to set their values from the sqldatareader. Also reflection let's you access attributes of classes, methods and properties.
Technically the implementation of `==` in `Version.cs` is correct, just not optimal. But yes when I see casting to `Object` before doing a null comparison the caller is basically saying "I don't trust you"
On a positive note, the terrible presentation successfully distracts from the even more terrible and arguably dangerous content. I spent far too long looking for a frame where the date in the systray was visible to find out whether this is a reupload or someone's actually still making bloody tutorials with VS2008.
I was going to suggest mods to games and things as well. However, this usage simultaneously horrifies and intrigues me. Was the application architected in such a way that deploys were difficult? I can't imagine a scenario where I would agree with this kind of usage.
No, the application itself was just a standard Windows service. Deploying add-ons was as easy as copying the DLL to a directory on the server. What is it about this usage that "horrifies" you?
I used reflection when working on Project Euler problems. I got all classes in the namespace "Euler.Problems" then for each one, I called the activator class to create a new object and calling a overridden Solve method in each class. This Solve method set an Answer property which I could then retrieve with reflection.
I used reflection to create a function that recursively compares the properties of two objects (of the same type) and gather up the differences. Super useful for testing.
I did something along those lines, but with configuration section file parsing. Having classes that had methods to return the type of section it understood, and a method to do the parsing, classes could be added without needing to remember to update a centralized switch-style statement each time a new parser was added. Looking for parser classes with a certain pattern in their name would pick them up automatically, so a lot of code that would be error-prone to write that supported the plumbing of the parsing system wasn't needed - it just happened automatically because of reflection, and the implementation of a common parser interface.
I prefer comparing with null directly as well. In fact, I never use classes that overload the == operator unless it's done correctly, such as with System.String, so I generally never cast when checking referential equality. That said, the JIT compiler should turn both into the same machine code. 
Why would you do that? It just gets harder to read, and if you are doing something where time as a seed is insecure you should not be using System.Random anyway. 
To prevent occurrence of numbers repeating multiple times.
This is what I basically used it for, importing vendor catalogs from excel files into our database. I would have the catalog file, and then a mapping file with "Our-Col-Name" in Column A, and "Their-Col-Name" in column B. That would generate a script like select [their-col-name] as [our-col-name] from sheet1$ and create a reader. At this point it was easy to loop through and use reflection to create a list of products. The nice thing as well was if we ever added additional columns, even with validation all I had to do was modify the single product classs
You should check out this library I wrote that does exactly this : https://github.com/StevenGilligan/AutoCompare I'd be interested in knowing how you did yours. Feel free to open an issue or make suggestions to improve my library. 
No, `JToken` implements `IDynamicMetaObjectProvider` to customize the dynamic binding and binds only to the JSON property names instead of the class members. The real methods are "invisible" when accessed as `dynamic`. Otherwise, you'd have conflicts when JSON objects have properties with the same names as `JObject` class members.
As an example, Unity3D does it with all its stuff.
Can you post your code?
Imagine iterating a random.next loop 4 times in a loop. Would using guid as a seed give more equal distribution compared to default seed? 
Dude wtf is this, this is not a facebook wall. Go flaunt your "I just started programming look how cool i am" trash somewhere where i don't have to see it. ^(Inb4 im negative) ^(Inb4 im whining)
This could be just academic. 
Either will run the same query (selecting only fields you want), so it's up to you on if you want it strongly typed or not. If not you'll need to manually map and if you do have a dto you can use automapper or similar to map for you.
I'd have to disagree on the toppings being a list of strings that could be created by simply doing this Toppings = new List&lt;string&gt; { "Sausage", "Pepperoni", "Bacon", "Ham", "Beef" } This is not "Data Driven" as you say, using magic strings when we are creating (and subsequently saving) the pizza's to our database is unsafe and will be extremely inefficient when querying. It should not be made from a list of strings, it should be made of a list of ToppingTypes, a table in the database (with a model in the application) which represents what toppings a user can actually put on their pizza and the front end of the system would only allow the user to add the toppings that are provided from this table. I agree that he shouldn't have classes to represent pizzas, however if we want to do Data Driven Development then he should have a predefined Pizza table which has a one to many connection to the ToppingTypes, so a user can select a predefined pizza and we understand through our one to many table what toppings that pizza holds. Using this method we won't have to recompile the application to add new Toppings since adding the row to the ToppingTypes database will then include the new type in the front end, and if we add our new topping to a predefined pizza the system can pick it up using the one to many connection we would have initially setup and we won't be needing any extra code. I wrote this out pretty quick but I hope it's clear and concise. 
You didn't mention the use of *is* or *as* to try a cast (and check for null). I use these almost exclusively rather than (Object)foo. Is it not easiest (and fastest maybe) to say if (foo is Version) { } ? 
I feel like something is missed here. DbEntityValidationException are thrown by the backend server due to schema validation. "Invalid Email" as an error message with DbEntity is a weird one because SQL Server really doesn't care about the format of the e-mail. My guess is that perhaps the length of the e-mail you are passing in might be too long for the datatype in the database. Best bet is a a try catch and see the actual exception which is conveniently buried in the EntityValidationErrors. Honestly I have no idea how you got an "Invalid Email" out of DbEntityValidationException
They haven't yet, but they definitely need to. MS makes some of the best developer tools in the business. VS is the by far the best IDE out there. I have no idea why they haven't bought Xamarin yet. Maybe Xamarin isn't thinking long term, but is actually gunning for a more attractive acquisition with higher revenues to show.
That works, I wonder if there's a performance hit for checking the type when you already know its a `Version` though.
Ahhh mobile has come a long way.. Still has a way way way to go before I try to write code on it again! They can eitehr pay me big money to do it or I aint doin it!
There are no other native offerings for all platforms. All the others run in web containers. And it's easy to say you are going to save money. Having the money to 'save' in the first place is the problem. I could go with just one platform, sure. But I don't want to. For certain business reasons. The people I know will be using it have a mix of platforms. I'm not worried about 'going big'. I'm worried about the people I know would be using it. And I know I could go with the native platforms. But this post is bc I don't want to.
I wish I could upvote twice. I've been developing .net for 2 years and every time I tried to learn mobile development it was such a painful experience. Microsoft got shat on frequently but VS and .net are just miles ahead of everything else in their ease of use.
Bearing in mind I'm using SQL Server Compact Edition 4.0. I've also got cascade update and cascade delete on my tables, could that be causing the problem with inserts? The ID values, including the queries, are of integer values. oneID and twoID in tblJoin are both primary key fields. System.Data.SqlServerCe.SqlCeCommand cmdInsert = new System.Data.SqlServerCe.SqlCeCommand(); cmdInsert.CommandType = System.Data.CommandType.Text; cmdInsert.CommandText = "INSERT INTO tblJoin (oneID, twoID)" + " VALUES (@qryOneID, @qryTwoID)"; cmdInsert.Parameters.AddWithValue("@qryOneID", qryOneID); cmdInsert.Parameters.AddWithValue("@qryTwoID", qryTwoID); cmdInsert.Connection = conn; cmdInsert.ExecuteNonQuery();
yep, and if they make it free or too cheap then microsoft will not be able to put the price back up, so they are leaving that option open. I keep waiting for the headline "Microsoft buys Xamarin, open sources the lot" (kinda like they did with all of the other mobile stuff)
Half of the ones you mentioned aren't even native. So there are a couple other alternatives if you want to write C++? Awesome. I'll pass. I'm not writing a game. It's a simple business app. I don't want to spend three days fucking with a build script just to run a hello world. C# productivity, and javascript for that matter (React), is leaps and bounds better than coding in C++. And as far as robovm goes, holy shit, if I have to go back to Java and write getters and setters ever again I'll tear my eyes out from the horror. I really don't want carpal tunnel from writing 10,000 times more code than I should have to.
No matter what I try in here I just seem to get this anyway: ArgumentException: The requested value 'Partly Cloudy' was not found. System.Enum.Parse (System.Type enumType, System.String value, Boolean ignoreCase) (at /Users/builduser/buildslave/mono-runtime-and-classlibs/build/mcs/class/corlib/System/Enum.cs:692) System.Enum.Parse (System.Type enumType, System.String value) (at /Users/builduser/buildslave/mono-runtime-and-classlibs/build/mcs/class/corlib/System/Enum.cs:547) GetURL.Start () (at Assets/Scripts/Weather/GetURL.cs:71) 
You are absolutely correct. Just shows even more how important clear code and braces are.
Air is on my list and fulfills that condition. In any case, given the amount of flame shots at me just for providing an alternative list and having the heresy to mention developers should get paid for their work, I won't bother providing other alternatives as I volunteered to do. For example, Xamarin is not the only one selling C# compilers. Google, Yahoo and Bing are one click away.
I wanted to work on some mobile applications on my spare time and the only languages that i know are C# and JavaScript, i could learn Java, but i kinda wanted to get an app out there fast and in the wild. But, Xamarin's prices are too damn high!
I used Xamarin fir my first Android app (free edition) and later rewrote it in Java because AppCompat (that's important!) is too big for the 32k limit. I agree that there is real competition. Java devs can go with Googles J2ObjC or RoboVm both of which are free and offer something similar to Xamarin.
[solved: ] Okay my problem lied with where i was trying to remove the white space. For me it had to go here: Listconditions weather =(Listconditions)Enum.Parse(typeof(Listconditions), weatherCondition.Replace(" ", "")); which is where it is actually checking all the conditions and comparing to the enums, it took me a while to realize this and since my ''weatherCondition'' shows up all over the place i ended up trying it in all the wrong places first such as where i call weather condition and print to console... :)
[removed]
you might find this useful: https://pbs.twimg.com/media/CNW7v_iUcAAuT-K.png:large http://arlobelshee.com/good-naming-is-a-process-not-a-single-step/ 
you might be interested in [LinkKoans](https://linqkoans.codeplex.com/) It's unit tests with a ___ you fill in to learn. Here's an example: public void All() { var names = new[] {"Bert", "Ernie", "Kermet", "Grover", "Big Bird", "The Count"}; var result = names.All(n =&gt; n[0].IsConsonant()); Assert.AreEqual(___, result); } 
I've used reflection to build dynamic WCF client proxies. Gives you the benefit of handling common error cases and channel management (i.e., re-upping a security context with cached channels &amp; factories in a load balanced environment with custom authentication) while keeping the consuming code clean and strongly typed. (These days it's often better to use an interceptor, though.)
$999 is a pretty big hill to get over for messing around if you want to deploy to the app store without size restrictions and Xamarin Forms. If I spent that, Xamarin would be the only thing I did all year until I could convince a client to do mobile so that I could pass the license cost to them. Edit: with all the stupid shit I buy all year and eating out, I can probably afford the business license but like I said it would be a waste of money unless I know I have some client who would eventually pay the license off for me.
Yep the compiler. Not sure where that jit come from. I was tired I guess.
... for the Indie edition, which is practically useless.
There you go, sweet reddit karma but I have to be *THAT* guy a.k.a. the naysayer. I'm a professional freelance dev for quite some time now and I shelled out 1.6k$ for the business license (Android &amp; iOS, it's only 800$ per platform for MSDN subscribers). Worst investment in years, TBH. Their XS is crap, it's not even able to do reliable syntax highlighting. Their VS.NET integration is worse on the performance than R# and manages to crash the Studio every now and then. They invited me today for a betatest of their new XS and VS.NET plugin and my thoughts were: "I'm pretty sure I'm beta-testing your stuff for months already." My personal workflow is usually building a prototype project and once this proves to be working I migrate larger features into the development branch. Unfortunately some features work perfectly fine in a prototype project, but cause framework exceptions once they're migrated. Same project type, same framework. Spent days of debugging for nothing. Oh and don't even try to go that native binding route. Xamarins documentation is... well... quite short on that part. I'm still looking for a detailed explanation of possible metadata description. My current client is going to abandon Xamarin to go for native implementation, because that's predictable product development. Tl;dr: Xamarin shouldn't be used for real development, because it's unreliable and expensive. 
On the contrary, those are all specifically language features. 
Let me rephrase that: their XS is useless and their VS integration is useless as well. An IDE the regulary dies when doing basic tasks such as syntax highlighting or code completition is what? Exactly, useless! (It never happened to you? Looks like you haven't done some real multi-flavor app development yet.)
&gt; haven't done some real multi-flavor app Pfftt, Xamarin Studio manage to crap out even when I'm just debugging the template project. 
There was a rumour Apple were against an acquisition and would pull the plug on allowing Xamarin apps to run on their platform if it went ahead.
The 128k isn't enough, you can't do anything believe me I've tried.
I know plenty of individuals who spend $5 on starbucks but get upset to spend 99cents on an app. :-( I know plenty of developers who spend $50 bucks on a night out drinking, pizza but get upset to spend $25/month on a tool. :-( If you want Xamarin so bad, stfu and pay for it. I see a lot of developers who spend thousands on their shiny apple laptops but want free tools. GFTOH!
That's what put me off even having a play with xamarin. I wouldn't want to learn how it works, put a lot of effort in to then have to decide to pay money to keep learning or redo it all using android studio 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/programming] [Open letter to Xamarin (xpost from r/csharp)](https://np.reddit.com/r/programming/comments/3og4dr/open_letter_to_xamarin_xpost_from_rcsharp/) [](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))* [](#bot)
To be quite honest, I think whole websites should be in asp.net not Angular.js or any other *** like that, it's ridiculous, I agree with OP. Best post ever. I love everything from Microsoft they have complete design, complete product and everything, not like js frameworks that pop up every other day or 2. Now look at their amazing UWP API, its fantfabulous. Although a bit late but still better then every one else out there.
I doubt that. In my upon, the only reason Apple ever allowed it was to prevent anti-competitive lawsuits
I agree - the whole not being able to us VS without a Business license is pretty unfortunate. Xamarin should be free to use with the "Starter License" and Xamarin Studio, and then Indie gives you the ability to publish and use VS like OP suggested. They could still make larger corps pay for the biz license by restricting the company size to &lt; 5 like they currently do. One quick point - if you are an indie dev (like myself) and you want to use Xamarin, definitely email their support team. If you explain your situation, they'll most likely give you a better price on the Biz license than 1000/yr. I did this, and it definitely paid off. 
Totally agree , Xamarin is way too expensive 
Air is not native. You're getting flamed bc you really don't seem to know what you're taking about
Holy shit that would be incredible. I would use that in a heart beat
Interesting suggestion. Can you give an example how this would work in WPF, because most of the time you have 1 view and 1 viewmodel per feature. Which would mean only 2/3 files in most of the folders. Won't you get too many (small) folders, or do you still group some views/viewmodels?
Seriously? Did you even read my post? You didn't even read the TL;DR; I literally say in multiple places I am going to use react native instead.
&gt; In your code, you are using a do-while loop, instead of just a while loop; Which is why he stated he was testing a do loop &gt; Hello! I'm learning about loops right now, to test a do loop out I tried to write a program that stores a random number...
No, interesting. I'll check it out. If I was going to go with another JVM language though it would probably be Scala. I have used Scala before and loved it.
I love VS. I love C#. I love the idea of Xamarin but haven't used it (to even really try it out) because of $$.
Bingo.
That's a good point, but I normally find I end up with 3, 4, 5 views (and models) per feature. Say the master view, sub view, a popup editor etc. I like to treat XAML like code and apply Single Responsibility Principal, so I break user controls down into smaller more manageable pieces.
If you use TypeScript with React native (or nativescript or whatever), you get a lot of benefits of C# (types with generics, IDE support etc)
&gt; C# productivity, and javascript for that matter (React), is leaps and bounds better than coding in C++. https://github.com/eugenkiss/7guis/blob/master/C%23-WinForms/counter/counter.cs vs https://github.com/eugenkiss/7guis/blob/master/Qt5/OnlyCPP/counter/counter.cpp
&gt; I found out about the newly improved student licences and applied for one. How was the application process? They told me they needed a student ID from me and never responded after I sent it to them.
You're right, I did overlook that. I have edited my answer.
Use C++ and write the UI in Java (Android) and Objective-C (iOS). Problem solved.
&gt; C# productivity, and javascript for that matter (React), is leaps and bounds better than coding in C++ wrong. you may prefer to use C# and that's fine, but that statement is just wrong, specially the javascript part. also, i do agree with your first post, but xamarin and react are not the only option for native mobile application development, not even close. 
Well, Kotlin is quite a bit simpler, and it intergrates well with Java libs. Plus, Android Studio has built-in support for it.
Xamarin apps are compiled to native code, just like Objective C, Swift or C++. There is no way Apple could ban Xamarin apps from the AppStore without a lawsuit. 
It's not $25/m, it's $83/m. And it's not even a monthly, so it's $999 upfront to try.
Same for me with the old student system.. The new one is months old and I got a reply within a week. The seem happy to help. Like I said I never submitted because I became dispassionate 
C# is my favorite language ... what exactly does Xamarin do that is so essential to your workflow? It's a genuine question. How can the open source community disrupt them? Can you detail what "tech" they have that one couldn't build given the time ...
The host OS is OSX only, (from the requirements page) it doesn't appear to run on windows
I don't know if it classifies as "A.I" but you could just make it generate a random number between 1 and X number of predetermined actions, then have something happen depending on the number generated. Switch(action) //the integer that was produced using random. case 1: attack case2 : defend case 3: run-away.
PowerBuilder, Clarion, Xamarin,.... 
&gt; and write getters and setters What IDE were you using that didn't generate these for you? 
What? They can ban whatever they want without any need of external approval, they just need to change the TOS (and they have the right ro change them whenever they want... written in the actual tos). It is fairly easy to recognize if the app is written with other tools (robovm, xamarin, react, etc) just looking at the submitted package. Not so long time ago they banned for a short period all js based apps without problem. 
i have, both with Qt widgets and with Qt GUI + QML only, and had good experiences with both technologies. 
VS is good if you're doing C#. Anything else, not so much.
Visual Studio is 32bit. When you compile you can chose to compile to 32bit or 64bit or as Any CPU.
Of course most of the time you can create a strongly typed DTO class that is serialized/deserialized to/from json. But then there are those times that you can't do that, and you need dynamic - and that's what it's for.
There is warroom from privateer press, that's a miniature war gaming card and rule viewing program. Lots of complaints when it first came out for using unity to display 2d images and text. 
the next step after that one is going full out with the .NET Naming Guidelines - https://msdn.microsoft.com/en-us/library/ms229002(v=vs.110).aspx
&gt; Get the Community Edition.
If it takes you 3 days to write a working build script, you have other problems.
&gt; C# has been my favorite language since I taught myself how to program 15 years ago. Damn, I never realized how old C# (and in turn, I) was...
I completely agree. I've always wanted to use Xamarin but as an individual developer I simply can't afford this.
I am a developer for Android and iOS using the native tools (Android Studio and XCode). I just started to learn Windows Phone development and my impression is not like yours. It is so much a pain in the ass, I am not even suprised there no apps for wp.
You don't. You use the dynamic variable as a transition to the DTOs you created - but you still need it.
Still doesn't make sense. If you are not reading the data inside the Json, why not just pass it along? Why is there need to parse it and then deserialize it again?
&gt;static keys What? You mean the names are not names of properties? The data in that json looks like dictionaries. And those can be represented strongly-typed.
Am I missing something? It's $25 a month. We've been using it at work and I honestly don't notice the difference shifting between Xamarin Studio, Visual Studio and XCode. They've all got their issues and weird quirks. I battle them all constantly and have a lot hate relationship with each of them. Xamarin has given us what they promised though. We have one code base with three versions of our app and all in C#. For the increased team efficiency of having one codebase and one language to manage to hit all three platforms I'll put up with a ton of issues. 
have you tried the new UWA? I haven't yet but I've heard good things.
It's fantastic for Javascript and C++.
If you are bumping up against those limitations you should probably be using a different SKU. 
C++ developer here, I disagree. But at least it's getting way better than it used to be.
That sounds more like Xamarin.Forms and would be just as limited as Xamarin.Forms. I guess it's fine for LOB apps and for Microsoft that's a big part of their dev community
lol, what? While Java is clearly an inferior language, it's hardly as bad as make it out to be. Heck, most people seem to use Xamarin purely for cross-platform language and code sharing. Using it solely for being able to use C# is just a headache of its own, since Android's Java support is much smoother and easier to find help for. I'm not sure what you refer to r.e. "google's *pathetic imitation*".
I know! I started with 1.1 in school. Just shocked at how far it's come. Especially ASP.NET.
[from a quick google seach](http://appleinsider.com/articles/10/09/09/apple_no_longer_banning_third_party_ios_development_tools) I remember something about MonoTouch (this is before the product became Xamarin.iOS) not being affected by that change and them reaching out to Apple for clarification since they actually compile to a native app. It still raised a lot of questions for MonoTouch devs. 
Do you work for Xamarin?
This.. has to be the most horrible formatting I've seen :p sorry, but you should really paste this into visual studio and have it format your code properly. 
It is $25/m for the Indie edition, which does not include Visual Studio support. There is a fully functional 30-day trial edition, you do not need to pay 999 to try. And 999 is for Visual Studio.
They sold mono to novell. They have a history of selling.
And the whole point was that the Visual Studio extension is pretty much necessary. Writing in C# without the C# IDE features???
OP is 110% right on just about everything, and here's why it doesn't matter. &gt; you are leaving out all of the dreamers, the individuals, the people making apps and games after work who can't afford it. So what? You're not their target market. Of course they could charge $10/mo for everything and everybody would be able to have a subscription. But they'd have a small fraction of the revenue, and they wouldn't have the resources to continue to make Xamarin better. One of the first things you're supposed to do when building a business is to find your target market and build something for them. Xamarin's target market is *not* C# developers who want to build native iPhone and/or Android apps in their spare time. It's Enterprises and SMBs that have multiple C# developers already, established processes and 7+ figure revenues who for whatever reason feel they need a native application and don't want to spend $100k on it. &gt; By the way, did you realize that a Visual Studio license is less than the smallest business offering you have? So what? They're entirely separate tools for separate jobs. Not to mention the fact that you almost certainly get Visual Studio through your employer, so you're not paying for it yourself (just like most users are probably getting their Xamarin licenses) &gt; These are the people, that once they build their app on your platform, will NEVER leave it. [citation needed] &gt; You are pricing out the next Mark Zuckerberg, the next Larry and Sergey I promise you that anyone serious about starting **a business** is not going to discount an entire platform because of a $2,000 entry fee. Maybe you'll build your first game in HTML5/JS. Maybe it will make you $400k. You might build your second game in HTML5/JS just because it's what's familiar, but most likely you'll evaluate the market and the providers at the time, and with any reasonable amount of money in the bank, $2k is not going to be any meaningful barrier to entry. &gt; Or put those big bucks into Xamarin Studio. Competing directly with VS is literally the worst thing they could do. &gt; Why don't you let people use the integration to develop their app and then make you use the license to put it on the app store? First sensible thing in the entire post. And for what it's worth, they are more than willing to negotiate with you on price, *particularly* if you are purchasing for multiple platforms or developers, or you are purchasing Xamarin U at the same time. I talked them down to ~$1300 for both platforms ($2k MSRP) or ~$2250 for both platforms + Xamarin U ($4k MSRP).
and how did that work out?
You're never changing the value of `health`. Assign `(health - random)` to the `health` field instead of the local `decrease` variable.
I'm not going to downvote you, but I don't agree with your points. &gt; So what? You're not their target market Maybe not. But that's frustrating to the people who want to use it and can't. &gt; So what? They're entirely separate tools for separate jobs. Not to mention the fact that you almost certainly get Visual Studio through your employer, so you're not paying for it yourself (just like most users are probably getting their Xamarin licenses) They are both IDE's. They aren't for separate jobs. And the people we are talking about here don't get the license through their employers. Thats the whole point. We are talking about people who want to use it for their own apps and games but can't afford to. And Visual Studio Community is free now, and has every feature you need. It isn't watered down. &gt;[citation needed] Citation for what? Do you regularly go and rewrite your apps from scratch? &gt; I promise you that anyone serious about starting a business is not going to discount an entire platform because of a $2,000 entry fee. Being serious about business and having 2,000 to throw around are 2 entirely different things. &gt; Competing directly with VS is literally the worst thing they could do. I... what? That makes no sense. There is plenty of room in the market for both. It wouldn't be them going toe to toe in the ring. &gt; I talked them down to ~$1300 for both platforms 1300 for a year up front. I can't even use it for 3 months to make sure it is going to work for me. I have to pay for a year no matter what. And if it doesn't work out in 6 months for whatever reason, I've just lost $650.
I checked around and, yes, you are the only one. BTW: I down dooted myself for this.
Here's one. When I want to log something and I also want to include the method or class name that's doing the logging I can use reflection to get those values. No, it's not very performant when compared to hard coded values but it works. One other time I used it was when I had to integrate some tests with an external test management tool. To log/report the results back to the test management tool I had to get the test methods name or a value from a description property. It was easier to put that code into a class that was inherited by each of the tests than hard code everything. It also allowed bi-directional searching.
&gt; However, someone was using reflection to get the method and invoke it at runtime, so that ended up breaking after deletion of the method For those that don't realize it, this is why you have unit tests and the like. It catches things the compiler can't.
Addition to what everyone else has mentioned a good reason is: attributes. There is no other support in C# for their usage than reflection.
Check out ionic framework. It's free, and is lovely. I used to hate Xamarin. Now I'm just disappointed, but I'm over here rocking Ionic framework happy as a kid in a candy shop.
It is our duty. However, cash is the currency that we show our consideration and respect for our time. You took the time, and the least I can do is pay for a few beers (or whatever) for the time you took.
[removed]
I thought about that but it's Angular 1.4, right? I'm afraid of what the future holds for that.
To point you a little better here riding off of Ops comment: What you are doing is setting a new variable = to whatever health is (50) minus or plus whatever number you're subtracting or adding to health. What you need to do is set Health = health - or + X (where x is any number of hit points you want to add or remove from your player) 
No need to be sorry. I genuinely appreciate your suggestion. Are you referring to the "Remove and Sort" option? Or are you suggesting that Visual Studio itself will just make formatting my code easier?
&gt; I'm not sure what you refer to r.e. "google's pathetic imitation". Google's "java" on Android isn't even real java. If it were, it would be *slightly* less retarded and worthless, but it's not. &gt; it's hardly as bad as make it out to be Please try to convince the OP on that one, as he already replied ;) 
Why? Libraries don't just up and disappear.
&gt; write the UI in Java LOL why would anyone using a modern language like C# want to go 25 years back in time and use that pathetic retarded horrible piece of crap that doesn't even have fucking properties? LOL if java was a decent, usable language that doesn't give you a fucking brain cancer Xamarin would not exist.
It's really hard to permanently lose anything in git.
The problem with doing that is that you can spend a lot of time running commands without really understanding why it is that they work.
Can you link to this? I'd really love to give it a try.
Great point, however I'd still argue against overusing reflection.
They talked it about it on their blog. https://blog.xamarin.com/introducing-our-first-release-candidate/ I believe you just have to switch to the 'alpha' channel to get it currently. I haven't tried it yet because I don't like to move off the stable build unless required. 
agreed, can't wait until Angular 2 drops; I know the Ionic team is working closely with the Angular team and are definitely moving to A2 - its just a waiting game for now
I can get by in a basic work flow, but I MUCH prefer Mercurial to Git. Luckily I have the option to use either where I work, and just use Git for doing OS stuff on GitHub.
It's a joke, relax man~
A slightly old version of angular should not be compared to MS DOS.
ok I don't have a dbml file but I have an .edmx file and I opened it up, right-click -&gt; update model from database -&gt; refresh tab -&gt; Finish. And I'm still getting the same error now.
You don't get karma for self-posts.
Is Xamarin going to refund us for the 19 mac mini's we bought to deal with that restriction? :unamused: I'll give it a shot, hopefully this helps... unfortunately, it comes in the last month of our project.
They definitely couldn't. They would be sued for anticompetitive business practices and *ruined*.
VS for C++ is objectively the worst of gcc, llvm and vcpp.
&gt; someone (either the main angular team or some bunch of cool dudes elsewhere) will maintain the 1.x branch. Um. Yea, no, they won't. The angular team already said they are only going to maintain it for up to a year. And by 'maintain' they mean security updates. Angular 1.x is feature frozen. And there aren't cool dudes elsewhere who are going to add new features to a dead framework. On top of which, as soon as 2 is released, the module developers are going to flee in droves. They already are. Everyone is going to drop 1.x in the next 2 years. Starting a new project today would be ludicrous.
oh cool. Thanks! haha.
You could give [SourceTree](https://www.sourcetreeapp.com/) a try. It provides a nice UI for Git which really simplifies interaction with a Git repo. Plus, it's free.
Good points. Its certainly sad that people who want to use it can't. But I can see where Xamarin comes from. They provide something valuable and want to charge for it. Opening the floodgates would definitely increase support requests and noisiness in terms of customer feedback.
I haven't look at yours but the issue I have with most cloning and deep compare libs is they don't bother handling cycles. I'm not rewriting my data model just to use some library.
Uh... so why did you need reflection at all? That could easily be achieved with a generic constraint, like this: `SomeMethodThatCallsSolve&lt;T&gt;(T problem) where T: new(), ISolver`
I developed a habit from back in my svn days. If I ever have a big merge or pull or I have changed a significant amount of code, I take a zip of my git repo before doing anything. If something goes haywire, I just delete and unzip and try again. It's saved my ass a few times.
Thank you, and great question! I don't think there is a good or right answer, and I am unsure I will be able to answer you question, but I would love to give my perspective: DTO: Cons: - Yet another data structure to maintain - It is harder to keep track of changes Pros: - If used with tools like Automapper, you can economize code - Changes Projection: Cons: - Once you create an anonymous type, there is not much you can do (easily, without casting or conversions) with it (except bind it to a UI, or be the last call before returning from a Web API) Pros: - Easier to implement/mantain - Elegant and less code
thanks for sharing, that is very interesting.
I believe that. It seems like many of the MS evangelists I've talked to are really big on Cordova, and that's not really that far away from UWA. Really, it just makes sense: native apps are just too difficult and fragmented. By supporting a web-based approach to apps, they bolster WinPhones which can run HTML5/JS apps native and kill the Play/iTunes lockin.
It also makes for broken randoms. I had a character generation system I built just to play with making a lot of random characters for a mini game. I created the random sequence inside the method, and all my characters ended up with the same stats. After a bit of reading, I realized the issue was that the method was being called too quickly so they were all getting the same set of numbers.
Thanks!, but I'm not sure where I should go to obtain the output menu in the GUI portion of my program.
+1 for sourcetree
Well, yes, the constructor is the very first thing that is executed for any instance, so at that point the IDE can't have set the name yet. You need to dynamically update the text when the name changes. Easiest way to do that would probably be a data binding: label1.DataBindings.Add("Text", this, "Name");
I'm sad that I couldn't use Moq.
&gt; open platform Please try to tell that to the lawyers and bureaucrats at urinal corp who have sued google because of pathetic java, please.
That works, except I ran into the small issue of it setting the label text when renaming the label. Since I only want to initially populate the label text to generic text, I solved it like this: public partial class NewLabel : UserControl { private readonly Binding _nameBinding; private string _newLabelName; public string NewLabelName { get { return _newLabelName; } set { label1.DataBindings.Remove(_nameBinding); _newLabelName = value; label1.Text = _newLabelName; } } public NewLabel() { InitializeComponent(); _nameBinding = label1.DataBindings.Add("Text", this, "Name"); } } Thanks for your help!
&gt; Oh fuck off troll Yes, that is a very valid technical argument that proves that java is really a modern, properly designed language, very suitable for client side development. Thanks for your insightful comment, I will leave all my modern languages such as C# and F# behind immediately and start using java, because of your comment.
It took them several weeks to reply to me. I study with the Open University so I don't have any kind of ID, just an ac.uk email address, but after explaining that in the email and linking to the OU website that was enough to get a license 
Small team (5) and small gross (100k) or open source.
The trick is to commit very often. Don't do scary things with uncommitted code sitting there. As soon as your work is committed, you can always go back using the reflog, whatever you've done. At the end of the work day, you can use things like fixups and interactive rebase to make coherent commits out of your work before pushing it to the world. For big operations it can be useful to do it on a branch first (or to create a backup branch, although that's what the reflog is for) so that you have clear pointers to your different lines of work. As for understanding git, for me it helped to read about the data model; how are refs and blobs and trees and commits actually stored on disk? Knowing this, all the git tricks just become different ways of manipulating Git's main data structure, a directed acyclic graph. Then 'rebase' becomes: take a line of commits and make a copy of it but starting at another branch point.
You're trolling. Why would I respond meaningfully to someone that will quote two words of my post then spout idiotic lies about those two words?
Either approach is valid IMO. Personally, I would create a `DoSomething_NullArgs` test that calls `DoSomething` with known good args (assert no NullArgumentException is thrown), varA as null, varB as null and both as null.
With Git, you really need to grok its internals to understand it. Subversion, TFS, CVS, Perforce -- I found that cursory knowledge of them was sufficient. In fact, I haven't needed to get so intimate with my source control since ClearCase. To that end, don't start with tutorials. Start with its internals: https://github.com/pluralsight/git-internals-pdf
I downvoted you, but let me explain why. First of all you did not contribute to the topic and secondly you are wrong. You will earn and lose karma for your comments, obviously labeled comment karma. Even in self-posts.
Web framework no matter how nice will still be bound to UIWebView - and that's just plain old stinking shit.
Interestingly enough, having used mostly git for a VCS, i have a hard time trying to grok perforce. I think it's mostly the "being used to something else" factor, even if git might be marginally more complicated objectively.
I actually recommend Visual Studio. All my beef with it were from past days. Haven't used the most recent version personally, but by the looks of it the Visual C++ team did a lot of improvement. Alternatively you could give CLion (very new product) and QTCreator a try. Both of them are cross platform and look very promising.
do not create an 'increase' or 'decrease' health variable just use: health += 25 // to gain health (is the same as health = health(50) + 25) health -= random // to lose health (is the same as health = health(50) - random) 
You usually want every test in its own test method, as a test method stops when the first error is encountered. Having the first test fail would then hide the second, probably also failing, test. While that could be rather harmless, such as probably in this case, it also can complicate things a lot. Though in this particular scenario I would probably put all three tests for null in the same test method, but that is due to the way I implement constraints and may or may not be applicable to you.
I came up with an awesome idea once but I wasn't even looking for people to help me develop this project. It is a sort of dating website, we may try it if we found enough people. I don't want to be an only back-end developer here. My programming skills are a bit too weak to handle it alone I guess.
Well it looks like /u/slackerony is the back end whiz. I'm not too much of a backend developer... should we get a slack channel going for this?
Yeah, we should.
I'd be interested with getting involved here too. Recently got hired as a C# Developer focusing on Silverlight and XAML but want to learn more about ASP.Net MVC.
Why is it shit? I mean there's a performance loss and you have to have some APIs exposed to play with the hardware, but I haven't found either to be a pain yet.
Thanks for the intel
It sounds like you're basically talking about a dependency injection container.
UIWebView is a cancer. It's slow and degraded performance, non-native UI that often differs in subtle yet annoying ways (no matter how closely you try to emulate native behaviour) some API's are simply not available / possible (new 3D touch for instance).
JS-based alternative? please... 
Both concept are rather abstract, but claims are more general. A claim is a statement of some type (which is an URI) about some subject (usually the identity the claim belongs to) with some value, issued by someone. Some claim types are "well known" in that they are interpreted to mean certain things, such as "belongs to role" or "belongs to group" or "has windows upn foo", but a claim can really be used for anything. Roles are more defined as meaning "belongs to role", whereas claims can express any property of a subject. Claims *can* certainly be used to perform authorization checks as in your example, where you have a claim for each action. Claims can *also* be used simply to claim an identity (authentication), and then you do authorization separately.
What do you think of compiling with gcc or llvm and debugging with VS?
They're getting closer and closer to Microsoft. I wouldn't be surprised.
I'm in, I've been working with .Net MVC for a little bit, I can do front and backend.
Yes, this sounds great. We can create a repository on Github and each contribute. How about making something we would use on a daily basis that would improve our day? Or anything heh.
Maybe google it jesus.
I think the question we should all be asking is: When will MS finally buy Xamarin out and include it as a standard element of Visual Studio? When Microsoft? When??
Thanks man!
http://stackoverflow.com/questions/8925815/marshal-an-unsigned-char-returning-function-from-a-dll-in-c-sharp
Customers who make buying decisions based on price are notoriously burdensome to support channels. Xamarin would probably receive a lot of goodwill if they released a version of their plugin that just branded every app or something and made it free or low cost for development. Or make the entire thing cheaper ($500/yr or something for both platform) and charge $5k/yr for any type of support at all, including XU. There are a lot of different ways to do it, but I can see why the way they chose is frustrating, because it's *just* cheap enough that it should be accessible ($1k for a native app on one platform isn't terrible), but *just* expensive enough that if you just want to dick around with it every other weekend it's impossible to justify the cost at all.
If there's still room I'm down too!
I was following the MS tutorial on C# to Android. Setting everything up, go to compile, error. Need the pay version. Ok, sure I'll go grab it, I'd love to write in C# from Android. 1000 dollars. NOPE.
Slack Channel?
I'd be down. Been doing MVC for the past year and a half.
An expression is usually used in an if statement, like a comparator. This: if (a == b) { //Do logic here } would be checking if a was equal to b. Another type of expression is a + b, a % b, or b / a. Initialising a new object i.e new BinaryFormatter(); would also be considered an expression. Hope that helps
git push -f allows you to push squashed/rebased commits to the servers. Without a commit hook explicitly disallowing it server side, anyone can do this. 
Adding to the assembly of opinions: I use primarily Xamarin.Forms using VS2012 I've been using Xamarin for a year now and have some various thoughts. Regarding price, yes, I think it is a bit pricey for the product they deliver. Like others have noted, the task of true-cross platform development is extremely difficult so the rough edges can be expected to some degree. But ultimately, the product does not perform as advertised and as such, does not come close to warranting the price. However, my company purchased Xamarin in order to use a new product called “ Xamarin.Forms”. My experience using Xamarin.Forms has been pretty dismal. Every update breaks my app (old bugs reappear in new updates), causing me to lose a day or so tracking down Xamarin bugs only to realize I can’t do anything about it until they offer a fix. Intellisense will stop working, breakpoints will be skipped irregularly, documentation and working sample code is sparse for anything other than the most common processes. Ultimately, I approached the Xamarin.Forms as if it was a viable solution. It wasn’t (and possibly still isn’t). In the year since I’ve started using the product, there have been many improvements but I would definitely consider it in Beta form at best. For the first 6 months, I would say I spend around 40% of my dev time dealing with Xamarin issues and bugs. In my salty assessment, it was totally inappropriate to charge people for a product that does not work at advertised. Which Xamarin.Forms didn’t and probably still doesn’t. I’m salty because Xamarin is charging full-price for a product that does not work as advertised––you’re paying a substantial amount of money to beta test for them. Xamarin is overambitious and perhaps understaffed given the level of stability. Ugh, Xamarin will forever be a example of pain and squandered energy in my development career. (I really wish there was another viable option) Oh! Thank god for the forum community, it's the only reason I've been able to make as much progress as I've had. 
Can you show the code for your view model?
Post ViewModel code. Is it in the right namespace? Is it public? Try exiting VS and rebuilding the projct.
Yeah I gave OP an example with forms. +1 for input validation, I was hoping OP would come to that realization eventually;)
From the horse's mouth: &gt;An expression is a sequence of one or more operands and zero or more operators that can be evaluated to a single value, object, method, or namespace. https://msdn.microsoft.com/en-us/library/ms173144.aspx
What is a `char*`, under the hood? It's either 4 bytes or 8 bytes of memory, storing the address of some other location in memory that stores your 8-bit `char` values. It's a pointer to a byte array buffer, but it is not the buffer itself, nor is it a pointer to any sort of .Net object - it's not allocated from the managed heap. So of course you can't marshal a 4/8-byte pointer into a .Net byte array. However, you could read from that buffer using Marshal. What you want to do is get the return as an `IntPtr`, and then read from memory using that IntPtr. [DllImport( "someUnmanagedDll.dll", CallingConvention = CallingConvention.StdCall, EntryPoint = "ComputeHash" )] private static extern IntPtr ComputeHash( int d, ref byte[] data ); static void Main() { IntPtr resultAddr; int hashLength = &lt;somevalue&gt;; resultAddr = ComputeHash( d: &lt;somevalue&gt;, data: &lt;somevalue&gt; ); byte[] result = new byte[hashLength]; for( int i = 0; i &lt; hashLength; i++ ) { result[i] = Marshal.ReadByte( resultAddr, i ); } } ... Secondary to that, I think you have a memory leak. Presumably, ComputeHash has to allocate some memory to store this buffer that it returns to you. That memory comes from the unmanaged heap, just like any other memory in a vanilla C app. How do you intend to deal with the ownership, and eventual deallocation of that buffer? I'd leave it to the library to do for you: [DllImport( "someUnmanagedDll.dll", CallingConvention = CallingConvention.StdCall, EntryPoint = "ComputeHash" )] private static extern IntPtr ComputeHash( int d, ref byte[] data ); [DllImport( "someUnmanagedDll.dll", CallingConvention = CallingConvention.StdCall, EntryPoint = "FreeHashBuffer" )] private static extern void FreeHashBuffer( IntPtr buffer ); static void Main() { IntPtr resultAddr; int hashLength = &lt;somevalue&gt;; resultAddr = ComputeHash( d: &lt;somevalue&gt;, data: &lt;somevalue&gt; ); byte[] result = new byte[hashLength]; for( int i = 0; i &lt; hashLength; i++ ) { result[i] = Marshal.ReadByte( resultAddr, i ); } FreeHashBuffer( resultAddr ); } Where `FreeHashBuffer()` uses the conjugate deallocation routine to whatever allocation routine was used in ComputeHash.
That's what they keep saying about COBOL. http://opensource.com/life/15/10/open-source-cobol-development
I would be glad if you mentored me as I'm new to ASP.NET too. 
I'm interested in this! Can I still join even though I'm 14?
I don't think you understand. Backups wouldn't help in this situation. 
It's also worth noting that claims is just one WAY to implement a role. It just implies a security architecture involving the user making claims about themselves. But there are other ways it could be accomplished. Perhaps you have a security server which you query for a list of a given users roles. Or perhaps the program itself stores a list of roles for each uesr. Or maybe you do something silly like just ASKING the user what role they are in every time they do something. Or determine role based on a sub-dermal transmitter implanted in each employee. A role is just a way to organize security permission. You can use many implementations to determine the role of a given user. A claim is just one way to store and transmit information about a user. There are many types of information you can represent as a claim, roles being a very common one. *Edit: Just thought I would give an example of the type of claims I've set up for our current infrastructure: Each user has a user account. The user account has information like their name, birthdate, gender, etc. It also has a url for their picture, the social networking account numbers they are linked with, and things like that. However, we also have multiple applications they may own or have rights too. Each of these will have a list of products, roles, and privileges that a given user may have. Perhaps they are an admin for 3 accounts, a patient for a fourth, and a nurse for a fifth. So when a user logs in and successfully verifies their identity our system first gathers up all their personal account info. Then it queries each of our application servers for any roles, permissions, etc. about that user. We throw all this information into a single json object and then it is encrypted into a JSON Web Token, which is sent across the wire back to the user. They now have their token. When they try to do something that token is sent to the back end server they are calling. Using a secret key it's decoded and validated. Now we have a user with a bunch of claims. "This is my email, I own these products, I'm an admin for this clinic, etc." Since we can trust the token, we can now trust the users claims, and use them for validation. We are fairly certain only we could make those tokens, and only we can decode them, so it must have come from us. So we can let users do things without having to check back with the security server. A non-claim way to implement the same system would have been to never put that information in a token. The user only provides their own ID and the app checks its own records to see what roles that user has. 
I don't have a MVC project but I'm working on a .NET project that could do with one. It's all OSS and in my GitHub. Ito a native cross platform (using Xamarin) beer tracking app. It uses Azure mobile services for its backend. If you're interested then I'd love to accept a pull request for a web frontend. If you're not he. No worries, I'll be making one once I finish the mobile apps and you can possibly contribute then. Let me know if you want any details 
also the DEBUG constant is defined 
Did you build the solution? the designer doesn't seem to be able to resolve the namespace without building. At least in my experience! Also assign a key to the ressource!
My vote is don't bother. I'd rather see the object marked as [NotNull]. If the concern is code coverage, then something like Ensure.That should still give you code coverage on the method. Now what would be REALLY cool is to use roslyn and do static analysis on code to make sure that parameters that are marked [NotNull] have the appropriate guard clause in there (and vice versa I suppose if you want to check that CanBeNull doesn't have a clause). That way you have one test that takes care of some really mindless and frankly probably useless unit test if done on individual methods
I assume you're just doing this as a learning experience? Because there's really no need to write a sorting routine for any other reason.
Dude, I was fucking trying to learn that shit recently. Let me help you out by pointing you to the following links: - [This one is so retarded, it helped me the most.](http://www.wpfsharp.com/mvvm/) - [Example 1](http://www.markwithall.com/programming/2013/03/01/worlds-simplest-csharp-wpf-mvvm-example.html) - [Example 2](http://www.c-sharpcorner.com/UploadFile/1a81c5/a-simple-wpf-application-implementing-mvvm/) I kept rereading these 3 until I wrote my own MVVM example to serve as a reference for all eternity. I can upload it for you to take a look if interested. These two are also a good explanation. Bonus points for being funny. - [Funny 1](http://jmorrill.hjtcentral.com/Home/tabid/428/EntryId/432/MVVM-for-Tarded-Folks-Like-Me-or-MVVM-and-What-it-Means-to-Me.aspx) - [Funny 2](http://jmorrill.hjtcentral.com/Home/tabid/428/EntryId/433/Anatomy-of-an-MVVM-Application-or-How-Tards-Like-Me-Make-MVVM-Apps.aspx) 
Just to clarify, this post is being downvoted because initialising a class is not an expression.
Most (all?) collection objects have a Sort() method. So you can add any object to (for example) a List&lt;T&gt; and get sorting for "free". I can't think of an occasion when you'd need to write your own sort but that could just be my lack of imagination :)
Debug symbols. All the labels you use in your code normally get compiled out. The Debug version retains links to the labels/symbols so that you can use the debugging functions. 
Yes I did, I rebuilt it, cleaned it, restarted V.S. and have even tried it on my work computer versus my home computer. D:. Thank you for the tip about the key to the resource, I will do some further reading on that.
The issue here is one of covariance and value types. Arrays and some interfaces (including `IEnumerable&lt;T&gt;`) support covariant type arguments, but not for value types. Unlike reference types, value types cannot be directly cast to an interface because they're not really objects. To be treated as objects, they are "boxed" into a wrapper object, which is done automatically anytime you assign or pass a value type typed as an interface or as `object`. This works fine for single values, but it cannot be done automatically for things like arrays because it changes the underlying representation of the value and would require a whole new array containing the boxed values instead of the original values. I hope this is somewhat comprehensible, it's kind of hard to explain. Doing what you're trying to do with `string` will work just fine, because strings are reference types and don't need to be boxed. But `int` is a value type, so it doesn't work there. However, there's a solution in the form of generics with type constraints. You cannot cast directly from `int[]` to `IEnumerable&lt;IComparable&gt;`, but you can create a generic method that accepts any `IEnumerable&lt;T&gt;`where `T` is an `IComparable`: void Sort&lt;T&gt;(IEnumerable&lt;T&gt; items) where T : IComparable { // ... } And when you call `Sort(someIntArray)` the runtime will automatically compile a method of `void Sort(IEnumerable&lt;int&gt; items)` and the integers don't need to be boxed. Edit: Also, I would recommend you use the 'new', generic `IComparable&lt;T&gt;` instead of the old `IComparable`. There is no reason to use `IComparable` unless you happen to work with old code that was written before generics were introduced (years ago). And with generics you can use the invariant `IList&lt;T&gt;` instead of `IEnumerable&lt;T&gt;` to sort in-place if you want.
you can upload the solution and pm me a link and ill take a look if you want
&gt; Unlike reference types, value types cannot be directly cast to an interface because they're not really objects. To be treated as objects, they are "boxed" into a wrapper object, which is done automatically anytime you assign or pass a value type typed as an interface. This works fine for single values, but it cannot be done automatically for things like arrays because it changes the underlying representation of the value and would require a whole new array containing the boxed values instead of the original values. I hope this is somewhat comprehensible, it's kind of hard to explain. I vaguely recall reading about this in C# In Depth, but didn't quite internalize it at the time since I never actually encountered the issue in practice. It does make sense though. I'll play with your suggestion and see how it goes. Edit: worked perfectly.
I used Visual Studio only to work on non-UI related issues, did the rest of my OS X application on a Mac. Setting up views with Xcode and wiring everything up with Xamarin Studio. Xamarin Studio is fine for that purpose.
There is no data loss even if you fuck up a merge 
No, but there is a gigantic pain in the ass as you try to figure out the right set of commands to undo whatever you just did, if you even know what you did or why it ended up in a clusterfuck. Unzip is a hell of a lot faster and easier.
That should work. The editor is really bad at resolving, especially when the designer is open. If change the "_DebtorList" to a property (make it public and add {get; set;} ) then add &lt;ListBox ItemsSource="{Binding DebtorList}"&gt; &lt;ListBox.ItemTemplate&gt; &lt;DataTemplate&gt; &lt;StackPanel&gt; &lt;TextBlock Text="{Binding FirstName}" /&gt; &lt;/StackPanel&gt; &lt;/DataTemplate&gt; &lt;/ListBox.ItemTemplate&gt; &lt;/ListBox&gt; to the grid in your view, when you run the app (press F5), you should see "Bob" on the screen. Aside from that, I would recommend you make the _DebtorList of type ObservableCollection. I would also recommend you have the VM implement INotifyPropertyChanged.
Is it straight up deleting them? That is, they no longer appear in Visual Studio at all? Or marking them as disabled? Or simply skipping/ignoring them?
Deleting them. They are completely gone. I have just now tested and figured out it's actually deleting them when I save a file. Still no idea how that came to be though or how to correct that.
Yeah, I've never heard of that. I know it's kinda form-letter response, but try running VS without plugins and extensions (https://msdn.microsoft.com/en-us/library/ms241278%28v=VS.80%29.aspx), and failing that a fresh install. Maybe try debugging on another computer. Are you doing anything particularly out of the ordinary? Is it a standard-flare project? Are you hooking into a special debugger (like the Unity3D VS Tools or Xamarin)?
Thanks!
Thanks!
XAML warnings like those usually do not mean anything and are just bugs with using the design view. We get them all the time in our software and they go away once you close the xaml file. Our main solution for this is to turn off the design view window completely and only code in pure xaml. 
Marking this for me later tonight.
An Expression is a node in an expression tree which can collectively defines any function representable by a lambda. In C# you can write out an expression by writing a lambda and assigning it to an expression variable. You can then call the Compile method on said expression to obtain a function which does what the expression expresses. But why go through all that when you can instead pass a Func&lt;T1,T2,...,TResult&gt; or an Action&lt;T1,T2,...&gt; which tells the compiler that the lambda assigned to the variable must actually be compiled to IL during compilation rather than runtime (and the variable is now a function pointer/delegate). Perhaps just as importantly Action and Func&lt;&gt; allow any method to be referred to rather than only expressions (as Expression&lt;Func&lt;&gt;&gt; and Expression&lt;Action&gt;).
Long time .NET desktop developer. I've done one ASP.NET MVC app that was nothing more than configuration and scheduled task initiator. Looking to gain more experience on web development. Count me in.
I agree with this guy, try debugging code compiled in release mode.
Wow! Watching Episode 1. This is soo goofy! I'm enjoying it though. Thanks for the link.
I get the opposite - breakpoints I swear I deleted days ago just reappearing at random.
you're switching the zone variable which is equal to ""... that doesn't match any of your case statements, so default is used. Here is a switch statement example; var favoritePizza = Console.ReadLine().ToLower(); // To lower helps with case-sensitivity double pizzaCost = 0.0d; switch(favoritePizza) { case "sausage": pizzaCost = 12.75; break; case "cheese": pizzaCost = 11.50; break; case "pepperoni": pizzaCost = 11.75; break; default: pizzaCost = 10.00; break; } This switch statement is the same as saying the following; if (favoritePizza.Equals("sausage")) { pizzaCost = 12.75; } else if (favoritePizza.Equals("cheese")) { pizzaCost = 11.50; } else if (favoritePizza.Equals("pepperoni")) { pizzaCost = 11.75; } else { pizzaCost = 10.00; } hopefully this helps you understand how to use a switch statement. Edit: added example for clarity
Yeah. You need to set the zone string to some textbox.text value or whatever control you're using
I just did that and it worked. Thanks
my vote would be two methods (tests) as well. I normally try to test one thing per test. But i use MSTests too... which to my knowledge doesn't support multiple parameter value tests. [TestMethod] [ExpectedException(typeof(ArgumentNullException))] public void DoSomething_NullVarAParamater_ThrowsArgumentNullException() { DoSomething(null, "nonNullValue"); } [TestMethod] [ExpectedException(typeof(ArgumentNullException))] public void DoSomething_NullVarBParamater_ThrowsArgumentNullException() { DoSomething("nonNullValue", null); } But i am still learning TDD, or testing in general. 
I would use xml or json serialization instead of writing your own
I use the iserializable interface, is that not a good idea? One of my C# instructors said I should use it 
It looks like he does: https://blog.xamarin.com/first-developer-evangelism-intern/
join the slack 
My team has had success (providing all WI state legislators and legislative service agencies with sites, including custom development) with umbraco.
Zone doesn't have anything assigned to it to allow a conditonal decision to be made. You are comparing x,y,z to and empty variable. You need to assign zone first before using switch ie: int variable = 3; string name = "john"; switch(variable) { case 1: //Run code break; case 2: //Run code break; case 3: //Run code break; default: //Run Code break; } switch(name.ToLower()) { case "Jim": //Run code break; case "jOe": //Run code break; case "john": //Run code break; default: //Run Code break; }
Thanks, I'll check it out.
Thanks, that helps :)
this is the highest rated response but it isn't fully correct. it might even be wrong. How else could you debug a crash dump? For example we generate the PDB files when we deploy in "release" mode so that if we take a memory dump we have the files. Not to the actual question from OP - the difference between a release mode DLL and debug mode DLL is the optimization. Both DLLs are debuggable. For more information on generating the PDB files for releases check out this article on the pdbonly option. Once you start troubleshooting anything tricky you'll be thankful you have those PDB files. https://msdn.microsoft.com/en-us/library/8cw0bt21(VS.80).aspx edit: to see the difference between the two build configurations look at the csproj. should look something like this &lt;PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' "&gt; &lt;DebugSymbols&gt;true&lt;/DebugSymbols&gt; &lt;DebugType&gt;full&lt;/DebugType&gt; &lt;Optimize&gt;false&lt;/Optimize&gt; &lt;OutputPath&gt;bin\Debug\&lt;/OutputPath&gt; &lt;DefineConstants&gt;DEBUG;TRACE&lt;/DefineConstants&gt; &lt;/PropertyGroup&gt; &lt;PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' "&gt; &lt;DebugType&gt;pdbonly&lt;/DebugType&gt; &lt;Optimize&gt;true&lt;/Optimize&gt; &lt;OutputPath&gt;bin\Release\&lt;/OutputPath&gt; &lt;DefineConstants&gt;TRACE&lt;/DefineConstants&gt; &lt;/PropertyGroup&gt; See the article above for more information about what debugging can be done when you specify PdbOnly, and the link I posted earlier for what the optimize will do to the DLL.
MailKit actually was the worst out of the bunch, at least for ease of use. You can't use the client from within its event handlers, which makes reacting to new messages an absolute pain. Even their own IDLE example is like 300 lines long and gives up short of retrieving messages and actually just contains a comment along the lines of *"You can't do what you're obviously trying to do here"*. I think that's also the one with the silly Task wrappers.
If you can rewrite the unmanaged code prefer that you give it a buffer to write to. int ComputeHash(const char *input, int inputLength, char *output, int outputMaxLength) There are numerous issues with returning a pointer to an array. You give the caller the responsibility of freeing it, and depending on where that fubction is located the caller may actually be unable to. One module cannot necessarily free the memory of another without being given that modules free function (which is why you see libraries like libpng or zlib give the ability to override alloc and free). If you however give the method an array to write to you can simply use `[Out]byte[]` data type in C#. Return the number of bytes written to that array in the function so that the caller knows how much to read (if any).
If you have any add on that modifies files on save automatically (formatting or changing line breaks etc) you'll get this sort of behavior.
The window size has nothing to do with your color. Have you made sure resolutions are the same.
I've had this happen when deleting the breakpoint while debugging. Might be the same for you.
I'm not doing anything out of the ordinary, and I'm not using a 3rd party debugger, but I do have some addons. I will try the form-letter solutions, thanks!
D'oh! I'll definitely give this a try as well. Thanks!
Welcome to software development, kid!
Download the ISO. https://go.microsoft.com/fwlink/?LinkId=615448&amp;clcid=0x409
OP is doing this as an excersise, so I thought it was a cool idea.
It rarely does :p. But sometimes. 
These might be his own classes, though, so it wouldn't be too gritty :p. 
Thank you guys!
I've not seen this in 2015, but in previous versions if you open "Breakpoints" window (Ctrl+D, B), you might notice that some breakpoints have "+" to expand them. I've had hundreds of same breakpoints there and after removing them the removed breakpoints didn't come back and it also felt like debug mode ran faster.
socmonkey05 sure i'll try my best on this 
I'm not sure what you're asking, the c# example you gave is already pretty neat and clear.
The switch statement on *strings* actually compiles to a bunch of if statements. If the switch has a *load* of cases, it instead... &gt; But if number of conditions is big enough to cover overheads, C# compiler will create a HashTable object, populate it with string constants and make a lookup on that table followed by jump. Hashtable lookup is not strictly O(1) and has noticeable constant costs, but if number of case labels is large, it will be significantly faster than comparing to each string constant in IFs. Source (no additional sources in the answer though so this could be all baloney): http://stackoverflow.com/a/395965/996081
Hi, I am not sure what you are trying to make here. What do you expect the result to be? In .net users.Where(u =&gt; u.Age).ToList(); would return a List&lt;User&gt; (for whatever type users is) where User has boolean property Age equals to true. Maybe you are looking for users.Select(user =&gt; user.Age) that returns IEnumerable&lt;TypeOfAgeProeprtyOnUser&gt; which is basically list of user ages?
I'm not able to try it out right now but it should due to a feature called generic type inference or something. The compiler will fill in the generic type for you if it can infer what it/they are based on the function parameters you passed in. It's why for example LINQ extension methods work without you having to tell it the type of collection. myCollection.Where(o =&gt; instead of myCollection.Where&lt;MyObject&gt;(o =&gt;
Will try now, thanks
????
Edit I told u right I took an ISO already from a friend when I try to open same story it shows that visual studio symbol then stops working
yeah, it's odd that the java version is 2x as long and you are claiming syntactic sugar. plus the c# =&gt; java select =&gt; map where =&gt; filter groupby =&gt; reduce ?? not entirely sure about this orderby =&gt; sorted skip =&gt; substream take =&gt; limit 
Could be, I didn't expect it to matter. Zombie breakpoints.
I tend to keep the same VS open for weeks and sleep my computer, so could be because my session never ends.
Use system colors for your controls, they are like dynamic resources.
No, C# doesn't have a such operator. Unfortunately. I'd really like that, it has been nagging me some time, but didn't know that Java had it. Edit: For those who can't see the point: Being able to write (inventing my own syntax here) users.Select(@.Age) instead of users.Select(u =&gt; u.Age) means that we don't have to declare a variable, which makes both code clearer sometimes, but especially makes nesting easier, where these variable names quickly start to collide. Edit 2: Woah, there is a proposal in the roslyn repo, also using the @ symbol: https://github.com/dotnet/roslyn/issues/3561
hard coded was thinking about using an array but i thought it maybe could have been done easier.
you can just click the save link on his comment, fyi
Isn't the User::Age just a getter _function_ for whatever is in backing store? In C# there is no way to pass an object instance function without also having the specific instance of object already known. The only way around it is to have a function that operates on an object, and that's what most of the linq functions expect to get: Func&lt;User, int&gt; getAge = (u) =&gt; u.Age; users.Select(getAge).ToList(); Obviously this doesn't make much sense, but the getAge could be any function pointer (for example a separate function in same class) that takes single User as parameter and gives correct result. If the User class had a static function "getAge", you could pass that as "User.getAge". Even non-static function of User, but then you'd have to get and instance of user to pass that on.
Yeah i have this problem - LESS tab is not present in options -&gt; web essentials. I don't have support for less in editor or autocomplete... :\
As a minor quibble, the @ symbol's already in play for variable definitions. @reservedKeyword and @.reservedKeyword don't scan as all that different in the absence of color-coding. Yes, I'm bikeshedding.
Well, it's a valid point anyway. `&amp;` maybe? Or `::`, to honor Java!
do people actually talk like this
Yeah agreed - I was being a bit ELI5