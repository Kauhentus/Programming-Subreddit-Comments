I think that's the point tho ? its a piece of paper that says "this person has learned enough stuff to warrant this cert" I'm not saying a cert on its own is enough, but surely when youre looking at an application, and you see some certs in useful fields, thats a plus ? I have also been in positions of hiring, although not in IT, and I always viewed certifications as further evidence that said applicant is trying to improve themselves, and is capable of studying &amp; learning in their own time.
We've all made the same mistake at some point. 'Things are slow, lets speed the CPU up'. In reality the network trip and query itself are the bottleneck and are most likely taking up 99% of your time, multi threading won't help all that much. Before you start digging into entity framework please learn the basics of SQL and database design, anyone who says it's fine to use entity framework (or any other ORM(object relational mapper)) without understanding how a database works is the reason ORMs have have a bad reputation for performance and result in a unmaintainable mess. Databases are not like OOP based code and should not be treated as such, unfortunately you have fallen right into that trap. Yes there's a bit to learn but it's faster than blundering around entity framework using trial and error to fix things until it starts working. To sort things out you need to think about the following instead of trying to multithread your IO bottleneck away: 1. Reduce the number of calls to the database as much as possible and optimise them, your code could probably be a neat LINQ block that does 90% of the work on the database, this is why understanding a database is important. 1. Next, if you still have multiple queries, run them concurrently so your only as slow as the 'weakest link' (this is where async + Task.WhenAll is brilliant). That's it for concurrently processing as the bottleneck is all in the I/O anyway. 1. For EF/EF core you may have some warning messages about things being evaluated locally, this slows things down and should be avoided wherever possible, try and get rid of all those statements the log is complaining about, Step 1 should have removed all of these though.
I default to SQL Server because SSDT projects make working with databases + source control just like any other type of project. If PostgreSQL offered something similar I could see myself changing.
Thanks!
C# 8 will definitely have it. Feature work on `?? =` had been completed. 
Great answer. I feel better having read this!
Hey man, keep up the good work! One thing that really bothers me in code reviews, is when people evaluate their boolean expressions like you did i.e: `if (user.IsExpired == true) { ... }` It works, yes, but, try this instead `if (user.IsExpired) { ... }` And if your checking if the user is NOT expired `if (!user.IsExpired) { ... }` &amp;#x200B; I realize you didn't ask for a code review, but this is the same thing I'd tell one of my developers, so hopefully you don't take it personal! I realize some of what you posted is psuedocode, so if you already know this exclude my comment!
&gt;Being beholden to new frameworks and the latest "web standards" (which aren't standards at all) just gave me headaches because I felt like I had to constantly relearn how to do my freaking job Any examples of what you consider a standard but not a standard? The web is easily the most standardized area of computing right now and it's relatively easy to write something that "just works" regardless of the platform that it actually runs on. Comparatively, I worked for a company in the embedded industry specifically on a cross platform library written in C. It was a monster of \#ifdefs because so many platforms did things slightly different and because so many behaviors are simply undefined in C. You're right that it's a headache keeping up with the ever evolving frameworks and every new standard brought about.
I think as soon as webassembly is fast enough on standard PCs, blazer will be left behind by another isomorphic platform. 
Really? Modern day COBOL? I hate the JavaScript but even I can’t put the two in the same bucket. 
Take a look at [Arcus](https://github.com/sandialabs/arcus) on GitHub. I’ve used it at work successfully for dealing with subnet and IP address related parsing and operations. 
&gt; Its going away. lol
No native way to do that. MessageBox is a helper class to start with, not some kind of core component. So you will need a custom control to mimic the functionalities of a MessageBox; this way, you'll be able to add any custom functionalities you wish. Fortunately, you're not the first to have this kind of request: https://github.com/evanwon/WPFCustomMessageBox You can also use the Extended WPF Toolkit's MessageBox, which allows you to change the content of the Yes/No/Cancel buttons to display whatever you want. It's still kind of a hack to my tastes (since semantically, the buttons are still referenced as Yes/No/Cancel in code), but it gets the job done. https://github.com/xceedsoftware/wpftoolkit/wiki/MessageBox#buttons 
Yeah, JS doesn;t hold a candle to COBOL
People likely need an understanding of the impact Web Assembly will have before they can understand why Blazor is an important next step.
This is why I'm learning it. I plan on getting a decent raise in a year or two once it has had some months to mature as an officially supported feature.
If I can literally pick any one, then HTTP is not a standard in your opinion? Standards aren't guidelines and if you actually read RFCs they're pretty explicit about it. They even go so far as to explicitly define language like "must", "should", and "may" so there isn't an exception. If a browser handles something incorrectly, they're simply not standards-compliant. Don't take my comments to mean that browsers implement everything perfect 100% of the time. But a standard is a protocol that's openly defined and free to implement by anyone. The web is literally built around standards, and thankfully we've gotten away from the days of non-standards web programming like silverlight and flash. But I think we're just thinking different things when we say "standards".
It's easy to say "the standard is the standard", but the reality is that nobody agrees on what that standard means in every single detail. But don't take my word for it, here is what HTML5test.com says: https://html5test.com/about.html HTML5 means different things to different people. You could argue that HTML5 only includes features that are defined in the W3C HTML5 specification. Or you could argue that it includes every specification, draft or experimental feature that is added to browsers in the last couple of years. We decided to take the middle ground and split the test into three parts: the official HTML5 specification, specifications that are related to HTML5 and some experimental new features that are extensions of HTML5. Many of the related specifications were at one time part of HTML5. During the development of the specification they were moved to separate specifications.
I wouldn't
That quote doesn't say that no one can agree on what the HTML standard is or how to adopt it.
Apologies to all cobol developers :)
1. I ended up returning IResult for commands or IResult&lt;T&gt; for queries to handle any error cases. if it is null, return null. It is up to the caller to determine id that is valid or not. 2. For queries, the return object requires the query implement an interface to map them correctly. For commands, you can technically not put one on and it would work just fine. Some probably use it to force the generic constraint, but you can skip that here. 3. No, having a specific interface isn't going to help you unless you are against using mediators and dont want horribly long types being defined in your constructors. The verbose interface can be used to add decorators which gives you a huge amount of power to code cross cutting concerns for all queries or commands now and any in the future.
Oh no? [https://thehistoryoftheweb.com/when-standards-divide/](https://thehistoryoftheweb.com/when-standards-divide/) [https://en.wikipedia.org/wiki/HTML5#W3C\_and\_WHATWG\_conflict](https://en.wikipedia.org/wiki/HTML5#W3C_and_WHATWG_conflict) I don't mean to belabor the point, but standards are created by people and corporations all with their own motivations and goals. Unless you've got a situation where one group controls the standard (i.e. Sony's blu-ray), you're likely to have disagreements.
&gt; The "markets" for the two specifications are largely different. The W3C spec is the one that Web developers most often refer to, while the WHATWG version is used by the software development teams of the browser makers (though a version exists for Web content authors, trimmed of the material only of interest to browser coders). New features are added to HTML and, often experimentally, to browsers long before they appear in a W3C spec, because they arise in the WHATWG one. And if you look at the differences between them, they don't really back up your claims.
As myObject would be a class created by you, you would have to write the TryParse method yourself for it to be called. If you needed to put it lots of places or use multiple variations you could use an interface IParseableObject or something like that.
Thanks for the feedback! I'm not taking it personal. :-)
I'll look into this.
Good points all! Spent the day doing more research. I'LL BE BACK! 
We all want blazor. Last year. But sadly Microsoft needs to publicly announce support and resources behind this before its taken seriously.
This looks pretty sweet. I've been looking for a good command line parsing library so I'll give this a go!
[removed]
Look for tutorials using WPF (Windows XP -&gt; Windows 10) or UWP (Win10 only) those will point you in the right direction. As for MVC or MVVM, I prefer MVVM in WPF environments, but it's up to you.
This article hasn't improved since you posted it in r/dotnet. The writing is confused, the point vague, and the example is so badly formatted, it's almost impossible to read. If I understand the point you're trying to make here, you're indicating that there's a difference in how NULL values are handled in a Linq-to-Sql query vs a Linq-to-Entities query. Well yeah, of course there will be. Linq-to-Sql is executing a SQL query and the column values in your example are handled by the database. Given your example database query: IEnumerable&lt;Person&gt; persons = _db.Persons.Where(x =&gt; x.Name == personData.Name &amp;&amp; x.PersonLoc == personData.PersonLoc); You might see Linq generate a SQL statement as something like: SELECT [Extent1].[Name] AS [Name], [Extent1].[personLoc] AS [personLoc] FROM [dbo].[Persons] AS [Extent1] WHERE (([Extent1].[Name] = @p__linq__0) OR (([Extent1].[Name] IS NULL) AND (@p__linq__0 IS NULL))) AND (([Extent1].[personLoc] = @p__linq__1) OR (([Extent1].[personLoc] IS NULL) AND (@p__linq__1 IS NULL))) All of the translation is handled for you. However, in a Linq-to-Entities query you will be working with the null property value directly so database columns have nothing to do with it. Your claim of: &gt;you are using "x == y " in where clause, It will be converted into x = null in SQL. Doesn't make sense at all for a variety of reasons, not the least of which because Linq-to-Entities won't be generating SQL. In C#, `(null == null) is true`. In SQL, `(null = null) is false` and `(null is null) is true`. Don't conflate the keyword `where` in SQL with its usage in Linq. They're different things, and when using EntityFramework the mapping of the predicates is done for you. Another thing to keep in mind is that Linq-to-Sql is mapping .net methods to SQL-equivalent patterns. It doesn't support them all. Your best bet is to write your Linq query and monitor the SQL generated by the statement (which is how I showed the SELECT statement above). For example, IsNullOrEmpty(x.personLoc) may generate a WHERE clause as: WHERE ([Extent1].[personLoc] IS NULL) OR (( CAST(LEN([Extent1].[personLoc]) AS int)) = 0) So, do some more research. Clean up your code. Find someone who is both savvy in the material and can be an editor for you.
You'd probably be better off using a column default `default next value for mysequence` or even an insert trigger rather than making EF waste time calling an inline stored procedure to fetch it for you. The sequence is a database object and EF doesn't need to know about it.
Visual studio code
I tried toying around with that and was not a fan. Plus I couldn't get the debugger to work either. I suppose I can keep messing with it if it's the only choice.
Monodevelop
awesome, if you can let me know how it worked out and if you run into any issues. more than happy to help!
I read somewhere that isn't being maintained anymore, you know if that's true?
You haven't backed up anything except to say I'm wrong every time. I think you're just being purposefully argumentative. And I think you're naive to think that everyone is 100% in agreement with what html 5 means. I'm done debating this. 
I don't know tbh, but I guess it would say on their website if it was, but it doesn't, so I doubt it at lest.
The short answer to keep it simple is that you're looking at plain "asp.net" and web forms. Longer answer... ".net MVC" is newer than "asp.net" and takes advantage of very different methods of routing users, handling data models, and presenting views. ".net core" is even newer and a much more general technology than either "asp.net" or ".net MVC". It's a framework for developing any kind of application, such as a background API, a web app, or a desktop app, which will run fine on both Windows and cross-platform environments. Windows typically uses the ".net full framework" and other OSes use the ".net core framework" to host applications, though like most things the line between it all is getting more blurry every day. Keep ".net core" in mind as this is likely where .net development will take a major swing as people become comfortable with it and the technology matures. Microsoft is also open sourcing a lot of it so that also is a step in the right direction. There's also a lot of overlap with all of the above and a host of other technologies you probably haven't been introduced to yet, but don't worry. Take each thing one at a time and it'll become familiar over time as you learn. In your code above, the asp.net framework will render that &lt;asp:TextBox&gt; control as an &lt;input type="text"&gt; textbox for the browser. It will handle the viewstate for postbacks and partial page updates and a bunch of other things. The point of any framework is to take the grunt work out of your hands and put it into an automated system where you fill in the details and let the server do the boring bits. Alternately a ".net MVC" Razor page might do something similar to create a textbox in a view with a built-in html helper like `@html.TextBox("TB1", null, new { @class = "somecssclass", MaxLength = 5 });` Or you can just use a regular html textbox without the helper. Ultimately both examples provide a textbox to the browser. CSS styles the elements of the page, javascript runs in the browser to perform client-side actions, and data is sent between the browser and the server to do the work. Web Forms is a decent place to start learning web apps, just like Windows Forms (while a bit dated) is still a good place to start learning how the Windows OS deals with a desktop application.
It's not exactly image processing what I'm trying to accomplish but rather a interface where the user can draw simple diagrams (placing objects in a sheet, connecting objects to create simple relationships (A is linked to B), like how in PowerPoint you can place boxes and link them with arrows
&gt; I have a nose for throw away tech. &gt; Angular + React are strong foundations People who adopted Angular/React early said the same about it.. 
Usually used for tools that convert one high level language (C#) to another (JS). "Compiler" usually refers to a tool that converts a high level language (C#) to a lower level one (IL). We have 2 good examples: Roslyn (C# -&gt; IL) and the various "JIT Compilers" (IL -&gt; x86, x86-64, ARM, etc.)
You may have to go for one of the control libraries like syncfusion, telerik, or devexpress. Those support the kind of tools you're looking for out of the box. Examples [Syncfusion SfDiagram](https://help.syncfusion.com/wpf/sfdiagram/overview) [Telerik RadDiagram](https://docs.telerik.com/devtools/wpf/controls/raddiagram/overview)
do you know which mouse event it's linked to? If you know the mouse click event/buttons that trigger when it happens, just catch the event at your top-level control and do what you need to do
The team got bought by Microsoft and MonoDevelop has been rebranded and continued development under the name "Visual Studio for Mac". It's not supported for Linux.
I tried removing all the initialization in my viewmodel constructor and still gets the error, I even tried using different view model but still has the underline on the datacontext. The whole project works fine but its kinda annoying to see that error.
Not really do exam 70-483 
When CoreRT's C++ target is used then it's probably called transpiling :) Found out couple weeks back that there is also another C# to C++ "transpiler" that hasn't been open sourced yet http://brute.rocks After reading that article transpiler term is pretty vague and means different thing for different people, maybe it's better it's not used it all.
&gt; e for exploitation and you respond about url letter casing and dashes? honestly, all legit criticism when someone asks for a review of code is useful I am not sure why you are getting downvoted. good endpoint structure is just as good as security concerns. 
Compiled expressions are a nice tool to know, but there are some pitfalls: 1) they are extremely hard to debug. You can’t see the stack because there is no code for it. 2) they are error prone and insecure. For example you can create a way to make your own scripting language with it, but the user data could end up making a malicious program and executing it. Normal reflection is more secure is this regard. 3) Building code from expression trees is extremely slow, there are faster ways, see the original solution. 4) I think that if a user can select a property of an object by property name, you are doing something wrong. Names change. 5) A switch statement is not per definition evil. As long as it is in one place and one place only. I forgot the name of the design pattern.. (Found it: a Factory) However you could also use an index to a static list/array. That is damn fast. They used to do that in C. 6) Expression trees are awesome, and that is the core of this article. I agree with that. Nice article!
ASP.NET MVC really? No new project should be started with it. ASP.NET Core is the way to go. 
Unity also has IL2CPP 
WebApi too. Combine it with a frontend framework for maximum satisfaction.
Idea for webforms was good, but it's implementation wasn't. I think reason why you don't understand is that you think everyone has same requirement as you when making web sites/apps. Example having security that server side provides because everything is running in server shouldn't dismissed so easily.
I don't think JavaScript is going away anytime soon, but WebAssembly will make it lot less important.
You're thinking of serialization.
Rude response, m8. It's not an easy thing to answer with Google for someone new to [ASP.NET](https://ASP.NET). Web Forms isn't exactly ancient, either, and is very widely used. I would advise against it for new development, however.
Jetbrains Rider is pretty damn awesome 
Oh hey I did this for an university/intern project a few years back (it was a module where we worked with real world clients and were taught and marked on our professional development skills as a whole, not just code) ! We were rebuilding what was essentially a crud tool for a client that had to work on the existing database; and after our first sprint where we built the page for one table I noticed that the amount of columns to query meant we had a tonne of lambda statements for the search box field (one for each, and then a massive one for searching all columns). I thought "this will take forever if we keep going like this" and we'd just learnt reflection in one of our modules so I decided to look at building something that could do it dynamically. It ended up still being some of the best code I've ever written and it worked amazingly by the end. I ended up getting 100% marks for the technical development aspect as well as about 80-90% for the business skills as the code was designed and implemented to save the business time overall. 
Fix rider.
There's the built-in System.Net.IPAddress class that has methods like Contains() to check if something is within a network range, etc.
I notice in the stack trace its entering a potential error handler ( ErrorCallbackHandler is 4th from the bottom) so perhaps this is also a red herring and you are hitting an error earlier in the response. &amp;#x200B; Perhaps try checking your credentials are working, does a simple s3Client.PutObject work?
Thanks for the explanation!
Yes! Once I ended to learn Angular for work I’ll begin to use it.
I shall try that one. But the file is uploaded to the bucket. So should credentials be the problem in this case? 
I tried using it like a singleton, same error
I shall try this solution
It’s one of the things that motivates me to try it, even if it dies it’ll open me the doors to webasm based developement (the future, I hope).
This is the guts of how [`System.Linq.Dynamic`](https://www.nuget.org/packages/System.Linq.Dynamic/) works.
treat it just like everything else. Come up with a demo project that would demo what you would use it for and try and build it. See what you find.
TypeConverter can be used to do this: https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.typeconverter?view=netframework-4.7.2
`Convert.ChangeType("123", typeof(int))` So long as the type implements `IConvertible` then you can use this. I'm also rather fond of this small piece of code: public bool TryChangeType&lt;T&gt;(object value, out T result) { try { result = (T)(Convert.ChangeType(value, typeof(T))); return true; } catch //We don't care why, this is a try method after all. { result = default(T); return false; } }
So the difference is essentially semantics, and they do the exact same thing in principle?
I did something similar in EF after reading [this article](http://www.albahari.com/nutshell/linqkit.aspx). Basically I created a partial class of the entity I wanted to expand, which contained an inner class holding all the predicates (just for readability) public partial class User { public static class Predicates { public static Expression&lt;Func&lt;User, bool&gt;&gt; HasId(int ID) { return user =&gt; user.ID == ID; } public static Expression&lt;Func&lt;User, bool&gt;&gt; HasName(int ID) { return user =&gt; user.Name != null; } } } So I could use it like this .Where(u =&gt; u.HasId(1)) .Where(u =&gt; u.HasName) 
What's up with VS Code? I can help you fix the debugger but what do you not like about it? It's quite customisable so we can probably fix anything you don't like with extensions and settings. 
Which is the recommended way to do dynamic queries since you are concatenating text and building a SQL-like query instead of building more complicated expressions.
That's a fair point, but surely a passionate and self motivated developer would always trying to push for new technology and learn it inside out? I don't think a cert shouldn't motivate someone. 
Is this an attempt at spam?
&gt; is there a good book/course for developing desktops apps? I can only find books/courses on developing backend, REST services and the sort, never about desktop apps. I just purchased two books this week. They might be helpful to you: * [C# 7.0 in a Nutshell](https://www.amazon.com/C-7-0-Nutshell-Definitive-Reference/dp/1491987650/) * [Programming WPF](https://www.amazon.com/Programming-WPF-Chris-Sells/dp/0596510373/) 
What?
&gt;System.Linq.Dynamic is awesome :D
Your best bets are Jetbrains or VSCode with the C# plugin. I have a bit of a mental problem enjoying VSCode too, but keep in mind even though it is an electron app it is a \*very well built\* electron app. It really is good. &amp;#x200B;
Thanks for your input, attacking it in this way did yield decent results in time savings. I will use your tips to reduce calls and try and sum the code up into a linq statement. 2: Issue here is I am loading translations across up to 30 different languages and instead of it being 1 items with 30 datapoints in 30 items with 1... concurrently processing them with tasks, chomps at the cpu, the way I did it at least then multi threading. 3:I will check the logs and see if I can get those all removed. Thanks again for you input.
&gt; Web Forms isn't exactly ancient good joke
Genius, ill be useful in accomplishing a task in 10 years then, as the database side of this has been going on for 30 yrs, there are stored procedures for most things, but importing a excel sheet that was just made, is not one of them..
I was going to write something similar, but you pretty much nailed it. I agree with your agreement that the core of this article is simply an expression (forgive the pun) that trees are great. Unfortunately, beginners and mid-levels alike don't only see articles like this as praise to a tool, they copy paste (which is bad enough) or Even Worse (yes, worse than C/P code), they Learn their programming habits and items from them. I hope nobody actually uses the code or patterns in the article. The core is great, but the implementation is not.
I'm in no way associated with them, I just saw it, liked it and wondered if anyone can share something more about it. I just posted a link to a nice open source project, that's all.
If you mean, can the sequence start with "9100001" and increment by 1, then yes. That's part of the sequence definition. The column default simply defines which sequence to use when generating the default value.
This is basically the beginnings of implementing the specification pattern. :)
Is the designer open source too or something that needs to be purchased? 
Sure. Asp.net core MVC.
Welcome to world of enterprise and industrial software. Winforms or WPF, take your pick - except if you are stuck with maintenance, then it's only winforms. Also, its great for building tools (config and deployment) because you can build functional UI using drag'n'drop in minutes.
Someone is living under rock last few years... Ever heard of .net core?
&gt;specification pattern Wow, I'm reading about it now. Thanks
404
If I had to guess, it's the Microsoft Excel interop that's taking all the time. Your program is launching Excel, reading the data, closing Excel, then repeat for the next file. Check out [EPPlus](https://github.com/JanKallman/EPPlus). It will let you read the Excel files super fast and it doesn't use Microsoft Excel at all.
No readme, no demo of it running, I'll pass
It's my first project posting on git.. This is how I learn. ..
Maybe post a screenshot or quick video?
Added a readme (I suck at them..) Not sure where to put a running demo.
Done! Thanks for the tip.
Addressing some of these points (that I fully agree with) for when there's no better way but to use this technique and you really need expression trees. 1. Log `.ToString()` on your root in the Expression tree. They were nice enough to give you the lambda output instead of the class. 1. Never build executable code from user input, match user input to a whitelist and build your executable code from the whitelist. 1. Slow in the sense that you don't want to be building expression trees in a tight loop where N is not controlled, but if you're doing something like building one expression tree per web request and handing that expression off to a LINQ provider don't sweat it, it's not significant. 1. See point #2, use a mapped whitelist for selection which may or may not be 1 to 1 with a property list from a class. No reason it has to be. 
JetBrains Rider, or VS code.
https://www.dotnettricks.com/learn/designpatterns/gang-of-four-gof-design-patterns-in-net
I have found n tier can be a little limited. I try to use onion nowadays.
Error message would help.
I didn't even notice that I was using ". Xls" format. I'll update that. Thanks so much for link. Time to start reading 
I think the best way to learn about them is build a lot of things. Practice making real software a lot. Figure out when and if design patterns make sense. I almost never think about them and things are fine. I probably use a few without realizing it. Many design patterns that you might see in popular books are only there to get around limitations of a particular language, like lack of globals or lack of first class functions and so on. So never treat them like dogma. I'm not sure they are a good way to think about software. Instead, if you run into a problem you can't figure out how to solve nicely, you can go review some design patterns and see if any make for a nice solution. &amp;#x200B; &amp;#x200B;
Bonus upboat :) I'm not fan of the book, but your post says you're someone I'd hire if a role opened up. Sorry OP, I'm taking the Phoenix ;) 
Please don't. N-tier (usually 3, sometimes more) is a database centric approach. Onion is a vegetable and just as bad at scaling as n-tier, because of the tasty oniony bit in the middle. More seriously it couples layers tightly when done wrong. Google Hexagonal architecture for a slightly more in depth example of what this means. 
You expected perfect code written in 3 minutes?
I expect people to review their own code and put more than 3 minutes of effort into it before they start asking people to criticize it. You are just wasting people's time by giving them such a rough draft.
Most patterns work across languages. They don't mitigate "missing" features they represent repeatable and useful constructs. We're in /r/CSharp, so from your post, we have global variables. We don't use them much because you lose control of who is accessing them and when. Global variables actually fall into the category of the "anti-pattern". A pattern we see and want to avoid. 
Please... as if these people have lives anyway where wasting their time is some enormous fucking tragedy... Sorry I kept you away from you child porn...
I realize that was also more of a book recommendation and not enough of a direct answer. I think there's a lot of value in reviewing patterns and practicing implementing them, but I wouldn't let yourself get too wrapped up in the specifics. Patterns come to me more as a solution to a problem rather than a primary goal. For example, I usually use a repository-like pattern with apps if I'm not sure which DB type I'm going to end up using or because it makes it easier to have tests with mocks. Another recommendation would be Jeff Fritz's (csharpfritz on YouTube and Twitch) coding live stream. He's been building a few apps from scratch and it's one good example of using patterns. He also has an 8 workshop on architecture and patterns that you might find useful.
This guy from this youtube channel has a very cool playlist where he goes through the patterns from the Head First book. He explains it very well and in a not boring way. Definitely check it out. Plus the book is also good so I recommend getting it. https://www.youtube.com/playlist?list=PLrhzvIcii6GNjpARdnO4ueTUAVR9eMBpc
Run!!
You tell me. Apparently you know everything anyway
JavaScript starts interpreted and only JITted when path is hot enough in Chrome and Firefox (maybe other browsers too).
https://docs.microsoft.com/en-us/dotnet/api/system.convert.toint32?view=netframework-4.7.2 https://docs.microsoft.com/en-us/dotnet/api/system.convert.tochar?view=netframework-4.7.2 
Throw design patterns in the trash and focus on design principles. Much easier to remember and learn and then you can basically invent patterns on your own.
Yup, totally agree. Patterns are just there to say, “hey, this has already been done before! Don’t reinvent the wheel, use me.” Leaning on patterns as a crutch or blindly implementing them is a terrible, but common, practice.
I’m gonna try that ToString-thing. Let’s see what the output is. I also would like to add that if you really want to know what the expression tree is, you can use LINQpad from the guy that wrote C# in a Nutshell: Albahari.com . I really recommend it. I like your suggestion to use a whitelist. That is a way better description of the point I was trying to make. When it comes to speed, you can probably also just cache the functions that are created. Especially if there is a limited limited amount of inputs. But yea, it is probably fast enough, there are slower things in life :-)
&gt;Global variables actually fall into the category of the "anti-pattern". A pattern we see and want to avoid. Yet singleton is one of the patterns in the Gang of Four book. 
If you've got some money to spend, Pluralsight has a [great course](https://www.pluralsight.com/courses/patterns-library) on patterns.
Yeah, I just replied to someone who called me out on this exact thing, So anti pattern and code smell are essentially the same thing. Anti pattern is probably a strong code smell, so let's just work with code smells. A code smell (This is not directed at you, but at anyone with less experience who is learning, I don't want to come off as patronising) is any identifiable, commonly repeated bit of code that has limited applicability but gets used a lot because it solves a short term problem regardless of the long term implications (much like heroin. So there are loads of places you can and should use a singleton, and probably fewer but still enough to be aware it's an option, "globals". You have to understand the trade offs and the alternatives. So, I never say don't do X, but do be aware that if we call it an anti-pattern, or a smell, it suggests there may be a better way, unless you've hit one of the many but statistically small number of use cases where it fits. Upvote for your more succinct explanation of these 49 paragraphs :) 
please don't learn GOF design patterns 
Why? Those traditional patterns, even if not suitable for direct use in today’s applications, offer a great opportunity to learn how to use simple abstractions to solve otherwise complex problems. 
You can use the chars as they are, no need to convert them to int. You can use all comparison operators on chars, and you can use subtraction / addition as well. Not using any sort of data structure to store the results is a silly constraint. If what you said is true, the only way you can solve it is very ugly (at least I can't think of another way), it's an if-else branching nightmare with 3 depth and breadth. 
Nice, will definitely look at them :)
Seriously, ReSharper won’t tell you ? OK. Challenge accepted ! 
This kind of seems like a stupid. I mean, a string is an array, for example.But I am curious. What are the topics you were studying in class while you were giving this exercise? And the ones before that? I am thinking about recursion as a solution. That will solve the looping issue. But I dislike the fact that I cannot use arrays (or lists probably) in any way. It will make everything so ugly. Ow, and you can just compare characters as if they are integers. Don't worry about casting. char a = 'a', b = 'b'; if (a &gt; b) { ... }
Don't know about Mono, but .NET Core uses the same (very similar) .csproj (MSBuild) format as the full .NET Frameworm (one major difference is that you don't have to include the file names at all in Core as per convention). The project.json format is not used anymore, it was used when .NET Core was in preview I think 2 years ago. If you care about portability, I suggest you take a look at .NET Standard rather than Core. It does not imply a runtime, only the APIs, so you can refer them from all frameworks (Mono, Xamarin, Core, Framework). 
If they represent repeatable and useful constructs, language designers can build them into the language with a keyword. But often the more powerful language's feature looks nothing like the workaround. https://mikehadlow.blogspot.com/2010/03/functional-dependency-injection.html We're in /r/CSharp, so we know that C# doesn't have currying. It has closures which can also get the job done, but the syntax is terrible. Therefore dependency injection is the preferred way to do it. 
I will try to explain the statement as I would have written something similar. Many people want to use patterns in a religious way without really abstracting them. The design patterns should be used as a common vocabulary to describe problems / solutions. You will most probably never be in a case in which you will need to code them exactly with such interface or implementation. Programmers, in the majority of the cases, have problems with abstractions and love instructions (like the zealots of Agile etc.) If never found yourself in the situation in which you tell someone "here I use a visitor pattern" and you get the response "no because the method should be called in a different way!" our concern can be difficult to understand.
I'm going to he honest, I couldn't agree more. I work in the public sector, and we have to follow pm principles. It has been my experience, the design patterns come from careful understanding of the user requirements. Most of the time, we consider n-tier with wcf. Lately, however, I have been pushing us to use RESTful services, since they are more agnostic than SOAP.
Spot on, although generally only the most low level get incorporated. For c# one example is the using(...) statement. There are loads they could have added I guess. The important part of doing language design is to decide if you want to be proscriptive or embracive. The fact we have the option to learn and apply patterns as we see fit is a huge benefit. I'd be resistant to any language which tried to implement GoF at a language level. It makes C# a great place for new patterns to emerge and existing ones to be refined an optimised. I totally get what you're saying though and agree with you :)
Thanks! As far as I know, Mono requires csproj with all files listed. Is it ok to keep it in .NET Core version too? &amp;#x200B; I am aware of .NET Standard and I really love the idea. Unfortunately, Mono 4.8 implements only .NET Standard 1.6 and I'm afraid I may be requiring .NET Standard 2.0. Currently I cannot update to newer Mono because of performance drop for some cases. &amp;#x200B; Btw. Mono uses exact same .sln and .csprojs as .NET Framework. Are there any differences between .NET Framerwork and .NET Core other than file list?
&gt; ].[Nam thanks for your detail explanation of root cause of problem
I don't really have an issue with VSCode, but it depends on what I'm doing. Different tools / different jobs. The argument was against the statement that VSCode can do anything that VS can, which is not true.
Thanks for the post. But should TFS not say TFVC? Because that's what we are comparing to Git?
Thanks., This is how I learn.. 😉
I agree with you; VS Code definitely cannot do everything (or everything we well) as VS proper.
I was going to suggest this guy too. His code talks are great. 
Watch out people in here get very sensitive to the whole poor naming thing, if you point the name thing out they get very downvotey.
project.json is gone no one is using it anymore. If you want to use netstandard or netcore you use csproj just like mono and normal framework. csproj format has changed a lot though from the old format. The new csproj format can be used to multi target mono, netframework , netstandard and netcore. [Info on new csproj format](https://docs.microsoft.com/en-us/dotnet/core/tools/csproj) [Info on Porting to NetCore/NetStandard](https://docs.microsoft.com/en-us/dotnet/core/porting/) [Info on how to multi target frameworks](https://docs.microsoft.com/en-us/dotnet/standard/frameworks) Now a days net core is usually faster than Net Framework and Mono. The only reason not to use net core is for windows gui development. Which should change in Net Core 3.0 
GIT on Azure DevOps.. formerly VSTS, formerly TFS, formerly VSTS (the first time!) formerly VSS, formerly ...
yeah the tooling is different and the csproj changes are more than just the file list. Seems to me like your best bet would be to get as much of your codebase as possible into netstandard 1.6 libraries. Then make a new dotnet core (probably 2.1) project alongside your existing mono project, have it reference the netstandard libraries and port over the remaining pieces from mono which are not netstandard compatible. When you are done both the existing mono project and new core project should work the same. At least that is pretty much the approach I am using for a project I am working on now. So I sure hope it works.
[removed]
One suggestion, you should publish the built binaries with a github release.j I'd also automate it with a public build tool like appveyor so people can verify the binaries are direct from the github repo.
These project files are called SDK-based, and they can actually also be used to build .NET Framework projects.
Thanks! Can I still use old csproj and sln in Core? Or I have to convert to the new csproj (is there any tool for that?) making my project no longer compile on mono? 
Look up Juval Löwy's iDesign pattern. Search for his "Zen of architecture" talks.
There are two ways to do this: procedural (a n ugly mess of if statements, probably what the professor is expecting), or functional (if you pull this off, skip straight to the job search, because you know your CS theory)
&gt; I just want to make sure that this variable (which is a field in my actual code) is not null at a certain point in the code. In C#8, you'll be able to say just that "this string (or other reference type) can never be null". It's an opt-in feature. Until then, there are a few approaches: - If it's an argument coming into the method and it's not a simple type like `int` or `Guid`, then `if (arg is null) throw new ArgumentNullException(nameof(arg));` is acceptable if it's a mistake by the caller. - If it's a private variable, either new it up in the constructor or on the property/field declaration. You're responsible for your own mess. 
Nice, I hadn't seen `??=` talked about yet. Mostly looking forward to the "this string variable can never be null" feature.
I could not find the source code on your blog or youtube. I would recommend adding a github repo link or similar.
Understanding abstractions is the core skill any decent developer needs. I completely agree that simply regurgitating example implementations is rarely appropriate, however using what is basically the history of OO abstractions as a foundation to understand and build on is invaluable. 
Literally the book that helped me pass my NASA interview. 
Check out ML.Net by Microsoft. https://www.microsoft.com/net/apps/machinelearning-ai/ml-dotnet
Hey! Could you put up regular updates on your work, and possibly upload the source code on github? 
Lowercase everything and add brackets? 
[Here](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/if-else) is some good reading. 
illiterate? txtEnter.TextBox = int.Parse(txtAge.Text) &lt;= 17 ? "Come in " : "Leave";
You don't need language specific for an algorithms book. Might as well start with Sedgewick, the gold standard of algorithms textbooks for the past 20+ years: https://algs4.cs.princeton.edu/home/
N-tier really isn't a pattern; it's more a solution structure. For example you can have an N-tier application that implements any number of patterns e.g. singleton, repository, factory etc. I would highly recommend you look as using MediatR: https://github.com/jbogard/MediatR/wiki Excellent pattern (mediator + CQRS) that works brilliantly with RESTful API applications. All logic is encapsulate as commands or queries and make your controllers super thin. Also, I'm completely baffled by people telling you not to use or learn patterns. Complete non-sense. Patterns exist for a reason. They're best practice solutions to known problems. Check out this repo for .NET examples of various patterns: https://github.com/knoxknox/design-patterns 
I would recommend not looking for C# specific books. Language specific books tend to get out-dated very fast and won't be as high of quality. For this reason you want books like [https://www.amazon.com/Introduction-Algorithms-3rd-MIT-Press/dp/0262033844](https://www.amazon.com/Introduction-Algorithms-3rd-MIT-Press/dp/0262033844) and [https://www.amazon.com/Computer-Programming-Volumes-1-4A-Boxed/dp/0321751043](https://www.amazon.com/Computer-Programming-Volumes-1-4A-Boxed/dp/0321751043) &amp;#x200B; I'm personally in the market for data structure books, sadly its a slippery slope when you already have a few.
Thanks for the link. &gt; The 23 Gang of Four (GoF) patterns are generally considered the foundation for all other patterns. Isn't GOF long in the tooth? Those guys made a huge splash. Did they really get it all right? Did they really get all the patterns?
&gt; One of the benefits of working in .NET is being able to ride the curve with minimal guesswork. That's actually your experience? Mine is that 4 of 5 "this is the future" technologies are *dead* a few years later -- or were never alive. I'm gotten super cynical about coding tech in general, and I refuse to get into the flavor of the month JavaScript library because next month something else will be hot.
Nah, a design pattern tends to be timeless as it is not specific for a language.
If you mean, are they outdated then I would say no, absolutely not. Singleton, facade, factory etc are as relevant today as they were when they were conceived. Patterns themselves don't make bad or good software. They are just design techniques to common software scenarios. Regardless of whether you use them or not, being aware of them and the problems they can solve, will absolutely make you a better developer and architect. 
I wouldn't quite say they're the same(and i will second the not directed at anyone or trying to be patronising). A code smell is something in your code that is an indicator for other problems in the codebase, it's not a specific pattern or a bug but something that could easily start slowing you down if you don't deal with it. An example might be constructor over injection (where you have a constructor that has a lot of dependencies). The problem may relate to how you're using a pattern but the smell isn't the actual pattern in itself. An Anti pattern however is a defined design pattern that is considered harmful, to continue with the previous example there's the "service locator anti pattern" in which you might replace all those constructor arguments with a single service locator. ICustomerService = serviceLocator.GetService&lt;ICustomerRepository&gt;(); You may think you've dealt with the constructor over injection smell as the class now only has one argument in its constructor but now you have worse problems as this pattern almost completely hides that your class requires an ICustomerService making testing and re factoring much more difficult or risky. 
Ugh, no. Maybe for SQLite, but not a big iron database.
Always using GOTO instead of real function calls. (Seriously, that was the main concern... about 50 years ago.) 
Oh be fair, it was never related to VSS.
I don't think the author realizes the TFS supports both TFVC and Git. 
If you only ever work alone, that works great. But most developers don't, and design patterns are part of our common vocabulary. I can say, "This class is a singleton" or "this is a facade" and in a word I convey a lot of meaning -- *if* you know those patterns.
You can learn them along the way if you understand the principles. Just about anyone can understand a singleton in a matter of a few minutes. Facade isn't very complex either. It doesn't hurt to study them but understanding the underlying principles is far more important. I've been doing software a long time and I really can only think of 2 or 3 times when anyone has brought up an actual design pattern. I do however apply principles constantly.
Even Microsoft uses Git
Respectfully, then I’d say you’re not doing anything terribly complex. If all you’re working on is a CRUD API then sure, do both sides... you’re not really specializing in anything on either the front or the back in that case. Case in point: you do both. When you get into things on the backend designed for higher availability and concurrency you’re absolutely talking about things that are significantly different from frontend work. 
But... nothing *new* since GOF? Really?
This was my textbook while doing design patterns in university :)
Except these are different tools for the same job. 
Report it for violating rule 4.
Sorry, I'm not sure what you mean?
I am trying to write up tutorials on my blog, that is why. If you look at the comments I am active there and I always send out the code project even if a tutorial and blog post aren't available at the moment.
I know the library and I will use it at some point. One of my goals is to deeply understand the algorithms and the intuition behind it, so I would like to implement it from scratch and see it work. But for some projects I will definitely use this library. Thank you very much for pointing me to it.
Can you please specify me for which project? I will post it somewhere and I will give you the download link here. The reason why the code is not on the blog is because I want to write up a nice tutorial on all the videos and post the code as well. But I give out the code for each video upon a request even if the code is not published yet. Let me know on which project you are interested and I will upload the code and give you download link.
Hi, yes for sure thank you very much, very soon i will create a git hub account and put the code there. At the moment I upload the code on my blog or upon a request I would upload the code and send a download link. Just let me know which project you like.
Ha! True... but oh the (not so good) memories!
I'm interested in the text classification information. Am I correct that the youtube video have no sound? It's pretty hard to follow. Is there an article to accompany it somewhere or is that in the works?
Just to explain for those that don't know. TFS is like a software suite of services that you install on your server. Think VSTS that is managed by your company rather than Microsoft, on your company's server. TFS offers services like version control (both Microsoft's TFVC and Git), collaboration and planning tools, ticketing system for tracking work, build-release. It's a whole package to manage the software lifecycle. VSTS or Azure DevOps as Microsoft recently renamed it, is TFS "in the cloud". You don't use your own server to host it, but rather use Microsoft's.
Yeh that’s the prerequisite for the free it seems, we never host in iis, just raw kestrel so out of luck there
FUCKING SAVED ♥️
A code smell is any situation where something in the code is hinting via your magical coder nostrils that there might be a problem. A good example of this is where someone takes a ORM (EF for example) which implements UoW and Repository pattern inside itself. The ORM on its own is fine, but then the coder thinks. "Hmm it's leaking its implementation details out so I'll build a new repository and UoW framework to wrap this one. That's a code smell specifically about patterns. Singletons are considered anti-patterns,although like all anti-patterns, when you see them in the wild they become smells. The singleton gets called out a lot because it gave people coming to C# from other languages globals again, even if they didn't know why the didn't want that. Central God classes are considered an anti-pattern, although an MVC controller or WPF UserControl could both, in some cases be considered God classes. The list goes on :) I liked your example though, really good.
&gt;an illeterate professor. illiterate. The word is illiterate. It means: _unable to read or write._ 
Thank you very much, If there is anything you need or if you are interested to know more on some ML topic and C#, just let me know.
I get an error with missing VMLLib project. But anyway. I'm thinking of extracting labels from text e.g. customer reviews. Say length, color and brand. It's just an excersise in extracting labels from text so I made those up. Would you say that KMM is suitable for that? I.e my labels are known. But their values for each customer review is not known. I would like to automate that somehow. I don't know much about KMM but I suspect it's not a good fit. I'd love to be wrong though. 
Thank you all for your great help! &amp;#x200B; I've finally managed to migrate one of my projects to compile on both, Mono 4.8 (framework net45) and .NET Core (framework .netstandard2.0 or netcoreapp2.1). &amp;#x200B; There is a tool for migrating old csproj to 'sdk' csproj called `dotnet-migrate-2017` You can install it via dotnet tool install -g Project2015To2017.Migrate2017.Tool And then run simply typing dotnet-migrate-2017 path/to/your/project.csproj In case you need conditionals (I've needed one for XmlDiffPatch which on net45 is just XmlDiffPatch but on netstandard2.0 is XmlDiffPatch.Core), keep in mind that this works when you build with `dotnet build` but doesn't when you build with `msbuild`: &lt;ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0'"&gt; Instead, you have to use this when you want to use condition in `ItemGroup`: &lt;Choose&gt; &lt;When Condition=" '$(TargetFramework)' == 'net45'"&gt; &lt;ItemGroup&gt; &amp;#x200B;
It is even simpler using tool called `dotnet-migrate-2017` \- please check my other comment to see details.
There is a tool, it is called `dotnet-migrate-2017` \- please check my other comment to see details.
Miss moving my working directory of my VFP application
&gt;tracting labels from text e.g you are right, I did not include the library. Initially the whole code was under the same project, but I decided to split it up. Here is the project with the library: [https://www.dropbox.com/s/5qn48px87ufj7um/Article%20Classification%20KMeans%20-%20reupload.zip?dl=0](https://www.dropbox.com/s/5qn48px87ufj7um/Article%20Classification%20KMeans%20-%20reupload.zip?dl=0) &amp;#x200B; Can you please give me an example of what you are trying to do? so that I can post a correct answer?
https://www.amazon.com/dp/032157351X https://www.amazon.com/dp/0262033844/ 
Unlike Java, in C# methods must be explicitly marked for overriding to be possible. https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/polymorphism
Here's an executable link of your code: https://sharplab.io/#v2:EYLgtghgzgLgpgJwDQxAgrgOwD4AEAMABLgIwDcAsAFC4BM+1uAzMSQGzG2sDs1A3tUJDiLUh1wAWQgFkIAS0wAKAJSDhAqsK0yA9gC89EBHAA2EQmACeABTkHzAXkKY4Ad133jZxS/fWzCrb2KsqUmtpCpACcilZBhgB0AOZwMAAicFAAxghyAA4wcjpKyqFqEdGxNnaJKTAAwjqwIWHl2gAqOpAwOgDKOuhZcBbV9lxOzm6End19A0NV8RBl4RUkMXE1ELTJqRnZuQVFJSsRkeuLWzt1jc2lYVoAvtTPVNQK8AgAZhBDhEsaLS9GC5TBJQh1fY5fKFYoqB7CAAmA2AJmGNyaMHhL2ojC4/nkmCWIH+W0BwmYhGBoPBkMy0KOcOU5Iq3EIACJ2gALBSEZHoJJc9kIoSvNqU/mo9GpW5Y5ltLS4NkSBL4fAiwivMU0LidPJ5BRJDJZHQICA9BAkgHilhLSauJatVYiaY6fWG42m82mxR2g32eXOrS+O1Of2GDXaxUsamGiF7emHWElFnaJX2pa7dKJmHHbHOqMUliStHxhqYlSpxVskNbLOy/NPHFvHUeQxeCAkvUGsGes0W1OU6T6dumCC+raEcPLEnAaBwRTTwNnVgxdkAQURiLjYBHRjH7NOwkLkRjILjdIOuaZVYpNbcmcvDOTKkIAGoOUgLHuO8K2ieXRLaVyzuW9InvB06wxO530IHYAFZ4MjZtcVbGZvX6QY4C7N0eyNOATX7U1BxYdCekwhY/S2ZRZ3nRdqLA1dFA3Lc4x6WZCCgeY4EPJ0mxbaMqXPMEyyhJM82XM501rewszE68Slg9kv3Y71OO4v8C1QwSgLLBtJNZDMoJlCtlFgkgEgkJD/xQlsgA===
Good and keep up. But I have a note .. why your are not explain the code .. only you are dubbg it on YouTube. Please explain what your wrote/write .
If you have an hour to spare, I consider this video alone to be more valuable in the real world than reading the entirety of GoF or head first design patterns: https://www.youtube.com/watch?v=_lwCVE_XgqI Knowing how to structure your application correctly is a far more practical skill that will come in useful far more often. Go ahead and read up Head First design patterns as well, but IMO it's fairly low priority in comparison, and you have to remember to take things in context. One of the first chapters is the Observer pattern, which is very useful in some languages, but not C# - We already have built-in support for event-driven logic.
So far from the truth... 
Yeah it's a dumb exercise, but it's a beginner programming class and they want us to learn about if statements only, or rather practice if statements.
&gt;. It will make everything so ugly. &gt; &gt;Ow, and you can just compare characters as if t &amp;#x200B; The assignment is a part of our introduction to programming class. The course is kinda chopped up into 3 parts. And the first part is solely if statements and conditional logic without loops or data structures. I didnt know about the comparison posibility, thanks :)!
I would love to see the code for that! Thanks for all of your efforts.
You can jump it at any time really. Theory is good and all but practise is key.
Is there perhaps a PluralSight course regarding Unity? Working with Unity is quite a bit different from your traditional LOB C# application development.
Not ancient and widely used? What alternate timeline did you fall into where both of those statements are still true?
Not exactly. TFVC is better for dealing with binary files than got, so it's used in projects that are heavy in art assets. 
Beep fart. I am not a bot. This is the best I can do at 10:21hrs hung over eliminating my bowels. Two scenarios. One is non Unicode. Other is Unicode. String ps = "f"; Char pc = p[0]; String us = "அ"; int pi = (int) pc; int ui = Unicode(s[0]); The thing is pc you are done between 0-255. Ui just gives you the diction for the remainder of the array. Probably the same though. Is this for data structures or do you just hate yourself?
That’s a good shout, I’ll look out for that. Thanks! 
I use Rider for .net core in linux
By expand, do you mean using different libraries to create different kinds of, for example, applications? Thanks!
This book was what I used to learn them too. I make sure all my new devs get a copy. A fantastic resource.
Precisely. You would be surprised what you can make with just the basics. Variables, methods, arrays/lists and some Unity specific input can get you a good start.
Alrighty, I’m looking forward to be able to create some projects! Thanks a lot for the help!
&gt; dotnet-migrate-2017 I guess there is just be warned its not an official tool but something someone developed. There is no official microsoft tool for migrating.
Here is the download link from the project: [https://www.dropbox.com/s/5qn48px87ufj7um/Article%20Classification%20KMeans%20-%20reupload.zip?dl=0](https://www.dropbox.com/s/5qn48px87ufj7um/Article%20Classification%20KMeans%20-%20reupload.zip?dl=0) If you have any questions just let me know I will try and answer them
I think this is a little bit off topic but here is a link to set up your VS theme: [https://docs.microsoft.com/en-us/visualstudio/ide/quickstart-personalize-the-ide?view=vs-2017](https://docs.microsoft.com/en-us/visualstudio/ide/quickstart-personalize-the-ide?view=vs-2017)
Awesome, thank you Hopefully we can create a community for ML in C# and have some fun using our favorite language to do some great things.
No, I mean, in your videos!
 if (variable1 &gt; variable2) { // do something }
Ooh just a preference :)
&gt; TFS is bigger than source version control system, it provides many beneficial things- build automation and release management, Bug tracking and completely agile supported system He seems aware of the distinction.
If T is costrained to be a reference type (class constraint), it's default is null, so you can pass null by using the default operator. default(T)
Yep!
I'm still learning C# myself but it appears that your declarion for i is within the for loop. Declarations of variables inside a loop is local to that loop.
Is your question rhetorical? I don't really know what you're looking for. 
try wrapping the body of the if statement in braces so that the variable i then becomes in scope good luck!
Has that been evaluated since LFS support?
Firstly, may I recommend using proper formatting. It will make your code easier to read, and as a result it'll be easier for us to help us. In this case, a block of code can be made by using the code block button (if you're on the redesign). It's behind the ... button, and has a T in the top left (and says "Code Block" when you hover over it). If you aren't on the redesign, then you can just put four spaces at the beginning of each line, and it should show up the same. I've taken the liberty of doing it here: int summa = 0; for (int i =1; i&lt;=100; i=i+7) Console.WriteLine(i); summa = summa +i; Console.WriteLine(summa); Secondly, there may be other subs better suited for this, but I don't know for sure. Thirdly, a lot of programming is knowing where your errors come from, and how to solve them. So I won't give you the answer directly, but I'll try to guide you to it. That being said, let's start at the start. Where, that is, on which line are you getting the error?
Change i to 7 when declaring. In your code you add 1, 8, 15... instead of 7, 14, 21...
I dont think i have an if statement
sorry meant the for statement. edited for clarity
Declaration of i is correct.
Line 18, where i am adding the variable i, declared in the for loop to my variable named summa.
I think you're going to find another issue with this code. 8 is not divisible by 7.
You could try to do this with an enum. Or would that go against what you are allowed to do?
Lookup Brackeys on youtube.
Maybe you should do research for this yourself so you can actually learn C#?
Take a Pluralsight course on Unity?
TL;DR: Thread.Join() does not freeze the main process. [https://stackoverflow.com/questions/38911758/why-thread-join-does-not-hang-my-application-when-called-on-ui-thread](https://stackoverflow.com/questions/38911758/why-thread-join-does-not-hang-my-application-when-called-on-ui-thread)
Don't know. Will LFS allow you to not download every version of the file to the dawn of time? Because that's the real problem. TFVC defaults to only grabbing the latest.
Yep, someone’s said that. Don’t know why I didn’t think of it before.
That shows me ge doesn't, because it's listed under TFS when TFS+Git has the same advantages in this regard.
Subscribed...I think this is a great approach. I have used ML.net before, but I want to learn more about the individual algos themselves. Other teachers/websites have not given me what I need, in this aspect...will check out your videos over the weekend. Thanks!
Removed: Rule 5
Removed: Rule 7, spam.
Unity also has some tutorials that would probably be worth going through. 
Removed: Rule 4.
Removed: Rule 4. https://stackoverflow.com/questions/4071025/load-an-image-from-a-url-into-a-picturebox
There's an entire suite of Unity tutorials on their website. I recommend going through some of the videos. You learn a lot rapidly. I don't know if they update them so there may be some discrepancies between versions in the videos. If you know Python fundamentals then C# shouldn't be too hard. I love using both languages.
How does ML.NET compare to TensorFlow? The reason I ask is I played around with it a bit and found it to be very... basic, or unfinished. I get it’s a WIP but it seems like it will be some time (if ever) before it catches up to TensorFlow/Caffe2. I prefer C# to Python but I may have to go Python on this one...
pluralsight or Udemy course on unity?
Same here. I've been using .net since pre 2.0 and didn't know this. Also don't really agree with that design choice.
However, just to make sure, I could use my C# knowledge from this course when I am using Unity right?
Yeah, I'll try using BackgroundWorker in the future. Can I ask, what problems may occur, when I call my own thread?
You should familiarize yoursef with the concept of "modulo".
Please don’t use Background worker for writing new code in 2018.
Heya! There's already a C# discord - any particular reason for not using that one? 
More broadly, don't use WinForms for writing new code in 2018. ;-) But if you're gonna use WinForms anyway, BackgroundWorker is fine.
So i will start existing after the loop if i put braces around only what i want looped? Thanks alot by the way, talk about putting time in to help!
Awesome, I've been using all kinds of libraries, but in my opinion the best way to get good grasp and intuition about the algorithms (when and where to use them to get the best out of them), is to look at the math and implement them from scratch.
Yes, you'll write your scripts in C#.
The book is [still in its first edition](https://www.amazon.com/Design-Patterns-Object-Oriented-Addison-Wesley-Professional-ebook/dp/B000SEIBB8). From the Editorial Review on the Amazon page: &gt; The CD-ROM works with any Java-enabled browser (Internet Explorer 4.0 and Netscape Communicator 4.0.) It includes the full text of the printed book along with the richness of hypertext links to get the most out of patterns quickly. (Two versions of the text, one for 640 x 480 resolution and one for higher resolutions, are provided.) It's friggin' *old*. Everything else changes continuously in software. It's hard to believe that there aren't a bunch of design patterns that the GoF missed or have been invented since the GoF book was written. 
It isn't necessary here, though.
What is the one already created?
There are courses on Udemy that will teach you C# while teaching you Unity at the same time. Just wait until they go onsale, which is all the time.
This is a topic I've been wanting to get into for a while. The source code would be a huge help to ! 
Cool. Thanks!
I can't help but agree. Javascript is an absolute nightmare and I firmly believe in the industry adopting an ASM-like standard for JS compilation. Even if Blazor doesn't become the de facto long-term solution it is still a huge step forward. 
As a beginner, I believe it’s most important to write as simples code as possible, not the most elegant one, nor the fastest. With a little experience, you should be able to write solutions for problems like this in one line. However, for beginning try to make each line of the code as simple as possible. In for loop don’t use i+=7. You can often make a mistake, and you did. Just get every number from one to hundred and check with if, if the number is dividable with seven. With every IF/FOR etc. use {} You don’t have to, but it’s good practice to get used to the idea of grouping several lines of code. When you are finished with this assignment, try to do the same but with While and Do While
If you dont have braces around the block of your statement, it will only evaluate the next line as the block. This goes for for, if, else, while, etc. Your sum += i statement is 2 lines after the for loop and you dont have braces, therefore it is not in the scope of the block and i no longer exists. Put braces around the statement you want to evaluate in the for loop.
You need to look at what scope is and how it works. There is tons of material on it online. 
All my commercial projects are written in Python and using TF. What we would usually do is create a REST service and consume that service in C#. My favorite language is C# and I want to transfer my knowledge from Python. Also for me is fun to implement algorithms from scratch. It would be beneficial just to get a fast linear algebra library to do some more serious projects (from scratch)
Officially the source code projects I upload to my blog. But since I want to write up some tutorial on the subject I am still behind. But I can send you a download link, just let me know in which project you are interested.
Unfortunately, I am unfamiliar with ajax control...
Ctrl-f discord on the sidebar 
Seems the error message went away, but when I open a project or create a new one, it just keeps loading, saying "syncing project" at the bottom. 
Your i will exist within the curly braces of the for loop, and if there aren't any, then it's just for those two lines. But it won't exist outside of it. An example: for(int i=0;i&lt;50;i++) { // Some code, doesn't matter what exactly } Console.WriteLine(i); will generate an error message. Here, the i is declared in the scope of the for loop, but doesn't exist outside of it. As a result, you can't use it; &amp;#x200B; And I'd rather spend 20 minutes explaining something well once, than spend 5 minutes explaining something poorly 5 times.
Yeah, I’ve seen those courses. However, I somehow missed the C# course at PluralSight, so since I’ve got a subscription there I might as well use the course there. Thanks anyways!
Yes, PluralSight has a pretty extensive C# path. Good luck!
Who downvotes this? Are people in this subreddit mostly writing new legacy code?
What courses on Udemy are stolen from Pluralsight? The course instructors I follow have courses on both platforms and Youtube and I've never seen them complain that Udemy stole their courses. On top of that, they update their courses on Udemy on a regular basis and do not update them on Pluralsight. Maybe Pluralsight is full of stolen Udemy courses.
There are a number of tutorials on the website itself.
That's what I meant. "new legacy" as in starting new projects that are 20 years old by the time the first line is written.
Does the [`PictureBox.Load(string url)`](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.picturebox.load?redirectedfrom=MSDN&amp;view=netframework-4.7.2#System_Windows_Forms_PictureBox_Load_System_String_) method not work? Get any errors?
Thanks alot for the help everyone! I will finish my assignments tomorrow. 
Thanks alot for the help everyone! I will finish my assignments tomorrow. 
Interesting links, thank you. None of the courses I purchased were stolen from Pluralsight and two of the instructors, Maximilian Schwarzmuller and Mosh Hamedani have courses on both platforms. They don't appear to have a problem with Udemy and apparently neither does Pluralsight since they purchase courses from at least two Udemy course creators. The courses you and the course creators in your links claim Udemy stole were uploaded by third parties and removed when the authors reported it to Udemy. If the authors feel Udemy stole their content they are free to contact law enforcement or the attorney general in the state they reside in or the state Udemy resides in. While I believe Udemy should pay the course creators the money they gave to the theives and go after the theives to be reimbursed that's between Udemy and the authors to work out between them. I'm not going to shortchange myself or legitimate content creators by not taking Udemy courses in protest over it. You obviously feel differently. 
Here's one analysis. https://www.telerik.com/blogs/aspnet-intersections-2018-developers-share-their-platform-choice
Thanks!
Just jump into it and practice. Do small projects that interest you, like maybe there's an app you need right now.
\+1 to this. I also love his general c# tuts as well
Hi sorry I didnt reply sooner. I just meant new people entering the field as junior devs.
Your original solution is more efficient since 7 is known, and is only one loop. With multiple/variable values modulo is better for this.
To expand, tutorials I would *avoid* right at first include all of the Game Kit tutorials (like the Tower Defense Game one). These aren't really tutorials moving toward a specific finished example project; what's available is more akin to workflow specification and documentation on the Kit in question. That isn't necessarily a bad thing but the Game Kits are really not meant for brand new beginners with Unity.
Why are you using the Hungarian notation? As far as I understand, especially with where C# is, it is bad practice. In C++, I understand why it is used because of the distinction between member functions and variables, whereas we don't have this issue in C#. In C#, it is better practice to use "this." not "m_". In C# the trend for naming conventions is to use longer variable names to better describe what we are using not shorter to help prevent variable confusion.
RemindMe! 12 hours
I'm also interested if anyone finds it
It can be a useful reference for a senior/advanced dev, but I would say it's geared towards novices and the odds of someone more advanced learning something new would be a bit lower. I think it does a nice job of explain what each pattern is and gives pretty good examples to follow along with. 
This is most likely not what you are looking for, but there's this website that lists game mechanics to implement. [http://www.squidi.net/three/](http://www.squidi.net/three/) It's basically the /r/writingprompt for game development. Now, I'm assuming you are looking to get your first job as a programmer. This is only my opinion but, when you interview for a junior position, it's not about what you built, but how you built it and why. It's much more impressive to an interviewer if what you showcase is a labor of love that has meaning rather than "I made a facebook clone because I can". With that being said, it's okay to build a facebook clone if your reasons are "I wanted to learn X with some Y, and I ended up with a bit of Z because W wasn't cutting it". TL;DR: Doesn't matter what you build, as long as you show why you used it and how.
Try your browsing history.
The same goes for locks, semaphores etc., and the reason is COM. But yeah, it’s pretty surprising. 
Well, i'm mainly using it as personal preference. I don't really see it as a "Bad Practice" necessarily if the people who read your code are aware of it, but you are write that i should probably use camel casing for the videos. Thanks for letting me know. Also, for the video, i got another comment about this as well and you guys are right, from next video on i'll be using my other monitor to film (1920x1080) so there's no stretching.
This would have been so helpful like a week ago.
Last time I joined I got discriminated against because I wanted to learn how to manipulate memory using csharp. Also they aren't really friendly against people new to C# telling them to do their homework themselves. Pretty much I don't like people forcing their own rules upon others. Code is law in my view and anyone is welcome to express their view.
While I may not have an answer as I’m not experienced in MonoGame, but why not start using Unity? It’s free and the documentation is great.
Normally speaking I always recommend people to enforce SOLID principles along side test driven development when people have doubts about maintainable code. I know this isn’t the answer to every problem however if you goal is to produce he most testable and maintainable code then this is the way forward. SOLID: https://youtu.be/TMuno5RZNeE TDD: https://en.m.wikipedia.org/wiki/Test-driven_development
Non-Mobile link: https://en.wikipedia.org/wiki/Test-driven_development *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^223635
Have no experience with that framework, but is there a reason you handle horizontal and vertical checking so separately? This may not happen in practice, but it looks like there's a potential bug in moving diagonally - checking horizontal and then vertical entities won't necessarily check something on the edge of either rectangle. I'd roll your two rectangles together - the horizontal/vertical size based on both horizontal/vertical movement (or lack thereof) rather than constructing and checking two. Should cut down heavily on your repetition also.
The two main if statements can be abstracted into a common method as they follow a similar pattern. This may require you to pass in delegates that perform differing behavior which it looks like you are familiar with. From a philosophical standpoint, you'll notice diminishing returns at doing this but it is always beautiful to extract common behavior. Honestly I would do the refactoring just to gain the experience even if they gains in code quality are minimal. 
It’s done separately because otherwise I’m not sure how to keep allowing the entity to move even if it’s colliding with another entity from another direction.
I have used Unity! I prefer MonoGame though because I’m also trying to learn to better use C# in general and I like having to code my own stuff!
yes, it really is crossplatform.
if you can a priori have a good idea what the final size of the entity list will be, you can set it when you construct it. otherwise it starts at zero, grows to 1, then 2, then 4, then 8. Every time it grows, a new array is allocated and the contents are copied. &amp;#x200B;
[removed]
[removed]
Look at Reddit Sharp to see if it does it. It's a fairly feature complete API client, but features are only really added as people submit PRs. So it might not have that functionality. But it's worth checking. https://github.com/CrustyJew/RedditSharp
Censorship and server owner forcing his rules and opinions on you. I prefer a more open server that doesn't ban you for having a different opinion then the server owner. 
Like it is creating more people...
. Net core and VS Code runs on Linux. You would probably be limited to console or html apps though. https://code.visualstudio.com/docs/setup/linux
Well, I have to draw a line somewhere. I guess you're moving on. My son thinks it's cute, that's all that matters to me.. 
Yes.
Just post video somewhere and add the link. Nobody wants to download megs of data just to see what it does. It is quite possible that video codec is not compatible with the local machine. This is grumpy friendly advice. BTW you can add "my son thinks it's cute" to your readme. It is an endorsement ;) QA acceptance is good.
Install .NET Core and Visual Studio Code. Install the C# plugin. Voila. C# in Linux. Avoid Mono.
Install the C# extension.
Will see what I can do tomorrow. When I'm not at work, I hate computers. Yes, I'm a software developer that hates computers...when I come home I work on small engines, Electrical, Plumbing, construction, anything but computers. The kids in my house are Barefoot and I'm the Shoemaker. But ask for a link YouTube whatever. We'll see what I can do tomorrow. I just got home from 8 days out of town for work I have a lot of catching up to do.
Cross-platform GUI development with .NET is in an interesting spot right now. While broadly speaking cross-platform .NET is in a very good place, if you're specifically looking to develop on Linux using a GUI designer, you have very limited options. **.NET Core** .NET Core was released in 2016, and with it came first-class support for Linux and Mac. However, .NET Core does not come with any built-in GUI support (it's more focused on console and web apps). .NET Core 3.0 (coming in 2019) will bring support for Windows Forms, WPF, and UWP, but only on Windows. Your cross-platform .NET Core option is to use something like [Avalonia](http://avaloniaui.net/), which looks promising but is still pretty new (and doesn't have a Linux designer yet, afaik). This is a space with a lot of active development, and there aren't any real stable options with mature tooling support yet. **.NET Framework** You're other option is to stick with the more mature .NET Framework ecosystem using Mono. You have a variety of GUI toolkit options (Winforms, GTK#, ...). However, you are still limited in terms of cross-platform support for visual designers. [MonoDevelop](https://www.monodevelop.com/) with GTK# is the main option. You also be able to use [Qml.Net](https://github.com/qmlnet/qmlnet) with the [QtCreator](https://www.qt.io/download-qt-installer) designer for the .qml files (though I can't say for sure, I've never done it mysefl - and Qml.Net is also very new).
[https://i.kym-cdn.com/photos/images/original/000/021/347/1248075250110.jpg](https://i.kym-cdn.com/photos/images/original/000/021/347/1248075250110.jpg)
The variable i exists in the for statement, anything to do with the integer i must be encased by brackets {...} below the statement. Below I wrote the code and some comments explaining what is going on. &amp;#x200B; int summa = 0; for (int i=1; i &lt; 101; ++i) //Iterates through every number between 1 and 100 if (i%7 == 0) //Checks if the current num (i) divided by 7 leaves a remainder of zero { Console.Writeline(i) //If true, writes number and adds it to the total summa+=i } &amp;#x200B; Console.Writeline(summa); //Prints the total at the end of the program Console.Readline(); //Keeps the window open so it doesn't quickly close
What is wrong with Mono? I'm using it for &gt;4 years.
There's like three.
Good one!
Great, why not recommend one?
Here's a couple I had saved: [https://github.com/danistefanovic/build-your-own-x](https://github.com/danistefanovic/build-your-own-x) [https://github.com/karan/Projects](https://github.com/karan/Projects) [https://www.dreamincode.net/forums/topic/78802-martyr2s-mega-project-ideas-list/](https://www.dreamincode.net/forums/topic/78802-martyr2s-mega-project-ideas-list/)
&gt;doesn't have a Linux designer yet, afaik). For OSX and Linux you can use AvalonStudio - https://m.youtube.com/watch?v=J6ZgLNmASiw Rider plugin is in development now. We won't be supporting MonoDevelop anytime soon, because of their decision to not include .NET Core debugger support to Linux version (it's only available in VSforMac).
This is not a shitty Linux world, dude.
No errors-runtime or compilation. Thr image does not load instantly. This is the reason I'm asking you if time is needed for the image to load or the method does not work properly the way I am using it.
It doesn't support .NET Core debugging. The feature is VSforMac only
Happy to help out. 
Last time I got on that one it was super toxic and too much admin/mod politics were going on. That was quite some time ago now though
That's exactly what it is and it just forces us to write a bunch of spaghetti code..
Just don't expect that stuff that works in .NET works in Mono. You need to be sure and check what Mono actually supports, otherwise you get surprsied by shit like this: https://github.com/mono/mono/blob/master/mcs/class/System.Transactions/System.Transactions/TransactionScope.cs#L108
It could, but it would have to apply the modulo test to all 100 numbers. OP's technique would only cycle through each individual multiple. The `i &lt;= 100` is also be less expensive than the modulo.
Since other people have posted a solution, I'll leave mine here too: int summa = 0; for (int i = 1; i * 7 &lt;= 100; i++) { int multiple = i * 7; summa += i; Console.WriteLine("Multiple: " + multiple); } Console.WriteLine("Sum: " + summa); It also avoids applying modulo test to all 100 numbers, but looks a bit cleaner.
That's a dark scary place.
Yes thank you!
Light theme....
Can you provide the URL you're using?
im lucky enough to be in a junior dev role already, looking for projects i can do in my spare time to build a portfolio &amp; improve my ability :) 
The collidablesWithinArea.Remove(_parentEntity); can be part of the Linq query building collidablesWithinArea's where clause (add an &amp;&amp; entity != _parentEntity). This avoids a linear search by the Remove(). you create a list, therefore use .Count, not Any(). You add the OrderBy() clauses in the else branch but you can add them to the collidablesWithinArea linq query as they're a no-op when there are no elements. This also makes the if statement useless, so you can use a FirstOrDefault() and a null test, OR use a .Count check and a collidablesWithinArea[0] instead of First(), as it's already a list! So basically (the horizontal check) if (moveBy.X != 0) { bool IsMovingRight = moveBy.X &gt; 0; var moveOverRangeHorizontal = new Rectangle((int)_parentEntity.Position.X + (IsMovingRight ? 0 : (int)moveBy.X), (int)_parentEntity.Position.Y, _parentEntity.RectSize.X + (int)Math.Abs(moveBy.X), (int)_parentEntity.RectSize.Y); var q = _entityMap.GetEntities(moveOverRangeHorizontal) .Where(entity =&gt; entity.HasComponent&lt;CollisionComponent&gt;() &amp;&amp; entity != _parentEntity &amp;&amp; _parentEntity.GetComponent&lt;CollisionComponent&gt;() .CanCollideWith.Contains(entity.GetComponent&lt;CollisionComponent&gt;().CollisionType) ); IEnumerable&lt;IEntity&gt; collidablesWithinArea = IsMovingRight ? q.OrderBy(entity =&gt; entity.Rect.Left) : q.OrderByDescending(entity =&gt; entity.Rect.Right); var hitEntity = collidablesWithinArea.FirstOrDefault(); if(hitEntity==null) moveX = moveBy.X; else { hitEntities.Add(hitEntity); moveX = IsMovingRight ? _parentEntity.Position.X + _parentEntity.RectSize.X - hitEntity.Rect.Left : _parentEntity.Position.X - hitEntity.Rect.Right; } } 
Why not downvote a blanket statement without any backup arguments? "Please don't &lt;do thing&gt; in 2018", well why? Sure, use Task and async everywhere, right? Where does the initial 'async' call come from in an STA threaded app like winforms apps? 
Probably your best bet is to use something like Blazor and develop a web app. Is there a reason it needs to be a desktop application? If you develop a web app it can be used on Windows, OS X, iOS, Android, Linux...
Algorithms in C, by Sedgewick (or a variant in another language, doesn't matter). There are other books which are great, e.g. the ones from Donald Knuth: The Art of Computer Programming Algorithms are universal, don't look for a variant in a specific language, as that makes little sense other than you perhaps understanding the examples better. Your requirements are also awfully specific, 'edge cases' and performance, what does that even mean? O numbers? Amortized timings? 
&gt;html apps 
Would it be easier on the eyes if I used the dark theme for the videos?
Hasn't been my experience at all. Sure, there have been some altercations, but that's natural in large communities. I get that it might seem kinda hostile to new folks, but most of the time that's because the people there are sick of handholding people through pasting their question into google :P
Use a packet analyzer to see the differences between the packet sent by your program and the python program. 
I get only one result when searching for Reddit emoji : https://www.reddit.com/r/redditdev/comments/7zbfzk/does_anyone_know_how_to_use_the_new_emoji/
The subreddit is passed when obtaining the S3 lease, which then returns a set of data and a URL you're supposed to post it to. That's the part you're seeing in my code there. It's a test subreddit for which the bot user has full mod privs.
Thank You, I tried comparing the entity and parent entity before in .Where(), but for some reason it didn’t work. So for the collidables list, it actually became a list while I was trying to get the code to work originally for the same reason above—It wouldn’t properly exclude the parent in the Where
Videos it might be better, but personal I can’t stand light theme at all. 
Yes. And comic sans as the font please. Halfway joking, dark theme is good. 
It is, but there are couple of caveats ... For example [timeszones that have to be specified differently on windows/Linux boxes](https://dejanstojanovic.net/aspnet/2018/july/differences-in-time-zones-in-net-core-on-windows-and-linux-host-os/)
Properties pretty much made getter/setter methods obsolete since you can use them like this: public object Property { get { /* do whatever you want */ } }
When should I write a property? - https://ericlippert.com/2014/05/19/when-should-i-write-a-property/
Just because you **can** do whatever you want, doesn't mean you **should** do whatever you want. If the code has potential to throw an exception, then it should be a method and not a property.
Start out by making everything private, then only expose whatever variables you need as you need them, but consider the implications of doing so - it can now be modified by other classes which you may or may not want. when exposing private fields, convert them to properties.
If, for whatever reason, you do not want code outside of the class changing that thing, keep it private. The relevance of this is hard to understand when you are creating your own small projects, that only you work on. It becomes more obvious if you make things that other people will use, like a library. Your library has a function say "CreateWidget(x,y,z)" and returns a Widget. The Widget may have some internal properties that you need to use, like "WidgetRotation" but you do not want someone who is using your library changing WidgetRotation because doing so may cause a rift in space time (or a crash). So you make that private. &amp;#x200B; Sometimes even when working on your own small project it can be helpful to make things private as a reminder to your future self. So when you come back to work on your widgets, you remember not to be messing with WidgetRotation willy nilly and destroy the universe. &amp;#x200B; But it is absolutely possible to write big, complex, excellent software even if you keep everything public. &amp;#x200B;
Oh I see,Thanks!
Thanks! I appreciate your effort.
So Why Should I use declare my fields private?
Describes an object = property An action an object performs = method 
? https://www.reddit.com/r/redditdev/comments/9es2ju/trouble_uploading_an_image_to_a_custom_widget/
If you need to take a value and return void, use a method. One of the more awful solutions at my company was made by a Java dev that thought they were interchangeable, and as a result, is riddled with set only properties. Never do this.
Excellent explanation.
Think of a string[] object, there's Length as a property, ReadLine() as a method. To me it's about description vs actions as was said above. Think of the names of methods, GetThis, SetThat, ParseTheOtherThing, they DO stuff.
Relevant but doesn't address my specific issue. I already tried doing everything as described there and it's still giving me that error.
Dang. I'm reading the docs myself now. :D
[removed]
If something is set to private you know for sure that no code outside your class is modifying your field or property, like the post you answering to said. You should design you classes so only absolutely needed information is visible to outside. Use private fields, properties and methods if they are only used inside class. If you want inherited class able see to class properties or methods use protected etc. If field or property is only initialized in constructor use `readonly` keyword for fields and `{ get; }` (getter only) for properties. Usually you should only expose properties and methods outside class.
Thanks!
Thanks!
That should be more like public object Property { get =&gt; _property;}
Not really, but a lot of people still search "Unity C#" on youtube when looking for content, so it's easier for them to find it this way.
I usually go for dark theme as well, but i thought it might make things easier for videos, i'll give dark theme a try when filming the next one.
Properties can be useful when you want to expose some private data in a formatted way (e.g. Really useful in ViewModels, etc.) So you might do something like: ```c# public class CustomerOrderViewModel { // Keep the "real" object private private CustomerOrder _order; public CustomerOrderViewModel(CustomerOrder order) =&gt; _order = order; // Now expose the order the way the UI needs it. // By NOT exposing the CustomerOrder you don't accidentally expose/serialize data // that's sensitive or just not needed. // It's usually WAY more performant too since you // aren't serializing tons of unneeded data. public string OrderId =&gt; _order.Id; // By formatting the date in the viewmodel it's enforced in one place and you // aren't exposing the "entire" POCO class. public string ShippingDate =&gt; _order,ShippingDate.ToString("MMM dd, yyyy"); // Instead of exposing an entire Custom object to the UI, if we just need the customer's name, // then just expose the customer's name! public string CustomerName =&gt; _order.Customer.Name; } ``` 
I think I just figured out the best way of creating this system. Thank you for the example, now I know what to do.
&gt; Personally I try to avoid public setters where possible because I see it as an unnecessary state exposure. If my class needs a property set in order to achieve some task elsewhere, then it'll be a parameter to that method, or the constructor if it is shared across methods. I honestly love this philosophy. Domain objects should, generally, be immutable.
I guess it could just be a mis-representing of it's community that I somehow fabricated, idk. I might give them another chance. Though tbh I'd rather be welcoming to new ppl who haven't yet learned to Google. Or maybe use a bot and just Google it in front of them. 
And will the ApiExplorer be aware of those transformations? Or is this just a half-hearted solution?
That's neither here nor there. WinForms will continue to work for a long time, yes, but that doesn't really mean it's advisable to use for a new project.
Removed: spam. Please review and consider the [Guidelines for self-promotion on reddit.](https://www.reddit.com/wiki/selfpromotion)
What exactly do you mean by "without using libraries"? If you mean without using third-party/external libraries, the .NET framework has built-in support for RSA and limited support for ECC. If you mean implementing an existing encryption algorithm completely from scratch, or even inventing your own, don't.
Look into the RSACryptoServiceProvider. It’s built into .net and no external libraries. I have used it in the past to generate a key pair that can be used for encryption. Sorry on mobile otherwise I would provide an example.
You *could* do this without using libraries... you are looking in the right direction by looking into RSA. Here is an explaination https://simple.wikipedia.org/wiki/RSA_algorithm You'll also need an algorithm to generate large prime numbers that can be used as the public and private key... If you implement it your self... you can probably get a solution that will work... you'd be able to provide plaintext and a public key to generate cypher text, then you'd be able to provide the cyphertext with private key to get the message... BUT it will likely not be as secure. As a new developer you are likely to make mistakes in the implementation that would make the weakest point of your algorithm something other than the encryption/decryption algorithms... The libraries supplied in System.Security.Cryptography are very well tested. 
It wouldn't change a thing. You want to "rape", then create many threads yourself and let them continuously do CPU intensive work.
I currently work on a project that’s has a ton of logic in the getters and setters. Even calling databases in getters that are exposed in views. This makes life extremely difficult and causes performance issues because of the amount of times we actually call the database. I remove that logic when I can and place it in methods where it belongs. I always try to keep objects with exposed properties as simple as possible and make almost everything readonly. That way you don’t get time wasting bugs trying to figure out where your values got changed. In my opinion that might not be very popular I think you should never put logic in setters or getters. Type prop + tab and leave that bad boy alone.
I do have it installed.
yaf.net
To be honest, tell them the truth and say that thank you so much for giving this wonderful opportunity but it doesnt fit to me to continue. Give them actual reason and I am sure they will accept it or find a better way for you in different shift or where your skills required.
Musicians, not programmers. If there was a LINQ query hidden in those musical notes, I'd feel differently.
First of all that is a example of macros in the language C, not C#. C# does not really have macros, though it has some features which offer some similar benefits. &amp;#x200B; In short, a macro is a kind of like a function, but everything is converted into code at compile time. In the example you linked to, they define a macro that takes in a, b. When the macro is called, whatever string you pass in to a, b, is substituted into the macro body. Once that substitution takes place, the full text of the macro body is then placed inline into your source code. Macros typically work via this kind of substitution model. &amp;#x200B; C# doesn't have macros but you could use generics to write a max generic max function that will work on all the comparable types, to save you have to write a max function multiple times (once for ints, once for floats, and so on). At compile time your generic function will be turned into multiple versions, one for each type you use it with. &amp;#x200B; 
[removed]
what is &gt; the macro body and how this could be less repetitve
as i understand #define c = 10 becomes 10 = c
Agreed. Everything seems to point to music.
the macro body is ((a) &gt; (b) ? (a) : (b)) if you call MAX(foo,bar) then a and b will get replaced at compile time. So the spot where you type MAX(foo,bar) will be replaced with(( ((foo) &gt; (bar) ? (foo) : (bar)) &amp;#x200B; The way that this reduces repetition is that you can call MAX with any types, having only had to write the macro once. And instead of typing "((foo) &gt; (bar) ? (foo) : (bar))" over and over you can just type MAX(foo,bar). 
And the Leader plays in C# Major
but what does mean that ? and ?
You can deserialoze with private setters.
[Parallel.For](https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.parallel.for?view=netframework-4.7.2) has many [overloads](https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.parallel.for?view=netframework-4.7.2#System_Threading_Tasks_Parallel_For_System_Int64_System_Int64_System_Threading_Tasks_ParallelOptions_System_Action_System_Int64_System_Threading_Tasks_ParallelLoopState__) that take a Int64 already. 
How is it trolling? 
Your last statement. How the heck it's not popular? Didn't you look at the jobs on websites like Indeed?
&gt; C# is not a popular language **with academics** Did you read past the first 5 words of my comment before calling my a troll? 
Wine is not an emulator.
Honestly quite an ironic comment considering your post history on here (to which I replied). 
100% this. But let's not forget the other simple things in here: 1. user management 2. Spam detection 3. Rate limiting 4. user profiles 5. Banning users 6. Emails 7. Markdown support. Oh also btw, Amazon is just a simple shopping cart. Tell Geoff Bezzos to just fire those pointless devs.
Depends what you want to do. I've used [XmlDocument](https://docs.microsoft.com/en-us/dotnet/api/system.xml.xmldocument?view=netframework-4.7.2) a fair bit. If you're familiar with XPath queries then they're [simple to use with it](https://docs.microsoft.com/en-us/dotnet/standard/data/xml/select-nodes-using-xpath-navigation?view=netframework-4.7.2).
It's C# the musical note. The description on the back is all loaded up with music-related terms. 
Uh, wtf? I don't even post here much and I basically didn't comment here for like weeks. Please stop making such bullshit...
But that's more than a forum. A simple forum is what I stated, everything you mentioned create a better user experience. 
Your know your post history on Reddit is public, right? 4 posts last month, all majority downvoted
No, it's called "conditional operator", and it's **a** ternary operator. It just happens to be the only ternary operator, so this is often confused.
This is mostly C# inside a Powershell script. It might be handy to copy from. https://gist.github.com/ekinnee/58f7906bec6cee3c59f432550524d069
More competition is better 
https://gist.github.com/ekinnee/d98d97eac7f2bb882dc0268548c737f4
XmlDocument (System.Xml) or XDocument (System.Xml.Linq)
You're not an emulator
I have a feeling the instructor wants you to understand how sorting works (like a quick sort or even the super-basic bubble sort). To be honest, I haven't written a single line of sorting code for over 25 years, and, in the professional world, probably mostly the only people who HAS written any sorting code are ones creating libraries to sort data for the rest of the programming world to consume.
upvote for high level pedantry
If you hate all the real ways of parsing XML, you'll be left with regṷ̓l̠͑a̡̿ŕ͈ e̴̟̓x̸̬̉ṕ̵̻r̴̗̾e̵̡̥̽̀s̶͈̘͘͠s̵̪̍̽͜ȉ̸͉͇̊ǫ̸̩̂̃n̴̦̘̈́̈́s̷̨̞̀͝.
You are being incredibly optimistic. What you could produce within a few days will not be fit for purpose. You don't think the things I mentioned are critical features? 
You really don't need to use the word "rape" like that. Grow up.
Good one!
I think DataBindings also make this a more annoying rule to try to follow. For internal code that only I'm using, I always end up breaking this rule so I keep my DataBindings simple that has a lot of interconnected data the way I want them to for WPF apps. Otherwise I end up having to write a bunch of DataTriggers or ICommands to essentially do the same stuff anyways. In terms of best practices, I agree with you. But in my personal opinion, I think if there is a notable advantage to using Properties over Methods, Properties are acceptable to use in those cases. But it should be obvious if it can be. Like if I'm using a class that has an `Enabled` property with a setter, I can safely assume that setting that property to true will activate some code in the class. 
Hey guys! I uploaded the second part of this tutorial: [https://www.youtube.com/watch?v=9bx7\_QYdVGc](https://www.youtube.com/watch?v=9bx7_QYdVGc) &amp;#x200B; &amp;#x200B;
The programming language is C#, not C♯. That's why so many unfunny jokesters call it C-pound, C-hashtag, or C-octothorpe. They used the correct symbol on that wine label. It has straight verticals and slanted horizontals, rather than the common shift-3 symbol that has slanted verticals and flat horizontals. #♯ is not \#.#
depends onthe scale small internal site needs a bit of a forum? you could write your own pretty quick otherwise why spend a week developing something and have to maintain than just plug and playing a developed solution within half a day?
Nice, thanks!
That's cool, but what's wrong with Json.Net? Is this driven primarily by performance? To remove dependencies?
Your two guesses are the top two bullet points in the post.
This is long overdue
Funny, I am currently working on a JSON parser that works using `Span&lt;T&gt;` and `Memory&lt;T&gt;` types internally, strives for zero-alloc, and works with both UTF-8 and UTF-16 natively. My goal is to have something that performs better than Json.Net, at the cost of some flexibility that Json.Net offers.
I'm a little bit confused. If I run string text =System.IO.FILE.ReadAllText("fakeFile"); I get an exception that says "error file does not exist" on that same line, it doesn't jump to the line of code inside of the ReadAllText function. What makes my function any different? Why can't I duplicate this behavior on a custom function? 
The reason why the debugger breaks on the library line is because the IDE does not have access to the source code of the library. For your code however, the debugger will always try to stop as close as it can to the source of the exception. I think the question here is why do you want it to stop only on the `Foo.Bad()` method and not anywhere else?
Are you planning to sell it/license it? I've been thinking of the same with other parsing tech being made to use Span&lt;T&gt;s performance advantages would be a sick side gig/beer money income
Oh ok, I read your question wrong. The reason it is doing it on these is because the System.IO namespace is an already compiled binary. And your debugger is not stepping into that because the code is already compiled. As long as you have the symbols (which for that library you would) you can use "step into" to get in and see what's going on. Keep in mind that although your debugger is stopping there, you can look at the stacktrace and see exactly where the exception was thrown from. In order to do something similar for your custom method you would need to wrap the call in a try catch block. Like this: try{ Foo.Bar(); }catch(Exception e) throw; //or some other form of error handling } Using just "throw;" will preserve your stack trace to assist with debugging later. Or if you want to hide the stacktrace you can do throw e; To rethrow the exception from this new location. 
Sorry for my linebreaks being messed up there...replying off a phone.
Not sure if [this](https://stackoverflow.com/questions/3971512/c-sharp-how-to-select-an-open-application-window) helps?
I want my program to stop on the [`Foo.Bar`](https://Foo.Bar)`()` call instead of going inside of the function because I'm trying to debug problems with the object calling Bar, not Bar itself. Currently, any time I call Bar I do so using [`Foo.Bar`](https://Foo.Bar)`(this)` . This allows me to then inspect the calling object in the inspector to try and figure out what caused the bug but this work around is inconvenient and slow. I would prefer to instead have it simply stop at the function call if there is an exception because that's where the problem is, not inside of the Bar function.
So I have to wrap all [Foo.Bar](https://Foo.Bar)() calls in try catch statements? There isn't a compiler flag I can use or something that does this automatically?
I don't really understand what you're actually asking for, but the `[DebuggerHidden]` attribute may do what you're looking for.
One other useful thing you could try is running [SQL Server Profiler ](https://docs.microsoft.com/en-us/sql/tools/sql-server-profiler/sql-server-profiler?view=sql-server-2017) which you can pause and run just as you are running the queries against the database and see what the sql query outputs are. This tool may give you insights into how you are building your queries through EF and if you could improve on said queries. This is a tool for SQL Server, if you are using another database, I'm sure there are equivalent tools (I just don't know what they are). Also, some queries might be "complex" and if you don't necessarily have the experience or skill with SQL, you could check with your DBA (or DBA friend) and see what they think of the queries.
If you want it to be thrown as close to the Foo.Bar() line as possible, yeah you'll have to. And there is nothing to do this automatically that I'm aware of. There is no compiler flag ecause these are happening at runtime, they have nothing to do with the compiler. A better question is why do you want to throw it right there? It's best to only catch the exceptions that you need to, otherwise debugging is gonna be a pain.
Thanks, I use that pretty regularly to trace what is happening in the application... So I can emulate it in code, without automating the UI, and generally just learn how it works. I guess I don't have a lot of xp when it comes to going from code to sql though so this is gonna be my first attempt. :) 
To go a little further on the above answer, if you double click Foo.Bar() in the call stack, you can see the state of the objects at that call time. Here is a quick [example](https://i.imgur.com/92ZdFL6.png) In the bottom right, you will see the call stack, the yellow arrow is the exception, the green arrow is the line I clicked. In the editor window, you will see that a = 1. 
You're on the right path. You need a class that holds that student info. &amp;#x200B; `class StudentInfo` `{` `string studentName = "";` `string className = "";` `int rating = 0;` `int experience = 0;` `int effective = 0;` `}` &amp;#x200B; The write and read from the console that you have should be a loop (for however students you want to enter. extra credit: have the first question ask how many users and loop for that many times &amp;#x200B; You will need an ArrayList of the StudentInfo (ArrayList&lt;StudentInfo&gt; students = new ArrayList&lt;StudentInfo&gt;(); &amp;#x200B; After you gather the info create a new instance of the StudentInfo, set those values and then add the new StudentInfo object to the arraylist. After the loop where you gather the students, you'll then want to loop through the arraylist to do the calculations that you need to do. (I'm not doing all your homework, once the data is gathered looping through the array list can get you what you need) &amp;#x200B; &amp;#x200B;
Bingo, all this, user account levels (e.g admin, user etc) and things I haven’t even though of yet has me thinking there has to be some good frameworks out there that take care of the heavy lifting I can just style up. 
Thanks, I’ll check this out. 
That works perfectly. Thanks.
Yep, you're right, my bad.
You realize that the new MS parser will kill any plan of selling it, right?
Oh, no, the ship has totally sailed for my idea for JSON lol, and how could I compete with JSON Soft or .NET that would make parsing JSON a core feature. There was a post here in this sub about a CSV parser that was super fast, so even parsing CSV i'd be behind you can parse more things that just CSV and JSON :\^)
I don't plan on selling it, I'm developing it with one purpose in mind. I will probably put it up on GH when it's done.
A different way of writing.. https://stackoverflow.com/questions/5259759/how-can-i-convert-a-datatable-to-an-xml-file-in-c https://www.c-sharpcorner.com/UploadFile/mahesh/writing-xml-using-dataset-in-C-Sharp/ https://docs.microsoft.com/en-us/dotnet/api/system.data.datatable.writexml?view=netframework-4.7.2 xpath parsing is definitely the easiest method I've found.
I think you'll find developers aren't going to pay for serialization libraries. Remember ServiceStack by chance? That used to be pretty popular, and offered much more than JSON serialization. Until they went to a paid model.
Have you seen https://github.com/ServiceStack/ServiceStack.Text/blob/master/README.md#servicestackjsonserializer
Forgive my ignorance, but how is this going to benefit me over the Nuget package, newton.json?
I agree with this suggestion. You can encrypt something to either the machine or the current Windows user and not have to deal with a key (Windows deals with it for you). The .NET API for this is the ProtectedData class: https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.protecteddata?view=netframework-4.7.2
WPF is coming to .NET Core 3.0 https://blogs.msdn.microsoft.com/dotnet/2018/10/04/update-on-net-core-3-0-and-net-framework-4-8/
Newtonsoft.Json, Oh, If I ever start a blog, one of my first posts would be about it. - VERY liberal on input acceptance. - Utter dog performance wise. As an extreme-ish example, I've had large datasets (Think 10k+ records) where the serialization/deserialization has been cut down by *stupid amounts* just by using something other than JSON.NET. - Prone to abuse. That's not a fault of the *library*, mind you. But, #2 and #3 mean it's not a first choice for me. Point 1 can be a problem in that data can be converted in surprising ways at runtime. I'd rather treat most of those issues as a bug and be sure the frontend is following expected logic rather than possibly converting things in a way that is not apparent. Point 2 is something that rears it's head when you want to scale and find that a lot of time goes into just parsing requests in/out, or, worse when you realize that someone on your team has abused Json.NET in ways that make you vulnerable to *serialization attacks*. To be clear... that doesn't make me against type information being fired across API boundaries as a whole. If you're doing internal point-point APIs and have decent security between them, knock yourself out. But I've seen APIs that leaked their Json Type information, as well as the fact that I *could* poke back with things that do other bad things on `Dispose()`. Point 3 refers to cases where the configuration is used such that whatever comes out is only JSON in the basest sense, but is not really at all human readable without a parser, or lets one bastardize the spec beyond imaginination. This is a subjective thing to me. `PreserveReferenceHandling` is the biggest offender, but it would still take extra Configuration settings on top of that to really make me wish they added an extra layer. UTF8Json is the new Bees Knees, since JIL is apparently in a state of dire neglect. WAYYYYYY faster than Newtonsoft.JSON, and not just from a serialization/deserialization aspect; the lower memory usage means less GC pressure, which means your app overall will perform better.
performance
&gt; Utter dog performance wise. I remember when everyone started using JSON.NET because the build-in MS parser was so slow.
`Thread` is similar to `Task` in many semantics, but *how* they are executed is very different. `Thread` is a dedicated thread started on it's own. Each `new`'d thread will consume a given amount of memory (I believe 1MB is the normal number to use in figures.) `Task` is by default queued on the **ThreadPool**. The ThreadPool is what it says on the box. However the pool requires more consideration for work and tuning; it uses a Hill-Climbing Algorithm to decide when to ACTUALLY spin up a new thread versus waiting for an existing `Task` to complete, and has other settings around things like 'how many threads do we create before invoking hill-climbing` (btw, this number is different in service/console than in IIS scenarios!) **IF** you are in a console/service scenario, you may want to try : `ThreadPool.SetMinThreads(16,16)` (and, while you're at it, `System.Net.ServicePointManager.DefaultConnectionLimit = 10`) as close to the entry point of your application and see if things look better/worse... can adjust from there!
For Q&amp;A style things instead of 'discussions' I'm a fan of https://github.com/YodasMyDad/mvcforum
Why on earth would you want to support UTF-16?
Because .NET strings are UTF-16 natively.
for Windows only... just a minor detail I'm sure, or maybe a fundamental shift in direction back to the old ways - who knows?
[Not a new idea](https://elegantcode.com/2009/01/10/refactoring-a-switch-statement/)
I think it's a great idea, but I wouldn't recommend it. I do think performance would not be great but tbh I think it wouldn't matter unless the coffee block was hit really frequently. More importantly though, if the code base it's going to be shared I think it's a data structure that is much harder to understand than a switch statement. And if abstracting it to make it more readable is the desire you can always wrap your switch statement in a method, which doesn't incur a performance penalty
Did that article really just say that "JSON has passed XML?". Jesus. 2005 wants it's headline back 
No, I think it means they realized that EF isn't really the golden haired child and that they don't need to cram it into everything.
They are targeting a very specific use case: existing WPF users who want better performance or the ability to compile the application into a single EXE. Which sucks, because that's not the use case I want to deal with. 
.net strings are encoded as UTF16 where most modern text files (including json) are encoded as UTF8.
Very interesting read, serious thanks. Can’t wait until I’m at my computer again to dig into this.
Check this one....[C# Interview Questions](http://net-informations.com/faq/default.htm)
Use intellitype to see if the object has a Dispose method. If it does, hit F12/definition on that method to see where it's defined.
Fucking hell! I'm laughing so hard, because now you've pointed it out, it's so fucking obvious! I mean, I've been writing C# for about 10 years and it just never occurred to me to just check for a Dispose method, rather than look at the definition! I guess that once you start doing something one way, you just get ingrained into that habit. I'm leaving this post up as a testament to how bloody stupid I am. Honestly, I'm surprised I'm able to breathe by myself! lol
LOL! Don't be so hard on yourself - we all have those senior moments. Like you said, it's easy to get so ingrained into one way of doing something that you forget there are other ways. Anyway, happy coding!
You can document your methods using XML comments. See [here](https://docs.microsoft.com/en-us/dotnet/csharp/codedoc). If you add a Summary element for your method, then hovering on the method in Visual Studio should then display the summary text. However, I don't think it is possible to access the XML comment content at runtime as the comments are not stored in the assembly.
This is exactly what I was looking for, thanks!
.Net Strings are UTF-16. They use multiple Char instances to represent surrogates. &gt; A String object is a sequential collection of System.Char objects that represent a string; a System.Char object corresponds to a UTF-16 code unit. https://docs.microsoft.com/en-us/dotnet/api/system.string?view=netframework-4.7.2 Try it: https://dotnetfiddle.net/t6AA47
HTML is XML and I heard some people out there are using it as output from asp net core
All chatter aside, Microsoft provides [guidelines](https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/property) on this.
That syntax is recent, though.
Why is everyone hammering on json? With small files i get it, but large files will never be as efficient as they can be when you save them as text files. (Like json, xml, etc.) I might have missed it, but why is json so popular ?
Fucking Finally!!!
Love your kind of self-sarcasm. In my last, say, 15 years as senior dev I had these obvious revelations so many often.
Seriously?
OMFG! You're right!!! And expanding on that, instead of doing `1 + 2`, you can also do `2 + 1`! Holy, this changes **everything**!
MS already has an implementation they've been working on for a while. I presume this is what they're talking about in this github post: https://github.com/dotnet/corefxlab/tree/master/src/System.Text.JsonLab/System/Text/Json
If you're interested in reading about this, they're sometimes called yoda conditions.
HTML is not XML. Not all its variants anyway: only XHTML is.
Forget about ArrayList; they are ancient and deprecated. You should generally not use arrays either. Stick with List&lt;T&gt; instead. 
My instinct telling me this sound like sarcasm but optimistically, I'm just new to coding and didn't know a whole lot about coding. I'd say this is a great suggestion... 😅
&gt; First of all - never, ever create your own algorithm. OP is taking about implementing a standard algorithm, not creating his own. This can be a fun exercise. &gt; First of all, it’s a lot of completely unnecessary effort. Meh... there can be many reasons for doing something. Don’t be so negative. 
Always, as a rule. By which I mean, always start out with things private and only make things public as needed. 
Ish. It definitely depends on the style of application. 
[This one?](https://en.m.wikipedia.org/wiki/Yoda_conditions) 
== is math too :) It is **equivalence relation** and it must be reflexive, **symmetric** (your discovery) and transitive. But in csharp (if you are crazy enough) you can easily overload == operator so your example won't work.
I prefer `if (item is null)` Its more explicit, and the 'is' operator cant be overridden for dumb reasons (looking at you, Unity!)
A random URL from an image I searched on Google. Every time it's different.
Only covers a small part of what you want, but I would recommend using NSwag to generate your TypeScript client code for accessing your API. https://docs.microsoft.com/en-us/aspnet/core/tutorials/getting-started-with-nswag?view=aspnetcore-2.1&amp;tabs=visual-studio%2Cvisual-studio-xml
Yea I just like to write it that way. If they're using the slightly older syntax it should be return _property for the getter.
I'm sure it will be... just like Entity Framework 6 is being "developed".
Linq is mostly in single namespace, most of the library creators fuck things up by splitting them into bazillion different places (even nugets). Also Linq is well thought out and "limited scope" so it doesn't need so many transitional objects (everything basically can work on `IEnumerable&lt;&gt;`) that would make extensions undiscoverable. 
Yes, I think that's exactly what I was trying to say about why I don't mind Linq, but you put it better than I did.
Ctrl+D will duplicate the line :)
Uh, what the fuck? Do you even math? = is transitive, y = 2 or 2 = y \+ is transitive, x + y or y + x "\*" is transitive, xy or yx "-" is transitive too, x - y or -y + x I did know that are trolls here but I didn't know there are idiot trolls too.
I think we're agreeing. I also said: &gt; If you're trying to do this for purely educational purposes, go for it. which I think is exactly what you're saying too.
the cursor can be everywhere on the line
Alt+(Up or Down arrow) will move the lines you have selected up or down 1 line.
Light theme? I find it interesting that no one is complaining about the squashed video.
You might want to look up transitivity and symmetry.
I just found this out today in school today. Great catch!
Yes, that looks pretty authoritative. I still don't understand how any json parsing library for .net can use UTF8 any more than Newtonsoft does. Or what that even means. 
There are different types of loops, with some different trade-offs // this is probably the most natural way to express what you're after for (var i = 0; i &lt; x; i++) { Console.WriteLine(i); } // but you could also use a while, especially if your conditions don't fit neatly into the template of a for() var i = 0; while (i &lt; x) { Console.WriteLine(i); i++; } // Or, if you want to be sure the loop executes at least once, you can also use a do ... while var i = 0; do { Console.WriteLine(i); i++; } while (i &lt; x); There's also a `foreach()` loop, but it's for walking through collections. You should be able to find detailed explanations of all of these in MSDN. Maybe start with one of the links to the right. Also, consider r/learncsharp for questions like this.
This is to do with populating the comboboxes from a database. I'm currently using SQLServer.
I'm with you. Yes, there are faster parsers out there. No, none are as complete, feature-wise. I use JSON.Net first, and then tune for performance with Jil later.
&gt; "-" is transitive too, x - y or -y + x "x - y" and "-y" use different operators.
He should probably start with operation vs relation :) 
I have VS 2015 and it's not working, do I need a newer version?
You don't even need to be at the end of the line. It will copy/cut the line if you don't have a selection.
HTML is valid XML. Ugly horrible XML, but valid XML. XHTML was an attempt to make HTML less of a dog's breakfast without breaking the internet, and is also XML.
Text-Editing Shortcuts work on whole line by default if you don't have anything selected.
== is **symmetric relation,** y == 2 or 2 == y \+ is **commutative operation**, x + y or y + x \* is **commutative operation**, x \* y or y \*x \- is **not commutative operation**, 5 - 3 is different from 3 - 5 
Getting people to pay for a super fast parser of anything is really difficult. Honestly I can't think of anything simple enough to do with zero allocations that'd also have anyone willing to pay for it. There are certainly data formats people will pay for parsers of, but good luck doing them with span. 
Are you in the XAML text editor? Keyboard shortcuts can be context specific. Tools - Options - Environment - Keyboard - search "duplicate" - select Edit.Duplicate "Shortcuts for selected command" dropdown shows that the standard text editor, duplicate is CTRL+E,CTRL+V
VS2017 reporting in, this isn't a default behaviour. Have you got any other extensions installed? Or perhaps it's my many extensions I have that is interfering.
I like XAML, I did not like this article. Rename it "Why XAML? Why in 18 months, ish, if you're lucky?" and we're on the same page.
Agreed, BUT, if the student is being told to use ArrayList, they should use ArrayList. I know it's moronic, but they grade against the course expectations, innovation is not recognised :/ OP, stick with what they want rather than what is right. If you want to try for extra marks, add and additional version which shows how List&lt;&gt; works better, but separately from the actual answer.
Your example looks like it should work fine. Change the 11 to a 5 to have it loop 5 times
or you can just: dd, p, y I don't want to start some circlejerk on VIM, but probably the best skill that i learned 7-8? years ago, was basic VIM commands. I don't know all the hardcode magic. I never use VIM on it's own, but i do use emulation VS, Android studio, Code, Sublime, even in Firefox with text edit box, like this one ([Wasavi Extension](https://github.com/akahuku/wasavi)). https://devhints.io/vim VIM is just convenient, for me it's not about speed, but ease of changing text. 
I'm honestly not a troll. Sorry if I act like I was. I was just new and can't tell the different between symmetry and transitivity. (I didn't even know what it is because [here goes my terrible excuse] English isn't my primary language) And I thought what I said was that = would work only with math operation like +, -, *, or / Like this: int add = 9 + 5; add = 5 + 9; int multiply = 9 * 5; multiply = 5 * 9; The whole point of my post was only that I thought == or = work only that ^ But as I found out it was working with object as well. And someone else told me it was called Yoda condition. //Like this string item = ""; if (null is item) { } And I'm also sorry as well that I didn't stated clearly that I was taking about math operator in c# not math in general. And I'm also very sorry about my terrible English.
[XAML Standard: Because you needed another one to deal with.](https://xkcd.com/927/)
```if (null == item) ``` is a throwback to languages where ```if(item = null) ``` would assign null to item, it's not needed in C# and IMO makes things less readable.
Fuck... seriously?
What keyboard shortcut though
I mean.. I prefer that one too. It easy for readability. But I was just stumble upon it on GitHub and it weird me out that's all. :/
Well.. I just found it out online and post it here. Because I didn't know where to talk with anyone else. Post it here seem relatable.. PS: Set a phone number as your username might be a bad idea :/
Ctrl+C to copy. Ctrl+X to cut. Ctrl+V to paste.
A couple of my favorite VS Shortcuts Comment/Uncomment block of code - Ctrl+K+C/U Collapse/Expand selection - Ctrl+M+H/U Auto complete snippits - Double tap TAB (Example: type 'try' into VS and double tap TAB the rest of the try catch block should be generated for you) Surround (Wrap) code - Ctrl+K+S (For wrapping existing code inside new statements or loops, without using cut/paste) Duplicate current line of code - Ctrl+C+V Cycle through clipboard items - Ctrl+SHIFT+V Find matching braces - Ctrl+J Format code - Ctrl+K+F Intellisense autocomplete - Ctrl+(.) You can find a complete list of VS keyboard Shortcuts here - https://www.dofactory.com/reference/visual-studio-shortcuts
Press alt and click + drag your mouse down. It will select all the lines and you'll be able to write on all of them at the same time. If you copy a line and paste it while selecting multiple lines (with the alt selectio)n, it will paste it on each lines.
One problem I have with fluent api's is that extending the behavior is often considerably more difficult, if even possible, due to the various ways people find to handle chaining methods to essentially build up parameters.
Dupicate Current Line of Code - CTRL+C+V 
Does this work in VS code?
OK, browsers will accept HTML which is not valid XML, but browsers will accept anything. 
It's a Resharper command
Cursor can also be anywhere on the line There are other shortcuts, you should check them out. I made flashcards out of them to learn them.
&gt;2005 wants it's headline back "JSON is the new XML "
You are one of today's lucky 10.000 https://xkcd.com/1053
THANK YOU!!!!
Format currently opened document &gt;Ctrl k+d &amp;#x200B; Format current selection &gt;Ctrl k+f &amp;#x200B;
Thanks for the help but my stupidity did not explain it correctly. What I'm after is how to make the code repeat 10 times in the sense that it will display 1,2,3,4,5,6,7,8,9,10 - 1,2,3,4,5,6,7,8,9,10 and then stopping after the 10th time. 
That's really just adjusting the start and end conditions *or* the body of the loop. Here's one way to do it: for (var i = 1; i &lt;= 10; i++) { Console.WriteLine(i); } Please keep in mind that r/csharp is not a sub for getting help with your homework. If you post a lot of questions like this, here, people *will* get irritated.
 for(int intialValue; initialValue &lt; Desirednum; increment initialValue){ what you want to happen each time the loop is run.}; I hope it’s formatted okay. Since I’m also mobile. This is the format that I learned first and built up from there. 
Nah just crtl+c and ctrl+z above the line where you want it to be inserted.
Your trying to do a indirect lookup using combo boxes. Basically you can set it up in the same way as the excel version of this. Combo box gets selection, this value + some string to equal the name of the next table to indirectly lookup against. So you create a dictionary, and populate it with 1 combo values as key and sql queries as values, so this way when someone selects a value, you look it up in the dictionary and return the proper query and load that as a data source into the next set of combo boxes. There is probably some better way, but this is just my 1st pass at it.
"if (clientList[i] != "" || clientList[i] != null)" this needs to be "and" (&amp;&amp;) not "or" (||) You could also use the String.IsNullOrEmpty() function instead of two separate checks.
So will ctrl-X.
Thanks for your reply! I keep forgetting about the "IsNullOrEmpty" method. I will use that instead, however the underlying issue is that two items are being added to the list instead of just the string I want (string and a null value). 
Yeah, that I don't know. Whenever your code isn't doing what you think it should be doing, your first step should be the debugger. Step through the code and set a watch on clientList[]. If it's adding 2 entries (the string and a null entry) you should see those entries being added. In the code that you've posted, I don't see how that's possible. But if it's happening, the debugger should help you find out where and how.
When the item is being added to the list, try the "IsNullOrEmpty"/"IsNullOrWhiteSpace".
I'm sorry I'm a noob to programming, what do you mean with comparing? I'm just trying to do this: insead of "Keys.H", I want to put it like this "Keys.(string here)". so I want to read the string from a .ini file.
You could build you own Dictionary that maps strings to Keys, and then reference that in the comparison.
Ahaaaa okay I see now. You may want to look into [this](https://www.nuget.org/packages/ini-parser/) nuget package.
yes
Oh wow incompletely forgot to mention Ctrl+Space... I'm such a bad dev lmao. 
Don't you mean Alt+Drag?
2016 - Yaml is the new job 2018 - Yall heard of ini files?
Also you can double click and hold the last click and drag to select words. And you can triple click and drag to select entire lines.
Yeah. My explanation could be simplified.
Yeah, that I knew. But the fact you don't have to highlight an entire line is great! lol
Yeah, the XML file built when you build a solution with documentation comments are used by IDEs. While any piece of software can load those XML files (if they are distributed with the app's DLLs/EXEs that is), the run-time of an app has no implicit use for them. However, if you distribute the DLLs with the XMLs to other devs (to use like a class library) and they use them, the XML files can help them with in-IDE documentation.
If the database is already built then it figures it out from your properties, especially since you've picked &lt;ClassName&gt;Id which is an convention EF looks for. Try messing around with the Id property name, like using the word "Key" instead and see if it still works after you comment out the modelbuilder.
https://docs.microsoft.com/en-us/dotnet/api/system.enum.parse?view=netframework-4.7.2
This works with ctrl+alt+(up/down) arrows aswell
annoyingly, this always seems to include the "/n" at the end. I've been copying lines for a while like this but when I paste them it always adds an empty line under them :/
 Since you don't seem to have been around, early .net core were json files. People didn't like that because all of the current build tools, msbuild and user tools were written off the XML structure, so they put it back.
For strings maybe. It works great for everything else.
I haven't worked with the Paypal API and don't know what kind exactly you're working with, but when I had to do something similar with an OAuth API I used an embedded `WebBrowser` control, set the redirect URL to an invalid one (like http://myapp.invalid/someservice), and set up an `OnNavigating` event handler on the browser control to watch for navigation to that invalid URL.
`Console.WriteLine($"looped { i } times");`
The simplification they did of csproj files was way more important than the serialization format. It's possible to edit csproj files by hand without too much pain.
Just use Benchmark.Net and try it out for yourself. You're almost certainly micro optimizing something that doesn't matter.
This is called column select mode in a lot of editors. Regex replace, un/comment, and indent left/right might be the only thing I use more. 
Thank you for your opinion!
How do you know someone uses VIM? They'll tell you!
Depends on which keyboard presets option you picked when your VS settings were initialized. Check the keybind in your Edit menu.
Works in VS 2010.
The idea is to use UTF8 without actually creating new strings from the loaded bytes. Once all the UTF8 bytes are loaded into memory from, for example, the network, currently .Net has to decode the bytes from UTF8 to UTF16 in order to make .Net strings. This uses time and memory. If .Net could just use the UTF8 bytes in place, then it could avoid creating new String objects. This would save time and memory, making it faster and make better use of resources.
So useful, yet so annoying sometimes. 
Yes, it defines that because people did it and browsers let them. You weren't supposed to do that, but that's HTML for you. 
&gt; it defines that because people did it and browsers let them AKA, people were sending *invalid* XML, and the browsers had to make the definition for HTML no longer XML-compatible to be able to make sense of it. And yes, it was later part of the new standard. But with all the changes HTML has gone through the years to be able to accommodate the lazy programmers, this statement is false: &gt; HTML is valid XML
I was using it for xml comments today and it was doing that. Very annoying behavior
Happy grumpy? [https://gfycat.com/AptThornyCopperbutterfly](https://gfycat.com/AptThornyCopperbutterfly)
STRG+E,V it is
Take a look at the side bar :) It gives information on where to start and how to get started with C#. 
I agree, but students don't get that sort of flexibility. This is the same shite that mean't I read a "topical" book for English in the 80's which was written in the 40's. :( Ultimately you do what the grades require and then GTFO and go somewhere that isn't so poor.
I'm using the InMemory store, so I guess it's safe to assume it starts from scratch everytime I run the server? I much prefer the no fluent api setup, but idk which problems I will run into down the road as many 2 many relations with no fluent api setup is a goal for ef core 3.0,so idk what is happening here.
Yes, EF automatically figures that out. You only need to use fluent api if it changes for instance a naming standard, such as a different Id name or a completely different property. Otherwise, it will just work.
I mean it's the class structure itself is enough for EF to figure out what your doing, you can just give the PlaylistSong class a Id PK and it will work the same. 
Hi, Sorry for being late. My focus right now is only on algorithm implementation, but I will try to write better code and build better GUI. Anyways here is a download link to the file: https://www.dropbox.com/s/yxhqhixrrf3fhr6/Image%20Segmentation%20with%20KMeans.zip?dl=0
hmm because I followed the official docs and they still use the fluent api in their example... https://docs.microsoft.com/en-us/ef/core/modeling/relationships#many-to-many so I thought this was a necessity.
Thank you! Didn’t know there was such a thing!
I sometimes just write using (var X = new Whatever()) { } And see if I get a compile error.
People did like, just a few vocal minorities. All people running windows shops too. MS missed an opportunity to increase it's base in favor of a small but loud group of .net users who could use the legacy stuff anyway. Stupid 
I hate huge constructors... just personal preference In ViewModel: public VMWhatever(Istorage) { ... } //constructor with the database/files interface where I will get the employees from public List&lt;Employee&gt; employees { get; private set; } // I bind my combo to this list in XAML public GetEmployees() { ... } // I fill employees list here In Code Behind: var ctx = new VMWhatever( storage ); //Instance from your favorite IoC Container: StructureMap, NInject, Unity, Funq ctx.GetEmployees(); //we need to fill the combo DataContext = ctx; MVVM to me is NOT zero code in code behind, but everyone's opinion in this topic is different... I ALWAYS use nuget Fody.IPropertyChanged for my ViewModels
As for how it's figuring these things out; you're basically giving it all the necessary information in the classes, using convention names it's looking for. The modelbuilder is redundant. Looking at the classes, I understand the idea behind it but have you really thought about why you want many-to-many here? This works fine as a tutorial example, but in the real world I wouldn't really want my songs to care which playlist they're on, the playlist itself would keep track. Unless that's a specific feature you actually want to provide - Spotify doesn't do this, it just allows you add a song to a playlist and then reacts if it's already there, I can't select a song and get the playlists.
It's not a Resharper command, it was added in Visual Studio 2017 15.6 update.
Duplicate line is added in Visual Studio 2017 15.6 update.
True, also its almost 5mintues pasting since told someone I'm also a vegan. 
I wonder if Microsoft will think of acquiring avalonia like Xamarin
Ctrl+E, V or Ctrl+E, Ctrl+V duplicates line. It was added in Visual Studio 2017 15.6 update. Other useful shortcuts in Visual Studio 2017 - Go to All (Ctrl+T or Ctrl+,) maybe one best of the shortcuts - Quick Actions (Ctrl+. or Alt+Enter). - Shift+Ctrl+Space to see method parameter info. - Alt + Up/Down move line up or down - Selecting text and holding Alt and arrows up/down you can move text block. - Ctrl + Left/Right to move cursor through code 
word[word.Length - 1]
I use this shortcut list http://visualstudioshortcuts.com/2017/ I think it's more readable.
Alt+Enter for Quick Actions (correct name for what you mean by Intellisense) and F2 shortcut for rename are much nicer.
thanks &lt;3 
I’m on mobile right now, but the best starting place has to be the official Microsoft ASP.NET Core Angular template: https://docs.microsoft.com/en-us/aspnet/core/client-side/spa/angular?view=aspnetcore-2.1 I am putting the finishing touches on a ~1 month project using this template at work. It was my first ASP.NET Core app and my first intro to Angular 2+ (I maintain some AngularJS stuff). It’s been pretty good, but definitely a lot to learn. Let me know if I can help.
Also works when you select text, then you can move whole selection by keeping Alt pressed.
You could create an Ajax call that posts the employee id to a controller action. Then just add an event listener in the JavaScript to detect when the button is pressed, and put the Ajax call in there
If the serialization format isnt important why did they reverse course initially?
Visual Studio 2017 since update 15.6 has duplicate line shortcut. Default shortcut for it is (Ctrl+E, V or Ctrl+E, Ctrl+V).
As of right now: &lt;TargetFramework&gt;netstandard1.1&lt;/TargetFramework&gt; https://github.com/dotnet/corefxlab/blob/master/src/System.Text.JsonLab/System.Text.JsonLab.csproj
Pretty sure you can't cast an object as int (so B and C are eliminated), so you have to cast it as something else first. But you can't case an object as a double, either, so that eliminates D.
Thank you, I did not know this.
And Ctrl+Shift+Space.
But an object can be cast to a float, how come? 
You should look to the dotnet/cli source https://github.com/dotnet/cli/tree/master/src/dotnet and https://github.com/dotnet/cli/tree/master/src/dotnet/commands Maybe this will give you some inspiration 
See boxing and unboxing: https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/boxing-and-unboxing On this line: object amountRef = amount; ... the float is being boxed into an object. If you tried to do this: int balance = (int)amountRef; Then you would be attempting to unbox a float into an int, which *(I haven't tried, but I assume)* would throw an error. To mitigate this, `(int)(float)amountRef` unboxes to a float then casts to an int.
The amount parameter is a float that is assigned to amountRef, which is an object. The reference to amount is “boxed” when it is stored by amountRef. The assignment in option A unboxes the float, then casts it to int.
Oh wow, I don't know why boxing didn't cross my mind while answering this question! Should have thought about this more carefully, thanks! 
If it makes you feel any better, everyone does this even at work. It's pretty funny to be sitting in a quiet room and a barely controlled "motherfucker!" goes out as one of the developers realizes something basic.
Sure. Here's numbers from [UTF8Json](https://github.com/neuecc/Utf8Json). JIL is almost as fast (Probably would be very close if it could write to UTF8 directly,) but I still have reservations about it's current maintenance cycle.
Huh, F2 to rename an item only works on files for me
They went after JSON serialization to appease web developers (rightly so), but they forgot that their customers are used to legacy support measured in decades. I didn't say the serialization wasn't important, its just not nearly as important as making the csproj files useful to edit by hand to begin with.
Oh diden't know that. But it's been like that in Resharper for a couple years before that update though 
You need to let execution return to the GUI event loop (that happens when your method finished executing). By using `Thread.Sleep` you block the thread from doing anything (including re-rendering with the updated color). Look up GUI main loops and the concept of the main / GUI thread.
My guess is that the color does not update before the thread.sleep(1000) is called, so the color does not update on screen. I am not sure and also don't know how to solve this, sorry.
You'll need to provide some more context. This event, when should it occur? Should each session subscribe to it? Is it enough to subscribe once at server startup?
I'm not 100% sure; intuitively it shouldn't be possible. Re: your edit, yes, you can convert an object to an int (using other methods) - just not sure that you can directly cast it in the ways suggested in the question, other than A.
I give myself 50/50 if I would have answered this right on a test. Odds are, I would have thought A looked too weird to be correct and gone with B. Here on Reddit, I had the luxury of sitting back and thinking about it after knowing the correct answer. :-)
I see, thank you. I have found away around this by removing the sleep and set colour to black, and instead adding a timed event that sets it back to black after an elapsed time.
That's exactly what happened with me, A looked a little weird and immediately thought it was B lol
Just edited my post to let people know my Web knowledge level is quite low. So I must admit what you are saying here is complete nonsense to me :-) I think what you say about putting the employee field in a form, that might be what the standard code already does. This code is in the edit.cshtml &lt;div class="form-group"&gt; &lt;div class="col-md-offset-2 col-md-10"&gt; &lt;input type="submit" value="Save" class="btn btn-default" /&gt; &lt;/div&gt; &lt;/div&gt; So if i press the Save button, it seems to call my Edit method in the AXQRCodeController. public ActionResult Edit(string prodId="") { QRCodeModel qRCodeModel = new QRCodeModel(); qRCodeModel.ProdNumber = prodId; qRCodeModel.ProdStatus = prodStatus; if (prodId != "") qRCodeModel = GetFromAX(qRCodeModel); // Getting some data from the External system return View(qRCodeModel); } But this is also the method that is called when I start entering this URL in a browser, http://localhost:51843/AXQRCode/Edit?prodId=1234 (This is the url also generated by the QR code) 
 using System; using System.Collections.Generic; namespace Survey { static class Survey { // TODO: Accept inputs from user regarding course survey questions // TODO: Use 2 or more classes // TODO: Use multiple methods and properties with get / set accesors // TODO: Validation of user input using control and conditional statements // TODO: Use arrays to store values and display AVG | MIN | MAX scores after a few surveys as summary // TODO: Create loop event for accepting multiple surveys // TODO: Create calulation methods for avg / min / max to be displayed static void Main(string[] args) { // Create a new List Array with getters | setters from the class "StudentInfo" var answersList = new List&lt;StudentInfo&gt;(); // Class Survey // Console.Write("Student Name:"); string studentName = Console.ReadLine(); Console.Write("Class Name MATH, HISTORY, or ENGLISH:"); string studentClass = Console.ReadLine(); Console.Write("Please rate this class from 0 - 5?: "); int studentRating = Convert.ToInt32(Console.ReadLine()); if (!int.TryParse(studentRating, out anInt ) { Console.WriteLine("\n\r\tThat was not an integer."); } if (anInt &lt; 0 || anINT &gt; 5) { Console.WriteLine("\n\r\tYou entered a value that is outside the expected range."); } Console.Write("How would you rate your learning experience with this class 0 - 5?:"); int studentLER = Convert.ToInt32(Console.ReadLine()); if (!int.TryParse(studentRating, out anInt) { Console.WriteLine("\n\r\tThat was not an integer."); } if (anInt &lt; 0 || anINT &gt; 5) { Console.WriteLine("\n\r\tYou entered a value that is outside the expected range."); } Console.Write("How effective would you rate your class from 0-5?:"); int studentEffective = Convert.ToInt32(Console.ReadLine()); if (!int.TryParse(studentRating, out anInt) { Console.WriteLine("\n\r\tThat was not an integer."); } if (anInt &lt; 0 || anINT &gt; 5) { Console.WriteLine("\n\r\tYou entered a value that is outside the expected range."); } answersList.Add(new StudentInfo { StudentName = studentName, ClassName = studentClass, ClassRating = studentRating, LearnRating = studentLER, EffectiveRating = studentEffective }); /* Output some basic table structure for easier viewing. WriteLine using composite formatting, {0,-15} 0 = the placeholder for a value to be inserted, -15 = the width of the column. the - means left justified. This should probably be rewritten to use preset variables instead of manual strings but it should show you the basic idea. */ Console.WriteLine(" {0,-15} {1,-15} {2,-15} {3,-15} {4,-15}", "Student Name", "Class Name", "Class Rating", "Experience", "Effective"); Console.WriteLine("--------------------------------------------------------------------"); // Loop through the List and print out each item foreach (var i in answersList) { Console.WriteLine("{0,-15} {1,-15} {2,-15} {3,-15} {4,-15}", i.StudentName, i.ClassName, i.ClassRating, i.LearnRating, i.EffectiveRating ); } Console.ReadLine(); } } public class StudentInfo { // This class creates getters and setters for all items in an Array to be used public string StudentName { get; set; } public string ClassName { get; set; } public int ClassRating { get; set; } public int LearnRating { get; set; } public int EffectiveRating { get; set; } } } So this is my latest revision, but I am getting stuck on the user input validation. I'm getting an error with the AnInt portion which I saw in a youtube. I'm not sure if I should be creating a variable in it or what? I still have to figure out how to do the validation on the string text, but overall I am making progress.
Even though you found an easy way to discover this, you are actually touching on an important point; this is the very reason why so many .NET classes re-state their interface implementation in the type signature, to make it apparent immediately. I think that's good practice.
Just bought it on the deal, thanks man!
Gonna floppier that tonight, thanks!
Didn’t know I could do this, good looking out!
I always love official MS tutorials so this will help a ton, thanks!
&gt; if (prodId != "") I'd use ` if (string.IsNullOrEmpty(prodId))` if I were you
We're using Owin Selfhosting, not Kestrel. What do you mean filters on the Task.Delay? I'll have to look at that when I get to work, but I'm literally just incrementing the counter at the beginning and decrementing it after the Task.Delay. There's nothing else in the action. If I reduce the length of the Task.Delay, it gets right back down to 0, so it's not like there's some kind of deadlock where it's stuck at 5. It's more like a ceiling. If I use 2 clients it will go up to 10. 
I like this project. But the source code scares me. 
Im going to write/convert a small shitty internal ASPX app in it. Going to be fun! I wouldnt use it for real production/live scales if needed for probably a few months after release tbh.
Vim, not VIM
I wasn't aware that HTML 5 had officially given up on even pretending HTML should be valid. This didn't used to be the case, and making that officially acceptable is a capitulation to reality, not an actual design. Beyond that though while self closing tags are not valid XML, that's kind of irrelevant to the original point. HTML is all the things that make XML bad, but more bad. 
I would probably go with threads that scan the modules and store the commands in memory for faster search. So for the background threads you could use IHostedService, and for key-value mem caches you can use IMemoryCache and put them in some singleton wrapper for easier reuse. You can get all these in-built with .NET Core 2.1, or you can make them on your own with older frameworks. Still not sure what is the thing you want to make, didn't see the picture.
&gt;We're using Owin Selfhosting, not Kestrel. Katana or a different implementation? &gt;What do you mean filters on the Task.Delay? I guess in web API they're [message handlers](https://docs.microsoft.com/en-us/aspnet/web-api/overview/advanced/http-message-handlers), but basically any code outside the action method being routed to that acts either before or after the action code runs. &gt; I'll have to look at that when I get to work, but I'm literally just incrementing the counter at the beginning and decrementing it after the Task.Delay. There's nothing else in the action. Yeah, but are you using the thread-safe Interlocked.Increment and Interlocked.Decrement or just i++ and i--? Again, from what you described, I don't think it actually matters (only one thread would be expected to be accessing it at any one time anyway), but it doesn't hurt to test all assumptions. &gt;If I use 2 clients it will go up to 10. 2 clients as in two instances of a program running on a single machine, or two separate machines? It really sounds like the issue is some configuration somewhere in the stack you're using that limits simultaneous requests from independent clients. It's just that it's the sort of thing that's really hard to prove until you find the actual setting in question. 
Ahh yes old habit from my main Dev language that does not have .IsNullOrEmpty
In my personal opinion, it's a bit overly complex and bloated. Too many layers of inheritance and indirection for my personal taste. 
Wait, what were you hoping to copy if you had nothing highlighted?
What I do is that I usually go like hmm wonder if this class implements IDisposable. Probably the easiest way
I double click a word and press Ctrl+c too fast.
Add a [HttpGet] attribute on the current edit action and add a new edit action that has the [HttpPost] attribute. Make sure they have different parameters, otherwise it won’t compile. In this case, if employee id is an int, you should be ok.
I know Windows can map the stylus button to many things, such as right-click or opening an app. I am assuming there was a default event/button, but really dont know.
I love when it’s just a semicolon or bracket or something. 
It's a contrived example to illustrate the concept of value boxing. &amp;#x200B; In real life situations boxing is almost always an afterthought or neverthought. 
I would if the model of Razor Components is suitable for my application. Since it requires constant web sockets connection and ships pieces of html back and forth I'd only consider it for internal apps or apps where we know that the users will have solid connection (usually work-related apps which are supposed to be accessed from a desktop computer and not phone)
UI framework are usually fairly complex, unless you use a very direct mode (usually limited to one platform) in which case you trade flexibility for ease of use and a more limited set of functionalities. That said I'm sure that Avalonia code could be improved in several ways.
Here is a typical format I use on functions in my own libraries and at work when they allow it. /// &lt;summary&gt; /// Performs some action with arguments and returns a &lt;see cref="CustomType"/&gt;. /// &lt;/summary&gt; /// &lt;param name="arguments"&gt;An &lt;see cref="ExpandoObject" /&gt; with properties.&lt;/param&gt; public static CustomType MyMethod() {object arguments) { // Process something. }
as @KryptosFR said, it is quite a unavoidable consequence of being a UI framework that has to support uncountable amount of configuration and rendering flexibility. Anyone is welcome to provide suggestions and/or code contributions on that regard :) 
Totally agree. I'm not saying its terrible. It does what it's intended to do. Nothing wrong with that. I just think there could be benefits to taking a less traditional OOP architecture. I'm not part of the development community. Nor have I studied the source enough to know in detail exactly how it functions. But from what I have looked at. It's general structure makes me think twice about using it. 
Yes absolutely. I've been working on a UI framework myself. One that is more restricted and less flexible. So I completely understand the amount of work it takes in making one. 
The device has browser with web sockets?
The device is the server. It runs Debian.
Definitely not battery powered. 
No u
I do see the appeal of a more streamlined approach but fortunately (or unfortunately, depending on your PoV) we have WPF as our inspiration, which is quite powerful but comes at the price of more abstractions.
If my timeline for release was after the official release date of .NET Core 3.0 I'd go for it.
What's an ini file?
While it is probably true it makes no sense why you would write this code You would just cast the float to an int directly from the start. :)
Download the WindowsAPICodePack, saves lives. I even built a wrapper for the task dialogue wrapper which over simplifies it, but it’s written in VB.
That's the feeling I got when looking at it. Class naming and hierarchy seemed rather similar. I just don't see why power and functionality has to come at the cost of performance and overall architecture comprehension. 
Many to many is the correct relation type, stop giving bad database design advice to newbies.
No one ever does this. It's garbage code. Most programming courses are hot vomit. &gt; Those who can: do. Those who can't: teach.
A connection can process a single request at a time in HTTP/1.1. To help with things like Slowloris or other DoS attacks, your server will probably limit the actual number of allowed connections from a user (though in this case the connection wouldn't be accepted, you'd probably get a gateway timeout). Browsers and HttpClient will also do their own internal limiting too for this reason, and you could be running into that too. I don't know where you can change this, but it's very likely an intentional setting somewhere and it exists for good reason. The session stuff is unrelated. You'd have to manually opt in and it would limit you to one.
Funny I'm just as stressed when I write a whole bunch of code and it compiles with no errors. Like it's impossible to make no mistakes so you assume you made a mistake that compiled fine.
or do int balance = int.Parse(amountRef.ToString()); lol
We havent got to optimizing things yet but we're getting there! There's alot of optimization opportunities so if you can help us that'll be greatly appreciated :) The codebase has grown huge but not unmanageable to say the least thanks in part to tons of interfaces and modularity that was architectured early on.
The absolute worst. 
I currently define my datacontext through my NavigationViewModel, and what I currently did to my comboboxes datasource is I created a class that pulls data into the database for each of them, one for Departments combobox,one for Positions combobox and so on. Or would it be better if I define it on a single class? But I think it violates SRP if I do it that way.
Like toml, but for old people 
To be honest mate, it's a bit of a contrived and deliberately confusing question. No one in their right mind would write code like this, which is why it was difficult for you to see the issue right away. *Let me unnecessarily cast this value to an object, and then immediately cast it to an int, causing the value to be rounded, so I can show the end user a completely inaccurate balance (unless the balance was a whole number to start with).* With a little thought, they could have come up with a better example to test your knowledge of boxing. Is this a Uni course, or something that you've paid for? If you've paid for it, I'd be tempted to start looking at alternatives.
Yes, that's a more preferrable approach for corporate support, in my opinion :) 
Bears. Beats. BinaryFormatter.
gotta force the int to a float or it won't accept the float data from amount.
Mission critical production. 
Thanks for sharing these [Mobile App Development](https://www.techgropse.com/android-app-development) Tools.
I use default C# keyboard settings. Maybe you use different one? You should be able to find in keyboard settings what shortcuts rename uses.
Yup 
Thanks that worked. One further question, if i change the value of one of the fields in my Model in the [HttpPost]Edit method, that value is not updated on the view. Can I get it to do that, or perhaps open a different page, (To show a status text of some kind showing the user that the process is done)
If I'm reading this correctly, you're asking about what kind of syntax you want the end user to use? Explicitly marked variables would almost certainly be easier for you, and avoids a potential issue with ambiguous input (say you have variables N,E,G *and* function NEG). But if you prefer the other approach, go with it. 
The cast operator does too many things: **Downcast a reference to a derived class** Control c = new UserControl(); UserControl u = (UserControl)c; **Convert an instance to something else** float f = 3.14; int i = (int)f; **Unbox a boxed object** object o = 1; int i = (int)i;
&gt; More important that any of this is to avoid writing code which might surprise other developers I cant say that Ive ever come across any of them in the wild. And If I did I would delete it really quickly. N.b. I didnt know base classes constructors are called first. I usually use :base() to explicitly call it, never knew I didnt need to.
Well, if you have NEG and want to input NEG(3), you can just type N\*E\*G\*(3) or just NEG\*(3) &amp;#x200B; But yeah, my question is which one would you prefer?
You can pass the model as the parameter in the HttpPost action and then return the view and pass that same model back in. Then, add a bool on the model called “Success” and just add an if statement in the view. Alternatively, you could change the form to an Ajax call, and instead of returning a View in the HttpPost action, you could return json with a success field. Much like the View method, there’s also a built in Json method in the Controller which will return a JsonResult. It takes an anonymous object. In the JavaScript, you can then check if the response.success is true, and update the UI accordingly
Do you guys program in text editors😂 how do you miss semi colons
Well, I tried out some hypothetical formulas and it definitely feels better to type `2z` than `2[z]`. Something like `[FOO] = 2[X] + BAR([Y],[Z])` adds a lot of extra key strokes. So I guess I change my answer - implicit variables seem more user friendly. 
And then you patch it right on production and it causes irreversible data corruption
You know, copy paste magic sometimes happens. Also my brain is stupid and pushes backspace button 1-2 more times than necessary.
I tried doing this: [HttpPost] public ActionResult Edit(QRCodeModel qRCodeModel) { if (!string.IsNullOrEmpty(qRCodeModel.EmployeeNumber)) qRCodeModel.EmployeeNumber = "We are done here"; return View(qRCodeModel); } Just for testing purposes, but the EmployeeNumber on the page still stays the same. Do I need to do something special in the View?
How is the employee number displayed on the page? Paste it as a reply, I think I know what the issue might be
From memory, we had to create a parser for simple mathematical notations in an early compsci course. The parser could work based on any of three different notations, prefix, postfix, and infix, and would build a tree based on it. Every node would have been either a value type, variable type, or an operator. There may have been some arbitrary rule that inputs all had formal and correct placement of parentheses and operators, such that 2+3(2) became 2 + 3 * (2). Either way, I think you would probably be able to start breaking down the formulas based on doing PEMDAS in reverse for my tree example earlier. Is there any reason to treat negatives with a supposed function instead of just a minus sign? You may need special code in both cases. Why not support both, and just run a conversion step on a formula before parsing internally? 
Composition is correct. Your aggregation solution in not complete though, make sure to create a reference to a b object: public class A { private B b; //what you did public A(B b) { this.b = b; //missing } } Also note how b is private! You don't want other classes to access it publically! As far as dependency is concerned, it occurs when one class is dependant on another class: class A { ... public void MyMethod(B b){} ... } As you can see, the MyMethod method requires a b object to work, we can say that A is depending on B. &amp;#x200B; I see Associations as a generalized concept of relations. It includes both Composition and Aggregation. There are different opinions on associations so you should research it yourself and see what is the best approach to accomplish your assignment, try asking r/SoftwareEngineering for more details on that matter.
In my opinion if you like writing C# code then most desktop development is better than ASP.NET. Obviously your mileage may vary depending on the actual app. But that has been my experience. C# in ASP.NET mostly amounts to "plumbing". It isn't particularly interesting or challenging. And you end up spending much more time with HTML, CSS, JavaScript, and SQL than C#
🤣🤣🤣🤣🤣🤣
The parsing not a problem, I already written the parser, and it works fine, builds a tree too like yours, and calculates the value. Now I'm trying to find the most end-user friendly solution &gt; Is there any reason to treat negatives with a supposed function instead of just a minus sign? You may need special code in both cases. Why not support both, and just run a conversion step on a formula before parsing internally? I don't use a NEG function, it was just an example and it came to my mind first. The purpose was only to represent a one-argument function.
Well, I have that feeling too. So I guess I go along with the one-letter-only implicit variables, and the parser will throw an error at the commas when it can't parse the sequence as a function.
Your examples of bitwise shifting look wrong. 
Apologies, it's still very early and I misunderstood what you were asking. I'd most definitely allow functions (trig ones, for example). The trick as you said is separating a function from a multi-char variable, which you want to allow. I would say you need to have a rule along the lines of making any multi-char variables have an explicit delimiter (brackets?). On the flip side, if all variable values are guaranteed to be known before parsing, you could just do the substitution in advance? Obviously that has it's own issues, but could probably be solved by working with longest named variables first and replacing on your way down. I think just enforcing needing explicit delimiting for multi-char variables is your best bet. 
What I must question most about this meme is: 1) Do you get naked to try and find compile errors? 2) Does it work?
To answer the question about it being easy to shift to ASP.NET, the answer is, more or less, "yes". The beauty of the C#.NET platform is there are basically 3 parts: 1. the C# language 2. the .NET framework (and the [Standard Libraries](https://en.wikipedia.org/wiki/Standard_Libraries_%28CLI%29)) 3. whatever the _type/platform_ of application you're making (WPF, ASP.NET, Console, Xamarin, Unity, and so on) This means as you develop your first applications, you're basically trying to learn all 3 to varying degrees. But your knowledge of #1 and #2 are _very_ transferable to #3. So if you start out learning a Windows Desktop framework (beit WinForms or WPF), you'll find learning ASP.NET afterward fairly straightforward. With any luck, you won't have to spend much time on #1 and #2 at that point, and just focus on learning the quirks and concepts of how ASP.NET works. If anything, I would suggest anyway that if someone was learning C#/.NET for the first time, that they start with Windows Desktop applications as they tend to be the most straightforward and easiest to develop/debug. ASP.NET has a lot of plumbing and black magic and dealing with a web browser that can make learning all 3 of the above areas more painful.
[removed]
My application is not public facing. The constant web socket connection is no problem....the typical use case would be for someone to plug their laptop directly into the device using a patch cable.
Button : &amp;#x200B; ContentControl : IContentControl : IControl : IVisual IDataTemplateHost ILayoutable : IVisual IInputElement : IInteractive IVisual INamed IStyledElement : IStyleable : IAvaloniaObject INamed IStyleHost ILogical IResourceProvider IResourceNode : IResourceProvider IContentPresenterHost : ITemplatedControl : IAvaloniaObject &amp;#x200B; TemplatedControl : ITemplatedControl : IAvaloniaObject &amp;#x200B; Control : IControl : IVisual : IDataTemplateHost ILayoutable : IVisual IInputElement : IInteractive IVisual INamed IStyledElement : IStyleable : IAvaloniaObject INamed IStyleHost ILogical IResourceProvider IResourceNode : IResourceProvider INamed ISupportInitialize IVisualBrushInitialize IRequiresTemplateInSetter &amp;#x200B; InputElement : IInputElement : IInteractive IVisual &amp;#x200B; Interactive : IInteractive &amp;#x200B; Layoutable : ILayoutable : IVisual &amp;#x200B; Visual : IVisual &amp;#x200B; StyledElement : IStyledElement : IStyleable : IAvaloniaObject INamed IStyleHost ILogical IResourceProvider IResourceNode : IResourceProvider ISetLogicalParent ISetInheritanceParent &amp;#x200B; Animatable : &amp;#x200B; AvaloniaObject : IAvaloniaObject IAvaloniaObjectDebug INotifyPropertyChanged
Oh I’m stupid. Because you’re returning the same model back, that field is still populated. If you want to make sure it gets cleared, you could just change its value to an empty string on the post action.
This is great news, thanks for posting this OP. I definitely can't wait to give this a spin after work today. :)
I LOL-ed
Or even worse: you won't 
Those interfaces are inconsequential by the scale of things, in my opinion. if you prefer a less interface ridden UI framework then just use WinForms i guess
&gt;making that officially acceptable is a capitulation to reality I... guess? I'm only talking about how things are, not how they should be. &gt;but they all accept different crappy HTML This is not true. As of HTML5, the standard defines exactly how to deal with crappy HTML. If a browser doesn't do it per the spec, you should file a bug. &gt;that's kind of irrelevant to the original point. I disagree. The original point was that HTML is valid XML, which it's not. There are tons of differences, but even then one I mentioned is proof it's not. 
No that does not work either, here is my post action [HttpPost] public ActionResult Edit(QRCodeModel qRCodeModel) { if (!string.IsNullOrEmpty(qRCodeModel.EmployeeNumber)) { qRCodeModel.EmployeeNumber = ""; } qRCodeModel.EmployeeNumber = ""; return View(qRCodeModel); }
That's correct 
Don't ever use events in controllers, just don't.
No, I understand. I only included the interfaces because of the amount of time it took to track everything down and see what each was requiring. I'm not saying code minimization is what you should do. I'm saying the amount of multiple inheritance for just a Button is absolutely staggering. I can only imagine the IL code generated here. Then taking that and handing it to the JIT compiler to turn it into native. You are just making the CLR do so much extra work. I'm trying to understand the design choice here. I'm sorry if this is taken as an insult. Not my intention. 
Currently server side Blazor doesn't support reconnecting when SignalR disconnects and I think authentication isn't ready yet. So I wouldn't use it in production before it ships in ASP.NET Core 3.0. But if you want to start creating something now that will be ready by then it's sounds OK to me.
My experience is somewhat different. I started developing my production app, during the dotnet core preview. Sure, at the time it was mostly POC, but most of the code still exist in the production app today, and is actively supported. Many of the changes through the version were breaking changes, but it usually took a day or two tops to get it up to date - and a hell of a lot simpler and better than an alternative scenario where I use Asp.net 4, or even worse a totally different language.
Even with latency 100-200ms which is just 0.1-0.2 seconds you should be fine. If you use normal drop down menu (select &amp; option tags) it's a browser component and it will open immediately. I watched a video where they talked about server side Blazor's SignalR communication. They talked about how they want to keep diff small as possible so they can fit it to one network packet so it will be fast. Blazor browser version doesn't have same security benefits as server side does. In server side version because everything is running in server, you don't need to create an API and if you really want to you could even do database calls directly in event handlers.
You don't say anything about using a browser in your post, but most browsers limit connections to same domain to something like 6 connections. If set your site to use HTTP/2 then you don't have this limitation.
For sure. My question is definitely asking if Razor Components is far enough along that we can start thinking about converging target dates. Definitely not anticipating a production version in the next six months.
1. No, but the cave part is generally accurate. 2. Sure?
This 100%. &amp;#x200B; I like to do WebAPI development, and any console/desktop applications. Even Windows Services (TopShelf). &amp;#x200B; Web Development is annoying to say the least. Specifically the UI.
WOW! This actually made it to the top of r/csharp ! Thanks, guys!!
The compiler can lie like a bitch some times though.
No offense taken pal, i do understand the concern :) our design choice is with modularity &amp; flexibility, and i think the cost of interfaces is not as significant as the hotspots we're getting (style propagation, layout, type boxing/unboxing from xaml, etc.). We've been testing CoreRT and we've been somewhat successful with the built in treeshaking and stuff so it can make executables with less space and IL than regular SCP builds.
;)
Yeah. You'll only ever care about events if you are using SignalR, a message queue like RabbitMQ, or some long-running background process that is started when the app first starts. Even then, your *controllers* should never/will never need to subscribe to events, especially since their lifetime matches the lifetime of a single HTTP request. Services or other classes might have a need for events depending on the architecture.
Yes, that is most certainly correct. My personal favorite software for C# right now would have to be Microsoft PowerPoint.
&gt; And you end up spending much more time with HTML, CSS, Javascript, and SQL than C# Hopefully Blazor changes this a bit. If that happens, we'll be spending our time in C#, HTML, CSS and SQL (if your data access isn't completely abstracted away by an ORM like EF, anyway).
Can I use Microsoft Bob for editing C# code?
The way we handle this is via hangfire. Events are fired to hangfire where they are consumed off process. It works well and scales. 
You *can*
I find this true when I am programming in C. However, I haven't had this experience programming using VS to program in C#. Even if one syntax error generates a bunch of compiler errors, usually the first one in the file is highlighted and is the issue. In fact, I can't think of a situation where it wasn't immediately obvious where my error was.
That would be how you check during *runtime*. OP is asking about during *design time*.
Good. I was getting tired of WordStar.
Thanks pal, best of luck too! Hope you drop by and test Avalonia sometime too! :D
The scariest ones are when VS freaks out and starts saying it can't find the dll for "System".
Have you ever worked with VB.NET? I notice it more in that language, but every now and then VS goes apeshit and starts telling me I have a shit ton of compiler errors. Restarting VS solves this.
I still haven´t found out how to use authentification and authorization with blazor...I hope with razor component you can use the existing auth-ecosystem in asp.net core.
#
¿Que?
I didn't end my sentence with a semicolon. It's a Greek question mark: it looks almost identical to a semicolon but isn't. 
"Umm.. that really shouldnt have compiled".. *gulps* *presses local debugger button slowly*
Good to know. I'm using httpclient. It's not a bad idea though, because we have a signalR connection as well, so that could make 6. Any idea how to check if we are using http/2 or 1?
I actually agree with you and would prefer to work that way. I'm overly sensitive to the needs of people doing this for work though. I would rather caution the average user to be patient and spend time planning out their deployment. I expect the more experienced developers to read between the lines and do it at whatever pace is comfortable. 
No, it's not all the time. A couple of tags can be unclosed and that's about it, and a lot of linters will bitch if you do that. 
Removed: Rule 3.
improve as needed, works on my machine TM... no loops, no arrays, just really ugly try catch, don't do it at home, please... #2lazy2format using System; namespace borrarconsola { class Program { static string str = string.Empty; static void Main(string[] args) { str = Console.ReadLine(); Console.WriteLine("RESULT: " + Recursive(0, str.Length)); Console.ReadLine(); } static string Recursive(int start, int finish) { try { char prev = Convert.ToChar(str.Substring(start++, 1)); char next = Convert.ToChar(str.Substring(start, 1)); if (prev &gt; next) { str = str.Remove(start, 1); str = str.Insert(start - 1, next.ToString()); } } catch (ArgumentOutOfRangeException ex) { finish--; if (finish == 0) return str; return Recursive(0, finish); } return Recursive(start, finish); } } } 
&gt; it's not all the time Yes, I know, XHTML. The other comment talked about it. But XHTML is the minority. &gt; a lot of linters They're stricter than the spec (for our own sanity, yes, but they're stricter). &gt; A couple of tags can be unclosed and that's about it I think you really don't understand how broad the current HTML5 spec is. ---- For example, this is a valid way to write a list: &lt;ol&gt; &lt;li&gt;First item &lt;li&gt;Second item &lt;li&gt;Third item &lt;li&gt;Fourth item &lt;/ol&gt; Notice how there's no `&lt;/li&gt;` to be seen. ---- Or, for example, what happens if you nest `&lt;p&gt;`s? &lt;p&gt; Hello, World! &lt;p&gt;I'm nested&lt;/p&gt; &lt;/p&gt; Since in HTML, `&lt;p&gt;`s can't contain other `&lt;p&gt;`s, the spec defines it to generate the following: &lt;p&gt; Hello, World! &lt;/p&gt;&lt;p&gt;I'm nested&lt;/p&gt; &lt;p&gt;&lt;/p&gt; Opening a `&lt;p&gt;` closes the previous one, and the final `&lt;/p&gt;` adds a `&lt;p&gt;` since the previous one was already closed. ---- Or, one of the most important ones. If you have elements outside of the `&lt;body&gt;` or the `&lt;html&gt;` elements, they're added back in. So this: &lt;html&gt; &lt;body&gt; &lt;p&gt;Hello, World!&lt;/p&gt; &lt;/body&gt; &lt;p&gt;Oops, I forgot!&lt;/p&gt; &lt;/html&gt; &lt;p&gt;This as well.&lt;/p&gt; Becomes this: &lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt; &lt;p&gt;Hello, World!&lt;/p&gt; &lt;p&gt;Oops, I forgot!&lt;/p&gt; &lt;p&gt;This as well.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ---- If I expected an XML parser to correctly parse any of this scenarios, I would be really crazy. HTML even defines precisely how to parse dumb stuff like this: `&lt;p attr="asdf other-attr='sup'&gt;&lt;/p&gt;`. You just can't do that with XML. The statement "HTML is valid XML" is false.
&gt; everything else is fine It generates a totally different DOM. Syntax is not everything. Besides, the moment you have &gt; Only the &lt;li&gt; and the missing " it turns HTML into not-XML. ---- Another example is boolean attributes. In HTML you can have `&lt;input type=text disabled&gt;`. You can't express the "disabled" attribute that way in XML. And again, as soon as you have that construct as valid HTML, it means that HTML is not XML. You can't parse HTML with an XML parser.
Just read "it's for beginner programming class"... that code will get you in trouble for sure
The HTML 5 spec basically said fuck it we don't give a shit about consistency or pars ability, but if you're writing like that you're doing a bad job. 
&gt;The HTML 5 spec basically said fuck it we don't give a shit about consistency or parsability Which makes HTML not XML. Why is that so hard to understand?
And then you fix the semicolon and you have 32 real errors to fix.
HTML is a subset of XML, it's been one for likely longer than you've been alive. That's how it was created, long before there was XHTML. HTML 5 specified some ways that parsers should handle poorly written mark-up, some of which would not be allowed in XML, but it was still always intended to be a subset of XML. Pretending this isn't true because decades of shitty HTML means that they had to standardise how to handle crap is insane. It's like saying that because cars are required to have air bags you're intended to crash them into walls. 
What it renders to is irrelevant. XML doesn't define that. 
using System.Linq; ------------------------ string word = Console.ReadLine(); Console.WriteLine($"Last char= { word.LastOrDefault() }");
You should check the stickied post -&gt; https://www.reddit.com/r/csharp/comments/3xn6sm/welcome_to_rcsharp_read_this_post_before/ it has lots of links to helpful courses and references. Good luck on your new journey!
Their videos are great, but they do get repetitive. 
oh okay , i'll post it at learnprogramming
https://projecteuler.net/ is good for practicing perf-critical code and algorithm design, but it's not very applicable for most jobs.
Returning in the `if` or in the `else` block makes no difference. I prefer the latter, as it reduces the nesting for the rest of the code. But you should notice that the first is checking `IsNullOrWhiteSpace` (so it checks for whitespace)`, the latter is checking `IsNullOrEmpty` (so not checking for whitespace). That makes a significant difference.
Whoops, I was posting that as an example and meant to do IsNullOrWhiteSpace for both! Changed it, thanks :) That's what my thought was as well. Just cleaner code I suppose!
The only difference is that the latter is cleaner.
Awesome, thank you! 
I know the feeling, man. It's one of the reasons I consider a simple typo as having gone perfectly; it's nearly impossible for it to work right the first time, and if your only mistake was a typo, you're doing damn good. I think a semicolon counts in the same way, too.
In my last 10 years I can count with one hand the times I've worked with arrays...
Isn't he also saving at least one operation by dropping the negation? Or is that made redundant by compiler optimisation.
Regex is the best method for validation you can use, also you need to learn to extract parts of your code to different methods/functions, so you can reuse a lot of your code(DRY - Don't Repeat Yourself)... use this in main method: int intvalidation = -1; while (intvalidation &lt; 0) intvalidation = InputStudentRating(); create new method just for student rating: static int InputStudentRating() { Console.WriteLine("Please rate this class from 0 - 5:"); //match pattern for exactly 1 digit between 0 and 5 System.Text.RegularExpressions.Regex myregex = new System.Text.RegularExpressions.Regex(@"\b[0-5]{1}\b"); string srating = Console.ReadLine(); System.Text.RegularExpressions.Match match = myregex.Match(srating); if (match.Success) { return int.Parse(srating); } else { Console.WriteLine("wrooooong"); return -1; } }
https://sharplab.io/#v2:EYLgtghgzgLgpgJwDQxNMAfAAgBgARYCMA3ALABQWAzAQEx4DCeA3hXuwTVgCx4CyACiL54sAMowEASwB2AcwCULNh1VSAZgICEwgHQBJKADkArgBszAeQQB1ABZT4YgA4QAxnAGiYE6fIUKKqrBBIQAnAIARAAqcLCRCmTkIexwZlBwQSnsWADsSaoAvllZ1AS8fLQCvrJyeN41/srJKRp41ZK1BsbmVrYOTq4eXnE+nf6BLdk5+VmqcxxEETGjCQUcxeSFQA==
The second is an example of a "guard clause". I find using guard clauses easier to read, more expressive, and easier to maintain. Performance wise, there is going to be no difference in your example.
That's a pretty awesome site, thanks!
Hey, can you give me a source of where you've heard of the 6 connections limit you mentioned? I can't find anything similar to this so far.
This is probably a religious argument along the same lines as tabs vs. spaces or where you should put the curly braces, but my coding standard is to ALWAYS use curly braces, even if there's only one statement following the "if". It's just safer: if you add another statement to the "if" body and forget to add the curly braces, you get a bug. But if the curly braces are there from the start, that bug is avoided. It's a style thing and there's no right or wrong way to do it, but my advice is to always use curly braces.
I totally understand the curly braces. I should've stated that I was more asking for the return in the if/else blocks. Or just using an if statement to check for something false then return inside that if block. But I totally agree with all that you said! I am getting in the habit of always using curly braces.
I know, your question was perfectly clear, no worries. I just can't help being pedantic and preachy sometimes :)
As the creator of IQueryable... I suppose it depends on how you intend users to use your ORM. But I would support it. Just saying.
Yup, your choice. Just like a market having to offer different merchandises, we have a collection of servers to pick from. Competition is good :) Makes us improve
Thanks graunewolf. For your item #2, was it acceptable to simply throw an unsupported exception if the user tries to do an unsupported query? Or, how did you do it with Tortuga Chain? Note: RepoDb does not support Join Query for now, in exchange, we created recursive and ExecuteQuery method. So in this case, we will throw an exception. &amp;#x200B; &amp;#x200B;
Realistic answer is ReSharper probably told someone to reduce nesting haha
reported for spam
Yes, there is a *potential* performance difference. But I couldn't tell you which is faster. To find that out you would have to... 1. Look at the compiled machine code. Not IL, the actual x86 version. 2. Learn what "predictive branching" is in the context of CPU design. 3. Performance test it, including the specialized tools for detecting how #2 is behaving. 4. Forget 1 thru 3 because the JIT compiler might do something completely different on another person's computer.
Removed: Spam.
Ignore all these charlatans. _Civilized_ C# developers always use LINQ where possible: if (testString?.All(c =&gt; Char.IsWhiteSpace(c)) != false) return;
In my opinion, [Illustrated C#](https://www.amazon.ca/Illustrated-Language-Presented-Concisely-Visually/dp/1484232879) is a great book for beginners. The visual aids are a tremendous help for understanding the concepts being presented. However, if I remember correctly, the book doesn't delve into topics like object oriented design, so you'll want to follow up with an OOP book. Additionally, if memory serves correctly, it lacks exercises. The Amazon page says it's for novice to intermediate programmers, but this is the book that taught me the fundamentals of the language when I had no previous programming experience. The lack of exercises wasn't really a problem for me. It's trivial to create a console application and toy around with whatever you learned in a chapter. Variables, interfaces, inheritance, iterators, etc. However, trivial exercises alone don't really cement something into your head. At least not for me. Most of my learning happened while creating my first several *projects*. So, having project ideas is crucially important. Ideally, you want your project ideas to be something that you find interesting. That helps with engagement and motivation to work through and resolve the various problems that you'll encounter, and see the projects through to completion. 
&gt; The basic idea we had that we are going to create a singleton class Bad. Instead use something like a DI framework and have a singleton-lifecycle. &gt; that creates a single thread Sounds reasonable. &gt; with a queue If the order is not important (I don't see why it would be, the log entries have a timestamp, right?) you should better use a `ConcurrentBag&lt;T&gt;`. A queue requires a specific order, which causes slowdown when inserting. Keep in mind that the collection must be thread-safe, as you will add entries from multiple threads. &gt; This ensures that messages are written to the db and to the trace log in the same order that they were received. It does not ensure the messages are written. It could be that your server or system crashes between inserting to the queue and the log-thread writing to the database. And while logs are undoubtedly important, they should not be critical. If you want a true asynchronous solution you might want to consider using an event-based system, perhaps even something like CQRS. But that might require a different way of thinking that your team might not be ready to do.
The difference would be absolutely negligible, even in hot-paths.
It absolutely is. Even lets you try out different (and preview) compiler versions.
This limit is applied in browser side of things if you are using .NET HttpClientFramework to use `ServicePointManager.DefaultConnectionLimit` or `ServicePointManager.FindServicePoint(uri).ConnectionLimit`. https://docs.microsoft.com/en-us/dotnet/framework/network-programming/managing-connections
I've been using [log4net](https://logging.apache.org/log4net) without any issues for a while now. It supports output to file, database and several other options.
This. Can't imagine rolling my own logging library in any established platform.
&gt;it sounds like you're having the ship class directly alter data owned by the productionUnit (instead of just making a request and receiving only the information needed to update the data owned by the ship itself and letting the productionUnit manage its own resource levels). The request the ship makes to the productionUnit should contain enough information that the productionUnit returns only the data necessary for the ship to update its own state. What I want to accomplish is for the ship to pull all outputs that it can fit in it's inventory and that the production unit has. But that requires information from both sides to complete (The available storage on the ship, and the outputs that the production unit has available). I am doing that, and I think that's what feels wrong about this. The production unit has a GetAllResources() function that returns all the resources it's trying to give away and removes them from the production unit (since it's giving them away). But then when the ship can't hold all the resources, it gives back what it can't hold. So the ship is sort of managing what is getting transferred. It does seem wrong, but I don't know a better way to do it. Would it be preferable for the ship to send a list of available room in it's inventory to the production unit, and the production unit then sends back what it can fill?
&gt;We are tied to a "proprietary" (in the sense that we can't alter it) logging framework made by the organization we work at which does not, on its own, support asynchronicity It's important to check whether the logging framework is gathering some information from the currently executing thread (such as Trace.CorrelationManager.ActivityId or equivalent), as that may cause logging from another thread to give incomplete or inaccurate results. It also may be worth determining whether you can use multiple instances of the logging framework on different threads. &gt;This ensures that messages are written to the db and to the trace log in the same order that they were received. Though this may matter for a log file (where you want the entries to be chronological), I wouldn't expect it to matter for a database. &gt;what would be the smartest thing to do in this case. Not to prematurely optimize. Do simple inline logging first and extract to an asynchronous queue if you encounter performance bottlenecks related to logging. Adding complexity always has its costs. What happens when you're receiving requests faster than you can log them? Are there any auditability requirements that would make you want to fail a request if you couldn't generate a durable record of that request? What happens when you run out of queue memory for logging? How will you ensure that all the messages for a certain time frame are written to the trace log file for that time frame before you move on to a new log file, especially if they may be enqueued slightly out of chronological order due to parallelism? How certain are you that the time you're saving on responding to requests won't be lost to context switching overhead for that additional logging thread? There's no guarantee that this approach will actually increase your throughput, even if it does reduce the time between request and return for a single request.
I see no reason to try and write your own logging software, unless your main goal is to write your own logging software. I'd rather use any already available logging framework. Personally I'm a fan of [Serilog](https://serilog.net/). It lets you output to file, dB, logstash and many more. In work we also use nLog, I'm less a fan of it, but I'd still use it over my own implementation. Generally time lost to cover the edge cases, optimisations etc are better spent on the main product, than the logging framework.
&gt; Would it be preferable for the ship to send a list of available room in it's inventory to the production unit, and the production unit then sends back what it can fill? Yes, that would be reasonable. Sending information the other direction would also work: ship asks production unit "what can you give me?", then decides what to actually request based on that (in a call to a separate function on the production unit).
Sorry about that, just needs a bit more LINQ. I was a bit busy at the time. if (testString?.Select(c =&gt; c).Where(c =&gt; !Char.IsWhiteSpace(c)).Take(1).Count() != 1) return;
Control+K+F
The only exception I make for braces is when its a guard clause. The return for a guard clause should be on the same line.
I would use Serilog and write your own async sink for it that plugs into your proprietary logger. If you're using asp.net core you can also use it's logging package as an abstration to serilog.
&gt; We are tied to a "proprietary" logging framework made by the organization we work Why? &gt; (in the sense that we can't alter it) If it's in the org, why can't you help the owners fix it? &gt; Our logging library allows us to log to both a database and to a trace file and we are required to log to both, several times for each user request At scale, logging to your production database that's used for the app's main purpose is a very bad idea. When there are multiple machines running in a load balancer, and being started and stopped, then logging to a local trace file is not a good idea either. Logging to the ELK stack is the answer to both of these problems.
Plus it removes that `!` from the condition. Makes no difference to the machine but it's such an easy character to miss when reading the code later.
Put your logging to separate thread then use your current logging as consumer with `System.Threading.Tasks.Dataflow.BufferBlock`. Then just push logs asynchronously to `BufferBlock` this way your logging itself doesn't need to be asynchronous. https://blog.stephencleary.com/2012/11/async-producerconsumer-queue-using.html
Thank you for posting here, but ultimately I think you're just pointing out all the reasons I set out as to why I can't use a well established logging framework. I know that that is what would be ideal, but in this case I would also not be making this post :p
Ok, I'll have to look into the specifics of how serilog works in order to figure out how to do that I guess.
Chain has a somewhat unique design philosophy. You never need to create classes that are just one-to-one copies of tables. *** Lets say you just want to know the vehicle's color. You would use... var vehicle = dataSource.GetByKey("Vehicle", vehicleKey).ToString("Color").Execute(); If you do want a whole vehicle object, you probably want the values from lookup tables too. var detailedVehicle = dataSource.GetByKey("VehicleDetailView", vehicleKey).ToObeject&lt;VehicleDetail&gt;().Execute(); Of course you wouldn't save changes to the view. dataSource.Update("VehicleTable", detailedVehicle).Execute(); The Update command looks for property/column matches, so it won't error out on the properties that represent values from lookup tables. *** This doesn't mean LINQ expressions can't fit. But its a low priority and there's only two of us working on the project.
Its a requirement set out by the organization that the application is being made for
Oooh, a producer-consumer kinda thing matches up well with what I'm looking for. Thanks :)
Keep in mind (do research about serilog) about the async sinks. I don't remember if the async part is a plug-in you could use for any sink or if it's implemented by the sink itself. There should be examples. The rolling file sink should be async queue that is configured to flush every x logs or seconds etc.. again as people pointed out, logs tend to be in order but with async logging this may not be the case. In either case every log has a timestamp, and this is more important.
You could put the second statement in one line which would look cleaner IMHO.
That's more like it
The other reason Chain doesn't support LINQ is that I believe that queries belong in the database as views, functions, and stored procedures. This way the DBA has greater flexibility in tuning the database. Everything in Chain is based around making sure you can use the database the way the database wants to be used. For example, consider this query: var dbContext.Vehicles.Where(x =&gt; x.LicenseExpired &amp;&amp; x.State = 'NY')... and this query var dataSource.From("Vehicles", "LicenseExpired = 1 AND &amp;&amp; x.State = @State", new {State = state})... They look pretty much the same, right? They should do the same thing in the database. *** Now add this filtered index: CREATE INDEX IX_Expired ON dbo.Vehicle(...) WHERE LicenseExpired = 1 The EF version of the query cannot use this index. It treats LicenseExpired as a parameter, which means it can be 0 or 1. The Chain version of the query says "This query always uses `LicenseExpired = 1`", which means it can use the filtered index, which in turn can mean a huge performance boost. 
I don't think that fluent APIs make anything easier. They're different than normal APIs, but not better. It's harder to discover methods and harder to extend, also often things can become more convoluted because of fluent APIs. Imho just a dumb fad. 
NLog is similarly extensible. log4net might be too. Pick the one that bets suits your needs.
Hot damn, I've always wanted a format selection, thanks!
Experienced engineers do not add useless tests to their code. if (testString?.All(c =&gt; Char.IsWhiteSpace(c))) &amp;#x200B;
Is a forum post mentioning IQueryable equivalent as your bat signal?
As far as ensuring resources aren't lost or generated out of thin air, do I just need to be diligent about my requests? Or is there a better way to ensure the integrity of exchanges? Like what do banks do when they move money from account to account, they must have some way to make absolutely sure that nothing just "poofs" into non-existence. Like if I somehow messed up my request and ended up requesting more than the storage unit can hold, those resources don't get added. The output of the AddResources() function right now is all the resources that weren't stored but if I don't send that anywhere it will just "poof". But then I'm back at stage one where I'm looking at dumping it back into the production unit's storage.
Nice! 
That's because you selected API instead of Web Application in the previous screen
Should this be cough by linter? [https://github.com/SublimeLinter/SublimeLinter-javac](https://github.com/SublimeLinter/SublimeLinter-javac)
More experienced engineers know that having a `bool?` is not a valid boolean check :) *Even more* experienced engineers don't need to create anonymous lambdas for identity functions ;p ``` if (testString?.All(char.IsWhitespace) == true) ``` *Even morer* (?) experienced developers don't let null checks get confused with logical checks ``` if ((testString ?? throw null).All(char.IsWhitespace)) ``` (Please, don't ever throw `null` :|) 
More experienced engineers know that having a `bool?` is not a valid boolean check :) *Even more* experienced engineers don't need to create anonymous lambdas for identity functions ;p ``` if (testString?.All(char.IsWhitespace) == true) ``` *Even morer* (?) experienced developers don't let null checks get confused with logical checks ``` if ((testString ?? throw null).All(char.IsWhitespace)) ``` (Please, don't ever throw `null` :|) 
This made me smell burnt toast
I'm just having a little bit of an issue with it. When I put a form next to a form he supposed to collide with it but he does it far in advance. Not as soon as his right side hit's the left side of the form. 
I don't need ReSharper to reduce nesting on my own.
That tutorial is showing you how to make a full on WebApp and not just an API. Whenever I need to make an API w/ authentication, I just use the empty template with no auth at all and manually add in all of the boilerplate stuff, so really couldn't tell you which prepackaged option to use
“ORMs are the Vietnam of software development.” I finally get this statement.
Relative coordinates instead of absolute maybe? Just a wild guess.
Right on...dude.
Lots of stuff for WinForms and WPF. Not bad for dead tech ;)
I dunno.. I honestly don't even know what that means. This is the first time I've ever done a project like this. 
I meant it as I type in the cmd "javac filename.java". I'm still a beginner in programming, especially when it comes to packages and stuff. I really only know the logic of programming, I still don't really understand how to set up coding environments very well and stuff. I honestly don't know what cough by linter is, but it looks like its just the package that provides the ability to compile java in the command prompt
That sums it up well. I do enjoy it, but I don't think it's applicable directly for most people.
&gt; Or is there a better way to ensure the integrity of exchanges? Write automated tests using a testing framework. If you want high scenario coverage, write a test harness that instantiates a ship with effectively infinite capacity and a huge collection of productionUnits with random outputs and validate that the total number of each resource in the system saved during initialization matches the total number of each resource in the system after a few thousand automated random 'trades'. That's probably overkill, but most software validation that doesn't involve math proofs is essentially a 'try it and see' operation. &gt;like what do banks do when they move money from account to account, they must have some way to make absolutely sure that nothing just "poofs" into non-existence. I don't know exactly what they do, but I'm sure it's overkill for just about any game.
if(!something){return;} Now we can all be happy.
https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/using-statement
Leave that unchecked and wire it up by hand.
I think you kind of need to be more specific about what the object is, and how it's being initialised. Object x = new Object() is just how you take the class Object, and create an instance "x" of it.
Like the code block mentioned. Why would you not use that instead?
Thank you for the efficiency .
So, I need to brush up on my boxing and unboxing, but the example near the tope of this page shows exactly that. https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/boxing-and-unboxing Oddly they don't do (int)(float) they cast straight to an (int).
Hey I've spotted a minor bug. for(int i = 0; i &lt; bmpImage.Height; i++) { for(int j = 0; j &lt; bmpImage.Width; j++) { Color c = bmpImage.GetPixel(i, j); GetPixel expects first param to be constrained by width of image. and another instance where you're passing in Width for both for (int i = 0; i &lt; bmpImage.Width; i++) { for (int j = 0; j &lt; bmpImage.Width; j++) { works fine when image is 1:1 but will break otherwise.
You do your thing, hit run and it fails. this image is probably a bit extreme, it's usually a more half hearted "what? oh." and you recompile and continue on your way. It's usually that your not paying attention and you fat fingered something without noticing. Actually 9 times out of 10 i notice it right after hitting run, and sit there feeling stupid for a few seconds waiting for the build to fail.
Even still, you can write your own Serilog Sink, which will let you use the Serilog interface.
I think the easiest way would be to use something like [protubuf](https://developers.google.com/protocol-buffers/). People are very opinionated about these libraries, so look around at other ones too. The gist is that you create configuration files that you can modify over time (by adding and deprecating properties). Then, you generate C# models based on the config files, and serialize/deserialize those. [Here](https://developers.google.com/protocol-buffers/docs/csharptutorial) is a C# tutorial of protobuf.
Hello, thank you for pointing it out. That is correct. Will fix it
Your original design was almost complete. Open another thread, attach a BlockingCollection. Make a loop inside the thread procedure to take from the collection and persist. Make an event handler that will populate the blocking collection. So when you want to log, invoke the event which will only add to the collection. This way you will have asynchronous approach but slow it down when your input is much faster than the persisting process, in order to escape the loss of logs if your process stops. Measure the performance of these operations and fine tune the collection size in order to make a proper balance. Take a look at the Pipeline pattern in .NET. You can also approach with pub-sub via IObservable. Not sure if you are using .NET Core or .NET Framework?
Sometimes, object will have to use unmanaged objects that will not be cleaned up by the garbage collector automatically. You will see a lot of that in libraries that use OS functions (like filestreams) In order to make sure those unmanaged objects are cleaned up, the parent object will implement the IDisposable interface. By using a IDisposable object in a using statement, you make sure the Dispose function is being called at the end of life of the object. If Dispose is not called properly, your parent object would not clean itself up when going out of scope. You would be stuck with a memory leak.
Don't use `Object` as a placeholder, since it is the name of a real class. (And yes, sometimes I do literally write `x = new Object()` in production code.) Instead use `Widget` or `MyClass` or `Foo` or `Bar`. Something to make it clear you mean some, unknown class rather than literally the class`Object`.
Yep
&gt; Sounds like doublespeak for EF Core is dead .Net Core apps will still need a DB library. I really don't think MS would just kill EF Core, without having any kind of replacement for it and without killing the whole of .Net Core.
They won't kill it, but they might slow down investing in it or improving it - I suppose it's open source in the end.
&gt;If you use normal drop down menu (select &amp; option tags) it's a browser component and it will open immediately I'm talking more like bootstrap-style drop down menus, modals, accordions/tabs, etc. Any manipulation like this will seem seem slightly sluggish due to a server round trip. As mentioned, I'd have to play around with it and see for myself how noticable it is with less than ideal networking scenarios. &amp;#x200B; &gt; Blazor browser version doesn't have same security benefits as server side does. I agree, But I write APIs consumed by other systems (Android/iOS). It would make the most sense if I can just tie my browser based app into the same APIs used for Android/iOS like currently do with ReactJS. If I'm able to call controller actions from a Razor Component so I can use the same execution path as I normally would from a browser, that would probably solve the issue &amp;#x200B; &amp;#x200B;
I write WinForms still. I think its pretty easy to get something up and running for internal apps or small gaming or other utilities :)
There is no difference. Both will fail to compile equally.
If your worried about performance optimizations at this level, C# is probably not the best choice of language.
Yea it's very similar to a context manager
It's a complication. An extra thing to think about. Possibly easy to miss. Personally, I don't think it's that big of a big deal, and it's subjective. If it's reasonably clear what the code's doing and that it might exit a function or loop early, I think that's fine.
So I understand what you are asking... You want to serialize an object and then modify it without deserialization? Or, are you looking to add/remove properties on an object at serialization? 
Serialize and then modify. Im working on the data side and the program side simultaneously. I'd like to be able to work on the data side of things without having to scrap my data or do the extra work of writing a script to convert the data every time I make a change. So let's say I have an object with 3 values: first name, last name, age. I write up a big list of objects with this information, then I decide to add hair color to the object. First name, last name, hair color, age. From what I understand I would have to write a program that explicitly converts all of my data to now contain a hair color before the age, even if the hair color is set to null. Otherwise, when I next try to load up some data, it'll be invalid because age doesn't fit into hair color, or if it did fit, it'd then be junk data. Imagine that scenario but with 20-30 properties per class, and some of those properties being complex classes with 20-30 properties. I'm trying to prevent a meltdown in the future by giving this thing proper architecture from the beginning. 
A point though, is that just because it implements IDisposible, doesn't mean you should use it. Granted, most of the time, you *should* use it, but sometimes you shouldn't. [HTTPClient has memory leaks. It's prefered to keep it long lived](https://stackoverflow.com/questions/27732546/httpclienthandler-httpclient-memory-leak) Some other libraries do the same, but I forget which. 
I'm sure you've got it all figured out by now but I thought I'd clarify that you're totally allowed to do: `Object x = new Object();` `using(x) {` `//do stuff` `}` The code cleanliness issue you have now is that you can refer to the variable "`x`" outside of the `using` block and that'd be bad because it has been disposed already.
Thanks, I'll consider that as well.
And if you are using .NET Core it is preferred to use `HttpClientFactory` (https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests). It handles pooling and disposal of the HttpMessageHandler, the part which causes all the problems with `HttpClient`.
It's not exactly a memory leak, which would be fixed. https://aspnetmonsters.com/2016/08/2016-08-27-httpclientwrong/
What's the reasoning behind using binary data? You could use JSON, which will store the properties of objects, then you'll be able to deserialize the older ones with defaults in place and any additional properties will be ignored. If size is a problem, you can use compression on the serialized object/file too. The built-in binary serializer is built to serialize and deserialize objects which have the same type signature. 
`BlockingCollection` is synchronous unlike `BufferBlock` that supports asynchronous API. I'm not sure it will make that much of difference in this case if you have unlimited buffer size. But if you use `BoundedCapacity` with `BufferBlock` then benefit is obvious, because asynchronous methods don't block.
The issue here is your method "Main" is a *static* method, but your "processTimedEvent" method is not static. you would either need to instantiate a the program class and use that or make the "processTimedEvent" static. it really depends on what your final application is going to do in order to decide which to use. 
`Main` is static. `processTimedEvent` is not static. You can't access non-static methods from a static method.
Thank you, that makes sense! So I'm just practising stuff at the moment and this little program will do nothing more that what it is (count up every second). When I change the method to static I can no longer use the global variable "count" within the static method. Is there a way around this? Thanks
The `Main` method must be static. It's the entry point of the application.
I’d also highly recommend the Serilog approach. Writing a sink is straight forward. From there just ship it off to a Channel / Dataflow BufferBlock for processing while another thread reads from it. You can have multiple sinks that log to different places (Console, Syslog, Database, Custom, etc). Each sink can also be filtered independently.
because parameter is a float
Webforms? Are you taking classes based on books from over a decade ago?
Haha yeah, it doesn't run 🤦‍♂️
what is the function supposed to do? as even if it's called GetUsers it returns void
change the other method to be static
I did that but the "count" variable doesn't pass to the method. If I declare the variable within the event method it will be reset every time the event method is called. I think I'm missing something really obvious here as the goal is so simple!
You can make the member variable static as well. It's a member variable, not a global variable currently. A static member variable comes close to a global variable but is still a part of the class.
Or create a new class that you do all your stuff in and just fire off that class from your main method. Then you can get into non-static land. Btw remember a Console.ReadLine() or similar at the end of your main, otherwise it’s just gonna exit your program when it hits the end of Main
ok, so why do you need to call that method on the other form? are both forms on the screen at the same time? if yes then you need to call the current Form1 instance GetUsers
Not sure why it isn’t working, but I would follow the principle of making objects responsible for themselves, and have the form fill its own listbox. 
form1 shows a list of users from the OU, form2 then edit the user, i would like to trigger an reload of the user list on form1 when form2 is closed. as far i can tell i am calling the form1 instance getusers? Form1 f = new Form1(); f.GetUsers(); this is what i have on form2
Thanks - I have created a while loop which quits when "q" is entered. 
then you call new Form1() you create a new instance you need to pass Form1 as a param for Form2 like this: new Form2(this); (I assume you call form2 from form1
A better approach would be to create Form2 in Form1 and add a "FormClosing" event for Form2 that calls GetUsers(). 
thanks, how do i then acces the form1 on form2, if i passes it along like Form2(this); ?
With c#?
Yes. Postman uses JS to write the tests.
This [one](http://www.wcfstorm.com/wcf/learn-more-rest.aspx) is built in C#
AFAIK you'd have to roll your own if you want to use C#. Making API calls is laughably easy using HttpClient, and you can do what you want with the response. Honestly I don't think it would be that hard at all. You can even make it read in external text files as expressions so you can execute them. Of course, if you want a nice little GUI that's another story.
it's not the order of the declaration that matters, it's the order of the initialization (when do you set the value)
 string StringA = "A"; string StringB = StringA + "B"; means string StringA; string StringB; Resources() { this.StringA = "A"; this.StringB = this.StringA + "B"; }
Are you testing your own API project? If it’s a .net web api project why not use Swagger?
Swagger is just for generation of the docs. I want to execute the endpoints and then assert the results e.g. header, response, etc. 
Not sure if you saw it or not but the discussion on this question might be relevant: [link](https://stackoverflow.com/questions/3681055/is-the-order-of-static-class-initialization-in-c-sharp-deterministic) &amp;#x200B; One of the comments has a point that I think sheds light on this: &gt; That static fields are zero-initialized until the type initializer runs. &amp;#x200B; Certainly an interesting question and i'm hoping someone else can explain it. I think in practice, you would not do this very often but this is one of those gotchas that you can spend two weeks trying to figure out, haha.
Actually, here is one that explains it: [link](https://stackoverflow.com/questions/1494735/initialization-order-of-static-fields-in-static-class) &gt; ***The static field variable initializers of a class correspond to a sequence of assignments that are executed in the textual order in which they appear in the class declaration.*** If a static constructor (Section 10.11) exists in the class, execution of the static field initializers occurs immediately prior to executing that static constructor. Otherwise, the static field initializers are executed at an implementation-dependent time prior to the first use of a static field of that class. &amp;#x200B;
I am by no means an expert but what keeps me using C# is the ability to do multiple things easily with one language; what you learn from desktop app development can be used for web development, the ease of switching between the two platforms is what keeps it ahead of other languages in my eyes. &amp;#x200B; The only major difference between C# with [ASP.net](https://ASP.net) and C# with desktop applications it that nearly all client side functions that could be done with C# on a desktop app will need to be done with Javascript for a web app; this is not really the fault of C#, but more with the nature of server side vs client side code. &amp;#x200B; In short; anything you learn in desktop development with C# is **definitely** transferable to web development.
That's just bad architecture. 
I think what he means is that he wants a tool to literally write test cases, that can be run with a click of a button. While Swagger does let you execute the web methods, you still need to manually input the parameters as well as check the output yourself, each time you want to execute each action. I don't know of any way of automating testing through Swagger.
To be honest is sounds like you might want to be doing something other than serializing all your data but that being said this article might help with what you are asking https://docs.microsoft.com/en-us/dotnet/standard/serialization/version-tolerant-serialization
GetUsers() needs to be in a shared assembly, not in Form1 or Form2. Each form calls the same get users and is responsible to do whatever it needs to with the returned users.
It cant be done the other way?
Just throwing some ideas around. How about you serialize/deserialize your objects to/from json/xml? You could write a small extention method that dump a serialized object to file and programaticaly call it or manualy in debug. I used that once as a makeshift solution with small objects. Don't know how it would go in complexe scenarios.
I agree, but I did not design that architecture, I need to work with what I have
I would accomplish this with form2 firing an event that form1 subscribes to.
The thing is that indexing and querying is required. It is specifically required to be as columns. (I really dislike it, but I didn't set the requirements and architecture, just try to solve them)
Well, you are the one trying to move that crap to Entity Framework. It's just not going to work. Just leave it as it is. 
`System.Threading.Tasks.Dataflow.BufferBlock&lt;T&gt;` is better choice because it offers asynchronous API.
You should implement the IDictionary&lt;tkey,tvalue&gt; writing each method/propery mapping on the right Entity queru
SO is your friend. Here’s an answer with two ways to do it. https://stackoverflow.com/questions/20730697/listening-for-a-custom-event-fired-from-different-winform
Good points, and it would definitely be the best way to do it, if i had to redo the code. But currently all code is with in each form. For the next project i would try to split it up like that, but for now i was hopening there was a easy way to trigger it the function from form2.
[That code doesn't compile.] It only works if the fields are `static`.
Thanks, so when do this, how do i call the function? Form.GetUsers(); does not seem to work. i done this so far: ActivateAccount ActivateAccount = new ActivateAccount(this, SelectedName, SelectedUsername, SelectedDN); ActivateAccount.Show(); and on the ActivateAccount form: public ActivateAccount(Form1 Form, string SelectedName, string SelectedUsername, string SelectedDN)
[It is specified for a single class:](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/classes#static-field-initialization) &gt; The static field variable initializers of a class correspond to a sequence of assignments that are executed in the textual order in which they appear in the class declaration. The difference with the code in the SO question is that there are two different classes. In that case, it is not specified.
If it didn't exist yet, you wouldn't be able to use it. The thing is, the field does exist, but it hasn't been initialized yet.
This is the correct answer. An ORM is intended for _statically_ mapping entities and classes. If your entity cannot even be defined at compile time, you get the downsides (such as performance overhead) with few of the upsides. Maybe you're looking for a query builder like SqlKata instead?
I’m away from my computer, but does Form.ActiveForm.Text = “”; work?
[This is explained in the C# spec:](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/classes#static-field-initialization) &gt; The static field variable initializers of a class correspond to a sequence of assignments that are **executed in the textual order in which they appear in the class declaration**. So, yes, in this specific case, the order matters. The compiler doesn't try to reorder the initializers based on which references which, or anything like that, because that would be even more confusing. It works with a method, because method is a code that executes, a field is just a piece of memory.
And the guy just downvotes me because he doesn't like the answer.l
What is your reasoning or understanding for doing this as modificatiins on serialized data? Are you trying to store or transfer the data objecs in a temporary was or a cache cluster or something? What's your reasoning for not deserializing, modifying,and then re-serialize? It would seem like using standard interfaces and checking the property type at deserialization would accomplish what you are after? How is the serialized stored? Perhaps you could flag or group based on indexes or pointers? I guess my point is that serialization and property modifications are two different things. Protobuf as suggested above is a great performant way to serialize data with added cost of explicit attribute management... I just don't see how it fits your post serialized data modifications. This includes the other advanced serializers such as message pack or basic gzip even. Is it possible you have two separate tasks/issus that your treating as one? 
Hahahahaha if this works i'm going to scream. Good call...
Looks right to me. What's wrong?
I think what /u/PM_ME_YOUR_HIGHFIVE suggested was pseudocode since he omitted all modifiers. He did so because what he suggested is true in the general sense regardless of the modifiers on each.
I'm no c# expert. But it seems you are passing in purely the reference to an object, but havent referenced that object via a param / varaible. (**processTimedEvent variableName)**
How did you define GetUsers?
Sorry, somehow I forgot to include the link to the online compiler. The error is: &gt; CS0236: A field initializer cannot reference the non-static field, method, or property 'C.StringA'
so, the null value of a string is.... ""
on form 1 i have: public void GetUsers() {....} i havent done anything else
WPF is awful. 
I've just tested it and it works as intended. You must be doing something else wrong. 
This is false. I did not vote neither up or down on anything. However, if you don't have a *productive and helpful* answer, please don't reply. I have a task that needs to be done. I don't get the freedom to leave it as is, not to use EF, or any of the other suggestions here so far. Now, if you have an idea on *how* can it be done, great. Otherwise, please keep your opinions of *should* it be done to yourself.
Because that is the task I received. The question is not *should* it be done, but *how* to do it.
order matters. When you initialize a static field at declaration time, it's the same as initializing its value during the static constructor. https://dotnetfiddle.net/OHetwq 
&gt;I don't get the freedom to leave it as is, not to use EF, I don't know enough about EF, but I assume it has ways to do raw queries. Use those.
Unit testing should be able to do all of the checking that you need and the tests can be run automatically on a build of the project/solution.
That isn't the code that was posted. [Here you go](https://sharplab.io/#v2:C4LgbgpgTglgZgTwDQBMQGoA+ABATAAgCUIBnAewFcoBjU/AbwFgAofN/bARgAZ8BlYLAB2AcwCCAbhYBILrwHCRAISnMWRUpRqkAFAEoWTVu2AALGCQB0CmKLH4AvPgBEY56vb4zF64NvLHL3MrGzt8dBcldxYAX3VPNhigA===) Basically you can't have an instance variable initialize an instance variable since the compiler can reorder them. If that happened in your case you'd get a null-ref on this.StringB = this.StringA + "B"; since stringA hasn't been defined yet. Declare the instance variables and set them in your constructor. 
on form1, that calls ActivateAccount form i do this: ActivateAccount ActivateAccount = new ActivateAccount(this, SelectedName, SelectedUsername, SelectedDN); ActivateAccount.Show(); on form ActivateAccount: public ActivateAccount(Form1 Form, string SelectedName, string SelectedUsername, string SelectedDN) { InitializeComponent(); ............. . .. } then on ActivateAccount when i want to do the GetUsers on form1, i do this: Form.GetUsers(); https://i.imgur.com/cpF1IYn.jpg https://i.imgur.com/nHmIJD9.jpg so what am i missing? The autocomplete kan see the getusers function from form1.
You’re correct, I’ll edit my post. Thanks.
You need to add a property to Form2 first: public Form1 form1 {get; set;}; and then assign that property inside your Form2 constructor: form1 = Form; now you can use *form1* anywhere in your Form2 class. I'd highly suggest you to get some c# books or look into pluralsight.com 
So? If they asked you to make it rain, would you be here asking how to do it? What exactly is EF supposed to do for you here? You will not have types to query with because your system is inherently dynamic, then what is the benefit? Even IF you do get it working, which I’m 100% sure you won’t. Telling your superiors the viability of what they are asking for is also part of your job.
Oh I was stupidly focusing on the second example.
u/svick was talking about this: class Resources { string StringA = "A"; string StringB = StringA + "B"; } Which doesn't compile. Instance field initializers cannot refer to non-static fields, properties or methods.
It's synchronous, but in separate dedicated threads, so asynchronous to the original thread that queued the work. It's a finite number of worker threads, so easy to ensure there is no thread explosion from asynchronous work.
It's not. But if you concatenate `null` string with another string, it behaves as if it was the empty string.
Notice that https://www.reddit.com/u/PM_ME_YOUR_HIGHFIVE posted *two* code blocks, claiming they are the same. I'm saying the first one doesn't even compile.
But there is no way to add/produce items asynchronously with `BlockingCollection` and it can block.
For anyone that's intrigued, i'm adding ghost text to fields using their AccessibleDescription as a place holder for what i want it to say.. &amp;#x200B; &gt; private void EnteringField(object sender, EventArgs e) &gt; &gt;{ &gt; &gt;Control FieldJustEntered = (sender as Control); &gt; &gt;if (FieldJustEntered.Text.Equals(FieldJustEntered.AccessibleDescription)) &gt; &gt;{ &gt; &gt;FieldJustEntered.Text = ""; &gt; &gt;FieldJustEntered.ForeColor = Color.Black; &gt; &gt;} &gt; &gt;} &gt; &gt; &gt; &gt;private void LeavingField(object sender, EventArgs e) &gt; &gt;{ &gt; &gt;Control FieldJustLeft = (sender as Control); &gt; &gt;if (string.IsNullOrWhiteSpace(FieldJustLeft.Text)) &gt; &gt;{ &gt; &gt;FieldJustLeft.Text = FieldJustLeft.AccessibleDescription; &gt; &gt;FieldJustLeft.ForeColor = Color.Gray; &gt; &gt;} &gt; &gt;} &amp;#x200B;
It only blocks on Add if you've told it to via BoundedCapacity. It uses a ConcurrentQueue by default. Using asynchronous tasks for tons of small operations gives horrible performance. I'll admit I don't know if BufferBlocks fall to that problem. TPL is designed as a work pipeline, which is not a general panacea for "I want to do work asynchronously".
That's cool, I'm definitely going to try that out!
Syntactic sugar ;)
Interesting name for well thought out replies lol
If you're forced to use Entity Framework, there's some methods that allow you to run raw queries. There's really no way around that.
Everyone in this thread has already told you the answer: it can’t be done. When I put up the rain analogy, it was for a reason. This is just not a problem you can solve with a ORM layer. You need some means to track and update the db schema on the fly and EF does no such thing. What answer are you expecting to get? How are you going to map dynamically generated/extended tables to a static schema? If you don’t have a schema at compile time, then EF is not the answer. You need to restructure your entire data model to be static if you want to use an ORM system, that’s the whole point of an ORM system! Sorry man, idk what to tell you. You can bash your head into this problem until someone takes pity and releases you from this misery, or actually solve the problem with SQL queries. There’s no way around it.
If you generate the class dynamically, the user running the code will still need alter table rights in the database which could be a security issue. What sort of approach are they using to solve this problem in the existing codebase?
Thanks for your thoughts! &gt; When I'm at odds like this, I ask myself, "is there a better design?" Have you asked yourself this? Sorry, I erroneously wrote **unit** tests in the OP, what I should have written is integration tests. &gt; Can you explain why this is a problem? I'm aware of the behavior of JSON.NET and it is not a problem. The thing is, I don't want to rely on (de)serialization, I want to have typed test objects :) To elaborate: My system uses an external service to perform some calculation. My business objects are first mapped to the objects the service expects, which are then sent to the service, which in turn replies with the results. These results are not constant but change once every few months, these new 'golden' values are delivered to me via an excel sheet. Additionally, new fields / changes to existing fields might show up on the service API approx. once a year. To ensure the mapping of my business objects to the services' objects is still correct after API updates, I wrote a suite of integration tests that cover different scenarios. If I run my test suite after an API update and some tests fail, I can adjust my mapping code to conform to the new behavior. &gt; Side note, this would be a cool feature to add to Visual Studio, huh? I would be ecstatic :D
 var cascadeOptions = CameraModel.Instance.cascadeOptions; var generalOptions = CameraModel.Instance.generalOptions; eyePositions = CascadeClassifierClass.Detect( RadioButtonDetectedFeaturesImageViewChecked, cascadeOptions.FaceScale, cascadeOptions.FaceMinNeigbours, cascadeOptions.FaceMinSize, cascadeOptions.FaceMaxSize, cascadeOptions.EyesScale, cascadeOptions.EyesMinNeigbours, cascadeOptions.EyesMinSize, cascadeOptions.EyesMaxSize, cascadeOptions.Eye, cascadeOptions.Face, generalOptions.FaceRectColorScalar, generalOptions.EyesRectColorScalar ); Magic.
yes, but that is pretty much the same as my last point, right (only going one step 'deeper')