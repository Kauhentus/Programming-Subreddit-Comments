Such a license model wouldn't require you overthink the "restricting their usage", but instead you just resort to legal means if they break your terms (which is unlikely).
Is this only for .NET or C++ as well?
My jaw is still on the ground. So many good features in there.
Coravel is not only a scheduler, but has many other features that tie into each other (see[ the repo for more details](https://github.com/jamesmh/coravel)) For example, using an [invocable](https://github.com/jamesmh/coravel/blob/master/Docs/Invocables.md), which is a ubiquitous type (interface) that Coravel can use, you can schedule or queue them using a super simpler syntax - for example: ```csharp // Scheduling scheduler .Schedule&lt;SendDailyReportsEmailJob&gt;() .Daily(); // Or queuing this._queue.QueueInvocable&lt;GrabDataFromApiAndPutInDBInvocable&gt;(); ``` Since it's built as a .NET Core library it's 100% integrated into the DI system (vs. Quartz where it seems like there's no "easy" straightforward way that follows the .NET Core conventions - maybe that's been updated?) ```csharp // In ConfigureServices() services.AddScheduler() // In Configure() var provider = app.ApplicationServices; provider.UseScheduler(scheduler =&gt; { scheduler.Schedule( () =&gt; Console.WriteLine("Every minute during the week.") ) .EveryMinute(); .Weekday(); }); ``` Coravel has an event broadcasting feature - so you could tie that together with the scheduler and schedule a certain application level event to fire once a day, for example. All its listeners will fire etc. So it's more than just a scheduler and is designed specifically to give these advanced types of features without (much) config and having to install other infrastructure. I also try to make the docs as easy and straightforward as possible ;) That being said, if you need a super enterprise level scheduling system then maybe quartz is better? But as the article said, I'm slowly adding more features to Coravel to address these types of shortcomings - even though they aren't what Coravel is really trying to address overall. Hopefully, that helps a bit!
EditorConfig looks to be language agnostic and only help define styles. https://editorconfig.org/
Well, what do you want help with?
Im quite new to C# and these concepts. Can anyone offer some practical uses for this new syntax?
I could have used case expressions countless times over the last 22 years
Did you watch the video? Mads was pretty good at giving some great examples. 
He did, that was the whole point of the demo
&gt;Player.cs &gt;This file is too big to show. Sorry! oh no
Sorry, I mean to ask for different real world examples. Like in an existing project, when would be the proper time to use this type of functionality? For example he mentions subscribers from a stream. What other real world uses could this be used for? I have a hard time imagining the potential uses for this type of functionality. I hope that makes more sense.
I responded to the guy above, please check out my response if you get the chance. 
I'll what I can find on there, thank you
Which ones? MSBuild, ServiceHub.\*, PerfWatson all run in 32-bit only. The only one I know of may run in 64-bit are the InteractiveHost and remote debugger (if your app is 64-bit).
Resharper performance issues were reported to them numerous time, from at least 4-5 years ago until now. The fact that Rider is 64-bit and doesn't have some same issue seems to indicate their their architecture must be different.
Fair point, but how would you turn this idea into a monthly thing? Because i'd definitely want that aswell
Writing a compiler and navigating the AST tree for data analysis.
Like all those features still missing from EF 6, library and VS tooling.
If you know Java developing a JavaFX code is very easy. There are some beautiful things like animations you can easily do with JavaFX but with Electron you have more libraries and frameworks. If you are curious to see a JavaFX application the mac OS version is developed in JavaFX (Windows version is developed in .NET) [https://www.tealpod.com/compressor/](https://www.tealpod.com/compressor/) 
If you hash the strings or put them into a tree, you can already speed it up without going parallel. Currently, your algorithm scales quadratically. A hash is theoretically linear and a tree is linear-log. On the other hand, you can always trivially parallelize your outer loop, but it won't be as effective as choosing the right data structure. Combining the right data structure and parallelism together would give you maximal gains.
What do you specifically mean by comparisons? Like are you just trying to see if the second list contains any strings from the first list?
So excited for these features! c# has come a long way!
Oops... I ran out of care; sorry.
Create a hashset out of the second array. That will avoid the inner loop and you get a fairly fast lookup (`O(1)` instead of `O(n)`). public bool MyEquals(string[] s1, string[] s2) { var hs = new HashSet&lt;string&gt;(s2); return s1.All(hs.Contains); } 
What is 'compare' in this case? If all you need to do it check if all strings in the first array are present in the second array you can use Linq's Except(). var diff = first.Except(second);
Thanks! There's a picture of what your .csproj file should look like here: [http://www.davidbond.net/2018/12/c-80-and-nullable-reference-types.html](http://www.davidbond.net/2018/12/c-80-and-nullable-reference-types.html)
I don’t think that null check is actually safe around 5:00 into the video. Theoretically you could have confirmed that value was non-null immediately change to another thread where someone sets MiddleName to null then when you switch back to the original thread and try and return the name MiddleName would be null.
sadly no. The strings are user inputted data that has a LOT of errors. I have to swap every single character in the second string array with every physically adjacent key one at a time to check for fat fingers, I have to check for discrepancies caused by ambiguous characters (i vs l, O vs 0, etc) , I have to look for garbage that is appended to either the front or the back of either the left or the right strings.
&gt;The strings are user inputted data that has a LOT of errors. I have to swap every single character in the second string array with every physically adjacent key one at a time to check for fat fingers, I have to check for discrepancies caused by ambiguous characters (i vs l, O vs 0, etc) , I have to look for garbage that is appended to either the front or the back of either the left or the right strings. &amp;#x200B;
Can you expand a bit on WCF? Is RabbitMQ an alternative for WCF specifically or is it more similar to MSMQ?
Architecture is different, no one denied that. Still the resharper code is being reused to a major extend far beyond 50%. Only parts excluded are UI/VS specifics and JS/TS support, which is replaced with WebStorm engine.
that is not really the point of the feature, to detect race conditions.
thats not a beginner friendly answer XD
If the compiler guarantees that something is not null it should deliver on that. Regardless of if it’s an edge case or not. Swift and Kotlin both support nullable types and that code would not compile.
Did you just discover that all softwares have bugs?
&gt; If the compiler guarantees that something is not null it should deliver on that. Regardless of if it’s an edge case or not. Swift and Kotlin both support nullable types and that code would not compile. Works just fine in Kotlin. data class Person(val firstName: String, val middleName: String?, val lastName: String) fun getName(person: Person): String { return if (person.middleName != null) "${person.firstName} ${person.middleName[0]} ${person.lastName}" else "${person.firstName} ${person.lastName}" } fun main(args: Array&lt;String&gt;) { println(getName(Person("Barrack", null, "Obama"))) println(getName(Person("John", "Fitzgerald", "Kennedy"))) } If you're working with concurrent code you would put a mutex _around_ the critical section. Do you expect the compiler to do that for you? And then expose the mutex in the language with new keywords and syntax? That would cripple performance for no real reason. Like /u/detachmode_com said, concurrency is orthogonal to this feature (like most other features). Even `i++` is not guaranteed to actually increment an integer, why should this feature try to handle this edge case?
Works just fine in Kotlin. data class Person(val firstName: String, val middleName: String?, val lastName: String) fun getName(person: Person): String { return if (person.middleName != null) "${person.firstName} ${person.middleName[0]} ${person.lastName}" else "${person.firstName} ${person.lastName}" } fun main(args: Array&lt;String&gt;) { println(getName(Person("Barrack", null, "Obama"))) println(getName(Person("John", "Fitzgerald", "Kennedy"))) } If you're working with concurrent code you would put a mutex _around_ the critical section. Do you expect the compiler to do that for you? And then expose the mutex in the language with new keywords and syntax? That would cripple performance for no real reason. Like /u/detachmode_com said, concurrency is orthogonal to this feature (like most other features). Even `i++` is not guaranteed to actually increment an integer, why should this feature try to handle this edge case?
This code is not equivalent to the C# code. You need to declare the fields in the data class as var to allow them to be mutated like the c# code. If you do this the same code you wrote above will not compile and you will get the following error message: Error:(5, 32) Kotlin: Smart cast to 'String' is impossible, because 'person.middleName' is a mutable property that could have been changed by this time
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/azure] [CRUD operations with asp.net MVC and angularjs step by step](https://www.reddit.com/r/AZURE/comments/a3nirp/crud_operations_with_aspnet_mvc_and_angularjs/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
RabbitMQ is, in a nutshell, a *communications* technology. *How* it communicates is just like MSMQ (they are both message queues, after all). WebAPI and WCF are also comm techs. Concerning WCF, it is incorrect to say that it is on its way out. It is an amazing, highly configurable messaging system, though it can get complicated quickly if you start trying to get fancy with it. One could say that WCF is easy to get something up and running but has a steep learning curve for the more advanced stuff. Companies and enterprises are still creating *new* WCF services but mostly for internal things. WebAPI and other Rest APIs are seeing significant increases in usages and are consequently taking away a lot of the market share that WCF enjoyed. However, web API's are largely restricted to http/s whereas WCF can be used for http/s, TCP, UDP, named pipes, and it even has bindings for MSMQ and RabbitMQ. WCF is nice because, from the code's perspective, calling a method on a channel's service contract *functionally* calls the same method on the actual service host (aka remote procedure call or RPC) so its almost like the WCF server is just another object in the application you make method calls on. However, WCF has significant overhead compared to other messaging techs (it's still fast though) so you wouldn't want to use it for real-time games -- it would be better suited for turn-based games, for example. RabbitMQ is much better than MSMQ. I'd encourage you to go to the RabbitMQ website and look at C# tutorials. If your choice came down between WCF or RabbitMQ, go with RabbitMQ -- it's fast, reliable, configurable, highly flexible and is open-source and *free*.
You're right, the code is not equivalent. That is a good error for Kotlin to catch. However, as I see it you will still need a mutex for it to work correctly. Or you'll end up with something like "Barrack F Kennedy" if another thread modifies it. And in that case, the C# version will crash and the Kotlin version will be wrong. Kotlin just saves you from a NPE but silently fails. Which one is a better outcome is debatable, but both would be wrong without synchronization. My point: if you're using synchronization (which you would need for correctness), the C# version is fine.
&gt; whereas WCF can be used for http/s, TCP, UDP, named pipes This is key for me. Http is currently not relevant to me.
At 8:25, Mads uses range syntax `^1` to indicate "1 from the end". The last time I read about this feature, the indexes were 1 indexed when referring to the end of the array. So, `1..^1` would actually only omit the first element, and not one from each side. Was this feature changed, or was Mads mistaken?
+1 on the point about synchronization. I still do not think Kotlin's approach would necessarily lead to silent failures. If you get this error it forces you as a developer to consciously make a decision on how to handle this. Which I think is a good thing rather than trying to figure out why you got an NPE when you thought the compiler said you would never get one. This is especially the case when you are working with 3rd party libraries and you don't know how they work internally.
Are you certain that you want the function and the string to have the same name?
yea, your right about the names, i changed the name of the function but still no go. public void AddDataFunction(string AddData) { textBox1.AppendText(AddData.ToString() + "\r\n"); }
It's the same concept as a monthly bill, just not restricted to number of users/uses. Think "you pay me $X,XXX a month/year" and use the software as much as you want. This is a much simpler model, but you need to account for growth in your contract with them. Additionally, there are a ton of responses for "how to implement a software licensing model" on google. I would recommend starting your research there and then asking more specific questions. Don't focus on a language specific item, look for more theory on how to implement, if you're selling a piece of software, you should be a good enough dev to read an article for one language and have a starting point on converting it for your language of choice. 
try using textBox1.Text += AddData.ToString() + "\\r\\n"); or maybe you dont see it because you add a "\\n" newline which isnt visible in your tb (not enough height or it doesnt support newlines or sth)
Okay, are you certain that the function is actually being called? I'm not too familiar with c#. Can you do a message box in the function that just pops up a 'got here" msg? 
allright, i added 'MessageBox.Show("got here");' inside my function and that triggerd so it does get called
Just YouTube tutorials or just google beginner tutorials. 
My latest project is for Azure in dealing with resource identifiers (strings that fully qualify a resource's scope). You give it a resource Id, and it parses it out to let you reference the composite parts (e.g. subscription Id, resource group, ARM provider, ancestors, and name). &amp;#x200B; [https://github.com/drwill/mash/tree/master/ArmTools](https://github.com/drwill/mash/tree/master/ArmTools) [https://www.nuget.org/packages/Mash.ArmTools/0.1.0-preview](https://www.nuget.org/packages/Mash.ArmTools/0.1.0-preview)
there was a ")" to much in your code, i removed the last ) and tried it, no luck, tried it without "\r\n" still no go, size of the textbox is big enough, multiline support = true.
Question is not entirely clear. However, it seems to me that you want a ViewModel.
Pluralsight if you're willing to pay. If you can afford it I would say it's worth it 
Hmmmmm... Can you try adding a literal string instead of the variable and see if that works? Like textbox1.AppendText("work!");
that doenst work either.... wtf...? this is the code that i tried, the text wont change but my messagebox will pop up. textBox1.AppendText("test"); textBox1.Text += "test" + "\r\n"; richTextBox1.Text = "test"; MessageBox.Show("got here"); got any idea whats going on?
[You should be able to get a month for free by signing up to Microsoft Dev Essentials.](https://docs.microsoft.com/en-us/visualstudio/subscriptions/vs-pluralsight)
Certainly, but you'll of course have slower response times since this WebAPI will then *also* make a call to a WCF service. A common setup in enterprise solutions is to have a WCF service that sits in front of a database that it alone manages and then all other services (webAPI, WCF, etc) makes calls to it. There's pros and cons there too though. If you organize your projects correctly then your WebAPI and WCF service can reuse the same business logic such thay your WebAPI doesn't *need* to make calls to the WCF service.
[https://www.devu.com/courses/cs-fundamentals-via-asp-net-web-applications](https://www.devu.com/courses/cs-fundamentals-via-asp-net-web-applications) I like this guy Bob Tabor!
I'm glad C# is improving in big ways, and relatively quickly compared to other popular languages, especially Java, but I can't help but take issue with some of these features. Get your downvotes ready, lads. Non-nullable references seem half-assed to the point that they're barely better than using ReSharper and sprinkling `[CanBeNull]` and `[NotNull]` attributes everywhere. I get the reasoning that they don't want to break existing code on an upgrade, but then why is it still a warning even after opting-in to these new semantics? It should be a compiler error without additionally having to tell the compiler to treat that specific warning as an error. It's like they said "fine, you can have your fancy non-nullable references, but you have to opt-in twice to get there". I also _really_ hate default interface implementations. It's redundant with abstract classes and adds pseudo multiple inheritance (which I also hate) which I have to assume was excluded from C# by deliberate design choice when the language came to be. And the reason given about forward compatibility when an interface changes all existing implementations don't necessarily have to change, combined with the double opt-in of non-nullable references makes it sound like Microsoft is going the C++ route of "never ever ever _**ever**_ break compatibility ever, even when it makes sense for the long-term", and I don't think I need to explain why that's not a good thing. Also records weren't mentioned in the video, have they been pushed back again, or is this just an incomplete list?
I have a viewModel that only has the Id of the tables participating in the 1 to 1 relationship with the entity i'm trying to insert. This entity requires a class as opposed to only it's primary key. which makes me go fetch that object from db and load it. 
We use ArmDot. This is an obfuskator and license key generator. Works for .Net code and C # Uses a virtual machine for code converting
(Assuming this is Winforms) BackgroundWorker should already handle this but it might be a thread issue. Try: this.Invoke((MethodInvoker)delegate { yourTextbox.Text += yourText; }); This should perform your code on the UI thread
I definitely agree with you. Altho google has learned me that there are many ways to implement it and I'm not sure where to start. There are a lot of different ways of doing this and that's my current issue: how can I find the ideal method that fits me best to fulfil this job.
https://docs.microsoft.com/en-us/dotnet/csharp/getting-started/
MVA course C# Fundamentals for absolute beginners is a good start if you are completely new to programming
&gt; At 8:25, Mads uses range syntax ^1 to indicate "1 from the end". The last time I read about this feature, the indexes were 1 indexed when referring to the end of the array. So, 1..^1 would actually only omit the first element, and not one from each side. The left-hand-side of the range operator is an inclusive index, whereas the right-hand-side is *exclusive*. `0` represents the first item in a sequence, `^1` represents the last. So for `var myArr = new[] { 1, 2, 3, 4, 5 }`, `myArr[1..^1]` would be the subrange *2, 3, 4*. &gt; After looking into it a bit, it seems this feature was changed. At BUILD this year, they used ^1 to refer to the last element, but in this MSDN doc (published yesterday), they use ^0. Nothing has changed. At that build conference they are using `^1` as an index; whereas in the MSDN doc they are using `^0` as an exclusive-upper-bound. This is similar to the difference between using `myArray[myArray.Length - 1]` as an index and using `myArray.Length` in `for (var i = 0; i &lt; myArray.Length; ++i)` as an exlusive-upper-bound.
Just to make sure I fully understand the difference, `//This is okay` `var subset = integers[0..^0];` `//But this is an out of range exception` `var item = integers[^0];` I think I would have preferred ranges to be upper bound *inclusive*, but so long as I understand how to use them, it shouldn't be hard to get used to.
Is ```string Greet``` what you're trying to bind to? It's a variable in a method, it doesnt exist once the method exits. If so, add a public property and have the viewmodel implement INotifyPropertyChanged. Raise the event in that event when you change the property. Make sure the DataContext of the view is set to your viewmodel. The only difficulty with async methods in WPF is that WPF has thread affinity. This simply means that you can only interact with the UI from the main thread. It has a Dispatcher class which makes this easy. async methods will by default await back to the original thread, but you can tell them not to. Either way, you just use the Dispatcher to dispatch the change onto the right thread. That's a lot of info in one go, so ask questions if anything isn't clear. Also, do let us know if you're trying to set bind to a variable in a method as this is not possible. It's what the code above seems to suggest. 
Thanks! Yep your response does help. Quartz isn't integrated with DI like your lib, that's definitely one advantage. Quartz was a pain to get working with sqlite, due to silent failures from my misconfiguration. If you made a persistent state available to recurring job invocations and the state persist through process restarts, I'd give your scheduler a try! But right now, that's what quartz does for me.
I bought Mosh Hamedami's C# courses on Udemy to start with. Honestly, you should also code on your own and build free stuff for fun... It's the fastest way to learn.
Woops, yeah sorry that string is there for testing, so comment that line out. I'm not trying to set a bind to a variable in a method. I'm trying to return a string from a method, and have that set as a public string, and then bind to that. This is my public property. &amp;#x200B; `private static string greet;` &amp;#x200B; `public string Greet` `{` `get` `{` `return greet;` `}` &amp;#x200B; `set` `{` `greet = value;` `OnPropertyChanged();` `}` `}` &amp;#x200B; And yeah, what you're saying seems to ring through. When stepping through my code it appears that the UI renders before the string even has a chance to be set. Which I think is my problem. For example, if I just return a boilerplate string with a synchronous method, it works fine. &amp;#x200B; &amp;#x200B;
Actually it depends how it's done. There is some implementation of escaping, that prevents all sql injection. For example if you use: const string sql = "SELECT * FROM SOME_TABLE WHERE Name = @name"; and add the @nameparameter with value: cmd.CommandText = sql; cmd.Parameters.AddWithValue("@name", name); OR simple: `System.Security.SecurityElement.Escape(Value)`
That is correct. &gt; I think I would have preferred ranges to be upper bound inclusive I did too at first, but upon further reflection [I changed my mind](http://benbowen.blog/post/csharp_8_concerns_followup/#range_operator_and_'hat'_operator). :)
&gt; Make the CLI your Best Friend No. I hate trying to remember random commandline lines for no reason. I'm a visual creature. CLIs are for automation/scripting. 
That sounds fantastic and I'm sure all the players will appreciate it! I've considered doing something similar for showing range with a projector above the table.
I'm working on a 2nd iteration of a library to read Bethesda Game Studio data files (namely for Skyrim &amp; Fallout 4). I had a V1 that worked well as a proof-of-concept, but in V2 I want to convert representations of data into structs &amp; use `Memory&lt;T&gt;` to keep track of where data is in a binary blob.
not so easy either... considering the size of QT and changes and all that...it would require a huge amount of labor.. I've been down this path in a different way and i eventually gave up
I don't understand. Hexadecimal is just a base system, the underlying type of number is still an integer. Integers are not any more decimal than they are hexadecimal (arguably they're base 2/binary if anything). What would this library do?
:) That's cool, I had to guess a bit :) It sounds like the OnPropertyChanged method isn't working properly perhaps. If it's not notifying the correct property name it won't work. It should update as soon as you change it as long as the notification works. 
The goal of the invocable types are to basically give you the ability to manage state yourself. So for example, let's say every hour you run some job that needs to keep track of the running totals of all the jobs together (over time). Your job could manually fetch the current total from the DB, adjust it, then save it. If you are talking about, specifically, that Quartz actually stores the state of a closure (local variables, etc. in a lambda) then that would be a different use case. What exactly are you needing to do (persist via DB or some storage vs. storing closure state)?
Hi there, sclarke81. I just saw this comment. Check out https://dainty.site/. :)
Offer structs to represent Hex numbers &amp; provide implicit conversions for primitive types, plus operator overloads.
So can this be committed to your git repo and shared with your team? Is there a good "default" one somewhere?
Point taken and I said YMMV. I like to use the command line to do tedious tasks that take longer in the IDE, but I get that you like visual things :)
I agree. 25 years ago CLI (and Norton Commander) was all I had, but if something trivial requires CLI now, it means a failure somewhere in the design/workflow.
Hex is just shorthand for dealing with binary nybbles. That's all anyone uses hex for, pretty much anywhere, ever. An int32 is already just 8 contiguous nybbles. Instead of writing out 0000 1111 0101 1010 0110 1001 0011 1100, you can write 0F 5A 69 3C. Or you could write the decimal version, 257583420. And all of these can be assigned to an `int` or `uint`. C# already has language support for hex constants and the .Net frameworks already have support for hex-string conversions to/from the primitive types. This is why you can use `uint blah = 0xB00BFACE;` (maturity!) in your code and why you can use the "X2" format specifier in Parse methods and Convert classes.
That's fine. It's just that your title is quite combative from the start, which is only going to get people's backs up. The implication is that CLI users are "better" .NET developers. Truth is, of course, there are great developers who use either or both (visual tools or CLIs).
If something trivial requires UI now, it means a failure somewhere in the design. 
Have you changed anything else about the app?
I was talking to a co-worker about the default interface implementations and while on the surface it sounds good that you can update an interface without breaking anyone else's implementations, but, doesn't adding default implementations go against the whole point of an interface as essentially a "contract"? Since now that contract means nothing. What happens when you implement an interface that has defaults and you don't write your own implementation? Do you get a compiler warning? Errors? So it seems good on the surface, but just feels wrong to me.
You're getting downvoted here for a controversial opinion, I guess, but it was very well stated and adds to the discussion so have an upvote. One of the most important goals of Nullable References is to actually be adopted. In order to do this in real codebases, partial and incremental adoption is key. This means that there will be times when the compiler does not have a perfect view of the world, and will complain about code that is perfectly fine. If these complaints were errors, then you could not silence them. By making them warnings, you are able to say "I'm sorry compiler, but you just don't know the whole story here" and get your partially-converted code to compile. It's not redundant with abstract classes, you cannot provide stateful implementations to default interface implementations. You could use a ConditionalWeakTable in a static field on some other class, I guess, but if you're going out of your way to abuse language features you can already do that in plenty of ways. Meanwhile, versioning interfaces is a real problem for many people, including VS with the 10 different versions of `IVsSolutionEvents` and every other interface ever shipped. Records will not be making 8. They're currently in design, proposals are being fleshed out. Whether that means they will be a point release feature or a major version feature, I don't know yet. 
Any time when you have complex data structures, these features can make your life a lot easier. You end up having to code fewer special cases if you disallow nulls, and when you do need special cases the new switch syntax makes it easier.
Get a book and just go through it. Actually coding yourself is a lot of fun and, in my opinion, makes it easier to learn than watching a video or something.
It should throw exception if there is threading issue
Oh yeah that is true 🤔
If something complex requires cli, I think its even worse.
What is textBox1? And what is 'this' when AddData method is called. My bet is you are creating a new instance of form (new Form1() maybe??) instead of calling AddData method on the instance of Form that is created automatically for you.
Have you tried cleaning and rebuilding? 
The first statement I find a little off... &gt;One of the key differences between REST (Representational State Transfer) and RPC (Remote Procedure Calls) ... REST calls are web server Request/Response transactions. These intrinsically are RPC calls. The two are not mutually exclusive. In fact he has to do the work to break these into "jobs" to break the RPC nature of these REST calls. &amp;#x200B;
Yes! I was going to link to one from the post, but forgot. Best one Ive found so far is the one committed to the Roslyn repo on GitHub - https://github.com/dotnet/roslyn/blob/master/.editorconfig
Right now, just .NET from what Ive seen. I wouldnt be surprised if support gets added for C++ in the future.
[removed]
IAsyncEnumerable and Observable are different patterns, duals of each other One is push and one is pull Observable pushes to subscribers IAsyncEnumerable the subscriber pulls Observable is better suited for slow producer, fast receiver model IAsyncEnumerable better for fast producer, slow receiver (all relative of course)
Using it since day 1. It guesses what I need to use 70-80% of the time. 
True - but that usually a scripting object or somesuch, not 'ren "out.txt" "out2.txt"'.
They're quite lovely in PowerShell. 
Not sure if LINQ is available in Unity, but have you tried: List&lt;string&gt; words = new List&lt;string&gt;(); //add your words to the list with words.AddRange() bool match = words.Any(x=&gt;x == "gocart"); match should only be true for exact matches.
what if myUserProvidedInput equals to: "**1; drop table your\_important\_table; --- lol bobby tables"**
[Composition](https://en.wikipedia.org/wiki/Object_composition) is missing as are [interfaces](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/interface) The late binding and early binding example is interesting but not relevant to OO particularly. It's a compiler/jit thing. Your code doesn't stop being OO because the compiler inlined all the methods for example (a stupid example, but an example none the less). All that said, it's great that you took the time to share stuff with people. Keep at it :)
Not sure why you aren't getting it to work, but I have some comments. First, don't name the parameter the same as the function, call it something like dataToAdd. The first letter of a function parameter should be lower case (not a strict rule, just generally-accepted practice). Also, this is already a string so you don't need to call ToString() on it. Finally, if this is being done from a background worker, you might need something like this: if (InvokeRequired) { Invoke(new Action&lt;string&gt;(AddData), dataToAdd); } else { textBox1.Text += dataToAdd + Environment.NewLine; } Probably a better architecture would be to have a thread-protected queue of strings that the background worker writes to and that a Windows Forms timer reads from and then adds to the text box. Queue&lt;string&gt; StringQueue { get; set; } // in constructor StringQueue = new Queue&lt;string&gt;(); // in background worker lock (StringQueue) { StringQueue.Enqueue(stringToAdd); } // in the timer string[] newStrings = null; lock (StringQueue) { newStrings = StringQueue.ToArray(); } foreach (var str in newStrings) { AddData(str); } If you do it with a queue, you don't need to worry about Invoke or InvokeRequired in the AddData function.
 Text="{x:Bind=Greet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" /&gt; 
I'm pretty new to Unity but yes I am pretty sure it is available... I tried using it in a list but also only tried with .Contains() and did not try your suggestion yet. I well try it now, thanks a bunch!
REST's entire schtick is that it _isn't_ RPC. Even the book (and thesis paper that started it all) is very explicit that REST should not be considered RPC. 
 Text="{x:Bind=Greet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" /&gt;
 Text="{x:Bind=Greet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" /&gt;
There are a load of ways to approach this. I'll give you one example I stole from a StackExchange blog post many years ago. They had millions of posts which could have any number of hundreds of tags (csharp, java, javascript, etc). People wanted to filter on tags and this was a huge burden. So they moved from a standard Dictionary to a custom in house solution that grouped/hashed the tags on the first three characters. You find the group hashed on the first three characters and then your search space is massively constrained. This might not be the best approach for you, but hopefully it gives you an insight in to some alternative ways to think about the problem. You can roll your own data structure to simplify the look up. For exact matches you can go mad and use trees and so on. If you need a bit of fuzzy or Soundex for example, it's not quite so simple. 
&gt; Records will not be making 8. They're currently in design, proposals are being fleshed out. Whether that means they will be a point release feature or a major version feature, I don't know yet. I feel like that's where they've been in limbo since like v6. Shame cause there's so many times I find myself writing boilerplate they could solve! Especially with some of the things they've discussed like `.With()` and `IEquatable` and such. Maybe one day.
From an "on-the-wire" perspective I don't see the difference. A REST call has different semantics versus a procedure call, but as far what resources are servicing the request, the web server is holding the thread to execute the call. The only way to disrupt that has nothing to do with the semantics of the call, but rather with offloading the work to a separate process via messaging (bus, pub/sub, events) or tasks.
Also, as proven here, he can describe pain drying on a wall and still be an enthralling speaker. And he has a great sense of humor as evidenced by the fact that he did this at all.
It worked!! I also found that LINQ must have it's own MeshSet, as I couldn't find the .Any unless I was using system.linq, So Unity must have it's own List and MeshSet. Anyhow, LINQ MeshSet has Any also, so it worked exactly the same as you said. Thank you so much!
Wat? Hashset&lt;string&gt;.Contains returns true if asked for “go”but contains “gocart”?? I can’t trust this.
I don't know if you're trying to be sarcastic but not everybody is an expert, and so .Contains was the best thing I could find by myself. Thanks for commenting.
Agreed, there's something wrong it seems.
It sounds like you've tried that already. In that case, you must have been doing something wrong. Hashset will _never_ return true, if `a.Equals(b)` returns false, which is definitely the case for `go` and `gocart`... They are not equal.
Using LINQ is probably the slowest way to check for a known word. With around 270.000 this could already have a measurable impact, depending on where you call it.
I don't get it. Your ViewModel contains id?...of a table? Explain what happens inside your view. What input do you require from user?
I enjoy Mosh's teaching style.
Also, take a look to the sidebar to the right -&gt; Lots of good info there.
:O his voice is so nice
I learned the dotnet CLI and have found it useful. It replaces having to know msbuild, ef migration package console commands, and makes it possible to quickly create, build, and run projects or solutions even when I am on a computer that doesn't have a licensed version of Visual Studio (or when testing things on a Raspberry Pi, for example). I find it greatly simplifies CI/CD setups for new projects, and makes coding in VSCode reasonable for [ASP.NET](https://ASP.NET) Core projects.
You can use Ultimate excel. I used it and it will be very easy with .Net Core and .Net. You also use it with web or desktop. This is commercial. But you can also EPPlus. It is free and also very easy to use. But in my opinion, if you have afforded then you can use [Ultimate excel](https://www.componentpro.com/products/excel) because it has many great features and very simple code to implement. Otherwise, you can use [EPPlus](https://www.nuget.org/packages/EPPlus/) and easier to use.
Now that C# has both advanced pattern matching and switch expressions, the need for a good record type and discriminated unions is extremely obvious. Trust me when I say that there's a very good chance they're actually coming this time.
I feel like the difference between the colloquial definition of REST and RPC is entirely semantics, so you're not wrong.
Well that's what I thought too, but I guess .Contains might just mean that it contains that search string, and there is just no way to tell it to instead determine if it's an exact word and not just an exact match. I don't think it's something I did wrong, as to fix it, I used u/gameconner 's suggestion, so I basically just changed the .Contains("go") to .Any(x=&gt;x == "go") and it worked as expected (false on "go" and true on "gocart") and didn't change anything else in my code. I guess that's just how .Contains works. 
Thanks
That’s not how Contains work. And as pointed out in the other comment, Any is the slowest thing you could possibly end up. If it’s enough for your use case, then alright.
I suggest to isolate the issue into a console application or unit test. You also wouldn’t expect a hashset with the values 123 and 456 to return true for 4 or 1...
Ok, I just did a barebone test and it seems you are right. I guess somewhere I am doing something else wrong. I will have to look at it all over. `HashSet&lt;string&gt; test = new HashSet&lt;string&gt; { "hello, testing, gocart" };` `Debug.Log("TEST: " + test.Contains("test"));` Returns false as it should so that tears down my assumption that it doesn't work right the way i wanted lol. I have tried the .Any method, and it seemed pretty fast for my needs but if you have any other ideas, I'm open to suggestion. Basically, I'm reading in a 270k word list, storing it in hashset, and searching for a word that a user inputs. Thanks!
Sure. I know you can do those things. I'm parsing &amp; manipulating files in an old, wonky file format and I want convenient ways to manipulate hex values within it. &amp;nbsp; Hex values in the file format: * Depending on where used, and at times conditional on other data, MUST be of a fixed length (i.e. 2 characters if represents a byte field, but sometimes MUST be prepended with `FF`). * Are sometimes converted by char into binary. * Sometimes are prepended with `XX`, which is meant to be dynamically replaced at runtime (ugh). &amp;nbsp; I'd rather wrap up a bunch of utility in a series of `Hex` structs that correspond to `UInt32`, `Int32`, `BigInteger`, etc. &amp; move parsing, conversion, &amp; formatting of hex values outside my file format parser.
AWWW skeet skeet This is thrilling.
Me: # Puts on Bluetooth headphones # Sucks thumb # Closes eyes
Hello there! I faced a similar situation so here is how I ended up doing it. First thing first, I believe there is no point in targeting specifically net461 for your main lib as netstandard2.0 is perfectly consumable by that version of the framework and to my knowledge there is no gain there (I would be happy to learn otherwise if so). In my case I have a project containing all my game logic build against net472, netcoreapp2.1 and MonoAndroid81, this is what my csproj looks like: &lt;Project Sdk="MSBuild.Sdk.Extras/1.6.61"&gt; &lt;PropertyGroup Label="Compilation"&gt; &lt;LangVersion&gt;latest&lt;/LangVersion&gt; &lt;TargetFrameworks&gt; net472; netcoreapp2.1; monoandroid81; &lt;/TargetFrameworks&gt; &lt;Optimize&gt;true&lt;/Optimize&gt; &lt;Configurations&gt;Debug;Release&lt;/Configurations&gt; &lt;/PropertyGroup&gt; &lt;PropertyGroup Label="Debug" Condition="'$(Configuration)'=='Debug'"&gt; &lt;Optimize&gt;false&lt;/Optimize&gt; &lt;DefineConstants&gt;DEBUG&lt;/DefineConstants&gt; &lt;/PropertyGroup&gt; &lt;ItemGroup Label="References"&gt; &lt;PackageReference Include="DefaultEcs" Version="0.7.0" /&gt; &lt;/ItemGroup&gt; &lt;ItemGroup Label="Windows reference" Condition="'$(TargetFramework)'=='net472'"&gt; &lt;PackageReference Include="MonoGame.Framework.WindowsDX" Version="3.7.0.1708" /&gt; &lt;/ItemGroup&gt; &lt;ItemGroup Label="NETCore reference" Condition="'$(TargetFramework)'=='netcoreapp2.1'"&gt; &lt;PackageReference Include="MonoGame.Framework.DesktopGL.Core" Version="3.7.0.7" /&gt; &lt;/ItemGroup&gt; &lt;ItemGroup Label="Android reference" Condition="'$(TargetFramework)'=='MonoAndroid81'"&gt; &lt;PackageReference Include="MonoGame.Framework.Android" Version="3.7.0.1708" /&gt; &lt;/ItemGroup&gt; &lt;/Project&gt; Note that I am using the new csproj format with the TargetFramework**s** element. Each target have its own reference to the graphic lib I am using (monogame in my case). An other important part is the `Project Sdk="MSBuild.Sdk.Extras/1.6.61"` which allow the use of android target (and many more, check it [here](https://github.com/onovotny/MSBuildSdkExtras)) as this is not yet handled by default. When build, this project will produce one dll for each target correctly. Now to package it, you can add information inside the csproj again like so: &lt;PropertyGroup Label="Package"&gt; &lt;Authors&gt;...&lt;/Authors&gt; &lt;PackageId&gt;...&lt;/Description&gt; &lt;PackageIconUrl&gt;...&lt;/PackageIconUrl&gt; &lt;PackageProjectUrl&gt;...&lt;/PackageProjectUrl&gt; &lt;PackageLicense&gt;...&lt;/PackageLicense&gt; &lt;RepositoryUrl&gt;...&lt;/RepositoryUrl&gt; &lt;RepositoryType&gt;git&lt;/RepositoryType&gt; &lt;PackageTags&gt;...&lt;/PackageTags&gt; &lt;Version&gt;0.1.0&lt;/Version&gt; &lt;PackageReleaseNotes&gt; &lt;/PackageReleaseNotes&gt; &lt;/PropertyGroup&gt; and you can either tick the package on build option or call directly `dotnet pack MyProject.csproj -c Release` to produce a single nuget package containing all your targets. As for your bonus question, I don't think there is any gain with specific x86 x64 so I would stick with any cpu, one less thing to handle. No idea for ARM.
Thanks a lot! I’ll try tomorrow. BTW I was going for net461 on the main lib because otherwise I have to package 12-20 netstandard DLLs with the final executables, which is annoying. I’ll report back when I try this stuff.
https://soundcloud.com/theyellowduckpodcast/a-conversation-with-jon-skeet-the-chuck-norris-of-programming
How can I upvote this more than once ? 
I think this will do it: `\', exec sp_executesql 'some dangerous query can go here' where escape '\'` The `ESCAPE` keyword is mildly evil. Barring any explicit stripping of that keyword, you're vulnerable without using parameters.
That's literally a parameterized query though.
I love reading and listening to Skeet. He speaks and writes in a manner that is engaging, interesting, intelligent, and yet still somehow simple (in a good way). If anyone hasn't read it, please read C# In Depth. I've read it cover-to-cover multiple times.
&gt; Hashset will never return true, if a.Equals(b) returns false Ehhhh that is **not** true. You can pass a custom comparer to the HashSet constructor.
beyond question
You mean because of the dependencies of a netstandard project which you don't need with net462 because they are included directly? Also I didn't say so but as you have everything in the same project, you can use pragmas for platform specific parts #if NET462 // or something like that ... #endif I am not a fan but there is a PR in the [MSBuildSdkExtra](https://github.com/onovotny/MSBuildSdkExtras/pull/47) to handle it automatically based on folder name, I really hope this end up in some day :)
First part: yes. Second part: I know, but I don’t need to as the main lib has it’s own abstraction layer which the other libs follow. Thanks again!
A single `[` could cause you some problems... I don't see a good way to escape from the doubled single-quotes, but that doesn't mean there isn't one.
Donate to his GoFundMe!
I know it's not good enough, but I couldn't remember why. This will explain why: https://stackoverflow.com/questions/8506574/sql-injection-isnt-replace-good-enough 
This is by far my most favourite thing on YouTube now.
It seems like you have your own string matching algorithm you need to use. What you probably need to do is the equivalent of the hashing technique described by others here, but with a custom comparer. You can define your own IEqualityComparer&lt;string&gt; that uses your custom string comparison logic and use it with a HashSet&lt;string&gt;. &amp;#x200B; Then you can fill up the HashSet with the strings from the first array and then iterate through the second array and check to see if there is a match using hashset.Contains.
When I read it i totally thought of the musical note
Its got 14 by my count !"#$%&amp;'()*+,-. Which is a contiguous portion of the ASCII character set (ASCII Decimal values 33-46) &amp;#x200B; Did I miss some?
Now I'm think that it's OS-related. The same exe file behaves as desired on a different PC. Also, if I invoke the app via a .bat file it behaves properly.
O and X I think. Lower case X and either an uppercase O or some circle variant. 
\&gt; I like to use the command line to do tedious tasks that take longer in the IDE That's what tasks and similar are for. If you type the same command into a terminal more than 5 times, turn it into a button or keyboard shortcut.
Uhh... `CONTAINS` is for full-text-index searching on `VARCHAR` or `NVARCHAR` columns. I'm pretty sure it won't work on `DATETIME` columns. Try `SELECT * FROM DowntimeIncidents WHERE MachineID = @machineID AND DateTimeDown BETWEEN @fromDate AND @toDate AND DateTimeOnline BETWEEN @fromDate AND @toDate` instead. And parameterize those variables!
Any idea what the name is when you go to Options -&gt; Keyboard? I don't appear to have a shortcut configured for it.
Might as well just call everything API, right? No difference except the semantics ...
160 subs... 
So BinaryReader then?
Hey, I can see a big SQL Injection issue too. You should check for SQL parameters
I wish we were hosting Xmas this year. When we do, I normally play a fireplace video from youtube on the tele (a bit of fun, we live in a hot summer Xmas country). I'd love to have this playing instead, just to annoy everyone else.
Holy shit they added a checkbox to debug decompiled sources! This is a godsend.
The semantics of the call is important to adoption, but doesn't matter to the system performance. RPC v. Messaging is almost entirely pertinent to system performance. In-Process REST calls will bring a server to it's knees at load the same as any SOAP or other RPC call. Those are the semantics I'm referring to. 
&gt; Obviously you can't do this crazy memory/pointer manipulation in C#, so I thought, I'll just write this in C++, put it in a lib/DLL and use it in my C# project! You certainly can, assuming your structs fit the criteria for being unmanaged ([a type that is not a reference type and doesn't contain reference type fields at any level of nesting](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/generics/constraints-on-type-parameters#unmanaged-constraint)). You can either use [AllocHGlobal](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.marshal.allochglobal?view=netframework-4.7.2) to allocate permanently-placed off-managed-heap memory (i.e. memory that won't be moved by the GC); OR allocate a normal array and [pin it via a GCHandle](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.gchandle.alloc?view=netframework-4.7.2). There's probably a good solution using Spans too I'm not thinking of; maybe someone else will have a good idea.
Is he alright ?
WHERE MachineID = " + machineId + " That won't work if MachineID is an integer field. Putting it in quotes will have it search for a string. AND CONTAINS(DateTimeDown, " + fromDate + ") AND CONTAINS(DateTimeOnline, " + toDate + ")" Should be something like WHERE DateTimeDown BETWEEN CONVERT(datetime,'2013-10-17') AND CONVERT(datetime,'2013-10-18') 
I don’t really care if something is exposed via CLI or in the IDE so long as I don’t have to touch the mouse to access it. 
Honestly when I have to work with the CLI I feel like I don't want to be a developer. I am super annoyed that .NET Core is pushing this more and more.
A hash set isn't designed for encoding substring relationships. You probably want to use some variant of a Trie.
Actually that only works well for prefix and suffix searches, an alternative would be Ago-Corasick or Rabin-Karp
Your hashset only has one string "hello, testing, gocart". Shouldn't it be { "hello", "testing", "gocart"}? Also, Contains is the best option, there is no need for anything else.=
Way slower than a HashSet for sure. Linq is already somewhat slower than a normal for loop, but O(N) vs O(1) is pretty significant.
Maybe he is saying that the file is in ASCII and that he wants a Hex struct that stores it as a string. I still think it is better to parse the ASCII with int.parse(text, NumberStyles.AllowHexSpecifier).
Reddit some how formatted it and changed it. Thanks
Check out binary serialization: https://docs.microsoft.com/en-us/dotnet/standard/serialization/serialization-concepts if your objects support it, this makes the work for you in a single pass and in a robust way. 
Okay, that makes sense. But yeah, no need to use anything but Contains since it is the fastest and simplest option.
Yeah, I guess I had bad code somewhere originally that made it act weird so I assumed it didn't work how I thought it would. But after it was explained to me in here, I went back and got it to work. Thanks for your help!
I would use parameters in this case since SortBy should definitely use a parameter. 
Some things that seemed like awesome optimizations back in 1995 are quite useless in 2018. Do some experimentation to see if performance gain is worth the effort. 
If you use string interpolation you could be vulnerable to SQL injection so it's best to use a parameter. 
Just build web service with winforms front-end. Then you would control who can use your app, how many times and so on. Unfortunately this implementation also comes with backend support headache but if money is good then it could be worth it.
30K strings is really small task. Sort both arrays and use Linq Zip() function. It is one line and it should be done in a few seconds at most assuming that yours strings are not tens of megabytes long. 
Is find all references or go to definition, or comparable alternatives available in the CLI?
Probably not, I don't know. I'm not `man`. 
**DO NOT USE STRING INTERPOLATION! DON'T CONSTRUCT SQL STATEMENTS YOURSELF!** You'll make yourself vulnerable to SQL injections. Always use parameterized queries.
It is very unlikely that you can upgrade to the full version, considering that you can install Preview and full versions side-by-side nowadays. There's no option to update the VS2017 Preview versions to the full version either.
I find default interface members to be highly questionable.
Ok. I'll try my best to share content with good examples. Thanks. :)
Ah, OK. Thanks for the information. I'll wait until it comes out in production. I don't do any major C# stuff at the moment so I can wait.
Would vim work?
What do you mean, "pushing it"? They are just building out a well functioning CLI, as far as I see it. Is there stuff you found that they intentionally left out of vs code that is in the CLI?
Check the documentation first. EF Core converts interpolated strings to sql parameters automatically. Maybe Dapper does the same
Yes, me too. I like interfaces because there is no implementation. Exposing an interface means you expose only the contract. Not too sure what to think about it. I'm mostly concerned - don't we have abstract classes for this stuff?
Ok, I tried your suggestion and it works, when I target a single architecture. However, for the Windows lib I need to differenciate from x86 and x64. Can both versions be put in the same package?
No no, VS added Go To Definition based on decompiled sources. To actually debug into it you need to either use ReSharper (right click in the Modules window), set up dotPeek as a symbol server, or use .NET Reflector extension. Also Rider has this out if the box.
&gt;The first letter of a function parameter should be lower case i'll try to remember this. &gt;Also, this is already a string so you don't need to call ToString() on it. thought so aswell, but after some google-fu i came up with this &gt; if (InvokeRequired) &gt; { &gt; Invoke(new Action&lt;string&gt;(AddData), dataToAdd); &gt; MessageBox.Show("invoke required"); &gt; } &gt; else &gt; { &gt; textBox1.Text += dataToAdd + Environment.NewLine; &gt; MessageBox.Show("invoke not required"); &gt; } i tried this and the "not required" always pops up. for the second part of your code(the queue) i'm gonne have to google some more before i try it thnx
hum I have seen packages bringing libs for both architecture. For example SQLite has only one nuget with both x86 and x64 so it is definitely doable. I believe it has something to do with the folder name, simply put each native dll in its own architecture folder (x86 and x64) and it should be correctly accessible for your running code. In your csproj you should be able to put a `Pack="true"` attribute on those items to force them into the package in case they are not taken by default.
??? There's nothing wrong with what he's doing unless input from a client is used.
Let me rephrase: I don’t package native dlls, however my .NET DLL uses different DLL imports (on pre-installed DLLs) based on the architecture. Is there no way to do a multi-arch package automatically, without having to write a tedious .nuspec?
I don't have VS Code installed so I wouldn't know what is there. I am not sure if there is anything left out of VS but all the docs and tutorials are infested with the CLI.
I don't believe you can change your import at runtime so although you do not need to pack your native dll, I think you will still have to pack each statically linked (because of your imports) architecture dll in your package separately :/ I am no nuget or import guru though, I really wish there was a way to do without nuspec and build targets shenanigans for that :(
Bummer. I guess I'm spending the morning writing a nuspec then... Thanks again! This was very helpful regarding the structure of my .scproj &amp;#x200B; Sidenote: default VS .csproj files are awful.
unfortunately that didn't appear to resolve it. However it does point towards to PropertyChanged being the issue. I'll have to step through and see what it's doing.
Doesn't look like x:Bind is supposed to have equals sign.
Oh yes they are! Just had a thought about the runtime imports. I don't know if this works but let's say you have 2 class for your import, one for x86 and one for x64 like this public static class NativeX86 { [DllImport("x86.dll")] public static void Whatever(); } public static class NativeX64 { [DllImport("x64.dll")] public static void Whatever(); } I wonder if it is possible to define a common ground (if hopefully they have the same signature) public static class Feature { public static readonly Action Whatever; static Feature() { Whatever = if86() ? NativeX86.Whatever : NativeX64.Whatever; } } There is probably a way to check that `if86` but I have no idea if this would actually work ^^"
That’s what I was thinking TBH, can’t really be bothered to keep up and maintain a completely custom nupkg.
Not when PageSize is an integer.
Nope. And really you shouldn't trust EF Core to do it because if someone later decides the code would be more readable with the SQL as a separate variable, you could introduce a SQL injection bug.
Again, not when it is an integer.
The reason you may not want to do "OFFSET {PageSize} ROWS" is that it you get a separate execution plan for each possible value of `PageSize`. From the database's perspective, you are hard-coding the value instead of using a parameter. If `PageSize` varies a lot, you could be making the database do a lot of unnecessary work by compiling lots of nearly identical queries.. *** Do note that there are times when you do want to hard-code a value. For example, if you hardcode `AND IsActive=1` then you can use partial indexes that only include records that are marked as active. This won't work when you use `AND IsActive=@IsActive` because the compiler has to assume the worst when choosing an index.
P.S. You didn't ask about `ORDER BY Products.@SortBy`, but that is one you need to be really careful about. Always verify that `SortBy` is actually a column in your database. 
And if someone changes the code and the type of it (for whatever unlikely reason) you could introduce an SQL injection. Using a parameter does not cost much and makes the code safer and more maitainable.
Intersting. Do you have some source or short snippet to show what you mean? The docs say something else.
And how would you deal with `ORDER BY Products.@SortBy`? Yes, inline SQL can be dangerous. But lets talk about real risks, not bullshit hypotheticals. 
Interesting. Do you have some source or a snippet to show what you mean? The docs say something else
https://www.infoq.com/news/2017/09/EF-Core-2.0-4
SortBy can't be a parameter in SQL Server. It has to be hard-coded since it is part of the execution plan. (For example, which index it chooses depends on which column you are sorting on.)
The only parameterized here are the PageSize and GetNumber. Interpolate the SortBy. string query = $@"SELECT Products.* FROM ProductCategories join Products on Products.Id = ProductCategories.ProductId join Categories on ProductCategories.CategoryId = Categories.Id ORDER BY Products.{SortBy} OFFSET @PageSize ROWS FETCH NEXT @GetNumber ROWS ONLY;"; connection.QueryAsync&lt;Product&gt;(query, new { PageSize = @PageSize, GetNumber = @GetNumber });
It just an example to detail my ask
If you know what you're doing, then it is fine. On here, how can you parameterized a column name?
And I answered you in detailed.
Binary serialization is slow, spacious and deprecated, though.
It shows warning during build and underlines the place where you use it.
In order to achieve this I think you would need to call this.OnPropertyChanged(“Title”); inside the setters for both of the other properties.
I like the idea of being able to change an interface after having written implementers to it, without breaking said implementers, but it's definitely something I'll use as little as possible. It's a nice "*better do this so existing code can compile, then I can implement it properly later*", but it definitely opens the door to bad practice where using inheritance would be better practice, or where you simply forget to properly implement it (I definitely hope Visual Studio will have a warning that tells you X class relies on the default implementation of Y interface).
Should be fine as long as you safeguard against SQL Injections elsewhere. And for general-purpose string definitions, interpolation makes the code that defines the string a lot more readable.
Without thinking it through, it seems like you're missing a file called Search.cshtml, aka your view
Skeet skeet skeet!
Ok, I'll try it. What about if I got two separate models? Could I retrieve the number from the other models someway? public class Test: INotifyPropertyChanged, ICloneable { public string Category{ get; set; } public string Type{ get; set; } public string Title { get { return this.Category+ "/" + this.Type + number; } set { this.OnPropertyChanged("Title"); } } } public class Test1: INotifyPropertyChanged, ICloneable { public string Number{ get; set; } } }
WPF, WinForms and UWP are now open sourced - this means they are in great shape :)
public string Category{ get { } set { this.OnPropertyChanged("Title")} } &amp;#x200B; Does this look correct? Could I write it in another way?
I’m away from my pc right now. You would need a class variable to store the category. I have drafted an example [Here](https://dotnetfiddle.net/WhUth9) which shows you the age property is changed when the date of birth is set. Should be enough to put you on the right lines!
I loved the 3rd edition, looking forward to trying this one out! Maybe post this in /r/dotnet as well?
Absolute upvote. There's a gentle clarity in his writing, something very human but still concise.
&gt;Using "+" is inefficient and pretty much never needs to be used. Which is wrong *sometimes* For example: var myString = $"My length is {myInteger}"; becomes var myString = string.Format("My length is {0}", myInteger); // some internal calls later string.Concat("My length is", myInteger.ToString()); If you instead were to use var myString = "My length is " + myInteger; which would become a simple `string.Concat("My length is", myInteger.ToString());` &amp;#x200B; And in case of a `var myString = "Hello " + "World";` The compiler would be smart enough to shorten it to `var myString = "Hello World";` &amp;#x200B;
He’s answered my questions directly. I am blessed 
If you're using one of the newer(ish) versions of .NET i recommend using the nameof feature so use nameof(Title) to get your "Title" string and remove / prevent magic strings. Also if you do a rename of that variable you're covered where a magic string you would have an issue 
Uh. What do you want to map them to? They’re already null.
Move to .NET Core instead of Mono, then use ASP.NET Core.
And what is the alternative? 
So your returning a view result (or something like that) in your Search function, which will look for the page Search.cshtml based on your controller name. I'm guessing you want to be returning something like a jsonResult instead. 
Like if an categoryid = 4; but I want to set categoryid = null; Becaues the value in SQL should be null.
Ok, but I'm not having my variables in the viewmodel, but rather the model. Should I apply it there instead?
&gt; I'll wait until it comes out in production. There's no need, unless you're running low on disk space. While 2019 is in preview, you'll have 2017 and 2019 installed side-by-side. Once 2019 comes out as final, 2017 will upgrade to it, so you'll effectively have the final as well as the last preview installed side-by-side. At that point, just uninstall the 2019 preview.
[removed]
Awesome
It will already be null. You don't have to map null to null. 
This is correct. You are returning a view with the model searchlist but the view "search" does not exist. 
I was asking because the UI has these, and so even something trivial would be more effort to accomplish in the CLI
No idea, I use visual studio which has these features, rather than the CLI. I find this makes solving even trivial problems much simpler than trying to remember all the right commands, if they even exist
I'm kind of confused as to what you mean by you can't use the \[Authorize\] attribute on any of your MVC methods? Why can't you? 
A very good library to work with Word Documents (including filling a mail merge) is [Aspose.Words](https://products.aspose.com/words). It is not free, but there is a trial, so you can see if it will work for you, and then decide if it is worth it.
Just follow this tutorial: [https://vivekcek.wordpress.com/2012/08/25/create-a-word-document-from-a-template-using-c-mail-merge/](https://vivekcek.wordpress.com/2012/08/25/create-a-word-document-from-a-template-using-c-mail-merge/)
If you don't like asp .net you can use Nancy. http://nancyfx.org/
To be technical, quadixx does have a point that REST calls are intrinsically RPC calls. However, it's also a matter of perspective. REST basically defines a set of allowable RPC calls based on HTTP verbs. It puts in a place a paradigm where the only actions you're allowed to perform are HTTP verbs such as GET, POST, PUT, DELETE, PATCH, etc. &amp;#x200B; This makes an HTTP-based API more consistent with the concepts of HTTP itself, and can make the API easier to understand and use in many cases. However, the job pattern is actually just as applicable to RPC-based APIs which are built on HTTP. HTTP request have timeouts, getting them beyond 2-3 minutes is difficult because different intermediate servers (proxies and load balancers) can also implement timeouts. So even an RPC-based HTTP API would need to spin off long-running jobs and let them be monitored via another endpoint.
But what about if the value is not null, but I want to set it as null?
Hi, it's a good post, but you've repeated a few fallacies. DI does not reduce coupling. It allows for substitution, you are still tightly coupled to a contract. Your example test where you assert the Ferrari is fast using a mock engine is probably tautological, but too much of the example is elided. I pick up on these because it's how TDD is taught badly. I do get that you're hammering through a lot of material though. The modularisation example is actually a substitution example and also insulting to Honda owners ;) Modularisation means dynamically extending the functionality through additional modules. Inheritance is not evil, don't try and avoid it at all costs, that's a form of self harm. Inheritance has a place at the big table, just don't let it talk over the better guests. Your real world example relies on a ```CreateUserAsync(UserModel user)```. You probably need to explain why it's ok here to use a concrete type rather than an IUserModel. I'm also curious why you're returning a ```Task&lt;int&gt;```. Task for async, but what is the int supposed to represent? Success failure? number of user models created? Pet peeve, and please feel free to ignore as it's one of those Marmite things, but ```this._repository``` is just a waste of 5 characters. The real world testing section is definitely tautological. You've asserted that a mock repository will do what you told it to do. The thread safety section is a useful heads up, but thread safety is thread safety. You don't need to go into how to implement thread safety, but you should say that singletons work fine if you make them thread safe rather than implying you don't use a singleton if you have multiple threads accessing it. Service Locator is still a good pattern in certain circumstances. Server side, not so much. Client side, it has some value. My real beef with this section is that you assert but don't prove. I can assert that LINQ is inefficient, but without examples I can't prove it. If someone reads the assertion without a proof, they will probably catch fire. I can't prove that either, it's a spiral downwards from here :) I'm home ill, so you kind of got my time this afternoon. There's good info in there, so don't think this is a total smack down. 
If it's docx you can access the xml by extracting it (it's a zip file), then creating a new zip file with your replaced content. At least this is what I am planning to do sometime.
This smells a little bit like homework (see rule 4) Presumably you've done some basic Windows Forms work and written some code... I would split the problem into 2 parts: 1) Writing some code to actually do your coordinate conversion - presumably you know the algorithm itself so you can figure out what the input variables are to it (e.g. longitude/latitude etc). This code would return the converted coordinates 2) Write some GUI - if you know what your algorithm takes as an input, use some text box controls to enter them, add a button to initiate the conversion, and add some labels to put your results into. If you're having any specific problems then reply back here and we can point you in the right direction.
I don't know how it works. The bearer token comes from the Web API side and I don't know if MVC is even capable of processing it, or what format it would expect the cookie to be in if it does support that. I don't see any documentation on this. If I could get the black box that is Identity Framework to process a bearer token through reading a cookie on request to an MVC method, that would be helpful, but I would also like to have manual access to the token. &amp;#x200B;
Why exactly is there such a love for all this immutability and why does everyone seem to consider it applicable everywhere? I'm new to software design, someone explain to me; If I changed a customer.Address.Street to something different, I sure would hope every other place in the software had the same reference which would mean they held the new street address. If they held copies then every little minor change would require system-wide data refreshes - kinda overkill.
AutoMapper creates a new object. All of its properties will be uninitialized.
glorified find / replace. First get xpath querying working. I associate xpaths to attributes using a dictionary. Dictionary&lt;string, string&gt; ItemAttributes = new Dictionary&lt;string, string&gt;{ {"2462","gtinName"},///MaterialDescription.Name {"1906","productDescription"},///MaterialDescription.Description {"1131","shortDescription"}, {"2112","additionalDescription"}, {"1835","brandName"}, {"2358","functionalName"}, //{"1837","gtin"}, {"2419","gtin" }, {"2346","globalClassificationCategory\\code"} };
Fantastic post. I've learned to appreciate DI, despite the disingenuous cargo-culty arguments for it. Your point about server-side is interesting, because most of my work is client-side. I'd appreciate your thoughts on my thoughts:) You use DI to enhance the capabilities of an object. I have a REST library - it shouldn't log anything until you pass in some ILog dependency. If a rest call fails, I store it in a default IDataStore, which can be overwritten if necessary. And it just so happens, that an object that can be mocked/tested is an enhacement. [CallerFilePath] and the like are useful debugging tools, but I can't help that they're code polluters. 
I think I can use the word object library but it doesn't seem to be installed on the computer's installation of visual studio because I don't see it in the references when I try to add it.
nuget package?
Great thanks! 50% off is a real good deal.
I think it's a good feature because it adds to a contract, not removes anything. It's like you're the architect of the USB port. You can make USB 2.0 but still have backwards compatibility with USB 1.0 (ex: you use more pins in USB 2.0 but you still have the 1.0 pins). Ideally you discard USB 1.0 and replace it but now you give users time to update.
This might be a stupid question, but do you have Microsoft Word installed? To use the Word Object Library you need Word installed on the computer. &amp;#x200B;
Great work, it's nice to see developers start building things with Blazor. It drives that even though it's still experimental, it is usable now. The link OP provided to BlazorFiddle provides the easiest way for someone to start experimenting with Blazor, before even installing anything in Visual Studio.
Thank you, that's really kind :) DI won't enhance the capabilities so much as allow you to swap the capabilities for equivalent capabilities. This is a bit nitpicky but it helps to us a similar set of terms, and here they get really muddy. DI works through a contract. You have an interface that has one method ```CatchPokemon()```. If you substitute a different class that can catch pokemon, you can still only catch pokemon. If it starts catching colds your code downstream is going to suffer. This is the modular part. You can extend the capabilities with "plug ins". Think filters in Photoshop. So this is a great example of substitution. You can use Redis or SQL or a file as long as it implements IDataStore. You can't change the capabilities so much, just how a provider provides the exact same services. And you're right that we allow substitution because it allows for compatibility with different providers and makes testing easier. Both are cases of substitution. This next bit is some of the fun bits that I thought of while considering your example. In your requirements, and I'm reading between the lines, you're suggesting that if a REST call fails it is worth caching that call to try later. So it's important to understand the contract here. How many times is enough for the retry? Is there an escalation policy (after five fails I call support, after 50 I call the police)? Do the failed calls have to persist beyond a process restart? Here's how I solve this. First, we trust that inside a process stuff going from a to b will get from a to b. Call a method and it will work. If that fails, you have bigger problems than architectural ones. So we can decouple the call to the REST service by breaking it down into a message flow chart. Rest service calls endpoint -&gt; Sends message to MessageSent (Message (included) sent @ now). Rest service call ok -&gt; Sends message to MessageGotThere (Message id @ now). or Rest service gets no response -&gt; Sends message to MessageMightBeLost (Message id @ now). This is pretty much all the rest service has to worry about. It's really easy to test because you can observe the messages. Things will listen to the messages (any things!). You can log them (purely as a diagnostic) or place them in the IDataStore in case things go tits up, have something listen that displays them on a screen in Times Square. So here the IDataStore implementer will listen to messages. If it gets a MessageSent message it will log the message (perhaps to disk). MessageGotThere, it removes the message it saved. MessageMightBeLost, it will itself send out a message ResendMessagePleaseTa(message @ now). Here's the fun bit. Imagine the REST api fails 10 times. It doesn't care, it doesn't know about the retry policy, but the IDataStore implementation might. IDataStore might send another message called ItsAllGoneTitsUp(Message @ now). This will be handled by the ITitsUp implementation registered. It's job is to ensure the message is secured, the support staff are notified and the kettle is on. IDataStore might also not care. You might have a middle component which listens to the same messages and then mediates between the datastore and the rest service. It's a slightly scary approach because you have to trust that in process components will handle messages correctly. People gravitate to the coupled implementations because they feel that it's easier to test if you control the whole process. In reality software should work in the same way people work. I want to send you a parcel. I take the parcel to the post office. I give them the parcel (message) they give me a receipt with tracking info (message). I can then choose to check every hour if my parcel has arrived (messages) or just wait for you to phone to say thanks (message). If I don't here anything for a month (message (ding ding it's been a month)) and then check the status (message) and contact you to see what's going on (message). If you got it and didn't call to say thanks I can post on Facebook (message) that you were horrible. In each of these cases you have distribution of responsibilities. You place some trust in the external entities, but have mediation and mitigation processes in place for the cases where it goes tits up. Final point, and I'm way to the left here: There are enterprise messaging patterns which describe "Exactly once", "At least once", and "zero or more" delivery patterns. These are far more interesting patterns to solve because they will give you comfort in every situation where you have decoupled components. I'm still ill, so if there are any errors, blame it on that :)
I just read it back an thought of 10 more things I should have added, but seriously that's way too long already!
"how TDD is taught badly". Can you explain why? And how it would be better? 
On the topic does someone mind explaining AddTransient vs AddScoped? My understanding is that scoped dependencies are built the first time the app runs and injected into all subsequent instances, while transient describes a dependency that shares its lifecycle with the current instance.
Lmao, I had some good hearty belly laughs. There's a whole lot to parse, but it seems like we agree that objects should be, "Don't worry I got this" as opposed to "I need a micromanaging boss to tell me how to do my job." And I sense a tiniest hint of hostility towards DI,because it errs towards the latter Glad to see you that you're spending your day of rest with stress-free engineering :^) 
&gt; insulting to Honda owners As a Honda owner, I'm not insulted. I'd rather they just got rid of `HondaEngine.RandomlyEjectSparkPlugNumberFive()`, honestly. It's not a requirement of `IEngine` and there's no good reason for its existence. Can we schedule a code review for this?
Post entities' source code. Also, DbSet&lt;T&gt; is already a repository of T. There is no need to abstract it further.
Think of scoped as a singleton per scope (usually per web request, but not always)... a transient is give me a new one every time I ask for it.
There's really no reason in practice to bother using + even if the compiler *sometimes* "figures it out." Better to just use interpolation, concat, stringbuilder, or string.format and not worry about it.
It was already posted on this sub today, but in case you didn't see it, the fourth edition of that book is 50% off today: https://twitter.com/jonskeet/status/1070928291681443842
I would have to disagree with you that it doesn’t reduce coupling. Saying that you’re still tied to a contract is missing the point IMO. Programming to an interface always reduces coupling since you don’t have to be directly tied to implementation.
But you are tied to the contract. You can substitute the dependency for an alternative implementation, but it must conform to the contract. With DI you often end up with massively complex hierarchies which reinforce the coupling. I get what you're saying, it's the way it's taught, and in simple cases without complex hierarchies it appears to reduce coupling, but all it does is provide substitution.
Lol. I was so incensed by the insult I didn't even question it's applicability to the interface. This is how you get stuff through code reviews, and yes we must have one right now!
Yes, so much this :) I love your succinct summation, if I could do that it would save everyone 200 pages :) I'm never hostile towards a pattern or approach, but always hostile to its overuse. One of the most important things I've carried forward over the years is that there are no golden rules including that one.
Discussions like this explain why REST's 15 minutes of fame lasted only 14.
I have done that as well, but a long time ago. You could connect to Word through COM (you would have to set up appropriate permissions on it), and you would almost interact with Word.Exe Directly. It was a little slow and would require Word to be installed on the server. I think with Office's Open Document formats it is now a bit easier to find libraries that have already done a lot of the work for you,
Just looking at my process list now, there's: * ScriptedSandbox64.exe * ServiceHub.Host.CLR.x64 * InteractiveHost64.exe * VBCSCompiler.exe The last one is the Roslyn compiler, not sure what the other ones are for
To expand on this, Microsoft made .Net Core to be cross platform and it works on Windows, macOS and Linux. https://docs.microsoft.com/en-us/dotnet/core/
I've just completed something similar. I would highly recommend DocX by xceed. It's available as a NuGet package. It's fast and very simple to use.
Looks like they answered saying it will work with the old style but not until VS2019 is fully released. Guess you can only get it project-wide on the new project format for now (I'm assuming `#nullable enable` has to be set in each file but haven't tried it)
Nice! They should probably state that somewhere officially. I only found it by seeing references to "NullableReferenceTypes" on the GH repo and checked if it was an actual property tag
I recommend this library too. I’m using this in a current project. I could post some code on Monday. Basically all I do is find an keyword in my template, remove this keyword and add an table with some formatting
How is this book for beginners that has minimal experience with Python and javascript? 
&gt; there are no golden rules Similar to [TANSTAAFL](https://en.wikipedia.org/wiki/There_ain%27t_no_such_thing_as_a_free_lunch). If your "free lunch" is easy design patterns, then TANSTAAFL.
Get it. You will learn a lot. I might not recommend getting it if you have never programmed before in your life. but since you're already familiar with development you should pick this up and read it.
The why is fairly simple but the how it could be made better as a course is a tough one. TDD is really hard. Writing tests is hard, harder than writing the code it tests because the observer can bend the observed to suit its ends. The square code is made triangle shaped to fit through the only hole the novice is taught about. This is supposedly a good thing, "TDD informs the architecture of the code". So the first thing I would tell developers is that "Writing tests is hard". Cut out all this "TDD is easy and makes all your bugs fly away". DI and testing is a weird one too. DI is good, I use it all the time. Testing is good, I use it all the time. Testing often involves test doubles of some sort which rely on something you can mock... Hang on, are these two related at all? One of the huge problems I see in production tests and production code is that DI makes it too easy to inject services. I've seen classes with ctors that run over 5 or more lines. I cry a bit and then look at the tests. The tests are great. Here's an example of what I see a lot: ```var sut = new Wtf(null, null, null, null, null, null, null, null, null, 6, null, null, null, null, null, null, null, null, null, null, null, dbmock,null, null, null, null, null, null);``` So here, instead of learning how to separate concerns (don't start me on how SOLID is taught), you end up with tests that may or may not test something. So here we improve lessons by teaching DI with TDD and wrapping it up in a little SOLID bow. Tautological tests should be on the curriculum, how to spot a bad test generally should be on the curriculum, but that's like saying "draw the rest of the fucking owl". Include some information about why tests go wrong. Oh legacy code. This is pages and pages long, so please, just don't let people spend a week trying to mock the crap out of a 10 year old class that was written by (probably me). Let the poor thing alone and spend time on value adds. Writing tests. DRY!!! Here's a 40000 line test fixture with 400 tests, each an exact duplicate of the other with one parameter changed. Why are we not teaching people to apply the same techniques they use when writing the code they want to test, to the tests? It's a really big subject, and I'm riffing, so it's just a stream of jibbajabba, but that's the things that come to mind immediately. Don't sell TDD as a magic wand. Teach TDD in the context of good code and caution against Test Driven Design Damage. Show examples of some bad tests. Discourage testing legacy code if the cost is higher than the value. 
So true :) 
Maybe people keep abusing it and they are a business that can only continue to exist if individuals pay for the service they clearly want to use.
Why not just pay the ten or fifteen dollars a month and not worry about trying to scam them? 
it's not that great. the book is $27 right now on amazon with free shipping (for prime members). the manning site is $25 with a minimum of $7 shipping.
Well, it does as I want to. There is only a null value, from when I'm retrieving a new object, and some of the properties is supposed to be null, which I try to map with my existing object. But it just skip the null value, even thought I want it to overwrite my existing variable with null.
This is one of my favorite C# books! C# in a nutshell is also a really good book (a big nut though- 1070 pages) and CLR via C# (classic). Cannot recommend those three books enough! 
They're not in the business of giving away free training. They gave free training in the beginning to get lots of people using their service so they'd become popular and widely known. Now that they have a lot of users, they don't need to give out massive free trials. Btw, creating a new account to try to appear to be a new user is called fraud... maybe don't do that, or at least don't advertise that you're doing it.
The latest edition?
How would you reduce coupling then?
Yes. Most devs I've worked with would rather have copy &amp; pasted tests that are easy to understand than DRY tests that are hard to understand. Until they need to refactor something that breaks the tests.
https://docs.microsoft.com/en-us/office/open-xml/open-xml-sdk use this.
OpenOffice SDK is the easiest, and most powerful, imo.
&gt;Why are they making it harder for me to scam them? Gee, who knows.
They do it because they don't value the tests. Tests that are not valued usually have little value. This is one of my trigger points honestly. I re-engineer and 4000 tests break. I look into them and they test nothing. 
It's described in the article...
yes, for pre-order. of course, you don't get the ebook early.
Messaging. Think of SOA. You have a bunch of "classes" that expose their functionality via "messages". The exposed functionality might be a REST api. So how does this help you decouple code in a single process? The same technique and with the same error handling. I want a service to send an email if it finds a price outside of certain bounds. In the old world you inject the email service. To test it you white box it (look inside and test that a method is called). In my world, you simply raise a message that asks the same email service to send the message. Because it's a message you can have more than one thing listen. Want to log it to a file? Just have a file logger listen in. Error handling is harder because you are deep into an asynchronous world at this point. You ask if an order is valid, pass the message a correlation id, subscribe to anything on that correlation id and wait. Not a blocking wait, just wait. Either a message will come back yes or no, or it won't come back. You handle the last one in the same way you handle any other back end failure. The important thing I'm trying to convey is that substitution is no substitute for decoupling. If you TDD and your service needs an email provider injected, don't inject it, message it. And the great thing here is you don't even need to inject the messenger. In process it has nothing to mock. Message in, messages out, utterly predictable, just make it a static class and be done with it. "What if I want the messenger to log all messages?" I've heard this a few times. Add a listener and have it log all messages. "What if I need transactions here?" SOA has a concept of Sagas. I'm running out of steam today, still ill, but just google that if it's of interest :) 
I'm [seeing it for $30.76](https://www.amazon.com/C-Depth-Jon-Skeet/dp/1617294535). Do you have a link for $27?
Sounds like you are now the to your messages. That's just another contract.
there's a 10% coupon you can click, which is applied at checkout. even without the coupon it's still cheaper than manning if you have free shipping with amazon.
I'm having a little trouble understanding what you are trying to do. Do you want to have certain properties not mapped so they stay null? Or is it ignoring properties on the source object that are null and it isn't over writing the default values in the other class? 
It's a good point. What is the difference here? If you need to inject an email provider, but want to send letters as well, you could either swap the email provider for an email/mail provider, or inject two things. The former means that your new provider now needs to be injected with something that deals with emails, and something that deals with normal mail, and probably something that can write to a printer (even if that is a dependency of the snailmail sender, see the hierarchical damage here?). The latter is the same effectively, just a different hierarchy. Each new provider might not affect the top level class directly, but somewhere down the chain it will add a dependency. So to use the example above. Currently it will send an email by sending a message. But you now want to send an actual letter via post. If the message is well formed it will include the unique id of the person you want to send stuff to. You add a new listener and it will see the message, look up the user and print/send the letter. There's no direct coupling. Where you are right is that how you define the message is important. Don't send user logon details like email or phone number, use their unique id (may require a call to a separate service). Specify the action that occurred, not the action you want to happen. I didn't make that clear above, so apologies for that. Assume the other services work. They will be tested separately, perhaps by a different team. If you have doubts, write your own tests. If their function is essential work that into the design of the system. This is transactions 101. The fun thing here is that the same techniques apply to scale out SOA style stuff. If you can do this in process you can do it out process. That's a huge win. You will scale out if necessary and can adapt in process really quickly. 
Ah, but with this you get the print, ebook, and live book :D
I'm trying to retain all the formatting and styles in the original word document I am using as a template.
Yes I have office installed
Fyi, there is also property injection. I always try to stick to constructor injection, but people should know that there are other options
While 50% off seems to be the best deal for this particular book at the moment, note that Manning Publications seems to have long-running 40% off coupons for anything in store. So really, you're getting only an extra 10% off. That said, please support Manning. I love that they give you every possible version of the book you purchase! If interested, one such 40% coupon off anything is *mlagile13*. Disclaimer: I have no idea if anyone gets a slice of your dollar if you use this coupon. I just got it online somewhere and subsequently tested it to confirm working.
These are great. Thanks!
Has anyone told you, YOU'RE AMAZING! 
Yea, it'll do that very easily. It's Microsoft's SDK to create, read, and edit all of their Office Products from, i think 2010, on. It comes with an additional tool that will let you visually explore the format of the document and find exactly what and where the content you want to change is. From there, you can really easily access those areas with the SDK. If you're working with any Microsoft Office document, this is the best tool to do that, and lets you do as much or as little as you'd like, and you can do it natively. https://docs.microsoft.com/en-us/office/open-xml/open-xml-sdk
Decorators come to mind for the error handling. CQS with that makes it work quite nicely. While messaging can work, you run the risk of one message triggering another message and you have an infinite loop of messages because they trigger each other. since they are both isolated from each other, you wouldn't know to avoid that. also, it becomes very difficult to trace all the paths that end up triggering from a single request, though you definitely follow SOLID.
No
CQRS is a messaging pattern :) 
This is just insanity.
&gt; Finds an entity with the given primary key values. You need to search for a PK, which has a unique ID. https://docs.microsoft.com/en-us/previous-versions/visualstudio/gg696418(v=vs.113)
Some equations don't reverse easily, but you can usually search for the answer. Would that be a solution? Something like a binary search to find the hexagon that matches the vector? 
Hi, I do not have an immediate answer although I would advise you to also crosspost it on r/dotnet and also on the software engineering stack exchange! Good luck with your question and keep me posted! 
I want a property which has a value not null, to be null. Like int or string. its ignoring properties on the source object that are null and it isn't over writing the default values in the other class?
Oh wow, that's very kind! Thanks!
You've just described a contract. Messaging is just a more complex type of contract. One that is more generic and overall less clear IMO. It kind of reminds me of Rx and it's observables that are nearly impossible to trace throughout the code. One of the most difficult designs I've ever worked with
Awesome! Thanks for taking the time and sharing this.
Why are you trying to use AutoMapper to do this? It doesn't sound very **auto**matic if you have to replace some specific values with null.
You remind me of one of the best senior engineers I've worked with. He was a consultant for us and I learned way more in those three months than I did in the year preceding.
Windows Data Protection API is easy to use and you can just encrypt into it using symmetric keys stored in the registry. If you need more than 10 keys at once then you should probably only store one key and use it to decrypt the user information from a sqlite db or similar on disk method.
You can tell the Authorize attribute which AuthenticationScheme to use. These have names and you are probably using a default one in some constant. You can even combine 2 auth schemes and be able to authenticate with either. Not sure if you need additional setup for that. My current codebases that do that are all .NET Core but I have achieved it with the full framework I just don't remember how.
https://aloiskraus.wordpress.com/2018/05/06/serialization-performance-update-with-net-4-7-2/ There are dozen options there that are significantly better than BinaryFormatter. BinaryFormatter is awful and should not ever be used.
Just another note to say thanks for sharing. Really appreciate the examples. 
I love this, and I love how simple they are, there is a definite need for this kind of thing. If you wanted to throw a little extra learning in there you could add some generic types. Such as in the factory repo, CreateCar could return a generic Car&lt;T&gt;. Forgive me if you did on some of the other repos!
Thanks for the feedback! You are right, I could take the opportunity to cover more of the C# toolset, like generic types. I still have some patterns left to do and I'll try to add it there.
Oh my gosh, I’m just starting out and this is just wonderful! Thank you!
Looks good, I have one small piece of feedback to roll into your next commit; the composition example mixes up books and movies, looks like a refactor missed the rename of those bits.
We're also using Auth0 and we split out Authorization into our own Microservice that manages the information (we are also multi-tenant) then pushes information via the Management API back to Auth0 so it comes through in Claims. It's a little bit clunky but pretty robust and meets my goal of having almost none of the Authentication code on our side. I intend to move Registration back to our web app too and use the same mechanics to push new users via the API to Auth0. That not only keeps our service "driving" the bus, but it let's me implement Registration scenarios that would be tough with Auth0 (invite codes, mass registration for users within an organization, etc.).
Oh yeah, I saw it too. I'll fix it in my next commit. Thanks for reporting it!
We’re building an MVC5 app that uses external Auth (azure AD) and in-app authorization using Identity. When the user authenticates with azure the local user is created if It doesn’t exist. We link external accounts using the email address. We also have the ability to add the user preemptively by using ms graph to list azure AD users so that roles/permissions can be set before first login. 
Why did you have to post this on a Friday, my weekend is ruined!
That is a good point. I have bad memories of about ten years ago when uninstalling Visual Studio was an absolute pain in the backside.
I hate you :p posted very similar thing to r/opensource and I've got only downvotes :) So please; don't mind if I clearly tag along! https://github.com/Venthe/DesignPatterns
Here's as link to the video that I got the program from https://youtu.be/0me-ntfD8Rk
Man, this is such a good video. I'm saving this forever, because this is one of those elusive subjects and the speaker does such a good job presenting it. And thank goodness he spent almost a full minute saying, "Don't do this! ^but ^it's ^great ^to ^know. But seriously don't do this!" 
Figure it out. You won't learn otherwise.
Pay for it you cheapass.
I don't want to you dumbass.
Is it available with the Microsoft DI?
I don't like the .net core dependency injection framework. In my opinion it's too simple. It lacks many useful features like named dependencies, property injection or adding whole project's interfaces with default implementations in one method call. It may not be a problem in a tutorial where the code base is really small, but in a larger project it becomes pain in the ass. Autofaq or castle Windsor is my preferable choice as the DI container in .net core.
:( okay. The debug functionality of vs and Xamarin forms is slow enough to deter from trying all combinations. I am trying the combinations as I am finding it what can be done. However, it would be great to know if you have any ideas. 
I think to be thread safe your singleton should just use a static constructor, by the way. 
Thanks for sharing, this really is a great talk. Lots of good info for all skill levels.
&gt; not until VS2019 is fully released After that, even. They’re saying an update after 16.0 will add this support (16.0 will not ship with C# 8 final).
The nicest thing I'll hear this year I think :) Thank you
It has its own challenges you're right. If it was all simple we'd be out of a job. Rx can be a real headache to debug, but in the same way that LINQ queries can be a pita to debug. The beauty of the message approach is there's none of that complexity. You have three (or 30) classes. One sends a message, n of the others listen for it. You don't have to worry about the source applying some mad lambda to it.
Again, you're talking about substitution not coupling. DI does not reduce coupling it simply allows you to swap an implementation. If you swap in an implementation that sends a message to another service, why inject the original implementation at all? Just let service1 send a message to service2. This is not an either/or argument. DI is great, use it. Just be aware that if a test has to new up 15 different objects just to get the thing running that your code is coupled. This is the definition of coupling. It's not that the system won't operate if all the parts aren't present, it's that a single part won't operate without all its dependencies (or *shudder* a bunch of mocks). Does that make sense? I think that's the first time I've actually tried to articulate that. There's no white box testing, it's all black box because there's no need to see what's happening inside because, *messages*. Use each pattern where it fits. Don't use them where they do not. 
I've seen the video, but I can't remember if he mentions ArrayPool (or any other type of pool). While it might not always be good to write allocation free code (without benchmarking and all that stuff), pooling objects is a great way to allocate upfront or when you exceed previous usage (like, great for games. Start by preallocating 100 bullets of whatever you think you need. Can be measured during development testing)
For your Singleton, make it thread-safe by using System.Lazy to initialize the field 
Would you accept additions in the form of PRs? 
Yes you can do that, but how does it work? Even if I used cookie authentication on the MVC side, and its compatible with the same tokens, what format would it expect my cookie to be in? I don't see this documented.
Thats really nice work! 
PRs means Peer Reviews? Sure, any help is appreciated!
Will do! Thanks!
Thanks for the info! So I will do some changes to make it thread safe as you mention.
They probably mean _Pull Request_ by the way.
That makes sense!
Whatever format identity produces. Why would I care? Before it was some custom token that I wasn't able to find info about. With ASP.NET Core it is a JWT
No.
I really don't mind! My motivations came from father. He really likes to code in his free time, but he never really learned how to properly work with classes. Last week, he showed me what he was working on and I tried to gave him some hint to on how OO could simplify his work. We did a console app together and I showed him how to create a simple Class, then to decorate it by another one, so he can see how easy it is so add features by _modules_. Helping my dad gave me the idea to make a projet full of simple examples of OO design patterns, so he can use it as a learning tool as well as a reference. I also took the opportunity to share it here, to see if people were interested in that kind of stuff and maybe to get some feedback if they were accurate. If it can also help someone else, I'm really happy with that. 
Post some code please 
in actions you can use \[FromServices\]
Yes, Core is different. Full framework uses a custom bearer token, but all I need is the missing entropy in order to decrypt it. You may not care of the format, however without the format, I cannot develop my required functionality. Posting on my question saying the question I'm asking doesn't matter to you; that's not particularly helpful.
But the framework can decrypt the format you just need to tell it to.
Which version of Office?
Not the kind of feedback you were asking for but it seems like English isn't your first language. Feedback and wording can never be plural. Thanks for the examples. 
Oh thanks! I'm also open for that kind of review too.
 using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows.Forms; using System.IO; using System.Reflection; using Word = Microsoft.Office.Interop.Word; namespace word { public partial class Form1 : Form { public Form1() { InitializeComponent(); } private void Form1_Load(object sender, EventArgs e) { } private void FindAndReplace(Word.Application wordApp, object ToFindText, object replaceWithText) { //all the tick marks in the search/replace dialog object matchCase = true; object matchWholeWord = true; object matchWildCards = false; object matchSoundLike = false; object nmatchAllforms = false; object forward = true; object format = false; object matchKashida = false; object matchDiactitics = false; object matchAlefHamza = false; object matchControl = false; object read_only = false; object visible = true; object replace = 2; object wrap = 1; wordApp.Selection.Find.Execute(ref ToFindText, ref matchCase, ref matchWholeWord, ref matchWildCards, ref matchSoundLike, ref nmatchAllforms, ref forward, ref wrap, ref format, ref replaceWithText, ref replace, ref matchKashida, ref matchDiactitics, ref matchAlefHamza, ref matchControl); } private void CreateWordDocument(object filename, object SaveAs) { Word.Application wordApp = new Word.Application(); object missing = Missing.Value; Word.Document myWordDoc = null; if(File.Exists((string)filename)) { object readOnly = false; object isVisible = false; wordApp.Visible = false; myWordDoc = wordApp.Documents.Open(ref filename, ref missing, ref readOnly, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing); myWordDoc.Activate(); //find and replace this.FindAndReplace(wordApp, "&lt;COMPANYNAME&gt;", textBox1.Text); this.FindAndReplace(wordApp, "&lt;companyname&gt;", textBox1.Text); this.FindAndReplace(wordApp, "&lt;CONTACTNAME&gt;", textBox2.Text); this.FindAndReplace(wordApp, "&lt;contactname&gt;", textBox2.Text); } else { MessageBox.Show("File not Found!"); } //Save As myWordDoc.SaveAs2(ref SaveAs, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing); myWordDoc.Close(); wordApp.Quit(); MessageBox.Show("File Created!"); } private void button1_Click(object sender, EventArgs e) { CreateWordDocument(@"C:\Users\carcr\Desktop\word\template.dotx", @"C:\Users\carcr\Desktop\word\contract.docx"); } } } &amp;#x200B;
2016 &amp;#x200B; I just fixed it, I went back into visual studio and installed the office libraries.
Do you really write `object something = true`? You should stop doing that. Or use Javascript if you don't care about type safety/correctness.
Well since it is "preview" version, you should report any issues directly to visual studio development team.
Is that different to doing double null checking with a lock? // ... private static object _lock = new object(); // ... if (instance == null) { lock(_lock) { if (instance == null) { instance = new Government(); } } }
...I guess I can do this. For some reason I didn't think about it.
But what format does it expect the cookie to be in? What is the cookie name? Is the value just the bearer token? I need to know what the MVC AuthorizeAttribute expects. I would have to make a new MVC project on .NET Framework with cookie authentication and the black-box login and dissect it at runtime to see how the cookie ends up, and replicate that in my project, because my Web API project does not have the black box log-in, I have to put the cookie there myself. Make sense? And that's IF it's compatible with the Web API bearer tokens. I still don't know if it is. Why am I not using the black box cookie authentication? As I said, it's a Web API project. I have client applications that access the API programmatically, you don't use cookies for that, you use a bearer token in the Authorization header. My MVC pages use the same type of token for compatibility. Even if I wanted to reverse engineer a new MVC project, that still wouldn't answer my original question, which is how to find the missing entropy for manual decryption.
System.Lazy handles thread safety and locking for you so that you don’t need to worry about it [https://docs.microsoft.com/dotnet/framework/performance/lazy-initialization](https://docs.microsoft.com/dotnet/framework/performance/lazy-initialization?WT.mc_id=none-reddit-bramin)
Nice! I'll keep that one in mind
Seems that should be a simple regex: s/^.+$/I fucked your mom./
It is cool. It would be great, if you can add comments in the code.
CQS, not CQRS. similar but different. :)
This is a desktop app, not a web app. Why aren't some of the words it's finding not being changed?
The Authorize attribute asks the specified (or the default) authentication scheme how to decrypt the token regardless of how the token arrives (cookie, bearer token header or even something else). Pre .NET core both authentication use custom implementation of the token and after that both use JWT I think. You don't have to do anything with the cookie or the token all you need to do is use the same version of the authentication libraries and tell the Authorize attribute to use both schemes. I have not implemented MVC authorization with bearer token but I have implemented web api which accepts the cookie authentication from the MVC app and additionally accepts bearer token. For some reason you want to do the reverse which I find strange but should be possible. My projects are exactly like yours I have an Android app that accesses the API via token and my website uses the same API and authenticates with a cookie from the MVC login.
object is bad juju. Declare your variables with the excplicit type (then you dont have to do this File.Exists((string)filename, because filename would be from type string (there are many more Benefits, I would recommend to read some tutorials to that topic) Furthermore I would not use com interop to manipulate office documents, because you work with the .exe directly (slow startup and many many more disadvanteges like memory leak if you dont destroy the com object properly) I would recommend this free library to do this [https://github.com/xceedsoftware/DocX](https://github.com/xceedsoftware/DocX) &amp;#x200B; I copy and paste your code and its works from .docx to .docx but not from dotx. to docx. &amp;#x200B; Thats because your file format is an empty object. You could try this: myWordDoc.SaveAs2(ref SaveAs, WdSaveFormat.wdFormatDocument, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing); And in your Button1\_Click So here you dont have to pass the explicit format like "newWordDoc.doc", just the filename otherwise it will throw an exception. You can see all formats here: [https://docs.microsoft.com/en-us/dotnet/api/microsoft.office.interop.word.wdsaveformat?view=word-pia](https://docs.microsoft.com/en-us/dotnet/api/microsoft.office.interop.word.wdsaveformat?view=word-pia) CreateWordDocument(@"C:\Users\rusla\Desktop\test.dotx", @"C:\Users\rusla\Desktop\newWordDoc"); &amp;#x200B;
And done! If anybody ever finds this post looking for answers, here's the link: [https://developercommunity.visualstudio.com/content/problem/402902/class-library-cannot-be-compiled-gives-sdk-root-fo.html#](https://developercommunity.visualstudio.com/content/problem/402902/class-library-cannot-be-compiled-gives-sdk-root-fo.html#)
Microsoft points out that you need to utilize the ClearFormatting() method after each find iteration
I'm using it to map a partial object to another existing object. But then sometimes the partial object is null, so I want to set all the properties in the destination object which the source contain to null.
I wonder if Portable 7.0 refers to Windows Phone 7. You probably want to fork the project and modernize it to the new project format.
Again, could you provide some sample code?
But I want to retain the formatting of the text, the text it's going to replace are going to be headers, titles, all caps etc.
“It is important to note that the Find criteria are cumulative, which means that criteria are added to previous search criteria. Clear formatting from previous searches by using the ClearFormatting method prior to the search” - it might help between each of the 4 search cases you have outlined in your method. Something to try 
I don't think you're following my issue. If you use Cookie authentication, then the AuthorizeAttribute expects a cookie to have a specific name and format for the value. My cookie does not magically appear in the cookies collection when making a request, I have to first add it to the collection. If I don't know what name to give to the cookie, or how to format its value, then the AuthorizeAttribute obviously will not find it. You're not telling me what format to use, you're just assuming it's been black-boxed into the cookies collection from the login procedure, which it has not, though in your project template it probably was. So yes, I do need to do something with the cookie, which is format it in whatever way the MVC AuthorizeAttribute expects it to be in, which you keep glossing over as if it's a non-issue, but it is. The attribute is not magic. If the cookie containing the token has a name of XYZ then obviously the attribute will not detect it. My cookie is called "token" and is not detected. But what name does it expect? What format does it expect the value to be in? If you have to manually set the cookie, as I would, then this is crucial to know. As I said, I could create a new MVC project from the templates and reverse-engineer this, because I believe MVC templates black-box this in for you without you having to do anything, so this is what I would have to do if I wanted to use the built-in cookie authentication because Web API 2 templates do not include the black-boxed cookie authentication that MVC templates have. There is nothing that, by default, creates the cookie and adds it to the collection, so I would have to do it myself. I wasn't really looking for help with this though. I was merely looking for deeper understanding of the black box that is Identity Framework. I want to know this hidden entropy so that I can decrypt bearer tokens using the machine key. I followed your link through to this: [https://stackoverflow.com/questions/26766530/how-to-unencrypt-web-api-2-jwt-tokens](https://stackoverflow.com/questions/26766530/how-to-unencrypt-web-api-2-jwt-tokens) Taiseer Joudeh seemed to have a way to decrypt the token, however it doesn't work for me, returning null for the ticket.
I doubt it, it's targeting Windows Phone 8.1. &amp;#x200B; I've checked [here](https://portablelibraryprofiles.stephencleary.com/) what Profile111 refers to - .NET Framework 4.5, Windows 8.0, and Windows Phone 8
There seems to be no official documentation on what the cookie contains before ASP.NET Core. After ASP.NET Core the default authentication implementation from ASP.NET Identity puts a JWT token into the cookie. That's my best answer as someone who was looking for very similar thing but with the token which I believe is the same data that sits in the cookie even before Core. Getting the code from the templates is just fine I don't know why you seem to shy away from this solution. 
Because that's not what I want to do. It's not why I asked the question. I asked to learn how to manually decrypt the bearer token, because I wanted to gain a deeper understanding of what Identity Framework is doing.
Yes, my bad, I've just been teaching some stuff about Event Sourcing and I'm all CQRS'ed up :)
Even if I search for one thing, and it matches the words that I want to replace in the document but are refusing to do so, it still doesn't replace everything. Is there a way to find out if there's a special formatting in it or something that could be causing it to refuse to change?
Well it generates some string then encrypts it and puts it into the cookie or the bearer token. I'd say that knowledge is not very useful because the behavior is custom and already replaced by Microsoft in ASP.NET Core.
I just looked at the document a little closer, turns out that the words that aren't being changed are acting that way because they are in text boxes and shapes. What can I add to the code to make it try to change those words?
It's difficult to follow along with these types of presentations. You know what I would really like to see? I would like to see someone go through an existing application and identify hot paths and then show how to fix them using these new features. That would honestly be really awesome. Not to say this videos and similar aren't but it's hard to go from theory to practice.
You need the office interop assembly. The sdk exposes functions that can perform the operations you ate looking for.. like find and replace. 
I have the code, but it's refusing to replace words inside of shapes and textboxes which is my biggest problem right now. I'll post it and you see if you can figure out why it's not replacing text inside shapes and textboxes. &amp;#x200B; using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows.Forms; using System.IO; using System.Reflection; using Word = Microsoft.Office.Interop.Word; namespace word { public partial class Form1 : Form { public Form1() { InitializeComponent(); } private void Form1_Load(object sender, EventArgs e) { } private void FindAndReplace(Word.Application wordApp, object ToFindText, object replaceWithText) { //all the tick marks in the search/replace dialog object matchCase = true; object matchWholeWord = true; object matchWildCards = false; object matchSoundLike = false; object nmatchAllforms = false; object forward = true; object format = false; object matchKashida = false; object matchDiactitics = false; object matchAlefHamza = false; object matchControl = false; object read_only = false; object visible = true; object replace = 2; object wrap = 1; wordApp.Selection.Find.Execute(ref ToFindText, ref matchCase, ref matchWholeWord, ref matchWildCards, ref matchSoundLike, ref nmatchAllforms, ref forward, ref wrap, ref format, ref replaceWithText, ref replace, ref matchKashida, ref matchDiactitics, ref matchAlefHamza, ref matchControl); } private void CreateWordDocument(object filename, object SaveAs) { Word.Application wordApp = new Word.Application(); object missing = Missing.Value; Word.Document myWordDoc = null; if(File.Exists((string)filename)) { object readOnly = false; object isVisible = false; wordApp.Visible = false; myWordDoc = wordApp.Documents.Open(ref filename, ref missing, ref readOnly, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing); myWordDoc.Activate(); //find and replace this.FindAndReplace(wordApp, "&lt;COMPANYNAME&gt;", textBox1.Text); } else { MessageBox.Show("File not Found!"); } //Save As myWordDoc.SaveAs2(ref SaveAs, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing); myWordDoc.Close(); wordApp.Quit(); MessageBox.Show("File Created!"); } private void button1_Click(object sender, EventArgs e) { CreateWordDocument(@"C:\Users\carcr\Desktop\word\template.docx", @"C:\Users\carcr\Desktop\word\contract.docx"); } } } &amp;#x200B;
I haven’t done this with C# before but I’d be looking through the documentation to see if there’s something specific you need to access the header/footer vs the page body. 
I posted the code to what is working already, the big problem right now is that the program is not replacing words that it finds in shapes and text boxes. if this gets solved fast then this program is on its way to being finished that much quicker and I can move on to creating other parts of the program.
Alternatively Aspose words is something that can do this but it's not free.
I ask questions to learn. If you can't appreciate that, then please stop responding.
I see myWordDoc.activate(), but does that open the doc? Sorry been a few years since I used that, but I remember having to open it first. Hard to read on my phone.
 if (length % 2 == 0) med = (numbers[length / 2] + numbers[length / 2 - 1]) / 2.0; If length is zero, this will crash trying to access numbers[-1]. Looking for other stuff.
You just did someone's assignment for them lol 
As I said useless knowledge, better learn how JWT token works.
&gt; Identify them. You're supposed to do that Btw: Format the code
Then that's not an option
If you do not want you object to be garbage collected you should keep a reference somewhere, otherwise the GC will do its job
If you don't keep a reference (somewhere in managed code) to the delegate you passed into the native code it will be GCed because delegates in dotnet are fully object oriented. &gt; Delegates are similar to C++ function pointers, but delegates are fully object-oriented, and unlike C++ pointers to member functions, delegates encapsulate both an object instance and a method. 
Usethe openxml interface. The interop is the old way. 
Unless Word is installed on the machine you will be executing this on, you want the OpenXML nuget package, not Interop. Textboxes, headers and footers are stored in different sections. Stackoverflow will help here.
I can recommend using the [DocX library](https://github.com/xceedsoftware/DocX) which supports what you need. Using doc = DocX.Load(path) For Each t In myDictionary doc.ReplaceText(t.Key, t.Value) Next doc.Save() End Using
I've just found something interesting. It seems like the project is built successfully (I've run my app while referencing output .dll), but it's still showing an error and build is treated as failed - trying to run my app with that library referenced as project in VS doesn't work, even though the .dll is created.
Word is installed, sounds interesting, will it retain all the formatting and styles?
Can I edit the file directly? Instead of generating an XML file first to feed into the document? I want to be able to collect data from a form textbox and paste it in the document where I want it to.
I think you want to pin your delegate and keep track of it so the GC doesn't pick it up. https://docs.microsoft.com/en-us/dotnet/framework/interop/copying-and-pinning
NEXT!
You find or are given a problem and you go after that. I've had to deal with my fair share of code bases like this and in some cases codebase is like this that don't compile. The best way to learn a new and complex codebase is to try to solve problems in it. I don't know how to describe the process as it's more intuitive than not.
So the docx file is an xml fle. A heavily marked up xml file but an xml fle. The openxml sdk libraries can read it. I loved when my company dropped support for 2003 because openxml libraries are much easier to work with. It does need a mindsett change though. 
Can you deploy the whole shebang and use it operationally from the codebase? If you can, that's a good start. You can start watching web requests in Chrome dev tools or Fiddler, see what endpoints they hit, and also see where artefacts like HTML + JS are served from. Then you can hopefully attach a debugger and start to step through requests as they're made. That should give you an idea as to how it's put together. But, that's all only if you can actually F5 run the thing. If you can't, then this could take a while.
Yes welcome to the programmers guild. With the rank of but a lowly squire, you will rise among the ranks, by having sharps skill in searching and querying, but in forming code the meets the demands from on high, one day maybe you too can be guild master. 
It's hardly useless to learn more about supported frameworks that will no doubt still be supported for many years into the future. The only useless things here are your short-sighted comments. You have had absolutely nothing constructive to say thus far. Frankly, this should be pinned as an example of how not to answer someone's question - by repeatedly missing the point and telling the asker to do something else. Completely unhelpful. If you're going to be so unhelpful, then don't bother answering questions. It's just a waste of your time and mine.
Have you tried a tool like [this](https://marketplace.visualstudio.com/items?itemName=FerencVizkeleti.QuickDiagramToolforC) or something similar?
Have you tried a tool like [Code map](https://docs.microsoft.com/en-us/visualstudio/modeling/map-dependencies-across-your-solutions?view=vs-2017) or something similar?
That's what I've been doing. I figured maybe there was a better way, like a class diagraming tool or other ideas.
EXACTLY!!!!
Sire I arth here to request entry to this here guild. I haveth slain the php dragon 🐉 and tamed the likes of Java. My skills are rather sharp, see. What quest gains me entry here ? 
sounds interesting, do you have any sample code or tutorials?
Jesus! Have you heard about google? 
The best direction, can give you is to find tutorials for what you want to do. Also consider reading up on design patterns for C#, tons of nice material. This seems like a good place to start. https://www.guru99.com/web-services-tutorial.html
You can not refetence .NET Core but you can reference netstandard library
Yes. I use this every day. 
cool!
I already answered your question on the basis of doing research on very similar topic. It is undocumented and the only way to know is to look at the code. Even SO doesn't have an answer.
The way to see the XML files (there are several) is to rename the .docx to .zip, then unzip it into a folder structure. The OpenXML libraries work fine but there's a ton of work to be done to make them useable. Having done that (and never again), I ponied up the money for the Aspose product. In the end, the build vs buy equation was solidly "buy". 
Yes; any time you’re passing a pointer to unmanaged code, you need to pin it beforehand. .NET can relocate your object anywhere it likes, even if you retain a reference to it!
Have you tried debugging the code you already have to find out what the problem is?
Not sure why you are being downvoted, sometimes there are some very dynamic sql situations people need implemented. As long as the risks of what you are doing are well understood in acode base that can have some level of code review available, it should be fine. Not everything can always be paramaterized. For the stuff that cannot read lightly and know the drawback and make sure the dynamically built sql is not built DIRECTLY upon user inputs and sanitize. An alternative is a shitty query with some a sort by parameter and the worse sql CASE statement in the "ORDER BY" clause ever that will have the worst performance ever.
Guessing netstandard doesn't run on Linux? I'll need to look into that but guessing not otherwise I would have probably found that months ago when I converted to .net core to support Linux. I'm trying to share a library and this library runs across platforms. Really hoping to not maintain two versions. Guess I need to do some soul searching to decide if fluent is worth it. Thanks kind stranger. Im not going mad after all. 
Delegates don't need to be pinned, the marshaler isn't passing the address of the delegate itself (the native code wouldn't know what to do with it after all), but rather the address of autogenerated translation code which doesn't move.
yes, as far as the debugger knows, it's working fine, there's no errors in the execution itself, it's just not wanting to change the text inside boxes and shapes for some reason.
OpenXML lets you edit the nodes directly. You're not generating anything and feeding it in, you are literally accessing the raw data of the file and adding or replacing the data as needed. OpenXML SDK also includes numerous tools to visually inspect that interior structure to make it easier to access.
OpenXML SDK comes with a tool that allows you to visually explore the doc without doing that. 
Your not looking for errors, your looking at the code execution to find out why it's not doing what you want...
.NET Standard doesn't run on anything, it's only for libraries, but it's special because it can be referenced from both .NET Core and .NET Framework projects
Second this, I used Aspose at a previous company for the exact thing OP wants.
So then there's a handle that must be maintained and manually disposed of?
Openxml is the go to for c#. There is also a javascript api but that is for making interactive apps.
Fascinating stuff, great article! 
You saved the Internet! My application conversion to UWP can continue. Remember back when you used to go out and party on Saturday nights? Here I am converting code and trying to figure out snazzy transition animations. Thanks again for the help!
Thanks! 😀 (Hi, I’m the author) 
IIRC, the native thunk handle cannot be released. In order to stop the garbage collection of the delegate so the thunk always works, I usually just put the delegate into a static dictionary with the IntPtr returned from GetFunctionPointerForDelegate as the key, and the delegate as the value. You explicitly don't want to pin the delegate with the GC methods, as that will destroy the garbage collectors ability to actually collect, as it now has a hole it can't move.
The lifetime is managed by the lifetime of the managed delegate instance itself, I believe. There is no way to explicitly free it. 
"ASP .NET Core 3.0 will NOT run on the Windows-only .NET Framework" To me this is what will deprecate .NET Framework and give incentive for developers to move on
Does this advice apply generally? If you're doing a bunch of byte[] marshalling for example, would you be killing the GC to pin that memory until a wrapping object is finalized?
Also potential optimization speed. If the compiler "knows" a variable isn't null, it can skip adding any default null checks. Further, with this you can always know exactly where to put null checks, so you don't end up with more null checks than you need. "Everywhere" works, but "everywhere" slows down the code. This is the feature that I'm most excited about, by far.
Cool!
I haven't read either unfortunately, what i will ask though is: * What's your current knowledge? * What's your short term goal for using C#? * How are you learning currently and is it working for you? * And Ultimately, what do you want out of the book? Hopefully knowing that someone else can make an **informed** recommendation on one of those two books or another.
There's two issues here. One is that the object your delegate method is on is being GC'd, the second is that your object doesn't unhook itself from the native callback when disposed. The first thing you should do is write a destructor on the object that unhooks the native callback and cleans up all other native references you might have. Then, breakpoint that destructor to detect an unwanted GC. Store a pointer to the class somewhere, potentially a static variable, to stop it from being freed.
That, and: &gt; * Note that some new C# 8.0 features will only be coming to .NET Core 3.0 Unfortunately I feel like it's also going to drive some people (like myself) away from dotnet entirely. To be clear, I completely agree that dropping the full Windows-only framework is the right call. I'm in no way saying that Microsoft should keep it going for holdouts like me.
That’s such a silly stance. Being a good developer means staying relevant. Catering to your standard is a handicap to software development.
Thankfully for me I don't have to worry about staying relevant. Or being a good developer by industry standards. I don't work in software development anymore - I just do software development for non-commercial/personal projects in my spare time because I find it enjoyable - so I can afford to be picky about languages and frameworks to a silly degree all day long. I don't enjoy working with dotnet core, so if it's the only first-party supported framework now combined with the fact that I _really_ don't like some of the C# 8.0 features and my most wanted feature (records) seems to be stuck in limbo I don't see any reason to stick with dotnet.
Removed: Rule 5.
Removed: Rule 5.
Removed: Rule 3.
Removed: Rule 4.
It's a migration path for users of a Windows only framework. The only people this affects are windows developers anyways.
I just tried to declare a Wordprocessingdocument but it keeps telling me that it doesn't contain a definition for createfromtemplate
Hi, hope you all found the article useful. Feel free to leave your comments, ask followup questions or make suggestions on what you’d like to see in future write-ups. Thanks! 😀
What do you think about my comment? Accurate?
I am getting a lot of errors with it though, a lot of googling turns up nothing useful, like when I try this guys program, I am told by the IDE that there is no definition from CreateFromTemplate, I am assuming that this is a depricated way of doing it? Unless I am not specifying something at the beginning of the code with using? 
I can’t say whether I can accurately prediction what will happen, but I can tell you what I recommend. :) My personal (and professionalism) recommendation is for web app developers on new projects to adopt ASP .NET Core on .NET Core ever since 2.0 (when Razor Pages were introduced) and even more so with 2.1 (when SignalR finally came to Core and EF Core really matured). Even the official docs recommend using the old . NET Framework for the following reasons: Use .NET Framework for your server application when: - Your app currently uses .NET Framework (recommendation is to extend instead of migrating). - Your app uses third-party .NET libraries or NuGet packages not available for .NET Core. - Your app uses .NET technologies that aren't available for .NET Core. - Your app uses a platform that doesn’t support .NET Core. Source for above reasons: [https://docs.microsoft.com/en-us/dotnet/standard/choosing-core-framework-server](https://docs.microsoft.com/en-us/dotnet/standard/choosing-core-framework-server) 
https://stackoverflow.com/questions/42079439/open-xml-sdk-create-docx-from-template-dotx-using-memorystream-as-docx-holde 
Just tried that and now it's telling me "WordProcessingDocumentType does not exist in current context.
I don't know what you think `$"&lt;{word}&gt;" ` does, but it's definitely not what you want.
I have, and all examples I am finding aren't working because they might be outdated, or something else. For instance, I keep getting messages saying that certain objects don't exist, or that I didn't include a reference in the program solution manager while not telling me what reference i need in the tutorial. Also in much of the tutorials, the functions they use turn out to not exist according to the IDE, so I am asking for an exmaple so if I have questions, I can point out what doesn't work since that keeps happening. I think I have exhausted all of google searches to the point where turning to it isn't all that helpful anymore since none of these examples are working due to objects and functions that it just can't find.
That reminds me. MVC was always a best practice separating the view from the controller. Razor Pages seems to break away from that. Aren't you concerned that this takes us backwards? More like WebForms
I just tried this one after installing the right nuget package [https://codereview.stackexchange.com/questions/197284/modifying-a-word-document-template-with-openxml/197290](https://codereview.stackexchange.com/questions/197284/modifying-a-word-document-template-with-openxml/197290) I then made a template with the text it's supposed to find in a text box, but it's not replacing the text for some reason, how do I make it replace the text?
Good question. This questions comes up quite a lot. Razor Pages and MVC still share a lot of the underlying framework, and Razor Pages don’t have the same drawbacks of Web Forms. (e.g. View State, performance, reduced control over HTML, lack of proper testability etc) Moreover, Razor Pages aren’t replacing MVC the way MVC replaced Web Forms. You can still continue to build out the separation of concerns you’re comfortable with if you prefer the MVC structure. As for whether Microsoft is recommending Razor Pages as the “preferred” way, check out this tweet from Steve Smith and the thread its in. [https://twitter.com/ardalis/status/964532125876867074?s=21](https://twitter.com/ardalis/status/964532125876867074?s=21) He shares his opinions on Page-based web apps and Web APIs: - “If you're building page-based interfaces (not SPAs), Razor Pages are cleaner and better-organized.” - “You still use Controllers (not Views, though, so not really 'MVC') for APIs” 
Does fin ever add anything during this sequence? If not, you attempting to access an index of an empty list.
If you're able to, do you mind sending me the code you are using and possibly the template in a private message? I can't promise I can spend much time on it, but I'll do my best to send you in the right direction
https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1.item
I just tried the code from [this link](https://codereview.stackexchange.com/questions/197284/modifying-a-word-document-template-with-openxml/197290), and it works but it's not replacing text in text boxes, why is it not doing this and how do I get it to replace the text in textboxes?
i understand, my mistake..... Thanks :)
Happy to help.
Thanks
I already now have something working, I needed the newest version of openxml, my problem now is that it's not editing text inside of a textbox. I can post the code here if you don't mind. the template is basically a word document with plain text words that I told the program to look for, except in this case, it's in a textbox, this is the last part I need working and then I can move on to the later parts of the program. using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows.Forms; using DocumentFormat.OpenXml.Packaging; using DocumentFormat.OpenXml.Wordprocessing; namespace WindowsFormsApp1 { public partial class Form1 : Form { public Form1() { InitializeComponent(); } private void Form1_Load(object sender, EventArgs e) { const string templatePath = @"C:\users\carcr\desktop\template.dotx"; const string resultPath = @"C:\users\carcr\desktop\OpenXmlExample.docx"; using (WordprocessingDocument document = WordprocessingDocument.CreateFromTemplate(templatePath)) { var body = document.MainDocumentPart.Document.Body; var paragraphs = body.Elements&lt;Paragraph&gt;(); var texts = paragraphs.SelectMany(p =&gt; p.Elements&lt;Run&gt;()).SelectMany(r =&gt; r.Elements&lt;Text&gt;()); foreach (Text text in texts) { switch (text.Text) { case "Project Name": text.Text = "SUPER SECRET CODE NAME"; break; case "W0-nnn Name": text.Text = "Maintenance"; break; default: Console.WriteLine(text.Text); Console.Read(); break; } } // Save result document, not modifying the template document.SaveAs(resultPath); } } } } &amp;#x200B;
$"&lt;{word}&gt;" cannot be equal to "A" or any other string in your life. Given a word = "A" the resulting string interpolation is "&lt;A&gt;" so it is != to "A"
I'm sure there are more clever ways to do it, but you can try something like this... var encoding = new System.Text.ASCIIEncoding(); string translatedNumber = string.Empty; foreach(var word in words) { translatedNumber = string.Empty; for (int i = 0; i &lt; word.Length; i++) { // Get Character to convert string c = Convert.ToString(word[i]); // Append to translated string translatedNumber += (encoding.GetBytes(c) + ","); } } 
Oh, since you're pulling from a textbox, you need to grab the TextboxContent from the paragraph. The words may be spread out across multiple text objects inside of the TextBoxContent, this is something that the office products use to help compress the documents themselves, iirc. Here's an example I pulled from an MSDN thread that does something similar (wasn't sure if you'd see this or not, yet) using (WordprocessingDocument myDoc = WordprocessingDocument.Open(fullpath,true)) { string fromTxt = "A"; string toTxt = "B"; MainDocumentPart mainDocumentPart1 = myDoc.MainDocumentPart; Document document1 = mainDocumentPart1.Document; Body body1 = document1.GetFirstChild&lt;Body&gt;(); var paras = body1.Elements&lt;Paragraph&gt;(); foreach (Paragraph para in paras) { foreach (TextBoxContent txtContent in para.Descendants&lt;TextBoxContent&gt;()) { foreach (Text txt in txtContent.Descendants&lt;Text&gt;()) { txt.Text = txt.Text.Replace(fromTxt, toTxt); } } } }
This is by far best book about programming in C# for begginers, and its free. It teaches you how to start to think like a programmer and how to solve problems, lots of examples and exercizes... https://www.introprogramming.info/wp-content/uploads/2013/07/Books/CSharpEn/Fundamentals-of-Computer-Programming-with-CSharp-Nakov-eBook-v2013.pdf 
You're very welcome my friend. Good luck with the rest of the project :)
what is that rule ? @FizixMan
did i do something wrong ? 
Why is the class private? Then no one will be able to use it? Maybe you have your reasons, but I'd have done this: /* Singleton */ private sealed class Government { private Government() { // Singleton constructor is private, it can only have one instance. } public static Government Instance { get; } = new Government(); } Simply as this: /* Singleton */ public static class Government { public static Government Instance { get; } = new Government(); } Singletons are really easy in C#.
Yeah, core for backend, pick your poison for frontend angular, react or vue.
Why don't you like working with .net core?
Sure, after the likes of Oracle and Forms/WPF component writers make their .NET offerings properly work on .NET Core.
The article is very well done, I just missed a thing that was also discussed on the video, namely that .NET Native is being rebooted with news of how it might look like post .NET Core 3.0 release.
Could you upload your template?
&gt; To me this is what will deprecate .NET Framework and give incentive for developers to move on** ***For people doing web development* .NET Core is still missing a lot of features for enterprise (desktop) development such as WCF and Winforms/WPF (although that is coming, but time will tell how comprehensive the support will be). And while a lot of things are definitely going to be more web based in the future, there will always be a need for desktop solutions (at least in the foreseeable future).
I had this the other day with ftp client. Try putting wc.Abort(); to end each WebClient call
Or just don't use .net at all. 
You can't `Abort()` a WebClient but you can `Dispose()`, even though with the `using` that shouldn't be needed. But that still seems to yield the same result in this test. Appreciate the feedback though. This one has been giving me fits for a few days. 
Ah ok. I still don't know why it does it but I'm glad my same experience from Friday could help you :)
Well this is still an open problem for anyone else. Like I said, in this case even throwing in a `wc.Dispose` still times out on the 2nd call. 
Oh sorry I misinterpreted when you said you got the same results. I thought you mean same results as I had with the ftp issue. Have you tried refactoring to not use the using statement and just re-instantiate a wc variable? 
No problem at all, and I've refactored to use `XmlTextReader`, `HttpWebRequest`, and `HttpClient` with `using` blocks and manually instantiated and disposed. I did get this to work using `HttpClient` in a static class, but for some reason that works fine on my Windows dev system but will not work on the production Linux/mono environment. So I resorted back to this most basic example and came here for help before I start doing hard drugs to cope. 
It’s a good thing I’m not a beginner myself, I’m pretty sure having a shark emerge from my monitor would violate health and safety regulations in my workplace.
Yes, being able to get the eBook *right now* instead of waiting for January 30 made this deal worthwhile for me.
I cringe in WCF 😞
Unfortunately I'm less of a theory person and more of a trial-and-error-until-it-works person so I can't think of any other suggestions unless it's something in the aspx that holds the system up. I doubt it but it could happen. I will try fiddling with it and see if I get the same results. Is it ok to target the same url?
I had this happen with a sql connection object a few days ago. Solution was to make sure the connection was in the right state (open or closed) before making the request. Throw in a breakpoint right before the request and see what state the connection is in.
Yea I agree with everything you said. Except it was implied I was talking about web development since I mentioned ASP.NET. But it doesn't matter. One would think that WCF would be easy to make a Core version for. All protocol based and no UI concerns
Sure thing, should be fine. Thanks. 
Do you have a sample project I can look at? There is a validation feature buried in the tool. It's not well documented but it's there. I used it to make sure the XML wasnt malformed. I have a few questions in SO about it. The author even responded to a few questions.
actually Øredev 2018 channel contains much more interesting stuff, check it at: &amp;#x200B; [https://www.youtube.com/channel/UC0XtR2kcXnqtfrGSsxM8oAg/videos](https://www.youtube.com/channel/UC0XtR2kcXnqtfrGSsxM8oAg/videos)
Lol it’s all good. Use what works best for you, your team and your users. :) Thanks for reading! 
Yep. I see a lot of people using Core just for the Web API and the JS front end of their choice. For anyone looking to compare the options provided in ASP .NET Core, check out this other article of mine in this series: - [Pages in ASP .NET Core: Razor, Blazor and MVC Views](https://wakeupandcode.com/pages-in-asp-net-core-razor-blazor-and-mvc-views/) 
Thanks for your feedback, and thanks for reading! 😀👍 
I just got it working, I just needed to install the latest openxml library, the only thing is that it's not replacing text in textboxes. I think I can make a foreach iteration in the same using clause here so I don't have to declare everything all over again, it will continue to edit the same WordProcessingDocument variable but start going into the textboxes and not just the main body, what do I have to edit in this code in order to start an instance of it looking into the textboxes? I am checking to see if I can do that in a second foreach instance like the existing one that looks into the body of the document. private void Form1_Load(object sender, EventArgs e) { const string templatePath = @"C:\users\carcr\desktop\template.dotx"; const string resultPath = @"C:\users\carcr\desktop\OpenXmlExample.docx"; using (WordprocessingDocument document = WordprocessingDocument.CreateFromTemplate(templatePath)) { var body = document.MainDocumentPart.Document.Body; var paragraphs = body.Elements&lt;Paragraph&gt;(); var texts = paragraphs.SelectMany(p =&gt; p.Elements&lt;Run&gt;()).SelectMany(r =&gt; r.Elements&lt;Text&gt;()); foreach (Text text in texts) { switch (text.Text) { case "Project Name": text.Text = "SUPER SECRET CODE NAME"; break; case "W0-nnn Name": text.Text = "Maintenance"; break; default: Console.WriteLine(text.Text); Console.Read(); break; } } //I was wondering if there can be a second foreach iteration //that will edit the text in the textboxes like the above one //edits the text in the body of the document, what needs //to be modified in the above text in order to do that? // Save result document, not modifying the template document.SaveAs(resultPath); } &amp;#x200B;
I was checking Twitter for some thoughts on WCF with .NET Core and found this article you may find useful. - [Accessing WCF Service via Azure Service Bus Relay with .NET Core](https://www.sanjaybhagia.com/2018/11/28/accessing-wcf-service-via-azure-service-bus-relay-with-net-core/) Source: Sanjay Bhagia (@bhagiasanjay) “So have you tried to access WCF Services from your .NET Core Application? I found one way to do this. Read out my new blog post and do share if you have any other (or better) way of doing this” - [https://twitter.com/bhagiasanjay/status/1067748538426236929?s=21](https://twitter.com/bhagiasanjay/status/1067748538426236929?s=21) 
I've seen that one, but I don't see how I can append it to the code I already have that edits the text in the regular body of the paragraph. I want to continue editing the document variable in the code I posted, but in a separate foreach instance that edits textboxes, then I can use the saveas function at the end.
like trying to build a trusted security token service identity provider for SharePoint. The IdentityModel and WS-Federation stuff uses .NET Framework.
.NET Framework itself isn’t going away though. It just won’t get all the new features, mostly security/performance updates going forward. It will still be maintained to support many scenarios, such as what you described. 
OK well maybe it is the ASPX stuff. This fiddle using a test API works fine: https://dotnetfiddle.net/Pms25Y So the code is good, the API is jank it would seem. 
Just got it working, here's my code (for all the googlers out there, I don't want anyone having headaches over this in the future as well). private void replace() { const string templatePath = @"C:\users\carcr\desktop\template.dotx"; const string resultPath = @"C:\users\carcr\desktop\OpenXmlExample.docx"; using (WordprocessingDocument document = WordprocessingDocument.CreateFromTemplate(templatePath)) { var body = document.MainDocumentPart.Document.Body; var paragraphs = body.Elements&lt;Paragraph&gt;(); var texts = paragraphs.SelectMany(p =&gt; p.Elements&lt;Run&gt;()).SelectMany(r =&gt; r.Elements&lt;Text&gt;()); foreach (Text text in texts) { switch (text.Text) { case "Project Name": text.Text = "SUPER SECRET CODE NAME"; break; case "W0-nnn Name": text.Text = "Maintenance"; break; default: Console.WriteLine(text.Text); Console.Read(); break; } } //start editing textboxes MainDocumentPart mainDocumentPart1 = document.MainDocumentPart; Document document1 = mainDocumentPart1.Document; Body body1 = document1.GetFirstChild&lt;Body&gt;(); var paras = body1.Elements&lt;Paragraph&gt;(); foreach (Paragraph para in paras) { foreach (TextBoxContent txtContent in para.Descendants&lt;TextBoxContent&gt;()) { foreach (Text txt in txtContent.Descendants&lt;Text&gt;()) { //each iteration that replaces the data txt.Text = txt.Text.Replace("Project Name", textBox1.Text); } } } // Save result document, not modifying the template document.SaveAs(resultPath); } } So it does what I want the way I want it, it will iterate through text in the body of the document and then go into a second foreach instance and iterate through all the textboxes. This is so cool.
Okay new problem, despite it now replacing text in text boxes, the template I was given to edit is still not having the text change and I don't know why. How do I inspect it to see what kind of element it's inside of? It could be a shape for all I know but I have no way of knowing for sure. Do shapes get edited differently in C# as well like textboxes do? this is becoming more of pain in the neck than it should be, I hate Microsoft sometimes.
I know I can access them. But I'd like to host them, even if only in Windows (although there is sure space for a cross platform communication framework)
I’d like to see where that goes... we already know that Winforms + WPF will be Windows-only on .NET Core 3 so I wonder if WCF will head in that direction as well. 
Considering there is nothing in wcf that binds it to windows that would be a travesty. Wpf I understand, because of direct x and some other stuff. Though even then I suspect the community would cheer in glee if wpf became cross platform with a rewrite of underlying protocols to use the gpu on linux and mac under the covers. 
I pulled the trigger and bought this, happy so far! I find that the Livebook version is much easier on the eyes than the PDF. No doubt the PDF for the final version will be much more polished.
Okay new problem, despite it now replacing text in text boxes, the template I was given to edit is still not having the text change and I don't know why. How do I inspect it to see what kind of element it's inside of? It could be a shape for all I know but I have no way of knowing for sure. Do shapes get edited differently in C# as well like textboxes do? this is becoming more of pain in the neck than it should be, I hate Microsoft sometimes.
 https://www.mediafire.com/file/ocf5c2vc3tl4m86/contract.docx/file &amp;#x200B; Hopefully you can tell my why the code below that I am saying is now working and replacing text in textboxes isn't replacing the text on this title page.
https://stackoverflow.com/questions/5051269/httpwebrequest-can-i-do-multiple-calls-at-the-sametime-from-multiple-threads
He's doing it all in one thread and doing it synchronously though.
I haven't used WebClient in ages. I suspect it's doing something funky behind the scenes. Use HttpClient. You mentioned that it didn't work on Mono but that would be easier to figure out than your existing issue. Also, don't dispose of HttpClient. Use one instance per host. Try including the System.Net.Http nuget package if it doesn't work on linux as is. Here's working code: [https://dotnetfiddle.net/jOxrOI](https://dotnetfiddle.net/jOxrOI) ``` using System; using System.Collections.Generic; using System.Net.Http; namespace ConsoleApp2 { class Program { static void Main(string[] args) { var books = new List&lt;string&gt; { "9780321946768","9780983581222", "9780130612106" }; var hc = new HttpClient(); foreach (string book in books) { var url = $"https://www.sellbackbooks.com/botprice.aspx?isbn={book}"; var response = hc.GetStringAsync(url).GetAwaiter().GetResult(); Console.WriteLine(response); } } } } ```
Thank you so much, this at least works simply and I can troubleshoot the mono issue as needed, the Nuget idea is great. 
Are you receiving any exceptions or is it failing silently? 
IT wanting to go to more and more managed solutions means even more corporate programs are going to go web. 
Try changing 'int b = 0' to 'static int b = 0'.
It probably isn't very high on their list since last time there was a request about it on Github it was mobbed by web devs that don't know why WCF was invented for in the first place, stating to "Just use Webapi".
Thanks, it has seemed to work, I just have to deal With a char Converting error next and I would have a working prototype, thanks for your help!
Classes are private because they are only existing and used by their own DesignPattern's classes. But you made me realize that we shouldn't have to worry about the classes access modifiers by looking at the examples, so I'll change them to public.
In my opinion, SOAP was always annoying. But it had its use cases. Especially for security needs. To me, the most attractive feature of WCF bindings. Using the TCP bindings is extremely faster than using the HTTP overhead. I believe WCF is most definitely needed. Maybe the Microsoft teams could take it as an opportunity to make configuration and setup easier. That was always the toughest part for me and other developers. 
I agree server side WCF is needed, but I also think it will not come to .NET core. Which is a shame given it could really benefit from Span&lt;T&gt; which I assume is partially how they did it for the client side support in .NET core.
Why your event handler is static?
I was under the impression that WCF does work with .NET core. In fact I just worked on a .NET core project that consumes a WCF service. Or is it just that the server-side process can't run with .NET core? 
It's not throwing any exceptions or errors, it's just refusing to change stuff
It depends. You really don't want to keep an object pinned for more then a single pinvoke call or 2. For the callback example here, the callback seems to be stored in native code, so the pinning definitely would bad. If you are just marshalling an array for a single call, the pinning is fine most likely.
Put some kind of notification (pop-up message boxes, writing to a log file, or some such thing) inside your inner foreach loop reporting what used to be in the text box, what you want to replace it with, and what is in the text box after you do the replace. 
OpenXML productivity tools. Then open your document in there. Right click and then select regret code view, I think that's what is called, and you'll see on the right a layout of the code written to generate the file. As you drill down the objects in the mediation pant, the code view will reflect the area you are currently on and ts children
Well, I ran it and it looks like both your "texts" variable and your "para" variables are empty collections. So it's not failing to save the updates, there's just nothing for it to update. I found a few different issues in the code, however: &amp;#x200B; Replace your: var paragraphs = body.Elements&lt;Paragraph&gt;(); And var paras = body1.Elements&lt;Paragraph&gt;(); With: var paragraphs = body.Descendants&lt;Paragraph&gt;().ToList(); And var paras = body1.Descendants&lt;Paragraph&gt;().ToList(); &amp;#x200B; That will give you a list of texts from the whole document. The second issue I found is your switch statement will only ever run once. Because it will break out of the foreach loop on the first thing it does. Change all your 'break;' statements to 'continue;' statements. &amp;#x200B; Once I fixed all that I was able to get a document with &lt;COMPANYNAME&gt; changed to "SUPER SECRET CODE NAME". &amp;#x200B; A nice tip is you can rename DOCX files to .zip, open them, and inspect the XML manually. There's a tool in one of the Office SDK's out there too but I for the life of me can't remember what it's called and a cursory googling isn't turning anything up. &amp;#x200B;
That is not the primary purpose of interfaces. It’s to group similar functionality. It’s a contract for what a class must contain for methods.
Oh, I think you need to flush the stream out to the new file after you save it. I'm looking for a project I did in the past.
why not use .net core? it has httpclient and should work just fine on linux
Can you give a concrete example?
You should step through the code with the debugger, you should then be able to see at a glance where it's going wrong.
Ok I got it. You write only Paragraph as type, Im sure you have an using with DocumentFormat.OpenXml.Drawing. But thats not the right Paragraph, you want the Paragraph from using DocumentFormat.OpenXml.Wordprocessing. So you could delete the using ..Drawning and replace it with Wordprocessing or just do this: &amp;#x200B; var paragraphs = document.MainDocumentPart.Document.Descendants&lt;DocumentFormat.OpenXml.Wordprocessing.Paragraph&gt;(); &amp;#x200B;
Did you try checking a local developer jobs website?
Yes. Search any job site and you'll find hundreds of listings.
Good job. Second opening the raw XML as described. If you are going to develop against these documents they can get pretty complex so debugging with Notepad++ copy or whatever open in another window is a practical requirement of getting anything done. Step through your code in debug and follow along in the document. If you don't do this you'll have these same sorts of frustrations at every step of development when you have unexpectedly null objects coming back from your selectors. You'll get better at it with some practice. You may also want to write some tests for your code to make sure you don't regress as you tweak code. 
A method group can also be passed to/assigned to a matching delegate, hence not everyone might be trying to actually call the method.
Learn a few languages, the concepts are pretty similar. C# will give you a better, more rounded appreciation of the different styles. There are a lot of jobs, your friend is probably working in a vertical where it's not prevalent.
I’ve never had a problem getting a job. Usually the opposite. Multiple offers and a hard time choosing where I want to go. 
I imagine writing game code in Unity is pretty far from typical professional C# code working on other systems like business and data processing. It certainly can't hurt, but I'm not entirely sure how much of C# is really represented or if it is more like C#-like script. From my understanding more of the later. At some point (sooner than later) you'll want to step away and learn C# 7/8, .Net Core 2.1+, and common APIs and libraries like Newtonsoft.Json, etc. It's not bad, but it's not really going to be the same kind of programming job as writing games. "Won't serve any purpose" is perhaps a bit absolutist if you really read such a statement too literally, but I imagine there's only so much syntax overlap even though they're both "C#". 
That's so ignorant a statement that I question how "professional" your friend is. C# is the de facto programming language on all Microsoft platforms for all but the most low-level development (where you'd drop down to C++ for performance). Does he really think no businesses use a Microsoft stack?
You can downlaod the tool from microsoft: [https://www.microsoft.com/en-us/download/confirmation.aspx?id=30425](https://www.microsoft.com/en-us/download/confirmation.aspx?id=30425) The cool thing is, you can create a document with all fonts and formats you want then open it with the tool, reflect code and see the backend code
I'm curious to know what he considers useful for job opportunities. I mean, only knowing C# by itself is very limiting, but the real value comes from applying it to something bigger, such as using it with a web framework, along with various other frameworks/libraries/languages
C# is pretty popular outside of Unity. In my company we use it for our game server, and Unity for game client. Some parts of out projects work both for server and in client (despite the fact that compilation process is totally different for server and client), so yeah you get real C# with Unity. That been said, you will really need to think(and work) outside the scope of monobehavior and UnityEngine libraries to be efficient in C# outside of Unity. 
Yeah, your friend is wrong. C# is defacto the programming language for software on Microsoft platforms. It's a great middle ground too, if you learn C#, you can easily pick up languages that work more down at the metal like C++ and if you want to go to any higher level languages like Java, the concepts are basically the same. C# is very popular. 
lmao what the fuck is your "friend" smoking? sounds like hes trying to jeopardise your career and/or he's one of the "m$ herp derp" types
That friend is a damn idiot! For example, here in Texas practically every enterprise level software engineering role is for C#/.NET or Java. We're talking thousands of openings across the metropolitan areas of Houston, Austin, Dallas, San Antonio, etc.....
Update to this - I think I found why the file is compiled. Here's build log: 1&gt;------ Build started: Project: Nez, Configuration: Debug Any CPU ------ 1&gt; Nez -&gt; D:\Dev\Projects\Nez\Nez.Portable\bin\Debug\Nez.dll 1&gt;D:\Program Files (x86)\Microsoft Visual Studio\2019\Preview\MSBuild\Microsoft\VisualStudio\v16.0\AppxPackage\Microsoft.AppXPackage.Targets(1054,5): error APPX3212: SDK root folder for 'Portable 7.0' cannot be located. See http://go.microsoft.com/fwlink/?LinkID=798187 for more information. ========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========
Thx everyone 
Each Quartz job has a dictionary&lt;string,object&gt; that persists through each execution of the job. In my case storing a versioning number for SQL change tracking, so each execution can get changes since the last execution. I need that value to persist through process restart and it's really convenient that Quartz has it built-in so I don't need to write that plumbing. In summary, I like your DI integration/ease of setup more than Quartz, but I like Quartz handling persistent job data enough to not switch (and write my own job data handling)
He works for apple. If c# is used by Microsoft now I understand :)
https://docs.microsoft.com/en-us/dotnet/api/system.datetimeoffset#operators https://docs.microsoft.com/en-us/dotnet/api/system.timespan
Nice. One tiny criticism, you (Or Ian, I have no idea if you are one and the same :) ) change the example twice from a customer to a product to money. My preference would have been to use a single example that extends through the entire article. It's a tiny thing, but it reduces the jarring brain reset each time you have to assimilate the new example. I probably wouldn't have named ```VerifiedEmailAddress``` that either. You'd have to have an IEmail so that an unverified address could be added. I think you were right in the place place, adding IsVerified to the Email class. You don't actually need to know if it's verified in 90pc of cases. I'm kinda guessing about your domain and making assumptions based on my own experience. Something else which is not a criticism but a weird quirk of my own. I have an aversion to operator overloads. I think it's related to exceptions, but I've never really thought about it. I like it though.
`DateTime` is a trap. You almost always want to use `DateTimeOffset` ... that goes for everyone, even you lurking and not commenting. I see you... Go get rid of `DateTime` from your code unless you're 100% certain that's the class you intended to use instead of `DateTimeOffset` Every call to `DateTime.Now` pulls a different `DateTime` so you could theoretically have a time difference of a hour from a second difference. If you're telling them to press enter use `Console.ReadLine()`or explicitly check `ReadKey()` or `Read()` for enter. You can do simple math on two `DateTime` or `DateTimeOffset` objects to get the `TimeSpan` difference of them. Dont use single character variables or shorthand named variables (`tot` instead of `total`, `s` instead of `seconds`, etc). Unless the name starts getting stupid long just spell it out. You should use parenthesis to make your order of operations on that `tot` math explicit instead of implicit in the off chance you decide to add something else to it. You use one unit of measurement for the math then change it at the end to another (converting everything to seconds then converting everything to milliseconds then converting everything again to seconds at the end). You can concatenate strings with variables by using the `$` symbol. So the last string could have been `$"You took {time}s! Contrats!"` You're prematurely casting two ints to doubles when using `GetTime()` The `Stopwatch` class can be used to measure time instead of using `DateTimeOffset` 
Does anyone have a good Monokai port? 
First time I’ve seen emphasis like your Prereqs section. I love it, but I bet some people are going to have a stroke level cringe when they see it.
So to be clear, this is an actual theme for VS not just the text?
Unity uses c# and has really good libraries 
Great - thanks for the feedback 👍 Sounds like this might make a good "future feature" candidate? lol
Lovely to listen to while drifting off to sleep :D
It is completely untrue. SpaceX uses it. Tons of boring business jobs use it Its also programming, which is a general skill not tied to any one language. 
Nice coverage of a topic far too many devs are unfamiliar with (even a few MVPs). I think the switch between customer and currency is fine since one is showing composition of multiple values into a single value object, and the other is mostly about working with operators. I have to agree with typtich on email though, I wouldn’t imagine you are going to change the type hydrated based on it being valid. A fine article, thanks for sharing it. 
One of the most reported issue last time when I posted, was that people didn’t see that link – *even though it was there*. That shouldn’t be an issue anymore. 😄
There is a preset for Monokai Night, which is Monokai with a slightly darker background. See the Preset dropdown on the [Preview](https://dainty.site/preview) page. If you want a lighter background, then you can simply drag the sliders on that page and create your own configuration. If you’re a purist, and *really* want the original then I will consider porting the Monokai theme. The only difference however seems to be the background color – which you can adjust. I’m deliberately not porting the Monokai Pro themes since they cost money.
I’m not sure if I get you, but every screenshot is real – they are showing Dainty with different presets. Also, not only the editor text is customized, but the entire UI is styled. The same is true for the Visual Studio Code presets. And that’s why you would want Dainty for Visual Studio Code even if you are using the theme the presets is based upon. If you compare the UI of Dainty with the original theme then you will see that Dainty has a cleaner look.
Nice. The one on that page looks pretty good but I'd really like the one that ships with VSCode. Really cool website design by the way. Looks awesome. 
What’s the exact name of the Monokai variant that you’re referring to? I just ported the one named “Monokai”. There is also one named “Monokai Dimmed”. Thanks a lot!
It's just called "Monokai", the source for it is here: https://github.com/Microsoft/vscode/tree/master/extensions/theme-monokai I think you ported the right one, that screenshot looks correct. 
Yes, it should be that one.
Using one httpclient is fine but you should also point out that this will cut off DNS updates, which you should be handling.
You should not support the exploitation of children.
This is something I've been working on for quite a while. There are probably a lot of bugs, but I'm eager to get feedback. I plan to fully launch this site in a few weeks, but I want to post it as a programming project before I post it as a finished project. I think there's some good knowledge here. If you are interested in any of the following packages, I use all of them in this: * ASP.NET Core * Vue.JS * MySQL * Bootstrap * Vue-Bootstrap * Webpack * SendGrid * SignalR * NodaTime * Dapper 
Any chance to see Snazzy theme?
I definitely noticed it. 
I use [asphostportal.com](https://asphostportal.com) to host my .net core project. I have also tried Azure previously, but they are very expensive if you use SQL database. So, I found asphostportal and host my site with them. You can consider them if you are using .net.
Snazzy is on my list of themes to consider porting. Is there a text editor/IDE Snazzy theme by the way? I just thought it was a terminal color theme. &amp;#x200B; Run \`yarn build -p dark-one-pro\`
You do realize this is probably not what you want though. A will get the value of b in the beginning. If you change b then A doesn’t change. So even though using static would make it compile I would bet it doesn’t make it work. 
Definitely prefer the base [Dracula theme](https://draculatheme.com/visual-studio/) but good effort.
It is very hard to give an estimate, because he asked for an estimate?
Thanks! And yes, there's a Snazzy theme currently available for VS Code https://marketplace.visualstudio.com/items?itemName=alexanderbast.vscode-snazzy 
[removed]
Doesn't providing a default implementation of an interface kinda make it an abstract class?
If the key is in the code, you are vulnerable against anyone who can get access to the code. Storing it in an encrypted part of web.config is probably better (but takes some time). You are probably best of using a symmetric cipher, and sending the ciphertext as base64. That is slightly inefficient but just as secure as sending the ciphertext in binary. 
Does b64 have something like a key? Or what do you exactly mean with symmetric cipher?
The encoding isn't going to be a problem. Think of the most basic kind of substitution cypher... A -&gt; A + some int x A streaming cypher is just some f(key, i) = x that can be reversed only if 'key' is known. I can't help you with the key exchange problem, but even strong hash based on 'key' should generate an acceptable sequence. However, as always: don't actually implement your own crypto for anything that actually matters - leave that for the experts.
To be fully honest, I would have preferred if you didn't do this and create another library for C# instead since Node.js already has a big ecosystem and...you know, I would have preferred if Node.js just died in peace. But cool job nonetheless.
Thank you for your support. Please let us know if you liked using it and if you want features, please add them to feature request. we would like to help you out.
No, base64 is just a way to transform binary date into text and back again. It does not provide any kind of security, but it does help with the requirement that the transmitted data should be UTF-8. What do you mean by the string being comprimised by the way? Is it a misspelling of compressed? What I mean is that you can encrypt your string with any standard symmetric cipher, and then encode the binary result in base64 for transmission. That should solve both your problems.
Removed: Rule 3, spam.
Rules are listed in the sidebar and here: https://www.reddit.com/r/csharp/about/rules
Yes sorry, I meant compressed, english isnt my natural language.
That's good. Most of the "themes" for VS out there are simply text colours.
Will definitely try this tonight. Any chance for a tomorrow night eighties theme? 
&gt; `DateTime` is a trap. You almost always want to use `DateTimeOffset` I mean, not in this case, not at all. But here Stopwatch would be better. And if not, at least `.EllapsedMilliseconds`.
Use `.ElapsedMilliseconds` instead of the calculation you do, or (even better in this case) use `Stopwatch`.
&gt; Why does intellisense not append a '()' in front of a method group automatically? A method group is basically the name of a method, leads to the creation of a delegate. It shouldn't have '()', as that indicates a method call.
It doesn't really make sense to say that encrypted output should be in UTF-8. Encrypted output is binary, and can for instance be converted to ASCII (and thus UTF-8) via base64 or similar.
Ok. But the output of the compression is not in UTF-8 anyway, sp why is that important? &amp;#x200B;
I use the [Monokai theme from studiostyl.es](https://studiostyl.es/schemes/monokai) and it has a bit more color than your Monokai Night theme does ([screenshot with your example C# code](https://i.imgur.com/eO3uqSM.png)). Do you know what's missing? I have no idea how syntax coloring works, I don't know how difficult it would be to add. Thank you so much, this is awesome!
I like your attention to detail and immutable objects, very valiant of you to keep up with writing the constructors! Cool code base for sure
switch(word) { case "A": //do your stuff break; case "B": //do your stuff break; } 
Fucking THIS
LINQ's filtering operators are slow, but I think boolena operators (Any, All, etc...) would be faster if they work with the inner structure of the class.
 string[] s1; string[] s2; HashSet&lt;string&gt; s2s = s2.ToHashset&lt;string&gt;(); if (s1.All(txt =&gt; s2.Contains(txt)) ..... &amp;#x200B;
I think the service locator pattern, has fallen out of favor, and I wouldn't use it at all. Passing a service locator to your class is just lazy, it doesn't tell the creator of the object what types this object really needs. It's hard to test. At least with the DbContextFactory, if actually needed, you have the semantics and understanding of what this means. 
You are right. There are lots of things that could be improved with the Monokai ports. I will start by changing the color of operators to red. That’s a quick fix that will make it look closer to the one that you’re posting. I think I’ll use Monokai for VS Code and Sublime Text as references. I will let you know when it’s ready.
Great, thanks – I’ll look into it!
Sure, that’s a classic among themes – I’ll add it!
I'm a bit confused by the problem but can it be solved using the [repository pattern? ](https://deviq.com/repository-pattern/)?
That’s probably what got me started with this project. I wanted something different than the default themes, but I couldn’t stand that the environment looked different than the editor.
&gt; It definitely has something to do with the document itself and not my program. This sounds like when a user says "well it was working fine last week before you installed my printer, so you must have broken it".
No, they'll still only work on Windows.
Thanks for sharing. Easy to read and logically structured code, even though I don't really understand the domain.
A lot of people use Unity with C#
Is the "big deal" then that WinForms can run on 3.0 Core and don't require Windows 10? WinForms lives again?
I just did all that, and then I added a few more lines in the loop on the top that replaces the text in the body, now I have the problem of it not changing &lt;STATE&gt;. and &lt;ZIP&gt;. This is what the loop looks like now, after adding the changes you suggested it works for the most part at the moment. using (WordprocessingDocument document = WordprocessingDocument.CreateFromTemplate(templatePath)) { var body = document.MainDocumentPart.Document.Body; var paragraphs = body.Elements&lt;Paragraph&gt;().ToList(); var texts = paragraphs.SelectMany(p =&gt; p.Elements&lt;Run&gt;()).SelectMany(r =&gt; r.Elements&lt;Text&gt;()); foreach (Text text in texts) { switch (text.Text) { case "&lt;COMPANYNAME&gt;": text.Text = textBox1.Text; continue; case "&lt;CONTACTNAME&gt;": text.Text = textBox2.Text; continue; case "&lt;ADDRESS&gt;": text.Text = textBox3.Text; continue; case "&lt;STATE&gt;": text.Text = textBox5.Text; continue; case "&lt;CITY&gt;": text.Text = textBox4.Text; continue; case "&lt;ZIP&gt;": text.Text = textBox6.Text; continue; default: Console.WriteLine(text.Text); Console.Read(); break; } } } &amp;#x200B;
Nope, you'd be better off waiting for UWP to be ported to Linux and Mac sometime in the distant future. As for Electron, it allows you to basically run a website as a desktop app. Slack used to do it before they moved their client to a native solution. It's probably the easiest right now, thought just make sure your target audience has a lot of RAM if you go that route. 
They think I helped them, but I actually stole their learning.
No rush, you're managing a ton of colors, I'm not in any hurry. Thank you so much, this project is awesome!
You still have the following in your code, which won't get all your Text objects from the whole document: var paragraphs = body.Elements&lt;Paragraph&gt;().ToList(); Change it to the following as I stated above: var paragraphs = body.Descendants&lt;Paragraph&gt;().ToList(); &amp;#x200B; Also, to debug this a little easier for yourself, try moving this from your default switch case to the top of your foreach loop and remove the [Console.Read](https://Console.Read)(), it will list out the Text you're looking at right then and will be faster to see if all those strings you're looking for actually exist in your collection: Console.WriteLine(text.text) &amp;#x200B;
The code worked in other document, just not this one that I am trying it out on in particular.
I completely agree with everything, and hope that I give the idea that this is something that concerns me too. I'm surprised to hear that it's fallen out of favor though. I thought that the Service Provider pattern was being used everywhere right now with regards to Dependency Injection?
Unless I am totally missing it, the break in the switch should only break 1 level up. I am not seeing why that is an issue. The loop should still run. 
This is exactly what I've been after for ages! Finally I can have the full dracula theme for the whole IDE, I can't thank you enough for doing this!
As mentioned by twed, winforms and wpf will still be windows only, but it gives you the option of building on dotnet core instead of .NET Framework. framework will never go away in the same way VB.NET will never go away, but Microsoft still wants to push core going forward. It gives them a development cycle that is not bound to the latest version of windows, they don't have to support a ton of legacy features anymore, and I would imagine sometime down the road they will create a linux/mac version of "WinForms" that can run cross platform. Getting people to adopt dotnet core 3.0 right now is the first step towards that goal. Electron is a cross platform application built on chromium using, typically, javascript. The main advantage with electron is that every platform natively supports javascript/chromium, and the ease of development. It is very easy to create an electron app. The main downside of electron is how much memory it takes to run. You know how everyone rips on Discord or VS Code for idling at 800MB of ram? That is because they are built on electron, which is essentially running a VM sandbox via chromium. If Microsoft creates a cross platform WinForms on dotnet core it would very likely not have such huge overhead as electron does today. There are a ton of people who do not have the luxury of 16GB of ram, so this kind of solution would be very tempting for companies when deciding which platform they want to build their products on.
Service locator != ServiceProvider Service locator is an IoC pattern. DI is also an IoC pattern. ServiceProvider is an container implementation that can be used for DI(and also be used as a service locator though as OP said it is kind of an anti-pattern). 
WinForms can run on .NET Core 3.0, but **only on Windows**. Same for WPF. The big deal is.. well.. that it runs on .NET Core. That means it can be shipped with the runtime bundles as a standalone version and benefits from the various performance improvements of .NET Core.
Link produces a 404 now
Vector&lt;T&gt; might work. It would probably be something like this: &amp;#x200B; \`private static int CompareTo(MyObject a, MyObject b) { int i = 0; &amp;#x200B; var count = a.Path.Length - Vector&lt;ushort&gt;.Count; for (; i &lt; count; i += Vector&lt;ushort&gt;.Count) { if (Vector.LessThanAny(new Vector(a.Path, i), new Vector(b.Path))) return -1; if (Vector.GreaterThanAny(new Vector(a.Path, i), new Vector(b.Path))) return 1; } &amp;#x200B; for (; i &lt; a.Path.Length; i++) { if (a.Path\[i\] &lt; b.Path\[i\]) return -1; if (a.Path\[i\] &gt; b.Path\[i\]) return 1; } &amp;#x200B; return 0; }\`
If you're on a recent version of .NET you can implicitly cast an array of `ushort` to a `Span&lt;ushort&gt;`; and then use `MemoryMarshal.Cast&lt;&gt;` to cast it to a `Span&lt;ulong&gt;`. Option two is to [pin it via a GCHandle](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.gchandle.alloc?view=netframework-4.7.2) and the use [pointers](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.gchandle.addrofpinnedobject?view=netframework-4.7.2) to treat it as a `ulong*`. Both approaches require care to make sure you don't read/write past the end of the array. ---- As for vectorisation, you could try to treat it as an array of [Vector&lt;T&gt;](https://docs.microsoft.com/en-us/dotnet/api/system.numerics.vector-1?view=netcore-2.2)s. You might not be able to directly cast it unless your array is already 16-byte aligned (unlikely).
possibly not what you're hoping for, but maybe it would be better to create your own nuget server in AWS and then reference that instead of [nuget.org](https://nuget.org) from your build EC2? that way you can control exactly what packages are available and the requests will all be internal to AWS so you can restrict outbound access on the firewall rules as well.
Hey! That's my tech stack! Love seeing someone else use Core + Vue.JS \^\_\^ Just curious, are you using Azure to host, or a different provider? Any takeaways or learned lessons you want to share from the project?
You're right, not in this case. But OP asked for tips to avoid bad habits and `DateTime` is a bad habit imho. 
I'm running on AWS. Win Server 2016 on EC2. Plus MySQL running in RDS. I'm probably going to write a series of technical posts as time goes on. I'm going to be supporting this project for a while. I can't say there was any one major takeaway.
Use pointers. Treating shorts as longs is rarely a good idea and isn't going to work. You need to consider how bytes are stored in memory and possible alignment issues
.Net Core 3 is the newest version of .Net Core and will run cross-platforms, just like .Net Core 2. WinForms and WPF will be a SDK package that runs on top of .Net Core, but is still be Windows Specific. This has a number of benefits for WinForms and WPF developers: * they get the latest performance and security improvements from the .Net Core - faster startup, better memory usage (e.g. Span&lt;T&gt;). * .Net core does not have to be as backwards compatible with .Net Framework so can change things to make improvements * Can bundle the version of the .Net Core they use along with the application - instead of depending on whichever version of the .Net Framework is installed on the users machine. There will be linkers coming (some based on work by mono I believe) that will allow these to be packaged into a single executable. Electron is a cross-platform UI framework that allows you to host a node.js application inside a Chromium based window. It was created by Github I believe for the Atom editor, but is now being used by VSCode amongst other things (other Microsoft apps also use it, like Azure Storage Explorer and the new SQL Operations Studio).
You can overload methods if they are *virtual*. Consider using the r/learncsharp or r/learnprogramming for questions like this.
&gt; WinForms lives again? WinForms never died. Microsoft seems to be trying to move in a direction to EOL the classic .Net framework in favor of Core. To do that they are going to need feature parity in Core and WinForms/WPF were huge gaps in that parity.
Yes you can. Most methods are not static. What was the wording of the error message? If you read it carefully it should explain exactly what the problem was. Some people treat error messages as "flags". A message means an error happened; it's up to me to figure out what it is. An error message is more than that - it often tells you what the issue is and how to fix it, if you read it carefully.
That's override not overload.
You can’t overload methods inside a method. You’ll need to show exactly what you wrote and what was the exact error message. Otherwise nobody can help you with this. 
Cripes. Yes, I totally misunderstood. Will delete the comment and find another cup of something caffeinated.
His statements and the fact he works at Apple speaks volumes about the quality of their engineering staff
https://docs.microsoft.com/en-us/dotnet/framework/wpf/graphics-multimedia/shapes-and-basic-drawing-in-wpf-overview
From what I can see in my idea and online there doesn't appear to be any comparison operators for Vector&lt;T&gt; were you thinking any extension method for vector? &amp;#x200B;
NuGet package restore is currently having issues. We've been dealing with this for most of the day https://status.nuget.org/
... which in turn makes the code hard to analyze and maintain. It basically makes everything a globally accessible static variable, just with a more verbose syntax. So any code can use any resource without it being apparent from the API. Ideally we would even use a DBContextFactory that is specific to just the tables we need, but that's probably overkill for most projects. (Maybe consider it when you are at 100+ tables or 10+ db schema)
The service provider is great used when you do not control object construction. For example, controllers in ASP.NET MVC or Core project. Or in other words, it belongs in framework code, not application code. 
Dockerise it then you don’t have to maintain a full server. I’m slowly dockerising all my projects and using azure kubernetes but you can just use container services provided by anybody. Easy updates. Easy maintenance. Easy to scale. 
&gt; before they moved their client to a native solution Where did you hear that? At least for me (Win 10), Slack client still starts bunch of Chrome processes and consumes like 30% of available memory, which are the sad telltale signs of an Electron app.
&gt; What I feel like I should do is to create a factory class for DbContexts Yeah, you probably should. EF DbContext's often stand out from other dependencies in that you often need differing lifetime management strategies for your context within the same app. Here's a really good article covering various aspects of managing DbContext lifetimes: https://mehdi.me/ambient-dbcontext-in-ef6/
No worries – although the project can get intense at times, I try to practice self-care. I’ve set the correct operator color. Now things should look a bit better. [https://imgur.com/a/9ltacGj](https://imgur.com/a/9ltacGj)
You gotta wait until some madlad ports wpf
I think this is a good post that tries to simplify terminology we use everyday to describe language concepts. I do think there should be a conclusion though. It kind of just ends. 
Docker is something I'm interested in, but it also makes me nervous. Having easy access to the server for debugging release only bugs (which, in my experience, are always more frequent than you would think) is pretty invaluable.
Thank you! Feel free to report any issues that you might encounter.
&gt;Does the new Core 3 mean you can write Win32 Winform applications and they work on Linux? No. You _can_ partially run WinForms apps on Linux using Mono, because they have their own partially compatible WinForms implementation. But using .NET Core, you cannot (yet). And Microsoft isn't particularly interested in porting efforts. (But if someone _does_ want to try porting them, they can, due to them being open source.) What .NET Core 3 _does_ mean is that WinForms applications _on Windows_ will now run using .NET Core's runtime instead of .NET Framework's runtime. This is useful because neither .NET Framework nor its runtime will see features added at the same pace as .NET Core has, and some features likely won't ever be ported at all. Running your WinForms app on .NET Core 3 means you can take advantage of various runtime improvements that will likely never make it to .NET Framework, such as [various performance improvements](https://blogs.msdn.microsoft.com/dotnet/2018/04/18/performance-improvements-in-net-core-2-1/). &gt;I thought all that was supposed to be "dead," along with WPF. For better or worse, neither WinForms nor WPF are dead. As to whether big advances to them will still happen, that's another question. Given that they are being open source, there could be renewed interest, though. Your questions about web apps and Electron seem all over the place, so I'll skip them. Suffice to say that, yes, you can use Electron to make a desktop app, and yes, in many cases, a web app will be a good enough option or even a better one.
Avalonia UI is getting there. But every time I go to it so far, it's been a bit of a pain to get working and there are some visual bugs when dragging from a side docked position
&gt; framework will never go away in the same way VB.NET will never go away Note that VB is still seeing major releases: https://github.com/dotnet/roslyn/blob/master/docs/Language%20Feature%20Status.md I'm not sure Microsoft quite knows what to do with it, though.
Preview 1 was released last week: https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-net-core-3-preview-1-and-open-sourcing-windows-desktop-frameworks/
&gt;Nope, you'd be better off waiting for UWP to be ported to Linux and Mac sometime in the distant future. That's basically Xamarin Forms. (Though in practice, targeting macOS from Xamarin Forms is… not yet a great experience.)
Visual Studio vNext is available as a preview with C# 8 support.
The one major thing I'd change about that stack is TypeScript.
you don't need it to be 16byte aligned to use System.Numerics. You can just iterate over the array Vector&lt;T&gt;.Count shorts at a time and load them and do your thing. The perf hit for unaligned loads isn't bad on newer cpus. 
Thanks a lot for the link, that answered a lot of my questions 
I'm definitely interested in typescript. I considered it when I was starting but I decided against it as I was mostly interested in getting this project off the ground, rather than trying to learn something new. It's a decision I'll revisit down the road.
Now it’s ported to Dainty. Run `git pull &amp;&amp; yarn &amp;&amp; yarn build -p snazzy-theme` [https://imgur.com/a/IHmaN3f](https://imgur.com/a/IHmaN3f) [https://imgur.com/a/CJEAv71](https://imgur.com/a/CJEAv71)
No.
Sure but that's *loading in to a* Vector&lt;T&gt; () (which internally seems to use a [Register](https://source.dot.net/#System.Private.CoreLib/shared/System/Numerics/Register.cs,58c82c698a399107) type for storage; which I'm assuming is 16-byte aligned). Unless I misunderstood, that's essentially a copy from the array to the `Register` for each value first, then SIMD can be used over that as it's aligned (which it must be, as as far as I know all SSE ops *must* be 16-byte aligned, it's not just a performance thing like regular memory access). ...Whereas I was talking about specifically casting the array to a span of `Vector&lt;T&gt;`, avoiding the copy altogether. In other words, if I was going for absolute max performance here, I'd probably allocate the array off-heap, ensuring its alignment to begin with on the 16-byte boundary, and then try to cast it as a `Span&lt;Vector&lt;T&gt;&gt;` or similar. I can't *see* any reason that wouldn't work, but I wouldn't wanna bet too much on it without trying.
wow, looks sick! thanks so much!
For C# 8, they released a preview of Visual Studio 2019 which has Beta support for C# 8.
You must viewed Vector&lt;T&gt;'s page. It's a little miss-leading, because there is Vector&lt;T&gt; (the struct) and the static class Vector. [You can view all of the static methods within Vector by clicking this link.](https://docs.microsoft.com/en-us/dotnet/api/system.numerics.vector?view=netcore-2.2)
&gt; I would imagine sometime down the road they will create a linux/mac version of "WinForms" that can run cross platform. Just to clarify, I don't think Microsoft will ever port Winforms to another platform. However, I'm taking from your post that you believe Microsoft will create some kind of cross-plat UI framework on top of .net core and this I agree with. In fact, it's probably more like porting Xamarin Forms to other platforms. Cross-plat UI is _really_ difficult to get right (Basically nobody's ever done it before), there's always trade-offs to be made.
Yeah just downloaded it, just one question, it says enterprise edition (I’m a student so can’t afford it) can I change to the community edition?
Wait, what? 30%? You must have 8GB or something, because it's 60-65-55% of 4GB RAM for me...just to run a chat app.
What if I don’t want to use Unity? 
Then you find another graphics/game engine that is compatible with .net or learn how to use, Direct3d (for 3d) or DirectDraw (2d, if that still even exists) APIs from C#. While you can "draw" graphics and bitmaps on a Windows form on even in WPF - I am unsure if the frame rate and performance of using those form of graphics drawing are performant enough for games. Also using a .NET compatible game engine already solves a lot of the low-level things you would have to develop yourself.
&gt;Whereas I was talking about specifically casting the array to a span of Vector&lt;T&gt;, avoiding the copy altogether. You have to copy from memory into a register either way. Modern cpus can do magic to such that even if your memory isn't 16 byte aligned it doesn't matter much. I'm not sure if C# will let you do what you want but when you do it in C the perf is the same. 
Chill with the comments, they just repeat exactly what the code says it does.
It’s been added! `git pull &amp;&amp; yarn &amp;&amp; yarn build -p tomorrow-night-eighties`
You’re welcome!
Awesome, it looks amazing! I can also report that it works properly in VS 2019, the color theme extension was updated for 2019 so that's what I've been using. Thanks again, you're amazing!
Well I was in the same position. I really struggled to adopt Docker but now I’m moving all my apps to and terminating dedicated hosting machines. Firstly cost savings are huge. Secondly deployment is massively easier since its mostly Architecture As Code. Learn a bit of yaml no problem. The dubbing I get you. But the thing about docker is you tag each build. Release builds take up 50~100mb in registries. If you have version 8 on production and it’s buggy you roll back to 7 instantly. Pull tagged version 8 to your local machine. You can easily attach debuggers to local. Point to prod DB if you really must. I know bad practice bad sometimes weird data causes problems right. Fix bug, push version 9 to registry. Click a button on a release pipeline or script. Boom. The nice thing about kubernetes is canary releases or running multiple versions side by side. Route a small percentage of traffic to new version or use a header to target specific pods as they called. Sounds like allot of hard work but it’s not. Just learn yaml syntax for Docker. Even at work we dropped all sprints and moved to docker/ kubernetes on Azure because the Azure DevOps integration is mind blowing my easy and powerful. Do your self a favour and just watch a few recent videos. Channel9/ Microsoft Ignite... try it. Attaching to docker is also dead easy. There is a reason everybody is going nuts over it and it’s not fake hype. It’s an actual helpful thing and Microsoft invested a ton of time getting it working nicely. Just saying. Sorry fir long post. Lol 
That's helpful information for sure. I'm going to add it to my list of goals.
I think enterprise is the only edition they've released, but the preview version of it is completely free! By the time 2019 actually releases they'll surely have a community edition again.
Great! Thanks for the feedback!
Well I'm assuming that the copy to the `Register` struct invokes a second, superfluous copy *before* the copy in to an actual XMM register. It's possible that the compiler/JIT/CPU can remove that copy in the end, but I wouldn't necessarily count on it. I'd have to benchmark to find out. Maybe I will at some point and write it up on my blog.
And, just to reiterate, this is still a big win for cross-platform .NET. Even though WPF/WinForms may remain Windows-only, the fact that developers can leave Windows-only .NET Framework behind strengthens .NET Core, and thereby strengthens cross-platform .NET. They've open-sourced WinForms and WPF now, so I'd imagine we'll end up with some kind of cross platform toolkit that looks vaguely like WPF or WinForms, but without all the obviously-GDI-based stuff.
\[Look into Reflection\]([https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/reflection](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/reflection))
Are you saving all instances of the classes to a List&lt;BaseClass&gt;?
Yes the load intrinsics are sort of, not real. Imagine if you did an _mm_load_ps() on 100 pointers, there aren't actually 100 registers. The compiler is just going to do its own thing with the registers. Its just a way to make your code look like normal code instead of having to pass pointers to all the add and mul instructions and so on. It just compiles away. (or jits away in C# case) 
8.5GB to be exact :D
Good point. I have no idea how they would accomplish this, but I would imagine getting everyone on a cross platform framework would be the first step. WinForms is too integrated with windows to ever truly go cross plat, but as you said they could invest in another tool like Xamarin Forms or something yet to be made. I wouldn't be surprised if they are also revamping Windows OS itself in ways that would make cross platform applications easier to develop as well. Microsoft has really been embracing FOSS and linux lately, we might see some of that influence coming through in the OS as well.
If `a[0] &gt; b[0]`, but `a[1] &lt; b[1]`, then won't the vector solution say that `a &lt; b`? I think the best you can do with `Vector&lt;T&gt;` (which can still be really good!) is to speed up "exactly equal" tests, and then just retest unequal pairs one by one.
That’s awesome! I’m really excited for this new .net core and C# edition. Thanks a lot for your help 
Just curious if you have checked out PLinq Sort and how it compares against yours.
WinForms by itself still works only on Windows, and I believe Microsoft won't make it cross-platform in the near future. However, someone might be going to make an open source library, a 99% drop-in-replacement of `System.Windows.Forms` API, but backed a GUI toolkit for Linux or macOS.
They are all saved in a Collection of &lt;BaseClass&gt;. I'm using a list of Key Value Pairs with the instance's unique ID as the key and the instance itself as the value.
Using string interpolation is not safe for SQL queries in your code. It's better to use a SqlClientParameter. String interpolation can leave your code vulnerable to SQL injection
Any free exam dumps?
[But why?](https://media.giphy.com/media/1M9fmo1WAFVK0/giphy.gif)
[But why?](https://media.giphy.com/media/1M9fmo1WAFVK0/giphy.gif)
Ohh thank you, I'll definitely have to check this out! Looking back at the implementation you posted I don't think it's equivalent to the original statements `a.Path = [0, 1]` and `b.Path = [1, 0]` would have LessThanAny, and GreaterThanAny as true while my current simple loop would have a as the less element.
Your friend is biased. That's not true. C# is a powerful tool in your arsenal. He probably hangs around java guys who like to bash C#
That explains it. Apple is a fuckin shit company. 
&gt; Basically nobody's ever done it before Swing in Java?
Using [BenchmarkDotnet](https://benchmarkdotnet.org/articles/overview.html) and sorting 500000 of these elements for the follow benchmarks [Benchmark] public void PLinq() { Array.Copy(things, thingBuffer, scenarios.Length); thingBuffer.AsParallel().OrderBy(x =&gt; x).ToArray(); } [Benchmark] public void ParrallelSort() { Array.Copy(things, thingBuffer, scenarios.Length); ParallelSort.Sort(thingBuffer); } These are the results I get. so notably faster Method | Mean | Error | StdDev | -------------- |---------:|----------:|----------:| PLinq | 385.8 ms | 12.036 ms | 35.490 ms | ParrallelSort | 205.1 ms | 4.091 ms | 9.803 ms | &amp;#x200B;
So the MemoryMarshal works, the only problem is that earlier elements are more significant digits for lack of a better work than later ones so the ordering is not correct. There was definitely a bump in performance for the sort though.
You can try Neutronium: [https://github.com/NeutroniumCore/Neutronium](https://github.com/NeutroniumCore/Neutronium). It is designed to be used with MVVM just as a WPF application. Binding on the HTML side are done using vue.js. There is a very similar app as the one you described done in Neutronium: [https://github.com/David-Desmaisons/ReactiveTrader](https://github.com/David-Desmaisons/ReactiveTrader)
Well if you know the subclass you'll be checking against you can use the as or is operators as you loop through the area to cast the instance of the object to a known SubClass you've specified. &amp;#x200B; The technically correct way to do this, however; would be to implement a Query method in your Base Class and override it in each SubClass with the appropriate logic to query that classes properties.
You can to it easy with reflection. [sample](https://gist.github.com/Chtau/465630ca7e005d7cf22f3fdb76dbeea5)
Yeah, it was a real quick thing I slapped together. Also you might want to read /u/airbreather's comment, because I hadn't considered that when I wrote it. If you can get it working with SIMD though, it should be much faster.
Very useful technique. I've written a handy library that lets you declare these in a single line, with very little overhead. https://github.com/mcintyre321/ValueOf 
That's why it's going to work.
Title in fact does not say it all
You should look at dependency injection as opposed to a service locator. This allows you to easily unit test code too. In case you haven't heard of it, with DI one part of your application becomes the "dependency root". In a console program this might be your main function. You change your classes so rather than instantiate dependencies directly (e.g. new Class() in the constructor), dependencies are passed in via the constructor. There are many ways you can do this, e.g. manually, or using a library like Ninject. With something like Ninject, you would configure the dependency injection and then ask it to construct your object. It would then look at the constructor and work out what it needs to pass in based on your configuration. This allows you to easily change the "scope" of the injected dependency. For example, you could choose to inject an object as a singleton, in which case it will keep the object alive, and re-use it any time it is needed in object construction. Or you could have it in transient scope, where a new copy is given to every constructor in the object graph. Or you could tell it to reuse an object for every constructor involved in *this* injection, but next injection use and share a new object with every constructor.
There are a number of ways to accomplish all of this, but it really depends on your requirements and goals. Allowing your authentication provider to also manage roles, JWT checks and user data might be beneficial for a variety of reasons. I don't have experience with Auth0, but I can tell you some of the benefits from the perspective of FusionAuth (a free identity management platform I'm on the dev team for). * If you use FusionAuth for roles, then you can also setup Groups (for additional roles) and execute user search queries by roles and applications * If you store your user data in FusionAuth, you can view it in the management UI and also execute user search queries on this data * If you leverage FusionAuth for validating JWTs, you don't have to manage keys and key rotation * If your authentication platform isn't the source of truth for authorization or other user data but you need to store it there also, then you will be constantly syncing data. Data syncing is always brittle and error prone. You can also end up with orphaned data or missing data as well. @meshtron mentioned that they were multi-tenant and that is a use-case that FusionAuth also handles. You can define tenants and applications inside tenants. Each application can then define any number of roles. Identities are isolated inside a tenant and you can assign roles to identities for each application. I think the biggest benefit for most applications of storing your user data and roles in the identity solution is the ability to query and manage users based on this information. FusionAuth uses Elastic search for this and it makes searching for users by complex queries simple and fast. Or you could add Elastic search to your user database and get the same benefits. The other benefit is that you only have a single source of truth. That means that all JWTs, validation and all the user data come from a single place and it is always correct. &amp;#x200B;
I think I need to clarify. There's a _ton_ of cross-platform UI frameworks out there, but they all suffer major tradoffs that don't always work. Try and port a Swing application to Android or iOS and you'll have a bad time.
Right. But unless the JIT has some really clever logic around that internal `Register` type, I think that C# will probably still copy the data in to a `Register` first, and then the intrinsic functions will likely load the data in to real registers on demand from that type. What I'm saying is that we can hopefully avoid that initial copy by simply casting the existing data to an array of `Register`s (via array-of-`Vector&lt;T&gt;`), rather than loading them in to new `Register` structs via the `Vector&lt;T&gt;()` ctor.
What I would really love to see (I may be thinking of it incorrectly) is an [asp.net](https://asp.net) core with vue.js that still uses razor but allows for the full compilation of components. Where I feel it would be a hybrid type of situation. I enjoy razor and the c# back end but enjoy using vue.js for parts of the front end but not the entire thing. Does this even sound reasonable?
Flutter did it.
To me, using razor means reloading the page on every request, whereas a JS framework like Vue lets you heavily leverage AJAX requests. To me, that's the main reason I'm not sure this idea would work out.
&gt; But unless the JIT has some really clever logic around that internal Register type It does, I can assure you it isn't actually copying data into a struct like it seems like it is. The Vector types and it's functions are special cases just like intrinsics in C are. 
It's typical that your DI framework has some sort of service locator / container which can resolve objects. It's a bad idea to use this as some sort of "god dependency" that is passed into the constructor of all your classes instead of their actual dependencies. Doing so, would only hide the true dependencies and make the code harder to follow and test. &amp;#x200B; If you were developing a modular application, perhaps, where each module was responsible for registering its dependencies and resolving its root object(s) then that may be a time were injecting it directly into each module's registration class, that could make more sense. 
Flutter is _doing_ it, you mean. It only hit 1.0 about a week ago and anything beyond iOS and Android is still experimental. It's one of the best attempts so far, no doubt, but it's still got some ways to go.
This blog post series summarizes optimizations that apply to sorting pretty well: https://blog.marcgravell.com/2018/01/a-sort-of-problem.html I'm assuming you have an array of `MyObject` values somewhere and thus less than a few billion of them. Can you come up with a mechanism that would convert a given `Path` into a single `ulong` or even better a `uint`?
The main posts and stuff would be done through razor, the main viewmodels and stuff. Though anything client side would be done with vue. Adding multiple elements, loading other data, using some of the vue libraries like quill.js and so on. Over all it probably has to do with me struggling to learn certain aspects of JS. I really like C# and JS has always seemed so much more cumbersome, for example intellisense. Jumping around to figure out what is in the store or remembering the string used for actions/mutations just sounds so frustrating to me.
I totally get it. When I right C#, I usually have a high degree of confidence that what I'm doing is correct, even without testing anything. With HTML/JS/CSS, everything always feels like trial and error.
Exactly! Which is where I think having some hybrid version of it would be awesome. Get the awesome effects of easy client side dom modification and dynamic content, while still having core items go through C#/Razor. Also the fact that things with JS always seem to be constantly changing so just as you feel you got something down, **boom**, things change. Not to say its bad, just frustrating.
I wonder is Blazor would interest you. It's client side C#. I haven't looked into it yet though. https://blazor.net/
[Xamarin.Forms](https://docs.microsoft.com/en-us/xamarin/xamarin-forms/platform/) can target Linux and Mac. Still in a preview state though.
I don't see how that could work... You could copy in to a Vector&lt;T&gt; then replace the source data... 
Any source on where I can learn more about these more in-depth type of subjects?
I'm sorry I haven't replied in a long time, but: \- I have past knowledge of the fundamentals of Python and a bit of Java. So I've got a basic understanding of programming. \- Short term, just to learn all the fundamentals and basics to the point that I can extend my knowledge with libraries by myself (I'm not too sure if this is short term tho, it might be different for everyone, I personally take my time so I have a solid understanding) \- I am learning through a video course on PluralSight and it's great! I get to program, take notes and of-course learn at the same time \- I would like to have a book as something to refer to to solidify my understanding of different topics and something to have by my side in the future. Not really looking for a massive book, but enough information to act as a side reference &amp;#x200B; I've been quite busy with work and haven't been able to check back so should I repost it again? This post is quite deep down and away from public eye. &amp;#x200B; Thanks!
&gt; What I'm saying is that we can hopefully avoid that initial copy by simply casting the existing data to an array of Registers (via array-of-Vector&lt;T&gt;), rather than loading them in to new Register structs via the Vector&lt;T&gt;() ctor. This definitely works: I have done it using Unsafe.Read&amp;lt;Vector&amp;lt;T&amp;gt;&amp;gt; from a chunk of memory allocated with AllocHGlobal, and it yields a sizeable performance improvement over initializing the vectors using the constructor.
Yeah that's what I suspect. Thanks for the confirm! I might blog it at some point.
A bit confused here, how is that any faster? Doesn't .Contains (x) just run a for loop on the dictionary? How is that any different than directly running a for loop on an array? 
The bug? Fudge knows. Why is WPF being ported to .NET core so that it's cross platform? Because it's literally the most demanded feature of C#/.NET EVER, and Microsoft have not realised that it might be a good idea to dominate the cross platform software store.
Yes but that was usable in production. Same story as with bootstrap 4. Beta, but people are using it for years. But I agree, web target is hella experimental. And Flutter follows react principals, I wonder what that means for angular.
Read through this stack overflow discussion, its about C but the same stuff is going on with System.Numerics: https://stackoverflow.com/questions/11034302/sse-difference-between-mm-load-store-vs-using-direct-pointer-access Best way to wrap head around it as don't think of it as C# code. The load isn't really copying anything anywhere, its just sugar for the host language. The compiler decides when to put data from memory into a register on it's own. 
`.Contains()` is a member of the IList interface, but your `options` array is just that - a string array. Either declare `options` as a `new List&lt;string&gt; { ... }` or do an `options.ToList().Contains` (the first is preferred).
Actually that's a great point. There only a few million items and I should be able to generate an id from the path that maintains the same order. I'll definitely have to check out this blog post as well.
It would also be possible to put a `using System.Linq;` at the start of the program, that would provide a `.Contains()` extension method to any `IEnumerable&lt;&gt;`
Maybe you should look into [how Color is actually implemented](https://referencesource.microsoft.com/#System.Drawing/commonui/System/Drawing/Color.cs). Color has a couple of constructors, and each of the static constructors is initialized to a meaningful value using one of those.
I'm not sure I fully understand the question but I'll try to address at least what I think is part of it. Structs are value types (like int, double, etc.) while Classes are reference types. You don't necessary have to "new" a struct just like you don't "new" an int. Simple declaring an instance of the struct creates space for it on the stack. Like other value types, structs are copied by value and not by reference. What this means is that after execution of this code: Make make1 = Make.Toyota; Make make2 = make1; make1 and make2 point to differenct locations on the stack - they are not the same instances. If the Make struct had properties, you could change a property of make1 and it wouldn't affect make2. Classes on the other hand are copied by reference. For example, after execution of this code: Car car1 = new Car(Make.Toyota); Car car2 = car1; car2.CarMake = Make.Honda; this CarMake property of both instances will be Make.Honda because both car1 and car2 point to the same object on the memory heap.
Ah yes, I'm so used to ReSharper doing that for me that I forgot, thanks 🙂
Nice. Reflection is definitely what I was looking for. Thanks!
Why are the attributes not on the arguments themselves?
Thanks for your help midri. But Dlution pointed me in the right direction
This is great, now I can have my favorite theme. I get this error when building: (node:5608) UnhandledPromiseRejectionWarning: Error: ENOENT: no such file or directory, open 'D:\Dev\Dainty\public\colors.html' (node:5608) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1) (node:5608) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code. However it did build the .vstheme file. Great work! And once again, thank you.
The problem is that you won't be able to tell which make the car is using your method. Make has no data, so when you try to use Equals, they are all the same. This makes your usage useless for any real purpose. The reason Color has a lot of static Colors is that they have a set of preset values for RGB that you can use. Each static Color has their RGB set. Structs don't have to be constructed since they can't be null, but they will have default values (in your case Make doesn't have any values). Static means that the variables belong to the class as a whole, not to any single instance (though your instances are basically empty because you didn't specify any data. It will probably still take at least one byte of memory though). In your case, you just want to keep track of which make it is, not trying to provide a set of common values for the Make datatype. You will want to use an enum to specify an explicit set of makes that your car can be, and then you can print the make or compare the make, or even do different things depending on the make (though this is a slippery slope).
Is this supported by Microsoft? I see it is hosted under [https://github.com/aspnet](https://github.com/aspnet). It does look interesting though.
It's advertising. The idea is that you'll find a must-have enterprise feature and talk you're boss into paying for it. Or it just sucks to release multiple preview builds.
The honest answer is because when I built the first cut, I didn't want to make modifications to the foundation, I also didn't really know about the argument attributes. Then I could sell it as the contract attributes sort of double as comments. Do you feel it would be a significant feature to have them on the attributes? I can look into what that means for modifications in the foundation.
[AdaptiveClient](https://github.com/leaderanalytics/adaptiveclient) provides a pattern for a service manifest (aka facade) which is 100% DI and NOT a service locator. Your service manfiests can be as large or as granular as you like. You can call any service from within any other service. The facade pattern has been around for a very long time. You can call it a violation of [Law of Demeter](https://en.wikipedia.org/wiki/Law_of_Demeter) but I'll gladly take that punishment. It's damn useful. You inject `IAdaptiveClient&lt;IMyServiceManifest&gt;` and from there you get: await client.TryAsync(x =&gt; x.GetUser(userID)); // where x is any service i.e. ICustomerService, IUsersService, etc. &gt; What I feel like I should do is to create a factory class for DbContexts, [AdaptiveClient](https://github.com/leaderanalytics/adaptiveclient) does this for you. And provides a registration helper to help you with all EF objects and tasks: DbContext, migrations, database initalizers, etc. See the [Zamagon Demo](https://github.com/leaderanalytics/AdaptiveClient.EntityFramework.Zamagon).
Running a website as a desktop app is really just a lazy ass way to make UI at the expense of the end users resources. I agree that Electron was an interesting solution for some projects, but the new "kid just out of coding boot camp" idea of web appa being the future and desktop resources being expendable is extremely reflective of their experience and knowledge on the subject entirely. Build an application that's perfect for your target audience. No one needs or wants to use an app that doesn't respect the user. We have enough of that shit already.
The idea is that people can build on from it. Microsoft released it all under MIT license and said they won't allow upstreamed commits for multiplatform. Read between the lines, that is them saying anyone can do it for them. They just don't want to end up supporting the UI officially outside of windows.
If it's still feasible foundationally to use them on the arguments themselves, it would remove the need for the string argument in the attributes on the method. Makes it a little cleaner, more explicit, and easier to maintain. 
Yeah. I agree, I will look into what it’ll take in the IL weaver to do that! Thanks for the great idea!
In Visual Studio you can run (static) code analysis. Not sure of any dynamic ones. 
I have used PVS Studio but haven't found it significantly better (in actual use) than the built-in analyzer in Visual Studio.
* SonarQube is what is probably most used in large enterprises (big corps, banks, wall st, etc). * NDepends is another common one. * FXCop. * [Visual studio 2017+ itself can calculate a lot of these metrics](https://docs.microsoft.com/en-us/visualstudio/code-quality/how-to-generate-code-metrics-data?view=vs-2017) not sure what you mean by dynamic code analysis. static code analysis would be analyzing the code at pre/at compile time. i'm guessing dynamic would be runtime analysis? idk..
In place of the \`\`\`!options.Contains(choice) \`\`\` you could try something like \`\`\` options.Where(option =&gt; option == choice).Count() &gt; 0 \`\`\`. Apart from that I would move your options out of global static space and to maybe a GameSettings/ Gameboard class? That has a method called something like "GetGameOptions()". Refactor the do, while to just a single while..., or get rid of it all together and instead just have a single while as part of the game loop. Maybe make the "Rps()" method more readable, not sure what Rps means, as well as the "r" variable. Also, it would be cool to see some actual game logic to determine the winner. &amp;#x200B; So overall don't define public variables like that, if you ever need something to be global you should try to ensure it is correctly encapsulated and name things better. 
I know Resharper can be categorized under static code analysis in a way but didn't know that ANTS can be used for dynamic code analysis. We have ANTS profiler and ReShparper licenses. I will explore them. Thanks.
Damn, I was so close. 
Use what ever language will get you more customers or which your customers will pay more for. Customers don’t care? Then neither should you.
Fair enough. I just thought I'd be more productive if I used one programming language for the whole stack, plus since I'll be using Microsoft technology (SQL Server, Powershell and Windows Server), it would be good to keep it all under the Microsoft banner. Thanks for the reply.
Try React Native or React. You'll enjoy it.
That’s great, thanks! Ah, there seems to be a race condition with one of the pages. I tried very quickly to reproduce, but wasn’t able to. These pages will be ported to \`dainty-site\`, and I’ve disabled them from the build of \`dainty-vs\`. This will make the build a bit faster.
Have you considered [C# in depth](https://www.manning.com/books/c-sharp-in-depth-fourth-edition)? Look through the chapter titles and you can see it runs through a lot of the languages features, if your after something that will provide a great reference to get a better grasp of the language it might be a better companion if the "how to program" bit is already covered elsewhere.
Hash tables are one of the fastest structures. Way faster than linear lookup.
First, yes, you can overload non static members. Second, the error you said that was thrown is most likely because you tried to declare a method inside of a method, or that you’re trying to overload the Main method which I don’t believe can be overloaded mainly because that’s your programs main thread, it’s entry point. If it were overloaded then how is the compiler supposed to know which Main method is the entry point? Unless Visual Studio has compile options for this? Static or non static, methods or functions can be overloaded. As to why you want to overload the Main method, I wouldn’t know.
Please stop.
&gt; but couldn't find any solutions that fits criteria. Confusing... so what are the criteria? &gt; The major problem is nobody knows what to expect out of the tools. Read the manuals? 
What you're asking about is why the properties? That's the factory pattern; there are already defined colors in the world with specific values, Microsoft is just being nice to you so you can refer to them by name. That part really has nothing to do with being a struct. System.Text.Encoding also has a few static Encoding factory properties. &amp;#x200B; As for why they are a struct? Here comes the fundamental conceptual difference between a reference and a struct. We can both agree that 1 is not 2, right? 1 != 2 So the very value itself defines the object. Whereas a Person object can have a name, address, age, and you're free to choose what defines this object in your system. Maybe you have PersonId property. So when the person later changes their name, they're still the same person. The name change will be showed in all parts of your application, without creating a new user. If you did this with the R value of a Color you'd have a completely different color; you can't take the Color Red, set R to 0 and still have Red. Which is why it's a value type; the values themselves define the object. Change anything and you have a new item. Which is also why structs can't be null - as the values of value types are the definition of the item they must be *something*.
What you're asking about is why the properties? That's the factory pattern; there are already defined colors in the world with specific values, Microsoft is just being nice to you so you can refer to them by name. That part really has nothing to do with being a struct. System.Text.Encoding also has a few static Encoding factory properties, and it's a class. &amp;#x200B; As for why they are a struct? Disregarding the technical details with stack vs heap, here comes the fundamental conceptual difference between a reference and a struct. We can both agree that 1 is not 2, right? 1 != 2 So the very value itself defines the object. Whereas a Person object can have a name, address, age, and you're free to choose what defines this object in your system. Maybe you have PersonId property which defines it. So when the person later changes their name, they're still the same person. The name change will be showed in all parts of your application, without creating a new user. If you did this with the R value of a Color you'd have a completely different color; you can't take the Color Red, set R to 0 and still have Red. Which is why it's a value type; the values themselves define the object. Change anything and you have a new item. Which is also why structs can't be null - as the values of value types are the definition of the item they must be *something*.
Personally I use ViewModels in the Web / API layer... It takes care of converting Entities/Models from the domain. Every call has a ViewModel, which may seem like a lot of work, but it provides a great layer of separation. &amp;#x200B; I've seen DDD guys put them in the Domain layer (is that what it's called?) which has its merit, but IMHO DDD requires a pretty big project to require that much structure.
Personally I wouldnt put images in a database again. Use an external file store of one sort or another. Either local storage or some sort of web file store.
no
Step 1 is the Roslyn Code Analysers. [See this post](https://www.reddit.com/r/dotnet/comments/a4v1yg/7_reasons_that_roslynbased_code_analysers_are/)
Uh, yeah kid. This sub isn’t your YouTube channel, and most people here are interested in lower level concepts and more complicated projects like databases, IoT, etc. No one here wants to watch a video of a child kiddy scripter making something that would take us less than 10 seconds and is completely pointless and malicious. So please, unless you have a question or are trying to learn then stop with your terribly dumb projects. P.S. I use Internet Explorer you little shit.
Watch out, he might use his ultra non kiddy scripting programming skills to infect your computer with the “worlds most dangerous virus”.
NDepend is good. It has a LINQ provider build in so you can write a bit of code to query your codebase. It's a bit fiddly to get the syntax right at first, but very powerful. It has a lot of other excellent features. SonarQube I never got on with. It felt like one of those solutions that claim to do everything because "If it isn't there you can just write your own plug in!". It is cross platform if that's useful to you. I felt that diluted its value as a pure .NET team.
You would use entity framework and send your image as a byte array into a varbinary column, for SQL server. Or you could use FileStream. It is easier to keep these things in the database, but if you're using SQL server Express and want to keep using that, then store your images outside the database. Save upload to Amazon s3 or azure blob storage and save some reference to that in a column.
If you're in a participating university you can get the Enterprise edition for free via [Microsoft Imagine](https://imagine.microsoft.com/en-us/institutions/access), alongside Windows licenses and some other software.
Did you find a workable solution?
Use whatever you can ship faster. Nobody care for the language you are using. And if you really want to have apps on mobile and windows: make an api with python or c# and consume it in any other language you want. 
* How big is this minimum viable product? * How much time would it take to rewrite? * How much time do you have? * How familiar with .Net are you? I love ASP.Net Core but unless you have the time to learn a new stack comfortably it is **not** worth completely restarting. Code is a means to an end and what matters is the final product, that being said if you believe it to be the better choice and a switch won't hinder the progress of the application then it's not automatically the wrong decision... And be weary of this wonderful idea of using only one language, it sounds great in theory but it's not worth picking a technology just because you can use the same language. In summary, i echo the sentiment that your clients interests are #1 priority, go with what delivers the best product for them. 
Look up how to add a project reference for your IDE of choice. Once you have a new project and your existing one references it begin moving things over to the new project, your IDE should help you fix the broken imports as you shift files. 
At this time of your question the answer is: it's an experimental project Ms is doing which may one day become a support product but isn't currently.
Don't do it. It is a bad idea. Too convoluted and complicated. You are adding additional points of failure and it isn't good for performance.
&gt; Microsoft have not realised that it might be a good idea to dominate the cross platform software store I'd say there are some fairly intelligent lads over there pointing out to the sales lads just *why* it's a major task and not something to check on a list. I'd still love to see it and would immediately jump on it but I can imagine it is not a simple task.
Aside from the performance problem, you're asking how to literally use Visual Studio Gui to upload an image into a DB? I'm not sure the built in Gui has that feature.
Thanks for the tip, however, eventually I’m going to send this entire project to my professor. And he should be able to open the project as a Zip. file with all files included locally on his laptop. Isn’t there an easy way for this without extern database tools. For example, adding the .jpg file somewhere in my local repository and creating a path in my visual code to the image through my respository? So when I send the entire project in zip. file the .jpg will be included in the zip so my professor doesn’t have to connect to our database(my project will not be hosted, it’s just an offline project for my uni assignment). 
I understand the question is not framed properly. I read manuals of several tools but couldn't get a picture of what exactly does a dynamic scanning tool supposed to perform.
I tried to do it, but it seem to miss a lot of packages. Should models which is used in the viewmodel also transfer into the same project?
It should be under View -&gt; Toolbars -&gt; Standard. But, this is Mac so I'm not completely sure.
This is pretty much on the spot. CONTAINS is for varchar/nvarchar. If you wanted to actually do a range change for times within that date, you'd have to do something like this: DECLARE @fromDate DATETIME = '2018-12-10 00:00:00'; DECLARE @toDate DATETIME = '2018-12-11 23:59:59'; SELECT * FROM [table] WHERE [table].[timestamp] &gt;= @fromDate AND [table].[timestamp] &lt;= @toDate 
What problems are you having?
There’s already a community version, if you run the visual studio installer you can see all versions
Where is wizard hut?
https://docs.microsoft.com/en-us/aspnet/web-api/overview/getting-started-with-aspnet-web-api/tutorial-your-first-web-api This is all you will need for start.
Git gud
You need two modules: 1. ETL ([https://en.wikipedia.org/wiki/Extract,\_transform,\_load](https://en.wikipedia.org/wiki/Extract,_transform,_load)) module. Its responsibility should be get data from external api, transform data and load it to db. 2. API module - your API. Both modules (logical separation) could be included on the same component or separate component (physical process separation). Decision is up to you. &amp;#x200B; You are new to . NET so this is my recommendation: \- Create [ASP.NET](https://ASP.NET) Core application from webapi template by command: dotnet new webapi --name "YourAppName" \- You need some background process for ETL module. You can use Hangfire or Quartz libraries, get it from Nuget to your app. \- Implement logic of these ETL jobs. \- Implement your API. You can use microORM Dapper to execute raw SQL against target DB. \- Keep implementation for ETL module and API module separately - in different folders or even dlls in case you want to split this component in the future. Good luck :) &amp;#x200B;
What kind of project is it? What is the project setup? What are you trying to build?
He is talking about WPF. 
I haven't looked at your code, but we might use it in the future. Currently our VDF-parser at work is a bit ... simplistic: var pathVDF = File.ReadAllLines(pathsFile); Regex pathRegex = new Regex(@"\""(([^\""]*):\\([^\""]*))\"""); foreach (var line in pathVDF) { if (pathRegex.IsMatch(line)) { string match = pathRegex.Matches(line)[0].Groups[1].Value; libraries.Add(match.Replace("\\\\", "\\")); } } ...it hasn't broken yet.
Are you using a MVVM framework?
Thanks mate checking it right now looks good \^\^
Do you really think you need to comment EVERY LINE OF CODE to understand it?
@[kamgrzybek](https://www.reddit.com/user/kamgrzybek) really thank you man . what an answer . i appreciate every second you spent trying to give me an answer . Thank you very much i really was felling missing up and in a maze . now i feel more comfortable and know where to start . &amp;#x200B; Thank you very very much . god bless you \^\^ .
Like what's the point: ```csharp if (!CaseSensitive) //If not case sensitive, then convert the name to its lower case variant. name = name.ToLower(); ```
If it brings better understanding, why not? I think it is a bit to much too, but sometimes It may make it easier to understand what you self has written (almost like writing pseudo code along with normal).
No problem. About folder structure, I have recently wrote article about Feature Folders - [http://www.kamilgrzybek.com/design/feature-folders/](http://www.kamilgrzybek.com/design/feature-folders/) . This is approach when you structure your code focusing on use cases rather than technical aspects. Check, maybe helpful for you too.
I can't confirm that, but it's working fine now (for me)
Hmm, you’re correct - link is not working in Apollo only.
In case you haven't figured it out yet from my other vague comment, here's some insight to this problem. If vectorizing this loop will help, then it's because a lot of the beginning elements of the arrays are identical. So you should focus on optimizing that. private static int CompareTo(MyObject a, MyObject b) { if (a.Path == b.Path) { return 0; } // assumes a.Path.Length == b.Path.Length int i; int count = a.Path.Length - Vector&lt;ushort&gt;.Count; for (i = 0; i &lt; count; i += Vector&lt;ushort&gt;.Count) { if (new Vector&lt;ushort&gt;(a.Path, i) != new Vector&lt;ushort&gt;(b.Path, i)) { break; } } while (i &lt; a.Path.Length) { int cmp = a.Path[i].CompareTo(b.Path[i]); if (cmp != 0) { return cmp; } i++; } return 0; } If you wanted to get really cheesy with it, you could dispatch it so that the vectorized parts only run when `Vector.IsHardwareAccelerated`, and I imagine you can speed it up a tad by using `System.Runtime.CompilerServices.Unsafe.ReadUnaligned&lt;Vector&lt;ushort&gt;&gt;(ref a.Path[i])` instead of `new Vector&lt;ushort&gt;(a.Path, i)`.
Just off the top of my head, we most commonly use `HashSet&lt;T&gt;` for tracking boolean truths. For example, there are sections of code that need to only run against "patrons who have had an appointment within the last 30 days". Rather than run an additional query, we simply add patron IDs to a hash set as we spot those qualifying appointments during an initial pass of all appointments. Later, we can then call `patronsLastThirtyDays.Contains(id)` to answer that question. Another common usage is filtration. We have inclusive sets (value _must_ be in the set) and exclusive sets (value must be _absent_ from the set). `HashSet&lt;T&gt;` works great here.
[https://www.youtube.com/user/Unity3D/playlists](https://www.youtube.com/user/Unity3D/playlists) The Unity youtube channel actually has some tutorials that might be helpful.
Thankyou
What you've got there is quite a long list of smaller problems that you need to solve! 1: needing multiple enemies 2: needing enemies to be able to move along a set path. 3: needing enemies to know when they're on the screen or not. 4: Needing enemies to be able to instantly jump to a set location back on the screen. Break the problem down in to smaller ones, start with getting more than one enemy working at a time, You'll likely want to create a class of object to do so.
Those are good examples, thanks!
Why? Ninject is a specific tool that helps solve specific kinds of problems. If you don't have those problems, then don't try to solve them using Ninject. If you do have those problems, then look at the Ninject documentation for how it helps solve them. I've had a more-or-less positive experience doing what you describe, but we also already had a mostly hand-rolled service locator that we initialized in one spot, so it was easy enough to rewrite that to act as a caching wrapper around a different `IServiceProvider` instance (which Ninject's kernel implements). Your mileage may (and probably will) vary.
Yea, that’s overkill and redundant. The code speaks for itself in this moment.
So here is the thing, in the long term your turn around time will increase, you will have to endure quite a bit of a learning curve at the start though. From personal and professional experience I can however tell you that Xamarin.Forms is a viable option if you do not need to do platform specific work. For data capture apps with a mobile and desktop front end, Xamarin.Forms is my go to. Xamarin.Forms have added native WPF and Gtk support, so if you want to target multiple desktop and mobile OS, this is the way to go. 
So that people won't take dependencies on specific values, which lets them change the hashcode algorithm later without breaking anyone's software.
Removed: Rule 4.
WPF ViewModels have nothing to do with MVC view models.
I would recommend moving views top a separate project, but not the view models. View models are tightly coupled to the design of the view they model. For example, the DetailPaneVisibility property makes no sense without a matching detail pane. Data models, services, etc. can and should be tested without the UI. But VMs, I really don't see the point. 
It’s called casting.
Glad you got it working, I will say that next time you'll want to post your code so we can see EXACTLY what is happening. &amp;#x200B; Congrats on getting it working. One of the Rose Rules of Development is the moment you ask for help is exactly one minute before you figure it out yourself. (usually and especially when there is someone near to see your frustration and humiliation) 
Somebody has to embody the anti-pattern. But yeah, having this many comments is truly repugnant and antiproductive.
Because it does not bring better understanding, and actually causes harm and massively increases maintenance costs.
Your question is not really clear. I will answer with what I think you mean. Controller actions for CRUD operations don't belong on your ViewModels. They blong on your services. public class ArticleViewModel { private IArticleService articleService; public ArticleViewModel(IArticleService articleService) { this.articleService = articleService; // makes calls to your repository which calls your database } public void SaveArticleCommandHandler(Article article) // handles button click { articleService.SaveArticle(article); } public void DeleteArticleCommandHandler(Article article) // handles button click { articleService.DeleteArticle(article); } } See [Zamagon Demo](https://github.com/leaderanalytics/AdaptiveClient.EntityFramework.Zamagon) for a working example how to architect web or WPF project. 
that's what i assumed you meant by dynamic analysis. like run-time analysis is usually performance/memory stuff. in .NET it would be allocations, garbage collections, and stuff like method execution times and stuff. what exactly did you mean by dynamic analysis? as C# is a statically typed language.
I doubt this is the way to optimize this problem. OP is looking to sort an instance of `MyObject[]` by the value of a `Path` property on that object. Presumably there is some code to convert `Path` into a representative `uint` or `ulong` which would sort in the same order (this can be assumed because he has a array of the parent object and thus less than 2^32 of them). OP's problem can be boiled down to something like this pseudocode: static ulong ToSortingValue(MyObject o) { ... } ulong[] sortingArray = new ulong[myobjs.Length]; Parallel.ForEach(myobjs, (item, index) =&gt; sortingArray[index] = ToSortingValue(item)); BranchlessRadixSort.Sort(sortingArray, myobjs); The improvements you are suggesting still leave you with a non-inlinable `O(n*logn)` method call sorting operation and likely numerous memory accesses to non-adjacent locations which means it isn't cache friendly. 
also resharper doesn't have stuff like code complexity, which is the main purpose of code analysis. but there is a plugin apparently: https://github.com/JetBrains/resharper-cyclomatic-complexity
But this wasn't the case in .NET Framework, which was much more concerned about backward compatibility
Surprised he doesn't just used one of the built-in hashing algorithms for generating string hashes
You can use dnSpy (or ILSpy) to decompile/recompile C# programs including Unity games (C# scripts are in Assembly-CSharp.dll). Then it's a matter of adding a reference to your code somewhere in the decompiled program and off you go. Keep in mind to not share recompiled code that isn't yours. You can use patchers (MSIL patcher) to inject a call to your .dll instead. If you want to create game servers for games that already have multiplayer then dnSpy is still a good tool. As well as Wireshark for capturing network packets that the game/program gets and receives. Links to tools &amp; libraries you might like: \- [https://github.com/0xd4d/dnSpy](https://github.com/0xd4d/dnSpy) \- [https://github.com/pardeike/Harmony](https://github.com/pardeike/Harmony) \- [https://github.com/ZenLulz/MemorySharp](https://github.com/ZenLulz/MemorySharp) \- [https://www.mono-project.com/docs/tools+libraries/libraries/Mono.Cecil/](https://www.mono-project.com/docs/tools+libraries/libraries/Mono.Cecil/)
Which is probably the case because Microsoft noticed changing the algorithm would break people's code aren't weren't able to change it. Effectively having it change now is based on learnings from Framework
Don't implement "generic service" because you should try stick to Single Responsibility Principle and by trying implement something common you will violate this principle. I know they look similar operations but they are different use cases. Don't touch directly your entities in you controller. Do it in Application Layer: \- it could be an ArticleService with methods Create, Update, Delete \- it could be implementation of Command Pattern where you have Command/Query object and Handler per use case. For example AddArticleCommand and AddArticleCommandHandler. You can use MediatR library for this.
Yeah, viewmodels don't contain any crud operations. But when it's the case, where updateViewModel and createViewModel are almost indentical, only updateViewModel contains ID. Is there any possibility how to maintain that better or just keep it separete.
It might not bring a better understanding for you, but if it helps him/her with their own code, who are we to judge? I'm all for comments as long as they bring some value. No matter how much excessive they may be
Removed: Rule 4. I highly recommend Unity's learning materials. They got a bunch and should help to get you started: https://unity3d.com/learn
Because when you post open source code online you're literally inviting people to judge?
Every framework version would result in a different hash code for the same string though.
The docs have always warned people to not depend on these values being stable.
Have you looked at the code? It really is the embodiment of the over-commenting anti-pattern. The author already understands the code and doesn't need the trivial comments. It does not improve readability for others. Documenting the public surface area is fine -- what is this class responsible for, what are these properties providing access to, and what's the contract for this method, etc. Once you get into the internal details, I've found that writing good, simple code that is self-explanatory/self-documenting is orders of magnitude more valuable than most comments. Does the code make sense without comments? If not, it still needs improvement. Then, comments are primarily needed for esoteria, and providing links to where esoteria was found ("hey this super weird looking algorithm is sourced from and explained at https://wherever/it/was/found"). Comments are not needed, and are actually counterproductive (esp. for maintenance), for things like `foreach (SteamApp sapp in _steamapps) //loop through all the steam applications.` (from `SteamAppsManEvents.cs`). Comments aren't all bad -- don't get me wrong. But this library goes way over the line.
Sweet I'll have a Google haha!! 
I think you're missing a step with is to add the c# stuff to the .vscode folder. It should ask you in the bottom right to install some stuff. 
Nope. All installed
Yeah I just reread your question I think you're actually missing a different step. To create the project. You shouldn't be creating the file manually you should be running in the terminal: dotnet new console my-app-name
gives me invald input switch and throws whatever I type for the app name
Ok, I'll quickly Google the syntax. One sec. 
Edited
Ok I'm at a computer. That works above. It should also ask: Required assets to build and debug are missing from 'MyAppName' Add them? Don't Ask Again Not Now Yes And obviously you want to click 'Yes'
Ah ok. And I needed to run as admin due to my directory at the time. Yeah ok. So the short answer to all this is "you can't debug a scratch file simply" . You must create a new project through the terminal and then open that folder. So i can have a scratch folder to make this somewhat easy in the future at least, but I was hoping I could replicate linqpads ease of use for quick junk. Oh well. Thanks for the help.
I did skimmed through the code on the phone a few hours ago. And it may appeared to be less comments through out the repository then I first thought (after a second look). However, I do agree with most of the things you say. All I'm saying is: I rather see someone trying to explain why they've written code the way they did (preferably not to the extent he/she have done here) rather then only commenting on weird looking stuff. Most of the times people are rarely on the same level or have different ideas on how things should be written. Which is also why I prefer a tad too many comments over simple and self-explanatory code. My eyes prefer as few comments as possible during long days tho ^ ^
Does anyone have any use cases for using a Linked List? I'm sure there are many, but for my professional experience (10 years) I have never needed to use one. Mostly Lists and Dictionaries
"Everyone's a Critic" ;) But sure, if you post something publicly you more or less invite people to criticize you. I'm just saying there is more to talk about then excessive use of comments
It looks like a cool library, but the criticism about the comments is fair. It's not petty, its constructive. Hopefully the author learns from the criticism. 
Homework assignments alone? Probably hard to find unless you look at university courses that are based on C#. Your best bet is to enroll in some C# + MVC based courses on websites like coursera or edx.
r/iamverybadass 
I used EntityFrameworks for my app. And when I use the wizard, it automagically makes the folder structure for me. But yes, the Web API tutorial I believe has a Controllers folder. That's where all of the end-points for your API would go. Controllers \-&gt; EmployeeController.cs \-&gt; InventoryController.cs I eventually split the program into two parts. One is the Retrieval that does the calculations, and another is the WebAPI component. It let me fix the retrieval without having the API shut down and vice-versa. You can even (if you use a .net core app) put them into Docker Containers and load them up on AWS (Amazon Web Services).
What if you create a class ArticleBaseVM. And then you create ArticleCreateVM and ArticleUpdateVM that inherits from ArticleBaseVM. Each ArticleCreateVM and ArticleUpdateVM would have any particular property additional to ArticleBaseVM. 
 FYI - https://paste.ofcode.org/YWaEU78fTccZfD3rkyuKmq To make it less choppy you'd have to do some performance profiling and find out which parts of your code are causing the slow down. Then have your program run those parts in a separate thread from your main thread. Also, I suggest using MVVM - it makes it much easier to update your form.
\&gt; Both approaches require care to make sure you don't read/write past the end of the array. Span&lt;&gt; &amp; MemoryMarshal.Cast&lt;&gt; are fully bounds checked, so they don't introduce any risk of buffer overrun.
As others have pointed out, I don't think your question is really asking what you're trying to ask. Static and dynamic analysis are methodologies, not types of results. The nature of the analysis should be geared toward the kind of results you are looking for. For example, you might be interested in analysis that looks at... * "Secure coding" (i.e. does your code contain either obvious or sometimes esoteric anti-patterns that can weaken the overall security of your application) * Performance * Memory optimization * Coding style standards * Test coverage * Dependency vulnerability analysis (i.e. are there security vulnerabilities in a library or framework you depend on?) * etc. There are tools that exist to do all of these things; some are always static, some are always dynamic, and some goals can be met in different ways by tools in either space. What are you trying to find out about your code?
``` if (a.Path[i] &lt; b.Path[i]) return -1; if (a.Path[i] &gt; b.Path[i]) return 1; ``` You're looking up `Path` from `a` and `b` twice and indexing into `Path` twice for every index. Retrieving the Path properties once outside of the for loop would likely give you a decent speedup, and indexing once instead of twice would probably help as well. 
Oh, sweet! Thanks, have an upvote.
It's clearly stated in the documentation that the value of string.GetHashCode() is not stable across multiple runs of the application. I use [Jon Hanna's implementation](https://github.com/JonHanna/SpookilySharp) of [SpookyHash](http://burtleburtle.net/bob/hash/spooky.html) for stable hash codes. It's very fast and has good distribution.
I can kinda get it if you don't remember that it's an escaped character, but even so, if someone was forgetful of that then why not just use a string literal. I guess some of this could be auto-generated, and that's a great way to inflate your LoC numbers by at least double (if you're even allowed to count your comments). Oh well, not my coding style, but it's also a major turn off for contributing to a project. Common courtesy dictates using that same style, which is unfortunate in this case.
https://blog.simontimms.com/images/avatar.jpg
When dealing with small numbers of items, the use cases for Linked Lists are pretty rare. CPU caches have gotten a lot larger, so any algorithm that fits in contiguous memory (like an array) will be far faster than a Linked List approach. The remaining situations where an array is inappropriate but a Linked List is still more appropriate than a Tree are pretty rare. Also, it's important to remember that an array of reference types is effectively not contiguous memory, as it's just a bunch of pointers to other memory locations. *However*, all of that changes when you start dealing with large numbers of items. Picking the right data structure for the job is absolutely essential to dealing with lots of data. For instance, if you need to process streaming items in a First In, First Out fashion, but don't know ahead of time if there will be 20 or 2 million, you need to use a Linked List or a Queue implemented as a Linked List. `List&lt;T&gt;` is unacceptable, because removing the first element is O(n) and growing from 20 to 2 million involves a lot of resizing. `Queue&lt;T&gt;` is implemented as a circular array, and therefore is unacceptable due to resizing. Resizing of array-based collections requires allocating a new array and copying everything over, which is not terrible if you do it once, but really sucks if you do it over-and-over on your way to millions of items.
You can try this code it works fine for me. `// Create a new class instance.` `Sftp client = new Sftp();` `// Connect to the SFTP` `server. client.Connect("localhost");` `// Authenticate.` `client.Authenticate("test", "test");` `// ...` `FileStream fi = new FileStream("c:\\test.dat", FileMode.Open);` `// Upload data from a stream to '/test.dat'.` `client.UploadFile(fi, "/test.dat");` I am using third party [sftp](https://www.componentpro.com/products/sftp) library. It si very easy to use and clean way to work with it. Above code is working and smoothly running.
Thanks man. I was able to get this. Yep. I used a 3rd party lib aswell.
A quick solution would involve like you said, a factory. First, make `Car` an interface. Next, each `Model` enum would have a corresponding concrete class (since a model **is** the actual car you want to attach validation on). So in each class they can define their business rules/validation. It seems to make sense that each concrete model would already know his make, so we'll include that as part of the class. We'll enforce that with the interface. ```csharp public interface ICar { Make Make { get; } Color Color { get; set; } } public class ToyotaInsight : ICar { public Make Make =&gt; Make.Toyota; // Each model already knows his make ;) public Color Color { get; private set; } public Insight(Color color) { if(color == Color.Green) { throw new BusinessLogicException("Toyota insight cannot be green."); } } } ``` Then, create a factory of some kind: ```csharp public class CarFactory { public static ICar Make(Make make, Model model, Color color) { if(make == Make.Toyota &amp;&amp; model == Model.Insight) { return new ToyotaInsight(color); } } } ``` That's all off the top of my head - don't expect it to compile lol Also, in the factory you ought to use the strategy pattern for discovering what car to generate. Hopefully that helps?
`LinkedList&lt;T&gt;` is nearly useless. But linked lists are quite useful - for example, all of the `System.Collections.Concurrent` concurrent collections use linked lists in their implementations. The problem with "LinkedList" is that linked lists pretty much need to be intrusive to be useful - you do not operate on the list as a collection, but rather you operate on individual nodes.
Even when you think it's time to use a linked list, don't use a linked list.
Oh man, a linqpad replacement in vscode would be pretty fucking badass. One less platform to worry about. 
You are thinking about ViewModels incorrectly. Please read my [answer on StackOverflow](https://stackoverflow.com/questions/11064316/what-is-viewmodel-in-mvc/29135747#29135747) or on [my website](http://www.samwheat.com/Post/The-function-of-ViewModels-in-MVC-web-development). Basically you only need ONE ViewModel&lt;T&gt; where T is Article. Use it as I have shown above, passing in your services. Use generic ViewModel pattern, not generic repository pattern. 
I'll give this a look my guess / hope it's the compiler is smart enough to realize this is the same sub expression and would hoist for me. But I may not.
Want to join an open source project?
&gt;well i dont know the name of the problem so i gonna give an example Input Validation &gt;How i am gonna prevent user create a Toyota Insight with green color( because insight is a honda model and honda never produces a green insight ). One option is to call a validation method in the Car constructor method, for example Car(make ma, model mo, color c ) { ValidateCar(ma, mo, c): } bool ValidateCar(make ma, model mo, color c) { //logic } Another option is to validate the input before creating Car, for example Car c; if(ValidateCar(make, model, color) { c = new Car(make, model, color); } Or you could approach it from a different angle and make Make a class that contains a collection of Model class objects which have a ColorOptions collection. Etc... As your understanding of gets better the number of ways you can handle this problem goes up. &gt;**\*side question - is there a map?\*** You can make your own version of it a few different ways, for example you could use a list/dictionary/array/some type of collection or you could make a CarMap and a Make class and have CarMap contain a Make collection or each make could be a subclass of CarMap or etc... &gt;and then somehow i need to read this to Car Class. Is there something like that? Validating inside of Car can be can be done, however, for this scenario validation should probably occur before a Car class is instantiated. 
golang has the same feature for maps
He could use constants with a properly given name. That would be way clearer then any comment like that :S
\[HttpPost\] will make a request a POST request. However, in a RESTful API, your post data generally would be sent in the POST data package instead of the URL. In you example, I would make a model for your checkC controller method. Like a class called CredentialModel with a property for UserName and Password. Then the model can be passed as some sort of JSON object from the API caller. The method, instead of taking a two string arguments would take a string argument named like "request", for example and tell the compiler that the request data is coming from the POST body and not the URL. Quick example (not checked for compiler errors) ``` // This would be probably in its own file somewhere.... public class CredentialModel { public string UserName {get; set;} public string Password {get; set;} } // Your controller public class CredentialCheckerController : Controller { [HttpPost] [Route("api/[controller]")] public bool checkC([FromBody] CredentialModel request) { return CheckCredentials.checkC(request.UserName, request.Password); } } ``` The [FromBody] tells asp.net core to get the data from the POST body (generally JSON, but could be XML if configured correctly) and deserailize it into an instead of CredentialModel in the "request" variable. Hope that helps a bit.
\&gt; The analysis itself has certain holes. Most of them are a trade-off between safety and convenience; if we complained, it would be really hard to fix. For instance, when you write new string\[10\] , we create an array full of nulls, typed as non-null strings. We don’t warn on that Nullable reference types are great (null being the billion-dollar mistake and all), but the problem is that people will rely on them, even though the analyzer isn't airtight, thus leading to nasty NullReferenceExceptions. &amp;#x200B; Also, though I don't know whether it'll ever be implemented, but [HKTs](https://github.com/dotnet/csharplang/issues/339) and [Default interface methods](https://github.com/dotnet/csharplang/issues/52) and [Shapes](https://github.com/dotnet/csharplang/issues/164) would be truly amazing, even if they required changes to MSIL. These features would go a long way towards making functional programming really convenient in the language, while eliminating the need for clunky extension methods and casts. For instance, you could have new LINQ-methods which would preserve their input type: public static TContainer&lt;TResult&gt; Select&lt;TContainer, TSource, TResult&gt;(this TContainer&lt;TRSource&gt; xs, Func&lt;TSource, TResult&gt; f) where TContainer&lt;TSource&gt; : IEnumerable&lt;TSource&gt; { ... } Then you could write something like var set = new HashSet&lt;string&gt; { "abc", "x", "defg"} var lengths = set.Select(x =&gt; x.Length); //{3, 1, 4} With shapes, you could have types over which you don't have control implement interfaces, which would be another move towards safe extensibility, begun with extension methods: public shape INumeric { This Add(This x, This y); This Multiply(This x, This y); This Subtract(This x, This y); This Divide(This x, This y); This Exponent(This x, This y); } (I guess you'd also need [covariant return types](https://github.com/dotnet/csharplang/issues/49)/type-level This.) You could then have `int/float/double/decimal` "implement" them and thus have truly generic numeric algorithms: public static T Sum&lt;T&gt;(IEnumerable&lt;T&gt; xs) where T : INumeric { ... } It'd be even better if you could have custom operators, but that's even less likely to be ever done, because of the fear that people would abuse them and define **&lt;&lt;\*\*\~** instead of ExponentAndReturn.
true, you are rarely smarter than the complier 
If you make the ReportProgress increments more often and smaller then you will get a smother progressbar. Maybe create an new function that divides an ReportProgress value into several calls with smaller values. You then could run this in a new thread... Or maybe it's possible to call ReportProgress from the objects that you create instead of just before and after (it depends on if their your classes or some library classes... &amp;#x200B;
Definitely helps. Will try this out. Thank you!
remember on the Angular side you will probably have to set up your call to the API to make a post request and send the { UserName: "someusername", Password: "somepassword" } json as part of the request body.
If you want a hash that you can use in this way, it shouldn’t be done through GetHashCode(), but through a new method instead called GetRepeatableHash() or something. Overriding a standard method such that it does something differently than is indicated in the script is just a recipe for problems later down the line. If someone sees code writing out a file that contains data from GetHashCode(), they might later follow the same pattern for a class that doesn’t have a custom implementation of that method, and the code won’t work. For the sake of that future programmer (which let’s face it might be you), using a different method makes it explicit what’s going on and reduces the potential for conclusion. 
refit is great for consuming api's https://github.com/reactiveui/refit
Eh, honestly, I don't even know if a constant is good for that. I don't want to rip on the project, but looking through it, this is the kinda code I'd expect to see from a 1st or 2nd year CS student that doesn't understand why certain conventions, such as DRY, exist and what they are intended for. I know my personal projects aren't going to be much better, and I hope this is a productive learning process for OP, but someone was actually fired to righting code like this because it took them 2-3 weeks to do a 1 week task. Perfect example is the function below: /// &lt;summary&gt; /// Kills the process and its children processes. /// &lt;/summary&gt; /// &lt;param name="_proc"&gt;&lt;/param&gt; public static void KillProcessAndChildren(this Process _proc) { KillProcessAndChildrens(_proc.Id); } 
&gt; Nullable reference types are great (null being the billion-dollar mistake and all), but the problem is that people will rely on them, even though the analyzer isn't airtight, thus leading to nasty NullReferenceExceptions. I guess we will just have to wait till next year or so to really know how often these edge cases come up in the real world and what best practices emerge from the change, you could make the argument that you should be using string?[10] in that example. There could be a few nasty exceptions arise from false assumptions but i believe on the whole we will be better protected. 
C# isn't only used by Microsoft- it's developed, maintained and supported by Microsoft. They also have fantastic [documentation](https://docs.microsoft.com/en-us/dotnet/csharp/) on how to use it and many many many tutorials on how to get started. It seems he is in the mentality of Apple- there is nothing but Apple. If it's not Apple, it's not good. C# is by far my favorite language to work in. I have seen job postings aplenty where they are asking for C#/.NET developers. 
Hi, it's a windows application which should work with different type of data and contracts. It's WPF and I'm using MVVM framework.
Yes :) 
Well, the project is a bit big right now, is it still chance for me to implement it?
&gt; Use generic ViewModel pattern Generics for the sake of it?
Well, how should the structure be then? Like which should reference to who?
Proving that `b.Path[i]` does not influence the evaluation of `a.Path[i]` is non-trivial and the JIT needs to make (semantically correct) decisions very quickly. In practice that means it will very rarely optimize away property retrieval. 
I read some article about two ways of implementing async enumerables like 2 months ago. Does anybody know which of them they have chosen?
Not even the right context.
I'm very exited for Asynchronous streams. I think it's a feature that more people will come to really appreciate or just take for granted as a natural thing to have.
I don't understand why the start of a range is inclusive but the end is exclusive. I feel that's kinda unintuitive. Can anyone explain why do it this way?
Start here: https://www.infoq.com/articles/View-Model-Definition
I believe the trait/shape proposal got shot down for things like memory leaks being really hard to reason about. That said, I've solved the problem in my own code by creating a separate class with the methods I want and creating implicit cast operators for the "implementing" types, then using the "trait" class as my method parameter. It's not the *most* elegant solution, but you do at least get compiler errors for non-existent implicit casts. It mostly hits the fan when you want to extend functionality generically across disparate base types, because you'll end up in type-constraint hell.
In many cases you dont use LL on its own, you use it combined with an other datastructure like a Dictionary providing fast O(1) lookup of LL nodes with List element keys. the LL part of the composite datastructure can be used for O(1) insert operations if you have the position where the insert/delete needs to happen (head/tail/before-after current element). LL is good on LeetCode ;)
I'm guessing OP's app has more than business object. 
Yes, but you shouldn't. DI should happen at application startup. If your application code knows about your DI framework then you are probably using the service locator anti pattern. 
from the meetings: https://github.com/dotnet/csharplang/blob/master/meetings/2018/LDM-2018-01-22.md
\[Like this?\]([https://marketplace.visualstudio.com/items?itemName=jmazouri.sharppad](https://marketplace.visualstudio.com/items?itemName=jmazouri.sharppad)) &amp;#x200B; (disclaimer: i have not tested this myself yet)
??? Make a VM per use case. Literally no need to add generics here.
I thought the same about Postgres’s range type’s inclusive start/exclusive end canonical form. But you discover the cases over time where its advantageous. Now I wouldn’t have my ranges any other way. Think about two ranges, adjacent to each other but not overlapping. Ex 1..5 and 5..10
I noticed that the article speculates on why you can’t use ranges on List&lt;T&gt;. While I don’t know the answer and would hope that’s coming, the article suggests that it may be because of the “linked list nature” of List&lt;T&gt;. List&lt;T&gt;’s implementation is a simple array, not a linked list. There is a separate class, LinkedList&lt;T&gt; that is actually implemented as a doubly linked list.
There is actually a little you can factor out. public class BaseVM&lt;T&gt; where T:class { protected T Entity {get;set;} protected virtual bool CanEdit =&gt; HasPermission() &amp;&amp; Entity != null; // etc. } 
I like this explanation 
I have a hard time believing that people relying on the checker would lead to more NREs in production than not having the checker at all.
Not scout rule comes into view here, it's now better than when we arrived.
Default interface methods are definitely coming for 8.0, just not this preview.
I don't know my Folder structure is good or bad but I follow Clean Architecture.
Wow. That article goes DEEP 
Or he could be using factories to create child view models which is a very common and good pattern for that scenario.
Basically a simple content management system for only a few pages. You need to pull the dynamic images (or links to images) / texts from a database. You’ll need to setup a view to have the user who can edit them a way of adding the images / texts to the database. 
Yes
I don’t, but I know someone who does.
I got dem codehs!
I disagree even with the new method. GetHashCode exists on every object for one reason - to make objects compatible with in-memory hashing data structures like Dictionary. If you want to hash your objects with a stable hash, there's nothing stopping you from doing that yourself. You should provide your own anyway, so that you could control how and when the hash behavior is updated or changed.
I feel like F# would benefit even more from higher-kinded types, but the impact on libraries like LINQ would definitely be amazing. 
Same - gushed about it being an upcoming thing in an interview today. An unarguably great feature of 8.0, and I'd argue that it's the best feature. 
(IAsyncEnumerable.cs)[https://github.com/dotnet/corefx/blob/master/src/Common/src/CoreLib/System/Collections/Generic/IAsyncEnumerable.cs] and [IAsyncEnumerator.cs](https://github.com/dotnet/corefx/blob/master/src/Common/src/CoreLib/System/Collections/Generic/IAsyncEnumerator.cs) were added to the CoreFX library on October. I don't know if those interfaces imply either of the two implementations that they would choose, but I do remember seeing an article discussing that. 
It likely goes back even to C++ iterators. The end iterator is defined as one past the last element. So you could go through something like: for (auto it = begin(X); it != end(X); ++it) { ... } and X could be all sorts of datatypes, it turns out to be really useful.
In addition, if you want persistent data structures (see \`System.Collections.Immutable\` and almost everything in F#-land) you're going to be working with singly-linked lists. That way, previously-created linked lists can be re-used in order to save memory.
Thank you for the reply. I appreciate it. I'm not the fastest when it comes to C#. I think I'll stick with using Python for the API and then figure out how I'm going to handle the mobile and Windows 10 client at a later stage as that is not so important for the time being. I want to get something up and running as fast as possible to test my idea out.
Thanks for the reply. I'll look into it at a later stage.
Thanks for the reply. I'll probably end up using Python then as I am much more productive in it and already understand the ecosystem. I'd have to learn C# and .NET Core from scratch pretty much, and I already need to brush up on my JavaScript skills for the website frontend.
I'm of the impression an abstract class can and do in-fact contain and data. Else, it should just be an interface.