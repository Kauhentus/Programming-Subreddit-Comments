Just start out with the official tutorials, you'll learn it pretty quickly. After that, i'd recommend starting out with small projects, they'll teach you stuff you'll need all the time. Later, as your skills develop further, you can take on bigger projects. Most importantly, try to have fun while doing it, this way you'll learn much quicker ;D
Lazy: var sum = number.ToString().Select(n =&gt; (n - '0')).Sum(); 
Yeah, I agree that string parsing ain't the best way to go due too string immutability. I would've probably used divide/remainder method myself.
Maybe you have never seen console app before?
 int sum = 0; while (number &gt; 0) sum += number - (number/=10) * 10; Write your own DivRem and get back 1 division.
So uhhhhh, what does it do or are you just showcasing the tech as an example?
https://referencesource.microsoft.com/#mscorlib/system/collections/generic/list.cs,136
I am a C++ programmer , but using unity for VR, because , it's so easy to use 
Yea, but Ive never seen a Windows forms app use a main method before which is kinda what confused me.
It has never done that. Matter of fact, maintaining that count is necessary for the correct implementation of the List - the count is the index into the next position in the backing array to write to when performing an add; or the indicator that the backing array is full.
Showcasing AvaloniaUI GUI framework http://avaloniaui.net/ and native C# runtime CoreRT https://github.com/dotnet/corert.
Also if you come from a c++ background, an empty string there can be an empty char array or a char array with the \0 symbol. If you use string.empty you are sure it is the correct format for the string class to be interpreted as empty
&gt; I imagine .Count() on a list just returns .Count's underlying value It does. It checks if the `IEnumerable&lt;T&gt;` implements `ICollection&lt;T&gt;` (or `ICollection`) and access its `.Count` property. Otherwise it falls back to iterating to count. https://referencesource.microsoft.com/#system.core/System/Linq/Enumerable.cs,1305
Just to set the record straight: The Danish 'AA' (international version of 'Å') is only calatalized as 'Aa'. See the Danish cities Aalborg or Aarhus as examples. :)
I know that. :) Realised afterwards. And I should shame myself working for a Danish library. 
List class has private property "_size" that get's changed when you add or remove an entry. So no, it's not calculated every time, it's actually never calculated.
Look at Program.cs. It is there even in forms app.
Don't forget the C# 7.1 `Task` versions of Main() static Task Main() static Task&lt;int&gt; Main() static Task Main(string[]) static Task&lt;int&gt; Main(string[])
The event handler is synchronous. The main thread cannot process both the event handler and the UI at the same time. To solve your problem, you need to make the event handler "async void" and "await" Task.Delay, rather than ".Wait()"-ing it. When you "await", you will free up the thread to process other things, which in this case is the UI. You don't have this problem with your other method because it's not running on the main thread. Since you "Task.Run()"-ed the method, it's running on the thread pool, and you are delegating units of work back to the main thread. It seems like you're new to ideas of parallel and asynchronous processing, so I recommend you read some of Stephen Cleary's book: https://www.amazon.co.uk/Concurrency-C-Cookbook-Stephen-Cleary/dp/1449367569/ref=sr_1_1?ie=UTF8&amp;qid=1523129261&amp;sr=8-1&amp;keywords=stephen+cleary 
What? 
Hmm.. So just to confirm: The reason why my event handler code is all executed in bulk at the end of the method instead of line by line as the code is being read, is because the main thread, that is also responsible for rendering changes to the UI, has to pause the UI rendering to go run the event handler code, and once the event handler method is finished, it'll go back to it's main job and actually render the changes that were made, which makes all the changes happen at once? If I instead run the event handler method as a separate thread using Task.Run or async/await programming, then the main thread will be able to focus on rendering the UI all throughout the execution of the event handler method, that is being executed simultaneously by another thread, which means I'll get to see the changes made to the UI from the event handler method as they're happening line by line, instead of getting all the changes at the end of the method? Thanks for the book suggestion as well! I'll definitely take a look!
One thing I've accidentally done is set one of my class libraries as the default starting project so when I go to debug I get this error. If this happens to you, just right-click on the project that contains `Main` and click on set as default project (or something to that effect).
Thanks. The project is restructured.
&gt; Doing things without following/copying code I disagree. I think at the start its vital to take other people's code, learn from it, use it, destroy it, violate it, etc. Learn from others.
In Slice I need list.GetRange and it's only available for List.
If you think so but this is just my opinion, no matter what learning code is very hard and will take time if you do or do not follow others code :)
IEnumerable&lt;T&gt;.Skip and Take would give you the same functionality. then use .ToArray or ToList
Quick question why have you try catches in most Get methods but not in the GetCPU? Also why are you using a forloop in the GetCPU which includes a break after the first loop? 
I know you say XML serialization but I needed to serialize object to send over the network and I used Json.NET and holy wow, it's easy. Serialize: string output = JsonConvert.SerializeObject(product); Deserialize: Product aproduct = JsonConvert.DeserializeObject&lt;Account&gt;(product); 
Some of these are nice, but others seem hardly more usable than what's already built into C#. As others have said, since you're new to the language you should probably take some time to *learn the C# way* before instantly assuming the Python way is faster and better.
Yeah, I started learning Java in university, later switched to c# for my own stuff and used it in my bachelor's thesis. Feels a lot better to use for me. I'll be probably switching back to Java for my own stuff though since the jobs I've got my eye on after I finish my masters mostly use that so it's probably good to be somewhat up to speed. 
I will put try/catch in GetCPU. I just missed this. The query either returns an array or list (I forget which) and I only need the first result, hence the break. 
 // Stuff. if (!Int32.TryParse(inputStr, out int parsedInt)) { return; } // Do stuff with parsedInt. This can compile and run in C# 7. It can be a useful format in some cases.
Thanks for your reply. TBH the paragraph, after the code block, went way over my head. Could you please elaborate, especially on the part about *following MVVM standards and practices more closely*? 
TL;DR folks, I am marking this as the answer, &amp; use --your_var=\"Your Var\" syntax to solve the problem I was having. ----- Thanks antiduh for the super long winded answer but most importantly the etiquette. Your time &amp; effort will not go unreplied! I've quoted my response just so that I can use this as a later resource. &gt;Please, be consistent when asking questions. yes I understand &amp; thank you for the tip! &gt;The code that you gave in the post didn't show any of the context about how it was being used; we're not magicians, context is important. I apologize for this &amp; will be better in the future. I honestly thought it was newbie terminal question &amp; was expecting a quick reply of \"{0}\" but for sure noted! &gt;You should've posted your code by updating your original post, instead of in the comments. This makes so much sense haha, doh. Thanks! &gt;you allude to an error but you still don't post it lol oh lazy me. Apologized &amp; noted! &gt;people feel you didn't show them respect because you didn't put in a reasonable amount of effort to explain your problem. makes sense, thanks for the great tip. &amp; oh course thanks for the super detailed walk through for my actual problem!
Don't commit binaries to your revision control if you can avoid it. You can tag releases on github, to which you can upload files. Use that instead. Cf https://github.com/antiduh/nsspi/releases
It won't be that long because there are projects going on right now that are based on Web Assembly. If Microsoft drops this project others will pick it up.
Use task.run or a thread to run getcpu in, then use dispatcher to synchronize and update the text box :-)
Do not just litter try catch alls everywhere, that is bad practice. Most of the time you are just hiding bad handling doing that. You should test and investigate the underlying code for what exceptions you know that it can throw and plan for those conditions. At the very least you should log them while testing. Use a logging framework such as NLog (or similar one).
MVVM is a variant of [Martin Fowler's Presentation Model (PM) Pattern](https://martinfowler.com/eaaDev/PresentationModel.html). Model-View-Controller (MVC) and Model-View-Presenter (MVP) are also variants of PM where MVC is typically used with web apps (like Microsoft's MVC framework) and MVP is typically used with WinForms. Although they have slightly different styles of execution, each variant adheres to the central idea of PM -- that the UI logic (**view**) is separated from the business logic (**model**) which typically requires a middle man (**view model/controller/presenter**) to marshal the binding and relationship between the business logic and the UI logic. &amp;nbsp; [Dependency Injection (DI)](https://en.wikipedia.org/wiki/Dependency_injection) is where you *inject* the dependencies of code via the constructor (i.e constructor DI), properties (property DI) or method parameters/arguments. DI has several benefits and is one of the [S.O.L.I.D Programming Principles](https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)). One such benefit is that the code's dependencies are more clearly stated. Another benefit is that it makes your code extendable. For example, compare the following two classes: public class MyBadClass { private ISettingsRepository Settings {get; set;} public MyBadClass() { Settings = new SettingsRepository("some_connection_string"); } } public class MyGoodClass { private ISettingsRepository Settings {get; set;} public MyGoodClass(ISettingsRepository settings) { Settings = settings; } } The first class, `MyBadClass`, is instantiating a `SettingsRepository` object in its constructor. Anything that uses MyBadClass will have to *know* that it is instantiated it with a hard-coded connection string. Unfortunately, all of the consumers of `MyBadClass` won't know this -- they'd have to refer to an XML comment on the constructor (if it exists) or look at the source code directly (if they can). This isn't very extendable -- what if the connection string changes or what if you want to use a different implementation of the `ISettings` interface? `MyGoodClass` solves all of the above problems. The class is going to *use* an `ISettingsRepository` object -- it doesn't care about its implementation (which is why the constructor signature refers to `ISettingsRepository`), it only cares that the object conforms to the specified interface. This is known as *coding to a contract/interface* and is also *related* to the SOLID programming principle **Interface Segregation** (note: 'interface' here doesn't necessarily *have* to mean a C# interface -- abstract classes or non-sealed classes work too, but actual interfaces are preferred). &amp;nbsp; In MVVM, the view *knows* about its view model and the VM doesn't know about its view (typically), so you don't have to *inject* its view in the constructor (this is different from MVP where you typically inject an *interface* of the view in the constructor of the presenter). Furthermore, you typically use "Command" objects or events to allow communication between the view and the view model. A good example of the `RelayCommand`, *injection via method parameters*, and *interface segregation* can be found [here](https://stackoverflow.com/questions/16172462/close-window-from-viewmodel) (note: the author of the accepted answer didn't adhere to MVVM in part of his answer but he corrected it later so be sure to read the whole thing). &amp;nbsp; So, when I said *adheres to MVVM standards and practices more closely*, I was mainly referring to the usage of the `Command` object, but keeping UI logic and business logic separated via DI and interface segregation is a larger part MVVM best practices. &amp;nbsp; I hope this helps. I didn't really give a good example of DI, so if you want a better example I can provide one (but googling would probably be better).
Seems like a lot of logic in the property get accessors that might be better placed in methods. 
&gt; To be honest there are tons of stuff you can do in a more “elegant” in .NET But this one feels a lot _less_ elegant, on top of that.
Removed: Rule 7, spam.
No because that would essentially achieve the same thing. How often do you think the values in those properties are going to change? 
So are you saying not to use accessors at all; and to only use methods? 
Great point, I posed it as a question to see why he was doing it and to see if he knew this and just disregarded this for some reason. I always found that if you offer a direct answer you become a crutch to learning. Instead ask questions and offer solutions in the for, of pointers to topics and examples and this sticks in peoples minds longer. (Also I've a bottle of wine in me so that's why I may currently be coming off as a bit preachy.)
I think I'm a little late, but I have some suggestions around the `Slice` methods. These can probably be extrapolated to other places, but I only looked at that first. :) 1. If you're going to do bounds checking around parameters, do them around all relevant parameters. You check to see if `step` is 0 or higher, for instance, but never check to see if the string is `null` or `string.Empty`. Do you support those cases inherently? If so, great; if not, verify those values don't come in. 2. According to [MSDN](https://msdn.microsoft.com/en-us/library/system.argumentoutofrangeexception.aspx), if you have an argument that is not `null` but is also not a valid value, you should throw an `ArgumentOutOfRangeException`, not `ArgumentException`. People might disagree with this in general, but I happen to think it's the right thing to do -- 0 is not in the range of valid values for `step`. 3. Related to that, I personally wouldn't separate the exceptions for 0 and &lt;0 for `step`. I'd just call anything below 1 out of range and throw the `ArgumentOutOfRangeException`, unless you eventually plan on handling negative `step`. In that case, the `NotImplementedException` is just temporary anyway. Finally, as a general rule, don't forget the `null` case when writing unit tests. Strings can be `null`, so you should be check that, especially for a bunch of methods in `StringExtensions.cs` that play with strings. To point 1 up above, when I looked at the unit tests I found that you *do*, in fact, support `string.Empty` (""), but since you don't test `null` strings I don't know if you intend to support that case or what happens if you try it. As a total aside, I'm unreasonably annoyed that `"this is my string".Reverse()` returns `IEnumerable&lt;char&gt;` and not a string, but that's not your fault! :)
So trying to get a [ManagementObject](https://msdn.microsoft.com/en-us/library/system.management.managementobject(v=vs.110).aspx) property with using an iterator is hard (for me) to do. Even after looking on S, I could not figure out how to do this. So maybe in the case, try/catch is OK. However, I am still looking for a code example.
Scraping is explicitly against their ToS https://m.adidas.com/us/help-topics-terms_and_conditions_footer.html Section 11 
Was that English you just used?
To add to this, you may want to add caching to some of the properties (except for GetUptime, GetIPv4, etc.) so they aren't calculated each time they're accessed
Cache the results in a private variable. How often do you think the Manufacturer/Model is going to change while I'm running the program? Why recompute it every time you access that property? 
I just tested this and it works great. This is brilliant! To test this, I placed a nested for loop to do some useless computations inside of GetCPU. It made the method run for about 10 seconds before returning. When the program started, all of the other fields immediately populated with their information. After the 10 seconds was up, the TextBox field populated with the CPU information. Thank you very much. This made my day! 
Microsoft documentation isn't great for this class but you should be able to access the first object in the array/list by using the indexing operator or using LINQ, so instead of the below: foreach (ManagementObject obj in searcher.Get()) { // code here } If you know there will always be at least one result you can use: ManagementObject obj = searcher.Get()[0]; // Or with LINQ ManagementObject obj = searcher.Get().First(); if there may be no results returned use: ManagementObject obj = searcher.Get().FirstOrDefault(); if (obj != null) { try { Manufacturer = obj.Properties["Manufacturer"].Value.ToString().Trim(); // etc... 
Ah, OK that makes sense now. Thanks for the clarification.
The problem that I am having is not checking if obj is null or not. I can't figure out to ensure *Manufacturer* is a Property of obj or not without iterating through a PropertyDataCollection. If you try to access a Property that does not exist, an exception is thrown. This is why I am using try/catch. If try/catch is not a clean code solution, then I would like to find another way to check for a Property without have to iterate over some sort of property list. 
The code above is just to get rid of the foreach loops, FirstOrDefault() returns null if there are no items in the collection whereas [0] or First() throw an exception if there are no items. What exception does the property throw? Unfortunately Microsoft docs aren't clear here. If it's a NullReferenceException you can just assign to a variable before accessing e.g: var manufacturerProperty = obj.Properties["Manufacturer"]; if (manufacturerProperty != null) { Manufacturer = manufacturerProperty.Value.ToString().Trim(); }
Thanks for the detailed feedback. **(1)** I didn't check if the string is null. One can call these methods on an empty string, that's OK, but if you call it on a null, that would result in an exception. I don't know if I should check null everywhere. Even if I did, I would also raise an exception. **(2)** I changed to ArgumentOutOfRangeException. **(3)** Python supports negative step but I didn't implement it yet (not sure if I want to, since it's a bit weird even in Python).
I'd say that you don't need to check for `null` *everywhere*, but you can check at the entry point to the method. When the method begins, throw if the string is `null` and that should keep you safe for the rest of the method. The point is to ensure that you never got `null` in the first place, not that you check absolutely everywhere you deal with the strings. :) As for #3, once you make the decision as to whether you'll ever implement a negative step, you can go from there. If you decide to do it, the `NotImplementedException` is fine as a temporary measure; if you decide you never will, lump it into the `ArgumentOutOfRangeException`. I'm personally not a huge fan of permanent `NotImplementedExceptions` unless they're part of interfaces (and thus you're forced to use them) -- if you're going to implement it now or in the future, that's fine; if you never will, throw a more meaningful exception.
The implementation of string.ToUpper() contains this: if (str == null) throw new ArgumentNullException(nameof (str)); Should I add it to all my string extensions?
I agree with spacemunkee. I'm just finishing the advanced course and I'm very satisfied. Mosh gives clear vision of the important things to know.
Title case is not the same as sentence case.
Personally? I would. It's good practice to handle that sort of bounds checking at the beginning of your methods. On the one hand, it's an extension method -- this code will fail anyway: string s = null; s.Slice(0, 2, 4); On the other, you can actually call extension methods as normal methods (they're just static methods, after all). At that point you'll get a `NullReferenceException`. In other words, this code is valid and will throw an exception: string s = null; StringExtensions.Slice(s, 0, 2, 4); I've fond of saying at work, "Anything not prohibited is mandatory" (a phrase I stole from something I saw in a show about the physics of the universe at one point). If you allow it, someone will do it. So if you don't want people to be able to pass `null` in as a string, explicitly disallow it.
If you like udemy, then use it. I personally found pluralsight much more helpful
Okay sweat that helped with my error that I had. My next question is, I input 10 into my total sales and lblAmount came out to 0.00. This comes from me declaring that the text will be 0.00 no matter what? When I try to run the number into the lblAmount it says that it doesn't work because the string cant be the double numeric I get from the If calculations. The error suggestion I get is: lblAmount.Text = dblAmount.ToString(" "); NewMethod(dblAmount); Is this NewMethod grab the lblAmount.Text and input it as a number? 
You're going down the wrong path. Step through your code- this is a good a time as any to learn to use the debugger- and be sure to think about what lines are being executed when the input value is 10.
You are right, actually. I had MVP on my mind when writing some of what I said. In some implementations of MVP, the presenter is injected with a view interface. In MVVM, the VM should never know about the view even with an interface. Communication with the view should be accomplished via Command objects or events.
Now i'm getting confused. 
Going through the lines being executed: I input 10 and checks to make sure its a number. Check Onto the If (dblQuantitySold &lt; 10) run dblQuantitySold * 99 = dblAmount. Check Does my If statement not stop?
I figured it out. Thanks everyone! When I run the quantity through the If statement I didn't have a way to post it because I have the lblAmount outside of the statement. This makes a lot more sense. public partial class Exer3Form : Form { public Exer3Form() { InitializeComponent(); } private void Form1_Load(object sender, EventArgs e) { } private void btnCalculate_Click(object sender, EventArgs e) { double dblQuantitySold; double dblAmount = 0; //set up input validation if (double.TryParse(txbQuantity.Text, out dblQuantitySold)) { // Figure out the total sales due if (dblQuantitySold &lt; 10) { dblAmount = (dblQuantitySold * 99); lblAmount.Text = dblAmount.ToString("n2"); } if (dblQuantitySold &lt; 10 &amp;&amp; dblQuantitySold &gt;= 19) { dblAmount = (dblQuantitySold * 94.05); lblAmount.Text = dblAmount.ToString("n2"); } if (dblQuantitySold &gt; 20) { dblAmount = (dblQuantitySold * 89.1); lblAmount.Text = dblAmount.ToString("n2"); } } else { MessageBox.Show("Invalid Input", "Error", MessageBoxButtons.OK, MessageBoxIcon.Warning); txbQuantity.Focus(); txbQuantity.SelectAll(); } } }
Solved!
What test cases did you try? The other code you posted did not look like it would calculate correctly when quantity is 10 or 15.
yeah I tried 11-19 and nothing showed up. I changed the the greater and less than signs around. Changed the "n1" to "C" for currency.
👍 Don't put off learning to use your debugger. I'm serious. It will save you uncountable hours of hair-pulling and frustration.
Are you trying to build a bot to buy sneakers? lol Bluntly said, if you struggle with basics like this, chances are you won't come very far. Now I don't want to discourage you from learning and would give you some tips but 1. it's against the TOS and 2. fuck sneaker bots.
What is the reason for properties in [MainWindow.xaml.cs](https://github.com/jftuga/compinfo/blob/master/compinfo/MainWindow.xaml.cs)? You've said you are using MVVM but this isn't very MVVM. Just bind to view model directly.
Very useful, thanks I'll give it a whirl!
Awesome! Let me know if you have any issues with it :-)
Does this work for TV shows too?
For future reference in case subscene doesn't have the subs you need, [YIFYSubs](http://yifysubtitles.com) has a pretty comprehensive list.
Nice hack
Removed: Rule 2, Rule 4.
This is what I came up with: public string GetModel { get { ManagementObjectSearcher searcher = new ManagementObjectSearcher("select Manufacturer, Model from Win32_ComputerSystem"); ManagementObjectCollection queryCollection = searcher.Get(); ManagementObject obj = queryCollection.OfType&lt;ManagementObject&gt;().FirstOrDefault(); var Manufacturer = obj.Properties.Cast&lt;PropertyData&gt;().Where(x =&gt; x.Name == "Manufacturer").FirstOrDefault(); var Model = obj.Properties.Cast&lt;PropertyData&gt;().Where(x =&gt; x.Name == "Model").FirstOrDefault(); String Result = ""; if (Manufacturer != null &amp;&amp; Manufacturer.Value.ToString().Length &gt; 0) { Result = String.Format("{0}", Manufacturer.Value.ToString().Trim()); } if( Model != null &amp;&amp; Model.Value.ToString().Length &gt; 0) { return String.Format("{0} {1}", Result, Model.Value.ToString().Trim()); } return NA; } } 
I dont think so, I've never used it. I likely just forgot the ToList()
&gt; Just bind to view model directly. Could you please elaborate on how to do this? I am new to MVVM. 
Wish I could up-vote you twice because this is by far the best summation I’ve seen of features in ASP.NET Core. You gave novelty and focus areas and that is great for both novices and devs coming to Core with the pain points of previous versions. Thank you.
Very interesting. So I could use it to add the subtitle files to the same directory as the video, so that VLC or even Kodi will just pick them up automatically?
Yep! It will look for any existing subtitles that matches the name of video file, if one does exist it will ignore that specific file but if it doesnt it will try and download it from subscene. The file is then renamed to match the video file. example: For the video file: Greys.Anatomy.S14E13.720p.HDTV.x264-KILLERS[eztv].mkv it will download a subtitle with a matching name from subscene and then rename the downloaded file into Greys.Anatomy.S14E13.720p.HDTV.x264-KILLERS[eztv].srt this format is what VLC use to automatically load the subtitles for that video. I am unsure about Kodi though as I've never personally used it. 
Although it’s not entirely well-defined when something is “LINQ”. Ultimately, IMO, it’s stupid to have the name in the first place. No other languages have names for their collection or xml libraries. I could understand it if it were exclusively for query syntax or SQL conversion. 
Not for `for (;;)`
Getting blocked by captcha from subscene. 403 forbidden. I don't think there's a programmatic way around that, is there? It's good code, though! 
Yea, i want to know how can i add my music it to the database(just 1 table artist name, song name, album, year) and then connect that database to my player so i can play that music music in it. Here it is. Form1 https://gist.github.com/speedfreakzZ/2abaf93a6dbb00637caaf34b14de5f1b Form1.designer https://gist.github.com/speedfreakzZ/50a68faebeb66bc2099cf4c3cf5cdcae
I got this compilation error message: An object reference is required for the non-static field, method, or property 'Application.Exit' However, this code worked and is simpler: Close() 
Thanks for the headsup! When did this start happening to you? After SubSync already tried to download tons or just right away after starting it? If its after some time of already downloading then you could just try and stop SubSync for a little time and try again later. If you're under a VPN I've seen google do things like asking if you're a robot so it could also be a similar issue. There may or may not be ways around it from subscene but there are other providers that I will try and implement in which it may work, OpenSubtitles for instance. I've added it as a todo for me to do. And will even try to see if I can have it fixed today.
Any plans for a .net core port? I run all my media services on Linux and a .net core port would let me keep things together. If you don't have plans for it, may I take a crack at it?
I realised it quickly after I created SubSync. And porting it to .NET Core shouldn't be a direct issue. I'm pretty sure there are alternatives to SharpCompress (if not actually sharpcompress itself). So yes to both answers, if you want to port it, go ahead! But otherwise I will do this within a couple of days and without promising too much it could possibly be done today. :)
I tried first on a directory with only a single movie file as a test and got the "failed after trying three times" message. That's when I ran it in debug and extracted the url request. I visited subscene via chrome, not behind a vpn at first, and it prompted me with a captcha. The url worked with lots of results on the file. I put the url in postman and postman got the captcha request. So I just pulled this out from the WebException in SubsceneSubtitleProvider.cs line 135 webException.Response.Headers.ToString() Transfer-Encoding: chunked Connection: close CF-Chl-Bypass: 1 X-Frame-Options: SAMEORIGIN Expect-CT: max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct" CF-RAY: 40858afc7d1c57f5-DFW Cache-Control: max-age=2 Content-Type: text/html; charset=UTF-8 Date: Sun, 08 Apr 2018 14:49:50 GMT Expires: Sun, 08 Apr 2018 14:49:52 GMT Set-Cookie: __cfduid=d2fb2ecff4a5b0cb112f2e9ed5e8ef2401523198990; expires=Mon, 08-Apr-19 14:49:50 GMT; path=/; domain=.subscene.com; HttpOnly; Secure Server: cloudflare Cloudflare means captcha :( Opensubtitles sounds promising! 
I've updated the github repository now and converted it into a .net core 2.0 application instead. It was just as easy as I thought it would be and it do seem to run fine for me :) there are still some possible issues regarding file paths longer than 260 chars. But if that does occur I will have to take another crack at that as well.
Can you pm me the url that brought you to see the captcha? (or post here if you are fine with that)
Great! I'm running on CentOS 7 and it's working well so far other than the Captcha issues others have mentioned.
I'd just take a look at some of the sample projects, that would probably be your best bet
Do you look at the metadata in the file to see if the subs are already embedded? Most of my movies, I rip and embedded the subs. 
Also seeing captchas. I think it may have worked for the first few requests and then CloudFlare appears to have stepped in with the captchas. Not behind VPN FYI.
Databases store/persist data, and it doesn't need to be online. You most certainly do not need an online solution, which would be way too much to handle for you at the moment. The easiest way for you to make a database at the moment would be to take whatever your current list of songs is, and just write every path to a file. Then upon start up, load that file to your current list of songs. And there we are, a basic database. Understanding that, developers tend to want more than just the above, and maintaining that database file can be difficult for lots of data. So they use things like SQLite.
Not currently, nope. But its a great feature for an upcoming version :)
But who would write a movie in C#? 
I just checked my chat history with my teacher, when i asked about the database purpose in my case, since my player can load mp3s straight from pc, she wrote "you can host the song details and song files can be kept as the URL" Did you mean the same thing?
I had my final code posted and deleted it. Fixed that error. Thank you. 
No. Is one of the requirements specifically that part of it should be online? I mean, if it is, you could write this file to a server, but because it's a per user kind of file... This would not be the kind of topic coverable in a single class.
As a former C++ developer, this confused the hell out of me. For those unaware, lists and arrays are *very* different in C++. In fact, we avoid lists whenever and wherever possible due to relatively poor performance, at least compared to an array (or vector).
Double click the button and in that code section put application.exit there instead of in a lambda. If close works tho u can use that
Lol! Oh my poor grammar! xD
I think yes, because in other cases i think student will use basic forms window 1 into window, into window 4...etc.. and database will hold images and text mostly. But in my case since i have audio its different. The thing bout classes was, due to the hollidays and other events, we didnt have like 5 classed, so thats like half of the semestar (only once per week 4 hours) so i feel like she wants to catch up. She couldnt explain us all so she made a videos which i dont really understand, and i cant share it since it is on class start. This is the first part of the class, then there are videos. I just checked the structure of the classes by the curriculum should be like this Database setup and retrieving informatio, Search link with picturebox, CRUD on VB, Database II 
I see we've been downvoted by a butt hurt anti-pirate person
Okay, well, your teacher has a pretty good idea on how to meet the requirements then. You have song files to test with. On your server, you have details for those files. Such as the name of the song, the author, so forth. When you play the, fetch the details for the song from the server by sending the file name, which will return the details, and display those returned details somewhere. Display "Unknown" or something for any file details not on your server. That's your best bet.
Yeah I noticed and migrated to .NET Core earlier today. :-) So the current version on github is actually .NET Core 2.0, the binaries in the current release are still .NET Framework 4.6.1
Awesome!
So in theory i could kill two flies with single hit. If i maybe use "details" to be particular song name lyrics and then when i play that song in the player on a click of "lyrics button" it displays it in another pop up window as simple text file, how hard is t do that in terms of coding?
Maybe if it's a musical?
I'm fairly new to xamrin forms but maybe you can do this async? If so, it might 'appear' to shorten the time or maybe even shave a few seconds off the process. Sorry if it's a stupid idea, jist trying to help... 
You sure it isn't the other service being slow? If this is a Dev environment it might not get a ton of traffic and be shutdown. The fact that a network sniffer is showing this and not code profiler implies to me the issue is on their end.
gotcha, misread. You'll want to read [this](https://stackoverflow.com/questions/134224/generating-an-xml-serialization-assembly-as-part-of-my-build) then. It'll walk you through the true steps to do this. When dealing with giant .net generated proxies I've gone as far as move them into their own assembly to also help cut down on compile time too. That'll help across the board.
Nice work mate! Keep it up!
You have to start the .NET app before it will respond. The web server is waiting for the app to spinup. You can configure you app server (I assume IIS) to pre-start applications. IIRC its an extra install using the Web Platform Installer.
You can change your code and skip the auto generated assembly by using the HttpClient instead.
Meh, there’s probably some guy that knows more than you I would rather hire
I take the positive out of everything and "probably" is good enough for me. 
&gt; E: not sure why I’m being downvoted, it’s probably true You know perfectly well why you're being downvoted. 
I guess people can’t take the truth
Nah people just don't like socially unaware jackasses
This is great. I use media player classic ( I think ) which has a sub download feature built in. Yours seems like a smoother process.
Oh u mad bro? 
There's *probably* (definitely) nicer people that you :)) Keep it up OP, C# is life &lt;3
Back then I told you to name your methods as verbs and your classes as nouns... it seems like you still name them badly as seen in your library which has methods like Dns and classes like SendDnsPacket
Than* 
This is exactly it. When the service first runs it needs to load the underlying framework. That's heavy work. OP needs to do a warmup before it's ready for production.
I'm glad you're succeeding :) thank you writing this all up, and I hope to at another update 11 months down the line about how you now own the company! :D
Where r u located 
I got hired with less C# knowledge, (but some Java knowledge)
I don't think you need to worry about that. If you were looking for that class then you would know to look for a Sign or StopSign. The point is to name classes as a noun, it would be more analagous to the problem if you had called the class DisplayWarningForDriversToStop (or something like that). Better examples would be StringReader vs ReadString/StringRead, Calculator vs Calculate, etc.
Bullshit, I've hired people with great potential who don't know what they are worth and accelerated them quickly up the pay scale, just because someone has a lot of experience doesn't make them _good_ One of my grads is now leading a team two years later. 
With that level of enthusiasm you're going to fly - never under-appreciate what you are worth. Having infrastructure experience is really going to help you in development, I've had developers who can't fix this own computer and they didn't go far.... Are you London based? 
I interview for junior developers pretty often. Usually the better the resume looks, the worse the candidate. Most of the time, I don't get past my preliminary questions, which are fundamental object oriented programming language questions. Candidates can tell me exactly how their last project works, but have no idea WHY it works. Your code doesn't look bad (I can nitpick checking in the .vs folder, and using Uint16 instead of ushort) but I question if you know why you are using some of the patterns/interfaces/abstraction that you are - or if you are just following examples you have seen. If it's the latter, I'd spend some time understanding when and why to use patterns/concepts. Remember, it's always okay to admit you don't know something - and being passionate/driven is honestly the most important thing. I'd hire someone who knows very little but is extremely driven and ready to learn over someone who has good knowledge but is generally apathetic. Keep up the hard work - remember at some point, we all knew nothing. 
U mad bro?
There's no way I could read SendDnsPacket without thinking the class is for sending a DNS packet.
Good post. Ticks is the way to go for this type of calculation, I have a methid that i use benchmark code, which i can't recall at the moment but can find it easily tomorrow for you, it works rather well, using ticks to calculate execution times on any level. Likely you are encountering an issue you might be able to address using async coding methods. The problem you are having may be due to normal synchronous coding techniques which usually can be easily observed when working on the level of tick count (or various other architectural issues). 
You mean as in, by ref vs by val? One passes a the pointer to the value (ref) and the other passes the actual value (val). They both have advantages and disadvantages, both have their place. 
Ref（stands for reference ） passes variable's address, without ref it just passes a copy of that variable . So if you change a variable passed in with ref. You actually change the value of that address , The change still valid when its out of functions scope .Without ref, changing variable inside a function wont be effective outside that function
You pass a parameter by ref if you want that parameter to **keep** any changes made to it in the method. namespace ConsoleApp1 { using System; class Program { static void Main(string[] args) { var xLocal = 10; var yLocal = 20; Console.WriteLine("Before method call."); Console.WriteLine("xLocal=" + xLocal); Console.WriteLine("yLocal=" + yLocal); SquareIt(ref xLocal, yLocal); Console.WriteLine("After method call."); Console.WriteLine("xLocal=" + xLocal); //Should print out "xLocal=100" because this parameter was passed by ref. Console.WriteLine("yLocal=" + yLocal); //Should print out "yLocal=20" because only the value of the variable was passed, not the variable itself. } private static void SquareIt(ref int xParam, int yParam) { xParam = xParam * xParam; yParam = yParam * yParam; } } } 
I just posted [an issue at Github](https://github.com/tanjera/infirmary-integrated/issues/2) I know it’s long, detailed, has a lot of steps. Any help is appreciated and if you have any feedback, let me know! Thank you :)
Awesome! :D dont forget to bring your favorite snacks later!
Thank you :-) I hope you will enjoy using it!
What? No example of Swap or TryParse? 
This. create an asp.Net mvc project, a model and play round with presenting the model data to the view, manipulating it and then returning the changes. 
Most of the answers here are, at best, incomplete. For a better understanding of `ref`, read Jon Skeet's article on the subject: http://jonskeet.uk/csharp/parameters.html
&gt; A reference type, such as an instance of a class, will retain any changes a function makes to it, even without the ref keyword. One pitfall to bear in mind with this is that the *instance* will retain the changes, but not the *reference* itself. So if you want to do stuff like this: void DoStuffWithReference(ReferenceType obj) { obj = null; } This doesn't affect anything outside the scope of this method unless you use `ref`. So there's still a use case for using `ref` with reference types... although a very specific one that I personally would be very wary about. Not a good idea in most situations.
Would anyone else find this useful? I often find myself needing to swap branches to fully understand what broke, when the log files would have sufficed.
Ticks isn't really that accurate, it can be about 20ms out. async will make any timing issues significantly worse.
&gt; I think a crucial detail has been left out of other responses so far: the ref keyword is only useful when using a value-typed parameter Although I think you'd be pressed to find an instance where you should ever use it, I think `ref` could possibly be useful for reference parameters as well. References themselves are value types, and you pass them by ref if you want to change the reference at that storage location. For example setting a string if the passed value is null or empty. void MakeDefaultGreetingIfMissing(ref string value) { if(string.IsNullOrEmpty(value)) { value = "Hello World!"; } } string message = GetMessage(); MakeDefaultGreetingIfMissing(ref message); Console.WriteLine(message);
Cheers mate. Sadly not. I'm living in West Wales and dev work is somewhat sparse.
Haha!! Me too! Thank you!
Just buy and use NCrunch. That way, you get information about something breaking the moment it breaks. Your problem is better solved by running the tests much more frequently.
TryParse uses `out`, not `ref`. (They work the same way behind the scenes, but the scenarios for using them are completely different, so I think it's helpful for a beginner not to muddle them in together.) But if you think an example is relevant, why not give one? So, for OP's benefit: public void Swap (ref int a, ref int b) { int temp = a; a = b; b = temp; } Because the contents of `a` and `b` are both going to change during the method call, *and the caller needs to see those changes*, we use the `ref` keyword. Then we call the method like this: int x = 5, y = 6; Swap (ref x, ref y); // The use of the ref keyword indicates that the contents of these variables might be changed // Now, x == 6 and y == 5 
Cheers mate. Was that for an entry position? 
I agree. Naming conventions are something I need work on. Would you at least say it's getting better?
In Query.cs you have a method called *ConstructPacketFromSimple*, which leads me to think this'll construct a packet and return it. The code creates a packet, sends it off, and returns the reply packet instead. Quite confusing!
West Wales.
I agree. Not sure why this made perfect sense at the time. I suppose replacing Construct to Return would be the best option. I plan to make some huge changes regarding naming conventions in the next version.
Haha yeah that's usually the way it is. You do something and two weeks later you're going "what the hell was I doing here?". To keep being picky, *ReturnPacketFromSimple* isn't much better. Which packet does it return? The newly constructed outgoing packet or the reply? If what it does is perform a dns query, I'd include that in the name..!
I ended up keeping the name and using it as the name implies...construction of a SimpleDNS packet. 
Here's a hypothetical sequence of events: - plusStart set - Your process gets suspended while another process runs - sharpStart set - plusEnd set - sharpEnd set This will result in plusEnd-plusStart being higher than expected And another hypothetical sequence of events: - plusStart set - sharpStart set - plusEnd set - Your process gets suspended while another process runs - sharpEnd set This will result in sharpEnd-sharpStart being higher than expected. I don't believe there's any way of avoiding this. Windows is not an operating system which can be used for things that need precise timings. There are dedicated real-time operating systems that have different architectures in order to avoid exactly this problem, but not being able to ensure your program runs from start to end without interruptions just a part of any general-purpose operating system such as Windows.
So it would end up being private static IDnsPacket ConstructPacketFromSimple&lt;T&gt; where T : IDnsPacket() {} 
Just don’t do what I did - undervalued my worth and took a first job that paid well below what I could of got!
How long did you work there before realising you were being poorly paid? Was the for entry/junior level?
This might not sound like the answer you're expecting, but I've been a developer for nearly 30 years, and even now it's rare that I start a new job/project without a load of new stuff to pick up/investigate. To my mind, I don't think you can ever really know everything, or should even try. What makes a good programmer isn't the encyclopedic knowledge you retain in your memory, it's how resourceful and adaptable you are to be able to understand something new and get up to speed on it quickly so that you can implement a solid solution. Sure, over a long period of time you start to hold on to some of that experience for future work, but it's rare that you know it all. What's important is understanding what you need to know to do the work you're doing right now. Other people's mileage may vary, and there's nothing wrong with playing with stuff in your downtime to understand it better, but I've never really tried to create a structured framework for my self-study, and I don't think it's ever really held me back. (I don't know how old you are, or even if you have/are intending to have a career in dev, so some of the above might not be relevant).
Yes it was a C# Junior role paying £16k. It was a small, local company in Nottingham. I had gotten into programming whilst studying something else at Uni and wanted to move to programming. Problem was I didn’t have any friends in the industry who I could ask for advice. I ended up taking the first offer I got as I thought I wouldn’t be able to find much else. Realised when I got a new job 18 months later in Manchester which more than doubled my salary. I’m not too sure what a good junior wage is, but 16 is defo too low! TLDR; Do your research and don’t undervalue your skills. If you can go to the interview with genuine passion and a small portfolio of projects on GitHub (nothing fancy, just demonstrating what you’ve learnt), you will already be ahead of most of your peers.
On the .vs folder, here's a great resource with a bunch of templated .gitignore files: [https://github.com/github/gitignore](https://github.com/github/gitignore) Specifically, the [Visual Studio one](https://github.com/github/gitignore/blob/master/VisualStudio.gitignore) will handle ignoring the .vs folder \(and a bunch of other autogen/temp/build stuff\). I usually just grab the ones for whatever languages/tools/editors/frameworks we're using in the project, slap them all together, and use that as my .gitignore.
You referring to the 2nd edition Exam Ref? I used the first edition (By WOUTER DE KORT) and felt the exam questions were fair when relating to this book so I wouldn't completely right it off if your waiting for the 2nd edition. It has some pretty poor reviews and apart from spelling &amp; grammar, I would say the book is technically sound.
Wow that's easy enough. Thanks for the tip!
Best way to improve is to work with great, experienced developers. That’s what I got at my second job and it’s made me immeasurably better at what I do. Had a lot more fun too :) If that’s not an option, have a go at contributing to an open source project. I made a few small contributions to ASP.NET Core for this reason. You can’t beat learning from the people who build .NET itself!
I don't remember :) I think you also had methods with camelCase back then so I guess you've fixed that.
Makes way more sense!
Nice article, I'll be adding this to my extensions. LINQPad is always open on my machine.
I'd prefer this as an add-on, right now we already keep track of a history when unit tests run pre-build. 
Thank you!
&gt; the ref keyword is only useful when using a value-typed parameter Well, not really. It has uses for reference parameters as well, to allow a method to replace an object reference.
Unity? Your C# timing might be falling afoul of Unity's update loop. Input only gets updated once per frame. 
Fixed now, apologies! :)
The keyword `out` is just `ref` combined with the `OutAttribute`.
Console.READLINE is in capitals, csharp is case sensitive. Also I assume you are trying to evaluate whether the user inputs "yes". To do this you have to use the equals operator. If (Console.Readline() == "yes"). Furthermore, after having typed yes, you won't see the welcome message because the console window will close as soon as the welcome line is executed. To keep the console window open just put a Console.Read(); statement at the end of your method and the console will only close after you press the enter button again. 
I can think of one. bool TryGet ( string key, [Out] ref value); Though this could be written using the shorthand bool TryGet ( string key, out value); 
1) Keep your .xaml.cs file clean. You can inject your ViewModel as a dependency using MEF. I personally do this all for WPF applications because I like MEF. Use the ExportAttribute to register the ViewModel class as a dependency. You can use property injection to resolve the dependency by adding a ViewModel property with an ImportAttribute. 2) Implement INotificationPropertyChanged. I consider this a standard practice for WPF + MVVM. You want to leverage databinding to the point where a property change updates your UI. 3) Remove the Click handler and implement property commanding. Create a property for the Close command in your ViewModel and use databinding to attach the command to your buttons. The command property in your ViewModel should point to an action delegate that contains your on-close logic. 4) Move your externs into a seperate static class called Kernel32. This is a common practice and keeps a clear separation between platform invoked code and regular managed code. 5) Separate out your Windows Registry, Windows Management Information and Network Interface code into separate classes. The Computer.cs class contains too many logic for it's own good. 6) Don't write so much logic in your getters. These are executed each time you call the getter. Use privates for values that can be persisted or and use methods and call those from your getters. I hope these comments were understandable and helpful. You can google the topics that are new to you such as MEF. This is just my personal feedback and not the only correct way, or neccessarily a better way. Happy coding
Pluralsight has great courses that will provide you with a structured modular approach to learning such topics. They also have 'paths' that are longer multi-course pathway for learning an entire boarder topic such as a language.
As an alternative, see if you can use the TimeSpan along with the System.Diagnostics.Stopwatch. System.Diagnostics.Stopwatch sw = new System.Diagnostics.Stopwatch(); sw = System.Diagnostics.Stopwatch.StartNew(); [Do Stuff] sw.Stop(); TimeSpan ts = new TimeSpan(); ts = sw.Elapsed; Response.Write("total time (ms): " + ts.TotalMilliseconds.ToString()); 
Thanks for you response. You have brought up some good ideas that I haven't previously thought of.
Thanks very much 
If you want to see which filters are being triggered at certain points, I can recommend downloading this project: https://www.codeproject.com/Articles/58740/FileSystemWatcher-Pure-Chaos-Part-of This will show you which events are being raised and in the case of the changed event, which filter is being used. As in regards to your question, creation and deletion do not raised the changed event. In your code above all 3 are linked to the changed event. What raises the changed event is maybe you writing/renaming a file?
Learn a couple things beyond the basics, such as editor templates and partial views. On more complex projects (even medium projects) you will likely need to use them.
I find the first sample a bit deceptive as it is a bit longer than usual, I'd write it like this: var sites = siteData.Select(s =&gt; new { SiteName = s[0], SiteLink = s[1] }); var siteInfo = sites.Select(s =&gt; new { s.SiteName, s.SiteLink, SiteInfo = SiteInformation[s.SiteName] }); var siteContent = siteInfo.Select(s =&gt; new{ s.SiteName, s.SiteInfo, s.SiteLink, SiteDetails = GenerateDetailsSomehow(s) // untyped? -&gt; could use ImpromptuInterface ;-) }); or if I don't need the queries but intermediary values and result: siteData .Select(s =&gt; new { SiteName = s[0], SiteLink = s[1] }) .Select(s =&gt; new { s.SiteName, s.SiteLink, SiteInfo = SiteInformation[s.SiteName] }).Dump() .Select(s =&gt; new { s.SiteName, s.SiteInfo, s.SiteLink, SiteDetails = GenerateDetailsSomehow(s).ActLike&lt;ISiteInfo&gt;() // typed :) }).Dump(); Also, I only use `dynamic` as last resort. Anons are quite nice as they are type safe and immutable. F#'s `with` would have been cool and lenses might come in handy after certain size but that's about it - YMMV. When refactoring anonymous objects can become named tuples so it's not that bad. Once you port it to VS, you'll introduce classes/structs for them anyways. Apart from that - Once you (have to) work with dynamic/expandos this comes in really handy. Is there a reason you didn't release the code on github (yet)? That would have made quite a documentation. I guess its an awful lot of reflection under the hood. I also encourage every serious C# coder to get a LINQPad License - Maybe your employer wants to pay for it. Also: pay attention to the beta section on the download page every once in a while. Sometimes they are accompanied by tiny snippets - Save them (for later if you don't to fiddle with it right away in beta). That way I learned about `Util.Diff` and lots of other nice features. BTW: Is there a site that aggregates all the beta features along with their samples? Such a site would come in handy if introduce new colleagues LINQPad or our senior devs to the recent features.
I'm currently a highschool freshmen so theres not really a rush to get a job anytime soon. Im definitely interested in some sort of developer career though and I've really enjoyed C#. I'm just not entirely sure what's expected of me as a developer so I thought I'd prepare for the worst. Thanks for the advice though. Do you have any info about being a developer that would be helpful?
Code behind: https://gist.github.com/markovcd/3b5bf60fa0efe9ca1fb0512213350e43 Xaml: https://gist.github.com/markovcd/3d03e1287e2daf73bfc5bbe20d7be0e2
Interesting stuff but I am not touching pre-release Span. 
Here is a simple example that I have in a image processing program (this is semi pseudo code) Basically allows you to not have to explicitly assign a return from the `MutateRGB` method. struct RGB { byte R {get;set;} byte G {get;set;} byte B {get;set;} } Without ref, have to return a "changed" RGB struct RGB MutateRGB(RGB rgb) { rgb.R = 255; return rbg; } with `ref` can just change the RGB struct right here, `void` return type void MutateRGB(ref RBG rgb) { rgb.R = 255; } 
Removed: Rule 5.
see you if can get some time to be familiar with the code base before trying to solve the problem.
FileSystemWatcher is notoriously unreliable. The normal way of using it is as follows: 1. Take a snapshot of the directory to be monitored. Capture file names, dates, and lengths. (Checksum or hash as well if you want to me more accurate.) 2. Wait for the FSW to raise an event. 3. Add a delay so it stops raising events. 4. Take another snapshot of the directory. 5. Compare the two snapshots to see what has actually changed. Also, take snapshots on a timer because sometimes FSW misses and event or otherwise gets disconnected somehow.
By analogy, FSW is like waiting for a delivery man to ring the door bell or knock on the door. Sometimes he does one, sometimes the other. Some delivery men will do both, others neither. So you have to check the door for packages from time to time, not just listen to it.
It's all in another class that doesn't extend Monobehavior.
The aborting a thread section should just link to a goggle search for "why Thread.Abort is bad". It doesn't explain well enough just how dangerous it is.
Fair enough
When you talk about "list", do you mean "linked list"? Could you also include code for your `List` and `ListNode` (and other related) classes?
Try enabling events after you've subscribed to them 
Haha, I didn't mean to sound short on that comment, I just read it and was like "well...valid point, no arguments there", thanks :)
This will be useful also with the Roslyn interpreter/intermediates window! Thanks for posting this :)
A singleton is only accessed using a static method. It's impossible to access a reference to an object which has not been instantiated hence the entry point being static. Have a look at this [link](http://csharpindepth.com/Articles/General/Singleton.aspx) which give's a great explanation of the singleton pattern. 
Damn. Wish you were Down Under. All the best!
No way! That's what I'm working towards! Me and my family are in the process of selling our house with great intentions of moving over by then end of this year. 
Have you tried Googling for it? I did a search on 'c# string to float' and [this](https://stackoverflow.com/questions/11202673/converting-string-to-float-in-c-sharp) was the top result
i have been on that website but im generally new to coding and dont have the slightest clue on how to implement it into my code. 
If each line is one float, you can interate the string array and convert every string to an float by using float.Parse/float.TryParse etc. The results you put in a array or list and then you can sort them. If you don't understand something: Ask.
Well if you’re looking for work when you get here, hit me up. Am Sydney based.
i am an extreme novice and didnt really catch any of that, im trying to further my skills before i go to uni and would really like to get this done, Could you provide a snippet of what you mean so i could integrate it into my code? thank you.
Isn’t there a parse method? In VB it would look like: Int.Parse(*string*)
That's good to know. Cheers mate.
Just some code (which might not compile and is not formatted because I'm on mobile): Float numbers[] = new Float[fileLines.Length]; for(int i = 0; i &lt; fileLines.Length; i++) { numbers[i] = float.Parse(fileLines[i]); } After that you just need to sort the array
Exactly, my only concern is with the conventions, but I have found nothing so far.
I really wish NuGet packages would just include the license along with the DLLs. It would be trivial to automatically include them in any project that references it... if we had a standard for how it should be done. Does anyone know where Nuget feature suggestions should go?
Nice post! Looking forward for the next posts.
WinForm = old, but still easy to create simple GUI apps WPF = a bit harder learning curve, but more modern Then theres UWP - which I tried once or twice and its like WPF but even more "modernized" Depends what you want to make. If you want to sharpen your C# skills WinForm is easiest because its simple. 
Dont worry, we all started there. Just keep trying and maybe get a TA or a professor to help you out
Okay thanks! Are there any limites by using one of them? I've read that UWP doesn't allow you to access Win32 stuff while the others do, is that true? Also does the Desktop Duplication API and something like the Serial Port Library also fall under that ? I hope it's okay to ask this :\)
I agree that `dynamic` should be a last resort - but when I'm doing exploratory coding in LINQPad I'm usually happy to accept it. I'll have to check out InpromptuInterface. Completely agree about LINQPad licenses - I have a 2-user license just so I can put it on all of my devices (I have more than the limit, between work and personal machines). [RoslynPad](https://roslynpad.net/) is a free alternative, although it's not nearly as nice as LINQPad. Having Nuget and intellisense makes it sometimes more useful than free LINQPad if you really can't obtain a license for some reason.
You're right, I completely forgot that C# supports static classes, it wouldn't be a classic proxy because the class is not designed to have variants, this is just my me trying to stick with the conventions and to remove boilerplate code at the same time, I guess I could use a static class as one and then it would look like: Proxy.MethodA(); Where MethodA() is: public static int MethodA() { return Singleton.Instance.MethodA(); } Seems fine to me.
I would absolutely encourage people to prefer strong typing over dynamics like this. However, there are some use-cases (like exploratory coding in something like LINQPad or RoslynPad) where I think it's acceptable to use dynamics. This is definitely aimed at code which is temporary for some reason - either because you plan to refactor it once you have the behaviour you're after, or because you plan to throw it away once you have the results you're building. In these situations, sometimes it's not worth the overhead of creating types as you go. You should absolutely leverage strong typing when you're writing code which will stick around.
I haven't tried it in that context - please let me know if you run into any problems and I'll take a look.
IDK about the first question, I maintain an old WinForm and have only dabbled on side projects for WPF and UWP. I do remember that image manipulation was a bitch on WPF, so I went back to Winforms (i needed to do BitMap manipulation). You might have to do some indepth research or maybe ask the C# discord for more help on those latter things. Ive only done Serial IO via C and C++
Does `colAccountEntries[1]` (or perhaps `0`) work?
This is brilliant. Great ideas! I've incorporated these into my code base. Thank you.
Ah man! thanks a lot. https://ibb.co/ip8LMc This works. Much appreciated!
Will go ahead and cast then. Thanks a lot.
Interesting stuff, thanks for sharing!
Yeah
Several things I noticed - feel free to question my comments, do not assume I'm right, and do not blindly make changes based on my feedback. You want to think through and understand what you are changing before listening to a stranger on the internet. Let's talk about some high-level, abstract concepts. For all of these, it may seem like a pointless exercise to do it for such a tiny application. But practice small and apply to future endeavors. 1. Do yourself a favor and look at WPF themes, also known as lookless controls. Themes can apply to any user control, content control, window, etc.. Using this, you can quickly support different Windows visuals (Aero, Dark, etc.) without impacting your business logic. Right now, as you have it, the application will look the same regardless of how the rest of Windows looks. 2. All of your strings are hard-coded. Take a look at Resources in the project properties - make all of your strings be resources. You can use a static binding to pull them from the resource list at runtime. And now people can translate your application and use it in non-English locales. You already have a `Resources.resx` - use it. 3. I see code, but I don't see any tests. How can you prove it is working properly? How, when you start to add some of the above suggestions, can you show that you haven't broken something (also known as introducing a regression)? The answer here is tests - add some tests. Visual Studio has built-in support for authoring and running at your tests - look at test projects. 4. Take a look at code analysis (FxCop/Roslyn) as well. This helps find dangerous or problematic code. Now, let's look at your actual code. `MainWindow.xaml`: * Line 8: Nothing pisses me off more than a window I cannot resize or enforces a size. Why do this? WPF resizes really well (much better than WinForms ever did). Why not let me do so? Same for minimum sizes. If I want to resize and make your application hard to use, then that is on me. As a follow-up, you might answer that this sizing keeps all the information on screen or keeps it from being cut-off - wrap the grid in a `ScrollViewer` to give me a scrollbar and let that be my problem. * This applies to each of the rows, so no line number here: 1. Use the `Label.Target` property to associate each label with the associated text element. 2. Don't use a text box for non-mutable data - use a `TextBlock`. 3. Notice how each grouping is the same pattern of label/text, each with the same visual appearance, constructs, and usage? Move this into a standalone (and lookless) control and use that control here instead. Once this is done, you can drop the `Grid` and use a `StackPanel` instead. Then you won't need to specify `RowDefinition`-s either. 4. If you don't want to do #3 - use styles to avoid repeating yourself for some of the properties - like `Label.HorizontalAlignment`, `Label.Width`, and `TextBox.Margin`. You are already doing so with `Border.Padding`. * I've never enjoyed using async bindings - they've always caused me problems that are hard to troubleshoot. Instead, remove that part and have the viewmodel implement `INotifyPropertyChanged`. `MainWindow.xaml.cs`: * Typically, a control (or window in this case) will not define its own `DataContext`. It is typically supplied by a consumer (which is the Application in this case). * In MVVM, one typically does not wire `Button.Click` event handlers - instead one typically sets the `Button.Command` property to an `ICommand` implementation. The `ICommand` then dictates what happens when the button is clicked. Take a look at `DelegateCommand`/`RelayCommand` for what you could do here (and put the command in the viewmodel instead). `Computer.cs`: * P/Invoke methods (`GetTickCount64`) should be placed in a static class called `NativeMethods`. * The instance constructor assigns a value to a static property. Use the resources (`Resources.resx`) we talked about before. * All of the public properties here can have a private setter that invokes the `INotifyPropertyChanged` interface. This interface is what WPF uses to have the view update itself when data-bound values change. The class constructor can assign values via the private setter and property change notification will occur. * I'm going to have to sit down and read through the use of WMI classes here - something doesn't sit right with me, but I'm not on a computer that makes that easy. So - I'll come back and edit. Ditto for the registry usage. * Private variables typically use camelCase - like `details` instead of `Details"`. Public properties will use PascalCase. * The usual convention in C# is to use the type aliases for built-in data types: like `string` instead of `String`, or `uint` instead of `UInt64`. Similarly, use `string.Empty` instead of `""`. * The use of the `INotifyPropertyChanged` interface here and the use of `DelegateCommand`/`RelayCommand` will make it easy for you to implement a "Refresh" button. This will be useful for when I want to see the uptime update or see a new IP address. I will grant that other properties may not show new values, but those two can change over time. * I'm seeing uses of the HKLM registry hive, which means this may break when run under a limited-rights user or if it was deployed via ClickOnce. Might be worth trying out and making sure your application degrades gracefully instead of crashing. * What on earth is `GetUptime` doing? I'm not interested in a reply to my comment. I want you to put comments in your code to explain the `TimeSpan` math. Pretend the future maintainer of your code is a chainsaw-wielding maniac with anger issues. Give that maniac a nice comment EXPLAINING WHY so that maniac isn't angry with you. As another poster pointed out, learn about dependency injection. Especially when you get to writing your unit tests. The registry is a non-volatile dependency - which means when you go to test things, you can't fake a registry via the built-in static classes. So you'll need a level of redirection that can be injected. Ditto for the static `Environment` class. I'm going to pull a copy of the code and poke at some of the logic in the Computer class. Like I mentioned above, the WMI and Registry code looks off to me, but I can't put my finger on why.
&gt; Does anyone know where Nuget feature suggestions should go? https://github.com/nuget/home/issues
Yeah, you're gonna need to take the next step and move your sessions to something separate from your web server if you want any utilities around that.
 var lines = from s in File.ReadLines(filename) order by (float.TryParse(s, out var f) ? f : float.MinValue), s select s; foreach (var x in lines) { Console.WriteLine(x); } Although you could use [this overload](https://msdn.microsoft.com/en-us/library/cxt053xf.aspx). You'd need to write a method to perform the comparison, but that should be pretty straightforward. Array.Sort(newFile, YourComparisonMethod); YourComparisonMethod would need to take two strings, and return 1 if the first one is greater than the second, 0 if they're equal, and -1 if the first one is lesser than the second. Conveniently, both float and string have CompareTo methods that already do this. int YourComparisonMethod(string x, string y) { var floatX = /* convert x to float */; var floatY = /* convert y to float */; return floatX.CompareTo(floatY); // you may want to compare x and y as strings if the float value is equivalent, like if neither's parseable as a float. } There are three different ways to convert strings into floats (or ints, doubles, longs, etc) in C#: * float.Parse() -- takes a string, returns a float. Throws an exception if it can't parse into a float. * Convert.ToSingle() -- takes a string, returns a float. Not quite as picky and float.Parse(), but will still puke up an exception if it can't manage conversion. * float.TryParse() -- takes a string, and a float (as an out parameter), and returns a bool. If the string can't be parsed into a float, it returns false. The result of the conversion is returned in the float that was passed in. If you can safely assume that all the input will be parseable as floats, you can probably get by with Convert.ToSingle() or float.Parse(). If that's not a safe bet, use float.TryParse() and check on what comes back.
Check out MSDN page on [Notifications and the Notification Area](https://msdn.microsoft.com/en-us/library/windows/desktop/ee330740(v=vs.85).aspx). Despite its name, this refers to the system tray. 
Thank you. I added a feature request.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/dotnet] [Question about Nuget \/ Third party resources, how to best follow their licenses?](https://www.reddit.com/r/dotnet/comments/8b4dui/question_about_nuget_third_party_resources_how_to/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
The easiest way to clear all this up for you is to write some unit tests or a quick console app so you can see what's happening. See below. class Program { static void Main(string[] args) { { var primitiveByValueArg = 1; var primitiveByValueResult = PassingPrimitiveByValue(primitiveByValueArg); Console.WriteLine("Passing primitive by value:"); Console.WriteLine(string.Format("Param: {0} Value: {1}", primitiveByValueArg, primitiveByValueResult)); } { var primitiveByRefArg = 3; var primitiveByRefResult = PassingPrimitiveByRef(ref primitiveByRefArg); Console.WriteLine("Passing primitive by ref:"); Console.WriteLine(string.Format("Param: {0} Value: {1}", primitiveByRefArg, primitiveByRefResult)); } { var complexArg = new MyClass() { MyProperty = "Something Old" }; var complexResult = PassingComplexWithoutRef(complexArg); Console.WriteLine("Passing Complex without Ref:"); Console.WriteLine(string.Format("Param: {0} Value: {1}", complexArg.MyProperty, complexResult.MyProperty)); } { var complexArg = new MyClass() { MyProperty = "Something Borrowed" }; var complexResult = PassingComplexWithRef(ref complexArg); Console.WriteLine("Passing Complex with Ref:"); Console.WriteLine(string.Format("Param: {0} Value: {1}", complexArg.MyProperty, complexResult.MyProperty)); } { var complexArg = new MyClass() { MyProperty = "Will this work without passing by reference?" }; var complexResult = ModifyClassWithoutAssignmentToParameter(complexArg); Console.WriteLine("Modification of mutable Complex without Ref:"); Console.WriteLine(string.Format("Param: {0} Value: {1}", complexArg.MyProperty, complexResult.MyProperty)); } { var string1 = "By why passing by ref?"; var string2 = "So that we can swap params!"; SwapStrings(ref string1, ref string2); Console.WriteLine("Use case for passing by reference:"); Console.WriteLine("string1: {0} string 2: {1}", string1, string2); } } static int PassingPrimitiveByValue(int i) { i *= 2; return i; } static int PassingPrimitiveByRef(ref int i) { i *= 2; return i; } static MyClass PassingComplexWithoutRef(MyClass arg) { arg = new MyClass() { MyProperty = "Something New" }; return arg; } static MyClass PassingComplexWithRef(ref MyClass arg) { arg = new MyClass() { MyProperty = "Something Blue" }; return arg; } static MyClass ModifyClassWithoutAssignmentToParameter(MyClass arg) { arg.MyProperty = "Yes, because the param is mutable we can modify it without assignment"; return arg; } static void SwapStrings(ref string string1, ref string string2) { var temp = string2; string2 = string1; string1 = temp; } public class MyClass { public string MyProperty { get; set; } } }
UWP is only for windows 10 on desktop but can do other stuff: https://docs.microsoft.com/en-us/windows/uwp/get-started/universal-application-platform-guide WPF supports only desktop but supports older versions of windows. https://docs.microsoft.com/en-us/dotnet/framework/wpf/getting-started/introduction-to-wpf-in-vs WinForms was completely replaced by the aforementioned though WPF. Unless you're getting hired to work on a legacy application there's not much reason to learn it. If you're just after the drag and drop stuff, visual studio lets you do that with WPF too. 
&gt; You don’t have control over when and what order static classes get initialized, only that said initialization will happen at some point before any bits of the class are needed. In practice, .net always initialized a type right when it’s used the first time. It’s theoretically allowed to do it earlier, but that never happens. This behavior is relied on here and there as well.
Thanks for this informative piece, now I have learned something new.
What kind of c# jobs require you to delve into the assembly runtime c# compiles?
Now that was a great morning commute read! Now all I will see are secrets every time I use genetics 😂
You are storing a list of FileInfos and then recreating them later. I can't say for certain but it seems like that might be your problem. You should be able to access the stored FileInfos by doing something like "listBox1.Items[i] as FileInfo" try that and see if that is the problem. Also you need to work on your naming of variables, the way you are doing it currently makes your code harder to read.
Thx already, I'm gonna give it a try. The code ist just bits and pieces I found on the net and changed to my needs.
I think I'm going to scratch the the code for btn_save_Click and try a new/different approach. Odd thing is the message box with "File not found" doesnt pop up at all :/ I'm kinda hardstuck
I wanted to tidy the repo a little before releasing it - add some tests and improve a few things. But who knows when I'll get a chance, so I just pushed it up as-is. [Rophuine/ObjectExtend](https://github.com/Rophuine/ObjectExtend/)
Your while loop never changes current1 so it will either not run or run infinitely. Also what class is List? is it one you have written yourself because it seems odd.
Anything where performance matters and one is not too keen on going down to C++.
Have a look at [Console.ReadLine](https://docs.microsoft.com/en-gb/dotnet/api/system.console.readline?view=netframework-4.7.1#System_Console_ReadLine)
`Console.ReadLine()` blocks the program and returns the `string` that was entered by the user. You can use `int.Parse` or `int.TryParse` to convert a `string` to an `int`. You should then handle cases where a user enters invalid numbers.
You are trying to copy the FileName, not the FilePath. File.Copy requires the *full* path to the file, not just the file name. In this instance, it would require "D:\****\Versionen\50000_v001.tiff" as a parameter, rather than just "50000_v001.tiff"
My suggestion: learn how to read strings from the user first (e.g. "What is your name?", then when you enter Bob, "Hello Bob!"). Perhaps get the user to enter a first name and a surname then say hello to their full name. As others have said, you'll do that using `Console.ReadLine()` Once you're happy with that, *then* try turning strings into numbers in order to do what you want to do. You can do that using `Convert.ToInt32()` or `int.Parse()`. Once you've got that working, see what happens when the user enters something that's not a valid number. To fix this problem, you can try `int.TryParse()`, but that's a little bit more advanced and needs you to use the `out` keyword that you may not be familiar with yet, so don't move on to this step until you're completely happy with the steps that come before it.
Not sure there's a convention on it, because singletons are sort of uncommon in the first place and static interfaces are a pain to unit test around.
Removed: Rule 4.
Without seeing the code, my guess is that the list box is using just the filename but not the full path to the file. Find a way to reassemble the full file path and you sold be OK. Use `System.IO.Path.Combine`for this 
https://codeblog.jonskeet.uk/2010/08/29/writing-the-perfect-question/
Thanks for your answer. I didn't know about packet framing. I'll dive into it right after I figured out what you meant in your second tip. I already build my packet and send it in one go. The only thing I send prior the packet is its length. I can prepend it to my packet but I'll have to use two read async in order to recover the packet but I don't understand why it should be that way. I don't have large data to transmit. My usual packet size is around 32 bytes.
I made a different approach and everything worked as needed. I search for the files and copy them. Now the thing is, I have a list in .txt containing the folder names I need. Is it possible to import the list and search for the Folders and move or copy them. Doesnt matter if they get moved or copied
If someone handed me that in an interview question, I'd get up and leave. While it's interesting, it's not even remotely useful unless you're writing a new .net runtime.
"system tray" was never an official name.
Thank you for your reply ! I didn't know about MTU. I really need more knowledge about networking. Both MTU and Packet Framing didn't occur during my preliminary searches and since I'm all alone, having someone that actually **knows** the how and the why, pointing me in the right direction, is very valuable. I'm still doing some work on packet framing then will read about MTU. About my buffers, I decided to use it that way for now because I never used async/await before and wanted to be sure that everything was working properly before rework a suitable design. I'll definitely do what you advise me. Thank you again ! 
Some more concrete feedback this time. 1. The `Computer` class is doing too many different things. This goes towards what other commenters mentioned about the amount of code in properties and the single-responsibility-principle (the S in SOLID). You want to able to describe a class without using "and". So what does your `Computer` class do? It retrieves, formats, and exposes machine information. 2. Let's discuss `Computer.HKLM_GetString`: * The type `RegistryKey` implements `IDisposable`, so you should be disposing of it. * Please don't ever "do nothing" in a catch-block. It is exceptionally difficult to troubleshoot - at least log the exception thrown. * The registry is a dependency that you have no control over. So there is no guarentee that "Product" will always be a string in the user's environment. Sure, it should do - it's probably never going to not be. But we can check this: `RegistryKey.GetValueKind` and verify it. ``` private static string HKLM_GetString(string path, string key) { RegistryKey registryKey = null; try { registryKey = Registry.LocalMachine.OpenSubKey(path, false); if (registryKey == null) { return string.Empty; } if (registryKey.GetValueKind(key) != RegistryValueKind.String) { return string.Empty; } return (string)registryKey.GetValue(key); } catch (Exception ex) { Debug.WriteLine(ex); } return string.Empty; } ``` 3. The naming of properties in `Computer` should not start with "Get" - it's a property, we know it gets something. Call the property `ComputerName` instead of `GetComputerName`. 4. Let's discuss `Computer.addColons`: * When you are concatenating strings like this, you want to use a `StringBuilder`. It allows you to allocate memory in advance. Which you know - 17 characters. This is an improvement because strings are immutable and every use (read:creation) is a memory allocate. The line `newMac += mac.SubString(i,2)+":" involves the allocation of three strings (the substring result, the result of the + operator, and the result of the += operator)! * Rather than use SubString and play games with the colon. Let's play with the for loop. Let's think about what you are doing here - adding a colon after every other character. This is why you end up with a terminating colon that you need to cut off. We can change up the loop conditions, as well add an if-statement to control the injection of the colon. Specifically, we want add a colon before every other character, except at the beginning. ``` private static string addColons(string mac) { StringBuilder sb = new StringBuilder(17); for (int macOffset = 0; macOffset &lt; mac.Length; macOffset++) { if (macOffset &gt; 0 &amp;&amp; macOffset % 2 == 0) { sb.Append(':'); } sb.Append(mac[macOffset]); } return sb.ToString(); } ``` 5. Any use of `ManagementObjectSearcher` should be disposed - it implements `IDisposable`. Ditto for `ManagementObjectCollection` and `ManagementObject`. 6. In `getPropertyValueFromManObject`, the value of `obj` can be null. Refer to the caller and the behavior of `FirstOrDefault`. Elsewhere you are using `OfType&lt;T&gt;` and you should in this method instead of `Cast`. Or better still would be a vanilla for-loop here. I don't see the benefit of using LINQ here. Let's go back to `Computer.addColons` and talk about program design. In MVVM, a viewmodel is to expose data and the view handles presentation. In the case of a MAC address, the data is the unformatted string (without colons) and the presentation is the formatted string shown on screen. So why is your viewmodel doing presentation-related activities? You might say "well how else will the colons be added to the string, you want me to put this code in my view?" I'm glad you asked. I want to introduce to you an interface called `IValueConverter`. This interface can be used within a binding for manipulate a value. So you make a value converter to transform the unformatted string to a formatted string. ``` [ValueConversion(typeof(string), typeof(string))] class MacAddressValueConverter : IValueConverter { public object Convert(object value, Type targetType, object parameter, CultureInfo culture) { string rawValue = value as string; if (rawValue == null) { return null; } return addColons(rawValue); } public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture) { throw new NotImplementedException(); } private static string addColons(string mac) { StringBuilder sb = new StringBuilder(17); for (int macOffset = 0; macOffset &lt; mac.Length; macOffset++) { if (macOffset &gt; 0 &amp;&amp; macOffset % 2 == 0) { sb.Append(':'); } sb.Append(mac[macOffset]); } return sb.ToString(); } } ``` But now this introduces a new problem. You are displaying a concatenated list of IP addresses and MAC addresses in the view. So where would this converter get used? The `GetIPv4` property returns a formatted string. Herein is the issue - it shouldn't. This property should return an collection of IP address and MAC address viewmodels. You can use another value converter to convert the collection of data into the presentation string. This removes the formatting logic from your viewmodel and let's it remain a presentation concern. Create a new viewmodel - I'll call it `NetworkAddressViewModel` with two public properties - `IpAddress` and `MacAddress`. And change the `GetIPv4` property to return an `ObservableCollection&lt;NetworkAddressViewModel&gt;`. ``` public ObservableCollection&lt;NetworkAddressViewModel&gt; GetIPv4 { get { ObservableCollection&lt;NetworkAddressViewModel&gt; collection = new ObservableCollection&lt;NetworkAddressViewModel&gt;(); foreach (NetworkInterface netInterface in NetworkInterface.GetAllNetworkInterfaces()) { if (netInterface.OperationalStatus == OperationalStatus.Down) { continue; } if (netInterface.NetworkInterfaceType != NetworkInterfaceType.Wireless80211 &amp;&amp; netInterface.NetworkInterfaceType != NetworkInterfaceType.Ethernet) { continue; } IPInterfaceProperties ipProps = netInterface.GetIPProperties(); foreach (UnicastIPAddressInformation addr in ipProps.UnicastAddresses) { if (addr.Address.AddressFamily != System.Net.Sockets.AddressFamily.InterNetwork) { continue; } string ipAddress = addr.Address.ToString(); string macAddress = netInterface.GetPhysicalAddress().ToString(); collection.Add(new NetworkAddressViewModel(ipAddress, macAddress)); } } return collection; } } ``` But if you use that, you'll notice your IP Address view is now broken. Because we need to add the value convertor to turn the collection into a string! For the converter: ``` public object Convert(object value, Type targetType, object parameter, CultureInfo culture) { ObservableCollection&lt;NetworkAddressViewModel&gt; collection = value as ObservableCollection&lt;NetworkAddressViewModel&gt;; if (collection == null) { return null; } StringBuilder result = new StringBuilder(); for (int x = 0; x &lt; collection.Count; x++) { if (x &gt; 0) { result.Append(", "); } result.AppendFormat( "{0} [{1}]", collection[x].IpAddress, collection[x].MacAddress); // Use the MacAddressValueConverter to format this string. } return result.ToString(); } ``` And in XAML add a resource and use the resource in the binding: ``` &lt;Window.Resources&gt; &lt;local:NetworkCollectionValueConverter x:Key="NetworkCollectionValueConverter" /&gt; &lt;/Window.Resources&gt; ``` ``` &lt;TextBox Grid.Column="1" Grid.Row="9" x:Name="TextBox_IPV4" TextWrapping="NoWrap" Text="{Binding Path=GetIPv4, Mode=OneWay, Converter={StaticResource NetworkCollectionValueConverter}, IsAsync=true}" Margin="0,4,20,0"/&gt; ``` The use of the value converters goes towards the single responsibility principle as well as maintaining the separation of concerns. The viewmodel should just expose data for data-binding. The view chooses how to present it - in this case formatted via a value converter. Notice the view doesn't do the formatting itself, that is pawned off to the value converter implementation. 
With TCP you're guaranteed that your packets will make it, in the correct order, with the correct data. However, you're not guaranteed they'll land in one read. This means even if you sent 3-4 packets on the other side, your client might receive them as 1 or vice versa. Depending on network settings and load. The point of data framing for protocols is to allow you to be able to make safe assumptions about your packet. Now, I didn't read the article posted, but I'll explain how I do it. First, you want some type of signature for your packet, some set of bytes that define your protocol. Say 0x010203, a signature allows you to scan for the start of a packet. It'll help to allow you to discard badly framed messages, in the event of a disconnection or malicious packets. Next, you can use a byte or two to define the packet length. This will tell you how many more bytes you need to read for your packet. So depending on how long your longest message is, use 1-4 bytes. Then you put a function code, (the order of these doesn't really matter), the function code tells you what this packet represents. Is it a foo message or a bar message, this will allow you to process the payload. Depending on how many different message types, that determines how big of an FC value you'll need. After this, I usually put a crc or a check sum. Given that the data is guaranteed to be good. I put this just to prevent getting hung up if fuzz data is sent. So what's next? Let's say you chose 0x010203 as your signature. 
You could put an stx and etx at the beginning and end of each message, and then on the receiving end fill a buffer with multiple reads until you find the etx, in which case you have the full message. Putting the length of the message after the stx would allow you to know exactly how much to read.
I made some reading last night and pretty much agree with all you say after that, even though the scope of the project is not that big and it will never be multi-threading, I realize that there is actually no valid reason (except a little less writing) to do what I wanted to. Thanks.
Very nice answer, thank you ! Your explanation is quite good but I have to admit that I didn't do my packet structure like that. I'm not super good for optimization but I'll definitely have to have a bug optimization pass on this server/client design. At this moment, I mainly use enum (casted as int and then converted to bytes) to determine my package type (If I'm not mistaken, that's what you called a function code). Having a signature, as you said, seems very efficient and practical and I added this task for the next sprint. For the packet length, I'm using a Int32 for now, so 4 bytes instead of 1-2 as you advise. I may use a Int16 (or UInt16) to reduce the weight knowing that my packets rarely exceeds 32 bytes size. Probably that I can force byte type on my enums to save around 50-60% of my packets size because I can use multiple enum in a single packet. This will also permit me to avoid a cast to int and then a conversion to byte, saving some cpu cycles. Even if I'm very enthusiastic about that optimization subject, I can't just do it yet since the client doesn't fully works. But I managed to implement a packet framing that work for one packet but has wrong/corrupted/misread data length information in the next one. I'm looking into this at this moment. Thank you again !
There is no best way. Everyone learns differently. I just thought of a fairly simple console app and started working, asking google everytime i got stuck or didnt know the exact syntax. I already knew from C++ and Java when i started so that was the best approach for me. You didnt give us any background information to work with. Do you already know some languages? If so which ones? How do you usually go about learning new things?
Anyone understand what the ref local re-assignment thing is about? All the others are either performance or convenience related, I'm guessing this is another performance thing for things like Span?
[removed]
Re-using local ref variables, e.g. int _foo; int _bar; void Method() { ref var i = ref _foo; i = _bar; // Will copy the value of _bar into the field _foo // I want i to point to _bar now i = ref _bar; // Compiler error, not allowed. }
Can you describe what that is.
I'll check that out, thanks.
It lets you create a generic that only works with enums. `public T GetValue&lt;T&gt;(string input) where T: System.Enum {}`
Removed: Rule 4.
Go with winforms. With WPF and UWP you have to get bachelors degree in philosophy just to create a window.
The ability to constrain a generic type to being an enum. Not something with a lot of value, but handy/useful in some specific situations.
Right, That works too. My mistake there. Haven't really used VB since VB6, so I'm rather rusty on some aspects like default properties. 
These days they are easy, just like C# except you can change the name from Item to anything else. The old days of funky default properties are thankfully behind us.
&gt; tidy the repo a little before releasing I was like that myself and can still relate. Lot's of code solving interesting problems is inaccessable because of it. But once you publish a library any user is keen to peek, especially when the behaviour is not as she expected. Is it a bug? Maybe. Am I using the API wrongly? Who knows. What does the documentation say? Not clear enough. Only the code can tell. If people don't have access to the code, they may use a decompiler/disassembler. The decompiled code sometimes answers their questions, sometimes not - as the original code may be totally different. Ever put an F# lib into de4dot? ;-)
I wonder if calling them mixins outright would have been the better choice given the extended ??? apocalypse that "default interface methods" has generated.
Thank you. I haven't had a chance to play with it since I trail behind releases.
Or something like Typescript's unions? `where T: U || V`
WinForms will never be completely replaced. It's basically MFC for the .Net CLR. It's a relatively lightweight wrapper around raw Win32 calls. It's simplistic, which makes it easy to grok. I have yet to *need* WPF for anything.
`enum` and `delegate` constraints for only enums and delegates seem to be mentioned as possible future features.
It looks like it's only for unmanaged constraints [link](https://github.com/dotnet/csharplang/blob/master/proposals/csharp-7.3/blittable.md) Or did I miss something?
&gt;I seem to have solved the problem by passing passing `object[] {input}` instead of a `string` can anyone explain why? Because `DynamicInvoke` takes a [`params`](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/params) argument. Arguments get automatically wrapped in an array by the compiler, unless the sole argument is already an array of the right type. So your original code ends up passing an array containing a single null reference, instead of a null reference itself.
Most of the singletons I see in .Net are set up as follows: * The class provides instance methods. * The constructor is restricted (private, or sometimes protected). * The static instance is a property and is public-get/private-set. If a manually-defined backing field is needed, it is also private. * The Current instance is instantiated by first-use (lazy loaded) unless there's a performance benefit to pre-initialization. In that case, pre-initialization is done explicitly via a public static method, not as part of the static constructor. * Instance initialization should be done via a protected *virtual* instance method. * The static instance is *usually* named Current. The ones where it's named Instance are mostly found in projects ported from Java. This can sometimes serve as a warning sign that a third-party library won't behave the way most .Net libraries do, so developers can investigate and plan accordingly. Generally speaking, singletons are not overused like they are in Java because C# has a long history of implementing useful (alternative) features while Java was stuck in the mud for nearly two decades, gathering cruft and bad "best" practices.
No slicing :(
please tell me the values are always in the same order? if so this is beginner friendly and will work: read a line. perform a split. for loop over the resulting array. say age is always the 3d value. start with ageno = 3 and do an ageno+= age; every time your loop counter reaches ageno. oh and save that value from the array however you need it, thats your match. con: you'll then need to offset the count by the difference in split returns in the next readline operation. alternatively you could read by the char and count commas that way. you'd then have to assemble the age or other values from the chars inbetween commas.
Prepend your packets with a size so you know when each packet ends and when the next starts. Funnel all writes and reads though a single queue for each. If you want to write packets, you have to add to the write queue then process each queue entry in order. Same goes for reads where you fill up a queue with each packet received. Everything is handled one at a time and sequentially, no two packets are ever sent at the same time. When you receive packets, you have to pass them to a router that empties the read queue and passes them to whoever is supposed to handle that packet type.
&gt; enum and delegate constraints for only enums and delegates Uh, why would I want other thing? No, seriously, why would I want to receive System.Enum or System.Delegate instead of the actual enums and delegates?
Also, just my 2 cents, most people who go for a job interview could potentially fill the role so sometimes it comes down to personality, will this person be a fit and work well with others. So smile and be polite and friendly, makes more of a difference than you'd think. I've been on both sides of that table.
From the article OP linked as the post &gt; In addition to bug fixes, this release brings the following C# 7.3 features: &gt; &gt; * System.Enum, System.Delegate and unmanaged constraints. Only unmanaged has a link to a proposal, but there's stuff in the language design meeting minutes that mentions that enum and delegate constraints are something they're working on.
Finally!
There is usually a warm-up hit, which is why tools like BenchmarkDotNet run a few iterations prior to the actual benchmarking. &gt; 00:00:00.0022532 0.002 seconds isn't noticeable. 0.1 seconds is considered the threshold that users perceive as "instant".
Internal NuGet server and adding dependencies into the nuspec or packages file of the project depending on your preference. 
Yes isnt really that noticiable, I was a little mad because that 0.002. But after some test looks like the difference only happen within Unity3D, I test the same in a empty C# project and the time was consistent.
Wow, I am still digesting your original response. Thank you so much for your time and expertise. I will work on this and your more in depth reply during the week. So far, I have: * added the Aero theme * moved hard-code strings into my resources.resx * I installed the analysis VS extension, but have not had enough time to review the results. * undid window resizing restrictions * added in Label.target * I looked at `TextBlock`, but want the user to be able to copy to clipboard, so I will stay with `TextBox` * rewrote `GetUptime` but have not yet moved it into NativeMethods class. You gave me a great list of things to improve &amp; I am still working on them. Thank you very much, I really appreciate it! 
Because then your type wouldn't be generic.
You may not NEED WPF, but WPF is a direct replacement for WinForms and I can't think of any case where it would be preferable to use over WPF unless you're looking to run with Mono.
The fields initialized using pattern deconstruction syntax. And the compiler is actually smart enough to remove the deconstruction code from the final assembly. 
Unity is using a different runtime than standard .NET applications. There could be extra overhead for dynamically invoking delegates. Perhaps you can try minimizing the amount of reflection used. Maybe try tweaking the `RunMe` method to take a collection of your `reciver` objects and perform the iteration/invocation of them in there. That way you only create and invoke the one delegate instead of `toExecute.Length` delegates.
I think [Roslynator](https://marketplace.visualstudio.com/items?itemName=josefpihrt.Roslynator) covers [ConfigureAwait(false)](https://github.com/JosefPihrt/Roslynator/blob/master/docs/analyzers/RCS1090.md) among the [many other](https://github.com/JosefPihrt/Roslynator/blob/master/src/Analyzers/README.md) issues it analyzes. I can't say whether or not you can disable everything else by default, if you just want it for ConfigureAwait issues -- I haven't changed it's settings in any way.
Wow, these are excellent ideas. I am going to implement them. It's nice to really see the different aspects of MVVM in a very concrete program that I have written (poorly) vs how it should be written. Thanks again. 
In your example, you're iterating through a collection of Func&lt;int&gt;, invoking the func and doing something with the result. If you cache the results of the IEnumerable&lt;Func&lt;int&gt;&gt; in Cycle, you're caching the function, not the result of calling it. That should mean that your method still behaves as you expect. This would be different if your example was foreach (var elem in new Func&lt;int&gt;[] { () =&gt; rand.Next(0, 1000) }.Select(f =&gt; f()).Cycle()) { if (i++ == 100) { break; } Console.WriteLine($"Iternation #{i}: {elem}"); } If Cycle cached *here*, you'd be caching the results of invoking (via the Select() call). Where this matters is for something like IEnumerable&lt;string&gt; EnumerateLines(TextReader x) { string line; while ((line = x.ReadLine()) != null) { yield return line; } } because TextReader wraps a stream, which advances its position on each read. If Cycle() didn't cache on something like this, you'd enumerate every line in the file, once, and then you'd be stuck in a busy wait, because the state of the stream underneath the TextReader doesn't get reset (so x.ReadLine() will just return null, and later enumerations of the same IEnumerable&lt;string&gt; will have nothing in them). For this situation, it would need to be cached for your method to work properly. If it didn't, the first MoveNext() after exhausting all the lines in the file probably becomes an infinite loop.
This update, as I understand it, was purely a removal of the compiler error emitted when using System.Enum, System.Delegate, or any sub-class of either of those classes as a generic constraint. All delegates are subclasses of System.Delegate and all enums are subclasses of System.Enum, so the only thing lacking is keyword support. If you want to make sure System.Enum is never passed as the parameter, use T : struct, Enum. Similarly for delegates, use T : struct, System.Delegate
Where I work, we have many libraries that we converted to Nuget packages about 4 years ago. We build and publish them to a webserver and added that repository to the Nuget package manager in VS. Keeping our projects with any of these dependencies a breeze to manage and always up to date. 
Not too sure about how your input file looks but here is how you should do it: https://dotnetfiddle.net/dwrNGn First, we should start doing object oriented programming as soon as possible, so out of Main() and into classes. The first class I created was the `CensusReader` class. This class is responsible for reading the file constaining the data (In my example I used fake data generated from a method, but you can read it in with the real method since you actually have the file). The next class is a `CensusItem` class. This class is responsible for holding the data about one person (or one line of data) so you can construct it by passing a correctly formatted line, such as those the `CensusReader` class reads in. Then in Main() all we have to do is create a `CensusReader` class, tell it where the file is, and ask it to read the file and ask it to print it to the console. Now I'm not sure what your `districtCount` method was supposed to be doing or even what the district stuff was in general, but I hope you can take this program now and expand the classes to be more useful. If you have any questions about the code, please ask. I may have used a feature of C# you've never seen before and I could explain how it works.
Yep, it does.
How does it work,,though, if the types have non-overlapping methods? How do you use them?
Man, this ref stuff is really ugly :(. Fortunately the vast majority of coders can ignore it. 
This ref stuff might be the difference between being able to do high performance code in pure C# or being forced to use unsafe or get out of the CLR into C and C++.
Yeah, it's really intended for resource relevant code (aka hot paths) where small improvements can have huge impact.
I've had a few requests for source code on my Object.Extend Nuget package, and it's up on github now, but rather than making people who want to understand it dig through code I wrote up an explanation. http://www.nerdhold.com/coder/2018/04/11/how-csharp-object-extend-works/
Hi Tulip, According to me ReSharper is better and it feature is pretty impressive.As you are auditing some code you can check SnappyTick. I've been using SnappyTick to check out C++,Java and .NET source code. it's one of the best static analysis tools you'll find among paid tools.Moreover I have heard that it's even more impressive on C# than others language. For more information you can refer :- https://snappycodeaudit.com/
&gt; The name [`unmanaged`] isn't [awesome], though. For a really long time, the name was expected to be `blittable`, despite the fact that it would also allow `bool`, `char`, and `decimal` (which are all non-blittable types). The phrase "unmanaged type" has long had [a specific meaning](https://github.com/dotnet/csharplang/blob/ab97e523f990ad43303107cad8160a81dd07f313/spec/unsafe-code.md#pointer-types) in the C# spec that's consistent with this, so I'm content with it.
Removed: Rule 7, spam.
Thank you everyone. I've sorted it. Thank you for your help. I will send a snippet of what I used when I get back home at my pc. :)
This is the default form that appears when you start the program.
In that case, please post the contents of Program.cs. Also please post the form’s constructor, including where the InitializeComponents method gets called.
Some of your methods is calling itself, for example instead of base. Some of your properties are using itself instead of fields.
Contents of Program.cs using System; using System.Collections.Generic; using System.Linq; using System.Threading.Tasks; using System.Windows.Forms; namespace ThisApp { static class Program { /// &lt;summary&gt; /// The main entry point for the application. /// &lt;/summary&gt; [STAThread] static void Main() { Application.EnableVisualStyles(); Application.SetCompatibleTextRenderingDefault(false); Application.Run(new Demo()); } } } Form's constructor public Demo() { try { InitializeComponent(); thisThing = new Thing(); thatThing = new Thing(); } catch(Exception f) { MessageBox.Show("Exception line 29 " + f.ToString()); } }
Can you give examples?
I’m not seeing anything wrong here so far, so let’s try a different line. Could you please set a breakpoint somewhere (anywhere) in InitializeComponent, then press F5. When it stops at the breakpoint press F5 again. Let’s see whether it hits the breakpoint once or many times, and try to prove or disprove the recursion theory so we can decide what to do next.
Ok. So press F5 a few times, and when it reaches that breakpoint for perhaps the fourth of fifth time go to the menu bar and select Debug/Windows/Call Stack. Then let me know the top four or five lines of the call stack. You could also double-click on each line of the call stack and see if it takes you to some code that is creating a Demo form that maybe should be.
With pattern matching
I use Roslynator and I've turned that rule off, since it recommends adding ConfigureAwait(false) to every await, which is not particularly useful IMHO.
&gt; ThisApp.exe!ThisApp.Demo.InitializeComponent() Line 31 C# ThisApp.exe!ThisApp.Demo.Demo() Line 22 C# ThisApp.exe!ThisApp.Diagram.Diagram() Line 42 C# ThisApp.exe!ThisApp.Demo.Demo() Line 24 C# ThisApp.exe!ThisApp.Diagram.Diagram() Line 42 C# ThisApp.exe!ThisApp.Demo.Demo() Line 24 C# ThisApp.exe!ThisApp.Diagram.Diagram() Line 42 C# ThisApp.exe!ThisApp.Demo.Demo() Line 24 C# ThisApp.exe!ThisApp.Diagram.Diagram() Line 42 C#
I get a "Class not registered (Exception from HRESULT: 0x80040154 (REGDB_E_CLASSNOTREG))" Right now I'm testing with 65.0.3325.181 64bit.
Thanks for that. I should be able to figure it out from here. Have a good day.
This method would cause a stack overflow: public int foo() =&gt; foo(); so would this public int foo() =&gt; bar(); public int bar() =&gt; foo(); or this property: public int foo { get { return foo; } } Check the stack trace of the exception you're getting. There ought to be a lot of calls to one or two things, one after the other, in there.
&gt;adding ConfigureAwait(false) to every await That is exactly what I was using ConfigureAwaitFixer for.( I still think false should have been the default.) I don't see how to configure the RCS messages, are you using a global suppression file?
Finally :p
Did you try searching google for "C# decompiler"?
Yes, C# .NET projects compile to an intermediary language called CIL. You can view this using a tool like [IL Spy](https://marketplace.visualstudio.com/items?itemName=SharpDevelopTeam.ILSpy). This is assuming the initial developers haven't obfuscated the code rendering it unreadable.
Well, I'm asking here for a reason. So no. I didn't know it was a thing that existed, otherwise I would have just gotten it myself. Do you often google things you didn't know existed?
Yes, it is possible to de-compile C# programs. I've used ILSpy successfully on a piece of code deployed at a client where *we* didn't know which version was installed anymore and that specific version needed to be patched. If the code is obfuscated, then it will probably be unreadable / unusable without deep reverse engineering. Be aware that de-compiling a supplier's program might violate your license agreement with your supplier and expose you to legal risks (including license termination and/or financial penalties). There are typically anti-decompiling / anti-reverse engineering sections in software licensing contracts.
&gt; Do you often google things you didn't know existed? I do. https://www.google.ca/search?q=reverse+compile+c%23
This is also good information, ill pass this back to my manager...we may end up just contracting them to make the changes if that is the case.
The difference here is that you knew it existed, and I didn't. I don't know why you couldnt answer without being shitty, the way everyone else did. But whatever floats your boat, chief. 
Wouldn't know. That's an IT problem, and I work for a small company too. We have a single IT person. It's literally just a folder share. It's not even exposed externally. Super easy setup. 
You don't necessarily have to setup a full blown nuget server if you're in a situation where you don't have the time. You can drop the packages into a shared folder and add the location as a source. 
To find new things I try with the words I know and Google suggests things. The term decompiler may be unfamiliar to you, but searching for "reverse compile c#" was good enough to find a result that could have helped you.
The term "decompiler" isn't unfamiliar because he used it in the "Question" portion and the text hasn't been edited it.
VSTS and TFS 2017 and later have one built in. You can use this task in your build definition: https://docs.microsoft.com/nl-nl/vsts/build-release/tasks/package/nuget?view=vsts
Since it’s a .NET application you can decompile it using DotPeek or ILSpy, both are great programs but ILSpy is still under a lot of development. A lot of cool features reside in DotPeek. 
Youre right, I assumed without looking at the usernames that the same person replied. Thats my fault. The original commenter was the one being shitty, not the person who replied. My apologies, /u/throwaway_lunchtime. Lunchtime actually was helpful, but because I assumed it was the same person, the tone read differently. Regardless, the original commenter couldnt have answered differently, like everyone else did.
In our EULA and Contracts, we have the following section: The Software may not be copied, reverse engineered, decompiled or disassembled, or redistributed or otherwise disclosed in whole or in part to any third party, without the prior written consent of *****. Title, ownership rights and intellectual property rights in and to the Software will remain in *****. This license will automatically terminate if you fail to comply with any of its terms.
read a book on unit testing. actually writing unit tests is trivial, but you'd be surprised how little people understand how to do it correctly, what they should be testing, etc. a book will do into detail about all these things that reading a simple blog post won't.
Just buy yourself the book "The art of Unit Testing" by Roy Osherove and read it. This is a great start to learn about unit testing in general and ob top it uses C# as example language and some great unit testing related frameworks like NUnit and NSubstitute iirc.
Je ne me ferais pas trop de soucis: Un "Unit Test" est un petit bloc de code qui vérifie que une fonction retourne un résultat correct pour un set de paramètres en entrée. I wouldn't worry too much: A "unit test" is a small bloc of code that validates that a function returns a correct result for a set of input parameters.
I don't understand what is the problem?? Did i post something wrong
for more answers: stackoverflow.com :-)
i think its a good idea, do you have know some good books who is talking about the Unit Test ?
The Art of Unit Testing by Roy Osherove is a good read on the subject, IMO. 
excellent. Thank you for being so helpful. I admit I could have probably found this myself, but being that its work related and the project is past due, I just wanted a correct solution. 
Unit tests are generally very simple. The one thing that confuses people sometimes is mocking. You should ask lots of questions, your mentor will be happy to answer. The only mistake you can make is to stay silent when you don't know something.
Oh merci pour le lien ! J'ai encore 1 mois pour apprendre et me documenter à propos des tests unitaires donc je pense que ça ira. Oh thanks you for your link ! I have one month to learn and document me about the Unit Test so I think that will be fine. 
If you had just typed “reverse compile c#” in to google you would have a million results. It’s literally in the title of your post so I know you know the words for it. 
Bonjour :) I work with a few VIEs and it's great you're showing initiative. Unit testing is just coding, but it encourages you to write code in a specific style. 'eXtreme Programming' (XP) covers more than just unit testing. To help you search, look for C# TDD (Test Driven Development) tutorials. Just like coding, it's both very easy to get started and very difficult to be an expert in, but you will be fine. If you have Visual Studio installed, you can use MSTest easily with its integrated test runners. In the real world people use MSTest, XUnit and NUnit most commonly, so any of those three will probably be helpful. Along side tests we have mocks, so perhaps google Moq and see if any of that makes sense. Just read the introduction, it's a lot to get your head around on day one :) You will get a lot of mixed information about writing tests because there are different approaches you can take and some people prefer one while others prefer another. I'm a classicist for example so use mocks selectively (That will make sense soon enough ;) ). The only real goal is to make the software you write more reliable and easier to enhance. I wish you the very best. 
He has a [YouTube Channel](https://www.youtube.com/user/osherove) as well which has a bunch of talks and covers areas of unit testing. It's in English though, but maybe you can make use of them.
as said else where, you arent wrong. However, its a work project, and past due (through circumstances out side of my control), so I wanted a correct solution that I knew was correct from the get-go. Sorry that I didn't meet the golden standard of self reliance, here. Im on a time crunch do to other peoples fuck ups and dont exactly have the time to be as self reliant as I normally would be.
You seem to be missing the point. Google should be your first stop. Check Rule 4 on the sidebar.
I'm not the one missing the point. The rule says "with effort". It doesn't mention anything about google. My effort was utilizing resources at work who are more knowledgeable than I. Just because you don't agree with my effort doesn't give you (or anyone) a right to be shitty/passive aggressive.
Oh thanks you for all of your informations, I'm gonna to check every things about what you Say. I was afraid but Reddit community is the best !
Je m'apelle Andy. I like potatoes.
instead of temp you just aswell could have called it 'SuperDooperNumberSaverOfDestruction' or whatever. the name doesn't effect its purpose. And 'temp' is num01 until you overwrite it with some other value you need this because you overwrite the original value of num01 and when you do this you lose the value stored and you have no way of getting it back unless saving it somewhere 'safe'
'=' assigns the right side value to the left side. temp = number1; //temp is assigned the value of number1 number1 = number2; //number1 is assigned the value of number2 number2 = temp; //number2 is assigned the value of temp (which has the original value of number1)
I managed to make it work thanks to your explanation and, now, I also know how to improve it so thank you again !
The key to understanding this to understand what the "=" sign does. (Side note - there's a thread in /r/programming right now about exactly this topic, and I've commented in there with my experiences of how beginners find this really quite confusing. You are not alone - but you may want to go and find that article/thread and read it.) The = sign does *not* mean that two things are the same. What it does is find out the value of whatever is on the right of the = sign, and store that value (temporarily, perhaps) in the variable on the left. So: - Let's say number1 has the value 5 and number2 has the value 6 - Now, `temp = number1` means give the variable "temp" the value 5 - `number1 = number2` means give the variable "number1" the value 6. Note that, if we had not copied the number 5 to "temp", we would have lost it, because the variable called "number1" doesn't contain that number any more - `number2 = number1` means give the variable "number2" the value 5 - and hey presto, we've swapped the values around
Wow, Nuget file sources and package creation is way easier than I thought, thanks!
I have a small project for which I wrote tests, some of which qualify as unit tests. Some would disagree with my testing approach, but the tests are there. The project: https://github.com/antiduh/VersionedTimer The tests: https://github.com/antiduh/VersionedTimer/tree/master/VersionedTimer.Tests Maybe that'll give you an example. Also, what the word 'testing' means to one organization or another could be completely different. Some organizations have very large, complex systems, and thus would have many different types of testing. You should be aware of this and make sure you understand what they mean by testing.
lol just walk away. You lost this one, chief.
Awesome reply : ) Really helped. I heard others say "=" just assigns a value? Is that right?
Got any good recommendations for tutorials on Mocking? I've been writing C# for years but still have yet to wrap my head around it. I mean on a really basic level I understand what it is and what purpose it serves, but I haven't quite learned it as effectively as I'd like by this point..
I totally get what the code means now :) but how will i remember these principles for the future, it's not hard but can be tricky : /
Go fuck yourself you piece of shit
Can I download your project to see how it's work ? ( I prefer Ask before do it ) 
Yep. You don't have to ask if the project provides a license file that tells you what you can do with the project. In this case, my project uses the BSD 2-clause simplified license, which boils down to "I don't care what you do with the code; modify it, sell it, ship in a tivo, just don't blame me if it breaks".
I don't unfortunately - most of the stuff out there doesn't really explain mocking as a concept, just demonstrates how to use various libraries. In my words, mocking is about controlling the environment around your unit of code under test. Instead of having it read physical files or making actual network calls or even just calling other units of code, we use mocks to easily and 100% reliably stage situations for our unit. 
I use dnSpy and it works really well for C#[dnSpy](https://github.com/0xd4d/dnSpy) 
If T4 isn't solving your problem I imagine a custom solution with CodeDom makes the most sense. 
Seriously, we don't expect you to know everything, but being interested and keen enough to learn stuff is what makes you a great candidate :)
Yes, Managed Extensibility Framework is the MEF I was referring to. You need to add an assembly reference to System.ComponentModel.Composition. I've created a simple example for you, it features MEF in a basic for and registers the entire application assembly. The registration occurs for types with the [Export] attribute and the resolve occurs on properties with the [Import] attribute. Typically the registration is done at the Composition Root which I use App.cs for. In this example I did it in the constructor of MainForm. It also features Notification Properties and Commands. https://gist.github.com/Ericvf/3dff055fdfcd5d26005c3b0f15610a5c
Bad bot.
This really helps, thank you!
I created a ruleset in the root of our source tree. We have a set of common build targets that we import into all projects, and so I set the ruleset in there. I add global rule suppressions to that file manually, and add exceptions via the UI to the GlobalSuppressions.cs file in each project. Code analysis rules are useful if they point out things that you might be doing wrong with a low false positive rate. Suggesting ConfigureAwait(false) on every await when you're doing UI work is a much too high false positive rate, and so the rule is useless.
Look into test drive design. Basically you want to write your unit tests first (they will fail of course). But it allows you to test as you go and your code will be testable from the start
Va voir sur le site OpenClassroom le cours de ASP.NET. C’est aussi du C# et il y a une section nommée “tests unitaires” ou quelque de similaire. Ils expliquent en détails comment ajouter un projet de test à ton application sur Visual Studio, référencer ton projet à tester puis faire tes tests unitaires. C’est assez facile en fait il te suffit juste d’écrire un bout de code qui va appeler la fonction à tester, puis tu faire un Assert.Equals(le résultat Attendu, le résultat retourné) et en fonction du résultat du assert ton test sera noté “passed” ou “failed”. 
Thanks, exploring that today. It looks much easier than I thought
*"UnitTestin's fer suckers!" * - Rockstar Broveloper, Texas
In one of my current project, I'm using T4 to generate the file, but the actual content is built with a class so that the T4 file stays really simple.
Here is a simplistic example of mocking Say you have a program that needs to read from a text file and it needs to read the first 10 numbers and use those numbers to perform some math. Instead of actually having it read from the text file, you can mock the results of reading the text file. That way, instead of modifying the text file to change the numbers constantly, you can run several mock tests where each time the mock results have different numbers or maybe nine numbers instead of ten to test error handling.
Oh jy avais pas pensé, j'irai faire un tour ducoup merci beaucoup ! Je pense qu'avec tout Reddit au niveau documentation et renseignement jai tout ce qu'il me faut pour apprendre encore merci.
This makes sense, and more or less confirms my understanding of it. Every example I looked at seems a bit convoluted and loses me quickly. I'll give it another shot though :) 
So you could have one mock test throwing a FileNotFoundException to test how your code handles it as well, right?
Yes, you can test for exception errors. 
Maybe u prefer to not using a temp variable. It works like this A = 5, B = 18 A = A + B, A becomes 23 B = A - B, B becomes 5 A = A - B, A becomes 18 Have fun 😊
Find out what Unit Test framework they use. Here are some possible options: * xUnit (my favourite - I hope they using this one!) * MSTest * NUnit ...then find a tutorial online. Good luck!
&gt; I did put effort into my issue before posting here. Not googling it is not putting in effort.
Try to figure out what unit testing framework they are using. If you have to write it on the spot during your interview, it will help a lot as there are nuances between frameworks. Also, you may want to take a look at mocking. This may or may not be applicable to your task. 
Awesome. Good work. As a tip, I wouldn't worry so much about optimization, for now at least. None of what I described is really for optimizing anything. It's mostly for correctness. You can easily frame your packets in STX/ETX, or just send the length at the beginning. However, you can run into issues with false positives. What if you want to send 0x02/0x03 in your packet? How do you know when to discard a bad message? How can you guarantee that you're at the first byte of the message? You also have no guarantee that if you send 1 packet or 3 that they'll land on the other side as 1 or 3. The 1 packet might end up as 3, and the 3 might end up as 1. For the most part, the other solutions aren't incorrect, they'll just elicit bad behaviour when the data gets out of alignment, or the packets contain characters that are in your frame. You can remedy this with other guarantees between your client and server, like standard timeouts and the like. Then you have to document this and ensure that all parties obey. etc. I'd say that this rather simple technique will make your program more robust, without too much extra effort. Anyways glad I could help. Good luck and happy coding!
You could have typed your question, with the addition of ".net" straight into google and gotten an answer.
You should *really* learn how to ask questions on the internet. Especially when dealing with programmers. In the old Usenet days you'd have been flamed up one side and down the other for not having tried to find out yourself.
Post what you've tried so far.
I've said several times elsewhere in this post regarding why I didn't. Look, if y all don't want to read questions regarding C#, then don't sub to the subreddit. Full stop. Here we have 4 or 5 people being helpful, and the rest feeling the need to circle jerk each other off about how putting previous effort into a post **must** include googling. It's pathetic. I put effort into before posting here, and I'm not responsible for it not being what you think it should be. Down vote all you want, I don't care about karma. The only people getting these kinds of replies from me are ones posting comments like you did. Everyone else who is actually helpful gets grateful replies. With the exception of the one person who I apologized to.
Welp good luck with that. Those helpful people will get tired of lazy questions just like the rest of us eventually. Lucky for you there's always a fresh batch of suckers willing to help leeches.
Again. I posted why I didn't. Im not really responsible for your poor opinion or need to flame others for not meeting your expectations. There were plenty of people here willing to help without joining the circle jerk. FYI, your elitist attitude is part of the reason programmers have the rep they do.
And this attitude is exactly why programmers have the reputation they do. It's sad. 
It’s very useful and lots of features, you can even export to Solution sln to open the whole source code on visual studio
What the hell is wrong with asking someone to put in a LITTLE effort to help themselves? Until you started getting pissy with people who were trying to do you a favor nobody was mean to you at all. You seem to think everyone should bend over backwards to be your personal google but yet it's programmers that have a bad rep?
I did put i effort. It obviously just wasnt enough to meet the circle jerker's standards. Thats not my fault. I only started getting pissy when the inevitable post of "why didnt you google it" came. &gt; Did you try searching google for "C# decompiler"? Do not sit there and try to tell me it didn't have the same tone as your elitist reply talking about "batches of suckers" and leeches. Literally everyone else gave me more than enough information than what I asked for. There is literally zero bending over backward required. Simply a yes or no, and a program name to research if yes. If youre too exclusive to do that, then dont comment. This is a community, and if you can't handle being a part of that community, then leave. I came here because I knew I would get the right answer, not an answer I would have to spend time testing myself just to find out wasnt right. Im in a time crunch that is no fault of my own, and i dont really care if you understand or respect that.
Unit tests are easy to write when those conditions are met: 1) You know how the system should work - including all the edge cases (especially those). 2) Code itself is testable (architecture)
Operator|Purpose :--|:-- =|Assign a value ==|Equals
We used automapper in our project. It is indeed a very nice tool when it‘s about simple mapping from object to object. It gives a broad variety of configurations you can set. (For example the mapping to properties with different names is easy possible.) We are also using it as the step after the database, using to ProjectTo&lt;&gt;() method. Using this, the mapping is directly packed into the expression structure of the query. Currently we are step for step removing automapper from our project again and moving to a more manual way. The main problem is, that it does lots of its functionality in an magic expression-reflection way. This may on one side have effect to performance (but I cannot approve this) on the other side it‘s more about “intransparency“. Means, you don‘t really know what it does with your data and how it does it. This is, as I said at the beginning, not a real problem when just using it for simple maps as you described.
Documentation about the “different name“ mapping is here: http://docs.automapper.org/en/stable/Projection.html
Thanks for the response. This was more of my worry, that it may make sense to just take the extra time to map stuff manually, especially given some of the customization we want to do, because then we'll have complete control on what is going on, when anything gets mapped. I'm hoping to hear what other people's thoughts are too. 
Well, simply, mocking, is putting an "mock" or "pretend" implementation of something in place of the real implementation. Basically passing in a test implementation of some interface, or class, designed to return certain values specifically for the test. It starts to look confusing when you look at mocking frameworks. (Like Moq). But all they are really doing is providing you with a way to build these test instances programatically, so that you don't have to create an implementation for each variation. For example, with Moq: (this is off the top of my head so apologizes if the usage is slightly incorrect) ```c# // Create our Moq Mock object var myMockObject = new Mock&lt;IMyInterface&gt;(); // Setup the object when someone calls MyMethod on this mock object, that it returns "Hello" myMockObject.Setup(m =&gt; m.MyMethod()).Returns("Hello"); // myMockObject.Object contains the instance of IMyInterface we just setup for, that'll do what we told it too, so we pass that to our object under test, which is simply asking for an implementation of IMyInterface var myObjectUnderTest = new TestObject(myMockObject.Object); ``` Moq, and other mocking frameworks, provide lots of ways to build the mock object and it's test behavior, and also provide ways to verify that they were called as you expected.
What don't you understand about mocking? 
https://github.com/BrandonHilde/PixelArt
company*
Two ways to do it, one easy... one hard, one good one not so good. Console.CursorLeft and Console.CursorTop or PInvoke CreateFile with the console as the target and then write ConsoleInfo structs to the file for each console text cell. 
Performance is atrocious, and doing it manually is not that painful at all.
If I had to change the name of most of the properties in the mappings I would probably write the code by hand instead of using a mapper. 
Nobody's said this yet, but: don't feel bad about not knowing unit tests. My experience has been that they aren't really taught in universities (at least, wasn't taught 10 years ago when I was in uni, and my brother, who is graduating this year, had no idea what a unit test was when I asked him if he had experience writing unit tests). Other than that, there's a lot of good information on this thread. Roy Osherove's book is fantastic.
Tomorrow I will talk to my teacher about the Unit Test let's see if he can tell me more. And yeah I really think I'm gonna to read this Book and learn everything about the Unit Test its sound exciting !
I think you can just add a data annotation. [Table(“TableName”)] 
What does your DbContext class look like? My guess is you may have accidentally added a DbSet&lt;BookViewModel&gt; instead of DbSet&lt;Book&gt;.
Nope, that didn't help; I'm still getting the BookViewModel...
What is your dbcontext? 
Is it? I hadn't heard anything about performance for many years now. It's roughly the same as manual mapping (minus the time to actually write the manual mapping code).
 public class ApplicationDbContext : IdentityDbContext&lt;ApplicationUser&gt; { public ApplicationDbContext(DbContextOptions&lt;ApplicationDbContext&gt; options) : base(options) { } protected override void OnModelCreating(ModelBuilder builder) { base.OnModelCreating(builder); // Customize the ASP.NET Identity model and override the defaults if needed. // For example, you can rename the ASP.NET Identity table names and more. // Add your customizations after calling base.OnModelCreating(builder); } public DbSet&lt;WebbyMcWebface.Models.BookViewModel&gt; BookViewModel { get; set; } } Not sure how the BookViewModel collection got there; would creating a migration make it appear? Or should I add a Book collection here manually? Should I create a separate DbContext for each table instead?
see [this comment](https://www.reddit.com/r/csharp/comments/8bk71t/trying_to_learn_aspnet_core_with_ef_core_why_is/dx7ffvj/)
Your dbset should be Book, not the viewmodal. 
I've been doing more research and pretty much came up with a lot of these conclusions. The performance hit seems to be a non issue with the latest versions, and I can see it doing some things that if we went the manual route, we'd have to build anyways, and I like that. I'm definitely a fan of of the concept that if someone else has built something that's well established, it's almost always going to be better than what you can build on your own. My two hangups were performance, which seems to be solved, and the fact that we were going to have to do a lot of the mapping manually anyways. But seeing as how there are other benefits to using auto mapper, it's starting to seem like it makes more sense to use it, and do that manual work within auto mapper itself, as opposed to building our own. 
the colon after each label is a bit silly from a UI perspective. Maybe you could right align the labels next to the display element too
So I don't need multiple DbContexts, only multiple DbSets? Good to know! Now I'm trying to figure out how to get an instance of my DbContext; I see Startup.cs is configuring it in a service container but I don't know how to access that service container...
Automapper should do you for this. The custom mappings can be a pain though. If view names are just being changed for user friendliness could you just decorate them with DisplayNames? Automapper is great when you don't have to custom map. Secrets in the name I guess
It's very likely the case.
Incorrect. Lack of time, not inability. The only person here with inability seems to be you, because I've posted several times in this thread the particular reasons why I didn't Google. Regardless I got what I needed done, no thanks to the oldtimer circle jerkers who can't stand to help a nub. Gtfo.
EF Core doesn't know what you mean by "view model". It doesn't even know what view is. It only understands basic tables. My best advice is to stop screwing around with EF migrations and learn a real database schema management tool such as SSDT or Liquibase.
I've got to wonder what's the difference between AutoMapper and CS-Script. Because I can't imagine what they're doing to make it go that slow unless it's using reflection.
Same. This looks awesome
Removed: Rule 4. In particular, the clause: &gt; If a question that could have been easily Googled is asked without indicating what and why those typical results didn't work, it will be removed. That said, it doesn't give lease to rag on the user as bad as what happened here. Sometimes users don't know the right terms to search, sometimes it slips their mind to give it a shot, eh, sometimes they're even lazy. Doesn't give anyone justification to violate reddiquette or Rule 5. Report and move on and/or casually/respectfully point out that there are a lot of options on Google and to give them an attempt.
The [long form descriptions of the rules](https://www.reddit.com/r/csharp/about/rules) do explicitly state it. The shortforms on the sidebar do repeat the entirety of the rule text.
My mistake. I keep forgetting there are long forms of rules. I'm sorry.
Removed: Rule 4.
The debugger is your friend :D.
Copy your json data to clipboard. Open visual studio project. File | Paste special | paste as json class. PFM. Pointing to the c# json class data is as easy as standard serialization/deserialization then className.root.something.anotherthing[3].ToString(); Happy coding! 
😐
Only if you use crayon or chalk font and write all letter S's backwards. Toys R Us font works too. 
You don't need to cast Data, you just need to make a Data class with the given properties.
I'm currently only on mobile so not 100% certain it works that way (although what you want is definitively possible): You could use a [https://www.newtonsoft.com/json/help/html/CustomJsonConverterGeneric.htm][CustomJsonConverter] to decide based on the type value what specific data class it should be. (You don't have to implement the write method if you don't want to serialize it)
I don’t know much about code in general but I do know that an emoji is much more data than ascii text and the compiler will have a hell of a time decoding each emoji into binary. That being said you could likely build a compiler that could handle it. Then you might need to build an entirely new language also. Why you would want to do this is beyond me.
In a way, a company that expect you to work in a certain style (which you can read about on the internet and books) is better than a company that just asks about "c# programming" without clear guidelines and standards. After all there are infinite programming styles. These things are common enough that you should be expected to have a decent idea of how they work, but it's not necessarily a school topic. Many people learn this on the job. Unit testing is a good way to start too. You'll learn how the software works and try to find problems (and eventually resolve them) without risking breaking down the software. After all that's what unit testing is for!
No, according to the C# language spec identifiers are limited to mostly alphanumeric Unicode characters. It's not limited to the latin alphabet, however, `aᛟᚹᛚᚦᚢᚦᛖᚹᚨᛉ` is a perfectly valid identifier.
Why don’t you try it and let us know? 
Lots of new changes I wanted! Well done all :)
That's sad. I guess I've to look for some insert/substitution plugin, which replaces certain words with icons or images. I've seen something like this for python, but haven't seen it for C#.
Why: Most games use symbols and forms instead of strings, because those can be recognized with a glance. Pattern recognition is faster than reading. What works in many other fields, might work in code. I dunno, that's why I'd like to experiment with it.
It doesn't work in vanilla C# on VS2017. But there are many powerful plugins, so maybe someone knows a way.
Unit tests are just methods ran one by one which "pass" if they don't throw an exception. You label tests as such by putting a [Test] attribute on the method. Here's an example, ``` [Test] public void Add_Success() { int result = 2 + 2; if (result != 4) throw new Exception(); } ``` Bam, you just created your first test to confirm that 2+2 is 4. From there you can go into pretty deep stuff like Mocks/Stubs with Dependency Injection and test fixtures and all sorts of stuff, but all of this is just building off that simple test method that either passes or fails by throwing an exception.
You should check out TinyMapper. We use it in all our projects now. AutoMapper is pretty slow but it does do a lot of things.
That makes sense. I could see how that might be easier. I would look into how the computer reads code though because as I understand it the more abstract or higher level the code is the longer it takes the computer to read it. So an image like an emoji would take much longer to decode than a character. That just means you would have to limit your programs to do simpler things. something fun you can do to get deeper into how the a language works is in VS 2017 you can hold control and click on a variable or method implementation and it will bring you to something closer to assembly code and you can see what it's doing with the ram and CPU and all that.
I have a benchmark runner we created for testing the fastest way to map objects. I'm modifying it right now to do different property names but I can post the results of it and all the forms of mapping we tested. 
UTF-8/16
You might want data to be converted to a dictionary (probably `Dictionary&lt;string, string&gt;`), not a class.
Does it also offer a serial Library? If not I probably have to stick with the "old" .Net 
OK, this is getting me somewhere. I think the last piece is need is how to then access the properties that are on that custom object. Here's what I've come up with: public class Custom { public string ID { get; set; } [JsonProperty("data")] private JObject JsonData { get; set; } [JsonIgnore] public CustomData Data { get; set; } public string Type { get; set; } public bool Enabled { get; set; } [OnDeserialized] internal void OnDeserialized(StreamingContext context) { switch (this.Type) { case "registry": this.Data = JsonData.ToObject&lt;RegistryData&gt;(); break; } } } public class CustomData { } public class RegistryData : CustomData { public string key { get; set; } public string hive { get; set; } public string action { get; set; } public string valueData { get; set; } public string valueName { get; set; } public string valueType { get; set; } public string description { get; set; } public bool valueNameDefault { get; set; } } If I toss a breakpoint into the OnDeserialized method I can see that this.Data gets set properly as a RegistryData object with all the properties. After the object has been deserialized, I pass the whole array of custom objects to a method that loops through them: foreach (Custom c in this._custom) { Console.WriteLine(String.Format("{0}, {1}", c.Data.hive, c.Data.key)); } This of course throws an error that 'CustomData' does not contain a definition for 'hive', etc. and I can't compile, even though if I debug the section I can see that the 'c' object in the loop has a Data object which in turn contains the 'hive' and 'key' properties.
I don't think compilation speed or performance would be an issue. Emojis and other image lists don't need to be saved as an image, they are just renderings of unicode charaters. 👍 is a representation of "U+1F44D". And after compilation there shouldn't be a difference at all. The core problem is rendering the source code and extending the text format to something more visual.
I would love to see that!
Perfect, thanks. Pattern matching is doing the trick.
MyGet (commercial license) is what we use. We have things wired up in our build server to push to MyGet when PRs get merged in GitHub.
Damn dude, what's your phone number so I can call tech support the next time I get a bug.
A good example of a unit test is something that exercises a single public method. For example, a method to take in a string and output morse code. You can easily define a list of 5-20 examples where you know what the input set is and what the expected result set is. You don't care how the method works, only that if you give it value A that you get value B back. Tests follow the pattern of AAA 1. Arrange (or setup) your code / data 2. Act on the SUT (system under test), feeding in what you arranged 3. Assert on the result For example (xUnit syntax): [Fact] public void Test_that_we_get_back_empty_string() { var input = ""; // arrange our input var result = input.ToMorseCode(); // ToMorseCode() is an extension method on type string, this is the "act" step Assert.Equal("", result); // Now the assert step } Then you write more tests like this until you feel like you've covered most or all of your edge cases and normal use cases. (Handling someone that gives you a null string, empty string, a string with odd characters, a normal string, etc.) If you're getting into mocking dependencies, or having to create lots of test stubs, or having to care about how things work internally. Then you've strayed a bit out of unit testing and into integration testing. it's also a code smell because your methods are difficult to test without injecting lots of mocked out dependencies.
You could mock out an entire API call. What happens in your code when the API returns a 500 error? Or a 404? Or hands back a specific XML or JSON response? Those are all useful things to test for since you often can't make an API misbehave on purpose. So you mock out the API call and have it always return a static answer.
Removed: Rule 2.
You said "pdf file would be generated by my program with some PDF library down the future" and that is your concern right now. One of my option for that is https://zetpdf.com/ because it has the ability to create, edit, convert, protect or print pdf documents, without requiring Adobe Acrobat. See if it is right for you. I hope this helps.
Exactly what part of rule 2 does this violate?
If you really want in-depth, "xUnit Test Patterns : Refactoring Test Code (Gerald Meszaros)". It covers test smells (plus project/code smells), the philosophy of test automation, fixtures, test doubles, organization, dealing with databases and other external dependencies, and designing for testability.
Rule 2 stats no malicious or harmful software. This is neither of those things. It in no way modifies the Spotify application. Let me ask you this. Do you run an adblocker in your browser? My guess is that you do. This program is no different than an adblocker, except it targets a different medium.
You might be able to modify the compiler to do so. You can usually have identifiers that are invalid in c# in the exe, and .net doesn't mind. Source: looking at obfuscated code in a decompiler. 
Recently did this with Roslyn, using [Roslyn Quoter](http://roslynquoter.azurewebsites.net/) to help, and it turned out pretty well. It can be a little verbose, so it is often smarter to do some parts of it with strings that you parse, modify and insert into the tree.
Ad Blockers for browsers have legitimate uses such as preventing user tracking, resolving unresponsive/broken sites, or blocking unwarranted obscene ads. Ad networks on sites can literally break websites or serve inappropriate advertisements. Spotify has a business model. Users can pay to remove ads. Piracy falls under the umbrella of harmful software. Perhaps we'll amend the rule to make this clear.
Amazing book, probably one of the best books to get on this subject. 
Extreme Programming by description seems to be really good for training people, so sounds like you hit a good position. Unit Testing correctly can be really valuable to learn, but in essence it's pretty simple, you write very small, executable code 'examples' that exercise and test the code / product in the smallest parts (units) So it's going to be very simple to pick up, but hard to master, and sounds like you will get a LOT of hands on experience and communication with the team. Perfect for a placement position!
In the [compatability pack](https://www.nuget.org/packages/Microsoft.Windows.Compatibility). 
What he means is that you - I know that it works in MVC - can set a DisplayName attribute on the properties. This let's you control the name manually (via a string as parameter). In WebAPI I thing you can use the JsonProperty attribute for this. But I am not sure.
Databases are one of the most widely-used technologies in software today. So, yes, a very large amount of software engineering jobs will require you to be able to work with them. SQL included.
A lot of entity frameworks try to isolate you from the database. So in theory it's possible to get by without knowing any SQL at all. But you're limiting yourself if you do that. You should be able to understand the SQL that the frameworks generate, and you should be able to do ad hoc queries yourself, to look at the data in the database. I'm with you - when I was getting my degree I hated the database course. First normal form, who cares about that? Outer join? Boring. But I have been a developer for almost 30 years now and at least half of an average work day is spent doing SQL. And I have learned to love it. A well-written chunk of SQL is like magic. So yeah, you might be able to get by without it, but you're not going to help your career if you do.
My professor is a lifetime SQL guru, and admitted this intro class is actually more of a mid level class. He likes making the questions complicated, as he thinks they are easy. To him they are. But it's an unpleasant learning experience trying to soak this in. I feel like the majority of this language could be put in a GUI of dropdown selections, reducing the need to stumble over syntax. You are right, it's not nearly as interesting as my other coding classes. But I'll learn it if it's needed. Thanks for the info.
Roy Osherove starts with simple things like "what does a test make it a *unit* test". Imho it's important to know those basics. So the first chapters are in no way hard or digging too deep into the material for a beginner. He can easily omit advanced stuff like generic tests and so on. But the time the OP advances - may it during his internship or after - he can pick up further topics. So I would agree that you can't grasp every detail or advanced stuff from the beginning, but the book primarily offers a solid foundation to start with. So I think it's worth buying even if you just focus on chapters 1 to 3 or 4 or so. 
Would not recommend T4 for anything complex. It is clunky. Simple reflection works the best for me. Usually Most of the functionality and complex logic is implemented in base class so generated code only has to add base class function invocations for properties or fields. 
throw 💩; 
Really interesting. As another poster said, mono is dead... but this is an interesting insight into an area I didn’t know much about, and there are some useful tidbits in there like the System.MathF namespace that I haven’t seen before.
I’ll second the above comment almost exactly. I really didn’t enjoy my databases classes in uni either, but a few months in the real world and it all kinda ‘clicked’. Stick in with the class, don’t be put off by a bad professor, and see how it goes in your first job! Good luck!
SQL is great for learning how to think in terms of sets of data. It's another facet in your development skills. Even if you manage to find a job without SQL explicitly then you'll likely be using LINQ (language integrated query) in C#. This is perfectly valid C# code, and I'm sure it looks a little familiar! var gameIds = from product in products where product.Category == "Games" select product.Id; I'd urge you to persist and try and at least find some appreciation for SQL as in all likelihood you'll need the skills you learn now at some point in your career. What is it specifically that you don't like about this class anyway?
&gt; I feel like the majority of this language could be put in a GUI of dropdown selections, reducing the need to stumble over syntax. Any GUI would be slower to work with compared to a typed up script. Also, it would make tweaking things impossible. Btw, if you want to work with .NET, I suggest you install MsSQL instead of MySQL (it's Microsoft after all and typically more people use it together with .NET) and just play with it (as in create a simple app that needs a database and looks for ways to model the data). Don't be discouraged, a lot of the time uni classes are not a measure of how things actually work in the real world :) 
I'd suggest looking at Roslyn. My company generates thousand of views, viewmodels and code behinds daily, as well as hundreds of various message classes too. This is all done using a generator we created using Roslyn that takes an xml file as an input and then generates the correct files from this. As already suggested, [Roslyn Quoter](http://roslynquoter.azurewebsites.net/) can be a massive help here, although you can often do away with large parts of the output from Quoter as it's often too verbose. If you can easily reason about the structures you need then Roslyn is pretty easy to use.
Maybe you should just google ".net string.remove", since the entire standard library is well documented. The second hit on Google (the variant which takes two ints) is what you want.
You can loop up the documentation for all framework methods here: https://docs.microsoft.com/en-us/dotnet/api/?view=netframework-4.7&amp;term=string.remove
TIL about projectTo, that's really nice
"n" is a variable - it represents the value passed into the function, in the same way that "str" represents the string passed in. So from each time this function is called in the code above, n will be either 1, 9 or 0.
I've rarely seen anyone actually using the LINQ query style syntax though.
I guess it depends on the team / app / circumstance, but we use it quite often. I'm quite a big fan of a linq query like that!
What he said and get rid of all the empty / generated code you don't use, such as private void checkBox1_CheckedChanged(object sender, EventArgs e) { } 
Agreed. I've been working 3 years on a project with next to no inheritance except when it really made sense and was normally simple and just switched to a project that uses it liberally. The cognitive load is so much more
&gt;mono is all but dead I think .NET Core has certainly stolen some of it's thunder recently, but I think that's perhaps a bit overstating things. AFAIK it still powers both Unity and Xamarin.
&gt; mono is all but dead Except it's used in Unity and Xamarin.
That's what he said
Really nice project! Some additional feedback: You should avoid calling GetPixel for each pixel of the bitmap because its rather slow. Instead, operate directly on the underlaying byte array i.e. using LockBits or allocating an array and setting the pointer of your bitmap to it.
I'm having a bit of trouble following what you're describing. Could you post the code of what you have?
That’s just the encoding, which isn’t central to the issue. 
A lot of university courses are going to be boring or feel like they are going over your head, but they are just laying a foundation to learn. No matter what you do in university, you will develop your real knowledge with practice on real work projects. The most important part for me was making sure I learned from my mistakes, and to always look up why something works, instead of just moving on.
I use linq for all the complex stuff, it is easy to prototype it in sql and translate it.
I loved my database course at uni, the design stuff and normalisation is stuff you need to think about with any time of development. SQL syntax is pretty simple once you understand joins. Perhaps you should do some quick online courses to catch yourself up? Added bonus, chances are it will be something you will use every day.
He didn't though?
Simply changing the catch statement to catch(Exception ex) { MessageBox.Show(ex); } Would make the catch global and more functional.
&gt; all but
I don't think he's using it correctly though.
"All but" means you're not at the finish line but right before it. I agree, the guys usage of it above is wrong or weird. http://grammarist.com/usage/all-but/
It's needed. Not just how to query but actually understanding how a database works internally is immensely helpful to not doing stupid shit and causing performance problems. I've seen a lot of crap get's deployed and the developers proclaims it works fine on my machine. No shit, it works fine with a single user using the application but that was never the intended purpose. 
It may be some OCD with me or something else but I find looking at code that uses it very infuriating. The syntax is so wildly different that it just looks odd when looking at a normal class. But sadly I do use it, some things are just easier to write with that syntax then having to go through the whole method call process. Outer joins in one of them. 
Ar you trying to call the compiled .exe or are you trying to call code in a class that is saved in Program.cs?
A little bit of both actually, I need to open the thing so I guess I need to start the compiled .exe file. I also need to pass a variable from my forms app to my console application.
Let's say I have a string variable called "CurrentUser" which is located in my forms program, I want to use this variable like this "Console.WriteLine(CurrentUser)" in my console app. 
1) the relative path will be essentially just the root like /image.png since it is directly in your bin folder and that is most likely what is getting pushed to hosting 2) use a promise on the method that has the nested calls so you can call method4 in the result of that promise Something like : (on phone may need fixed) new Promise(() =&gt; method3()).then(()=&gt; method4());
Gonna try this as soon as I can get back on my laptop. Thank you! 
&gt;My Question is how do I implement DTOs in my application layer and map them to my business layer entities (using Automapper)? Your layers are out of order. Domain (if by domain you mean the basic models used in your business logic) should be the bottom layer/root dependency. Your Application layer should have a dependency on Infrastructure (where the data models are defined) and Domain (where the business models and request objects are defined, but no actual logic is applied). See [this handler](https://github.com/Azure/Sia-Gateway/blob/master/src/Sia.Gateway/Requests/Incidents/GetIncident.cs). A request is received, the associated record is retrieved from persistence as a data-layer entity, Automapper is used to convert it to a business-layer entity, business logic is applied ('AttachTickets()'), and the business-layer entity is returned. The process is slightly more complex and done in reverse order for post/put requests. See [this handler](https://github.com/Azure/Sia-Gateway/blob/master/src/Sia.Gateway/Requests/Incidents/PostIncident.cs); a request object is received, business logic is applied to validate it, it's converted to the equivalent data object and persisted, then it's converted to the equivalent business-layer entity and returned to the client. [Wherever you define your AutoMapper configuration](https://github.com/Azure/Sia-Gateway/blob/master/src/Sia.Gateway/Initialization/Startup/AutoMapperStartup.cs), it's going to need to have a dependency on ALL of your models in order to correctly convert between them. A key to separation of concerns is that your application layer has a dependency on both your Domain and Persistence/Infastructure layers directly, while neither of those two have knowledge of each other.
Mono is an open source implementation of the .NET CLR. Microsoft decided there should be an open source implementation of the .NET CLR. "That Mono over there is nice", they said. "I think I'm going to write my own." So they wrote their own cross-platform implementation of the CLR. And bought one of the companies that was its largest user. And started converting that company's product to use .NET Core instead of Mono. We've seen this script before. Yes, Blazor is C# in the browser and currently using Mono. Give Microsoft time to implement-- I mean, use their "code sharing agreement" to get Blazor working on .NET Core. 
If I may offer an alternative solution - don't do all these layers and stuff. Seriously. It may look like a valuable structure, but it is not. Instead, center your architecture around axes of change. For a single request, reduce the translations things need to go through, and find the actual separate concerns. For me, there's an HTTP request that comes in. I translate that HTTP to some sort of query/command DTO. I delegate to some handler for that request, that returns some response as another DTO. I then pass that second DTO to the view. Request/response, queries and commands. Focus around those primitives, not a bunch of abstractions. An example: https://github.com/jbogard/contosoUniversitydotnetcore-pages A video of this approach: https://vimeo.com/131633177 Sincerely, The Guy That Wrote AutoMapper 
 var proc = new Process(); var p = new System.Diagnostics.Process(); p.StartInfo.FileName = "cmd.exe"; p.StartInfo.Arguments = "/c echo Foo &amp;&amp; echo Bar";
[System.Collections.Generic.LinkedList&lt;T&gt;](https://msdn.microsoft.com/en-us/library/he2s3bh7\(v=vs.110\).aspx)
Thank you :) 
If the package is added as a project reference then it gets the icon in the References section of Solution Explorer. If the package is added to the project in the Packages.config file then it won't get the icon. 
If you want the console to open at the same time the app starts you can create the project as a winform project and change the type in the project settings to console. Also, there are some pInvoke commands you can use also. const int SWP_NOSIZE = 0x0001; [DllImport("kernel32.dll", ExactSpelling = true)] private static extern IntPtr GetConsoleWindow(); [DllImport("user32.dll")] static extern bool ShowWindow(IntPtr hWnd, int nCmdShow); private static IntPtr MyConsole = GetConsoleWindow(); [DllImport("user32.dll", EntryPoint = "SetWindowPos")] public static extern IntPtr SetWindowPos(IntPtr hWnd, int hWndInsertAfter, int x, int Y, int cx, int cy, int wFlags); Hide the console: ShowWindow(MyConsole, 0); Show the console: ShowWindow(MyConsole,1); Move it around SetWindowPos(MyConsole, 0, xpos, ypos, 0, 0, SWP_NOSIZE); If you just want to execute a command line process then use @k7mfc instead. 
Thank you
Thankfully not that much depending on the company, the software, the problem spaces they work on, etc. So yes luckily not everywhere uses SQL.
Part of your problem might be because it's Oracle. ;) But yes, data has to get stored somewhere, and relational databases have survived the test of time because they work really well. If you're having trouble visualizing your joins, draw some Venn diagrams. And recognize that one-to-many joins are the simple case. The more complex many-to-many joins will always require a joiner-table. One-to-many: An LP record has one or more tracks. Many-to-many: A singer can be on multiple records, and records can have multiple singers. 
Not sure if this is what you need, but I'll give it anyway: I used SignalR to see how many/what user are online. Was pretty easy to implement as well :)
Also, if your team has a Windows fileshare that everyone has access to, you can use that as a poor man's NuGet Server. It doesn't quite have all the features of a real server, but it's quick to set up, simple, built in authentication (using ACLs) and requires little maintenance.
&gt;In Mono, decades ago, we made the mistake of performing all 32-bit float computations as 64-bit floats while still storing the data in 32-bit locations. So they doubled their float speed by working around a ridiculous decision from a bygone age. Very exciting?
Not nearly as sexy, still deserving of an up-vote.
Just value transfer
I did, it seems you can only connect to the Bitcoin or Stratis networks (MainNet &amp; TestNet). I could be wrong, I'll check it out once more. Thank you.
wait what? why would a synchronous method call chain behave like that? O-o shouldn't method3 always execute fully before method4 anyway? that a unity thing or something? don't make me question all my shitty enterprise apps...
You are right I wondered the same thing on my next cig break but somewhere in his chain he must go async and doesn’t realize it and in that case my comment still doesn’t help 
Mainly joins are easier, but i use extensions methods instead whenever i can and avoid LINQ query syntax at all costs. Also, using the extension methods allow to chain method calls in whatever order you want very easily.
There is a lot of SQL in programming... it might be Microsoft Sql, or MySql or Oracle but databases are a huge part of application development. 
I have no idea what your question is, but i have a question for you: why do you use Convert.ToInt32 in the loop Header? You can just write the 5 there as its already an integer...
 for (int i = 0; i &lt;= 5; i++) //Shouldn't using 5 work just fine? I don't know why you want to use Convert { TextBox TxtSpoegemael = (TextBox)pnlSide.FindControl("TxtSpoegemael" + (i)); TextBox TxtSvar = (TextBox)pnlSide.FindControl("TxtSvar" + (i)); DropDownList ddlPoint = (DropDownList)pnlSide.FindControl("ddlPoint" + (i)); if (TxtSpoegemael != null &amp;&amp; TxtSpoegemael.Text != "") { objAdd._KortID = KortID; objAdd._Spoegemael = TxtSpoegemael.Text; objAdd._Svar = TxtSvar.Text; objAdd._Point = Convert.ToInt32(ddlPoint.SelectedValue); objAdd._Nr = (i + 1); objAdd.AddFelter(); } else { Console.Writeline("Question " + (i +1) + " is not answered!"); // I assume there are 6 questions from 1 to 6 } }
there is an error it doesnt tell what box the error is at and its for a web page so console wouldnt work
&gt; this will be ‘John Smith’ if you typed exactly what I did Sadly no, as argument passing on Windows sucks fundamentally, and you didn’t quote the two part name. So, args[0] will contain “John”.
Yeah, sorry about the bad wording. Here's a picture of the code: https://i.imgur.com/CEAORBm.png 
if you surround John Smith with escape quotes it should work tho ie "\"John Smith\""
It is indeed a very good idea to architect your application along the axes of change, but within those axes, you'll still end up with presentation, business logic and persistence parts. The idea behind onion architecture is that those parts are structured around the business logic part - the part that makes your application unique - through the use of dependency inversion, so it doesn't become muddied by and dependent on implementation details such as the database. The talk [Clean Architecture and Design](https://youtu.be/Nsjsiz2A9mg) by Robert C. Martin (aka Uncle Bob) demonstrates the idea behind onion architecture very well. ([6m14](https://youtu.be/Nsjsiz2A9mg?t=6m14s) to skip the intro). The talk even starts off by advocating that architecture should be structured around functionality.
Shit, duh. You're right. I've fixed the issue.
Actually, the new version already does this. The screen shot is out dated.
Ah, here's an example of a SELF join written in LINQ query syntax..... how the hell would you even do this in method syntax? var result = (from emp in table join mgr in table on emp.MgrId equals mgr.Id select new { employeeId = emp.Id, employeeName = emp.Name, managerId = mgr.Id, managerName = mgr.Name });
Oh wow, thanks for the code example. Seeing actual code really help clear up some of the concepts for me.
Well, the method wrapping here seems extraneous. I'm still not sure what you're trying to achieve or avoid. I'm still not sure what you're getting at about "instantiating the other voids". If you're concerned about having multiple methods added to the event, don't worry. That's what they're designed to do. When the event is fired, all the attached listeners will be invoked one at a time (in assignment order) synchronously. I believe the only case where they are not all executed is when one of the listeners throws an exception. But if that happens, you have bigger problems.
Generally, not good to be running conversions and creating variables in your while loop.
So is Oracle the most difficult way to interact with a database? What do most modern web development type businesses use?
By instantiating, I meant that they’re called synchronously. My worry is that it is not synchronous the way that I am doing it; having one method(which is attached to the event) call all the other methods(which are not attached to the event). Sorry that this is so confusing, thank you for the help.
More jpeg, please.
You mean you want the program to tell you if the text box is empty? You can test `string.IsNullOrEmpty(TxtSpoegmael.Text)` and if that's the case then you can display an error message somewhere. Likewise with the other TextBox; as for the DropDownList I think you can check its SelectedValue property and see if that is null.
Have you tried [SevenZipSharp](https://www.nuget.org/packages/SevenZipSharp/)?
Unless you use the `async/await` features, methods are invoked synchronously, including those from events. If the event has `OutOEnergyFunctions` as a registered listener, it will invoke that. The body of that method has to complete execution. In doing so, it will call `SetOutOfEnergyBool`. Once that completes, the `OutOfEnergyFunctions` will be finished. Any other listeners registered to `EventToggleOutOfEnergy` will now execute one at a time. Perhaps an example will help. https://dotnetfiddle.net/uwjw3A This example calls methods `Method1`, `Method2`, `Method3` in-order, one at a time synchronously. But it sets up 3 different ways of calling those methods. For the most part, each of them are behaviourly more or less equivalent. You can choose what you like best and what works best for your application. _Generally_ speaking, most developers would probably just opt for registering the 3 methods to the event listener and raising it. That said, _usually_ when developers register methods to events, they tend not to be concerned with chronological order or dependencies. You _can_, but often you tend not to think of it. If you don't have control over in what order your events are _registered_ to the event, but you critically need them to always fire in a particular order, then defining one method which in turn calls them in your required order is perfectly acceptable. Regardless, if you can ensure that you register the event methods in the order you want them executed, then you are guaranteed that they will be invoked in that order when the event is later raised.
It's being passed in to `str.Remove`; I think it's the zero indexed position in the string at which to start removing characters. So if you use 0, the first character will be removed; with 1, the second character, and with 9, the tenth character.
Oracle is a hell of a nice DB but they meed lota of tweaking outside of the box to get set up to that desired state. I'd say the type of business will determine the types of DB you'll see in use.
Basically the code you write yourself isn’t as resilient to failures, and we have to do more to provide context. If you hand wrote the code we write in an expression it’s the same performance. Or use LINQ and ProjectTo and then AutoMapper is about an order of magnitude *faster* than in memory mapping. But yeah it was awful slow before I switched to expression tree compilation. We use ProjectTo I’d say 90% of the time.
If you have a lot of custom mapping then it’s not worth it either. Like a lot of MapFroms. It needs to be Auto and stupidly obvious what it’s doing otherwise it crosses into magic you can’t debug.
I see. Okay, then I must be having some other issue with my code.
Dude is right 
Yea, you won't need it until you are at the point where value copies are the bottleneck of a piece of code that may need to run 200 times a second along with other code in the pipeline. Think games or networking, as the most obvious needs of this feature.
Could you use the DateTime struct instead of splitting the string? Lots of good methods built into it to do exactly what you're trying to do. Start with var t = Convert.ToDateTime(time). Then do t.AddMinutes(15). See if that gets you where you need to be as a starting point.
well i could use date time, but i wanted to have a method i could translate to c. since microsoft is such a target, security would be one reason... i want to have a home system where i can do things like boil eggs on a timer, also my cat is very sick and i wanted to time him. i wanted to have a method in c# then translate to c then inspect the assembly code, as a learning project... i have old home computers that can't run vis studio but tear up C. 
thanks
i got it, just needed some bloody debugging. lol this was only supposed to take 5 minutes. using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.IO; public class time { float timehour = 0; public int hour(string time) { string[] atime = time.Split(':'); string hour = atime[0]; string minute = atime[1]; int hournum = Convert.ToInt32(hour); int minutenum = Convert.ToInt32(minute); return hournum; Console.WriteLine(); //receive 12:30 //parse 12:30 on : } public int minute(string time) { string[] atime = time.Split(':'); string hour = atime[0]; string minute = atime[1]; int hournum = Convert.ToInt32(hour); int minutenum = Convert.ToInt32(minute); return minutenum; } public int hoursaddtime(string begginingtime, int minutestoadd) { string[] btime = begginingtime.Split(':'); string bhour = btime[0]; string bminute = btime[1]; int bhournum = Convert.ToInt32(bhour); int bminutenum = Convert.ToInt32(bminute); int hourstoadd = minutestoadd/60; int sminutestoadd = 60 % minutestoadd; return bhournum+hourstoadd; } public int minutesaddtime(string begginingtime, int minutestoadd) { string[] btime = begginingtime.Split(':'); string bhour = btime[0]; string bminute = btime[1]; int bhournum = Convert.ToInt32(bhour); int bminutenum = Convert.ToInt32(bminute); int sminutestoadd; int shourstoadd; int hourstoadd = minutestoadd / 60; shourstoadd=hourstoadd+bhournum; if (hourstoadd &gt; 0) { sminutestoadd = (minutestoadd%60); } else sminutestoadd = bminutenum; return sminutestoadd; } public static void Main(string[] args) { time times = new time(); Console.Write(times.hoursaddtime("12:02",100)); Console.Write(times.minutesaddtime("12:02", 100)); } } 
It sound pretty straight forward. Where are you getting stuck? 
Can you provide the link to the data that you want to capture?
Not sure if I get it right but: it looks a bit that you need something like [musoq](https://github.com/Puchaczov/Musoq) ? It looks like you need your compressed file to be queryable and "decompressable". It also looks that you have very specific usage so you would benefit by prepare own plugin that contains your own virtual table with columns like "Name, Position, etc etc." Please look at Comporess and Decompress queries here.
We have been using this approach for some projects now and I don't think we will go back to the old way of layered doing of things. We prefer definitely this approach to the implementation. Layer thinking is good for services but for the implementation of the current type of apps on the software level almost always you are either writing or reading something from the system. All blocks should be as interchangeable as possible but I mean... how many times does one change the database?!
Novice here as well. As far as I know, it checks if the given string is longer than 1 character. If it is, it executes the code after the "?", aka swaps the characters. If the condition is not met (length is less than 1 character), it executes the code after the ":". In this case it simply returns the string without modifying it. I'm sorry if I'm wrong, I'm not a pro by any means.
In short, Substring's arguement 1 is the start index, second arguement is length. It creates a new string if the string specified, from the start index to how ever large the length is.
I use it daily, quite like it now.
The question mark is short hand for doing an if statement. so that method could alternatively be written as so: if(ustr.length &gt; 1 ) { return ustr.Substring(ustr.length - 1) + ustr.Substring(1,ustr.Length - 2) + ustr.Substring(0,1); } else { return ustr; } The numbers represent what position to get the string's character index from. So the first Substring call is getting the last character of the string value. The next call `ustr.Substring(1,ustr.Length - 2)` is giving the starting index of the string and the length of how many characters to get. the reason for the - 2 is that it wants to get the second to last character in the string because, the first call is getting the last character of the string. The final `ustr.Substring(0,1)` is getting the first character of the string. The reason for 0 is to start at the 0 index of the character array and take the first character in that array. Here's the microsoft documentation for Substring: [https://msdn.microsoft.com/en-us/library/aka44szs\(v=vs.110\).aspx](https://msdn.microsoft.com/en-us/library/aka44szs\(v=vs.110\).aspx)
So why not code in C then? There is no logic between the intentions you just listed.
Please indent code by four spaces to make it not look like total crap on reddit. Read "formatting help". Also, empty line above and below code.
There's a common interview question which asks how to swap two values without the intermediate variable. It's amusing to me as it just doesn't come up in 99.999pc of code ever written :) Keep at it OP, you'll be fine :)
Oracle was the first relational database on the market (Larry Ellison worked hard to beat IBM to a working product). So it's got some aspects that are still pretty legacy. For a developer, it's "OK" - it has tables, views, triggers, etc. just like any other. They've worked to include features that in other databases are way more convenient. IIRC they added identity columns in Release 12 - previously they were managed separately from their tables. Because of it's cost you'll typically only see it at larger businesses (which need it's power). 
https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/conditional-operator In short, I like to format it like this because it's a bit easier to read I think. return ustr.Length &gt; 1 ? ustr.Substring(ustr.Length - 1) + ustr.Substring(1, ustr.Length - 2) + ustr.Substring(0, 1) : ustr;
Access isn't a database server, it's just a file format. The actual connection to the database is handled by the database driver, which needs to be able to directly open the Access file. To use this from across the internet, you would need to build some sort of server app that that your UWP app would talk to, and then update the Access database as needed. This would be a terrible idea. It's going to be slow and hard to implement properly. If you're not absolutely stuck with Access, you can use an actual database server of your choice (MS SQL, MySQL, MariaDB, Postgres, etc.), then open it normally as shown in the [MS example](https://code.msdn.microsoft.com/How-to-access-data-from-5f2602ec) If you absolutely, positively must connect to Access from across the internet, you'll need to build some sort of "server" front end for it.
You should also understand how the swapping of the two characters work. Come up with an example, e.g. let `ustr` be `"abcde"`. ustr.Substring(ustr.length - 1) + ustr.Substring(1,ustr.Length - 2) + ustr.Substring(0,1); Then, `ustr.Substring(ustr.length - 1)` takes everything from the last character, which is `"e"`. After that, `ustr.Substring(1,ustr.Length - 2)` takes 3 characters (`ustr.Length - 2` is 3 in this example) from the 2nd character (whose index is 1), resulting `"bcd"`, which is the middle of the string without the first and last characters. Finally, `ustr.Substring(0,1)` starts at index 0 and takes 1 character, which yields the first character, `"a"`. Thus, ustr.Substring(ustr.length - 1) + ustr.Substring(1,ustr.Length - 2) + ustr.Substring(0,1); means `"e" + "bcd" + "a"`, which is `ebcda`. Voilá.
Yeah, we use AutoMapper in 90-95% of cases. Because it's really nice only having to deal with exceptions (like field A is named field B on the other side). The custom resolvers are also nice for "customer A wants to see value X but customer B wants value Y". After things are working fine, we profile and then go with a custom approach if we really need performance. Like a database stored procedure that returns exactly the JSON we need to send across the wire.
No, they all are there, just type "using System." and then whatever you want
Sound advice. I'd recommend using MSSQL w/ SQL Server Express to start with if OP is relatively new to this and he can install the SQL server on a Windows box (though I think you can install SQL server on Linux boxes too now, though I'm not sure if I'm remembering what I read correctly).
The `?` used in this context is the `conditional operator`. Syntax: (someCondition) ? valueToReturnIfTrue : valueToReturnIfFalse; Usage: string userName = GetUserName(); userName = (userName != null) ? userName.ToUpper() : "NONE"; Console.WriteLine($"User: {userName}"); Input|Console Output :--|:-- "John"|User: JOHN null|User: NONE "smith"|User: SMITH
In my .Core project it comes from SDK/Microsoft.NETCore.App in my .Net pojects it comes from ReferenceAssemblies
LINQ is great if you have an in-memory data structure you need to query. It can make a typed DataSet or some POCOs bow to your will. Wonderful stuff, and you get the System.Linq extension methods along with it for further tweaking of the results. But LINQ is hot garbage if you need speed and you have a real database. Write that query in SQL, make it a stored proc, and call it with straight-up ADO (System.Data) calls. You can get a plain-old DataTable from it and apply System.Linq extensions to that. Meanwhile, the database engine has done all of the heavy lifting and you just do a little tweaking post-query. But, yeah, learn SQL. For C# stuff, especially learn Microsoft's Transact SQL (T-SQL) dialect. (It's a little bit different than Oracle's dialect, but I find T-SQL nicer overall. Easy-snipe: you don't need Dual; you can just select a constant without a table.) Most C# shops are wall-to-wall Microsoft shops, and will have you using SQL Server, not Oracle.
For a few yes. System.Collections.Immutable comes to mind. If a framework reference is available I use that, but some packages are not there.
[removed]
Intimeresting!
Do you ever have problems with conflicts, where you will install Nuget package Foo, which has a dependency on Nuget package System.Bar, but you already had System.Bar as a Framework reference?
You can even get MSSQL on Linux for free now too. Don’t use access please. 
It is a much cleaner syntax. Some people like to keep braces split between lines and this allows the style to remain consistent while reducing wasted line space. I adopted it quickly in work and a few of the older developers didn't like it (and string interpolation) at first, but after a couple of weeks they realised it was nicer. I find it especially clean when doing MVVM projects (as auto properties in the view model aren't as useful). Example: public class ExampleViewModel : INotifyPropertyChanged { public event PropertyChangedEventHandler PropertyChanged; private string _myStrVar; public string MyStrVar { get =&gt; _myStrVar; set =&gt; Set(out _myStrVar, value); } private int _myIntVar; public int MyIntVar { get =&gt; _myIntVar; set =&gt; Set(out _myIntVar, value); } private void Set&lt;T&gt;(out T field, T value, [CallerMemberName] string propertyName = null) { field = value; PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName)); } }
If you don’t use it the compiler won’t compile it to output. In 2.1 already pretty good and When they do more work around self contained it will be a Ben more better. Why worry ?? 
when people put quotes around things like this it makes the thing feel like a trap come get your "fresh donuts"
Depends on the project type. Old project type - framework reference, new project type - nuget.
Try /r/unity3d
Wcf service with SQL express db is the route I would go.....
Nevermind! For anyone curious, apparently the EF metadata is case sensitive, and I didn't have the proper case for the folder name in the other assembly -_-
https://i.imgur.com/c7X1OtB.png In Visual Studio go to Tools &gt; Options &gt; NuGet Package Manager &gt; General. There you can choose your default format and optionally check the box to choose it on first package install. 
gameobject.getcomponent&lt;audiosource&gt;().play() Remember to add audiosource to the object
I've left it on, but I'll also noticed a weird quirk: If it's in the old style, VS will suggest the new style. If it's in the new style, VS will suggest the old style. In other words, regardless of which style it's in, VS will suggest changing it to the other.
Store a list of counters increment the first one and when it reaches z increase the next one and resets it. When any counter hits z it increments the next one and resets itself. When the last one reaches z reset them all and add a new counter to the list.
Recursion will eventually result in a stack overflow. I think if you want to do it with a loop, the thought process should be that for every n, you will have n! strings. You should be able to start with a string of n 'A's and loop over it n! times incrementing a letter every time.
r/circlejerk
Honestly though, recursion would work. Here's an example in Java that seemed to work well when I copy and pasted it. Just small changes to array syntax and system.outs and it works. https://www.geeksforgeeks.org/print-all-combinations-of-given-length/
Untested: private char[] alphabet = "abcdefghijklmnopqrstuvwxyz".ToCharArray(); public string ConstructStrings(string start = "") { var itteration = start; while (!YourBooleanMatchCondition) { if (itteration.Last() == 'z') { itteration = itteration + alphabet[1]; ConstructStrings(itteration); } else { int i = Array.IndexOf(alphabet, itteration.Last()); itteration = itteration.Remove(itteration.Length - 1, 1); itteration += alphabet[i + 1]; return itteration; } } return itteration; }
Thanks
I would love to see a basic cross platform GUI tutorial, like an idiots guide. This is impressive.
I like the IEnumerable&lt;&gt; yield return pattern for going infinite. namespace LexicalPermutations { using Microsoft.VisualStudio.TestTools.UnitTesting; using System; using System.Collections.Generic; using System.Linq; public static class LocalExtensions { public static char ToLowercaseLetter(this long n) =&gt; Convert.ToChar(Convert.ToInt64('a') + n); public static IEnumerable&lt;long&gt; ToDigits(this long value, int baseToUse = 10) { var workingValue = value; while (workingValue &gt; 0) { yield return workingValue % baseToUse; workingValue = workingValue / baseToUse; } } } [TestClass] public class LexicalPermutationTests { public static IEnumerable&lt;string&gt; LexicalPermutations() { string calculateCurrentPermutation(long value) =&gt; new String( value.ToDigits(26) .Select(digit =&gt; digit.ToLowercaseLetter()) .ToArray() ); var currentIndex = 0; while (true) { yield return calculateCurrentPermutation(currentIndex); currentIndex++; } } [TestMethod] public void LexicalOrderingOutputNumber26Isaa() { var result = LexicalPermutations() .Skip(25) .First(); Assert.AreEqual("aa", result); } [TestMethod] public void LexicalOrderingCanFindAGivenPermutation() { var result = LexicalPermutations() .First(permutation =&gt; permutation.Equals("zbz")); //Test terminates Assert.AreEqual("zbz", result); } } }
http://avaloniaui.net/docs/quickstart/
hm you are technically right yes but i kinda stand by "go for recursion". This particular problem reads like a clear exercise but regardless in 99% of scenarios that involve itterative string concatenation and manipulation you'll be dealing with either IO operations or a record set of some kind in the real world. Both of which have very clear break conditions (end of file/ end of record set) and basically scream for recursion if you are gonna go the OOP way. But yes i'll concede i was wrong. If exceedingl large strings are concerned then memory is more readily available than stack space. 
C#, unlike other languages, doesn't have tail call optimization, so recursion is very much a possibility. I've experienced it with what I thought were going to be shallow call stacks, so I avoid recursion in C# production code.
You would have a field on the "table" object of type "table", so you could write employee.manager.name. The fact that SQL databases can't reference objects inside rows is a limitation of SQL, not something you should try and copy in your C# class design.
Removed: Rule 4. Perhaps you ought to contact the author. They're still active on reddit.
How are you handling the name resolution? Are you able to setup your own local caching DNS server and use it?
This is a wonderful library, and I'm kicking myself for not thinking of it sooner. Congrats on the design. Unfortunately, I'll never be able to use it, because of the gpl3 license. I imagine a lot of folks that work both sides of the fence will be in the same position. My company certainly wouldn't want to deal with the custom licensing scheme, and then there's no money for anything but the essentials. All of my own projects are under BSD simplified so I'd never want to encumber my users with anything more than BSD. I understand your choice to license it this way, it seems like you've done quite a bit of very good work and you deserve to be rewarded for it. Great project.
No, im not able to change anything regarding DNS
Its local host names. I wouldnt be of any use outside of network...
lol. ternary operators are usually for more advanced programmers. who the fuck as a professor would be like "yeah lets use ternary cuz programming itself isnt hard enough" lmfao
Yes this was my idea. Cache the IP addresses received from the DNS and refresh periodically off-hours. Use that list to ping. If all this is LAN i doubt many will change anyhow. Not sure how important it is for you to get absolutely all devices at each pass but I’m guessing this approach would get you 98% each time. 
What's this for anyway? Where will it run? Windows Network/AD?
I need to filter out offline hosts from huge list so i could speed up rest of my operations. It needs to be done every time app is started, thats why it needs to be faster. I tried resolving with DNS.GetHost and its even slower. I think catching exceptions is slowing it down, and there is not TryGetHost function... 
Note that if the job is to check that the hosts are reachable you might not want to skip/delay/cache the DNS lookup. ALL the hosts would be unreachable if they are referenced by name and the DNS is down.... And you would fail to detect it.
It's highly unlikely that catching exceptions causes a noticeably slowdown. Unless we are talking several million in a short time span, or your computer is extremely limited. 
Cool post, thanks for sharing! One thing I am curious about: the library works by generating a class which implements your interface, which user code calls through to interact with the library. Interface dispatch is known to be significantly slower than direct calls, virtual calls, and even delegates (from what I recall), but the benchmarks don't seem to bear that out. The numbers are therefore quite surprising to me, but it's possible that I am misunderstanding the different scenarios listed. I'm interested to hear your take on that. It would also be interesting to see the numbers for "`calli` without interface dispatch", although that is more painful to set up.
Interesting. This is actually the first I'm hearing of interface calls being slower - what we could do is use a mixed-mode class and call the abstract functions. That, if what I'm reading on the topic, should equate to a normal virtual call. The delegate and calli calls are routed through interfaces, while DllImport anf managed are direct on-type calls. 
Just make sure to add the DNS in the checks. 
I'd look at caching the hostname lookups assuming the IP addresses don't change too often. There's also nothing stopping you from checking multiple machines concurrently and using a shorter timeout for the unavailable condition.
I'll run some tests and see! 
What does "native" mean? Also does it require to have the runtime installed.
guys i found the sollution: https://unniravindranathan-msft.gallerycdn.vsassets.io/extensions/unniravindranathan-msft/microsoftvisualstudio2013%C4%Binstallerprojects/1.0.0.0/1487701206813/130817/3/VSI_bundle.exe link turns one i letter to ı. thats why it gives errors. turn the letter ı to i and it will start downloading
How does it run on MacOS then?
Simple non-recursive solution, not sure how performant it would be though. Tried generating 1 million combinations, took about ~.3 seconds. IEnumerable&lt;string&gt; GetCombos() { var t = new List&lt;char&gt; { 'a' }; while(true) { yield return new string(t.ToArray()); var index = t.Count - 1; while (index &gt; -1 &amp;&amp; t[index] == 'z') { t[index] = 'a'; index--; } if (index &gt; -1) { t[index] = (char)(t[index] + 1); } else { t.Insert(0, 'a'); } } }
There is only one TimerLabel in each form that has a timer, and this is the same code for all of the timer animations. Do you mean something else?
maybe its about me i really dont know. i asked for same problem to people in my country and they had the same page as the one i get.
You can publish native MacOS binary. 
Little experience, I'm not sure what any of it actually means.
Interesting!
Im not sure of a book that covers these explicitly, but certainly many cover enumerators and iteration. Just google those terms and you can get many great resources. https://msdn.microsoft.com/en-us/magazine/mt797654.aspx
The box might be up but the routing table might be wrong.... 
This won't mean much to most people, but my first computer was a ZX Spectrum in the 80's. I was 8 or 9. Looking through the list there are half a dozen of the simple games I used to be able to write back then. Only thing missing is a Pacman clone; I loved doing mazes :) Anyway, I had a huge nostalgia-fest and it brought back some memories, so thank you :)
So you have multiple forms, and you want to set the timer label color on all of them at once? Or are you saying that part is working but you want to display the time on all of them? Can I see the code-behind for your forms?
Ah so this is a different binary.
Pluralsight is likely the best resource for all things C#/.NET. Here's a fantastic course on collections with breadth and depth. https://www.pluralsight.com/courses/csharp-collections Granted you have to pay but the site is worth it. Give it a trial just for this collections course. You won't regret it.
Eh.... I'd probably wind up doing it as a (simple) State machine, but others may have different opinions. The states can then be triggered from the server. When a player bets, the event to advance the machine fires. If they don't, a timer can fire to advance the state machine. If you're trying to do all of this with .NET alone, CancellationTokenSource will likely be your friend. https://docs.microsoft.com/en-us/dotnet/standard/threading/cancellation-in-managed-threads That being said, I'm a big fan of Message passing frameworks like Akka.NET and Proto-Actor for these sorts of things, as the behavior of multiple entities interacting feels easier to model.
This works really well if you imagine it being said by a scientist in the far future trying to save humanity.
Ok so lets assume I add an event to a table class called OnTableAction. This event gets called by the message router, that is itself called by the tcpclient OnMessageReceived event. OnTableAction needs to validate that the packet is from the correct player, and that it in fact a valid and permissible response. This is the part that I am unsure of how to do. 
why not just start learning unity3d? they got tons of tutorials for all levels and it uses c#
&gt; Atomic operations are a thing where whenever a thread is doing an atomic operation, other threads see it as happening simultaneously I don't like the wording here, it's vague and isn't really correct. An atomic operation is one that can't be interrupted; and outside observers can not see a 'partial' state: Either the change has been fully effected, or not at all. &gt; This is great because it avoids the need for locks and they are a fair bit faster than locks, but the disadvantage is they only have limited functionality so not all problems can be solved with atomic updates. Be very careful here. Atomic operations are *orthogonal* to the need for locking. For example, writing a new value to an `int` field is almost always atomic no matter what, but you still need a lock (or some other synchronization mechanism) if it's shared data. `Interlocked` methods provide atomicity *and coherency* which is why you don't need locks sometimes when using them. &gt; Next we’ve got `IsEntered`, which just tells you if a lock is owned by another thread or not Nope; `IsEntered` only tells you whether the *current* thread owns the lock. 
Java additions were always via OLE back in the day, but you could use the appletviewer in a embedded browser probably. I can imagine most antivirus software to throw a fit though. see also: https://stackoverflow.com/questions/17597427/view-java-gui-inside-net-form-visual-studio-editor 
Why would I use a browser? Is an applet a webbrowser thing?
This is dump, who uses winforms still, was this made 10 years ago. Use wpf instead you silly goose
Musoq seems very convenient for working with Zip files, I'll check if adding LZ4 isn't too difficult. Thanks. 
Very interesting thanks :-)
Couple different ways, depending on how clean I think the code would look. //Option 1 public void HandleEvent(EventObject ourEvent) { if (this.State == EventState.WaitingForPlayer) { //Validation of state is handled here. HandleWaitingForPlayerStateEvent(ourEvent); } } //Option 2 public void HandleEvent(EventObject ourEvent) { if (ourEvent.EventType == EventType.PlayerBet) { //Validation of state is handled here or in below function call. HandlePlayerBetEvent(ourEvent); } } That's probably the most 'accessible' way to do such a thing with the method of communication you are using. You could get fancy with how things are done if your objects are Retained in memory (which, given this is a game, is probably not a concern,) and Have something like: class TableActionStateMachine { protected Action&lt;EventObject&gt; CurrentHandler; public void HandleEvent(EventObject ourEvent) { CurrentHandler(ourEvent); } public void StateOneHandler(EventObject ourEvent) { //Do some things CurrentHandler = StateTwoHandler; } public void StateTwoHandler(EventObject ourEvent) { //Do Other Things } } All of these examples assume that whatever is calling that Instance is completely thread safe all the way up. Otherwise you could corrupt your state if two updates are done concurrently. One option to help with that would be [Pipelines](https://msdn.microsoft.com/en-us/library/ff963548.aspx). Or, if you want to keep it simple, a Producer-Consumer collection can be implemented simply enough [like in this example](https://stackoverflow.com/questions/5105382/multiple-producers-single-consumer) will do the job. &gt; OnTableAction needs to validate that the packet is from the correct player, and that it is in fact a valid and permissible response. I would keep the 'state management' (i.e. can Player1 bet if state is WaitingForPlayer2Bid) separate from the 'player authorization' (i.e. Is Player1 trying to spoof a bet by Player2?). I'm imagining some sort of message with two pieces of data to handle the validation; One is the command, the other is a random token passed by the server to that player when they connect (and held on to by the server, so it knows which player is which.) 
Yes, that is what Applets are (were) all about, a plugin to run Java inside a browser. I wonder why you are going down this path, Applets are dead, and they are even scheduled to be removed in a future Java release. http://openjdk.java.net/jeps/289
Don't hesitate to ask if you can't understand something. I'm still working on it, especially I have to write more documents that will cover more topics. You can find how to create own plugin on the github wiki, just in case you missed it.
&gt;For example, writing a new value to an int field is almost always atomic no matter what, but you still need a lock (or some other synchronization mechanism) if it's shared data [A Great example of the worst case scenario for an atomic update] (https://stackoverflow.com/questions/458173/can-a-c-sharp-thread-really-cache-a-value-and-ignore-changes-to-that-value-on-ot)
try IronPython http://ironpython.net/
That's the one, and that all makes sense, I'll do some more research on this and revise this post, I appreciate both of you taking the time to explain this. Also yeah I just noticed that, code formatting in WordPress is a pain, I'll fix that.
Interesting, good stuff to look into, thanks.
And just to be totally clear; I always opt for a lock over Interlocked, I just wanted to cover it to cover it, I know I still had some info that was incorrect, no excuses for that, but just adding that I favor locks for reliable locking.
Not sure how I would create a custom loader in C# without doing it this way.
Oracle isn't NECESSARILY difficult. Especially if you're using version 12 or newer; at that point it's not incredibly different from SQL Server (if configured appropriately.) The biggest pain points between SQL Server and Oracle (As someone who still knows Oracle better than SQL Server:) - Getting multiple SELECTS back from oracle in a stored procedure is painful. You have to set OUT cursors for each one and read them back out manually. I think this is also fixed in Oracle 12. - Number types in Oracle are hilarious. I have no other way to put it. You don't have a clean way to represent a 32 or 64 bit integer, either you lose significant digit or the column can overflow, or you get dirty and add check constraints. - Cursors. Cursors everywhere. (Which never bothered me once I got the hang of it.) - Oracle is sometimes too kind about typing (i.e. converting between numbers and varchars), which can bite people later if they are not careful. It's not incredibly picky about Foreign keys between two tables. 
Good to know. We're using Oracle 11g in class.
you cant redistribute excel or any other nonfree software that you dont have the copyright to. legal stuff (also excel would probably not even run without being installed)
I don't think ikvm ever got awt and winforms working together. You should be able to customize the JFrame just fine though, just the same way you could in java.
There is this book which basically talks about everything in C# 7, a good and deetailed book. https://www.amazon.com/Pro-NET-Core-Andrew-Troelsen/dp/1484230175
So I would need to programatically add the controls to the JFrame? I wish there was a way to design it like a WinForm 
Not planning on doing that with excel, just pure example and i meant to ask like using fostura to carry an installer for another program in it and run that installer if a version of another program is older. 
Me too! I loved that rubber keyed thing. Kids today will never understand the wait of loading games off of cassette tape 😆
Anyone try this? Is this worth doing if I'm looking to learn C# or is this outdated?
well the answer you search then lies in the documentation of that package https://github.com/Fody/Costura but there are also installer creators that can install additional software if needed and are probably more suited to that
Yeah. You could use a designer in a java IDE and then translate the generated code to C#. I don't know how good the designer story is for java though, the only one I've ever used is the netbeans one and it was pretty awkward. IMO designers are of questionable usefulness when you get past prototyping anyway.
So I would design a form in Java and then convert it to C#, the issue is, how do I get Runescape to show up in my WinForm application.
Yes.
You shouldn't need anything related to windows forms at all, your code should just use the swing classes the way you would in java. When you do the java -&gt; C# translation you should only need to make minor tweaks to account for the differences in syntax. 
https://github.com/runelite/runelite/blob/master/runelite-client/src/main/java/net/runelite/client/ui/ClientUI.java#L289 Here's an example of how it might be done. Runelite's UI is probably more complex that what you want initially, but you should basically be able to do the same thing in C# using classes provided by lkvm.
And the agony when you realize that the tape with your favorite game is damaged and the game won’t load...
try{} catch(💩);
Use f# for that, I have some interfaces in f# with enum constraint and I use it in c#.
Winforms wasnt replaced at all, you can even use xaml for a Winforms UI, or use it with Xamarin Forms (with some tricks).
Yes, I've done few of the tutorials including the flappy bird and top down racing game its easy to follow and teaches foundational c# programming such as functions, data types and events. You can use the free visual studio to practice all the tutorials I think. 
Yes, I've done few of the tutorials including the flappy bird and top down racing game its easy to follow and teaches foundational c# programming such as functions, data types and events. You can use the free visual studio to practice all the tutorials I think. 
Spectrum was my 2nd, zx81 was my first, 2kb ram!
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/dotnet] [Docker, dotnet watch with preview2](https://www.reddit.com/r/dotnet/comments/8cc4d4/docker_dotnet_watch_with_preview2/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Eh, I haven't wanted to learn F# just for one feature. :)
You could use the [Directory.EnumerateFiles](https://msdn.microsoft.com/en-us/library/dd383458(v=vs.110).aspx) method. Add the filenames in the [Form Load](https://msdn.microsoft.com/en-us/library/system.windows.forms.form.load(v=vs.110).aspx) event handler
&gt; Atomic operations are orthogonal to the need for locking. Not always. If you are programming with eventual consistency in mind, it's okay to read stale data as long as it's in a valid state. Atomic writes guarantee that whatever data you read is valid, even if it's old (instead of strange partially updated data), and avoid the need for locking to ensure the validity of the data.
You'd be surprised how much winforms is still used...
Right, but I wasn't talking about that; I was making sure the OP didn't confuse atomicity with coherency. Besides, even in lockfree algorithms where stale data is okay (so long as the entire state of the inspected object is self-consistent at the moment of inspection); you still eventually need *some* kind of synchronization mechanism to prevent the compiler/runtime/CPU from indefinitely caching variables or optimising away reads/writers.
If you need to resolve host names(IPs not available or not static), then there's no way around that. Just tune down time out parameter.
Using the .NET dynamic loading capabilities. [Assembly.LoadFrom](https://docs.microsoft.com/en-us/dotnet/api/system.reflection.assembly.loadfrom?view=netframework-4.7.2) fills the same role as *classLoader.loadClass()* does in Java. 
One thing you have to consider is that majority of antivirus products does not like the embedding and automatic extraction of assemblies. They will incorrectly flag your software as a virus. That happened to me when i used Fody with [Felistar](www.moonstarsky.com) 
So "ustr.substring(ustr.length -1)" isolates "e" if so how does that work? I mean by my logic the "ustr.length -1" is "abcd" because your subtracting the last character? What is it actually doing the - 1?
&gt; So "ustr.substring(ustr.length -1)" isolates "e" if so how does that work? I mean by my logic the "ustr.length -1" is "abcd" because your subtracting the last character? What is it actually doing the - 1? 
you're telling me most tutorials are still using winforms? That's not true at all, why you have to lie
Try Invoke(new ThreadStart( () =&gt; Log(myMessage) )); Also threadSum = new Thread(new ThreadStart(ThreadSumWork)); threadSum.isBackground = true; // allows your app to exit even if it is running threadSum.Start(); Last, remove your lock (in Log method) as it is unnecessary if you only call Log from the UI thread 
You should read about source code status analysis tools. They examine your source code for vulnerabilities. These tools usually update definitions regularly. It’s best to integrate them into a simple pipeline. I recommend cakebuild .net. https://www.owasp.org/index.php/Source_Code_Analysis_Tools CAT.Net is a free tool you can use to get started. It also has direct visual studio integration. http://www.microsoft.com/en-us/download/details.aspx?id=19968
Didn't know these were a thing, thank you!
I think it's important to split between two types of security questions: 1. I am learning(we all are, always) about C# and would love for someone to point out some security issues with my code so I can learn. 2. I am going to commercialize this product and need it to be secure, please help The only reason I say this is that you mention "...originally made for personal use." Which means to me you intend to give this to others. I would strongly recommend against that for many reasons. There are large teams with very specific skill sets that manage Windows startup to make sure it functions correctly and is secure. I don't think this is something you can casually do with one person, it would take a team. Also if you are asking on Reddit about securing your app it may mean you aren't quite ready to do something that needs that level of security. I really am not trying to discourage you, just to say that you may want to keep learning for a while and keep this program as personal use only. Security is a tricky subject that takes a very long time to learn. Best of luck!
Right, I forgot to mention it. I want to release this program as a free program, but first I need to be sure there are no security risks in my approaches. (So it'd fall into category 2). I will of course be careful, I won't release until I can be sure there are no risks.
I remember we lived in a shitty old rickety house and I used my boombox hooked up to the Spectrum to load cassettes. Some games could take 30 minutes to load (from memory Gauntlet took the longest). Anyway, the wires werent the greatest and if anyone in the house shut their door too hard, the vibration would kill the load so I'd always try to get everyone to move around like ninjas. To this day I hate people stomping around and shutting doors too firmly 😄 
Have you tried to press F1?
where would I put the Directory.EnumerateFules method? And after that is it just listBox1.Items.Add like before?
Does this help? https://dotnetfiddle.net/L8rmHW
Removed: Rule 4. Maybe rewriting the method can help make it clearer: public static string first_last(string ustr) { if (ustr.Length &lt;= 1) return ustr; string firstLetter = ustr.Substring(0, 1); string middleLetters = ustr.Substring(1, ustr.Length - 2); string lastLetter = ustr.Substring(ustr.Length - 1); return lastLetter + middleLetters + firstLetter; } As others pointed out in the documentation, it states that the first parameter is the _start letter_, the second parameter is the _number of letters to get_. If the second parameter is omitted, the function returns the rest of the string (it automatically calculates the number of characters from your start index to the end of the string). Keeping in mind that C# and strings are zero-index based (that is, `0` represents the first letter): string firstLetter = ustr.Substring(0, 1); This says to start at the first letter, the "w" in "w3resource", and get 1 letter. So it gets the "w" at the front. string middleLetters = ustr.Substring(1, ustr.Length - 2); This says to start at the _second_ letter (remember, zero-index based, so `1` means the second letter), so that's the "3". Then it says to get `ustr.Length - 2` number of letters. "w3resource" is 10 characters long, so that means 8 characters retrieved. Basically it's saying to get all the characters _between_ the first and last character. So this results in `"3resourc"`. string lastLetter = ustr.Substring(ustr.Length - 1); This is the overload of the method where no second parameter, the number of characters, is specified. In this scenario, it starts from the start index specified, and gets all the letters from it to the end of the string. Here, `ustr.Length - 1` is asking to start at the last character (the `- 1` is because it's zero-index based); this results in the number `9`. Because no second parameter is provided, it just gets all the letters. But we only have the last letter to get here, so it just gets the "e" at the end of "w3resource". In this case, if we wanted to specify a number of characters to retrieve, it could have been rewritten as: string lastLetter = ustr.Substring(ustr.Length - 1, 1); Now that we have all three parts of our string, we just rebuild it flipping the first and last letters: return lastLetter + middleLetters + firstLetter; The original method does the same thing, it just does it all in one line.
As example using another class to read your utilities.txt on start and saving the changes in memory (aka. variables) and on exit (or somewhere between (auto-save maybe)) saves the changes to the file. This comes closer to the SOLID design pattern, where every method/class only have **one** task so you can switch out an implementation without breaking your code. The threading part is a bit more complicated (sometime in the feature you should learn a bit of it to understand async etc.). Every `new Thread(...);` you create a new native thread, which needs more than 1MB of memory. That's one reason why it's in this case a bit overkill. Another reason is that you then use the Thread only for less than a second. In comparison a `Task` is a thing that can runs asynchronous (so don't block your UI thread; same as your solution with `Thread`). For the things you are doing, `Task.Run` is perfectly fine and performant.
&gt; Also, the Threading on "AppendText" and "SetText" functions I've done is copied right off Microsoft's guides (I can't remember which one specifically). Are those outdated or is this simply a matter of preference? I'm not the guy you're replying to, but in my experience the code in Microsoft's guides is not copy-worthy for a lot of reasons. In general, you can use the code that's there as a guideline for what needs to be done to accomplish the task, but you should be writing it yourself and using your own best practices, paying attention to details like "how should I handle inputs, errors, IDisposables, etc." Ditto for code on StackOverflow answers. However, this is a relevant answer on the subject, regardless: https://softwareengineering.stackexchange.com/a/87699
The /// style will give you intellisense, while /**/ is just an ordinary (multi-line) comment. I suspect they just needed a way to differentiate the two - but I'm merely guessing. 
Thanks for the input! To use the Task.Run, do I just do "Task.Run(TextArea.AppendText("--");", or how does it work in my case?
The tag style also gives intellisense. There are two different multi-line commenting styles. Text between /* and */ is just a plain multi-line comment, but text between /** and */ where each line starts with a * like you can see is a method comment.
Not sure how I would use that instead.
I always try to understand whatever I use in my program, but some things like this one I copy in and don't understand it 100% because I just want to get the thing working. (Here the issue was the debugger complained about cross-threading.) That being said, learning all things I apply is pretty difficult since only teaching I've received was some very basic console functions for Java and Python. C# (and windows form apps) I've completely taught myself, so my knowledge is quite limited.
E.g. in line 465 you do the following: Task.Run(() =&gt; AppendText("Not found")); But I just looked some more into the code and on line 465 I ask myself why you even run this line of code in another thread. It's just appending text to the UI. More likely you just can remove the threads and just call `AppendText`. There's even no need to `Task.Run`.
This summary etc would get exported along with your lib and like someone pointed above the third parties consuming the lib can get the doco hovering over methods. My guess is having closing tags made the parsing easier and less ambiguous. You can also use a bunch of other tags, e.g. to create paragraphs and reference other classes. Reality is, you get used to it. Like string concatenation in objective-c :)
I worded it a little wrong indeed. What I meant was, I want to make sure my program doesn't have obvious security flaws that can be easily fixed, such as someone might be able to get into a user's registry because of my code using it? Beyond that, I know it's near impossible to make a completely risk-free program, but I want to eliminate what is possible to eliminate.
Right so, I tried to run my program in debug mode and it complained about cross-threading so I changed from "TextArea.AppendText("-_");" to the thread version EVERYWHERE. I'm going to assume that you only need to make the threaded version inside a thread? So basically everywhere that the function is not being called as a thread, I can just call "TextArea.AppendText("--");" and ONLY in functions that are called as threads, need to have the Thread method?
I will try to do that in the future, thanks!
It will depend in which thread the method will be executed. If it runs on the UI thread: Just call `TextArea.AppendText` If it runs on another thread: You need to invoke the UI thread (e.g. on line 540 you invoke it). If you just call `AppendText` on line 535 you **should** be fine
this.Invoke((Action)(() =&gt; this.Log("blah")));
For starters, it would be interesting to understand why you are trying to use Java in .NET instead of C#. 
You can use sandcastle help file builder SHFB to generate static html docs. We do this as part of our CI build and release. The ops team loves it. 
To make it easier for tools. Back in the early days Microsoft tools would just go through VB and C# files, extract the XML comments and given them to tools for further processing. This simplified building them, because they only needed to care about XML, without any special parser like it happens in Java.
The XML has official support from the C# compiler. It's the simply the choice they opted for when they made C#s first version. The /** */ style is not supported - it just may be that your specific editor supports it.
Perhaps there's an extension plugin that supports the Javadoc format.
I agree. Pluralsight is awesome. I recommended it so enthusiastically to a friend of mine that he asked me if I was getting a kickback from them. (I'm not. Just a huge fan.)
The xml comments are consumed for three purposes that I'm aware of: 1. Intellisense 2. Object Browser 3. Sandcastle Help File Builder If you use non-xml comments instead of xml comments, the Intellisense system can be smart enough to display the text in your comment, but the xml comment support allows much finer control. For example, if you document a parameter with the &lt;param&gt; tag, the correct documentation for that one parameter will appear in the Intellisense as you type a method call and are about to enter that specific parameter. There is some support for richer text formatting when using the appropriate elements, whereas with a bare text comment, it will all render as a single run-on line. Another nice feature is &lt;see cref="[something]"/&gt;. This can infer all kinds of nifty things, such as type arguments and function parameters, so that you can put a minimally unique identifier in the cref attribute but it will actually render as a full signature. 
Alright so, I went ahead and tried CatNet. I couldn't get it working so I found another free one called Puma Scan. I installed it and got it working, and it shows no vulnerabilities present. I tried it by typing an insecure function in, and it highlighted it, so it must be working. Could I draw a conclusion that my program is secure, or do I need to verify it some other way?
If `Log` gets called from the right thread, `InvokeRequired` will be false, and `Log` will proceed to set `uiOutputMessage.Text`. If `Log` gets called from the wrong thread, `InvokeRequired` will be true, and `Invoke` will call `Log` again (and then return), this time from the right thread.
So this is because the Substring method also has a overload where it can take only one argument which is the starting index for the string and will go to the end of the string. The reason we need to do -1 is because of how array indexing works with C# (arrays start at index of 0). Without the -1 we would get an error for ArrayOutOfRangeException as we would be trying to get a position within the array that doesn't exist. Overloaded Substring Method: [MSDN Substring 1 argument](https://msdn.microsoft.com/en-us/library/hxthx5h6\(v=vs.110\).aspx)
Fostura isn’t an installer packaging software. Which seems more like what you want. What Fostura does is merge the IL code together into one library to make it easier to distribute your EXE or DLL without the referenced libraries. At Amazon Photos we use this to package our stub installer into a small EXE that downloads the larger installer for the customer. 
Adding .ConfigureAwait(true) to your Task.Run(...) will continue the thread on your UI context &amp; get rid of those cross thread issues.
I didn't know this existed, thank you!
To me /// is much more readable. /* in JavaDoc just shows how old java is. Java was first released in 1995 and // comment style was added to C standard in 1999. 
How would you write this using Javadoc? /// &lt;summary&gt; /// Initializes a new instance of the &lt;see cref="CachePolicy"/&gt; class. /// &lt;/summary&gt; /// &lt;param name="absoluteExpiration"&gt;The absolute expiration.&lt;/param&gt; I ask because cref is really important when generating documentation from XML.
Obviously for tooling purposes and also C# was developed at the height of the XML mania. It is entirely possible that it is inferior decision and the dev time to develop tools to parse Javadoc does not offset the reduced readability.
Having only done it very little over the last 2 years, the types of security issues that come up half the time are "wow, I didn't even think of that". You might be better ponying up some money, or seeing if you can get some "pro bono" work out of some of those "for hire" sites. I can't think of the names, but basically you put your project out there and white-hat hackers get money for finding stuff.
Otherwise a sound idea, but I'm a student with limited income. I can't afford to pay for that since my program is going to be free, maybe donation based, and so there's no guaranteed profit out of it. (and it probably won't succeed to begin with)
If this is WinForms, your form should dictate how your cat should move, so you'll need to create an event handler for keydown, then capture the applicable keys for movement, then apply the movement to your instance of the cat relative to the form. You could apply the movement by doing something like `catInstance.Left += 3` and that would move your cat 3 pixels to the right. You would also need to set up a timer or something similiar to update the UI at a set interval. Game frameworks come with this built-in, but you'll have to create one in WinForms. I think you would be better of watching a quick youtube video on this to be honest.
On mobile, so just the see tag would be: {@see CacheRef} I've gotten used to the xml, but it has its short comings. I miss being able to write inline html and have it render. 
Hello fellow programmer! I have reviewed your application with great interest. I myself somewhat dislike the windows utiltities as they come, and have many times myself speculated in re-creating some of them, and as such; I think this is a great effort! :) There aren't really any "real security issues" with your program (leave that to the .NET Framework), but don't quote me on that. Realistically: It's a small utility, and it's not likely it would be "hacked" or otherwise exploited. Ask youself: What would be the target-vector? Constructively; you need to do more abstraction: Abstraction is the mechanism in which you realize the induvidual pieces of code of your program as "things", and then abstract those pieces of code into things, with names; i.e. classes or structures! These will help you more easily "mind-map" your program, as you can both functionally and logically move code into regions "which make sense". This will ultimately help you convey intent to reviewers of your code, and to *yourself*! For those pesky times where you have to go back and read your own code. As an example, your program likely contains some sort of program list (startup programs), wouldn't it be cool if you could write parts of your program like this: startup.AddProgram("C:\Program Files\Surfer-Dude88\StripPoker.exe", StartupPriority.Delayed); Right now, your doing the "straight on approach", and writing directly to a file, however, creating a class to manage this will give you a great deal of more control! Say for instance, you attempt to move all "startup program logic" to a `StartupPrograms.cs`-file. So instead of having `Program.cs` -&gt; `utilities.txt`, you'd have `Program.cs` -&gt; `StartupPrograms.cs` -&gt; `utilities.txt`. This decouples your "program startup API", from the program itself, and now the Program will tell the "program startup API", *what to do* (e.g., "add a program"), and not *how to do it*. I suggest you read up on the [SOLID principles](https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)) You are also doing one of the "classic mistakes", where you are inventing the wheel, and creating your own file-format; this is *extremely hard*! If you intend to continue develop your applciation then try to go for a more established approach, use [JSON](https://www.nuget.org/packages/Newtonsoft.Json/), [XML](https://msdn.microsoft.com/en-us/library/system.xml.linq.xdocument(v=vs.110).aspx), INI, or *any* other established format. This can potentially create *some* overhead in read/write performance, but it makes up for it in manageability, readability and intent. Also, these formats are well-established and proven, and you are likely to encounter them over-and-over in your programming career.
You'll want to concentrate on "good" programming practices then. Check your buffers, handle exceptions in the correct way, etc. etc. There should be enough for that. Above and beyond that, you'll need an "expert" to really tell you. You can check out the OWASP Top 10, but most of that is for web-based systems, and highly generic.
Sun sued Microsoft for making a JVM. Sun sued Microsoft for NOT making a JVM. Oracle is suing Google for using Java. If you're designing something and don't want to get sued, it's best to avoid anything Sun/Oracle. They only make money by suing people who use their own products.
Thanks for the great feedback! About abstraction; I have done that on my earlier (personal) projects, but the thing is, those programs were made with Java, which is a language I'm more comfortable with. I just started with c#, this being my first real project. I've just been trying to get stuff to work so far; I will eventually abstract different parts to different files. I wasn't exactly sure how this worked out in c# as the interfaces and whatnot are RATHER different from what Java had, but I think I got it figured now! Out of curiosity, what is the benefit of using JSON instead of a normal .txt file? I haven't had any time to get myself into that stuff yet. (A link to a good summary / guide would also suffice!)
You still have to use the xml-style tags though, which is a little less useful. I'll stick with the c# standard `///`.
/** */ is just wrong. ;) I haven't used it in years, but GhostDoc is able to read those XML comments and generate some rather odd-looking (but readable) help-file documentation. https://submain.com/products/ghostdoc.aspx 
Would be cool if this could run in the browser with webassembly. Would be perfect for single page apps. 
Thank you so much
Check out [ObjectListView](http://objectlistview.sourceforge.net/cs/index.html), it's a much more customizable listview. 
Looks like you have copy and pasted code right into the class. There should only be one namespace declaration per file. Using statements are always right at the top.
Should probably post the error, will help us :)
Unordered doesn't mean it doesn't have an order; it just means the order is not guaranteed to be consistent.
Thanks, I appreciate it a lot. I'm figuring out a way to store multiple files, since LZ4 does not have multi-file support. In that regard I'm copying the zip format, and compressing and adding files to the output stream on the fly, then attaching a hash table at the end with the position of each compressed file. The only thing needed to decompress a file is the hash which is computed from the file path. I think I won't be using the indices pointing to the parent, next sibling, etc. that I mentioned in my post, so I'm removing those from the hash table.
Is it then correct to say that when GetEnumerator is called on a collection, it iterates over a "hidden" index? Do you know of a book/article that explains how things work under the hood?
Usually a collection is just unordered because it doesn't enforce an order. List&lt;T&gt; is "unordered" but will typically have items in the order they were added (assuming you only used .Add instead of .Insert). Theoretically you could implement RandomCollection and make it so each time you query [IEnumerable](https://msdn.microsoft.com/en-us/library/system.collections.ienumerable.getenumerator(v=vs.110\).aspx) it would return an [IEnumerator](https://msdn.microsoft.com/en-us/library/system.collections.ienumerator(v=vs.110\).aspx) that contains randomized indexes to access within the underlying collection of RandomCollection. The [IEnumerator](https://msdn.microsoft.com/en-us/library/system.collections.ienumerator(v=vs.110\).aspx) contains the state information of the current value and the logic needed to fetch new values.
Oh, sorry, it comes back with null reference, not set to an instance of an object. I checked both the byte and the dictionary before I sent them to the serializer and both had values.
I personally find the source code to be the best resource and that can be found here: https://referencesource.microsoft.com Just search for Enumerable&lt;T&gt; or the data structure you’re curious about.
Thanks for this resource!
It's so you can comment them out along with the logic in a /* */ block. Useful when temporarily removing code for testing or other purposes. Same reason why most people recommend using // instead of /* */ to comment code. 
If you believe the dictionary is an issue, have you succeeded in using it by sending something simple?
Where is the `serial` instance initialized?
There seems to be a fuckton of errors whenever I do this. How do I download a project and get it up and running with proper assemblies and databases?
well now I don't know who to believe
It is within the same class along with the initialization of the rest of those variables at the top in the parent NOC class. Here is all of the code, I suppose that might help more. https://hastebin.com/tohetavuni.cs Forgive the mess, I was working through the night last night trying to test stuff and it got out of hand trying to get it to work, lol. I just changed it a little based on the comment from the other fella about if it worked using something other than the dictionary, which I was working on now. 
I have tried several times to attach it to Unity, but I keep getting this mess. https://i.imgur.com/IQqvCWT.png
Second poster. It's [guaranteed](https://stackoverflow.com/questions/1043039/does-listt-guarantee-insertion-order).
Does that mean that it's ordered though? Just because the index is guaranteed, doesn't necessarily mean the order in memory is. if you made a dictionary with and integer for the key it would kinda be the same thing as a list, but is a dictionary ordered? I don't know.
If you iterate completely through the same `List&lt;T&gt;` one million times the order will always be the same. It is guaranteed. The order of items may not be what you expect, but it is consistent until a modification is made.
List&lt;T&gt; is ordered; `Insert` Lets you specify WHERE in the list your items get; I've never had to do this but my understanding is this will just shift all items forward 1 (After wherever you put your new one.) Dictionary... gets a little weird. I'm not sure how that one gets ordered. Bigger point is I don't think it's ordered in a way most people would expect i.e. it's not going to order by your Key. The only place I've seen 'randomized' has been DB calls where no ordering has been specified in the query; in this case, you're at the mercy of whatever rows the DB happens to fetch first, which *may* be the same between two calls, but may not.
None of this seems inherent to XML documentation over JavaDoc style annotation.
Yes. They wouldn't have called it a list if there wasn't an order to it. That would have caused so, _so_ many problems. Just check the source, if you aren't sure. It's right over [here](https://referencesource.microsoft.com/#mscorlib/System/collections/generic/list.cs,220). `_items` (where the values are stored) is just an [array](https://referencesource.microsoft.com/#mscorlib/System/collections/generic/list.cs,40).
It's not, agreed. Nor did I say it was. It is, however, inherent to C# support! 
Well sure, but only because that was a design decision. Op is asking why that decision was made in the first place.
FWIW, I'm with you Op. I really think the XML style documentation is ugly and excessively verbose. I'd much rather a Java-Doc style documentation, but I don't see that happening any time in the near...ever. C# devs seem to like the XML doc.
Even if the order in memory wasn't sequential, that's just an implementation detail as long as the list presents the correct order to observers. A dictionary itself isn't ordered, but if you were (for some reason) to implement a list type based on a dictionary that automatically handled reindexing after insertion and removal etc. and enumerated items in order by their index key, sure.
How a collection implements enumeration is entirely up to that collection. This is why we don't say that enumeration imposes an ordering; it doesn't exist, strictly. Sure, you can say that the order that items were returned while enumerating could be the natural ordering; however, there's no guarantee that instance to instance or implementation to implementation that'll be the same. Collections will leverage their internal structure to efficiently implement enumeration. The easy case is a list - the enumerator just keeps track of the last index it gave to you, and then when you ask for the next item from the enumerator, it just increments its internal index and gives you the item at that index from the list (or tells you there are no more items left). How might a Dictionary implement enumeration? Well, a dictionary has no simple order. Microsoft's dictionary implementation boils down to an array of buckets, and those buckets contain a list of key-value pairs for every key-value pair that was added to the dictionary. How would it implement enumeration of keys, then? Simple, loop over its internal bucket array, looking for buckets that are occupied. Then one at a time, loop over the list of KVPs in each bucket, returning them. Easy peasy. But keep in mind, Microsoft's implementation of a dictionary could change at any moment. Or their behavior can be arbitrary after changes.
Hmm... I guess it isn't that, I tried with 2 bytes and got the same thing. Back to the drawing board, I suppose.
If I'm reading this correctly, I'm not sure this has anything to do with binary files. It seems more like a question about the data structures involved, and their syntax. But if I'm misunderstanding, let me know. In your code, you retrieve the user name from test[0].Item2. So starting from the left: * 'test' is of type List&lt;Tuple&lt;int, string&gt;&gt;. So it's a list of things. * test[0] is the first thing in that list. * The things in this case are of type Tuple&lt;int,string&gt;. Tuples bundle several elements together: in this case, one int and one string. The convention is that the first element (the int) is referenced with .Item1 and the second (the string)with .Item2. * In your SummaryPage class, it looks like you're writing the score to the int and the name to the string. So the score would be test[0].Item1. 
IEnumerable is very abstract and less strict than more defined collections. For example, List&lt;T&gt;'s enumerator is ordered and just goes over the internal array in order. HashSet's enumerator is not ordered, but it still follows an order internally (just not one that you have any knowledge or access to). You can see from the [source](https://referencesource.microsoft.com/#System.Core/System/Collections/Generic/HashSet.cs,1458) for HashSet's iterator that it's an internal "m_slots" array that gets iterated (where the order is dependent on a mix of the hash and m_buckets index).
Got it all worked out. The solution was a lot easier than their primary example showed. I eliminated most of the code and was able to get it working with just : var msg = new object[] {cc, cc2}; var serializedmsg = MessagePackSerializer.Serialize(msg); var deserializedmsg = MessagePackSerializer.Deserialize&lt;object[]&gt;(serializedmsg); That was easy enough, lol.
`List&lt;T&gt;` is ordered. Specifically, it uses insertion order. If you want a different ordering, you're going to have to use a [`SortedSet&lt;T&gt;`](https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.sortedset-1?view=netframework-4.7.1) instead, which uses a custom `IComparer&lt;T&gt;` to do ordering on insert. However, be aware that Sets don't allow duplicates. If you don't want an order, there's always [`HashSet&lt;T&gt;`](https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.hashset-1?view=netframework-4.7.1), but again, remember that you can't have duplicates.
`List&lt;T&gt;` is ordered in insertion order. `SortedSet&lt;T&gt;` is ordered by a custom `IComparer&lt;T&gt;`, but sets don't allow duplicates. `HashSet&lt;T&gt;` isn't ordered, but it has the same "no duplicates" rule as `SortedSet&lt;T&gt;` does. `SortedList&lt;TKey,TValue&gt;`... I'm not sure how this is different than `SortedDictionary&lt;TKey,TValue&gt;`
There are no "unordered" collections. There are collections where you know what is the basis of the order and collections where the order comes from the collections inner workings and is not the one you would expect it to be.
&gt; [...] but the thing is, those programs were made with Java, which is a language I'm more comfortable with. While the differences between Java and C# go further than just cosmetics, it's entirely possible to learn C#, by just attempting to port over your Java knowledge; don't be afraid to do mistakes, if it doesn't build; it doesn't build, and you are definitate not the first person to encounter that issue, which means there is good help available! :) Java classes and C# classes are purposefully the same, in the sense that "both are cakes", they just have different frosting. &gt; Out of curiosity, what is the benefit of using JSON instead of a normal .txt file? Lets put it the other way: What are the benefits of *not using* a well proven, generic and standardized format? Have a look at this first: [ { "Program": "C:\\Program Files\\Surfer-Dude88\\StripPoker.exe", "Priority": "delayed", "Enabled": false, "UserComment": "Disabled for now", "Order": 0 }, { "Program": "C:\\yada-yada\\foo.exe", "Priority": "high", "Enabled": false, "UserComment": "Disabled for now", "Order": 1 } ] Most programers will look at this, and can easilly infer "what is going on", and it's easy to extend, as each entry has its own element, and is independent of the next Using your current implementation: StripPoker C:\\Program Files\\Surfer-Dude88\\StripPoker.exe Foo C:\\yada-yada\\foo.exe Now say, that you would now like to extend your format to also support startup priority and user comments. And you are in great trouble as there isn't any way of doing with backward compability (for instance), as you line-offsets would be offset (?). Also, code wise; you only need to create a class with properties mirroring your JSON (often called model), and then you just serialize it as such: JsonConvert.DeserializeObject&lt;List&lt;StartupProgram&gt;&gt;(File.ReadAllText("/path/to/your/file.json")); This removes your own de/serialization logic entirely, as you can depend on JSON to do this for you. It's also just a *really common format*, which is useful to learn. Mozilla's MDN has a read called [Working with JSON](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON), I suggest you read it. The turorial part of the guide is in JS, but you can just ignore that.
I think Javadoc predates XML Docs, because Javadocs were available in the first releases of Java in 1996, and XML Docs showed up with the Betas of .NET 1.0 and C# made available to MSDN subscribers around the end of 2000?
Ah I see, that seems very useful indeed! I'll transfer to the Json format, thanks for the help! 
And this is why it gets upset if the underlying collection changes during the iteration.
XML and JSON both suck for human consumption. The better approach would be markdown, as Swift uses. 
Or *seemed*. You have to remember that C# is very old and back then, everything was automatically cool if it involved XML. 
Its called "load testing" and you can find plenty of tools to help: google for "c# load testing tools"
 /** * Initializes a new instance of the CachePolicy class. * * @see com.example.package.CachePolicy#exampleMethod() * @param absoluteExpiration The absolute expiration. */ The IDE highlights the name of the parameter and the description of it separately, so it's actually easy to read and there's no XML clutter. I am not sure how to insert links within the summary, but I've seen a tag like {@value #something}. Maybe someone else can confirm if {@see CachePolicy} is a valid part within the subscription like /u/navatwo showed with @link.
That's really good advice thank you, I will be sure to write something like that in. I may not even aim for a programming role. I actually prefer to do other roles, but have programming skills as an extra plus point. I agree on the problem with these exams completely. I took a SQL Server one which made me learn all sorts of MS rubbish features that nobody ever used. But on the other hand, it is good to fill in the gaps of your knowledge by being forced to learn the full features. It can be like that fuzzy feeling you get when you think you know all the windows shortcuts, but someone teaches you a new one.
You're welcome, I think it's important to help nurture people you know? Remember not to be condescending if you explain why you took the course. You did it to improve yourself, you don't need to mention they're not well respected. CVs should be affirmative, where you need to be negative you do it by asserting something. Focus on the pros. Bon voyage :) 
Good luck. I recently passed for both of them, now learning for 487 :) My boss encourages us to take them so I wouldn't say they're useless. 
You should check out [Fody/PropertyChanged](https://github.com/Fody/PropertyChanged). Your VM could be reduced to just this: [AddINotifyPropertyChangedInterface] public class ExampleViewModel { public string MyStrVar { get; set; } public string MyIntVar { get; set; } }
It doesn’t have anything to do with pointers, it’s a newer syntax called expression bodied members. 
If you're looking for an exam with a strong career path, you should consider exam 70-532 at some point. It makes heavy use of C# and the Azure component is invaluable as it will provide you with career path longevity, enjoyment [at least for me], and a premium salary.
It's hard for me to just tell you by looking at GitHub code, and I'm not in a position to pull it to my machine and open in VS. Please give me some time and I'll get back to you with some concrete information. Alternatively, if you are wanting to get moving, PM the compiler error message and I can read that. I should be able to get you something back later today - but I'm about to head into work.
Those tips are actually very handy. thankyou. I think i do know what object oriented is, however I don't know how to implement it in my situation. I was hoping if someone could give an example of how to organize my code as from what it looks like now. 
Both are correct! The @link inline works as a link. The @see puts the links at the bottom for "see also" or whatever it may be. 
Just delete the line with the click event in the designer.cs file - that's just the empty shell of the button click event that's looking for the function you just deleted
As for structures - I can't really say how to do it. But you might want to at least make a class for user info and a class for sql related stuff. Try researching Model-View-Controller (MVC) layout as well as CRUD (create, read, update, destroy/delete) for database work. Your MVC layout should allow you to have a database controller class which you then integrate your crud functions for your basic functionality to your database :)
Is there any place I can pass those exams online? My local MS partners offer outdated certifications, and mostly for IT people, not for developers. And is there any book/resource for each of the exam, besides MSDN?
In your scenario, your database is your "Model", where your data resides. The only thing that can access this is the controller class, which can only modify it with the functions you define with CRUD. This is the "Controller" part. The "View" part of this is your UI which can only talk to the database via the controller - keeping everything to the standards managed by the controller. This is also known as "decoupling" your UI from your database.
Cool. Glad you figured it out.
Test King 🙂
&gt; There was a time we used to refuse to look at CV's from people who had MS certifications because they were all gained through diploma mills and the holders invariably had no skill. You said this past tense, so I'm hoping you've come to your senses and look at resumes a bit more holistically - i.e. someone with experience *and* a certification isn't a problem (or at least gets a quick phone screen if the resume matches your needs) Every time I've taken a certification exam, I've enjoyed it because it forces me to burrow through nooks and crannies I had otherwise missed. I *always* learn something while preparing. As for annotating a certification with why I got it, why? Nobody will read the comment. I could put "Because the elephants told me to" after a certification and I'll wager that I would never get asked. 
Its already discussed https://github.com/AvaloniaUI/Avalonia/issues/1387
I'm reading this book at the moment. I'm on chapter 15 and I haven't seen any explanation about IEnumerables, IEnumerators and yield statements. But apart from that the book is good. Maybe it's made on purpose. Maybe they want to teach you to google and learn from more than one source.
&gt; There was a time we used to refuse to look at CV's from people who had MS certifications because they were all gained through diploma mills and the holders invariably had no skill. That is a bit drastic don't you think? I worked as a DotNet Developer in 3 different companies and 2 of them required me to take some of the MS Certifications. They did it for different reasons then what you would think: These Companies where MS Partners and they needed a certain number of Certified developers to keep their partner status. It was clearly communicated to the employees as well that this is not so much about skills, but about Points with MS. So in an interview I would probably not even talk about these Certifications at all or if asked I wouldn't talk about knowledge. I would just say that this was more of a business decision and a way for us to keep our MS Gold Partner Status. 
So your asking how to write a unit test? Or are you trying to automate testing? If you want to automate testing you might want https://octopus.com , while if you wanted to find a specific error you would probably need to write a unit test. 
Agree, but if all your testing tools and testers are skilled in C# then scripting any load testing in C# as well might be preferable, depending on your needs/skill set etc.
The only employers I've had who cared about certs were ones who needed a certain number of certified employees in order to get/maintain a MS partner level. 
Well, the code you already posted should be a fine enough pattern. Either expose the field on your `MainWindow` or a method there that does the work. So basically you'd call `mm.DoWork(someData)`.
I agree with this. Have been working in ASP.Net for over 4 years, and the only thing in my CV that *proved* my .net skills was a game prototype that I built in the XNA framework while self-learning the language (Unity wasn't as big then). I'd rather work with somebody who's new to C# but wants to try it out because they're enjoying writing code in it rather than somebody certified/trained in it.
Readability is subjective, I find the xml comments to be much better.
I know people love to shit on MS certs in this sub, but I will say that if you're not currently i the job market, they're a great way to show your current employer that you deserve that raise/promotion/bonus/whatever. When your annual review comes around, it's something concrete to show them that you're going above and beyond to better perform your job. 
I've got a number of changes I can show you, but I can't create a branch on your project. Can you add me as a contributor? PM me if you want more help.
Bookmarked, thank you!
Very cool!
One other thing to consider is whether a previous employer requested that person to get a certification. My current employer is heavily incentivizing certifications because if we get one more category (we have no dev certs yet), we get Gold Partner status. It sounds lame, but apparently it comes with some perks that could boost our bottom line (which matters to all of us because of our profit-sharing setup).
Good read, slight issue in the "Visitor" example. Dolphins don't jump 20ft high :)
It’s auto correcting my formatting. It should be / * * ... * /
all was good and well until you put pepperoni on a burger...
The earliest intro article I found on JavaDoc was from 2000. Not saying you are wrong, just cannot verify when it was created. Do you have a source on that?
The Singleton pattern implementation is not thread safe. Check this great article by Jon Skeet: [link](http://csharpindepth.com/Articles/General/Singleton.aspx).
Can you please post some MVVM/WPF examples?
Skeet skeet skeet
Those who want more detailed info on these should check the Design Patterns book by GOF
Thanks ! will improve it.
Thanks. This really helps
This is ridiculously helpful for the project I'm working on right now. Thank you. 
why can't you fork the project?
I can but I don’t want to keep a copy of the code so a branch seems more appropriate. 
Ok you caught me there. So does the monkey splash a bit and drown, or can it swim?
&gt; If the consumers of the Singleton know it's a Singleton, you're doing it wrong. GetInstance() should be called at the Composition Root, and nowhere else. Preach. Use of a singleton is not an excuse for avoiding dependency injection.
The visitor example is not complete. public void Accept(IAnimalOperation operation) { throw new NotImplementedException(); } It should call the appropriate method on the operation object. C# also has method overloading so the visit methods call all be called plain visit rather than VisitLion etc. 
Hey, did you know that Aardvarks are animals u/pants75 ? Type **animal** on any subreddit for your own aardvark fact &gt;I am currently a work in progress and am learning more about aardvarks everyday. &gt;**I am contemplating expanding to all animal facts. Upvote if you'd like me to evolve to my next form** Sometimes I go offline or Donald Trump takes me offline. Be patient.
Neat, just gonna critique you on the immature emoji uses (IMO) if you plan to have this as a serious project listed on your resume.
Ok this is probably a stupid question, as an amateur C# developer who has started learning about a year ago and used C# for a few personal projects, how can I learn these patterns practically? I'd like to take my C# skills to the "next level". I've been seeing a lot about these patterns but so far with my personal projects I don't see anywhere to implement these patterns without sort of _forcing_ it. Any tips would be really appreciated. My goal eventually would be to land an entry C#/.NET position at some software company.
You mean the users settings file? I don't think they are encrypted, but I might be wrong.
Bad bot.
In theory, a user can always see what is stored on their computer. It does not matter if it is a string in your program or a config file. In both cases, the user can reverse engineer or break-point your program and find out how and where the "supposedly" private information is being read or put together. You can try to come up with a near-magical solution that only you understand, and hope for it to stay that way forever, but, because it will run on the client's machine, he will have the binary and thus be able to do either of the above. And since C# is an interpreted language, the user can, with a tool such as ILSpy, see almost exactly what you wrote in the source. [There are a couple of obfuscation products](http://lmgtfy.com/?q=dotnet+obfuscation) which make this significantly harder for the user, but still possible in theory and practice. Information stored in "Application settings" is stored in the users appdata/Local directory, in clear text.
I found C# 6.0 in a Nutshell to be a great book, and has a full chapter on the things you mention. I have not read the 7.0 edition of the book, however.
Yes these one.
I was looking through the code posted and I noticed a couple things that may be triggering your prof. It looks like almost everything is a form... that's not usually a good sign. For example, you have a class Account... but it is a form. I am trying to figure out what the application is meant to do... but I am not finding the "meat and potatoes" of the app... From what I can tell... you start the application, a form appears... this form contains at least one button which, upon being pressed launches another form called hoofdmenu hoofdmenu has at least one button, which upon pressing launches another form called Account. The account form has one button, which pressing laucnhes the accountRegistratie form. This form seems to allow you to enter a new user with an email, name and... password? Then nothing else happens. That's what it looks like the program does at first glance. Likely the application will do more in the future. Consider the following... do you need a windows form when reasoning about an account? No, not at all. The account is simply a username, an email and a password. The form is only used to allow the user to view to contents of the account and to edit those values. So, your form should be something like AcountEditForm or some such and it should have an Account Property. The form is a shell that is wrapped around a smaller account object. Something like public class Account{ String Name{get;set;} String Email{get;set;} public Account(String name, String email) { Name=name; Email=email; } public static Account LogIn(String name, String password) { //Select name, email from Users where Name=@name and Password=@password if (/*have a result*/) return new Account(name,/*result.email*/); return null; } public static CreateAccount(String name, String email, String password) { /*Call sql to insert userdata*/ } } Then create a form public class loginform:form { pu void LogInBtn_Click(Object sender, EventArgs e) { } } 
Should avoid using `new` after the initialization of your program is done. Pre-allocate and reuse are much better for your user's system performance.
Thanks for pointing it. missed it. will complete it 
thanks for the feedback
I quite like winforms. A guilty pleasure if you will 
&gt; Information stored in "Application settings" is stored in the users &gt; appdata/Local directory, in clear text. I was actually looking for this, just worded it pretty badly. Is there any good solution for this?
No. You will not find a "Safe" way to store any sensitive information on a client machine. Any information the application needs to access needs to be accessible to the user running the application. For example, if you tried to hide the file in an admin folder the application wouldn't be able to access/read the file. If you try to encrypt the data... the application needs to decrypt the data to utilize which means that the decryption key would need to be stored on the client machine. The decryption key can't be encrypted (or else you need to store a different decryption key in plain text). The closest you can get is obfuscated which just means confusing, but there are tools that can obfuscate code. Generally, to prevent the need for distributing a database connection you might want to create a restful api server that does the database operations and the application connects to this restful service which has access to the database. 
&gt; learn these patterns practically? Maybe for now you might want to just read up on them and keep them in mind for the future. For further reading on design patterns pick up "[Design Patterns: Elements of Reusable Object-Oriented Software](https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612)". When you start building something plan it out before hand, preferably with pen(cil) and paper. Once you have some rough idea, see if you can recognize any place where design patterns would come into play. Sometimes they will be intuitively incorporated into your design process, or they will emerge naturally if you try and think holistically about a problem instead of moving your project along piecemeal. &gt;My goal eventually would be to land an entry C#/.NET position at some software company. I would encourage you to learn ASP.NET MVC 5, a web framework like [Angular or React](https://hackernoon.com/reactjs-vs-angular-comparison-which-is-better-805c0b8091b1), and Entity Framework. You may just want to learn the "Core" versions of ASP.NET and Entity Framework then go back . I've taken [this course on udemy on ASP.NET MVC 5, which I would recommend.](https://www.udemy.com/the-complete-aspnet-mvc-5-course/) The same author has put together another course on [ASP.NET Core, AngularJS, and Entity Framework](https://www.udemy.com/aspnet-core-angular/) which I want to take soon. It looks like they are sequential given the requirements for each course, so you should take the MVC 5 course before you take the ASP.NET Core course. If you created a Github for a sample website (say a pizza shop where users can register, login, and order) and hosted it on Azure to show prospective employers, that could very well get your foot in the door. 
Hey thanks for the recommendations. I guess reading about these and keeping them in mind is best for now. Actually I already signed up for the first course but haven't completed it yet. Will look at Core as well. 
I don't think blindly translating all GOF patterns to C# makes sense. For example, the implementation of Iterator does not implement the generic `IEnumerable&lt;T&gt;` interface, which makes it hard to use (you can't use it with `var` in `foreach` and it's almost unusable with LINQ). The implementation could also be significantly simplified by using `yield return`. Or the Observer pattern, which for some reason uses `IObservable&lt;T&gt;` (but without taking advantage of Rx), when C# has `event`s for exactly the same purpose.
Can't you use server side authentication and have the passwords hashed?
I'm using server side authentication but the problem I currently have is that my connection string for my db is visible so someone can find that out. And if that someone got the info to connect to my db, he can do harmfull stuff to it. 
I'm talking about the user settings yes.
Ahhh... you'll have to choose the lesser of two evils: 1. Integrated security 2. Encrypt the web.config file Both have obvious drawbacks. I hope someone comes up with a better solution so we both learn something today. 
Additionally, https://sourcemaking.com/design_patterns
You have redacted the most critical portions of your code which might give insight to the behavior. 
Slightly Curious: Is this in a Console application or a Web API Application? Also, I'm guessing the po_network is a `ParallelOptions` object, and knowing how that is set may also be of import. Without having that info, my first suggestion would be to make sure the networking code has proper disposes wherever required; I've seen a lack of this cause erratic behavior, especially when performing parallel calls.
The restful service authenticates a username/password and provides indirect database access through accessor methods. So, instead of sending "Select x from y where z" (parameterized of course) you send, 'call getXs(object whereZ)'. Now the user executing the web server becomes the user that queries the database. Your api-server endpoint should be visible. It is public knowledge. Your db Endpoint is not visible. You control the codebase that is generating the actual sql queries and you control the only database user that can send them. 
posted the innards in another post. The question is why even though it looks like each individual tasks completes (I have logging as the last line, so that should mean the task has finished), sometimes additional tasks don't start.
Don't listen to him. Emojis are a way of life. Keep them.
Oh dear god, AWS SDK TransferUtility. Only sanity check I can suggest would be that `GetS3Client()` is returning a *new* AmazonS3Client instance in each case. The S3 API for .NET is *squirrely* in places. Especially the Transfer API. I won't go as far as to say it is buggy, maybe we just had something configured wrong. But we had far better luck with just using the 'PutObjectRequest' on our own. These problems sound eerily familiar, even under minimal threading scenarios. 
It's not even that hard to get around, even if you're lazy: public static class InvokeHelperExtensions { public static void LazyInvoke&lt;T&gt;(this T component, Action&lt;T&gt; componentAction) where T : Control { if (component.InvokeRequired) { component.Invoke(componentAction); } else { componentAction(component); } } } Then use: public void safeInvocation() { textBox1.LazyInvoke(me =&gt; me.Text = "Derp"); }
Interesting! You are right, if I don't thread, the code works as expected. I am returning a new AmazonS3Client instance on each call. Since there's no documentation on threading, I assumed they weren't thread capable. May there's some weird locking going on in the background on destruction...
 I have interviewed my fair share of .net developers and I can tell you if a developer doesn’t know “fields” I won’t disqualify him/her based on “lack of vocabulary” nor I wouldn’t disqualify at all, instead it should raise a yellow flag regarding oop that I would explore more. Probably my follow up question from failing to explain fields would be asking to explain what him/her understand about encapsulation. 
[I mean, the code appears to be some autogenned mess](https://github.com/aws/aws-sdk-net/tree/master/sdk/src/Services/S3). Looking at *older* versions before then (the aws-sdk-net-v1 branch), they were doing some pretty awkward things even back then.
The TransferUtility is great, I use it reliably in dozens of services for files several GB in size. You're going to want to stop using Parallel.ForEach and move to the async friendly version. var semaphore = new SemaphoreSlim(10); var tasks = AWSing.Select(async (po_network, lang) =&gt; { bool uploadokay = false; while (!uploadokay) { await semaphore.WaitAsync().ConfigureAwait(false); try { using (AmazonS3Client client = GetS3Client()) using (TransferUtility fileTransferUtility = new TransferUtility(client)) { await fileTransferUtility.UploadAsync(workspacebase + @"\" + FFID + @"\" + FFID + "-" + lang + ".msi", "hicap.frontmotion.com", "Firefox/" + UploadFFDir + "/" + FFID + "-" + lang + ".msi").ConfigureAwait(false); } uploadokay = true; } catch (Exception e) { // logging to disk here System.Threading.Thread.Sleep(700); } finally { semaphore.Release(); } } }); await Task.WhenAll(tasks).ConfigureAwait(false); You want that semaphore in there to limit your operations. At around 10 you will already be bottleneck as it is.
// don’t try to fix what ain’t broke // adapt 
None of the Chicagoland .NET companies I applied for (or the two that I worked at) even mentioned certifications; if anything they kind of come off as sketchy because of how rare they are.
Good advice, but I think it makes a lot of assumptions about the type of application you're building.
Drowns.
You don't want to wave anything the user doesn't have access to in the program. No matter what you do, a sufficiently determined user will always be able to get it out. If you're not actually very concerned about security, you can encrypt the app.config and obfuscate the executable. Another thing is that this probably implies your database is accessible over the Internet, which is a bad thing. The normal solution would be to have a server that handles the actual database access and use an api from the client side instead. So rather than inserting a new Widget in the database on the client, you might make a call to InsertWidget or a Post to Widget from your client.
I think the emojis serve a purpose, e.g. more easily navigating the document, but also to more easily mind-map: "🏠 = factory" 
I honestly wish Noda time would get included in the standard distro. I know it'll never happen, but I hate working with DateTime in the dotnet api.
 public class WoodenDoor : IDoor { private int Height { get; set; } private int Width { get; set; } public WoodenDoor(int height, int width) { this.Height = height; this.Width = width; } public int GetHeight() { return this.Height; } public int GetWidth() { return this.Width; } } The .Net convention would be: public class WoodenDoor : IDoor { public int Height { get; private set; } public int Width { get; private set; } public WoodenDoor(int height, int width) { Height = height; Width = width; } } Much shorter too...
That's pretty much a gist of it. It's not rocket science (it's gets slightly more complicated when you realize that all parameters are passed by value in C# and what it means for reference types - but you don't need to go there at this point).
I think `avoid` came off too strong. It's that I see many games use and clean up memory a lot which means higher GC usage and less performance for your program.
I watched a video on twitch about this recently with csharpfritz on YouTube, who works at Microsoft I think, and Jon Skeet. [Video here](https://www.twitch.tv/videos/248778357). I thought it was quite interesting and they were using a new feature for VS that allows you to collaborate on code remotely, you can see the files change as the other person types like on Google Docs.
Ah okay now I see it, as you said the db stays hidden and there are only a set amount of methods that you can call with the API as long as the user is authenticated to the API. Thanks for explanining, will have some stuff to learn and do.
Encrypting the app.config won't be working for me since I really want the users private information to be private. As /u/eightvo also explained about using an api that controls the db, I'm going that way. Thanks for the help.
Hah! Solid. Classic pun.
https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2
What are the main issues with DateTime? I haven't really encountered anyone and it feels a lot better than the defaults in Java or Javascript
Yep. We use it on my Twitch live stream (DevChatter) as well. And I do mean both nodatime and VS Live Share.
There is also Itenso Time Period Library for .NET, i've used it a lot and it's brilliant. Also very well documented.[link](https://www.codeproject.com/Articles/168662/Time-Period-Library-for-NET)
Curious myself. I've always considered DateTime to be pretty robust, especially compared to some other languages' implementations.
Things default to local system time. When you request `DateTime.Now`, that's giving you a local time. If you then transmit that to another computer with an imprecise serialization, the other end is highly likely to interpret it as a different time. Alternatively, you could imagine saving a time to the database from server A in eastern time, and then pull that value from another server in pacific time, and with an imprecise value, they might disagree on what actual time it is. This is all a rough nutshell explanation.
I started [one C# fork](](https://github.com/design-patterns-for-humans/design-patterns-for-humans-cs) back in the day. You could have fork it or continue it. Well. I am glad someone finished it :)
I started [one C# fork](https://github.com/design-patterns-for-humans/design-patterns-for-humans-cs) back in the day. You could have fork it or continue it. Well. I am glad someone finished it :)
[;)](https://github.com/design-patterns-for-humans/design-patterns-for-humans-cs#-simple-factory)
Option 1 - this is the perfect place to use a `switch-case` statement rather than an `if` statement. Anywhere you have lots of `if/else-if` blocks, and they all compare the same variable to different constants, you should consider a `switch-case`. Option 2 - I'm assuming that NAT_GERMANY, etc, and randomNationality are integers? If so, make them an `enum`. This option can (and should) be used alongside either option 1 or option 3. However, I don't think that gets to the heart of the matter. What you really need is option 2: - Create a class called RandomNames, with properties called RandomLastNames, RandomFirstNamesFemale and RandomFirstNamesMale - Create a dictionary of type `Dictionary&lt;int, RandomNames&gt;` (if you haven't used option 2) or `Dictionary&lt;Nationality, RandomNames&gt;` (if you did use option 2), which maps each nationality onto the relevant random names object. Then, you code will consist of using the nationality as an index into the dictionary, and retrieving the RandomNames object. From that object, it can find the relevant RandomLastNames, RandomFirstNamesFemale and RandomFirstNamesMale and apply them as required.
Just use DateTime.UtcNow.
You could encrypt the content of the setting, but you would still need have the decryption key somewhere on the users system.
Yes, you can. It is possible to do this in wcf following this [instructions](https://weblogs.asp.net/paolopia/writing-a-wcf-message-inspector). We use this to insert and validate signatures in soap message (using custom crypto algorithm) 
I'm mainly using it because of ToUnixSeconds()... 
or DateTimeOffset
Have you ever written a unit test?
I found that interfaces let you focus on one side of a problem without worrying about the implementation of the other. This makes it easier to write a mocked out interface for unit testing or having a coworker focus on the other side while you work toward an agreed on convention (the interface). It also helps identify the testable boundaries for me, places where I can have a block of code that I know works, so everything that uses it can be ensured the interfaced code works. The other advantage is letting me focus on smaller units or breaking apart using a DI framework.
i was planning on getting the data as i wanted in a datatable then bind the datagrid to it then i came i cross this http://www.wpf-tutorial.com/datagrid-control/details-row/ WPF DataGrid row details which allowed me to use the data from the second model as it is in the datagrid which bind to the first model as list in the row details, much simpler 
but... you can write an extension method to do this in 30 seconds.
nope
...that's one of the 1722 forks...?
&gt;Am I a bad person? Yes. The Gang of Four has already dispatched their assassins to your location, your wicked ways will be over soon. Seriously, though, have you ever used LINQ? Interfaces are the reason why it works on everything from arrays over lists and dictionaries to database results and `yield return` methods.
I didn't use them for a long time because I never needed them. I worked at places that interface everything but there was no reason for it. They didn't use multiple objects in functions, they didn't do unit testing but they interfaced everything. Learn about them and use them if you need them, don't use them just because.
OP is, sadly, a bad person.
Probably
DateTime doesn't have zone support and there is no robust way to know if a DateTime instance is in UTC format.
DateTimeOffset, despite its very poor name, has a DateTime and an offset, but it still doesn't have actual zone information.
Same with the Newtonsoft JSON libraries - they're used all over the place, it would be great if Microsoft could incorporate them into the standard .NET distro. It would sure help avoid some DLL Hell I've had to deal with.
What kind of information?
Can anyone explain what an anti-pattern means ?
Pretty sure you can remove the entire if statement and replace it with a dictionary like someone mentioned. You could also have your names in a list and access them with an instance of a Random class (just make sure the instance is created only once, not each time you need the name). 
Parallel.ForEach was not designed for long running operations or at least for ones of different durations. Internally it splits elements in chunks and executes them in parallel. Here is what actually can happen: Parallel1: X YYYYYYYYYYY Z Parallel2: XX YY ZZZZZZZZZZZZ Parallel3: XXXXXXXX Y ZZ I have observed this behavior and the only solution was to write my own function that uses queue to get jobs for execution. Creating tasks for each operation and then waiting for them to complete is another possibility but it depends how many tasks you have, how much memory you need, etc.
Maybe something like this, which would work well if you're using Entity Framework (Code First): public class Program { private List&lt;Name&gt; randomFirstNames; private List&lt;Name&gt; randomLastNames; public void GetRandomNames(Nationality nationality, Gender gender) { var names = new List&lt;Name&gt;(); // load this from database? randomFirstNames = names .Where(name =&gt; name.Nationality == nationality &amp;&amp; name.Gender == gender &amp;&amp; name.Type == Name.NameType.FirstName) .ToList(); randomLastNames = names .Where(name =&gt; name.Nationality == nationality &amp;&amp; name.Gender == gender &amp;&amp; name.Type == Name.NameType.LastName) .ToList(); } } public class Name { public enum NameType { FirstName, LastName } public string Value { get; set; } public NameType Type { get; set; } public Nationality Nationality { get; set; } public Gender Gender { get; set; } public override string ToString() { return Value; } } [Flags] public enum Gender { Male = 1, Female = 2 } public enum Nationality { Germany, Albania, China, Japan, Romania }
Do you mean compile to single exe file? If so there is a Nuget pack as he to help with that. I am not meet my machine but I think it is called Fody but will check as soon as I can.
If you were talking about games in your first comment you should probably specify that up front - /r/csharp is not a game programming sub and the majority of readers are not going to immediately assume you're talking in the context of an optimized game engine.
You're a procedural programmer. If that's what you want to do, then it's not a problem. If you want to take advantage of the features that object-oriented languages provide, you'll find that interfaces make polymorphic behavior easy. When you adapt to that mindset, you'll find yourself writing fewer `if` statements, which I often find are a source of my bugs.
Newtonsoft.Json is a defacto standard. It's used heavily by the latest ASP.NET versions, for instance. However, I don't see it getting integrated into the standard library since many official Microsoft packages are provided via NuGet anyways.
Yes, and thank you.
\&gt; Is there a killer reason out there that might just change my mind? I think you have the right attitude towards this in that you're not forcing a feature in your codebase just because it's "cool" or whatever. If you work on a large enough code base that you need to maintain and refactor the need for decoupling certain implementations from their api will present itself. You can selectively use interfaces when that happens. Until then enjoy your stay in fairyland ;\)
&gt;Interfaces are the reason why it [LINQ] works effortlessly on everything from arrays over lists and dictionaries to database results and yield return methods. Would you mind elaborating on this? I'm interested, but can't see the connection :) 
What is the connection between interfaces and unit tests?
because they are used for mocking in unit tests
`DateTime.UtcNow`, while useful, does not solve this core problem. Take the following output: DateTime.Now.ToString(); // 4/17/2018 9:47:23 AM, local central time DateTime.UtcNow.ToString(); // 4/17/2018 2:47:23 PM, utc time If you transmit 4/17/2018 2:47:23 to another server (an imprecise serialization), the destination server does not know the time zone or offset to use with that unless both ends agree on some definition ahead of time (like with API docs saying times are returned as UTC, etc)
I've used Itenso. Saw this &amp; thought "damnit, I wish I knew about this a year ago". Itenso has some weird / buggy hour-range stuff I tried to fix, but the author still hasn't replied on that after 6 months...
The field thing is just an example. I don't know any technical jargon. 
Correct, that's generally the best practice. 
A class has an interface too. An interface in .NET is simply a type contract. As it doesn't have multiple *implementation* inheritance, it does have multiple *type* inheritance. That's where you use interfaces. So you can implement multiple interfaces and inherit from multiple interfaces (types) in a class, and implement them there. That's not needed to be able to write software though, but interfaces make things a lot easier. Interfaces can also be used to implement generic code without generics. E.g. if you have a method `private void Foo&lt;T&gt;(T t) where T : SomeClass { }` you can also write that with interfaces: `private void Foo(ISomeClass t) {}`. Basically the same thing. Now, of course you can use generic interfaces, which is a bit missing the point of interfaces, but alas, some people like to drop large blocks of concrete on their feet on a regular basis. So that you didn't use any interface is bollocks, you did (through the class' interfaces), and likely inherited from classes which implemented interfaces and indirectly used these, but if you didn't use explicit interface definitions, that's fine, it just limits your ability to write more generic, clean code. But some people want job security and think to make that happen they have to write complex code only they can maintain, perhaps that's you, dunno ;) 
Very interesting. How does it compare performance-wise?
Although I haven't seen any system use anything other than UTC in years. Nor have I seen a date time without an offset be interpreted as anything but UTC. Local times are generally done at the UI layer.
Imagine you have a whole set of unrelated objects. You might need a list of these in order to do operations on them, but as they are unrelated you can't put them into a list, instead you need to manage a list for each type. Now, imagine they all share the same interface. You can put them into a single list of type interface and then just cast them as type when you need to work with the specifics of them. Now, imagine you need to do the same thing to each object. Add the method to the interface, implement it on each concrete class, now you can iterate through them and perform the same action without casting. You probably think you can do this with abstract classes. But now you want some of the objects to go into a different list, so you can apply another interface to manage the behaviour for that specific list. This is not possible with abstracts. I'm trying to think about writing applications without interfaces, but they're so freaking handy that I can't really. Even if you never touch unit tests and don't care about dependency injection, there's still loads of reasons to use them.
LINQ operates on IEnumerable and friends. Anything that says 'I can feed you results one at a time' works with LINQ without LINQ knowing that that thing is.
Most LINQ methods take any `IEnumerable&lt;T&gt;`, a minimal interface that allows you to enumerate a series of values (together with `IEnumerator&lt;T&gt;`). LINQ methods don't need to know whether they're looking at an array or immutable hash set, or how to read the next line from a file, a single method* can support all kinds of data structures and sources as long as they implement the right interface. \* Technically some LINQ methods have separate code paths for certain types, but that's just a performance optimization and not necessary for their function.
Yes it's Bridge.
https://www.amazon.com/Design-Patterns-Object-Oriented-Addison-Wesley-Professional-ebook/dp/B000SEIBB8
That's great news!
Yes its called Fody/Costura
Sure, but why should I if there is a method available in the framework? And as DateTimeOffset is best practice regarding to MS, why not use it in any new project?
Yeah that's the one. Sorry no short term memory..
Skim through MSDN C# pages. Check API descriptions, section names . Look at table of contents of C# spec. You could learn some smart terms in an hour. 
The first one as far as I know, but I didnt finish it.
Whats the problem with using DateTimeOffset? Honest question.
It is, and I am sorry for the spam. I felt a relicensing warranted some notice. 
I'm curious as well. I'm also wondering if it performs any allocation, which would rule out it's usage in certain scenarios.
Caring about Date / Time perf makes me wonder how it is being used. What use case would this make sense in?
Yes it does? date.Kind == DateTimeKind.Utc
For instance, * is this time before or after the DST switch? * what zone is this local time in? * arithmetic on two times across different time zones.
I think it would be better performing to call DateTime.Now once and then add a Stopwatch.ElapsedTicks to it. Also why not use DateTime.UtcNow - it is much faster.
I'm not sure I want political information coded into a low level API. Those sort of details should accessed through some sort of cloud service. Local time conversion should be done immediately prior to being displayed in a UI. Arithmetic should be performed on UTC times.
&gt; I'm not sure I want political information coded into a low level API. Those sort of details should accessed through some sort of cloud service, database, or provided by the OS. That's what noda does. Have you looked at it?
Fair enough. I had that in there, but then didn't want to have to go into a longer discussion about what was and wasn't fixed. 😁 The gist is: it's good enough most of the time (unlike `DateTime`), and Noda Time exists for when it's not.
I've read over the docs when it was posted. That data is definitely useful, but I'm still not sure why it needs its own primatives for date times and time spans. Almost all time related code should be in UTC. Time zones and local times are simply a user friendly display mechanism that's usually handled by whatever UI framework I'm current using.
I work for a state government agency, and everything is local time.
Our tax dollars at work.
We get no tax revenue. Also it would make no sense to convert to UTC. Everything is local context.
If everything is in local context then you still don't care about timezones.
You're not wrong, but that doesn't cover everything. Things happen at a certain time, in a certain place. Recording the time in UTC records only one of those axes.
open source. https://github.com/bridgedotnet/Bridge/
Right. We really only care about local time and we'll never convert to anything else, and anything incoming has to be in local time. Storing values as UTC would be nonsensical to our needs.
And that's rather the point of interfaces. You just care what something does, you don't care how it does it. For instance, all of these support `IEnumerable&lt;T&gt;`: * Single dimension arrays * `String` (`IEnumerable&lt;char&gt;` to iterate over the characters in it) * `List&lt;T&gt;` * `LinkedList&lt;T&gt;` * `HashSet&lt;T&gt;` * `SortedSet&lt;T&gt;` 
&gt; I'd argue that if you're ever storing timezone information then you're doing something seriously wrong. Then I'm doing something wrong. I have a system that, among other things, tracks a number of medical facilities. Each of them has a time zone as a property. How would you correct this mistake?
No it doesn't sorry. You post it once and then you receive what you get. This is not your products forum. But I see where you're coming from.
Pretty sure Joda Time was around long before JDK 5.
You shouldn't be storing them individually with each date. Information about a facility should be stored once for each facility. And dependeding on what you need it for, it might be better to store the offset or the location of the facility instead of the timezone.
I think /u/albemuth thinks you meant you were using Noda Time, not DateTimeOffset (that's how I read it at first, at least).
&gt; Information about a facility should be stored once for each facility. Yeah, that's what I'm doing. It just conflicts with your earlier advice about never storing timezone information. And the offset definitely isn't enough, because it doesn't capture DST information.
I meant storing the timezone with the datetime.
It also took nearly 20 years for Java to get updated time libraries. Here's hoping it doesn't take that long in .NET.