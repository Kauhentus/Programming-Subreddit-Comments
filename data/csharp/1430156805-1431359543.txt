JSON definitely is! It's about as easy to use as the Python tools for reading JSON. I was really impressed.
Console.OutputEncoding = System.Text.Encoding.Unicode
Yes. Use it.
&gt; can you tell me whether or not it is worth to use Xamarin to develop Android apps Don't make android apps from Xamarin. It may seem like "Oh! I can use my already available knowledge to make apps on Android!" But in the ned, it's a lot more complicated, and more of hassle. Even though I hate java and everything about it, it's the best way to make Android apps. Now on the whole "Should I use Xamarin" subject, if you're on windows, use Visual Studio. Now if you are like me and on a mac, where you can't use Visual Studio, I would highly suggest Xamarin, as it is much faster than MonoDevelop. And no, running VS in a VM is NOT a very good option, for anyone who will suggest this.
I agree to a point. If you're *just* making an Android app, it does make much more sense to just use the native language and tools. If you're intending to release an iOS port as well, then Xamarin might be worth it. 
I've been running VS in VMs on my Macbook for many years now. I had no problems with it, i can run several instances of VS + a shitload of programs on the MacOSX side without (too much) troubles. If i start to do screensharing at the same time it gets slow but m MBP is several years old.
I have been running VS on a Macbook Pro for a year and half and it runs just great. I guess if you have a low power shitty mac it would not run great. On the subject of Xamarin, I've used it, I've done native Android. Both have benefits. Don't think for a moment your code will "just compile" on iOS. The basic structure of an iOS app is different and means recoding all your views. Even with Xamarin forms, it's not just write once run anywhere. If you were doing iOS I would recommend giving Xamarin a shot, simply because Objective C is an abomination.
What's the TabIndex property for the Button?
Don't even consider eclipse, go straight for Android Studio.
It worked perfectly well with the meager 8GB of RAM I had on my Macbook Pro.
How is it not Java? 
Is there any book to start with Xamarin? Extra credit if it's beginner oriented.
Going off what \u\jonc211 said, you could do something like this: var rand = new Random(); var shuffledNumbers = Enumerable.Range(0,100).OrderBy(x =&gt; rand.Next(100)); I can't speak to it's performance but I trust the wizards that made LINQ... 
Starter edition is worthless for anything other than a demo.
Use IntelliJ with libGDX ;) stay away from Xamarin
Good call on Fusion logging. I spent about 20 minutes on his post earlier today, looked at it (despite the horrible Hungarian notation) and decided it looked OK. I went back to my code I wrote that did this, and every time I thought I found something, nope, he had handled it. I totally forgot how awkward loading a class and marashaling it can be and the random errors you can get on just the Load method.
Eclipse is an IDE I use without a second thought. (Mostly because thinking about why the customer demands I use it hurts my head.)
Or you could correlate to area. Population will give you very tight groupings of dots. Perhaps do both?
I work on a 250K-line codebase in Fusion on a 2014 MBPr and it's smooth as silk (even with VS running with Resharper). The key is having an SSD.
Very good point. I should have mentioned that. My SSD was key to my setup.
I hear C# is pretty good if you're writing Windows Phone apps, too. Who am I kidding? Hahaha... *sob* 
Android's retarded imitation of java does not even have the real java's latest features (lambdas and streams). It looks like a fucking retarded dinosaur when compared to modern languages like C#. And it probably never will due to oracle being a motherfucker against google. And even if it were, java is still ugly like a dog's stinking butthole and retardedly verbose. So yeah, if Xamarin allows me to code for Android without going to the horrible torture of having to endure such a retarded useless language, then I'm all for it, regardless of any "quirks" it might have.
Yeah. That's shorter and gives the same meaning to it. Thanks.
Amen, brother
if you are a web developer, than it is nice to reuse all that knowledge. But sooner or later you will hit a wall when you are trying to recreate something that you have seen in a native app and you simply can't do it behind all those layers of abstraction that phonegap / cordova bring to the table.
No sorry i don't know any good beginner books. I already had many years of professional experience in c# when i started using xamarin. I also have a good amount of experince in java... So if i have a problem and only find a Java based solution on stackoverflow it is easy for me to translate the answer to c# 
Based on the stuff in the article I'd probably go for something along these lines: abstract class Weapon{} sealed class Staff : Weapon { } sealed class Sword : Weapon { } interface IWeaponHolder&lt;T&gt; where T : Weapon { T Weapon { get; set; } } abstract class Player&lt;T&gt; : IWeaponHolder&lt;T&gt; where T : Weapon { public abstract T Weapon { get; set; } } sealed class Wizard : Player&lt;Staff&gt; { public override Staff Weapon { get; set; } } sealed class Warrior : Player&lt;Sword&gt; { public override Sword Weapon { get; set; } } That way you get the full type safety at compile time. 
Yes, and it looks like that helped the OP with his /her problem. Unfortunately though, some muptard downvoted everyone who suggested IndexOf as a solution.
I very much like that idea. I know the article is just trying discuss the problem in simple terms. But my brain wants to stray and begins to worry how cumbersome and future-proof all of this static type checking will be when you do things like add more weapon types or subtypes, dynamic rules and constraints, extensibility, et cetera. I'm no C# guru though and I do look forward to part 2.
&gt; Even though I hate java and everything about it, it's the best way to make Android apps. My main motivation for looking at Xamarin is to use F#. Does the conventional Java stack for Android support any more modern languages? 
&gt; it does make much more sense to just use the native language and tools I cannot bring myself to use Java as it is such old technology. Do any modern languages target Android, perhaps by compiling to Java? 
protected set? abstract class Weapon { } sealed class Staff : Weapon { } sealed class Sword : Weapon { } abstract class Player { public Weapon Weapon { get; protected set; } } sealed class Wizard : Player { public Wizard() { Weapon = new Staff(); } } sealed class Warrior : Player { public Warrior() { Weapon = new Sword(); } } //... var player1 = new Warrior(); var player2 = new Wizard(); foreach (var player in new Player[] { player1, player2 }) { Console.WriteLine("Weapon:" + player.Weapon); } //Staff //Sword 
That's happening on your view.... We would need to see your view 
The issue is in your view. You're using viewmodel of type CourseRequestData. You're passing in a List&lt;CourseRequest&gt; instead. Try seeing what lights up red in your view (I assume you're using visual studio) and fixing those things.
Holy damn, really appreciating you reading through that and giving some advice. My whole View is basically glowing red squiggly underlines... All due to this error: https://imgur.com/zd15o85 Can you explain to me how I pass it as something which isn't List&lt;CourseRequest&gt; what is the best way to pass this? 
Extreme Programming, as an example of methodology using unit testing, states that deciding which tests are relevant, and which tests are not (and should not be implemented) is a part the developer's job. So I'd say... it's up to you ! For a more useful answer, I'd say that it depends on what you are testing : * If you're testing the deserialization process, I would test the deserialization of each type at least once. Once you have checked that you can deserialize a string properly, I wouldn't bother checking other string properties. * Now if you're testing the service that produces the JSON data, you'd probably want to test the data produced by each of the service's methods at least once. Hope this helps, good luck !
Unit tests can be a real pain to write. Especially when you need to test on allot of things. What I often do when I need to heck allot of properties is using reflection allong with a file describing the properties and there expected values ( I often use JSON for that ). You still need to do allot of manual labor but it saves some reoccurring function calls and it bundles the checks in one file in a strictured matter.
It's ok to pass a list. You need to let the view know this... @model List&lt;WebApplication6.ViewModels.CourseRequestData&gt; or @model IEnumerable&lt;WebApplication6.ViewModels.CourseRequestData&gt;
&gt; @model IEnumerable&lt;WebApplication6.ViewModels.CourseRequestData&gt; I feel I'm bringing you down a rabbit hole here, so you don't have to reply but just so the thread makes sense. If I change it to an IEnumerable, I get the following exception: &gt; Compiler Error Message: CS1061: 'WebApplication6.ViewModels.CourseRequestData' does not contain a definition for 'Employee' and no extension method 'Employee' accepting a first argument of type 'WebApplication6.ViewModels.CourseRequestData' could be found (are you missing a using directive or an assembly reference?)
Firstly, in answer to your question regarding asserts: Generally when unit testing you do want to test every field, but if you're employing TDD it's not a terribly laborious task as you're creating the fields as you're writing the tests. If you're not familiar with TDD it's a great time to get into it since you're new to programming as it forces you to think about your design and key programming principles such as separation of concerns. I can highly recommend this book as a primer on C# TDD: http://www.amazon.co.uk/Art-Unit-Testing-examples/dp/1617290890 As an aside, you'll want to remove string literals from your asserts as it leaves a lot more room for mistakes in your tests. You should have a set of test variables which are used both in construction of the class under test and/or method invocations, and the asserts. For example: [Test] public void DoIt_ValidInput_SetsSomeFieldToCorrectValue() { // Arrange var testInput = "Test Input String"; var classUnderTest = new ClassUnderTest(); // Act classUnderTest.DoIt(testInput); // Assert Assert.AreEqual(testInput, classUnderTest.SomeFieldThatIsSetByDoIt); } And secondly, a couple of comments on your GitHub project: 1) It's good practice to mirror the directory structure of the project being tested, in your test project. For example if I want to find the tests for Model/Clients/Clients.cs I'd expect to find it under the Tests project at Model/Clients/TestClients.cs 2) You might want to look into Dependency Injection and Mocking - it's absolutely essential if you want to make classes that can be truly tested independently of their dependencies. For example if you had a class that used an instance of Random, how do you test that the values produced from Random.Next() are used in the correct way? You lift the calls to Random into a RandomService class, and inject IRandomService into your consuming class's constructor. When it comes to testing you use Moq (or another mocking framework) to create a Mock&lt;IRandomService&gt; and set it up to always return a constant, which you can then use in your testing. The same goes for if you had a class that accessed a database - being able to test the class without actually connecting to a database is pretty important. If you want to see some practical examples of DI and Mocking you can check out one of my (unfinished) GitHub projects [here](https://github.com/ben-wallis/Chip8Emulator/tree/master/Chip8Emulator.Core.Tests).
I tried out this solution but the problem I am getting is the compiler cannot find any base class between the warrior and the wizard so there is no way to store the generic players. Here was my test code. var warrior = new Warrior(); var wizard = new Wizard(); var players = new [] { warrior, wizard }; // error: No best type found for implecitly-typed array. I figure there has got to be a solution to this but I cannot think of anything.
Yeah it seems rather over the top with how simple writing a service really is.
Right, CourseRequestData has a definition for 'Employees' not 'Employee'. public IEnumerable&lt;Employee&gt; Employees { get; set; } So your view needs to foreach over this list. 
I'm using Xamarin and it's pretty solid. I'm also using Xamarin.Forms and, imo, it has potential, however, is a framework that not even completed its first year, we need to be patient and collaborate with the Xamarin dev team, after all, if it becomes the best option for mobile development will be awesome for us, c# devs.
When you get right down to it, this is because C# doesn't support use-site variance on generic parameters (Java is better in this regard, unforunately). The best solution I know of is to make something like an `IPlayer` interface (no generics) that `Player` implements (with a `Weapon Weapon` property, explicitly implemented). Then `players` can be an `IPlayer[]`. I've never found a better solution than that but I'm really hoping someone will show me one. ---------- EDIT: Here's a better solution using declaration-site variance, and I'm guessing it may be what /u/ericlippert suggests (could be wrong of course!): public class Test { public static void Main() { var warrior = new Warrior(); var wizard = new Wizard(); IWeaponHolder&lt;Weapon&gt;[] players = new IWeaponHolder&lt;Weapon&gt;[] { warrior, wizard }; warrior.Weapon = new Sword(); wizard.Weapon = new Staff(); //players[0].Weapon = new Sword(); // Can't set here } } abstract class Weapon{} sealed class Staff : Weapon { } sealed class Sword : Weapon { } interface IWeaponHolder&lt;out T&gt; where T : Weapon { T Weapon { get; } } abstract class Player&lt;T&gt; : IWeaponHolder&lt;T&gt; where T : Weapon { public abstract T Weapon { get; set; } } sealed class Wizard : Player&lt;Staff&gt; { public override Staff Weapon { get; set; } } sealed class Warrior : Player&lt;Sword&gt; { public override Sword Weapon { get; set; } }
It's really not that old. You need to learn to try things you're not comfortable with.
Works very well with and can be integrated easily into MVC applications. http://www.asp.net/signalr/overview/getting-started/tutorial-getting-started-with-signalr-and-mvc
You could easily avoid thinking about it by placing "Weapon" inside the Wizard &amp; Warrior class (Staff &amp; Sword respectively) instead of in the player class. That way, a player doesn't have a weapon unless they are a certain class (AKA it's intentionally put there)...then you'd specify weapon handling mostly inside the Weapon class itself.
Could you tell us how you really feel, though?
In your instance, it's not. But imagine you're writing a larger application with say, 20 classes which are used in many different scenarios. Do you want to have to create fake classes for each one, and code fake methods to perform in each and every way you need for testing? Or do you want to not have to do any of that, and also have self documenting setups and expectations built right into your unit tests? Really it's more a case of mocking being a good thing to learn before you go onto larger things as it'll help you a lot in the long run, rather than "what you did is wrong do it this way instead for no reason". I don't have any particular guides to recommend for learning Moq but you could start with the Quickstart guide [here](https://github.com/Moq/moq4/wiki/Quickstart) and from a quick Google [this](http://www.developerhandbook.com/2013/08/30/csharp-writing-unit-tests-with-nunit-and-moq/) appears to be a good introduction to unit testing with Moq. If you're still finding yourself asking "why should I use Mocks" then [this Stack Overflow post](http://stackoverflow.com/questions/38181/when-should-i-mock) might help.
why not put an ASP.NET MVC front end on the application, that way users can access it through their browser, no need for a native UI that way You should still be able to keep the backend running on .NET/Oracle that way What have you used so far for the application? WinForms? WPF? 
I got it to compile. I closed VS and re-opened it and then the solution. Also, I can't have NuGet get me the very latest version because we (company) have set which versions we are going to use and we need to be in synch. Also, it looks like NuGet didn't update some of the version #'s in the config file ... seems like a common issue based on what I found Googling. Anyway, thanks for the response!
I sort of understand why they got down voted, what with the duplicate item issue. But this isn't a real world problem, as you would just switch the for syntax. 
Whatever solution you end up on, make sure you're getting paid proportionately. 
Unit tests shouldn't call any external services or APIs - this is called an integration test. In your case you should create a service class called APIService or similar to do the actual WebClient() call since currently your WhmcsApi class violates the [Separation of Concerns design principle](http://en.wikipedia.org/wiki/Separation_of_concerns) by doing two things - it's responsible for both fetching the data and parsing it. As it stands you can't test your WhmcsApi class without it doing a real web call. This ties into my below post on mocking, if you had an IAPIService interface you could mock this out and have it return test data instantly for unit testing. The benefit of this isn't apparent when you have a quick performing external service that's always available but if you had 10 unit tests that use an external service to see how your application responds to different results that each took 2 seconds, you'd suddenly have very slow unit tests. I've got projects at work with hundreds of unit tests that collectively run in under 10 seconds, because everything's correctly separated.
That i will be and the people who i am working for i have done this type of work for in the past.
I'm not /u/TwoManyPuppies, and don't mean to speak for him, just thought I'd weigh in. You'd still have to rewrite your UI, but you're probably stuck doing that anyway. Beyond that, it's more a question of what the application was doing. If there was complicated graphics stuff going on, that could be troublesome to port into a browser application. If it was just a normal data-driven thing, it should be totally fine. 
&gt; I've tried to look online but all the tutorials of the code are too complex for the level that i'm currently doing. That's why you need to tackle one thing after another. First learn C#, use simple Console applications to remove the complexity of WPF. And for this you should get a good book, such as "Head's first C#".
Sounds like they're about to make a nasty mistake, apple really dont make a great platform for servers ... To be honest, you're probably better off jumping ship and/or doing a total rewrite. You're looking at building a business-centric high availability high performance application in xamarin?
Yeah its mostly all data driven and pretty straight forward.
Yeah. One thing at a time. Bob tabor's series of C# for beginners is what got me started, he's got a few WPF guides you can check out (afterwards!) Get C# down, then WPF. Just google "Bob tabor, channel9". GL.
just for the sake of providing you better guidance, what is the current application they're using: Windows Forms, WPF, other? I'm assuming that its a client side installed application at least, right?
OK. Then MVC should be fine for you. [This tutorial](http://www.asp.net/mvc/overview/getting-started/introduction/getting-started) is pretty good for getting started.
appreciate the link I will make good use of it!
&gt; but i'm struggling to actually find beginner level tutorials on anything and even then it's not commented for explanation. That is because you do not grasp the basics of C#.
What they want from the application itself is pretty straight forward and simple to do. My problem comes when they switch the pc I was building the application for from windows to apple after I have completed a good portion of the application. I am building the application in visual studio and I am curious if there is an effective way to change what I have up for an apple OS without completely rewriting it from scratch. 
Yeah. I don't know, after re-reading the TopShelf info on the website a few times, it looks like it's the reverse of what the comment suggested. The site seems to indicate it's a framework for developing and debugging your service without actually installing and running it on the machine. Then when you're ready to deploy the service, you switch off TopShelf. I am trying to understand, but I don't get it. You can run a console app as a service with a tool like RunAsService or SrvAny.exe from the Microsoft Resource Kit. And building a service that can run as a console app is pretty trivial. Even so, there are a bunch of libraries and even an old CodeProject article on how to do it. 
I hope you are making the client pay for this. You should start over native for the platform, don't give yourself a ton of problems by running a solution that, for all intensive purposes, has only been used in beta and some games/small apps. I would not be the company on what you want to do, at least not for a few more years. .NET will get better around *nix systems and the support is already quite good, just remember, you are taking a very early adopter approach by trusting a major line of business with it. 
Azure would be ok but if its only going to be running on a single computer, whats the point? 
You can run windows on a mac :) 
Same here, expected to walk into a war of rants :)
want to try to do this without using a virtual machine. 
But then you can't get the weapon of an arbitrary player.
I didn't sorry the message read as though you replying to a post above where I mentioned that its on a single machine :)
I think he means Bootcamp, but I'm guessing your client isn't buying Macs only for the hardware anyway.
Thnx, i was already trying something similair to this, i only haven't got it fully working. i hope i can use this to get it working! thank you!
Here's my approach, which allows a heterogeneous list of players. void Main() { var magicStaff = new Staff(); var merlin = new Wizard { Weapon = magicStaff }; var slashy = new Sword(); var genghis = new Warrior { Weapon = slashy }; var players = new IPlayer[] {merlin, genghis}; foreach (var player in players) { Console.WriteLine (player.Weapon); } } abstract class Weapon{} sealed class Staff : Weapon { } sealed class Sword : Weapon { } interface IPlayer { Weapon Weapon { get; } } abstract class Player&lt;T&gt; : IPlayer where T : Weapon { public T Weapon { get; set; } Weapon IPlayer.Weapon { get { return this.Weapon; } } } sealed class Wizard : Player&lt;Staff&gt; { } sealed class Warrior : Player&lt;Sword&gt; { }
Xamarin provides MonoMac, a Mac compatibility framework. However, for the sort of application you're describing, I'd do what everyone else has suggested and turn it into a web application.
&gt; I'd assume that if the difference between weapons requires multiple classes, you wouldn't be reusing much. I don't think that's a safe assumption. I think one of the unstated goals here is to enforce the [open/closed principle](https://en.wikipedia.org/wiki/Open/closed_principle) so that the player class wouldn't require modification if a new weapon was introduced. &gt; If the goal is to absolutely enforce rules based on classes/types, you're going to lose a lot of re-usability...and it's frankly stupid after a certain point. That may or may not be true, but the point of this exercise seems to be exploring what's possible using static types in .net, so that you can make that decision in an informed way. This is an example, not production code. &gt; Really you should just leave it as Weapon in Player and just override the property to make sure it's not a Sword/Staff before setting. That's debatable. I prefer build failures to runtime exceptions.
&gt; It's really not that old. 1996 makes it ~20 years old. &gt; You need to learn to try things you're not comfortable with. I know Java (and assembly and pretty much everything else). Java is 10-100x slower to develop in than OCaml or F#. The poor developer experiences makes it not worth my while. So do any modern languages target Android, perhaps by compiling to Java? 
&gt; for all intensive purposes, Actually I am talking about line of I understand that, though I have not seen any line of business installs using it for core systems either. I actually spoke to a couple other folks today that say that there are some out there. I will need to look into that. Know that what is being considered is a minority kind of setup. One should be prepared to accept what challenges come from that.
C# in a nutshell is really good and I recommend it. You can however only learn so much in books. Spend your time coding instead. Learn some common practices like dependency injection, tdd, orm, linq, repository pattern, mocking, object oriented design, rest web services and whatnot. Good luck and have fun coding! :-) 
&gt; I've got about 2 weeks to code an app for a class Sounds like you're trying to play a lot of catch-up. Unfortunately learning a language does not generally work well like this
Excatly, books are great but a lot of the skills get picked up from just writing code. It does not matter if the code is good or even if the program does anything useful or interesting to anyone other than yourself. Just write. I also suggest doing a lot of reading of others code if you can. Grab some OSS projects from Git Hub and soak in how other developers work. It's now always right or good but you will see how the language gets used and might even get some good ideas.
I've always wondered if Macs still have the lead in software for graphic design, or it is just that so many graphic designers were brought up on them, that that is what is most often used.
That is the direction i think i am going to end up taking. 
Does the app need to be in wpf? Otherwise I'd suggest just making a console C# program and writing the output in text. Something like X| | O ---|---|---- X| O| O| | Written everytime that someone chooses a space should be fine for a beginner programming class. Taking out the complexity of wpf's ui management would probably be a big step. Then if you have extra time after completing the console program, you could move a lot of the logic for the tic-tac-toe game to a wpf program. Like has been said, loops and arrays are the very basic of programming and it would be easier to make a program that doesn't deal with complex UI right off the bat.
Whether or not you create a class/method as static is entirely dependent on what you plan to do with it. Do you need to be able to create an *instance* (ex: var thing = new Thing()) of the class you are working with? Think of the good ol' Student/Course example that seems to be used in every OOP course - you need to create instances of Students and Courses to represent how your data is related. Now, compare that situation to a class that simply exists to do work on other objects. For example, you might have a class that contains methods that add or remove a Student from a given Course. In this scenario, you don't need an *instance* of your helper class - it is simply there to do work on the Student/Course objects. This would be a good opportunity for a static class.
Get them a Mac Mini and load Windows on it for just this application. It will be cheaper for them than paying you to rewrite it in Xcode, given that you're new to the Mac. And faster than their finding an Apple developer and you refunding most of their money. 
I (and I think most people who aspire to be good programmers) learn best by doing. I will echo that while having knowledge gained from reading is fantastic you will learn far more by doing something. Anything really. Find something that interests you and try to do it. Create a program to catalog your [insert entertainment medium of choice] collection, or write something to solve some problem you have. The more you expose yourself to problems you encounter while coding the better you'll get at it. So go out, try stuff, and have fun. Break what you've made and then fix it. I'm not saying don't read I'm just saying go do stuff.
[MSDN Channel9](http://channel9.msdn.com/Series/C-Sharp-Fundamentals-Development-for-Absolute-Beginners) has videos on a wide range of topic for everyone from the beginer to the advanced coder. [Codeplex](http://www.codeplex.com) is home to many C# projects. Many are moving to [Github](https://github.com/search?l=C%23&amp;q=C%23&amp;type=Repositories&amp;utf8=%E2%9C%93). You can learn a lot by reading other peoples code and seeing how they dealt with problems. [CodeProject](http://www.codeproject.com/?cat=3) has great articles on C# tools and technology. 
Jon Skeet's book is great! I don't consider it a "beginner" book but if you pick up on stuff quickly and like book learning, *C# in Depth* may not be too much. It has some "under the covers" explanations of stuff too (much like his SO posts do), and it's always nice to know why things are the way they are. It's so easy to say C# should do this or why didn't they do that, and he brings a lot of that knowledge to the forefront. Actually now that I think about it, of all the high-levels languages I have used over the years, I feel like I know more about the intervals and design decisions of C# than any other, and it's because of Skeet and others like him. 
Thanks, I'll be watching for it!
Yep, C# In Depth is definitely not a beginner's book. I'm ploughing through it at the moment (I'm about 1 year into C# learning), and it's a great book, but it's not going to teach OP C# - it's more about how C# has changed over the years (and why). In the process I'm learning a lot, but it's more about learning why than learning how. I like the way Skeet doesn't tell you what is right and wrong - he explains WHY he has a certain opinion, and also the counter opinions (e.g. I've just read the bit about 'var' in C#3, and he has great advice without telling you what to do). I also have Microsoft Visual C# 2013 Step by Step by John Sharp, which is a better book for learning. And I just got the C# 5 Pocket Reference, which I believe is based on the 'In a Nutshell' book. It's excellent, and if it's any indication of the nutshell book I'd say go with that (the Pocket Reference is kind of a brief primer - great for looking up things quickly when you just need a simple explanation and an example)..
I can never figure out if it's pre-written and you're just deliberately stringing us along, or if you get to the end of the post and think "meh, I'll type the rest next week". Either way: I'm impatient! (Though saying that, I've only just read the conclusion to unchecked) 
Thank you for your input, I agree that doing something will be better to learn, but I have a hard time thinking of things to solve in programming, i have been using ProjectEuler.net to give me something to do but I feel i struggle with that a lot more then i should. So my question is what are some basic programs I can write that will help me to learn by experience
Woo, a reply from the man himself! I'd be interested to see what you have lined up in the coming episodes. In the real world I often use an approach similar to what /u/recursive has done with an explicit implementation of the non-generic interface, so any alternative thoughts/patterns (without going massively down the OO rabbit hole) would be welcome!
Are you new to programming in general or new to C# specifically? If the former, although it's outdated (in the sense that there are newer and better ways to do some of the things it talks about -- there's nothing in there that won't work today), Learning C# 3.0 is an excellent introduction. If the latter, Programming C# 5.0 is my recommendation.
A delegate acts a variable that can hold a method instead of a value or an object. In order to use a delegate you first have to define what the signature of the method(s) you want to be able to hold looks like. public delegate int MathDelegate(int Number1, int Number2); So this MathDelegate type can hold any method that takes two integers and returns an integer. Once you have the delegate type defined, then you can create a new variable of that type and store a method in it. MathDelegate myMathMethod = new MathDelegate(Add); Where Add is a method that matches the signature we defined for the delegate. public int Add(int number1, int number2) { return number1 + number2; } Because that method is stored in a variable you can now do lot's of different things with it, like change which method it's holding dynamically or pass it around to other methods and classes. If you're using anything above .net 3.5 you don't need to create delegates anymore as the Action and Func&lt;T&gt; classes can do the same thing and are much easier to use. I can show some examples of that if you need. 
Action's and Func's allow you to skip the step of creating your own delegate types and instead use these classes along with generics. Actions can hold any method that has a void return type. It has multiple generic type overloads for each parameter you want your method to take. So for a method like this. public void DoSomething(string test, int number) { // Does Something } You would create a variable like this. Action&lt;string, int&gt; DoStuff = DoSomething; Funcs hold any method that returns a value. The last generic parameter is always the return type. So my example in the top comment would look like this. Func&lt;int, int, int&gt; MyMathMethod = Add; Once you have that down, you are ready for the next level, Lambda expressions!
 eventTestInstance.SpecialEvent += (sender, args) =&gt; {}; This might be beyond the scope of the discussion but If you plan to unsubscribe from the event example above, you will need to have a named function instead of the anonymous method. If you were looking to unsubscribe here you would need to subscribe with eventTestInstance.SpecialEvent += this.SomeNamedFunction; private void SomeNamedFunction(object sender, SomeEventArgs args) { } I've been bit by this in the past so I figured I'd throw in this additional information. 
You could type just about any word in the dictionary and find that many submissions for it. Search results have fuck all to do with what actually makes it into the commonly visible pages of a sub. Added to which, fucking wow!!! 2 submissions in 9 days on a topic related to C# and that's your definition of someone "pushing an agenda on us"? You need to get off reddit. It's clearly distorting your sense of reality.
I use this one too. Still an analogy, but more accurate : a delegate is a functor containing a list of function pointers.
Is this legal?
Just a note, MemoryStreams don't need to be flushed (or disposed) as they do not use buffering. 
Very true! I guess it's more appropriate to say that Skeet's book *teaches you about* C#, rather than it *teaches you* C#. I have always liked his writing style (your portrayal is pretty spot-on), so I enjoyed the book. I think the information is very valuable, but perhaps not a beginner's book. I do find that sometimes understanding what they went through regarding feature X makes you appreciate it, as well as gives you a better understanding of its application. 
Xamarin offer a 30 day no questions asked refund policy. If these licenses have the full 12 months then why not get a refund instead? Drop them an email at hello@xamarin.com
that i did not know. thanks for letting me know. deleting the thread
Ive been a Xamarin dev for nearly 2 years. I have become Xamarin certified through Xamarin university, and I use visual studio for both iOS and Android cross-platform app development with both full API Xamarin and Xamarin Forms. Whilst Xamarin can do amazing things, I think developer productivity (for me) was too low. If you write very simple apps (similar to the sample apps) your probably OK, but if you have a complex app with a lot of moving parts, you'll find yourself fighting with the tools too much and on the forums every five minutes trying to find the answer to questions like an obscure platform deployment error that wasn't there before, and you've change nothing etc. etc. Ive blown a stack of money on Xamarin. Although running Visual Studio in a VM is OK to start with, as you add more and more code it definately starts to creak a lot, and you end up doing everything in Xamarin Studio - which isnt such a great experience as VS (though not bad). For me, its not the answer to good productive cross-platform app development, so I was going to checkout AppCelerator - which allows you to create fully native apps with a Javascript 'glue'. However, React-Native (which does the same as AppCelerator but better) is now available (on iOS only at the momnet - Android coming soon) and it is truly AWESOME - and thoroughly recommended
There is one thing that worries me. Your project might seem complex, but there is actually minimal value in it. Only part that actually seems to have value is the Model. Everything else is just thin wrapper over some other library. The IDataStore and DataStore are practically useless, so is the exception. They don't add any real value.
At a given time or with regularity? Either way System.Threading.Timer is a solid timer which can do mostly anything you want. Something like this to set it for a specific time: using System.Threading; private Timer _worker; void SetTimer() { var due = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 0, 30, 0).AddDays(1); var span = due.Subtract(DateTime.Now); while (span.TotalMilliseconds &lt; 0) { due = due.AddDays(1); span = due.Subtract(DateTime.Now); } _worker = new Timer(ob =&gt; CheckFilter(), null, (long)span.TotalMilliseconds, Timeout.Infinite); } It also has a .Change method you can use rather than re-initialising. 
What is the specific question you have?
Codingames.com
It's more a reference than a book for study, IMO.
Before your comment I will guess it will not work. I don't know why `null` is read as `String.Empty`. I am not sure it is really a bad thing. You can still check the value before the concatenation and raise an exception. Thank you for the information :) ----------- You are talking about method hiding, aren't you?
It's completely logical, but something that may appear unintuitive, especially to beginners is the fact that ReferenceEquals(1,1) Is false
So much for all the hype they were out-competed...
 public struct Girl { public void Boy() { this = new Girl(); } }
No, same problem. In general, the ?: operator has very poor type inference; the two branches have to be the exact same types. You can't do it with lambdas either.
https://wiki.theory.org/YourLanguageSucks#C.23_sucks_because
&gt; 1/0.0 [Just tried](https://dotnetfiddle.net/cam9d9). The output is Infinity Awesome. I guess there is something relative with floating point, isn't? 
Standard defined behavior for value types, but can be a bit surprising. 
`var func = asdf ? (Func&lt;int, int&gt;)Foo : Bar;` `var func = asdf ? Foo : (Func&lt;int, int&gt;)Bar;`
I think this is standard floating point number behavior, built into the binary representation.[ it even works in c](http://goo.gl/Iio9bt)
Honestly I'd suggest learning MVVM and WPF. WinForms basically promotes mixing business logic with UI code with results in awful code.
[Yuuuuup](http://en.wikipedia.org/wiki/Division_by_zero#In_computer_arithmetic)
IMO, nested blocks are often an indication that you need to break a method up into multiple private subs.
Wow the C# section is dumb. * ECMA and ISO standards of C# have been updated since C# 2.0, since then only Microsoft's specification exists. * Valid point, but I wonder what's changed now that the compiler is open source. * i++.ToString works, but ++i.ToString does not. (You have to use parentheses.) * I suspect the number of people bitten by this can be counted on one hand... * Arrays are not type safe: object[] foo = new string[1]; foo[0] = 42; compiles fine but throws at runtime. * A compiler warning is generated if you try it, although that may just be Resharper being helpful. Maybe it should fail the same way you can't assign `List&lt;string&gt;` to `List&lt;object&gt;`. * You must null check everything you get since the language allows nulls. * I didn't realize having "Null" made a language suck now? * Parameters are not supported for most properties, only indexers, even though this is possible in Visual Basic .NET. * I have no idea what this means, but maybe it's a valid complaint. * The conventions are difficult to code review and deviate from other popular language conventions (of similar style) * "They don't do things the way that I like"
Eh… that kind of depends on what market you're job hunting in. Variety can be an asset, but so can depth. I don't want to hire a person who did a little bit of everything and who will need 6 months to get up to the speed that a good specialist will have on day 1.
To be clear, you mean for _value_ types, right? It seems pretty significant to suggest avoiding it for reference types as well.
&gt; Valid point, but I wonder what's changed now that the compiler is open source. Jon Skeet has mentioned that he is working on updating the ECMA spec.
Hm, if I've got time to be on reddit and building an app I've got time to start learning something new. I've basically got the email help section complete, with external links to walking anyone through anything. We still have a few dial-up customers using Outlook Express 5 out in the wild, which is so archaic that there's almost no way to help them without interactive screen shots. I'll probably finish the last form I've got to work on with the email, make that a standalone app for now, then work towards making the connectivity troubleshooting in a better format, WPF or MVVM. Thanks.
Parsing a time span string with "24:00:00" results in a TimeSpan object with 24 **days** instead of hours. All of the other values of minutes and seconds have proper exceptions for when you make a bogus entry (like 90 minutes) but the parser somehow defaults to a behavior where the culture sensitive symbol for days defaults to ":" I think it's a bug in the framework, so it's something to watch out for. 
Actually, I'm not biased, now I'm developing an app using ionic and before that one I developed another using Java. I'm giving some talks about Xamarin and people always ask about performance, I just wanted to put some info together.
Q: What do you about wanting to program, but live in a town that doesn't have a demand for programmers and you're not "educated" with a bachelor's degree? --- Side note, I believe I've been applying to the wrong places. I'd like to know how I can get started as in a programming career when no one advertises nearby needing programmers.
Here is an interesting one to me. [.Net Fiddle](https://dotnetfiddle.net/A849ZP) Interestingly enough it prints this in Java and C#, but in C++ it prints 1-5.
If you are right, you should report it.
Yes, go WPF. The learning curve is steep, since it is quite a change from WinForms, but it makes much cleaner apps with *far* more customization. It sounds like overall you're building a "wizard" in a fairly standard way though. it's actually the best way to try what you're doing, since it keeps the presentation of a section specific to one form/dialog. &gt; tie in a lot of our tech support documents with the MS Office framework extension Could you go into more detail with this? Office interop can sometimes be a minefield, and there are likely some things that can be done better or recommendations from people who've been there. It might also be beneficial to make it a web app. ASP.Net MVC is a pretty simple platform to learn, and web apps have the benefit of being centralized. So you only have to publish/update it in one place. Downsides? You'd also need to learn HTML, CSS, and web standards.
download link: ~~http://code.visualstudio.com~~ https://www.visualstudio.com/products/code-vs
That is true. Also be mindful to really get to know the tools that you use and understand them.
`ReferenceEquals()` would return false in that case because 'var' resolves to int, and so the boxing would happen twice still. This would print true: `object number = 1; Print( ReferenceEquals( number, number ) );`
That was a lot of "and"s btw
Yeah, it basically is a "wizard" as this point. It's definitely nice having any external web links I use organized in this thing so far. I still haven't actually played with the office interop, just got the framework add ons installed for Visual Studio 2013. I was hoping to link some .docx and .wlx files within the application. This is a side project and not all part of my actual job description, just bonus points and self-teaching. It will be great when we hire new staff to have it all centralized in a more organized, streamlined place for training and reference. Our wiki has a weird flow to it to be used as a training guide. So if the interop is that difficult to work with, I really just wanted to implement information we've got out in our shared drives with a logical organization system that'd link to documents from relevant places. Right now it's kind of poke around until you find the right document, assuming it's named what you think it'll be named. That said, I am familiar with HTML and CSS and somewhat with XML. So that part of a web app isn't an issue. As this is a side project I'm working on and we are a very small firm I'm not sure a web app is really necessary, although it could be nice to get our non-tech staff in to familiarize themselves a bit better with what we all do. I'd have to discuss with my manager on that first, though, to determine if we'd be hosting it on one of our internal servers or not.
Still not getting the question. You post a piece of code and no clear question on what is wrong, what this should do or any other information. 
They way Microsoft behaves in the last few months is awesome. Next thing to hope for: Unity Support :D (**edit:** for this editor)
Well, in their defense that's what you get when parsing with implicit culture. I'm a big fan of using `ParseExact()` with fully specified format strings and desired culture. This throws an `OverflowException`: try { TimeSpan span = TimeSpan.ParseExact( "24:00:00", @"hh\:mm\:ss", CultureInfo.InvariantCulture ); Console.WriteLine( span.ToString() ); } catch( Exception e ) { Console.Out.WriteLine( e ); }
Well, [this one](https://dotnetfiddle.net/YQd3QL) prints it correctly. It probably gets the variable x, sums 1, then assign the original x to the x. As ++x first sums and then returns the changed variable, it assigns the changed value.
For the hiding of base class members are you referring to something like this? Where the code would not compile due to C not being able to override foo()? public class A { protected virtual void foo() { } } public class B : A { protected void foo() { } } public class C : B { protected override void foo() { } }
This is the best tl;dr I could make, [original](http://techcrunch.com/2015/04/29/microsoft-shocks-the-world-with-visual-studio-code-a-free-code-editor-for-os-x-linux-and-windows/#.dq11wt:wqmf) reduced by 74%. (I'm a bot) ***** &gt; At its Build developer conference, Microsoft today announced the launch of Visual Studio Code, a lightweight cross-platform code editor for writing modern web and cloud applications that will run on OS X, Linux and Windows. &gt; Visual Studio Code offers developers built-in support for multiple languages and as Microsoft noted in today&amp;#039;s Build keynote, the editor will feature rich code assistance and navigation for all of these languages. &gt; As Somasegar told me, the new editor is partly based on Microsoft&amp;#039;s experience with writing the online Monaco editor for Visual Studio Online, but the company also worked on bringing some of Visual Studio&amp;#039;s language features to Visual Studio Code. ***** [**Extended Summary**](http://np.reddit.com/r/autotldr/comments/34apjh/microsoft_annouces_visual_studio_code/) | [FAQ](http://np.reddit.com/r/autotldr/comments/31b9fm/faq_autotldr_bot/ "Version 1.5, ~13191 tl;drs so far.") | [Theory](http://np.reddit.com/r/autotldr/comments/31bfht/theory_autotldr_concept/) | [Feedback](http://np.reddit.com/message/compose?to=%23autotldr "PMs and comment replies are read by the bot admin, constructive feedback is welcome.") | *Top* *five* *keywords*: **editor**^#1 **Visual**^#2 **Studio**^#3 **Code**^#4 **Microsoft**^#5 Post found in [/r/programming](/r/programming/comments/34aglr/microsoft_annouces_visual_studio_code/), [/r/microsoft](/r/microsoft/comments/34agmg/microsoft_launches_visual_studio_code_a_free/), [/r/technology](/r/technology/comments/34aj5j/microsoft_launches_visual_studio_code_a_free/), [/r/webdev](/r/webdev/comments/34ai2m/microsoft_launches_visual_studio_code_a_free/), [/r/csharp](/r/csharp/comments/34ah8v/microsoft_launches_visual_studio_code_a_free/), [/r/javascript](/r/javascript/comments/34ala9/microsoft_launches_visual_studio_code_a_free/), [/r/Ubuntu](/r/Ubuntu/comments/34ai9l/microsoft_launches_visual_studio_code_a_free/), [/r/programming_jp](/r/programming_jp/comments/34akp0/visual_studio_code_が発表されるフリーのコードエディタでwindowsmac/), [/r/hackernews](/r/hackernews/comments/34ajwg/microsoft_launches_visual_studio_code_a_free/) and [/r/realtech](/r/realtech/comments/34ajiq/microsoft_launches_visual_studio_code_a_free/).
&gt;My first concern is that it's too late (I'm 27). 34 here. You're not late.
Holy crap, this is awesome!!
You don't add views to action methods. A view can be a return type of an action method. Maybe if you can describe what you are trying to do we can help more
I was thinking like this https://dotnetfiddle.net/ww1q92 It makes sense logically, but somehow I just dont agree with it. However thanks for that example. Very interesting case.
I understand what you're saying. It's just that this behavior is so unexpected. It doesn't throw an exception. If the opposite were true, then you could smack yourself right away and say hey I need to specify a culture. Instead, you get a working result that is wrong and no indication from the software that anything untoward has happened. Someone actually has to look with their eyeballs at the data to notice the problem. I should have said, "It is my opinion that this is a bug because it produces un-intuitive behavior by default." You can say it's by design, but it doesn't change my opinion.
It's using electron http://electron.atom.io/ 
One of the nice things I find is that the visual studio IDE does give you an indication that you are hiding it. It's not an error but if you're as meticulous about your warnings as I am it does give you a nice indication that maybe you hid something you didn't mean to and the correct syntax for if you did mean to hide it.
Assuming you live in a decent sized city, I would examine local .NET user groups and similar events and just start turning up to everything you can and meet some programmers in your area. Start fleshing out an online profile and engage in the online communities (stackexchange, github). I would also try to figure out my level, so I know what kinds of jobs to target, you could get a sub to Pluralsight and see how you follow along, and judge your level from that. Mind you, for an entry level position, if you understand OO in general, but just lack knowledge of specific APIs, you're already more then qualified as I see it. There is no specific skillset that you MUST have, I would advise reading a few books about software craftsmanship. Steve McConnels Code Complete, 2nd ed, is a nearly complete coverage of the skills you should cultivate, and what to avoid. Robert Martin's Clean Code is also highly recommended by everyone. These kinds of skills will apply to everything you could do in your developer career (whatever the current situation). Writing code is craftsmanship, but only a (sometimes very) limited element of the job, it's just as much about working with other programmers, managers, analysts and customers. 27 is young, and why worry about the guy who is ahead? I certainly didn't learn programming as a career, it was just something that I found fun, and then found out I could get paid money doing. CS degrees are nice, but no one does integer programming, (rigorous) runtime/space analysis, Markov chains, generative grammers, multi-taped turing machines, GPU computing, compiler generation, or anything else of the crazy shit I did in school. The parser stuff is occasionally useful (mostly because you can make a crack to the other CS guys about the non-regularnes of a language and hence why the noobs regex will fail).
OSX won't run SQL Server, obviously, so you would want to look into alternative databases (Postgres, MySQL, MariaDb)
I looked it up once, but I have forgotten why. That sounds right though.
Asp.net MVC uses reflection to match your controller name to the views. "MainControllers" would look for views in the "Main" folder under the "Views" folder. 
Why would I ever use eclipse now?
It isn't closed-source proprietary software?
For Arch users it's available [through the AUR](https://aur.archlinux.org/packages/visual-studio-code/), can confirm that it works.
Yup, x++ instead of x=x++ works as well for the same reason- the addition is performed after the evaluation, but because of the explicit assignment with =, x is reassigned to itself without the addition calculation being executed
Yea, so?
How would IntelliSense work when it doesn't know what libraries you are using? 
Ummm.... Isn't Unity support already there? Can't you use VS as an editor in Unity? (I may be wrong.)
/u/changetip donut
The Bitcoin tip for 1 donut (1,544 bits/$0.35) has been collected by *dkralj*. -- [^^what ^^is ^^ChangeTip?](https://www.reddit.com/r/changetip/wiki/tipping-on-reddit)
Really, every time I bring up the fact that I write VB to any other programmer they spend at least 5 minute telling me how much of a waste the language is and how much they hate it. I don't think it is wrong of Microsoft to prioritize C# over VB in almost everything since their market seems to prefer it. 
a university i'm about to join has dropped VB for C#. I've found C# much easier to understand vs VB.net. 
Still not a question we can answer without just giving you a piece of code. Elaborate on what you tried, and what goes wrong in your current solution
I'm not convinced that duplication would have been a issue - and i haven't the inclination to test I'm 50/50 that the hash part of the checking algorithm would take care of that check....USUALLY the IndexOf call makes damned sure that its the EXACT same item you're comparing before it returns TRUE. I may be wrong Either way, someone went out of their way to silence the IndexOf calls without providing an explanation (at the time of writing my original comment) which is a bit of a dickish move.
I experienced the horror of eclipse in college. We initially spent most of the year learning C# using Visual Studio, everyone was moaning that Visual Studio was too complicated and hard to learn. I did not share this opinion though. Anyway, later in the year we moved on to Java using Eclipse and I think its fair to say that everyone went back on what they said about Visual Studio. At least things actually *worked* in Visual Studio. TL;DR My classmates initially hated VS, but that was before they used Eclipse.
Ah, thanks for clarifying. I'm a complete novice with C# (just started learning it) and I'm still largely unfamiliar with what metadata gets stored in the solution files. I was hoping that it would still be able to work with some of the basic stuff such as what's in the System namespace.
So there are a lot of different uses. You can use this to change functionality at runtime. if (userSelection == "Addition") { MyMathMethod = Add; } else { MyMathMethod = Subtract; } return MyMathMethod(number1, number2); I use them a lot to avoid having to create a base class and child classes when I have code that only differs on some small piece of functionality. You'll see them used extensively throughout Linq for that same reason.
Will it support multiple cursor / multiple select using Ctrl+D similar to Atom or Sublime?
Solution files are mostly just a list of project files. The project file has your assembly references, source file list, compiler options, build scripts, etc. It's the one you actually care about.
So... Segfault? 
If you have a shit load of resources to spare and a fairly trim install, it runs okay. But the main advantage is being able to extend it, so you probably won't have a trim install (otherwise you'd be better with a decent text editor). 
Wow! That is a ton of language support!
That helps to clear things up a lot. I was missing that separation between the two. Thanks again for the response!
I'm guessing there is a reason that it acts a lot like atom. At least it installed similarly. And it looks like they're using Chromium as the rendering engine too. Edit: It's because they're using the Electron shell. https://github.com/atom/electron
https://www.reddit.com/r/dailyprogrammer/
One less potential backdoor on your system. You do what you want though.
The local developer groups/events advice is really valuable not just because it can help your coding skills, but because it can be the start of your network. For example, do you know which companies in your local market will actually hire entry level developers? In my market there's a couple that do and everyone else is looking for 2+ years of experience for even their lowest positions. The people who have been working in the market will know where you should be looking for jobs, even jobs that maybe aren't posted anywhere, and those people can be found at local dev groups and events.
But you can't code a GUI to hack the IP in C#!
I'm happy to know you choose to trust Microsoft and their deployment process. Peace be with you comrade.
Does this code help? namespace ConsoleApplication38 { using System; using System.Threading; using Timer = System.Timers.Timer; class Program { static void Main() { HomeWork(); } private static void HomeWork() { var oneSecond = TimeSpan.FromSeconds( 1 ); var tenSeconds = TimeSpan.FromSeconds( 10 ); var alarmClock = new Timer( tenSeconds.TotalMilliseconds ) { AutoReset=false }; alarmClock.Elapsed += ( sender, args ) =&gt; CheckTheOil( sender as Timer ); var until = DateTime.Now.AddDays( 1 ); //run for 24 hours. Console.WriteLine( "Starting timer." ); alarmClock.Start(); while ( DateTime.Now &lt; until ) { Thread.Sleep( oneSecond ); if ( !Console.KeyAvailable ) { continue; } var key = Console.ReadKey().Key; if ( key == ConsoleKey.Enter ) { break; } } alarmClock.Stop(); Console.WriteLine( "All done!" ); } private static void CheckTheOil( Timer sender ) { sender.Stop(); //add your method here var now = DateTime.Now; Console.WriteLine( "Checked the oil on {0} at {1}", now.ToLongDateString(), now.ToLongTimeString() ); sender.Start(); } } } 
The property labelSeed.Text is of type System.String. The return value of Convert.ToInt32() is System.Int32, and the literal 1 is of type System.Int32, so the value of the expression (Convert.ToInt32() - 1) is also of type System.Int32. You are attempting to assign a value of type System.Int32 to a property of type System.String. This is not legal in C#; the value you assign must have the same type as the property (or must be implicitly convertible to that type, which is not the case here). Therefore, you must convert your Int32 value back to a String value prior to assigning it to the property: labelSeed.Text = (Convert.ToInt32(labelSeed.Text) - 1).ToString();
Yes it can! The alt key allows for multiple cursors. ^\(awesome\)
Solution: Stop using crappy retarded useless dinosaur technology. Otherwise you might as well just use java which at least also runs on Mac. winforms sucks and is completely useless. I can build this stuff in WPF in 15 minutes. Matter of fact I'm planning to create a reusable open source WPF library similar to javascript's Impromptu, I just didn't have the chance to sit down and write it yet. Seen the //build/ conference today? heard anything about winforms? no? that's because no one gives a single fuck about that useless retarded crap. Use WPF and you'll be able to migrate to Universal Apps. Keep using winforms and you'll become unemployed.
I trust them the same as I trust any Linux major distribution, no more no less.
NodaTime is a port of JodaTime which is a Java library that fixed many of the systemic problems with the Java Date and Time classes (notably the lack of thread safety and problems with time zones). Java 8 borrowed pretty heavily from JodaTime's API design when building their new Date/Time API (java.time). The built in C# ones don't suffer from many of the same problems. In fact they have very similar APIs to JodaTime/NodaTime. For instance System.TimeSpan and NodaTime.Interval are pretty much the same thing. Ditto with System.DateTimeOffset and NodaTime.OffsetDateTime. There usually is no reason to include NodaTime in the dependency list, especially since most .NET frameworks don't natively support NodaTime.
What's linting?
As ir seems you can also use alt to move code blocks up and down.
What they use before VS? Or did they learned other language before C#?
&gt; I didn't realize having "Null" made a language suck now? It doesn't, but absence of representing variable that cannot be null kind of does. Even the man who implemented null first calls it a mistake: http://www.infoq.com/presentations/Null-References-The-Billion-Dollar-Mistake-Tony-Hoare This, however may get resolved in C# 7: https://github.com/dotnet/roslyn/issues/227
Good to know
Thanks!
What's wrong with electron?
&gt;However, this is one anecdotal experience. Perhaps Eclipse is better than I think. I thought I hated Java. Only recently I realized I just hated Eclipse.
I totally believe this. Its consistent with everything I've heard, and my own experience. Blech... Eclipse sucks.
Hence "trim install", though as noted that defeats the point. Also, having the resources doesn't mean it'll use them - you have to tell it it's allowed to. 
I use WPF on my own apps! The reality is just that in many companies, management is making technology decisions, like what you can use. There is also a lot of friction from older developers that want to coast with what they know. You try to promote ideas and get new things accepted, but it's a long road sometimes. In the meantime, you still have to do your work and build what they want, with the technologies they have approved. It's the lousy harsh reality of corporate software development. Over time they often come around, especially when we hit a wall like you mentioned where they want a universal or mobile app and we have our backs against the wall. But I am still employed, and I can use whatever I want in my own apps, which I do. :) I look forward to seeing your library!
The IntelliJ based IDEs are the shit, and that much a lot of developers can say. CLion makes me feel like in heaven while doing C++.
I think my big issue was that I wasn't starting from scratch. I was given a large, insanely messy project, and just getting the dependencies worked out was a nightmare.
Cool idea! I think I have an immediate use for this. :) And I like the use of Action and Function here - it's amazing how compact and readable it makes the code. Your readme mentions you don't really know where to go from here, so I'll throw out a few ideas that immediately came to mind. I'll mention them here, and if I get a little free time (hah!) I'll contribute the code. 1. Interval - there may be some calls that only make sense to retry on an interval, such as every 30 seconds. It would be nice to be able to specify this to throttle the retry rate. I imagine that for a lot of tasks that are prone to failure, we won't want to just hit them repeatedly without a break. 2. Events - this probably makes more sense in concert with interval, but here are a few possibilities: 1. RetrySuccessEvent (OnRetrySuccess) - raised when a retried task succeeds 2. RetryFailedEvent (OnRetryFailed) - raised when a retry ultimately fails (i.e. did not succeed and ran out of attempts) 3. RetryAttemptedEvent (OnRetryAttempted) - raised for each retry iteration (for progress tracking). Alternatively this could match something like System.ComponentModel.BackgroundWorker's ReportProgress paradigm. 3. Timeout - The maximum amount of time to retry the task. This could be used with or without Interval. This implies that a retried task fails if we reach the maximum number of attempts or if we reach the timeout. Thanks for releasing this!
Neat. Feels a lot like what one would do with computation expressions in F#.
None. Visual Studio 2013 has the ability to sync the settings across installations. So why would I bother? Once set up it's fine to go.
I've used the Retry pattern described here which is basically exactly the same thing: http://stackoverflow.com/questions/1563191/c-sharp-cleanest-way-to-write-retry-logic
yeah this was my first thought as well... i found Polly when looking at the Circuit Breaker pattern. 
Turn the XAML designer off...turn all the designers off. 
Whoa, didn't know you could do this! Very good idea.
Stop on first build error. We have insane solutions...
I used a pattern like this for automated website testing. It would basically try to do something like click a button until it was successful. Excellent usage in this context though, well done!
I'm no expert in MVC, but perhaps you can make use of a class library for your framework?
MVVM is really just the tip of the iceberg. Once you have that down, you'll want to start looking into patterns like Dependency Injection. Also, something which I'm working on now is using Entity Framework with the Unit of Work and Repository patterns, which couples well with MVVM.
Change the all capitals menus to normal case.
Can you do this in vs? I always changed the registry entry
I like them uppercase
Yes you can
I do it via registry. I believe 2015 has an option.
Remove the second toolbar. Move the property view near the solution explorer. Add my own dark theme.
Quickly go into dark theme
Until they rewrite the CLR in something other than C++, it definitely will not last *longer* than C++.
True, it generally gets installed before I even open VS for the first time!
If anybody isn't familiar with this, VS lets you login to your Microsoft account (there's a toolbar in the top right by default). Once logged in it will save your settings on their servers and automatically apply them when you sign in with a new install of Visual Studio on another machine.
Awesome thanks! That is useful. Well 2 reasons why I am indulging him. 1. Money 2. I want to learn more about encryption stuff. I do plan on adding some fun easter eggs... like a prompt that asks if it is ok to upload all passwords to the NSA or CIA. and other things to make him more paranoid.
&gt; C# is a good language that is far superior than Java Didn't Java catch up immensely with their last two versions in terms of performance to C# ?
Sure, the performance is fine. It still lacks properties. Dependency resolution is a nightmare still.
show line count
One of the first things I do. Nice when comparing differences before checking in changes into source control.
ELMAH is all you need. And if you use MVC just install the ELMAH.MVC package.
Yes or even "error communicating with Government server, please try again"
Yep, line numbers and force smart (4) tabs.
&gt; Microsoft as an excuse There is a real history behind this though, and I’m still “wait and see” on Microsoft. They’re getting better now (hopefully). It sucks that we have to do things for political reasons, but we do. &gt; some advantages I see. Though it would be best for a language to have both ;) &gt; parameterize type by number The best example is a matrix/vector style class that is sized at compile-time with minimal redundant code (so no Vector2, Vector3, Vector4, etc, just Vector&lt;N&gt;). &gt; reflection Which generally speaking happens at run time. C++ is really good at no-cost compile-time abstractions. Yeah the Turing-completeness of the template system can be a bit much, but it is very useful. &gt; rant And I tend to rant when people compare modern stuff to C++ of old. &gt; locked down features I personally hate this. The programmer should, ultimately, know what he’s doing. Yeah this isn’t always so and the tools we have aren’t the greatest and the programmers we have aren’t the brightest, but yeah.
VS Commands makes it easy
Does this lead you anywhere? http://www.remondo.net/using-ssl-transport-security-wcf-basichttpbinding/ Have you tried installing the certificate on your machine?
Well, Microsoft is pretty heavily invested in C#, but they're even more invested in C++, in which many of their core products are written. Draw your own conclusions.
Perhaps they will eventually write the CLR in .NET Native, since that compiles to machine code like C++ does. I guess we have to just wait and see. :)
C# will be around for a very long time. It's already been around for 15 years. It will easily do another 20 years. Microsoft is exercising good stewardship of the language by turning it over to the open source community. If it gets adopted up by the Linux community (in combination with MVC and vNext) it could last 50+ more years. 
Meh, I find it slows down VS and is a massive memory hog.
C# could survive an extinction event that kills C++. C# has an entirely new life as a web development language. If it can break into the mobile device market (lol windows phones), it could outlast C++ by a very long time. 
Could... but what are those mobile OS's going to be developed with? Plain ol' C? Maybe. More likely C++ for the OS libraries and C kernel, which is what we have now.
Just do it on tax day every year
Too bad it still takes so long to open the files, as if it's doing most of the layout anyway.
Add in Resharper :-) turn on Line count and Wrap text Add in the lines vertical that show in the nesting of loops etc, 
No, that project was an expensive failure. You may remember that it seemed like Microsoft was backing away from .NET for a while and that was because some people who got burned during that project basically wanted to kill it off. Those people no longer being at MS is part of why we're seeing a renaissance in .NET stuff now.
Ugh I have nightmares when I walk past java beans in the grocery store to this day. 
Awesome!
[When I take on a promising new hire and one week in he still hasn't enabled line numbers.](http://i.imgur.com/ldtpOON.gif)
Also don't tell him that no one really knows what's in a compiler or in the hardware. My security prof was explaining how existing compilers were compiled from a compiler before it, and that chain could have introduced vulnerabilities at some point. Or that the hardware could be injecting vulnerabilities. Or that the widely used encryption schemes can be broken given enough time or resources. That whole course was an exercise in trust issues.
2013 also has an option.
There's good money for that kind of thing. 
&gt; I don’t think you will ever see C# run on an 8-bit 12KiB chip. I just wanted to let you know that in the current //build/ conference by Microsoft (which you can watch live on channel9.com) proves this way wrong. Day two was all about makers and they had every Pi, Arduino, whatever imaginable out there and most of it was running C#.
&gt; and compete with Java. I would argue that competing with Oracle is done and over with. Java, while still strong in market share, is becoming more inferior every day. Dot Net has blown past Java for a while now.
C# will be the big competitor to JAVA in the coming years. The big thing with JAVA was cross platform development which just got a huge kick and boost from Microsoft with making their shit open source. I would be surprised if the market would not shift to C# from JAVA in the coming years.
TRY-CATCH, SUPPRESS EVERYTHING! Jokes aside, I like to check my inputs to minimize the risk of exceptions, and try-catch clause for the peskiest of methods. Edit: Sorry, didn't notice ASP.NET. Disregard my comment. 
Xamarin uses cookies# for cross platform mobile dev 
The windows chartable also tells you the byte code at the bottom. You can also put it directly into your C# code, since it supports Unicode :)
I'm a little confused why one would do this. Please explain? 
Thanks for the replies. For now i solved it by using letters and simply apply different colours to the two different players. Changing the fonts seems pretty advanced and this was not what i wanted when i started the project. I still learnt some things from it and i will probably look deeper into it later :D Thanks! -Wemonster 
They are resource hogs and frankly I feel they only are there to hold the hands of beginners. 
Use The examples but I can summarize in short hand. First, if you just want the control, use the menus to add item to toolbox, add the wpf or winform dlls and they'll appear in the toolbox. To do it via code, add your includes. You'll need to call cefsharp .Cef.initialize () to get the ball rolling. cefsharp.winforms or cefsharp.wpf each have a class called chromiumbrowser that is a control you can add via container.controls.add I use Cef in my biggest project and it's an amazing bit of software. 
It might also be useful to have an option for exponential back off for the retries.
It's really bad at making french fries. Seriously though - in what way? 
Are you bad like, you don't make the fries right or you don't cook them long enough? If you're cutting potatoes yourself, soak them in water for a few hours to remove the starchyness and rinse them just before cooking. It'll make em nice and crispy.
Personal use
Web Development in Java doesn't hold a candle to the Microsoft stack, not even classic ASP. .Net, and Next just blow it away. I shudder whenever I see a Web page driven by Java. It's as ugly as it's vm. 
I was under the impression, I thought I read somewhere, that it is compiled by c#. Or maybe it was MS ' c++? Something to do with it having some baseline that let's it make itself. 
The thing holding back C# has been microsoft's relationship with the open source community. With this massive switch in attitude, I see good things for it in the future. The other thing in MS's favor is the fact that oracle has pretty much decided that they are done innovating with Java. Listening to several talks about the future of java are very depressing (for me a current Java developer), Their plans for the next 3 releases are pretty much "Um... value types?" and then restructuring the internal JVM. Useful things, sure, but disappointing. There are so many places the language could improve but it likely won't improve. Contrast that with C# which on every release is introducing new language features and sugar to spoil the whiniest of developers.
Oh lol :( 
Yup, the JVM is fine. It is Java the language that is stuck in the stone age (with no chance of moving forward). They are so concerned about backwards compatibility that they will never make the breaking changes needed to evolve the language from where it currently stands.
"People are still stuck with "Microsoft is EVIL" mindset and assume anything made by Microsoft is doomed to fail, with that being said." I totally disagree. That talk has been dramatically reduced since the 90s and early 00s. Microsoft has shot themselves in the foot with their botched windows 8 and image problems. MS was trying to be a phone/tablet/desktop computer company, and that's not bad in itself, but their implementation was awful. As someone on the sale's floor at a bestbuy while putting myself through school to become a software engineer, I often hear from many customers that they hate windows 8. Without a good medium for the language, it will cut down the developers using it. The less people are wanting to use window's, the less people will be using csharp. 
Just not sure how to organize the various classes. I mean, is the pan a Model or a Controller? I'm pretty sure the Photograph and Tumblr are Views, but the knife always throws me.
Change to C# dev settings (f6 builds) Then comment shortcuts
Why are line # important to have on? I turn/leave them off as they are distracting to me. I use the ln/col at the bottom of vs.
Disagree with tabs vs spaces, but it's personal preference.
Have him look up [Ken Thompson](http://scienceblogs.com/goodmath/2007/04/15/strange-loops-dennis-ritchie-a/). Then tell him about [firmware hacks](https://spritesmods.com/?art=hddhack&amp;page=1&amp;), [BADBIOS](http://www.theregister.co.uk/2013/12/05/airgap_chatting_malware/), and some of the [other](http://www.extremetech.com/extreme/173108-researchers-crack-the-worlds-toughest-encryption-by-listening-to-the-tiny-sounds-made-by-your-computers-cpu) interesting sidechannel [attacks](http://en.wikipedia.org/wiki/Timing_attack). Enjoy watching his head explode. :)
If you need extreme performance, it's hard to control exact memory layout. With C or C++, you can optimize your algorithms for "locality" to extract as much speed as possible from your memory and CPU caches; doing so with C# is much more difficult; you tend to end up with unchecked, unsafe code, pointers and manual memory allocations and at that point, you're just writing C in a C# dialect.
Oh, and you would add the listener either via configuration file or via code: TraceSource.Listeners.Add: https://msdn.microsoft.com/de-de/library/system.diagnostics.tracesource.listeners%28v=vs.110%29.aspx
&gt;You can of course also implement your own listener. Could you point me in the right direction for that? I'm specifically looking to use HTML.
You're pretty close. public class JsonHttp { private string _id; public string ID { get { return _id; } set { _id = value; OnDataGet(_id); } } public delegate void DataGetEventHandler(string id); public event DataGetEventHandler DataGet; internal virtual void OnDataGet(string id) { DataGetEventHandler handler = DataGet; if (handler != null) handler(id); } } public class MainClass { public JsonHttp jsonHttp = new JsonHttp(); public MainClass() { jsonHttp.DataGet += jsonHttp_DataGet; } void jsonHttp_DataGet(string id) { //Do Something } }
You can certainly implement your own TraceListener, but maybe you should consider [log4net](http://logging.apache.org/log4net/release/features.html) or [nlog](http://nlog-project.org/), which already give you a plethora of options and relegate the details of where and how the output go via their cfg files.
You're really not bound to much of anything any more. Heck, you can even take Java/C++ Android apps and iOS Objective-C apps and tweak them to run. For WPF specifically, check the section on "Universal Windows Platform Bridge for Classic Windows Applications": &gt; Universal Windows Platform Bridge for Classic Windows Applications &gt; Windows has a huge ecosystem of Win32, WPF and .NET apps spanning from productivity to the most amazing games. Today we talked about a bridge which will allow an existing Classic Windows application to be converted to a Universal Windows app and made available in the Windows Store, Project Centennial. These apps will not only have the same install and update user experience that the Store provides today, they will also be able to call the vast majority of the Universal Windows Platform APIs and new platform capabilities like Action Center, Actionable Notifications, and enhanced Live Tiles. &gt; &gt; We also want to make sure that customers feel confident installing these apps from the Store and that they will not cause their device to slow down or introduce malware or other issues. If customers don’t like the app, then they can simply uninstall it and Windows ensures that the app is completely cleaned up. We achieve this by isolating registry and app data access for the app. So when your app thinks it is writing to the registry, it’s actually being stored in a per app hive, which can be easily removed. This is all done without you having to make major changes to your code. Just convert your existing installer into AppX using our tools, available later this year. So, one of the ways you'll be able to distribute your application is by bundling your existing WPF application. Looks like they'll provide updated APIs that let you access the new features (like notifications, live tiles, etc) and you'll just have to make minor tweaks to your installer. Now, this is all depending on _what_ your WPF application is doing. I imagine random unfettered access to the file system might not be possible. We'll probably get more information about limitations later.
In my opinion, C++ and C# will both be around for as long as we're using programming languages, but C# is rising in the industry beyond C++ and Java, though C++ has applications in other concentrations C# probably won't move into.
Honestly I'm the only c# dev at my work so I don't get to do/have either. 
Just in case you don't know, you run "charmap.exe" in windows to see the Character Map app. You can type into the Search For: at the bottom "tugrik" and see this char.
There is an expiration time in the cookie. I believe it can be changed inside of azure active directory. Also check to see if you have any profile synch utilities running. They could be invalidating the cookie. I suspect chrome synch as the culprit.
It's [Turing Complete](http://simple.wikipedia.org/wiki/Turing_complete), so basically anything.
Ah, thank you! I figured it out. It's simply a matter of putting ".html" at the end of the file name. Then I can insert tags and what not by wrapping the message.
They are but that does not mean there is more demand for it. The demand at the moment is front end and webbased apps, which c++ isnt for.
Java 8 was released in 2014, containing many of the features that were new in .NET 3.5... released in 2007. And Java still has a way to go to reach feature parity. It's really the most boring language out there today.
Oh, thanks for correcting me! I seem to mix those two up a lot. &gt; Shortly after it was published, they withdrew the standard and released SHA-1, because of a yet to be discovered by the rest of the world attack. You mean to tell me that we know that there's an attack on SHA-1 that only the NSA knows about? I mean, I know it's an Merkle-Damgard construction and, well, look at how MD5 is doing these days, but I hadn't heard that there was good reason to believe the NSA actually had an attack; I guess I should read into SHA's history more. Well, good thing Keccak is a completely different construction :)
I was really surprised to learn that we already have all of the plumbing to create extension properties and we just need the compiler to wire them up.
Roslyn is written in C# and compiles C# to CIL but the CIL is still compiled to machine code by C++ code.
&gt; you could implement GC in C++ You cannot implement a decent GC in C++ as you cannot reliably walk the stack. 
&gt; The best example is a matrix/vector style class that is sized at compile-time with minimal redundant code (so no Vector2, Vector3, Vector4, etc, just Vector&lt;N&gt;). You don't want to recompile that from headers every time you recompile your code. You just want to generate that code and compile it into a library. &gt; Which generally speaking happens at run time. C++ is really good at no-cost compile-time abstractions. No it isn't. Templates are a horrifically bad way to do metaprogramming. Try writing a regular expression library using templates, for example, and compare with solutions written in other languages. In addition to awful compilation times, templates offer totally incomprehensible error messages. &gt; Yeah the Turing-completeness of the template system can be a bit much, but it is very useful. I stopped using C++ for application programming 11 years ago and I don't miss template metaprogramming *at all*. 
GetIndexParameters() is for [an indexer](https://msdn.microsoft.com/en-us/library/system.reflection.propertyinfo.getindexparameters%28v=vs.110%29.aspx). If you're sure you want to get those, you'll just use the second parameter in the call to GetValue() to supply the index. var firstItem = property.GetValue(arg, 0); That assumes that the index type is integer, it could be a string, or anything else really. It also opens up another question, how do you know what values are valid? I've done a lot of reflection work and never had to concern myself with indexer properties. I'd suggest instead of doing this, maybe look at casting arg to IEnumerable with something like: var items = arg as IEnumerable if(items != null) { foreach(var item in items) { ... } } Would that work for what you're trying to do? The only interesting classes I can think of in the standard system types (and any other libraries for that matter) that have indexers, also implement IEnumerable or ICollection, etc...
No. A lot of C# performance comes from reified generics and value types. Java never got either of these which is why simple things like a generic hash table can be [17x slower in Java](http://fsharpnews.blogspot.co.nz/2010/05/java-vs-f.html). 
&gt; the JVM is fine No value types, no reified generics, no tail calls. 
&gt; C# will definitely not replace C++ as many people seem to think. Though I am obviously no expert, the only modern languages I can see fitting into that role are D and Rust. C# is not playing the same game and doesn't pretend to compete with any of them. Not only did C# compete with C++ for application and server programming, C# and Java have virtually wiped C++ out in those domains. C++ has clung on in some niches but they are tiny in comparison which is why [job demand for C++ has fallen from 30% to 8% over the past 10 years](http://www.itjobswatch.co.uk/jobs/uk/c++.do). 
I did actually... Thats the problem. It complains either way and I have no idea why. 
&gt; recompile that from headers every time We’ll see if the module system helps with this. It’s still better to have true parameterizable types than not. &gt; incomprehensible error messages Go use clang some time. This has been improved a lot. &gt; 11 years ago
~~The null expression seems to expand:~~ if (variable?.Property == value) ~~into~~ if (variable == null || variable.Property == value) ~~So it does the null check first and "ors" its result with the remainder of the expression. Kinda saves the necessity to do a null check when trying to prevent possible *NullReferenceExceptions*.~~ I was incorrect. The operator actually evaluates to null when the expression to the left evaluates to null, otherwise it proceeds to execute the code to the right. So, ?. actually replaces the following code: item = (item == null) ? null : item.Child; // equivalent code with the ?. operator item = item?.Child; 
Sorry, I'm really retarded lol. I used Nuget to download it. Where would the .dlls be? 
Exactly, and it even works with indexers.
~~As far as I can tell, yes. I think it is just~~ if (variable?) ~~because the syntax looks to be derived from the nullable operator.~~ ~~This is based entirely on this article, of course.~~ **Edit:** I was wrong. [Explanation in child comment below.](http://www.reddit.com/r/csharp/comments/34jg62/whats_new_in_c_6_and_visual_basic_14_from_build/cqvklck)
Great, let's hope so then :D
There isn't a nullable operator presently in c#. The closest thing is the null coalescing operator, which is two question marks. `??` I believe if you want to test for null-ness, you'd just do it the same way you've always done it. if (variable != null) I don't think your proposed `if` syntax would compile in c# 6.
There is a nullable operator currently in C#. Try setting an int variable to null. You can't. Now try setting an int? to null. You can. This is what I mean by "nullable operator." My proposed syntax is almost exactly as the screenshots in the article show. **Edit:** Guess it's more correct to call it a [nullable type](https://msdn.microsoft.com/en-us/library/2cf62fcy.aspx). My mistake. **Edit2:** Well apparently the operator is simply ?. and not ? as I thought. So its only intent is to not throw a *NullReferenceException* when grabbing properties of a nullable object. It is not a null-check. [Source](http://blogs.msdn.com/b/jerrynixon/archive/2014/02/26/at-last-c-is-getting-sometimes-called-the-safe-navigation-operator.aspx). So we'll have to keep doing if (variable == null) or other variations. 
Looking at the "before and after" screenshots ([before](http://static1.squarespace.com/static/5005bb39e4b0d377efbfb41d/t/5543b430e4b0742a14e28f1d/1430500404655/?format=750w) and [after](http://static1.squarespace.com/static/5005bb39e4b0d377efbfb41d/t/5543b441e4b0742a14e28f90/1430500420272/?format=750w)) it shows exactly my expansion, although a specific example and not a generalization. Also, the logic behind it is simple. Nesting "nots" (!) inside a boolean operator is very confusing. We want a boolean operator to evaluate to true if what we are checking is true, not if what we are checking is false. The wording there is confusing, so I'll explain just a little further. We are checking if a variable is null. We should not be checking if a variable is not null within the scope of the operator. That is up to the programmer to do (it is also unnecessary to do). And if the variable evaluates to null, the full condition can be exited from without going on to the later checks. This prevents the *NullReferenceException* from being thrown, which is exactly what is the intention of this new operator. We don't need to first check if the variable is not null and THEN check the *variable.Property* value. If we know it is null, then we are good to go. 
Here's the expansion I see in the screenshots if (json == null || json["x"] == null || json["x"].Type != JToken.Integer || json["y"] == null || json["y"].Type != JToken.Integer) { // something } to if (json?["x"]?.Type != JToken.Integer || json?["y"]?.Type != JToken.Integer) { // something } That is correct. You used `==` in your original example, not `!=`. As I'm sure you know, those have different meanings. In your original example a null reference wouldn't satisfy the condition, but a null reference in the screenshot you posted would satisfy the condition.
There are no `!=` in the null check here. `json == null` (or `variable == null`). The `!` is applied to the value check. Whether it's `variable.Property == value` or `json["x"].Type != JToken.Integer` doesn't matter for our discussion. We can change my example to `if (variable == null || variable.Property != value)`. It's still doing the same check. There is no `json != null` nor is there an and-operator. I am aware of the differences between equals and not equals. If we made it this far and I'm still incorrect, I'm curious how a null reference satisfies the screenshot and not my example. Without the `variable == null` check we just do a `variable.Property != value` check. Because we just do this check, if `variable == null` the code will throw `NullReferenceException`. However, if we append `variable == null || ` to our condition (thus `if (variable == null || variable.Property != value)`) we avoid the `NullReferenceException` and can continue to do the value check. Presuming, of course, the value check is to check if the value of `variable.Property` is not a valid value. Note the point of this operator is to protect the rest of the code from throwing unforeseen exceptions due to bad inputs.
C++ has exactly one design goal: zero-overhead abstraction over C while maintaining as much source compatibility as possible. In that light, that it was pushed out of the applications sector is not surprising. It is not the easiest or quickest language to develop in. It is, rather, a language for people who know what they are doing and are willing to put the extra effort in to do it right. Its roots in C make it useful for many things that most high-level programming languages simply aren't suited to, while its high-level nature makes it more convenient than C for complex such tasks. Among the areas where it excels are operating systems, where its greater type safety and more advanced memory management are an advantage over C which make it much easier to develop stable systems; library development, where its strong parametric type system and zero-overhead metaprogramming are invaluable abstraction tools; real-time, computationally expensive, and hardware mapped systems, where it lets you write C or assembly and doesn't get in your way or enforce complex, difficult, or expensive interfaces to its low-level functionality but neither compromises abstraction, modularity, or maintainability. These are not features that are broadly needed in any of the domains that Java and C# live in. But they are absolutely necessary for the roles that C++ fills. The list of languages that could replace it is short. C# does not appear on it. C++ is not a language designed with applications in mind; comparing it to C# as you are is foolish and naïve.
&gt; However, if we append variable == null || to our condition (thus if (variable == null || variable.Property != value)) we avoid the NullReferenceException and can continue to do the value check. I think the crux of your misunderstanding is here. You do avoid the `NullReferenceException`, but if `variable` is `null`, your translation will enter the if block, but the c#6 version with the `?.` will not. If `variable` is null, then `variable?.Property` will evaluate to `null`, and the equality comparison will give `false`.
I feel like I'm still missing something. I'm definitely open to being proved wrong (admittedly I noticed something a little fishy must be going on when the ?. operator supposedly returns null if the value to the left is null, otherwise it continues with the execution of the line). When I wrote my first explanation comment, I was basing it entirely off of the article. Is the screenshot incorrect code itself? Because what I have (in condensed form) is logically the exact same code as the screenshot. if (json == null || json["x"] == null || json["x"].Type != JToken.Integer || json["y"] == null || json["y"].Type != JToken.Integer) { // something } can be condensed to exactly my original example, no? if (variable == null || value["x"] == null || // I included this line just for clarity. It's unnecessary though. variable.Property != value) { // do something }
The fact that they used `!=`instead of `==` is significant although it might not be obvious why at first. Let's dispense with `if` for a moment. string variable = null; boolean originalWay = (variable?.Length == 3); boolean pob91Way = (variable == null) || (variable.Length == 3); If executed in C#6, `originalWay` will be false, but `pob91Way`will be true. You can verify this the new VS2015 release candidate. So why would this be true? Well, `variable?.Length` is a nullabable integer whose value is `null`. Since that's not equal to `3`, `originalWay` is `false`. However, in the next line, the first half of the `||` is `variable == true`, which is clearly true, so the whole expression gets the value `true`.
Yeah I agree with everything you say there. Then the problem I have is with the example. They want to catch if `json == null` because then they can throw the `ArgumentException` (e.g. enter the if block). However, if what you say is true, the new way to do this (`json?["x"]?.Type == value`) won't catch the null in the same way. Or are the two not truly logically equivalent?
Thank you for bearing with me! Ok so I finally get it. This isn't some sort of boolean shortcut then, but rather a handy trick with a new feature that actually does a sort of ternary operation and returns null if the value checked is null, otherwise it performs the rest of the command. Neat. Seriously, thank you for explaining this. 
I don't see how DeMorgan's Law would have helped me in this case. I will edit the above comment as /u/recursive helped me learn that my simplification was wrong. But learning basic logic isn't the requirement here. I missed the fundamental behavior of the ?. operator. I thought it was completely burying the conditionals shown in the screenshots. So, in the example given, when `variable == null` we want to throw an exception. I did NOT know that the actual behavior of ?. is to return null if null is stored to the left of the operator. So `variable?.Property == value` is actually evaluated to `null == value` with `variable = null`. Also next time, please explain WHY "this is clearly, clearly wrong" instead of insulting a person's intelligence. 
Thanks for this! The crappy steam web api literally never works &lt;.&lt;
The Null expression isn't a 'check' that's why it's hard to understand. The only thing it does is short-circuit and return null if the object/property is null, so you get null instead of a null reference exception while accessing a nested property.
&gt; It is not the easiest or quickest language to develop in. No kidding. C++ is the most badly designed programming language ever to have gained popularity. Looking back I find it mind boggling that so many developers cut their teeth on that steaming pile of crap. &gt; It is, rather, a language for people who know what they are doing and are willing to put the extra effort in to do it right. ["YOU are full of bullshit...C++ is a horrible language. It's made more horrible by the fact that a lot of substandard programmers use it" -- Linus Torvalds in 2007](http://harmful.cat-v.org/software/c++/linus) C++ is still used primarily by people who don't know any better. &gt; strong parametric type system That is incapable of giving the comprehensible error messages that C# gives by design. &gt; zero-overhead metaprogramming are invaluable abstraction tools I'm sorry but that is just insane. What you are calling "zero-overhead metaprogramming" pre-dates C++ by decades. The MetaLanguage family were bred specifically for metaprogramming and, unsurprisingly, are vastly superior to C++ in this regard. This capability of C++ was [discovered *accidentally*](http://en.wikibooks.org/wiki/C%2B%2B_Programming/Templates/Template_Meta-Programming#History_of_TMP) and now you want to pretend it is "invaluable"? &gt; But they are absolutely necessary for the roles that C++ fills. Is that why Linux does not exist? &gt; C++ is not a language designed with applications in mind; When Stroustrup was inspired by Simula to create "C with classes" he had systems programming in mind? &gt; comparing it to C# as you are is foolish and naïve. What I wrote is totally factually correct and I cited stats proving it. 
Jesus I'm retarded. I'm so sorry. But where would the packages folder be lmao? EDIT: I FOUND IT. YOU MEANT INSIDE THE FOLDER EDIT2: Error :( http://i.imgur.com/wDAAabB.png
When I put that in there, I get this error http://i.imgur.com/Kxepkks.png
NCrunch and OzCode are must haves.
Cosmetic : ClaudiaIDE and Color Theme Editor. To go around, I trust the various tiny features of Productivity Power Tools. When curiosity hit me, Ref12 is there for me. I also love Developer Assistant, save me from tabbing in StackOverflow.
Just to clarify. It may look like a lambda, but it's not a lambda at all.
* Resharper * CodeMaid * NCrunch * SmartPaster * TabsStudio (this one seems to be completely unknown, but it's fantastic) Tried ozcode but the performance impact was too much.
I like Ref12
I use stylecop.
Just took a look at SmartPaster... I need that in my life!
I find Resharper indispensable. Also using CodeMaid for it's Spade feature
Try the OzCode 2 beta. They're not using Roslyn and they worked a lot on performance.
Thank you for the reply. I will try to implement that.
I am wondering if it will work with my nested lists?
- [ReSharper](https://www.jetbrains.com/resharper/), but it feels pretty heavy to be honest, and I still have to learn to work the shortcuts. It can do some amazing things though; I was thoroughly impressed when I saw it optimize a LINQ query for the first time. - [VSCommands](http://vscommands.squaredinfinity.com/) to fix the screamy menus and other little things - [Visual Studio Spell Checker](https://github.com/EWSoftware/VSSpellChecker) - [Web Essentials](http://vswebessentials.com/); haven't worked much with it yet, but I've heard it's the shit for ASP.NET development. - [Productivity Power Tools 2013](https://visualstudiogallery.msdn.microsoft.com/dbcb8670-889e-4a54-a226-a48a15e4cace); little nifty helpers like space-to-tab conversion and various text editor enhancements.
Try looking again at your for-loop starting on line 20, and think about what it's doing with the device elements when you have more than one room in your list.
As a long time JustDecompile user, I've found I prefer dotPeek. The integration into VS2013 feels tighter to me, plus setting up dotPeak as a symbol server allows me to be lazy and step into the third party libraries while interactively debugging.
I actually made a site to help with that. [www.unicodealchemy.com](http://www.unicodealchemy.com) It was a fun little typescript project.
It is the equivalent to "x" in math. It means you are talking about something generic, you don't really care, and it is a placeholder. The word is often used when talking about something generic. "And the plugin, let's call it foo, would interface like this." https://en.wikipedia.org/wiki/Foobar
Another example is it is like saying 'John Doe' or 'Joe Bloggs' when referring to a person. Also it is not just for C# - it is used when talking about most computer languages.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Metasyntactic variable**](https://en.wikipedia.org/wiki/Metasyntactic%20variable): [](#sfw) --- &gt; &gt;A __metasyntactic variable__ is a [placeholder name](https://en.wikipedia.org/wiki/Placeholder_name) used in [computer science](https://en.wikipedia.org/wiki/Computer_science), a word without meaning intended to be substituted by some objects pertaining to the context where it is used. The word [foo](https://en.wikipedia.org/wiki/Foo) as used in [IETF](https://en.wikipedia.org/wiki/IETF) [Requests for Comments](https://en.wikipedia.org/wiki/Request_for_Comments) is a good example. &gt;By mathematical [analogy](https://en.wikipedia.org/wiki/Analogy), a metasyntactic variable is a [word](https://en.wikipedia.org/wiki/Word) that is a [variable](https://en.wikipedia.org/wiki/Variable_(mathematics\)) for other words, just as in [algebra](https://en.wikipedia.org/wiki/Algebra) letters are used as variables for numbers. Any symbol or word which does not violate the syntactic rules of the language can be used as a metasyntactic variable. For specifications written in natural language, [nonsense words](https://en.wikipedia.org/wiki/Nonsense_word) are commonly used as metasyntactic variables. &gt;Metasyntactic variables have a secondary, implied meaning to the reader (often students), which makes them different from normal [metavariables](https://en.wikipedia.org/wiki/Metavariable). It is understood by those who have studied [computer science](https://en.wikipedia.org/wiki/Computer_science) that certain words are placeholders or examples only and should or must be replaced in a production-level computer program. &gt; --- ^Interesting: [^Metavariable](https://en.wikipedia.org/wiki/Metavariable) ^| [^.foo](https://en.wikipedia.org/wiki/.foo) ^| [^Fnord](https://en.wikipedia.org/wiki/Fnord) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cqw5iyz) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cqw5iyz)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
If the main window creates the child window and has a reference to that child window you could add an event in the child window which gets raised when the "create" button is clicked. The main window would add an event handler for the child window's create event and then you can call whatever methods you need in the main window. public partial class ChildWindow : Form { public event EventHandler&lt;CustomEventArgs&gt; Created; private void CreateButtonClicked(....) { OnCreated(this, new CustomEventArgs(...); } } public partial class MainWindow : Form { ... _childWindow.Created += ThingCreatedInChildWindow; ... private void ThingCreatedInChildWindow(object sender, CustomEventArgs e) { // Do something after thing created in ChildWindow } } 
????!!!is that what I think it is?/????
I pity da foo
* [PostSharp](https://www.postsharp.net/) * [JustCode](http://www.telerik.com/products/justcode.aspx) from Telerik are also 2 good alternatives for ReSharper. I personally strongly suggest PostSharp.
dotPeek was my previous go-to, but it just doesn't produce results as well. That being said, there are some things (e.g. fault clauses) that JD doesn't spot that dotPeek does identify correctly.
Codemaid and VAssistX. Codemaid is so awesome for standardizing more than the auto formatter does. VAssistX does a lot what Resharper does but costs a lot less.
Thanks for the info! Now I'll go back and take a look side-by-side. I admittedly got a bit lazy with the integrated symbol server, but (thankfully) I haven't had to recompile the third party libraries (yet)...
Thanks, just noticed this was added later in an update :)
I don't know the origins of Foo / Bar, but in modern context it's used to represent an object, function, or some other important element where the name isn't important. e.g. Foo instance = new Foo() ; 
&gt; Did you actually read that rant? Yeah, he says things like the STL and Boost are neither stable nor portable and you need to rewrite C++ by hand. &gt; Because every complaint Linus has with C++ (and there are plenty of valid ones) goes quadruply for C#. Except the BCL is both stable and portable. That's why more people prefer it to the STL and Boost. And tools like Roslyn make automating C# rewrites trivial. So your claim that everything "goes quadruply for C#" is also bullshit. Parsing C# vs C++ is a trivial counter example. &gt; And what being discussed here was application software. So unless you're about to tell me that C is the better language for developing user-facing interfaces, you might want to reevaluate your choice of backup authority figure. I'm just going to quote Linus from that same message again: *"So I'm sorry, but for something like git, where efficiency was a primary objective, the "advantages" of C++ is just a huge mistake. The fact that we also piss off people who cannot see that is just a big additional advantage.* *If you want a VCS that is written in C++, go play with Monotone. Really. They use a "real database". They use "nice object-oriented libraries". They use "nice C++ abstractions". And quite frankly, as a result of all these design decisions that sound so appealing to some CS people, the end result is a horrible and unmaintainable mess."* &gt; that at the implementation level, not the language level The type system is language level, not implementation level. C++ compilers are not free to use a well designed system for parametric polymorphism because, amongst other things, they must have a Turing complete type system. &gt; This is what happens when you bolt a ton of complexity onto a very minimal grammar Lisp is a counter example. Lots of complexity, simplest possible grammer yet none of the horrific error messages you see from C++. &gt; Now that that's out of the way, do you have any valid and/or relevant points to make? Yeah, the same point I made originally: most developers modernised from C++ to C# or Java because your C++ fanboyism is misplaced. 
Dude, which of us is fanboying here? All I said was that C# cannot replace C++ on a feature level, which is an objective truth. You turned that into a debate on the usability and relevance of C++. I'm not even going to bother responding to the rest of your arguments, because I honestly don't know what your point is.
short answer is why? you can do this already with excel out of the box 
Because VBA and user forms are so weak for what I need to do in the UI.
Language-wise: Linq, async/await, lamda expression, properties
And it has line breaks. 👍
Pivot tables solve exactly the problem you're describing. Otherwise, the add in should be fairly simple with the Office SDK. E.g. open your custom UI, run the query and put the results in a new work sheet in the current work book.
[Excel DNA](https://exceldna.codeplex.com/) works great for making Excel add-ins in C#.
This x10. Works well with resharper. Plus the vim commands map to the VS equivalents, e.g. == to reformat, or :cn for next error
Thanks for this! Had no idea this existed but will definitely come in handy in the future.
Just because you've learned something new, doesn't mean you have to instantly use it in production code. Along with learning a new language feature, you should learn when a good time to use it is. Programmer, restrain thyself. 
&gt; Dude, which of us is fanboying here? You are. &gt; All I said was that C# cannot replace C++ on a feature level... That's not what you said. Firstly, when I pointed out with stats that C# and C++ competed and that C# has largely displaced C++ you had a bender and said I was ["fooling and naive"](http://www.reddit.com/r/csharp/comments/34fqfr/will_c_last_as_long_as_c/cqvmlrm) due to your religious position on the matter. Then you went on to list lots of things you think are good about C++: "greater type safety...more advanced memory management...much easier to develop stable systems; library development...strong parametric type system...zero-overhead metaprogramming...invaluable abstraction tools...real-time, computationally expensive...doesn't get in your way or enforce complex, difficult, or expensive interfaces...neither compromises abstraction, modularity, or maintainability." All of which are things C++ inherently sucks at. I mean, metaprogramming? Seriously? On what planet is C++ anything but the worst possible tool for metaprogramming? Parsing C++ is virtually impossible (precisely because C++ was so horrifically badly designed). C++ sucks at representing trees. C++ cannot do pattern matching so manipulating trees requires a huge amount of tedious and error prone manual labour and constant manual re-optimisation. C++ has such a poor memory management story you're either looking at heartache with leaky abstrations because of manual memory management or 10x worse performance from scope-based reference counting. Same goes for the rest. C++ isn't even memory safe much less type safe. Advanced memory management with no control over the stack? The need for process insolation in Chrome says enough about C++'s suitability for "stable systems". Templates are a free-for-all, not a "strong parametric type system". For complex, difficult and expensive interfaces just look at the C++ stdlib. The idea that C++ achieves any of this without compromising maintainability is insane. &gt; I honestly don't know what your point is. Again, the same point I made originally: most developers modernised from C++ to C# or Java because your C++ fanboyism is misplaced. C++ has been relegated to a relatively small niche. Apparently very few talented PL people care about that niche so little is being done to improve the situation. So C++ has gone from being a thriving language to being an undead language. 
I written several Add-ins from scratch. Once you get the hang of the process it its pretty straight forward. PM me and we'll talk through what you're trying to accomplish in more detail or if you want me to write a bootstrap add in to get you started we can work something out.
C# Excel Interop
Thanks...I'm going to add some content to my original post explaining better what I need to do. 
(http://epplus.codeplex.com/) Is a free library for writing and reading Microsoft's own implementation of OpenXML in .xlsx spreadsheets. It can do most but not all things. You could have a template Excel spreadsheet to read that in C# with Epplus and modify it as you want. Or you could create a spreadsheet from scratch.
I think you're talking about something different? I'm wanting to pull data from a sql databases into any arbitrary open spreadsheet via an add-in, I won't be loading or reading any spreadsheets themselves.
I have something similar in mind. I looked around for some excel libraries and there are quite a few. I'm not sure what you are trying to accomplish. I don't exactly understand what it means to build an add-In. Is it like a button that would be placed inside the excel ribbon? Or is this a totally separate app that will run alongside excel to handle things internally? Personally, I've had a hard time dealign with excel directly. I need to paste a lot of data and it's such a pain that excel won't stop auto correcting things into dates. I'm using a mouse macro that performs the actions and excel is giving me a hell of a time. So I'm thinking I should create a WPF window that is simply a little bucket that I can throw data into so it goes directly into SQL. I don't even need to view it. Eg. The mouse will click a button and that will copy the clipboard data and deal with it by inserting to the database. 
I suggested doing [SQL Server]-&gt;[C# Program]-&gt;[Excel Spreadsheet] as I have used the epplus library and it is relatively easy to do some C# code to produce a spreadsheet that has many worksheets, color formatted tables, graphs. I should mention that last time I used epplus 3 years ago it could not produce pivot table subtotals from scratch. And seperate from c#\epplus for some reason a Microsoft .xlsx spreadhseet uncompressed size almost doubles when pivot subtotals are turned on. 
When you say "entity", do you mean you are using EF (Entity Framework), or are you just referring to your own object? Working with CSV can be a pain. I highly recommend installing CSVHelper - there is a Nuget package for it. It makes working with CSV files a breeze, and allows you to build a mapper directly to your objects. Edit: "mea. You" may have been a typo. :)
&gt; Java which I still think, is much superior than C#. I have not much knowledge of C# So you have a very strong opinion about something you've never really used? This really is a pretty terrible attempt at trolling... 
Pretty poor trolling attempt
Did I butt hurt you by telling the truth? Sorry, but in near future, you Microsoft fan-boys will become hipsters.
Yawning is the only thing you can probably do when this shithole of a company is going down. I pity people for wasting their valuable time learning a shitty language like C#.
Don't learn C#. It's a shitty ripoff of Java and has no future. Windows, along with Microsoft is going down and taking this shitty .NET framework and C# with them. Learn Java &amp; Swift, as these are the languages of future.
Too bad, Microsoft fan-boys always see truth tellers as trolls. What can I say..... a shitty company can have only shitty dumb fan-boys anyway.
Lol C# will die in the next 5 years. Don't listen to these blind MS fans. C++ on the other will have a relatively long life-span.
Even worse trolling. I was hoping for better :(
\&gt; Swift \&gt; Core Language. Uhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh
Sorry buddy, but working in an evil corporation can be your dream, not mine. But, Microsoft is surely getting fired from the IT world, once Apple takes over. Sorry, it will be a traumatic situation for your Micro$hit fans.
C# is still heavily Windows focused and backed mainly by a company with notorious history. Java might lack features for the moment, but it has a richer, smarter and wider community, willing to help and support the language. C#'s open source community is not even remotely close to Java's. Development of C# will probably die with Microsoft, by the end of this decade. On the other hand, Java will never die and it is still the most popular language. Also, Java dominates mobile platform and C# is boxed in Windows Phone, a shitty OS which nobody uses. Xamarin is a joke and cross-platform capability of C# is still laughable when compared with Java.
I like your attitude, son!
My pleasure, grandpa!
&gt; I don't know what the vanilla approach is. Is ExcelDNA still useful over and above or in conjunction with: https://msdn.microsoft.com/en-us/library/cc668205.aspx 
You're a fan of the ask.com toolbar? How about the way MS responded to mono vs the way Oracle responded to Dalvik?
I have now done it with a linq expression. Way easier. http://pastebin.com/7ATzNuCq
Sorry, I guess that was confusing. I've built UDFs like fetchInvoiceCost, fetchTransferCost, etc that return single values based on parameters. The parameters can be ranges of cells, though, which is nice.
MVVVM is a concept that can be grasped with a few tutorials, so as the basics of WPF (to know it well is a different story though). Architectural and design patterns you should know what that are and what they can be used for, so that you can have a "wait a second, wasn't there a well defined way of doing this?" moment instead of running head first into development. But you won't truly "know" them until you have implemented a few in some real world projects. Other than that, I would recommend getting familiar with SOLID design principles and testing (unit, functional, etc.).
I tried your solution but got an error saying 'System.Windows.Window' does not contain a definition for 'create_tiles' and no extension method 'create_tiles' accepting a first argument of type 'System.Windows.Window' could be found (are you missing a using directive or an assembly reference?) g:\shocker\c#\projects\map editor\map editor\window1.xaml.cs What I did was pass a reference to the main window using a constructor like this: win_newmap newmap = new win_newmap(this); //in the main window //and then in the second window public win_newmap(Window obj) { Window mainwin = obj; } //and somewhere along the lines I called the function this.mainwin.create_tiles(50, 50, 50, 50);//used mock values of 50,50,50,50 just to test it
As you can see, LINQ is a great way of doing things :) Your .ToList's may not be necessary, as an IEnumerable is the default type it will use, which can then have .ToList done on later. The idea being you return IEnumerable which is one of the "common lowest types". If another person was using say a method that returned an IEnumerable they can turn it into a list themselves, or they may never need a list at all so giving them a list might be an inconvenience to them. Also as a further note, your method is called get data from xml, perhaps a more descriptive name would be better such as "GetPowerUsageFromFile" etc. Also you are not returning anything from the method. But writing to the console. This isn't a great idea. It is breaking the idea of SRP (Single Responsibility Principle, google it as its a common OOP concept). As the name implies, one "thing" should only have one responsibility". Your method loads the data *and* writes to a console. That is in fact two responsibilities. You should only have it load the data and then in fact call the method (and change its return type from void to IEnumerable or another appropriate collection type) and then call said method from another method who's responsibility it is to print to the console :)
Unlike VSTO, Excel DNA does not require its own runtime (separate from the .NET framework) to be installed on the user's computer. Just distribute the .xll and the files it needs.
Great find.
The ones I use the most: * Editor Guidelines (because our standards limit to column 80 or 120 depending on the team) * Editor Config (great for controlling tabs and EOLs across multiple developers, saw it in the Microsoft CoreCLR repo) * Git Diff Margin (we use Git and this is great for showing add/removed/changed since you last commited, I turn off the built in one for "since last saved" as being more useless) * ReSharper
This is actually very interesting, sounds similar to the asp.net implementation approach I mentioned. Q: Do you know if these apps can be called from a standard asp.net as well? Obviously one would have to have some secondary interfaces and what not, but do you know enough about them to say whether it is possible? Let's just take a simple example: a "query employee data" form, where you enter some filter parameters (employee role, years of service, etc) and then push "Get Data" - when running with excel, that will fetch the data into a worksheet, when running from an asp.net app, it would (I'm speculating here) fetch that data and store it in a public property on the form, so the calling asp.net app (there could be multiple) could choose what to do with it. Can this be done???? EDIT: This looks like how one might go about doing it via apps for office (for the Excel scenario at least): http://blogs.msdn.com/b/richard_dizeregas_blog/archive/2014/09/08/using-apps-for-excel-for-custom-data-access-and-reporting.aspx It seems apps for office are sandboxed so you have to do all data exchange through web services which maybe isn't a huge deal, but just yet another level of complication. Generally speaking, if I had no time constraints apps for office is probably the way I'd want to tackle this problem, but from the reading I've done so far, it would add a lot more required reading and screwing around to get it to all work, on top of it considering how new this is who knows how many bugs/performance issues there are, as well as the lack of online examples. 
[AttachTo](https://visualstudiogallery.msdn.microsoft.com/d0265ab0-df51-4100-8e10-1f84403c4cd0) - Quickly attach to IIS/IIS Express/NUnit [ConEmu Launcher](https://visualstudiogallery.msdn.microsoft.com/d0265ab0-df51-4100-8e10-1f84403c4cd0) - Quickly launch ConEmu in the currently selected path of the Solution Explorer [Git Source Control Provider](https://visualstudiogallery.msdn.microsoft.com/63a7e40d-4d71-4fbb-a23b-d262124b8f4c) - Integrates TortoiseGit, I like this better than the standard git tools. (Also cause they used to be buggier and a cpu hog, and you needed this to 'dislodge' the standard git tools) [Indent Guides](https://visualstudiogallery.msdn.microsoft.com/e792686d-542b-474a-8c55-630980e72c30) - Self Explanatory [MultiEditing](https://visualstudiogallery.msdn.microsoft.com/2beb9705-b568-45d1-8550-751e181e3aef) - Alt-Click to create multiple cursors for multi-line-editing. [Target Framework Migrator](https://visualstudiogallery.msdn.microsoft.com/47bded90-80d8-42af-bc35-4736fdd8cd13) - Change the target .Net Framework in multiple projects with ease
I like it, I really like it, but the problem is I won't use it for years unless they add support for Windows 7 (and/or vista). I'm not actually sure why this doesn't support them, it's just a wrapper for Direct2D after all.
fixed, thanks for pointing that out
Firstly, I'd wrap the List&lt;Card&gt; as a new class of something like Deck or Hand then I'd privately do a lambda/linq join to a list of classes.
My bad, I copied that example from StackOverflow. I thought I was old-fashioned for not liking `var` but know I see you share my opinion. Fixed ;)
The last few candidates I've interviewed couldn't even answer a question about *assignment* correctly. So, being able to write a simple program is a great start. Be comfortable with fundamental programming structures as they are expressed in C# (loops, conditionals).
There is a publish option in visual studio (Build menu &gt; Publish), which will walk you through deploying and it'll generate the files that need uploading. You'll get a bin folder that will contain your codebase, and also folders for your pages and other content, ftp up to the folder on the server and you should be good to go.
Your constructor using a 'Window' type . That's the inherited class of your MainWindow, which won't have your 'create_tiles' method - only MainWindow does. You need to pass 'MainWindow' to your child window. public ChildWindow(MainWindow parent) ....
Yeah, it is a new model so there aren't many examples around. And if you are in for a quick solution then it probably isn't viable. Going back to your original question you could either use VSTO (a bit friendlier towards .NET) or implement a COM addin (still using C#). I've developed a fairly complex one (COM) at my job so I can answer more questions if necessary. The basic idea is to implement a simple interface for addins and then add your UI elements to Excel (either toolbars or ribbon) and attach to any of the Excel events you need (like you would do in VBA). From there you can then launch your forms as required.
There are two forms of ASP.Net, WebForms and MVC. WebForms is very antiquated and you'd be better off by staying away from it if you can. MVC is the preferred and recommended platform for developing ASP applications. As far as the future, its quite bright IMHO. A lot of the .Net stack, including MVC has been open-sourced. You've got the next version of the .Net framework which will be more cross platform than any version before it. The next version of ASP is going to be making so big leaps and bounds as well. You've also got Docker support coming to Windows, which I think is pretty cool.
Thanks a bunch for the detailed answer. I really appreciated that you took the effort to help me out. Thanks a lot. :)
No Windows 7 or Vista support. Windows 7 is still the most used operating system (that might change with 10 however) so that severely limits the user base.
I know right.. they talk about making iOS and Droid apps run in Win10 but won't treat Win7 as 1st class citizen. We have business needs, customers want apps to run on Win7..
This the one that Shawn Hargreaves started? http://blogs.msdn.com/b/shawnhar/archive/2014/09/25/win2d-creating-open-source-at-microsoft.aspx Wonder if he's on Reddit.. really want to know why Win7 is not supported
My company is small and nimble, we could easily upgrade everyone to Windows 10...but our customers? No chance. We still have to support XP because *just enough* of them still use it.
What UI stacks will be implemented on Linux &amp; OSX? Will it be similar to WPF/WinForm? 
I don't think Microsoft will ever create a cross-platform desktop UI stack since that isn't their focus any more (Universal Windows Apps and ASP.NET 5 are the driving forces these days). If you really wanted to create a cross-platform desktop app, you could use Mono and [XWT](https://github.com/mono/xwt). I have no first-hand experience with this so I don't know how well it works.
Microsoft, as a sane company, wants everyone to use their products. After seeing that nobody wanted to host a Windows box to run IIS, they built Azure (ok it's obviously not that simple). But a brand new service is not going to suddenly undo decades of Linux hosting favoritism, so they started open sourcing portions of the platform that allowed their web components to run on foreign platforms. This way some people who try it might actually like it and will more likely accept Microsoft in the future.
Check out SharpDX bro
That's kinda what it's looking like, and as far as I know working with Excel via c#g generally works as advertised. I still have to figure out the "how to create and add-in" part but from that point on it should be generally ok. Luckily I have quite a bit of experience working with the architectural monstrosity that is the Excel object model.
On Win7 and Vista (and desktop apps on Win8) you have access to the System.Drawing namespace. Metro apps are the only platform that don't, which is why Win2D exists.
If you want to stay current, you should jump on the so called vNext which is the new version of asp.net and changes a lot about how projects are put together. It will be released at the same time as VS2015
Well, I have done something in SharpDX. As I had no experience with DirectX before, I found it hard to integrate into WPF application. I was able to do almost everything I needed to eventually, but it was quite painful and it would need much more debugging to run reliably (for example to survive lock and login etc). Thankfully I needed this only to debug indoor positioning system, so it didn't matter if it was not very sturdy as long as I could make it run for debugging purposes. What I'm trying to say is that I would like something easier for less demanding scenarios, and this seems to be it.
However, a couple years ago we would have said the same thing about open sourcing the parts that they did. You're probably still right, but the new Microsoft is pretty awesome. 
Yep, ASP is great. I work with them daily (our webpage built on it). I love it. Way better then PHP in my opinion (althought there is a big drawback: windows server is cost WAY more :| )
I recently moved jobs. It's worth mentioning that 90% of .NET/C# jobs that I searched for were ASP.NET. So it seems to be the trend.
Worth noting that some shared web hosts aren't always great with publish (if memory serves, they lose file permissions and have to be re-ACL'd by support). Definitely something a Windows host should have experience with (to either address the issue, or to know if it's an issue for their server setup). Also worth noting that publish will only push files in your project, so simply having a javascript folder in the project structure isn't enough, the files need to be included.
Except when your job/client isn't flexible and requires WinForms with a tour-like function. But that's none of my business....
As someone that has a similar question as OP, your comment cleared up a lot for me.
I watched a Build session on this, and was impressed. Still, I wouldn't use it to make a game because it would be nearly impossible to reuse any code for Android/IOS or any other platform. It's kind of the same thing that killed off XNA....Unity and tools like GameMaker just offer more opportunity. 
The rule you mentioned that really concerns me is the one about some objects needing additional information from elsewhere to serialize. That being said, if you can handle your rules by propagating some information between objects before calling the standard serializer, and handle the rest through standard XML serializer attributes, that may be an easy way to go. How big are the POCOs that you need to serialize to XML? If they aren't that big, one way to work around very specific requirements on a few properties here and there is by using the [XmlIgnore] and [XmlElement] or [XmlAttribute] attributes as appropriate: [XmlIgnore] public double MyDouble { get; set; } [XmlElement(ElementName="MyDouble")] public string MyFormattedDouble { get { return MyDouble.ToString("#,000.000"); } set { MyDouble = double.Parse(value); } } If you can work around it like this, and it doesn't add a ton of code, you can just use the default XmlSerializer. It sometimes even kills two birds with one stone if you also need this format somewhere in your own application. And of course I feel obligated to mention that even though this must match your requirements, any lossy custom formatting like this may lose some ability to round-trip the XML. However, if you've already coded up a bunch of custom attributes and have gone about decorating all of your properties as necessary to capture all of the rules, then it may just be double work to manage another whole set of attributes. In that case, it may be better to do some custom serialization, so you can fall back to implementing IXmlSerializable on your POCOs. At that point, you will be implementing the ReadXml() and WriteXml() methods yourself, so you can go about it however you like, including checking other custom attributes you may have applied. Others may have had different experiences, but I haven't really found a reason to implement custom serialization from the ground-up yet - implementing the interface was sufficient as you are largely generating the XML yourself anyway at that point. Edit: words. 
Ehhhhhhhhhh. Most of those can be handled using the existing attributes/mechanisms of the `XmlSerializer`, but the _"some classes down the hierarchy may need values from classes closer to root in order to decide how they serialize"_ and _"properties of same type can be serialized differently"_ requirements might be a deal breaker. You _could_ plausibly do it via implementing `IXmlSerializable`, but in my experience it's rarely worth doing so if there's an alternative. It may be plausible to achieve what you're asking using various [`XmlAttributeOverride`](https://msdn.microsoft.com/en-us/library/system.xml.serialization.xmlattributeoverrides%28v=vs.110%29.aspx) to reconfigure how the `XmlSerializer` works on a case-by-case basis, but it's hard to say for your _specific_ usage. It's hard to say exactly what I would do without evaluating the details of your specific situation. But from what I see here, I would probably try to separate _completely_ my serialization concerns from my business logic, then maybe roll your specific considerations into my serialization layer. You may need to employ a kind of 2-step serialization here. `Business Objects -&gt; Data Transfer Object Converters -&gt; Data Transfer Objects (serializable)` For example, rather than have your serializable objects handle the rounding, have the special routines/converters figure out your rounding cases and simply read/write the appropriate values from/to the serialized objects. These same routines would also inspect the object hierarchy to determine the special serialization rules you mentioned. To handle different serialization formats for the same `System.Type`, I'd suggest creating two similar (but different) Data Transfer Objects each representing their own serialization schema. The other requirements you specified can likely be achieved using built in mechanisms on your Data Transfer Objects: **Some properties are elements, some are attributes:** use the [`XmlAttribute`](https://msdn.microsoft.com/en-us/library/system.xml.serialization.xmlattributeattribute%28v=vs.110%29.aspx) and [`XmlElement`](https://msdn.microsoft.com/en-us/library/system.xml.serialization.xmlelementattribute%28v=vs.110%29.aspx) attributes. **Some properties are required others aren't:** If the property is never used, use the [`XmlIgnore`](https://msdn.microsoft.com/en-us/library/system.xml.serialization.xmlignoreattribute%28v=vs.110%29.aspx) attribute. **Some properties are required just in some context of the overall object state:** If you want to omit the property from the XML entirely based on some conditions at runtime, you can use the [`ShouldSerializePROPERTY_NAME`](https://msdn.microsoft.com/en-us/library/53b8022e%28v=vs.110%29.aspx) convention. **Not required properties must not be serialized:** See above; use the `XmlIgnore` attribute. I know one doesn't always have the option, but if you _can_ simplify your XML schema, I would strongly recommend doing so. Ideally such serializable objects should be kept as simple as possible and there should be _no special rules or logic_ when it comes to serialization; after all, it should simply be just _raw data_. Leave it to the applications to apply interpretation of the data, otherwise you can end up with messes like these. (Plus it can make defining a valid [XML schema](https://en.wikipedia.org/wiki/XML_schema) difficult) If you can do that, then it becomes super trivial to define plain-old-CLR-objects that represent your XML schema 1:1 using standard attributes and it makes it far easier to consume and maintain.
&gt; How big are the POCOs that you need to serialize to XML? I haven't keep track, but it certainly is more than 500 properties overall &gt; one way to work around very specific requirements on a few properties here and there is by using the [XmlIgnore] and [XmlElement] or [XmlAttribute] Yeah, I created my own attributes which inherit from these, adding my additional required properties. I've stumbled on the solution you provided for the rounding. I don't like how it adds logic to the POCOs and is very error prone, so I don't thing I should be going with this. &gt; The rule you mentioned that really concerns me is the one about some objects needing additional information from elsewhere to serialize. Yeah, certainly is my biggest problem right now. What I like about the custom serializer is that it would make it relatively easy to solve this issue. Since I could have a reference to the root object I could specify a type that implements something like `ISerializationRule` on the attribute of a property, then in this `ConcreteSerializationRule` type I could create a constructor with the required objects which have the values I need. Upon serialization and finding a property with this `MyXmlElementAttribute.SerializationRuleType` specified I could use reflection and get the objects needed to instantiate the rule and find their references my looking for objects of these types down the object tree. Almost like some sort of IoC container if you get what I mean. Also, as you said, the `IXmlSerializable` option is basically writing all the logic by myself. From a productivity standpoint a custom serializer wouldn't have much difference.
Well, there's always GOTO hahahaha. Something like: loopStart: Condition Goto loopstart. Or something like that, but I wonder if he's looking for a more creative way to do it...I'm out of ideas though
I think you should learn MVC and WebAPI. Recently, Microsoft has spent a lot of resource in Azure. I think you should learn about how to ASP.net working with Azure.
Cocoa is OS X's "fancy front end".
I'm thinking the extra semi colon is causing a problem. It marks the end of the line.
I thought XLL's were only for creating UDF's. Can you develop forms with them as well?
What doesn't work about it? Is it a compilation issue.... An exception being thrown... What's up?
I think Data Transfer Object Converters would greatly complicate my solution (development wise and maintenance wise). Later on when I have to declare new POCOs, the custom serializar/`IXmlSerializable` solutions after completed would allow me to simple declare new objects and have them working correctly instantly.
Thank you! This was exactly what I needed.
I'll definitely defer to your judgment as you have a much better understanding of your requirements. If you're looking at objects with ~500 properties, then this is _definitely_ a special case that's difficult to state definitely a best practice without actually evaluating your source code and application.
I think they said in the talk they where thinking about it
&gt; requires WinForms with a tour-like function Yeah, there's also people who require Hololens-like 3D Augmented Reality written in Quick Basic 4.5. Fuck them, I'm the one who knows about technology, let "management" decide about managerial decisions, let people who know technology decide what technology to use. 
Thanks I did publish the application and its start-up page is up and running. However, because I used ftp deploy, the database cannot be deployed. In this case, what should I do? I can create a MSSQL database in the webhost's control panel, but what to do afterwards? How can I link this database to my project on the remote server? 
Using statements are used to wrap anything that implements IDisposable. In this case, the streamwriter implements IDisposable and in it's dispose call it calls Flush() and Close() on the underlying stream. In your second example, you never call Flush, Close, or Dispose on the underlying stream. According to MSDN (https://msdn.microsoft.com/en-us/library/aa664736(VS.71).aspx) this is what a using statement generates for a reference type: { ResourceType resource = expression; try { statement; } finally { if (resource != null) ((IDisposable)resource).Dispose(); } }
Woopsie. 
I assume the deleted comment said something along the lines of Enumerable.Repeat(x, x).Select(y =&gt; { Console.WriteLine("message"); return y; }).ToList(); Sure it hides the iteration behind an extension method but it also meets the OP's criteria ("WITHOUT 'using a loop' (do/do-while/for/foreach **explicitly** listed"). This solution would also give the student a nice intro to LINQ, extension methods, and the importance of calling `.ToList()` at the end... EDIT: The recursion solution is definitely the 'correct' answer in this situation though.
Windows 7 will be three versions behind when Win10 is released. From their perspective it is like complaining that Windows 95 doesn't run Windows XP applications.
I like the LINQ answer, but if it's a beginner course, my money would be on the intent being recursion as well. Anyway, here my stab at a different solution: i = 0; while (i++ &lt; 5) { Console.WriteLine("Hello while"); } Do-while was listed in the forbidden list, but while wasn't. :)
"while" is definitely listed in the title, which is non-editable
Ah, completely missed that, focused on the post text, and assumed that explicit list was inclusive. Good catch. :)
I'll usually ask someone to implement a string compare function manually and then as a followup ask them to do it w/o the loop. All I really want for the 2nd part is to hear the word "Recursion". (And a very depressing percentage of folks won't even attempt the first part)
using goto and labels using System; public class Test { public static void WriteNumber(int i){ Label: if(i&gt;=0){ Console.WriteLine(i--); goto Label; } } public static void Main() { WriteNumber(5); } } Edit : small changes to the code
 bool Compare(String a, String b) { return a[0] == b[0] ? a.Length &lt; 2 &amp;&amp; b.Length &lt; 2 ? true : Compare(a.Substring(1), b.Substring(1)) : false; } Teehee?
&gt; Way better then PHP in my opinion Not only in your opinion. PHP is probably one of the worst programming environments ever developed. Array(1, 2, 3)[0] Works as of PHP 5.6. (Array(1, 2, 3))[0] However does not, in the newest iteration of the language, which is at this point 20 years old. Why? Because the PHP parser is an unmaintainable mess. It doesn't generate an abstract syntax tree, and everything is special cased. PHP doesn't have Unicode support, but you can write UTF-8 identifiers, but you can also use invalid UTF-8 codepoints, or even unicode whitespace as identifiers. &gt; Function names follow the same rules as other labels in PHP. A valid function name starts with a letter or underscore, followed by any number of letters, numbers, or underscores. As a regular expression, it would be expressed thus: [a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]* Most of PHP's functions does not throw exceptions. PHP applications will just keep running as long as you don't write syntax that the parser cannot understand (like the one above). The worst failure, besides parse error, is that a message is written to a log. API's *usually* return FALSE if it fails. Why didn't they make an object explicitly to catch errors rather return a completely normal boolean value? Because it started out as a tool used by one person for his home page. Also function naming is inconsistent and the reason for this was that PHP in the beginning used `strlen` as a hashing algorithm. I'm not making this up. He changed naming conventions to make functions distribute more evenly in hashing buckets. It has MySQL support deeply embedded in the standard library, with the hilarious method `mysql_real_escape_string`. PHP uses backslash as a namespace seperator which means it has to be escaped if you ever do eval. You have to *escape* PHP code in PHP. PHP has a undef operator: foo = (undef)abc; What do you think the `(undef)` unary operator does? If you said undefines the variable `abc` you would be wrong. All it does is return `NULL`. Sorry for the rant, but I find PHP so extremely hilarious. When it comes to hosting I find Azure fairly cheap, and you are charged for what you use, and you are free to chose any tool you would like including, but no limited to PHP.
I'd be hard pressed giving that as an answer in any non-tail-recursive language. I've blown stack often enough.
Recursion is better, but to be original I propose to create 2 similar functions and make them call each other in the end until stack overflows. The crazyness of this design matches the question.
A long time ago I asked the same question to the seniors from the company where I was an intern, and they gave me the following answer: " events, delegates, polimorfism and then the rest " so after you grasp this 3 you could move on to linq and then, the sky is the limit. Also build stuff, there is no better way to learn than doing. 
A do while has the typical use case, that you want to enter it at least one time before you check the condition. E.g: do { result = TrySomething() } while (result == false); Sadly I don't remember any specific problem where I used a do -- while in the last 3 months ...
You could check length to speed things up radically for some cases.
It actually comes naturally for many math formulas. E.g. implementing factorial via recursion is straightforward, not so much with loop.
Pseudocode: do { stuff readline } while (readline != exit); Do stuff, let the user cancel after each iteration. A do-while is simply a loop with an **exit** condition, instead of an **enter** condition like the while-loop. You use it whenever you want to execute code **at least once**. 
I recently came across a real use scenario: You have a resources that uses paging and a token to retrieve the next page. If you reach the last page, the next page token will be null. So you check for the token being null in the while part. You have to use a do-while because you don't have the token for the first page so it always will be null.
I just gave a good example? A REPL, a read-evaluate-print-loop. Read user input, evaluate it, print it, repeat. But let the user choose to exit this loop.
You would at least need to have one additional class simulating the paging behavior. I don't know how advanced your class is. If it's just beginners I wouldn't recommend it
C# interfaces are always abstract so you can't explicitly qualify them abstract and no one calls them abstract interfaces -&gt; it's just Interface Otherwise your observation is correct. But extension methods are no replacement for inheritance and interfaces. They are just a third way that has it's place but should not be used for all tasks that involve extending functionality of preexisting code. 
so I'd need to write it like this ? WeaponBase.lgdWeapon sword = WeaponBase.lgdWeapon.lgdWeaponRWeaponREnchant(dataBase)
...although ".ForEach" is pretty explicit in its naming.
Unless you're learning functional programming, where recursion is natural and there are no looping structures.
Fair enough. 
Recursion is the correct answer to the spirit of OP's question but here's a quick way: int counter = 10; Console.WriteLine(string.Concat(Enumerable.Repeat("Message\n", counter))); or you can use a timer: int counter = 10; var timer = new Timer(1); // as quick as possible timer.Elapsed += (x, y) =&gt; { Console.WriteLine("Message"); if (--counter &lt; 1) { timer.Stop(); } }; timer.Start();
Classes should use pascal casing. Just saying 
Okay Guys Thanks for all the input. i liked the idea with the option to let the user exit whenever he wants. Made a Counter who counts everytime the user write smth untill he writes exit while not counting the exit. At the end it shows me the number of things i wrote with readkey Thanks alot! 
Still, it's not a loop. If you really want to avoid ForEach you can use [this answer](http://www.reddit.com/r/csharp/comments/34rv27/how_do_i_write_a_program_that_effectively_loops/cqxkgsx): Enumerable.Repeat(x, x).Select(y =&gt; { Console.WriteLine("message"); return y; }).ToList(); 
&gt; The language for C# has been a standard pretty much from the beginning (ECMA 334 and 335). There were other parts that weren't. However, as much as they were a standard, they weren't open source You seem to conflate the language and the standard libraries a bit here. A language doesn't have source, but a specification. C# has an open specification, although not the latest versions of it. The libraries have (had) a partially open specification, but with no source provided.
Cocoa is more than just a front end these days.
You can get away with no loops by overusing LINQ. Pretty much any loop can be reconstructed that way. Helps to have a `forEach` extension.
You could also try pressing F1 on the "using" statement, you know. Online help is a thing, and it's generally very good.
If only there were such things as Google or Wikipedia...
Or there's the train of thought that recursion is the devil and should be used only and only if it's absolutely required to solve the problem at hand. You can get you self in a mental trap where recursion can solve all your problems just like a singleton can or name your pattern poison of choice. 
=&gt; is not a lambda character. A lambda looks like Λ or λ.
Actually, it's equivalent to var temp = item; item = temp == null ? null : temp.Child; ...since item could be an expression (obviously isn't in this case) with side effects.
No, events can't be awaited. The current recommended approach to asynchronous programming with C# does not use events but async/await and Tasks (or other awaitables). So a method that takes some time but eventually returns some data would be prototyped Task&lt;string&gt; jsonHttp_DataGetAsync(string id); ...although, to comply with normal naming, it would actually be called Task&lt;string&gt; GetDataAsync(string id); 
Exceptions don't flow with syntactic constructs such as namespace or classes, but with method calls.
Needs one more nested ternary operator! bool Compare(String a, String b) { return string.IsNullOrEmpty(a) || string.IsNullOrEmpty(b) ? false : a[0] == b[0] ? a.Length &lt; 2 &amp;&amp; b.Length &lt; 2 ? true : Compare(a.Substring(1), b.Substring(1)) : false; }
Thanks! I'll look into this a bit later 
If you want to be shot by every decent programmer ever, you could use ~~goto's~~ 
Linked Lists and recursion. That's how "all" the functional programming languages are doing it.
Also, don't use nested classes. Use namespaces and assemblies to organize your classes. And like the others have said, Pascal casing or UpperCamelCase is most appropriate for C#. 
The 'goto' solution provides two drawbacks, that cannot be easily overcame: first one is less readability of the code (if it can be readable with 'goto', you really can solve your problem the easier way), and a possibility of unwillingly going out of scope. Not to mention performance issues, but I don't think this is really that important there. Really, is there any problem that 'goto' solves and no other language construct does?
The best thing about extension methods for me is that they allow me to begin to approach multiple inheritance. I'd much rather just have MI though.
Breaking from nested loops without using a flag variable :)
 do { readUserInput(); } while(input != "quit");
you can do the same by separating the loop into another method and then use return statement ;)
 bool Compare(String a, String b) { return a == null || b == null ? false : a.equals("") &amp;&amp; b.equals("") ? true : a[0] == b[0] ? a.Length &lt; 2 &amp;&amp; b.Length &lt; 2 ? true : Compare(a.Substring(1), b.Substring(1)) : false; } One more ternary should do it!
I understand what you are saying, but as this is an example (this will likely be in it's own class so that I can call from various operations within a full-fledged solution. )... Also if you are going to complain about anything coding or otherwise why not provide an alternate option for someone to consider. (I mean this in a serious and positive way. Whether it's a coding, political or religious standpoint, provide your audience with a different perspective and explain why. Otherwise you'll tend to find people are quick to dismiss what you are saying, even if you are correct.) Not sure if pretentious or you forgot to mention a better option. plz stap Edit: not sure about your comment concerning WPF and MVVM being superior. I actually was running this example from WPF... am I missing something?
just...write a c# program that modifies the first program to use the tail opcode, which is not emitted by the c# compiler, but by the f# one ? Ok, that *might* be out of scope for an interview question about recursion :D
That's it! Thank you so much!
If it suits you, there is a trick you can use. If you have a property named *Test*, you can control its serialization by creating a boolean property named *TestSpecified*. If this property returns true, then the associated property will be serialised. string Test {get;set;} [XMLIgnore] bool TestSpecified { get { return true; // put your own logic based on other properties, state, etc } } It works on any property, you only need to create an associated property with the suffix *Specified*
This. It's annoying how often you see Java style in C# posts.
Funny you should say that. Some of my XNA games have been ported to 6 platforms including android and ios with almost zero code changes. MonoGame is fantastic. But thanks for the reply :)
Wait, why perf issues? I would have thought that's one thing that's probably really optimized seeing as it has a direct translation into assembly.
That's great Monogame + Xamarin works for you, but XNA's death was for the reason I stated. It just wasn't competitive without multi-platform support, and Microsoft didn't think it was worth building &amp; supporting it themselves. So, what makes you think the'll do that with Win2D? Also, Win2d isn't really designed for gaming at the moment, and it has no cross platform support in sight. That would be a gamble starting a new project in hopes that all those things will just fall into place at some point. 
A simple search for "blogs" comes up with a couple threads that answer your question.
Mark Seemann: http://blog.ploeh.dk/ Wrote the book "Dependency Injection in .NET" and has some great courses on Pluralsight. He tends to be a purist which can rub some people the wrong way, but his ideas have really transformed the way I code for the better. Lots of good material on both C# and F#. 
This can help you visualize your data, in conjunction with /u/centurijon's reply. http://jsonprettyprint.com/
http://www.dotnetperls.com/goto &lt;- those performance tests suggest, that there may be an issue due to worse optimization during the compilation time. C# is not compiled into assembly anyway, since it is compiled into the CIL (Common Intermediate Language) which is then run by CLR (Common Language Runtime). But I agree that this way of thinking is tempting ;)
He was trying to use the "WinForms sux!" meme, and he blew it.
thanks for helping me figure out what is causing the problem
Sounded like another user had it covered. You learned something in my short post and I was assuming you're here to learn. 
Why be so indirect about what you want to do (break from a nested loop). Seems like that would just be more complicated for little benefit
thanks!
Update: Tried this out in C# 6.0. See my learning tests here: https://gist.github.com/ItzWarty/4bb0ef428f209043b0eb new StructType[n] initializes to default values (no parameterless constructor invocation). new StructType() can initialize to non-default values.
I never said it's somehow hard or even harder. It's just not as straightforward. mathematical definition: https://upload.wikimedia.org/math/a/9/1/a91da51a80ac8291d8dbcc4cb77c0936.png vs. factorial(n): if n==0: return 1 else: return factorial(n-1) * n 
I know, nothing new there :)
You can avoid the Stream code by using the helpers File.ReadAllLines or File.ReadLines. ReadAllLines brings you back an array, RadLines you can iterate through: foreach (var artistLine in File.ReadLines("Artist_List.txt")) { artistLog.Add(artistLine); // Won't work, artistLine isn't an Artist } But that's not going to work unless you setup a constructor for create an Artist from a string ( the line from the file ). So you need something like this: foreach (var artistLine in File.ReadLines("Artist_List.txt")) { artistLog.Add( New Artist(artistLine) ); // Create a new Artist object, instantiate it with the line from the txt file. } And your Artist class neeads a construtor that takes a string public class Artist { public Artist(string artistLine) { ... Perform tasks to parse the 'Artist' line and fill in your properties. } } That or maybe you just meant to not strongly type it as an Artist: List&lt;string&gt; artistLog = new List&lt;string&gt;(); That's just a string list, so you can add the line's straight into it. 
Try using TextReader instead of StreamReader.
I read http://ericlippert.com/ daily.
Thanks centurijon, I appreciate you taking the time to assist me! I'm now attempting to figure out how to reference the objects once I have deserialized the data, A fellow programmer has mentioned that TFL offers a DTO so i'm going to also look into how I could impliment the DTO in the future. 
private string name; private string Address; private List&lt;Artwork&gt; artwork; public string getName() { return name; } public string Getaddress() { return Address;} public void newArtist(string InName, string InAddress) { name = InName; Address = InAddress; } this is the way i set it out
http://www.dotnetrocks.com/ Longest running .net blog and podcast with over 1000 episodes
1) Timers - timers allow you to "loop" in relatively controlled manner. People should know it, as it's common to see code that uses for/while with Thread.Sleep which is not suggested way to solve such problem. I would say this is pretty efficient looping, compared to it's while/for solution. 2) Recursion as others stated - if you ever been university &amp; learned CS, you should know it. This is by no means effective though (maybe I misunderstand the word). Keeping track of the stack, just so you could loop - not good idea. Often times could result in stack overflow exception, if compiler doesn't turn recursion into iterative one. (which it often times does not) 3) Labels/goto - if you've read a C# introduction book, you should be aware of them. These can be used as plain, but it would be also possible to use them in switch() construction. Jumping from one case to second, and from second to first one, thus creating a loop. 4) Events - you can create loop with events. Event handler has to raise it's own event. It's still recursion under the covers, but kind of "indirect" - this is deffo crazy ass technique. 
http://mechanical-sympathy.blogspot.co.uk/
2,000 Things You Should Know About C#(title is self explanatory, neat gems in there) http://csharp.2000things.com/ Coding Horror (Jeff Atwood of StackOverflow/StackExchange fame) http://blog.codinghorror.com/ Steven Cleary's blog (wrote book on C# concurrency, lots of stuff on Tasks) http://blog.stephencleary.com/ Fabulous adventures in coding (Eric Lippert's blog, former principal dev at Microsoft on the C# compiler and C# language teams) http://ericlippert.com/
Open Principle: All classes must support subclassing. The Framework Design Guidelines say the opposite. It suggests defaulting to sealed unless you have a specific use case in mind for your subclass. 
Extension methods, by and large, should be used on other peoples code. It is rarely appropriate to offer an extension method on your own classes. As for your own interfaces, make sure you actually want an interface rather than an abstract base class.
 var artistLog = File.ReadLines("Artist_List.txt").Select(a =&gt; new Artist(a)); 
The Microsoft.AspNet.WebPages nuget package.
Definitely not by definition. C# and the .NET Framework are two separate things. And there are other implementations of the CLI. Of course, the vast majority of C# developers use .NET, but that doesn't mean they all do.
www.c-sharpcorner.com/ Multi-author blog for all from beginners to geeks
Let's say you have an interface that has a getter and setter for a property, in one context, you want the setter to do nothing, set { ; } looks cleaner that set {}.
StreamReader is a TextReader.
Native still has a GC which would make it inherently slower, no? 
No we're asked to use plain old Ado.net, I wouldn't be creating a data acess layer if I could use EF.
Interesting. I'm currently writing quite a bit of functional programming at work, so it's hard to avoid, since for loops are bad practice in the language (F#). Do you happen to have any article on this? I can see how any programming pattern can be a problem if used extensively without consideration, but I don't really see recursion as a pattern, and with tail recursion there's not much of a downside 
I'm a teen with only basic knowledge of the language, anything i can do to help?(quick learner)
Yes:) This is excatly what it's for. clone it and do what you want and send a pull request
Any podcast suggestion? 
All structs inherit from ValueType, just like all classes inherit from object.
Did you try to **debug** it and see what `e.KeyCode` actually is?
Personally, I have only been contacted via a local freelance website and the job was well defined and compensated well. As for the other websites, from what I understand, the most tedious thing is making your profile 'legit'. Some have rigorous processes for verifying your identity (including skype calls). After that you need to land a few potentially low paying gigs, just so you can get some feedback on your profile. Also, some of the sites have a desktop app that monitors your work remotely if the work contract is defined in hours/week, so that's also something to keep in mind. You can always turn down a job if you feel like its terms aren't acceptable :D. After a while you can get into a circle of employers that trust you and have regular work for you. Again, all of this is second hand info.
I'm not sure how to go about doing that. I looked at the output from Debug and nothing showed up
The built-in inheritances are allowed. Value types inherit from ValueType (a reference type) which inherits from Object (also a reference type), and enums inherit from Enum which inherits from ValueType. Delegates inherit from Delegate (or one of its blessed inheritors like MulticastDelegate).
I did both of those things and nothing occurred in either one.
dot net rocks
That would suggest your KeyUp event isn't firing. I'm not familiar with it off the top of my head, but have you subscribed to the event? Something along the lines of (in the constructor method): KeyUp += Form1_KeyUp; Is this WPF? Look here: http://stackoverflow.com/questions/1871373/wpf-keydown-and-keyup-events 
That was it! Thank you!
&gt; and you can now use dotnet on Mac and Linux. Mono has been around for years and is likely still more complete.
ASP.Net is Microsoft's PHP. Start getting into database integration and Entity Frame work when you're comfortable.
So, how did they measure what "highly focused" meant?
##TLDR: WPF Prism modules not being initialized using App.config method: - The relevant code is below. - I'm not getting any runtime errors and the window loads like it should, but the modules I've created are never getting initialized. - This is a cross post from a [Stackoverflow post](http://stackoverflow.com/questions/29995215/wpf-prism-modules-not-being-initialized-using-app-config-method?noredirect=1#comment48118851_29995215) I created about the same issue. ------------------ I'm trying to load some modules in a test WPF project I'm using to learn Prism. - From my understanding the code in the Bootstrapper should be creating a module catalog and initializing all of the modules. - My module catalog method of choice is using an App.config file. --------------- Hi I'm a bot! I was made by /u/grimpunch, if I've gone awry, message him and he'll come fix me. If you don't want me in your sub, it's okay to ban me I won't mind I can be summoned in a comment if you say 'TLDR please'
What are some projects that might be useful for your work? That might put you in the good books with your boss. Or maybe you could ask your family and friends what they might need as a app? There is nothing like having a real world problem to solve. By the way, which resource did you use to learn WPF? Was it a web resource or a book? I need to learn WPF myself.
While frequenting this forum I know you guys hate the dynamic type. What about this use, still bad? :) There is also another example involving a dynamic cast and an open generic type, but I dont understand it enough to illustrate it.
Make a site functionally similiar to airbnb.com
Coding Blocks
Lets clarify your question ... You want to reference a DLL 'manually' after execution has begun, or you want to display a form from a DLL that is part of your project and will be referenced during compilation?
I may be biased, but you might like making a small video game in [Unity](https://unity3d.com/). Whatever project you choose, I highly recommend learning and using [LINQ](https://msdn.microsoft.com/en-us/library/bb397926.aspx).
It's nothing like PHP.
it's an object containing a Dictionary&lt;string, bool&gt; i found that i'll either need to write a custom SerializationBinder (looking into it now) or just use JSON/XML serialization Hopefully those aren't as restrictive thanks
Do I really need to worry about race conditions if all things execute in a synchronous manner?
This. Design and start a project you like. 
Agreed. Doesn't mean they don't do similar things.
[Pastebin OPML for my programming related RSS feeds](http://pastebin.com/p6pT5gcc) Heavy MS/.NET bias. You could probably get away with just **The Morning Brew**
MSDN's C# specifications page on empty statements gives a valid use case: https://msdn.microsoft.com/en-us/library/aa664739(v=vs.71).aspx 
In most cases it is better to have a Visit() method which is overridden in each derived class as necessary. Make it abstract / virtual as needed. Also, you could remove your DynamicVisit method and add a check (p is Person) in Visit(Person), only doing the dynamic cast if that returns false. That way the API is always the same.
Sounds like you're looking for [AssemblyFormat](https://msdn.microsoft.com/en-us/library/system.runtime.serialization.formatters.binary.binaryformatter.assemblyformat%28v=vs.110%29.aspx?f=255&amp;MSPPError=-2147217396) on the BinaryFormatter. - Full In full mode, the assembly used during deserialization must match exactly the assembly used during serialization. The Load method of the Assembly class is used to load the assembly. - Simple In simple mode, the assembly used during deserialization need not match exactly the assembly used during serialization. Specifically, the version numbers need not match as the LoadWithPartialName method is used to load the assembly. BinaryFormatter works better with fields (see [Version Tolerant Serialization](https://msdn.microsoft.com/en-us/library/ms229752%28v=vs.110%29.aspx)). There's a couple of other options available, such as: - rolling your own ([example](https://gist.github.com/shelakel/99572d9087c3e131670a)) - [protobuf-net](https://code.google.com/p/protobuf-net/) - [MsgPack](https://github.com/msgpack/msgpack-cli) - [FlatBuffers](https://google.github.io/flatbuffers/) etc. I'd suggest you go for either BinaryFormatter.AssemblyFormat = FormatterAssemblyStyle.Simple or Protobuf, and if you really need the speed (best performance/smallest size) you can roll your own. If the resulting size is a concern, you can also apply compression using [Snappy](https://code.google.com/p/snappy/), e.g. using (var stream = new MemoryStream()) { using (var compressedStream = new SnappyStream(stream, CompressionMode.Compress, leaveOpen: true)) { Serialize(compressedStream, entries); } return stream.ToArray(); } JSON is also a pretty good/easy option, see [JSON.NET](http://www.newtonsoft.com/json) or [Jil](https://github.com/kevin-montrose/Jil).
I'm not sure what this does. All three are of the base class Person, so casting as dynamic really doesn't accomplish anything.
I recommend, if you like joint software development projects, to use this as an opportunity to learn about documentation. Right now you have a single project, but no document describing what it's supposed to do other than "be a photo editor". As you and other contributors start thinking about features you want, you can use tools like GitHub's Issues, or a task scheduler like Trello, to create a backlog of the features you want and be able to know who's working on them.
TSQL with concrete table inheritence is how you want to implement this. You get the business logic and the storage, all in one. You don't even need a runtime...
No, but it's good practice, and it's just one more line. You need the null check either way. Otherwise you're establishing too many invariants (i.e. someone must subscribe to the event before you call it); it can end up biting you.
Probably necessary to keep it "managed". There are garbage collectors for C/C++ also, but not built in. Anyway, that's their goal, it may end up still being slower for reasons like this. But it will be interesting to see what happens! I've programmed some very low level assembly and C for tiny embedded systems and SoCs and if this ultimately lets me use C# in those places easily as well, that's exciting (to me anyway). :)
No problem. Seeing your post just made me realize that I have done these operations many times, and sometimes it just doesn't "click" to pull them out to an extension method. So before I went down that path, I figured it couldn't hurt to ask. :)
Nice... I'm also a bit disheartened by the sometimes mindless recommendation of always using ConfigureAwait(false) everywhere, which often leads people to the wrong mindset. It should rarely be needed, if things are done right.
I don't get why people would be recommended to disable async when that is the whole point?
Follow the standard pattern or regret it when your complexity goes up. One of the biggest mistakes many programmers make is to ignore the fact that standards, patterns and practices are created by people who put far more thought and time into it than you and likely make your education look like a "learn code in 21 days" book. One of the most difficult things in software is determining when you should DIY and when you should follow standard patterns. In C# 95-99% of the time you should be using standard patterns and you need a better reason than "I don't like the way it looks" to pass technical muster if you intend on doing something novel. EDIT: You know if you completely implement INotifyPropertyChanged here you can get free and easy 2-way binding when you want it as well. Assuming this is an object the window might show of course.
Edit: the above post laid it out far better.
Nice little post, but am I the only one that didn't really need to scour the web to grasp async/await? It really seems pretty straightforward...
You're probably getting Fusion errors. It seems like the warnings are most likely indicitve of the problem. At runtime the catalog system need to intatiate your Email module. If that was compiled with an older System.dll, or uses a component with an older reference, then it's going to blow up. Check out: [Back to Basics: Using Fusion Log Viewer to Debug Obscure Loader Errors](http://www.hanselman.com/blog/BackToBasicsUsingFusionLogViewerToDebugObscureLoaderErrors.aspx) and [Fuslogvw.exe \(Assembly Binding Log Viewer\)](https://msdn.microsoft.com/en-us/library/e74a18c4\(v=vs.110\).aspx). Also, make sure you clean your project. Sometimes when you upgrade ( like say from an older Tutorial on Prism ) projects, the old bin and obj folders don't get cleaned out. I've see VS refuse to build a project because it thinks it's up to date. I had to manaully delete the directories. Also, check for older references left in those projects. If you zip up your project, or throw it on github, I'm happy to try and build it and see what's up. 
I have in this image, all the positions of each piece when they're flipped. What I want to do is to write an app that will show me every possible permutation for building the indicated structure. This structure is called ST Stacking. It allows you to spin the purple T piece into the gap to clear 2 lines at once. If anyone could give me some ideas how to start writing an app to do this, I'd really appreciate it! Pretty much the only key factor is that the first 4 columns on the left have to offset 2/2 as shown (with 2 block high on the left and 2 low on the right - or opposite with 2 blocks high on the right and 2 low on the left). This makes it easier to stack properly. [Here's a guide I made for people who want to learn ST Stacking that might help](https://www.youtube.com/watch?v=sUnH3RupsYE)
https://www.youtube.com/watch?v=mvK0UzFNw1Q Is a very helpful video. Explains why you are hitting that first "wall".
Not sure why you need to convert. Can't you just do: private void movement(object sender, System.Windows.Input.KeyEventArgs keyArgs) { if ( keyArgs.Key == System.Windows.Input.Key.Up) { x -= 20; } } 
Here's how you change the Content of a button: topLeft.Content = "X"; *NOTE: "topLeft" is a random name I gave the button you are clicking. 
MVVM and bindings is nice but would not recommend it to someone new to programming :) I learnt the hard way
/r/dailyprogrammer
Sorry about the layout. Didn't express it in the proper way
Yeah, only one artist is being saved because you're populating your `List&lt;Artist&gt; ArtistList` with only _one_ `Artist`: List&lt;Artist&gt; ArtistList = new List&lt;Artist&gt;(); ArtistList.Add(artist); Savexml.SaveData(ArtistList, "ArtistList.xml"); Try updating your program to add multiple artists instead of just one.
And then when we see everyone posting crap with WinForms and having database query code running in a button click we know who to blame.
This sounds super interesting but I wouldn't even know where to start. Is any of your stuff on github/ would you mind sharing an example?
I dont know if i really understand your problem, but do you have difficulties receiving the encrypted password from your 'Encrypt'-Method? If so that is because you don't assign the returned value to a variable. Like so: string encryptedPassword = Encrypt(password); 
Hi yeah i figured out how to do it after awhile. I keep creating new list of artist inside the save button but if i put it outside it and make it public. I can just call it inside the method
I had to do this recently for a set of tests around our session managers. The syntax in C# is: WebDriver.Manage().Cookies.AddCookie(cookie); If you want to post your code I can take a look and try to help out.
Thanks, I know how to change the content of the button but it's how to change the content on click, like if it's player 1s turn it will be an X, but if it's player 2's turn it will be an O. It's really confusing me at the moment.
If you're just going to change that one property here's a rough example. If you ever plan on more complicated styling I'd look into data bindings and styles, so you can keep most of the UI code in XAML rather than a bunch of redundant c#. public partial class MainWindow : Window { private bool isPlayer1 = true; public MainWindow() { InitializeComponent(); } private void Button_Click(object sender, System.Windows.RoutedEventArgs e) { if (isPlayer1) { Button.Content = "X"; isPlayer1 = false; myLabel.Content = "Player 2"; } else { Button.Content = "0"; isPlayer1 = true; myLabel.Content = "Player 1"; } } } XAML for button &lt;Button x:Name="Button" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Height="100" Click="Button_Click"/&gt; 
Ok so, I think you should read my comment chain with recursive. I thought it was a check, too. But it isn't meant to BE a null check. A null check is most simply `variable == null` (or variations on this). The operator doesn't just check this condition and return a boolean. If it did, then I'd agree, it's a null check (which is what I originally thought it was). It is a very nice accessor-esque operator. Allows you to smartly access properties of nullable objects. The conditional shown was just a neat little trick to perform an argument check. I also don't understand what you mean calling it `expr` and referring to it as an "expression." It's an object, no?
MUDs are basically Telnet server, so look for how to implement one of those as your base code. The first part is getting it so you can read text from the stream, then output stuff. Depending on how many clients you want at a time, you probably can get away with 1 socket per user and just assign each one a task, as opposed to the ROM/Merc codebase where you did a poll on each port for input, add it to a buffer, and then process it. Once you get input/output, basically have a different layer handle the single line input from the user and doing "something" with it. To start with, I recommend you make it a console application because it would be easier to test. (Actually, I'd probably do a lot of it via xunit/nunit testing anyways.) You'll have to decide how you want to store it. The ROM format of "ye old days" is a horrid file format specialized toward the terse style of C coders. I recommend you just use a SQL database for the bulk of your collection, wrap it in a layer so you can switch between SQLite and/or MySQL. You could also use a NoSQL database here probably fairly well. One of your hardest part is dealing with the MOBs. With the older code, after they did the poll on the sockets, move the command over, then they did a "tick" for everyone which included MOBs attacks and movement. If you want to be *really* fancy, I'd write it so every area has one Task that handles updates and it intelligently handled the speed and "ticks" of everything inside the area. Scripting would make your life a *lot* easier. I'd probably pull ideas from the MUSH side there and embed a scripting language in the code. It gives a lot of flexibility in your code. From my experience, I'd do it as "hooks" at the area level (assuming ROM-style organization) or at the creature, use dynamic compilation to generate the assemblies. If you are paranoid, load them into a separate app domain which will let you unload it as people leave the area (and free up memory). Just ideas off the top of my head.
thanks for the tips
system.security.cryptography is the namespace you want. But don't use any of it until you do a lot more reading. It is *so* easy to do it wrong, yet be confident you did it right. 
Code Katas 
I would try either uninstalling+reinstalling that package or manually adding a reference to the dll from the package (packages\Microsoft.AspNet.WebPages.3.2.3\lib\net45\System.Web.WebPages.dll)
At login time, you would compare the stored salted hash against the just-computed salted hash off the password they entered. 1. Use Id to look up their record, get the salt and salted-hash value for that user. 2. Use the salt and the password they entered to compute a salted hash. 3. Compare the computed salted hash against the value from the database. 4. If they're equal, the password was correct and you can let them in. Key things: 1. Each user has a different salt 2. Store the salt in the database in their user record. This is ok, believe it or not. 3. Compute the salted hash the same way every time. You can't change this process once you've written it. 4. Also follow this process for the answer to a password hint. 5. Why a password hint? Because you can't tell them what the password they chose is - you don't know it. All they can do is use the hint, or call you to reset their password and force them to pick a new one. You still want stuff like forced password change intervals, especially for high-value accounts like administrators and support people. 
Basic usage is extremely simple to grasp, but you might end up in situations like the deadlock in this example if you don't understand how it all works under the hood. 
Try to make a useful virus that passes virus scanners with ease. It's quite fun. I found a pretty easy method. Essentially you encrypt part of the data in the executable itself and then when it's run it reads it's own encrypted data and decrypts it into a new binary that is then run and disposed of when the virus is terminated.
My only comment is that the proposed approach is viable only of you control the calling code and you are able to propagate async all the way up. Sometimes you are stuck with a synchronous method (i.e: implementing an interface from a 3rd party library) and the solution is not so straightforward.
SQLLite is likely more performant than sql server. Datatables are garbage. I would do a [memory table](https://msdn.microsoft.com/en-us/library/dn133079.aspx) in sql server w/ crud sprocs and let sql server handle the backups. 
The optimal way is **you don't**. Define a _class_ that has these properties instead then create a collection of that class. Combining related properties in arrays like this is a huge anti-pattern.
On phone, sorry, but everyone seems to have forgot the purpose of interfaces, and this is just that. http://ideone.com/NLxJaR . there isn't a use of Person being a class, and having it as an interface removes the need of constant boxing and unboxing. 
First, thank you for the response. OK, great. I originally was going with enums of Race, Attack, Defense and was hinting towards what I tried with the "Enemy" list (4th line) enum Attack {"One" = 1, "Two" = 2...}; Then, I was making the above, I still can't seem to figure out how to loop in that. So, would I still make a counter variable to loop the enum Count and continue with a nested sub-loop??
The CLR doesn't have to play by the same rules as we mortals. For example, if you create your own strict the CLR actually creates type types, one value version and one reference version.
That sounds... Too complicated. Can you sketch out what you want?
That part sounds okay. Using your Deck to wrap your list of cards is alright, what are you iterating through though?
All true. I actually hesitated to reply to OP, as having too little knowledge is dangerous in this space. OP - If this looks hard, that's because it is. 
I would checkout RavenDB.
Like the value possibilities? 
Yes. Using the reference link from earlier, something like: for (int suit = Card.DIAMOND; suit &lt;= Card.SPADE; suit++ ) for ( int rank = 1; rank &lt;= 13; rank++ ) deckOfCards[i++] = new Card(suit, rank); ?
I had to build a Utility app that automates an excel report. Just come up with some made up data or scrape using python, insert into SQL and then come up with some form of analysis with it. Use Interop and remember to stackoverflow everything. Btw I asked for some project suggestions because the best way to learn is to figure out how to accomplish some tasks, for any language. 
&gt;how much security does an application need? How much would an attacker spend for cracking open your data? A bored average programmer may break your encryption in mere hours, even from scratch. The password might be reused elsewhere and she suddenly have the gmail &amp; corporate network password. Correctly implemented, hashing will keep your attacker from attacking the hash and go through another channel (patching your app library, intercepting the db call, etc). You'll want to ensure the weakest link in your app is strong enough to keep your customers (or their adversary) from attacking yours, and turn their attention to another app/level (OS, network) which isn't your concern nor responsibility.
I looked at your code briefly found something here: else { // This line returns (ends the method) return SteamRep.isMarked(OtherSID.Render()); //&lt;-------- { // Never reached if (SteamRep.isMarked) { You're not reaching the if statement below because you're returning. There are other ways to debug code, aside from testing. I frequently use breakpoints, variable watches, and print statements. You can set a breakpoint any line if it's executing, the debugger will pause the program. At this point you can look at objects/variables that are on watch.
http://up-for-grabs.net/#/tags/c%23
It depends... I'd say it's not your problem if someone uses your async code on a GUI thread and calls .Wait() on the result. Since TAP is expected to flow synch and scheduling contexts, it's behaving as intended.
Who's recommending that?
If you can't propagate it all the way up, the caller can always wrap it in a Task.Run at an appropriate level, which also gets rid of any context flowing etc. and lets her control the scheduling.
The solution works, but reflection like that should generally be avoided at, not all but high, cost. It can give a lot of problems down the line.
First, thank you very, very, VERY much. Sadly, AssemblyFormat seems to be broken... //serialize var bFormatter = new BinaryFormatter(); bFormatter.AssemblyFormat = FormatterAssemblyStyle.Simple; using (var stream = new FileStream(fileName, FileMode.Create, FileAccess.Write, FileShare.None)) { bFormatter.Serialize(stream, platformData); } //deserialize var bFormatter = new BinaryFormatter(); bFormatter.AssemblyFormat = FormatterAssemblyStyle.Simple; using (var stream = new FileStream(fileName, FileMode.Open, FileAccess.Read, FileShare.Read)) { var platformData = (PlatformData)bFormatter.Deserialize(stream); return platformData; } Again, when i check the file in editor, i see a lot of assembly names, and again, i get the "unable to find assembly" exception. will keep trying, i wanted to keep this free from third party solutions. edit: yeah, the underlying mechanic (Assembly.LoadWithPartialName (https://msdn.microsoft.com/en-us/library/system.reflection.assembly.loadwithpartialname(v=vs.110).aspx) is obsolete)... fuck
Could this be of any use to you? http://meatfighter.com/tetrisprinteralgorithm/ Youtube video: https://www.youtube.com/watch?v=PJkHwulsac4
Have you tried just using XPath?
C# in Depth is generally considered to be the best book.
I took a look at squarespace, it seems like a website where you get a website already made for you. Is ucommerce a opensource site that allows you to take code and develop more with visual studios? I am looking at it at the moment and it does offer free versions. 
Going to have to disagree with /u/SideSam. You can design an e-commerce website from scratch, fairly easily - depending on what you need. Sometimes it's the better option - you learn more, and you can very easily customise it to your own needs. Most of the features we needed did not exist in other platforms - and the features available were useless to us. I also like to have full control over my software and not rely on any third party platforms that could disappear any day. I designed and built an e-commerce website in C#/MVC in a matter of months, working part time. I'd say, it depends what your requirements are. Look at the available offerings - if nothing suits your needs, don't be afraid to start from scratch.
Thanks for commenting, I've never worked with open source code before and read it was the easier option as SideSam mentioned: Always try to find something already built. This website im planning on making though should be fairly basic giving the options to create new types of pizzas, make deals and do a shopping cart. I do think starting from scratch is the best way, but what options would you consider for the end user to be able to update the website themselves as a CMS, like WordPress allowing the end user to easily update and create pages.
You mentioned umbraco so I mentioned uCommerce as it works quite well with umbraco; uCommerce is not an open source so you have to pay license if you want to use advanced features. You can develop stuff on top of it quite easily (in visual studio using all the familiar tools). squarespace (and similar platforms/services) is very different, you just have a website builder, you basically can't write your own code (you can but you have to host code somewhere else and integrate). It is much more simple and fast to get started but is much less flexible in terms of what you are able to do.
Congrats on using C# .NET and MVC, You have chosen wisely. If you are selling goods check out ASP.NET storefront. If you want to build it make sure you adhere to PCI-DSS: https://www.pcisecuritystandards.org/security_standards/ One easy way to skirt PCI-DSS is to use a service like Authorize.net and have them store the sensitive customer information for you. I spent seven years building custom e-commerce sites. All I can say is that it's easy but it's not. Remember though you get what you pay for, so I would either build something good or buy a storefront.
I see. What I'm trying to do there is to return the method, but then if the method returns false, have it send a message to the user. Any tips? What do you think of this: else if (!SteamRep.isMarked(OtherSID.Render())) { Bot.log.Success("Accepted trade!"); return true; } else { Bot.log.Error ("Declined trade, user is marked as a scammer on SteamRep."); Bot.SteamFriends.SendChatMessage (OtherSID, EChatEntryType.ChatMsg, "I'm sorry, it looks like you are marked as a scammer on SteamRep. Per TF2 Outpost rules, I cannot trade with you. Nothing personal! If this is an error, please appeal on SteamRep. Thank you!"); return false; }
Managed to write something along the lines of var selectProduct = from Product in doc.Descendants("Product") where Product.Attribute("UserTypeID").Value == "RangeText" select new { iD = Product.Attribute("ID").Value, userType = Product.Attribute("UserTypeID").Value, ds_Item = Product.Descendants("Values") }; Unfortunately VS keeps crashing here. I think it has to do with file size. I'll create a smaller one to play with and report back.
Visual Studio is crashing, or your application is crashing?
Not to be pedantic, but the function isn't 'Authorizing' it's Authenticating, an important difference.
The problem is, I get 8366 returned - but 8366 is « not ₮
Depends on how much time you have and what your main goal is here. Are you looking to learn or just get it done quickly? If looking to learn, I recommend from scratch: you will encounter many obstacles but it will be good for you in the long run. If the timeframe is limited, then go with something already built and use those ideas/concepts and mix them into your own. Whichever route you take, make sure to have a list of todos. What are the essentials (or what YOU think/the client thinks the essentials are) ie, -admin interface for editing/deleting/adding products or product info -a cart for items -email confirmation for when a user makes a purchase -payment processors: Stripe API is great -will it be necessary for the user to make an account/login before making a purchase. If so, will they be able to log in with facebook/twitter/other platforms? -will refunds be allowed? -will Paypal be implemented? The above are just some random thoughts for drawing up a gameplan. Find out what you NEED first, and then expand on that. 
[C# 5.0 In A Nutshell](http://amzn.to/1F5Nmqw). It's a language reference, not an introduction to programming.
Why not just use bootstrap with a wrapper theme? https://wrapbootstrap.com/themes/e-commerce 
Biggest reason not to use them in my opinion is testability. Mocking static classes and methods requires a lot more work than not.
Let's break this down and go through your requirements one by one: &gt; I only need products of certain USERTYPE so I'd ignore all Product Elements without that USERTYPE var xml = XDocument.Load(file); var relevantProducts = xml.Descendants("Product") .Where(x =&gt; (String)x.Attribute("UserTypeId") == "USERTYPE"); &gt; Then I'd like to extract the Product attributes "ID" and "USERTYPE" together with the "Name" Node. var productDetails = relevantProducts.Select(x =&gt; new { Name = (String)x.Element("Name"), ID = (String)x.Attribute("ID"), UserTypeID = (String)x.Attribute("UserTypeID"), Values = x.Element("Values").Elements("Value"); }); Rewriting this using the query comprehension syntax makes it a bit cleaner when handling the case where the Values element doesn't exist, if necessary: var productDetails = from p in relevant products let values = p.Element("Values") select new { Name = (String)p.Element("Name"), ID = (String)p.Attribute("ID"), UserTypeID = (String)p.Attribute("UserTypeID"), Values = (values == null) ? Enumerable.Empty&lt;XElement&gt;(), values.Elements("Value") } &gt; Then extract the Values in the Values Node based on the attributeID. I don't want all attributes just some. Modify the above: var productDetails = relevantProducts.Select(x =&gt; new { Name = (String)x.Element("Name"), ID = (String)x.Attribute("ID"), UserTypeID = (String)x.Attribute("UserTypeID"), Values = x.Element("Values").Elements("Value") .Where(x =&gt; (String)x.Attribute("AttributeID") == "DESIRED_ID") }); Or, if you have a list of desired IDs: var desiredIDs = new [] { "ID1", "ID2", "ID3" }; var productDetails = relevantProducts.Select(x =&gt; new { Name = (String)x.Element("Name"), ID = (String)x.Attribute("ID"), UserTypeID = (String)x.Attribute("UserTypeID"), Values = x.Element("Values").Elements("Value") .Where(x =&gt; desiredIDs.Contains((String)x.Attribute("AttributeID"))); }); &gt; Write to a text file on a single line. I'm assuming you want each matching product on its own line: File.WriteAllLines("myfile.txt", productDetails.Select(x =&gt; String.Format("{0} / {1} / {2}: {3}", x.ID, x.Name, x.UserTypeID, String.Join(",", x.Values.Select(x =&gt; (String)x))));
Static methods also force tight coupling since interfaces can't have anything static in them.
You don't realise how helpful that was, thank you very much.
I got this issue to, ALL of my methods and variables are static.. I'm new to programming, but it has became a (bad) habit, but you know... My program works.. So there's that..
That's definitely on my list, thanks. I ran into this very early on.
Thanks, that's a big one and also in conjunction with what /u/dogtasteslikechicken said. Currently there is no unit testing being done, but there has been talk/interest of it. 
Anything that VS/intellisense can't help with has probably already been asked and answered on Stack Overflow. I'm with /u/Kayshin. Your best learning now is by doing. 
Thanks, I had been thinking more concrete examples specific to just C# more than principles like SOLID, so this is good. There are also certainly more issues going on regarding SOLID principles in the code than just using static, but it's what stood out most to me right away and what I thought would be a good starting point for these kinds of issues.
&gt; multiple languages, multiple currencies, multiple shipping methods, Sure doesn't sound like a "basic webshop" at this point. Handling multiple anything aside from product variations is a field or two up from basic shops.
Using JSON to CSharp (http://json2csharp.com/) I get this: public class More { public string Country { get; set; } public string City { get; set; } } public class RootObject { public string Name { get; set; } public int Age { get; set; } public More More { get; set; } } You could just create the most complex example of a person object (I'd rename RootObject to PersonObject) and see how the site formats it but really you could just adjust this manually. Although I see you saying that everything has to show up as part of an object still, so try /u/anoobisus suggestion ([link](http://www.reddit.com/r/csharp/comments/352yfz/question_about_json_deserialization_jsonnet/cr0j3zi)) first I guess.
If you are making a web application, and use a lot of PageMethod &gt; [WebMethod]s then you will need to use Static methods. Using WebMethods can make your web app feel like a desktop app. 
You got a null reference exception because you're trying to access a null reference. This is because your FindGameObject-Method returns null. Do you have a C# book? You really really should learn C# **first** before dealing with Unity.
mixing typed objects and json *is* a pretty unusual use-case.
I totally agree. Unfortunately is not in my hands.
What's your end goal? Windows forms is pretty old tech now. It also depends how much control you want. If you use WPF or fancy something even newer like Windows 8 / Phone or Universal Apps, then you have access to the MediaElement, and can bind your own various controls for playback?
You might want to use a dictionary instead of a list: private readonly Dictionary&lt;FlyableShipType, TrainingRecord&gt; _trainingRecords = new Dictionary&lt;FlyableShipType, TrainingRecord&gt;(); public Dictionary&lt;FlyableShipType, TrainingRecord&gt; TrainingRecords { get { return _trainingRecords; }} Dictionaries are very good for quickly retrieving values out of a collection based on some data relationship. In this case, you have an object that models a certain type of "training record" for a type of ship. So mapping the enumerated values of the FlyableShipType to that corresponding TrainingRecord makes a lot of sense. You can then access records with: foreach(FlyableShipType playerShip in Enum.GetValues(typeof(FlyableShipType))) { int completionScore = pilot.TrainingRecords[playerShip].TrainingCompleted; switch (playerShip) { case FlyableShipType.XWing: upDownTrainingLevelXWing.Value = completionScore; break; case FlyableShipType.YWing: upDownTrainingLevelYWing.Value = completionScore; break; case FlyableShipType.AWing: upDownTrainingLevelAWing.Value = completionScore; break; case FlyableShipType.BWing: upDownTrainingLevelBWing.Value = completionScore; break; } } Also, I'm unsure if you're served well by iterating over the enum collection in your foreach loop. It doesn't seem like you're reducing code really. You should consider just pulling out the values directly. upDownTrainingLevelXWing.Value = pilot.TrainingRecords[FlyableShipType.XWing].TrainingCompleted; upDownTrainingLevelYWing.Value = pilot.TrainingRecords[FlyableShipType.YWing].TrainingCompleted; upDownTrainingLevelAWing.Value = pilot.TrainingRecords[FlyableShipType.AWing].TrainingCompleted; upDownTrainingLevelBWing.Value = pilot.TrainingRecords[FlyableShipType.BWing].TrainingCompleted; I hope this helps!
Cool. This is what I'm looking for. Dictionary's seem to be what I was thinking of. Thx.
okay thanks, ill look into that
I have had good luck with Shopify.
Fair enough then :) What behaviour are you trying to achieve? I'm not 100% what the question is?
If you are looking for a shipping solution. Checkout github.com/EasyPost/easypost-csharp
If your code files have thousands of lines of code in them you are doing something wrong. But yes, Ctrl-G is handy.
8366 is the decimal representation of ₮. 20ae is the hex representation. They both represent ₮ just in different formats. Can you link me to something showing that 8366 is «? When I check it both in my app, and other places it comes back as hex ab and decimal 171.
&gt; I am not allowed to change More data type to a Dictionary I read this insane requirement as "Not allowed to change the More data type at all"
Not sure if this is around but I had a fairly large econ site running on aspshoppingcartdotnet, forget exact name, years ago. Developer gave full source code and support was awesome. I would not roll my own. http://www.aspdotnetstorefront.com/
heh. I've heard/read the word but never need to look into it. I did however and it is pretty freaking awesome. Ended up going with Json.Net http://www.newtonsoft.com/json Super ridiculously simple. I did what you advised and everything seems to work great. Just using a List for my collection of objects and the Linq queries are fast and everything is good. I appreciate your help. I'm glad I needed to look up JSON holy hell have i been doing it wrong for a while. 
I really like this assignment. Try drawing out the relationships between the things in your data model. This will help clarify the problem for you. Have you learned anything in your class that might apply to this, or did they throw you into a project with absolutely no background knowledge? I'll give this one initial suggestion. Instead of your Team having a List of strings of the Player names, have your Team contain a List of the Player objects. A bonus note to think about for this project is to think about how you might avoid duplicating information that needs to be kept in sync.
This is my first real foray into an object-oriented assignment. Everything else I've done has felt extremely procedural oriented. I think I understand the concepts, they just feel alien when I start to think too much about them.
Check your PM's dude ! Sent him the source code to a media player I made in C#. It's only basic but if you're interested PM me and Ill send you a link to it.
The .net core libraries will have frequent, independent updates released in an agile fashion. The .net framework will continue with larger, unified releases that are much less frequent. As new features, fixes, and APIs are added to .net core, they (mostly?) will be copied into the next big .net framework release to keeps high level of compatibility between the two.
I've already PM'ed you man. Oh by the way I was messing around with it a few days ago I added a directory change button it works but it has a few bugs so bare with it :')
thats cool, i will probably build from scrathc, but ill use the code you made as a basis to learn with
No worries ! Good luck. Feel free to PM me if you have any questions.
I saw a presentation last week at Build on making audio/video apps for Windows Universal. It seems pretty straight forward. http://channel9.msdn.com/Events/Build/2015/3-747
Thanks for the response! I can't get fuslogvw to work either, so now to look into that. EDIT: Got my issue sorted out. I do have logs for the bindings of the two different versions of System mentioned in the error log, but if I'm completely honest... I don't have any idea what I'm looking at or for :) **EDIT 2**: I don't think it's an issue related to the warning. I created a new test project and the modules aren't loading from the App.config file, though the warning doesn't appear in this project. Also, based on what I can make of the Fusion logs, it seems like there are no actual errors in the logs. The 2.0.0.0 seems to be successfully redirected to 4.0.0.0. The first log is for the 2.0.0.0 version, the second log is for the 4.0.0.0 version: ---------------------- *** Assembly Binder Log Entry (5/6/2015 @ 8:07:14 PM) *** The operation was successful. Bind result: hr = 0x0. The operation completed successfully. Assembly manager loaded from: C:\Windows\Microsoft.NET\Framework\v4.0.30319\clr.dll Running under executable C:\Users\Roger\Google Drive\Karnaluks\Test Projects\EmailClient\EmailClient\bin\Debug\EmailClient.vshost.exe --- A detailed error log follows. === Pre-bind state information === LOG: DisplayName = System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 (Fully-specified) LOG: Appbase = file:///C:/Users/Roger/Google Drive/Karnaluks/Test Projects/EmailClient/EmailClient/bin/Debug/ LOG: Initial PrivatePath = NULL LOG: Dynamic Base = NULL LOG: Cache Base = NULL LOG: AppName = EmailClient.vshost.exe Calling assembly : Microsoft.VisualStudio.HostingProcess.Utilities, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a. === LOG: This bind starts in default load context. LOG: No application configuration file found. LOG: Using host configuration file: LOG: Using machine configuration file from C:\Windows\Microsoft.NET\Framework\v4.0.30319\config\machine.config. LOG: Version redirect found in framework config: 2.0.0.0 redirected to 4.0.0.0. LOG: Post-policy reference: System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 LOG: Binding succeeds. Returns assembly from C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System\v4.0_4.0.0.0__b77a5c561934e089\System.dll. LOG: Assembly is loaded in default load context. ------------------------ *** Assembly Binder Log Entry (5/6/2015 @ 8:07:14 PM) *** The operation was successful. Bind result: hr = 0x0. The operation completed successfully. Assembly manager loaded from: C:\Windows\Microsoft.NET\Framework\v4.0.30319\clr.dll Running under executable C:\Users\Roger\Google Drive\Karnaluks\Test Projects\EmailClient\EmailClient\bin\Debug\EmailClient.vshost.exe --- A detailed error log follows. === Pre-bind state information === LOG: DisplayName = System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 (Fully-specified) LOG: Appbase = file:///C:/Users/Roger/Google Drive/Karnaluks/Test Projects/EmailClient/EmailClient/bin/Debug/ LOG: Initial PrivatePath = NULL LOG: Dynamic Base = NULL LOG: Cache Base = NULL LOG: AppName = EmailClient.vshost.exe Calling assembly : (Unknown). === LOG: This bind starts in default load context. LOG: No application configuration file found. LOG: Using host configuration file: LOG: Using machine configuration file from C:\Windows\Microsoft.NET\Framework\v4.0.30319\config\machine.config. LOG: Found assembly by looking in the GAC. LOG: Binding succeeds. Returns assembly from C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System\v4.0_4.0.0.0__b77a5c561934e089\System.dll. LOG: Assembly is loaded in default load context. *** Assembly Binder Log Entry (5/6/2015 @ 8:07:14 PM) *** The operation was successful. Bind result: hr = 0x0. The operation completed successfully. Assembly manager loaded from: C:\Windows\Microsoft.NET\Framework\v4.0.30319\clr.dll Running under executable C:\Users\Roger\Google Drive\Karnaluks\Test Projects\EmailClient\EmailClient\bin\Debug\EmailClient.vshost.exe --- A detailed error log follows. === Pre-bind state information === LOG: DisplayName = System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 (Fully-specified) LOG: Appbase = file:///C:/Users/Roger/Google Drive/Karnaluks/Test Projects/EmailClient/EmailClient/bin/Debug/ LOG: Initial PrivatePath = NULL LOG: Dynamic Base = NULL LOG: Cache Base = NULL LOG: AppName = EmailClient.vshost.exe Calling assembly : System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a. === LOG: This bind starts in default load context. LOG: No application configuration file found. LOG: Using host configuration file: LOG: Using machine configuration file from C:\Windows\Microsoft.NET\Framework\v4.0.30319\config\machine.config. LOG: Binding succeeds. Returns assembly from C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System\v4.0_4.0.0.0__b77a5c561934e089\System.dll. LOG: Assembly is loaded in default load context. *** Assembly Binder Log Entry (5/6/2015 @ 8:07:14 PM) *** The operation was successful. Bind result: hr = 0x0. The operation completed successfully. Assembly manager loaded from: C:\Windows\Microsoft.NET\Framework\v4.0.30319\clr.dll Running under executable C:\Users\Roger\Google Drive\Karnaluks\Test Projects\EmailClient\EmailClient\bin\Debug\EmailClient.vshost.exe --- A detailed error log follows. === Pre-bind state information === LOG: DisplayName = System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 (Fully-specified) LOG: Appbase = file:///C:/Users/Roger/Google Drive/Karnaluks/Test Projects/EmailClient/EmailClient/bin/Debug/ LOG: Initial PrivatePath = NULL LOG: Dynamic Base = NULL LOG: Cache Base = NULL LOG: AppName = EmailClient.vshost.exe Calling assembly : System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a. === LOG: This bind starts in default load context. LOG: No application configuration file found. LOG: Using host configuration file: LOG: Using machine configuration file from C:\Windows\Microsoft.NET\Framework\v4.0.30319\config\machine.config. LOG: Binding succeeds. Returns assembly from C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System\v4.0_4.0.0.0__b77a5c561934e089\System.dll. LOG: Assembly is loaded in default load context.
Here is the problem: naming an object "Player" does not mean that you tagged that object player. Tagging in unity is a separate entity.
I prefer using the decorators myself. This class uses both value types and custom reference types with JSON.NET attributes. https://kerbaldata.codeplex.com/SourceControl/latest#src/KerbalData/SaveGame/Game.cs
Interesting. Thanks for the explanation.
Here's an example of making it work without modifying `Person` at all, using LINQ to JSON rather than a full `DeserializeObject`: public class Person { public string Name { get; set; } public int Age { get; set; } public string More { get; set; } } void Main() { var json = "{\"Name\":\"John Smith\", \"Age\":30,\"More\":{\"Country\":\"USA\",\"City\":\"Los Angeles\"}}"; var o = JObject.Parse(json); var person = new Person { Name = (string)o["Name"], Age = (int)o["Age"], More = o["More"].ToString() }; } The `ToString()` on `More` is key, rather than casting it to a string (which will throw an exception).
Thanks for the guidance. This gives me something to apply some ideas to. I appreciate it immensely. :)
I use the Commons.Json library (a dynamic json parser written by myself) to parse this json string, it is ok. using Commons.Json; .... var json = "{\"Name\":\"John Smith\", \"Age\":30,\"More\":{\"Country\":\"USA\",\"City\":\"Los Angeles\"}}\"; dynamic person = JsonObject.Parse(json); Console.WriteLine(person.More.Country); // output: USA
I think this is what I am looking for, thanks. Now, to see if I can figure it out. 
Out of random curiosity, I'm not sure if this is a common question asked in C# classes, but I've had this exact one in a previous class. Do you attend SCC? And if you'd like i can dig through my old files and see i find my old solution if you'd like to take a look at it. 
Ooooh, Thank you very much!! That pretty much solved it for me. The only thing I had to change was: Values = x.Element("Values").Elements("Value") to Values = x.Descendants("Value") and that seems to be working for me.
Is there an way if querying anonymous types without converting to a list first? I'm trying to reduce the number of products available to me by removing certain products based on the values of some of the **desiredIDs**. I created a class public class Product { public string Name { get; set; } public string ID { get; set; } public string UserTypeID { get; set; } public List&lt;string&gt; Values { get; set; } } and var productDetails = relevantProducts.Select(x =&gt; new Product { Name = (String)x.Element("Name"), ID = (String)x.Attribute("ID"), UserTypeID = (String)x.Attribute("UserTypeID"), Values = x.Descendants("Value") .Where(y =&gt; desiredIDs.Contains((string)y.Attribute("AttributeID"))).ToList() } ); but it seems I can't convert **XmlElement** to **string**. Any help is appreciated.
What is the target? Windows 8.1 or Windows 10? Make sure to look for the right answer for the target as it can be confusing with so many API changes. Have you asked on dev.windows.com? If you are targeting Windows 10 the samples may simply not be ready yet. Stack Overflow is a good place to look too. There's also likely to be an open source framework that does all the heavy lifting for you (but if you're working with Win10 you probably won't find anything yet).
What is the target? Windows 8.1 or Windows 10? Make sure to look for the right answer for the target as it can be confusing with so many API changes. Have you asked on dev.windows.com? If you are targeting Windows 10 the samples may simply not be ready yet. Stack Overflow is a good place to look too. There's also likely to be an open source framework that does all the heavy lifting for you (but if you're working with Win10 you probably won't find anything yet).
0x3A28213A 0x6339392C 0x7363682E
Where are you stuck? What did you try? 1. Create program. 2. Read file one. 3. Read file two. 4. Write read data of both files to new file. Every single C# beginners book will help you with this.
i can't copy boths file content and create to the new one
Why not? Again, where are you stuck? What did you try?
8.1, 10 looks like it makes some really interesting changes but I don't think it is quite ready yet. I'll try asking on dev.windows I have looked through stack overflow but I think this is the sort of question that will just get locked immediately. 
If on Unix, cat file1 file2 &gt;file3 :p. It's often annoying how depressingly few tools like that Windows ships with. Note that PowerShell does have a cat command (alias for get-content)... except it can't actually concat anything (and it destroyes binary files, etc. etc.) Anyway, in C#: 1. File.OpenWrite or similar to create the ouput stream. 2. File.ReadAllBytes from the first input file, write them to outputstream. 3. File.ReadAllBytes from the second input file, write them to outputstream. 4. Close output stream. 
&gt; I have looked through stack overflow but I think this is the sort of question that will just get locked immediately. Good point. It's not a specific question. Here's something that might help: http://stackoverflow.com/questions/23397292/how-to-dowload-upload-file-onto-a-users-onedrive
Do you really need a program? On Windows, you can do: copy /b file1.txt + file2.txt file3.txt ...to concatenate two files in a third. You can also do: copy /b file*.txt output.txt ...to concatenate all the files that begin with "file" into a new one.
This isn't a subreddit to do your homework assignments for you
Well I think I've worked out the differences between the various ways I've seen people do it. The live SDK was the old way which is now mostly outdated. The OneDrive API is the current way and the OneDrive SDK is a wrapper around the API designed to make it easier to use.
Indeed, the `ConfigureAwait` is not the issue per se - in fact as I understand it it is generally advisable wherever possible (I guess it is more efficient in general to allow an arbitrary thread pool thread to handle continuations) - but there is a trap for those new to `async` or asynchronous programming in general to simply fix the deadlock without grasping the fact that they are blocking when they may not need to.
It takes a whole lot of syntactic sugar to sweeten up what the compiler does with `async` methods.
To address the other points you brought up, I've tried cleaning and rebuilding the project, but there was no change. This is a fresh project started a few days ago, which is why I'm having a hard time understanding how I'm getting conflicts with the System assembly. I've also started a [repository for the project on Github](https://github.com/Vartib/TestRepository.git). It's my first time using Github, so if I did something incorrectly and it's not what you needed let me know. Thanks again for your help with this :)
I can't quite figure out why this is being downvoted. What am i missing?
Please indent that...
Looks like i have been converted from Java or something
I've been working with COM for a bit, and I'm pretty sure the dynamic type is necessary if you want to retain any sanity.
I'm not familiar with Unity, but HeartUI is never initialized... could that be it?
Is your player object tagged appropriately?
Yes it is
You dont get HeartUI so when the code tries to edit the sprite of HeartUI, there is nothing in start add &gt;HeartUI = GetComponent&lt;Image&gt;();
Why the rage?
I believe it's because the OP said that More must be a string, as he's not allowed to change it. Your solution works for the example he gave, but it doesn't solve his problem, which is to get the "More" to be a string representation of the object it's associated with.
Gotcha. &gt;This was already answered as AngularBeginner mentions. I answered before he did, so I was not aware. Sorry.
I can't actually think of a reason why. Like, if you need it to remain a string because you need to perform string operations on it, you can turn the json block into a string again. If you need to have it unmodified, just also keep a copy of the string after you deserialize. It's a very very weird result. And to get downvotes for it is weird too. Maybe op doesn't know that you can do that? I mean if op replied and said "no, can't do that" then sure... it's all very weird is all.
As a general comment, you may want to read up some more on C# basics and write a few 'hello world' programs outside of Unity to get more familiar with some of the basics like working creating object instances and accessing/manipulating their properties. Unity does a lot of "magic" behind the scenes when it comes to instantiating objects and assigning fields, so I can see a beginner getting confused by things like NullReferenceExceptions, which are usually not too hard to track down. In Unity, there's a function called something like Debug.Log (or maybe it was Log.Debug) that lets you write output to the console. This can be useful for tracking down errors on your own. In this case for example, you can verify that your fields are initialized properly by inserting Debug statements like this at the top of your Update method: if (this.player == null) { Debug.Log("player is null"); } if (this.HeartSprites == null) { Debug.Log("HeartSprites is null"); } if (this.HeartUI == null) { Debug.Log("HeartUI is null"); } 
I have never used Xamarin, but I presume all you need is a method for the menu, and calling the method whenever you need the menu public void menu() { //Menu stuff } and when you need it menu(); Sorry if this doesn't help, I'm still an absolute beginner really, so this is all I can think of in case it's wrong
How would you write that in terms of code? Don't really know streamwriter that well
I am by no means a WPF (or UI) expert, but I've been using it for a few years now and for a good number of projects. 1. Don't use the XAML designers except to look at what you're writing in code. Type all XAML manually. ReSharper is your friend, but not strictly necessary. DO NOT under any circumstances get in the habit of dragging and dropping controls onto the designer. 2. Learn the MVVM pattern if you're not familiar with it already. WPF is set up to best make use of it, you will be fighting the framework if you try to do things in an alternate way. 3. As you start with WPF, it may feel like a few steps backwards from WinForms. It's not. It require a different way of thinking, but it is the far superior to WinForms in every way I've ever encountered. 4. You will be using INotifyPropertyChanged everywhere, and data is bound to WPF UI elements through a binding system. Lists will become ObservableCollections. Conditional formatting of UI elements will be done with Styles, DataTriggers, and Setters. If you ever catch yourself manually assigning a value to an element in an event or manually changing the style of a control in code, you're probably doing something wrong. 5. Grid layouts are a bit more verbose to type than StackPanels or DockPanels, but I find myself dealing with less behavior I didn't expect when I use Grids over other layout containers.
Change this: TextWriter writer = new StreamWriter(filename); to this: TextWriter writer = new StreamWriter(filename, true); 
This is good advice. Especially the first point. If you really understand the way xaml is built up, it's easier to make custom styles and templates, and you'll have a much easier time debugging the visuals.
Nothing have worked...
Thank you also do you know how to change the code above but in reverse so it loads the xml into a object?
Not exactly but thanks:)
Are you working with multiple threads?
I searched "C# xml serializer exampler" and found these: http://tech.pro/tutorial/798/csharp-tutorial-xml-serialization http://www.jonasjohn.de/snippets/csharp/xmlserializer-example.htm If you want to use the XmlSerializer to read your file and build an object though, I'm pretty sure you want the file overwrite behavior like you originally had and not the append behavior. This would ensure that the file is formatted in the way the XmlSerializer expects. Could you elaborate a bit more on what you're trying to do and why you wanted to append to the file instead of overwriting it?
Dart looks fine on the surface. TBH I haven't looked into it too much, mainly because I distrust google as a company that abandons pretty much all it's projects in the alpha or beta state. To make it perfectly clear: a language used for client-side development needs to have: - first class events - first class properties - first class async support (C#'s async/await) - first class delegates - first class map/reduce/etc (something like LINQ) Notice how C# ticks all the boxes, while java clearly does not, because it's retarded. While an API used for client-side development needs to have: - Declarative (XML or JSON) UI definition - DataBinding Anything else is unacceptable. If Dart or whatever provides that, then it's going to be a nice option. Until then, only Xamarin provides that for cross-platform mobile development. 
This is a better source for essentials tips about async/await. http://channel9.msdn.com/Series/Three-Essential-Tips-for-Async
This post I think: http://samsaffron.com/archive/2011/10/28/in-managed-code-we-trust-our-recent-battles-with-the-net-garbage-collector 
I don't know what it is about OOP, but it just makes sense. It really is a beautiful thing. *unzips*
For anyone else who finds this post I now have OneDrive working inside my app and this is what I have found out. The live sdk is being replaced by the OneDrive API and the OneDrive SDK that can be found on the OneDrive dev website is a wrapper for that API. The upshot of which is that if you are building a universal app at the moment the OneDrive SDK is the best way to integrate it into your app. [This](http://blogs.u2u.be/diederik/post/2015/04/06/Using-the-OneDrive-SDK-in-universal-apps.aspx) blog post has been vital to me, however there is one misleading thing about it. When he says he used an example class from the onenote sample code he links to one class Auth.cs however he also makes use of LiveIDAuth.cs as well. The upshot of which is you just need to base two classes of Auth and LiveIDAuth and remove the references to 365Auth. Then you need to make a class that uses the IAuthenticatorInfo interface, this should be fairly easy as you mostly just take values from the LiveIdAuth class. I believe the tokentype should be set to "Bearer" though. One last gotcha is that the IsSignedIn bool relies on the CanSignOut() method. This method needs a sign out option to be included in the charm bar so if you haven't set that up IsSignedIn will always be false.
Well that's certainly useless advice. Nothing in SOLID says talks about when to use static vs instance functions. I swear, SOLID fan boys love to imagine all kinds of stuff that's no where to be found in their literature.
1000 lines is easily within the scope of object oriented programming. Most things breaking 50-100 lines are good candidates. 1000 is definitely far to complex to be easily maintainable as a procedural program. Think of coming back to the code in 6 months, or a year (or, let's be fair, 2 weeks). With procedural programming the programmer generally has to build a model of the ENTIRE program in his head to get anything done. And the only way to remember how it works is to dive in and start stepping through it. And any time you write code and forget some little assumption or setting you made earlier in the code (and there are a lot of opportunities for that with 1k lines) you are opening up yourself to introducing a bug. A bug you can't isolate without introducing breakpoints and stepping through the code. A bug that doesn't self report on where it is and why it's breaking. And if anyone else needs to help you fix something, they likewise have to understand the entire program before they can contribute. OOP lets you break it down into components that can fail, that can be tested, that can self report, and that can be understood and worked on in isolation. Again, as FizixMan said, you should almost ALWAYS default to OOP. It doesn't add complexity, or require any extra effort on your part. It should just be how you think. If a program is simple enough that just means it is a stand alone object. But it's still OOP. You don't write code and then decide it's complicated enough to be made OOP. You write OOP and occasionally decide it's specialized enough to be optimized as a procedural program Again, if a program is simple enough, that just means it is a single object. It does one thing. Procedural programming really only comes into play when you have a problem that requires extreme levels of optimization.
Read the .NET Framework Design Guidelines and look at the built in libraries for good examples of when to use one or the other. Turn on the static code analysis tools in Visual Studio to help guide you. Avoid listening to people who make blind assertions like "never use static".
I have finally got it working. Thanks for the help. There were a couple of sample classes in a OneNote sample of all things that really proved useful. In fact once you have those classes its just a matter of implementing an interface. Man it's times like these that really make you appreciate mature well documented code.
"Coupling" is a bullshit argument used to justify mindlessly adding abstract interfaces everywhere. If you actually need an interface, then you would say "I need an interface here because I want to do...". Which leads to the abstract interface vs abstract class question and other useful conversations. 
I will try :D :s
A big problem is static functions vs static properties. One is very useful, the other is rarely appropriate outside config/caching scenarios. Getting people to understand the difference is surprisingly hard.
That's not necessarily bad. Even WPF and ASP.NET are full of statics.
I assume you're not then.
from a generic method i wrote some time ago: T = class name path = path to the xml file public static T Load&lt;T&gt;(String path) where T : new() { if (File.Exists(path)) { XmlSerializer deserializer = new XmlSerializer(typeof(T)); TextReader textReader = new StreamReader(path); T _object = (T)deserializer.Deserialize(textReader); textReader.Close(); if (_object == null) { return new T(); } else { return _object; } } return new T(); } edit: added the full method
Alt+8366?
Hi i keep getting a return keyword cannot be followed by object expression error
Learn how to create method signatures. If you want to return and object or a collection of objects the the method should be declared as such.
&gt; public static void LoadData(object obj, string filename) that is your method signature **public** means, its accessible from anywhere inside your application and from the outside aswell **static** means, you dont have to instantiate the class where its written in **void** means, that there is no return value expected **LoadData** is the name of your method **(object obj, string filename)** are the parameters for your method (stuff you put inside, to do something) edit: take a look at the sidebar and look/read through some of the tutorials
There is the catch not commonly known - you could write quite big procedural programs (10k lines of code or more) without feeling that you are doing something wrong. So the mindset - I'll wait till my programs are very big - is a bit dangerous. 
The other thing that hasn't really been mentioned in the other responses is that there are certain domains/problems that inherently lend themselves to OOP no matter what the problem/codebase size. For example, most GUI programming inherently lends itself to representing UI widgets as objects and encapsulating them separately.
Hi i've tried that and it still doesn't work and asks for a return. maybe its because i'm using a wpf?
Think of it like this. Suppose you had a windows form with 5 buttons on it, and you wanted to put up a message box whenever someone clicks the button. Coding it is simple. Just draw 5 buttons on the form using the designer, double click each button to autogenerate a click event, code the message box. Now imagine instead of 5 buttons you had 15 buttons. You can still do it in the designer, but you'd start to feel silly coding all those buttons like that. You'd start to think, "is there a better way"? Now imagine you had to do 500 buttons. Fuck that, right? There no fucking way you are going to draw 500 buttons on a form and double click each one to put the message box in. That's where object oriented programming can help you. A button is just a class. You can make 500 buttons in a loop. You can add them to the control container. You can set their x and y axis so they are in rows and columns. You can assign the same click event handler to all of them. That's way simpler than drawing 500 buttons and writing 500 click events, right? 
You sound like someone that beats at their platform and screams about how it sucks when you can't use it correctly. See how stupid and childish statements like that make you look. There is my passive aggression for the day. &gt; Why don't we? Because memory allocation isn't free and too much causes unnecessary GC cycles. What you gain for (usually unused) flexibility you pay for in terms of performance. Which is why I do implement plenty of private statics, there is very little need for public static anything, memory is not the issue here. Organizing code in a way that is sane in an OO system is. 
Hi i'm sorry but what i was meant to say is that my xml file keeps being save like /ArrayOfArtist&gt;&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;ArrayOfArtist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt; &lt;Artist&gt; &lt;ThisArtistID&gt;1&lt;/ThisArtistID&gt; &lt;ThisArtistName&gt;Hussein&lt;/ThisArtistName&gt; &lt;thisArtistAddres&gt;Darman&lt;/thisArtistAddres&gt; &lt;/Artist&gt; &lt;Artist&gt; &lt;ThisArtistID&gt;2&lt;/ThisArtistID&gt; &lt;ThisArtistName&gt;James&lt;/ThisArtistName&gt; &lt;thisArtistAddres&gt;Darman&lt;/thisArtistAddres&gt; &lt;/Artist&gt; &lt;/ArrayOfArtist&gt;&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;ArrayOfArtist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt; &lt;Artist&gt; &lt;ThisArtistID&gt;1&lt;/ThisArtistID&gt; &lt;ThisArtistName&gt;Hussein&lt;/ThisArtistName&gt; &lt;thisArtistAddres&gt;Darman&lt;/thisArtistAddres&gt; &lt;/Artist&gt; &lt;Artist&gt; &lt;ThisArtistID&gt;2&lt;/ThisArtistID&gt; &lt;ThisArtistName&gt;James&lt;/ThisArtistName&gt; &lt;thisArtistAddres&gt;Darman&lt;/thisArtistAddres&gt; &lt;/Artist&gt; and because of the way it is writing it. Makes it hard for me to load the xml file
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**First-class citizen**](https://en.wikipedia.org/wiki/First-class%20citizen): [](#sfw) --- &gt; &gt;In [programming language design](https://en.wikipedia.org/wiki/Programming_language_design), a __first-class citizen__ (also __object__, __entity__, or __value__) in a given [programming language](https://en.wikipedia.org/wiki/Programming_language) is an entity which supports all the operations generally available to other entities. These operations typically include being passed as a parameter, returned from a function, and assigned to a variable. &gt; --- ^Interesting: [^Second-class ^citizen](https://en.wikipedia.org/wiki/Second-class_citizen) ^| [^SMPTE ^ST2071](https://en.wikipedia.org/wiki/SMPTE_ST2071) ^| [^Metaclass](https://en.wikipedia.org/wiki/Metaclass) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cr224u7) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cr224u7)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
 I keep getting a error in xml document line 2 2 so i was thinking maybe it was the way i serialized it. The problem is that i want to store a list of artist into a xml file for creating new artist and loading the existing xml file. The object i'm passing through is a list public static Artist LoadData(object obj, string filename) { if (File.Exists(filename)) { XmlSerializer deserializer = new XmlSerializer(typeof(Artist)); TextReader textReader = new StreamReader(filename); Artist _object = (Artist)deserializer.Deserialize(textReader); textReader.Close(); return _object; } return null; } 
Learn what view models are. This is harder than it sounds because there is a lot of conflicting, and outright bad, information out there. http://www.infoq.com/articles/View-Model-Definition
That's what I did initially. It doesn't seem to work properly. I assumed that each thread will make a new context and so it should work independently. It seems to work ok for a while but at some point it fails an the exception is that it timed out. 
From the #4 top C# link of All time, http://i.imgur.com/ywjM4Zd.jpg you need to call a method, private void Main() good luck new programmer! what are you working on?
What's the point of making interchangeable components in a car, computer, or otherwise? Why not just make the computer or the car one giant part? The point is to start off with any number of smaller "parts" to the program and to construct a much larger program from those parts. I often think of class objects as mini-factories which all perform a specific function. Whenever I need that function I just create that class object. Once you get the hang of it you'll end up creating hundreds of small class objects that you'll write for very generalized purposes so you can use them again in some other program if you need a similar function. Here's a few examples of class objects I've written that I regularly reuse in completely different projects: (linear algebra) matrices, encryption objects, random number generators, file storage managers, TCP/IP socket managers, int128 coordinate structures, a console/logging singleton for a GUI/text file console output, various user controls for WPF and Forms, etc. Point is that OOP is perfect. When I grew up I learned the ins and outs of QBasic. When I finally sat down and taught myself C# I was enthralled with how convenient and easy OOP makes writing programs.
Damn, your woman must be a happy gal.
No the root element is suppose to be the array of artist but because of the way it is saving each time. it adds this line &lt;ArrayOfArtist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt; &lt;Artist&gt; want to know a way of stopping that line from showing on the file
http://en.m.wikipedia.org/wiki/Root_element
Non-mobile: http://en.wikipedia.org/wiki/Root_element ^That's ^why ^I'm ^here, ^I ^don't ^judge ^you. ^PM ^/u/xl0 ^if ^I'm ^causing ^any ^trouble. [^WUT?](https://github.com/xl0/LittleHelperRobot/wiki/What's-this-all-about%3F)
ELI5 version: You don't have to reinvent the wheel every time. You can take an existing wheel and make it better or tailor it better to your needs.
In my opinion, this isn't really the point of OOP. A straight up procedural programmer using C would use structs and find those points with almost identical logic. A key point of OOP, to me, is polymorphism. When you invoke the Foo method on the IFoo instance you asked me for, you don't control or even have to care about whether I gave you a BarFoo, BazFoo, or QuxFoo.
I agree with most of your points. My advice is targeted towards a new developer. Using the vast majority of current gen languages, and contributing to the vast majority of projects, OOP is the way to go. Procedural programming is useful and still has many applications, but I still feel strongly it is mainly in specialized work, of which C coding would qualify. As for concerns about "falling into the trap of complexifying your architecture for the sake of handling every possible case", that really isn't a problem with OOP. You are just as likely to do that with procedural programming practices. And the fact that people misuse OOP, or are uneducated on its proper use is not really an argument against it.
How about [this](https://msdn.microsoft.com/en-us/library/system.reactive.linq.observable.zip%28v=vs.103%29.aspx)?
Doesn't the "support" of polymorphism depend solely on the logic behind my deserialization? If I define a class "MyClass&lt;T&gt;" that contains "int number" and "List&lt;T&gt; values", then aren't both '{"number": 3, "values": [1,2,3]}' and '{"number": 3, "values": ["1","2","3"]}' polymorphic over said type? Can't I manipulate the list "values" without knowing the values it contains? For example, I could define a service "bool ValueCountEqualsNumber&lt;T&gt;(MyClass&lt;T&gt; myThing)" that checks that the list of "values" has the same number of elements as the value of "number" indicates. If I call this service using '{"number": 3, "values": [1,2,3]}' and '{"number": 3, "values": ["1","2","3"]}' I would get "true" in both cases, effectively making JSON polymorphic over the type of the elements in the list. Or rather, that's what I want to be able to do
It's not supported by default as there are a lot of possible interpretations for the behavior of a generic. You want to create your own converter and use the [JsonConverterAttribute](http://www.newtonsoft.com/json/help/html/JsonConverterAttributeClass.htm) to mark your classes. Since you inherit JsonConverter when you make your implementation you get all the Json serialized in a token object and you only need to handle processing of the special steps you want for generics. After that you can let the framework do it's thing. Or you can centralize your access and use the [converter directly](http://www.newtonsoft.com/json/help/html/CustomJsonConverter.htm) though IMO that tends to make your integration code more complex. 
That was my first impression, but atfet i switch to other map instance provider i got better results. 
Libraries? More than you can imagine. Nuget is the official 'repository' for .NET libraries. All you need to find one is a quick Google search for a reputable lib, then install from within visual studio
Ad the title says it's Xamarin but I forgot to mention that it's the android part of Xamarin 
OOP is just **one** paradigm - there are so much more like functional programming, which emerges strongly in the last years; even though both are quite old... so I would not suggest to make some of them *the default* for anybody! Instead learn as much ***different*** paradigms as possible in order to make you a better programmer! And to be honest: Starting with OOP seems quite hard to me - and that most students / newbies write procedural code in an OO language strengthens that thesis 😉
Try this for your collection and see if it helps: https://msdn.microsoft.com/en-us/library/dd460718%28v=vs.110%29.aspx
perfect explanation!
This doesn't solve his problem, for the same reason that /u/FallenWyveren solution didn't work. The more object needs to stay a unseralized string.
Sorry If I am making you doubt you skills! Just trying to get you onto a better path of learning!
It's cool, making this thread has motivated me that I really need to learn OOP if I want to make anything big :) 
That is precisely what I needed. Thank you.
Really looking forward to the rest of this series. These are problems that I've solved in hacky ways in the past, and I've yet to find a solid answer.
It'll get you started anyway, you can always come back with more specific questions. 
What % of code coverage do you have with unit tests?
Coming from WinForms, at first WPfF will seem really weird, but the best advice I can give you is, Google when you need it, and it's easy to pick up, just stick with it. :) have a good day. PS: WPF is hugely more customizable than WinForms and is better in a lot of was :)
&gt; I would _never_ do such thing over OOP. Why not?
How to paste in reddit: 1. Empty line before your code. 2. Four spaces to indent each line of code. 3. Empty line after the code.
Because you don't hear that term a lot in .Net jargon.
Did you remember to wrap the context in a `using ()` block?
This is also true. Some packages you can't get on Nuget, which is fine. It's just that Nuget is so easy nowadays.
So, as to not hijack the thread (good call), I created a separate post on this [here](http://www.reddit.com/r/csharp/comments/35atfu/long_performing_interviews_and_being/).
Great stuff. I look forward to reading the rest!
Good write up! Thanks for the info
Look at the stack trace on your exception - it should give you a line number where it was thrown. While VS.NET will tell you the line numbers down in the bottom-right corner of it's window, it's actually easier if you turn on line numbers in the UI. Tools | Options | Text Editor | C# | General 
Hello thanks for tellling me that. The line it is where the exception is doc.DocumentElement.AppendChild(node); Maybe it's because of the way my xml file is structured 
If you're starting on some new project you may want to take a look at the "new" way to build a Web application: MVC Web forms was invented 15 years ago and it used a mindset where the programmer had little or no knowledge of the front end techniques like html css or java script. The result is that everything gets generated server side and it can get pretty difficult to interact with existing client side frameworks. MVC is a more modern approach that favor a better separation of concerns. Programmers have more control on every aspect of the application and the code is cleaner and easier to write (provided you have a good understanding of html javascript and css, which you should have anyway if you want to develop a Web application). If you need help with Web technologies in general, I would suggest http://www.bento.io For info on mvc: http://www.asp.net/mvc
I'm a new developer learning new stuff. Haven't been around the block to know so to speak.
&gt; Closed Principle: You can never add new functionality to a class. That's definitely not what open/closed principle is about. Classes are **open for extension** (new functionality) but **closed for modification**.
I'm sorry for giving this reply: This question get's asked here 3 times a week and every week people here give out recommendations. Please use the search function. Once in a while there can be a new thread for this, sure - but all the answers have already been given in different threads. Best of luck to you on your journey to learn the language. :)
Where should the code execute then? If you were in a sharepoint 2013 environment you could have used remote event receivers (that could have called some javascript of yours) but you're running in 2010 so you don't have that option. If the code to execute when the file is uploaded resides on another server, you could set up a work flow or an alert on your document library so that an email is sent to an account of yours but I wouldn't know what to do next honestly.
Glad you were able to narrow it down and fix it. Happy Friday :) 
Good post, I'll ask my next interviewee what the single responsibility principle is. Not sure if they would know, but it will show their depth of programming. 
You're welcome. Sorry that it could not help with your specific problem, though. Anyway, if you can set up a Web service on your server, you could call that with a workflow. No need to deploy any code on the sharepoint server but you still need access to create the workflow with sharepoint designer and link it to your document library. https://ilovesharepoint.codeplex.com/wikipage?title=Call%20a%20Web%20Service%20Action
I've often asked questions like this in interviews and lots of people can parrot the terms, but often stumble when you press on the details. I've often had things like this. Me: So, have you heard of SOLID principles? Candidate: Yes, of course. (Candidate then starts explaining principles) Me: The integration segregation principle then, do you think it's a good thing and why do you think that? Candidate: *Blank Stare* 
I'm afraid to ask that. The last candidate didn't even know what an interface was. The market must be really good because we've had nothing but weak candidates and it's a telecommuting job where we look country wide. 
I can talk very intelligently about all manner of programming topics. I went to an interview a while ago where the guy just fired patterns at me and asked me to explain them. I had never heard of some of the ones he asked about but after going back and looking them up, it was all stuff I've done, I just didn't know that particular name for it.
Not under this user profile. I'd be fired.
I wish I could source something like that, but most of my knowledge is self taught... which makes things ever that much more difficult. Once I get going I can start saving for an MS qualification amongst my Cisco quals, but the question is getting going in the first place. More importantly, I need experience working on real projects, with real requirements. I'm conjuring something up, but I don't pretend to have any experience in understanding what a company needs from a program.
Use a library such as RestSharp to make REST API calls from a .NET application. As for streaming full tracks, I'm guessing their SDKs are all JS/HTML5-based. So you'd need an app that can display HTML5 and JS natively. 
One proven way to deal with temptation is to submit to it...
&gt; Why should I learn OOP? The only real reason to learn OOP is that it is very common. Someone else here has likened it to speaking English in the business world. I think that is a good analogy. Lots of other people here have told you that OOP is a particularly good approach. I strongly disagree. OOP is a really bad approach to programming. The entities modeled by most programs are not like "objects". The basic idea is to modularize your code. Put related definitions under the same roof, hide as many of the internals as possible and present an API. There are many ways to do this. OOP is just one (a common but not very good one). You can do this in procedural programming too. Look at the Linux kernel for an example of a big procedural program that is actively maintained by many people. Another thing you should learn that is more valuable than OOP in practice is generics. This language feature came from the (non-OOP) ML family of programming languages in the 1970s and it helps to address some of the crippling deficiencies that OOP has. Other language features that are more valuable than OOP are union types and pattern matching found in many languages such as OCaml and F#. I did procedural programming in BASIC and assembler for the first 10 years I was programming. Over the next 10 years I gradually started to use OOP until I became obsessed with it and tried to by puritanical in following all of the OOP design principles. Then I found that was completely misguided and dropped OOP almost entirely. For the last 10 years I have done almost no OOP at all and I am much better off for it. If you want to see how my code has improved since dropping OOP check out [this example](http://codereview.stackexchange.com/questions/11804/symbolic-derivative-in-c) where I solved the same problem using idiomatic OOP in C# and idiomatic ML in F#. As you can see, the OOP solution is really quite bad, weighing in at 100 lines of code compared to just 15 lines of code for the F#. That is pretty typical of most of my code now: much lighter and easier to understand and maintain than OOP code. Objectively, there are very few places where OOP has proven to be a good solution. 
Vs with resharper is fucking amazing, I don't blame you. I recently put resharper on my work Dev machine, and I don't know what I'm going to do when the trial expires. The Linq conversions alone are worth it to me, since they're helping me learn the syntax better. 
Yeah but I'm not for 8 years now.. I have my student id though...
Get the ticks from each of them, save to a list, then average, then convert back to DateTime. Like this: static void Main(string[] args) { var today = DateTime.Now; var yesterday = DateTime.Now.AddDays(-1); var twoDaysAgo = DateTime.Now.AddDays(-2); var ticksList = new List&lt;long&gt; { today.Ticks, yesterday.Ticks, twoDaysAgo.Ticks }; Console.WriteLine("Average {0}", new DateTime((long)ticksList.Average())); Console.ReadKey(); } EDIT: cannit used words goodly EDIT: You can do the same thing for TimeSpan, I did not read the question well but the same principle will apply.
What do you mean you can't write code outside of a getter and setter? Yes you can. public class BoringClass { private int ANumber = 0; public int ANumberGetSet { get { return ANumber; } set { ANumber = value; } } public BoringClass() { //Constructor } public int AMethodPlusNum(int add) { ANumber += add; return ANumber; } }
Yeah I understand that, but I want to know how I'd do it without getting ticks, straight from string form as if it was handed to me
Here's a list of strings: List&lt;string&gt; slist = new List&lt;string&gt;(); slist.Add("02:30:10.05"); slist.Add("02:30:10.05"); Here's a string result average: string result = TimeSpan.FromMilliseconds(slist.ConvertAll(x =&gt; TimeSpan.Parse(x)).Average(x =&gt; x.TotalMilliseconds)).ToString(@"hh\\:mm\\:ss\\.ffff");
Its worth the money. Trust me. 
Hold down Alt and select multiple lines. Note how the select behaves differently when you're holding down Alt then when you're not. Now with multiple lines selected, start typing. Boom son!
I hate eclipse. Everything needs to start debugging like vs does, it's the best way.
I don't get it. I have tried it so many times and it just comes off as bloat. I am FULLY aware I am the ONLY person who feels this way. I think the main issue with me is that my work computer has an encrypted hdd and has monitoring programs running. I gave heard that people are now getting ssds so when I get my refresh I may try it again. I have only ever used it at the super huge company I work at now.
Thats fucked up 
I will say that without an ssd it can be a tad sluggish but not show stopping. With encryption though I could see the sluggishness being a problem 
What if you wanted to write some code in the class MyClass? Do I need to create a main method like TGTB said? 
I have pro... Company paid
Thanks for this, was interesting reading. I work in one of those shops that do adhere to any design principles. In fact most of the senior devs came from a VB 6 background and code in vb .net like it's still a procedural language. My last job wasn't much better, pair this with a lack of self confidence and it makes it hard to even think about trying to find a new job. Though I do the best I can in my current role, I helped the team start using source control and will be pushing a switch to MVC (and my boss had to add some features to one of my old projects, so I sorta forced him to learn linq)!
Semi colon after the while condition. Remove the semicolon after the closing parenthesis after true.
Gracias Reddit is every bit as good as Stack Overflow
Go grab SublimeText/Atom/whatever, grab some great plugins and make yourself use it at least one day a week. This will not only have you learn more about the compiler, but also more on the syntax. Or better yet, go grab the new Visual Studio Code by Microsoft they just released: https://code.visualstudio.com
I can't tell what you're asking. 
I'm sorry. You have a fever...and the only...prescription...is more VS.
It's not even an "academic" term. Not knowing blog post stuff shouldn't really be a big black mark on your skills. As far as awkward interviews with nontechnical people, I had some guy ask me "So, how familiar would you say you are with C#? Would you say you're familiar with how strings are immutable?" and I kept stumbling for how to answer because, like, just saying "yes, of course I am" seemed rude. I think I went with something about string builders.
The only code you ask them to write is SQL? I think your approach is a bit odd. I'm more interested in whether they can solve any kind of problem (even toy problems) with code than whether they can rattle off design patterns.
I don't really do any front end stuff
I took an ap course in java last semester. They forced us to use bluejay. I was an eclipse guy but realized I dislike java. 
As promised, part II. **Performing an In-Person Interview** I'll preface this by saying that performing an in-person interview is very subjective to the job. I've participated in many types of interviews ... from the grueling 6-hour back to back problem solving / live coding / written exams / verbal interrogation by a panel of devs to the simple "solve this whiteboard problem" and everything in between. I dislike the 4+ hour interview format. It wears on the person being interviewed and takes a lot of time from your team to perform them. I have enjoyed performing a shorter format, maybe two and a half hours max. I break it down into 3 parts: 1. The Technical Interview. This is where I have the candidate use a whiteboard to solve problems. With the problems I administer, I explain to the candidate that I care more about *how* they think through the problem than whether they get to a correct answer. Throughout this process, I'm quick to point out little successes and compliment them on their thought process. "I really liked it when you approached it this way ..." "You did a great job explaining how ..." I like to bolster them up, get them excited and rearing for the next aspect of the challenge. Again, the problems I give are specific to the job. If it is a junior/mid level position, I am not going to grill them on how to architect a global transaction system that syncs all data everywhere in near real-time. And if it is a senior+ position, I am not going to waste their time with riddles and word puzzles (Why is a manhole cover round? Using this scale, how can you tell which pool ball is heavier? Etc.). Likewise, I'll tailor the problems to their strengths. If they are a strong web developer, I'll target things like the Javascript event loop, MVC patterns, the DOM, etc. If they are a strong backend developer, I'll talk to them about multi-threaded computing, OO principles, separation of concerns, etc. However, I avoid grilling them on facts. Anyone can memorize stuff and fake that aspect. In my opinion, a good developer knows more about *how* to get to the right information, how to assimilate it properly, sift through it and come to an elegant solution, all the while being guided by solid design patterns and practicality (I personally dislike the religious attempt to create abstract upon abstract upon abstract when it isn't needed.) As a general guide, depending on how complex the problems are, I try and get through at least 2. Where a candidate is strong, I'll dive deeper. Where they are not as strong, I'll jump in and assist them so we are solving the problem together. Even if they have an answer that is spot on, I'll have them question it. What are some alternative ways to do that? What are the pitfalls of doing it that way? How will it scale? Can they talk about the pro's and con's of that approach? I like to give a real-world problem, preferably something that we ourselves have encountered. Again, I want to know how they think through the problem. In many scenarios, there is no right answer. Each one has its shortcomings. Again, I will jump up and work *with* them to solve the problem, opposed to sitting across a table from them, judging. In fact, I won't ever sit across a table from them. I'll sit on the same side of the table as them, facing each other. I've found this puts the candidate at ease, and once at ease, I can get a much better feel for their abilities. In this way, we become a team to work through the interview together, vs being in opposition. If the candidate gets hung-up on a particular part of the problem, I don't sit there in awkward silence letting them sweat. It is a waste of time. I'll help provide that piece of the puzzle and move on to the next portion. I want the interview to be as productive as possible. I know I've repeated several concepts here. I hope to convey from multiple angles how I've gone about performing this aspect of the interview. 2. The Behavioral Interview This is also an hour long. Before I go into details, too many companies have you interview with an individual or two. These are often managers and an architect or some such. The problem here is that while a manager/architect may think someone is gold, they are not the ones who have to interact with this person day to day. The team may absolutely despise the person for whatever reason and get resentful with management for forcing that on them. Enter the behavioral interview. I like to bring in the developers+QA of the team that they would be working with. After all, if the team doesn't want to work with this person then I won't hire them based on that alone, regardless of skill. That may seem rather harsh, but I have been on the other end. I've worked with developers who thought they were Gods among us mere mortals and were impossible to collaborate with. It was their way or no way. Their way was the right way, everyone else was dumb. Fuck that. That is just one type of a non-team player that this interview eliminates. After all, if you have teams that enjoy working together, you are going to have better code, fewer bugs and a better product. In this interview, I give general guidelines for the team members, but basically let it be a free-for-all (within HR parameters). The guidelines I give are these: Try and find out things that are red-flags if you had to work with this person every day. I give them questions like: "Lets say that you disagree with me on my approach to something. What do you do?" "During a review of your code, I discover a major blunder. How would you want me to approach you about it?" "What is something that makes you upset when working on a team? How do you handle it?" From there, the team can guide the discussion. Sometimes they will go into technical-ish problems to gauge for themselves where they think the person will fit. Are they going to be a source of technical excellence that can help them when they get stuck? Are they someone who will own up to mistakes, admit when they are wrong, and work towards a solution? With that said, I've sat in on such interviews where the team ends up talking about Leagues of Legends, Magic the Gathering, hang gliding, martial arts, raspberry pi home automation and more. If they are having a good time and genuinely get along, then that is a good thing. I'll mention this here. After all the interviews are complete and the candidate has left, I'll meet with the team and have each team member give a thumbs up or down on the candidate and explain why. If the majority are thumbs down, then that is a no-hire. 3. Final Q&amp;A This is a half-hour meeting with the hiring manager. This is an opportunity to again ask questions about the company, give feedback to the candidate and answer any remaining questions they have. At that point, the candidate should leave knowing if they are a potential fit and when the company will get back to them. (Specifically. Not generally.) After this, all involved with the interview meet and discuss the candidate. What did you like? Will they be a good fit? Where will they not be a good fit? Would they be a better fit somewhere else in the organization? There have been times that we have interviewed the best candidates, but they were overqualified for the position we had available. Someone who is an architect generally won't be happy in a mid-level position or doing work that is, well, grunt work. If your organization is large enough and you have other open recs, feel free to share the details of the candidates with that group with your recommendation to hire them. We have hired some amazing candidates this way--even if it is not with the department that they originally wanted, they'll have opportunities to transfer to that department when a position opens up. So, this is all off the top of my head. I'm sure I'll think of more to add to this later. :) On to part III ... 
I've started doing more web development work and have been learning vim. For simple HTML/JavaScript/CSS vim is awesome. VS-&gt;Vim is quite a shell shocker but once you start to learn it you can get stuff done quickly. Vim is like building a fire with rocks/flint where VS is like having a pyro teach you how to start a fire with gas and flame thrower. But in the end it comes down to the right tool for the right job.
This was an example to skim their basic knowledge of DBs. I usually simply want to get an idea if they know some basics. Solving problems I generally reserve for the face-to-face interview, as illustrated in part II ...
If you know MVC using WebAPI is extremely easy.
It can be sluggish even with an (unencrypted) ssd. But worth it in my case. 
Doh!, I could have sworn that's what I typed :/
I use https://dotnetfiddle.net/
I wouldn't say the best editor, far from, but it's the best development environment. 
It means what it says: possibly mistaken empty statement (the semicolon). In your case, it *is* indeed mistaken. 
Why would you want to do that? To do that correctly would take a lot of code which would essentially convert to ticks (or seconds) anyway.
I tried but can't find anyone mentioning Delphi. Have you tried Delphi, OP? I still feel it's the best IDE. Fast, sleek and intuitive out of the box without 3rd party extensions. And yes I've been using Visual Studio for a while.
oh
They are objects too. And object can contain other objects. If you look go to MSDN and look at the classes there, you'll see this all the time. 
3 years ago I had to go from that to vim. I'm not even joking.
Yay. A Xamarin question! You start a new intent like you would with any other Activity but you use IntentFlags to tell the system to just go back to the activity that exists on the backstack instead of creating a new one. So it should be something like: Intent intent = new Intent(typeof(MenuActivity)); intent.SetFlags(IntentFlags.SingleTop | IntentFlags.ClearTop); StartActivity(intent); I'm not on a Xamarin dev machine right now so that's from memory. It probably isn't completely correct but it'll give you somewhere to start. Read through some of [this](https://developer.android.com/guide/components/tasks-and-back-stack.html) to get the idea of tasks and backstacks. Also, probably best to ask this on the Xamarin forums or SO.
Do you really need the hour field for a Rubik's cube timer?
Yep, what about bigger cubes, like the 13x13
&gt; The Linq conversions alone are worth it to me, since they're helping me learn the syntax better I hear that so much and learned Linq the same way. I bet Resharper is a huge reason why so many people know Linq these days.
You only need to use INotifyPropertyChanged if the underlying class can be changed by another source, or internally, and you want the UI to update when this change happens (two way binding). If you are just setting values (one way binding) then you don't need to implement it. 
Use object data binding. Takes a bit to get everything setup the first time, but once you do it's super simple to use. 
Intellij is also pretty awesome. 
No problem. Hope that worked for you. I think you can also do it with Activity attributes, along with setting the task affinity.
Well don't forget about static classes.. though maybe you could think of them as a static, always-there object. *Instance* classes (classes which you use as a blueprint for objects) I use for anything whose internal state needs to be tracked. To use the classic example you could have a hundred difference instances of a Person class, each of whom are unique and different. Some things are better left to *static* classes, which I view as organizers. The Math class is static. You call Math.Sin() or Math.Pow() just by themselves without making a "new Math()" object... because it makes no sense to create a bunch of "Maths" if their state and function will all be the same.
"== true" is redundant too.
If you mean for find and replace, VS supports that too (why wouldn't it?), just enable them in the search and replace window.
&gt; The Linq conversions alone are worth it to me What is linq conversions?
vs 2015 has angular support as well. also typescript since I hate javascript. Intellij is great as well though.
I don't use it either. If an add-on slows down my typing and navigating it doesn't stay installed.
I don't follow,I am talking about resharper.
Went from .NET to Java. I miss everything about VS / .NET. This Eclipse trick to make CodeAssist more like VS Intelligence, helps. http://www.intertech.com/Blog/eclipse-content-assist-activation-visual-studio-intellisense-like-behavior/ There are some more Eclipse tricks linked at the bottom. 
And then you can mix both! Instance classes with Static methods and Properties. And then there's Generic Static classes (which apparently VS cannot debug) where you have one always-there object per set of generic parameters. And then there's static extension classes which are a way of adding methods to existing Instance classes. Really,^it's^all^quite^complex.
oh I did not get it.
Yeah ny point was that Visual Studio I so awesome that I don't need anything else.
There's always been the capability to run MVC or WebAPI side by side with a WebForms App. You've got to jump through some hoops on the configuration side of it (basically to set the right handlers for each framework), but they can definitely exist side by side. 
I feel the same way. I have used resharper and didn't feel like it made a big difference. 
Worst C# IDE ever!
5am me didn't even notice the subreddit &lt;_&lt; whoops! They're still great tools though :)
As others have same, JetBrains makes some very high quality IDEs for plenty of other languages.
A new CEO took over my company and has publicly stated how much he hates Microsoft and .NET. All of us in the .NET division wake up in cold sweats fearing the day he forces us onto fucking Java or Node.js. Honestly, most of us have stated that we'd rather quit than deal with that nonsense. 
I use pycharm for my Python work but it's nowhere near as good as VS + re sharper in my opinion
VS code is a step in the right direction. Still very early but as a former heavy .NET guy, I'm like 6/10 happy. 
Get the vsvim plugin. All the power of VS with all the editing efficiency of vim.
If you can use the IDE, I see no reason to use VS Code.
[WPF Tutorial](http://wpftutorial.net/) is helpful. Just blogs in general once you have a particular area you come across and what more context on. [example](http://sdasrath.com/) 
I'm not advocating it, I'm giving him some ideas. I don't personally use it. 
If you have the option, try out IntelliJ, it's made by the resharper people and it's a great IDE.
I didn't know that. Thanks!
This week, I wrote a quick article about this. You are lucky :) ## [Small list of WPF’s tutorials](http://aloisdg.tumblr.com/post/118206612990/small-list-of-wpfs-tutorials) The main part : ### MSDN documentation - [WPF official documentation](https://msdn.microsoft.com/en-us/library/vstudio/ms754130.aspx) by Microsoft - [Quick start with WPF](https://msdn.microsoft.com/en-us/library/cc296381.aspx) by Microsoft - [Getting Started (WPF)](https://msdn.microsoft.com/en-us/library/ms742119.aspx) by Microsoft ### Complete tutorial - [WPF Tutorial](http://www.wpftutorial.net/) by Christian Moser - [WPF Tutorial](http://www.wpf-tutorial.com/) by net-tutorials.com - [WPF a Guided Tour](https://joshsmithonwpf.wordpress.com/a-guided-tour-of-wpf/) by Josh Smith - [WPF: A Beginner's Guide ](http://www.codeproject.com/Articles/22980/WPF-A-Beginner-s-Guide-Part-of-n) by Sacha Barber You can pass Winforms and switch to Universal Apps directly :) 
I have high hopes that microsoft's new interoperable IDE will bring this level of excellence to other languages and platforms.
Did you get rid of new StringReader() as /u/oyaug suggests? That seems to be the problem.
VS Code has potential, but it is nowhere near ready for prime time yet (not surprisingly, since it's just a first beta).
Yes I have, and I get the same error, but I also get some additional information though. `An exception of type 'System.Xml.XmlException' occurred in SYSTEM.XML.NI.DLL but was not handled in user code Additional information: Cannot open 'http://api.openweathermap.org/data/2.5/weather?q=London&amp;mode=xml'. The Uri parameter must be a file system relative path.`
At the risk of complicating things - don't mistake the C# implementation of OOP for the CONCEPT of OOP. Different languages have different ideas. For example, in JavaScript there are no classes, only objects. In Ruby, all classes are objects. 
Hm, odd. Well it looks like the first exception and this new one aren't related. So at least we're making progress. So your code looks EXACTLY like this: string xmlString = "http://api.openweathermap.org/data/2.5/weather?q=London&amp;mode=xml"; using (XmlReader reader = XmlReader.Create(xmlString)) { reader.ReadToFollowing("weather"); reader.MoveToFirstAttribute(); string number = reader.Value; ResultText.Text = number; } And the exception is being thrown on the `using (XmlReader reader = XmlReader...)` line?
Thank you for this, this should be helpful for me to go from mucking about following patterns to actually understanding what is going on!
I suggest staying away from WPF Tutorial. It's just snippets of code lifted from other sites with no attribution. No way to ask for clarification, etc. Just go on Stack Exchange or get a personal Pluralsight account. You'll learn 1000% more. (I have, in fact, set my Google preferences to never display results form this site. And this is the ONLY site in my exclude list...) (Edit: I mean Christian Moser's site... Just so there's no confusion.)
How much RAM do you need to run that combo adequately? I run Linux Mint and am trying out Windows 10 in Mint by using Virtualbox. Have you tried running that combo in Virtualbox? 
Where do you do your PHP, if any? PHPstorm? 
there are some debates about this website : [see](http://wpftutorial.net/Themes.html).
The framework does automatic mapping of properties by default as long as the names match and target type can be converted from a string or Jtoken/jobect. The only time you need to identify a converter is where you want to handle your generic data. You will need one converter for every way you want to handle generic data. If you only want one standard way like you describe than you just write the one converter and drop the attribute on all the classes that need the generic handling. 
That's a flashback for sure!
You can use the `Convert` class to parse/stringify numbers in base 2. Once parsed you can just add 1 to them. Hope that helps :)
`escapeall()` is not a standard JavaScript function, so it must have been defined somewhere in that website's scripts. Because of this there's no real way to figure out what this code does, unless you know what `escapeall()`does. So to find that out, you should visit the webpage you want to parse in your browser, bring up the debugging tools (F12) and paste this in the console: `unescape.toString()` then press enter. This should return the source code of that method. If you can paste it here I might be able to figure out what it does.
Any time when you want to make the same character changes to multiple lines of text, so you could for example use it to throw a bunch of semicolons or commas into your code all at once. I have found countless uses for it during maintenance of cs, XML, xsl, CSV, Json files.
Well my Dev machine at work is a pile of shit with only 4gb, and it runs well enough if I only have one vs instance open at once. This is with chrome and 40 tabs or so at any given time.
[Try this. ](http://blog.tylerdoerksen.com/2013/08/23/pfx-certificate-files-and-windows-azure-websites/) 
check resources on the right of this subreddit
I forgot to mention, that's the first thing I tried and it didn't work in my situation. I received a `System.Net.WebException: The remote server returned an error: (400) Bad Request.` on the line that does the POST request.
Sounds like you need peer tot peer service Discovery. This works if you have a server that broadcasts its presence, eg over udp. The .net framework supports this scenario easily. But you might be interested in https://code.google.com/p/lidgren-network-gen3/
It says "Cannot implicitly convert type "System.Console.Keyinfo" to "System.Console.Key"
 escapeall.toString() "function escapeall(str){return str.replace(/([A-Z\~\!\@\#\$\*\{\}\[\]\-\+\.])/g,'');}" ... but "function unescape() { [native code] }" Maybe I don't know much about JS, but it seems like it is native function. The escapeall I can understand, but it doesn't help much.
[Here's the link](http://anilinkz.tv/carnival-phantasm-oav-episode-2). I'd be awesome if you could help with it. I just need an example, but I can't find anything helpful.
Can you tell us more about your training and/or professional experience? Have you successfully completed any projects for any clients yet, or are you trying to find your first gig? You say you've been studying C#, but you don't say how. Are you going to school? Using online training? Reading books? Have you actually done any work with it professionally? To be brutally honest, if you don't have some meaningful experience with it professionally or by working on either a substantial personal project or an open source project, people would be crazy to hire you as a freelancer. In my experience, people who are trying to hire a freelancer have a specific job they need done as quickly and efficiently as possible. Hiring someone with no work experience or proven track record of being able to deliver a working solution is a waste of their time and money. I would suggest you consider doing some of the following: * Build some personal projects in with the technologies you're interested in and be prepared to explain how they work to potential clients (C#, ASP.NET, Entity Framework, whatever. These are just examples.) * Contribute to an open source project. * Find a charitable organization that needs some software or a website or something, and offer to do it for free. * Find a company that is willing to risk hiring you as an employee (not a freelancer) and get some relevant work experience. Complete the relevant certifications for the kind of work you want to do. For example, [this](https://www.microsoft.com/learning/en-us/exam-70-483.aspx). one from Microsoft Also, there's no need to wait until you can afford Windows and Visual Studio. Don't spend your hard-earned money on it, check out [this](https://www.microsoft.com/bizspark/) site. Microsoft will give you all their tools for free for 3 years, or until your company starts making a bunch of money. It is directly from them; this is a totally ethical way to get their software for free. They want you to get hooked so that you stick with them once your company starts making a bunch of money.
I still find repositories very useful, they make update operations easier, and abstract away the database/datastore implementation which allows the application to be more flexible (I have worked on a few projects where we were pulling data from MS SQL, FoxPro, and a REST api) That said, I've never had a need for a strict unit of work, since I've always injected the repository into whatever needed it
One of the great things about the Microsoft docs is that most have now been fleshed out with examples where needed. They are not always exactly where you are looking and are sometimes in the parent class for a member, or one of the other overloads of certain members. The docs are getting much better though, the newer ones often link to the related example if they are not in the current method.
Heh, I concur. I do find it useful for finding cleaner ways to rewrite my code but it's god awful with the suggestions of VAR. Maybe it has something to do with it being written by a company that mainly sources Java?
I really just like to use a generic for helper methods and interfaces. Love this one. http://www.itworld.com/article/2700950/development/a-generic-repository-for--net-entity-framework-6-with-async-operations.html
Gotcha. Your position is starting to make more sense. In the US, at least most places I'm aware of, there is a huge demand for software developers. Even people with little or no experience are getting hired because, hey, we can't find anyone else. &gt; If you know of somewhere I can host a domain for nothing, or for a fraction of the market price, let me know. There are a few infrastructure providers that will give you a minimum amount of cloud hosting/databases/etc for free. I know Amazon's AWS stuff has a free tier, though I'm not sure how far you can take it. I think you can get a tiny Windows server to host a site, and probably even a small SQL Server instance on their hosted database solution called RDS for the first year. You'd probably still need a domain, but that's only $10/yr. Also, you should really check out the BizSpark program. I think they give you free hosting credits on Azure for running websites and databases for the first year or something like that. Google's App Engine also has a free tier, although I don't know if it is much help if you're looking to use C#. &gt; Open source is a neat idea, and I'm sorry to say this hadn't crossed my mind. I'm unsure, however, as to how I can claim my identity in this manner. If you're contributing to something on GitHub for example, you usually just include your username and name some of the projects you contribute to on your cv. I suppose people could claim someone else's identity, but I know with GitHub, it's easy to add a photo of yourself and tiny bio so an employer can see that it is obviously your account. &gt; The idea regarding a charity is nice, but bureaucratically impossible here in the UK. Red tape is like a lead weight concerning data protection laws, DBS clearances, et cetera. They might as well just hire someone they know is a sure thing. Yeah, this is tough. I have a similar problem, where I'd like to donate some time to an organization, I just don't know how to find one that needs me :(. Sorry man, I wish I could be more help overall. It sounds like you're on the right track. I hope someone here can help find a project for you.
Have you tried allowing using [JsonConvert.DeserializeObject&lt;T&gt;()](http://www.newtonsoft.com/json/help/html/DeserializeCollection.htm)? 
I can't use Json.Net though :( 
Thank you for the ideas. I'll try out a repository. I'm decent at coding a solution but horrible at figuring out what solution to use.
I've read through a chunk of your source (don't have VS available at the moment to error check or compile it). Here are a few things that might be worth looking into. * Try to separate your form code and view logic from your functional code. You'll find it a lot easier to debug and test (if you go down the testing route), as well as manage in general. * In *adminrights.cs* you pass a form to a method; this could be better replaced with the variable the method needs to perform it's job - not giving it the whole form. It removes the *adminrights* dependency on knowing what a WinForm is, and means you could change your form or it's elements, and not worry about breaking another object. * In *devtools*, rather than presenting a list of strings for the available tasks, and using a separate string enum and case/switch to choose which of these tasks are selected, take them out of the form and put them into their own object as separate methods. * Don't be afraid of *var*. Implicit declaration can make your code a bit neater, and also helps with foreach enumerators (if nothing else). On an aside, your release notes state that this application is tested on Windows XP, but needs Net 4.5 - I wasn't aware that was available for XP?
I haven't written much php recently but I did try phpstorm to see how it was, it seemed pretty decent. I think it includes everything from webstorm. Or vice versa.
I'm a C# and Python coder, VS alone makes me prefer to code in C# (I also use Pycharm for Python)
The only reason I can possibly think of to still use the Repository Pattern is to make unit testing easier with EF, but EF7 should make unit testing with EF a lot easier.
I've been looking into exporting Excel sheets to XML, then running LINQ on the data. I wonder if you could do something similar to get your data into your DB.
Why would you do that? SQL Express is free while access requires a office license. With that said grab SQL Express and Entity framework. There are a couple of sample databases, namely north wind and adventure works, both available from MS. 
I'd try creating an mvc app using database first approach. You should be able to Google more than enough resources to do this. Doing this would get you familiar wit the basics of creating db tables, and them using the schema in a .net application. Then once your familiar with SQL terminology, try doing the same but with code first approach. You will inherently use linq to query your database in the app in both approaches.
Very useful, but it looks tricky to both use SQLite with and also load databases dynamically with, say, an OpenFileDialog.
Some of the first concepts you'll want to familiarize with are * Connecting to data [securely](https://msdn.microsoft.com/en-us/library/89211k9b.aspx) * Sanitizing input to avoid [SQL injection](https://technet.microsoft.com/en-us/library/ms161953\(v=sql.105\).aspx) * Understanding query design and syntax - which is slightly different for each system [\(SQL Server Reference\)](https://technet.microsoft.com/en-us/library/ms365303\(v=sql.120\).aspx) There are many ways of interacting with data in your application - In visual studio you can use the [data sources](https://msdn.microsoft.com/en-us/library/ms171923\(v=vs.90\).aspx) toolbox to directly connect data to the app completely via the GUI, you can manage everything [explicitly in c#](https://msdn.microsoft.com/en-us/library/bh8kx08z\(v=vs.110\).aspx), or you can use some combination of both. Usually the complexity of the workflow lends itself to one approach or the other. I avoid using the GUI techniques because it can be hard to tell what all Visual Studio is taking care of and what I need watch out for. Making a custom library for interacting with databases is also simpler and allows for easier logging/debugging imo. LINQ is extremely useful for manipulating Datasets in c#, though I try to keep as much data processing as I can server-side when working with an RDBMS. I usually find myself using LINQ when working with datasets from local objects rather than remote data, but that's just my preference. If you're looking for a good starting point, [SQLite](https://www.sqlite.org/) is super quick and light embedded database system (so the database resides in a single file rather than being served). [Here's](http://blog.tigrangasparian.com/2012/02/09/getting-started-with-sqlite-in-c-part-one/) a tutorial on working with sqlite in c# and [here's another](https://msdn.microsoft.com/en-us/library/windows/apps/dn263243.aspx) that uses a helper library to make the syntax simpler. You can also use [SQLite Browser](http://sqlitebrowser.org/) to quickly make or manage databases or just play around with SQL. Another option is SQL Server Compact, which is apparently pretty similar to SQLite but I would guess has much more graphical visual studio integration. I haven't used it at all so I can't say for sure. If you want to go deeper into SQL I'd reccomend checking out [Joe Celko's Thinking In Sets](http://www.amazon.com/Joe-Celkos-Thinking-Sets-Management/dp/0123741378) I got an internship working with a couple of DBA's when I only had a little java and c# experience. On day one the DBA II handed me this book and told me to forget everything I had learned in classes about databases. The major concept this book drives home is always using a set-theory-oriented view when working with data, as opposed to the linear mindset that we approach traditional programming with. In other words, rather than looking at tables as two-dimensional arrays, think of the whole table as a *set* of data. It also teaches query design similarly to defining finite sets, so the query SELECT * FROM Table1 A INNER JOIN Table2 B ON A.key = B.key WHERE A.column &gt; 4; can be thought of as the set &gt; **{A∪B : A⊇key ∈ B⊇key : A⊇column &gt; 4}** (or without cheating) &gt; **{A∪B : A⊇key ∈ B⊇key : A⊇column ∈ {x : x ∈ Z : x&gt;4}}** Simple queries were never really difficult, but as I started working on ETL's that dealt with hundreds of columns from all sorts of mismatching sources I found these techniques really came into play. Also it helped me prefer windowing functions and dynamic sql over using loops and variables leading to less code &amp; better performance. 
Thanks for the answer. I'm pretty new to C#, so I didn't know about LINQ but it seems like a really powerful tool. I'll definitely give it a go. 
Ideally you should create `zebra` outside `ClassA` and then inject it into `ClassA` and `ClassB` via constructor or property injection. public static void Main() { ... var zebra = new Animal(); myClassA.Animal = zebra; myClassB.Animal = zebra; .... }
Are you using OpenXML for that?
Things have changed a bit but access uses a subset of sql that is very specific to them... This technique won't always work 
Thanks, this looks the goods. I'll have a play with it this week!
Thank you! That's exactly what I need ;) `HtmlDecode()` has been moved to `System.Net`, though, but thanks for your help anyway. I figured out the regexa part on my own, but I didn't know what to do from there. I'd give you gold, but I'm broke, sorry ;j
Thanks for the reply and taking time to look at my code! First, I made a mistake it runs under .Net 4.0, not 4.5. Also another mistake the Class you reviewed adminrights.cs is deprecated and no longer used I should have deleted it from the project folder. I believe I had trouble figuring out how to pass a single form item (eg TextBox) so I decided to pass reference to the entire form, I've read this is bad practice due to some security flaws it may open up. I will have to see if I can better implement access to form objects. As for the DevTools I completely agree with you and meant to do just that, it just sort of became a sloppy prototype for testing and I never really got back to cleaning the DevTools code. As for the use of VAR I suppose I don't yet know when it would be acceptable to use opposed to a defined data type. I've really only seen it be used in things like SQL queries when you don't know the data type yet or in the case of a NULL data type. Thanks again!!!
For starters, why on Earth is your code a download attached to a release rather than making a proper Git repo?
Good on you for learning! EF/nHibernate behind linq can be disastrous if you don't understand the SQL that they attempt to abstract away. I've seen simple web CRUD apps make 1,000 queries+ because the developers did dumb shit in LINQ that doesn't translate to sql (and thus executes queries in a huge loop). 
Honestly if you're just learning I wouldn't recommend starting with Entity Framework or something. I'd learn SQL first.
Actually you can do this with this library too: var more = person.More.ToString();
And to go further, add a default value so you don't have to change your current use of the method: public void Increment(int value = 1) { score += value; } 
You'll have to know SQL inside and out if you plan on doing database programming professionally. Good news is that its not hard. Just takes practice. I'd start by designing your database schema on paper and build it using google as a guide. Then learn how to load and pull data from it with just straight SQL. You'll want to use an SQL client like squirell or many others. 
Use a Linq 2 SQL data context - it's specifically for cheap/easy database access. (If you're making a large, professional, scalable application you'll want to use the Entity Framework. But Linq 2 SQL is fine for a small job/app) You just add the context file, connect it to your database and drop the tables on. It also inherently eliminates a ton of SQL injection vectors. You'll learn a bit about SQL just because you'll need to know about table structures and linking and stuff like that. You might find later on you need to use some Stored Procedures or views, and then you'll need to learn more SQL. edit: Gu with the primer: http://weblogs.asp.net/scottgu/using-linq-to-sql-part-1
So, uh... now all of your individual files are attached to the release. If you're going to use GitHub, you might want to learn some of the basics of Git first. You want to use a client like Git Extensions or GitHub for Windows to create a repository in your source directory and push that repo to GitHub.
Definitely! XmlDoc remarks are a good place to document something like this. I consider my XmlDoc part of my comments in the source code. Maybe that wasn't clear.
There are quite a few common patterns for this, and I suspect that a lot of us will have our own ideas of what the "best" solution is. That being said, some commenters have already mentioned the Repository pattern, and that is probably a good place to start. It really depends on what you want to accomplish with your design. 
In C#, *var* is implicit type declaration, not dynamic type, and is appropriate anytime you assign the variable when you declare it. SomeClass myVariable = new SomeClass(); // Is the same as... var myVariable = new SomeClass(); To reiterate with the forms; only the form's code should know how to get data from its elements. Your other objects, like *DevTools* should not touch the form, or be passed any form elements - only their data.
Nothing wrong the HTTP POST. On my dev machine I can successfully get an access token if I don't specify `X509KeyStorageFlags.MachineKeySet` but most posts say that I need that flag to use the certificate in Azure Websites.
yeah you have to use an .odbc I think
Casing aside, I disagree. For thing like data classes etc., public fields are fine. The framework has several examples of that as well.
There are substantial differences between how Ruby models class objects and how .NET does it. One main reason is that Ruby is essentially dynamic.
Having a good example DB can help, download the adventureworks examples and then use different c# techniques to use the data. You will see that you end up with EF/linq eventually as the older techniques can be a bit outdated. That said, if you learn that all DB operations representing the app logic can and should be written in SQL stored procedures, and these alone called by c#, you will have learned something many before you failed to do!
To learn the basics of SQL I remember this interactive tutorial being helpful for me in the past. http://sol.gfxile.net/galaxql.html You can go over the basics very quickly there.
The change from Java to C# is pretty easy! Think about all the things you like about Java, C# has those! Now think of all the things you hate about Java, C# probably does not have those!
Download a free copy of VS Community edition, essentially a free version of Visual Studio Pro, sign up for visual studio online so you can use TFS and perhaps a free account on azure for free web hosting. Then start learning about the base namespaces, system, Microsoft, etc. with those tools and the msdn site as well as channel 9 videos that should get you going. Let us know how you do!
There are websites out there that will format your sql for you. No need to do it manually in word. 
I don't think access supports CTEs, UDTs, merge, output, transactions etc. the visual designer thing will never ever ever give you that stuff. Some features that are additions to ANSI SQL are just not there. 
I have been using c# for not a very long time, and am very much a learner. Would you recommend resharper, or would I not notice the benefits until I'm a better programmer?
&gt;DbContext is your UoW, DbSet is your repository Using those directly tightly couples your data layer with EF, though. CRUD operations are often simple enough and portable enough that there might be value in using an abstraction, depending on the application. It makes testing easier, too.
Android part ? I thought it was 'write once, deploy everywhere' philosophy
Plus a lot of C# features that have no equivalent in java which you will love at first glance.
 &lt;DataGrid RowDetailsVisibilityMode="Collapsed" Perhaps?
If you're going to write type specific code with a bunch of `if (typeof(etc))` then your code is no longer generic. Why do you need type specific stuff? what exactly are you doing in the code? Can you post an example of one of these methods?