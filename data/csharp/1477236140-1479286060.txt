You could also use a regex Match m = Regex.Match(words[i], "[a-zA-Z]"); if (m.Success) { Console.WriteLine(m.Groups[0]); }
At some point you need to manually specify the array since you start with individual objects. There is no way around that. You can make it somewhat elegant by implicitly constructing the array if you introduce another method, but you cannot get around starting with 4 explicit objects instead of a list of objects. private Can[] ConstructCans(params Light[] lights) { if (lights.Length != NUMCANTYPES) { throw new ArgumentException($"You must pass {NUMCANTYPES} light objects"); } Can canArray = new Can[NUMCANTYPES]; for (int i = 0; i &lt; NUMCANTYPES; i++) { canArray[i] = new Can(NUMCANS[i], CANPRICES[i], CANNAMES[i], lights[i]); } } And then you would call it like: Cans[] cans = ConstructCans(purchasableLight0, purchasableLight1, purchasableLight2, purchasableLight3);
Removed: Rule 4. There are a few hits on Google that are relevant and probably answer your question: https://www.google.ca/?gws_rd=ssl#q=C%23+ruby+interpreter
so theres no way it could be possible?
Step 1: stop using MySQL, use PostgreSQL or MSSQL Express. You'll thank me later. You'll need the connector package (search NuGet for System.Data.&lt;your DB&gt;). Then you could use Entity Framework (plenty of guides on that) or something like Dapper or even just base ADO.Net to talk to your database.
Could you use the PDF Viewer control, I don't think you'll be able to get it to render in the web browser control from a stream. You'd need to read it from disk.
The most frustrating thing is that windows lies to the winform at 150% or greater. It tells the app that the dpi is 96 no matter what, and that the client size is smaller than it truly is. That's the incomplete part of the stack overflow posts. The surprising thing is that 'legacy apps' at 150% or more that are not dpi aware are actually a scaled bitmap.... that's why they look pixilated. The msdn tells you about the app manifest, but fails to mention the second key part. Set the app manifest to dpiaware=true BUT also the first line in main on program.cs should be if (Environment.OSVersion.Version.Major &amp;gt;= 6) SetProcessDPIAware(); Then below main, put the in the reference to: [System.Runtime.InteropServices.DllImport("user32.dll")] private static extern bool SetProcessDPIAware(); Thanks, [dude's blog](http://crsouza.com/2015/04/13/how-to-fix-blurry-windows-forms-windows-in-high-dpi-settings/) and thanks Stack for regularly calling questions exact duplicates and referencing the answer that says "you don't try to get the real dpi blah blah." Did you guys even read the answer with which you vote to close?
...if not, structs should either be avoided or be small and immutable.
My other reply was meant to be to this message ;). Stupid app. 
Pro tip, MSDN answers 90% of questions here including some of my own, and almost always better than your average response. Just need to read up :) https://msdn.microsoft.com/en-us/library/0taef578.aspx
**Rule 4: Request-for-help posts should be made with effort** I hope you don't write code in the same fashion you post online. A good way to get better feedback to your homework/lab assignment is to post a better question and not make it so obvious. It makes it difficult for me to put any effort into helping you. 
&gt; tions here So I'm making a struct that's too heavy, and you'd recommend using a few classes instead? 
My byte/char array fields are of variable length, is there a way to handle that?
&gt; Structs can't define constructors (Only allows default constructor) That's incorrect. Structs *can* define constructors with parameters, but they *can't* have a custom parameterless constructor. &gt;Structs pass by value type, while Classes pass by Reference This isn't entirely correct either. There's a difference between reference types and passing by reference. Classes are reference types, but by default the references are passed by value. Similarly structs are value types, but can optionally be passed by reference.
You might want to look into; CombinedGeometry I am just looking into something about combined shapes (audio visualization) and this looks like the answer for me.
Learn about databases. You will need that info
&gt; to become more than an academically-taught programmer? Start building projects that are fun to you. If what you're ultimately trying to do is to be more than an "academically taught programmer" then just start building things, there really is no substitute for experience. While you're building projects, stay involved in online communities like stack overflow and this one. submit code to the code review stack exchange. Contribute to a project on github. Showcase what you build and take feedback. 
Websites. EDIT: Also, seriously? Please put forth a concerted effort in self-learning and research.
No. ASP.NET is more like PHP/Python/Ruby. It's server-side, not client-side. EDIT: That said, ASP.NET integrates a lot of JavaScript for client-side controls and automation and features, just usually you're thinking about things on a server-side generation context. And it doesn't replace JavaScript; you'll still be using a combination of ASP.NET, JavaScript, and CSS to build your site or service.
Thanks! The definitions on the internet have so much jargon. I just wanted a simple explanation.
No, that's not how it works. Structs always have an implicit parameterless constructor, but only in the sense that their memory is zero-initialized. You cannot override this default constructor.
The file system will dispose of it.
&gt; creating object pools I've done some object pooling tutorials, but I forget most of it. Either way, I will follow your general rule. Thanks
Be able to solve problems, including finding the information needed to understand how to solve your current problem. I don't want to encourage to code by way of Google or Stackoverflow (or reddit!), but being able to leverage Google, Stackoverflow, MSDN, or even Amazon/your local library to identify and learn the information you need to solve the problem you are working on is difficult to do without. You'll need to be able to do this to figure out APIs, anyway. Estimation is another very useful skill as a programmer. Unfortunately, the best rule of thumb I know of is to take a similar task you have done before and adjust that according to how similar or different that was from the task you have, and then adjust further according to how much of the information you know about the problem is likely to change or be wrong. Something like estimated time = {adjustment for uncertainty about details of current task} * {adjustment for similarity/difference of current task vs previous task} * {time to complete previous, similar task} When all else fails, take a SWAG (i. e. Stupid, Wild-Ass Guess) and throw on a universal fudge factor of 2 or 3. With time and experience, you'll have a better handle on it, but there's a reason that estimates are *imprecise*. Being able to program is an essential skill for a programmer. It's far from the only one, though, and many of them are difficult to teach.
your comment section is broken on your site ( ERROR: Captcha time expired. ) so I'll just post here: I disagree with the choice to make a private member in your test class: Adding state to a test is unfortunate, but it also adds complexity. It's best if your entire world starts and ends at the testMethod. Adding a startup phase should only be done when absolutely necessary (there are times, but it's rare) If you felt you wanted to remove the duplication (it's not much, but let's go with it) you could create a factory Pyramid Pyramid(){ return new Pyramid();} But better would be to create a custom assert: AssertPyramid(number, expected) { expected = expected.substring(expected.IndexOf('\n') +1); // trim 1st blank line var result = new Pyramid().Build(number); Assert.IsEqual(expected, result); } This would also make your tests read better var expected = @" /\ / \"; AssertPyramid(2,expected); 
&gt; Beyond Points, Rects, and calls to the Win32 API, I've rarely seen them used in practice. Value/Semantic types ftw.
During the development of C#6 they attempted to introduce parameterless constructors for structs. But due to the way the CLR works it meant that `new MyStruct()` resulted in a different value than `default(MyStruct)`, which is madness. They luckily removed that feature. In no C# version you can have a parameterless constructor for structs.
Also, this test is very nice with approval tests: The Test [TestMethod] public void TestPyramids() { var numbers = Enumerable.Range(1, 10); Approvals.VerifyAll("Pyramids", numbers, n =&gt; $"#{n}:\n{new Pyramid().Build(n)}\n\n"); } Produces approval file: Pyramids #1: /\ #2: /\ / \ #3: /\ / \ / \ #4: /\ / \ / \ / \ #5: /\ / \ / \ / \ / \ #6: /\ / \ / \ / \ / \ / \ #7: /\ / \ / \ / \ / \ / \ / \ #8: /\ / \ / \ / \ / \ / \ / \ / \ #9: /\ / \ / \ / \ / \ / \ / \ / \ / \ #10: /\ / \ / \ / \ / \ / \ / \ / \ / \ / \ 
Line 35-37: Console.Write("Writing " + (byte)b[x]); Console.WriteLine(" at " + x); bw.Write(b[x]); In line 35 you explicitly cast it to a byte. In line 37 you do not. `b` is an `int[]`, so `b[x]` (the value you write) is an `int`. This means you call the overload of `Write` that accepts an `int` as an argument, which will write the `int`. And `int`s are 4 bytes in C#. In short: You're writing ints, not bytes.
How big is the PDF? You could convert the byte array to a data URI and shove that in the browser. 
They're using `ArrayList`. **No.** Just **no**.
Sounds like you need a bug bear at your workplace. :)
&gt; ArrayList Its not ~ *that* ~ bad. While it is depreciated in favor of List&lt;T&gt; there are still minor uses of it and there really isn't a reason to not **know** it. It seems List&lt;&gt; is more in line with protecting the programmer from themselves. Admittedly I do not know C# as much as I probably should and that is just my takeaway from this: https://msdn.microsoft.com/en-us/library/b5bx6xee(v=vs.80).aspx.
you should just post here. there's probably others who have the same "silly" questions
I've disabled the captcha for now. Thanks for letting me know about that. I agree, I should not be adding state to the test and this is something I am going to look into more after work and amend the post. Very good catch, glad you pointed it out.
You can also take a look at BindableList
Removed: Spam, Rule 6, Rule 7, Rehosting other people's Youtube content.
Removed: Rule 3, Rule 4. Just ask the questions if they're applicable for /r/csharp, or give /r/learnprogramming or /r/learncsharp or /r/programmingbuddies.
Do you mean `System.ComponentModel.BindingList`? I did check this out right now and the same thing still applies, I have to `RaisePropertyChange` on my properties. However, it looks like having more functionality which I have to look into more.
I'm not sure that I understand you correctly. You want to update existing row in table? If that's the case, you need sql UPDATE command, not INSERT. Something along the line: UPDATE my_table SET my_field='my value' WHERE my_id=some-id
Well... as I said I'm new to this ahaha Thanks a lot m8 ^^
What happens when you actually run this program and try to insert a record? When you post a question here that asks, "Why is my program not working?", you should always describe what your program does when you try it, including posting every error message you get. But in this case, I think I can answer that question: you get a message box saying that an exception occurred because of invalid syntax in your command. You can't use a WHERE clause in an INSERT statement. And the semicolon is wrong too. Like the first responder, I am confused about your requirements. If you want to change an existing record, you use UPDATE as he suggested. If you want to add a new record, remove the semicolon and the WHERE clause. Edit: At first I thought just the semicolon was wrong, but then I looked again.
Yes sorry, from my phone right now. You'll still raise the property changed event in your class, but the list will also fire collection changed events for when any of the objects change, as long as they properly implement INotifyPropertyChanged
Your custom class needs to implement INotifyPropertyChanged. In the setter on the property of your custom type you need to raise the PropertyChanged event as well as raise the PropertyChanged event on the setter of your ObservableCollection. If you are trying to learn MVVM you should check out MVVM Light. You can get it via NuGet. It has a learning curve, but all of my MVVM apps now use this framework. It has saved me so much time since most of the boilerplate coding is done as part of the framework. 
I think its another example of why one should be using a test framework for rather than using a simple hand-written tester. Most test frameworks support the ideas of per-test-run setup and per-test setup. 
while scrolling, I thought the thread was titled "Confusing output from BruceWayne" ….. lol
First of all the only way is to implement everything from start to end, your logic is too complex for using built in mechanism, wpf provides a fast start as long as everything is stationary and stupid (comboboxes, sliders, etc). If you have a MVVM setup, you should have vector/points whatever you want that represent the stick figure and the current transformations on it. On the viewmodel you can put the vector/points properties that will get binded trough dependency properties in the view so they get updated when you change them. In the view you could have a Canvas with UiElement shapes which are ellipses/lines/dot.. The "hard" part is the collision check for knowing what has been clicked, you can handle it in your model by receiving mouse coordinates in your VM and pass them to the model that will known if any "interactive" elements exist in that point and react accordingly. Or you can attach directly to OnMouseEnter/Move/.... of the drawn elements. 
I don't necessarily need to convert it to its original type - Just anything that the other method will accept. It converts the list to a DataTable which is then used elsewhere.
Isn't it more like * Step 1: Cache Results * Step 2: ???? * Step 3: Delete cache if results that were cached are changed/deleted * Step 4: Profit
Hey, my problem was in thinking that I could use a where in the INSERT, that's what happens when I can't find good info about C# MYsql
Again, I suggest you reread [Reddit's guidelines on self-promotion](https://www.reddit.com/wiki/selfpromotion). There is a passage there that reads: &gt; **But it's not spam! I worked hard on that, I make no money from it, it's original content! I'm not a spammer!** &gt; We're not making a judgement on your quality, just your behavior on reddit. Your stuff's probably amazing and someone would be really interested in it but... &gt; If you submit mostly your own links and your presence on reddit is mostly for your self-promotion of your brand, page, blog, app, or business, you are more likely to be a spammer than you think! [Read the FAQ](http://www.reddit.com/wiki/faq#wiki_what_constitutes_spam.3F) and make sure that you really understand that. Even the very first sentence on that page: &gt; "It's perfectly fine to be a redditor with a website, it's not okay to be a website with a reddit account." - Confucius To be clear: just about every person who spams their content here gives the excuse "I post only true and valueable content here"; you are not different in that regard. Participate in Reddit. Post content from other websites to other subreddits. Engage in dialogue/comments with other people in other submissions. ***Reddit is not a social media advertising platform to plug your own content.***
If you want a list in which can you dump pretty much anything, you're probably looking for var list = new List&lt;object&gt;() it might a bit of a hassle to convert everything back. You'd have to keep track of that you put in there, and then check for all those types. For example: foreach (var item in list) { var itemString = item as string; if (itemString != null) { // do string stuff return; } var itemBla = item as Bla; if (itemBla != null) { // do Bla object stuff return; } }
You should put the phantom in a separate code repository and distribute the compiled assembly. It can still be de-compiled, so maybe you need an obfuscator too.
Couple of things: the syntax of your statement is incorrect. INSERT INTO testes (data,nota) VALUES (@data,@nota); WHERE disciplina = " + disciplina.Text ; INSERT appends a record to the end of the table. If you want to use a where clause, you'd need to use an UPDATE statement. Assuming you want to update, your sql changes to: UPDATE `testes` SET data=@data, nota=@nota WHERE `disciplina` = " + disciplina.Text + ";"' generally, concatenating textboxes into your SQL is a bad idea, due to sql injection. Your disciplina.text should also be an @var and delcared further down in your code. This changes your sql to: UPDATE `testes` SET data=@data, nota=@nota WHERE `disciplina` = @disciplina"; This is personal choice, but I prefer to write my sql statements in a using block to help with the cleanup and closing any open connections. To do this: using (MySqlConnection conn = new MySqlConnection("Connection String")) { conn.Open(); string sql = "SQL COMMAND"; MySqlCommand cmd = new MySqlCommand(sql, conn); cmd.Parameters.AddWithValue("@param", "value"); try { cmd.ExecuteNonQuery(); } catch exception list{ //do work } } This avoids leaving open connections and running into issues using the same database further down. Hope this helps clear up anything for you.
 var list = new List&lt;object&gt;(((IEnumerable)someTypeList).Cast&lt;object&gt;()); or var list = ((IEnumerable) someTypeList).Cast&lt;object&gt;().ToList(); or var list = new List&lt;object&gt;(); var collectionOfUnknownType = (IEnumerable) someTypeList; foreach (var o in collectionOfUnknownType) { list.Add(o); } All the generic collections also implement some of the non-generic collection interfaces. You could trivially cast your List&lt;T&gt; of unknown type to IEnumerable, and iterate through it to create a list of objects you can pass to DoSomething. You'd be throwing all the type information away in the process, but if it's being turned into a DataTable under the hood, anyway, it may not matter. Alternately, could your code be written so that `type` is passed in through a generic constraint? Like, if your signature is currently void SomeMethod(object listOfUnknownType) { can you make it void SomeMethod&lt;T&gt;(List&lt;T&gt; listOfKnownType) { or void SomeMethod&lt;T&gt;(IEnumerable&lt;T&gt; enumerableOfKnownType) { instead? That would simplify your problem greatly, and possibly save you some performance hiccups.
&gt; So when it comes to cache invalidation, is this pub/sub system what you use to notify your web servers and/or queue message processors that some cached information is out of date? Yes. Once we wrote it, and iterated on the API to make it easier to use. It's usage across our platform exploded. It's becoming very integral to our platform and the ability to update/expire caches as and when required. Yes, your `Subscribe` example is pretty much how to use it. I personally prefer to handle the message in a method of its own. A full example would look like this:- public class UserProfileUpdatedHandler : IHandleMessage { private readonly IDependency _dependency; public void Register(IMessageBus messageBus) { messageBus.Subscribe&lt;UserProfileUpdated&gt;(SubscriptionType.All("UserProfileUpdated"), message =&gt; UpdateUserProfile(message)); } public UserProfileUpdatedHandler(IDependency dependency) { _dependency = dependency; } private bool UpdateUserProfile(UserProfileUpdated message) { _dependency.Update(message.UserId); return true; } } Your `Publish` example is spot on. &gt; Is that the general idea of how you use what you wrote specifically for caching? Yes. Almost all of its usages are caching related. There is only one usage that is not caching related, and that problem was prime for queue mechanism anyway. Often the most difficult thing to do is once you have the message that says to expire/update something from the cache, is getting to the cache itself from where the message comes in.
Well, you can use an ArrayList, https://msdn.microsoft.com/en-us/library/system.collections.arraylist(v=vs.110).aspx , it's far less efficient then a List but the datatype can be mixed. Otherwise, I would recommend a re-design to avoid this problem. 
Which code do you have control over, and which is out of your control?
yes with error checking it would be something like (I am intentionally trying to not give you the answer here; not sure how much closer I can get without doing so): int value; bool isgood; do { Write("number: "); var input = ReadLine(); TryParse(input, out value); //set isgood } while !isgood //value must be good here 
thank you so much man im pretty sure with this knowledge i can do the whole thing
&gt;This will be significantly slower than normal calls If performance is important, he can use either DynamicMethod (and generate the IL required for instantiating the list) or Expression Trees. Neither have any practical performance hit (as long as they're properly cached) over plain non-reflected code.
While this does do what OP asked for, I feel that what you provided is a bit out of scope for their skill level, not to mention that just giving them the answer straight out with no explanation of how it works isn't really encouraged when helping people out with code. 
I just recently went through a week-long take home test as the second step in a three step interview process, and here's what I experienced: **Concerning soft skills:** As a father and husband, finding time to sit down and do actual work is extremely difficult, and when i do find some time, it typically involves 1 or more children climbing on me (I have on my lap now). I ended up working on the project a couple of late nights and a Sunday afternoon when my wife took the kids out. I was also "encouraged to ask questions". If the expectation is that the candidate collaborate and gather additional requirements, then someone from your team should be available to field questions late at night and on weekends, or at least promptly respond to questions as soon as they receive them. Candidates are possibly working on this with limited time after work and at random hours. &gt; I don't want candidates to treat this as a small throw-away project. Are you compensating the candidates for their time? Unless you plan on paying for or deploying candidate's code then it is throw away. But is that such a bad thing? Rather than say that this needs to be long term, why not use it as a chance to see what "throw away" means to a developer without explicitly stating that it is? **Unit tests:** I was also asked to provide unit tests - I implemented 1 test for a single method that was the only real piece of logic I wrote. All other code was basic crud with model validation being handled through mvc. More important for me was to implement highly testable code. I wasn't about to waste time unit testing mvc, and had they asked I would have explained how and when I would write more tests including how to mock dependencies. They didn't ask and I turned down an in person interview. **Communication:** The communication between me and the potential team was terrible and mediated through a recruiter. I would rather speak with the developer(s) that reviewed my code than receive vague feedback that my .Net project lacked *JUnit* tests (yes, that's a J). Hopefully you're giving candidates the chance to defend their work. **Design:** &gt; Makes UX or design choices that delight the user UI is highly subjective. UX less so but requires additional skills with which many developers don't have experience. Do you define the user or target market? Other than unit tests, what type of requirements do you provide that are objective rather than subjective? Would you accept work from a candidate that only implemented a web service and no "UI", with providing an api for other developers? **Code:** &gt; Code is for candidates is ok usually for a junior dev, but we're interviewing senior developers. Usually the failings are in soft skills, they miss details, don't ask questions, or make poor assumptions about UX. This seems to be a contradiction, is it code or soft skills that senior candidates are lacking and how do you define "senior"? Senior could mean anything depending on the company. Are you upfront of what that term means and what is expected of senior developers and what you look for in code? This wasn't my first code test, as I've done in-person code tests in the past, but it was my first take home/week test. Overall I'm disappointed in the what I experienced, perhaps through my own mistakes. However, the next time I go through the same process I'll make sure expectations are completely defined upfront. Hopefully this type of thing works out for your team. Sincerely, random internet person. edit: some formatting
This is a VM image from MS though, I don't see any reason not to trust it.
This is great but I'm still looking forward to the really fast installation time with visual studio 15 that Scott Hanselman demoed earlier this year. 
If you want to check that your input is a) integer, b) exactly 4 digits long and c) does not have any repeating digits, you can try using Regex. If you've never used regex before it can be a bit daunting but it's incredibly powerful (and fast) once you learn even the basics. For example - ^\d{4}$ checks that you have exactly 4 digits. 
My only issue is that in the whole screenshots page, only 1 screenshot isn't an angled render. Please showcase more of the app itself, not devices it runs on.
You are right! Well, inexperience shows itself. I will upload the new ones following your advice. Thanks for pointing it out! :)
Preview 5 is out - Download away :p
| Is it just a matter of "see if a row exists with the entered username and get the salt value from the hash on any matching row"? Yes, it is. As you noticed you need the salt. This salt should be saved alongside the hashed password. You retrieve the salt and the hashed password, generate the new hash based on the retrieved salt and the password the user entered, then compare it to the stored hashed password. If it matches, the password was correct. If it doesn't match, it's not correct. If you don't find a row with a matching username you just treat it as a wrong password.
so, a separate column...
It's not necessarily bad per se; but it is a bit more tightly coupled than say, abstraction by interface. It all about what you're trying to accomplish, are you trying to make things as abstract as possible, with minimal coupling? If so, you can give each model in your repositories an interface, then populate your ViewModels according to the interfaces you've defined. Then you're not tied to the Repository models anymore. If you really want to go crazy, abstract out the way you populate the ViewModels, use a framework like AutoMapper to separate out how the viewmodels actually get bound to the ViewModel, too. This also allows you to avoid constructor injection all together, allowing you to create a service to interface with the repository models instead. Loosely coupled code gives a lost of testable surfaces. My personal preference is to use constructor injection when retrieving data from the repository, but when updating or creating, I tend to do it a bit more manually, since that can often be more complex. ------ However, that can be a lot of work and complexity for sometimes not a lot of benefit. The simple approach can sometimes be the best. Use a constructor, map it manually within, and if necessary, refactor.
So in the end I went with: int num1; bool go; do { Console.Write("Number:"); var inp = Console.ReadLine(); Int32.TryParse(inp, out num1); if (999 &lt; num1 &amp; num1 &lt; 10000) { Console.Clear(); Console.WriteLine("You chose: {0}",num1); go = false; } else { Console.Clear(); go = true; } } while (go); Thanks to /u/tragicshark
Hi Ryan, Thank you for your thoughtful reply. You've written a lot, so I'll try to respond to each part briefly. &gt; As a father and husband, finding time to sit down and do actual work is extremely difficult I am very conscious of the concern of time costs. Our test is intended to be done in a single sitting in a couple of hours. Our take home project and in-person interviews combined takes less time than many of the in-person interviews I've done elsewhere. If a candidate needed extra calendar time to fit in work, I would not be opposed. &gt; ...field questions late at night and on weekends I'm only looking for any of the types of questions a developer would ask after reading the project for 15 minutes. Ability to communicate async is a bona-fide job requirement we'd like to test for. &gt; Unless you plan on paying for or deploying candidate's code then it is throw away. None of a candidate's code is used outside of evaluation during the interview. They maintain ownership of their code. I would very much like to compensate candidates (and possibly ask for code ownership in exchange), but I am currently unable. The purpose of a work-sample test is to be as similar as possible to the actual job during evaluation, so that it is a fair assessment of potential job performance. Evaluating the submissions as throw-away code fails to meet that purpose. &gt; Unit tests I'm generally in agreement with your understanding of the utility of unit tests. I would gauge few, focused, well-written unit tests as much better than many tests of framework functionality. &gt; Hopefully you're giving candidates the chance to defend their work. Evaluation is done with the candidate and multiple developers, currently in-person. &gt; UI is highly subjective. UX less so but requires additional skills with which many developers don't have experience. We hire only full stack developers. UX/UI is experience/skills we test for because we require them in our work. The user/market is defined and well known. We provide mockups, descriptions, and a project skeleton with dummy data. &gt; is it code or soft skills that senior candidates are lacking Soft skills are missing in our senior candidates, but it shows in their code. When a candidate successfully applies soft skills they make different choices in their code. I am painfully aware of the wide definition of senior. Good luck in your job search. -Tom
Do I need to purchase an Actipro license to fork and use this project?
I agree with quite a bit that /u/NormalPersonNumber3 laid out but can maybe extend on things from the point of view of single page applications where things may off road a bit... As a rule of thumb, ViewModels are essentially "dumb" containers for I/O to and from the client side (be it web or platform). In a world where data coming in from a view can have cross cutting impacts and potentially malicious input, ViewModels are the vehicle that information is siphoned from in business object(s) or, in the opposite direction, being serialized back to the client in a rendering friendly response. In a typical project with the repository pattern angling towards SOLID, Brokers (more or less, facades) or Business Commands will receive an injected ViewModel(s) (along with whatever repositories are needed), take what they need from it/them and do their necessary processing (mapping libaries can help the tedium of this). Depending on the scenario, the ViewModel can be updated at the very end to reflect any server side updates (e.g. an entity being created and an id was assigned) and that is returned back or just a simple generic success/fail response. I know there is hesitancy from a stand point of cycling through each ViewModel in order to process/commit data (you having that instinct is good, imo) but its a necessary evil, they are the glue between the client and server processing. If this were a 101 Programming scenario where a form has a perfect 1-to-1 match of fields and table with no validation then probably a bit overkill, but that isn't life outside of academia. As long as you aren't needing to access/cycle through many times and do it in stride with processing the request, it is fine. Hopefully that doesn't confuse things but long story short, the motivation behind separation of concerns is a valid one when working large scale.
The salt is added to the password before hashing. Not to the hash. The purpose of the salt is to make rainbow table attacks harder. If two users have the same password, the user specific salts will cause the two hashes to be different.
No, they have tweaked things based on your subscription level over time. I previously had access to "ultimate" but now it's "enterprise". I think part of it has to do with them changing the feature level and renaming the level every time there's a new Visual Studio. My ultimate was 2013, my enterprise is 2015. It's also possible your company changed its level, though they don't make it easy to do that. You can't downgrade, only buy a new sub at a different level. 
Given the environment and scope, this is the answer structure I would be looking for. Anything less is procedural, and much more would be over-engineering. Any feedback I have on this is nitpicking and/or stylistic.
Perhaps. Could also be a standard `for` loop but runs until the amount owing is zero (or less). On a side note, I would suggest that you use nice variable names besides `P, A, Y, M, R, N`.
Thank you guys for the help! Gladly, my professor said the code I submitted was what she was looking for. Obviously there was some more efficient ways, thank you for the help and I'll remember the advice!
If you want to fall even more in love, check out WebAPI OData query extensions. They allow you to use odata query parameters to filter, sort, select and expand on your data straight from the client with 0 code. Theres no in memory processing of result sets as it operates directly on IQueryable through the use of Linq extensions to pass it through to the underlying provider. Its a godsend for a front end to SQL or using a queryable supported orm like EntityFramework. Server side paging for free is pretty sweet. 
Wow, thanks for the info. That looks really, really nice. We're using an in-house DAL, and nothing that implements IQueryable, but that is great to know about. I haven't messed with EF much at all yet, but options like that make a pretty strong case for it.
That sounds amazing. I'll have to give that a try just to see.
Most people's arguments against EF is that it's a slow pig. I use EF here with lazy loading disabled and the bottleneck is usually the json serialisation, and not the DAL classes. IQueryable support and Linq to SQL is just one bonus. Doing stuff like this is the real benefit 
The issue with EF is that it's easy to fuck up and build really shitty queries without realising it, whereas with stuff like Dapper because you have to manually write the query so you have to do it on purpose. EFProfiler us kind of a must have, but it's relatively expensive. One of those places where Visual Studio should really do that out of the box. Beyond that, the performance gains from using it are somewhat illusory since half the time you'll end up manually doing a lot of the same stuff Dapper avoids for the performance boost.
Probably a good point but I would argue that it's there to do whatever is asked of it from a Linq perspective which unfortunately requires a lot of nonsense in some scenarios. Its an ORM and not a BI platform, and all it does is facilitate data access - it makes no guarantee of how. For complicated stuff I wouldn't use Linq, but for simple dbset entity access its a stellar product.
It's fine for complicated stuff too, you just need profilers and/or a lot if under the hood experience.
This is an OSS project. It has no dependencies on proprietary components. May I ask what made you think that it does?
An alternate approach would be to use an in memory database, such as SQLite, and import each CSV into a table. Then you could do a simple SQL join.
It's not a binary choice, either. I like using Extension methods to build my queries, and if one is particularly bad, I can refactor the IQueryable query into an ADO.NET styled one. They work very nicely together.
Good point.
I prefer WebApis serving data to JavaScript SPAs. It promotes a better separation of concerns and (if you do it right) you can mock your api which lets you write the front-end completely without ever needing the back-end and helps immensely with testing. That said, MVC still has a place. It makes application workflow easier to hide, keeping it more secure and follows a more traditional, simpler pattern of "ask for html, receive html from server".
Any good resources for learning MVC Web API? It's always been something that I wanted to dive into, just not sure where to start. I was looking at some of the books but not sure which would be best.
dapper + ormlite FTW
It's a really good API and MS has done a nice job of evolving it. I've used ASP.NET MVC since version 1.0 -- which was really rough around the edges at the time, but still nicer than ASP.NET WebForms. What got me started was Steven Sanderson's "Pro ASP.NET MVC" book. In comparison to the latest version, this first version was much thinner, but he still managed to cover TDD, MVC, and Dependency Injection. This book seriously "leveled me up" as a software engineer.
Started a set of XAML animation examples. When I say "started", I've done one so far...gif on GitHub: https://github.com/ButchersBoy/XamlAnimationWorkshop
The following book is[ really good](https://www.amazon.com/Exam-Ref-70-486-Developing-Applications/dp/0735677220/ref=pd_rhf_se_s_cp_6?ie=UTF8&amp;pd_rd_i=0735677220&amp;pd_rd_r=HFARDR9NR6H36B2A1ZQK&amp;pd_rd_w=v5jux&amp;pd_rd_wg=t9qgJ&amp;psc=1&amp;refRID=HFARDR9NR6H36B2A1ZQK)! It's used by many developers as study material to make the Microsoft exam. Microsoft also has some awesome [video](https://mva.microsoft.com/en-US/training-courses/introduction-to-asp-net-mvc-8322?l=nKZwZ8Zy_3504984382) material.
Here's another version of this list https://github.com/quozd/awesome-dotnet
The guy who wrote this needs a smack. BCrypt.Net.BCrypt.HashPassword(password); Is the only way to use this function in the package's current state. Apparently the author didn't know that you're never supposed to name classes the same as the namespaces to which they belong... https://blogs.msdn.microsoft.com/ericlippert/2010/03/18/do-not-name-a-class-the-same-as-its-namespace-part-four/
May I recommend that you add PetaPoco
Honestly my quick answer to this is "just use Json.net". And then it'll just work. 
It's a third party library. Basically just a dll that your project will reference. You don't need to install anything on the server. 
I don't see how the network is related, it's just a DLL. Are you really sure that a DLL as part of deployment isn't allowed? Because frankly that's an idiotic policy isn't it? I assume you're not allowed NUnit, or Moq, either? Because those are third party. As it is you're going to have to write a bunch of extra code, costing the client money, because of a policy presumably dreamed up by someone with no idea what they're doing. If this was me I'd push back on that.
Thats a good resource as well. This list is for .net core stuff, the one you linked for .net in general.
You can submit a pull request, see https://github.com/thangchung/awesome-dotnet-core/blob/master/contributing.md
Oh that's silly, hadn't noticed. Since you probably only need two calls to that class, I'd personally let it slide, but it's an oversight indeed.
The standard way to do this is to store the salted hash of the password in the database (as you're doing). Then when the user tries to log in, you re-hash the password he enters (using the same salt) and compare the resulting hashed value to the hashed value stored in the database. If the two values are the same then it's a valid password. This way you never need to store the password - you just know that because the user-entered password hashed to the same value that you stored, then the user entered the same password. And you can use non-reversible hash functions since you never need to get the password back out. You're just comparing two hashed values for equality.
That's more of an advert for that website than anything else...
That only works if you hide EF behind a repository so that people can't accidentally make a hard delete on a table that only supports soft deletes. 
Not creating an account for this... 
By that I take it you mean managing the db context directly from the UI, without any kind of separation, may it be business logic or, god forbid, a repository. In this case you have a **lot** more things that people can do by accident. Exposing a Disable method instead of a Delete to the caller shows intent. Doing magic overrides on the very core only raises confusion in my experience. Furthermore, if we're talking accidents, and you must prevent data from getting deleted, then you don't leave it up to some magic setting/tweak/override in the application. You go to the database, and deny/not grant the delete permission for the user the application is running under.
In my opinion, the API should be designed such that you don't need one transaction to span multiple repositories. This of course means that you can't use the "one repository per table/entity" pattern. But that's ok by me because that pattern just leads to bloated DI graphs anyways. That said, pretty much any repository pattern can be tweaked so that the constructor allows you to pass in an open transaction. So I'm not really worried about it either way. 
This is a fair view but then the discussion on insert/update is uninteresting. More complex scenarios should be discussed to see how the interesting problems are solved.
It's trying to teach you the "decrement" operator, which comes in two flavours: prefix and postfix. The prefix operator decrements "x" first, then returns the value of x after the decrement. The postfix operator returns x then decrements it. So if x is 4, then --x sets x to 3 and returns 3. x-- returns 4 and sets x to 3. At least I BELIEVE that's how it works - the fact that it's confusing shows why code like "z = --x + --y" is HORRIBLE code. It's impossible to read. Compare that to the following: x--; (or --x; if you prefer that syntax) y--; (or --y; if you prefer that syntax) z = x + y; There's no way those 3 lines can be confused, while the one-liner is confusing. https://msdn.microsoft.com/en-us/library/dy3d35h8.aspx
/u/Sasken is exactly right and so is your answer, but for anyone who may have read this and still be confused, let's take your example line by line: 1. x = 4 // x = 4 (surprise!) 2. y = --x // x = 3; y = 3 // x is reduced to 3 and returned 3. z = --x + --y // x = 2; y = 2; z = 4 // x and y are both reduced to 2 and returned
You're welcome. =)
Great. BTW your EF examples for getting an item by ID should use Single or Find rather than Where().First()
Is it possible for the API to be updated? It seems really inconsistent to redefine "info" that way and I'm sure you're not the only person who's having trouble with it. In the non-success case he should be returning the same fields in "info", just leaving them blank. If he has nobody else using his API yet, this is the perfect time to improve it.
Passing the `Func`s is the correct way to answer the question you're asking; but I think the overall approach is wrong. Instead of writing what is essentially a [Busy-Wait](https://en.wikipedia.org/wiki/Busy_waiting) loop you should be using proper inter-thread signalling constructs such as [ManualResetEvent](https://msdn.microsoft.com/en-us/library/system.threading.manualresetevent.aspx). What you've actually done is badly re-implement [SpinWait.SpinUntil](https://msdn.microsoft.com/en-us/library/dd449238.aspx).
Go with the custom converter, but the better option is to refactor the API. If you cannot change the API data contract then the custom converter works since you can use the JSONReader to determine if the token is a boolean or something else. http://www.newtonsoft.com/json/help/html/CustomJsonConverter.htm This is what I mentioned before, but now I see the inconsistent return types: Use the JsonProperty attribute: http://www.newtonsoft.com/jsonschema/help/html/GenerateWithJsonNetAttributes.htm Or if you have the time write a custom converter for better speed. If serialization / serialization isn't your bottleneck, then you can go with the attribute.
For me, I'm currently messing with a program that's dealing with a lot of async calls. What would be nice is if, when the async methods are awaiting, the method that called into them would have local callbacks (events) that operate only while in scope. I'll admit I'm far from the best programmer here, but I'm running into situations where I'd like a check done after returning back from each async call. This seems like a compact way of doing that. 
Async stuff is already pretty poorly understood and this seems to add a bit of complexity. Out of curiosity, what is it that you don't like about the following? The syntax you give seems to be a bit less clear about sequence, can you elaborate on what you're trying to get to? public async void PlayMatch(Player player1, Player player2) { BoardState = await PlayRound(player1, player2); if(player1.IsInCheckmate == true || player1.HasForfieted == true) { Console.WriteLine("Sorry, player 1! You lost."); } else if (player2.IsInCheckmate == true || player2.HasForfieted == true) { Console.WriteLine("Sorry, player 2! You lost."); } else if(BoardState == BoardState.Draw || Round &gt; MaxRounds) { Console.WriteLine("The game ended in a draw!"); } Round = Round + 1; }
How is this any different than `if`?
Right now I'm dealing with my first serious attempt into asynchronous programming &amp; it isn't going well. I'm depending on several streams to read in &amp; parse a large set of very large files that are partially compressed. Here's what I'm doing (or trying to do): - For each file, use an async method to begin filling a file stream buffer. - Use another async method to read the buffer that is being filled (but not outrace it), parse its contents, and instantiate specific objects based on what is being parsed out. - Identify compressed chunks of data &amp; open deflate streams to handle them. I was thinking that the above-described functionality would help primarily with orchestration issues, among other things.
/u/Xenoprimate is right about adjusting your approach. Make the test thread wait on wait handles exposed by the server and client... server and client will signal their event once they're ready. But the bigger question is why are you unit testing the connection itself? It's safe to assume that the network layer is thoroughly tested already. Think about how you can abstract away O/S concerns and unit test your core logic. Tangentially related: I don't know what your client/server app is... but check out NetMQ. Might save you lots of headache.
Where is the *when* coming from? Is that a C# 7.0 feature? I can't find details on it on MSDN. It's being called from within the scope it exists within when a condition is satisfied. Kind of like raising an event. For me, I think this would be useful when returning from an awaited async call. p.s. And how are you including monospace text within a line? :o p.p.s. How come I never knew about try-catch-when? That's *kind of* what I'm looking for.
It's asynchronous. Something like a scoped asynchronous if-statement. I would imagine the JIT would treat them like call-backs though.
Use grave accents. Like so: `code`
Sorry for some missing informations. 1. I wold like together withe some people like a group. 2. I try to start a open source project. 3. In this project I will programme a professional video presenter not a player. 
Clarity is the main reason but Single does actually change the SQL being generated and the behavior. In fact I would not expect the example in the article to work (I think First only works after OrderBy)
Well played. Win win.
ASP.NET MVC, some small services to be deployed into docker, a bit of core.
Yeah, use VS '15' if you are just learning in that area. Microsoft VS releases are fairly stable, but you will have to reinstall when the supported release comes out, which can take hours on some systems. VS 2015 is battle tested at this point, but it might be missing some of the templates you need unless you install add-ons (like the .net core tooling support for VS 2015).
With this being a play machine it feels that 15 should be acceptable as an IDE. I appreciate the preview will expire. But that's not a problem to me right now!
I'd go with Adam Freeman's books on ASP.NET MVC instead, unless you actually are gearing to pass a Microsoft exam. Freeman's books will help you become an ASP.NET MVC developer, not just pass an exam.
If this isn't just for homework and you were making this for a real application...you might also use SecureString instances and an initialization vector, but it doesn't look like it matters for your current question :)
This is the route we are going towards as well. Javascript front end, with a cleanly separated .net backend. In theory this also makes it easy to implement different application front ends, or integrate with 3rd party vendors. That said, figuring out authentication for the front end is still a pain (JWT seems to be the present / future for the near term in this case) and if you just need something that works at all (and UX is not a concern), Razor still makes for damn fast development compared to the alternative.
I don't see the point of this. I don't see how this is any different from a simple `if` (in combination with `await` if you want it async).
Yeah but the semantic information that Single provides to the reader and the kind of error checking involved is worth the marginal performance cost.
Can you explain a little bit what's going on here? As I understand I should write &lt;asp:PostBackTrigger ControlID="TreeView1" /&gt; here and it will update page on postback? I didn't use any of UpdatePanel and Triggers before. I tried this, still not helping. &lt;asp:UpdatePanel ID="updPanel" runat="server" UpdateMode="Conditional"&gt; &lt;Triggers&gt; &lt;asp:PostBackTrigger ControlID="TreeView1" /&gt; &lt;%--&lt;asp:AsyncPostBackTrigger ControlID="" /&gt;--%&gt; &lt;/Triggers&gt; &lt;ContentTemplate&gt; &lt;asp:TreeView ID="TreeView1" runat="server" ImageSet="XPFileExplorer" NodeIndent="15" OnSelectedNodeChanged="TreeView1_SelectedNodeChanged"&gt; &lt;HoverNodeStyle Font-Underline="True" ForeColor="#6666AA" /&gt; &lt;NodeStyle Font-Names="Tahoma" Font-Size="8pt" ForeColor="Black" HorizontalPadding="2px" NodeSpacing="0px" VerticalPadding="2px"&gt;&lt;/NodeStyle&gt; &lt;ParentNodeStyle Font-Bold="False" /&gt; &lt;SelectedNodeStyle BackColor="#B5B5B5" Font-Underline="False" HorizontalPadding="0px" VerticalPadding="0px" /&gt; &lt;/asp:TreeView&gt; &lt;/ContentTemplate&gt; &lt;/asp:UpdatePanel&gt; 
Agreed.
Be-aware that tooling for .NET Core is not included in Preview 5. You could still use the CLI however.
Why log4net is not on the list?
Pls understand : --Programming is a passion and a job. Passion-wise, we can help you, as far as your project is interesting and in our range. Job-wise, we can help you, if you send money. --Working on a project with someone takes time, time is precious, so the choice of project depends on the trust we can place in it. You are unknown and your project is not defined : that is not a good start. --A small group of experienced programmer, that's called a medior to senior development team, and these kind of people already have job and passion-related projects, so you'll need to be waaaaay more convicting than you currently are. No offense. I think /r/MattyAlan gave the best answer anyway.
Last time I installed "RC" VS (one of the 2015 versions) it completely fucked up my development environment (installed somehow broken .NET 4.5 libraries). It was impossible to completely uninstall and none of the corrective options worked. Our IT is retarded so I had to wait 1 week for a goon to come to our office and install windows from scratch. That took 4 days because they're retards and didn't keep up their images across Office version updates. So no, I'm not installing other than RTM releases on anything but virtual machine. 
Oh jeez, I just should have read my code to a rubber ducky. I think if I flip the &lt; sign to a &gt; it will be fixed. I'll try that when I get home
Yes, you're right. it was a typo. I fixed it
I've learned the hard way to never install RC or less on your dev box. Create a virtual machine and put it there, otherwise you open yourself up to numerous errors.
VS seems stable enough but I've encountered a few bugs in Roslyn that ships with it. Nasty things too. I would highly recommend not using it for anything that would be deployed
This is not so much about designing a fluent interface as implementing one.
How is it asynchronous? What is its intended semantics? You have only shown syntax.
Ahh, thanks!
Method chaining, at least the type that's implemented by the programmer and not the language, always strikes me as sort of an ever-so-slightly bad practice. You're essentially changing the program's behavior in order to skip some keystrokes and/or make your source code pretty. Instead of returning a meaningful value to the caller (or reserving a spot for a meaningful value in the future), you're returning a redundant one, a value that you know the caller already has. Without context that would seem like really bad method design. I would love to see languages implement something, e.g. maybe a special chaining operator, placed at the end of a method call, that would handle the chain for you without making the developer implement it themselves.
Removed: Rule 4. People will be happy to help you as long as you put in a concerted effort and make a worthwhile attempt. Take a shot at it, and if you run into a roadblock, post your code and explain what it's supposed to do and what it's doing instead/wrong. If you're looking for more rudimentary help in getting started, check out the resources available at /r/learnprogramming and /r/learncsharp. If you're looking for someone to have a one-on-one with, maybe check out /r/programmingbuddies. Regardless, I recommend you take a shot at it first and see where you get; whoever works with you will appreciate it.
Can't you just set the timer (at to a property in the class) to disabled in the event? I have done that before and it works just fine
The idea is that it is similar to a local function (that's new to C# 7.0), but it is intended to be used as a callback function when a series of conditions are met. When a call is returned after being awaited, if the conditions of a when-statement are met it is executed.
It's very easy to over- or mis-use the fluent design pattern, and I don't think the calculator used in the article is a good case for it. The snippet using `WebHostBuilder` at the top is better, though.
I didn't build what I am working on in a vacuum nor do I have an unlimited amount of time. I *can* do this in a different way, but this seemed a more compact way of doing things. I am dealing with very large files containing hundreds of thousands of records &amp; compressed data. Synchronously, it takes a very long time to parse the files &amp; process them. I am using several concurrent streams per file to deal with this quickly, with the streams reading &amp; copying asynchronously. After one of these async operations completes, in certain scenarios it would be convenient for me to check a series of conditions as soon as these async operations complete, particularly to help the concurrent streams avoid unnecessary processing. There are other ways to accomplish this, but I was thinking this was a compact, easy-to-read way to do it. Are there no scenarios where a local callback function would be convenient?
If you go with that approach then you have to be sure to check that property only after switching to the UI thread. Otherwise you still have a race condition. It's certainly possible to do it right, but in my experience most people get it wrong, and when it's done right it's ugly and inefficient. A `DispatcherTimer` is so much easier to use and easier to reason about. 
interesting
I would go with [System.Net.HttpWebRequest](https://msdn.microsoft.com/en-us/library/system.net.httpwebrequest\(v=vs.110\).aspx). Create a request, then use a StreamReader to read from the request when calling GetResponse(). Any deserialization would be done at this point as well.
RestSharp can make a lot of basic tasks simpler and more convenient, although personally I'm not a big fan of its API. The latest official HTTP feature/library would be `System.Net.Http.HttpClient`.
&gt; That’s mightily impressive for a company that used to think that Linux was a cancer and needed to be wiped from the Operating Systems map. Especially when you think that only two of those OSs are Microsoft ones and that one of the others is macOS, which means that two thirds of that list is comprised of open source OSs. They don't do it because they like Linux that much, but it's needed to extend their market.
If starting the server and connecting the client are synchronous the thread blocks until they are complete. If they are async, then you should await them. Either way the thread sleep should not be there. Your connection should throw a timeout if it is taking too long. 
Reactive Extensions is probably a decent way to deal with it, but it has a significant learning curve. 
I can't send full code for security reasons, and I already put all code that is used in my post. treeview node just has path to file that is used in transmit. I already googled whole internet and the only working solution for me was that fix by javascript. Question is already up on stackoverflow for 2 days but still no answer, I can set bounty on it only tomorrow. I'm just asking everywhere where I can :)
And MS is such a big company that it's not feasible for their divisions to only compliment each other. 
It is a nice concept, especially if you want coding beginners who have little time to learn the interface to write code for you.
Great post! I always wondered how taking the address of a string in C# somehow translated to it feeling like working with a cstring; despite my suspicions that the beginning of the memory referenced at "`&amp;str`" probably didn't just happen to be where the actual string data was stored. Now I know that the compiler is actually rewriting it secretly to actually make `c[0]` (where `char* c = str`) correctly point to an *offset* in to `str`'s memory.
I think LINQ a good example of it done well, Taking Collections and returning Single Objects or Nullable Objects, Multiple Objects, Changing the Object to another Type with your original object. Or returning TRUE/FALSE for Any() or a number for Count() etc 
Unless you are creating a builder, I think returning `this` is usually an anti-pattern. Instead a new immutable object should be returned.
here's an [example](https://www.asp.net/web-api/overview/advanced/calling-a-web-api-from-a-net-client)
1. Fowler lied when he said that fluent interfaces were rare. The term may have been new, but the pattern was well known by the time .NET 1.0 was released. 2. Bad link to his page. 3. StringBuilder! It is by far the most commonly used fluent interface used in C#. 4. Immutable objects, especially collections, should be covered. Aside from builders, most fluent interfaces should be immutable as well. 
Go over his head? If he has a good reason, that's one thing. But if it's just because he doesn't want to or because "it's hard" then that's no excuse.
I am going to once the boss comes in. He has said I don't know how to deal with it because I am too inexperienced and his API is fine. He also thinks changing INFO to null will break every other programming language.
Exactly, not everyone can afford proprietary software.
This gist shows how to do number 1 https://gist.github.com/NickStrupat/679423189eff65989b28e796ba87d049 Number 2 is somewhat doable, with libraries like https://github.com/jbogard/EntityFramework.Filters and https://github.com/jcachat/EntityFramework.DynamicFilters. Both have limitations. I forget exactly, but one of them doesn't work with complex types. I tried to wrap the whole soft-delete pattern into a library. I forget exactly where I left off but it is mostly done. You can check it out at https://github.com/NickStrupat/EntityFramework.SoftDeletable.
Hey, I was mostly testing stuff and was just wondering how stuff worked, but thanks for the suggestion ^^
&gt; Great post! thanks, glad you liked it &gt; Now I know that the compiler is actually rewriting it secretly to actually make c[0] (where char* c = str) correctly point to an offset in to str's memory. Yeah it's always fun to find out how some of this stuff works behind-the-scenes.
&gt;can't find any help in the webs so yeah... [Really?](https://www.google.com/search?hl=en&amp;q=Incorrect+Syntax+near+'user'&amp;safe=off&amp;lr=lang_en)
If you like fluent code then consider this approach: http://blogs.clariusconsulting.net/kzu/how-to-hide-system-object-members-from-your-interfaces/
that's because your column in table is named user and user is reserved keyword, so in order to use it in your query you have to surround it with square brackets, like this: insert into password ([user], salt, hash) values ... take a look at this list of reserved keywords in T-SQL
Are you calling the method? I don't see anything in your main entry point.
Yeah, I would kill for something like Clojure's "threading macros" (e.g. `-&gt;&gt;`) in C#: (-&gt;&gt; [1 2 3 4 5] (filter odd?) (map str))) returns `["1" "3" "5"]` `map` and `filter` are just normal functions that take a collection as their second argument, and the `-&gt;&gt;` threading macro will take the output of one function and make it the second argument of the next function. So it makes every method chainable for free, as long as the types match up. 
Removed: Rule 4. What you're asking is a very, very rudimentary aspect of C#. Check out some of the learning resources in the sidebar, and check out /r/learnprogramming or /r/learncsharp. Do some learning and make an attempt. Then if you're still having issues, repost it including the updated code and description of the problem. EDIT: That said, once you do call the method, you'll have to provide it a multi-dimensional array. Again, resources are available for that, but that's what `minolovec` is.
The term your looking for is soft deletes. Let me see... Yes here it is... http://mobile.codeguru.com/csharp/csharp/soft-deleting-entities-cleanly-using-entity-framework-6-interceptors.html This allows you to intercept the delete/removal calls and apply the logic you desire. Pretty easy actually.
No use interceptors instead. This does two things. 1 you don't have to do weird things to "remove" and object. 2 your repositories business logic are/is completely unaffected.
The article is bad in a many ways, not least of which is that it looks like it was written before EF 6. I highly recommend looking into EF 6 interceptors for this. The other points about logging and access honestly should be handled on the db side as much as possible. 
No idea what you're talking about...
&gt; When will C# be able to compile and run, using .net libraries on OSX? It is already, for a long time, using [Mono](http://www.mono-project.com/). It does not feature everything .NET offers (e.g. it misses WPF), but it's good enough. Besides there is also .NET Core now. &gt; I see something about .net core, is this just a portable version of .net that is slowly adding in apis and will eventually get to use the same full API that the .net framework currently has? .NET Core has a different focus. It will **not** get the same feature set as .NET. Mainly it will not get GUI libraries (at least not officially by Microsoft). &gt; Anytime soon, is the full visual studio coming to OSX? No. Never. Visual Studio is too heavily tied to COM, WPF and the Win32 API. There's no way they'll port this to Mac OS X or Linux. It would require a complete rewrite, which is just not feasible on an economical standpoint. &gt; If it does come to OSX, will it include some kind of WYSIWYG editor that visual studio is known for? Question is obsolete due to question 3.
It is highly likely your code will work perfectly. Here is a compatibility list: http://www.mono-project.com/docs/about-mono/compatibility/ I've compiled some fairly advanced projects and have run into no issues.
Yes, it's mostly compatible.
got a web demo of something similar? I like a challenge :)
&gt; Is it possible to use the designer in 32 bits instead of AnyCPU in Windows Forms? Sure, why not? &gt; the original programmer hacked his way around the core principles of Windows Forms What's the meaning of this, exactly? &gt; Is there a way to work in the designer if I set the build platform to 64bits? That shouldn't really matter. Visual Studio's form designer doesn't care about your target architecture. Could you tell something more about your situation? It's hard to give any advice, maybe I just don't fully understand your problem. So the form designer does not work for you because you reference some libraries with some UserControls that don't work?
Hi so I think I understand how you've got this structured. You could perhaps use a recursive call to iterate through them all. It might look something like this.. private void ModifyGeometry(CombinedGeometry combinedGeometry) { //Do whatever you want to the rectangle //combinedGeometry.Geometry1 = if(combinedGeometry.Geometry2 != null) { ModifyGeometry(combinedGeometry.Geometry2 as CombinedGeometry); } } This certainly seems difficult to work with though, is there a reason the 64 rectangles are not held in a List or collection that's easier to work with?
RESTSharp and NewtonSoft Json Nuget packages is all you'll need!
Actually this app is used for creating audio visualizations and I can create or update 64 shapes multiple times a second without issue (although my [computer](https://www.amazon.com/gp/product/B01B96MNNA/ref=oh_aui_search_detailpage?ie=UTF8&amp;psc=1) is quite good, so i can run the Oculus) But in this case with the number of CombinedGeometry it seems to have an issue. I have cut the number down to 16 and it it works... but still a bit slow. The issue in this case is that I need a shape with rectangles cut out... I'll take a look at WritableBitmapEx to see if it can handle my needs. Have a great weekend
Could be a little of topic. But in professional project you won't be using the designer much. You mostly generate the ui through code hand written, because you will get design guidelines.
Ah, ok, that makes sense since VS is running as a 32 bit process. I never had an issue with that, because every time I could not use AnyCPU for something WinForms related I had to use 32 bit. Well, if you don't want to spend the time extracting your UserControls into a different assembly and compile that with AnyCPU maybe just go on like the developer before you and work without the designer. If your UI is simple that shouldn't be that much of a problem, but if your UI is complex than it's totally a PITA. The good news is that recent versions of VS support Edit &amp; Continue on 64 bit applications, so maybe you could develop and tweak your UI while running/debugging the application...
Definitely yes, although it didn't work with NLog.
The view Part is good and i use it all the time. But to Drag around the Items. In my Personal Projects i Drag and Drop but at work i program the Position etc. Sorry if i wasnt clear.
In a professional project? You mean in a really big project? This is a professional project too, even if it ain't commercial. 
Yeah, I guess I'm going for the broken window syndrome. Still, fixing this would save me so much time and effort, which I could use for the actual research. 
So, I found a kinda hackaround. The application does compile in 32 bits, but some parts don't work in runtime. That means I can build in 32 bits, use the designer and then switch to 64 bits to debug. The worst of this is not the switching, but the necessity of reopening the designer windows every time I switch back to 32 bits. I do wonder why Visual Studio is not 64 bits yet, as I saw complaints about it dating from 2008.
Can you try running your SqlCommand like this? string sqlQuery = "INSERT INTO password([user],salt,hash) VALUES(@user,@salt,@hash)"; SqlCommand cmd = new SqlCommand(sqlQuery, conn); cmd.Parameters.AddWithValue("@user", username); cmd.Parameters.AddWithValue("@salt", usersalt); cmd.Parameters.AddWithValue("@hash", hashedpassword); cmd.CommandType = CommandType.Text; cmd.ExecuteNonQuery();
Are you checking the database directly (SQL Management Studio or the Server tool inside Visual Studio) or through code?
both of them show nothing in it 
Can you confirm that button1_Click() is being called?
&gt;but using areas means basically that all the apps are only one runtime... I don't know what OP wants but if he/she wants to use separate runtimes then it would have to be separate projects (and that would require manual effort to keep the links to each other correct, if there are any). You are right about using multiple subdirectories under one website, it would all use one port, it works in IIS. I didn't know about Kestrel, I am reading up on it now.
It is, and here's something I found, the select works when the username and password have been added, but if I close the form and reopen it, if I click to select them again it just picks up nothing
Hmm...can you post your database schema?
In each function try closing and disposing the connection. It gets open again in each function.
doesn't work, sorry m8
One last thing: maybe, this is your case as well: http://stackoverflow.com/a/31605045
Those are some weird conventions you are using.
What is that "PdfGen" library you are using and how good is it? I've yet to find a good html to PDF library.
Looks like the default VS2015 dark theme to me
Isolate the code. Test the insert statement with dummy data to ensure your db connection string is open properly and the data is being inserted. The word password is a sql keyword that might be messing you up. Trying a different table name if you know it's not the connection string might work or try to encapsulate it with []
Some suggestions: * Consider marking your constants with `const` or `readonly` * Consider defining an enum for the exit codes. * Remove the null-or-whitespace check on args.ToString(). That's going to give you "System.String[]", which will never be null or whitespace, and there is no point in you checking it either. (You can also remove the null check on args as it should never be null.) * Actually *use* the args array instead of parsing the command line manually.
Helpful API but you can create a cache, specially on web, will improve the response time.
Is your click event handler hooked up on button1? Sounds like that method isn't even being called.
Are you writing your converter from scratch, or is it like a wkhtmltopdf wrapper?
https://developer.paypal.com/docs/classic/api/merchant/SetExpressCheckout_API_Operation_NVP/ Only thing that stands out to me is this: &gt;Note: If you specify a value for L_PAYMENTREQUEST_n_AMTm, you must specify a value for PAYMENTREQUEST_n_ITEMAMT. It looks like you're not specifying PAYMENTREQUEST_n_ITEMAMT in the request, but it is included in the response.
Thanks, I actually just found the solution. My request is fine, we're using a third party service called Taxamo and they are hosing my request. When I send it straight to paypal, instead of through them, it comes back with what I need. 
Great idea! I wrote to the author, if you want to follow: https://github.com/CristianoRC/DotCEP/issues/4
Thanks for the input guys! @nova-geek Areas sound great tbh! I think this is how they may work in .net core: http://stackoverflow.com/questions/36535511/how-to-use-an-area-in-asp-net-core In the meantime ive been plugging away at this and ive actually got it working with different projects and different ports/webservers. So ive got "localhost:9090" showing what will be the main page and "localhost:9091/countdownsolver" showing my countdown solver app. The only thing I dont like is if I take "localhost:9091/countdownsolver" and delete the "/countdownsolver" part and visit "localhost9091" it still shows the countdown solver. Ultimately localhost:xxxx will be replaced by "dotnetapps.uk" and so in practice that would mean there could potentially be two different looking websites with "dotnetapps.uk" depending on the particular port the current window.location is set to. @laur3d I am running nginx on a windows vm and its doing what you describe, it serves as a reverse proxy since this vm also hosts some tomcat websites as well. Im gonna investigate using Areas on dot net core because people are talking about that and it seems to be a more popular thing than what im attempting to do with the multiple webservers/different port per server. EDIT: What approach do you guys think I should take? One project with Areas? Or multiple projects with multiple webservers and a different port per server?
I dont know, if they need Kinect or LeapMotion... But https://github.com/openhardwaremonitor/openhardwaremonitor would need a little help! :)
No. Just no.
PdfSharp looks good http://www.pdfsharp.net/?AspxAutoDetectCookieSupport=1 Also a huge bonus is that it's neither a paid for solution or GPL! MIT, so you can do whatever you want with it.
Elaborate?
You poor soul... 
http://stackoverflow.com/help/how-to-ask
Have you looked into KeePass? I've started using it recently as everyone else on my team does. https://en.wikipedia.org/wiki/KeePass 
How about a Kinect game like "Hole in the Wall". Seems rather "simple" for beginner's Kinect game.
Trust me... It is
You need to explain me how to do that .-.
Have you had any experience using the SDK or scripting to integrate it with home grown applications? It looks like it supports active directory too which is a big plus.
desktop. EDIT: I should clarify a desktop application that connects to a WCF service for data access and authentication.
Did you work on that? I looked at the code before and saw numerous issues and big violations of best practices and no proper testing. Also WinForms 😷
More details about what you're building would be helpful, but I think if the error occurs when printing to the screen, that is where you should test the length and restrict what is being printed, rather than worrying about what is being input. string input = Console.ReadLine(); int charLimit = Console.BufferWidth - Console.CursorLeft; // Print characters that will fit on the screen Console.Write(input.Substring(0, charLimit)); // Or you can only print when the entire thing fits if (input &lt;= charLimit) Console.Write(input);
Yeah, basically. Bonus points if you can make the thing work with [Virtual Desktop](http://store.steampowered.com/app/382110/).
… a glory-hole?
What I don't like about power apps is the lack of true on-premises. The gateway doesn't count. For me to consume an in-house database, I still have to deploy to a cloud based server and setup a gateway. This alone will prevent adoption. 
Rather than looking for the "blue" rectangles, maybe treat the problem like a [flood fill](https://en.wikipedia.org/wiki/Flood_fill). Iterate through the entire array and keep track of which cells you check. Once you hit a "white" cell, start a flood fill on it. If the flood fill results in a solid rectangle, then you have a positive result. Keep going until all cells have been checked/flooded. Use the "Recursive flood fill with 8 directions" flavour of the flood fill to catch corner-case scenarios where you have a rectangle _except_ at the extreme corner (like in this case if cell 33,55 was "white"). This works well when you have to deal with (like in this case) "blue" sides that are shared with multiple rectangles, or you have non-rectangular shapes, or you have encompassing rectangles (like here from 33,55 to 41,63).
Encrypt passwords with certificate. Store in database. Encrypt certificate with drapi for each system and user which should have access store in database. When needed. Decrypt certificate with dpapi. Decrypt password with certificate Edit. This is if you need to be able to use password in plain text. If you want to validate a password. Use a hash 
It'd be nice to have a free portable tool to use a webcam to tell where a person is looking and focus on that window on-screen. As complex as it sounds it shouldn't be too difficult, some calibration would be necessary obviously (distinguishing where a person is looking relative to the camera and person's distance from the screen) but with the existing libraries and their accessibility it should be smooth sailing. If you wanted to get a bit more advanced with it you could have a person swiftly look down to minimize windows, swiftly look up to maximize, and implement hand gestures. tldr; I'd like to not have to use my mouse just to focus on things to use my keyboard, yes there's alt/win-tab but it's not nearly as fast and the first choice generally ends up being the wrong window :(
I'm not sure if this is going to help but I saw this solution to 2D array initialization and this MAY work: https://medium.com/@bartobri/applying-the-linus-tarvolds-good-taste-coding-requirement-99749f37684a#.vg5tkyu9c
Look into emgucv. It is a .net wrapper for openCV that is optimized for working with arrays. 
Write a C# program to install Python ;-)
project.json is going away soon anyway. I wouldn't waste time trying to shore up tooling...
This will be initialized with 0. All fields are automatically initialized. Uninitialized **local variables** are not allowed.
Thank you.
That too... But I meant something like, I believe it's called, "The Wall". This one plays one a family friendly channel.
PascalCase and all caps variable names? How does that look like a standart C# code to you? Personally it hurts my eyes.
Yes, I am aware of that, but this is a problem me and my team are facing now and I don't want to wait some unknown amount of time for Microsoft to change their mind again.
I thought best practice was to never trust auto initialized values.....maybe that was something from C that i just carried over into c#
Generally speaking, it's fine to trust them. Their values are explicitly defined by the C# spec. That being said, there can be some corner cases I suppose. To mind would be a user-defined `enum`. Say you have: enum PowerAction { StayOn, Restart, Shutdown } class Computer { private PowerAction Action { get; } //assume default value is `StayOn` since it's the "zero" value public Computer() { DoTheAction(Action); } } This works all fine and dandy. But later on the developer (or the third party maintaining `PowerAction`) decides to reorganize it to: enum PowerAction { Shutdown, Restart, StayOn, } Now when you recompile your program, all of a sudden your default `Action` value in `Computer` is set to `Shutdown` since it's the new "zero" value. This is really the only case I can think of that might be dangerous. Hmm... maybe switching a custom type between a `struct` and a `class` could introduce some change in behaviour (as it would switch between a default "zero" value of the value type and a `null` value of the reference type) but that's probably even more obtuse. Definitely any built in primitive type (e.g., `string`, `int`, `double`, etc.) you're definitely safe to assume the auto-initialized value. That all being said, do explicitly set the initial value even if it's the same as the default "zero" value if you feel it enhances the readability and maintainability of your class.
That is something you carried over from C or C++. There the fields are not auto-initialized, so you end up with whatever randomly is in the memory. But in C# every field is automatically initialized with a default value.
string is not a primitive type. It is a keyword for a class type String. 
Removed: Rule 1.
Removed: Rule 4.
I have no code I do ownly know that ther is a way.
1. What's the purpose of this? Why not just use Git and add a second remote repository to push to? 2. Why are people still using CodePlex? A platform that is pretty much abandoned and dying.
I could see why something like this might be useful, although it sounds very similar in scope to this tool http://wf.codeplex.com/wikipage?title=Clean%20Project%20Overview&amp;referringTitle=Documentation (no longer updated) but I'll check it out when I get a chance.
&gt; TopLevel = false; I checked and the only MdiParent is the MainForm And where am I supposed to put that TopLevel=false; ? In the MainForm_Load?
You might want to look into "numerical methods for solving non-linear equations". That should give you faster algorithms. Aside from that if you already know the shapes perhaps you could pre-calculate the coordinates and then at runtime just scale/translate/rotate them appropriately?
my workplace currently is home. whats a bug bear?
It's because your `Main` method's local variable is typed as `Beverage`, not as `CondimentDecorator` (or `Mocha` or `Espresso`). When you call: Beverage espresso = new Mocha(espresso); Console.WriteLine($"{espresso.GetDescription()}"); // Unknown beverage C# will look at `Beverage` and try to figure out what method "GetDescription" should be tied to. We find: public virtual string GetDescription() { return description; } The runtime recognizes that this is a `virtual` call so the method _might_ be overridden. If you use `abstract override`, you're associating all derived class's overrides to be an override of this base `Beverage.GetDescription` method. So when executed, the runtime will resolve the call to `Espresso.GetDescription` or `Mocha.GetDescription`. They're all linked. However, when you use `abstract new`, you're telling the runtime that this is a _new_ `CondimentDecorator.GetDescription` method that has **nothing** to do with `Beverage.GetDescription`, even though they happen to have the same name. In this case, `Mocha.GetDescription` and `Espresso.GetDescription` are overriding `Condiment.GetDescription` and _not_ Beverage.GetDescription`. Thus when you call `espresso.GetDescription()` in your code (which remember is typed as `Beverage`), the runtime doesn't find any overrides of `Beverage.GetDescription`. If you strongly typed your code against `CondimentBeverage` or the concrete subclass: CondimentDecorator espresso = new Mocha(espresso); Console.WriteLine($"{espresso.GetDescription()}"); // Espresso Mocha The C# compiler would ask, "What method exactly are we looking at when we call `GetDescription`?" Starting from the subclass, it would find the `CondimentDecorator.GetDescription` method as the starting point, when it would then look for overridden methods. Another way to think of it is like this. With `abstract override`, all your methods have the same name and are linked. But when you make it `abstract new`, you may as well had rewrote the methods with a new name: public abstract class CondimentDecorator : Beverage { .... public abstract new string GetDescriptionWithANewName(); .... } public class Beverage { .... public virtual string GetDescription() { return description; } .... } public class Mocha : CondimentDecorator { .... public override string GetDescriptionWithANewName() { return beverage.GetDescription() + " Mocha"; } .... } Beverage beverage = new Mocha(espresso); Console.WriteLine($"{beverage.GetDescription()}"); // Unknown beverage CondimentDecorator mocha = new Mocha(espresso); Console.WriteLine($"{mocha.GetDescriptionWithANewName()}"); // Espresso Mocha
It's a problem with the metroframework. I ran into the same issue a year ago, I never found a solution. I ditched the MDI layout and just made the child form modal. Others have run into other issues with that framework: https://github.com/thielj/MetroFramework/issues/54 I just reproduced the error and the exact English translation is: "Only top-level controls can have an owner." Just ditch the mdi with metroframework and use ShowDialog. 
It's basically 2.5bn rows of verification data for a secondary system. While it will be accessed frequently, it's not all that complex. We have done multiple multi-million row databases with more complex requirements and usages, but those weren't accessed nearly as much. Maybe once a week or once a month versus multiple times a day.
I wish people called big data what it really is: statistics
Big Data is a measure of consumption complexity. You can get pretty far with simple data-warehousing, even against massive data sets. Big Data is when you need complex statistics, machine intelligence, or deep real-time insights, and off-the-shelf solutions can no longer give you what you need when you need it. Big data is about having the need to brew your own data intelligence stack.
Ideally you shouldn't deserialize as a dynamic type, you know the format that the response is in. So you should create some concrete types to represent that and then a simple LINQ query of "response.follows.Select(p =&gt; p.display_name)" will get you just the display names
I think you could even use something like this to make the class for you. http://json2csharp.com/
it looks mostly good .your response might be structured differently response.Content might be response.Data is correct you should breakpoint it on response and see what it is. 
I see this Dell and I rise HPE Superdome X with 24TB of RAM.
Method chaining like: root.SomethingReturnsAString().Trim('-').GetBytesExtention().Base64EncodeExtention(); is not the same conversation as Fluent Interfaces Fluent interfaces are just builder patterns with better named methods. You're specifically operating on a single object where setting it up could be very conditional and can better be better accomplished in steps. When you're done calling all the methods that you need, you still have the same object that you started with (at least as far as the client knows) but now it's ready to be used. 
Not technically a bad thing so long as it inherits from Calculator. In fact, in LINQ (which is a builder pattern for building decorators around iterator), it appears that you're getting back IEnumerable&lt;T&gt; with each method which makes it easy to assume it's just a collection. What you're actually getting is one of several flavors of an Iterator.
It's not just method chaining... you're changing the state of same object. It's a builder.
Are you sure you're not just misinterpreting another developer that wrote a builder? It's pretty easy to thing something is poorly designed when you're not looking at it the right way. For instance, if you see a class that implements some interface but it's just piping commands from that interface to some internally held object, you might think "oh man wtf is this contrived piece of crap?" but then I'll rename it to SomeAdapter and you'll look at it again and say "oh."
I actually did some stuff for the Twitch API when I was making a while ago. Here's how I handled grabbing and parsing a user's followers. Should be easy to convert this to grabbing what you want. EDIT: One minute, I need to find the library I used. EDIT 2: [I used this JSON parser.](https://github.com/facebook-csharp-sdk/simple-json) Works pretty well. EDIT 3: And here's the code I used: string followers = GetFollowers(@"https://api.twitch.tv/kraken/channels/" + Channel + @"/follows?limit=10"); JsonObject root = (JsonObject)SimpleJson.SimpleJson.DeserializeObject(followers); JsonArray follows = (JsonArray)root["follows"]; List&lt;TwitchUser&gt; newFollowers = new List&lt;TwitchUser&gt;(); // Add all the followers, and record the new ones in newFollowers to be passed through the event foreach (object obj in follows) { JsonObject follow = (JsonObject)obj; JsonObject user = (JsonObject)follow["user"]; DateTime followDateTime; if (DateTime.TryParse(follow["created_at"].ToString(), out followDateTime)) { var newFollower = new TwitchUser() { UserName = user["display_name"].ToString(), FollowedDateTime = followDateTime, }; if (Followers.Contains(newFollower)) continue; Followers.Add(newFollower); newFollowers.Add(newFollower); } else { //DebugOutputPanel.AddMessage(PluginManager.MessageType.Message, "Can't parse " + follow["created_at"].ToString() + " to a DateTime"); } } EDIT 4: [Here's the DLL I made for the Twitch API.](https://dl.dropboxusercontent.com/u/3136187/Twitch.rar) It isn't what you're looking to do, but it does work with both the API and IRC to grab data and send messages. EDIT 5: Using the DLL is relatively easy, but takes a few commands to kick on. [Here's the project I used it for.](https://github.com/RabidCrab/TwitchChirperChat) You'll find how to kick on and monitor the API + IRC in ChirperExtension.cs.
Wow, thanks! I'll give it all a shot. I'm really just looking for the simplest thing possible, but it looks like that code snippet might do what I want. [I am basically ripping off this project](https://www.reddit.com/r/Twitch/comments/2igqas/i_made_an_application_for_tracking_your_favorite/) and another Gnome 3 extension I use on Linux. Just a simple system tray application that tells you who is live, nothing more. I use Gnome 3 on Arch Linux all the time for web development but wanted something like it for Windows when i'm gaming. The Windows version linked above doesn't work anymore and there is no open source I could find. Which basically means its a good time to dig deeper in C# and .Net and make my own that is open source. If this project goes well then I might start doing more in .Net, probably web. I'm also tempted to make an Android widget that does the same thing, but that's a problem for future me.
I've had to deal with something this before... Ironically with a WebAPI and a partner. They wanted to do some hokey non-standard implementation of OAuth. We wound up dealing with it by grabbing the actual spec for how OAuth works, pointing at the thing they wanted to screw with, and ask "Do you think this is to the standard outlined here AT ALL?" They fixed their API, since they were an institution that dealt with some financial information and security people sometimes freak out when they hear 'not to spec' when it comes to security protocols/flows. Deviation from spec *potentially* (not always!) can lead to deviation in known security weaknesses was the justification on both our end and their security folk's ends. This looks like a user API, so you might be able to go that route, but keep in mind sometimes being done is more important than being right... even when it's this infuriating!
Login is authenticated with your local Windows password, your traffic is encrypted between you and the server and if somehow your sessionId was hijacked, the server would kill the connection. So unless you make this public facing with a really weak password, you're okay. 
One URL can only map to one controller method. Don't try to chain them that's bad practice. If anything, just make sure the code to retrieve your Sistemas is in it's own class (ex. SistemasRepository, SistemasProvider, etc) so it can be reused between different controller methods without repeating code.
&gt; The WinForms GUI is not the main goal! Except that it is the main goal because otherwise you can't see the data.
If you're inclined to pay go for Pluralsight. Their C# path is by far the best I've seen.
Great idea! A private dictionary&lt;string, TSettings&gt; class with some indexor or something to have several setting instances stored would be nice. Keep in mind you can change the name to what ever you want, though. The default name is the name of the class, no t the required name.
No problem, glad I could save you some headache. 
How does it handle scaling? Can I have this on multiple servers and be sure that tasks is only run once?
Sorry that question is a bit confusing, what do you mean exactly? 
Assuming you're using the proper windows apis that should be approximately as secure as remote desktop 
The Python explanation is a bit wrong, arguments that are native types (int, bool, floats, strings) are passed by copy the rest is passed by reference
Programming courses are meh. Learning by doing is the best way to learn programming, in my book at least
When I said "falls down" I was being metaphorical. You will see severe performance degradation if your working set exceeds your RAM. This is noted in the documentation, though they tend to downplay the extent of the problem. https://www.mongodb.com/blog/post/mongodb-atlas-best-practices-part-2 That said, I was wrong when it comes to the new WiredTiger engine for MongoDB. A quick search revealed to me that will literally hard crash with OOM errors, often long before you should actually be out of RAM. 
I think he is asking about multi machine support scaling. That is to say suppose I use this one 100 servers. Is there a way to configure it so that when some person requests a task to be done it chooses one of those servers and it only runs once on that server. (I think k that is what he is asking) 
Clearest explanation I've seen so far :)
Glad it was useful :)
I would first refactor your code. Why are you using `float`? A `double` should be fine here. I would also create a dictionary that holds the coffee by size (key), and then the price (value). And then just pluck out of the appropriate price based on input:- private static void CoffeeMachine() { var price = 0.0; var coffees = new Dictionary&lt;string, double&gt;(); coffees.Add("S", 1.00); coffees.Add("M", 2.00); coffees.Add("L", 3.00); while (true) { Console.WriteLine("Choose a coffee: S-1EUR, M-2EUR, L-3EUR"); Console.WriteLine("If you finished with your order enter END"); var input = Console.ReadLine(); var inputToUpper = input.Trim().ToUpper(); if (inputToUpper == "END") { break; } if (coffees.ContainsKey(inputToUpper)) { price += coffees[inputToUpper]; Console.WriteLine("Current price = " + price); continue; } Console.WriteLine("I don't understand. Please try again"); } Console.WriteLine("Please pay: " + price + "EUR"); Console.ReadLine(); } As for your current dilemma, you need to declare a starting value outside your loop, and then deduct from it after every selection. And make sure that you check it at the start of your loop.
So your solution is the one I ended up using. I am using the "One component at a time" algorithm from the wikipedia article and it is working to suite my needs. Basically in my implementation I have it so 0 == wall, 1 == outside, and anything else is an interior.
I'm taking it. It's amazing. 
Can you recommend me a C# book? 
pluralsight
Just search his username as the author, I'm sure he uses his username as his pen name.
Pick up a book on C# and start reading. Self-teaching thru reading will be the way to go as you get more and more advanced. Figure out what you want to code in C#. ASP.NET MVC websites? Windows Forms apps? Windows Presentation Foundation (WPF) apps? (The successor to Windows Forms), IoT apps? (like W10 for RaspPi.) Also, what did you learn in the EdX course. Did you cover LINQ? What about major design patterns like Dependency Injection? Or Test Driven Design? Or MVC or MVVM? Did you learn about ORMs?
That's true, but sometimes there's the issue of `you don't know what you don't know` and courses can help you find those little tidbits that are going to lead you down your next path.
The actual repository is https://github.com/Grauenwolf/DotNet-ORM-Cookbook
Having an unused reference can make two differences: 1. It can *maybe* make compilation slightly slower. You'll likely never feel this. 2. It can be marked "copy to output", in which case it's copied to output. This is done for NuGet, for instance, for dependencies *and* for dependencies-of-dependencies. In the latter case the reference isn't actually unused, but removing it would only fail at runtime. This is rather unfortunate :(. ReSharper, and other tools perhaps, can remove "unused" references, but can't, as far as I know, deal with issue 2 above. Edit: Note that an assembly reference is not actually put into the resulting assembly (dll or exe-file) unless it's *really* used, so in that sense it's not a problem to have 100 unused references.
&gt; I do wonder why Visual Studio is not 64 bits yet, as I saw complaints about it dating from 2008. IIRC they said because it would be too much work for too little benefit. At least they implemented Edit&amp;Continue for 64bit applications. In a large project I worked once we deployed non-AnyCPU assemblies in 32 *and* 64 bit (all 3rd party), and copied the right ones from a sub folder to the application startup path at runtime after starting the application. A bit hacky, but it worked perfectly, and we could compile all our assemblies with AnyCPU
That is exactly what I am asking. 
Shouldn't you also scan PATH for commands inputted, instead of only searching in aliasses you added yourself? I mean thats the core of most shells right, aliasses are just a fancy thing
Can you give further information about the Data gathered? Like, can I get my HS ratio out of it, game performance? To like, extract it and keep track of my own "skill-cap"? :)
No, sadly overall game stats are available via the webAPI, and are out of the scope for this library currently (might add it later). It is however possible to request your latest games and retrieve basic info about them. Current features go as far as the most basic things you can do in the main menu, such as retrieving player stats, retrieving gameinfo of playing friend, retrieving your recent games and retrieving live games. On the TODO list are item related operations!
cloud = Another server. It's really just PR jargon that sounds good. "We will host our stuff in the Cloud!" sounds better than "We will host our stuff on a server in a broom closet in Sri Lanka!" So - There is no difference :)
Not sure if it's the official way to tell but, *static* methods, fields and properties belong to a class, they don't require an instance, but they can only see other static members(methods, fields, properties) For Example: //Method that does logging Utils.Log("Hello World") Non-static (also called dynamic) members belong to an object, they can only be called from an instance such as `p` in your second example. For Example: //method that calculates the age of a person and prints it to the console person.PrintAge()
Technically correct, but true "cloud" applications tend to leverage the auxiliary features of platforms like AWS or Azure. But, as you say, some people throw their basic web application on a AWS server and call it a "cloud" app. To paraphrase Milhouse, "I've said 'cloud application' so many times, it's lost all meaning!"
If you want to do "cloud" and to be introduced to it's capabilities, I suggest looking into Microsoft Azure. Last time I checked, you can host non-production "cloud" apps there for free to test (and learn).
Looks like an introduction to object oriented programming. First code snippet is a class with a main method that calls another method. Second code snippet is a class with a main method, but it creates an object and then calls the method through said object. AFAIK the latter is used in larger programs. Instead of using the main method to list everything that needs to be done, you can simply create an object that represents the program itself. Then you put the relevant startup code in the program, not the main method.
First, read "formatting help" and indent *all* code lines by 4 spaces (and no backpings).
Where is that option?
I've just started. This is good to hear. 
The Productivity Power Tools extension has this feature, with a much smaller footprint than Resharper. If it's installed, right click project in Solution Explorer &gt; Power Commands &gt; Remove and Sort Usings.
&gt; Usings Usings are not references, though.
Jesus, that is the best analogy for static vs non static I've ever read. 
Thanks. I am still learning c# and never cease to learn some good practices.
You should use 'HttpClient'. It has a wrapper for content so you don't need to do that ugly string formatting. Also your post data looks really wrong. I doubt there's some kind of path send in there. Also you may look to write your code directly using tasks async/await as It's the standard for networking stuff. Also in theory your StreamReader should be wrapped using a using/try - finally block(they are the same using is just syntactic sugar). As mentioned here use fiddler or something similar to figure out the real data sent.
it is VSdark
I would love to use that library, however I am still fairly stupid with this stuff. Been Coding vbScripts for 16 years now, and switching to .Net is a huge curve. learning it fast. but I could not figure out how to read in a webpage and spit out a PDF with that library.
Constants in C# are sometimes all caps and sometimes pascal depending on what kind of style guide you follow. Either way, your variables aren't consts, but statics ;) I personally would probably use an enum for those exit codes. You'll get a little nicer intellisense that way, and it may prevent someone in the future from adding magic numbers to the program. 
there are slight efficiency gains for removing unused references. i believe metadata needs to be loaded at app start-up for all references regardless if you actually use the reference. when coding, you'll have less chances for namespace conflicts. because of the somewhat dynamic nature of c# (IL interpreted and then JIT compiled), it's kind of impossible to figure out with 100% certainty whether a reference is actually needed. however, ReSharper has functionality that attempts to do this as stated in comments. Right-click References and then choose either 'Optimize References...' or 'Remove Unused References'. there's this free extension that will attempt to do it as well: https://visualstudiogallery.msdn.microsoft.com/ff717422-f6a7-4f18-b972-f7540eaf371e it's important to note that these tools aren't perfect. they will attempt to discover uses of references in your code but they can miss some.
&gt; Edit: Note that an assembly reference is not actually put into the resulting assembly (dll or exe-file) unless it's really used, so in that sense it's not a problem to have 100 unused references. That is good to know.
are you retarded
Worth noting that it can be nice to clean them up so you don't end up with unneeded type collisions. Not a particularly big problem but another reason to not keep unused using statements.
I learn the same way. I find the best thing is to come up with a project or app you want to build, and then look for tutorials that would lead you toward your goal. The stumbling blocks you encounter along the way are often the most edifying when you finally surmount them. When you reach the end of your project you'll know a bunch of things you didn't even know you needed to know, and you'll have a much better grasp on where to go next. 
Thanks for the response. I totally see what you mean. I'm thinking I will shift my focus away from "these are all the things I think I need to know" to attempting to build something that peeks my interest and inadvertently learn all those things along the way. 
Depends. If you work at a company that has let project references and nuget and dll versions get messy then doing this is likely to break builds inexplicably, eg builds on your machine but not the build server because some DLL just happened to be on your machine. It can be a real bullshit mess to clear up, so it's best to nuke all unused references from all your projects right from the start to avoid things like that. No need to start ripping out System.Linq etc though.
Have you tried cleaning the solution and restarting visual studio?
Visual Studio does this automaticly for you. You just copy the json and then you can go edit -&gt; insert -&gt; insert as json and It inserts the json as struct for you.
Ahh, I remember not being able to get this to work with the free version I was using a couple years ago. I actually haven't coded in ages but still sub here :D
This happens all the time for me... The most reliable solution I've found is to delete the 'bin' and 'obj' folders within my solution folder. Usually need to close down Visual Studio first or the files can't be deleted. 
Personally, when I did that I started with a To Do list application. By the time I was done I had dove into the basics of: * C# in general * Class design * IO and Serialization/Deserialization (for storage) * Windows Forms (this was years ago) in general * Custom Controls ... and a few more features. All in a pretty small, simple program. And even that program was originally written in VB 6 -- I used my original program to get an idea of what I wanted, and rewrote it from the ground up in .NET. Start small, simple, and self-contained. Don't try for the Next Big Web Thing right off the bat, and don't try to rewrite Visual Studio or anything on the desktop, either. Once you have the basics of your app down, try to think of one or two smallish things you can add that are outside your comfort zone -- in my example above, I could have done my storage with a CSV or other flat file format, but I wanted to learn about binary storage and serialization so I went with that route. By the time you're done, you won't have something you can unleash on the world or anything, but you'll have a lot firmer base of knowledge from which you can start. Now that I think about it, one more thing: unless you are specifically trying to learn about specific libraries, don't overburden your app with libraries. If I'm understanding your question correctly, you're wanting to get a better grasp on the fundamentals of C# and start to dive into some more advanced topics, and libraries -- while handy as hell -- often provide shortcuts that keep you from learning that. I'm not saying you have to reinvent the wheel at every step -- I mean, you don't need to implement your own `IList&lt;T&gt;` when you can just use `List&lt;T&gt;` -- but be careful that you don't end up accidentally learning one library really well at the expense of fundamental C# concepts. Libraries are fickle and fall in and out of favor (or even in and out of continued development!), but learning the fundamentals will let you later adapt any library you come across.
Honestly, this is an easy problem. I literally can't think of a way to do it that wouldn't work. There are just too many good options and no real bad ones. So pick one at random and run with it.
You should be able to use the name of the DataGridViewTextBox to access its internals from within your "test" method. Make sure your DataGridViewTextBox exists in your class scope and not only a method scope. Once you've got the data you should be able to do anything you want with it inside your "test" method. 
Wow thanks a lot :) that's the kind of hint I needed :D
No auto-update to VS extension? wtf? Calling it "auto-update" is dishonest anyway: The most it did was tell you there is an update -- *which is exactly what I want.* I don't want to have to regularly check a website. 
Ok, I think I understand why. They seem say it is only in the near future and will enable autoupdate later on. Once things "stabilize"...
No need to delete these folders. Just cleaning the solution on Visual Studio will do the trick (which is almost the same thing).
Its not much of a TDD test and the docs do a decent job of explaining polymorphism. https://msdn.microsoft.com/en-us/library/ms173152.aspx 
&gt; Why is the loop a no go? Within a unit test there shouldn't be any control structures! That is a derived idiom by the fact, that a unit test should test only one aspect per test in order to enbale one to detect the failure quickly. This is can only be guaranteed, if the test doesn't *swallow* or *omit* results, what would be the case when using ``for`` and ``if`` in tests. I know there are devs who tend to disagree, but imho staying close to this principle saves you lots of pain (like *don't drink and drive*). And on top of this: there is no need for such things! Every major framework offers constructs for writing *parameterized* tests - so why use a loop at all? (The same is true for dealing with exceptions - besides that, ``if`` simply violates the *test-only-one-aspect-per-test* rule inherently) &gt; I think it's just using unit tests as a runner, each "test" is just a self-contained program entry point Ok. That's perhaps the intent - but imho it is dangerous, if you don't explain this and mix this with *intended* unit tests! As this approach could distract beginners, I would prefer the approach others take, for example the authors of the classic head first design pattern with their separate ``testdrive``-classes or the author of this [design pattern example repo](https://github.com/iluwatar/java-design-patterns) with a separate ``App``-class for each pattern.
Ok and how do I make sure the object is accessible from the button_click method?
Just try it to see if Visual Studio allows you to do it for starters. If not, we'll need to see your whole class source to be able to help figure out why you can't do it. You can use https://gist.github.com/ or something like that to upload and post your code. Edit: Here's (https://msdn.microsoft.com/en-us/library/aa691132(v=vs.71).aspx) some information about variable scopes. A quick summary would be that a set of opening and closing curly brackets - {} - define where a scope starts and ends. If you have a variable that exists only in a more specific set of curly brackets, such as a method, you won't be able to use that same variable in another method. However, if you create that variable outside of a method and within the curly brackets of the class you should be able to access that variable from within all of the methods in that class. For those wondering, the parenthesis in that msdn link above break the reddit link formatting. 
It will be accessible if you used form designer to create the grid.
I'll post some more code later (I don't have it on the computer I am on right now). Also worthy of note, I am not using Visual Studio. I am using the Open Source [VSCode](https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwio0J_KhojQAhVBzVQKHY1dBR4QFggoMAA&amp;url=https%3A%2F%2Fcode.visualstudio.com%2F&amp;usg=AFQjCNFJKyN71_pTGlo3tbjTpAWVghKtHg&amp;sig2=c_IeMyLZtEqf6j9MTEFWWw), a glorified text editor.
I'm not so sure. I frequently experience issues after cleaning, where those issues are then resolved by popping open bash and running `find . -type d -name bin -o -name obj -exec rm -rf {} \;`
Well, there are cases where you have to manually remove, yes, but from my experience it's usually not required.
Ideally, you'd have two separate tests for Tiger and Lion (because they are separate classes and implementations of IAnimal), with two (or more) assertions. Assert.True(tiger is IAnimal) Assert.DoesNotThrow(delegate { tiger.Breath(); }) and Assert.True(lion is IAnimal) Assert.DoesNotThrow(delegate { lion.Breath(); })
Convert tool not gonna happen. Your best bet would be to replace asp with angular or jquery and slowly convert dlls into apis that return json. 
Looked into it, seems a bit pricey, for just wanting to learn one of the courses. Do they have a single course option, or something similar?
https://github.com/AngleSharp/AngleSharp could be useful.
&gt; Your Lock vs. Interlocked example is a bit disingenuous since no one would use CompareExchange for that scenario. The interlocked method should be just something like: That's wrong, and this highlights the danger of working lock-free. It *might* be an acceptable tradeoff in a real application, but in your given alternative code (using `Interlocked.Increment`) the `counter` variable will likely be incremented *above* `COUNTER_TARGET`, by anywhere from 1 to (N-1) where N is the number of threads. In both examples I originally gave, `counter` does not exceed `COUNTER_TARGET`. In most (but not all) real-world applications, your alternative would be considered a bug. Therefore, we need `CompareExchange` in order to make a like-for-like example, which is slower than using `lock`. &gt; The only reason an Interlocked method would have worse performance than a Lock is in cases where the CPU level fencing is the dominant operation (very tight loops), which is far from the common case. It is only in the uncommon case however that you should be entertaining lock-free mechanisms, where it's the actual threading coherency constructs that are too slow. My point was that just swapping locked-over statements for `Interlocked` isn't a 'free win'- and it isn't. `Interlocked` constructs *can* be faster where there is not **very high contention**, which was the point of the blog post. 
Sorry but the 'counter' value is rarely what is being guarded against, but rather the code block that follows - which will certainly not be entered past the Target. 
1. Do you know if this is a good idea or is it more of a pipe dream of ours? 2. Okay, I figured there had to be a good reason. I'll be learning MVC for sure. 3. Can you suggest any books or resources I can read through to learn how to accomplish this? Thank you for your answer. 
Still a great library for day to day scraping.
&gt; I agree with you, and agree with the intent behind the comparison - I was just saying that the example is not exactly an accurate comparison. The thing about writing blogs is that you have to be really careful to make sure what you say is *absolutely* correct. If I'd used the example of `Interlocked.Increment` instead of `CompareExchange` I'm sure I'd have many people complaining that they're not equal comparisons (and rightly so- *especially* if I'd then declared lock-free techniques faster). &gt; P.S. I enjoyed the blog series. Thanks. Please don't take my terseness as irritation- I'm just typing quick responses because it's late at night here and I'm playing some games of Overwatch. :) 
I will agree that it isn't cheap but if you're serious about your professional development, it is well worth it. If you want to just try it out, they have a 10 day free trial. To be honest, though, I'm not sure what you mean by "advanced topics and concepts." There are plenty of courses on PluralSight that I would consider advanced but it sounds like there is only one on there that interests you. Regardless, if you are looking for something more intermediate, PluralSight has you covered. If you're looking for something more advanced than PluralSight can offer, maybe you should look into https://www.amazon.com/CLR-via-4th-Developer-Reference/dp/0735667454 Edit: I'd like to add that http://bafflednerd.com/learn-csharp-online/ was on this subreddit the other day and seems like a pretty thorough list. Free courses and never as good as paid ones, though (in my experience).
1. pipe dream...unless you do it programmatically. you'd effectively need to use some sort of scaffolder script to build out for every single page. 2. you're likely going to reset the app pool with every dll change defeting the point of making the change. 3. dont learn web forms, Razor templating is the way to go these days. Optionally you could use "Web Api" to design restful web services and go the single page application route. 4. do you guys use version control? How do you manage things now? 5. Pluralsight has a crap ton of videos on C# .Net it seems to be their speciality. Alternatively you could get a safaribooksonline account, however you'd learn faster with pluralsight. its like $400-500 for a single user account. I am thinking about getting it for myself as part of my "continuing education" 
Don't use winforms. Use Universal Windows (UWP) apps if you have Win10. If not, use WPF. This is a good UWP tutorial: https://channel9.msdn.com/Series/Windows-10-development-for-absolute-beginners
C# isn't the most suited for this. Python or PowerShell would be ideal. But you should be able to use the standard http client or something like RestSharp.
&gt; If each DLL call is returning a complete HTML document with the site's layout and everything, you have a ton of redundant HTML/code in the strings compared to ASP.NET layouts unless the VB6 code is composing the site as well (in which case he's written an entire view engine in VB6, the mad bastard). I almost wish I could show some of the source because while it is a bit crazy, it's also quite impressive. But yes, everything from &lt;html&gt; to &lt;/html&gt; is being concatenated onto a custom string class in VB6. I know there are quite a few security concerns, they're just being put off as a "fix after the upgrade" thing. The updating is a hang-up because we'll often update just little things in a single page and he doesn't want to have to upload an assembly that contains all of the pages when in the past he just had to upload a small DLL that was only for one page. He's concerned that the DLL will become massive at scale. Unfortunately the pages are quite dynamic and there's a ton going on in the DLLs to configure each page so there's no easy dumping of the HTML string. 
Cleaning wasn't working for me.
I totally agree with you and I've wanted to do a complete rewrite. The challenge is convincing the boss. It's going to be a huge task to unravel the code as is and his hope is to at least get something going on a modern framework before looking at the rewrite. 
The more I look into the current ASP.NET offerings the more I see that rebuilding from the ground up is going to be the best option. I just have to convince the boss of that too. 
VSS UUUUUUUUUHHHHH Have you accepted Git as your lord and savior?
Yeah, it's definitely showing its age. We have problems with it all the time. We haven't done any kind of research into what we'll move to but Git will be one of the options. I know everyone says it's the best. 
Why do you find Roslyn to be a piece of shit? 
I agree with you on WinForms. It's is akin to learning to operate a telegraph. Sure, it can get the job done, but we have better ways now. UWP is Windows 10 only. It'll be a (long?) while before corporate desktops are rocking 10. Best to stick with WPF to begin with as it will run on 7, 8, or 10. The only reason to go with UWP out of the gate is if you know it's going to be 100% Windows 10 all the time, or you want to submit your app to the Windows Store. Everthing you learn in WPF is pretty much directly applicable to UWP. Some of the semantics are different, but UWP was birthed from WPF so they are very similar conceptually.
 using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; class Program { static void Main(string[] args) { CoffeeMachine(); } static void CoffeeMachine() { // Define Dictionary to hold our coffee recipes. It allows us to lookup each by using it's associated input letter Dictionary&lt;string, CoffeeRecipe&gt; known_recipes = new Dictionary&lt;string, CoffeeRecipe&gt;(); // Add Small Recipe to dictionary CoffeeRecipe small_recipe = new CoffeeRecipe("Small", 1.0m, 200, 400); known_recipes.Add("S", small_recipe); // Add Medium Recipe to dictionary CoffeeRecipe medium_recipe = new CoffeeRecipe("Medium", 2.0m, 400, 800); known_recipes.Add("M", medium_recipe); // Add Large Recipe to dictionary CoffeeRecipe large_recipe = new CoffeeRecipe("Small", 3.0m, 800, 1600); known_recipes.Add("L", large_recipe); Console.WriteLine("*** COFFEE MACHINE ***"); Console.WriteLine(); // MAIN LOOP ************************************************************* // We use an empty for loop to infinitely repeat the code contained inside // until the break condition is met (see below). This use is probably not // the best of beginners, but it's more succinct that using a do/while for (;;) { Console.WriteLine(); Console.WriteLine("Choose a coffee: S-1EUR, M-2EUR, L-3EUR"); Console.WriteLine("If you finished with your order enter \"End\""); // Get User Selection string input = Console.ReadLine().ToUpper(); // Break out of our infinite loop on 'END' if (input == "END") break; // Lookup receipe by input provided by the user CoffeeRecipe selected_recipe; if (!known_recipes.TryGetValue(input, out selected_recipe)) { // The input does not match the keys of any of our recipes so report the error Console.WriteLine("I don't understand"); // Got back to the top of the loop and try again ... continue; } // New Line (look better) Console.WriteLine(); // selected_recipe now contains the CoffeeRecipe the user selected, so lets report the price and get confiramtion Console.WriteLine($"The cost of your {selected_recipe.Size} coffee is {selected_recipe.Price} EUR."); Console.Write($"OK (y/N)? "); // Get the key press of their answer. Anything but Y cancel the order and returns to the top of the loop for another iteration ConsoleKeyInfo key_pressed = Console.ReadKey(); Console.WriteLine(); if (key_pressed.Key != ConsoleKey.Y) continue; // Brew the coffee Coffee coffee = BrewCoffee(selected_recipe); // Dispense coffee DispenseCoffee(coffee); } } static Coffee BrewCoffee(CoffeeRecipe coffeeRecipe) { // Calcuate volume of brewed coffee (95% water, 5% coffee) double volume = (coffeeRecipe.WaterAmount * .95) + (coffeeRecipe.CoffeeAmount * .05); // Brew Coffee coffee = new Coffee(coffeeRecipe.Size, volume); // Return Coffee return coffee; } static void DispenseCoffee(Coffee coffee) { Console.WriteLine(); Console.WriteLine($"Here you go, enjoy your {coffee.Size} ({coffee.Volume}ML) coffee!"); } } // A simple class to hold our coffee recipe informaion class CoffeeRecipe { public string Size; // Alway use decimal type for money as it is not subject to rounding errors like doubles public decimal Price; public double WaterAmount; public double CoffeeAmount; public CoffeeRecipe(string size, decimal price, double waterAmount, double coffeeAmount) { Size = size; Price = price; WaterAmount = waterAmount; CoffeeAmount = coffeeAmount; } } // A simple class to hold information about our finished coffee class Coffee { public string Size; public double Volume; public Coffee(string size, double volume) { Size = size; Volume = volume; } } 
Yep. You can scrape using jQuery and Ajax if you want to.
How does it fare for general programming/compsci concepts? Is it purely a great "learn C#" path, or does it teach things that are applicable to most other (OO) languages? (paging /u/brcoder too)
While git had a steep learning curve it makes working with a distributed team super easy. It also makes branching a joy and not a pain. Compared with perforce I'd have to make 4-5 commands to make a proper branch. With git it's one. 
IMO it is, but if C# is what you are most comfortable with then go with that.
Just a pure guess from the color scheme: [Empty Keys UI](http://emptykeys.com/)
It depends! If you have some kind of strategy, it is often better to have one test for the interface and use that one (via generic-subclasses) for all real implementations. If the implementations are more command like stuff, you would probably test the *specific* behaviour rather than a common result.
Thats it, thank you. 
For a web scraping task like this, a scripting language is usually more suited. PowerShell has everything needed to perform this kind of tasks in a few lines. C# would be overly verbose, it's doable. But total overkill. It's like trying to slice a loaf of bread with a steak knife. OP says that he wants to scrap artists and titles from a page. Let's pretend it's this page: http://www.bbc.co.uk/radio1/playlist In PowerShell it is a simple few lines: $result = Invoke-WebRequest -Uri http://www.bbc.co.uk/radio1/playlist $listings = $result.AllElements | Where Class -eq "pll-playlist-item-details" foreach ($listing in $listings) { $current = $listing.innerText.Split("`n") "Artist: " + $current[0] "Title: " + $current[1] } I'm sure someone who knows PowerShell better can inline that `foreach`.
I see, thank you for your answer. I've learned something about Powershell 
Very in general, if it fits in your machine and can be analysed by regular techniques, it's not big data. These days I would assume peta+ or maybe 3 digit terra.
/u/TheEternal21 I just wanted to let you guys know that my problem was that I was not declaring my DataGridView outside of a method. I'm pretty new to using methods so I didn't know I could do this. "Public static Datagridview foo;" Outside of a method made it accessible everywhere. Thanks for the help you guys gave me!
Would be interesting to see if there would be a difference with a list enumerator rewritten to implement bool TryNext(out T value); And tested with something like while(enumerator.TryNext(out item))
Why are you looking at the IL and decompiled source when the original source is available online?
https://referencesource.microsoft.com/
I think that would be especially useful when hitting an `IEnumerable` style interface, as it reduces the number of virtual calls that can't be inlined. When directly hitting the public interface on an array or `List&lt;T&gt;`, I wouldn't expect any difference, as those are inlined.
Anonymous methods cannot be implicitly typed, they must be assigned/cast to a specific delegate type. Also, you need to invoke the lambda. In the end it looks like this: var bar = foo ?? ((Func&lt;decimal&gt;) (() =&gt; { return 0.3m; }))(); which is a terrible mess and I really don't think you should use this. Just use a normal `if (bar == null) { bar = 0.3m; }` kinda style, create normal non-anonymous method, or at least assign the lambda to a separate variable.
MS considers ForEach() a mistake and the next version of R# might mark it as obsolete. There's lots of reasons not to use it. It might be slightly faster to rework foreach loops into a for loop as this shows, but using ForEach() is always a mistake.
This is a good solution that is Open Source: https://Umbraco.com/
You couldn't really do it with reflection and T4 because the template is building a partial class in the same assembly that you are looking over... you could probably do something with a build step involving a roslyn based tool similar to the way https://github.com/roji/AsyncRewriter works. Eventually https://github.com/dotnet/roslyn/blob/master/docs/features/generators.md are likely to come to a future version of C# / the roslyn compiler and they will permit what you are attempting to do here in a fully supported way. I do it with a cached dynamic method built via an expression tree generated using reflection the first time it is needed. The result has some overhead the first time, but after that it is a virtual method call.
Does AutoMapper support it?
&gt; You couldn't really do it with reflection and T4 because the template is building a partial class in the same assembly that you are looking over That's true. I remember Roslyn can generate files for you (I assume that's what AsyncRewriter uses too) so could go that route instead. Harder to configure though for custom clone logic. I'm not a fan of the dynamic way as it hide's away too much logic I think. I suppose when MS finally decide to build generators I'll have to have a crack at creating it that way.
&gt; MS considers ForEach() a mistake &gt; Using ForEach() is always a mistake Sources?
We've only ever needed a true deep clone once, and we cheated by serializing/deserializing it using [**json.net**](http://www.newtonsoft.com/json). Wish I had thought of the approach laid out by /u/Panaetius. That is more efficient than our way for sure.
&gt; When directly hitting the public interface on an array or List&lt;T&gt;, I wouldn't expect any difference, as those are inlined. https://msdn.microsoft.com/en-us/library/b0yss765(v=vs.110).aspx It depends whether the loop is done as an `IList&lt;T&gt;` or as the derived class, it seems that if you have a [derived enumerator](https://referencesource.microsoft.com/#mscorlib/system/collections/generic/list.cs,564) for `GetEnumerator()` available then `foreach` will attempt to use that (and allocate it on the stack if it is a value-type) instead of using the explicity implemented `IEnumerable&lt;T&gt;.GetEnumerator()`. Edit: Looks like /u/grauenwolf's blogpost mentions exactly what I'm talking about
Been a long time since I've tried HTML Agility Pack. Problem that I had back then was that it was not good at handling broken HTML. Which is a problem as most browsers are very forgiving. Has that improved?
It's the leet way. 
I dunno. I moved to AngleSharp since.
Don't get me wrong... it is getting better. However, it was clearly released WAY too early. Performance is quite slow, at first it had a number of leaks and bugs that cause issues in Visual Studio (some have been fixed - and even those repairs took nearly a year). [At my company, we even had to have an MS engineer come on site and profile our use of Visual Studio before they could isolate some of the bugs. Thankfully, the fixes included in Update 3 got rid of most of the worst issues.] But to me the most egregious was that they provided "replacements" for Static Code Analysis (FxCop) that missed major critical features from the previous version with NO WAY to provide workarounds. One basic missing feature was the ability to exclude generated code from analysis. Lots of projects have generated control and sometimes you have no control over how that generated code gets generated; so as a result you end up having to turn rules off that you would otherwise like to be on but fail on the generated code. On top of that 6 of the rules literally hung the builds if they were turned on. That got fixed only finally with Update 3... still, it took nearly a YEAR. I know that Microsoft got rid of QA as individual roles and all as they are embarking on the same grand experiment a lot of other companies are (mainly that the "team" is responsible for quality). However, whether or not that experiment will succeed doesn't lesson the simple fact that shoddy deployments to PRODUCTION users is unacceptable. All I can say at this point is that I am so thoroughly burned by the shoddy quality in Visual Studio 2015 that once JetBrains' Rider project comes out I will NEVER use VS again.
Maybe by making it iterative instead of recursive and calculating the square once before each comparison. It's not *that* much faster but it is. Also, I'd look to see if there's a better way to check if two floating-point numbers are equal. Edit 1: Returning NaN when input is negative is good practice. Edit 2: I forgot about the zero edge case static double sqroot2(double x) { if (x &lt; 0.0d) return double.NaN; else if (x == 0.0) return x; double increment = 10.0d, num = 0.0d, square; while (true) { num += increment; square = num * num; if ((square).ToString() == x.ToString()) return num; else if (square &lt; x) increment = Math.Abs(increment); else if (square &gt; x) increment = Math.Abs(increment / 2) * -1; else return double.NaN; } }
Things that make me suspicious about the article: 1. The `sum` variable is never read, so it could be completely optimized away. 1. Looking at the resulting IL, without even considering assembly, which is what's actually important for performance. 2. Counting method calls, while ignoring what kind of method call it is: the two calls in `foreach` are direct calls and should be inlineable, the call in `ForEach` is a delegate call, which cannot be inlined and is fairly expensive. 3. The results for 5M items array suddenly look different, with no reason given why would that happen. Could it be some measuring error?
Plus, without source codes it doesn't clear do they do warm up pass before doing bench.
Use json. Encrypt before storing. Should be a folder in AppData because thats per user.
* https://github.com/mccj/CloneExtensionsEx * https://github.com/mijay/NClone * https://github.com/newsoftinc/NetClone * https://github.com/laazyj/GeorgeCloney
Try this one: static bool equal(double a, double b) { return Math.Abs(a - b) / (Math.Abs(a) + Math.Abs(b)) &lt; 1E-16f; } static double recur(double x, double now) { var next = now - (now * now - x) / (2 * now); return equal(next, now) ? next : recur(x, next); } public static double Root(double x) { return x == 0 ? 0 : recur(x, 1); } I also noted during benchmarking that Math.Sqrt runs much faster after the first calculation.
Why do you want to store passwords? You should salt and hash the password and store that instead. You can check this question and its answers in SO to see examples of implementation. http://stackoverflow.com/questions/2138429/hash-and-salt-passwords-in-c-sharp As for storing the data, it's not really clear what you are trying to do. You say you can't use local DB because the app will be installed on several computers. Do you mean that you'd like to have the data centralized and the same "database" accessed by all your installations? Cookies are stored on the client side and usually don't contain a lot of information, mostly some kind of ID that the application can use to recognize the user when he accesses the website. It would be much simpler to help you if you were telling us what you're trying to achieve. Like what is the scenario of your data storage.
You can make calls to the Microsoft Credentials Manager. (Sadly there is no C# API for the Manager). And if you're handling Credentials remember to use the SecureString class from the System.Security namespace. The other possibility is what /u/jogai-san said, use JSON but encrypt everything, don't use some selfmade encryption use the encryptions given in System.Security and of course use SecureString again for the unencrypted credentials.
Ok, I guess I'll give that JSON thing a try (never used it before as I'm quiet a rookie :D) thanks anyways :)
Otherwise XML would be fine, the format of the file is not important. You'll have to be extra careful with the encryption. Do a bit of research to do it properly.
One method of doing this is : &lt;a href="@Url.Action("Logout","Main")"&gt; Logout&lt;/a&gt; This link explains a little more about the @html.actionlink function https://msdn.microsoft.com/en-us/library/system.web.mvc.html.linkextensions.actionlink(v=vs.118).aspx but to sum up, for your case @Html.ActionLink("Logout","/Main/Logout") Should work as well EDIT: If you are after something a little more advanced / secure id reccomend this blog post http://benfoster.io/blog/aspnet-identity-stripped-bare-mvc-part-1 http://benfoster.io/blog/aspnet-identity-stripped-bare-mvc-part-2 This uses identity - its pretty straight forward and well explained. 
With resharper you can just ctrl-click to see the decompiled source.
Wow this was exactly what I was looking for, thank you! Would you consider it a problem if I were to PM you again sometime for a question, or should I just post it on here for everyone to see?
Either way, I don't mind helping out, If you need help drop me a line :D 
Best answer here! Whenever available, use system support. Yes, sometimes .net has no wrapper for it. Make one. C++/CLI is a good start and o do that.
&gt; I'm wanting to put together a coding challenge for applicants Why? Both in general, and what specifically are you trying to achieve here? Is applicable or indicative of a developer's value added to a team?
In general we like to have all applicants write some code during their interview process, I don't believe this is particularly uncommon... However to address the concern, we are not based in a large city or a technology hub, and (Good) developer talent is very hard to come by. It's also not a particularly exciting or appealing industry / product we work on, so we really struggle to attract top talent. We do pay significantly above average to compensate, but the harsh reality is we're largely left with the weaker applicants. We've interviewed (and hired on one occasion) some exceptional bullsh**ters. Everyone now writes some code since this "incident". I have no interesting in "tripping up" anyone, or focusing on edge cases etc... I'm essentially looking for them to prove their basic competencies. Nothing to challenging, nothing advanced. We're targeting people in the 2-3 years experience bracket for this role, and I'd like a test that they'd walk if they've been working with C# for 1-2 years. I should also add, that the entire current team is reasonably new to C#, as mentioned in the original post, it's not something where any of us could really get into the "nitty gritty" with questioning an applicant - It's a terrible situation, we want a C# guy to be the C# guy, but can't really benchmark the C# guy, cause we're not C# guys... Rock and a hard place, hence how I ended up here. :)
I've no real interesting in tripping anyone up over syntax issues. Your example on LINQ is perfectly valid, as well, it's LINQ... I think everyone Google's it :) I wont be looking to ask for anything that complex. However I am looking for proof of core competencies, and I don't want someone Googling "C# constructor syntax" or "C# implement an Interface" "C# replace characters in string" for example
Admittedly I'm a mechanical engineer by profession, but in practice I spend probably 50% of my time doing software engineering. Haven't ever done code writing myself in an interview, nor has that been part of an interview process in bringing new people in. But we haven't had any "bullshitter incidents" of things getting past the filter of the hiring process. In my mind, it's easy to find people who can hack some code. Finding those with the mind to do good software engineering and architecture, as a longer term investment, is the challenge. In any event, is a console app relevant to what you're developing? To me that's first week stuff. What's the end goal of what you're trying to do longer term? Libraries? Standalone internal applications? Windows Universal apps? Web apps or services? There's such a broad range of potential applications, without knowing what you're looking to do it's hard to say what the go/no-go gauge would be. I'd be more interested in knowing things like... * What's been their experience with unit testing in C#, be it for new development or adding coverage to an existing code base. Advantages? Disadvantages? * What's their practice for documentation, say for developing a class library. Have they used XML documentation extensively? * For UI work are they more familiar with WinForms or WPF? Their own favorite and least favorite aspects of MVVM? Gotta be some favorite 'magic' and some alternate 'Christ I have to do *all this* for it to work?' moments * Frameworks or public-domain libraries they find particularly useful? I just feel like a 20 minute 'write some code' test wouldn't be a good gauge for me to assess a good developer. And no internet seems silly. Having done software development for 10 years and C# / .NET specifically for the past 3 or so, I still use the hell out of MSDN's web documentation on a daily basis. I don't have it all committed to memory. But that's just my 2 cents.
That is kind of the point :)
Provided you are just targeting Windows, you should use [ProtectData](https://msdn.microsoft.com/en-us/library/system.security.cryptography.protecteddata.aspx) in System.Security.Cryptography namespace. It is basically a wrapper for Data Protection API (DPAPI). Something like this: public static string EncryptString(string clearText) { byte[] clearTextBytes = Encoding.UTF8.GetBytes(clearText); var saltBytes = GetSaltBytes(); var inArray = ProtectedData.Protect(clearTextBytes, saltBytes, DataProtectionScope.CurrentUser); return Convert.ToBase64String(inArray); } private static byte[] GetSaltBytes() { var saltBytes = new byte[32]; if (string.IsNullOrEmpty(_storedBytes)) { using (RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider()) { rng.GetBytes(saltBytes); } _storedBytes = Convert.ToBase64String(saltBytes); } else { saltBytes = Convert.FromBase64String(AuthenticationConfigurationSettings.Default.Salt); } return saltBytes; } 
There is the [ProtectData](https://msdn.microsoft.com/en-us/library/system.security.cryptography.protecteddata.aspx) in System.Security.Cryptography namespace. Which is a wrapper for Data Protection API (DPAPI)
On the other hand, if they can google it AND implement it in the time allotted to an acceptable standard, it either means they're skilled regardless, or your time allotment is far too lenient :p
Give them internet access, but monitor what they search for. Honestly their searches will give you way more insight into their skill level than their final code will.
&gt; I know you handle shit like this in C/C++ by just dirty casting it, but how the hell do I handle this in C#? Same answer. There are various strategies but by this point I'd be wrapping my code in an `unsafe` block and just casting pointers around. Feel free to ask a follow up question if you need.
Cast to an `IntPtr` and use the appropriate methods from the [`Marshal`](https://msdn.microsoft.com/en-us/library/system.runtime.interopservices.marshal.aspx) class (`PtrToStruct`, `PtrToString` etc.)
This may not be as applicable for you, because my shop does C# desktop development, but we get them to write a desktop Sudoku solver application. It's an at-home challenge that's done to weed out who even gets an interview.
Hey It is, line 28 to 33
If you're giving them 20-30 minutes, I wouldn't go much more complex than a standard FizzBuzz. Anything much more complex and you're going to get a ton of false negatives. 
Off the top of my head, I'm not sure how to go about doing it. Probably a way through some tomfoolery. Beyond that, you are doing some extra array lookups here (`ix0[i]`, `ix1[i]`, `iy0[i]`, `iy1[i]`, and some of the `perm[...]` lookups) that can be moved to a temporary variable. That should help reduce the total bounds/lookups. What a function though. I didn't notice at first the quadruple-nested array lookups on each line. EDIT: Also, are you _sure_ that the bounds checking is your significant bottleneck producer? It should go through some branch prediction and be super fast anyway. Of course, that said, you are doing ~896,000,000 array lookups.
You can't always directly copy/paste/run decompiled code. IL has more flexibility in identifier names than C#, especially when it comes to generated code for lamdas, anonymous methods, anonymous types, and other syntactic sugars. You'll probably just have to fix and rewrite this by hand.
pulling the ix0 etc into locals did help quite a bit. 
Lovely. Have you considered multithreading this calculation? Looks like you could easily break this up into 8 independent calculations (for `a` through `h`). Overall it might require more work (as you might not be able to reduce the number of common array lookups as I previously suggested) but at least you can throw [more power](https://cdn.meme.am/instances/500x/37229701.jpg) at the problem.
It looks like your query is returning an empty result set. Is there actually data in the table you're querying? Are there actually records that meet the constraints in your query's where clause? (Are user names case sensitive in the DB?)
It will get multithreaded at a higher level, this is part of a perlin noise function, it will be making planets, I'll be making CPUCount-ish planets at a time. Between the locals and now with unsafe, I've got it going twice as fast: unsafe { fixed(int* ap = a, bp = b, cp = c, dp = d, ep = e, fp = f, gp = g, hp = h) { fixed(byte* permp = perm) { for (int i = 0; i &lt; Vector&lt;float&gt;.Count; i++) { int x0 = ix0[i]; int y0 = iy0[i]; int z0 = iz0[i]; int x1 = ix1[i]; int y1 = iy1[i]; int z1 = iz1[i]; ap[i] = permp[x0 + permp[y0 + permp[z0]]]; bp[i] = permp[x0 + permp[y0 + permp[z1]]]; cp[i] = permp[x0 + permp[y1 + permp[z0]]]; dp[i] = permp[x0 + permp[y1 + permp[z1]]]; ep[i] = permp[x1 + permp[y0 + permp[z0]]]; fp[i] = permp[x1 + permp[y0 + permp[z1]]]; gp[i] = permp[x1 + permp[y1 + permp[z0]]]; hp[i] = permp[x1 + permp[y1 + permp[z1]]]; } } } } 
The Datafield is `username` but your query uses `user`
I'm actually dumb lol... Thank you so much was going mad ;)
Not sure what you have tried already but I would test the query without the conditional. Try changing your command to: cmd.CommandText = "SELECT salt,hash FROM [Table]"; You should get the same expected results with the dataset you posted as there is only the single row of data.
Hey OP your site renders black text on black background in the Readit webview. Just a heads up.
Tabs. Newline.
You should look into azure db instances if you have a distributed application on multiple computers. This way you can keep all the data in one place, and depending on your app just keep the connection to the azure db in environment vars. 
You can further reduce duplicate lookups by caching the `permp[z0]` and in turn, the `permp[y0 + permp[z0]]` lookups. For example: int pz0 = permp[z0]; int py0z0 = permp[y0 + pz0]; ap[i] = permp[x0 + py0z0]; ... ep[i] = permp[x1 + py0z0]; And repeat for the other lookups. _I think_ that saves you another 10 lookups. Another option is to ditch Perlin noise entirely for another noise generator, say [OpenSimplex](https://en.wikipedia.org/wiki/OpenSimplex_noise) which is intended to be a more efficient alternative to Perlin. There's even an [optimized C# implementation](https://gist.github.com/digitalshadow/134a3a02b67cecd72181). For your use-case scenario (making planets), hopefully the noise result is irrelevant as long as it's "Perlin-like" rather than "Perlin-exact".
Yeah that's fixed. I think it's because I have the dark theme turned on in Windows 10 - if thats the case it might affect all apps with webviews. Good habit to be explicit when doing colour work anyway.
no doubt. I threw the theme together in a couple of hours and definitely did not take that into account. Appreciate the heads up and rechecking it.
Tabs and same line.
Correct
Yay, my opinion has been validated! :\^)
Working on a Xamarin app (Android only, fuck Apple :\^)) to compare PC specifications against games. Will eventually provide benchmarks. Fundamentals are there, just needs some polishing! :) I'd be happy to give more info if you guys/gals want it. Here's some images of the app so far: http://imgur.com/a/yvCqH
Server side validated too
Some other feedback: Use Parameters with your cmd instead of concatenating the variable in the query. And I suggest wrapping the Command and Reading in a Using statement.
&gt; Ah, a color blind's arch enemy. Plots with colors. Sorry man. Will note this for the future. 
I was kidding, C# devs usually use different styles depending on which language they came from
If you don't enclose your if-blocks with {} (ie: if (...) { // lines of code here } the compiler assumes that only the next statement after "if" is what should be executed. Because you have two statements after the if and before the else, it's confused. It's essentially like writing: if (....) { // one line here } // timer line here else { // another one line here } // timer line here which is invalid code; you can't have an if-block, then a singular statement (or multiple statements) before an else-block. To solve this, you can do this: if (....) { // one line here // timer line here } else { // another one line here // timer line here } to make the {} scope correct, or since you're decrementing the timer in both cases, do this: if (....) { // one line here } else { // another one line here } // timer line here
Great post! I always hate that moment where you make a pull request and you agonise of every line of code and every word in your commit message. Edit* Making sense.
The CLR can't inline virtual method calls. Inlining small method calls is the first step towards compiler optimizations. Without it, you can't do any of the interesting optimizations. Since all interface calls are virtual, you're screwed. Since all methods are virtual by default in Java, the JVM has sophisticated ways to inline virtual calls. This doesn't work with AOT compilation, you need a JIT so it can rewrite the machine code and undo the inlining as necessary.
You used git magic and if you wrote an unit test you would have caught the issue immediately?
&gt; What to do when you don't know interview question? &gt; Should I cheat on an interview? &gt; Best method of suicide &gt; Nearby gun shops &gt; Reddit
I haven't checked the assembly, so I don't know if it's that smart. But I think that good benchmark should assume that the runtime is smart and should defend against that.
&gt; Can I detect just a closed circuit? Sound inputs connect via the capacitors, so "closed circuit" not applicable for this. At my work we use are USB-to-COM converters and work with the DSR signal.
lol no SMTP client 
So, personally I don't put much stock in language-specific questions. It's easy enough to Google, and in the end syntax is syntax -- learning that is the easy part. The harder parts are the concepts. For example. My favorite interview questions are a pair of them. The first one is like so: Given a 64-bit random number generator, return a number between a minimum and maximum. In fact, take the following code, which I once wrote in response to a challenge in my younger, more learning-like days (and for the record, I tell them all this): var candidate = rnd.GetNext(); while (candidate &lt; min || candidate &gt; max) { candidate = rnd.GetNext(); } return candidate; This code is stupid. Why? The answer is that the 64-bit number space is *huge*. If I give you a min of 0 and a max of 10, this code could take *forever* to run. Ok, they got that. Now fix it. You'd be astonished at how many C# "experts" with years in the field have failed this question. As for the "fix it" part, some people know the answer right away; others don't. I give credit for good-faith efforts that don't basically repeat the mistake I made years ago, even if they don't happen to know the magical solution (which, for the record, happens to be `return candidate % (max - min) + min`). (Incidentally, part of why I say "This code is stupid" is to lighten the mood, which it usually does. Stressed interviewees give bad interviews, I've found.) The other question I give is like so: Imagine you have a tree of data. Now imagine you have a TreeView control in Windows. Add the data to the TreeView such that the TreeView represents the data accurately. You can use the following method to add to the tree: public void AddNode(TreeNode node, TreeNode parent); Where TreeNode is defined like this: public class TreeNode { public string Text { get; set; } public List&lt;TreeNode&gt; Children { get; set; } public bool IsLeafNode { get; set; } } Also, I gave you one piece of extraneous data. What is it? The solution is a basic tree traversal algorithm. Again, I give credit for good-faith efforts that aren't total catastrophes; you don't have to solve them perfectly. (Also, `IsLeafNode` is extraneous. The ideal algorithm doesn't need it, though I suppose you could write a solution that uses it.) In the end, I'm not looking for perfect C# experience -- with the right knowledge base, a willingness to learn, and Google anyone can get that -- but I am looking for the following: * A willingness to think out loud. I want to know how you got to your solution, not that you pulled it out of your memory as if by magic. * A willingness to tackle problems. If they throw up their hands and quit, they fail. Period. * An ability to think things through. * A willingness to ask questions. I've been in this business for 16 years. I don't know everything, and I don't expect candidates to do either. * A basic knowledge of programming concepts. I am *not* looking for the following: * An encyclopedic knowledge of algorithms. Most of them are written for you already (e.g., when's the last time you actually implemented a Linked List outside of school and/or an interview?). * Anything language specific. As I've mentioned before, languages can be learned quickly; concepts take more time. I know you are looking for a C# programmer, and I think you'll get people with basic C# knowledge just from your applicants (provided you vet them properly). Assuming that, knowing how to program *generally* seems far more important to me than knowing how to do so in a specific language. I think of it like libraries -- I value someone who knows how to use libraries and reuse code than someone who happens to be an expert in the Flavor Library of the Day. (For the record, much of my opinions on this were shaped by years of interviewing at and working at Microsoft in the 2000s, where "knowing how to solve problems" was more valued than "knowing how to solve problems in C#". The general attitude was that C# can be taught quickly while the rest may take more time and investment than they were interested in.) Sorry if I ran off on a tangent a bit here. :)
ILSpy did not give you legal C# syntax.
Previous attempt at sharing this went haywire. Fixed the link and have tried again.
Can you provide a full/complete program we can copy and paste? I tried to reproduce your error but I was unable to even after chaining 384 successive calls to `.Bar()`. Also, what .NET runtime/platform are you executing on? I know the Dynamic Language Runtime does a lot more work under the hood to reflect/cache/execute the proper compile-time-equivalent instructions, so perhaps there's something going on there that isn't working properly. EDIT: Just for testing/comparison, my implementation was running in LINQPad (.NET 4.5 I believe): void Main() { dynamic a = "a"; Foo(a) .Bar() .Bar() .Bar() .Bar() .Bar() .Bar() ... .Bar(); //384 calls } object Foo(object x) { return this; } object Bar() { return this; } EDITx2: Also, regarding your thought that: &gt; It seems that when you pass in a dynamic argument to a method the return object of the method also becomes dynamic This is indeed the case. As soon as you start working with any `dynamic` variable, any interaction with it must be deferred until runtime. As such, the call to `Foo` is deferred even if you're sure there's no other possible result. This is because any potential overloads, or generic return types (as determined by generic parameters which could be driven by your `dynamic` variable), and so on could produce different return types based on the `dynamic` variable. It could be plausible that your code is fully typed, and tightly sealed that this wouldn't be possible, but it wasn't worthwhile to implement that into the compiler to determine and statically bind that at compile-time. Plus it goes against the simple specification and consistent predictable behaviour of the Dynamic Language Runtime.
Couldn't care about tabs/spaces, but newline braces are the 'de facto' standard. I'd say 90% if not more of C# code is written that way. This is not java.
Useful code for dealing with pointers as well: public static unsafe T Read&lt;T&gt;(this IntPtr address) { try { // TODO: Optimize this more. The boxing/unboxing required tends to slow this down. // It may be worth it to simply use memcpy to avoid it, but I doubt thats going to give any noticeable increase in speed. if (address == IntPtr.Zero) throw new InvalidOperationException("Cannot retrieve a value at address 0"); object ptrToStructure; // ReSharper disable once SwitchStatementMissingSomeCases switch (MarshalCache&lt;T&gt;.TypeCode) { case TypeCode.Object: if (MarshalCache&lt;T&gt;.RealType == typeof(IntPtr)) return (T)(object)*(IntPtr*)address; // If the type doesn't require an explicit Marshal call, then ignore it and memcpy the thing. if (!MarshalCache&lt;T&gt;.TypeRequiresMarshal) { var o = default(T); var ptr = MarshalCache&lt;T&gt;.GetUnsafePtr(ref o); Kernel32.MoveMemory(ptr, (void*)address, MarshalCache&lt;T&gt;.Size); return o; } // All System.Object's require marshaling! ptrToStructure = Marshal.PtrToStructure(address, typeof(T)); break; case TypeCode.Boolean: ptrToStructure = *(byte*)address != 0; break; case TypeCode.Char: ptrToStructure = *(char*)address; break; case TypeCode.SByte: ptrToStructure = *(sbyte*)address; break; case TypeCode.Byte: ptrToStructure = *(byte*)address; break; case TypeCode.Int16: ptrToStructure = *(short*)address; break; case TypeCode.UInt16: ptrToStructure = *(ushort*)address; break; case TypeCode.Int32: ptrToStructure = *(int*)address; break; case TypeCode.UInt32: ptrToStructure = *(uint*)address; break; case TypeCode.Int64: ptrToStructure = *(long*)address; break; case TypeCode.UInt64: ptrToStructure = *(ulong*)address; break; case TypeCode.Single: ptrToStructure = *(float*)address; break; case TypeCode.Double: ptrToStructure = *(double*)address; break; case TypeCode.Decimal: // Probably safe to remove this. I'm unaware of anything that actually uses "decimal" that would require memory reading... ptrToStructure = *(decimal*)address; break; default: throw new ArgumentOutOfRangeException(); } return (T)ptrToStructure; } catch (AccessViolationException ex) { Trace.WriteLine("Access Violation on " + address + " with type " + typeof(T).Name + Environment.NewLine + ex); return default(T); } } This is the marshal cache used https://github.com/lolp1/Process.NET/blob/master/src/Process.NET/Marshaling/MarshalCache.cs As mentioned by dialtedmind, union struct are also useful, they can be non-union as well if you have the full struct [StructLayout(LayoutKind.Explicit)] public struct UnionStruct { [FieldOffset(0x00)] public IntPtr ptr; [FieldOffset(0x4)] public int fd; [FieldOffset(0xC)] public Point pt; }
~~The default size of the stack in .NET is 1 MB. That's approximately 15000 stack frames if the function does nothing except call another static function. It may be that dynamically dispatched methods adds some local variables.~~ It almost looks to me like it's the JIT compiler that runs out of stack space, not the code. The call chain creates a lot of callsites which are pushed from right to left to the stack and executed but I don't think that alone should make it run out of stack space. I created a test application and added a "Hello World!" at the start of the method, but it doesn't even get there before running out of stack space.
Awesome stuff OP! I know how time consuming tracking down bugs like this can be, so thanks for the fix and doubly for taking the time to document your bug-hunt strategy. One less bug I'll never hit in .NET Core!
&gt;You should use 'HttpClient'. It has a wrapper for content so you don't need to do that ugly string formatting. Oh? thanks, will look into it. &gt;tasks async/await I've encountered these phrases before. I'll look them up myself, but if you have any useful resources; that'd also be greatly appreciated. &gt;Also in theory your StreamReader should be wrapped using a using/try - finally block(they are the same using is just syntactic sugar). Ah, for exception handling, yes? makes sense. Thank you so much. 
That was actually one of my first tries. I didn't use int and IntPtr though but tried to put the structure the pointer points to directly into the struct. The compiler really doesn't like that.
try https://www.jetbrains.com/decompiler/ ?
So this doesn't do a conversion? Vector&lt;float&gt; f = new Vector&lt;float&gt;(123.123f); Vector&lt;int&gt; i = (Vector&lt;int&gt;)f What does it do? 
Oh, it is equivalent to AsVectorInt32. Great sadness. 
&gt; It's a terrible situation, we want a C# guy to be the C# guy, but can't really benchmark the C# guy, cause we're not C# guys... You should be asking for explanations unless your challenges are just simple control flow and looping stuff that every language has. You don't want someone that barfs up a bunch of code and then can't explain it and show you what it does/why it's there/how it works because the next person you hire probably won't be able to unravel the mess that follows. And honestly it shouldn't be that easy because you are hiring an resident expert and this person will have themselves and the internet for solving your problems and not every one is ready to be in that situation. Even many mid-level people rely on senior-level people and may not be used to working without that source. It really depends on how important this C# code will be to the success of your business. I actually think you might be aiming too low unless this is really simple work (in which case, reconsider the need for writing it in C#!).
&gt; Ah, for exception handling, yes? makes sense. No for properly handling a disposeable object.
The default stack size for .NET desktop programs is 1MB [1], and less for web apps. If you did it in a loop instead of method chaining you probably wouldn't have any stack overflow issues. [1] http://stackoverflow.com/questions/823724/stack-capacity-in-c-sharp
&gt;You'd be astonished at how many C# "experts" with years in the field have failed this question. Are you sure it's not the question? Too many interviewers get caught with their favorite pocket questions because they have a high failure rate and it somehow justifies other beliefs about skill levels within the industry based on their anecdotes. Why is rnd.Next(int64 min, int64 max) not a valid answer? This question bothers me because A) it has a magical answer, B) the magical answer was found with one google search, and C) if you had given me the TreeNode problem following this problem, I could have come back and said "Wait, the while loop on the last problem was really extraneous information! I should have been able to use rnd.Next()!"
&gt; I'd like to request SettingsRepository_Sql in the constructor of Form3, and then not have to modify Form1 and Form2 to actually get the implementation passed through. I believe this is called "autowiring" as part of a dependency injection framework. I cannot for the life of me get it to work though. I would suggest you to buy the book [dependency injection in .NET](https://www.manning.com/books/dependency-injection-in-dot-net) by [Mark Seeman](http://blog.ploeh.dk/about/). This will teach you in a very good way, what the idea and the basic principles of DI (with a focus on .NET) are. To give you some direct advice: You have to construct your **complete** object graph near the start of your program, the so called *composition root*. Then in the end you just call the ``show`` method of your main-dialog for example, and that's all. You do not need a DI framework to realizse that - even it might be helpfull; this depends on different aspects, which I cannot mention here. But have a look at Marks Blog, where you can find lots of informations about DI in general and also the movement towards *pure DI* by Mark within the last few years. If ``form3`` requires some ``SettingObject``, just request that in the ctor of ``form3``. So you have to write somewhere in your composition root-method something like this: var settingsObject = new SettingsObject(); Form3 form3 = new Form3(settingsObject); If ``Form3``-Object is opened by ``Form2``, you should also require a ``Form3``-Object by ``Form2``. So that leads towards: var form2 = new Form2(form3); Of course that can cause pain, if you have to inject new Objects reversly into your object graph - but you cannot avoid it (and you shouldn't!) After all, if you once have arrived there - or you start right up with this concept - the changes are relativly *small* in the end! Considering your example again, you said that you created ``Form3`` as a new form - I just showed you all the code you would have to add to your object graph construction! ``Form2`` had been added to ``Form1``allready, and ``Form1`` doesn't care at all, *how* ``Form2`` is constructed; so nothing else changes! Quite impressice, right? Autowiring just enables you, to omit the concrete call to the ctor as I showed it. The framework will just *automagically* create a new SettingsObject and pass that to the Ctor of ``Form3``, if it *knows* about the existance of the two base objects. Personally I am not a big fan of autowiring, as it first looks like a prefect way to get your things run, but soon comes into your way if you use almost any kind of behaviour pattern (strategy, command, decorator and so on). (See a question I posted on [stack overflow](http://stackoverflow.com/questions/34197998/ninject-multiple-bindings-depending-on-ctor-parameter-name)) The idea, that there is only one implementation of an interface fails quite often - and then the trouble with frameworks starts... My advice would be to first start with pure DI and then try to move to a framework. You will better understand, which aspects will be made easier and which will be made harder by the framework.
yeah, same for me ;)
SerialPort class is optimal choice to working with serial ports in C#. https://msdn.microsoft.com/en-us/library/system.io.ports.serialport Just open your COM-port and subscribe to PinChanged event. Also you can use DsrHolding property for read current state of the DSR line. https://msdn.microsoft.com/en-us/library/system.io.ports.serialport.pinchanged https://msdn.microsoft.com/en-us/library/system.io.ports.serialport.dsrholding Caution: SerialPort class does not correctly handle a disconnecting the serial port when is it open. So unhandled exception will raise from background thread if you disconnect an opened serial port. 
I read this and the issue /u/DreamSynthesis posted and thought I'd play around with variations and benchmarks, but I ran into a strange null reference that I am unable to explain. So I reported an issue: https://github.com/dotnet/corefx/issues/13348 I think the only way to do it is to copy out to an array and individually floor each value. It is probably best to write that as a static helper method somewhere so that you can quickly replace it when the better api comes along. You might be able to cache the arrays between usages to reduce allocations and there might be some array bound check optimization tricks applicable, but the basic copy to array and loop over it algorithm seems like the only way this can be done.
Yeah, and it makes my use case (generating perlin noise) non usable, as it ends up as slow as not using SIMD at all. Contrast with C++ where I can do it ~5x faster with AVX2 
Thank you for the reply and for going beyond by posting all the documentation links &gt;Let's first of all clarify ...sub-class type is. Have I got that right? Yes, i am currently creating an item database using a class for each item. My use of this type of organization is exactly like you said. &gt;either the is operator or the typeof operator I am probably thinking about the "is" operator. &gt;get rid of the "protected set;" bit. This will make a read-only property, which can be set in the constructor but then never changed, which is what you want... but it can only be set in the constructor of the parent class Are you sure on this part? I have tested my code many times and it receives the change when I call the sub-class (where I set the value). Thank you very much, I'll fix my code with your advice.
&gt; I have tested my code many times and it receives the change when I call the sub-class As you've written at the moment, it will work. But I suggested you remove the "set" bit of the property. And if you do that, it won't work any more, and you'll need to chain to the base constructor. Hope that clears it up! Also, I added an edit at about the same time you sent me your reply, so you may have missed my edit, which suggested an abstract class.
Copy programs that people have already made. Make your own notepad, paint, calculator, etc. Learning by doing is the best way.
Same for me, one of the first things I learned on my first .Net job. A client wanted some reports and they were used to different number formats for negative numbers, because of their Excel spreadsheets (where it's pretty similarly used) . 
Don't get me wrong, you probably could learn programming by starting off with games. But I don't think that it's very effective. Better off just making programs that you think will be helpful to you and others. Start off small and gradually build it up. Don't expect everything you make to be gold though. I still make shit :\^)
Great job. This is an amazingly well written technical writeup. 
Thanks for the help. Bug [reported](https://github.com/dotnet/coreclr/issues/8000).
Is this a good place to use SIMD?
Look at the ADO examples: https://github.com/Grauenwolf/DotNet-ORM-Cookbook
Yeah I think where I first saw it was way back in asp.net 1.0 this is how people would make negative numbers red in datagrids and such because you could just make the format like `&lt;span style="color:red"&gt;{0}&lt;/span&gt;` 
I think what you're doing is fine but you want to test args.Length instead of assuming the index of [i+1] exists. case "-U": if (i + 1 &lt; args.Length) Url = args[i + 1];
It is, all the rest of the code is, but with .NET you can't here as they don't expose the gather instruction. I've also figured out there is no way to do float-&gt;int or int-&gt;float conversion or floor which as sort of made this all futile. 
&gt; Anywhere you reference args[i + 1] you can skip the next arg in your loop -- after all, if you receive -M 254 you don't need to parse both -M AND 254. To add to this, you could do it efficiently by referencing `arg[++i] `. That way you're incrementing i and then using it. Then when you get back to the for look, it increments i again, skipping the next arg that you've already used. /u/ArchSamael is right though, you need to check to make sure you have a next i before trying to use it (to be safe). You could have a default value for any of these settings, so you could do something like case "-B": BottomMargin = (i + 1 &lt; args.Length ? Convert.ToInt16(args[++i]) : 0); break;
 rows.Any(row =&gt; row.Foo == null); or the inverse rows.All(row =&gt; row.Foo != null);
I skilled up by doing some Microsoft virtual academy courses. These really helped, I was starting from literally no c# knowledge.
You can also write the code in C and call it from C#. I hear that some of the advanced math packages work that way.
Could you explain why it is worthless? I would of guessed that other tools use the `StopWatch` class as well.
Can you do some tests on very small/rudimentary numbers and makes sure it works for those? If it does, maybe you're hitting some max/min size limits on the `Double` type.
Incrementing `i` is what I wanted. If you are expecting a parameter and a value with that parameter (i.e. `-B 10` therefore 2 args) then you don't need to have a needless loop through the `for` loop on the `10` arg. So if you're on the `-B` arg in the `for` loop getting the `10` value is `args[++i]`. That way you get the `10` and then when you get back to the top of the `for` loop it increments `i` again and you are now looking at the arg after the `10`.
I can't recommend the Head First book series enough. They teach you in a way that doesn't make you feel like you're reading a tech book but you retain so much of the techniques and information. 
Yeah you're right on both points.
What are you currently using or planning to use? Mono? .NET Core? Other (Xamarin?)?
Currently installed Mono and can run Mono in terminal using "mcs" and "mono" respectively. But I want to run those commands inside Emacs. 
If you're using Mono and have a csproj file, you can use xbuild.
Good job man. That stuff is tricky.
Have you considered adding support for desktop overlays? Plugging in 'explorer' as the process didn't do anything. I've been ruminating over doing my own Windows UI and something like this would be awesome, but through, admittedly, cursory investigation I've not seen any great ways to do this especially considering multiple monitor options.
I've never tried, but depending on your OS I think widgets etc fill the need for most of overlays uses. I'll look into it! :)
Does this help? http://stackoverflow.com/questions/12407877/compile-c-sharp-project-with-emacs
You may need to include System.ObjectModel.dll. https://docs.microsoft.com/en-us/dotnet/core/api/system.componentmodel.inotifypropertychanged#System_ComponentModel_INotifyPropertyChanged
There's a lot of things that can affect the results such as warmup times, optimization modes, etc. If you want to dive a bit deeper into the subject, I suggest having a look at https://github.com/PerfDotNet/BenchmarkDotNet for a proper benchmarking implementation. Benchmarking is notoriously difficult to get right so you should always consider a proven library first.
Hi, I am a beginner here but isn't `INotifyPropertyChanged` in `System.dll` ? https://msdn.microsoft.com/EN-US/library/ms133020(v=VS.110,d=hv.2).aspx
For .NET Core it looks like it is in a separate DLL (as per the link I gave). The docs you reference say that for the versions listed below it should be in System.dll, but I don't have a way to verify that right now. Universal Windows Platform Available since 8 .NET Framework Available since 2.0 Portable Class Library Supported in: portable .NET platforms Silverlight Available since 2.0 Windows Phone Silverlight Available since 7.0 Windows Phone Available since 8.1 
OK, I did now know what .Net core was. I saw that link is a bit unfamiliar to me :D
* Serialize the list into a string and save it on a file on your local machine (json or csv would work well). This is probably the simplest to implement, but opens the possibility for the file to be edited outside of the application (which may be ok, depending on your needs) * Dump them into a local DB like SQLite. This option has a high-ish setup cost, but slightly simpler implementation and can help prevent corruption caused by manually editing a file
good luck haha
We still had problems with it on Win8. Maybe something with combination with AllowsTransparency caused application to switch to software mode rendering.
If(date time.utcnow() = 12){playsound();} something like that will work.. if you want to constantly be checking you might want to look at a while loop! Edit: agreed it's not a great way to handle it but it answers the question of how to get an if statement to check a time...
I have never heard of an anti-cheat system of any major title banning for hooking D3D functions. Thousands of legitimate applications do so, some of which are used by not hundreds, not thousands, but literally millions of users. Not to mention the fact that the D3D dll you're hooking is not even theirs in any way. It is not like you're hooking their code. I would be interested to find a credible case where hooking D3D api was banned - considering that would target every FRAPS user for example.
You might consider adding a method to output the usage information based on the type automatically. You might also add attributes to the properties for default values when not specified. Or attributes to indicate which attributes are required to be specified. 
Do you plan on creating a nice little and neat NuGet package for easy consumption? :&gt;
Yeah, I've done that actually, was hoping I could make it fast in pure C# just for simplicity. Not yet! Next plan is to make it in the gpu, actually. 
Thank you both for commenting. Both of your comments ended up helping me find the solution. Unfortunately I couldn't find System.ObjectModel.dll in the Reference Manager at all, but this led to me to discovering the NuGet package manager, where I downloaded System.ComponentModel. After downloading this, it seemed to automatically add a reference to System.dll which I was apparently missing. This got rid of the error for me. I had thought that System.dll was automatically referenced just by targeting .NET. I had no problems including the *using System.ComponentModel;* directive, and it never impacted my program before. I uninstalled the System.Component model that I downloaded in NuGet, and kept the System.dll reference, and now I'm good to go :) Thank you for the help guys! I really appreciate it. 
Yeah I know of some other packages. I was bored and just wanted an easy "lightweight" solution. So I built this in a couple of hours and it suits my needs just fine :)
Yeah, as soon as I manage to finish documenting it and tidy everything up I intend to make a clean simple web page and a NuGet package.
Always worth trying stuff like this out for yourself. There's a project in the works to add something like this to the framework. Code is up on github somewhere under one of Microsoft's repos.
Would this work with windows that are drawn with a different API, like OpenGL and Vulkan?
Maybe something like [`PropertyGrid`](http://wpftoolkit.codeplex.com/wikipage?title=PropertyGrid&amp;referringTitle=Home)?
You would have to try as I have not done too much testing outside using it to overlay game windows using directx to render their visuals :).
How does it work on a high level? Does it just create a second transparent window that is positioned exactly over the base window? If so, how it detect the base window?
Lol only if I saw your comment 3 hours ago... I spent over an hour trying to build something like that today. 
I highly recommend Venkat's C# tutorial series on YouTube: https://www.youtube.com/playlist?list=PLAC325451207E3105 He has actually just updated it with an async and await video (though I don't think unity supports this).
/r/unity3d /r/unity2d forum.unity3d.com
Thanks, sorry about that
Its "OnTriggerEnter2D" and not "onTriggerEnter2D" @/u/oftheterra, youre really helpful.. Read the rules "All about the object-oriented programming language C#"
I cant believe it. Thanks so much, I feel like a moron haha.
I'm sorry, but this is horrible boilerplate code. Don't do this. We had someone do this in one of our projects, and it turned out to be one big lemon. In any web site you normally want something specific here and there. Do you want to inherit the bootstrap module if you want another one with a new tweak? Or do you make it a specific one? You might have ten different types of modules on one site. The developer had made tons of these. You would go on a hunt to find all the places where it had been used, it made refactoring nightmare, it made the code unreadable. Mixing C# with HTML. This makes everything harder and hides the HTML from the coder. And when you're done with the project or move on, the next one comes along and it's even worse for him. Where is support for classes? Data-attributes? Knockout-support? Angular? React? Where would you fit all this, in their own extensions? &gt; This keeps UI code DRY (Don't Repeat Yourself), It might keep it DRY. But this keeps your code obscured and hidden. Where do I even use this? In .cshtml? In the backend .cs-file? Someone did this. It was a terrible idea in a real project and it ended up costing the next developer who took the project a lot of time and headache. It made transitioning to new technology REALLY hard. It abstracted the view. KISS - keep it simple stupid.
Y-y-yeah but I linked to the official documentation! So ummm... :P Regardless, glad it's working for you. These problems can sometimes be the most embarrassing/silly/frustrating but at least they're easy fixes. And now you know! Same casing goes for the rest of the built-in Unity methods/triggers so you can double-check that as your first culprit when something isn't working as expected. Have fun! EDIT: Note that the casing only applies to the method _names_. The parameters you can name anything you want so long as they're the proper class/type and order.
Whether code should be in HTML or HTML be in code when it comes to a UI layer is certainly a hot topic. I.E. Angular vs React, etc. I can see how this could become a mess if it got mixed up with business logic, etc. What this does is create a syntax similar to React for defining UI components. As to where to use it, it doesn't make any assumptions. Anywhere where it would solve problems and not create them. BTW, data-* attributes or any other attributes are supported by passing in an anonymous object. I.E. new P("some-class",new {dataBind="something"})
Can confirm, awesome series! https://channel9.msdn.com/Series/C-Fundamentals-for-Absolute-Beginners
Did I just read some one being stuck in the 90's?
Just like Java!
&gt; I had thought that System.dll was automatically referenced just by targeting .NET. It definitely is, at least in the sense that it's added to all new projects, and it's automatically added when using the command line compiler. It may be that you removed it yourself.
furthermore it's kind of wrong i guess. If it works like DateTime.Now though. I'd go like if(DateTime.Now.Hour == 12 &amp;&amp; DateTime.Now.Minute == 0) { this.playsound(); } Like that it will only play the sound if it's exactly 12 o'clock. If you only take DateTime.Now.Hour it will play the sound everytime the clock says 12:XX. So, if you have a Timer which elapses every minute, you'd have 59 sounds played. Edit: after re-reading the question, if you ask for 12pm, is it midday or midnight? (24 hours user here)
Removed: Spam.
If there was only something that could make C# run on Linux without IIS directly from Microsoft! I would like to see expressions of everyone who decided to do this Java conversion when they realize that CoreCLR exists. Plus there is going to be CoreRT for compiling to native binaries. 
This is pretty much reinventing WebForms for your MVC project. No thanks.
 using(var rdr = cmd.ExecuteReader()) { .... } Using means that it will call dispose on the object when it falls out of scope. It's essentially the same as doing this : SqlDataReader rdr = cmd.ExecuteReader(); try { (your code) } finally { rdr.Dispose(); } It guarantees that the reader gets closed no matter what happens. As you may be aware, each connection can only have one active reader at the time.
My guess is, while made with good intentions, this person hadn't weathered the 2000s decade of WebForms.
Despite being someone who used to have the ASP.NET Page lifecycle printed and pinned to my desk, I think that there may still be a case for a component hierarchy based view engine. Obviously the postback model, viewstate and lifecycle need to be killed with fire, but it might be nice to be able to programatically build your application using 'Higher Order'* Components and then write cross cutting ComponentTreeVisitors which would apply stylings, or insert/transform other Compoents etc. Instead I find everything is done at the string level, and if you want to add a tag to every page you need to intercept the response stream and look for the &lt;/body&gt; tag.... *terminology nabbed from React
Dont take this the wrong way but, search results come from websites that have content on the topic you searched for, just doing my part to build the web. Aside from the obvious I was looking for information on handling 3 specific bits in a two byte array, I'm sure there is another website out there that talks about this topic in depth, but how many of those sites allow you to talk to a person about it when you have questions. I also wonder how many have some chuckle head that tells you to just Google it. Wouldn't that be hilarious of every key word you typed into Google lead you to a site that has the answer of, Just Google it? Your comment, although correct, serves no value on the Internet today. Good day sir.
People should always try the google first, then ask questions. There wouldn't be duplicate questions that are answered all over the internet. Many other questions would be less vague. And it helps to teach people to solve the problems on their own.
well it's not advised to screenshot a code error but here's what it says when I put the cursor on **ExecuteReader** cmd.ExecuteReader [here] (http://imgur.com/a/H7Lx8)
From the online help: string queryString = "INSERT INTO Customers (CustomerID, CompanyName) Values('NWIND', 'Northwind Traders')"; OdbcCommand command = new OdbcCommand(queryString); using (OdbcConnection connection = new OdbcConnection(connectionString)) { command.Connection = connection; connection.Open(); command.ExecuteNonQuery(); // The connection is automatically closed at // the end of the Using block. } https://msdn.microsoft.com/en-us/library/system.data.odbc.odbcconnection(v=vs.110).aspx 
That's exactly the error: ExecuteReader is not a method of OdbcConnection, it is a method of Odbc*Command*. In addition to a connection, you need a command to execute SQL. See u/xampl9's comment about how you create commands. As a side note, you can throw your connection, command, and reader into using statements to automatically clean them up, and not have to have the finally block at all. try { using (var conn = new OdbcConnection(connectionString)) using (var cmd = new OdbcCommand(query, conn)) { conn.Open(); using (var reader = cmd.ExecuteReader()) { while (reader.Read()) { code = reader.GetString(1); } } } } catch { /* error handling */ } // no finally {}. Commands, readers, and connections are *usually* closed and cleaned up automatically. Additionally: If you only want one value from one row of the database, there are several different ways to do that, and they don't all require a data reader.
will try that, sorry I am amateur at C# developement
Everybody's gotta start somewhere. Good luck!
Depending on how much a system needs to scale, sometimes it is beneficial to pre-render everything on a View on the server and return to the client. Simply because rendering on the client would just be too slow and clunky for the browser to handle. 
This code will play sound once at 12PM (mid-day) everyday if you call it in some sort of loop. If you want to do it in a loop you should atleast consider using Thread.Sleep so you won't use 100% cpu time from one cpu core. DateTime.Now uses 24h hour clock. You need to add hasPlayed bool variable to your class. if (DateTime.Now.Hour == 12) { if (!this.hasPlayed) { this.playsound(); this.hasPlayed = true; } } else { this.hasPlayed = false; } 
I meant midday :)
Thank you again for your answer. It is answers with examples that provide value to this sub. I now understand how to mask values with a bitwise AND to extract the bits I'm interested in. It is not an easy thing to express in a Google search given the example I provided.
also, not really related to the main problems in your code, your connection string has "databse" misspelled. 
If you want to put it on a background thread you can use the Timeout() on the task to limit it. 
miswritten database but my database's name isn't "database" I just changed it for confidentiality 
As I mentioned above, the real horror of WebForms was the post back/event model, not the component heirarchy
I'd obsfuscate your credentials in the connection string, you've just potentially leaked your sa password publicly.
&gt; The Remove method is provided for deleting data. Here's an example that uses a stub to represent the entity to be deleted: About fucking time. Requiring a round-trip to the database just to delete a record was incredibly stupid.
This is even better than Microsoft's own tutorials because it isn't trying to shove Visual Studio and Azure down our throats. Nice job OP.
oh shit I didn't ._.
I was watching a .NET Core series on Pluralsight the other day... they were discussing how to use the now-deprecated .NET Core Version Manager... Here's hoping OP's tutorial stays current for more than a month because it's good stuff. EDIT: I said it was deprecated twice oops
I really like the new in memory provider also. Makes unit testing less painful without making it integration in the sense that you have some of the basic database behaviour, like auto increment for pk
Might be worth taking a look at Poly. The 5.0 beta has a timeout policy and I suspect the typical retry stuff would be very useful anyways
I abstracted away the creation of tables in razor using a builder pattern mixed with the html helper on razor. Like, you wouldn t write a table but only use the builder which did everything for you. It kept things simple, but the net gain of that? I m not so sure today. Also, the next project i forgot i had it and just used simple html. Proof that KISS does apply mostly on html.
Removed: Rule 4. Feel free to post your code (github, gists, or here), but try to narrow down your issue. If you're looking for more one-on-one interaction with someone, maybe try /r/programmingbuddies.
Removed: Rule 4. I suggested you try to narrow down your issue. At the very least, describe how it's currently incorrectly behaving and how you would like it to behave.
I downloaded and ran your program and the movement seemed to work fine. What is the problem you're having exactly?
Stop deleting your posts please. Keep it up and you might be labelled a troll. The issue is a combination of your `ShowBoard` method being slightly incorrect and not calling `ShowBoard` at all. Firstly, `ShowBoard` needs to be called repaint your board before painting/moving your hero. Rewrite your `Board` constructor to be: public Board(int length, int height) { olength = length; oheight = height; oroomList = new List&lt;int[]&gt;(); boardGen(); roomGen(); buildCorridors(); Hero = new Coordinate() { X = 0, Y = 0 }; MoveHero(15, 15); stairsGen(); //ADD THIS LINE ShowBoard(); ConsoleKeyInfo keyInfo; while ((keyInfo = Console.ReadKey(true)).Key != ConsoleKey.Escape) { //ADD THIS LINE ShowBoard(); switch (keyInfo.Key) { case ConsoleKey.UpArrow: MoveHero(0, -1); break; case ConsoleKey.RightArrow: MoveHero(1, 0); break; case ConsoleKey.DownArrow: MoveHero(0, 1); break; case ConsoleKey.LeftArrow: MoveHero(-1, 0); break; } } } Two separate calls are added here to `ShowBoard()`, add them both. Then in your `ShowBoard` method, you need to reset the cursor position back to `(0, 0)` before painting the board otherwise it starts painting from where you last left the hero. public void ShowBoard() { //ADD THIS LINE Console.SetCursorPosition(0, 0); for (int i = 0; i &lt; gameBoard.GetLength(0); i++) { for (int j = 0; j &lt; gameBoard.GetLength(1); j++) { Console.ForegroundColor = gameBoard[i, j].Color; Console.Write(gameBoard[i, j].Symbol); } Console.WriteLine(); } }
Style Cop is now embedded in visual studio? That's amazing, thanks for the tip!
Why would you not use visual studio for any. Net development? 
Cecil and StyleCop are different things. FxCop is integrated, StyleCop is not. Code Analysis is the new name for FxCop. It does not merge the two, the blog post is wrong on that.
Just like React isn't it :)
On first look it seems like the constructors can be replaced with factory methods like Button(...) to avoid writing "new" everywhere. The static methods can be used with static imports.
testing without the real database isn't really smart in the long run, as the database is a vital part of your application at runtime. Testing it with an in-memory mockup saves time, but you can't really say your tests work on the real DB, as the in-memory mockup might have different behavior (and it will, even sqlserver and oracle have different behaviors, 1 in-memory simple 'database' surely does too). 
... I thought that wasn't the case anymore? (about VS, although I'd also argue that plenty of non-hipster devs use mac)
&gt;But if I use bracing like that yes, I see. I meant that I just added a boolean field that says if the class is working during loading file or opening a new project. thanks for "omitting action" tip. 
I think you'll find there a lot of quality Windows PCs that are near Mac build quality. I'm currently rocking a Lenovo X1 Yoga which kicks butt for .Net development. The Microsoft Surface Book and HP Spectre are also good options.
So what is the common wisdom? Which tools do I enable on my project (looking at adding some style tool right now)? I kind of want the most common thing which has the greatest amount of know-how.
Mac runs every OS, therefore it wins out for me. I have a hackintosh desktop at home though but I don't recommend for full time work in case it goes tits up. 
If you'll end up doing any mobile development and need to build for iOS then the macbook is the way to go. Otherwise, I'd agree with others, there are some quality Windows laptops out there that'll give you more bang for less buck.
Thanks. The employer is actually paying for the laptop. I am assuming they are the same specs.
Thanks. The new employer is actually paying for the laptop. I am assuming they are the same specs. I use an XPS at home too, but my current job provided an MBP. 
I also have a Surface Book, and I'm a big fan, but honestly I would have to say that as always "it depends". * Are you building touch-interactive Windows applications? Surface Book. * Any mobile apps with Xamarin? MacBook Pro * Looking into .NET Core? (I would lean MBP) * Vanilla ASP.Net?? Get whatever you want. 
visual studio suffers mainly from beeing bloated and lagging behind in features, while the CLI tools are up to date and cross platform. It also handles the file system in a static way, which causes projects with many files (see web projects) to lag immensly. This will be fixed in the next major release of visual studio (see lagging in features). 
Depends on what you're doing. If you're talking purely from a hardware quality perspective and you do any sort of compute-intensive work, I'd avoid the Mac as well as any other similarly-sized friends (XPS etc.); they can't ventilate and turn into molten balls of magma under any amount of load. Lenovo bricks (W, T lines) are always a good choice there - the W's in particular are truly desktops in a brick form. From a quality of life perspective, if you are working primarily in VS + SSMS then a Windows machine wins as you don't need to pay the VM tax. You can try the Bootcamp route, I personally found that to be frustrating because Win10 had so many issues with the retina displays. Certain applications simply do not scale properly, so you get to read microscopic text. If you know you're going to need to be doing Mac-exclusive things in the future (like building native things in XCode) and won't be focusing as much on VS-specific work, maybe a Mac running Win10 in a VM. Personally, I don't really see the need for a Mac anymore. You're paying a premium on a machine that has been declining in quality since 2013, and with the latest iteration has continued the trend. It seems to be a toss-up if you get a quality machine or a melon. Support is also an issue. When I had a Mac provided by work, any hardware issue had to be dealt directly by Apple, which often times meant 7 day turnarounds (or at one point, two weeks for them to replace my screen when it died for which they also tried to bill us extra). Compare this to Dell, who will send someone to your place of work next business day and they will replace just about every damn component in that machine until it's working again. That's hard to beat. I went from PC -&gt; Mac -&gt; PC and am overall content being back in PC land. The only things I really miss are a sane terminal (cmder + Linux-on-Windows are OK, but not comparable to iTerm2 + zsh) and package manager (chocolatey ain't no brew).
Speaking purely personally, I just don't understand why someone would buy a Mac and then run Windows in a VM for this particular purpose. You're starting with (a) likely less powerful hardware than you would get for an equivalent price in a PC and (b) spending some of your performance on virtualization. You're a graphic designer who needs access to Mac-only version of products, or needs to work with the rest of the people in your Mac shop, while occasionally dropping into Windows/Visual Studio to do some quick coding? Cool.. Windows in a VM is undoubtedly the way to go. But if you're spending most of your life inside Visual Studio? You want the best experience you can get with that, by having maximum horsepower available. This has nothing to do with Mac. vs. PC fanboyism-- I'm a developer, and I want the best performance I can get out of my machine for maximum productivity.
A PC of course, tuned to run Windows properly. Currently I am using a Thinkpad W510.
I've used both and got performance problems emulating windows on a mac. Especially low level development was very problematic
I love the customization options, website, and overall idea of the System76 computers. But still, when I googled the Oryx Pro and [saw this](https://d1vhcvzji58n1j.cloudfront.net/images/laptops/oryx/oryp2/feature_1280-08cd799698.jpg), my literal first though was: "god that is an ugly turd".
As far as languages go I have to admit C# has a clean and simple look to the code for being as powerful as it is. Now that core is cross platform maybe I should give it a go.
You should, It's fantastic.
I do it, but I also prefer a Unix-like OS to do everything outside of Visual Studio. There's not much of a sped difference between bare hardware and VMware anymore, at least not a noticeable one, and I prefer using bash and zsh to PowerShell. I like automating and scripting stuff, and I can share most of my Mac scripts with my other machines that run Linux, which is nice. I also use a number of Linux tools ported to Mac: they tend to work better than similar tools ported to Windows, likely due to better posix compatibility. Finally, Macs seem to do a better job of jailing/isolating applications, meaning fewer side effects between apps when something goes wrong.
 private static void Rectagle() { /// get dimension int iDimension = int.Parse(Console.ReadLine()); // top side Console.WriteLine(new string('*', iDimension)); // middle for(int i=0;i&lt; (iDimension - 2); i++) { Console.WriteLine("*" + new string(' ', iDimension - 2) + "*"); } // bottom side Console.WriteLine(new string('*', iDimension)); // bask in the glory Console.ReadLine(); }
I made the jump about 4 or 5 months back to a MacBook Pro. It may not make sense financially, but if you're interested in it, I say go for it. I'm primarily a c# developer, and I use Parallels to run OSX and windows side by side when I'm in VS. There's also the free alternative of just bootcamping your machine too for full utilization of resources. Honestly, I love the build quality of the macs. And when I'm in OSX, the battery life is second to none. The resolution is also great. I don't regret getting it for a second. Sure I could have saved some money, got better specs, but I like the feel of the MacBook. 
Just a hint, check out [BashOnWindows](https://github.com/Microsoft/BashOnWindows), its a Linux subsystem running inside of Windows 10. Essentially you can do anything on your Windows machine from the bash shell, plus you have a complete Linux system on the same machine which allows you to use debian package manager etc. It is still in Beta and has some kinks to iron out, but if you are interested you can look out for it in the future when it goes RTM. 
Last time I tried to start a project with .NET Core I gave up in frustration. Granted that was a couple weeks ago but I'd be surprised if it's mature enough to use in the enterprise. Is this for a startup or are you trying to fit it in with existing infrastructure?
System76 has some great options but the devices feel generic and the build quality is not great. I'm sure someone will reply saying how they love theirs and whatnot, but I'm speaking from personal experience.
Same here. I do node, most front end heavy work, and php on Mac. Anything .Net is on my PC. I dual boot windows on my MacBook, but only so I don't have to rely on my desktop PC for all that type of work. 
I read your question again, I might have been confused. It's .NET Core I couldn't get working, I think you're intending to use ASP.NET Core with the full .NET framework. Sorry, all the new names get me confused!
If you're planning on using Entity Framework Core as your ORM you may miss a few features from EF6. There's no native GetById() method on your DbSet's, had to search online for a implementation, found it and had to fix a few things. Plus there's no lazy loading. Other than that i'm very satisfied with the native dependency injection.
Hmm... We're about to start a pretty big project and were wanting to use .net core. What kind of problems did you run into?
Your question is very specific and will only elicit an answer from someone who is familiar with your hardware. You might better results if you detailed what API the communication code uses, as it might not be specific to the WUA platform and may be available to other .NET UI frameworks (WPF, Forms, etc.)
Tried something else, doesn't work that well though... By that I mean I'm able to load from Inventory.xml. It gives out proper values. But I cannot add it to the List primaryGuns. public void Load() { Primary gun = new Primary(); XmlTextReader reader = new XmlTextReader("Inventory.xml"); reader.Settings.CloseInput = true; while (reader.Read()) { switch (reader.Name) { case "ID": Debug.Log(reader.ReadString()); gun.ID = int.Parse(reader.ReadString()); break; case "Title": Debug.Log(reader.ReadString()); gun.Title = reader.ReadString(); break; case "Description": Debug.Log(reader.ReadString()); gun.Description = reader.ReadString(); break; case "Attack": Debug.Log(reader.ReadString()); gun.Attack = int.Parse(reader.ReadString()); break; case "Impact": Debug.Log(reader.ReadString()); gun.Impact = int.Parse(reader.ReadString()); break; case "Slug": Debug.Log(reader.ReadString()); gun.Slug = reader.ReadString(); break; } } reader.Close(); primaryGuns.Add(gun); Debug.Log(gun.Title + " added to inventory"); }
Not the pro dev here but maybe XML Serialiser/Deserialiser or even json S./D. might be the right choise, instead of doing it yourself.
On a side-note, you ought to check out the C# Discord Group in the sidebar, they have a nice beginners section :)
Imo this is what you need to do: 1. Getting the x, y coordinates by looping through your console input until stop is hit. 2. The input needs to be parsed in a way where you get the x and the y coordinate 3. Keep the x and y coordinate together in a list so you know what points have been created (I would not create a matrice/double array for this as you have suggested since the screenshot shows the matrice with multiple entries) Unless there is a max x and y size because then you would be able to create one matrice for the entire thing. 4. Make a draw function that takes the points and draws the diagram for you. This could be getting the max size of x and y create a bool matrice from that and set all fields to false. Then run through your coordinates and set the coordiantes of those to true in the matrice. You could then run through both dimensions of this and say that false is # and true is * 
It is defined in Nullable&lt;T&gt;. Source code is here https://referencesource.microsoft.com/#mscorlib/system/nullable.cs,8b928034cfee7d43.
 XmlDocument xmlFile = new XmlDocument(); xmlFile.Load("Inventory.xml"); XmlNodeList primaries = xmlFile.SelectNodes("//Primary"); for (int i = 1; i &lt; primaries.Count; i++) { weapons.Add(new Primary( int.Parse(xmlFile.SelectSingleNode("//Primary["+i+"]/ID").InnerText), xmlFile.SelectSingleNode("//Primary["+i+"]/Title").InnerText, xmlFile.SelectSingleNode("//Primary["+i+"]/Description").InnerText, int.Parse(xmlFile.SelectSingleNode("//Primary["+i+"]/Attack").InnerText), int.Parse(xmlFile.SelectSingleNode("//Primary["+i+"]/Impact").InnerText), xmlFile.SelectSingleNode("//Primary["+i+"]/Slug").InnerText)); } This works. Also, you aren't writing the Description element when you save the file so that will throw another error.
Also there is a lot that is performed in memory that can be performed on the db instead, group by being a major example. EF6 does not have this issue. They are planning to get more of the queries moved over the the DB side of things but they haven't announced when so it may be a while.
I was trying to read from the app config and both ways I tried (configuration manager and a different class whose name escapes me) threw errors when I tried to include them saying they were incompatible with something that they also depended on. Our logging library also wouldn't work with it. Hopefully things are fixed by now, this was a few weeks ago and I'm sure more things get fixed everyday. 
Not too useful, though, since it simply has: public T GetValueOrDefault() { return value; } The field `value` will, in this case, either be uninitialized (in which case it'll contain `default(T)`) or explicitly initialized to that. `Nullable&lt;T&gt;` is a bit magic in the compiler and runtime (and so are `Int32` etc.)
That help text should be updated to use `connection.CreateCommand()` rather than `new OdbcCommand(queryString)`. Also type inference rather than explicit definitions. const string queryString = "INSERT INTO Customers (CustomerID, CompanyName) Values('NWIND', 'Northwind Traders')"; using(var connection = new OdbcConnection(connectionString)) using(var command = connection.CreateCommand()) { connection.Open(); command.CommandText = queryString; command.ExecuteNonQuery(); } If you for some reason decide to not use Odbc anymore, using explicit declarations for Command would mean one hell of a job with find/replace.
Thanks for the heads up. I do expect it's improved some but we'll see. Don't know if I want to fight this thing with people (non tech business side) already in disbelief it won't be done by the end of the year. 
`initobj` instruction.
The value is kind of implicit. It just makes an all-zero value, whatever that may mean for the specific type you're using. So an all-zero reference is `null`, all-zero float is `0.0`, all-zero struct just has its fields all set to zero. So, just remember that. You can't change or override this behavior.
I work on an ASP.NET Core project right now, no Angular though. I'd say that it's rather raw at this point, and I definitely would not try to develop something serious using it if you plan to release any time soon. It has a lot of advantages and things that I like, but .net core, EF core, and asp.net core have a lot of unresolved issues. I work on a relatively simple project and already faced a few of them. https://github.com/aspnet/Mvc/issues/4989 https://github.com/aspnet/Tooling/issues/575 https://github.com/aspnet/EntityFramework/issues/4319 https://github.com/aspnet/EntityFramework/issues/245 and etc. Also, like v1n1akabozo mentioned, you might miss some features of previous versions of EF, and it can be pretty frustrating, too. Good luck with your project!
If you're not going to use the debugger, just hit Ctrl+F5 when launching, that'll keep the window open without the need for a readline.
Yes, in this that's the one. It's used to initialize the `Nullable&lt;T&gt;` struct, without invoking any contructors. All fields (including the value) will then be initialized to all-0.
Yeaaah.. it's of very limited use currently, IMO. I'd rather install a bunch of cygwin tools or similar.
&gt; gives you far more performance than Mac + Windows VM/Bootcamp. Meh, bootcamp runs Windows *native*, so you get the performance the hardware gives you.
I belong to the generation that used to have Amiga, Atari, Mac and IBM-PC compatibles to choose from. So excuse me if I don't think of a Mac as being a PC. As for running properly, I only buy PCs with dedicated graphics cards.
&gt; but for .Net especially I see no benefit in running in a mac You mean the framework that's been cross platform for years? No clue why he'd want a posix compliant system capable of running Windows, Mac and Linux for something like that.
I didn't it wasn't cross platform but when people spend loads of time getting their mac to run like a pc to develop...why not just pc.
Let's not forget that this is a three-line program, though ;)
Thanks! That was the other one whose name I couldn't remember. I'll definitely give it another try in a few more weeks . I'm excited by the prospect of .NET Core and I plan on giving it a spin regularly to check on it's status.
If you're in need of a Visual Studio template check out Steve Sandersons blog, he has a link to a few different templates on there.
[Here is](https://github.com/dotnet/coreclr/blob/32f0f9721afb584b4a14d69135bea7ddc129f755/src/vm/interpreter.cpp#L5802) the actual implementation in the reference interpreter. Value types are zeroed with `memset`, reference types are set to a null pointer.
Parties are all about coke and booze. Programming does not factor in.
Okay so I've made some progress. Basically now it prints the "*" but it does it as soon as I enter the coordinates. It should print it after I type in stop tho. http://imgur.com/a/QoYBk
I basically need the simplest way to do this... Trying what you've told me but isnt going too well.
I believe if you're using Windows, Xamarin is integrated into Visual Studio and can't be downloaded of their website? Please correct me if I'm wrong.
If you don't like writing SQL, try Chain. It has similar performance and data access patterns as Dapper, but includes a SQL generator for the basic use cases including upsert. https://github.com/docevaad/Chain https://github.com/docevaad/Chain/wiki/A-Chain-comparison-to-Dapper
That's probably for the best. Still, both Dapper and Chain make calling procs nicer.
Could you give more info about what the error says? Is it a null reference exception, or? And one issue I'm noticing is that you're clearing primaryGuns, which sets its count to 0, and then trying to iterating through that count... But it has 0 counts, so not gun would be added. And why would you want multiple copies of the same gun in the list anyways?
Is "lil' Bastard" an option?
SpiderMonkey7862
The clear is simply for debugging purposes, to ensure that the list is empty before loading and repopulating. My Primary class is used as a means to construct or create new guns with different stats, something like what Diablo does with weapons and gear the xml is used to save those stats for if/when the player wants to continue. So in a temporary start() method I'm creating two guns with different names and stats and adding them to primaryGuns. Eventually a method will be created for "item drops" that generate a new random gun within set parameters. My hope is that with this I can leave open the ability for players to "upgrade" those same guns with better stats/abilities. I could be going about this the wrong way, I'd use Player.Prefs but from what I gather it's not a viable method for what I want to do in the long run. As for the error: Error loading XML file from: Inventory.xml UnityEngine.Debug:LogError(Object) ItemManager:LoadXML(String) (at Assets/Scripts/Items/ItemManager.cs:88) ItemManager:OnGUI() (at Assets/Scripts/Items/ItemManager.cs:49) I'm hoping to build this out for various different types of items. Things like EXP Boosters, Quest Items, different "weapon types" (Primary, Secondary, Heavy), and probably some sort of Crafting Material for weapon/gear upgrading. EDIT/ If it makes it any easier, here is a pastebin of the whole thing! http://pastebin.com/bhSjwE9E
It depends on the application for me if I use sprocs or not. I prefer not to spread out the business logic that way but sometimes you have to.
Why did you remove the T from the Load and Save classes? T is what allows you to use it with various classes, right now you've made it only work with Primary, and that might be causing issues because you're trying to use it like a generic even though it's not setup like one. You shouldn't have needed to edit the load/save code I gave you at all.
Oh! I was under the impression T was just an example! I should have read your instructions more clearly. I'll try it out. :) EDIT/ Also I'm not sure why you're getting downvoted, but it's slightly annoying.
What about t-bone?
I wish more people understood that.
ForTheWin Because it's for windows apps.
You're not passing any parameters to the calculation function. When you reach case B, ask the user for input the same way as you do in ValueInsert() and pass the values to the calculation(x, y) function. That or remove the parameters and do it the same way as in valueinsert.
I'm on my phone so I apologize for the short reply, but I can see at least one problem. Your "Calculation" function accepts two parameters (arguments). When you call Calculation in your case statement, you are not passing in any arguments to the function. To call a function, the name and the parameters have to match up to the function definition. Try changing the line under case B to: int amount = 1000; int years = 3; Calculation(amount, years);
I would have done that but my assignment has to be done this way :/
I want to work on advanced C# concepts. "Start" in this context is as a newbie to Github environment and Advanced C# programming which project will offer me the chances to full fill my motive.
 static int amount, years; public static void RunDemo(string option) { switch (option) { case "A": ValueInsert(); break; case "B": Calculation(amount, years); //My code gets messed up here, I'm totally lost! break; } } public static void ValueInsert() { Console.Write("Please enter your amount: "); amount = int.Parse(Console.ReadLine()); Console.Write("And your years? "); years = int.Parse(Console.ReadLine()); }
It worked! Thanks so much!
for example aysnc programming, TPL etc. Thank you.
Anyone knows what to use those for? Multiple `out` variables seem to be a sign of refactoring need. Am I off the mark there?
Make your own, it's the best way to learn. Use msdn/stackoverflow and jump in.
I would go something like this: 1. Prepare two-dimensional array of chars, of some arbitrary size, filled all with #. 2. In while loop, read the user input, parse it, update previously created array with received coordinates, until "stop" is written. 3. Outside the loop, print whole array.
Telerik makes a UI for Xamarin that has some pretty great controls. 
For that you actually have to touch the mouse though :p
If you want to learn, get a good advanced book. Some good ones are: - C# in Depth (Skeet), 3rd Edition - CLR via C# (Richter)
Thank You! :D :D :D Everyone else was like "It just is". Well - I KNEW that it was - I was wondering specifically where - And this is exactly where :D
Yes; switch to [Newton's method.](https://en.wikipedia.org/wiki/Newton%27s_method)
One could learn lots from a working example. Not everyone is going to copy-paste and forget. And if they do, programming isn't what they love anyway.
That is an awesome response.
1. `var`, for heaven's sake. If I don't care about the contents of the variable, I sure as heck don't care about the *type*. List&lt;T&gt; list; DoSomething(out list, out var _); 2. `out` variables are required to be set before the method returns: you don't need to initialize a variable if the first thing you do is pass it as an out parameter, because the method you're calling is required to do that for you. That said, it would be even better to just use a wildcard as a placeholder for the entire variable declaration in the case of values you don't care about. Instead of (var list, var _, var _, var _) = DoSomething(); something like (var list, _, _, _) = DoSomething(); Because no information of value is actually *lost*. Which is actually how the current proposal on pattern matching and record destructuring for C# 7 does it. Incidentally, the full proposals for these features are (here (out var))[https://github.com/dotnet/roslyn/issues/6183] and (here (pattern matching))[https://github.com/dotnet/roslyn/issues/206]. The currently proposal on pattern matching and wildcard is the humble Kleene star, instead of the underscore used by convention is many functional languages: (var list, *, *, *) = DoSomething(); but wildcard out vars are [also already proposed](https://blogs.msdn.microsoft.com/dotnet/2016/08/24/whats-new-in-csharp-7-0/) (from that link): p.GetCoordinates(out int x, out *); // I only care about x It's just not clear if they'll be in C# 7 or a later release.
It's an alternative to having an explicit class or structure type for the return value of a single method, basically. Getting better tuples will eliminate the need to have multiple (or any!) out parameters, but there will still be a bunch of code like that scattered around older APIs and the .NET framework.
Yea Xamarin used to be standalone on Windows, but now since Microsoft took over Xamarin, it's integrated into Visual Studio. So no more standalone application for Windows. Mac still has it though.
The thing going on here is something known as **scope**. Most languages have a **local scope** and a **global scope**. The integers **amount** and **years** in your one method are actually completely different variables from the **amount** and **years** in your other method. In fact, they variables that you declare in both methods, only exist in those methods and as soon as your leave the **scope** of each method, they disappear! (for all intents and purposes. The garbage collector actually gets to them whenever it feels like it.) What you could try is declaring your **amount** and **years** variables in the global scope at the top (right before your "switch (option)" statement) Then get rid of the "int" declarations in your first method. (By leaving the int declarations in place, you'd be overriding the global variables of the same name with locally scoped variables which have nothing to do with the global ones.) Does this make sense? If not, I suggest you read this Wikipedia page starting here: https://en.wikipedia.org/wiki/Scope_(computer_science)#Levels_of_scope 
You should read documentation and examples for Console.ReadLine(), Console.Write() and multidimensional arrays. Your ideas are not bad, they just need to be polished a bit. EDIT: I see you made some progress. Store all the values and loop through them after "stop is entered". A simple condition followed by a loop should do the trick. Try to imagine how your program works step by step, or even better, use the debugger to watch what happens at every moment, and compare it with what you think are the steps required to accomplish your goal. I also think that you need Console.Write() rather than WriteLine().
Not sure if I've seen something like that. Maybe you're looking for something like [Code Connect](http://codeconnect.io/)? It's in Visual Studio though, so you'd probably have to extract all the decompiled code into standard C# files and project(s).
Yeah, it's just one of those things some people prefer not using var for - it can introduce ambiguity. I personally love var, it makes code so much cleaner and much easier to refactor. Plus I'd dare say if you ever do have a case where you've got multiple out variables you don't care about *and* multiple overloads, then you have much bigger problems!
Exactly the books many people suggested ! Further they recommended me [this](https://www.amazon.de/Pragmatic-Programmer-Journeyman-Master/dp/020161622X) 
ah, not sure why people are downvoting you.
Thanks for replying! My work is generally done in Visual Studio so unfortunately, I've already got the situation where I have standard C# files and an .sln project covered. I often have to dig through dlls to investigate how stuff outside my area/repository works. Hang on, are you suggesting that dlls can be decompiled into their original .sln and .cs files? 
&gt;Right, and so they should fail out of the class and switch majors. Attitudes from people like you is the reason why there is so many availability in jobs. Cheers. 
Agreed! How do you spin those apps up? Right now to deploy I do the following. 1. Shut down the open ones 2. Copy over updated files 3. Either run bat file or click the exe a bunch of times 
ILSpy supports saving dlls as Visual Studio projects.
Why not? It's another language in your toolbelt. I'm sure someone will give you a much more expansive answer about functional programming, but for me, I've found F# to be more succinct and stricter than C#. I prefer C# though.
Makes sense, thanks! :)
This will probably work well, but it may be jittery at high speeds. If you need more precision, you can use a Stopwatch with a spin wait. static void SpinWait(int ms) { var sw = Stopwatch.StartNew(); while (_stopwatch.ElapsedMilliseconds &lt; ms); }
I wasn't the one giving the answer. But in my case, I learn a lot from a working example because I already have the experience about the language. &gt; I've never found this to be true. You literally just handed the person the answer. You never learned from a working solution? I often look into other peoples projects because often they have something useful that I can take over and learn from. I believe there's a balance between having a hard time doing something yourself and learning from others, looking at an solution how they do it. 
The problem with `Thread.Sleep` is that the executing thread yields its timeslice. It will "sleep" for *at least* as long as you specify, but may not immediately resume after. Like I said, it only really matters at high speeds.
`SpinWait` is a specialized construct for lock-free programming and isn't a suitable option in this case. The reason for this is that it's more than a simple `while` loop. For example, on single-core machines, it will simply yield the thread (as it assumes that no other state could possibly change concurrently). Even on multi-core machines it has special branches for dealing with hyperthreaded architectures, and may still yield the thread when it thinks enough time has passed. For more information, see here: https://msdn.microsoft.com/en-us/library/ee722114(v=vs.110).aspx
Something to consider is to set default values for `amount` and `years` in order to run a check in calculate that catches the error for when B is called before A. Then, in calculate, when the check passes (A was called before B) the calculation is performed and then default values reset so that A needs to be called again. But that's just me
Nah, if the cursor is already in spot where you're about to add `Console.ReadLine();`, all you have to do is press down to move it to the closing brace and then F9 to set the breakpoint.
A new paradigm will force you to think differently. Why bother learn OOP when you can stay with imperative? It is really good for scripting.
Oh? Thanks :D Thought `"` and `'` are interchangeable &gt;.&gt;
Double quotes are used when creating strings, while single quotes are used for single chars, they create different kind of objects. In general there wont be much difference if you're using chars in combination with string concatenation since '+' operator is overloaded but any other use where compiler expects one and you supply the other will result in an error(try creating new string with a char value or vice versa).
Removed: Rule 4. Please make an attempt and if you still have issues, repost your question and include the relevant details. Please explain what you have tried and what worked and didn't work. Also, if this is part of an education exercise, perhaps you can link to that reference. We've had another user recently posting very similar/identical code and questions. Consider maybe send /u/ihatecompscience a private message; they seem to be working on the exact same assignment and they were looking for someone to work with.
I would rather have someone work with me that is possibly more experienced than I am that could guide me in the right direction on my code. I said I could upload everything else I don't have posted, I wasn't sure what all I needed to upload as this is the first time I have ever posted here. Thanks for your advice.
I dont know how to store the values except using an array like I did above? Does anyone actually have the time to do the application and paste the code here for me, as Im really out of ideas?
Use 4 spaces before each line of code to make it easier to read. like this: public void CreateAccount() { DBConnect = new SQLiteConnection("Data Source=Aetheria.db;Version=3;"); DBConnect.Open(); SQLiteCommand saveAccount = new SQLiteCommand(); saveAccount.CommandText = "insert into Account" + "(accountName, accountPassword) " + "VALUES " + "(@accountName, @accountPassword)"; saveAccount.Parameters["@accountName"].Value = _account.AccountName; saveAccount.ExecuteNonQuery(); } &gt;The issue is that I'm getting an error from attempting to call the method: "An object reference is required for the non-static field" Sounds like you're trying to do something like call MyClass.CreateAccount() without instantiating the object. If you create a class, you have to either make it static or instantiate it: MyClass myclass = new MyClass(); Don't worry about static right now. You'll probably have your Main as static but at the start, you'll want to learn how to use instantiated classes.
that looks tasty, thanks :)
So you just copy old videos to your YouTube channel and promote them on reddit? OP joined reddit today. Out-dated video posted on YouTube today. Lame. Original video posted by MSFT in May 2015: https://www.youtube.com/watch?v=I6SU7UTaA3E
Also, it's ASP .Net Core 1.0 not ASP .Net 5.0 now. Immediate giveaway it's old content.
Yeah, array is the simplest and probably the best approach here. Console is basically a 2D plane, every point is defined by two coordinates, so it makes sense using 2-dimensional array. Then after you collect all the values you just loop through array and print asterisks. Just read the documentation and example usage of multidimensional arrays. C# docs are great, I am sure after looking at the examples you will be able to use them properly.
So let me get this right? Say you have a .exe that accesses 5 .dll files. You want to run a program that can pass, for example, a string through a method to see which classes, which DLLs the program accesses as a way to see how data is streamed and executed?
1. Create a 2D Array - This will contain X and Y values 2. You need to create a loop which will contain the code requesting X and Y, or waiting for 'stop' to be stated. You will want to use 'ToUpper' or 'ToLower' for input so you can read 'StOP' as 'stop" or "STOP' 3. Ask for x, ask for y then add to the array. 4. Print when loop is broken. You will need to determine what you will do if the user inputs an x value and stops for y. Will you toss out that entry or simply input 'y' as '0'. Be sure to parse all entered data, for values; check first to see if 'stop' is entered. You may want to parse it too to look to see if the string contains 'stop'. ie. '5stop222' - parsed string = 'stop' - parsed int - '5222' When you parse for stop and you don't find anything, you can parse then for the int values, ignoring the possibility of '1a222' -&gt; '1222' You may also want to set a value cap -&gt; if you are working with int16, int32, int64 you may want to set to [Max - 1] or if you don't want above say '1000' for x and y, check to see if input is above that value and either require they renter a new value or set that the entered value automatically equals '1000'.
In basic usage of Json.net, the `JsonSerializerSettings.TypeNameAssemblyFormat` can be set to Full or Simple. What you are seeing is the 'Full' type name. This is a bit odd since the default is to use the simple name. Possibly this is being set somewhere else in the code, or your usage is a bit more complex.
Thanks and yes I know how it should look but I dont know how to put it in code. 
PM a pastebin copy of what you have already written. I can help direct you. Edit: Need to ask, is this for a HS/College course or is it for personal knowledge?
Can you copy the relevant code? I'm a little confused as to what you're asking.
Its for personal knowledge, but I study c# in school aswell so its good practice.
Most probably a folder in the solution. When using visual studio by default it's not possible, you need F# power tools. It's silly.
Sent you a PM btw. If you have skype or something, pm me that aswell so we can have a normal convo.
I'm now trying to combine the type back into the flag set, I believe this is correct: RecipientFlags flags = RecipientFlags.DifferentTransport; //This is a ushort RecipientFlagsType type = RecipientFlagsType.Smtp; //This is a byte //Cast both to ushort, and or the flags inverted mask with the type mask flags = (RecipientFlags)(((ushort)flags &amp; ~0x7) | (ushort)type &amp; 0x7); It does seem to allow me to extract the type again without issue. Do you see any problems with this method?
Don't. Even the very best programmers sometimes misses blatant typos staring them in the face. That's why programmers work best in teams: one guy can see what the other guy might miss.
There really isn't much code to post... System.Console.WriteLine("Enter text:"); string s = System.Console.ReadLine(); However, if the entered text contains a `\n` the `ReadLine()` will return only the part of the string that's prior to the first `\n`
You can't enter decimals because you're converting txtHours.Text to an integer. You want to convert it to a double.
I've read a lot about F#. Almost all cases have only good things to say about F#. The main thing they complain about is F# kind of being overshadowed by C#(which took some big F# features in new versions). Eventually I decided to learn Scala(mostly because of ScalaJS and Native) as I feel like F# is kinda stuck. I really hope Microsoft/F# Foundation is gonna do something sweet in the near future! edit: Also want to clarify that I hope to have time again to learn F#! it's always great to learn new stuff.
I suspect you meant your for loop to test startingYear &lt;= years.
So i tried that and my program blew up http://i.imgur.com/l11tmp8.jpg
So i tried that and my program blew up http://i.imgur.com/l11tmp8.jpg
&gt; for(int startingYear = 1; startingYear &gt;= years; startingYear++) &gt; startingYear &gt;= years; The second piece of a For loop is the *condition* under which the loop will continue to run. For every iteration of the loop, that condition is checked. As soon as the condition becomes *false*, the loop stops. This includes the first iteration of the loop. In your code, if the value for your "years" variable is anything greater than 1, your loop will never run. You probably want this instead. for(int startingYear = 1; startingYear &lt;=years; startingYear++)
I couldn't get try parse working
totally justified, absurd that microsoft hasn't fixed that in visual studio. the f# power tools partially fixes that problem, or you can use vs code with the ionide plugin.
Oh. Yes, thanks. Do you know why if hours exceed, it doesn't calculate additional hours right?
Thanks for the help!
Thanks for the help!
Thanks for the help!
That doesn't look like a valid format string (which is what the error is telling you). TBH, I'm not even sure what you're trying to achieve with that format string anyway.
Any source on that being more reliable and less jittery than sleeping?
Okay, cool. Have fun!
Probably because F# has a lots of neat features that make development time faster(http://fsharpforfunandprofit.com/why-use-fsharp/). Also SO survey for the happiness part: http://stackoverflow.com/research/developer-survey-2016#technology-most-loved-dreaded-and-wanted (it's ranked 3rd in loved but yea "happier" developers is poorly worded.)
You can set the ordinal column number on your DataTable columns to ensure they get inserted in the right order. [See Here](http://stackoverflow.com/questions/3757997/how-to-change-datatable-colums-order). It sounds like you might be using the same UDT across multiple stored procedures. This is something to avoid unless the structure of the UDT can be kept very rigid. The link between sprocs and UDTs is very brittle. In general, I've found it better to create a separate UDT for each sproc. Any change to a single UDT will not cause you to have to drop and recreate all of the other sprocs that reference it. Some repeated structure across your UDTs, but worth the price in many cases. If you have a ton a variability in the schema, and are looking at too many UDTs too manage, you might consider copying the data from DataTables to temporary staging tables in SQL using bulk copy protocol. Then you can join/merge the data in the stage tables to the permanent tables directly using SQL - dynamically generated if need be. **Edit** you can also insert directly using bcp, though whether that makes the most sense depends on your use case.
If you surrender so fast, how have you ever learned another language? 
Here's a quick Unity scene example I whipped up you can take a look at and hopefully learn some neat stuff from. I show off using inheritance and polymorphism a bit as well in the Guns class. Press S while the game is playing to save the Player class to xml, it will show in your project. You can then edit that XML, then press L in game and watch as it populates the new values in the inspector on the Player object in the scene. http://www.filedropper.com/xmlserializeexample Hopefully of use to anyone else who stumbles upon this topic in the future too.
I'll have to check this out! I'm out at the moment, I'll let you know how it goes probably sometime tomorrow. 
Won't be an issue at these speeds, I think. Besides, spin-waiting is no guarantee that you won't yield to another process either.
&gt; Which allows for the Thread to remain active in the processing que and communicate, even while it's actively waiting to perform a function. This mostly matters if a) it's the GUI thread, which it's not here or b) you are starting a large number of threads.
Hey, I appreciate the response. &gt; Have you tried to ALTER a user defined table type? Yes I have, and the only process I'm aware of that you can use to do it is the one you described (alter sprocs that use type, drop type, recreate type, alter sprocs). I actually very much appreciate this requirement, as it makes running into the issues I described with ADO more difficult. &gt; However, the nature of making a change like this means that A) the UDT should be well thought out and designed from the start (i.e. it should have very little reason to change) and B) its also clear on the DB side where those changes are effected due to not being able to DROP while you still have a reference. I think those are two good things, and it also minimizes the desire to add a bunch of UDTs to the DB and using custom types in far more places than you really should. I agree with all of this in theory, but unfortunately it's not possible to guard against future changes. If we add columns to a table with new data for new requirements, the sproc also needs updating, requiring a modification to the UDT as well. This is the point where my concern comes in. A "normal" sproc can be altered without affecting any code using it by adding optional parameters. However, when the sproc uses a UDT, any changes to that UDT will silently break all places in code that sproc is called at runtime, even though it seems like that does not need to be the case at all. It seems like if I make a column nullable on my UDT, that would indicate that I do not always require a value, yet this is not the case with ADO when using UDT. &gt; If it was using the names of the column and the insert failed, it could look like I have an issue with either my data or my data table. Ultimately, the underlying data could be inserted just fine, but the name raised an error. I don't know which way is better, but I'd just say ADO is what it is, and at least you know how it functions in case it causes problems in the future. I see your point, but honestly in my use case the column name method seems preferable, which is why I'm hoping to find some workaround to this. When calling a sproc normally with parameters, all parameters must be named correctly in the code *anyway*. I agree that getting the names right can be a pain, but that's just the thing: I *want* the UDT column names in the code be forced to match so that there is more consistency and readability across SQL and our codebase. &gt; I don't know which way is better, but I'd just say ADO is what it is, and at least you know how it functions in case it causes problems in the future. I am generally happy with ADO except for this single issue, and honestly was not sure (and still am not positive) there isn't some option I can use to explicitly set the UDT column names on the SQL side when calling a UDT sproc. &gt; I recommend having a POCO that mimics the structure of the UDT, and having a utility or static method that will take a list of them and spit back a data table. This way you aren't creating data tables in each place you need to use it and you've got a consolidated consistent place where the data table is constructed. If any changes do need to be made, then you've got 1 place to go. This is exactly what we're doing, which, again, is part of the problem. A POCO, through reflection, is serialized into the DT. Developers do not work with DT directly, ever. The code is already DRY when it comes to the sproc call. But this is also part of where the less intuitive nature of the out of order problem rears its head. If *any* of the C# Properties on those POCOs are written out of order while still being SQL type compatible, we are left with that nasty silent logical error of data being saved to the wrong column. When dealing with 30+ columns, this can be *very* difficult to catch, and I would much rather have our sprocs break on runtime if *ANY* of those POCO Properties are simply given a name that does not match a UDT column, similar to what would happen if we ran a normal sproc with a missing required parameter, or a misnamed parameter.
Well, to be clear, it seems I added confusion. I meant I couldn't create a folder within my solution/project. I added quite a few files and the alphabetical sorting was jarring. I asked a friend that worked on it for four years told me that you shouldn't have too many files anyways. I eventually found a plugin and found that there's a problem if you create a nested folder that has the same name as a parent in its hierarchy it causes problems? I don't truly understand what was happening. There's the whole IDE vs Editor debate right? Visual Studio is an IDE, but when I couldn't create a folder I felt Microsoft was telling me they don't care enough about the language. If they don't care enough, I don't see why I should.
That's what readline is designed to do. It takes a line input. If you want multiple lines, say until it's blank, then you need to add a loop around it with a check to see if the entered input is blank.
I'm using NotifyIcon right now for some testing but I was hoping there was something that could act more like a form for me to dump some labels on. It looks like the NotifyIcon library is what I will have to use. I thought I would be able to use a menu similar to what Microsoft has on Windows 10 but I forgot those menus slid in from the right of the screen in Windows 8 and 8.1. So it won't work. I suppose I could just create a form that is displayed when clicked and make it disappear when the window looses focus - assuming those functions are possible. WPF may be an option, but I'd rather have something that looks like it fits in with the Windows OS and not some alien application that doesn't fit in with anything (any application that deals with gaming peripherals i'm looking at you)
Oh, I see! Yeah, the VS support for doing things in F# really seems disappointingly incomplete, compared with the support of C#. Can't auto-rename things, or find references, etc, either.
Yeah, right now Scala is definitely more popular than F#. I considered learning Scala but I decided my chances of using F# in my day-to-day job were much higher than using Scala since I could call F# code directly from the C# code that I write on a daily basis. 
Definitely subjective. Right now I am having a lot of fun learning F#, but I'm sure that the new and shiny will wear off eventually.
Yep, I've never heard of a developer that learned a different programming language and wished they didn't...
It sounds like you've already thought about and set up quite a lot of infrastructure around using UDTs, so I'm not sure there's anything out of the box that's going to help you with this, you'll have to write some more code. &gt;A POCO, through reflection, is serialized into the DT. Developers do not work with DT directly, ever. The code is already DRY when it comes to the sproc call. But this is also part of where the less intuitive nature of the out of order problem rears its head. If *any* of the C# Properties on those POCOs are written out of order while still being SQL type compatible, we are left with that nasty silent logical error of data being saved to the wrong column. This sounds like a good setup, but the LAST thing I would do is rely on the order of how things are written in the class. This is very transparent to the developer and also implicitly reliant on the compiler and framework returning the properties in the same order across versions. If you're already using reflection than why not use some sort of order attribute to be able to explicitly set it. That would be much clearer, much more transparent, and much more scalable. The other thing I would probably do is add some sort of attribute to override the property name, so that you could keep the name in the POCO different from the name in the DB. That's certainly not ideal, but I also would be a little unconfortable with always having to have that 1 to 1 correlation between the class and the DB. Display Annotations has an order attribute - https://msdn.microsoft.com/en-us/library/system.componentmodel.dataannotations.displayattribute.order(v=vs.110).aspx The DataMember attribute will allow you to set both the order and the name - https://msdn.microsoft.com/en-us/library/system.runtime.serialization.datamemberattribute(v=vs.110).aspx The other two things I'll suggest, since your already somewhat at the limit anyway is either doing some sort of type inspection check against the UDT or having a process to dynamically generate the POCO from the UDT. For the first suggestion, you'd basically write some code that checked the POCO against the UDT to see if the two properly matched up. This would give you a lot better control in regards to understanding where the issue is and you could better define what the mismatch is between the POCO and the UDT (because there may be several if adding multiple columns). I think a good place for this process is within your build system, so you get those failures as early in the development cycle as possible. The other place could be at the startup of your app, but I think that could be too little too late. I think dynamically generating the POCO would have there be a more direct workflow around the process of changing the UDT. So whenever that change happens, you regenerate the POCO and sort out any of the failures that pop up. This is a little bit more proactive in regards to finding these changes, but could potentially cause some issues if the generated POCO winds up breaking a bunch of code (which it shouldn't, but could)
I think this is a valid point. I didn't post any references and I am not the one making these claims. As I researched F# and tried to find out why people would use it, these are just common themes that came up over and over again. I read lots of articles about it, but here is one article from Jet.com on why they chose F# vs C#. https://tech.jet.com/blog/2015/03-22-on-how-jet-chose/
Thanks for the additional resources, I appreciate it.
Yep, I ran into the same problem and found the same solution. It doesn't make sense to me. 
I'm sorry you feel this way. I am mainly sharing my experience with wanting to learn a functional programming language and getting started with F#. What specifically do you feel lacks basis? What could I do differently to improve future articles? Thanks!
F# lends itself to very terse code, I find, and it eliminates a bunch of boilerplate and bookkeeping that's necessary in C# with better type inferencing, tuples, etc.
Figured I should post it here since im trying to create a smaller community for any programmer out there.. Not just for the very advanced or beginners, I wanted to create a place for all the programmers! And with said I wish you a warm welcome!
I learned bash and I wish I didnt x)
You can use WPF to make your own? [Here is an example form](https://github.com/AronDavis/TwitchBot/blob/master/TwitchBotApp/Notification.xaml) and [here is the code behind it](https://github.com/AronDavis/TwitchBot/blob/master/TwitchBotApp/Notification.xaml).
Yep, I tried using tuples in C# and it is a complete pain, but in F# it is just so easy and natural...
That is the limit of OOP
I was thinking bulk copy might be a solution here as well.
Is there a joke here that I am missing?
http://arteksoftware.com/resilient-network-services-with-xamarin/
Maybe paying homage to school shootings? `class Shooter` Only thing I can come up with.
I'd highly recommend [AutoFixture](https://github.com/AutoFixture/AutoFixture). The author strictly follows good software design principles and I've really enjoyed reading the source code so far. It might be useful to learn AutoFixture basics first and try it out in unit tests. The author Mark Seemann also has really good content about software design principles on his [blog](http://blog.ploeh.dk) and his pluralsight video on SOLID.
This is the most frustrating thing about F#, the tooling is weird. That and having to list your files in dependency order kind of killed the language for me. It's like going back to #including header files...
 public class ShooterMcGavin { ... }
Put the solution on GitHub or Bitbucket (or other) source control solution. Then each developer can pull down the latest changes, work on their own local copy, and commit/push changes to the source control repository for others to pull down and merge with their own local copy work/commits. Google git or mercurial for more information on usage. 
Yeah, like public school shootings.
https://github.com/kbilsted/StatePrinter/ advanced but simple topic
Oh god no.
I wouldn't recommend tfs. I found it a pain myself when we use to use it but that's more personal preference. But do Microsoft still develop tfs? I would go git route. With bitbucket. You can have private project for free (as long as less than 5 deva work on it) 
Seems a bit overkill to recommend setting up a source control server to someone who's never even heard of source control. There's lots of free online options out there. Also a local server how? On his machine isn't massively going to help others work on it without setting up networking too. 
Yeah, it really fell flat :/
I'm not sure if Window Title is the correct name for it, I thought it was but I'm not sure. Its supposed to be something that gives me the string notepad or notepad.exe just the name of the program or yeah like mentioned the ProcessName. It really can be anything that would be the same for every instance of Notepad and lets me determine that it is notepad. You can exchange Notepad with any other program you wish, i just use notepad for testing
You can use [`GetWindowThreadProcessId()`](https://msdn.microsoft.com/en-us/library/windows/desktop/ms633522.aspx) to get the process id and from there get the process name with the `Process` class.
Ah well, that's why I said, please correct me if I'm wrong :) I've searched for it quite some time but couldn't find it anywhere :)
To clarify, you will still need to download the particular DBMS (database management software) you want to connect to, such as SQL Server; there aren't any included with Visual Studio. However the C# libraries you need to connect to it and a few other databases are included.
It's definitely a bad solution. Possibly worse than just keeping the solution on a thumbdrive and sneakernetting it between computers. But, *if* they never have two people in it at once *and* they don't need change tracking *and* it's a small project, it *might* work well enough. And everyone else already pointed source control.
Yeah I thought about using contains, but this may cause some error when using it with other programs, one is called sai, and the string sai would probably be found in some other programs too
TFS is more than just the (terrible) source code management system. TFS2015 uses (or can use? not sure if it's mandatory) git for source control. That said, you don't need all the other stuff if you have one solution, so github or bitbucket is probably the better choice.
We're using git through TFS2015 at work. It's a humongous improvement over the previous TFS source control, but I do find myself missing SVN (after almost ten years in a previous job). Git does a number of things *better* than SVN. But ... man. Git has mostly different vocabulary, important differences in the way it does things, etc. It's a lot to figure out, up-front.
I'd pick Mercurial instead, or git. 
If it *always* appears on the end of the title you can use Substring() instead, and then it is guaranteed to be referring to the app and not part of some other word. string titleSuffix = " - Notepad"; int startPos = titleText.Length - titleSuffix.Length - 1; if (titleText.Substring(startPos,titleSuffix.Length) == titleSuffix) { // Do stuff } 
It you have no source control experience - start with git. SVN (according to Linus) is as wrong as it is different... which is a lot. Don't even touch CVS. Everyone jumped ship long ago.
&gt; I think I'm the only dev in the world who hasn't I only recently used Git for the first time to add Json.NET to our project.
I've created (twice now and it really needs a third pass) a custom panel which serves two purposes: 1) Allows the user to rearrange, pull out into a new window and nest all instances of this panel. Basically it lets them customize their UI to their liking by moving blocks of it around and even positioning parts of it in new windows if they so choose. 2) It also allows for sizing something like a DockPanel, but without the LastChildFill functionality and something like Grid's * width/height specification. I also wrote a new GridSplitter type element which has improved functionality and operates seamlessly with this panel without needing to be explicitly specified. I basically used Visual Studio's UI as the inspiration insofar as how you drag and move elements around, but without the autohide feature. Overall I'd rate it a moderate success. It taught me a lot about how WPF measure, arrange and render works and just how poorly Microsoft documents this stuff. There are many hidden quirks, undocumented behind the scenes optimizations and outright breaking their own rules in their own controls.
Also there are pair programming tools that allow you to literally work on the same file at the same time. But you were probably wondering how source control works so you can take the advice from the other posts.
What is terrible about TFS? It looks to me like it is just SVN with renamed commands and stellar VS integration.
None of which was stated, or mentioned that he did or didn't know when I posted that. I recommended that because it was the path I took when asking the same question to myself. Needing a way for multiple people to use the same solution lead me to source controls, to git, to git hub, to git lab and eventually me setting up my own server.
If you decided to use GitHub, make sure the [GitHub extensions for VS](https://visualstudio.github.com/) is installed.
Try "U-Got-Served" on for size. 
Give it some time, friend, and you'll soon see the light. Git is definitely not the easiest to pick up, but once you've got a good handle on it, it's really nice. I've used it for years for personal projects, and have been forced to use SVN for the last year at work. I absolutely cannot stand SVN in comparison. Merging never seems to go smoothly, branching is a much bigger pain in the ass compared to git (even if you structure your repo properly from the start), and it just feels clunkier in general.
I've used that library extensively for the last year and I can say it's great to work with. 
I've looked at git-svn before, but I never got enough into it to warrant using it. We also tend to not use svn properly at my office, though I'm fighting to improve that, which doesn't help things. We also use svn externals which ends up causing headaches with git. All in all, we just need to find time to clean things up process-wise, but when you're a "we'll get this job done quick and on the cheap for you!" contract shop, time is a luxury we tend not to be able to afford :/
Git to add json.net? Do you mean nuget?
You might want to try using the [STL file format](https://en.wikipedia.org/wiki/STL_%28file_format%29). I was able to even write a simple cube by hand once!
I did a layout panel for automatically arranging in a circle rather than a grid layout. Think of it for things like circular icon menus 
Ooh that sounds interesting... so each child element positioned at sort of a polar coordinate with a uniform radius? Was each space allocation uniform? (`(360d / Children.Count) * elementIndex` degrees? @ radius)
[Double.TryParse Method](https://msdn.microsoft.com/en-us/library/994c0zb1\(v=vs.110\).aspx)
As I said. It's probably a personal thing but u found it randomly "locking" files to other users and you needed to get then to check it in (even if it wasn't edited) just to unlock the file. Also it wasn't great at working offline due to its centralised server format. Again causing problems when coming back online. And when we tried to pick up our server and move it to a new virtual machine it wasnot a easy task 
And for git, there's a book on how it works (Pro Git) available online for free: https://git-scm.com/book/en/v2
I'm pretty late to reply but i am curious on what route did you take for the charts, canvas?custom panels , base uielements or something else? I did roll my own (very basic) line chart using a canvas and a lot of code behind but im not happy on the code so i would be curious to see yours for any chart you want :)
Isn't the locking an option that is turned off by default? Last I have seen a locked file was in Source Safe
Actually great question. My visual tree for the line graph especially is so obnoxiously deep because i use ItemsControls where the ItemsSource is actuallycalculated using logic in overly complex MultiBindingConverters, returning tons of "arbitrary" data structures that i bind to. I often use grids where i should have probably used canvases. I also have an idea for a custom layout panel that sort of merges the polar coordinate system with the Cartesian system. I dont do anything at all with the drawingcontext, i heavily avoid interacting with visual elements in the ControlTemplate's visualtree from the C# end. This is amazing in some ways, you get precise control over visual layouts and theming while keeping rendering logic isolated, etc. But in situations like the LineGraph, any more than ~100 or so data points will cause major performance problems and it will feel laggy. I can definitely upload the code for the LineGraph so you can see how i structured it, but it relies on a huge amount of base code that my company wouldnt allow me to provide. It also might be a lot to digest, cause to be honest i am a 21 year old developer and all of my coding experience has been as a sole developer. No programmer has ever looked at/reviewed my code before, which is not a good thing hahaha. In the meantime, could you upload some code from your linegraph control attempt so i can see how you approached it? It doesnt have to be 100% complete or compileable, just to give a general idea.
RemindMe! 2016-11-18 "chart for ccred95"
You Can Open Google maps url with lat and long. I don't knwo the param anymore but you Can then get the Infos via json
Removed: Rule 4.
Spot on, the radius also grew depending on the size and count of items so that it could accommodate without overlapping. 
Look up json format. 
Yeah I think it does, I might try this one and see how it works
1. The VS integration is fantastic. It is actually *less* good with TFS2015 and git than it was with our previous version of TFS (don't actually know which that was). 2. I'm sure it's at least partly a problem with the way we were using it (details of which I don't quite know: I didn't see much of it before we changed over), but it doesn't seem to handle merges tremendously well. Lots of pain around merging. Lots of problems with branches being out of sync. YMMV. Wouldn't say it was 'just SVN': seemed a little more primitive, but, again, it could very well be that our process was just six kinds of stupid.
use git
http://stackoverflow.com/a/10630026/2595033
Combination of SUMS not just permutation of list order, thanks though
There are a few different limits. For reference types, the size of a *variable itself* is just a pointer, i.e. 32 or 64 bit depending on the architecture. The largest objects are typically arrays, which as already mentioned have a limit of 2 GB. This goes for strings as well, as far as I know. Strings are UTF16 though, so 2 bytes per character. Note that this only concerns the size of the array itself. You can have an array of references each pointing to a larger object that in total exceed the 2GB limit. Of course you may also get an out of memory exception much earlier depending on the system. There is also the 85 KB threshold after which objects are allocated on the Large Object Heap which has worse performance characteristics regarding memory management, so some people try to avoid allocating such objects as much as possible. This should only be a concern in high-performance applications, though. For value types, I suppose the hard limit would be the size of the stack (by default 1MB), but reaching that would be insane. The general rule of thumb is that they shouldn't be larger than 16 bytes if they are passed around frequently since the entire struct needs to be copied each time. This isn't a black and white rule though, it depends on the specific use case and should be decided with benchmarks if necessary.
The limit is "as much as necessary, but no more". . Having a complex type with lots of unrelated members is hard to reason about. Having a complex type with lots of intertwingled members is even harder to reason about. So only group things that logically belong together, and try to separate out ideas from eachother as much as possible (see also, "simple made easy"). . You probably don't want your program heap to be larger than available RAM. Either you'll crash, or you'll start spilling to swap space. Both of which are bad, and it's debatable which is worse. . If raw speed is important (note that it isn't always), you want you "hot" variables (that your program uses the most frequently) to fit in the processor cache. That tends to be a couple MB these days. Of course if you're doing something where this actually matters, you'll probably want to investigate using a non-garbage-collected language. . Some specific data structures can sometimes benefit from being sized to match a cache line. If you're working in C# instead of C, you very probably aren't doing anything where this actually matters.
Check out these two: /r/coolgithubprojects /r/github And in my opinion the best way is if you start a project of your own and then try to make it work.
...what have you tried so far?
Yeah, I think that C# 7 is supposed to have better tuple support and also pattern matching.
RemindMe! 14 hours
Modern software architecture approach, especially in object oriented world recommends composition over inheritance. Sure, inheritance makes sense every now and then, as long as your hierarchy tree is not deep. But in most cases, what you want to do instead, is compose your object from other objects, as opposed to deriving it from some base class. You want to google '[composition over inheritance](https://www.google.com/search?q=composition+over+inheritance&amp;ie=utf-8&amp;oe=utf-8)' (that wiki page and youtube vid is pretty good), and also look up 'dependency injection'. You'll find plenty of good articles that way.
This is really interesting. I did something very similar for fun. I called it Hermes because the whole messenger of the Gods thing. public sealed class HermesClient : IHermes { private readonly IDictionary&lt;Type, IList&lt;Delegate&gt;&gt; _messagesWithHandlers = new ConcurrentDictionary&lt;Type, IList&lt;Delegate&gt;&gt;(); private static readonly Lazy&lt;IHermes&gt; Lazy = new Lazy&lt;IHermes&gt;(() =&gt; new HermesClient()); public static IHermes Instance =&gt; Lazy.Value; private HermesClient() { } public void Publish&lt;TMessage&gt;(TMessage message) where TMessage : IMessage { var type = typeof(TMessage); if (_messagesWithHandlers.ContainsKey(type) == false) throw new NotSupportedException(type.FullName + " has not been registered"); var handlers = _messagesWithHandlers[type]; foreach (var handler in handlers) { handler.DynamicInvoke(message); } } public void Subscribe&lt;TMessage&gt;(Action&lt;TMessage&gt; handler) where TMessage : IMessage { var type = typeof(TMessage); if (_messagesWithHandlers.ContainsKey(type)) { _messagesWithHandlers[type].Add(handler); } else { _messagesWithHandlers.Add(type, new List&lt;Delegate&gt; { handler }); } } } You use it like this:- public class UserRegisteredHandler : IHandleMessage { public void Register(IHermes hermes) { hermes.Subscribe&lt;UserRegistered&gt;(SendWelcomeEmail); hermes.Subscribe&lt;UserRegistered&gt;(GrantBasicRights); } public void GrantBasicRights(UserRegistered message) { Debug.WriteLine("Message recieved in GrantBasicRights"); } public void SendWelcomeEmail(UserRegistered message) { Debug.WriteLine("Message recieved in SendWelcomeEmail"); } } At app startup you interrogate the assemblies *once* and register your handlers.
Your `name` property is referencing itself inside its `get` and `set` You can simply use public string name { get; set; } That is called an auto-property, which creates a hidden field to store the property's value.
I misunderstood what you were referring to. This is new to me; I'll check it out and see if it's a good fit. I appreciate the help.
I think code generation is the route I'm going to have to take at this point. We are already using code generation to represent a number of our SQL objects in C# as a pre-build event; adding the UDTs to this process would guarantee that the columns are always defined correctly. I considered this option before and was hoping there'd be an easier way since the script to build those out won't be very fun, I'm guessing, but it's looking like if there's a "right" way to do things, that would be it. I appreciate the insight and help.
Exsctly what I was looking for. I hope you can see why a relative newby would have a hard time knowing specific jargon. Thanks a lot.
This wouldn't compile due to the extra ;
First step is to convert all the fields to properties. Then remove the semicolon after "new Animals" and remove the "dog." in front of all the properties. When initializing an object like that you don't put the variable name in front of the properties. Also use commas instead of semicolons in the initializer between fields/properties. Final code should like like this: class Animals { public int age { get; set; } public double lifeExpectency {get; set;} public string name {get; set;} public Animals(){ age = 10; //default value if nothing is set lifeExpectency = 35.5; //default value if nothing is set } } Animals dog = new Animals() { age = 4, lifeExpectency = 14.5, name = "Patch" }; I also highly recommend nick_'s suggestion. You don't need to manually set the property with value. That is done for you by the compiler. You only implement your own setter or getter when you need to do something extra. 
No endpoint sounds like the service is either not running on the webserver, or it's not running the right one. What did you change? I assume it was working before, right?
Haha! I tend to play around with the display. Thank-you for your quick response
Ahh I see. Got it! Thank-you for your help
Thank-you for your quick response, I'll remember that in the future
Woah, was not expecting to receive all of the responses so quickly, Thank-you. As you can undoubtedly tell, I am still grasping the fundamentals - I'll get there one day! Enjoy your day / night folks
Pretty much the way I look at it is that if you have mandatory implementations that your derived classes will have to either honor or address (concrete or virtual), then a base class would make sense. In all other cases, I'd either avoid inheritance completely or implement as an adapter to some injected implementation (composition). The real habit you need to get into is NOT abstracting before you either a) absolutely need it to solve a problem or b) know that there's a use case for it coming shortly up the road c) you're following a design principle (e.g. DI... which solves other problems that you'll almost always have, which is why it's a principle, not just a random abstraction)
I think you've got it. I wrote an asp.net web page which consumes this WCF service. The page is hosted via GoDaddy, and the WCF service is hosted on a machine with Windows server 2012. I'm trying to invoke the WCF methods from the web page. The WCF service is hosted via iis, so it should Always be running. I think I have all the WCF components installed on the server. No matter how I try to invoke the methods I get the 405 error. I'm just lost. 
A couple things to consider about .NET reflection (applies to regular .NET; not sure if .NET Core does things differently): * This won't follow all of your references, since AppDomain.GetAssemblies() only returns assemblies that are *loaded*. This may cause some of your listeners to be ignored unless you manually load every assembly containing IMessageHandler&lt;T&gt; instances up front. * Scanning every type in every assembly can be slow if any of your assemblies are large. This slowness only happens the first time, when it's building the reflection objects, but subsequent type traversal is fast. To avoid building reflection for every type, you can define an assembly attribute and put it in each assembly to identify the types you're looking for, e.g. `AssemblyMessageHandler(typeof(MyHandler))`. This is a little more boilerplate, but it still supports "probing" for assemblies. Also, keep in mind that a service bus provides certain features that a simple queue doesn't, including: * Persistence - if power goes out, queued messages aren't lost. * Reliability - transmission is considered "complete" not just when the message has been delivered, but when the application says it processed it successfully. * Retries - if the receiver fails to process a message, the service bus may resend it later. * Dead lettering - if a message takes too long to be received, it might be purged automatically. Make sure to take these into account in the design of your services. In particular, make sure your receivers have a way to indicate when processing succeeds, fails, or fails and should not be retried. Also, don't assume messages arrive in the order they are sent, and try not to assume messages are sent exactly once. Disclaimer: I just recently started learning about service buses, since I'm maintaining an existing app at work that uses one.
https://i.gyazo.com/106865dbe84f5d1af24d666ed785a52f.png
I don't think WebRequest itself has a CookieContainer property; I think it's HttpWebRequest. Try HttpWebRequest dmReq = (HttpWebRequest)WebRequest.Create("http://dailymail.co.uk"); 
Thank you!!! IT worked. What is the difference between webrequest and httpwebrequest?
[This](http://stackoverflow.com/questions/8209781/difference-between-httprequest-httpwebrequest-and-webrequest) could give you some more information. :)
The classes `WebRequest` and `CookieContainer` are in the same assembly.
T've come across this problem myself. What I had to do is copy the dll to the same folder as the project, can you try that?
**Please** do not support Windows XP anymore. That operating system does not receive security updates anymore. If it is connected to the internet, or is connected in a local network to machines that are connected to the internet, that machine is a security risk. Not only for yourself, but for **everyone** on the Internet.
Honestly it's not up to me. the PC's at my company on the manufacturing floor use XP because they do flash programming on a ton of legacy devices. These pcs are not internet connected; they just connect to network drives.
Theres as pattern called entity/component system, which is used a lot in gamedev to model similar situations to your example.
I'm a bit late, but a far as I know the reason why F# projects can't contain folders is that the F# compiler requires a strict file order; dependencies should be before dependants. The VS/F# team had to do something special in order to support explicit file ordering in the IDE, but they didn't bother adding folder support because it would have added more complexity. The F# Power Tools project managed to implement this, but it has some issues. While personally I would like to have built-in support for project folders, I can see why it isn't a huge priority. ML style languages (including F# and Rust) tend to prefer larger files with multiple modules and types declared per file. If applied to C# this would mean having the entire contents of a namespace in one file. The strict parsing and dependency order makes refactoring easy even if you have files that are thousands of lines long.
Hi simspelaaja, one of the limitations of the power tool is the hierarchy of the folders (can't have a parent with the same name as a child). I honestly haven't tried F# in a long while, but can you just include the file with just the folder name? Or are there some namespace limitations? I've kinda switch over to NodeJS now and it's one file per module and you reference them and alias them on demand.
You are using a ConcurrentDictionary via IDictionary in a non-threadsafe fashion. Declare the field as CD and use the threadsafe API. For example, calling Contains then Add is not threadsafe.
File or folder names don't actually matter to the code; you can't import a folder. You can refer to modules and functions using their fully qualified name, or import them with `open ModuleName` (equivalent to `using` in C#). The only requirement is the previously mentioned dependency order.
Thanks, but I only wrote my implementation for fun, our production code uses [**MediatR**](https://github.com/jbogard/MediatR).
Just tried it out and it worked, thanks!
/u/neuecc: Nice job on the documentation. It was easy to follow and understand. What are some of the limitations of ZeroFormatter compared to other Serialization tools?
1. No Dumpable. JSON can dump, it is human-readable and useful for debugging. ZeroFormatter is too difficult, needs to deserialization. 2. No Option. For example; MsgPack can choice Array-Mode(Fast) or Map-Mode(Slow and fat but robustness). ZeroFormatter only provides fast mode 3. Binary Size. Protocol Buffers/MsgPack is smaller than ZeroFormatter because ZeroFormatter needs index space for random access of buffer(same size of FlatBuffers, maybe smaller than JSON) 4. Multi languages. Current implementation is only for C#. Welcome to contribute:)
I admire that you're able to see the limitations of your own code. When reading your documentation, I kept thinking, "This is too good to be true. What are the drawbacks?" These are acceptable drawbacks, though. Often times we don't need to "dump" the output to text. I'm okay with C# only. Though I think if I were to try to port it, I'd choose Python next. Those seem to be the 2 most popular general purpose languages these days. 
Perhaps I can answer "no". What kind of things do you suppose? I surveyed various serializers, but I do not remember seeing much equivalent (except enterprise XML)
I have this running in a couple of pretty big projects at work. It's fine, but it can be a pain to configure the first time around.
Are you referring to log4net or Easy.Logger? One of the many reasons I created Easy.Logger was to simplify working with log4net and its configuration, take a look at the GitHub page it should make it more clear.
Ok. I would highly recommend having a security exception thrown if you try to serialise a type which contains an `object` typed field or property, with an option to turn that off in the serialiser for cases where it's critically needed but security isn't important (e.g. trusted input). As an example, for any non-whitelisted deserialisation or any type which contains an object field, it's possible to inject a `System.CodeDom.Compiler.TempFileCollection` containing an arbitrary file and path list. Since the instance is created on the heap (even if you cast after and throw an exception) the next GC pass will call `Finalize`, which then deletes all the files in the given path.
&gt; Cross Platform &gt; Currently, No and I have no plans. You know, a JavaScript implementation would be great, for client server communication. If I had the time, I would take a shot at it.
So all the time is still there, it just doesn't show up in the benchmarks then. It's like saying EntityFramework IQueryable is the fastest ORM since it can delay execution of the query. You still pay for it at some point.
Thanks, it is a very interesting result! I've uploaded my benchmark and result(sorry, this code is not pass your fastest path, I'll try to change). https://github.com/neuecc/ZeroFormatter/tree/master/sandbox/PerformanceComparison You may think that this result is not fair. I would like serious attitude toward your results. https://gist.github.com/neuecc/9d13d3a882181ead09b3440a64dc5a35
That's why OP says it's “unfair”, and the fair comparison lies within the serialization, which is executed immediately.
I haven't had to deal with this issue, but here are some resources I found. Check them out; there's probably a fix in there for you. http://stackoverflow.com/questions/14047754/how-to-add-cross-domain-support-to-wcf-service http://www.dotnettricks.com/learn/wcf/calling-cross-domain-wcf-service-using-jquery http://www.codeproject.com/Articles/223572/Calling-Cross-Domain-WCF-service-using-Jquery-Java http://stackoverflow.com/questions/23480763/jquery-ajax-405-method-not-allowed-cross-domain http://stackoverflow.com/questions/11226333/wcf-jquery-ajax-cross-domain-policy-method-not-allowed
Copy the even entries into one List and the odd entries into another List.
I run your benchmark. My modified code is here. https://gist.github.com/neuecc/9fe6f5e0aaa77114ba99487f8c0c0fc0 Result is different your report... Fastest Serializer: ZeroFormatterWithPooling - 171 ms Fastest Deserializer: ZeroFormatter - 155 ms Fastest Roundtrip: ZeroFormatter - 469 ms Smallest Payload: Wire - KnownTypes + Reuse Sessions - 38 bytes --- ## Running cold Wire - KnownTypes + Reuse Sessions Serialize 334 ms Deserialize 265 ms Size 38 bytes Total 599 ms Wire - KnownTypes Serialize 361 ms Deserialize 256 ms Size 38 bytes Total 617 ms Wire - Default Serialize 391 ms Deserialize 458 ms Size 89 bytes Total 849 ms ZeroFormatter Serialize 285 ms Deserialize 166 ms Size 65 bytes Total 451 ms ZeroFormatterWithPooling Serialize 166 ms Deserialize 155 ms Size 65 bytes Total 321 ms ## Running hot Wire - KnownTypes + Reuse Sessions Serialize 299 ms Deserialize 212 ms Size 38 bytes Total 511 ms Wire - KnownTypes Serialize 313 ms Deserialize 247 ms Size 38 bytes Total 560 ms Wire - Default Serialize 432 ms Deserialize 439 ms Size 89 bytes Total 871 ms ZeroFormatter Serialize 313 ms Deserialize 155 ms Size 65 bytes Total 468 ms ZeroFormatterWithPooling Serialize 171 ms Deserialize 177 ms Size 65 bytes Total 348 ms --- Clone your code, add ZeroFormatter and add tests. Change Release Build, uncheck Prefer 32-bit.
I've had luck using FFMPEG, specifically this wrapper, https://www.nrecosite.com/video_converter_net.aspx For lots of different media stuff. 
Yeah. I mean, I guess it's sort of irrelevant due to the pattern we're aiming for since we'll be switching to NServiceBus. I think i'll pull the generic parameter out and use it for a key in a dictionary though so it doesn't have to reflect on each publish.
Yeah. Seconding EPPlus. It's pretty much all I use if I have to pull in excel data. Something you might look into later on would be saving your data as a csv file, or a JSON file. The only thing you'll have to be careful of is unicode support, if you're using Japanese characters. I wouldn't worry about that now, though. Excel is a fine solution. Just something to keep in mind
You need a function sort of like this to act as a discriminator bool IsInt(string s) { int i; return int.TryParse(s, out i); } Then you can use LINQ to filter out entries. var names = sepNames.Where(IsInt); var ints = sepNames.Where(x =&gt; !IsInt(x)); 
Nope
Interesting, I'm not seeing the same numbers. https://gist.github.com/rogeralsing/8ae28ea5230f9030e2f12406f5bff969 Are you sure you are running release build w/o debugging attached ? [edit] I found the reason, If some properties are not set, ZF will be much slower than if all properties are set. You should probably look into that, seems odd. Now I see your numbers too! 
Interesting choice of headline. Got some methods that need splitting? :)
It seems to me like they just rebranded Xamarin Studio. &gt; Because it’s based on Xamarin Studio And isn't that already available on Linux?
Recommendation? You can use [OBS](https://obsproject.com/) - Whilst not really C# related, it encodes on the fly which makes the resultant files tiny as opposed to FRAPs and co. Just an alternative if your own capturer gets you nowhere. Good luck finding a library :)
There is nothing wrong with Visual Code and it isn't going away. Visual Code is for quick edits the same way TextWrangler or Notepad++ are. Visual Studio is a suite of tools with also toolkits built in.
Your benchmark code is not good. 1. does not do GC.Collect... 2. Wire's get serialzier is out of measure, but normaly we needs get serializer each times by type. 
Thanks for the suggestions, but nothing seems to work so far.
Xamarin Studio had much of the functionality anyway. M$ just seemed to be ignoring it, like we couldn't do .NET Core or something as simple as compile LESS/SASS, custom text themes made the text look wonky (no formatting). Maybe I can expect solutions to these issues now or soon. E: downvotes are cool, I can dig it, and I would imagine it's because I'm "wrong". What am I wrong about?
Yep happens to me too.
Yeah, they already got rid of the windows stand alone version. So they probably want to move all work to one product rather than two.
Sorta. You can still find it in deep on their site, and if you already have it installed, it still updates. I think they do it for companies that were deeply invested in XS. But I suspect after VS15 is released with better Xamarin support, they will stop making Windows builds.
Ah thanks that makes sense. Just my shorthand but I get why people hate it, it's like Crapple... only Microsoft *does* make money.
Well, it probably was planned all the time-but since Jetbrains is coming out with Rider sometime before Christmas,they jumped the gun.
You should probably ask your prospective employer instead of us. In general I would say none to very little, unless working on test automation or something like that is explicitly a part of the job description. Might get to do some SQL or poking around in the web inspector. But it depends on the company, some places have blurrier lines between roles than others.
Have you read the .NET Framework Design Guidelines yet?
I'd use AppDomain.CurrentDomain.BasePath
As /u/tweq says, it depends on how the employer defines "QA". But in the purest definition of the term, a QA person shouldn't be doing any code. They should treat the application to be tested as a black box and test it against requirements. It can be a bad thing if a QA person knows too much about the internals of an application because they may subconsciously test around those internals. A good QA tester says "this is what it's supposed to do. Does it do it? Yes or no".
You're right that does make more sense in this case. 
Uh huh, except that Apple eclipsed Microsoft in making money years ago. http://i2.wp.com/revenuesandprofits.com/wp-content/uploads/2016/01/Apple-Microsoft-Net-Profits-1995-To-2015.png 
Hell yeah, first addon I install after setup!
Store the `DirectoryInfo` objects in the `listBox1.Items` instead of folder names, then set the ListBox's [`DisplayMember` property](https://msdn.microsoft.com/en-us/library/system.windows.forms.listcontrol.displaymember%28v=vs.110%29.aspx?f=255&amp;MSPPError=-2147217396) to "Name" to have it use that for the labels. EDIT: Typo'd the wrong listbox instance.
I dont understand it 
&gt; but I wouldn't expect huge changes. For the initial release for sure. But, I'd expect some pretty significant changes over the next year or so. Visual Studio is a massively important brand for Microsoft. I really hope this marks the start of some significant investment in the IDE to bring it up to at least to where MS Office for Mac stands in relation to MS Office for Windows.
Thanks it seems to work now! Do you have any idea what I have to change for System.UnauthorizedAccessException? 
When do you get it? Check the full message of the exception. I'm guessing your application doesn't have sufficient privileges to access some folders/files on your computer.
ADO.NET
Yes, system.unauthorizedaccessexception access to the path denied. So If I click a folder that I dont have acces to it crash
Welp, plenty of resources online on how to handle privileges issues. At the very basic, you can make your application run with administrator privileges; that might help.
Thanks I found something that works. Is it possible to make something that doesnt show textfiles with special characters in listbox2? I have text files that start with special characters and in the form it shows a blank textbox
&gt; folder.Name This is a string, you can't cast that to DirectoryInfo. Try using `new DirectoryInfo(listBox1.SelectedItem);` instead.
https://github.com/jbogard/ContosoUniversity
I'm not so sure about multi-threading this. Of course, if the demands were significant, multi-threading or even multi-process is likely the way to go, and even within the threads or other processes, you'd want to use async/await. Async will allow the server to ship networking tasks off to IOCP, which frees the application up to do anything else. The only time the application would be busy is when a socket is ready, an IOCP returns (the Task&lt;T&gt; is completed), and for any sort of house keeping that needs to be done. As an anecdote, JavaScript is surprisingly powerful and capable as a single-threaded language and run-time environment, and has no problems running this kind of application. The other reason I object to threading is because they are complicated and overwhelming to someone just starting.
This is what I figured (and what several resources I've read have indicated.) Do you have any resources you'd recommend about programming TCP/IP sockets and server via Async? I don't mind shelling out on Amazon.
This helped me when I was in your position :3 https://msdn.microsoft.com/en-us/library/jj943772.aspx
Hi. Thanks for the plug! I've taken a bit of a break on the series (for the past month or two) because I have some other matters I need to work on. I plan on doing async sockets next.
Please note that you're immediately part of telemetry once you install Viasfora. You can opt-out after you installed, but then you were already at least once part of the telemetry. If that bothers you, don't use it.
If someone did this in production code, I would likely object, for various reasons. However, this could be incredibly helpful in reducing the verbosity of mock data factories in unit tests. 
Had a look at SettingsProvider, and now i am even more confused. I added the C# class PortableSettingsProvider, from the comments to a blank project. Added 2 settings and set Provider to my new PortableSettingsProvider. So this is supposed to save my settings in a [ApplicationName].settings file, but i can't find that on my system. But just like any app, it does create a [ApplicationName].exe.config file in my Debug/Bin folder, and if a change my settings in that one they are not used in my app, but if i have a setting that does not use PortableSettingsProvider, and change them in that file, that value is used. P.S. I use VSO as Version Control, can i share my code with that or do i need to move it to GitHub?
Maybe some freelancing sub or website? Not sure.
You can try https://hackhands.com/
Not a sub, but Pluralsight offers paid mentoring services. You do have to have a subscription with them though. https://www.pluralsight.com/product/mentoring 
- It's unavailable offline; it will actively bug you and go out of its way to piss you off because you decided to do some work while not having access to internet - It's unreliable; sometimes projects will just stop being versioned because the mapping just magically disappeared for no reason. This is dangerous behavior and on itself enough reason to stay faaar far away. - It's slow. - The default behavior for TFS even in Visual Studio is to include the /packages folder which will _actively fuck up your project_ and prevent others from loading it correctly. You'll find tutorials on how to prevent it from putting /packages under source control, but you will learn that it's much easier said than done. - In Visual Studio, it nags you. Every time you do something (especially in the package manager console) the TFS window will focus and show you information you don't care about in the slightest. - Sometimes files are locked by other people. Why this is possible, I have no clue. - If the project is offline, it will prevent you from saving. You can save, but it will show a stupid nag window that asks you what you want to do. There are three options here, only one of them actually does what you want it to do. "Continue" (which will just give you the same message again, useless moron button), "Overwrite" and "Cancel". Overwrite works, cancel doesn't save your file and continue has no function whatsoever. It will ask you to go online, but you can't until you save your file, but you can't save your file until you've gone online. This pisses me off on a daily basis. It's mindnumbingly idiotic. Why this popup window is there at all I don't know because it's completely retarded and useless. I get angry just thinking about it. It when you are trying to save your file, it should let you save the file, there's no need to ask me anything. I'm a lot more scared of losing data than I am of overwriting some other tools code, so why it's so goddamn concerned about what already exists in the file, I have no idea. That's what source control is for, so get the hell out of my way, TFS. - It's really bad at handling merge conflicts. TFS is the worst source control system I have ever used. It's a daily pain in the ass for me. Why they decided for this extremely convoluted over-engineered piece of crap solution I have no idea. But one thing is sure; TFS is a nightmare and a liability.
Maybe a dumb question, but what exactly is telemetry in computer science?
It's tracking. They're retrieving information on your usage of the extension. Without checking it you don't know exactly **what** is transferred. I don't know who is behind Viasfora and how reputable they are.
What's the advantage of using Visual Studio Code over something like Atom?
By up-casting it to `object` you basically throw away any compile time information. Thus the only information you have left is at runtime, which you can access using reflection. You can receive the actual type of the instance using `GetType()`. Then you can get a reference to the **method** using `typeof(Foo).GetMethod(..)`. This will return a `MethodInfo` - but it's generic, without a concrete type. On this `MethodInfo` you can then call `MakeGenericMethod(..)` which will create another `MethodInfo` with a concrete generic type parameter provided (the one you received earlier using `GetType()`). By calling `Invoke` on it you can call this method. With your example code it would be: object instance = listThatBreaksShit[0]; Type fooClass = typeof(Foo); MethodInfo barMethodWithoutTypeArgument = fooClass.GetMethod("Bar", BindingFlags.Static | BindingFlags.Public); MethodInfo barMethodWithTypeArgument = barMethodWithoutTypeArgument.MakeGenericMethod(instance .GetType()); barMethodWithTypeArgument.Invoke(null, new object[] { instance }); 
I recently switched from Atom because of it's speed-VS code is much faster. I do have a lot of plugins in both, but VS code is faster while providing even more features than Atom. Only downside I found is that publishing extensions is a bit easier for Atom. Marketplace requires this weird token and stuff to get you started.
It's a pretty poor solution, really. 
Express? Do you mean community? VS code isn't a replacement for full VS, it's a compliment. 
How hard is writing plugins? Not big ones, just your own quick and dirty ones.
if you want an editor tab to stay open for a file, even if nothing has changed, double-click on the file instead of single-clicking.
This one? https://www.reddit.com/r/fsharp/comments/53tuzy/crying_out_loud_things_i_dislike_in_f/
I like using the same editor on my Windows, Mac, and Linux machines. Plus it's a great editor on top of that. 
Thank you.
Do you think you will continue on using it when VS is released for MacOS?
What are you looking for in terms of compatibility? Broadest uptake from Windows users? .NET 3.0 should have you taken care of as it goes from Vista upwards (you can see the chart [here](https://msdn.microsoft.com/en-us/library/bb822049(v=vs.110\).aspx)). If you want Mac/Linux users, you'll need to use Mono or Core. Web users something like ASP. Basically you need to define what it is exactly that you want to achieve. Using older .net versions is fine, but newer versions come with bug fixes, patches and features unavailable in older versions. Just going with the widest install might make creating your application more difficult to program.
Windows XP - Windows 10, both x86 and x64.
This is cross platform whereas VS isn't. Also, this is a nice lightweight editor rather than a full blown IDE which some don't need. It's light and quick, but offers a lot.
You can not. There is no such mechanism in C#. We have methods for this.
Yea, I know, I just gone full curious :D Is it possible to do it in C++?
VS 2015 isn't as bad as some older versions, but sometimes I just don't need that much. I don't have a beefy machine, so opening up something like VS 2015 takes some time while VSCode takes a handful of seconds. I feel like they can both be used for the same purpose, but they both have their strengths for certain things.
It's not compatible with .NET 4.0 and earlier (which shouldn't be used anyway). Just pointing out.
So if you look at the link I supplied, no iteration of xp gets .Net so now you need people to install the framework. Since you're getting as wide as possible, you can't go to 3.5 or else you'll need them to have service pack 2 (iirc). Now the tricky thing is, why 86 and 64? Xp has such a limited hardware profile that you won't be dealing with 64 bit xp often. If you can write it in 32 bit, why bother compiling for both? What sort of application are you even writing? 
I'm not aware that it's possible either in C++.
I'll probably stick to VS Code. I hardly ever do C# development on my personal laptop. And we still won't have it for Linux, though who knows if that will change. Besides, I spend more time booted into Linux on my Macbook than MacOS. 
You could put in a job in task scheduler that would do it, but why do you need it to be kept awake?
That would be very useful but I don't have any idea if anything like that exists. Ultimately what works for me is to ask in places such as here or stackoverflow. Usually the questions have already been asked though. I wish there were something like w3schools for c#/.net though.
oh...if only I could understand something :D, better study more before going this way.
Thank you, but this is not the one. It was a comment inside a post. The post title did not contain *"how satisfied the OP was with fsharp"*
The easiest thing would be to use a monitoring service that periodically tries to hit your site to determine if it is up or not. That way your site is always getting hit to keep the app pools alive and you get notifications. PowerShell [Invoke-WebRequest](https://msdn.microsoft.com/powershell/reference/5.1/microsoft.powershell.utility/Invoke-WebRequest) in a script would be quick and dirty. [KeepAlive Service](http://keepalive.codeplex.com/) gets installed on your IIS server and monitors your sites to keep them running. I've never used this code so YMMV.
Why is that not good enough?
I tried to install it on my main virtual machine, Debian where I use regularly sublime. Constant high CPU usage due to software rendering I suppose. I deleted it. 
A little tip about returning the task without awaiting it. If you've got the return wrapped in a try/catch, it won't actually catch any exceptions. It's pretty obvious once you realize it's because you're not actually awaiting that task for a result, but it still caught me off guard one time. Task DoSomethingAsync() { try { return SomethingAsync(); } catch (Exception e) { //wont be caught! } } Awesome video though, always wanted to know how the state machine stuff works.
Are you seeing a carat or a cursor? What OS are you on? What version of VS are you on? What kind of file are you on? It *should* be pasting wherever the cursor is. This might be better posted in the visual studio subreddit actually.
In advanced settings of application pool, set idle timeout to 0 and idle timeout action to suspend. Works on both of my servers. 
Oh my bad, I should provided that infomation. I'm seeing a carat and everything seems to be working fine inside visual studio 2015. I'm using Windows 10 OS. If I have some regularly selected text on my clipboard...then ya it does what it should. It pastes the text immediately at the carat position. string s = "assume this is a regular line and the carat is | &lt;--right there"; Now if I do a Ctrl+X or Ctrl+L...I should have this whole line in my clipboard. If I do a Ctrl+V in an empty line then the whole line gets pasted, no problem. But take the same example line as before and now if I paste at the carat location, the line doesn't just get printed inside the text already there. Like... string s = "assume this is a regular line and the carat is {PastedTextShouldGoHere} &lt;--right there"; Instead what I am seeing is string s = "assume this is a regular line and the carat is | &lt;--right there"; //this is the pasted text string s = "assume this is a regular line and the carat is | &lt;--right there"; //this is original text The whole line just printed completely by itself in a line above my position
Xamarin is probably one of the most painful development experiences I've ever had. It's buggy as hell. It's really great when it works though.
MSDN
You can also provide `Select`, `Where`, `SelectMany`, etc to support LINQ query syntax.
&gt; considering community is free and full of awesome Community is free and full of awesome, but not everyone is on Windows. 
You could get the best of both worlds and use [Marten](http://jasperfx.github.io/marten/)
This. And, there's one more app pool setting you should consider changing if you haven't already. By default, the app pool is recycled once every 29 hours. In theory, your application, if free of memory leaks, shouldn't need to be recycled at all. Instead of recycling at what are effectively random times throughout the week, consider setting this to a specific off hours time like 4am. Or, if your situation permits, turn the auto recycle off altogether and instead only recycle if memory, CPU, or request queue get beyond a certain threshold.
Its not just this error, its things like this that make it unusable for me though. Things just dont work or if they do, they are complicated to do. I was just wondering if thats my fault (lack of experienece with xamarin etc.) or a general thing.
My method has to return bool values so if i do something like this to my method static bool Calculate(int num) { if (num &lt; 350 || num &gt; 850) throw (new ArgumentException ()); if (num &gt;= 650 &amp;&amp; num &lt;= 850) return true; if (num &gt;= 350 &amp;&amp; num &lt; 650) return false; } I still get this error Not all code paths return a value my assumption of what's supposed to be happening is if the int is out of range I throw an exception because i can't return a bool vaule but intelisense isn't even letting me get that far. 
Add a return statement after you throw the exception. Then the if block will have a return, not that it'll ever get hit, but it'll make that error go away.
You may need to contact them about this issue. If they support full trust, then you will be able to run WCF without any problems. Or you can find other hosting provider that support Full Trust. You can consider asphostportal.com. They support Full Trust
Most things are not backed in. You'll need all the files in the bin/release directory, usually, to be sure. 
Part of the problem regarding blank console screen is that the process output and error streams need to be redirected to your console. [Here a simple gist on this](https://gist.github.com/CsharpOnLinuxDev/5486f29a5be53871cb78cb1367e85879) for executing GCC from C#.
&gt;is Xamarin that buggy for anyone else? Yes