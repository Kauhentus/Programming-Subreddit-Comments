Not that I know enough to know if /u/La_Bic_Pen is right, but keep in mind as you're learning that just because something works doesn't mean it's the correct way to do it.
Removed: Rule 8.
I am unsure how to use it to pick from numbers not in sequence 
I'm not sure I understand what you mean. Is it methods that go back and forth from client to server? I would consider creating a specific method in the hub class that accepts all 3 parameters from the user instead of using 1 hub method (accept message) to do everything. 
No doubt. Just throwing out a random side note I thought was interesting.
if the indexes you need to choose from are not always the same, but you know what they are at run time, you could make a method that take the two indexes and the array and returns one of the two values randomly. I am just assuming you have a string array here, so change types accordingly if not: private string GetRandomArrVal(int index1, int index2, string[] someArray) { System.Random rand = new System.Random(); return rand.Next(2) &gt; 0 ? someArray[index1] : someArray[index2]; }
Also more generically if you are trying to choose from a random list of indices instead of just two, I would recommend loading all the indices into a separate array / list and then picking an element randomly from that. so in your case you would have a list [1, 3] and then use rand.Next(2) to pick one of those at random.
Sorry, what I mean is prompt the user within a method. for example asking what is your name. Then wait for a response, then ask another question once I got a valid response. Just like how console.readline works.
I doesn't really work like the console; Messages get passed back and forth between client and server. On the server, you could invoke* a client (js) method eg "promptForName" that would use some script or html to get the name from the user. This method would then need to call the method on the hub. *Its indirect invocation, a message is sent to the client to tell it to call an actual function in the javascript.
I found a possible answer. While I couldn't do a "swap" easily on the form's background image, I was able to add a picturebox to the form and do a swap on ITS image. That gave me a dramatic speed boost (from 70FPS to 250FPS). Gonna do some more experiments to see how built in "layering" might give me some speed boosts over trying to actually build the scene each time manually.
The Web Socket support and the other things SignalR does are really helpful for client/server and multi-user activities using web browsers and web servers. 
File.ReadAllLines - [documentation](https://msdn.microsoft.com/en-us/library/s2tte0y1%28v=vs.110%29.aspx) This is one easy way to read a text file into an array. Each line in the text file becomes an element in the array. File.ReadAllText - [documentation](https://msdn.microsoft.com/en-us/library/ms143368%28v=vs.110%29.aspx) This can be used to read a file into a single string, rather than an array. I'm not exactly clear on your requirements, but if you're looking to read files easily, you might start with these methods.
Pick or choose? One removes the item from the array, the other leaves it in place so that you can select it multiple times. In any event, RandomExtended from Anchor supports both: https://github.com/docevaad/Anchor/blob/master/Tortuga.Anchor/Tortuga.Anchor.source/RandomExtended.cs 
I agree with this. It would be the simplest way.
Couple of things -- 1) I suspect the Dynamic CRM documentation is a little dated. "One instance per thread" probably doesn't literally mean every thread needs its own instance to operate on, but rather that only one thread at a time is allowed to access an instance of your context per thread. I suppose it's technically possible to have some kind of requirement like that, but that would be very strange. 2) Considering that, you shouldn't be worried about the fact that more than one thread might process your async execution. Generally, you shouldn't ever have to worry about it, except as another poster said when using [ThreadStatic]. (Maybe there are other things, that's the only one I know about). 3) The suggestion in this thread to not use the context accross async/await seems overly defensive. Aside from the part of the documentation you referenced, is there anything to suggest it won't work using async?
I'd use Ping.SendAsync and then have the responding event of PingCompleted update a global datatable that the datagridview is bound to. using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Data.SqlClient; using System.Drawing; using System.Linq; using System.Net.NetworkInformation; using System.Text; using System.Threading.Tasks; using System.Windows.Forms; namespace WindowsFormsApplication1 { public partial class Form1 : Form { public DataTable pingInfoHolder = new DataTable(); public Form1() { InitializeComponent(); pingInfoHolder.Columns.Add("Primary_IP"); pingInfoHolder.Columns.Add("Results", typeof(string)); dataGridView1.DataSource = pingInfoHolder; PullData(); } public void PullData() { BackgroundWorker pingWorker = new BackgroundWorker(); pingInfoHolder.Rows.Add(new string[]{ "10.20.30.40"}); pingInfoHolder.Rows.Add(new string[] { "50.60.70.80"}); //iterate the rows and ping each IP. Additionaly you can also code to ignore repeating IP foreach (DataRow dr in pingInfoHolder.Columns[0].Table.Rows) { Ping ping = new Ping(); ping.PingCompleted += Ping_PingCompleted; ping.SendAsync(dr[0].ToString(), dr[0].ToString()); } } private void Ping_PingCompleted(object sender, PingCompletedEventArgs e) { DataRow[] selectedRows = pingInfoHolder.Select("Primary_IP = '" + e.UserState.ToString()+"'"); foreach (DataRow r in selectedRows) { r["Results"] = e.Reply.Status; pingInfoHolder.AcceptChanges(); r.SetModified(); } } } } 
MonoGame may work for you. It uses either OpenGL or DirectX, but abstracts that away from you by presenting you with just the Xna API. 
I agree with this assessment. One solution would be to inject the service as a singleton but wrap it in a shell that uses a SemaphoreSlim to gate method calls to async callbacks. You can essentially make any singleton resource use async methods in this way by wrapping the underlying method in a try, await, release pattern. If the cost to create the resource is too great to do on a per-call basis, this may be more efficient. 
We're doing this on the build server, but our question then became how do you do this when building on your local environment? We created a post-pack script that copies the nupkg file to a local folder, and then have to add that as a local NuGet server. However, we have to then ignore that post-pack script when on the build server. With Java, every build will put the jar in the (global) .m2 folder, which is then referenced by every other project. The .xml file describes the build time so newer packages can easily be determined.
&gt; We want to break them into multiple solutions for better separation of concerns. But that separation clearly makes no sense, if they are so much dependent on each other. **Especially** if you require to mix them during local development. I would understand this if they're two separately developed projects, then NuGet would be a fine solution.. But this doesn't seem to be the case here.
You can pack a nuspec to a local file feed and use that feed for local development. 
Apparently, creating a new GraphicsDevice is not possible outside of new Game() in MonoGame. [Maybe this thread will help you.](http://community.monogame.net/t/nullreferenceexception-creating-graphicsdevice/1243/6). You need a wrapper Game class and define an external window. Then use RenderTarget2D and get the pixel data from there. At least, that's what I think you need.
You know what they say, practice makes perfect.
I'd say so, yeah. AngleSharp and JINT are both 100% C# and are easily installed via nuget. You don't have to dick around with external dependencies like CEF or V8.
The "Web" projects depends on the interface project.
That's a good point, that they are very closely linked (Interface-&gt;Implementation) and maybe we just need multiple solutions (each bringing in different git repositories as existing projects), one for each pairing of interfaces to implementations. The goal will be to have all the Interfaces created and then the business logic in each of the projects that implement them. We want to have separate solutions for each implementation. Right now we may just be suffering because we have not defined all of our contracts yet and are doing both the interfaces and implementations at the same time.
You would typically isolate all your business logic into service classes and data access in a repository layer. These would usually just be classes (static or non static depending on what they are) I.e if it's just an extension method you would the class and methods static however if they are entities or services you would have them as non static classes. The Main function would act as an entry point to your application and it will initialise new instances depending on whatever your doing. From the question I am not sure if this is a console or GUI application. Hope that helps somewhat. 
We've kept them as different solutions so that we can keep them in separate Git repositories and version them independently. (but that may be artificially forced...)
Removed: Rule 4. There's a WPF TreeView control and several tutorials/resources online ([for example](http://www.wpf-tutorial.com/treeview-control/treeview-data-binding-multiple-templates/)). Give them a shot, and if you have any issues then, post what you tried and any relevant code.
Ah yeah, that works in a similar effect. I believe PictureBox has a DoubleBuffered property (as does the Form itself). Playing with these options might help as well.
Every program (process) starts as a single thread, often referred to as the **Main** thread or the **UI** thread. C#'s `Program.cs` acts as the entry point to your program, whether it is a console or GUI application. It is marked as static mostly as convention, since your app can only have one entry point. However, this does **not** mean that you are confined to some static context or that you should continue marking things as static. Typically with object oriented programming, you're going to model your data and services (both external and internal) as classes. What this means is that you do not want to do any actual work in the `Main` function -- your classes will do the work. You simply want to initialize them and use them. If you're making a graphical program, then your `Main` method is just an entry point to initialize your form and start its message pump. For example, you'll often see something like this in a GUI's `Program.cs`: static void Main(String[] args) { using (var form = new MainForm()) form.Run(); } So what's this doing and why does it make my GUI work? The `Run()` method on the Form causes an indefinite loop. This loop will wait for incoming user interaction and fire events to the Form's controls. When the form is closed, the loop is done and the method returns. So basically, in a GUI application all of your scaffolding and processing objects live in your Forms, whereas a command line application might initialize it in `Main`. This is a generalization, as you can imagine it can get more complex in larger projects.
If you ensure that instance of service is accessible only from single request and is not shared between requests - it's good. Usually DI frameworks will handle it for you. So - get instance from DI, don't share it and you're good to go.
Be aware that ThreadStatic and async code doesn't work well because ThreadStatic relies on .net threads, while async scheduler can schedule parts of methods on different threads. Better to store instance of context somewhere in requires context (like owin context, or let DI handle lifecycle) and use only per-request instance.
You were right, I solved the challenge! Thanks dude/dudette! I actually did put a breakpoint at the foreach loop and look at the values while stepping through, I noticed that they were all the same but didn't really connect the dots. I don't really understand why I need the class initiation line in the for loop though. What happens when I try to overwrite the values like in my original code? I'm guessing what happens is I keep passing new values into this one instance of the class and all the slots in my list point to the same memory location? 
A C# class is a "reference type." When you have a variable that is an instance of a class you have what is essentially a pointer to some memory location. When you assign a field or property on that instance, you are modifying a value on the data that the instance points to. So yes you keep passing new values to the one instance of the class and all slots in the list point to the same location.
Well done.
You just triggered a huge mental breakthrough for me. Until now I've pretty much ignored all the mentions of "reference types", "variable types" etc because despite trying to figure it out I didn't understand what it meant. Now I do, thank you. This is going to be extremely helpful when trying to wrap my head around other things in the future. 
interestingly enough, you don't have to update your project the majority of the time. the only time you need to is if you have more than one class with a valid entry point method. namely a static method named Main that has no parameters or a single string array parameter. only then will you get the following compile error. &gt; Error CS0017 Program has more than one entry point defined. Compile with /main to specify the type that contains the entry point.
I'd go so far to say that it's usually bad practice to be overusing static classes for the entry functionality of the program. If there's no need to limit something to being static, don't. For example, one simply and common way to structure a program is to have what would have been the static functionality of a program inside a class, then you'd create an instance of that class in `Main`. For example, a hello world program would look like: public class Program { public void SayHello() { Console.WriteLine("Hello, World!"); } public static void Main(String[] args) { var program = new Program(); program.SayHello(); } } In this case here, the `Main` method happens to also be a method inside the class that we instantiate, but it doesn't have to be. An advantage to doing it this way is that it allows more reuse for when we need to make multiple instances of something. Plus it's a simple pattern to break out of things being static.
if the intent is to focus on xaml, you might want to provide a project that has all of the code-behind done as a starting-point. you might even want to structure it following mvvm so you can showcase more about binding. you'd have your items collection in a view model already available that you can just set as the data context in your xaml as part of your tutorial. that way the reader doesn't have to worry about c# at all.
Have you looked at [Win2D](https://channel9.msdn.com/Events/Build/2015/2-631)?
&gt;Typically with object oriented programming, you're going to model your data and services (both external and internal) as classes. What this means is that you do not want to do any actual work in the Main function -- your classes will do the work. You simply want to initialize them and use them. More generally, the same principle applies to program design in general: where the code is executed should usually, ideally contain a minimum of business logic or direct resource access, but rather call other components which should be supplied via Dependency Injection/Inversion of Control. For example, when coding MVC Controller actions I prefer (in all but the most trivial of cases) to inject services, repositories and so on into my Controller's constructor and then use my Action methods to invoke these other components, delegating all logic other than input/output pre-processing to these components. I personally find this helps keep a nice, clean design as opposed to piling more and more logic and code in Action or Main methods which greatly helps with testing, maintenance and refactoring.
Basically yah.. It's better to think of myFirstBall as an object of the Ball class (someClass). As an object it has access to all the methods and parameters accessible to that class. If you were to think about it with vehicles you can expand the logic... So you've got Vehicles... These vehicles have parameters like color and year. Then a subClass such as Car, Boat, 18-Wheeler, Truck.. with parameters like make and model. So can object Vehicle has access to Vehicle.color and Vehicle.year where as a Car has Car.color etc.. Expanding you can see a 2012 Black Toyota Camry would belong to the subClass Car of Vehicle. 
Good start, but +1 to go MVVM.
kk
&gt; should be supplied via Dependency Injection/Inversion of Control. Overkill suggestion. DI/IoC has its place, but to say all projects should have it? No.
Not if the static method is idempotent, which is what you should really aim for when writing them. Then they become really easy to test. `Main()` is an exception to the rule, but it, too, should still have really, really simple, single responsibility - i.e. to start the application..
Blimey, someone other than myself that understands DI != using a container. I never thought this day would come!
We are using Git tagging as our source of record versioning. Otherwise, if only the artifact is versioned, how could we fix a bug in a deployed version (ie. Hotfix).
Would suggest getting involved in the .NET Core projects-- specifically, [CoreCLR](https://github.com/dotnet/coreclr) and [CoreFX](https://github.com/dotnet/corefx). You get to contribute code to the BCL which is used by lots of .NET applications around the world, and also the maintainers of the repo are very knowledgeable and you can learn a lot from them. I've been a contributor for a few months and I've learned countless things about C#/the CLR/coding in general. Plus, it's really fun.
&gt; It is, of course, very awkward to unit test static methods This is only true if your static methods are impure and require shared mutable state. Ideally, they should require no state other than the objects passed into them as parameters.
You feature-branch and tag that feature branch with the assembly version. Also, this is very easy if your commits are atomic in nature instead of sprawled across multiple concerns.
Thank you - that is exactly what I had in mind. Perfect example.
Sure, but method idempotency is not something a lot of C# devs coming from an OO background are necessarily going to be very cognisant of - especially in the type of classes people *tend* to design as statics: eh the *classic* (ahem) "Helper class" anti-pattern. For more experienced devs it's not such a stumbling block, but for those less experienced avoiding statics can be a simple rule-of-thumb way of helping avoid the pitfalls of unexpected side-effects from static calls affecting static variables. Depending on the test library static *classes* can also be much trickier to mock and inject during unit testing.
All of your points don't match my experiences of the past few years. I find it very easy to write testable code, but I take the TDD approach.
I'm happy to help. =)
If you practice TDD you will become more disciplined over time; however, I was pitching these thoughts more about OP asking about statics in C# from a less experienced perspective...
What I suggested is just one way to do it. You may find Shared Projects useful: http://stackoverflow.com/questions/30634753/what-is-the-difference-between-a-shared-project-and-a-class-library-in-visual-st Also, there are a lot of subtle differences at all levels of the development lifecycle when comparing Java(SE/EE) to C#/.NET; however, I think if you persist for a bit longer, it will all fall into place for you.
I have not seen the shared project before. That might be very promising for use. Thanks, I'll have to look more into it.
Seems to me that having everything in one solution will cause bigger, harder to maintain solution files and longer test/release cycles then even a small hotfix will cause the releasing of lots of unrelated code, increasing the risk of each deploy. I think we are going to have to accept that c# doesn't play nicely without all direct dependencies under one solution, or to go the other direction and do more microservices with very little shared interfaces.
Some time ago I made a [trivial OpenTK example](https://gist.github.com/GeirGrusom/347f30e981f33972c934), maybe it can be of help? If I remember correctly it just renders a rotating colored triangle using Windows Forms.
I don't know, it seems a video would be appreciated, but I've never found them appealing to learn anything in development.
&gt; For more experienced devs it's not such a stumbling block, but for those less experienced avoiding statics can be a simple rule-of-thumb way of helping avoid the pitfalls of unexpected side-effects from static calls affecting static variables. It's not just idempotency though. A static method will also have a dependency graph. Any depenendencies would have to be injected for every call (unless you use singletons which would make your tests unable to be run in parallel) which makes them verbose and since you can't inline a delegate declaration you will probably end up with `Func&lt;&gt;` arguments which is very poor documentation.
In general you shouldn't worry about performance, unless it becomes a problem. Then profile to figure out where your bottlenecks are and solve those appropriately. Premature optimizations are often looked down upon.
Well my thought is that if object rises events and if I don't attach to them my events, performance should not be impacted as if that object doesn't rise that event, but my manager says otherwise and he implements new classes (without events) by himself instead of using MS ones... And I wouldn't mind if we would make performance oriented software, but we don't
&gt; he's prematurely optimizing and reinventing the wheel where that isn't necessary. That's what I think, he even codes his own ORM because he doesn't like the performance of other ORM's and as he goes through the problems (that others has already gone through) his performance slows down as let's say Linq2db ORM.
Typical way to raise an event: var theEvent = this.MyEvent; if (theEvent != null) { // construct event args... theEvent(this, args); } as you can imagine, the performance impact for a non-subscribed to event is negligible (one read and one null check).
Class and method names ShouldBeCapitalizedLikeThis, by the way.
Just rendering to a separate window.
Doing both is a good idea, since I have everything written out for the first bit. I'll try find a nice way to link them together.
Oooh, nice idea. Will do that.
Thanks for the example; although i got a problem with PingReply pingreply = await ping.SendAsync(dr["Primary_IP"].ToString()); im getting 7 + Overloads 
Many web applications can do this for you. It's stored in a response header called etag. This is returned by the website upon a 200 OK response. When you request the same page again you supply a request header If-None-Match set to the last e-tag you received. If there has been no changes the result from your request will be "304 Not Modified" instead of "200 OK". If the client doesn't supply an etag you can generate a hash as you say. It's a lot easier to store a hash than the entire document.
You can download the management studio. It features many tools to easily manage your database. The version actually doesn't really matter for the development part and learning that thing. 
I don't know actually. Just use the biggest version that way you won't be missing any installers. It could be that the download of the management studio is only the management studio but not the rest of the sql server. Just try it out, the first time I tried I didn't break anything and didn't knew what I was doing.
What generally matters most is how many objects have subscribed to the event(s) and what the event handlers do. I would think that the simple raising an event would be a similar performance hit to just calling a list of functions.
I agree that this is simply dependency injection via a constructor. Sometimes even a light-weight IoC container is too heavy.
Can't you import the .wsdl as a service reference, and use the methods and classes it scaffolds for you?
A Vs Solution is nothing more than a organizative concept. It simply relates different projects. You can deploy, code, publish or whatever any project independently from the rest of the projects of the solution. You would not be the first doing a interface project (thus a distributable .dll) and a Api implementing that interface (other distributable .dll) You do not deploy solutions!!!!!! You deploy projects!!!!!
Thanks! That's useful to know.
Yes, but what if the site doesn't have an RSS feed? Use case could be monitoring a competitors website for changes etc. I'm using this as a learning project - it doesn't matter to me if it doesn't work well in the real world. My objectives are learning web crawling/scraping, the best ways to compare (hash etc), presenting output in an attractive manner (probably a web front end), and so on. 
Have you taken a look at the example code that the company provides? It seems there is already a wrapper that handles all of this [here](https://github.com/Adyen/asp.net). 
http://www.pinvoke.net/default.aspx/Structures/WIN32_FIND_DATA.html Edit: He does actually reference the structure in his code samples (**Constants, Structs and Enums for the code samples**). You just haven't copied it in properly.
I want to play around with it, but I can't find a practical reason to use it yet.
I use this strategy for lots of things. Even crude differential server backups of ascii files. 
It doesn't always play nice depending on the setup, that class looks quite similar to the generated ones (assuming he left the header out saying it was autogenerated).
There are no practical reasons for me either, just more of "Hey that is kinda cool, I wish i could automate that"
&gt;Index was outside the bounds of the array It's exactly what it says it is. https://msdn.microsoft.com/en-us/library/3zwz4dx3.aspx
Thanks for the answer. I just found the fix. I had to put num first while initializing. Do u have any idea why?
Well why is it better than the alternatives?
Well hashing is one way. So you'll be able to say it has changed, but not what has changed. I would encode the source as a `byte[]` and dump it in the database. Then it is trivial to convert to and from a `byte[]`.
If you're looking for SQL Server SMO for your C# application, check out the [Feature Pack](https://www.microsoft.com/en-us/download/details.aspx?id=42295). This would give you the DLL's to distribute with your application, without forcing everyone to install SSMS.
Removed: Rule 6.
What do you mean by "num first while initializing"? I think that your problem is elsewhere. I'm assuming that sprites is a list or an array. If you're new to programming, think of them as a set of boxes in which you can put stuff. Somewhere else in the code you've initialized sprites to some number. Let's say for example, that number is 5. Well you've got 5 boxes to put something in and your function, loadSprite(), has code which says "At the position defined by the number 'num' create a new sprite." That's ok if you tell it that the position (also known as an index) corresponds to one of your boxes. But if someone calls your function with num = 100 and you only have 5 boxes, well 100 is an index which is outside the range of how many boxes you have, and you get that error. When dealing with Arrays/Lists or any other collections for which you can use an index, you should always check the Length of the array to learn how many "boxes" you trying ask for a value at that location. IE if num is less than the number of "boxes" in the sprites list, then put a new sprite in the num'th box. 
No. `SqlException.Number` can be the same both for running non-critical reporting stored procs and for critical business data operations. If either pop up in `TaskScheduler.UnobservedTaskException` we have no context, other than trying to parse the stack trace (which we totally shouldn't be doing) to determine if it was e.g. during reporting or business logic. This is a pretty disruptive bug.
I think with the current setup you need humongous amount of Luis intents, utterances and C# code to achieve that. But the idea of something like that would be cool 😎.
Check out the demo here for examples on how to use the different overloads. https://msdn.microsoft.com/en-us/library/ms144961(v=vs.110).aspx
Why are you consolidating your code so that errors in both appear the same? That sounds like a fundamental architectural artifact you're fighting with. If you have a legitimate need to process exceptions in one context differently than another then you need to setup your application code to let you do so.
That's a Visual Studio feature, but I believe the comments can be supplied/read from a separate XML doc file that's distributed alongside the DLL. (Not sure if comments are normally compiled into the DLL; if so, most likely not for DLLs compiled for release mode)
I'm not. No code is consolidated. It is cleanly separated. That *is* the entire point of the paragraph. The *only* consolidation is due to this bug. This bug makes it impossible to catch individual SqlExceptions at any level, so no matter what part of the system they originate from, they all erroneously end up in `TaskScheduler.UnobservedTaskException`completely out of their original clean context. I'm really not sure what's confusing about this. Of course I need to process exceptions in one context differently than another. That is true 100% of the time. The bug I'm reporting is that **there is no setup in which your application code can process SqlExceptions in one context differently than another**. That **is** the bug. By definition, there is no architecture immune to this bug.
Oh i forgot about it firing multiple events from a single item. But yeah, if it misses an item, there is no way to pick it back up in your code..unless you do polling. In which case you could just do polling instead.
Well... with what you've provided and in your link, I can't reproduce your bug. http://pastebin.com/M0yTemU3 That produces the following... http://i.imgur.com/HYKEWlM.png Note the lack of an "Unexpected!!" in the console output.
That's crazy! I emailed them asking for C# examples and they replied saying that they only had Php...which I would have been fine with...but did not link to it! Thank you :)
I came here ready to explain what a comment was... then quickly left with my tail between my legs.
I frequently work with large projects where interdependencies are unavoidable. Here's what I'd recommend: * Don't add projects as references. There's just no point and it's confusing. * If you find yourself needing a reference to a project, should this be a library (dll)? If it isn't/shouldn't be a library, and you still need a reference to it, should there be a library which both projects reference? I've never run into a case where a shared dll didn't get the job done. * Set aside a designated release location for a project/library which others depend on. Having all references, file links, etc., of dependent projects, pointing to persistent locations helps tremendously to keep things organized when producing a build across multiple projects. With the proper set up, all you really need to remember is to build in the correct order. * If you need to debug the code in a dll (preferably written in the same language), in Visual Studio, you can easily and temporarily drop the reference, and add the relevant code files as links. The result will compile without copying any files, and it will let you step through it as you debug. Just remember to reverse the changes if you want later versions of the dll to propagate to later builds. 
The problem is your `while (true)` in `MainAsync()`. Why that causes that side effect, I don't know yet, but taking that out resolves the issue. To be clear, I can keep the `await Task.Yield()`. I *only* removed the while.
What's "obvious" in the TPL is how the message pump interacts with UI threads and that's you don't block on the UI thread, period. I just ran this in a WinForms app and didn't encounter your issue. I don't think the problem is with `NextResultAync()` but with your application's usage of the TPL particularly in this instance. http://pastebin.com/w7yGNi0Q
[Here is a WinForms app](https://github.com/jnm2/misc-codesamples/blob/master/Bug%20reports/.NET/SqlDataReader.NextResultAsync%20bug.zip?raw=tru). The TPL usage is by the book. What I should have done to make the code clearer was `GC.Collect()`. This should be more satisfactory to you. There is absolutely no funny business going on with TPL. I just needed to simulate a background GC. What your example is missing is either 1) GC.Collect() or 2) increasing memory pressure by loading a bunch of data, as in a real-world app.
To get the gist of C# I highly recommend this site: https://learnxinyminutes.com/docs/csharp/ Scroll down, get the syntax and quick feature introduction. It should get you up to speed.
[GIFV link](https://i.imgur.com/j2uBMM5.gifv) // [FAQ](https://www.reddit.com/r/livven/wiki/gifv-bot)
Yeah, that's some weird behavior. Though, from what we've seen, you should have a couple ways to work with it in the mean time.
Bingo. This is exactly what happens (including correct terminology to describe it, which you would have gotten an upvote for alone). Comments are *ipso facto* not instructions for the machine, therefore immediately discarded during the first round of analysis. The only thing I can add to this is that [any sane] language does this, whether it is translated, compiled to an IL, compiled to bytecode, or compiled completely down to machine code.
I came here looking for snark. Comments are a myth. Comments are what no programmer does after getting his degree. Comments are what you curse your predecessor for not writing while you're too busy to write them yourself. Now I leave with a sad instead.
You could add some intelligence around those critical bits. A mix of what you've done here to examine the supposedly "unobserved" exceptions and explicitly checking for exceptions after the important parts prompting the user like you mentioned.
Sorry haven't had the time to reply, How would I put a name and a file path and where? Would it be WC.DownloadFile(new Uri(url) ,@desktop", javaw.exe"); ?
Vscode is more like a fancy text editor that has a ton of plugins and extensibility. You would have to manually call the compiler if you wanted to generate an executable. If that sounds like a lot, probably should just stick with visual studio, at least for csharp 
http://michaelcrump.net/creating-and-debugging-console-apps-with-vscode/
I haven't uploaded the source code yet, probably wont until i finish. 
Looks like It could be WPF. Or did you go UWP?
When you have a static method, you **don't** have to instantiate an object. That's the whole point of `static`.
&gt; Therefore we don't need to instantiate a Console object. The Console class holds a single text object (sort of) because there's no reason to have more than one Console in 99.9% of programming applications. Console is actually a static class so you can't instantiate it. You are correct that it's a static method you are calling with "WriteLine" - in fact "Console" contains no methods or variables that aren't static because the class itself is static and can't be instantiated.
That has nothing to do with your initial question. :-) That said, is your question related to said in-house ORM? If yes, it has even less sense, because any overhead of empty events is even more likely to be swamped by other operations. As the first poster said, measure, in your own context, to see if you can see a difference, and how big a difference there is. That said, chances are you will not see a difference in practice.
 public void loadSprite(string file, int x, int y, int num, int h, int w) { } I had to change this to public void loadSprite(string file, int num, int x, int y, int h, int w) { }
I have no idea if it's possible but, maybe you can keep the projects in different Git-repos if you put them in separate branches?
Methods can either be static (which does **not** require an instance of a class in order to be called) or non-static (which **does** require an instance of a class). Example: &gt; and in SomeClass we defined public static SomeMethod(SomeClass someParameter) Does that mean that I have to instantiate an object of SomeClass to call SomeMethod on it? No. The opposite. It's static, meaning you don't need an instance of SomeClass. You can just call `SomeClass.SomeMethod( ... )` Example: class Example { static void Main( string[] args ) { // Can call static method without an instance. // Just use the class name followed by the method name: string race = Human.Race(); // Must have an instance to call a non-static method: Human person = new Human("Bob"); string name = person.Name(); } } class Human { private string _name; public Human(string name) { _name = name; } public string Name() { return _name; } public static string Race() { return "Homo Sapiens"; } } Think of `static` in this case as meaning "shared by the everything of this class", thus all Humans have the same race, but all have a different name.
That's exactly how I feel too. I think bots are damn cool and I loved the twitter bot that Microsoft made but I can't find anything to actually make myself. I mean I would love to make something similar, but it would require a lot of reading about machine learning and even with Microsoft framework it would take a lot of time to get something remotly useful. 
`typeof(T)` Alternatively, if `myGenericParam` is not `null`: `myGenericParam.GetType()` But that will give you the actual type of the instance, not the type of your generic argument.
&gt; But that will give you the actual type of the instance, not the type of your generic argument. The point is if I obtain the MethodInfo by reflection it's a generic method and doesn't have a type for "T" yet - as such I'm not sure how to compare a type array to its parameters and include "typeof(dunno)" if it's a generic param.
I updated the post being more clear about what I'm trying to do.
So there's no way to compare a type array to the types of parameters on a generic method?
&gt; You could not invoke that method info like this. I'm not looking to invoke it, just to identify it. "ParameterInfo.ParameterType" isn't null - but it lists as "null" when I ask for the Assembly qualified name. I was just hoping there was actually a System.Type for "untyped parameter."
You **could** retrieve the generic arguments and then check whether your type matches the constraints of the type parameter by using `GetGenericParameterConstraints()`. But that is very error prone code and you should not go down this rabbit hole, without a very very good reason and intention.
&gt; I was just hoping there was actually a System.Type for "untyped parameter." You can check `IsGenericParameter` whether the type is a generic parameter, or an actual type.
I always get this: ExpressAndTools 64BIT\SQLEXPRWT_x64_ENU.exe It gives me the engine and the management studio, which you can use to create databases, users, etc. 
The newest version of Visual Studio has Xamarin built in, although you will have to enable it when you install. ~~I believe it includes an iOS emulator.~~ It does not. Xamarin has been free since Microsoft bought it a while back.
You're right, but blegh, the code churn. For this project I'll wait till I need it since all non-critical SqlExceptions are from code I can use the `Task.Run` workaround with. However, the situation could be worse for other folks.
Let me know if you find one. I've always resorted to launching git.exe
I'm looking for one. I'd eventually like to have my app running in Azure, and I don't think I'll be able to call git.exe over there. I've found libgitsharp2 -&gt; https://github.com/libgit2/libgit2sharp/ See also -&gt; https://libgit2.github.com/ Haven't implemented it yet, but you could try it.
no that's wrong. 
Interesting. Went through a few of your comments because this intrigued me. You seem to be a nice guy. What are you doing on Reddit? 
&gt; You seem to be a nice guy. What are you doing on Reddit? Haha. Good one!
Sorry for the bluntness. I didn't mean to send that, and I got sidetracked before I could finish my message. I meant to say: No that's dangerous. The order is specific to whatever you, and the person calling your function agree upon. Think of it as a contract between you and the person calling your function (I'm assuming it's not you). The first line you write of your function is a signature (that means you give it a name, parameters in a specific order and a promised output). Once you give that to someone to call, it's like a you're giving them a contract, and once they use it, they are agreeing to the contract. If you have to make a change to that contract, like changing the name, reordering parameters, changing the output, you need to ensure that whoever is calling your function knows that you've made this change. If they call your function with x and y as the second and third parameters, and you change it, you are now putting their num in your x, and their x in your y. Do you see what I mean? This would be a bug, unless they were originally calling your function with the expectation that the order was going to be that way or you already changed it around once. 
That's win forms? Good job! Can't wait to see the source.
Read up on the DirectoryInfo class. That's what you'll need to do this.
yea that's what I meant =) yeah you can use linq against a lot of different stuff. it's super cool.
You can create as many directories as you want, but Directory.CreateDirectory doesn't know how to populate a TreeView. You'll have to do that yourself.
Been a long time since I've used a tree view for anything but take a look at : https://msdn.microsoft.com/en-us/library/system.web.ui.ihierarchicaldatasource(v=vs.110).aspx
Wow very cool, whats the role like? Your responsibilities and experience? Type of people/clients you work for? Hope you dont mind my asking!
If you read the file descriptions below. they (rather confusingly) describe what each package includes. For example: &gt; **Express with Advanced Services (*SQLEXPRADV_Architecture_Language.exe*)** &gt; &gt; - This package contains all the components of SQL Server Express including the full version of SQL Server 2014 Management Studio. This is a larger download than “with Tools,” as it also includes both Full Text Search and Reporting Services. **SQLEXPRADV_** - File name prefix to identify the package in the file list. **Architecture_** - Pick the processor architecture (32- or 64-bit) so **x86** or **x64** **Language.exe** - Standard Microsoft language abbreviations, in this case "English, United States" since you are on that download page, so **ENU** So the file named **SQLEXPRADV_x64_ENU.exe** would be the Express w/ Advanced Services package for 64-bit systems which includes the SQL Server Express engine, Management Studio, Reporting Services, and Full Text Search. 
I'm on the road ATM, I will help later. But create directory is not what you are after!
Your or operation is not correct - you're actually doing a bitwise OR instead of a boolean OR. }while(fighter.Health &gt;= 1 | enemy.Health &gt;=1); Because of the order of operations, you can think of this statement like ((fighter.Health &gt;= 1) | (enemy.Health &gt;= 1)), so if you or the enemy have any amount of life, you're going to OR 1 on some side of this, meaning you constantly have true for your while statement. I'd expect the only time your loop would end would be if your enemy health and fighter health were less than 1. That should instead be } while(figher.Health &gt;= 1 || enemy.Health &gt;= 1);
Its ok. Thanks for the detailed response. I managed to change it thanks to the light bulb thingy which appears near buggy code
No, that's not a bitwise or in C#, it's a completely evaluated logical or. It should make no difference in the line above. It should probably be a logical and, though, so &amp;&amp;.
Bingo. Events are just a collection of delegates to invoke. The amount of work those delegates do is what generates performance problems. Moving the way those delegates are invoked will not change that. Keep in mind invoking those delegates is a synchronous process. If someone wants to invoke those things asynchronously they should look at TAP or using async event handlers instead. 
On my mobile, but just eyeballing it you need to open your connection before you execute the query. And then close it after. A using block would handle this for you
i meant the program it's self. C# is one of the easiest languages i've ever used. 
Ah! You were right. That was one of my mistakes. I'm currently editing the code. Hopefully it works out :)
Yep you will need a Mac to build the app ... And also to run an iOS emulator The Mac can be networked and accessed via visual studio from a Windows machine 
Ok. I tried adding a using block, but I wasn't entirely sure if the syntax was correct. Instead, I tried to simplify it. You were right about not opening a connection. That was definitely the root cause. Also I mistakenly had @Password in the stmt string instead of @UserPass. =p Thanks for the help!
https://channel9.msdn.com/Shows/On-NET/John-Kemnetz-C-debugging-in-VS-Code
I would recommend starting with something less cross-platform if you are just trying to study the basic concepts, as it may be a bit overwhelming(not just conceptually, but in getting your code to build and run properly). WPF would get you to learn similar concepts but with less hassle.
I should note that I'm not trying to protect the application against the owner of the machine (like in games). I want to protect the user against some malicious program hijacking our app and stealing *their* data. If some hacker wants to swap out our DLLs with their own, they're welcome to do it :)
Do you have to run in full trust? 
Maybe .NET Native If I recall correctly, it can compile everything into a single EXE. Which means that you won't have DLLs that could be replaced.
The moment you want to use a custom setter, you must provide a private field to back it up (unless you want to ditch the getter altogether, which would be weird)
&gt;The setter method, If I wanted to implement my own, can I access the value being sent to the set method? So I can check if it's currently being set to true or false? Yes, with the implicit [`value` parameter](https://msdn.microsoft.com/en-us/library/a1khb4f8.aspx). &gt;My ideal code (or rather pseudo code) would be this: Public bool MyProperty { get; set { If (value being passed to setter is true) { do A} Else { do b} } You can do this: public bool Foo { set { if (value) DoSomething(); else DoSomethingElse(); } } However, you can't have both an auto-implemented `get;` and a manually implemented `set` at the same time. Either you have no getter at all, or you manually implement the getter as well.
I'll have to look into that, but we do some COM work which I believe requires Full Trust.
&gt; I want to protect the user against some malicious program hijacking our app and stealing their data. If some hacker wants to swap out our DLLs with their own, they're welcome to do it :) There is fundamentally no difference between the first and the second there. If someone is deliberately attacking YOUR application and has the ability to swap out DLLs, there's nothing you can do. They're either running as the user, or (most likely) the system rights to the machine. In either case, anything you can do, they can intercept and modify. &gt; an attacker would have to have access to overwrite the entry point binary No, you can do that at run time - leave the original executable in place and inject your own malicious framework into it to intercept DLL loads and redirect them. Heck , you don't even need to do that, just load your own malicious DLL.
As I already said, you can't have a manually implemented setter with an auto-implemented getter. Either both are auto-implemented, or neither are.
This may be a shot in the dark, but it was an issue I ran into when processing a soap payload from a third party vendor. Basically the issue was the vendor would send the payload with missing elements. The xml was generated on the fly and if a field didn't have an element it wouldn't add it to the payload. ALSO, the order of the elements would be mixed. If I recall correctly MS de-serializes/serializes in alphabetical order. Both of these issues were causing my data to be corrupted or non-existent. Since it was a WCF service I had to intercept the channel and "manually" de-serialize the xml. Hope this helps... edit: this drove me batshit crazy because each payload would be unique as would each element. Even though it contained standard elements! ok /rant
Some of my more commonly used ones [DebuggerStepThrough] public static bool IsNullOrEmpty(this string value) { return String.IsNullOrEmpty(value); } [DebuggerStepThrough] public static string EmptyAsNull(this string value) // for chaining empty strings with the ?? operator { if (value == "") return null; else return value; } [DebuggerStepThrough] public static string ToStringInvariant(this IFormattable value) { return value.ToString(null, CultureInfo.InvariantCulture); } public static void Raise&lt;T&gt;(this EventHandler&lt;T&gt; handler, object sender, T eventArgs, System.Threading.SynchronizationContext synchronizationContext) { if (handler == null) return; if (synchronizationContext != null) synchronizationContext.Post(state =&gt; handler(sender, eventArgs), null); else handler(sender, eventArgs); } // as well as a bunch of other overloads/variants public static void InvokeAsync(this ISynchronizeInvoke control, Action action) // this is really just to avoid having to cast the delegate { control.BeginInvoke(action, null); }
Or you could use ILMerge to merge all of your dlls into your executable. http://research.microsoft.com/apps/mobile/showpage.aspx?page=/en-us/people/mbarnett/ilmerge.aspx
Here are some random ones I use in my game engine, use at your own risk (though they all have unit tests): ## Miscellaneous /// &lt;summary&gt; /// Returns a new &lt;typeparamref name="T"/&gt; that is the value of &lt;paramref name="this"/&gt;, constrained between /// &lt;paramref name="min"/&gt; and &lt;paramref name="max"/&gt;. /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended T.&lt;/param&gt; /// &lt;param name="min"&gt;The minimum value of the &lt;typeparamref name="T"/&gt; that can be returned.&lt;/param&gt; /// &lt;param name="max"&gt;The maximum value of the &lt;typeparamref name="T"/&gt; that can be returned.&lt;/param&gt; /// &lt;returns&gt;The equivalent to: &lt;c&gt;this &amp;lt; min ? min : this &amp;gt; max ? max : this&lt;/c&gt;.&lt;/returns&gt; public static T Clamp&lt;T&gt;(this T @this, T min, T max) where T : IComparable&lt;T&gt; { if (@this.CompareTo(min) &lt; 0) return min; else if (@this.CompareTo(max) &gt; 0) return max; else return @this; } /// &lt;summary&gt; /// Converts the target float in to a string with the specified number of decimal places. /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended float.&lt;/param&gt; /// &lt;param name="numDecimalPlaces"&gt;The number of decimal places to display.&lt;/param&gt; /// &lt;returns&gt;A string that represents the target float.&lt;/returns&gt; public static string ToString(this float @this, int numDecimalPlaces) { if (numDecimalPlaces &lt; 0) throw new ArgumentException("Number of decimal places must be positive.", "numDecimalPlaces"); string formatString = "{0:n" + numDecimalPlaces + "}"; return String.Format(CultureInfo.InvariantCulture, formatString, @this).Snip(','); } // Repeat for double / decimal etc if desired /// &lt;summary&gt; /// Gets whether or not the given member is marked with the specified attribute type (at least once). /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended MemberInfo.&lt;/param&gt; /// &lt;param name="includeInheritors"&gt;Whether or not to include inheritors of this type in the decision.&lt;/param&gt; /// &lt;returns&gt;True if the specified attribute is applied at least once to the member, false if not.&lt;/returns&gt; [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter", Justification = "Correct rule, but I'm copying the way the existing GetCustomAttribute methods work.")] public static bool HasCustomAttribute&lt;TAttribute&gt;(this MemberInfo @this, bool includeInheritors = false) where TAttribute : Attribute { if (@this == null) throw new ArgumentNullException("this", "HasAttribute called on a null MemberInfo."); return @this.GetCustomAttribute&lt;TAttribute&gt;(includeInheritors) != null; }
## String Related /// &lt;summary&gt; /// Performs the same action as &lt;see cref="string.Substring(int)"/&gt; but counting from the end of the string (instead of the start). /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended string.&lt;/param&gt; /// &lt;param name="endIndex"&gt;The zero-based starting character position (from the end) of a substring in this instance.&lt;/param&gt; /// &lt;returns&gt;Returns the original string with &lt;paramref name="endIndex"/&gt; characters removed from the end.&lt;/returns&gt; /// &lt;exception cref="ArgumentOutOfRangeException"&gt;Thrown if endIndex is greater than the length of the string (or negative).&lt;/exception&gt; public static string SubstringFromEnd(this string @this, int endIndex) { if (@this == null) throw new ArgumentNullException("this", "SubstringFromEnd called on a null string."); if (endIndex &lt; 0 || endIndex &gt; @this.Length) throw new ArgumentOutOfRangeException("endIndex"); return @this.Substring(0, @this.Length - endIndex); } /// &lt;summary&gt; /// Performs the same action as &lt;see cref="string.Substring(int, int)"/&gt; but counting from the end of the string (instead of the start). /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended string.&lt;/param&gt; /// &lt;param name="endIndex"&gt;The zero-based starting character position (from the end) of a substring in this instance.&lt;/param&gt; /// &lt;param name="length"&gt;The number of characters in the substring.&lt;/param&gt; /// &lt;returns&gt;Returns &lt;paramref name="length"/&gt; characters of the subject string, counting backwards from /// &lt;paramref name="endIndex"/&gt;.&lt;/returns&gt; /// &lt;exception cref="ArgumentOutOfRangeException"&gt;Thrown if endIndex is greater than the length of the string (or negative).&lt;/exception&gt; public static string SubstringFromEnd(this string @this, int endIndex, int length) { if (@this == null) throw new ArgumentNullException("this", "SubstringFromEnd called on a null string."); if (endIndex &lt; 0 || endIndex &gt; @this.Length) throw new ArgumentOutOfRangeException("endIndex"); return @this.Substring((@this.Length - endIndex) - length, @this.Length - endIndex); } /// &lt;summary&gt; /// Returns &lt;paramref name="this"/&gt; but culled to a maximum length of &lt;paramref name="maxLength"/&gt; characters. /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended string.&lt;/param&gt; /// &lt;param name="maxLength"&gt;The maximum desired length of the string.&lt;/param&gt; /// &lt;returns&gt;A string containing the first &lt;c&gt;Min(this.Length, maxLength)&lt;/c&gt; characters from the extended string.&lt;/returns&gt; public static string WithMaxLength(this string @this, int maxLength) { if (@this == null) throw new ArgumentNullException("this", "WithMaxLength called on a null string."); return @this.Substring(0, Math.Min(@this.Length, maxLength)); } /// &lt;summary&gt; /// Repeats the supplied string the specified number of times, putting the separator string between each repetition. /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended string.&lt;/param&gt; /// &lt;param name="repetitions"&gt;The number of repetitions of the string to make. Must not be negative.&lt;/param&gt; /// &lt;param name="separator"&gt;The separator string to place between each repetition. Must not be null.&lt;/param&gt; /// &lt;returns&gt;The subject string, repeated n times, where n = repetitions. Between each repetition will be the separator string. If n is 0, this method will return String.Empty.&lt;/returns&gt; public static string Repeat(this string @this, int repetitions, string separator = "") { if (@this == null) throw new ArgumentNullException("this", "Repeat called on a null string."); if (separator == null) throw new ArgumentNullException("separator"); if (repetitions &lt; 0) throw new ArgumentOutOfRangeException("repetitions", "Value must not be negative."); if (repetitions == 0) return String.Empty; StringBuilder builder = new StringBuilder(@this.Length * repetitions + separator.Length * (repetitions - 1)); for (int i = 0; i &lt; repetitions; ++i) { if (i &gt; 0) builder.Append(separator); builder.Append(@this); } return builder.ToString(); } /// &lt;summary&gt; /// Same as calling &lt;see cref="String.Split(string[], StringSplitOptions)"/&gt; with an array of size 1. /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended string.&lt;/param&gt; /// &lt;param name="separator"&gt;The delimiter that splits substrings in the given string. Must not be null.&lt;/param&gt; /// &lt;param name="splitOptions"&gt;RemoveEmptyEntries to omit empty array elements from the array returned; or None to include empty array elements in the array returned.&lt;/param&gt; /// &lt;returns&gt;See: &lt;see cref="String.Split(string[], StringSplitOptions)"/&gt;.&lt;/returns&gt; public static string[] Split(this string @this, string separator, StringSplitOptions splitOptions = StringSplitOptions.None) { if (@this == null) throw new ArgumentNullException("this", "Split called on a null String."); if (separator == null) throw new ArgumentNullException("separator"); return @this.Split(new[] { separator }, splitOptions); }
## Enumerations / Collections Related /// &lt;summary&gt; /// Counts the number of times each element appears in a collection, and returns a /// &lt;see cref="IDictionary{T, V}"&gt;dictionary&lt;/see&gt;; where each key is an element and its value is the number of /// times that element appeared in the source collection. /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended IEnumerable{T}.&lt;/param&gt; /// &lt;returns&gt;A dictionary of elements mapped to the number of times they appeared in &lt;paramref name="this"/&gt;.&lt;/returns&gt; public static IDictionary&lt;T, int&gt; CountInstances&lt;T&gt;(this IEnumerable&lt;T&gt; @this) { if (@this == null) throw new ArgumentNullException("this", "CountInstances called on a null IEnumerable&lt;T&gt;."); IDictionary&lt;T, int&gt; result = new Dictionary&lt;T, int&gt;(); // ReSharper disable once CompareNonConstrainedGenericWithNull No issues will arise if T is not nullable foreach (T element in @this.Where(t =&gt; t != null)) { if (result.ContainsKey(element)) ++result[element]; else result[element] = 1; } return result; } /// &lt;summary&gt; /// Determines whether or not the given sequence contains any duplicate elements. /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended &lt;see cref="IEnumerable{T}"/&gt;.&lt;/param&gt; /// &lt;returns&gt;True if the sequence contains duplicate elements, false if not.&lt;/returns&gt; public static bool AnyDuplicates&lt;T&gt;(this IEnumerable&lt;T&gt; @this) { if (@this == null) throw new ArgumentNullException("this", "AnyDuplicates&lt;T&gt; called on a null IEnumerable&lt;T&gt;."); return AnyRelationship(@this, (arg1, arg2) =&gt; arg1.Equals(arg2)); } /// &lt;summary&gt; /// Determines whether or not a given relationship exists between any two elements in the sequence. /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended &lt;see cref="IEnumerable{T}"/&gt;.&lt;/param&gt; /// &lt;param name="relationshipFunc"&gt;The function that determines whether the given relationship exists /// between two elements.&lt;/param&gt; /// &lt;returns&gt;True if the relationship exists between any two elements, false if not.&lt;/returns&gt; public static bool AnyRelationship&lt;T&gt;(this IEnumerable&lt;T&gt; @this, Func&lt;T, T, bool&gt; relationshipFunc) { if (@this == null) throw new ArgumentNullException("this", "AnyRelationship called on a null IEnumerable&lt;T&gt;."); return @this.Select((a, aIndex) =&gt; @this.Skip(aIndex + 1).Any(b =&gt; relationshipFunc(a, b) || relationshipFunc(b, a))).Any(value =&gt; value); } /// &lt;summary&gt; /// Counts how many pairs of elements in the source sequence share the relationship defined by &lt;paramref name="relationshipFunc"/&gt;. /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended IEnumerable{T}.&lt;/param&gt; /// &lt;param name="relationshipFunc"&gt;The function that determines whether the given relationship exists /// between two elements.&lt;/param&gt; /// &lt;returns&gt;The number of pairs found.&lt;/returns&gt; public static int CountRelationship&lt;T&gt;(this IEnumerable&lt;T&gt; @this, Func&lt;T, T, bool&gt; relationshipFunc) { if (@this == null) throw new ArgumentNullException("this", "CountRelationship called on a null IEnumerable&lt;T&gt;."); return @this.Select((a, aIndex) =&gt; @this.Skip(aIndex + 1).Any(b =&gt; relationshipFunc(a, b) || relationshipFunc(b, a))).Count(value =&gt; value); } /// &lt;summary&gt; /// Returns the first two items to in the source collection that satisfy the given &lt;paramref name="relationshipFunc"/&gt;, /// or &lt;c&gt;null&lt;/c&gt; if no match was found. /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended IEnumerable{T}.&lt;/param&gt; /// &lt;param name="relationshipFunc"&gt;The function that determines whether the given relationship exists /// between two elements.&lt;/param&gt; /// &lt;returns&gt;A tuple of the first two elements that match the given relationship, or &lt;c&gt;null&lt;/c&gt; if /// no such relationship exists.&lt;/returns&gt; public static KeyValuePair&lt;T, T&gt;? FirstRelationship&lt;T&gt;(this IEnumerable&lt;T&gt; @this, Func&lt;T, T, bool&gt; relationshipFunc) { if (@this == null) throw new ArgumentNullException("this", "FirstRelationship called on a null IEnumerable&lt;T&gt;."); if (relationshipFunc == null) throw new ArgumentNullException("relationshipFunc"); int aIndex = 0; foreach (T a in @this) { foreach (T b in @this.Skip(++aIndex)) { if (relationshipFunc(a, b) || relationshipFunc(b, a)) return new KeyValuePair&lt;T, T&gt;(a, b); } } return null; } /// &lt;summary&gt; /// Returns all combinations of items in the source collection that satisfy the given &lt;paramref name="relationshipFunc"/&gt;. /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended IEnumerable{T}.&lt;/param&gt; /// &lt;param name="relationshipFunc"&gt;The function that determines whether the given relationship exists /// between two elements.&lt;/param&gt; /// &lt;returns&gt;An enumeration of all combinations of items that satisfy the &lt;paramref name="relationshipFunc"/&gt;. /// Each combination will only be returned once (e.g. &lt;c&gt;[a, b]&lt;/c&gt; but not &lt;c&gt;[b, a]&lt;/c&gt;).&lt;/returns&gt; public static IEnumerable&lt;KeyValuePair&lt;T, T&gt;&gt; WhereRelationship&lt;T&gt;(this IEnumerable&lt;T&gt; @this, Func&lt;T, T, bool&gt; relationshipFunc) { if (@this == null) throw new ArgumentNullException("this", "WhereRelationship called on a null IEnumerable&lt;T&gt;."); int aIndex = 0; foreach (T a in @this) { foreach (T b in @this.Skip(++aIndex)) { if (relationshipFunc(a, b) || relationshipFunc(b, a)) yield return new KeyValuePair&lt;T, T&gt;(a, b); } } } /// &lt;summary&gt; /// Returns whether or not there are at least &lt;paramref name="minInstances"/&gt; elements in the source sequence /// that satisfy the given &lt;paramref name="predicate"/&gt;. /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended IEnumerable{T}.&lt;/param&gt; /// &lt;param name="minInstances"&gt;The number of elements that must satisfy the &lt;paramref name="predicate"/&gt;.&lt;/param&gt; /// &lt;param name="predicate"&gt;The function that determines whether or not an element is counted.&lt;/param&gt; /// &lt;returns&gt; /// This method will immediately return true upon finding the &lt;paramref name="minInstances"/&gt;th element /// that satisfies the predicate, or if &lt;paramref name="minInstances"/&gt; is 0. Otherwise, if &lt;paramref name="minInstances"/&gt; /// is greater than the size of the source sequence, or less than &lt;paramref name="minInstances"/&gt; elements are found /// to match the &lt;paramref name="predicate"/&gt;, it will return false. /// &lt;/returns&gt; public static bool AtLeast&lt;T&gt;(this IEnumerable&lt;T&gt; @this, ulong minInstances, Func&lt;T, bool&gt; predicate) { if (@this == null) throw new ArgumentNullException("this", "AtLeast called on a null IEnumerable&lt;&gt;."); if (predicate == null) throw new ArgumentNullException("predicate"); if (minInstances == 0) return true; ulong numInstSoFar = 0; return @this.Any(element =&gt; predicate(element) &amp;&amp; ++numInstSoFar == minInstances); } /// &lt;summary&gt; /// Ascertains whether there are no more than &lt;paramref name="maxInstances"/&gt; elements in the source sequence /// that satisfy the given &lt;paramref name="predicate"/&gt;. /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended IEnumerable{T}.&lt;/param&gt; /// &lt;param name="maxInstances"&gt;The maximum number of elements that can satisfy the &lt;paramref name="predicate"/&gt;.&lt;/param&gt; /// &lt;param name="predicate"&gt;The function that determines whether or not an element is counted.&lt;/param&gt; /// &lt;returns&gt; /// This method will immediately return false upon finding the (&lt;paramref name="maxInstances"/&gt; + 1)th element /// that satisfies the predicate. Otherwise, if &lt;paramref name="maxInstances"/&gt; /// is greater than the size of the source sequence, or less than &lt;paramref name="maxInstances"/&gt; elements are found /// to match the &lt;paramref name="predicate"/&gt;, it will return true. /// &lt;/returns&gt; public static bool AtMost&lt;T&gt;(this IEnumerable&lt;T&gt; @this, ulong maxInstances, Func&lt;T, bool&gt; predicate) { if (@this == null) throw new ArgumentNullException("this", "AtMost called on a null IEnumerable&lt;&gt;."); if (predicate == null) throw new ArgumentNullException("predicate"); ulong numInstSoFar = 0; return @this.All(element =&gt; !predicate(element) || ++numInstSoFar &lt;= maxInstances); } // I wrote these in a hurry and they have no tests or documentation public static T PopFirst&lt;T&gt;(this ICollection&lt;T&gt; @this) { T result = @this.First(); @this.Remove(result); return result; } public static T PopLast&lt;T&gt;(this ICollection&lt;T&gt; @this) { T result = @this.Last(); @this.Remove(result); return result; } public static int IndexOf&lt;T&gt;(this T[] @this, T item) { return Array.IndexOf(@this, item); } public static V Pop&lt;K, V&gt;(this IDictionary&lt;K, V&gt; @this, K key) { V result = @this[key]; @this.Remove(key); return result; }
I'm a big stickler when it comes to extension methods like those first two. I can't help but cringe every time I see them. Here's why: The standard result of calling any method on a null object is a NullReferenceException. Just like any method returning a collection without items should return an empty collection instead of a null one. While the language doesn't restrict you from doing odd things, it doesn't mean you should. (Like using goto statements.) Presumably you won't be the only programmer consuming the code, right? You should always consider any expectations and assumptions others may have. I urge everyone to reconsider their use of these types of extension methods.
Have absolutely no idea about going about that. Googled it and didn't really get much help from that either. Any recommendations? 
I have a bunch for working with HTTP and (and other HTTP like networking stacks like SIP). The specific type depends on which networking stack is used (`ADO.NET`, `HttpClient`, etc. etc.) but the idea is the same. For example: internal static bool IsNotFound(this HttpResponseMessage message) { if (message == null) { throw new ArgumentNullException(nameof(message)) } return message.StatusCode == HttpStatusCode.NotFound; } internal static bool IsNotFound(this DataServiceQueryException exception) { if (message == null) { throw new ArgumentNullException(nameof(exception)) } return exception.Response?.StatusCode == (int)HttpStatusCode.NotFound; }
ReSharper basically extends much of the tools that Visual Studio already has. Yeah, you can rename just about everything and it will go through the project update it. It has other things, like extracting methods, suggested refactorings for loops or blocks of code. It has good create method support, extracting to interfaces (if you write IOC-based code, this is very helpful), and navigation. I like the create variables, properties, or method invocation calls. The refactoring of method signatures is also pretty well-written. With larger system, you have things like the code structure and incoming calls (which lets you explore the call graph for anything). It also has good support for finding usages that has more options than Visual Studio. I'm fond of the code reformatting which has a *lot* more options. The test runner is also pretty good, beyond VS's test runner (more keyboard shortcuts, the run last test that works anywhere). Their build system is slightly more intelligent about failures and dependencies (VS either stops all builds or blindly builds everything giving you a lot more errors). And everything is keyboard driven.
Yeah I saw that but understood next to nothing about what was happening. Oh well. I'll look into it when I have spare time ;)
It seem odd. It's like NuGet hasn't even consider this workflow. Having one person actively develop multiple solutions. It just leads to a monolithic project....Again I keep catching myself saying "other languages have already solved this.."
There's a chance it could be cheaper, and they might just want a dedicated team that's already worked with it. But yeah, I know that there's no "real" advantages to buying it out. It's just more software they have to pay for to maintain, along with your 3rd party argument. I'm just saying they have the potential to do it. I was aware of this &gt;Guess they want to keep it separate for some reason :/ 
&gt; Yet, because they are important when implementing a feature like refactoring and to maintain full fidelity with the source text, they do exist as part of the syntax tree. So in Roslyn they actually may not be used to generate IL but are passed from the lexer into the parser and compiled into the AST. They are just not compiled into the final program.
It's got a "Tips" that it launches every time you start VS IIRC. Try going through those. R# is an amazing product. An essential tool for any professional dev.
I would suspect you are wrong. &gt;The IntelliJ Platform is open source, and the code is covered by the Apache 2.0 license. This means that you can build both open source and commercial products on top of the platform without paying any royalties to JetBrains. [From Jetbrains' IntelliJ Platform info](http://www.jetbrains.org/pages/viewpage.action?pageId=983889)
My Faves: Adjust namespaces: Got a solution here where the namespaces/library names don't match up and some of the others are libraries need to be changed. Resharper will reallign everything for you in one fell swoop. it'll even figure out the usings and references and update all of them. Intelligent intellisense: Resharper has an almost uncanny ability to figure out what you're trying to type and go straight to the correct item. eg public void foo(string name) { n &lt;= type this and resharper will go straight to 'name' in the list cos it guessed (with 95%+ accuracy) that that is what you're expecting. } most typing becomes letter-letter-tab, letter-tab-enter, letter-tab etc. Go to Implementation is a godsend if you work in heavily interface-y code. *edit: gah, code formatting
Google didn't just up and build it on their own on top of that though, from the [press release](http://blog.jetbrains.com/blog/2013/05/15/intellij-idea-is-the-base-for-android-studio-the-new-ide-for-android-developers/) when it was first announced.
I've always wondered because I see this a lot. Why have numDecimalPlaces be a signed int and throw an exception at runtime if it's negative when you could make it unsigned and have a compile-time guarantee? Microsoft also does this; it uses int for it's Count properties, and things like that.
That's a fairly pedantic argument. We have a number of extension methods exactly like that but also for IEnumerable, ICollection, IDictionary, etc. I have never seen anybody confused by them. If they were, the name and code makes it painfully obvious what they do and immediately resolve the confusion. From a practical perspective, they make a really common set of checks very discoverable and simple. I also like that the extension method overload on the most specific applicable type is bound to the call at compile time - it makes it very easy to create more-efficient overloads without having to refactor all the calls (or maintain all the overloads on a single gigantic class). Though some see that as a downside of extensions methods, I see it as a strength.
Guys maybe i need make things clear here. I need this because i don't want to go to every computer for update the company software, i want to do this by my desk. The Quasar Server is triggered by AV of course, but i can white list it in every computer on the company, so that's not a problem. Can you guys please help me with this? Thanks again.
Nice! I wonder how the perf compares to say source.GroupBy(keySelector).Select(g =&gt; g.First())
Give it two weeks to let your finger muscle memory time to catch up. So far as being slow, there is an initial hit while it builds it's caches. Otherwise, add memory. Developing with less than 16gb these days is silly. 
*[DebuggerStepThrough] intensifies*
I bought it because it helps me to learn 'best practices'. I am a self-taught coder, so my habits are sometimes not in line with what most people feel is the best approach. Resharper tells me when I'm doing something 'smelly'. Then there is some cool refactoring stuff that extends what Visual Studio can do. Resharper is a great learning tool. I don't know how useful it is for more experienced programmers, but I get the impression it's well-used and well-loved by many.
you are aware of the ability to install software in a windows domain? http://smallbusiness.chron.com/install-msi-file-through-group-policy-47495.html
Hey buddy, thanks for take time to help. Yes! I'm aware... but the updates need user interaction to complete. Because of that i need the RDP access :/
Ah well, thanks for advice. I shall find a work around 
One feature I like are [postfix templates](https://www.jetbrains.com/help/resharper/10.0/Postfix_Templates.html?origin=old_help). Using those, to declare a variable, you can write: expression.var Or to iterate a collection: collection.foreach In both cases, it gets transformed into standard C# code. In my opinion, this makes for a natural flow.
ReSharper is also adding functionality into every release, though.
The stake is that it improves Visual Studio.
GroupBy is just so useful. I use it all the time. IEnumerable&lt;T&gt; ALL the things! 
I've never experienced this. Sounds more like hardware being overdue for an upgrade. Hell its pretty damn quick on my Surface Pro too and its not like its a high spec laptop.
loads of people say they never have issues, but I've never used Resharper *without* performance problems, having used it at three separate companies. I'm currently on a Dell Precision Intel Xeon 3.10GHz, 16GB ram, 237GB Samsung SSD The problem I have is all too often I'll perform an action and it'll take half a second more than usual to do what it needs to do (e.g. display menu). The delay isn't an issue, but I find it jarring and frequent enough to be annoying. The guy who sits next to me uses it, with a machine of the same spec and whatever slowdown he gets (if any) doesn't bother him at all. He personally thinks it's ludicrous that I don't use ReSharper.
The slow downs would be because ReSharper is performing a lot more checks on your code than just running Visual Studio is doing, which is how ReSharper makes itself useful. 
[Visual Studio 2010 Professional Trial](http://download.microsoft.com/download/4/0/E/40EFE5F6-C7A5-48F7-8402-F3497FABF888/X16-42555VS2010ProTrial1.iso) Found it [here](http://stackoverflow.com/a/8894857/367068) If you don't need it for a very specific reason, you should just download the 2015 Community edition for free.
How many projects do you have in your solution? I've noticed that Resharper works really well if you have a small number of projects or one really big project since crossing all those .proj boundaries causes a lot of file IO.
Its to reduce the amount of things you have to consider. If everything is an int, you don't have to worry what happens if you tries to convert -1 to a uint or 3000000000 to an int. 
stop screaming bad explanation each time a non English speaker tries to get help I am doing the best I can (either you can help either you cant)
You might be right there - we have a *ridiculous* number of projects (68) for this one, single solution. I've been at this current company about half a year, so it's not really in my power to change. 
[removed]
Oh I know they do. Their other IDEs are based on intellij and are not free, AFAIK. Their IDEs for the non-Java languages are pretty much the best I've found for that specific language on Windows 
 public static IDbCommand AddParameter(this IDbCommand command, string paramName, DbType type, object value) { var param = command.CreateParameter(); param.ParameterName = paramName; param.DbType = type; param.Value = value command.Parameters.Add(param); return command; } Because `Parameters.AddWithValue` infers the type, and in some cases, notably with strings, it can infer the wrong type and then need to cast the database column to the inferred type, which can kill performance.
I don't really know - this was before my time. Judging by the state of the code I've seen, I'd say this was poor design. I mean, I just fixed a bit of HTML where there was an img tag without a src - it was being set to display block, with a background image. I also found position, top and left css styles all marked with !important.
We've got 149 for 1 solution at work hehe. We'll be deleting a fair few soon though Using plugins is generally not a great idea because of it.
Considering JetBrains is using ReSharper to build a competing IDE to Visual Studio https://www.jetbrains.com/clion/ I don't think it will go anywhere any time soon. Microsoft encourages 3rd party plugins. 
That's what I figured. I was just more curious if there was some scenario where that many projects made sense, as I couldn't think of one. And believe me, I've had my fair share of poorly designed projects (some built by noob me) so I get it. 
I think Microsoft uses JetBrains to do the heavy lifting of produce research and then implements the best features they figure out. You can see it as more features from ReSharper and CodeRush show up in VS. But VS is a big beast and JetBrains is specialized, so it works out for them.
Removed: Rule 8.
Truncate seems like something that really ought to have been in the existing string API. Doesn't come up super-often, but handy when it does: public static string Truncate(this string s, int maxLen) { if (maxLen &lt; 0) { throw new ArgumentException("Maximum length must be greater than 0.", nameof(maxLen)); } if (string.IsNullOrEmpty(s)) { return s; } return s.Length &lt;= maxLen ? s : s.Substring(0, maxLen); } and I have a handful of methods that break IEnumerable&lt;T&gt; up into block of consecutive items before or after various criteria occur: public static IEnumerable&lt;List&lt;T&gt;&gt; ChunkWhen&lt;T&gt;(this IEnumerable&lt;T&gt; source, Func&lt;T, bool&gt; predicate) { if (source == null) { throw new ArgumentNullException(nameof(source)); } if (predicate == null) { throw new ArgumentNullException(nameof(predicate)); } return InternalChunkAfter(source, predicate); } private static IEnumerable&lt;List&lt;T&gt;&gt; InternalChunkAfter&lt;T&gt;(IEnumerable&lt;T&gt; source, Func&lt;T, bool&gt; predicate) { var result = new List&lt;T&gt;(); foreach (var x in source) { result.Add(x); if (!predicate(x)) { continue; } yield return result; result = new List&lt;T&gt;(); } if (result.Any()) { yield return result; } } There are also ChunkWhile and ChunkUntil methods that check the predicate and return the chunk before adding to it, and a ChunkBy method that groups on a key value returned by a key selector. Those started out from something somebody wrote as a StackOverflow answer, but have mutated a bit. Also a reimplementation of F#'s seq.windowed() function, but that was at least partially ripped from a StackOverflow answer. And a simple(-ish) CSV parser, which was adapted from a javascript implementation in a StackOverflow answer (my coworkers were mostly using some variation on string.split, which ... doesn't quite work). So, nothing terribly original or exciting, but I've spent most of the last year and a half pushing strings around and (ab)using LINQ.
I think i've read that the UML has changed with Visual Studio 2015 and even the 'Generate Sequence Diagrams' no longer exists because of the change. See Wompuz's comment in this post.
Thanks,you actually provided knowledge and corrected me wich makes it easier for anyone to accept critisism , I got it working with ReadInnerXml, cheers 
Maybe this will help: http://stackoverflow.com/questions/112224/click-through-transparency-for-visual-c-sharp-window-forms
Simplify things a bit by writing a function that returns a double: static double GetUserDouble(string prompt) { // Add your code to get the value from the user here. } Also, you should probably be checking the returned value from double.TryParse().
Microsoft virtual accademy.
Our `Chunk` method splits an enumerable into chunks of a given size and a final chunk of what's left. I recently discovered to my horror that we had two implementations of this method, one of which was called `Split`. Got rid of that one. :)
I've written that a few times, too. Hasn't been as useful to me as the ones I outlined, though.
if you have a coding standard/style guide, you can generally define most of it in resharper settings and it'll help enforce that for you. go to file and go to symbol are great. they're basically just vs's navigate to... but with results filtered to certain types of things. i use go to file multiple times a day. i've generally found resharper's find usages functionality to be way more reliable and useful than vs's find all references. there are some good suggestions and refactoring that i use regularly: changing all 's to "s in javascript files, letting me know that i'm iterating over an enumerable multiple times, showing that a boolean expression always evaluates to true, inverting if's to reduce nesting, etc. one thing that i've generally found to be more of a nuisance than a boon is resharper's desire to convert tidy foreach loops into linq catastrophes. don't get me wrong, i love linq and use it extensively, but some of the suggestions are just completely unreadable.
It's not always the best tool for the job but i've found it very usefull when I've needed it. 
&gt; In this case you do not have to worry about what happens if you try to use any possible negative number, as you simply can not use them. uint value = 1; value -= 2; Is that a case to worry about? As soon as you get outside trivial ranges, what is easier to debug, a strange -1 or a strange 4294967295?
&gt; Optimizing for, foreach, and lambda expressions saves me a lot of time. This is the biggest one for me. It's helped me understand more and more LINQ expressions, and much more efficient ways to do things, not to mention its suggestions for using new language features (null invoke and string interpolation in C#6 are huge ones).
String.Eval to call string format. I like doing `"Hello world {0}".Eval( foo )`. I find it more natural than the infix notation of calling string.Format. 
They are also workw on a standalone cross-platform C# IDE codenamed Project Rider . https://blog.jetbrains.com/dotnet/2016/01/13/project-rider-a-csharp-ide/
Holy Shit! How long does it take to build the whole solution?
My solution has 183 projects in it. Build Solution is usually not too painful as we go to great lengths to make sure we don't introduce dependencies which will force cascading builds. So if you are editing on a end node in the dependency graph, &lt; 30 seconds for a build. Editing a core library can get close to doing a full rebuild, but I get around that by only building the project I'm working on (or the corresponding Test Project). Rebuild solution takes ~4 minutes on a i7-4850.
It's a very simple solution to the problem, but a faster implementation is pretty trivial: public static IEnumerable&lt;IEnumerable&lt;T&gt;&gt; Chunk&lt;T&gt;(this IEnumerable&lt;T&gt; source, int chunkSize) { if (source == null) { throw new ArgumentNullException(nameof(source)); } if (chunkSize &lt;= 0) { throw new ArgumentException("chunkSize must be greater than 0", nameof(chunkSize)); } return InternalChunk(source, chunkSize); } private static IEnumerable&lt;IEnumerable&lt;T&gt;&gt; InternalChunk&lt;T&gt;(IEnumerable&lt;T&gt; source, int chunkSize) { var chunk = new List&lt;T&gt;(); foreach (var x in source) { chunk.Add(x); if (chunk.Count &gt;= chunkSize) { yield return chunk; chunk = new List&lt;T&gt;(); } } if (chunk.Any()) { yield return chunk; } } I apologize if it seems like I'm badgering.
I like the graphics and the look and feel of it. I noticed the Draw button is very far from cards. If Draw is frequently used, i would suggest making it quicker to navigate / invoke it.
The navigation is irreplaceable for me. I credit coming up to speed on our 67 project solution 3 months faster than other devs because of self documenting code + R#'s navigation methods. It helps if you have good variable/method/file names too.
Agreed on all counts.
I cannot answer this. This solution existed long before I was hired here and in a position to have input on those types of decisions. This also does not capture all of our projects. Our mobile apps (other than our Windows Phone 6 app) are in different solutions. We also have smaller solutions that use the same csproj files to capture specifics bits of our platform. For example our web service projects exist both in this massive solution and in a smaller, more localized solution. No developer is typically working with this massive solution very often. 
Because unsigned types are not allowed in the Common Type System to be exported publicly in type signatures (eg method signatures et al) because CLR languages are not required to implement them. You can do it, of course : it just makes that library/dll unable to be loaded in that case. Examples would be with IronPython or similar. 
If you are halfway decent with using pascal/camel case naming conventions you should never need to type more than 2 or 3 letters. typing `C` `V` `.` `A` `.` `B` `(` `Ctrl+Alt+Space` `,` `Ctrl+Alt+Space` `,` `Ctrl+Alt+Space` `,` `Ctrl+Alt+Space` `Ctrl+Shift+Enter` And you have just found yourself with some 160 line statement that does exactly what you were trying to get. The texture has worn off my `Ctrl`, `Alt`, `Space` and `Shift` keys on my keyboard from use.
You don't need a work around, you just need to use a full property with a backing field instead of an auto-property. So something like this: private bool _foo; public bool Foo { get { return _foo; } set { _foo = value; // Additional code here... } } Edit: Formatting
lots of stuff mentioned in here but i don't see anyone talking about how awesome navigation is with resharper. 
&gt; one thing that i've generally found to be more of a nuisance than a boon is resharper's desire to convert tidy foreach loops into linq catastrophes. don't get me wrong, i love linq and use it extensively, but some of the suggestions are just completely unreadable. I think the defaults for these features were tuned down in one of the more recent releases, but the settings are here if you haven't bothered to look for them yet: under Options, Code Inspection &gt; Inspection Severity Language Usage Opportunities: * Loop can be converted into LINQ-expression * Part of loop's body can be converted into LINQ-expression Mine are set to Hint and Do not show respectively. Doing this avoids these allocation heavy LINQ blobs... An easy way to get to these settings is to open options and search (`Ctrl+F`) for "linq"
 Form2 form2 = new Form2(); this.Hide(); form2.ShowDialog(); this.Show(); If that's what you have, it should work unless something else is going on
You commented on the wrong comment
Well, it isn't complete yet, but i guess i could upload the source anyway. 
Dispose of all your service hosts after you have closed them and create new instances the next time you start them.
I thought this, but literally wrote code that hard coded a link to an image, and no luck. 
Perhaps it's an issue with that specific image, or a caching issue? Have you tried pointing it to one of the working images, or another image altogether? You could also try a data: URI to embed the image and rule out networking as a cause.
Love your edit :D
I'm going to make an attempt at an explanation in the hopes that someone will correct me where I'm really wrong. "Xamarin" is actually several products: * MonoTouch is a set of .NET libraries that wrap the iOS native libraries. If you write a MonoTouch app, it will feel sort of like writing Objective-C, and it will only run on iOS. * MonoDroid is a set of .NET libraries that wrap the Android native libraries. If you write a MonoDroid ap, it will feel sort of like writing Java, and it will only run on Android. * Xamarin Forms is a platform-neutral UI framework and toolchain for writing applications that can run on Android, iOS, Windows Phone, and other platforms while sharing as much code as possible. You can't write a Xamarin Forms app without also using some bits of MonoTouch, and/or MonoDroid, and/or the Windows platform libraries. So whether you use PCLs or Shared Projects, every Xamarin Forms project will have three distinct parts: * The Xamarin Forms part directly references the Xamarin Forms libraries. Code here has to be platform-neutral. * The platform-specific part directly references the iOS/Android/Windows libraries. Code here has to stick to its specific platform. You can't use Android libraries in an iOS app, and so on. * Between those two parts, you'll write interfaces or abstract classes to give your XF layer a platform-neutral way to talk to your OS-specific code. For example, iOS and Android present the GPS to the developer in very different ways. If you're targeting those two platforms, you'd have to write: * A Xamarin Forms interface that defines the way you plan on interacting with the GPS. * An iOS implementation of that interface. * An Android implementation of that interface. * Some mechanism that lets the Xamarin Forms code get the correct implementation for its platform. This is where the decision to choose between PCLs and shared projects comes in. When you choose a shared project architecture, your solution will have: * One 'neutral' project, where you write your Xamarin Forms code that intends to be platform-neutral. * One 'specific' project per platform, where you write code specific to that platform. When you build a particular platform, Xamarin takes the files in the 'neutral' project AND the files in the 'specific' project, then compiles them together as if there were only one project. This means all projects share references, NuGet packages, etc. What's the downside? ~~For some reason I've never seen explained, you can't use XAML with shared projects. I'm in this boat. It stinks.~~ When you choose a PCL platform, ~~you get to use XAML, but~~ it comes at a little bit of a cost. PCLs are a .NET concept that was created in the Silverlight era. People wanted to write apps for Desktop Windows, Silverlight, and Windows Phone. They wanted to be able to easily share code between all of these platforms. But for technical reasons, each platform had a slightly different version of .NET. Every PCL has a "profile" that defines what features it supports. It's very cryptic and difficult to try and find the right profile. They have useful names like "Profile 118", and it's up to you to go find the table somewhere on MSDN that tells you what the hell it means. In general, the more platforms you want to support, the more of a "lowest common denominator" you'll have. For example, PCL profiles that support Silverlight don't tend to have a System.Console class. And a PCL profile that supports Windows Phone won't have some System.Reflection capabilities. So if you were writing a WPF/Silverlight application, you'd have this architecture: * A PCL able to target both WPF and Silverlight that contains the application's core logic. * A WPF .exe that implements the UI for the WPF application and references the PCL. * A Silverlight package that implements the UI for the Silverlight application and references the PCL. It works because the 'neutral' PCL won't let you use a type that's in WPF but not Silverlight, or in Silverlight but not WPF. So it's legal for either the WPF or Silverlight library to access the code. In practice, this can get tricky. I don't use PCL projects much, so maybe this part's wrong. But I reckon Xamarin does it similar. You have one project that is a PCL profile that can touch all platforms. That's where the Xamarin Forms code lives, you get to use XAML, and you're going to write as much of your core logic as possible here. Then there will be OS-specific projects with different PCL profiles that give you a little more freedom. You can expose these to Xamarin Forms via interfaces, and mechanisms that connect the right platform implementation at the right time. What's the downside? We chose shared projects because something something about P\Invoke. I didn't really understand it. I do remember being really frustrated by PCLs when I initially tried them, I never got used to not having the whole BCL at my command.
&gt; the site in question had a hosts entry of a different IP than it was bound to in IIS So, was someone trying to use your PDF for a cross-site-scripting attack by getting people who loaded your "trusted" PDF to download something malicious from that other IP ?
It will work but you might spend more time learning Umbraco then what it would take to use the standard dotnet Mvc patterns for permission. If you aren't going to to use any of Umbracos feature set excepting permissions and groups I would avoid. 
Actually, I think I actually managed to get xaml in shared projects to work a couple of weeks ago. You just had to mess with the properties for the xaml files a bit. I think you had to change the build action and then some other property and then it actually worked. I think that the magic combination was Build Action: Embedded resource Custom Tool: MSBuild:UpdateDesignTimeXaml In the end I scrapped this solution though and went with only using PCL's instead of shared projects.
Or you could just do $"Hello world {foo}" if you are using new version of c#.
Wow! I wonder what the specs of the Macbook are to enable it build a solution of 197 projects within 3 minutes!
You haven't dragged the label into your form (or you haven't renamed it to lblMessage)
In that case you might have better luck with [MSDN](https://msdn.microsoft.com/en-us/library/dd492135.aspx)
Nice, I think the attribute approach is slick. Have anything for auto creating a "?" or "help"?
Copied that approach from ORM's and another cmd-args parser. Good idea, added that to the roadmap (roadmap will be online later today)
It really depends on the use case. As a language, C# is far ahead of Java. Sun and Oracle let it stagnate. C# has better development tools. However, if the team is a unix environment, Java still works a lot better than C# on Unix. If I received an offer I liked to work in Java, I'd take it. But you'd never get me to translate all of my C# code to Java. Or even the new code.
I prefer C# because: --- Delegates --- Operator Overloading --- LINQ --- Unsigned integers --- Pointers --- Custom enum type --- "ref" and "out" parameters I would only switch to Java if forced for some reason.
Well given what their typical customer does, it actually does make sense. I just use them because I get a discount on a decent server because I partner with a company that has 6 other servers with them. But yes, where I'm above your average user in terms of what I'm hosting, and my knowledge, it doesn't make sense. 
Both.
I've made one of these, with the attribute stuff too. I like the approach. Mine's not open source though, so I'll just post about couple of things I came across, in no particular order so apologies in advance, you can decide if they're useful or not :) --- [HelpText("Whether to copy type mappings to the target index. This option first deletes mappings in the target index, which also deletes any documents using those mappings. False will allow the use of templates applicable to the target index", false, OptionSeverity.Dangereux)] public bool CopyMappings { get; set; } public class HelpTextAttribute : Attribute { public string Text { get; set; } public object Default { get; set; } public OptionSeverity Severity { get; set; } public HelpTextAttribute(string text, object defaultValue, OptionSeverity severity = OptionSeverity.Meh) { Text = text; Default = defaultValue; Severity = severity; } } The first argument is a small description of what the option does. Second is the default value, and finally the "OptionSeverity" which causes the message to be displayed slightly more prominently. When you pass /? to my library it prints out the descriptions and default values of each option. There's also a feature that prints out the differences between the default values and actual values, useful for logging. --- We both have the default value feature, but I wanted to use nullable types as the options too, which [your library would not work with](https://github.com/JustBytes/JustBytes.CommandLine/blob/development/JustBytes.CommandLine/ArgumentParser.cs#L126). What you need to do is use Nullable.GetUnderlyingType: string value; PropertyInfo availableProp; var convertedValue = Convert.ChangeType(value, Nullable.GetUnderlyingType(availableProp.PropertyType) ?? availableProp.PropertyType); availableProp.SetValue(options, convertedValue); --- Final thing I was considering is support for different styles of command arguments, I currently use DOS style (/OptionInPascalCase:true), but there's no reason the same library can't also support --unixStyle. 
I actually used to work in Java and I'd say my knowledge of the language is almost as good as my knowledge of C# (enough that I'd feel comfortable working in either). When it comes to getting a job I'd probably pick C# over Java even if it meant a slight pay cut; though if the difference was &gt;10% I'd probably go Java. For me the two languages aren't so different- obviously C# has some nice ease-of-life features but after using Java for 6 months you'll get used to "the Java way" and it won't hurt that bad. The real PITA stuff for me comes from an incomplete reflection capability (it's nigh-impossible to enumerate through all types in an 'assembly'/JAR), lack of custom struct types, lack of unsigned arithmetic, and "Java API syndrome" in places (e.g. FactoryFactoryAbstractImplPattern). I actually didn't find type erasure and a lack of LINQ to be so problematic, myself.
&gt; like if I want struct thing { int x; int y; int z } and then I want an array of 1000 things with them all laid out in memory adjacent to each other in the array. Can you do that? No structs in Java. The way I'd write this would be to have a giant array of ints (or a `ByteBuffer`) somewhere and then a facade class that would take an index (e.g. a reference) and give you X, Y, and Z manually (so something like `public static int Facade.getX(int thingRef)` etc. Java does have an undocumented [Unsafe class](https://dzone.com/articles/understanding-sunmiscunsafe) that can be used to abuse the language also.
It would have to be a ***very*** compelling opportunity. And I still might not want to. I want my career to go forward, not backward.
Yea, maybe they have fixed it. I only started with xamarin approx. 2weeks ago :D
ehhhh *Throws up hands and opens an old C compiler* 
Haha, a fair response :P
You forgot to mention generics.
I find it interesting that the majority of the responses here are mostly 'No, C# is a better language' and over in /r/Java the responses are mostly 'No, Java has a better ecosystem'
Java doesn't have generics? God, what a useless language.
Java's generic implementation uses **type erasure**. This means that your strongly typed generic collections are actually of type `Object` at runtime. So no, they don't really have generics.
Not to rain on your parade too much but did you see [this one](https://github.com/gsscoder/commandline) ([it's on nuget too](https://www.nuget.org/packages/CommandLineParser/1.9.71))? I've slapped together so many command line parsers over the years and it's always easy at first and then starts snowballing as you realize you need all this flexibility but want a bunch of features that are easy to use. A few years back I was crunching out a big project in an absurdly short time frame that required a pretty complicated command line interaction. Realizing I didn't have the time to sink into I went looking for a pre-rolled solution and found that. I've since used it several times and find it to be very feature rich, easy to use and, importantly, many of the multitudinous corner cases have been hammered out. By all means continue your work for you own sake but if what you need is a mature and robust solution to command line parsing, that one is pretty much where you're going to end up if you keep iterating and improving what you've got. Sorry if I sound like a salesman, that's not my intention. I've just gone pretty far down that road myself and I now know that the eventually obvious solution already exists.
&gt; C# did a great job of coming after Java and copying it, and improving it. In the end they are both OOP, strong/static typed. Saving a few keystrokes, having to use libraries instead of built-ins, LINQ vs. streams are minor differences. I'm afraid you've kind of reduced the differences to a few things here and there but actually there is still a gulf of features between Java and C#. Some examples: * Value types (structs) * Generics can use value types (IList&lt;int&gt; etc), and there's no type erasure (i.e. you can do Type type = typeof(T)) * As a result C# doesn't have boxed alternatives to the primitive types (as there's no need), (though autoboxing still occurs in some situations). * C# supports method/function pointers. Java 8 just introduced this in a shoddy way with functional interfaces, but C# takes it further. See: Delegates and lambdas. * C# also uses events rather than callbacks. Java does this pattern by adding anonymous overrides of classes or interfaces to some internal list (e.g. .addActionListener(new AbstractAction() { ... });), the C# paradigm is events and delegates/lambdas. * Check out the typical way to structure projects in C#. Namespaces instead of packages (no more com.reddit.etc crap), assemblies instead of JARs. It's a lot better. Relatedly, there's no package-level access. Instead we have internal, which is visible to the whole assembly (and potentially friend assemblies) but nothing more. * You've obviously heard of it already, but LINQ is the combination of extension methods and lambdas. Really powerful for manipulating collections. Here's a very thorough list of all the the things LINQ can do: http://linq101.nilzorblog.com/linq101-lambda.php * var is perfectly usable and makes code easier to read/write 90% of the time. * Also the operator overloading is a great feature and I honestly don't see what anyone's problem with it could really be. I've never come across any library or type in C# that has done something unexpected with it. It's nice to be able to add Vectors together or multiply Quaternions. * C# supports dynamic too w.r.t. late binding: http://msdn.microsoft.com/en-gb/library/dd264741.aspx * Properties. You don't usually write getters and setters in C#, use properties: http://msdn.microsoft.com/en-gb/library/x9fsa0sw.aspx . * Methods and properties in C# are 'final' by default (if only they'd made classes sealed by default too) * Null coalescence: string name = user.FullName ?? user.Username; // Picks first non-null value, can chain it multiple times * And now null propogation: string name = user?.FullName; // name is null or FullName depending on whether user is null * verbatim strings, e.g. string path = @"C:\Windows\System32\"; // No backslash escaping required * Exceptions are never checked (hurrah) * Nullable types, if you want a potentially null int: int? maybeNull = null; * More stuff like expression trees, pointers, yield, using, Flags on enums, generic constraints (new()), checked/unchecked contexts (not to do with exceptions), partial, object initializers, and the much better reflection API &gt; No, they don't care because "they" would rather have a far more performant, far more reliable, far more popular, widely supported platform that runs on a more reasonable backend infrastructure. None of these things are true. * Performant: http://web.ageofascent.com/asp-net-core-exeeds-1-15-million-requests-12-6-gbps/ * Reliable: There's nothing more or less reliable about the .NET world over Java Enterprise (I markedly remember Glassfish's memory leaks also). * Popular: As you can see [here](http://www.acunetix.com/blog/articles/statistics-from-the-top-1000000-websites/) (scroll down a bit), ASP.NET was the second most prolific technology used on the top 1,000,000 websites in 2010 (at 29.24%), after PHP. That will have undoubtedly changed quite a lot since then but it's still indicative that there's a big market for .NET stacks in webdev. * Widely supported: Maybe this one, I don't know. I don't have any information either way on this. I don't think either stack is particularly unsupported though. Ultimately it's fine of course to prefer Java, I was just dismayed at the FUD in the mirror post in /r/java. 
hey buddy, actually i'm using WS_EX_TRANSPARENT for this function, works fine, thanks for taking time to help-me.
Another pre-rolled option: https://www.nuget.org/packages/PanoramicData.ConsoleMagic/
This is because static lives with, or is tied to, the **class** in memory whereas **objects** live on the heap and are create from the classes blueprint. You can use a static constructor (which the class loader calls while initializing the class in memory) to play around with static even more to get a better sense of what static actually is and you can also get a sense of how the class loader actually acts as well. This is also an area where I like C# better than java. In Java, referencing a static field in a non-static way will just resolve back to the class whereas the C# compiler fails with an error when you try to do that by default. Java giving the ability to resolve to the class leads to so much more beginner confusion about static.
I also strongly disagree with the statement that the language stagnated. Oracle has been changing Java fairly rapidly. To say otherwise is ignorance at its finest. I think Java folks rightly disagree about his tooling claim as well. My shop is moving from Java to C# and while C# is the better language to work in, I can't deny that tooling on the java side is just light years beyond what C# has. Ok, visual studio is pretty good, but Intellij is also pretty good.
Yeah, saw that one, used that one, got frustrated because of some little bugs that really annoyed me, could've waited for the fix but started my own for the sake of doing it :D Learned a ton of stuff already so I'll probably keep developing it but thanks for the link and the hint anyway.
There are no stack based memory structures in Java. Arrays are, by definition, contiguous. Example seems a bit contrived, but no, you can't do that in this way. What I think is a more important problem with java not having structs is that you require implementing clone behavior yourself if you need that type of behavior for passing them around.
What bugs? I'm one of the maintainers and if you've submitted an issue for it, I'll take a look. That said, I hope you enjoy working on your library. Despite maintaining the library above, I too have written my own command line parser :P
&gt; No XNA, just regular c# code Isn't XNA deprecated for several years now?
No.
&gt; Example seems a bit contrived It isn't, [arrays of structs](http://stackoverflow.com/questions/17924705/structure-of-arrays-vs-array-of-structures-in-cuda) are an important performance consideration.
I'm just saying anything with enough data to go to the LoH generally deserves algorithmic attention and shouldn't be getting haphazardly copied around. A O(n^(4)) algorithm works fine for a hundred elements or even a thousand and probably doesn't deserve to be seriously looked at for profiling if it is never going to have more than 10. Any improvements made to it are going to be unnoticeable in the scope of the entire application. Every single one of us works with such algorithms every day without even thinking of them. The algorithm for List resizing is to double each time it needs more space. 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384; All of those numbers are small enough that the affect of copying roughly 3/4 of them around a few times barely even registers on profiling outside of artificial benchmarks. However, the nature of exponentials is that something is completely unnoticeable right up to one or two doublings before OMGWTFBBQ. In .NET that magical size is 85,000 bytes.
2k lines is pretty ridiculous. What exactly are you asking here? Where to put your javascript? Do you know about bundles in MVC? Check it: http://timgthomas.com/2012/09/a-quick-start-of-asp-net-mvc-4s-bundling/ Have you thought of passing in the URL as a parameter to the function that houses the AJAX calls? 
https://msdn.microsoft.com/en-us/library/system.directoryservices.accountmanagement.aspx
For desktop apps, start with System.Security.Principal.WindowsIdentity.GetCurrent(); That returns a WindowsIdentity object. If the WindowsIdentity.IsAuthenticated is false, then the user isn't authenticated. https://msdn.microsoft.com/en-us/library/sfs49sw0(v=vs.110).aspx https://msdn.microsoft.com/en-us/library/system.security.principal.windowsidentity(v=vs.110).aspx 
&gt; System.IO.File.WriteAllLines(AppDomain.CurrentDomain.BaseDirectory + @"\views\home\index.cshtml", indePageBuild); Do not overwrite your views at runtime. This always causes a recompilation of the view, which is very slow.
Unfortunately, the R# commands are just muscle memory now. :/
I heard some languages use 1.5x instead of 2x for resizing to save on memory (do you save anything else with that?), afaik one is Rust. Thanks for the explanation. already interesting to learn such stuff.
True, but I'd prefer not to if the arguments were long. For instance: string msg = "Thing '{0}' reported an exception while loading {1}:\r\n\r\n{2}".Eval( this.session.EvalRepo.Current, currentEval, e.ToString() ); Could also be rewritten: string msg = "Thing '{0}' reported an exception while loading {1}:\r\n\r\n{2}"; msg = msg.Eval( this.session.EvalRepo.Current, currentEval, e.ToString() ); Now imagine that in the string substitution. Yikes.
 [Rust vectors double in size](https://doc.rust-lang.org/src/collections/up/src/libcollections/vec.rs.html#597) ([source to the double function here]( https://doc.rust-lang.org/src/alloc/up/src/liballoc/raw_vec.rs.html#222)). I really like how Rust's standard library documentation is in fact the source code itself. According to that documentation: &gt; This function is ideal for when pushing elements one-at-a-time because you don't need to incur the costs of the more general computations reserve needs to do to guard against overflow. You do however need to manually check if your len == cap. I am not sure what 1.5x would gain, the trouble of it still being exponential (in that you don't have to worry about the implementation until one or two steps before catastrophic failure) is still there... ultimately malloc or whatever would have to find some block of memory large enough to fit your data anyway and block copying 2 memory locations of arbitrary sizes as fast as possible is exactly the same problem if the factor is 1.5 or 2. I suppose 1.5 would have the advantage of being less memory, but at the same time it would have the disadvantages of being done more often in the presence of many inserts and possibly slightly [one iop] slower to calculate (new size = `size &lt;&lt; 1` vs `size + (size &gt;&gt; 1)`).
I appreciate you trying to be exhaustive, but it was acknowledged that C# is a better language, just that none of the things (save structs without significant effort) are all that big of a deal. By no means am I dismissing your points, I agree with most of them (some I really disagree with). However my IDE, and my preference to maintainable readable code far outweight the conciseness that some of the following features provide. What I really value are things like Netflix libraries, Google libraries, Spring, Twitter libraries, Amazon libraries (See ION yet?), the open source, the cross-platform compatibility, the ubiquity, the tooling, the community, etc.... &gt;Value types (structs) yeah it's coming, to make the ByteBuffer workarounds redundant. All the big data systems are written for the JVM, so this clearly isn't as big of a problem as most people try to make it out to be. Java philosophy is to scale out instead of up, which is a far better model. You have that luxury when you don't care about licences and ridiculous management overhead as is the typical case in the Windows world. &gt;Generics can use value types (IList&lt;int&gt; etc), and there's no type erasure (i.e. you can do Type type = typeof(T)) In practice, I've had to do workarounds twice in my multi-decade career. This is blown way out of proportion, the compiler does a decent enough job (again not great, but fine for 99.5% use cases), and if it's that much of a problem use codegen, or create a concrete implementation. &gt;C# also uses events rather than callbacks. Java does this pattern by adding anonymous overrides of classes or interfaces to some internal list (e.g. .addActionListener(new AbstractAction() { ... });), the C# paradigm is events and delegates/lambdas. For the micro level, you can use Lambdas on Java. For the macro example, you should be using RxJava or Orleans anyway, both models are inferior for the wide scope. &gt;Check out the typical way to structure projects in C#. Namespaces instead of packages (no more com.reddit.etc crap), assemblies instead of JARs. It's a lot better. Relatedly, there's no package-level access. Instead we have internal, which is visible to the whole assembly (and potentially friend assemblies) but nothing more. Sorry, but that's hair-splitting. &gt;You've obviously heard of it already, but LINQ is the combination of extension methods and lambdas. Really powerful for manipulating collections. Here's a very thorough list of all the the things LINQ can do: http://linq101.nilzorblog.com/linq101-lambda.php Hairsplitting. A couple of extra keystrokes mean very little. &gt;var is perfectly usable and makes code easier to read/write 90% of the time. It's probably coming to Java, but like I said, lots of people prefer readability instead of brevity. From my perspective this is a negative. In my idea I just do ctrl-1, and it fills in the type lhs for me anyway and then I don't see any instances of the pattern var foo = fubar(); &gt;Also the operator overloading is a great feature.. Sorry coding by emoticons is idiotic. beyond complex, matrix, point, this is a risk. I did enough Perl in my time and the clever DSLs mean you can't read what's going on without having to learn it all over again. &gt;C# supports dynamic too w.r.t. late binding... You can do that sort of "shoot yourself in the foot" logic in Java as well but you have to jump through a couple of lines of code. I'm happy to see it discouraged. &gt;Properties. You don't usually write getters and setters in C#, use properties http://www.projectlombok.com/ &gt;Methods and properties in C# are 'final' by default (if only they'd made classes sealed by default too) Nice feature. In Java we have to add final and would be beneficial to add @Immutable annotation so the intellifent type checker helps. &gt;Null coalescence: string name = user.FullName ?? user.Username; // Picks first non-null value, can chain it multiple times Yeah, that's horrible. Swifts Type? syntax is far more preferable, and languages like Groovy and Kotlin have it too. However that just prolongs/encourages idiotic coding. In Java you're supposed to use @NonNull/@Nullable + Optional&lt;&gt; &gt;And now null propogation: string name = user?.FullName; // name is null or FullName depending on whether user is null ditto as above, even more so. &gt;verbatim strings, e.g. string path = @"C:\Windows\System32\"; // No backslash escaping required Nice feature, but in Java you're expected to externalize your strings. &gt;Exceptions are never checked (hurrah) I still write checked exceptions and consider it useful in rare circumstances. It's like improving the signature of your methods and decreasing the likelyhood that you "forget" to handle the exception that you thought you would come back to deal with later. I acknowledge this is an unpopular opinion. &gt;Nullable types, if you want a potentially null int: int? maybeNull = null; I have to learn more about. You're not saying that I can define an existing primitive to support null are you? That would be bad, IMO. &gt;More stuff like expression trees, pointers, yield, using, Flags on enums, generic constraints (new()), checked/unchecked contexts (not to do with exceptions), partial, object initializers, and the much better reflection API I by no means tried to be exhausive in my simplification above. I merely tried to say that the difference between Java and C# for a seasoned engineer is trivialalities or workarounds exist (and are rarely necessary). And if it really is a problem for you Kotlin is IMO much better than C#, and Scala supports everything you could need that's far cleaner. Even tail recursion. Structs are really the only thing that is a major hinderance. &gt;Performant You misunderstanding me, most of the people in the Java world view running production infrastructure on Windows as a joke. So I was referring to Java vs. your link to running ASP.net on Linux &gt;Reliable: There's nothing more or less reliable about the .NET world over Java Enterprise (I markedly remember Glassfish's memory leaks also). Your link referenced Linux. Mono or .NET core are unreliable. &gt;Popular: As you can see here (scroll down a bit), ASP.NET was the second most prolific technology used on the top 1,000,000 websites in 2010 (at 29.24%), after PHP. That will have undoubtedly changed quite a lot since then but it's still indicative that there's a big market for .NET stacks in webdev. Sorry, know nothing about that vendor, and I'm highly skeptical: http://redmonk.com/sogrady/2016/02/19/language-rankings-1-16/ http://www.tiobe.com/tiobe_index/ https://www.google.com/trends/explore#q=Java%2C%20%2Fm%2F0gdzk&amp;date=1%2F2016%2012m&amp;cmpt=q&amp;tz=Etc%2FGMT%2B7 Stackoverflow java× 1057961 vs. c#× 940687 My favorite indicator: http://githut.info/ 
If I understand the code, in the while-loop you create the regex expression, use it on the text, **save it into the file** and then go to the next iteration. You are saving the file every regex pass, and disk operations are slow, so that's probably why it's slow. As to your suggested improvement (searching for the next replacement in a position AFTER the last replacement): I believe you would have you implement your own replacing algorithm for that, I don't think this is something regex alone can do. Additionally: You should use for-loop instead of while-loop in this code. And following statement already returns true/false value, no need to check whether it equals to true: if (string.IsNullOrWhiteSpace(theROC.FieldVariablesList[counter].value)) not to mention that it would be probably better to negate the statement to remove the empty block if (!string.IsNullOrWhiteSpace(theROC.FieldVariablesList[counter].value)) docText = regexText.Replace(docText, theROC.FieldVariablesList[counter].value, 1); 
Good pointers - thank you! For the saving to file, I guess that is done with that streamwriter bit? I honestly don't know how this works - what would be a way to work this so that it only saves it once? If that's the issue, I'm not gonna mess with a better search algorithm! 
Saving is done by the following code: using (StreamWriter sw = new StreamWriter(wordDoc.MainDocumentPart.GetStream(FileMode.Create))) sw.Write(docText); So, if you want to save it only once, you have to place it after the looped code. In your case it will be something like: while(..) // this should be replaced with "for (int counter = 0; counter &lt; theROC.FieldVariablesList.Count; counter++)" { // the regex replacing code here backgroundWorker1.ReportProgress(counter); } using (StreamWriter sw = new StreamWriter(wordDoc.MainDocumentPart.GetStream(FileMode.Create))) { sw.Write(docText); }
And they're both right. It seems as though .NET might be closing the ecosystem gap faster than Java is improving as a language. Oracle needs to really sharpen up their time-line for Java 10 - the delay for Java 9 has given a lot of time for C# to move even further ahead as a language and for .NET frameworks to really mature. Microsoft is doing all the right things with big pushes into Open Source and multi-platform support. Unless Oracle finds a way to communicate more with their audience and deliver better and more quickly, Microsoft can just keep on the road they're on to take Java's place.
Lol, that would be great :D Sadly, I am programatically challenged, and wouldn't even know how to put it into a buffer : /
I'm going to give that a whirl, but since docText gets regex.replace-ed every time in the loop, if it doesn't write it until outside of the loop, won't the end result be the document with only the very last variable replaced?
I don't think this would rewrite everytime.This will only overwrite the view if a change has been made to the other two files. Once this is finished, done in production, it will simply fetch the index.cshtml. This line catches the attributes on the file: if (indexAttributes.HasFlag(System.IO.FileAttributes.Archive) || javaAttributes.HasFlag(System.IO.FileAttributes.Archive)) I never ask for another view in the code, all data manipulation is done client side through ajax calls... if that makes sense?
Type erasure's only benefit (that I can see) is when you use the JVM for non-Java languages such as Clojure. Otherwise, it gets in the way and inevitably results in passing ugly `Class&lt;T&gt;` objects around everywhere.
Dang, sarcasm is a thing. I am aware it isn't elegant.
I guess I still don't understand why it's remembering the changes that it made since it is only writing once....
Aside from a full blown design pattern, have you considered using [enum flags](http://www.dotnetperls.com/enum-flags) instead of the sets of booleans or a dictionary? Simple bitwise operations (which in turn can be abstracted with extension methods or a wrapping class) can then easily combine capabilities and check for available combinations. It might also be a very easy way to incorporate into whatever existing code base and design you already have for these devices (as it's just a single additional field/property for the devices). EDIT: Also, it's very easy to assign/store/read/serialize these "capabilities" as well as it essentially boils down to a single integer value. Quite a few existing helper methods for you to use too. [`Enum.HasFlag`](https://msdn.microsoft.com/en-us/library/system.enum.hasflag%28v=vs.110%29.aspx) for example, and their `.ToString()` and `Enum.Parse` methods already work well for combining them (they comma-delimit the different flags automatically). EDITx2: Sorry, I missed other question you had in terms of avoiding duplicate code. I'm not sure how to help you here without a better idea of what kind of code you're duplicating. Perhaps you can do something with interfaces or abstract classes, perhaps even decorators. Something where you can feed in every command and if the device supports it, it does something with the command, and if it doesn't, it ignores it. But now, I'm pretty sure I'm just talking out of my ass without a more intimate understanding of your code base (or at least, not without my splitting headache), sorry.
No. Look at this line: docText = regexText.Replace(docText, theROC.FieldVariablesList[counter].value, 1); You take the contents of docText, you do the replacing, and then you save the result in the docText. Therefore, in the next pass you are doing the replacement in the new version of the docText (with the changes of the previous replacement). Consider this: string x = "abcd"; Regex r1 = new Regex("a"); Regex r2 = new Regex("b"); x = r1.Replace(x, "0", 1); // x is now "0bcd" x = r2.Replace(x, "1", 1); // x is now "01cd"
check the other post i just made
Why should I use shitty slow languages for microservices when C# and Java do microservices well without being dog slow? Further, why not use a DSL like Go?
This only works if you use Visual Studio's refactoring capabilities (rename in the context menu, or Ctrl+R Ctrl+R) to rename something throughout your code base.
Since this is c# you could expose AdditionalCapabilities as a dynamic or use expando object. That would let the client use what's basically a name/object dictionary as properties. You also get deferred creation, you can embed method calls in the objects, and don't have to maintain different kinds of capabilities classes. On the other hand if you are both the client and the producer then just use a name value collection.
Yeah I saw that but I wasn't very convinced at the answer. The only good reason so far that I can see, is posted here: http://stackoverflow.com/questions/31695900/what-is-the-purpose-of-nameof It seems to me like a preventative measure in that you can see how your code is connected but I still don't see how it prevents compile errors on it's own. For example, I'll create a property Name in SomeClass and then instantiate an object of SomeClass named someObject. If I always want to ensure that someObject.Name = "Name" will always be equal to the name of the property, then I suppose, nameof(Name) would be better because if I can change everything except the value of someObject.Name and it will still compile. 
Sometimes I like to make things overly complicated as well :) 
&gt; ref tells the compiler that the object is initialized before entering the function, while out tells the compiler that the object will be initialized inside the function. &gt; So while ref is two-ways, out is out-only. http://stackoverflow.com/questions/388464/whats-the-difference-between-the-ref-and-out-keywords It makes it clear the direction of the parameter to the dev using the API.
Too bad about the license, it's a cool idea. The framework, not the license.
You are right, you would get a compile error if you didn't change the interpolated string, however, you could just modify the value and not change the description and end up with: return $"WordCount={Words}" Which would compile, but now your string is slowly drifting away from the code, because the string is not referenced. A more common use of `nameof` is in argument names. For example: public void UpdatePerson(string n) { if (n == null) throw new ArgumentNullException(nameof(n)); // Do Work } Now, if you refactor `n` using the variable rename, the argument and the exception will always match. If you had simply thrown `new ArgumentNullException("n")` it would be confusing if you renamed the argument `n` to `newName` but the exception was complaining about `n` being null. 
0xNope
I believe value types are set to come in Java 10. That will be big.
There are two cases for it. 1) The Try pattern. It allows succinct code for a variety of cases that avoids exceptions. The snippet below for example would have to use Exceptions to do something that can instead be handled by an `if`. Guid g; if(Guid.TryParse(inputString, out g)) { DoSomething(g); } else { ComplainAboutFormat(inputString); } 2) COM and Native interop COM relies on out parameters for a great many things. This is largely due to the convention of the primary return value being an error code due to the lack of exceptions in C. Essentially, without out parameters, C# would be unable to interact with COM and C# would lose much validity as a solution for many projects. There is also a very large semantic difference between `ref` and `out`. `ref` means that the object has already been initialized when it has been passed into the function while `out` means the method will be returning a value and has no dependency on the input value. This toy program shows two compiler errors that illustrate the the differences between the keywords: class Program { static void Main(string[] args) { object o; RefMethod(ref o); // Compiler error for use of unassigned variable object e = new object(); OutMethod(out e); } static void RefMethod(ref object foo) { if (foo == null) { foo = new object(); } Console.WriteLine(foo.GetHashCode()); } static void OutMethod(out object bar) { Console.WriteLine(bar.GetHashCode()); // Compiler error for use of unassigned variable } }
Another benefits is that it's backward compatible with pre-generic Java. 
I usually use it to return error codes. I will set the return type of a function to bool and the last parameter as an 'out" containing the error message. Then I can check if the function succeeded or not and what the error message is. Without 'out' I guess I would set return type as a 'string', then check its length or something.
NVM. It was an event handler issue the author forgot to mention. 
As someone that made this choice recently (decided that I wanted to move on from C++ and java/C# seemed the logical next step for backend development) for me it came down to a nicer language or cross platform. I think C# will be a strong cross platform contender soon enough, where as I wasn't so sure that Java would keep up with C# feature wise.
Same here
Absolutely useless with this license. 
Thanks, thats interesting. In Java we would define it as a boxed type called @Nullable Integer if a Null value is possible
That sounds great! If it added business value I know I wouldn't mind paying something modest. Good move making it free for non commercial.
That's actually really bad advice. First and foremost, you didn't get the quote right. The warning was against micro-optimizations. Secondly, most performance problems are so systemic that you can't find them with a profiler. Things like unnecessary memory allocations are spread so thin that you can't just point to one place.
Well ok, but is it events overhead, or is it too much heap use?
Can you just use interfaces to define capabilities and use reflection on the object to detect all interfaces which are present? You could store this into some collection or expose it through a method for interrogation?
&gt; I also dislike commercial use of my work. Then publish it under GPL3.
If you use WPF look up "Data Binding". With this you can bind GUI Elements to Objects in code depending on specific context, eg a selection in a list.
I hate to be the one to tell you this, but you're using mvc completely wrong. I'm not totally sure what you're trying to accomplish, but I know there is a better way to do it. What does the model look like that you're passing to the view? 
Heh yeah, I'm a little in over my head here. Basically my model is a user, the user just has a user/pass. some info, and a list of ulongs which correspond to certain servers which control pretty nifty machines. So when the index get a new user it will connect to all the servers and allow users to access more info via AJAX POST. I was think of using a bigger model, one to house say ALL the data of multiple machines, not just their address to access small chunks at a time, but it's just to much. 
Also look up ICommand and mvvm. We've used it for a few apps and we love it.
I did move to Java last year. It wasn't part of a grand plan. The .net team I was on was a little chaotic. I was offered a job on a Java team at the same company, so I said, "why not, I'll give it a shot". My assessment of C# vs Java is exactly what u/jonc211 mentions, C# is a better language, but Java has a better ecosystem. 
No, the rename refactoring has nothing to do with this feature... As others have said its to ensure the strings references to a method/propertie/field stay consistent. Sure $"Value is = {MyProperty}" works, but only for getting the value and only if the object supports ToString. This logic completely falls part when you look at methods and especially void or complex object return types. If you have a method that returns back a person for example, unless you override to string all you'll get is the Type name. Which isn't really helpful to you at all. I would say the primary reason for this is pattern is when implementing the INotifyPripertyChange interface, you have to pass down through the event the name of the property that changed. It used to be magic string in order to do this, which as everyone above has pointed out causes issues when you start refactoring and you have to find all your navigate strings. 
I know what it's used for, this is irrelevant. If you use the refactoring functions to rename something, the `nameof()` occurrences will be renamed as well, so you don't get the errors from manually renaming something that the OP was complaining about.
Cool - does this live-update if I modify the json/xml file?
How does it handle versions of settings?
New license: GPLv3 https://github.com/exaphaser/SharpJS/blob/master/LICENSE.md
Wow, thats great news because its really a very interesting project, now Im all for it, thanks!
Yup. I've seen, and had, a lot of people fall into the trap where when given a simple task, they feel the need to complicate or 'improve' upon it. It's a common tool used by interviewers to assess your ability to follow instructions. You can go a head and create the most impressive looking and fluid deck of cards API, but if they didn't ask for impressive, or fluid, you could be penalized. 
Awesome. Thank you very much for taking the time to write this all out. I will be spending a lot of time digesting it. What I am doing is not exactly WPF, but I think your answer could be adapted to fit what I am doing. 
Just like to say Angular 2 has nothing to do with C#, you can use Typescript (which is JavaScript with more features) with it which has similar syntax to C# (often considered a C# dev's JavaScript). I used to work with Silverlight and WPF and using Angular 2 alphas/betas has been a nice transition. The concepts of MVVM, components and typescript make it a really great experience. You can obviously use C# for your back end if you wish. 
Here is the thing, don't pull in a framework because you want to use it. Use a framework because it solves an recurring problem elegantly.
FileSystemWatcher
They are completely different things. With UWP you can access as low in kernel as win32 apps. 
I don't need an SPA. I suppose right now, I would like to use an editable data grid control to edit many records in one view, whereas right now, I need to go Job &gt; JobEntries &gt; Select Job Entry &gt; Edit Entry &gt; Save. I am using a DapperDotNet data layer and I'm having difficulty grasping how some of these controls are supposed to interact with my CRUD operations. Thanks.
80% off discount code! Enter it upon checkout. c38b4e4f
A frame work shouldn't be a solution to a problem. A framework makes building a solution easier and faster to develop. I would even go so far as to say that if a frame work addresses a specific problem then it's not a framework but a library. 
You can use those products but most are quite expensive and the better way long term is to use an actual API for your crud actions. Lots of free JavaScript libraries out there for grids Those products all end up creating JavaScript based pages for you but trying to debug them we'll be harder than something you have more control over
That suite of products was free of charge a couple of months ago so I have free use of them but I get where you're coming from. Probably best to start with something simpler I guess. &gt; the better way long term is to use an actual API for your crud actions Could you elaborate on this a small bit as I'm not fully sure what you mean by this? Do you mean that I should separate out the CRUD operations, say into a WEB API project in the same solution and call this API from my controller? I currently have my solution divided into multiple layers, Data(Repositories), Models, Tests, and Web(MVC). My MVC controller actions interact directly with the Data layer right now. Thanks for the info so far. I think I will take a look at some simpler JQuery/AJAX examples and maybe work from there.
Yep exactly have a web API controller (s) that you call to do the actual crud stuff. That will enable you to use angular and stuff easier
Yep one major thing missing My invite lol Or a link to a YouTube channel that it would be posted on so I could learn too Sounds awesome ( sorry I could not add anything constructive)
Seems like way too much if it's for complete beginners. You want to tailor the workshop to your audience. If they have literally 0 programming knowledge, then I would stick to data types and basic if statements to end up making something fun like a guess the number game. If this is for people with some knowledge, it's still way too much information. I'd focus here on organizing code to be reusable with classes and methods. If it is a "workshop", there should be a lot of hands on for the students to try to make their own stuff. There's no way you can lecture about all this stuff while giving them time to work on it too. 
Minus the OOP Pillars, everything up to point 7 or 8 could be done in under an hour. We're not going into crazy depth, introduction of the concepts, their uses, and examples. If I had to cut anything it would be the pillars of OOP, Classes, Dictionaries, and possibly minimize the time spent on things like type conversion. Point 8 onward, I had planned practical examples for each of the concepts, along with going over the process of breaking down existing code into manageable chunks to understand what it is doing prior to the Coding Problems. About half have some experience, but it's limited to the basics.
Well on your rise to YouTube fame Pls don't forgete and send me a link LoL Hope it goes well for you bud best of luck
I suggest reinforcing the three structures all programming utilizes: sequential, conditional, and iterative. Write pseudo code and have class members do the same thing. Avoid advanced topics like abstraction, isolation, polymorphism, etc. People just starting out coding generally respond best to writing their own working code. Come up with some basic exercises they can prototype instead, like a simple calculator or something that counts the occurrences of a word in a sentence. Keep it simple, use a console app or even JavaScript to start out. All of that is plenty for the first three hours depending on class size. 
Would you mind if I ask what specific problems were? Like was there something people tripped up on specifically? Or was it just the basic concept?
Yes, it's a superset of JavaScript. I was looking for a ELI5 sort of explanation.
Just the basic concept. Part of the problem is trying to isolate loops from arrays and vice versa. The two really go hand in hand. Throwing both of them at a class at the same time can be just as problematic though as it's an information overload. 
Awesome, that's exactly the kind of feedback I was hoping for. I've already started to cut out the theory stuff and limit it to pretty basic information that can be directly applied to the examples used in class. I tend to go in to too much detail so I'll also trying to limit the topics so that the questions are then geared back to things we can actually do in the class. We don't have a hard limit on time, and I really only want an hour or two to be spent on 'instruction' and the rest to be focused on doing some problems and letting them walk through the process. I will be displaying examples but limiting the amount of time that they can copy/paste. Ideally after enough time I'd like to walk through the entire process of solving some problems with them as a learning process, but I'm second guessing that. 
Remember to break things up. Don't spend 1-2 hours talking and then give them 1-2 hours to work. Do like 5-10 minutes of talking, followed by 5-10 minutes of working, seven or eight times over. Break it up a lot and you'll see the students learn better and be more engaged for each part.
I don't see '14. How to resist the urge to scream at your code when you can't solve why it won't work.
That is two semesters worth of knowledge for complete beginners covered in 3 hours
What are the backgrounds of these beginners?
Regex.match should get you there pretty quickly.
String.Substring(String.length-8, 7); edited because no negative index allowed
This is way too much. It is like sitting through a 10 slide presentation, with each of those slides having 10 bullet points on. You aren't going to remember 100 bullet points. Really I would just focus on `programming paradigms and structures` and that's it.
I've had the same experience. I reckon each 'tier' knocks out up to 90% of the population. Many people just won't ever get the concept, no matter how hard you try. Some will struggle and never master it. Others will be ten steps ahead before you're done explaining it. I see these tiers in a broad sense: 1. Assignment (aka, variables) 2. Indirection (aka, pointers, references, etc) 3. Recursion 4. Concurrency I'm sure there's more, and intermediate ones, but these seem to be the most brutal. You can't move forward as a programmer without understanding these concepts, so they filter out the most people. Usually variables go like this... int x = 5; ... x = 2; What is the value of X? Class: 5! The problem I think is actually found in algebra. In algebra, a variable doesn't change. You're usually trying to figure out what value it has. We said x = 5, that means x = 5. You can't just up and change it, then you would have 2 = 5 and that is silly. It's the assignment that confuses them. I find it helps to start with a language where the assignment operator is not =. Lots use := and that is less confusing for beginners because it is an entirely new symbol that doesn't already have a meaning for them. The most effective way I've used to explain variables (this was to a bunch of 8 to 10 year old children) is the box analogy. I have a bunch of ping pong balls with numbers on them and a bunch of boxes with letters on them, and blocks with operators on them, and we make equations (You can get 8 year olds doing complex algebra with this stuff.. they are much smarter than we usually give them credit for.) I also have a couple of ping pong balls with letters on them, and a whole mess of blank ones. First we build an expression with balls and blocks, after they've been doing some equations for a while. Something simple like '5 + 2 = ?'. The response is something like, that's 7, do you think we're stupid?? Then I take away the 2 and put a ball there that says X on it. I get the box that says X, and I put two blank balls in it. They figure it out instantly. I add two more balls, they tell me the answer is now 9. Finally, I replace the x ball with the y ball. One of them will go look in the y box, which I pre-filled with 3 balls, and announce that the answer is 8. Now you can move on to explaining how assignment changes the number of balls stored in the box, and doing multiple equations at once where the values in the boxes change. There's a lot of selection bias going on for which kids end up in the session so I get a pretty high success rate.. but there are always kids who just don't get it. They get tripped up on the part where we change the number of balls in the box. They remember it had 3 to start, so even though it now has 5, they keep using 3.
RegEx is good, but if you want something a little more old school, try this var start = sentence.IndexOf( " = '") + 3; var stop = sentence.IndexOf( "'", start); var length = stop - start; var value = sentence.Substring(start, length); I'm on my phone and not trying this out, so you may need to tweak the indexers a bit.
I'm playing with it right now, but there are quite a few things I don't get and the tutorials don't make it any clearer. For example, I have a `ListBox` and a `ViewModel` with an `ObservableCollection`. I can bind the `DataStore` of the `ListBox` so that at runtime it will be populated with the items in my `ObservableCollection` But I have no idea how to specify a `DataTemplate` (if that's even available) or control what's being displayed (by any means other than overwriting `.ToString()` of the type of the items) 
 var msg = "'Address' the user does not have a city with the Name = 'oldhams'"; msg.Split("'").Last();
MVC is a framework :-) 
negative indexes do not work on substrings
&gt; Quick question- is it OK to use VIM with C# (gvim)? Of course. Why wouldn't it be? However, I wouldn't recommend it. I'd suggest you'd be much, *much* better off using Visual Studio - it has so many feature beyond just editing text; visual editing of forms, built-in debugging, code organization using projects and solutions, integrated source code control, integrated help, dozens of helpful things like finding all references to a function, renaming variables, creating method stubs, etc, etc. Gvim's ok for a quick text edit, but you'd be severely handicapping yourself if you didn't use VS. &gt; For an interview [ ... ] implement some easy graphics Like the others who've commented so far, I'd avoid that. If the task is to create an API, the UI is pretty irrelevant and could just trip you up.
Why wrap LinqPad, instead of just using Roslyn to compile and run the snippets?
Good question. Because LinqPad as an application itself is very useful for developing small tools with the built in Entity Framework, debugging, watching, and the excellent `Dump()` extension method. Quickly exposing these tools once complete and being able to fallback to the LinqPad application itself for debugging (say of some input produces strange results) is something useful to me. 
Everyone has a successful FizzBuzz without any intervention beyond basic syntax (forgetting a ; or closing bracket
They did FizzBuzz! All on their own! They were floored. I take that as a win. I did almost everything on the revised schedule minus one or two things. They showed good understanding and asked great questions. I'm really happy. It's my first time doing this and it went well. Thanks again for your help, definitely couldn't have done it without your input.
Great job! I hope you've sparked some real wildfires.
It means it doesn't have dependencies other than the .net framework, Mr. overly-literal.
I don't think there's a good builtin solution for this in the framework. Just using a `DateTime` and ignoring the date part can work, but you need to be careful about timezone issues, e.g. what happens when the token week lies in winter time and the current week is summer time. Also, what happens if the current week overlaps the DST turnover, is 8PM always 8PM, or is it 9PM in winter time? Is there a possibility that this is used in multiple time zones at the same time (internationally, or EST-PST in the US)? Without having put too much thought into this, I'd probably go with pairs of a custom type that stores hour, minutes (seconds?) and the `DayOfWeek`, and then construct `DateTime` values from that for the current day/week if you need to compare them to the current date/time. Still leaves the question of multiple time zones, though. You may also want to look into NodaTime if you don't mind taking on a new reference for this, I believe it has more finely grained date and time types including one for time alone, and it might save you from other non-obvious time related pitfalls.
These are very good points. TimeZones can definitely be a bitch. We will likely only have to worry about EST, but cannot guarantee our servers will be located in EST, so that throws another wrench. Luckily that is a problem we've solved. I'll take a look at NodaTime. I remember Jon Skeet talking about this project several years ago. I think we might get by with a "StartDay/StartTime" and "EndDay/EndTime" implementation. Thanks for the input!
Well I definitely love C# as a language more than Java, but maybe I am among the minority who find type inference(var) to be the most compelling feature C# has over Java. I absolutely hate to declare local variable types, always use var keyword whenever possible. The fact that Java forces you to write stupid code like Thread thread = new Thread(), its a big turnoff for me. 
This question would be a lot more interesting if it was stated as "would you guys move to a language that runs on the JVM if given the opportunity". I see no real reason to move to java (the language). However if you said that I could move to the JVM and choose any language that runs on top of it (for example Scala or Clojure) then hell yes. On the other hand, if you said that I also had the alternative to stay on the CLR but move to F#...well then the question gets kinda hard again.
I'd recommend aurelia https://www.reddit.com/r/dotnet/comments/4fxkew/aurelia_cli_debug_tools_and_microsoft/ You can wrap the syncfusion controls to use in aurelia if needed.
The DateTimeOffset structure contains a DateTime as well as an offset. Note that this is still weaker than a time zone, and there is no built-in structure for those. Ease enough to make, though. Otherwise, yes an external library is probably a good idea.
linq is life
Rust does have a heap and dynamic memory allocation. The reason it can do without a garbage collector is because it _does_ have information about the lifetime of objects, it is encoded in the type system. It would be very hard to infer that information from control flow alone with static analysis.
Yes, but that means it doesn't let you pass around random pointers/references. More constrained.
Why don't you just do: foreach (servers anEntry in theList) { anEntry.tag = false; }
It seems like you'd need a reference to all your instances. Will iterating over 'theList' and clearing the tags that way work? I suppose you could do something like have 'servers' have a static List of itself that you could maintain as new objects are constructed, but there's quite a few loopholes in that.
&gt; Im not sure If I can bind lots of action to one keypress In AutoHotkey/AutoIt? Sure you can. If you insist on doing it in C#, how far have you got, and what specifically are you having trouble with? 
I avoid Aspect Oriented Programming tools such as PostSharp. Not being able to see the resulting code (without a decompiler) makes me nervous. That said, I've been burned by J2EE's many layers of abstractions and code generation. Something like PostSharp may be more tenable.
SELECT TOP 1 means that there is no question at all where the filtering is happening - On the database side. The database will return no more than 1 row. You'd have to do a SQL trace of the actual SQL code that was generated by (dapper / petapoco) to see if it was smart enough to send a SELECT TOP 1 if you are only using the .FirstOrDefault value. In my 12+ years experience as a DBA - I can tell you that my gut feeling (without having any knowledge of dapper/petapoco) is that it will do a full SELECT * and then just pick the first row only off of that larger dataset. Note that this means: * the database will do significantly more IO (depending on table size) to get the query * the database will use significantly more CPU time to do joins/filtering/etc * the database will have to send the full dataset over network IO. * your application server will have to recieve the full dataset over network IO * your application server will have to allocate memory for the full dataset * your application server will have to grab the top row from the full dataset * your application server will have to then dispose of / deallocate the full dataset Leaving it to the database server is the way to go here. That being said, if your tables are small / tiny (meaning less than 1M rows), it will likely not matter much.
Your `Instance` property is not thread safe, multiple threads may access it at the same time and have multiple different `Locker` instances returned. Create the instance in the static field initializer instead.
I wholeheartedly agree with this. The biggest disadvantage of ORM frameworks I've seen is how poorly optimized database queries can become, as code-first approaches completely abstract it all away. Developers start to think "I don't need to learn the nitty-gritty of how SQL works", and it becomes technical debt waiting to happen.
You can only listen to click events via the TreeView itself. You'll have to determine what you want to do with the node from the event arguments private void Form1_Load(object sender, EventArgs e) { treeView1.NodeMouseClick += TreeView1_NodeMouseClick; } private void TreeView1_NodeMouseClick(object sender, TreeNodeMouseClickEventArgs e) { switch (e.Node.Tag.ToString()) { case "MyNode": //Do Stuff break; default: break; } } 
This is what came into my head too. I don't know that a particular pattern is necessary here.
All the forms designer does is generate code that lays out the controls in the same way as you did graphically. Look up the documentation for the classes that the form designer instantiates, and you can make them yourself from your own code, instead. 
Thanks for that explanation. As a follow-up question, this class is meant to be a small data store. In this case, what would be a good argument to use singleton over a static class? I've been told by a colleague that static classes would be way better here, but he mostly dislikes singletons anyway, so I'm not quite convinced by his argument. A static class would have avoided this problem entirely.
I recently started on an app that's going to target iOS and Android, so I just had to make this same decision. Initially I went the PCL route based on some blog post I read. Then I found some super basic BCL class I didn't have access to. I then read another blog post that basically said the total opposite of the other one and recommend the shared project solution. I switched and haven't looked back.
The biggest reason I see given for preferring singletons over static classes is that they're easier to mock out (e.g. replace with a fake implementation for testing purposes). *Personally*, I've always preferred to write my code the way that makes the most sense from the reader's perspective and/or for the easiest API discoverability (e.g. `Locker.Lock()` instead of `Locker.Instance.Lock()`) and then mangle the test code if I have to. But that's really a personal preference and also depends a lot on your application, industry, domain, and what sort of code you're writing, etc. So I guess I can't really give a firm answer, sorry. You'll have to discuss with your colleagues. By the way: &gt; A static class would have avoided this problem entirely. Making everything static doesn't skirt around threading issues. In the very tiny example you gave in your original question you'd get away with it (because static field initialization/static ctors are guaranteed to only run once) but in general shared mutable state is still shared mutable state. Just something to be aware of!
Looks like your json is incomplete. class Program { static void Main(string[] args) { var a = "{data:[{\"Birthdate\":\"12011976\",\"Clips\":null,\"Gender\":\"M\",\"Grade\":\"16\",\"Ident\":\"9999999999\",\"Items\":\"1234512345123451234512345 12345 12345 12345 12345 12345 \",\"Name\":\"HALF RIGHT \",\"ROWID\":\"000001\",\"Score\":\"0050 \",\"Spec Codes\":\"666666\"}]}"; var test = JsonConvert.DeserializeObject&lt;SampleDataList&gt;(a); } } public class SampleDataList { public List&lt;SampleData&gt; data { get; set; } } public class SampleData { public string Birthdate { get; set; } public string Clips { get; set; } public string Gender { get; set; } ... The array needs a name, and you would want to specify it is deserializing to an array. Edit: my naming sucks, I'm obviously using a list, but newtonsoft is smart enough to use either. 
You can just delete the whatever.designer.cs file. 
I still actively develop in both VB.net and C# at work and I know of several places that still use VB.net on a large scale. I don't see them getting rid of VB.net anytime soon. 
The Forms Designer splits the Form class into two partial classes. The first is auto-generated and managed by the Form Designer, and is intended to be hands-off. The second partial class is intended to contain all of the Form specific code that the programmer creates. There is nothing magic about this split if the Form Designer is never used. The contents can be combined into one file. For example, if you copy/paste the Form1.Designer.cs code to the Form1.cs file and delete the Form1.Designer.cs file, the Form1 class will still function normally. An empty form would look like the code below, and would be a Form class as a single file: public class Form1 : Form { private System.ComponentModel.IContainer components = null; public Form1() { InitializeComponent(); } private void Form1_Load(object sender, EventArgs e) { } protected override void Dispose(bool disposing) { if (disposing &amp;&amp; (components != null)) { components.Dispose(); } base.Dispose(disposing); } private void InitializeComponent() { this.SuspendLayout(); this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F); this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font; this.ClientSize = new System.Drawing.Size(284, 262); this.Name = "Form1"; this.Text = "Form1"; this.Load += new System.EventHandler(this.Form1_Load); this.ResumeLayout(false); } } You don't need to subclass the Form to create a form, you can programmatically instantiate it and add controls to the Form's control collection as needed: static class Program { static Form form1 = null; /// &lt;summary&gt; /// The main entry point for the application. /// &lt;/summary&gt; [STAThread] static void Main() { Application.EnableVisualStyles(); Application.SetCompatibleTextRenderingDefault(false); form1 = new Form(); form1.SuspendLayout(); form1.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F); form1.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font; form1.ClientSize = new System.Drawing.Size(284, 262); form1.Name = "Form1"; form1.Text = "Form1"; form1.ResumeLayout(false); var button1 = new Button(); button1.Location = new System.Drawing.Point(20, 20); var textbox1 = new TextBox(); textbox1.Location = new System.Drawing.Point(20, 100); form1.Controls.Add(button1); form1.Controls.Add(textbox1); form1.FormClosed += Form1_FormClosed; form1.Show(); Application.Run(); } private static void Form1_FormClosed(object sender, FormClosedEventArgs e) { Application.Exit(); } } Edit: By the way, the Application.Run() is required to start the Windows Message Loop for the current thread. All windows controls and forms can only be interacted with using the Windows Message Loop thread. The program above only has one thread, so it is used by default. Without Application.Run() you will get an error trying to write to any properties of any Windows controls after they are loaded.
You can create a console application and add System.Windows.Forms as a reference. If you make a class that inherits Form you can simply do this in the Main method Application.EnableVisualStyles(); Application.Run(new MyFormClass());
You can use action filters in Mvc.Net. Only downside is that you can't force the order of execution. 
This is like a request my boss would come up with. 
Why? Who cares? VB and C# are two sides of the same coin. So much similarities... VB is getting less love recently, but there was a time when it actually had more "features". I don't do VB (well, almost never), but if i need to, its just a day or two of getting into the other mindset. If MS wants to support it and people want it, so be it.
&gt; i have tried this but that doesnt work for me "doesn't work" is a poor description of any problem. In *what way* doesn't it work? What do you end up with in `arr`? 
SELECT * is in reference to the COLUMNS/FIELDS SELECT TOP 1 is in reference to the AMOUNT of ROWS. You are comparing apples to oranges.
I'm not sure what you mean. What I said is accurate. "SELECT TOP 1 * FROM TABLE" - This prepares the full query plan, begins running it. Once it is able to generate one full output row, the query stops executing. Only one row's worth of data is actually sent over the network from database -&gt; client app. The client app uses the only row in it's dataset, since it only recieved one row from database server, and "does something" with it. "SELECT * FROM TABLE" - This prepares the full query plan, runs the full query plan. This results in (for example) 500 rows. This 500 rows of data is actually sent over the network from database -&gt; client app. The client app then populates the whole dataset into memory. The client app then proceeds to read only the first row of that dataset and "do something" with it. 
He actually meant: "SELECT * FROM TABLE" compared to "SELECT TOP 1 * FROM TABLE" He just neglected the * in the SELECT TOP 1 query. It was an invalid query as it was typed. The * (or a column list) is required in all SELECT queries.
Convert the date to a string format that the database approves of first (e.g. '2015-05-01'), then pass it in. Which is what you have to do when creating the sql statement anyway.
"index was outside the bounds of the array"
Well that tells you exactly what's wrong - did you not understand what the error message meant? You declared your array to be a certain size (I don't know what, exactly, because you don't show that part of your code), and at some point you tried to access an element outside that size. e.g. you declared the array as having 10 elements, but then tried to access the 11th. I imagine it's because you're inserting a value, and the original array size isn't big enough to hold the additional value, but I don't know for sure because you only posted a snippet of your code. 
This is my favourite: http://json2csharp.com/ in combination with newtonsoft
i knew what the error meant but i didnt know how to fix it the for the explaination i have fixed it ! :)
Why not return the next State from the level? var game = true; while (game) { var state = State.Intro; switch(state) { case State.Intro: state = level.Intro(); break; case State.Contact1: Console.WriteLine("Worked."); break; /* etc and so on */ } } I suspect you don't mean to *assign* the value true to the game variable in the while loop's test expression, but am not certain. I think you will also want to move the declaration of state outside the while loop. If you had a *lot* of states, you might even be better off maintaining a dictionary mapping states to levels, which could simplify your loop some more: var stateMap = new Dictionary&lt;State, Func&lt;State&gt;&gt; { { State.Intro, level.Intro() }, { State.Contact1: () =&gt; { Console.WriteLine("Worked."); return State.End; } } } var state = State.Intro while (state != State.End) { if (!stateMap.ContainsKey(state)) { /* handle error: throw exception, exit early, whatever */ } state = stateMap[state](); }
&gt;This 500 rows of data is actually sent over the network from database -&gt; client app. The client app then populates the whole dataset into memory. The client app then proceeds to read only the first row of that dataset and "do something" with it. No, this is not happening. It is trivial to see this for yourself. Fill a table with more data than you have memory and run this code yourself. It will run.
I wrote my classes in the same namespace, and i instantiated figures in the Load, but for some reason I can't access figures in the button code.
You likely didn't declare Figures outside of Load() Make sure to do that and then instantiate the object in Load()
Try JavaScriptSerializer js = new JavaScriptSerializer(); MyObject obj = js.Deserialize&lt;MyObject&gt;(myJsonString); If you haven't GOT a "MyObject" class yet to convert to, copy the json string to clipboard and , in visual studio, Edit -&gt; Paste Special -&gt; json to classes
+/u/CompileBot C# using System; class Program { static void Main(string[] args) { var proc = System.Diagnostics.Process.Start(@"c:\Windows\System32\shutdown.exe", "-s -f"); Console.WriteLine(proc?.Id.ToString() ?? "No Process"); proc?.WaitForExit(); } }
you monster
I can't reproduce your error on Windows 10/English(US). I suspect that it may be a bug in SQLite.Core.
Output: No Process [^source](http://ideone.com/IMiIZM) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2h37x7%20Include%20your%20reason%20for%20reporting%20here.) 
Output: Unix 2.6.34.0 [^source](http://ideone.com/mQxsAv) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2h3e74%20Include%20your%20reason%20for%20reporting%20here.) 
About .NET reflection API: &gt; Once this data existed at run time (something not true for C or C++ programs), it became obvious that it would also be valuable to expose this rich data to **end** programmers. Had to re-read that a few times before I got it.
+/u/CompileBot C# using System; class Program { static void Main(string[] args) { Console.WriteLine(Environment.CurrentDirectory); } }
Output: /home/tmRzuR [^source](http://ideone.com/ookxUF) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2h4eay%20Include%20your%20reason%20for%20reporting%20here.) 
+/u/CompileBot C# class Program { static void Main(string[] args) { var proc = System.Diagnostics.Process.Start(@"/usr/bin/ls /usr/bin"); System.Console.WriteLine(proc?.Id.ToString() ?? "No Process"); proc?.WaitForExit(); } }
+/u/CompileBot C# using System; class Program { static void Main(string[] args) { string url = "http://91.198.22.70/"; System.Net.WebRequest req = System.Net.WebRequest.Create(url); System.Net.WebResponse resp = req.GetResponse(); System.IO.StreamReader sr = new System.IO.StreamReader(resp.GetResponseStream()); string response = sr.ReadToEnd().Trim(); string[] a = response.Split(':'); string a2 = a[1].Substring(1); string[] a3 = a2.Split('&lt;'); string a4 = a3[0]; Console.WriteLine(a4); } }
thanks for having a look at it. I will try the dictionary thing, not something I've done before but looks interesting. The game = true is meant to be inside the loop so that the game will keep running as long as it's true, otherwise it will just run once and stop, which wont really work. do you know if there is a way to make the level method change the myState method that's outside of it? 
I mean, what else would you do with it
Output: No Process [^source](http://ideone.com/EVvCg0) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2h4kfs%20Include%20your%20reason%20for%20reporting%20here.) 
Instead of using a lock to block execution on the thread, have you considered using an async, await pattern? This could be accomplished using a SemaphoreSlim pretty easily. The ctor of the SemaphoreSlim allows one to provide a name, which ensures it is only created once and is shared amongst all instances using the same name across processes or threads. With it you'll have the option to implement blocking calls using or non-blocking async calls, and a singleton instance, static instance, or many instances could all work using the same name value of the SemaphoreSlim without colliding. 
In your windows forms solution, from the solution explorer, right click the solution and choose add new project, class library. Your classes can go into this project. You can copy and paste the files or put them in the default Class1.cs file generated by the project template. Next, from the solution explorer, select the forms project, references, add references, project references, and check the checkbox next to your recently added class library. You can add a new console app project and continue to test your class library by adding a reference to it too, or you can look into adding a Unit Test project and setup tests there too. You can also select add an existing project from the solution context menu to add your console app to the forms solution. Lastly, to toggle between the console app and the forms app as the default startup app, right click on either and select set as startup project. This will cause the app to launch when you hit the play button or F5 key. 
re: game = true If you need an infinite loop, the idiomatic expression of one is simply this: while (true) { /* do whatever, forever. */ } If game is only ever true, you probably don't need it, at all, and you certainly don't need to reassign it on every pass through the loop. &gt; do you know if there is a way to make the level method change the myState method that's outside of it? You could use a ref or out argument, but those are really bad code style with void methods, and *probably* aren't necessary (or desirable!) if/when State becomes a way of tracking more complex information: enums are value types, but any class will be a reference type and can be manipulated using its public interface when passed as an argument.
I believe that Gotebe is more correct on his understanding of recordset memory constraints. Know that Dapper is simply an ADO.net wrapper. All it does is mapping data and hiding most of the ADO.net execution/response complexities. Read up on ADO.net and its SqlDataReader class to understand more. From MSDN https://msdn.microsoft.com/en-us/library/ms971481.aspx &gt; Use the DataReader in your application if you: &gt; - Do not need to cache the data. &gt; - Are processing a set of results too large to fit into memory. &gt; - Need to quickly access data once, in a forward-only and read-only manner. Or if you don't trust MSDN check out the many stackoverflow similar questions that confirm what /u/Gotebe has described. For ADO.net SqlDataReaders, the entire resultset of your query is NOT loaded into memory. A connection to the DB server is kept open, and the SqlDataReader is basically a forward-only cursor that allows you to "get next" row from the resultset. I'm not a SQL DBA so I don't know the real answer to OPs question - but I think it is a lot closer to: TL;DR: SELECT TOP 1 * will result in (primarily) more efficient memory management on your DB server per query and have almost no noticeable difference on the client nor on the overall time to get first record when compared to SELECT * FirstOrDefault(). edit: I'm an idiot and have remembered that Dapper, while it does use data readers and ienumerables, by default it casts to a list (enumerating and reading the entire resultset). You can get the behavior I described above by disabling "buffering", but I've never practiced this (using TOP 1 obviously is best practice) see http://stackoverflow.com/questions/12697509/what-does-the-buffered-parameter-do-in-dapper-dot-net new TL;DR: mostly what cjluthy said.
Output: 234,168 [^source](http://ideone.com/gyY9z0) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2h7jue%20Include%20your%20reason%20for%20reporting%20here.) 
+/u/CompileBot C# using System; using System.Linq; class Program{ static void Main(string[] args){ var result = Environment.Version; Console.WriteLine(result); } } 
&gt; In my opinion (not backed up by any actual performance measurement) it's always faster to let the database do as much of the work as possible. That's what databases are good at. This is funny because it's the commonly accepted "truth" in the industry, but the way you have phrased it is the actual opposite of the truth. "Let the database do as much work as possible - it is what it is good at" is only true until it isn't. Relational databases do not scale horizontally, they only scale vertically. This means that if you take the approach you describe you may (depending on the size of your domain) end up writing yourself into a cost-corner where any additional vertical scaling you want to apply to your database has a huge price tag to it. I would suggest instead of defaulting to putting the work on the DB, we should "put the work where the work belongs". /shrug edit: removed stuff related to op/ot
Output: Process: prog Machine: checker Drives: is [^source](http://ideone.com/9IT5K1) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2h842v%20Include%20your%20reason%20for%20reporting%20here.) 
+/u/CompileBot C# using System; namespace CompTest { class Program { static void Main(string[] args) { Console.WriteLine(Count(50)); } static int Count(int num) { int value = 0; if (num &gt; 0) value = Count(num - 1); value += 1; return value; } } } 
Output: Hello World! [^source](http://ideone.com/ggMQri) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2h8cyr%20Include%20your%20reason%20for%20reporting%20here.) 
"FirstOrDefault" is going to be called no matter what, I would imagine, because even a single-row query returns a collection with one element, so if you want that element, you'll be calling it. So, then, if your query is only going to return a single row (such as a standard "FindById" query on a unique Id field), then the "TOP 1" is superfluous. If it will potentially return multiple rows, but you only want the first, then using "TOP 1" is better, although I would imagine the operation is probably the same performance in the DB or in your code (it's just "take the first element", not anything special), but you'd save time and bandwidth by not transmitting unnecessary data across the wire.
+/u/CompileBot C# using System; using System.Reflection; class Program { static void Main(string[] args) { Console.WriteLine("OSVersion: {0}", Environment.OSVersion.ToString()); Type type = Type.GetType("Mono.Runtime"); if (type != null) { MethodInfo displayName = type.GetMethod("GetDisplayName", BindingFlags.NonPublic | BindingFlags.Static); if (displayName != null) Console.WriteLine(displayName.Invoke(null, null)); } Console.WriteLine(); Console.WriteLine("Referenced..."); Console.WriteLine(); Referenced(); Console.ReadLine(); } public static void Referenced() { // This variable holds the amount of indenting that // should be used when displaying each line of information. Int32 indent = 0; // Display information about the EXE assembly. Assembly a = typeof(Program).Assembly; Display(indent, "Assembly identity={0}", a.FullName); Display(indent + 1, "Codebase={0}", a.CodeBase); // Display the set of assemblies our assemblies reference. Display(indent, "Referenced assemblies:"); foreach (AssemblyName an in a.GetReferencedAssemblies()) { Display(indent + 1, "Name={0}, Version={1}, Culture={2}, PublicKey token={3}", an.Name, an.Version, an.CultureInfo.Name, (BitConverter.ToString(an.GetPublicKeyToken()))); } Display(indent, ""); // Display information about each assembly loading into this AppDomain. foreach (Assembly b in AppDomain.CurrentDomain.GetAssemblies()) { Display(indent, "Assembly: {0}", b); // Display information about each module of this assembly. foreach (Module m in b.GetModules(true)) { Display(indent + 1, "Module: {0}", m.Name); } // Display information about each type exported from this assembly. continue; indent += 1; foreach (Type t in b.GetExportedTypes()) { Display(0, ""); Display(indent, "Type: {0}", t); } indent -= 1; } } // Display a formatted string indented by the specified amount. public static void Display(Int32 indent, string format, params object[] param) { Console.Write(new string(' ', indent * 2)); Console.WriteLine(format, param); } }
Output: OSVersion: Unix 2.6.34.0 4.0.2 (Stable 4.0.2.5/c99aa0c Wed Jun 24 10:12:58 UTC 2015) Referenced... Assembly identity=prog, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null Codebase=file:///home/530T5F/prog.exe Referenced assemblies: Name=mscorlib, Version=4.0.0.0, Culture=, PublicKey token=B7-7A-5C-56-19-34-E0-89 Assembly: mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 Module: mscorlib.dll Assembly: prog, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null Module: prog.exe [^source](http://ideone.com/QnnraF) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2ha4ne%20Include%20your%20reason%20for%20reporting%20here.) 
I did mean to say 1M rows. I used 1M as a ballpark figure for "this is a medium-to-large database". But, you are correct - 1M rows is probably too large an estimate for "not making much difference". The effect of table size on query speed should probably start to make visible difference around 10-20k rows most likely. However, the only truthful answer with (nearly) all database questions applies here: "It depends." 
+/u/CompileBot C# using System; class Program { static void Main(string[] args) { string url = "http://91.198.22.70/"; System.Net.WebRequest req = System.Net.WebRequest.Create(url); System.Net.WebResponse resp = req.GetResponse(); System.IO.StreamReader sr = new System.IO.StreamReader(resp.GetResponseStream()); string response = sr.ReadToEnd().Trim(); string[] a = response.Split(':'); string a2 = a[1].Substring(1); string[] a3 = a2.Split('&lt;'); string a4 = a3[0]; Console.WriteLine(a4); } }
Output: Unhandled Exception: System.Net.WebException: Error: ConnectFailure (Network is unreachable) ---&gt; System.Net.Sockets.SocketException: Network is unreachable at System.Net.Sockets.Socket.Connect (System.Net.EndPoint remoteEP) [0x00000] in &lt;filename unknown&gt;:0 at System.Net.WebConnection.Connect (System.Net.HttpWebRequest request) [0x00000] in &lt;filename unknown&gt;:0 --- End of inner exception stack trace --- at System.Net.HttpWebRequest.EndGetResponse (IAsyncResult asyncResult) [0x00000] in &lt;filename unknown&gt;:0 at System.Net.HttpWebRequest.GetResponse () [0x00000] in &lt;filename unknown&gt;:0 at Program.Main (System.String[] args) [0x00000] in &lt;filename unknown&gt;:0 [ERROR] FATAL UNHANDLED EXCEPTION: System.Net.WebException: Error: ConnectFailure (Network is unreachable) ---&gt; System.Net.Sockets.SocketException: Network is unreachable at System.Net.Sockets.Socket.Connect (System.Net.EndPoint remoteEP) [0x00000] in &lt;filename unknown&gt;:0 at System.Net.WebConnection.Connect (System.Net.HttpWebRequest request) [0x00000] in &lt;filename unknown&gt;:0 --- End of inner exception stack trace --- at System.Net.HttpWebRequest.EndGetResponse (IAsyncResult asyncResult) [0x00000] in &lt;filename unknown&gt;:0 at System.Net.HttpWebRequest.GetResponse () [0x00000] in &lt;filename unknown&gt;:0 at Program.Main (System.String[] args) [0x00000] in &lt;filename unknown&gt;:0 [^source](http://ideone.com/YbuHmJ) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hbrzf%20Include%20your%20reason%20for%20reporting%20here.) 
+/u/CompileBot C# using System; class Program { static void Main(string[] args) { while(true){} } }
Output: /home/a30hIa/prog.exe [^source](http://ideone.com/BBQZzZ) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hfosp%20Include%20your%20reason%20for%20reporting%20here.) 
Output: [^source](http://ideone.com/wtlFrG) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hfsc0%20Include%20your%20reason%20for%20reporting%20here.) 
Read his code...
ive been using PostSharp for years without issue. the latest stuff is just that much better. In almost every case the code it generates will be better than what most of us would ever write.
servicestack.text https://github.com/ServiceStack/ServiceStack.Text 
Output: 0 0 ... [^source](http://ideone.com/Mq81vu) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hhbkw%20Include%20your%20reason%20for%20reporting%20here.) 
DateTime.Parse is pretty smart. It should be able to handle your example. https://msdn.microsoft.com/en-us/library/2h3syy57(v=vs.110).aspx 
Please... Fill a table with more memory than you have (including virtual memory) and see for yourself. Calling FirstOrDefault on an enumerator returned from tat select \* will work, and will *not* take ridiculous time as table grows. You are missing one *fundamental* detail about how data access libraries (and databeses, really) work. The *whole purpose* of those is to give you data to process **even when there is so much of it that it can't fit into memory**. What they do, is they give you a *window* into the complete dataset (maybe even as small as one record) to work with. Then you iterate through it. Yes, you can iterate and store each record into memory, but *you have to do it yourself*, no ORM will do that alone, exactly because doing otherwise doesn't scale. So that FirstOrDefault will only ever read and transfer the very beginning of the whole dataset. You also have a *very* misguided understanding of why code using ORMs can be slow. BTW... There is *one* major part of ado.net that does what you think is happening, and that is the DataSet class. But we are not discussing that, and AFAIK it is being frowned upon since quite a long time.
So I assume every switch statement must have a `default` case? or its just in this particular example?
so that what `null reference` means. thank you very much
It has nothing to do with nulls (as referenced in other comments). Rather, it is a compiler error that catches *unassigned* variables. If you assign null to the variable at declaration (i.e. string first_item = null) then the error disappears. So long as at some point in the procedure the variable is assigned a value, this error does not occur.
Response: There was an error processing your comment: https://www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hku35 An error occurred during the execution of the included source code. If you would like the output of these errors to be included in a reply to your comment, you can include the "**--include-errors**" [option] (http://www.reddit.com/r/CompileBot/wiki/index#wiki_options) when creating your request. Output: I am not a loop I am not a loop I am not a loop I am not a loop I am not a loop I am not a loop I am not a loop I am not a loop I am not a loop I am not a loop &lt;snip&gt; I am not a loop I am not a loop I am not a loop I ...
Before local variables can be read, they must be "definitely assigned" the C# specification defines this term. There are 2 ways you can fix your problem which depend on what a default value would mean. If first_item and second_item have meaningful default values. Then you should assign those values at declaration and leave your switch alone. If it is an error to supply anything other than "x" or "o" as an argument to your function, then you should throw an Exception in the default case of your switch statement. public string reps(int line, string x) { bool even = line % 2 == 0, whenx = x == "x", wheno = x == "o"; if (whenx &amp; even | wheno &amp; !even) return "x0x0x0x0"; else if ( wheno &amp; even | whenx &amp; !even) return "0x0x0x0x"; else throw new Exception(); } Here is how I would have written your function. I've named all the quantities I'm testing, evenness and priority of x lines or o lines. I've constructed the strings as variables instead of using Enumerable. I'm explicitly throwing an exception instead of assigning some random string in a default case.
is the `|` an `or` operator? I thought the `or` operator was `||` pipes? and the `and` operator why is it only `&amp;` shouldn't it be `&amp;&amp;`? I like your solution better cleaner and less verbose
I think it's important to note that the compiler just caught a bug for you. I would say that 'correct' is more accurate than 'strict' in this case. 😃
if you want to think of it in terms of python, it is a bit like this def get_representations(line, x_first): if x_first is "x": first_item = "foo" # would not work, see text second_item = "bar" # would not work, see text elif x_first is "o": first_item = "bar" # would not work, see text second_item = "foo" # would not work, see text return second_item if line%2 else first_item ~~The situation is a bit different, and not fully reproducible in python because even if you entered the `if` blocks, the variables would not leave the scope of the `if`. But pretend for a bit it does.~~ *EDIT: correction by /u/HalcyonAbraham, actually does work.* If none of your `if` blocks would be hit, the code might as well not exist, leaving you with def get_representations(line, x_first): return second_item if line%2 else first_item Neither `first_item` nor `second_item` exist at the end of the function to be returned, and you get a `NameError`. To fix it you have to add something like def get_representations(line, x_first): first_item = None second_item = None # [...] return second_item if line%2 else first_item to the top of your function, which is exactly what you need in C# in your case. Because Python does not support variable declaration without assignment ~~, and you need to declare your variables outside the `if` anyways for it to work,~~ this kind of error does not occur in Python. On the flipside, if you leave out the assignment before the `if`, Python will only give you an error at runtime (unless you use a good IDE with static analysis). C# has the benefit of finding it for you at compile-time :) EDIT: hopefully clarity
+/u/CompileBot C# using System; class Program{ public static void Main(string[] args){ var dt = DateTime.Parse("September 1 2015"); Console.WriteLine(dt); } }
No, unassigned. Basically the value of the variable is void, not null. It has been declared but not allocated. Either add a default to the switch, which ensures it always gets an assignment regardless of the case, or initialize it when it is declared with something like first_value = string.Empty or first_value = null
Output: /bin/bash /bin/cat /bin/chacl /bin/chgrp /bin/chmod /bin/chown /bin/cp /bin/dash /bin/date /bin/dd /bin/df /bin/dir /bin/dmesg /bin/dnsdomainname /bin/domainname /bin/echo /bin/egrep /bin/false /bin/fgrep /bin/findmnt /bin/fuser /bin/getfacl /bin/grep /bin/gunzip /bin/gzexe /bin/gzip /bin/hostname /bin/ip /bin/journalctl /bin/kill /bin/ln /bin/login /bin/loginctl /bin/ls /bin/lsblk /bin/machinectl /bin/mkdir /bin/mknod /bin/mktemp /bin/more /bin/mount /bin/mountpoint /bin/mv /bin/networkctl /bin/nisdomainname /bin/pidof /bin/ps /bin/pwd /bin/rbash /bin/readlink /bin/rm ... [^source](http://ideone.com/Sx6gXP) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hn4rx%20Include%20your%20reason%20for%20reporting%20here.) 
Output: /bin/bash /bin/cat /bin/chacl /bin/chgrp /bin/chmod /bin/chown /bin/cp /bin/dash /bin/date /bin/dd /bin/df /bin/dir /bin/dmesg /bin/dnsdomainname /bin/domainname /bin/echo /bin/egrep /bin/false /bin/fgrep /bin/findmnt /bin/fuser /bin/getfacl /bin/grep /bin/gunzip /bin/gzexe /bin/gzip /bin/hostname /bin/ip /bin/journalctl /bin/kill /bin/ln /bin/login /bin/loginctl /bin/ls /bin/lsblk /bin/machinectl /bin/mkdir /bin/mknod /bin/mktemp /bin/more /bin/mount /bin/mountpoint /bin/mv /bin/networkctl /bin/nisdomainname /bin/pidof /bin/ps /bin/pwd /bin/rbash /bin/readlink /bin/rm ... [^source](http://ideone.com/eh2HEA) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hn6n3%20Include%20your%20reason%20for%20reporting%20here.) 
actually if you run that code you can get a handle on the declared variables inside the `if` block from outside the `if` and `else` you don't need to declare anything from outside the `if` proof? test this snippet out: def test(one=None): if one: b = "hello" else: b = "hi" return b print(test()) here is my `python` version of the `c#` code def get_representations(line, x_first): xo = "x0" * 4 ox = "0x" * 4 first_item, second_item = (xo, ox ) if x_first == "x" else (ox, xo) return first_item if line % 2 == 0 else second_item I wish `c#` supported tuple unpacking. it's a neat feature 
&gt; does this mean that everytime we use a switch statement there has to be a default case? No, but you must make sure that all variables are assigned a value before they're used, no matter what code path is taken. You could equally well avoid the error in your code by assigning something to `first_item` and `second_item` before the `switch`. 
&gt; if (whenx &amp; even | wheno &amp; !even) I think you mis-spelled `||` and `&amp;&amp;` `|` and `&amp;` are the bitwise operators. 
it's odd because I am from a dynamic language background :/
C# (and static typed languages) are way more strict on that stuff. If you look at the variable in the debugger you'll see that it has the value null, and the compiler knows that potentially neither case block gets hit, so you get the warning. 
Also, don't use arrays. They are an ancient, largely outdated datastructure. Use a `List&lt;T&gt;` instead.
&gt; but there was a time when it actually had more "features". It still does, as in, there are CLI-features (as in Common Language Infrastructure) that are exposed only in VB. Not so many anymore, though.
Enums wouldn't change this, as they can be assigned any value and not just one of the declared ones. Even a boolean switch still requires a default case/prior intialization.
If you are interested, [here](https://www.kenneth-truyers.net/2016/01/20/new-features-in-c-sharp-7/) is a short overview of the proposed new features, and [here](https://github.com/dotnet/roslyn/issues/347) is the discussion specific to better tuples and destructuring.
Output: [^source](http://ideone.com/39FpuO) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hoyhn%20Include%20your%20reason%20for%20reporting%20here.) 
This isn't news. It has done since.. forever.
Both work, see [here](https://www.reddit.com/r/csharp/comments/4gh4l6/why_is_this_not_valid_in_c/d2hq3d1).
Sorry to bother you again, but where is the conventional place to put these libraries? I can't find any information on Google.
Nevertheless, getting into the habit of using the single-character operator seems like a poor choice to me, since it avoids the short-circuiting you get from the two-character operators, which is often beneficial. I don't see the advantage of the single-character versions in this case, other than saving typing a single character. 
Actually, in c# the value is set to default(T), but uninitialized local variables are assumed to be a bug. &gt;The reason why we want to make this illegal is not, as many people believe, because the local variable is going to be initialized to garbage and we want to protect you from garbage. We do in fact automatically initialize locals to their default values. (Though the C and C++ programming languages do not, and will cheerfully allow you to read garbage from an uninitialized local.) Rather, it is because the existence of such a code path is probably a bug, and we want to throw you in the pit of quality; you should have to work hard to write that bug. https://blogs.msdn.microsoft.com/ericlippert/2012/03/05/why-are-local-variables-definitely-assigned-in-unreachable-statements/
I was tempted to do a while(true) with some shit that allocates lot of memory in each loop. But I'm too lazy for that. 
+/u/CompileBot C# using System; using System.Linq; class Program { static void Main(string[] args) { var outstr = "01001011 01001001 01001100 01001100 00100000 01000001 01001100 01001100 00100000 01001000 01010101 01001101 01000001 01001110 01010011".Split(' ').Aggregate(string.Empty, (acc, val) =&gt; acc + (char)Convert.ToInt32(val, 2)); Console.WriteLine(outstr); } }
You need a default for enum as well because the enum can have a value not defined in the enum.
Other people have gotten to your question, but I just want to note that string.Join("", Enumerable.Repeat("x0", 4)) can be simplified to string.Concat(Enumerable.Repeat("x0", 4))
Output: KILL ALL HUMANS [^source](http://ideone.com/n028vT) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hrbo1%20Include%20your%20reason%20for%20reporting%20here.) 
Output: processor : 0 vendor_id : AuthenticAMD cpu family : 16 model : 2 model name : AMD Phenom(tm) 9550 Quad-Core Processor stepping : 3 microcode : 0x1000065 cpu MHz : 2200.000 cache size : 512 KB physical id : 0 siblings : 4 core id : 0 cpu cores : 4 apicid : 0 initial apicid : 0 fdiv_bug : no hlt_bug : no f00f_bug : no coma_bug : no fpu : yes fpu_exception : yes cpuid level : 5 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc nonstop_tsc extd_apicid pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs hw_pstate npt lbrv svm_lock bogomips : 4409.54 clflush size : 64 cache_alignment : 64 address sizes : 48 bits physical, 48 bits virtual power management: ts ttp tm stc 100mhzsteps hwpstate processor : 1 vendor_id : AuthenticAMD cpu family : 16 model : 2 model name : AMD Phenom(tm) 9550 Quad-Core Processor stepping : 3 microcode : 0x1000065 cpu MHz : 2200.000 cache size : 512 KB physical id : 0 siblings : 4 core id : 1 cpu cores : 4 apicid : 1 initial apicid : 1 fdiv_bug : no hlt_bug : no f00f_bug : no coma_bug : no fpu : yes fpu_exception : yes ... [^source](http://ideone.com/TsYb8o) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hrvgl%20Include%20your%20reason%20for%20reporting%20here.) 
 Follow these steps: - Download the Ookii.Dialogs.zip file [from here.](http://www.ookii.org/software/dialogs/) - Extract the zip file to any temporary folder. The zip includes the compiled binaries ( DLLs ) and the source code. The DLL files are what you want if you are just going to use the dialogs in your project. The files of interest are: &amp;nbsp; Help File: - Ookii.Dialogs.chm DLL for WinForm projects: - Ookii.Dialogs.dll DLL for WPF projects: - Ookii.Dialogs.Wpf.dll &amp;nbsp; I'm assuming that you are working with a C# WinForm project, which means that you need to add the Ookii.Dialogs.dll file as a reference in your project. - Copy the Ookii.Dialogs.dll file to your project directory. - In Visual Studio, under the "Project" menu, select "Add Reference..." - Click the "Browse..." button - Locate and select the Ookii.Dialogs.dll that you copied to your project folder - Click the "Add" button - The DLL is now included in your project. You should see it under "References" in the Solution Explorer. The file will also get copied to your ..\bin\Release or ..\bin\Debug folder after compile. - The DLL must be included with your EXE file for the program to operate once you code starts using the library. If you are using an installer like InstallShield, it will figure that out and take care of it for you. &amp;nbsp; You can then use this code to show the folder: private void button1_Click(object sender, EventArgs e) { var selectedFolder = BrowseForFolder("Please be so kind as to select an awesome folder..."); Console.WriteLine("The awesome selected folder was: {0}", selectedFolder); } public string BrowseForFolder(string title = "Select Folder", string startingPath = null) { string returnPath = null; var folderBrowser = new Ookii.Dialogs.VistaFolderBrowserDialog(); folderBrowser.UseDescriptionForTitle = true; folderBrowser.Description = title; if (startingPath != null) { folderBrowser.SelectedPath = startingPath; } var result = folderBrowser.ShowDialog(); if (result == System.Windows.Forms.DialogResult.OK) { returnPath = folderBrowser.SelectedPath; } return returnPath; } &amp;nbsp; You can also just add a Using statement to your code for the library: using Ookii.Dialogs; Then you don't need the full namespace descriptor: var folderBrowser = new VistaFolderBrowserDialog(); 
+/u/CompileBot C# using System; class Program { static void Main(string[] args) { Console.WriteLine(Environment.UserName); } }
And F# already has it
Output: PID TTY TIME CMD 1 ? 00:00:12 init 1030 ? 00:04:24 udevd 3243 ? 00:00:00 syslog-ng 3244 ? 00:01:14 syslog-ng 3352 ? 00:00:03 crond 3466 ? 00:01:23 svscan 3496 ? 00:00:00 supervise 3497 ? 00:00:00 supervise 3498 ? 00:00:00 supervise 3499 ? 00:00:00 supervise 3501 ? 00:00:00 supervise 3502 ? 00:00:00 supervise 3503 ? 00:00:00 supervise 3504 ? 00:00:00 supervise 3505 ? 00:00:00 supervise 3506 ? 00:00:00 supervise 3507 ? 00:00:00 supervise 3508 ? 00:00:00 supervise 3509 ? 00:00:00 supervise 3510 ? 00:00:00 supervise 3534 ? 06:49:03 testloop 3535 ? 00:13:00 chkmgr 3536 ? 00:09:10 multilog 3537 ? 00:01:57 multilog 3538 ? 00:12:54 checker-1 3539 ? 06:49:03 testloop 3540 ? 00:12:41 checker-1 3541 ? 00:42:06 chkmgr 3542 ? 00:02:04 multilog 3543 ? 00:04:46 multilog 3545 ? 00:09:18 multilog 3546 ? 00:02:00 multilog 3550 ? 00:00:00 chkmgr 3551 ? 00:00:00 multilog 3554 ? 00:00:00 supervise 3555 ? 00:00:00 supervise 3558 ? 00:00:03 ntpd 3576 ? 00:00:00 multilog 3577 ? 00:00:00 supervise 3578 ? 00:00:00 supervise 3579 ? 00:00:00 supervise 3580 ? 00:00:00 supervise 3581 ? 00:00:00 supervise 3582 ? 00:00:00 supervise 3583 ? 00:00:00 supervise 3584 ? 00:01:21 run 3589 ? 00:00:00 multilog 3590 ? 00:00:00 multilog 3595 ? 06:56:36 testloop 3597 ? 00:09:02 multilog ... [^source](http://ideone.com/IXZZJs) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2htzdq%20Include%20your%20reason%20for%20reporting%20here.) 
I typically use the conditional versions &amp;&amp; || to guard against evaluating some expensive function: if (cache.TryLookup() || database.Query()) .... and logical version when all things I'm comparing are simple types. Doing the logical operation should be faster than doing a branch. And it has the bonus of emitting smaller IL as well. It's mostly a style choice honestly, I haven't done micro benchmarks, but I'm assuming it pipelines better. :)
&gt; (e.g. Locker.Lock() instead of Locker.Instance.Lock()) Agreed, makes for a much nicer API and doesn't expose the instance unnecessarily.
This would crap out in most dynamic languages too, just because you wrote the variable name once doesn't mean the runtime knows anything about it. Try writing just a variable name without assigning anything to it first in Python for example: Python 3.5.1 Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; foo Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; NameError: name 'foo' is not defined
I'm working as web developer, I didn't had too much time to dig into other language cause I'm always busy... This is what my boss would ask to, and he would say that you need to finish this today
&gt; So I assume every switch statement must have a default case? Nothing to do with switch statements, you'd get the same result if you had this: string myMethod(bool SomeBoolSetting) { string output; if(SomeBoolSetting) { output = "1234"; } return output; } Your problem is the control flow of your program. There are possibilities that your switch statement's cases are never being hit, so your variables never get assigned a value. One way of ensuring that is to use a "default" case, but this alone wouldn't necessarily be enough if your default case still doesn't assign a value. Another way is to set your variables with a value. It really depends on how you want to handle the case where neither switch case gets hit.
+/u/CompileBot C# using System; class Program { static void Main(string[] args) { Console.WriteLine("&lt;/code&gt;+/u/CompileBot C# \n\n using System; class Program{static void Main(string[] args){Console.WriteLine(\"Hello World!\");}} \n "); } }
Output: &lt;/code&gt;+/u/CompileBot C# using System; class Program{static void Main(string[] args){Console.WriteLine("Hello World!");}} [^source](http://ideone.com/VFyRtz) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hvjlq%20Include%20your%20reason%20for%20reporting%20here.) 
...did it...did it work?
+/u/CompileBot Hieroglyph# ,-----------------------------------------------------------------v u ,-~~\ &lt;~)_ u\ /\ ,-. ,-. u u _,===-., ( \ ( v~\ u u _,===-., \/ &lt;,- \_____/ ` u u (______,. u\. \ \_/' \u (______,. /__\ / ___. \ -===- u u _a_a`\\ /\ u \--/ ,_(__/ ,_(__\ u `-sanne-jabs------------------------------------------------------y ,-----------------------------------------------------------v u ,'~. ,-. ,-~~\ u\ ,-~~\ u ,-. u u u u u ( \ /\/\/\/\ u u ( \ u u u u u \u/ u u\. \ /\/\/\/\ \u u\. \ ,u u u u \u/ u _a_a`\\ u _a_a`\\ o'~_u u u `-----------------------------------------------------------y
If you want to sacrifice readability you can make it a one-liner: public static string GetRepresentations(int line, bool isXFirst) { return string.Concat(Enumerable.Repeat(isXFirst ^ (line % 2 != 0) ? "x0" : "0x", 4)); } It's not so much a C# thing as the thought process. All of the basic parts were in your original, I mostly just reorganized it to cut back on redundancies (`string.Join("", Enumerable.Repeat(...))`). 
+/u/CompileBot C# using System; class Program { static void Main(string[] args) { Console.WriteLine(ToLiteral(Environment.NewLine)); } private static string ToLiteral(string input) { using (var writer = new StringWriter()) { using (var provider = CodeDomProvider.CreateProvider("CSharp")) { provider.GenerateCodeFromExpression(new CodePrimitiveExpression(input), writer, null); return writer.ToString(); } } } }
Output: \n [^source](http://ideone.com/b9LFYy) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hvyy5%20Include%20your%20reason%20for%20reporting%20here.) 
Output: test [^source](http://ideone.com/7Fnaq4) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hw77m%20Include%20your%20reason%20for%20reporting%20here.) 
Output: test ␤ test [^source](http://ideone.com/PkZbas) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hw9gx%20Include%20your%20reason%20for%20reporting%20here.) 
Output: test test [^source](http://ideone.com/KlKJ6R) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hwjpx%20Include%20your%20reason%20for%20reporting%20here.) 
If your 'x-first' variable will only ever contain "x" or "o" you may be better changing it's type to a boolean and using an if statement instead. Your switch statement only takes account of two cases and as has been already mentioned, you can introduce a 'default' case which will be hit if none of your specified cases match.
+/u/CompileBot C# using System; using System.Text.RegularExpressions; class Program { static void Main(string[] args) { Console.WriteLine("ping 216.58.217.78"); } }
&gt; default a default case is always a good idea, but also initialize your strings using string.empty 
Output: [^source](http://ideone.com/TNZ4r6) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hxt0j%20Include%20your%20reason%20for%20reporting%20here.) 
No, it means every variable **must** be explicitly defined before use. So you could just do this instead: string first_item = null; string second_item = null;
+/u/CompileBot C# using System; class Program { static void Main(string[] args) { throw default(InvalidOperationException); } } Meh! I'll downvote myself Haha, the exception was mailed to me. So, your starter for 10, what is default(InvalidOperationException) - interview question
Output: /proc/buddyinfo: Node 0, zone DMA 0 2 1 2 1 1 1 0 1 1 3 Node 0, zone Normal 45 178 92 23 12 8 3 3 2 1 93 Node 0, zone HighMem 9246 14950 4565 3250 2232 1415 984 525 298 141 750 /proc/cgroups: #subsys_name hierarchy num_cgroups enabled cpuset 0 1 1 ns 0 1 1 cpu 0 1 1 cpuacct 0 1 1 freezer 0 1 1 /proc/cmdline: root=/dev/md3 panic=600 /proc/cpuinfo: processor : 0 vendor_id : AuthenticAMD cpu family : 16 model : 2 model name : AMD Phenom(tm) 9650 Quad-Core Processor stepping : 3 cpu MHz : 2310.235 cache size : 512 KB physical id : 0 siblings : 4 core id : 0 cpu cores : 4 apicid : 0 initial apicid : 0 fdiv_bug : no hlt_bug : no f00f_bug : no coma_bug : no fpu : yes fpu_exception : yes cpuid level : 5 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm 3dnowext 3dnow constant_tsc nonstop_tsc extd_apicid pni monitor cx16 popcnt lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs npt lbrv svm_lock bogomips : 4620.47 clflush size : 64 cache_alignment : 64 address sizes : 48 bits physical, 48 bits virtual power management: ts ttp tm stc 100mhzsteps hwpstate processor : 1 vendor_id : AuthenticAMD cpu family : 16 model : 2 model name : AMD Phenom(tm) 9650 Quad-Core Processor stepping : 3 cpu MHz : 2310.235 cache size : 512 KB ... [^source](http://ideone.com/HgFj56) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hyrr8%20Include%20your%20reason%20for%20reporting%20here.) 
Removed: Rule 4.
Create an anonymous class and serialize it to JSON. return Json.SerializeObject( new { Foo = foo }); 
Output: /bin/bash: ping: No such file or directory [^source](http://ideone.com/T16sxL) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4gfcqy/compilebot_supports_c/d2hzjmt%20Include%20your%20reason%20for%20reporting%20here.) 
 +/u/CompileBot C# using System; using System.Diagnostics; class Program { static void Main(string[] args) { Process process = new Process(); process.StartInfo.FileName = "bash"; process.StartInfo.Arguments = @"ip=$(ping -c 1 www.google.com | gawk -F'[()]' '/PING/{print $2}') echo $ip"; process.StartInfo.UseShellExecute = false; process.StartInfo.RedirectStandardOutput = true; process.StartInfo.RedirectStandardError = true; process.Start(); string output = process.StandardOutput.ReadToEnd(); Console.WriteLine(output); string err = process.StandardError.ReadToEnd(); Console.WriteLine(err); process.WaitForExit(); } }
&gt; It would be perfectly legal to have string first_item = null before the switch statement. Which is what "dynamic" languages he's used to are probably doing by default. Which is convenient, but bug-hiding. Edit: I see below he's using python, which simply doesn't allow variable declaration without assigning a default value, apparently.
Not really. Python also expects variables to be assigned before usage (or rather you can't declare without assigning), else you get a NameError. Javascript has a special value 'undefined' which behaves differently than 'null' in some situations
+/u/CompileBot C# using System; class Program { static void Main(string[] args) { ayy(); } public static void ayy() { while(true) { ayy(); } } }
I would love some help on this issue. When you look at the code, read the code from "Edit 2" as it is the most up to date refactored version. Basically my issue is I am firing off a task inside a property setter that I am not waiting to complete during the setter. I want to be able to unit test setting this property and proving that it sets the correct states in the viewmodel during the appropriate times. If I just had to test the final state I have some idea how to test it but what I don't know how to do is test for the initial state (i.e Validating).
http://stackoverflow.com/questions/11193906/how-to-set-the-value-of-string-to-null String.empty is similar but a bit safer.
you monster
Try something out, then come back for help. We're here to help supplement your code, not provide it outright.
I know how to add items to a list but i want to add multiple items to the list based on the constructor. I have created a function that adds item to a list. So would i store the items in a variable then add those variables to the list?
so far the threading ones. they work very well
You're almost there, but you probably didn't try very hard to figure out a solution because this is pretty basic. Here's a generic example of how to create a list, and add items to it. Create a class to represent the thing you're sending in the parameter list of the method Film. public class Film { public int Id; public string Title; public string Runtime; public string Rating; public string Description; public string Type; public decimal FrameRate; public string ReelType; } Create a List&lt;T&gt; generic list, where T is Film. List&lt;Film&gt; films = new List&lt;Film&gt;(); Add a new Film to that List&lt;T&gt;, "films". films.Add(new Film() { Id = 1 Title = "My baby can read C#!" Runtime = "120" Rating = "NC17" Description = "What is this, programming for ants?" Type = "DOCUMENTARY" FrameRate = 30 ReelType = "STEEL" });
Interesting bit of trivia. So it actually is initialized to null in this case but you cannot use it; the compiler is forcing you to be explicit about the assignment. Hmm... mixed feelings about that. 
You can deserialize to an anonymous type, but you cannot inspect the values of the json to change the type on the fly. I can think of three approaches that might get what you need. Create a base type class with the properties used to make the decisions. Deserialize to the base class. Based on the criteria, deserialize the json to a class that inherits from the base class. var specificObject; var baseObject = Json.Deserialize&lt;BaseObject&gt;(jsonString); if (baseObject.Type == SpecificObject.Type) specificObject = Json.Deserialize&lt;SpecificObject&gt;(jsonString); Create a class that has all the potential values. The deserializer will only include the properties you included in the json string. If you want, you can then use a mapper class to copy the values to the object type you need. var superObject = Json.Deserialize&lt;SuperObject&gt;(jsonString); if (superObject.Type == SpecificObject.Type) { var specificObject = new SpecificObject() { Foo = superObject.foo // etc... } } Deserialize to a dynamic variable dynamic myObject = JsonConvert.DeserializeObject&lt;dynamic&gt;(jsonString); 
Have you tried the [MSDN](https://msdn.microsoft.com/en-us/library/3wcytfd1.aspx)?
Can you JSON.stringify() it on the client? Then you'd just be sending a string that you could parse or convert to a dynamic with JSON.net etc. [HttpPost] public ActionResult(string json) {}
In general, you should repeat as little code as possible. Every if statement does `Double.Parse(result.Text)`, `result.Text = X.ToString()`, resets the `centimeter`/`milimeter`/`meter` variables, etc. You could try to move the common parts out of the `if`s, store the values in a local variable if necessary, and do it just once either before or after the `if` clauses. When you have multiple mutually exclusive possibilities like your `centimeter`/`milimeter`/`meter`, using an [`enum`](https://msdn.microsoft.com/en-us/library/cc138362.aspx) can be useful. You could simplify your logic by always converting to a common unit (e.g. meters) first, and then converting from that to the target unit. That way you don't need to individually handle every possible combination of units, just to/from meters. If you want to get fancier, you could store the conversion ratio to meters of every unit (i.e, 1 for m, 0.01 for cm, 0.001 for mm) when the radio button is selected, and simplify your conversion to the single calculation `value * sourceRatio / targetRatio`, e.g. 150cm * 0.01 / 0.001 = 1500mm.
When I tried that I get back null in the string. Perhaps there is some way to configure MVC to make that work? 
The first thing that strikes me is that you have a number of almost identical looking blocks of code - that's usually a sign that you could write it better. It's a bit tricky for me to suggest how, because I've no idea what the functionality of the radio buttons is meant to be (hint; give them meaningful names - `radioButton3` tells me nothing about what that control is supposed to do! (side note: using numbers in variable names is often a [code smell](https://en.wikipedia.org/wiki/Code_smell))), and it's unclear what your `centimeter`, `milimeter` and `meter` variables mean. One simple change you could make is, firstly to extract the common `Double.Parse(result.Text)` into a variable at the start, thus: double value = Double.Parse(result.Text); and at the end, write the result back to the field: result.Text = value.ToString(); Another is to change this `if`/`else` block: if(radioButton1.Checked &amp;&amp; centimeter == true &amp;&amp; milimeter == false) { result.Text = (Double.Parse(result.Text) / 10).ToString(); centimeter = false; milimeter = false; meter = true; } else if (radioButton1.Checked &amp;&amp; centimeter == false &amp;&amp; milimeter == true) { result.Text = (Double.Parse(result.Text) / 100).ToString(); centimeter = false; milimeter = false; meter = true; } Notice that: * you're setting `centimeter`, `milimeter` and `meter` to the same values in both cases * you're checking radioButton1.Checked in both cases So you can extract those out and, with the previously mentioned extraction of the double conversion, you get something like: if ( radioButton1.Checked ) { if ( centimeter &amp;&amp; !milimeter ) { value /= 10; } else if ( !centimeter &amp;&amp; milimeter ) { value /= 100; } centimeter = false; milimeter = false; meter = true; } (and the same for the 2 other `if`/`else` structures. Now it's clearer what each case is actually doing (dividing by 10 or 100), and it's also clear that your boolean variables are set to the same value in both cases. Notice I also changed your bool comparisons from, e.g `centimeter == true` to just `centimeter` - coupled with a slightly better variable name this can make your code even more readable. I suspect the code could be reduced further / made more readable by using something better than 3 boolean variables, but I'm not entirely sure what they're supposed to represent, so I can't make further suggestions there.
Its not odd. Its still bad code. Your dynamic language just covers up your mistake.
i dont know about "bad code" its perfectly acceptable and valid in the context of python. So.... but in c# I would definitely agree its bad code
I won't recommend this way since it doesn't solve OP's real problem (deserializing to one of N classes) but you can build your own parameter binder to assign the raw body to a string parameter. https://weblog.west-wind.com/posts/2013/Dec/13/Accepting-Raw-Request-Body-Content-with-ASPNET-Web-API
im gonna be even more unhelpful and recommend that he change to WPF/UWP and use binding and commanding
With your German locale, I suspect the DateTime default formatting. It uses your system settings by default. Some information that might help: https://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo.datetimeformat(v=vs.110).aspx
Or something closer to the original code (switch is conceptually just a bunch of optimized `if` statements): def do_the_thing(set_name): .. if set_name: .. my_name = "Sarah" .. print(my_name) .. =&gt; None do_the_thing(True) Sarah =&gt; None do_the_thing(False) Traceback (most recent call last): File "python", line 1, in &lt;module&gt; File "python", line 4, in do_the_thing UnboundLocalError: local variable 'my_name' referenced before assignment
It's really a problem with my locale and it's sitting in sqlite, as I can query the MySQL database via the datetime. Thanks everyone! 
what if x_first isn't "x" or "o" - then you are trying to assign unassigned variables to another variable.
Yeah, in the latest version of MVC they merged the MVC controller and the API controller into just Controller.
You can bind to dynamic or ExpandoObject with custom coding. There's several model binders available on blogs etc. The alternative is to read the InputStream into a json.net jsonreader and use it for diving into the json and pulling out values.
What is `button33`? What is `radioButton1`, `radioButton2`, and `radioButton3`? Why are `centimeter`, `milimeter`, and `meter ` global variables? You are on the right track thinking about functions. If I gave you a function called this: Add(int a, int b) What do you think it does and returns? Likewise, you need to make a few functions that have one job and do it well. I would expect to see something like `ConvertTo.Millimeters(int meters)`.
Do you have access to the source code for the processes which you are trying to manage? If so, use an application mutex. Otherwise, you should be able to find, create, and monitor these processes using the **System.Diagnostics.Process** class. Just take a look at the [events](https://msdn.microsoft.com/en-us/library/system.diagnostics.process_events%28v=vs.110%29.aspx).
If you want the enterprise solution it would be to develop your application logic as services that run in the background. https://msdn.microsoft.com/en-us/library/9k985bc9(v=vs.110).aspx Pro-tip, create a solution with a code library for your app logic. A console app for testing that logic. And a service project for packaging that. You will also need an installer project to install the service. If you are not familiar with services just type services.msc in the command prompt to get a list of running services. If you right click you have options to stop, start, restart etc. If you do not use the console / code library method you will have to install / uninstall your service from visual studio each time you want to run it. That makes development very slow. I also recommend reading up on them to get a better understanding before diving in. They are simple, subtle but can be rock solid assuming your app code is too.
Working after a reboot, but interesting. This was the lightweight installer version.
Depending on how familiar you are with C# you can use ASP.NET Web API, Service Stack, or some other C# based solutions. I have worked with both before and they both are powerful tools for making a back end server that sends data to a web client. If you want to use other languages, there are lots of other cool technologies out there too for making a web server. But there are some concepts that hold true no matter what tool you use. Have an understanding of HTTP and how data is sent from your browser to your web server and back again. Understanding what is JSON (People usually use JSON to send data , there is XML, SOAP, etc). Understanding serialization and how you transform the data you send from your browser to your application and how it makes sense of it and vice versa. Looking up about restful principles can be helpful as well. While you can do practically anything in an HTTP Post, you will see how people use the HTTP verbs and paths to build their routes. Also consider that you will probably need to store the data in some way that you get from the client. This might be user names, passwords, scores, and more. This will take you to the land of databases. Personally I like Microsoft SQL Server, it plays well with a lot of microsoft tools and i feel TSQL is very powerful. Being a full stack developer for this can be a little tricky, but is also really rewarding to know you put this together. Theres a lot to learn and many topics nested inside of those topics. Creating a great database is a job in itself. I recommend taking baby steps with development not to discourage yourself. Maybe first make a simple web server that takes in input and spits it back at you in JSON form, not worrying about the front end or database. Then maybe have that application save to tdatabase that input and see if the user has entered it before. I guess the point i am trying to make is there is a lot to learn and small accomplishments will encourage you to go farther. Hope this helps
Unity includes a networking API which you can use for implementing multiplayer in your game. I would recommend going for WebGL because that's the new player in town (also because Chrome doesn't support Unity Webplayer anymore). [WebGL limitations with Unity](http://docs.unity3d.com/Manual/webgl-gettingstarted.html) [Networking in Unity for WebGL](http://docs.unity3d.com/Manual/webgl-networking.html) Besides that, everything should be normal like you would develop any game in Unity.
I thought dictionaries were serialized as a list of key value pairs. 
&gt; Relational databases do not scale horizontally, they only scale vertically. Ha! I've seen countless relational databases that were scaled out. Basic replication handles most scalability needs, even for large databases like we see behind Stackoverflow.
Dapper uses raw SQL, so you can always see for yourself what's happening.
If you are not querying a unique index, but rather doing a table scan, then top 1 will help a lot. (Though not as much as adding the missing index.)
**EF** Calling FirstOrDefault will automatically add Top 1 if you do it BEFORE ToList. If you do it after, you get all of the rows.
Your numbered questions are purely regex-related. &gt; What is the significance of the brackets []? In a regular expression, they denote a list of options. `[abc]` is about equivalent to `a|b|c` and `[a-z]` is about equivalent to `[abcdefghijklmnopqrstuvwxyz]`. &gt; I don't see any tab characters in the given parameter. Why \t? Better yet, is \t a character that looks like multiple space characters? This is continuing the "not a-z, A-Z, 0-9" list by adding "not the \t character". &gt; Why the space between "." and ?! The space character is included in the list of characters to exempt. &gt; What does ?! mean? Both ? and ! are in the list of characters to exempt. Outside of square brackets is where they have a special meaning.
**Chain** Using either of these will result in `TOP 1` being added to the SQL. ds.From(table).WithLimits(1).ToCollection&lt;T&gt;().Execute().FirstOrDefault(); ds.From(table).WithLimits(1).ToObject&lt;T&gt;().Execute(); Writing this will not add `TOP 1`, but instead will throw an exception if more than one record is returned. ds.From(table).ToObject&lt;T&gt;().Execute(); 
&gt; In a regular expression, they denote a list of options. However, (for OP's benefit) of special note is the leading `^` which causes the entire set to be negated. That is, the pattern will match any characters that are not contained within the brackets (with the exception of `^` because it's a meta-character).
See [IgnoreCase](https://msdn.microsoft.com/en-us/library/yd1hzczs\(v=vs.110\).aspx).
Thanks everyone. I got it. I can either use return Regex.Replace(equation, @"(?i)[\^A-Z0-9\t\. ?!]", ""); Or use the Regex.Replace(string, string, string, Regex Options) method instead like so: return Regex.Replace(equation, @"[\^A-Z0-9\t\. ?!]", "", RegexOptions.IgnoreCase) 
Just when I thought I figured it out. Since the \^ denotes negation, my next thought was why not be more direct so I tried: return Regex.Replace(equation, @"[%$&amp;/#·@|º\ª]", ""); Unfortunately, I get a runtime error: An unhandled exception of type 'System.ArgumentException' occurred in System.dll Additional information: parsing "[%$&amp;/#·@|º\ª]" - Unrecognized escape sequence \ª. Where did I go wrong?
Thank you so much, declaring Figures figures outside the load fixed it !
You're calling `DisplayText`, which is an `async` method, but you're not awaiting it. You're trying to wait for it to finish using `ReadKey`, but I think there's something going wrong with it. A good start for an async console project is this: public static void Main(string args[]) { MainAsync(args) .GetAwaiter() .GetResult(); } public static async Task MainAsync(string args[]) { ... } In your `MainAsync` method you can now use `await`.
Hey What do you have right now? Overall the steps you need to do are the following: - HTML Page to show the form - Controller to receive the information posted from the form - A storage for this information, if it's feedback you want something like Mailchimp or you own Database - A connection between your rendered HTML page and your Controller If you have Asp.Net MVC Project your Controller look at this and maybe Razor syntax. http://www.w3schools.com/aspnet/mvc_controllers.asp I personally don't like this. I by far prefer ASP.Net Web Api. You have the same as above but no Razor, ASP data binding. Instead you can use plain JSON to communicate between any view and controllers. The connection would be something like $.post(myURl/API/controller, dataFromHtmlForm); If you store your information in a database and you want to have a website ready for the admin you can build the controller as a CRUD Service. Then the "post" would insert new data. A Get gets all or one specific message A delete deletes And a put updates a message. If you use identity each method can be secured for a specific type of user. Or post message for everyone but the rest only for a administrator. Since we don't know what you have right now (which technologies) I say what I would to do to get it ready in minutes. 1. Have a database connection ready 2a. Option1 Enable Migrations to code first 2b. Make a new code first model (the object you want to store, name, message, date) 2a Option2 you have the database running 2b new database first model 3. Now the objects are created I recommend you to build everything by yourself to get a better learning experience so: 4. Right click on controller and create a new controller. Empty is the hard way - entity framework with create update... is the easy way. 5. Either way you've clicked you need your controller to get the data. 6. Return the data 7. Display the data. (Eg make an Ajax call and display everything with JavaScript) Take a look at asp.net there are many good tutorials on how to archive what you want to do. Edit: since I am mobile sorry for the messed up format here... On my editor it looks fine
Is it just me or wouldn't it be significantly more efficient to check each char of a string and see If it is either a number or letter? You would only need to check 6 conditions ( &lt; or &gt; char values for nums and letters), instead of each special character? 
Yes. That was my next thought but I couldn't get it to work (if for nothing else than to satisfy my curiosity). See my reply to /u/hahaNodeJS. Also, the few answers I found on stackoverflow all suggested using a whitelist over a blacklist.
&gt; return Regex.Replace(equation, @"[%$&amp;/#·@|º\ª]", ""); &gt; Ahh it works when I add \ so it becomes return Regex.Replace(equation, @"[%$&amp;/#·@|º\\\ª]", ""); But that leads to the question, why didn't @ take care of the escape sequence? edit: I get a compile error if I remove "@" but I'm not sure why it needs to be there.
The \ character is by default assumed to indicate an escape sequence for the next character. You can nullify this behavior by doubling it, so using \\\ in your string will turn into just \ when your program is actually processing the string.
&gt; edit: I get a compile error if I remove "@" but I'm not sure why it needs to be there. https://msdn.microsoft.com/en-us/library/aa691090(v=vs.71).aspx Also, you can denote inline `code` by surrounding the text in backticks.
The piece that's missing is that this error is from the regex side, not the C# side. Putting the @ in front *does* ensure that \ª is passed as a backslash and a ª, not a C# escape sequence. However, regex also has escape sequences. For example, a regex for a tab character can be formed as `@"\t"` or `"\\\t"`. Regex does not have an escape sequence for \ª specified, so it produces an error.
&gt; why didn't @ take care of the escape sequence? It did. However there are 2 sets of things looking at your string; the C# compiler, and the regex engine. In the case of `@"[%$&amp;/#·@|º\\ª]"` : The leading @ tells the C# compiler to ignore escape sequences (backslash followed by a character) in the following string, so if you use it the regex engine will see 2 backslash characters. The regex engine then does it's own escape processing and realises that you meant a literal backslash. In the case of `"[%$&amp;/#·@|º\\ª]"` (without the leading @) : The C# compiler sees the double backslash, and assumes you meant a single literal backslash, so passes the string `"[%$&amp;/#·@|º\ª]"` (with one less backslash) to the regex engine, which then assumes you're trying to escape the ª, which is an unknown escape sequence to the regex engine. You can do it without the leading @, but in that case you'd need to double up your backslashes, which makes your regex much harder to read (`"[%$&amp;/#·@|º\\\\ª]"`), so it's not a good idea. 
To turn `[a-z]` into a case-insensitive version within the actual regex, it's possible to use `(?i:[a-z])`. For example, `string regex = "(?i:[a-z])";`
You have to imagine that every **if** statement might not happen unless it has an **else**, (even an **else if** is not good enough). as /u/usea said, the switch has no **default**, it just has an **else if** which is not good enough. One way of getting past these compile-time hand holding is to just say: string first_item = null; and then handle the null check somewhere else.
It's used by default in the newer versions of ASP.Net / MVC &amp; WebApi, but those all basically install through NuGet. If your work allows it get the library manually and bring it in through a thumb drive? Or set up passes through IT so that you can get NuGet packages and system updates properly.
In its defense, I now finally know how to disable the diagnostics tools while debugging. At least I learned something I'll probably use.
TL;DR Use anything ReSharper; disable everything Microsoft.
irony is that resharper alone makes VS way way slower than any of the VS things he is turning off 
Maybe so, but they could've used a search engine to find a similar answer. I tried to provide a generalized example. My only sin is that I over-helped the lazy. 
I agree. It would have been quite hacky. Formatting DateTime string yourself seems to be the simplest solution. Cheers!
I thought the Roslyn solution analysis was supposed to be faster then the R# stuff. Have you tried vs2015 without R# and just using the built in feature set? Good tips though. I turned off all the pieces of code lens except the references in hope that vs2015 doesn't try to pull stats it doesn't use. The TFS Bug/Checkin/Author crap looked to chatty. 
My solution has only around 10 but EVERYTHING takes forever. Even intellisense takes a few seconds to activate... This is on any of our machines at work too.
Holy cow, why so many projects?
We build simultaneously for multiple platforms (SL4, SL5, Android, WPF) and multiple end-user applications.
Isn't full solution analysis a Resharper option? I don't see it in my VS 2015 Enterprise. This article should be titled 5 Performance Tweaks for Resharper + VS 2015 IMO.
What are your numbers delimited by? Spaces, tabs, newlines? You're going to want to split your input string that contains all the numbers by that delimiter, then iterate on that resulting array. By iterating on `content.CharArray()`, every character in content is its own element that you're hitting, hence why your multiple digit numbers are being separated.
I think you misunderstand. Sometime we want a fast, dumb text editor.
Not just existing ones; I tried it out a couple years ago but gave up after a few minutes because simply including a library reference was beyond the free edition. I wasn't going to shell out that much cash on R&amp;D for a personal project. Now it'll be worth a look in earnest.
Start by figuring out what area within C# you are going to be working with. Games? Windows Development? Mobile Development? Web Development? After you have figured out what area, then buy books on that area (beginner, mid-level, professional) and focus on that area solely. Only after you have a good understanding of that area, then you can begin to branch out if you so choose to.
&gt; Private methods can be considered as a "smell". Usually when you have a private method and so many of them it is a clear indication that you want a class in place of. Having so many private methods came from having this method not start out being written using the TDD approach. 94% of the business logic in this project is covered by unit tests. Half of that missing coverage stems from this particular property setter and the methods it uses to get it's work done. Almost everything else I have written ends up being public due to unit testing. The GetCompanyInfoAsync and GetCompanyInfoFromDbAsync will ultimately be made public and moved to another class because on the ViewModel I only want to expose properties/commands that should be bound to the GUI. I probably should have broken them out in to the classes they will ultimately be in during my "Edit 2" but I opted not to just because I didn't want to stray too far from my initial post for simplicity's sake. This probably was the wrong choice because people that are trying help me keep getting hung up on it. I do agree with you on this point for the most part. The essence of my question boils down to how do I test these two lines below which reside in the ValidateCustomDbPathAsync method when normally during a test their state would already be changed by the time the test looks at the state of the ViewModel. Beyond those two lines I think I have a decent idea on how to refactor this code to test each piece properly and in isolation. &gt; Set(() =&gt; CustomDbPathValidation, ref _customDbPathValidation, ValidationState.Validating); &gt; Set(() =&gt; CustomDbPathValidationMessage, ref _customDbPathValidationMessage, string.Empty); (Addind this line to break up the quotes, I fail at reddit posting syntax) &gt; To connect to the database, you'll need a connection/connection string:- Normally this is the case with most projects. Basically the point of the _connectionProvider is to provided a connection based on path by generating a connection string from that path. I don't need to know the user/pass because it is required to be the default for this database engine (I don't like it, but it is what it is and I am not going to complicate my current design while this requirement remains in place. This stems from the version of this engine we are using has one user/pass for the entire system and we can't recommend changing user/pass because it might break 3rd party software). The only information needed to get the Company is the database path. The Company is the name of the company whose data this db represents a.k.a. who the software is licensed to. It resides in a specific table that only ever contains 1 record. We need this info here because some organizations have two or more business entities under the same roof with separate licences/databases and the Company helps identify which database they are backing up. &gt; I would drop the word async from the method declaration. Because the method is marked as such: I have added Async to the method names because that is what Microsoft design guidelines say you should do. [Naming Convention](https://msdn.microsoft.com/en-us/library/hh191443.aspx#BKMK_NamingConvention) &gt; So we can drop FromDb from the method declaration: I added this distinction because GetCompanyInfoAsync already exists which is initial method that should be called to get this information. I don't normally add FromDb to methods, but in this case I did for this version of the method that specifically was getting it from the database as opposed to the other method which may never touch the database in the case that the db file was not found on disk etc. &gt; You can then make the argument that actually repository should be responsible for opening and closing the connection. And this class is just a layer of abstraction (that is needed). I actually thought about it for a long time before going with passing in the transaction and connection. In this instance you are certainly right. And for this entire project it is actually a valid point. I am trying to establish in this project patterns and practices that I will use in my next project which will be to rewrite a screen in the main application from a legacy language to C#. Because the next project sometimes involves multiple queries that need to be in the same connection/transaction I opted to use this method signature you see here with this project to prove to myself that the pattern worked and that it was what I wanted to do later on down the line. In my next project all the database queries will be done inside a server app and each request to the server will use the same connection/transaction for the entire request. You are right that it could be simplified here and have the repo object take care of that but I wanted to start doing it like I will in my next project even though it is not needed just in case I find an issue with the pattern while using it in this project.
I have always been told (talks I have watched online) that testing private methods (while possible via reflection etc) was a fools errand. I have been living by the assumption that the people saying this know better than me what are good ideas and what are not. Though two of the methods in my provided code (Edit #2) will ultimately be moved to different classes and made public. For w/e reason I decided not to move them to those classes in my post and since I dont intend on exposing them as public in the ViewModel I left them as private for now. Probably a bad choice because several people who have looked at my question have been put off by it these private methods that are not very testable as is.
Doesn't sound like a C# question
I'm programming in C# &amp; DateTime.TryParse() is part of .NET. Close enough?
One option would be to delay validation until they try to save. That's probably what I would do. Another option is to implement https://msdn.microsoft.com/en-us/library/system.componentmodel.inotifydataerrorinfo(v=vs.110).aspx and listen for that event in your test.
The whole reason they bought xamarin was to support cross platform development more holistically. I think over time we will see it become more tightly integrated with VS, and perhaps they will even drop the xamarin name. That being said, as long as there isn't a change in leadership, I don't think they are going to abandon their recent movement in the open-source and cross-platform arenas.
First question....which JS is being executed after the controller call - success or error? (probably neither) Stick with this approach, and break on this line... var formDataList = JsonConvert.DeserializeObject&lt;List&lt;SampleFormData&gt;&gt;(formData); ...then let us know if formDataList is getting assigned anything valid. Also, make sure your exception handling settings are set to break when one is thrown [since you're not using Try/Catch]. Go to Debug &gt; Exceptions &gt; Check 'Thrown' next to CLR exceptions.
Were any changes made to your server's configuration? Were user permissions changed? 
&gt; I have always been told (talks I have watched online) that testing private methods (while possible via reflection etc) was a fools errand. Pretty much yes. It is entirely a dumb idea because in most good code, your private methods are going to be called by proxy of some public method. If you could only invoke some private method by way of a test, then the method doesn't serve any purpose. Thus unit tests against private methods are generally brittle versions of tests that should exist against public methods, or brittle tests against for functionality that shouldn't exist... But alas, brownfield code and backward compatibility and backward compatibility planning often mean compromising our principles and substituting "barely works" for "correct".
Same three. I would even have been happy to give them a bit of money, but I HAD to have Visual Studio integration and that was stupidly expensive. The whole idea that I should pay extra to use my own editor was infuriating. I don't mind paying for software, but I don't want to pay for it until I've experienced first hand its value proposition. For that to happen I can't have some retarded 30 day trial period deadline looming. So anyway, this all makes me very happy.
It doesn't have to be minimal at all! Reading 10 billion records and sending them over the wire compared to 1 record is huge! It's a very easy way to optimize a query and should be made whenever possible. Especially when there is no downside.
That is not true. Dapper does not do this. Dapper does not implement IQueryable like Entity Framework does. 
So, I know that Xamarin was being shipped free with VS2015. Does this mean it's free now for any IDE? Can I add NuGet packages for Xamarin via, say, Xamarin Studio?
It doesn't say "free" unless I'm missing something.
Just wooow, this is all that one can espect from the Xamarin guys, thanks Miguel and co!
Sweet science that's awesome. 
But live tile can show the state 
I found it funny when they said in the keynote "in the last couple of week, the amount of xamarin user tripled compared to the last years" Well yeah. It's free now. Of course people will use it.
Can you include code in TicTacToeState?
This is a pretty basic question. Let's suppose you have a table in your database called Finishes with columns defined such as; Id, Color, IsActive. This table represents all the options you want to populate your combo box with. Filling the combo box would requiring querying your database with a query like; Select Color, Id from finishes where IsActive = 1 Given this set of data set your data source on the combo box to the data table returned by your query. Set the display member to "Color" and the value member to "Id". Next you need to insert data to a cars table. Suppose this table is defined with these columns: Id, FinishId, IsPaid. Create an insert command. Use a sql parameter to specify the value of the FinishId from the selected value of the combo box.
It's more meant for the cross-platform support if you already know the native language. So you can write your core logic once and only have to port the UI logic for each platform. Saves a lot of time in the long run. If you know C# better, Xamarin may be the way to go.
Okay I am not debugging it but what stands out is that your pointer to the array on your clone is referencing the same point in memory as the original board. This means modifying the array on the clone modifies it on the original board. Two options to look into would be the Array.CopyTo method, or possibly easier would be cloning the array using the System.Linq extension method .ToArray() on the first array to create a copy. You can test if the arrays are the same instance by breaking your code during the clone and inspecting the array in a watch window and call GetHashCode() on each instance. If they return the same value then they are pointing to the same spot in memory. 
You are welcome. Glad to help. 
Looking it up isn't cheating. Professional programmers never reinvent the wheel. If somebody has already solved the problem, you understand their solution, and it fits your needs, then use it. The key is that you should understand what you Google. Don't just use something that seems to fit if you don't understand how it works. There might be some special qualities that determine who can be a great programmer but I've been a professional developer for almost 30 years and I've met a LOT of programmers. They have all been different: there's no such thing as a specific type of person who becomes a good programmer. In my opinion, what makes a great programmer is the level of care. If you care about quality and aren't satisfied with "good enough" or "it seems to work, ship it" then you can become a great programmer. It just takes experience and practice. 
React native killed Xamarin already.
Everyone learns differently, but here's what I recommend to get started. Look up Microsoft's Virtual Academy. It's a free website that contains TONS of video tutorials, including C# tutorials for absolute beginners up to more advanced topics. You can get a great start there. I'd also recommend Microsoft's C# Step-by-Step book. It's a large book that doesn't assume too much knowledge. I found it great to fill in gaps from other learning sources. It complements video tutorials very well. Build stuff. You can make simple C# apps quite quickly and easily. There's nothing better than doing! Download Visual Studio 2015 (the Community version is free).
C# &gt; Javascript
A 2-line solution that works without using any external libraries.... Downvoted Un fucking believable ;)
I super duper hope the videos are made available on channel9 or elsewhere as they were for Build. Grant Imahara opening up, Steve Wozniak and Miguel de Icaza closing ! Oh, the nerd drool...
Visual Studio's default "click a button and the counter goes up" template gave me a 7.5MB .apk with Release build and everything else default. edit: found [this nifty page.](https://developer.xamarin.com/guides/android/advanced_topics/application_package_sizes/) 
F# &gt; C# &gt; ... &gt; A dead bird &gt; ... &gt; The black plague &gt; ... &gt; Javascript Which still means that Xamarin is far from dead since the Xamarin guys really loved F# (which is more than you can say for Microsoft in general....) :)
Xamarin Studio and Visual Studio both have Community Editions (with no restrictions on app size or number of installs). Xamarin works with both at no additional cost. So yes, you can. And you have been able to for the last month.
You do realise that it was Xamarin's "shitty business model" that positioned them in the enterprise market and made them attractive to Microsoft in the first place. So this has always been their endgame, and now you get it for free. If they'd gone free from the start, the company would no longer exist.
How does that compare with a regular Java .apk?
It's the base class for List&lt;T&gt; plus pretty much every other collection type in .NET. I don't tend to use a more complex type unless I really need it. If I need a list I can just go myList.AddRange(myArray);
&gt; It's the base class for List&lt;T&gt; Nope, it's not.
Yes, it is. https://msdn.microsoft.com/en-us/library/system.array%28v=vs.110%29.aspx
I stand corrected. Probably thinking of IEnumerable.
Which is an interface, and not a base class. ;-)
Yes I know.
&gt; We’re introducing two new ways to debug and test your iOS apps directly from within Visual Studio. Our iOS Simulator lets you simulate and interact with your iOS apps in Visual Studio — even supporting multi-touch interactions on Windows machines with capable touch screens. We also unveiled our iOS USB remoting, which makes it possible to deploy and debug apps from Visual Studio to an iPad or iPhone plugged into your Windows PC. Does that mean I can develop for iOS without a Mac?
No, I'm not looking for an argument. I'm not the one using hyperbolic phrases like "hideously expensive" and "shitty business model". If you don't want people to debate you, don't make stupid comments. &gt;If you want people to use your products then you must get people interested So presumably the company you work for gives everything away for free then? Let us know what you do and I'll sign up for some. I'm curious how most people I've ever spoken to about this expect to get paid for their work, and yet think companies like Xamarin should give them stuff for free.
Exactly what it means.
I couldn't create or open any project, even after restarting the program. Took a reboot. I think it might have been due to my remote desktop session.
Why did you follow that 'recommendation' in the first place. Seems like bad advice to me. Install Visual Studio Community: https://www.visualstudio.com/products/visual-studio-community-vs A part of the installer is localdb which is a light-weight SQL server for development.
Know thy tools well. If there isn't a tool available, create one. Taking an hour to create a tool that saves you two minutes a day is a very worthwhile investment of your time. First, get it to work. Second, get it to work well. Unit testing facilitates this. An adage states that code you've written 6 months earlier might as well have been written by someone else. Always endeavor to make code understandable to someone seeing it for the first time. In other words, being clever is overrated. Keep your methods small. I aim for a maximum of 14 lines wherever possible. It's much easier to debug and test many smaller methods than one huge method. It's also easier, when looking at it for the first time, to figure out what's going on. Be ready to admit what you don't know. Be ready to learn it. The code you write is the team's, not yours. Don't be too sentimental when someone rips out the logic you spent hours on for a different implementation. Don't take it personally. Rewriting from scratch is the option of last resort. Don't assume that the person who wrote the code you're looking at was an idiot. In general, there will be parts you can reuse and a method to the madness.
i'll just add a few more apk sizes and install sizes (for hello worlds): java and android sdk: 1.5MB (installed about 3MB) kotlin and android sdk: 3.0MB (installed about 5MB) xamarin: 7.5MB (installed about 10MB) Qt5 widgets: 7.5MB (installed about 20MB) Qt5 QML: 11MB (installed about 30MB)
Do you really want a linked list? It heavily depends on the use case, but most of the time it's slower. A list is fast when iterating or append an element. It is much faster for random access. A linked list is fast when inserting into an arbitrary position, but access is generally slower.
Admitting when you're wrong and adapting because of new information. Also helping other programmers and not being a dick when judging other programmers efforts.
So not free then. LOL downvotes.
A lot of reasons. People really like C# and .NET. You can write native iOS and Android in C# and skip Swift, Obj-C, or Java. Swift will only let you write iOS apps. You can develop on Windows or Mac. You can write your all you biz logic in a library and share that library into a native iOS and/or Android project and write the presentation and views or platform specific code there. Allows you to reuse a lot of code. That doesn't eliminate the need to know the SDKs for either platform however. You're getting C# wrappers for them plus other bells and whistles. You end up with native performance, native UI controls, etc. Besides iOS and Android, you can build for Apple tvOS, Apple Watch, Android Wear, Mac OS, Windows, Xbox, etc. Edit, on yeah - could write it in F# too if you wanted. Nifty.
I would recommend two things: 1) Find a local user group. If you live close to a major city, I'm sure there's one. And maybe near some not-so-major cities. You may not understand most things that the speakers will be talking about (at first), but get to know some people there. You will not regret forming these professional relationships in the long run. 2) Find a good book that you can read through, and continue to use as a reference. C# 6.0 in a Nutshell, for instance: http://www.amazon.com/C-6-0-Nutshell-Definitive-Reference/dp/1491927062/ref=sr_1_1 I wouldn't worry too much about certification, unless your employer is requiring you. Whether or not you can put these towards a degree will vary highly from college to college.
I'd create a UserControl and load one instance in each tab.
And hordes of community developers that wouldn't/couldn't buy into the subscription model. A very welcomed move and hopefully we'll see a lot more love from app developers for true x-platform apps in the future. This new Microsoft is certainly an interesting evolution...
Thanks a lot for the reply :). I really do care and always want to program in the best way possible, gotta take care of my ship.
Well, insertion with a `LinkedList&lt;T&gt;` is also O(n). Appending is O(n) with a `LinkedList&lt;T&gt;`, and O(1) with a `List&lt;T&gt;`.
Even better, extend `TabItem` to have a custom `UserControl`, then fill the `TabControl` with those.
Thanks a lot for the reply :). While trying to learn how to program I constantly go back and rewrite code to make it easier to deal with (it's a part of my learning process), and I've come to appreciate well produced code a lot.
http://up-for-grabs.net/
You're right. What I really meant was "insertion without shifting up everything to the right", not "O(1) insertion".
Why can't you just cast it? `(TreeViewItem) sender` should work perfectly fine.
IDriveUI is the project
In my xaml I have the line TreeViewItem.Expanded="TreeViewItem_Expanded" shouldn't that get the treeviewitem? 
Okay, so the OP threw me off. The event is actually in the `TreeView`, so, that is your sender. Cast sender to a `TreeView` and then find the `TreeViewItem` you want using it. I do suspect that the actual item may be held in your `EventArgs`, but I'm not certain due to not knowing its type.
It should be: TreeViewItem tvi = e.OriginalSource as TreeViewItem; according to [stackoverflow](http://stackoverflow.com/questions/1387981/onexpanded-event-for-any-item-in-a-treeview)
I don't have any of MITableRow or MITable properties declared as static so I'm guessing that's not the issue? What else do you think would be helpful?
I'm not really into F# but .Net is always nice.
+/u/CompileBot C# using System; class Program{ public static void Main(string[] args){ var str1 = new []{"hi","hello"}; var str2 = new string[2]; str2 = str1; str1[1] = "goodbye"; Console.WriteLine(str2[1]); } }
Output: goodbye [^source](http://ideone.com/SRfKwd) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/csharp/comments/4greq0/help_instance_variables_overriden_by_function/d2l15ss%20Include%20your%20reason%20for%20reporting%20here.) 
That looks really cool. I'm looking for something similar and use Plex as my main source of TV/Movies. You might see me attempt a few and throw your way.
They create exactly the same code; the first one, the collection initialiser syntax, is essentially converted into the second by the compiler.
You are most welcome contributing to LevelDB UWP :) https://github.com/maxpert/LevelDBWinRT/ 
Might I suggest you try posting this in /r/cscareerquestions; you may get more/better discussion there.
Ctrl + K, Ctrl + I raises the tooltip for an item you've selected.
I'm not sure what your specific requirements or limitations are, but I developed TFS API consuming tools in VS2015 using TFS 2010 and 2012 binaries for this reason. These were standalone applications, however, not VS extensions, so if you're making an extension you may have other limitations. For my tools my solution was to not really on assemblies in the GAC, but instead make a custom Nuget package with the 2010 or 2012 binaries and pulled that in, so there was no dependency on the installed version. Initially getting the assemblies was a bit of a pain as I had to pull them off older installations, but once I had them in a Nuget package things became much easier.
Create a catch for the general type Exception and see what you get on timeout (if anything). It may be happening but it may not be of the type you are expecting. Not sure but in some cases you need to check some other part of the API (event trap, result value, etc) for certain types of error. 
You're thick, then. 
I think something is going on with how you are initializing MITableRow.properties. At least, as written, GetProperties() ought to throw NullReferenceExceptions all over.
Hello there! I'm designing a framework to build HTML5/JS client-side web applications with C#/.NET. It's completely open source, and more recently, i'm updating the framework to be able to run unmodified Windows Forms applications! Right now, we're just a two man team! Everyone is welcome to contribute! Official site: http://exaphaser.github.io/SharpJS/ Project on GitHub: https://github.com/exaphaser/SharpJS Private message me for more information!
It's a basic app, but my issue is that the old dll's don't work the the new visual studio and the new one's aren't backwards compatible. So I have to choose between the two versions of DLL's. How do you force something to not rely on the GAC? 
And by "shitty" you mean the honest "pay us X money for renting our product"?
You can always join us working on Perspex! http://perspex.github.io. Documentation is a little sparse but we're always up for having another person working on it!
In fact, let's back up just a bit, because the code sample is still too incomplete to actually build, which makes it difficult to troubleshoot. Can you provide a minimal sample that reproduces your problem? You don't need to provide connection strings, you could mock up an IDataReader, or stub up a function that spits back a list or something to use as a data source, instead.
If it's a standalone app then compatibility with visual studio is irrelevant - it just needs to be compatible with the TFS server, in which case, you won't want people running multiple versions anyway. As I said, bundle the TFS client assemblies in a Nuget package and pull that package into your app. Then you will be shipping the DLLs with your app, you could even ILMerge them into a standalone exe if you really wanted to, but that isn't necessary. Then your app will use the assemblies shipped with it and it won't have to look in the GAC.
release
Just create a second list and `AddRange()` each of the individual lists to it.
That was the problem, thank you. For those that are interested, here is the working code: private void AsyncResponse(IAsyncResult asyncResult) { FtpWebRequest request = (FtpWebRequest)asyncResult.AsyncState; FtpWebResponse response = null; try { response = (FtpWebResponse)request.EndGetResponse(asyncResult); if (response == null) return; stream = response.GetResponseStream(); byte[] buffer = new byte[2048]; int bytesRead = 0; fileStream = new FileStream(path, FileMode.Create, FileAccess.Write); while ((bytesRead = stream.Read(buffer, 0, buffer.Length)) &gt; 0) { fileStream.Write(buffer, 0, bytesRead); bytesDownloaded += bytesRead; percent = bytesDownloaded / (float)fileSize; } fileStream.Close(); stream.Close(); response.Close(); success = true; error = FTPError.None; } catch (WebException webException) { Debug.Log("FTP log: Caught FTP exception\n" + webException.ToString()); response = (FtpWebResponse)webException.Response; if (response != null) { // Determine failure reason. ReadStatusCode(response.StatusCode); response.Close(); return; } error = FTPError.Unknown; } catch (Exception exception) { // If we were writing bytes to a file, then lets close the stream and delete the file. if (fileStream != null) { fileStream.Dispose(); fileStream = null; if (File.Exists(path)) File.Delete(path); } if (stream != null) { stream.Dispose(); stream = null; } Debug.Log("FTP log: Caught exception\n" + exception.ToString()); error = FTPError.Unknown; } } 
Looks good, one tip. You do not need the if statement in a try catch to work with exception types. You can do this: catch (WebException wex) { ....some code } catch (ArgumentException aex) { ....some code } catch (Exception ex) { ....some code } finally { ....some code } That will effectively act as your if statement and is easier to read. Note that every exception inherits the type Exception so you need do do the catches in order from most specific exception to most general as shown above.
TIL Ruby on Rails is still a thing beyond Basecamp. I can say, you have as much potential or more long term with C#. Can't say you might take a cut as don't know your situation but enterprise developers can make 6 figure salaries in the US. Microsoft open sourcing lots of things can only help in my opinion.
 public void method(string[] data) { var items = data.Select( json =&gt; JsonConvert.DeserializeObject&lt;List&lt;SampleObject&gt;&gt;(json) ); } 
I would do return new [] { new Genre { Name = "Rock" }, new Genre { Name = "Jazz" } }; If if has to be a list, just add a ToList() to the statement.
wouldn't this just be MVC though...
yeah they are set to copy local, specific version was set to false, ran it as debug and made sure the dlls showed up in the folder. Verified that worked and copied that folder to a test computer and it didn't work. 
Just for clarification of terminology, technically both of the snippets you posted use a property (`Name`) *and* a field (`_name`). The difference between the two is that the second example is an *auto-implemented* property, where the compiler creates a hidden field and the corresponding `get` and `set` methods for you. The auto-implemented property does not perform the length check that the first one does, obviously. So if you need that kind of validation, you can't use an auto-implemented property. But if you don't have any logic in the property, you should use an auto-implemented property. There is no advantage to manually writing a property's getter and setter yourself if all they do is assign and return a field. The debate of using *only* a field vs. using a property (backed by a field) that is discussed in the article you linked is a separate one, and has nothing to do with the code you posted.
That's the bit I was missing! The fact that auto-implemented properties lead to the **complier** creating hidden backing fields. Thanks, it all makes sense now.
Yes, I guess I missed the point of the article. But now I understand that auto-implementing a property tells the complier to create the backing field, which it does behind the scenes. I only need to explicitly define the field if there is a good reason for it. Thanks for the cogent explanation, much appreciated.
Don't necessarily have to work on the DB internals level - there's often up-for-grabs stuff in projects like analytics, improving tests, building dashboards, etc.
What do you mean by add more tests?
Go for it! :D
What does your company do then? Presumably it doesn't satisfy the Community Edition requirements because it either generates too much revenue, or has too many staff. I'm assuming those staff are paid as well for their work. So in other words, it's fine for your company to make money, but other companies should give you shit for free. Nice level of hypocrisy there. 
Don't know why you're getting downvoted - as far as I can see you're correct.
Because you've created a new instance. You need call TabChange method on the UserControl you have on the tabcontrol, not create a new instance of it. The designer has already created the instance for you.
Literally @"add more tests" ^^hehe - ^^string ^^literal Jokes aside, You can write additional tests for situations you think that they might not have covered. Sometimes, it overkill to write tests for certain cases when it's pretty 'safe' but you can cover that hole just to be safe.
&gt; Also, fields cannot be serialized only properties can and also I believe you cannot reflect over fields. Is that not what this is? https://msdn.microsoft.com/en-us/library/ch9714z3(v=vs.110).aspx
Thanks for the help so far; I removed any sensitive info from my code and added a pastebin link to the unaltered code. Should have done this in the first place, I thought shortening it up a bit would have helped troubleshoot faster.
#WOULDN'T THIS JUST BE MVC THOUGH... *** ##[^^^I ^^^am ^^^a ^^^bot, ^^^and ^^^I ^^^don't ^^^respond ^^^to ^^^myself.](https://np.reddit.com/r/CantHearYouBot/)
If you're really interested in what's happening behind the scenes download a decompiler (or look at the IL tab in Linqpad) and see what the compiler does with both types of statements. I had a quick check and both methods compile to the same IL. The first method is essentially syntactic sugar for the second.
OMG guys you have PROPER Repositories! But you are not using an ORM so you had no choice but to make them proper I guess.
Looks like you're passing the same list to each MITableRow. In the MITableRow constructor, you'll need to create a new list, and add copies of the Property objects in the original list. Once you do that, you should be pretty much golden. Something like this this.properties = properties.Select(p =&gt; new Property { name = p.name, type = p.type }).ToList(); or this this.properties = new List&lt;Property&gt;(); foreach (var p in properties) { var newProp = new Property(); newProp.name = p.name; newProp.type = p.type; this.properties.Add(newProp); } The important thing is that Property and List&lt;T&gt; are both reference types. Because List&lt;T&gt; is a reference type, each row is getting a reference to the list, rather than it's own list. Because Property is a reference type (i. e. a class), copying the list will produce a new list, containing references to the same Property objects. To let each row store their own Property values, you'll need to create a copy of each Property, and store them in a new list for each row.
Thanks for the feedback. I definitely need to get some projects of my own design in my portfolio before I start actively searching.
My company makes more than $1M a year, so it doesn't qualify for the Community Edition license. I've never complained about paying for Xamarin: all our developers have both iOS and Android licenses and have done for a couple of years. I replied to: &gt; Hear that? It's the screams of joy from many a Xamarin professional and their budgets. I was pointing out that this open source move (which I welcome by the way) makes no difference to the price of the product. The Community Edition (which I also welcomed) was already in place. Sheesh, why is everyone in this sub so arsey? Get some sunlight FFS!
FYI, I have a £42,000 a year job and I have no formal qualifications in software development or anything IT related, besides Secondary level GCSE computer studies. It's all experience.
Just jump on the Gitter channel:https://gitter.im/tidusjar/PlexRequests.Net :D
I think this is the route I'll end up taking. 
Awesome, that worked. I added code below to MITableRow constructor: this.properties = new List&lt;Property&gt;(); foreach (var p in properties) { var newProp = new Property(p.name); this.properties.Add(newProp); }
Fair enough for the dashboard 
In addition to watching videos and reading about the C# language I would suggest working on projects. You do need to know about the background e.g. garbage collector, OOP concepts, debugging &amp; the immediate window and core microsoft libraries (many things you may need to do have already been done, why write your own CSV parser when plenty of pre-existing options exist?) A good project would be https://projecteuler.net/ work through some of the challenges and perhaps make a simple ASP.Net website for accessing the answers your code creates. Then perhaps start looking at dynamically adding controls, start reading into the ASP.net page lifecycle and get familiar with IIS and SQL server. Create a project entirely for the maths side of things working out the answers etc then make it have a nice API to access from another project and then add a website as a separate project with a web page and a drop down to select the challenge and a button to return an answer. In addition to the above I would highly recommend learning a bit about design patterns (head first design patterns is a good book). This is because you can know all the syntax in the world but if you dont lay out your code sensibly then you will cause yourself problems. Then after you have coded something with a few hundred lines post it on the internet asking for a code review, there are plenty of places (like here) where people will enthusiastically rip your code to pieces and tell you what your doing wrong. This is all stuff you can do for free. Once you have done enough of the above to get an idea of how to do things you could ask your company to find a skilled c# contractor to hire out for a few hours to go through some things with you.
Create a public property in your sub form, then you should be able to access it in the main one
Thank you. I spent about an hour of every day reviewing code at work, though mostly it is in-person and involves education and tips/tricks, coding standards, etc. I think I'm getting decent at it.
I prefer the latter.
Lists are more expensive than Arrays, is all. Plus the added bonus of typing less.
I gave up on RedditSharp after a while and just started working directly with the json api. It seems to make a *lot* of requests when you just want to get the latest posts from a subreddit, then even more requests when you want to access properties on the posts you would think it had already downloaded. Couple that with its internal rate limiting, and it's just annoying.
If you don't have to pay for it Microsoft Official Courses are decent. Either self-paced (3 month access) or a 5-day in-person class and each of them have several partners so it is likely one will be near you. 
Sure! I'm always glad to help when I can. Sometimes learning something new can be confusing and/or daunting, which turns people off. But /r/csharp is a friendly community where we are glad to help newcomers overcome obstacles!
This is not even your final form?
Maybe you could submit a PR or rewrite one? I could be nice :)
Possibly, but it is [open source](https://github.com/SirCmpwn/RedditSharp), so you could y'know...help him :D
&gt; Couple that with its internal rate limiting, and it's just annoying. Is there more than the rate limiting imposed by Reddit?
Hi, have you started it now? Would you recommend it someone else? 
Shouldn't `ToList()` have the same effect then? It's basically the same as enumerating the enumerable and adding items to a list. `Take()` needs to be implemented in a way to query the posts in one request (lazily on first access on the enumerable) and yield return the results (instead of issuing one request per loop iteration) and if that's the case, it doesn't matter if he calls `ToList()` or iterates manually. Building a list is only important if you plan to iterate over the same enumerable multiple times, because otherwise each time you evaluate the result with `foreach` or whatever you would issue another request.
The real question is, what do you already know? Xamarin just provide frameworks, so if you have any prior programming experience even if not in C#, you can probably jump in and pick up C# as you go. Since you've done a fundamentals course I'm willing to bet you know enough to get started. Most "advanced things" are really just there to help abstract, and structure your code in different ways which can be useful in certain situations. But I wouldn't say there's anything you couldn't do if you didn't know lambdas, for instance. This all said, if you have a project idea which requires Xamarin, you're much more likely to figure it out and succeed than if you tried to do something you don't care about. So just follow some beginners guides and get started.
Thank you for this great advice! 
Was this with the ToList method?
http://www.codeproject.com/Tips/552141/Csharp-Image-resize-convert-and-save I then use it by calling: var imageArray = ImageHandler.Copy(sourceLocation + "\\" + file.FileName, file.ImageWidth, 10000, 80); If you're getting it by a stream, you can just change the function to do an Image.FromStream instead of the Image.FromFile. I didn't test it out, but here's how I'd set it up: /// &lt;summary&gt; /// Method to resize and convert an image. /// &lt;/summary&gt; /// &lt;param name="stream"&gt;The byte stream of an image.&lt;/param&gt; /// &lt;param name="maxWidth"&gt;resize width in pixels.&lt;/param&gt; /// &lt;param name="maxHeight"&gt;resize height in pixels.&lt;/param&gt; /// &lt;param name="quality"&gt;quality setting value. 100 is the highest, 80 is best of both worlds&lt;/param&gt; public static Image Resize(MemoryStream stream, int maxWidth, int maxHeight, int quality = 80) { using (var image = Image.FromStream(stream)) { // Get the image's original width and height int originalWidth = image.Width; int originalHeight = image.Height; // To preserve the aspect ratio float ratioX = (float)maxWidth / (float)originalWidth; float ratioY = (float)maxHeight / (float)originalHeight; float ratio = Math.Min(ratioX, ratioY); // New width and height based on aspect ratio int newWidth = (int)(originalWidth * ratio); int newHeight = (int)(originalHeight * ratio); // Convert other formats (including CMYK) to RGB. var newImage = new Bitmap(newWidth, newHeight, PixelFormat.Format24bppRgb); // Draws the image in the specified size with quality mode set to HighQuality using (var graphics = Graphics.FromImage(newImage)) { graphics.CompositingQuality = CompositingQuality.HighQuality; graphics.InterpolationMode = InterpolationMode.HighQualityBicubic; graphics.SmoothingMode = SmoothingMode.HighQuality; graphics.DrawImage(image, 0, 0, newWidth, newHeight); } // Get an ImageCodecInfo object that represents the Png codec. ImageCodecInfo imageCodecInfo = GetEncoderInfo(ImageFormat.Png); // Create an Encoder object for the Quality parameter. Encoder encoder = Encoder.Quality; // Create an EncoderParameters object. EncoderParameters encoderParameters = new EncoderParameters(1); // Save the image as a JPEG file with quality level. EncoderParameter encoderParameter = new EncoderParameter(encoder, quality); encoderParameters.Param[0] = encoderParameter; return newImage; } } EDIT: Changed the image format to PNG so it preserves the file type. Put quality to 100 to preserve quality. 80 is the sweet spot where it saved some memory, but retained its quality.
No problem, I just happened to deal with this problem a few months ago when I needed to resize and reformat production quality pictures (30MB+) to a size that could be viewed on a website. If you want to retain quality, I edited my comment to have it keep the PNG format. All you would need to do is pass 100 to the quality value.
You could override OnFormClosing, set e.Cancel to true, and then hide the form.
So how to make sure you're running stuff in parallel (mobile development aside)?
You want to spawn a separate process from within your application. You can't share memory between processes, but you can share data by attaching to the process' IO streams. When the application closes, other processes spawned by it won't close. No need to create a service or anything (although, that would also work). Edit: I don't get all the down votes, this suggestion does the job quite well. Whatevs
Google + StackOverflow will probbably be your best friends. I would look into "getters" and "setters" as these are unique to C# and very basic. If you have a decent grasp of how OOP should work, then Visual Studio's IDE will be very helpful in picking it up as you go. Don't be intimidated. C# is a great language and very extensive. When you get the "There has to be a better way" or "This seems convoluted" feeling just look it up. In my experience going to a new language is just trial and error until you've experienced it enough to be more confident. Good luck. Also make sure they are using MVC. ASP.NET has been around for a while and MVC is a new kid on the block.
Alternative, your main window (a blank dummy window) can be hidden on startup. This window can then create a second window that the user sees and can close (without having to modify the default close behavior). 
I agree they are also nice from a readability standpoint. That being said if you are new to the language and you are trying to read and figure out what is going on they can be a little confusing if you never saw them before.
Are you missing the closing curly brace } for your while(reader.Read())?
Buy resharper, it's a lifesaver.
Async-await will do that for you. Don't get hung up on my schoolboy error of describing it as multi-threaded. It's still your simplest option for making sure that you don't block the main UI thread whenever you have tasks that won't return immediately.
Microsoft was giving away free 6-month subscriptions when you joined their visual studio developer program "while supplies lasted". I'd recommend signing up - https://www.visualstudio.com/en-us/products/visual-studio-dev-essentials-vs.aspx
While this is technically true, note that you only get access small fraction of Pluralsight's massive library through MSDN. I'd say just spend the money and get the monthly version - it will do wonders for your career growth which will in term generate revenue that dwarves the Plualsight cost.
Learnvisualstudio.net - worth every penny
This isn't a bad idea. The OP can look into TopShelf for this. 
I clicked just to come say this. Pluralsight is an absolute gem. Pretend it's your new college, and that it costs 1% of what college/university would cost, and go to town. It's unbelievable how much is just sitting there waiting for you.
Yeah, I have used Pluralsight in the past for some front end courses, but I'll have to reup for it then!
Oh wow, I just did this and got the 6 months free. You're awesome man, thanks!
I don't know how common is this, but when I was first learning about auto implemented properties I wasn't taught the shortcut. If you type "prop" you can then press tab twice. 
[This book](http://smile.amazon.com/Microsoft-Visual-Step-Developer-Reference-ebook/dp/B017A8UAEK?ie=UTF8&amp;psc=1&amp;redirect=true&amp;ref_=oh_aui_d_detailpage_o04_) is what I have been using to learn C Sharp, and I really like it. It is a very in-depth book and really breaks down everything you would need to know about object oriented programming, the C sharp language and more. It even tells you in the beginning where you should start depending on your skill level. I would recommend it.
TopShelf is incredibly easy to use, but if he needs an actual window to be displayed, I am like 90% certain a Windows Service does not have that ability
You can write your own functions to draw regular polygons and then some functions to draw polygons and lines (with or without curves). For example, have a function to take in a list/array of Line objects. The Line objects can define start Vector3, end Vector3, thickness, and any curve properties (e.g. bezier or b-spline) and then you have polygons with curves.
|PhD...Dived
how does the last few lines about encoding affect the image?
Absolutely. I was just talking to my wife about this last night. There is as ton of stuff and it isn't all dev stuff.
Cool, I learned something new today! I wonder if you could use the [Non-Sucking Service Manager](https://nssm.cc/usage) or another process monitoring utility to host the application if the UI will be a major component. I have only used NSSM to run applications as traditional services, but it seems like there is a chance it could support running a GUI application while still giving the benefits of service recovery, automatic startup, etc. If it is possible it would likely require the application to run as an administrator; in some corporate environments I could see that being an issue.
My ruby guys I know doing C# find the static typing very frustrating. Just stick with it, I promise it makes your life easier in the long run. My biggest problems with Ruby and JS are the fact that they aren't staticly typed.
Or, you know, just slap `dynamic` into everything. /s
If statement is not the issue, yes you can use it in static methods. Jst call MetricValueGenerator() without the class name before it
Imo every switch operation should have a default as a mark of good code standard. :) 
Eh, I just did it for a work project. It was not straightforward at all, but it's doable. You have to modify the registry on your installing method to call your program with some argument, which you will use to tell it's launched as a service in your main, and if this argument is absent, you simply create a window and show it. This way, you open a window when double-clicking your executable, but it's still used as a service by windows since it's registry key tells it the argument.
Your problems: 1. `MetricValueGenerator()`is not static, but you're using a static method call for it. That is what's causing your actual error. 2. Once you get that sorted out, you'll get another error saying "you can not reference a non-static field from a static context" or something like that. That is because of the limit, which is non-static. Make it static. This has nothing to do with the if (other than the fact that the condition of that if will cause the second error).
just do `IMeasuringDevice_Helper myObject = new IMeasuringDevice_Helper()`.
Awesome, thanks I will try these things!
I'm assuming you've looked here: http://answers.unity3d.com/questions/53170/using-drawing-package-like-systemdrawing.html
Yep. If it's unexpected, use it to throw an exception with a good, descriptive message.
I would also be down
("YourString").Split ('|').ToList ().Where (x =&gt; !×.Contains ("@")).Aggregate( (x,y) =&gt; x +"|"+y ).TrimFirst ('|'); I have no idea if this compiles. Just wanted to see if I could get it all in one line on my phone. This actually might work. Can't remember if it is trim first or start? Have you tried SO?
I'm down for this; I'm also a game developer with experience in other fields (not programming though...)
I'm open to this, how about we start a slack group? From there we can coordinate on something we can work on together after gauging everyone's proficiency? 
Are we starting from ground zero? Cause that's where I'd be 
Sure, I'd like to give this a shot. :)
That would be awesome, I'm down for this 
I would be ok with this also slack seems like the perfect place for something like this 
Hi there. I'm the author of the post and yes I've looked over your comment on my website. It seems that you've found a bug in my code that I previously thought was working correctly (and I tested it a lot before posting). I'm currently looking over the code and will get back to you as soon as I can figure out what went wrong with your scenario. I'm glad you have provided me some feedback!
I would love to be apart of this. Everything ive done in C# ive taught myself.
I've never used slack but I'd be interested in collaborating as well. I'd love an invite if there's a group going on 
My plan is to share what I am learning. Help people as much as I know. Ask questions when I am stuck. Do we need anything else? Like a study plan or something?
I started with the courses at Microsoft virtual academy. They were well laid out and free. https://mva.microsoft.com/ I am new to coding so I'm just grabbing whatever courses are related.
Done and done. Appreciate it
I'm interested, although I'm in fact starting a C# programming class this week, so I'm not technically "self learning"!
I personally much prefer String.Join over Aggregate. Much clearer intent. 
I'm a Microsoft Engineer at my day job, responsible for a truly massive amount of .NET debugging and some pretty sweeping C# namespaces. If you guys get your group together please let me know or provide me with a link. I'm working about 80 hours a week right now (I'm moonlighting at a AAA studio, Microsoft doesn't work us to death), but I'd be happy to hang around and help you guys out when I can.
C# is essentially plaintext inside of the .cs file! The compiler knows how to handle all of the special characters and keywords of C# to turn your plaintext into a program! You won't run the .cs file itself though! You'll need to give the .cs file to the C# compiler, which will turn your .cs into an executable program! This is most often done through Visual Studio, but can also be done through the command prompt if you really want. More detail than this is probably not suitable for a reddit response on my phone, so let me know if any of this is unclear or you have other questions.
Even with a full 4-year degree, you'll have to self-teach about 95% of the skills and technologies you'll need for a good industry job. It pays to invest early, and you will do significantly better than your peers if you focus your self-study on some of the many areas that are important in industry and rarely covered by academia.
PM sent.
I'm interested, the slack group sounds like a great idea. Can someone send me an invite?
He seems to be only generating the texture of the object - which would (or should) only happen once and thus wouldn't be that performance critical.
Im in for something :-)
 JsonConvert.DeserializeObject&lt;List&lt;Rootobject&gt;&gt;(yourJson)
Lol same but I am interested. I know some but would love help getting to that next level. 
Awesome links! Nice.
Use string.Split() to separate the piped data, then LINQ's Select() function to return an empty string for each element that contains @. Finally, use String.Join() to re-composite the results to a pipe-separated record: string.Join("|", pipedData.Split('|').Select(x =&gt; x.Contains("@") ? string.Empty : x)); If you're not using at least .Net 4.5, you'll need to turn the results of the Select() function into an array with LINQ's ToArray() function, though. A Regex may be more efficient, but I find them a bit trickier to work out. Something like this, though: Regex.Replace(pipedData, @"[^|]*\@[^|]*", string.Empty); Edit: removed unnecessary zero-width assertions
Hello, Im also down for this!
Unfortunately that doesn't work it seems like something needs to be done to data in order for it to be returned 
I can create a Discord Server and people can join it! We can have rooms for discussion and rooms for challenged! Each week we can have a problem at different skill levels that people can complete and be "graded" on! M 
~~See my other comment on needing to change the definition for `State`~~
We're down to just the [type pattern](https://github.com/dotnet/roslyn/blob/features/patterns/docs/features/patterns.md#type-pattern) and the [switch enhancements](https://github.com/dotnet/roslyn/blob/features/patterns/docs/features/patterns.md#switch-statement) (which only support constants, `var`, and `type` patterns). If you look at the [thread I made on pattern matching](https://www.reddit.com/r/csharp/comments/4ctoy7/exploring_pattern_matching_in_c/), the stuff in C#7 stops just past "Pattern matching in switch statements". It was always going to be a little weird to have pattern matching without tuples or records, but losing *all* of the recursive patterns is even worse. Very disappointing ...
Posted.
Thanks for the tip! And that's the idea, I want to get as much out of this as I can! Our program director did mention that the more tinkering we do on our own the better off we'll be.
I'll be honest here: I'm not really bothered. I never once saw a particularly convincing case for adding all of this in to the language. I really wish they'd seal up some of the holes in the language that have been around since the early days instead of adding more noise first, if I'm being frank.
If you have a PC, you can download visual studio express. On a Mac you can download Xamarin (both free).
That seems like a huge bummer. What's the reasoning?
The biggest ones for me are * Still no *covariant return types*, this has a reasonable impact on API design and Java has had it for years. Having said that I just checked the labels on the [relevant issue in github](https://github.com/dotnet/roslyn/issues/357) and it says `2 - Ready`, so maybe we'll *finally* get this... * *Custom compile-time constants* (and also therefore more support for default parameters); i.e. being able to write `const Vector2 Up = new Vector2(0f, 1f)` or `const UserID DefaultUserID = new UserID(0, 0)` etc * *Generic pointers* instead of forcing us to write IL to use it And these aren't really 'holes' but things I think are way more important than pattern matching: * Default implementations on interfaces or *some sort of mixin* * *Extension properties* * *Non-nullable references* * Overridable *assignment operator* * *Text Macros*. Yeah, I said it, deal with it 😎 Plus some others but you get the idea Edit: Just remembered another one: No AOP (like what Postsharp/Fody provide). We were gonna get there with `ICompilerModule` etc but from what I can tell it's been rescinded...
I've made it a goal to learn c#, I have limited knowledge in c++ (taken an intro course in college). I'd be basically starting from the ground up but I'd love to be a part of this.
The `new` syntax is something of a misnomer in this context - but I was referring only to struct types. Also `readonly static` is not the same as `const` in many ways, but most pertinently in that you can not use a `readonly static` field as a default parameter argument or in the calculation of another compile-time constant (such as `float InitialSpeed = Constants.InitialVelocity.Length` or something- contrived example but has real uses). You also can not have a locally-scoped `readonly`.
&gt;they were hoping to put out more frequent releases Oh man. I just got the biggest case of deja vu over the tiny amount of features in [the next version of Javascript (ES2016/ES7)](http://www.2ality.com/2016/01/ecmascript-2016.html), despite the community really wanting some things like `async/await` to be finalized. 
&gt;* *Extension properties* * *Non-nullable references* It's these two for me. Really hope they make it in.
&gt; And what do you do with structs that allocate memory at runtime? The same thing that you do with `int x = new int()` or more commonly `int x = 0;` and yet those are valid constants.\* But I can understand the reluctance/confusion- it's like I said, `new` is a misnomer when dealing with structs. C# is the only language where `new` can mean something other than "allocate memory on the heap". &gt; Then it's rather this that should be made possible. But given how default parameters are implemented this likely is not possible. They'd have to change the semantics around this, which would introduce breaking changes. And that is why I would like better constant support. &gt; Well, for it to be a compile time constant, you need values that are available during compile time. This is not something that structs guarantee. As long as a struct is [blittable](https://msdn.microsoft.com/en-us/library/75dwhxf7%28v=vs.110%29.aspx?f=255&amp;MSPPError=-2147217396) or made entirely of blittable types, the values are absolutely available at compile-time. Think about this: If we have a struct `UserID` that is just a pair of `int` fields, then what is fundamentally the difference between `const long x = 0x400000003L` and `const UserID x = new UserID(3, 4);`? ------- \*Side-note for those interested: Actually the compiler does treat built-in 'constantable' types differently to custom structs currently; but that's part of what I'd like to see change. And both cases will see memory loaded on to the stack (when in a local scope).
I'd be down, though I already know how to program. I would mainly be brushing up. But this is what I'm thinking for myself: 1 https://www.pluralsight.com/blog/software-development/learning-path-c-end-to-end 2 https://www.pluralsight.com/blog/software-development/learning-path-understanding-net-framework Extra https://www.pluralsight.com/courses/microsoft-web-technology-comparison Extra https://msdn.microsoft.com/en-us/magazine/dn759441.aspx
I'm interested. 
So the type switch is in or out? Was really looking forward to that.
Ok, cool. Mostly hoping to get rid of reliance on "JaredPar"'s TypeSwitch class: https://blogs.msdn.microsoft.com/jaredpar/2008/05/16/switching-on-types/
you're amazing! thanks for sharing
Depends on your domain/use case. The main benefit of using a default implementation on an interface instead of something like an extension method is they can still participate in overriding/OOP in general. They're virtual. Other things like extension properties have already been realized successfully in parts of .NET - such as WPF's attached properties. Together, these are nice for composing behaviors together, instead of trying to build very complicated inheritance trees to meet the needs of every object in your domain.
The idea was to get half of F#'s pattern matching features into C# but it looks like that won't be happening any time soon. Keep learning!
&gt; It's a patch around the inability to inherit from multiple classes. Which is a design decision. It makes me wonder, if you can have "default" implementations of interfaces, why not just use a base class? Why not allow multiple inheritance and everything that comes with it?
It's a different way of dealing with lots of types and classes. Single-inheritance OOP has its merits, but also tends to lead to very deeply nested hierarchies that violate various principles, such as open/closed, single responsibility, or (particularly) liskov substitution, just so that they can ensure code reuse with a base class. When you have default interface members/methods, what you have is called a *trait*. This style of programming leads to composition, and tends to lead to very small/simple classes, and a lot of them. However, as you noted, you now have a lot more to look at to understand something. Neither style should be considered superior to the other, they're just different approaches to solving similar problems. They both have their advantages and disadvantages - I'm just happy that C# will eventually stop being opinionated about this particular subject and allow both methods to be appropriately utilized. 
I think it's timing. They said they want to release versions of C# faster and I guess this was limiting them.
I get the same error. Sofar i've found this: https://app.pluralsight.com/library/courses/csharp-fundamentals-csharp5/table-of-contents I looked for Scott Allen and found more courses.
Ah, thanks for the clarification. Damn, though :P
Macros (IDGAF who cries about this, i would love it), Extension properties, Mixins, AOP... this guy gets it
You can't update the UI from a separate thread, as you know. Since you're using BackgroundWorker, you can specify an event for when the worker is done. A method will be called at the very end of the work and you can update the UI in that method. Here's a short example: int work; private void btnGo_Click(object sender, EventArgs e) { BackgroundWorker bw = new BackgroundWorker(); bw.DoWork += Work; bw.RunWorkerCompleted += Done; bw.RunWorkerAsync(); } private void Work(object sender, DoWorkEventArgs e) { work = 0; for (int i = 0; i &lt; 100; i++) { work += i; } } private void Done(object sender, RunWorkerCompletedEventArgs e) { textBox1.Text = work.ToString(); } -We instantiate a new BackgroundWorker -Add the DoWork event and give it Work as the method to do work on -Add the RunWorkerCompleted event and give it Done as the method to run once it is done, then update the textbox with the value summed up from the Work method. Let me know if you need more info.
I dont have any previous experience with C# , I would like to pick it up now, have some experience with HTML, CSS, Javascript and C++ , still in the learning process though. How do I sign up
ICompileModule had been replaced by [code generators](https://github.com/dotnet/roslyn/blob/features/generators/docs/features/generators.md). It will be in C# 7.
code generation is more broadly covered in this issue and document: https://github.com/dotnet/roslyn/issues/5561 https://github.com/dotnet/roslyn/blob/features/generators/docs/features/generators.md I am looking at doing stuff with it like taking this method: public static ValueTaskEnumerable&lt;int, Af.Enumerator&gt; AfYieldingStuff() { Af.Await(Task.Delay(1000)); Af.Yield(1); Af.Await(Task.Delay(1000)); Af.Yield(2); return Af.Break&lt;ValueTaskEnumerable&lt;int, Af.Enumerator&gt;&gt;(); } and adding this method to the class: public static ValueTaskEnumerator&lt;int, Cg3&gt; YieldingStuff() { var machine = new Cg3(); machine.State = -1; return new ValueTaskEnumerator&lt;int, Cg3&gt;(machine); } (with the correct implementation of `Cg3`)
I just found this today: [Language Feature Status](https://github.com/dotnet/roslyn/blob/master/docs/Language%20Feature%20Status.md)
Yep, good call
Yes indeed, it's handled in release and there isn't a difference as you say, thanks. Someone provided a juicy link with even a benchmark involved. My point was more the explanation that the CLR will inline stuff is more of the 'correct' answer one may be interested in than the original response. I only mentioned his mention of unity in a difference response because my personal experience with asking about performance and game development has been people rather talk about (for example as you did) abstraction is more beneficial or why 'good code' is more important. Which is great, but to many people obvious and avoids the juicy details of what's actually happening behind the scenes that is critical to game dev. Furthermore, it means nothing is actually being learned or investigated because what's actually happening is basically not explained. It's so important to understand what it's actually doing, and some may find it interesting anyway. I love this stuff myself :P
To be fair ES6 is enormous and still largely unusable ([example](http://caniuse.com/#feat=arrow-functions): works for roughly 3 out of 4 page views) for web applications and took nearly 6 years to become a standard. Last I heard they were going to publish a new language version every year with whatever was in stage 4 on [this page](https://github.com/tc39/ecma262) when it came time to create a draft of the document. I'd expect we never see a new version of Javascript with as many changes as either ES5 or ES6 again. 
Just wondering, did anyone receive any slack invite?
I'm a self taught 3D artist sinking my teeth into Unity just now. I'm fairly confident with c# but would find it really valuable to just have contact with more experienced individuals, particularly for learning best practices and such. Count me in! Looking into Slack just now. 
That's exactly what I am doing
How about adding a `IDataReader.ReadInt32OrNull` method? The default implementation would read `IsDbNull` followed by `ReadInt32`. A better implementation would combine the two such that you would only hit the underlying database-specific data structures once.
C# is a great language because the team has managed to maintain discipline and restraint when considering features for inclusion. So while these features mostly sound great, I'm as happy when features are postponed or cut as I am when they're included. It's all a part of the process. Scala, I believe, sometimes let curiosity and desire for features override the process and the language has suffered as a result. Scala has some features (eg, macros, traits) which I would love in C#, but it has some features (implicits) which I'm glad we don't have. Luckily, Scala and C# can learn from each other, so we can both see what does and doesn't work. Languages last decades and usually mistakes cannot be undone.
Same here. I sent one earlier. 
The whole point of `IDataReader` is to standardize the API for DB-specific providers. 
Yeah, in fact, why bother with this whole inheritance thing, let's all just copy and paste code into things everywhere.
I'd like to see some sort of separator await. So I can do foo.GetAsync().!GetBlahAsync()
If you need a list then create it up front. No need to create an array only to call ToList on it...:( If you need an IEnumerable the I'll concede the choose of construction :)
Yes, and I'm still waiting for the invitation.
Yea and in his use case of user ID, you should be using mocks
Can you post what you have? 
Why? As far as I can tell, the old delegate syntax doesn't hurt anything. 
Clutters the language and makes newcomers use the wrong syntax. It's a problem for C++
It's not "the wrong syntax". It does exactly the same thing as the arrow notation, so at worst it is a stylistic question. 
Don't be a dick, there's issues with removing all inheritance and there's issues with allowing multiple inheritance, the ideal is a balance between the two. My stance is simply that I feel that balance has been met, while others simply disagree. 
I think you should ask a more target question then just generally asking how you code something. Are you having a specific problem starting or don't know how to make specific line of code work?
Okay (Wasn't aware of that), I stand corrected. However, that means you're now talking about extension methods, not default implementations on interfaces?
Tbf Op would have been better of googling this, The top post is now the top Google links.. I deliberately chose not to post them myself, and provide an answer that would point Op in a more interesting direction. The guy is blatantly a bit of a noob, at that stage showing them different trade offs is more valuable use of my time than explaining the nitty gritty that they can Google for themselves don't you think?
Sure, I can write an extension method like this: int? ReadInt32OrNull (this IDataReader that, int ordinal){ if( that.IsDbNull(ordinal) ) return null; return that.ReadInt32(ordinal); } The problem is that there is no way for the database provider to override my extension method to provide a faster alternative that doesn't make 2 calls.
Legit lol'd at this. * "I have an assignment to create a puzzle" * "I've coded everything else." * "Deadline is in a few hours." * "Can someone teach me how to code a puzzle." 
Write the html to a file and save to disk, then you can reference it? And either have a daily cleanup or after the person exists
Haven't done much Unity so not sure, but wouldn't you also need to raycast from that position alonside the same direction the camera is pointing in order to be able to do mouse picking?
I believe it's kind of both. [This link](http://stackoverflow.com/questions/6754529/how-do-languages-scala-which-need-covariant-return-types-and-real-class-varian) implies the CLR doesn't natively support it, but there is a language-level workaround that could be supplied, if the C# compiler wanted to do it. But it hasn't yet.
Removed: Rule 7.
Of course not thats why his pogressbar is called progressBar1 and he writes a keylogger to keep its skills sharp ;) 
Hey Slack does not work based on links, I have to invite you at an email, can you provide one? In the near future I'll design a page so people can request invites.. for now I have to manually enter it.
What do you mean? It sounds like you've found exactly what you're looking for in that blog post, it even has links to the course it recommends.
https://commondatastorage.googleapis.com/itchio/html/201815/Release/Weather.js is causing 404 - which means the URL is wrong or you are missing some http headers which may be used for authorizing requests
Does it help if I say when I build there is no actual Weather.js in that release folder?
According to your error log, the request is being blocked because the browser does not allow mixed content ajax requests. You are hosted on https, but your ajax request is to a http url. This is not an issue in a desktop program. Luckily, the endpoint you want is available on https. Just switch the http to https in this address : http://api.wunderground.com/api/d33ba8071e6bde8b/conditions/bestfct/q/autoip.json so use this instead: https://api.wunderground.com/api/d33ba8071e6bde8b/conditions/bestfct/q/autoip.json
Removed: Rule 4. Regardless of google-fu, go through some tutorials and make an attempt. What you're asking to do in WinForms (or WPF) isn't too difficult and can largely be done in the designer window by dragging/dropping controls. If after making a concerted effort to achieve this you're still running into _specific_ issues, feel free to post a question outlining what you have tried and what issue you're facing. You can control individual controls' visibility, toggling them on and off when clicking the buttons.
After that change it still seems to leave me with the same count of errors http://hastebin.com/idotekapej.md https://gyazo.com/b702e821f8a5e391a61131b5b17262bd I really hoped all it would take was 1 difference in character haha 
&gt; Adding an interface that feels native to C# developers isn't that hard to do from F# either. I didn't really consider that, it would have made the implementation much nicer! Does it require much effort to keep the C# interface feeling like a first-class citizen? &gt; It really isn't playing to C#'s strengths to write really generic-heavy code Totally agree, I often felt like C# was actively pushing me away from generic code. &gt; For you, there appears to be a good chunk of surface area to document Thanks for the GhostDoc recommendation, I'll start adding more documentation and give it a go.
pasting this manually in the browser: https://api.wunderground.com/api/d33ba8071e6bde8b/conditions/bestfct/q/autoip.json shows 7 http links rather than https, could it be whats causing it? changing it in the code and then building it doesn't seem to matter somehow it still picks up http 
Yeah. F# allows you to add things that will feel comfortable to C# devs to your idiomatic F# code. [A little while ago I wrote an F# dice roller to turn strings like "2d6 + 9df" into dice rolls](https://gist.github.com/WreckedAvent/36553e62dc9012aa9d4d3089b4d8f9c8). However, this will actually be used in C# code, and it's not idiomatic to call bare functions in C#. So I added some [api](https://gist.github.com/WreckedAvent/36553e62dc9012aa9d4d3089b4d8f9c8#file-roll-fs-L580) methods and some [type extensions](https://gist.github.com/WreckedAvent/36553e62dc9012aa9d4d3089b4d8f9c8#file-roll-fs-L530). This way, a C# consumer can just do `Dice.parse("1d6").roll().reroll()`. If I was going to make into a public library, the C# interop points would also follow usual C# naming convention, e.g `Dice.Parse("1d6").Roll().Reroll()`. As you can see, all I pretty much did was define some type extensions which call my functional code with the `this` context passed to them! Since all of the types are inferred and everything, there's basically no maintenance cost to them. In unit testing, I can call my F# functional code directly to test the pieces in isolation (they all accept an RNG function, for example), but the C# consumer code doesn't need to be aware of that at all. Best of both worlds! I shouldn't say the integration is *seamless*, though. F# lists are single-linked lists and do not translate well to C#. However, F# arrays and `seq` translate well to C# (as arrays and `IEnumerable`, respectively). F#'s functions are also special and unique, but you can define a function in F# which accepts a usual delegate and invoke it. You also can't have any curried functions in a C# interface, but that's simple to change it to a tuple-accepting function, which C# callers will call like any other function which accepts multiple arguments. If you have any questions I'm totally open to answer them!
&gt; ChangeTheDamnSprite() +1 for expressing yourself xD
I got an invitation. Did you?
Seems wrong. Screen is 2D yes but world is 3D. Depending on where the Camera.main is. This third value of the 3D vector IS important.
Thanks. That's helpful. I found some free material on MVC in PluralSight, which is in my to do list for this week. I will share my weekly plan. And of course, the main purpose of this group to ask and receive help. Every little bit helps.
A quick notice, you did not use nested loops so you should probably look into the material once more and give it another go.
I was gonna reply with a combined post of the two answers given by both /u/alanwthom and /u/z4tz but I got distracted by a phonecall and they beat me too it. Keep up your work, look at their comments and you will get a good grade.
The criteria "nested loop" tells me you should probably be using two loops, one within another. You're probably supposed to generate the "XOXOXOXO" using a 2nd loop...
That definitely makes more sense, thanks for the heads up!
My first impression is that the variables names not completely indicative of how they are being used. As alanwthom mentioned, counter should be a bool. That would allow for some refactoring to make the code more concise . Also, using the plus sign to build strings is frowned upon. The first Console.Write should at least match the second one. But you could also use WriteLine instead of Write, then the line terminations are not needed. If you are going purely for conciseness, there is a lot of syntax sugar that can be applied to this problem to solve it in about 3 lines of code. :)
I'd already submitted it but it seems I tricked myself into thinking the if-else nested within the while counted as a nested loop for some reason. I had fun racking my brain to figure this solution out so I'm keen to figure it out properly using an actual nested loop this time. Thanks for the heads up!
Removed: Rule 4. Dumping a tonne of code (and not properly formatted for Reddit) and not being clear about how to help is not appropriate for /r/csharp. Narrow down your focus, better describe what your specific problem is, what you're currently outputting and what you expected to output. Learn how to use the Visual Studio debugger (e.g., https://msdn.microsoft.com/en-us/library/kya29xtx.aspx), step through your code, verify that your values are correct/expected, and trace your logic line by line until you find where it deviates from what you expected.
Yeah looks like I'll have to have a little play with it and incorporate another loop. 
Removed: Rule 4. I sympathize, but this is not appropriate for /r/csharp. Make an attempt and if you are still having issues, narrow your question, post _relevant_ code, describe the incorrect behaviour you're experiencing and describe the desired behaviour.
Just going for the correct answers at the moment, conciseness can wait for when I'm a little more experienced lol. I wasn't aware of string concatenation being frowned upon, or is this only in console applications?
Removed: Rule 7.
those 7 requests are probably related to browser extensions you have installed. The log file is pretty explicit about the browser blocking your weather json request because it's served over http instead of https. Not sure if that's your only problem; but it's definitely a problem.
Without having read the assignment I can only speculate on why the want you to do it with nested loops, but I suspect that it's because in the real world you wouldn't represent a chessboard with a simple string. You would use an object. With an object, you would need to initialize each one which would be most simply done with nested loops. So it would look something like this: (This is probably way outside the scope of what you're doing right now.) var board = new Piece[8][]; for (var i = 0; i &lt; 8; i++) { var letter= (i % 2 == 0) ? "X" : "O"; board[i] = new Piece[8]; for (var j = 0; j &lt; 8; j++) { board[i][j] = new Piece(letter); letter = (letter == "X") ? "O" : "X"; } } // output contents of board for (var i = 0; i &lt; 8; i++) { for (var j = 0; j &lt; 8; j++) { Console.Write(board[i][j].Color); } Console.Write("\n"); }
It's been two years or so since I've written WPF/MVVM, but here's what i recall. The biggest/worstest thing wrong is that the "DataContext" mechanism is not type safe, which means it's not compile time checked. Which means you don't spot broken bindings until runtime, if you spot them at all. This is unacceptable, but can be worked around via dependency properties. My group came up with a pretty good pattern that at least gave us design time feedback for broken bindings, which made a world of difference. The only criticism I have of MVVM is that it always felt difficult to keep it pure. No matter how disciplined we were, there were always moments where the model knew something about the view. I can't recall the specifics off the cuff here, but things like having a command that pops up a window is problematic. Because he has to know about the window, or be abstracted in some other way. Closing another window has the similar issues. Otherwise, WPF is in a word... verbose. But once you use it, you can't go back to Winforms. It's a huge leap forward. EDIT: Maybe just to add another thought or two. Early on we ended up with very elaborate and long-winded view models. It was very difficult to reason about and hard to follow. I think the largest problem that we had was that we did not adhere to the same programming principles in the UI as we did everywhere else. Mainly, in regard to the single responsibility rule. We often ended up with very large VM classes that had a lot of code in them. I attribute some of that to the use of the RelayCommand. Becauase your lambdas for the command are implemented in the VM, which does not separate responsibilities very well. So end the end, we stopped using relay command and started breaking our classes down more. I think WPF/MVVM was pretty easily organized and managed after these revelations.
A multiline function can be expressed as a lambda just fine: Func&lt;int, int&gt; f = x =&gt; { var t = x *2; Console.WriteLine(x); return x; }; You can even have lambdas with out/ref args, but you'll have to define a matching delegate, someplace: delegate bool TryParse&lt;T&gt;(string s, out T t); TryParse&lt;int&gt; f = (string s, out int i) =&gt; { try { i = int.Parse(s); return true; } catch { i = 0; return false; } }; I wish it were a bit more flexible about inferring types, though.
&gt; the "DataContext" mechanism is not type safe I used to think this was dumb, but sometimes its necessary to have different datacontext types associated with a single view. &gt; can be worked around via dependency properties. I agree completely. I personally hate INotifyPropertyChanged and would rather use dprops in quite a few instances. Sometimes i feel like i am doing backflips to keep MVVM pure, and it ends up being 100x more complex and "framework-y" code 
Looks like a chat server/client.
Xamarin Studio *is* open source. It's built from the MonoDevelop codebase.
My biggest criticism is the "best practices" all tend to feel oddly boilerplate-y. `INotifyPropertyChanged` is probably one of the biggest offenders, forcing you to change simple auto properties into explicit ones with backing fields and explicit logic that explicitly triggers the event. You can go through most parts of WPF and come up with the same critique. `ICommand` requiring a 3rd party implementation (`RelayCommand`) so you can use delegates with it is mystifying. Then holy crap xaml and converters. Have you tried doing an animation through xaml yet? Try doing a simple movement one through CSS3 then through xaml. It's night and day how much more verbose xaml is. Then there's weird, obscure problems, like context menus and MVVM not really working well together. I don't remember how or why, I just remember doing very dirty things to get context menus working in a "pure" setting. But, still, like /u/tonyl3000 said, it's better than what we had before, and the UIs are so pretty. Ultimately, it's a structured way of thinking about things, and you can see pop up in other areas, particularly in web dev (knockout, aurelia). 
I'm spoiled by ReSharper. I thought I've run into cases where it couldn't turn an inline anonymous delegate into a lambda expression, but it can always go the other way. If find an example I'll post it.
&gt;But wpf's animation is far more controlled and structural compared to CSS. I agree, everything about WPF is extremely flexible and powerful. There was *never* a time when WPF prevented me from doing something. But it feels like they forgot to make it easy to do simple stuff when we didn't need that flexibility. 
&gt; "WPF makes the complex easy, and the easy impossible" - *Some Person. Paraphrased. I only half remember this quote.* WPF is limiting in some aspects, but theres always a way to do it. and its very modularized, and everything is complicated but its consistent and makes sense. Whereas CSS/HTML is a series of patches with hundreds of unnecessary properties trying to keep up with what designers want to do, and everything has a trick to it that you would never figure out without google.
It takes a quite a bit of effort to find decent articles for the newsletter and it seems that people enjoys it here from time to time (I share it 2 monthlyish). Don't you still think it's useful for the devs and I should avoid posting in the future?
&gt; We ended up making a basic viewmodel base class so we wouldn't have to keep re-implementing INotifyPropertyChanged This can also be solved with AOP
&gt; I'm spoiled by ReSharper. Same. I can recall bumping into something ReSharper couldn't lambda-ize, but it's been a while, and at least one VS version ago.
One final point: whatever the mono version I always care about performance. The GC is one issue for sure but it's not the biggest. Frame-based programming can be nasty as you either do it in one frame or fail. Coming from a dsp and embedded system background performance is sort of second nature in any case. And I agree that this thread belongs on r/unity3d
With `CallerMemberName` you can just do `OnPropertyChanged()` if you're raising the event for the same property setter as you're in. But yeah, `nameof` still really useful if you're triggering updates on other properties. 
What are these secret folders? Do you mean those with the system or hidden attribute?
Awesome! Thanks!
As a programmer, I found the more I program the less pleased I am with my code. There's a constant struggle of the best way to write something and what techniques to use. In some cases a simple answer like yours is correct however if you wanted to change the X's to Y's it would be a little more difficult than if you used a nested loop. I can't really think of a use case where it would be necessary but when you're writing a lot of code that might need to be re used, making something re usable to a reasonable extent is your best bet. It's awesome to see someone keen on coding so keep up the good work. You're definitely going somewhere 
String.Format is very popular and makes it really easy to parse mentally
What do you mean secret folders? Try this public static class FileSystemExtensions { public static bool IsAccessible(this DirectoryInfo i) { try { var readAllow = false; var readDeny = false; var accessControlList = i.GetAccessControl(); var accessRules = accessControlList?.GetAccessRules(true, true, typeof(SecurityIdentifier)); if (accessRules == null) return false; foreach (FileSystemAccessRule rule in accessRules) { if ((FileSystemRights.Read &amp; rule.FileSystemRights) != FileSystemRights.Read) continue; if (rule.AccessControlType == AccessControlType.Allow) readAllow = true; else if (rule.AccessControlType == AccessControlType.Deny) readDeny = true; } return readAllow &amp;&amp; !readDeny; } catch { return false; } } public static bool IsAccessible(this FileInfo i) { try { var readAllow = false; var readDeny = false; var accessControlList = i.GetAccessControl(); var accessRules = accessControlList?.GetAccessRules(true, true, typeof(SecurityIdentifier)); if (accessRules == null) return false; foreach (FileSystemAccessRule rule in accessRules) { if ((FileSystemRights.Read &amp; rule.FileSystemRights) != FileSystemRights.Read) continue; if (rule.AccessControlType == AccessControlType.Allow) readAllow = true; else if (rule.AccessControlType == AccessControlType.Deny) readDeny = true; } return readAllow &amp;&amp; !readDeny; } catch { return false; } } public static void CreateIfNotExists(this DirectoryInfo i) { if (!i.Exists) i.Create(); } public static IEnumerable&lt;FileInfo&gt; EnumerateAccessibleFiles(this DirectoryInfo i) { return i.EnumerateFiles().Where(n =&gt; n.IsAccessible() &amp;&amp; !n.Attributes.HasFlag(FileAttributes.ReparsePoint)); } public static IEnumerable&lt;FileInfo&gt; EnumerateAccessibleFiles(this DirectoryInfo i, string searchPattern, SearchOption searchOption) { return i.EnumerateFiles(searchPattern, searchOption).Where(n =&gt; n.IsAccessible() &amp;&amp; !n.Attributes.HasFlag(FileAttributes.ReparsePoint)); } public static IEnumerable&lt;DirectoryInfo&gt; EnumerateAccessibleDirectories(this DirectoryInfo i) { return i.EnumerateDirectories().Where(n =&gt; n.IsAccessible() &amp;&amp; !n.Attributes.HasFlag(FileAttributes.ReparsePoint)); } } instead of your Enumerate|GetFiles and Enumerate|GetDirectories calls, try using these EnumerateAccessible.. extentions
Check the [`FileSystemInfo.Attributes` property](https://msdn.microsoft.com/en-us/library/system.io.filesysteminfo.attributes%28v=vs.110%29.aspx)
We have noticed that sometimes it becomes very hard to figure out what is going on between all the different viewmodels due to everything being wired up with notifyproperty change subscriptions. For example following things like a message coming in over the network populating a model in some repository. Then another viewmodel is watching that repository and wrapping it in another viewmodel to display in some sort of item control view. As you add more complexity if you do not manage your code well it becomes very hard to figure out how certain properties are being set such as why is this view not updating when i click. and it turns out someone put some filter on the message service to not add it to the repository or something like that, but did not realize it would affect another persons view/viewmodel
&gt; We ended up making a basic viewmodel base class so we wouldn't have to keep re-implementing INotifyPropertyChanged (along with some other things, like view "dirtiness" tracking.) Same here, but I'm really happy with the results. We even support two-level undo (IRevertableChangeTracking and IEditableObject) across object graphs and collections. 
I would recommend ServiceStack.Text, easy to use, supports just about anything you can throw at it with 'odd' implementations of REST https://servicestack.net/text HTH
PMed you
Seriously, though, I think the advantage is quite obvious -- what's less clear to me is the disadvantage. 
I did this but I have no idea what im looking at/for..
even without it doesnt seem to work
[Twilio's C# wrapper](https://github.com/twilio/twilio-csharp) is one to consider. The implementation feels a little boiler-platey but it's straightforward to use which is the biggest priority IMO.
My biggest problem with MVVM is that we over-emphasized "purity" to the point where we get into trouble. The rule against putting anything at all in code-behind is counter-productive. While actual state should be in the view-model (if not regular models), much of your UI logic should be in the code-behind for the window or individual controls. The worst offender is probably MVVM Lite. Specifically their `EventToCommand` feature which badly leaks memory. It is far better to just have a normal event handler that invokes a command or normal method. 
https://i.gyazo.com/8fdc60ce4ec3c4863e95e5dc2158c2d3.png this is where it seems to be at, does anyone have any idea what it could be? 
try googling harder http://answers.unity3d.com/questions/366157/mouse-click-to-world-space.html 
Thanks again. I was able to validate this approach and it works great. I've tested with a hardcoded URL for the moment, still working on the saving the diff to the DB part, but that's just a question of writing the code. 
Excellent! 
If you can't or don't want to change the design of the objects in question you could write something like: x.GetType() .GetMethods(BindingFlags.Public | BindingFlags.Instance) .Single(e =&gt; e.Name == nameof(IDestroyable.Destroy)) .Invoke(x, new object[0]); Or, more simply: dynamic x1 = x; x1.Destroy(); I didn't actually test these or even type them in an IDE so I might have some of the syntax/names wrong. But since you're talking about reflection in your post let me say the whole "MakeGenericType" dance is kind of a pain and it'd be cool if you could address objects as the root generic type.
It makes no sense for you to have your instance in an `object` in the first place. The other problems follow from that.
Gotta admit was confusing for me at first especially since a lot of books seemed to teach that as the way to do it
&gt; We ended up making a basic viewmodel base class so we wouldn't have to keep re-implementing INotifyPropertyChanged (along with some other things, like view "dirtiness" tracking.) That's why I love Fody, feels good to solve this by a simple attribute.
Perhaps you should add more information on string interpolation? This barely brushes over the most basic functionality. Most know about string interpolation, it's a dead horse at this point. You can still supply format arguments for example: `$"{1234.56m:C}"` There is also the possibility of using a separate CultureInfo which I think few are aware of. void Main() { WriteLine(Chinese($"{1234.56m:C}")); } public static string Chinese(FormattableString input) { return input.ToString(CultureInfo.CreateSpecificCulture("zh-CN")); } 
OP, is your reddit account solely for dumping your spam? Try explore and share something that's worthy to know about, not something that even VS or Resharper will tell me. Imagine how exciting your life if each news report tell you that you can breathe and walk.
It doesn't work no matter I launch it on the tile press or any other way. I've also tried, as you said, to put Task.Delay [[here]](https://github.com/MyPCIsBetter/Take-photo-by-tapping-tile/blob/master/TapTileToTakePhoto/PhotoThanApp.xaml.cs#L61) for a few seconds, but result is the same.
I think this is the biggest issue I've encountered with WPF. In a large application using two-way binding, the application state is implicit in its execution. There's thousands of places that mutate the state, so many that if you tried to make a graph of the dataflows, you'd get spaghetti. Sure, the code can look neat and simple, but you know you've got a problem when the dependency graph is so complex that you can write a cyclic binding and not even realise it. Interestingly, I think the problem is largely solved by unidirectional dataflow, an idea recently popularized in the JS world by React/Redux. Redux borrows a lot from functional techniques to tackle this problem. The big one is storing the *entire* application state as an immutable atom. Instead of mutating the state, you write reducing functions that take an application state and an action, and return a completely new application state based on that action. This buys you a lot of things. You can hang on to your old application states instead of throwing them away, and then, very easily, set up a slider that lets you "time travel" in your application. You can grab a list of actions, and feed them to a hundred instances of your application, all with different initial states, and inspect how the state changed at each action- really useful for testing or debugging. You can completely change your code, and have the application update in real time with all the state intact, but now running your new code- this really speeds up development. You can catch errors, and then automatically send a complete snapshot of the application state (complete with where the focus was, the text the user was typing, the clicks they used to get to that particular screen, etc.) and then play it back, allowing you to perfectly reproduce the error. These things are all extremely difficult when the state of your application (and how it changes over time) is implicit and scattered over hundreds of views. It's trivial when the state of your application is completely described by an initial state, a series of actions, and a single reducing function. 
 S to the P to the aghetti SPAGHETTI!
:) Most welcome. Anytime.
You can take it further and reduce it to : for (var i = 0; i &lt; 8; i++) Console.WriteLine((i % 2 == 0) ? "XOXOXOXO" : "OXOXOXOX"); but like /u/rybl said : "But at some point you're sacrificing readability especially as a beginner." 
Hello David Serafin.
Let me rephrase it, the files aren't secret, they are hidden
Redux itself is largely only relevant to javascript applications. However, the idea certainly isn't new, and is particularly common in functional programming. In C#/.NET terms, it's most close to some kind of event bus, only all of the handlers for those events are in one place, and they only operate on the same immutable data structure. If you know F# at all, it would be largely analogous to all of the state in your application being handled by one `MailboxProcessor 'a`. Since this might sound like it would result in an outrageously large handler, it's also common to "compose" redux reducers together, where one particular reducer is only responsible for one part of the application state tree.
A very entertaining article. I'm looking forward to the followup. I am currently working with Azure's ServiceFabric. Many challenges that are in the article exist there too, but I still believe it can't be the right architecture for certain projects.