Continuing the database idea, if you can mostly treat the data as a blackbox (i.e. serialize as XML, JSON, or binary and not actually look at it), then it becomes really easy to manipulate the records with SQL. If you do need to open the box, you can use C# inside SQL Server to handle that part. This is the kind of stuff that it's built for.
Sorry, gotta lock this. It was starting to get a bit out of hand.
[FixPointCS](https://github.com/XMunkki/FixPointCS) \- A high-speed fixed-point library. Supports multiple precisions, all commonly used math functions. Also transpiled to C++ and Java. Intended for creating deterministic online/multiplayer games, which rely on client and server being able to compute identical results.
What databases are you currently supporting?
They probably meant that they were showing an error or something for testing, and in production it should be logged properly / dealt with not just shown to the user. There is nothing inherently wrong with using MessageBox (apart from the fact it means you are properly still using WinForms, eww, learn WPF or UWP)
It is, but I'll probably switch from xUnit to MSTest once a couple more features I'm waiting for get implemented. I don't like some of the design decisions that xUnit made. Though I will say that xUnit's static code analysis is great. It really helps you to use the library in the way it was intended.
&gt; Consider using McMaster.Extensions.CommandLineUtils I haven't tried that one yet, but I'm pretty happy with **Mono.Options**.
I know this was just an example but hope your User objects aren't responsible for persisting themselves in real life :P
Let's say you have a piece of program that doesn't cause a bug while it runs whit the debugger attached. The programmer will add a [MessageBox.Show](https://MessageBox.Show)() in the code to show some information about the state of the program (variables values, etc) and run it without the debugger (outside Visual Studio). That shouldn't stay in production code, obviously. 
Ah ok that makes sense. Also, I am using WPF, there is a messageBox there too
For RawSql, all databases are supported as you are the one writing your own queries (and passing your own parameters). Like us, we used this to query data from SAP HANA. That methods includes: - ExecuteQuery&lt;T&gt; (returns IEnumerable&lt;T&gt;) - ExecuteQuery (returns IEnumerable&lt;dynamic&gt;) - ExecuteNonQuery (returns int) - ExecuteReader (returns DbDataReader) - ExecuteScalar (returns object) - ExecuteQueryMultiple&lt;T1,...,T7&gt; (returns QueryMultipleExtractor) For Non-RawSql like Query, Insert, Delete, Inline&lt;Methods&gt;, only SQL Server for now. I have written a IStatementBuilder for SqlServer (RepoDb.SqlStatementBuilder) which is by default plugged into the DbConnection, DbRepository and BaseRepository. However, one could create his/her own IStatementBuilder to cover the target Data Providers (like Oracle, MySql, OleDb, etc) and inject it in DbRepository, BaseRepository or in the actual DbConnection operations. Link is below. Link: https://repodb.readthedocs.io/en/latest/pages/statementbuilder.html
[removed]
The issue using messages box in production is that you never can guarantee that it will displayed properly and it doesn't stop user from continuing using the application. For examples : you send info to user over message box and it appears in back layer of the application (user doesn't see it). By that user doesn't get the information you did send him and continue doinh stuff. This issue frequently happens if user has multiple displays. 
Okay if you are using WPF then you probably shouldn't be using MessageBox (atleast not directly) - You should have something like an IMessageService injected into your ViewModels which you call. I guess that could then call MessageBox if your lazy although I'd tend to avoid mixing any WebForms into your WPF app...
Why do you so strongly say never to have an empty loop? An easy example that springs to mind is the official Arduino serial communication example: https://www.arduino.cc/en/Tutorial/ReadASCIIString That code says: void loop(){ while(Serial.available() &gt;0){ //Intake Serial data } } And therefore when there's not serial data, it will just loop doing nothing - which you say to never ever do. I'm just a little confused at why this is a problem. Just like the Arduino, I want to sit there doing nothing, until data arrives. The statements are shuffled a bit, but are functionally identical.
I was going to add unless you're working with hardware but then I would write why it's usually bad on hardware too. Wouldn't that kill the battery? Is there no sleep 10 or 50 milliseconds function? Is `Serial.available()` blocking?
I do with .net core. The method it used forces you (thankfully) into better coding techniques but I just want to reflect that with some of the larger, legacy projects
 Main MainForm = new Main(); You are creating a new Main. I think you want to reference the already existing Main. Something like Application.OpenForms\[0\] 
I hadn't thought of DACPACs, thank you - I'll look into this for sure!
Thanks! I see why it didn't work now, and why using Application.OpenForms\[0\] fixes it.
Are you doing this for work or for a home project? You would first make a stored proc that returns the data you want then design a SSRS report around it. You can then export the reports to different formats including, Excel, PDF, Word, Text, ect. You would usually host SSRS Reports on a SSRS Server. But you can also run them with .NET code without a server.
I would have suggested this. This works great for us. We have a lot of databases and DACPACs are great. We even distribute the DACPACs internally via Nuget.
I'll happily advocate for it. CQLINQ is a clever solution which underpins the rest of the app. I only use the desktop version. I'm re-engineering a huge .NET legacy app and there's no point shutting the build's quality gates if the horse has already bolted. I'd certainly recommend you give it a trial if you're in the tech lead/team architect area. The quality of the advice it can provide is really excellent. I'm not in the office for a few days otherwise I'd pop in some more information, but sign up for a trial.
I’ve been on dotnet for 5 years, and async/await was always the traditional way to write async
We just embed ours as resources in DLLs that contain the EF entities :-D.
Hmmm 399 per user? I will give the trail a chance. 
If you're using Visual Studio, have you tried C# Interactive? View -&gt; Other Windows -&gt; C# Interactive
https://docs.microsoft.com/pl-pl/dotnet/api/system.collections.concurrent.concurrentdictionary-2 
I don't know about C# for sure but both MIT and Stanford offer all of their courses online for free.
aha
I think you're going to need to elaborate on what "_this_" is?
Jumping from extreme to extreme is for sure the right direction! /s 
Yes, I have checked them out and as far as I can tell they are all in Python
Really? https://ocw.mit.edu/search/ocwsearch.htm?q=C%23 I seem to find a couple when I search for them..
You didn't specify the amount of reads/insertations/removes and you also didn't specify well the required operations. If you really mean that the collection has to be **ordered** (keeping the original order of items they were inserted) that has serious consequences. * (AFIK) .NET only has a non-generic OrderedDictionay type and no generic version of it * If keeping order and fast retreival insertation is important, then you have to choose a balance between the three. It is hard to achieve all three at the same time. * You probably have to write a composite collection wrapping both a LinkedList and a Dictionary type of collection, where the LinkedList keeps track of the original order and the Dictionary ensure fast random lookup: * In the Dictionary I would store Key-Value pairs where the Value is a LinkedListNode which conatins both your Data of interest and pointers to the next/previous LinkedListNode item in the order they were originally inserted. &amp;#x200B; &amp;#x200B;
Sorry, thought it was obvious. Basically I'm trying to have a list of local Snappoint base class references and use their functions with a foreign Snappoint reference. But when I call the "CheckCompatibility" I want to use the respective child functions of their classes depending on which child class the local Snappoint is. I want to get rid of checking and casting the variables into the different class types if possible
Great article Chris. I always find myself understanding async/await when I write the code for it, but few months lapse where I dont have to write async/await stuff, then my knowledge feels like swiss cheese. I made a demo WinForms app from your article and will save it to help my memory.
I do not hire people, so I do not know how to spot potential/talent in people. That being said, from a purely technical pov. No I would not. The technologies you mention are old. It has been nearly a decade since webforms was the recommended way of doing websites. Mvc is not that unheard of, but most people make single page apps using some java script framework and a Web api. If I were you, I would catch up using a learning site. E.g. Pluralsight. And if it is relevant, get some certificates. I.e. I Denmark no one cares about certificates. So I won't strive to get one. But I have to the US people care a lot
WinForms is my simple Windows UI fetish, no kink shaming.
You can find implementations of given algorithm in a lot of languages, especially if those are basics of CS. On those courses I do believe that you should just get into concept without focusing on implementations details.
I wouldn't focus on language. Focus on those things you mentioned. A language is nothing but a tool. I feel your lead is doing you a disservice by focusing on language differences. 
If you read the article it explains all concerns and comes from someone highly respected. It's a personal decision, in a fast paced environment I've found unit tests don't catch many bugs and delay development.
And these are useless exams that you should only pass to check a box when needed so what does it matter? :)
I downloaded these ones for free [https://www.prepaway.com/70-483-exam.html?gclid=EAIaIQobChMIutCcvcmL3wIVJ7XtCh13DwW5EAAYASAAEgIySPD\_BwE](https://www.prepaway.com/70-483-exam.html?gclid=EAIaIQobChMIutCcvcmL3wIVJ7XtCh13DwW5EAAYASAAEgIySPD_BwE) You run them in the 'ETE Simulator' software. [https://www.vumingo.com/exam-testing-engine.html](https://www.vumingo.com/exam-testing-engine.html)
You should use something like [BenchmarkDotNet](https://github.com/dotnet/BenchmarkDotNet) for measuring.
Thanks, I'll look into it
Wow! I didn't knew about it. Now I try.
Not all applications run on battery. And in many applications that do, the microcontroller is drawing a very tiny portion of it. But if you're using serial communications, it's almost always coming down USB from a computer, and that computer is supplying effectively infinite power anyway. There is indeed a sleep function, but without power limits there's not much benefit in that. Additionally I don't think saving power is sufficiently beneficial to warrant a "NEVER EVER EVER IN ANY PROJECT IN ANY LAMGAUGE" declaration. Serial.available is not blocking - it returns how many bytes are available to be loaded from the serial buffer.
&gt; There is indeed a sleep function, but without power limits there's not much benefit in that Heat? &gt; Additionally I don't think saving power is sufficiently beneficial to warrant a "NEVER EVER EVER IN ANY PROJECT IN ANY LAMGAUGE" declaration I still disagree. Even in your specific case of running code on hardware without an OS and being attached to a power source I still think it's bad. If anything write a (preferably library) function that blocks until your data is ready. I'd be scratching my head wondering WTF you're trying to do and what your actual intention is if I saw a line like that 
Do you think learning to code is a waste of time now? There was a big push to do it, but I read recently that the skill will be obselete in a few years.
I honestly don't know -- haven't checked. I was just looking to make sure I had my release dates right for my post (and that I hadn't accidentally missed a release or something) and found the announcement on GitHub that it required VS 2019 Preview 2. I also haven't looked at the difference between file formats. It's possible it's a format thing, but it might also be that there's some feature of C# that 2019 natively supports.
The latest SQL Server even provides native support for JSON and XML querying. Performance won't be as great as plain relational querying, but probably better than anyone here can do on their own :) https://docs.microsoft.com/en-us/sql/relational-databases/json/json-data-sql-server?view=sql-server-2017
&gt; strings are immutable Not exactly.. You can get funky in unsafe land. Like allocate yourself a 100 character string, pin it, write a few characters. Then write *behind* the pointer to set the correct length of the actual content in that string. Now it works fine, just like any other string (be sure to put a NUL after the last character if you're marshalling it). When you're done, you can take the string back, change the content, set the length again, and re-use it. You'll keep those 100 characters always allocated. In general, if you can limit the possible input states, you can find ways to beat general purpose code - even StringBuilder.
Give your snappoints an interface, treat them as that in `FilterSnappoints`, and call the method.
1) I'd use an interface rather than a base class unless you plan on including common code in the base class later (rather than just defining function signatures) 2) I'd move foreignSnappoint.GetType() != snapp.GetType() into the CheckCompatibility function, it will make the code read better. 3) Unless I'm missing something obvious, the code should work without all the castings as is. You should be able to just do foreach (Snappoint snapp in snappoints) { if (foreignSnappoint.GetType() == snapp.GetType() || snapp.CheckCompatibility(foreignSnappoint)) { possibleSnappoints.Add(snapp); } } &amp;#x200B;
Would calling the interface function on the general reference call the specific implementation in that case?
What were the string lengths? Setting the capacity has the potential to provide better performance in the case where StringBuilder was having to allocate additional memory during the concatenations. public StringBuilder (string value, int capacity); or public int Capacity { get; set; }
&gt; There are talks about this feature being postponed to a minor version after 8.0 is released, as it might not be ready for the major C# 8.0 release. It almost certainly won’t ship in 8.0. And probably not 8.x either.
Stop thinking like that, it’s defeatist. Software companies consist of average people with a couple rock stars here and there. You also mentioned you finished this project? I tend to see it more as a start. If your project gains traction you’ll be expected to bug fix and extend assuming you want to. Linus Torvald ate Microsoft’s launch with Linux and Git. He’s one super smart guy that surrounds himself with other smart folks. Don’t under estimate yourself. Also, federal jobs pay shit, come join us in the private sector and get paid.
15672 hosts the HTTP admin UI. You also need to forward port 5672 to localhost for AMQP traffic.
Basically, you want an SQL database.
Is a little bit confusing for me, but how? RabbitHutch.CreateBus("host=localhost**:5672**"); That way?
No, the default port is 5672c which is implied by leaving it out. The connection string in your application is telling the library how to connect to RabbitMq. You need to check that the Docker container running RabbitMq is forwarding port 5672 to localhost.
This is the docker inspect of my container: https://gist.github.com/pachecoder/4065460e01544b145fae49c17476dcc8
There’s the smoking gun. Check out the port bindings section. There is one for 15672 set up - this allows your web browser to open a TCP socket and make HTTP requests to use the admin page. You need another port binding set up to forward port 5672. RabbitMq clients connect on this port using AMQP to send messages. You need to add another argument to your docker start command or docker file - check the docs for how to do this
Yeah, I literally had the same issue an hour ago. It’s fine if the container hosting the service and the rabbitMQ service are both running on the same docker network, but to access the rabbitMQ container from “outside” you need to bind the port. Just add another -p 5672:5672 to the docker rub command when you spin up the container.
Oh yeah. Mono.Options is another great library. I've used it in the past and found it to be very good. I've been using CommandLineUtils lately because I like its support for subcommands. Mono.Options is definitely great, and I'd recommend OP give it a look.
That's interesting. MSTest is one test framework that I haven't looked at for quite a while. What does it do better than xUnit that make you want to switch?
The article was good but other than a shortcut for creating a readonly class I don't see the architectural significance. I mean if I am passing around some kind of args object now will using a Record buy me anything?
It's like data class in kotlin or auto value in Java. Think of it as a standard implementation of a read-only class + shortcut.
Thanks you my friend. It works now hahaha "NetworkSettings": { "Bridge": "", "SandboxID": "d27b73f0c8c9001195c0538b5ac5623cf0ec5b2e57f5fea33e2464ab57f5829a", "HairpinMode": false, "LinkLocalIPv6Address": "", "LinkLocalIPv6PrefixLen": 0, "Ports": { "15671/tcp": null, "15672/tcp": [ { "HostIp": "0.0.0.0", "HostPort": "15672" } ], "25672/tcp": null, "4369/tcp": null, "5671/tcp": null, "5672/tcp": [ { "HostIp": "0.0.0.0", "HostPort": "5672" } ] } Docker command: docker run -d -p 15672:15672 -p 5672:5672 --name your-docker-rabbitmq-image rabbitmq:3-management
Ayyyy
Your right.
ManagedEsent
Easier immutable data types is always great, but how are we supposed to add methods to these classes? Extension methods only?
Exactly! :)
Thanks, I'm glad you liked it. &amp;#x200B; No it wouldn't give you anything more, except maybe make your life a bit easier. &amp;#x200B;
Really good questions, I am looking forward to answers to that as well. It would seem a bit odd, that everything falls apart just because we have small changes to it. &amp;#x200B; But I guess it remains to be seen.
&gt; but how are we supposed to add methods to these classes You essentially aren’t. Record classes are sort of in between tuples and proper classes. They offer some more flexibility (while still requiring little boilerplate).
subcommands? 
1. All assertions have a `message` parameter. 2. `Assert.Inconclusive`, which is really useful for integration tests.
Impossible to say without knowing specifics. Readable code is often more important than speed, and "easy on the eyes" is almost entirely subjective. If you're cramming a lot of functionality into a single multi-line statement then you should consider breaking it up. If your functions are more than 100 line then break it up. Make sure that you add comments.
Interesting, thanks. I'll have to give MSTest another go.
*First off, let me state that my boss is a very whip-smart person* Ok *by boss doesn't understand C# past the 2.0 spec. They don't understand extensions, lambdas, await, or even what unit tests are.* Ummmm, ok *They haven't learned a new language since they left college using VB6.* ಠ_ಠ Don't waste your time. Look for somewhere else where they can help you grow as an engineer, not the other way around.
Take the git CLI for example. You always start at `git`, but then you're executing a command from there: `git add`, `git commit`, `git rebase`, etc. Each one of those commands may have a different set of arguments available to it. The CommandLineUtils library makes it pretty easy to have as many layers of commands/subcommands as you want. [Here's a simple example](https://github.com/natemcmaster/CommandLineUtils/blob/master/docs/samples/subcommands/builder-api/Program.cs) showing an app with two different commands ("set" and "list"), each with different command-specific arguments.
Yeah, what? They're reviewing c# code with a background in vb6?
(going to stick with 'they', not clear if it's just one boss, or multiple people) They should definitely be brought up to speed on current standards and practices, and it's likely you'll need to do it for them, in pieces. Maybe see if they'll spring for a Pluralsight license for you, and for the videos you find super helpful (that also happen to totally back up what you're trying to show them), get them to watch it? The other way to justify the changes is to connect certain styles to "technical debt", and use words like "stability". You'll never win a "readability" argument with these guys. &amp;#x200B; It also sounds like you're the sole developer, getting another dev in the mix would help a lot, even if it's a co-op or something. It makes you sound less crazy to them when \*anyone\* else in the room backs you up. &amp;#x200B; At the same time, please consider that they must own this when you are long gone (and chances are they're going to out-last you at this company), so if some of this stuff is making them uncomfortable, it's because they worry about supporting it.
So you mean we will have short hand structs? Whatever... Need unloadable assemblies and other stuff; they keep screwing us over because we wrote our app 3 years ago (Core)
Ok, Old Guy here. When I first started coding all tables were in separate ISAM files on a hard drive and you were only allowed to have two file handles open at time. I've been through COBAL, DBase, Clipper, VB, C, C+, C++, etc..., etc... etc... so I have a little bit of insight here. One of the hardest thing for us old guys to wrap our heads around is why the hell you are coding something in one line that requires the CLR to drill through 23 layers of .net namespaces when you could use 10 lines of native code that are more readable and run twice as fast. I have seen COM, OLAP, VB6, and a dozen other standards come and go so just because Microsoft says this is the way you are supposed to do it doesn't really carry a lot of weight with me. What I do understand is code. You said this guy you are working for is whip-smart. If he is a Jack-Ass I can't help you, but I am working right now on a major C# project following all of the current MS standards and fully recognize the benefits that go with all this "new-fangled crap". What I will not stand for is some twerp with a CS degree that thinks he "knows" more than I do because he watched a Youtube video about what's new in C# 7. Listen to your elders child. If you have a better way of doing something show me, I'm all ears. But for god's sake pay attention, sometimes there is a reason I'm saying I don't want you importing Automapper from Github in this particular project. If you are patient enough then when you get to be an old guy, you can be a pain in the ass to the new developers too. 
Really interested in how extensible record types are, Hopefully we will be able to add extra methods to them. This would be especially useful if we could set the access level of 'With', i can think of many scenarios where i could want something like: public class UserState(string username, int age, bool isOnline, MyEnum type) { public UserState Login() =&gt; this.With(isOnline: true); } Similarly allowing a private constructor so you can't initialize a record in an invalid state. You could do this with with extension methods but then you wouldn't be able to enforce how the record is instantiated or altered.
this sounds heartfelt. personal. on a personal note as well, I hate the "new way" as well with heavy frameworks and interpreters that try to compile code on the fly, and software built with internet browsers as their UI engine and all that jazz. it makes zero sense. I love C#, the language and its features, but I hate the bullshit around it.
I would be totally stumped as well, because I can't handle a boss that can't handle a 2-ways discussion. I just nod, grumble and swallow down my frustration. Hope you either find a way to make it liveable or find a different workplace.
Thanks for the tip, I think I understand what you're getting at and while that's defs a way to get the end result I'm after. It describes a database with two separate and and "unrelated" tables (think: no foreign keys). Right? I'm trying to go about it they way I am because I want to build skills in working with relational databases using EF Core. &amp;#x200B; Also I hear good things about Pluralsight :) I'll have to sign up.
Uhh what would be a use case for this? 
So I'm assuming all your posts from your profile are automated? 
no... at the moment this what responding to a get todo looks like: // GET: api/Todo/5 [HttpGet("{id}")] public async Task&lt;ActionResult&lt;Todo&gt;&gt; GetTodo(long id) { var todo = await _context.Todos.FindAsync(id); if (todo == null) { return NotFound(); } return todo; } my expectation (which might be wrong) is if the relational database is setup right the Notes property of the todo should be the related notes...
You've worked for a lot of awful companies.
\&gt; First off, let me state that my boss is a very whip-smart person. &amp;#x200B; \&gt; But, what I'm calling help about is by boss doesn't understand C# past the 2.0 spec. They don't understand extensions, lambdas, await, or even what unit tests are. &amp;#x200B; That's a contradiction. You're at a shit shop. Do the best you can, be friendly, try to stand up for your code but do what your boss says. While doing that, look for another job.
It is relational. One table contains keys that relate its to data in another table. I think you might be over thinking it just a bit, which is understandable because relational databases can be rough to get a hold of. If you think about it as: you can’t add columns, only rows, it starts to make sense. You 
 They've been doing what they do forever, they don't want to change, they're not going to listen to you. Honestly, you'd be doing yourself a favor by finding a new job. If you stay there to long, then you'll be really great at C#2.0 but that won't do you any good unless you plan on staying at that company forever. 
I can see that as being useful. 
I was at a software shop, promoted to lead architect and my peers of other architects didn’t like lamdas or anything “that made the debugger bounce around” delegates an anonymous functions scared them. I left. Best choice ever. If he’s not receptive or willing, and it’s not a misunderstanding/miscommunication between him trying to say there’s something your not considering... What’s the old saying.. you can lead a horse to the water, but can’t make em drink? 
Is there a reason as to why they haven’t looked past the 2.0 spec? It could be a valid perspective if (for whatever reason) the software being developed has to run on systems that only have ancient versions of .Net.
&gt;Listen to your elders ~~child.~~ &amp;#x200B;
I would say that “best practice” is not async, lambdas, extension methods but rather coding in a consistent manner across your application. I have worked on some pretty old code bases and would personally find it jarring if I randomly came across async...await and lambdas in an application that is using ado.net everywhere else. The newer language features exist to solve problems and make it easier to code cleanly. It doesn’t sound like there is a problem with the current code and it would confuse things more to have mismatched code everywhere. At the end of the day, your company is paying you to write code for them and not looking for a consultancy about current trends. If it is that important to you, look for a different job. 
Seems like you could use a record for a classes internal state and then still have control over the constructor in the wrapper class. Dunno if that’s worth the effort vs a single normal class. However I do agree records need to be extensible with methods and properties that can be added. Records feel not quite ready in their current form imo.
It absolutely should. You can also do this with pure inheritance, though, checkout the [MS docs on Polymorphism](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/polymorphism). Specifically, see how they have various shapes derived from `Shape`, and store each new'd object in a `List&lt;Shape&gt;`, and then iterate over it, calling each object's `Draw` method, which invokes the desired method.
Thanks, I see what you're saying. There's a column in notes which contains information about what todo entry it relates to. *That is the relationship defined*. Therefore when I want to get all the notes related to a particular todo it is as simple as *get all notes which have the right value for the todoId property*. &amp;#x200B; It's confusing, and I am quite likely over-thinking it because none of the examples seem that simple, and none of the docs seem that simple either! argh! :/ [https://docs.microsoft.com/en-us/ef/core/modeling/relationships](https://docs.microsoft.com/en-us/ef/core/modeling/relationships#fully-defined-relationships) [https://docs.microsoft.com/en-us/ef/core/querying/related-data](https://docs.microsoft.com/en-us/ef/core/querying/related-data) [https://docs.microsoft.com/en-us/ef/core/saving/related-data](https://docs.microsoft.com/en-us/ef/core/saving/related-data)
That is a possible workaround. The biggest advantage of the record syntax (IMO) is removing the annoyance of mapping all of an objects properties into the constructor of another. You could add getters to the parent for your read model and keep the record itself encapsulated. e.g. `public UserState Login() =&gt; new UserState(this.record.With(isOnline: true));` I would prefer to have it all in one class but i would deem that an acceptable solution and certainly preferable to the current situation.
Find another job.
&gt; Listen to your elders child. Sorry bud, if someone doesn't know what unit tests are, they are not an elder, They're just old.
You have *entirely* too much ego. Your post drips with it. Your employers privacy could stand to update their knowledge. But that's not for you to decide. You need to code in such a way that other developers in the company can support the code you wrote. You don't always get to use bleeding edge features in production code bases. If that is unacceptable to you, find a new job. When you have established trust, then you can make the case for using x or y feature. They might actually be receptive to it. Whatever application you're building, it probably doesn't need lamdas or extensions. Stop trying to be the smartest guy in the room.
If your boss doesn’t understand... your boss doesn’t understand. Your boss shouldn’t be managing C# programmers. As is... you may as well be macro managed without the weekly reports. 
Look for a new job. Honestly do yourself a favor and move forward with your career and get out of there. 
I run into this a lot at my current contract, bringing some old MVC apps to .NET Core. Rather than giving them the chance to critique I try to explain in my pull requests certain things I know they may not understand about C#7.3. I answer questions before they are asked and I do sessions from time to time where I explain the new features in the pipeline and why they are good for the C# language and how they can be used going forward.
I am commenting here as a senior programmer AND a director of technology. Never, ever smile and nod as your boss bashes your work unless it's genuinely bad and you deserve it. If it's actually good work and they're bashing it, this will be reflected in your pay, promotions, and your continued employment with the company. Remember that this is the person who has the power to decide how much you earn, what your annual review says, and if the company is going to institute disciplinary proceedings against you. You basically have two ways forward here: * If the boss is a good boss and will listen to what you say, you can tell him that you feel that his criticism is based on an older view of the language specs and that you have written excellent code based on the current design of the language and Microsoft's recommendations for using it, that his criticism makes you feel very negatively about your job and your working relationship with him, and that if you are going to be a programmer in 2019 who is employable not only at this company but at future jobs you need to program like it's 2019, not like it's 2002. * If you think he won't react well to the above, you can look for another job and leave the company. I'm serious when I tell you that if you stay at that job for a few years and continue program like it's 2002 forever you will find yourself becoming unemployable and have to take a demotion when you go elsewhere. If he's a decent boss he'll listen to you. If he's stuck in his little 17 year old world and convinced that technology will never change, you need to get away from him. At my last employer they had some VBA code they won't let me eliminate (an original employee of the company had written it and he had been promoted by seniority to VP of technology) and they decided that since they couldn't hire any programmers to maintain it any more (the tech was too old, nobody does it any more) they would just tell the entire programming staff that we had to learn VBA and we'd be switching to VBA and writing all new code in that. (VBA was last updated in the early 2000s and microsoft had dropped support for it 11 years before we got the order.) We got together, discussed it, nobody could see any career future if we did that, so the entire department told them "uh... no, we'll all quit," and their order was just magically forgotten.
Agreed. Easy as in descriptive naming, but not overly long names. Lots of comments on "why" this piece of code is here. I also tend to do no more than 1-2 methods/extensions per line..
Okay.
Heh, flashback! I remember the two file limit back in my Pascal days! "C+"? I don't know that one..?
Agreed!
Danke.
"They" as in them-singular. Don't want to get her in trouble. Good points, thanks.
Well, maybe I was too restrictive on the '*new*' languages part. They have been learning Microsoft's SQL..
What do you mean?
Oh, I'm definitely not the smartest guy in the room. The other guy is. And whipper-snapper more so than the boss is. I don't think there's too much ego showing here. Just **decades** of *constant learning* to back it up.
&gt; Your boss shouldn’t be managing C# programmers. Good point, thanks.
Using them at all is kind of an attitude/approach. Part of that attitude respects something *Code Complete* said that I didn't like at first but came to agree with over the years. It suggests classes have two type: data classes and logic classes. Data classes have properties, but not methods. Logic classes act on data classes and have methods, but not properties. So the way you "add methods" to a record type is to make other types that act on them. It kind of makes sense from a functional standpoint: the immutable record is the input to some class's method, and the output is some new immutable record that is the result of a calculation. There's lots of argument about whether that's the best or even a good way to approach development. I think that happens because it takes a long time for people to reach a maturity level where they realize there's other domains besides their own, and those domains might require different approaches.
/sigh, if I only had a team to work with.. hehe!
&gt;I've been through COBAL, DBase, Clipper, VB, C, **C+**, C++, etc..., etc... etc... so I have a little bit of insight here. &gt;Listen to your elders **child.** You just obliterated all credibility and respect you could have garnered. C+ is not a language and never was, and being rude to someone asking for help by calling them (an adult like you) "child" does not make you seem wisened and knowledgeable, but rather like an asshole. So congrats, you suck as a person and are either a liar or are not as smart as you think you are.
Overall consensus of your replies: Do good work, but look for another job. Okay. Thank you everyone!
&gt; 100 line What. Unless you have gratuitous whitespace, that should be *maybe* 20 lines.
It sounds like your boss got into management and should *not* be the person reviewing your code. I'd argue even C#5 is quite old now.
&gt; "C+"? I don't know that one..? It's because he's full of shit.
First off I want to say from my experience of bosses you don't explain anything that they don't care about. Will only get you into trouble and I had a knack of getting myself into trouble. Next thing is ask if the most senior person on the team (other than you if you are) can review your code and that language features are to reduce error prone bugs. Then the hard part, shutting your goddamn mouth. If he won't listen he won't listen and you can either accept it or look for another job with a likely worse boss. There's always problems and if code review is yours you have a pretty minor problem. If he does want to learn the syntax you can explain the MOST COMMON use for it and why. For example with lambdas it's common to do a where with a variable inside of the function and chain it with something else. Might be helpful if you do two things like where+orderby, or select if you want to show its using generics but that might make things worse. It's much more clearer to have a lambda rather than make a class holding the variables you need and using the function as a callback. For await you're out of luck. If it was my boss I'd tell him that it's 'idiomatic C#' and tutorials use it. It'd be more confusing to people if you didn't use it. I personally don't understand await so I can't suggest how to explain it but everything else I can possibly give hints on Or you can suggest your code be reviewed by senior developers as I previously mentioned.
&gt; I don't think there's too much ego showing here. Just decades of constant learning to back it up. That's called pride.
Where does the confusion come from? You didn’t finish the sentence. 
Your boss is an [expert beginner](https://daedtech.com/how-developers-stop-learning-rise-of-the-expert-beginner/). Find a new one.
&gt;I've been through COBAL, DBase, Clipper, VB, C, C+, C++, etc..., etc... etc... so I have a little bit of insight here. When I was in college the dean of my department had a pin that said "with your help, we can stamp out COBOL within our lifetime." I'm aware of the language and I've read it but never had to program in it. Other than that I did my time with your whole litany of languages. Actually my language list is 3 lines long... I've forgotten programming languages you've never heard of. (And created several myself, I used to work for a language design company.) &gt; One of the hardest thing for us old guys to wrap our heads around is why the hell you are coding something in one line that requires the CLR to drill through 23 layers of .net namespaces when you could use 10 lines of native code that are more readable and run twice as fast. The fact that we old folks have a hard time wrapping our heads around it doesn't make it *wrong*. One of the things I have had to accept over the years is that computers are an imperial buttload faster than when you and I went to school... I remember them teaching how we had to optimize the order of our loops for speed, and we had to release variables whenever they weren't used so the memory could be de-allocated. There were serious constraints on CPU speed, disk space, and memory, and we had to pay attention to them. These days, the biggest constraint on the entire process is *programmer time*. If a programmer produces code quickly, and it's readable and someone can come along later and read it and maintain it quickly, then it's great code, even if it's perhaps not 100% the most efficient ever. Yeah, I've seen code recently that has to be efficient. I wrote one just 5 years ago that produced a quarter billion database records per day (on a light day) and it had to be fast, fast, fast. Things like that are very rare now and the programmer who can do them probably knows that that's a special case and 99% of the time their time is better spent producing readable code quickly instead of extraordinarily tight efficient code which requires more thought and planning. &gt;What I will not stand for is some twerp with a CS degree that thinks he "knows" more than I do because he watched a Youtube video about what's new in C# 7. I've worked with a guy who had a newly minted CS degree from MIT, on his very first day on his very first programming job that I had to teach to un-learn how they did it in school and teach him how it's done in the real world. (He's now VP of technology at a small firm making software to help heart attack patients test themselves at home, and he kindly credits me with his success.) I've also worked with a guy who has been programming since before I was born, who actually had a lesson from Grace Hopper once, and had to teach him basics of object oriented programming. What made me able to work with both of these people was to recognize that they both knew something and had something to contribute, as did I, and that it was my job to help them understand the real world and to fit in, not to look down on them or their skills. MIT guy had excellent technique and knew how it's supposed to be done "the right way" so he could help us know when we were deliberately choosing to do it some other way. Grace guy had 45 years of experience to draw on. &gt; Listen to your elders child. That's condescending as hell and I know that if you took that attitude with any of my people - let alone me - you'd be laughed out the door. I've been able to achieve great things together with them by listening to them, communicating with them what my thoughts are and why I think as I do and what their thoughts are and why they think as they do and weighing the merits of each together. Sometimes they decide I'm right and stop me before the conversation is over and go do it my way. Sometimes they convince me I'm wrong and we do it their way and I've learned something. A key to this process is the understanding that I will listen to and respect their opinion, that sometimes I will change my mind and want it done their way, and that I rarely ever just put my foot down and say "do it my way". (And even then if they want to tell me why my way won't work, I'll listen.) &gt; If you are patient enough then when you get to be an old guy, you can be a pain in the ass to the new developers too. My father has a sign on the wall in his kitchen that says "retirement is god's reward for never killing your boss". On one hand, this is kinda true. On the other hand, retirement is god's reward for being the kind of boss that nobody wants to kill. 
If he's not up for learning things, you're screwed. If he's willing to learn, teach a little bit at a time as examples come up and explain why you decided to use some new stuff. &amp;#x200B; &amp;#x200B; He would really like Golang I bet.
Na
The more the framework does, the less the programmer has to do. The less the programmer has to do, the more they cam accomplish in the time they have, and the more they can debug it. Many programming tasks these days are lightweight things that mostly glue some frameworks together and accomplish something a team of programmers wouldn't have had time to do before. Interpreters are not a new thing. I learned about them in the 70s. There are both benefits and drawbacks to both interpreted and compiled code. You need to learn about those benefits and drawbacks to make an informed decision about what technology is ideal for a task. A web browser is just a UI layer the way a framework may include a UI layer. It's often a lot more efficient in programmer time to just write a web UI than to write a program with a native UI. Also, this then gives the advantage that the software can be made to be accessed remotely, and the client hardware can be more or less anything instead of having a native app that only runs on the native machine. There are sensible reasons behind all of these things. You can *choose* not to use them, as is appropriate for your task. When you merely dismiss them as bullshit, you merely show that you're not having a rounded view of the technology and we can't trust your programming skills because of that. 
hehe, I noticed the COBAL too..
The confusion comes from because none of the examples seem that simple, and none of the docs seem that simple. Same reason why I am overthinking it.
wow, nice.
Oh I misunderstood. The way I look at it is you should do what makes sense to you, the way I explained it makes sense to me so that’s how I design my tables. I encourage you to make diagrams with pen and paper of the objects and their relationships to one another and design the tables that way. When you build the tables from the model what does the table look like if you open it up in SSMS? That may help illuminate some design decisions that ef used to create the tables. 
I'm adding my voice to the choir. You're stuck in a quagmire. Leave while you still can.
It sounds like you should work elsewhere. 
I hope the GetHashCode implementation is better so that a record with (x,y) doesn't have the same hash as (y,x) as the sample code (sum of product times 17) does.
Okay!
There are no record types in C# 8. This article is not reflective of current thinking on the subject, but it is an interesting subject.
Sometimes it's hard not to take PR's personal. You'll always get more criticisms about personal preferences over possible bugs. Always think through what you're writing and be sure that you not only know why you're doing it but be sure you can clearly communicate why you're doing it to others. If your code follows the SOLID principals, has a clean design pattern, is self documenting and easily testable you're just fine. 
Nah com is gone, no one uses direct x... /S
look, i'm not dumb, i know these frameworks and new tech are useful and have some huge benefits, in many use cases. i have found programming to be much less painful since i've started using C# (as opposed to C++), but it's really the language mechanics, the way libraries and linking is handled, and the interaction with the dev env that won me over. can't i have my opinion on these things? geez! now you're free to continue smashing down people if that's what makes you tick. i won't. *(as for the OP making mistakes on languages, i noticed, but decided to assume they knew what they were talking about and only made typos)*
Tell your boss he is a shitsack loser and to mind his own damn business. Leave the coding the coders and the "management" aka meetings to the coasting managers. What a dick.
You can professionally tell him modern C# has grown past 2.0 quite a bit and it's worth brushing up on what's new. He is either open to the idea or not. If he is open to it, you can work with that quite a bit. Being in a position where your boss is looking to you for advice has it's perks. On the other hand you probably won't get much helpful feedback from your team and may end up being a one man show. If he isn't open to it but has a, "just make the code work" attitude, that's also not terrible as long as he back off with the, "I don't understand" line of questioning. If he isn't and wants you to do it C# 2.0 style, it's time to update your resume.
There is also c# interactive command line tool, csi.exe, that should be on your machine if the c# compiler is there. You can get it to run c# script files (.csx) instead of being interactive.
This!
Okay?
[Demo Video](https://youtu.be/qi3qBzsddcI) and subscribe for more info as we work more in this implementation.
Wow! Really nifty algorithm you’ve got there!
I feel you! My boss has no clue about oop bcs he is a electronic engineer and only used to embedded programming in plain C with manually shifting bits in registers and what not. I‘m developing simulation and calibration software for electronically engines that are controlled via CAN BUS and use the WPF MVVM architecture, seems like black magic for him. But as long they he value what you are doing it is fine I guess! But if they don’t, get out of there, there is nothing worse than when your work doesn’t get what it deserves.
Thank you I am glad you liked it !
So, everyone has already spoken on the find a new job deal. I'm gonna comment on a different aspect, the one if you want to keep this job and find a way to make it work. I think the main issue here is trust really. If the manager trusted you, he/she probably wouldn't critique your code nearly as much. There's a few things you can do to gain trust. If you're using new technologies, or ones that are just new to them, you could source out a blog post from ms on the introduction of that feature and the benefits, along with a little sample and short explanation. I don't know if you have the time, but try to sell them on these concepts. Suggest maybe setting up a weekly/bi-weekly lunch and learn with the developers and present different topics like the ones you suggested they don't understand. I don't know what the culture is like there but maybe they are open to learning. Another thing to do is comment your code with msdn links. If you're using lambda, link lambda, it's silly but really, you can just say "&lt;x&gt; has been deprecated for years, the .NET way to do it is &lt;y&gt; now. if you want to read more into the tech, I've created a comment with a link to it" or you can email that out before you use it like I suggested before. Work is really about CYA (cover your ass) so if you can back your stuff up with enough evidence during these reviews and essentially build trust, after awhile, I would imagine they would back off. If they are truly stubborn and you want to prove them wrong, you could certainly write samples of both code with performance outputs using the new improved way and their old shitty ways, I'd imagine there is a performance and readability improvement to the new improved way in almost all cases. 
I'd make it 10 by default, dude.
*Eyy, another year! * It's your **2nd Cakeday** 3asylover! ^(hug)
https://www.youtube.com/watch?v=-d2-PtK4F6Y
dang I wish I knew how to do this :/
&gt; but I hate the bullshit around it. That "bullshit" allows for intelligent IDEs (productivity gain 2x compared to C++, at least), fast compilation (10x compared to c++), platform-independent binaries (NuGet, or transplanting DLL compiled on windows netcore to the application running on osx netcore), reflection, etc, etc, etc.
Unloading assemblies has been implemented and will come with .net core 3.0.
Last seen 1 day ago. [https://www.reddit.com/r/csharp/comments/axjjfn/a\_later\_c\_version\_will\_be\_introducing\_records/](https://www.reddit.com/r/csharp/comments/axjjfn/a_later_c_version_will_be_introducing_records/) &amp;#x200B; &amp;#x200B;
I stayed in a very toxic boss environment twice thinking it is going to be ok... It never was and never will be. And I paid with my health. Do not hope, do what you think is right for you and don't scale yourself based on lower values or to acomodate someone who is not at your level. Upgrade them if you can or fck'em and move on. 1. Be completely direct and honest. 2. Never ever back down if you think you are right. 3. Speak up your mind. 4. Do not accept conditioning (writing code so that he can read) 5. Always act in your best longterm interest. Everything else makes you suffer and feel like crap. Make it work your way or just leave. Imagine your growth in a company opposite to this!!!! 
Cool looking but nothing too advanced. Good job anyways !
You can use it do things like monitor file accesses and change the contents of files, modify and read network packets, or even drawing overlays in DirectX applications. You can also use it for things like making game mods where you re-direct the file system access calls to another folder for example if you want to have two sets of game files, one unmodified and the other modified. Here are more examples of uses for the library written in C#: https://github.com/unknownv2/corehook-plugins The library uses a native module written in C++ that is based on the Microsoft Detours library. [Here you can find a list of samples](https://github.com/unknownv2/CoreHook.Hooking/tree/master/samples) included in the Detours library that shows use cases for tracing things like heap allocations and process creation. You could do something like filter the list of allowed applications the process can start dynamically using IPC to read/update the list. The uses are endless and you can play around with it to see just how many things are possible! 
What is it now? Augmented Reality? Building Game? You seem to change the game type based on the subreddit you post it :P
Cool, so where's yours?
Hmmmmm... I wonder if it’s... just maybe... an augmented reality building game?
Honestly, if your function is more than 5 Lines. Its probably too big. Break it up. 
A short explanation how this works? I have an idea but it would be super slow
I used to work on desktop application that take csv file as input, do some math and draw bunch of chart. Some file can be 1gb in size. Our C# application was able to process it within 50 seconds and eat up to 2gb additional memory. Recently customer desired to rewrite all this stuff with nodejs, because 'nodejs it is the future...'. Initial implementation was able to process such file within 57 minutes. It is ridiculously slow in comparing with dotnet. After some optimization we were able to drop that time up to 15 minutes. It is better, but still slower that straight forward dotnet implementation without any optimizations. I am even not talking about memory consumption by nodejs in such scenarios. &amp;#x200B; So I think that C#/Java has bright future. They are mature, have the best IDEs in the known universe and significantly faster than JS/WASM. &amp;#x200B;
It feels to me that there is a disconnect between the languages in use and the noise made by the programming community. You might not hear a lot of noise about c# and Java but there are loads of systems built in those languages and they're not going anywhere soon. I imagine the noise is due to click-ad-revenue. Medium-age languages aren't sexy like new ones and aren't retro like very old ones. Older monolith systems tend to be Java/C# because they got to market first, are supported by tech multinationals and are mature. Those things give bigger businesses a sense of risk mitigation. Personally (and so of limited use), I code in lots of languages because each is a specific tool for a specific job. As build and release systems improve, having multilanguage and multi framework systems becomes less of a pain.
Hey! First of all, it looks pretty damn awesome! Are you planning on making a SDK for something like this in the future ? Would love to play around with it 🥳
As polyglot Java/.NET/Web dev, it is always a matter of which bubble you live on. On my bubble, JavaScript only lives in the browser, and server side rendering rules. nodejs isn't something to worry about when we about the Java and .NET eco-systems at our disposal, specially regarding tooling, performance and quality written libraries (no leftpad here). Now, yes there will be change, the best thing you can do is learn to adapt and not be frozen in a specific stack.
It is an augmented reality game, you can see all my work in Twitter where I am working with a Magic Leap to build a new experience that will use this component as the core of the game.
Okay
Get to the choppa my dude. 
 You can do with this project: * Build your own async game server * Very enjoyable to play with custom network [Packet](https://github.com/Dentrax/AsyncServerClient/blob/master/ServerFramework/Packet.cs) * Deep detect feature to incoming-outgoing packets * Analyze server-side or client-side packets with deeper details * Send packets with any data type * Three-Way TCP [Handshaking](https://en.wikipedia.org/wiki/Handshaking) feature * [Blowfish](https://en.wikipedia.org/wiki/Blowfish_(cipher)) encrypted secure packets (You can also add new algorithms easily) * Not complex, not hard, best project to understand TCP Async Server-Client Networking * **MIT** License, References [here](https://github.com/Dentrax/AsyncServerClient/blob/master/REFERENCE) Have a very *Async* day!
So it’s kinda like what No Man’s Sky wanted to do on a smaller scale?
The advice below is good, I'm just curious about what your boss's role is. Are they still writing code actively or are they just management types? I've seen it before. I worked at a bank once where the tech lead's knowledge was very out of date. The reason he got the job was because his boss used to be technical but gave that up over 10 years before, but still conducted his technical interview... 
Let me put it like that : I don't know a single dev who would prefer nodejs over anything. That said personally I see nodejs some like "look I can do it to", instead of being better solution. 
No
Or said differently: your boss is not a programmer, he should not judge your technical choices, it is your job.
I'd say you should aim to lower the predictability of balconies with the exact same door/window. It's the most jarring aspect and without it I think it would look good
Perfect tool for /r/CityPorn, awesome job, congrats!
lack of sleep? get out.
That is so cool! 
Simplest version, have a Node class which contains its letter and a HashSet of nodes. You want to add the word "Any". You're going to iterate over the letters while traversing the tree. The first node doesn't contain a letter (I'll call it "_", so you check if its HashSet contains an A node. If it does not you add one. Once there is an A node you look for an N node on that. Repeat for the Y Add "Ant". We have an A and an N, but no T, so we add the T under the existing N. N now contains T and Y Add "Bat". There's no "B" in "_" so add the B, B doesn't contain anything yet, so we can add the A to B and the T to A. For simplicity convert all the words to lowercase or uppercase first otherwise you'll end up with nodes containing both A and a. This might be a requirement, no idea, but your tree is all lowercase. The first node can't contain a letter. If it did you could add "Ant" and "Any" but not "Bat". The diagram should not have any empty circles on it. This just confuses what it's trying to convey.
Judging from the script parameters shown in the demo video: * It creates a rectangular base with a given width and height. * For every floor above that, it calculates a "coverage" value based on the previous floor's coverage and the floor falloff (probably a simple multiplication). The coverage of the first is 1.0. * It then calculates the number of blocks in the floor: Math.Ceil(bw \* bh \* coverage). * Then it starts positioning the new full blocks of this floor above the center of the previous floor. Here is the first random component, though it must be striving for convexity as well, so I assume that as long as there are still free squares in an "inner" ring, it won't place a new one in an "outer" ring. * Then it calculates the number of windows and doors to place, based on the window and door coverage values and the outer edge count of each level. * And after placing the doors and the windows, it adds the balconies: "normal" balcony for doors that open to an empty space without a filled block underneath, and "porch" style for doors that open to a space with a block below.
Question does not specify what the correct order is and how order is determined. The words listed are not alphabetical. If order means "order as initially added" then hashset in the nodes is not an option as it cant keep order. In that case an array type in the nodes is a better fit. 
Thanks for the reply, To clarify: This is not the entire diagram just a point from which i want to get ALL children or nodes underneath. I am able to reach this node but unsure of how ill get the children Also, there are no empty nodes, every node has a key value pair for the children underneath and a char for its letter
What? No that literally is an anti-pattern. Trust me. You should never need to cast in order to do an update of something.
Protiguous, Just want to personally apologize for the "listen to your elders child" quip. It's a quote from somewhere that was rattling around in my head, but as someone else pointed out it was "condescending as hell" and very uncalled for. I hope you work it out with your boss. 
Lovely.
Thanks so much, I solved setting true `KeyPreview`
I've actually worked with people like this, they were two "seniors" that were former VB6 programmers trying to write C#. No LINQ, Resharper was banned (because it was showing all their hundreds of errors and they didn't like the keyboard shortcuts on MY computer that they never used...), didn't understand DI, had hundreds and hundreds of custom exceptions for non-exceptional situations, and banned namespaces too. There is no reasoning with these kind of developers, I didn't realise the reputation VB programmers have is well deserved. Move onto a better job.
Why are you willing to cheat for useless exams? &amp;#x200B; This kind of approach is just going to lead to massive painful failures in your life as you don't really understand what you're claiming to be certified for. Your best talent is memorization with those stupid things... and what the dev world needs isn't more random access memory.
Paging
Place all the balcony's!
My teacher used a drawer as an example.
Looks good so far. FYI Just browsing your repository it seems you included an empty console project (unlinked from the solution)
or you are naive 
Some feedback so far: in the server code, is there any reason you are going with INI files for the config which depend on dll import calls? Have you considered storing the settings in JSON (or even XML) then serialising and deserialising the config to a file? This would remove A LOT of the logic in config.cs
Can I set this settings globally? I can try, could you also provide an example with paging? Like if I have to use a param updateback = 100 for 100 days ago?
Thanks for the feedback. Actually you are right. But unlike other server projects, game servers usually uses INI files to fethcing configurations. Or so I thought that years. But now I would fetch config again from the "INI" file. :D But I am using the JSON serialization method for personal free-time fast projects. For your first question; there is no reason. :)
Thank you! Fixed in this [commit](https://github.com/Dentrax/AsyncServerClient/commit/1f1376b19ff31de34931f79b27666d1d0749c43f).
Cool. I remember seeing this posted once before. Does it only do the outside, or does it do interior walls and doors as well?
Rather than an iterative solution, If each team play eachother twice I think the for loops should look smth more like: for (int a = 0; a &lt; numberOfTeams - 1; a++) { for (int b = a + 1; b &lt; numberOfTeams; b++) { Console.WriteLine($"Team {a} is playing against Team {b}"; EvaluateMatchOutcome(team[a], team[b]); // Match 1 - evaluate something EvaluateMatchOutcome(team[a], team[b]); // Match 2 - evaluate something again } } This way a team will never face itself and a combination of {a, b} will not enter the inner for-loop more than once, if you can do it this way your solution will have a much much lower complexity.
"Immutable records are a C# 7 feature." "Well, 7.x." "We mean 8." "No, 8.x." If it's this hard to make the feature fit in C#, maybe it's not an appropriate language feature. At some point I think it's OK to pull an Apple and say the best solution is to write a new language with the features you want from the start. That's what C# did at first.
Looks good. But maybe tweak it so that it doesn't produce unrealistic buildings? Also it seems to disproportionately create doors instead of windows.
I'm assuming the order isn't important, but you're right to consider it :) 
(1) is very hard to answer without future vision. Let's switch to (2). (2) **Why is Java still so popular?** Programming languages don't really die. Java has been around since the 90s, it took C# until the 2000s to arrive. That means Java had 10 more years to enter the hearts and minds of people who decide what language to use. C# missed those boats by not being there first, and little things like "this business framework uses Java and we've used it for 12 years" count. Java has also been the more honest cross-platform solution forever. C# has only cared about cross-platform functionality for about 3-5 years. Sure, Mono existed before that, but MS didn't throw their weight behind it and as a consequence it had odd little quirks that you didn't find in the .NET Framework code. So that's really it: C# isn't as old as Java, and wasn't able to stop Java's momentum. That said, C#'s position vs. Java is amazing and I think a lot of people expected Java to steamroll C#. Now we have some context for (1). **Is there a future for C# devs?** Sure. Ask that question about Java in 2003 when C# was released. Java devs weren't scared. And they were right. Their language was widely supported, cross-platform, and while C# brought a lot to the table they firmly believed their ability to work on *nix environments would keep them around longer than the more expensive Windows options. Let's imagine some C#-killer releases tomorrow. Is C# in a strong position? I think so. .NET Core, I think, isn't even thinking of Java anymore. There's a lot of developer interest in writing small, composable servers and Node.js is on the tip of everyone's tongue. .NET Core seems like a torpedo pointed at Node. Microsoft has focused extremely hard on making C# a language as *capable* as Node.js with better scalability. Some of the major downsides to Node are JS quirks that have existed for longer than C#. It needs much better memory management. It probably needs multithreading. Will it work? I don't think it matters. C# is going to eat some projects that would've been in Node, but a place that's maintaining 2 dozen legacy Node servers isn't going to switch to .NET Core on a lark, nor are they going to ask their devs to pivot unless they hit a major scalability crisis. Even then, they're as likely to fail with a port to C# as they are trying to limp along with Node. Businesses fail. A lot. Projects that port to different languages fail as often. So C#'s going to keep chugging along. You're going to have to keep pace, though. This time a decade ago having WinForms or WebForms knowledge made you valuable. This time 5 years ago you needed to know WPF, Silverlight, or ASP .NET MVC with WCF. Now nobody knows what the heck's going on with desktop and ASP .NET Core MVC is similar, but different from the last. The only real threat to C# is, "What if MS introduces a new language and abandons it?" All I can say about that is the warning signs will be loud and clear. It could happen, computing's changing rapidly right now. But whatever comes after will be familiar to a C# dev, so there's no harm in learning it even if you think its successor might be around the corner. C# was meant to be easy for Java devs to move to. Anything that wants to kill C# is going to take on that property too.
Code (XAML): `&lt;avalonEdit:TextEditor x:Name="Editor" /&gt;` &amp;#x200B; thats it. Why does the scrollbar not automatically scroll when going to a new line?
You assume incorrectly. I am using a bot to populate a subreddit I moderate with Twitter links, but everything else is me.
Not sure if youve ever had a job before but thats something you should definitely not say to your boss
&gt; No LINQ Kinda BS but I guess I can see it being a little confusing &gt; No ReSharper I've actually heard those exact same complaints from people my age. R# can change your workflow if you dont take the time to configure it. Still, it was on your pc... thats just controlling &gt; No DI I hear this a lot sadly. I think the concept sounds more confusing than it actually is. &gt; Banned namespaces Ok wut. Namespaces are an afterthought. If you have a basic IDE just organize your code and the namespaces will usually follow. Organization is language agnostic. If theres anything that shows how stuck in their ways these guys are, I think its this. I sure hope you got out of there fast!
Agreed. Only worked there 7 months, thank god!
Alright Okay!
Handle it on your database side or limit the amount the api can call at once.
The biggest problem you'll have is what happens if you add "GOT" and "GO"? The tree will not retain the information that O is both a leaf and a branch. You also can't retrieve every combination along the paths. The set of "SO" "SOON" "SON" "SONET" includes would the return "SOO" and "SONE" So do you want the original words onlyy, or just every combo?
I think you're onto something. Maybe even something as general as an RDBMS. I'm sure we can create our own here in this thread.
I'm just saying, this would be amazing to have in Cities Skylines as some sort of dynamic building mod.
This is nice. Just the other day after playing around a bit with Magica Voxel, I started wondering what it would take to create procedural voxel buildings and landscape elements. 
How many apartment blocks have you seen with different doors on their balconies 
Hey, I wrote about this topic two articles: [http://www.kamilgrzybek.com/database/database-change-management/](http://www.kamilgrzybek.com/database/database-change-management/) Theory - versioning state vs transitions [http://www.kamilgrzybek.com/database/using-database-project-and-dbup-for-database-management/](http://www.kamilgrzybek.com/database/using-database-project-and-dbup-for-database-management/) Practical implementation (using DB Project and DbUp library) I hope it would be helpful for you.
Now imagine optimizing this parsing with Span&lt;T&gt;
You need to support Pagination. See [https://opensource.zalando.com/restful-api-guidelines/#pagination](https://opensource.zalando.com/restful-api-guidelines/#pagination) for example. &amp;#x200B; From the Backend site you will receive two arguments: \- Page Number \- Page Size &amp;#x200B; Then you need to your handle these arguments: \- if you are using EF and LINQ use Take and Skip extensions methods \- if you create raw SQL SELECT statement you can use OFFSET-FETCH statement - [https://www.dofactory.com/sql/order-by-offset-fetch](https://www.dofactory.com/sql/order-by-offset-fetch)
Thank you, I will give these a read.
But can it run doom?
I mean, you could just use F#
The fear of "doing it the wrong way" will keep you back. It did for me, for a long time. Just make up an idea, like a tiny game or utility application for some mundane task you have to do repeatedly. Something you'd otherwise do in excel vba, maybe. Create a user interface for it, figure out how to hook up the buttons and make the eventhandlers execute your logic. You're simply just going to have to *write code* to learn; and as long as you don't make the mistake in thinking that your way is the right way because it works for you, but stay open wildly different approaches to the same problems, even if they seem more complicated at first glance, you'll be ok.
Most apartment/condos have rules that enforce uniformity. Source: years of construction.
Do you have a start date parameter? Then something like: DateTime end = DateTime.Today; DateTime begin = today.Subtract(TimeSpan.FromYears(2)) DateTime cursor = today; TimeSpan chuckSize = TimeSpan.FromDays(100); var allData = List&lt;Record&gt;(); while(cursor.Subtract(chuckSize) &gt; begin) { var data = GetTheApiData(cursor, cursor.Subrtact(chuckSize); allData.AddRange(data); }
Every line gets its own function! You get a function! And *you* get a function! And *you* get a function! *You all get a function!*
you are saving the notes wrong because the todo table is not created untill you call save, specifying an id will be guesswork. instead do this if you want to create the two tables at the same time: `_context.Todos.Add(new Todo { Name = "Item1", Notes = new List&lt;Notes&gt; { new Note { Title = "Note1", Content = "Testing" } } };` `_context.SaveChanges();` &amp;#x200B;
No "right way". I would put them together until you know why they shouldn't be. KISS and avoid future proofing. Usually, small/simple applications can have them together with no issues. As your app/project grows in complexity, it may make sense to move it out (aka - you have multiple apps with backing data stores, and you want to have some shared authentication service). But if you don't know why you need to make it more complicated yet... don't.
yeeeeeeeeeeees, but the apps are noticeably slower than compiled apps, even though the interpreters are supposed to be very efficient, and they are either packaged huge (.Net Core) or require the huge framework (.Net Framework). i'm not saying there's a good alternative out there, because i haven't found any. i'm just **dreaming** of something simpler. *i'm not pretending to be an expert, or even being any good at programming, i can only say that i've been dabbling with code since the 80s.*
Yes, I have startdate and enddate
&gt; wisened Wisened? Or just wizened?
What are the requirements driving this? Who are the stake holders? When you define these and an analyze the different design choices, then you’ll get the appropriate choice. You should also write this in a document for future reference.
Sorry, you misunderstand. I meant I use service injection into the controllers in .net core. I've read over the repos which you suggested and they do pretty much what I'm doing now, they cast the view model into a lower entity and then save the entity. This feels weird to me still, I prefer to pass these types of interaction to lower layers to carry out the work &amp;#x200B; e.g. [https://github.com/dotnet-architecture/eShopOnContainers/blob/dev/src/Web/WebMVC/Controllers/CampaignsController.cs](https://github.com/dotnet-architecture/eShopOnContainers/blob/dev/src/Web/WebMVC/Controllers/CampaignsController.cs) This creates the DTO in the controller then saves the object against the injected context but it feels like the controller is doing too much work. According to DRY principles, I don't want to repeat that work if I'm doing something similar somewhere else
Will it work on linux with mono?
That looks really cool
Javascript is not future for sure. WebAssembly is. Also I don't think any serious business would rather have their backend on node when there are other solutions like .NET Java and so on.
I'm not sure, but ain't it dependent on what kind of loading from db are you using?
Well, but did it work for you? I mean that Include
Too many doors not enough windows 
you're in a dead end job. just leave.
So if you can query 100 days, you can probably query a bunch of 100 day chunks in a loop unless you're getting rate limited or something.
Exactly in .net core not .net
Will it support HoloLens? 
Not sure if it's possible what you're trying to do. **If** Android allows to have an overlay for a fullscreen app you could try the following: * read the memory of another app (pretty sure this is not possible, I hope); * read the screen framebuffer (needs root?); * capture global screen events (needs root?); Also, don't bother with WPF. Check if what you're trying to do is possible in Android and use Java. Maybe Xamarin if it supports the above and if you can find enough documentation about it.
Yea. It’s great but balcony overkill 
Unloading assemblies has been possible in .NET for ages with the use of AppDomains. That was lacking in .NET Core.
It could go either way, some people say that JS is taking over the entire development market, but web assembly can be the game changer. 
It really depends. Making a monolith? Could do either. Making a security microservice as part of your microservice approach? Well then yeah it needs it's own DB.
You have to get your terminology and facts right. &amp;#x200B; There are no key-value pair in your particular nodes. In this scenario there are only values in nodes. The keys to those values are the paths to the nodes itself. If a path exists means that the key-value-pair has been added. The key is the path the value is a bool whether that particular word is a valid word or only a prefix of the valid word. &amp;#x200B; *there are no empty nodes* Meaning that you have to implement the bool value on the nodes decoding whether the particulat node is a word or only a prefix. &amp;#x200B; *from which i want to get ALL children or nodes underneath.* There are different tree traversal algorithms/strategies (different implementations of depth first search or breadth first search) and all will do the job, the difference if the order of traversal. Meaning that by using a different strategy you get/visit the same nodes in a different order. &amp;#x200B; The data structure you are looking for is called \*trie\* and the traversal algorithms are called \*depth-first-search\* and \*breadth-first-search\* . The former is usually realized via recursions or stack the later with queue. &amp;#x200B; You have to do the first steps of your homework before you can ask questions where one can give a definitive answer. 
Lambdas and extension methods are 10+ years old, they're not exactly 'bleeding edge'.
nuget packages are designed to package DLL libraries and add the reference to projects to make library distribution incredibly easy. It also handles dependency resolution so that if your nuget packaged library requires any other packages it will download those as well. I guess the question I have to ask is why you want a specific .cs file included and if that could be compiled as a library to be included. 
What do you mean by "correct order"? The letters (nodes) themselves have no concept of order relative to each other - they are just structures. Do you mean get words in correct order? Traverse the nodes, assemble the words, add them to a list, sort the list. Or do I not understand your question? BTW your concept is pretty cool.
Immutable records are great, and the sooner we get them the better. That said, I wish they'd just add an `immutable` keyword as a shorthand instead of the janky syntax being proposed now (according to the linked article). So instead of this: public class Person { public string FirstName { get; private set; } public string LastName { get; private set; } public string FullName { get { return FirstName + LastName; }} public Person(string first, string last) { this.FirstName = first; this.LastName = last; } } You could do this: public class Person { public immutable string FirstName; public immutable string LastName; public string FullName { get { return FirstName + LastName; }} } Then you get the best of both worlds. The `immutable` keyword would be for properties *only*, and would essentially make them work like `{get;}`, except inside their class' constructor. The default constructor would take parameters for all of the `immutable` properties in the order they're listed in the class. If desired, additional constructors and methods could be defined, and any changes to an `immutable` value should throw a compiler error if the assignment operator is called on them outside of a constructor.
oops I think I asked a similar question below. As far as being both branch and leaf - a node is a branch if it has children, a leaf if not. Perhaps a bit flag indicating the algorithm must continue traversing to get a word would work. 
I think this is a very good solution. I haven't worked with databases before, but it doesn't look hard to set up &amp; work with a local database.
I think that's the exact solution I'm going to take. :)
Code should be readable even when you don’t know the language’s syntax very well. Maybe your naming convention needs to be improved...
Sounds like a problem with the person writing the tests.
Maybe it's different were I am, but the building look less... ribbed. When I look at this all I see is balcony. I tend to not get that feeling when I look at a block of flats
**My input is this:** JS, and it's plethora of frameworks are great, especially with the idea that there will always be something new to add to my repository of knowledge, i.e. VUE, React, and so on. I think that most programmers will jump on board to learn new areas and add too, but not to replace C#/Java. &amp;#x200B; The reason for this is the maturity level of C#, and programming languages like it. I think it purely is the level of support that those languages have, and the communities that surround them. As one of the comments before stated, these languages aren't as sexy looking and promising in new frontiers, but you will not have to worry too much about forging your own lane in the younger and sexier languages.
On the corners, especially, when there's two balconies popping out in what would absolutely be the same room of the same unit.
I’m not sure I understand what problem yourself trying to solve.
pretty neat, but slight critique- in real life architecture they almost never have balconies at every window. 
&gt; Organization is language agnostic Yesterday I saw somebody's C# application, and they had a folder called classes to store all of their classes in. Uhh, everything in C# is a class. I silently laughed inside my mind.
awesome
&gt;the NavigationPath of the object I'm trying to add to will always be equal to dir1 What are you expecting it to equal?
Think your issue is this: string joinedPath = string.Join("/", splitPath); if (joinedPath == navigationPath) Debugging your code shows joinedPath ALWAYS equalling navigationPath
Yeah, that's what I was discovering too. But, I just updated my post. I found a super simple solution using `StringBuilder`! Thank you for taking the time to help though! 
1) There is still a very good future for C# and Java. Even if no new programs were developed in either language starting today we would still have decades worth of work to be done in both languages. They have been too common and too important for there to not be a future. While Javascript is kind of taking over the front end market on desktop, the strongest competitor for the backend are functional languages. Functional languages are still rather niche, and don't pose any immediate threat. Even on the frontend it isn't so much Javascript as web technologies that are taking over, and Javascript is just benefiting from being the de facto web programming language. There is a lot of demand for moving beyond Javascript, that is why you see Typescript becoming very popular, and the introduction of WebAssembly. To be frank, if anything proper Javascript is the language most in danger of losing its popularity in the not too distant future.
The horizontal scrollbar disappears or reappears depending on the line length. How can I disable that? &amp;#x200B; Code for the scrollviewer (XAML): &amp;#x200B; `&lt;Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}"&gt;` `&lt;Setter Property="OverridesDefaultStyle" Value="True" /&gt;` `&lt;Setter Property="Template"&gt;` `&lt;Setter.Value&gt;` `&lt;ControlTemplate TargetType="{x:Type ScrollViewer}"&gt;` `&lt;Grid&gt;` `&lt;Grid.ColumnDefinitions&gt;` `&lt;ColumnDefinition Width="*" /&gt;` `&lt;ColumnDefinition Width="Auto" /&gt;` `&lt;/Grid.ColumnDefinitions&gt;` `&lt;Grid.RowDefinitions&gt;` `&lt;RowDefinition Height="*" /&gt;` `&lt;RowDefinition Height="Auto" /&gt;` `&lt;/Grid.RowDefinitions&gt;` * `&lt;ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" /&gt;` `&lt;ScrollBar` `x:Name="PART_VerticalScrollBar"` `Grid.Row="0"` `Grid.Column="1"` `Maximum="{TemplateBinding ScrollableHeight}"` `ViewportSize="{TemplateBinding ViewportHeight}"` `Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"` `Value="{TemplateBinding VerticalOffset}" /&gt;` `&lt;ScrollBar` `x:Name="PART_HorizontalScrollBar"` `Grid.Row="1"` `Grid.Column="0"` `Maximum="{TemplateBinding ScrollableWidth}"` `Orientation="Horizontal"` `ViewportSize="{TemplateBinding ViewportWidth}"` `Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"` `Value="{TemplateBinding HorizontalOffset}" /&gt;` `&lt;/Grid&gt;` `&lt;/ControlTemplate&gt;` `&lt;/Setter.Value&gt;` `&lt;/Setter&gt;` `&lt;/Style&gt;` &amp;#x200B; Can the problem be the `ScrollContentPresenter` ?
Yea I meant the Twitter posts
A MessageBox is blocking the thread it was called from and a MessageBox used to show an error can't be disabled using a try-catch statement (like exceptions can).
Often times you’ll see apartment buildings change up the makeup of balconies floor by floor and either side of the building.
Have a look at postsharp. It may work for you
Partial classes could solve that. 
"How do i'm sure it's a DataSet and not something else ?" if(ListeProjets is DataSet) { // do something with ListeProjets }
Break-up your requests to xxx days and split on a date. To get 730 days of history, do 7 requests of 100 and a request of 30. Find the happy medium request size to minimize the number of requests. Maybe a request size of 250 is reliable and in that case 730 days could be split into 3 requests.
Whip-smart? Doesn't understand extension methods or lambdas? I'd say not getting async right off the bat isn't a red flag, but those first two are. I don't even write C# for my job, just hobbies and learned of extension methods yesterday, and am already using them in my primary project. It's a "class method" declared outside the class, it's an odd concept, but not a difficult one. I don't know what I'm ranting about, but I also don't understand your bosses confusion. I think the other suggestions in this thread are good, you should be growing as a dev, not held back. 
At a glance this looks like an officially supported Copy pattern (or clone, can't remember). Is that so or am I misunderstanding?
In Windows, outside your app, there is a switch in Settings-&gt;Display called "Automatically hide scroll bars in Windows". Try that.
Did unfortunately not work.
Pretty cool!
&gt; recently became unusable Could you elaborate?
Glad you like it!
I separate them and don't use FK relationships to link users/logins directly to app's data. In some cases, we have a table with user info in the app's data that has the identity user's guid and an app specific id 
I'll check it out, thank you.
That recent license craze. Officially it's still MIT, but yet they state that "every developer is expected to become a Patron on OpenCollective". Means you need to pay if you want to use it. Even when it's MIT. It's an unenforced "honesty system", except if you want to participate on GitHub, then your issue/PR is just ignored and closed (unless you're a Patron). It's just crazy. https://github.com/Fody/Home/blob/master/pages/licensing-patron-faq.md I don't feel confident using it anymore, even when this Patron garbage is not legally enforceable and the license is still MIT. It's just too wonky.
Put them together so you can have FKs.
I see, thanks. Had forgotten about that.
Yeah, it's a pity. I'm now working on a project where Fody would be perfect, but I can't support something like that. Even paying 500 € for PostSharp seems like a better option than dealing with uncertain licensing.
You didn't read the link did you? Unit tests usually cover tests you have already accounted for, or the unit could be very complicated it would be impossible to cover everything, and it's better to just live test it. 
https://www.robmiles.com/s/CSharp-Book-2016-Rob-Miles-82.pdf This is what I used. 
Do you have programming experience? C# in Depth is where it's at. Are you a complete programming newbie? C# Yellow Book is where it's at
The value could change between the two checks, so the compiler can't safely re-use the previous value.
No software development will still be useful to know and have as a career skill. Though I believe the opportunities to make unique software that hasn't been already implemented will have dramatically reduced in the coming years. There will be a lot more of make something better than the current implementation. From what I have read and experience, the one skill that will be useful from here onwards is the ability to communicate. Communication is quite a significant skill to software development. As a developer you not only will be coding but dealing with other developers, business facing individuals and clients. The ability to converse on technical and non technical points to the required person will get you farther in a career as it brings clarity. Though the ability to communicate clearly also comes from a better understanding of your code and feature. Personally I believe software development will become a basic skill in the far far future, to implement custom applications to automate your life and provide a better quality of it. A good comparison of this is the introduction of computers, the newer generations know their way around computers as it is intrinsic to their lifestyle, where as older generations have immense difficulty with it as it was not a common part of their upbringing. These are all opinions of mine, and that being, they aren't fact but hopefully they shed some light on the topic at least from one perspective.
No. The last thing you want on your resume is VB. If you end up in a C# job and there happens to be some VB work as well, you'll pick it up in no time. It's just different words for the same thing. (Assuming you're talking about VB.Net and not VB6).
No one gives a shit about VB.
Wouldn't it be possible in other languages?
I honestly don't know. I wasn't planning on adding it to my resume to be honest, just getting a feel for it. Whenever I see job listings, it usually says something along the lines of must have a strong understanding of "VB" Which could mean anything from VB6, to [VB.Net](https://VB.Net) without clarification.
There will be some jobs that might require you to program in VB like macro projects which requires ad hoc operations and quick deliverables. But you can learn it at your free time if you might land on these projects just in case. 
Lol I’m aware of that but all the calls are marshaled or serialized.
The model is just stupid and backwards, but as long as the governing license is MIT, it's fine and the model they're describing is just wishful thinking at best. If you report a major bug, are they not going to address it because the it's filed by a non-Patreon? Of course they'll have to address it for the benefit of the rest. And for minor issues that specifically affect you, any OS project might not merge your PR and leave you hanging anyway. 
just ignore it. or make your own fork without those rules if you want.
I mean yes there are some jobs out there asking for vb, but those are very few and far between. I wouldn’t bother. You should be able to pickup the syntax differences on the job if it’s even used. 
No &lt;/thread&gt;
Hey I just wanna say thanks for abiding by those rules.
He could save the needed data in the storage. So both apps used it. 'Read the memory of another app' is not possible in any computer system.
Why not just compile them?
Wow. Were there other folders, what were they named, and what was in them?
If the job requires VB you don't want it and it's probably a shit data entry position that got converted to a programing job by the last guy that was "just smart enough" to automate his workflow.
&gt; Span are very fast with net core, not that fast in net standard or net framework, slow with Mono .NET Standard is not a runtime, so that part of the sentence doesn’t make sense.
Oh nice one! I didn't consider the value's mutability.
My current job requires C# and VB (typically VB.Net, some VB6). The vast majority of the job is in C# and JS, with the very occasional need to replicate behavior from a VB6 app. Some of the very early libraries of the newer app were written in VB.Net, so being able to *read* both is a must, whereas we are not writing any at all. The requirement is really - be able to program in C#, read, understand, and potentially debug VB.Net, and skim VB6; they could honestly have left VB6 and maybe VB.Net off the reqt list. You'd really only need to learn the basic keywords and be able to understand inputs, outputs, and control flow. If the job is a C#/.Net programming job that just happens to list VB.Net as a side skill or 'preferred' skill, I wouldn't necessarily shy away from it.
I don't think anyone is arguing that No Man's Sky didn't have procedurally generated content
Not really, the rest was just a standard webforms app.
Fixed it, but I actually meant everything that targets net standard 2.0, my bad. I removed it anyway. 
Haha I just do what the contract says. If they want every hallway in the building to look different, I'll do that too.
What's the difference to live unit testing?
Even vb6 isn't THAT bad. You don't want to be coding in it all the time, but reading it isn't terrible. Now vbscript from the old asp days will make you hate life. 
That is how you do it. I suspect it is confused because you didn't also put [test] above the method. 
YEAH OKAYYYYYYYYY! SHOTS SHOTS SHOTS
hah I had a guy once insist to me he programmed in C+ and i was like no, C or C++, C+ doesnt exist idk if he was trolling me but he was boasting that he wrote hacks and cheats for games and I called him out on it anyways coolstory amirite
The funny thing about the name C++ is that it's literally the unary incrementation operator. It means "C incremented". Like, this is a *basic* programming *joke* in the name of the language. "+" is a binary operator, and doesn't make sense in context. So a dev with decades of experience like the blowhard up above should know that and understand the joke enough to know that not only is C+ not a thing, but that it never *would be* a thing, because it's nonsense.
If you’re still open to YouTube, check out Jamie King (search for “Jamie king C#”). He’s a professor at the University of Utah at Salt Lake and his videos are meant as supplementary material for his students, but he’s such a good teach that he can teach an entire concept in less than 10 minutes. His videos are how I learned, and now I’m a software engineer for a Fortune 500 company. He goes into great depth, especially regarding value and reference types, and how they’re related to the stack and heap.
Exactly, thats why I think so many people notice it, because we are like wait what. thats invalid syntax Also, C# is kinda like C++++, aka the ++ formed into a hash/pound symbol :)
Android is only a secondary goal. I'm aiming to get it working on windows primarily, since that's how I play anyway. The android is just for other guild members that want to utilise it. I will read some more into Xamarin. Thanks for the info, you have given me something to research. Cheers buddy :)
Sorry what do you mean by I could save the data in storage? I recall an old cheat engine on android that had the ability to locate variables (Essentially a hex editor). But not sure if using something to pull the info would go against the ToS. Thanks for the response, it is much appreciated.
You said you have start and end date so just do 100 days a request.
Oh yeah! I remember having that pointed out to me before! Very neat, if hidden, little nod. Thanks for reminding me of it.
Perhaps the content which is being rendered is virtualized? You can inspect the rendered xaml dom when debugging in visual studio to verify.
No it's not, don't waste ur time. Focus on C# and ignore anything VB
Am I the only one who doesn't see anything wrong with "we have paid support and even if you don't need support, you really should give something back anyway" It's not even uncertain licensing, for christ's sake. [Here is the license, the only part that's legally binding](https://github.com/Fody/Fody/blob/master/License.txt)
Tests are automatically run in the background as you type. For example, as you're changing a method the tests that cover that method are run. If your change breaks the tests a red circle appears in the margin so you know right away. 
You simply create one( or more) files in a specific diretory. A simple txt will do if you want something small. Otherwise you will need sqlite. 
Following this.
Like in Paris
Likely this. To know the width of all the lines, all of them would have to be rendered. Try this to turn it off. https://stackoverflow.com/questions/13326506/listbox-is-virtual-by-default/13330630#13330630
It's not the sentiment, it's how they're going about it that rubs the wrong way.
in the conclusion you say that unsafe pointers are the fastest solution, but this is only the case when array bounds checks can't be elided. &amp;#x200B; you could go faster with SIMD &amp;#x200B;
[removed]
You really will want to stay away from VB6 and VBA. Microsoft has End-Of-Lifed VB6 and getting it to work properly on Windows 10 is a pain in the ass. If either of those end up on your resume, you'll find yourself receiving job postings for supporting these, almost to the exclusion of everything else. The only thing worse to have on a resume is help desk experience. Source: Me - a poor schmuck who has VB6 and VBA experience on his resume. Fun fact: VB6 is old enough to drink in the U.S.
I'm certainly not going to add it to my resume. I did interview at a place that was over 100 years old and had some VB6 still floating around. My primary focus is C#, though I'm always open to learning new things if I think it will gain me an advantage.
Yes, C# is the best overall C# book for experienced programmers, and is fantastic for helping you build a deep conceptual understanding of the language. A good supplement is C# In A Nutshell, since it's more comprehensive in covering every feature of the language, and is more detail-oriented than conceptual. Just a little reminder to anyone reading this thread that the 4th edition of C# In Depth just came out a couple weeks ago!
Do you know any chemical jokes?
?
&gt; Listen to your elders child. I didn't mind that statement.. It made me laugh out loud. Still good advice though.
Very nice and snappy!
We actually had productive talking today.. was a good Int64 day. (long, get it? hehe)
your comment is missing an opening tag. Typical for bigots who don't appreciate the elegance of VB.
Any competent C# programmer can learn VB in 1 day (just drop the semi-colons and replace all } with meaningful keywords).
&gt;Every line gets its own function! [https://github.com/laravel/laravel](https://github.com/laravel/laravel)
Howdy folks, I am considering a career change because being in a position where I am the sole developer for an entire company is really stressful and frustrating...I think it's time for me to move on to an environment where I will have more of an opportunity to teach others and be taught myself. I have a solid six years of experience on the .NET platform creating web applications and embedded software. Looking for a role where I'd have more of an opportunity to leverage .NET Core and get more deeply involved with Azure or AWS. I can get things done on the front end, but I'm not gonna lie...I am way better at Javascript than I am at CSS. I am in the D.C. metro area, but I would be interested in relocating for the right opportunity. I worked at a Microsoft consultancy for three years so I've had a lot of exposure to every aspect of the software lifecycle. If you want to hear tales of overcoming ambiguous user stories, offering to automate a Sitecore build with Gulp &amp; MSBuild and suddenly finding yourself providing DevOps guidance to one of the world's largest fast food chains, or overcoming all sorts of bizarre surprises during data migrations, I think you'll be able to see that I have am a well-rounded craftsman who can take your company to the next level. If nothing else, I can at least be entertaining :D &amp;#x200B; If you would like to know some more info, DM me and tell me what's the biggest challenge holding your team back right now. I might have an idea or two to help out, there's only one way to find out!
Hey man mad props for this. I might try it later on, my C is a bit rusty and I've always wanted to know how the C compiler works :)
Your boss is a person just like you. Tell him to fuck off some time.
It's works more like a C# compiler tbh, but it's still very educational.
Theres encog
I have a OneNote notebook full of helpful code I’ve used over the years. Here’s what I have listed for forms hope this helps: ————— Creating Multiple Forms – Owner Relationship Add a new Windows Form to the project and name it Form 2. Add a single button and label to each of the two forms. Change the text on the labels to show Form 1 and Form 2 respectfully. Form 1 is set up as the default that runs automatically. Change the text on Form 2 button to show Form 1, and on Form 2 change the text on the button to show Form 1. Double-click on the Form 1 button and add the following code on Form1.cs private void button1_Click(object sender, EventArgs e) { //creates a new form object Form2 myForm = new Form2(); //establishes who the owner is – Form1 is owner of Form2 myForm.Owner = this; //shows the new form called Form2. myForm.Show(); //hides Form1 from view but doesn't close it – it's still in memory this.Hide(); } Double-click on the Form 2 button and add the following code on Form2.cs private void button2_Click(object sender, EventArgs e) { //DO NOT CREATE A NEW FORM SINCE FORM1 ALREADY EXISTS //this will tell the program to show the owner of Form2 – the owner is Form1 this.Owner.Show(); //this will close Form2 which frees up memory this.Close(); } Then go to Form2's event handlers and double-click on the FormClosed event. Add the following: private void button2_Click(object sender, EventArgs e) { //DO NOT CREATE A NEW FORM SINCE FORM1 ALREADY EXISTS //this will tell the program to show the owner of Form2 – the owner is Form1 //remove the following line and test it since it is now in the ForceClosed event this.Owner.Show(); //this will close Form2 which frees up memory this.Close(); } private void Form2_ForceClosed(object sender, ForceClosedEventArgs e) { //adding the following will ensure that Form 1 will reappear even if the user clicks the red X //on the Window this.Owner.Show(); } //Note: if you want to close (stop) the parent form from the child, thus ending the program completely, //you could use the following code snippet: Private void Form2_FormClosed(object sender, FormClosedEventArgs e) { //This function was created by selecting "FormClosed" event under the form's properties window. this.Owner.Dispose(); } —————
You're trying to optimize before you even know the performance characteristics of what you want to do. Premature optimization is the root of all evil. Actually try out both scenarios *then* make a decision.
Why not make a simple project that loops and draws 1000s of circles and see what the performance is like?
Doesn't seem to me to be of much use, but hey, more options for compile time constraints. That's always good :D
Hmm, this reminds of a reddit post...... Oh yes, mine [https://www.reddit.com/r/csharp/comments/awj23w/c\_8\_is\_introducing\_records\_a\_new\_lightweight\_type/](https://www.reddit.com/r/csharp/comments/awj23w/c_8_is_introducing_records_a_new_lightweight_type/) &amp;#x200B; for which I received hell for posting :) 
It shows your intent a lot easier basically. Instead of checking every property to see if it is editable, the whole struct now is non-editable
Wow, people are posting my stuff :) Thanks mate :) 
No they are not readonly. Readonly structs are readonly, here read this [http://www.devsanon.com/c/c-7-2-lets-talk-about-readonly-structs/](http://www.devsanon.com/c/c-7-2-lets-talk-about-readonly-structs/)
You are right, I updated the article to reflect that, I am not the OP of this reddit post, but I am the owner of the blog :) 
I didn't realise they had dropped Win Server Nano. Interesting. 
Read the file into memory and get total number of lines, then process line by line and report processed/total?
Get total file size as bytes, then add up the length of processed lines and report processed bytes/total file size?
Isn't this VB.NET?
If it's a file he can just use the File class to get its size on disk. No need to load it all into memory.
Try playing around with CNTK. I've only tried it briefly but it was pretty interesting and seems to work pretty well.
The fucking brackets mate! In vs if you type the closing one it removes the one it added. Roslynpad doesn't so you can end up with lots of extra ones drives me mad!
Personally I use regex101.com it's really great.
I don't think they did: they dropped support for Nano Server 2016, but Nano Server 2019 is still supported.
It's something to experiment. Ryujit should take advantage of simd, especially for copying data. If you have any idea let me know.
It might be worth looking at Shouldly or FluentAssertions rather than the built in ones. Nothing forces you to use them.
Odd. I used to see entry level positions say C# or VB.NET because if you can use one you can use the other pretty much. 
Ahh!
I was sad when they dropped nano server build media and you could only pull the container base. Oh well. 
What the author fails to mention is the motivation why this was added. It's part of the additions to enable high performance code. When the struct is marked `readonly` (and the compiler enforces it) it allows for optimizations that would otherwise not be possible or safe. If a readonly struct is copied, then the compiler **could** just use a reference to the existing struct, if applicable. You should also never pass mutable structs to `in` parameters, so having an extra annotation like `readonly` on structs makes it easier for analyzers to check this case and issue warnings.
Yes. I was thinking that the contents would be read into memory and processed from there. ie not from the stream line by line.
There's nothing wrong with selling support tiers or asking for contributions for your OS project. It's a pretty successful model: [https://opencollective.com/discover](https://opencollective.com/discover) if done right. If your project is failing to make budget, you can honestly campaign for aid and people are more likely to help. What's backwards is the wording in their FAQ: &gt;**But it is MIT, can't I use it for free?** &gt; &gt;Yes all projects are under MIT and you can ignore the community backing honesty system and use Fody for free. &gt; &gt; **Do I need to be a Patron to contribute a Pull Request?** &gt; &gt;Yes. **You must be a Patron to be a user of Fody.** it's unnecessarily muddying the waters by creating a usage policy that's not compatible with the underlying license. The resulting sentiment from the OP saying they'd rather pay 500 € for PostSharp instead is justified. OS maintainers asking for support need to be a little more marketing-savvy in this day and age, guilting someone into paying is not the best way to go.
That makes a lot more sense now. I assumed there was a greater reason behind it. Thanks
Are you sure yours compiles? :)
If your work causes in any way lack of sleep, there are better workplaces. So get out of there, it doesn't pay to not sleep.
[removed]
VB is dead and reserved to a few legacy project &amp;#x200B; most of .NET project are C# for back, JS for front, Powershell for devOps.
I have received hell in some subreddits aswell. I think it depends on which way the wind blows this day.
if it does end up being a problem the solution is to render any shapes that aren’t changing to a rendertexture. then just draw the rendertexture. if almost all of the shapes are changing all of the time then the solution will likely be to do them via a shader somehow. but try it first and see.
[removed]
ryujit does not take advantage of simd
Do you duplicate some of the data from the identity user table to the application user table or do you use the stored GUID from the application user table to fetch data directly from the identity user table?
If I recall correctly it depends on if the value is a Property or a Field. Properties can return different values at any moment (see: `DateTime.Now`), but (assuming thread safety) Fields are predictable.
I have a few questions for the experienced: Isn't it a best practice to keep structs readonly anyway? Doesn't assigning a property result in the creation of a whole new struct? I get the compiler warning benefit, but is it ever a good idea to make a mutable struct? Shouldn't one make a class instead in this case?
I suggest you read a bit about the actual use of something before blogging about it, you can find an extensive list of reasons why this was included in the 2nd Google result for "read only structs c#", https://blogs.msdn.microsoft.com/seteplia/2018/03/07/the-in-modifier-and-the-readonly-structs-in-c/ You never even mentioned defensive copies or the usage with ref/in. Not very informative sadly
https://www.reddit.com/r/interestingasfuck/comments/b1kwe4/bosco_vertical_vertical_forest_is_a_pair_of/
Microsoft has a lot of Azure resources that can help you learn the concepts behind ML. The ML flowchart can help you decide what algorithm to use : https://docs.microsoft.com/en-us/azure/machine-learning/studio/algorithm-cheat-sheet They also have some data science video series that can help you grasp the basics: https://docs.microsoft.com/en-us/azure/machine-learning/studio/data-science-for-beginners-the-5-questions-data-science-answers [Kaggle](https://www.kaggle.com/) is a good place to start to get datasets and realistic problems to try out some of the algorithms as you learn them. 
Wow thank you so much for the information. I really appreciate it. 
I would really recommend learning the algorithms and theories before you dive into code, as the theories work across any specific ML implementation. 
Any book or resources you recommend? 
Did unfortunately also not work. For note I'm worling with avalonedit. However the standard textbox from wpf does not have this problem.
Could you provide an example? I mean, now I'm sending 100 days back, but how does the client know that on the next iteration it's going to get the 100-200 day back and not 100/200 days back?
I mean, if I send 100 it will retrieve for 100 days back, if I send 200 it will send 200 days back, but it will also include the 100 first request from the start. But what I only want is to retrieve for the dates / days between 100 and 200 days, if that made any sense.
It very much depends on what you are doing. If you have an algorithm operating on contiguous memory by using structs in an array, it can be very handy to be able to mutate them without copying the data, as an optimisation. * * need to be careful not to do anything that causes the compiler to make a defensive copy for that to work.
That really should have been mentioned in the post!
&gt; vb6 isn't THAT bad Agree to disagree
&gt; I actually meant everything that targets netstandard 2.0 That doesn't make sense. The difference is in the runtime. The standard has nothing to do with runtime performance.
The OP seems to be someone who is learning the language and blogging about everything that find even though the msdn usually has better write ups.
Well ref structs and in variables was going to be next blog post
Curious, I'm an IT guy whose learning C# for various reasons. What's bad about help desk experience? Just genuinely curious.
It is the recommended practice, yeah. If you passed an struct to a method you would try to modify it then realize that you aren't actually modifying the same reference (unless passed with ref), so it's easy for the beginners to fall in this. I would never recommend anyone to ever use structs until you know the recommended practices, the difference between heap/stack and reference/value types.
So this this is a huge question but at it's simplest you're really describing a web server. Forget the 'multi-threaded' part, you'll likely do that in future but it's likely not necessary \*right now\*. When you do get more into it take a look at something like [Akka.net](https://Akka.net) [http://veblush.github.io/posts/akkanet-online-game-works-for-the-last-2-months/](http://veblush.github.io/posts/akkanet-online-game-works-for-the-last-2-months/) To start you likely want to have a central 'repository' where you store user data. let them log in, share moves from etc...that's what MySQL is doing in your scenarion. Yes this would run on a server. The real-time aspect is likely enabled most easily with something like SignalR [https://dotnet.microsoft.com/apps/aspnet/real-time](https://dotnet.microsoft.com/apps/aspnet/real-time) which would allow 'pushing' moves to every user. Good luck! 
I'll agree with others saying "No" straight off. I will also add that it can be viewed as a potential red flag against the company. In my personal experience, the only times I've seen VB being used has been to either maintain or extend existing systems; if a company is specifically asking for VB (rather than being happy taking a VB dev who can switch to C#) the actual job could involve supporting legacy code.
Span&lt;T&gt; has been introduced after netstandard 2.0, this means that the implementation for netstandard 2.0, regardless the runtime, shouldn't take advantage of the optimizations introduced with net core 2.1. When I wrote it I had this in mind, but then I understand the mistake.
&gt;vbscript from the old asp days Those "old" days are still only in double digits for me. A company that refused to migrate despite a multitude of security and staff retention issues.
Your advice is to kill a fly with a thermonuclear device, because you have some unwarranted fear of threads and sockets. Threading isn't that hard, it's not some impossible task, and you don't need akka or asp.net to do it well. How do you think things like akka are implemented?
I know by fact that intrinsic and some copy operations generates SIMD code. If you mean that Ryujit is not smart enough to generate simd code in other occasions, then I don't know, you may be right.
Use BigInteger.
Don't be silly; my advice is to use what already exists rather than starting from a blank slate. As I say OF COURSE you can do it from scratch (and it's fun to do that sometimes) but writing raw socket implementation &amp; handling binary input (parsing etc...) is like trying to ill a fly by first inventing the concept of 'air'. [ASP.NET](https://ASP.NET) Core is FAR from a 'themonuclear device'...(it could be Argued for classic [ASP.NET](https://ASP.NET)...it does everything and perf suffers from that). But in MOST development you use what exists to solve a problem and add value by extending that. Getting bogged down in handling mealtime updates using raw sockets is often not what you really ant to be doing; nevermind inventing your own serialisation protocols. Akka IS massive and beyond the scope of most projects...why I said it's a possible \*future\* option.
Sounds like `BigInteger` could do the job: [click](https://docs.microsoft.com/en-us/dotnet/api/system.numerics.biginteger?view=netcore-2.2) Just remember that using `BigInteger` can lead to performance problems as it can theoretically hold infinitaly large numbers. 
Yes, basically you are just building a web API using [ASP.NET](https://ASP.NET) Core... which is actually multi-threaded out of the box. Aka... each request to the API happens on its own thread, which enables it to handle lots of requests. You can setup an [ASP.NET](https://ASP.NET) Core Web API projects with a few clicks, and then just add the endpoints you need to login, join a game, and send choices. I wouldn't even worry about SignalR to be honest yet... do that later when you want faster responses, but for a game like Rock, Paper, Scissors... you probably won't need it.
Okay.
You're talking about implementing an undergraduate program, a rock paper scissors server, a project that could be implemented in a few hundred lines of code. No wonder why so many apps are bloated, instead of thinking for yourselves, you just throw huge tools at it until the problem is solved. I guess that explains why every chat client uses 300M of memory. This problem can be solved with blocking queues, a stream reader, a dictionary and a lock.
Thanks, now with `N=10` it works! :) But if I use `N=100` or also `N=40` (I'm not mad or stupid, it's the problem statement which ask me to do it) the program crash and give me the error: `System.OverflowException: 'BigInteger cannot represent infinity.'` Do you know why? &amp;#x200B;
I've taught &gt;400 new to development coders how to build applications for the past 4 years (in 20 hours from scratch to functioning apps\_. Using Node, Rust &amp; [ASP.NET](https://ASP.NET). No; teaching someone how you can theoretically solve a minimal problem with minimal code while ignoring existing implementations is of limited utility in real life. YMMV but that's not how real software development works. Sorry if this doesn't meet some 'coding purity' rule you've invented... &amp;#x200B;
Then, even though it has been several years since you last did help desk and have several years of, say, software engineering experience on your resume, recruiters will still try to get you to take help desk and application support roles. They will outright ignore the fact that it was more than a decade or two since you last did that and still try to get you to accept these low-paying, terrible jobs. I finally had to just remove several years of my professional life and wait for the various databases to update to stop getting these kinds of offers.
100*100 is 10000 which is well within the ability of a int or long or BigInteger to represent. You’re doing something else wrong. 
Where I work, there are still (at least) two VB6 applications. One has been slowly going away as the functions and features it provides are moved into a C# web application. The other, because of how interconnected it is, is slated to be a massive project to take place after our current project is wrapped up.
The Number which give me an error is not 100*100 but 2^10000 😅
I reported that Fody.Costura crashes dotnet CLI builds when you use it with native dlls. It was closed after two weeks, without fixing, because I wasn't a patron. And that was shortly *before* the recent license update.
Here's a tutorial on handling aspnet identity https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity?view=aspnetcore-2.2&amp;tabs=visual-studio If you do that, each request is a thread and you could communicate with the server via api
&gt; ed. I guess that explains why every chat client uses 300M of memory. &gt; &gt; This problem can be solved with Thank you for taking the time to reply. I have heard about ASP.NET before but i don't have a clue what it is or what it does. From Searching online i can see that it is used for creating API's and Websites but im not 100% sure where i would start learning how to implement this into a C# form project or what to do. 
&gt; Span&lt;T&gt; has been introduced after netstandard 2.0, this means that anything that targets nestandard 2.0, but can’t target netstandard 2.1, shouldn’t take advantage of the optimizations introduced with net core 2.1. .NET Standard is a spec of which APIs ought to be available. That’s all. It doesn’t have an implementation, and therefore no performance characteristics.
Let me offer an alternative to your original idea and suggest since you're in the C# world that you consider going asynchronous rather than multithreaded. Multithreading is hard, and it's even harder to implement correctly. Asynchronous is tricky, and tricky to implement correctly, but what you're describing to me sounds like it's best done that way. If you're unfamiliar with the topic, async stuff excels at handling IO-bound tasks (like waiting for a player to make a request, or fetch something from the database). The underlying magic of it all is actually done through threading, but you don't worry about the implementation of it. If you're using System.Net.Sockets, or even TcpClient/TcpListener, they offer a nice toolset of async methods. There's a couple different routes you can take, but the modern way to do it is by using "ConnectAsync", "ReceiveAsync", and "SendAsync". I'm not sure how you manage your game states, but you'll need to work out some central thread-safe scheme to handle your new games, moves made, and games finished. Also manage your clients and properly disposing their sockets after they end a session. 
While span was only added to netstandard in v2.1, it was available as in the System.Memory Nuget package prior to that. The performance improvements - or lack thereof - are in the runtime. Span can be implemented efficiently - as in .Net Core Runtime v2.1+ - or it can implemented inefficiently as in System.Memory running in a application targeting .Net Core &lt; v2.1 or any currently available version of the desktop .Net Framework. netstandard is just a definition of API's - classes and methods. A runtime implements a version of netstandard as long as it implements all of the API points. It does not have to do so efficiently. .Net Core Runtime v2.2 has many efficiently implemented uses of Span, yet it only meets netstandard v2.0
one of the servers i created was an asynchronous server and i did find that to be one of the easiest to create but the problem I am having is that I don't quite understand how to send data like UserID, PlayerName, Option = Rock to the server and then have to wait until both clients have sent it over and then send something like "You won" and "You lost" back to whoever won/lost.
Is there any websites/tutorials out there that you can recommend to me to help me create a RPS server?
Yeah that is definitely a downfall. With something like your game, you have to work out a way to allow clients to get data from the server without having requested it first, or you manage the state entirely on the client side, which is always risky (for cheating)
Yes, you can do SIMD by hand with System.Numerics and with the upcoming platform intrinsics in .NET Core 3.0. Ryujit will not autovectorize things automatically though. You could set values in random chunks with simd, though when you are accessing memory out of order like that the first order performance problem is that you are accessing memory out of order. But at least you would be doing that N/8 or N/4 times instead of N times. Its a contrived benchmark so its hard to say what would be 'fair'. With a real use case you can usually find a way to leverage simd when working with arrays. 
It wouldn't be boxed unless it's a value type. 
If your prof is asking for you to list all those values, it’s a bad assignment. Or you missed a requirement to restrict user input to a more reasonable number. Or he’s trying to teach you a lesson about really big numbers. 
You can actually just set KeyPreview to true on the form. This will cause the forms key events to fire before it passes to the control. 
It actually can. As lists resize when they hit a certain size calling AddRange will allow it to resize more appropriately than adding one at a time.
You have a valid point, but I understand where OP is coming from. The common rule of thumb is that you should always understand what's happening in at least one level of abstraction lower than what you are usually working with. So, if you are learning how to do real-time network applications, it's useful to implement it on top of sockets at least once - you will learn what the higher abstraction actually does, make you appreciate it more and will give you some context on how to debug it when things go wrong. If you are learning deep ML, it's useful to implement backpropagation from scratch at least once, then you can leave it to TensorFlow to do it for you. If you are doing frontend dev, it's useful to do a toy example in vanilla HTML/CSS/JS at least once before moving to the framework du jour. If you are writing a compiler, it's useful to write a parser from scratch once before you start using bison/yacc/antlr. You get diminishing returns with every layer deeper you go, so you probably don't need to go all the way down to sillicon, but if you never even look at what's happening under the hood, it will limit your potential as a software engineer. 
Shameless (or shameful) self plug: https://16bpp.net/tutorials/csharp-networking/04a I wrote a series of Networking/Socket tutorials for C#. In one of the sections, I walked through creating a server to play Pong.
I really don't like fluent syntax for assertions. I understand why some people do, but they are way too verbose for my taste.
When two clients connect place them into a match and have the server store the choice of each client every round. When the both clients have sent their choices to the server the server can calculate the winner and broadcast it to members of that match. This is a good tutorial series which goes over creating and unpacking game packets: https://16bpp.net/tutorials/csharp-networking/preface Consider using socketasynceventargs
I have just had a quick glance over your TCP and UDP tutorials. This is what I have been looking for to help me with my Server/Client I will be going through your tutorials later on today when I have time thank you.
That makes sense. Ive had similar problems getting them ti understand i don't just "fix computers" anymore. Thanks for the reply!
That's fair enough. They can get a bit unwieldy haha
That was an interesting read, thank you. Some of it went over my head, but overall I get the gist and it was good to know.
Use named pipes? Centralised server which has mysql and waits for messages from clients. Client sends message saying " start new game" server says ok.. next client clicks "start new game" server says ok.. server sends message back saying who ur playing against and waits for both clients to send which rock/paper/scissor gets sent, and sends info to both clients saying you lose you win. 
That's what I meant by them going about it wrong. Their attitude sucks.
thanks! I don't know why I mixed things always up when I talk about .net standard 2, at the end of the day the concept is not so hard.
regarding the autovectorization, according the link I sent you, the jitter does some basic stuff: this code `public double Sum() { double res = 0; for (int i = 0; i &lt; 64; i++) res += i; return res; }` &amp;#x200B; `become this:` &amp;#x200B; `; .NET Core 2.1.0 (CoreCLR 4.6.26515.07, CoreFX 4.6.26515.06), 64bit RyuJIT 00007ffa\`6c621320 BenchmarkDotNet.Samples.IntroDisassembly.Sum() IL_0000: ldc.r8 0 IL_0009: stloc.0 00007ffa\`6c621323 c4e17857c0 vxorps xmm0,xmm0,xmm0 IL_000a: ldc.i4.0 IL_000b: stloc.1 IL_000c: br.s IL_0017 00007ffa\`6c621328 33c0 xor eax,eax IL_000e: ldloc.0 IL_000f: ldloc.1 IL_0010: conv.r8 IL_0011: add IL_0012: stloc.0 00007ffa\`6c62132a c4e17057c9 vxorps xmm1,xmm1,xmm1 00007ffa\`6c62132f c4e1732ac8 vcvtsi2sd xmm1,xmm1,eax 00007ffa\`6c621334 c4e17b58c1 vaddsd xmm0,xmm0,xmm1 IL_0013: ldloc.1 IL_0014: ldc.i4.1 IL_0015: add IL_0016: stloc.1 00007ffa\`6c621339 ffc0 inc eax IL_0017: ldloc.1 IL_0018: ldc.i4.s 64 IL_001a: blt.s IL_000e 00007ffa\`6c62133b 83f840 cmp eax,40h 00007ffa\`6c62133e 7cea jl 00007ffa\`6c62132a IL_001c: ldloc.0 IL_001d: ret 00007ffa\`6c621340 c3 ret` &amp;#x200B;
That's a terrible way to do it. You don't serialize UI controls but the actual data that you are binding to it. Create a List&lt;T&gt; or Array of your objects and serialize that.
I am not serializing a Forms or WPF Treeivew UI control but the type of data that binds to a Treeview. Which for a WPF Treeview UI control is an array of TreeViewItem's. But is that still bad?
Yes, it's bad and dumb. A TreeViewItem is still a UI Control. Again, you need to serialize the actual data which in your case seems to be an array of strings. Serialize/deserialize that array.
Good. Writing about what you learn helps solidify it in your mind and sharing your writing gives others a chance to offer corrections. Rather than taking tests, college courses on a book would have you write a gloss, basically an explanation and elaboration, on each passage. You didn't have to agree with the author, your gloss could say why it's wrong, but you did have to understand it. (As opposed to today's multiple choice regurgitation. ) So while it can be annoying for us, this is the kind of person who is likely to become a very skilled and well read developer. 
What is the actual description of the problem? Because first you say you have N * N cases. Then suddenly you are raising 2 to the power M. It seems unlikely they would expect you to use a BigInt. 
&gt; is it ever a good idea to make a mutable struct? Yes, for performance reasons. Structs are much more efficient than heap allocated objects. They don't add GC pressure and fit tightly together using less cache space. In the one place I use them, they are stored in an array. I have an original version that is kept clean. When I need to use it, I can cheaply copy this array and make my changes. (By cheap I mean there are CPU instructions that copy a large chunk of raw memory.) If I had an array of objects, I would have to copy each object separately and one by one, field by field. There is no way to bulk copy an array of objects like we can for an array of structs.
[Accord.Net](http://accord-framework.net/) has a lot of examples all in C#.
It really depends. Making a monolith? Could do either. Making a security microservice as part of your microservice approach? Well then yeah it needs it's own DB.
I tell you what confuses me: it is the fact that in VS I can target net standard 2.0 to build a project. What does it mean then? If I have net framework SDK and net core SDK installed, which of the two is going to use? I think this is all the source of my confusion.
Well so now you can put "conversion expert" on that resume though
You target .NET Standard in a library. Then you target .NET Framework, .NET Core, Xamarin or similar in an app that references the library. The library doesn’t get its own runtime. It simply contains code to be called by your app, which in turn is launched from a runtime.
I don't think you need a custom server, I think something simple like redis would be the way I would do it.
In the same way that a semaphore or mutex holds available threads for a multithreaded application, a web application must store state for variables that must be shared across clients. The server simulates a master version of the game all the clients are simulating. Think of your application as the DM of a DND game. The DM wouldn't go to each person one by one telling them the result of an encounter before all of the rolls were in. He has to be able to write down who did what before making a decision and getting back to them Probably a terrible analogy but I tried.
Exactly. So your controller should take in and return view models with exact data they need. Your service layer should take these in and do what ever they need to behind the scenes. Then if necessary return the correct view model.
ah! gotcha, yeah sorry of course.
We just let ef handle it
Well, you said quick and dirty console app so yes :) It's just a base console application, that has the functionality you requested :) If you look up the SqlCommand in the docs it will show you how it works, probably with similar code. Since most of the example code provided in the docs is pretty rudimentary like the above. &amp;#x200B; Anything further or more in-depth usually requires more reading at different functions/methods in the classes to implement :) I suggest looking up the Docs when you have a chance, as it will help you understand how it, whatever the class you are working with, works.
I'm not disputing what you said, just trying to explain what I've been observing from their posts to this subreddit. Thanks for taking the thought further
Thanks for sharing this great information. [ZetExcel.com](https://ZetExcel.com) also very fastest software to converting, creating, etc without MS Excel. 
I think I was on the same spot several years ago when I had a job during my studies. You did some tool and saved few minutes daily, then another one and after few months your tools do the job of three employees. And one day you start to think "Man this is wrong. When one piece fails half of the company will fail because nobody knows how to do it manually anymore and it will be my responsibility" If that is your case go find some real developer job. It looks like you have some talent. Everybody writes a code today but only few devs "see the problem" and "solve the problem".
Yes, I too think this way but the examples posted above do it all in the controller I’d pass the injected dB context down to the layers and do what’s needed there I’m not saying the examples are wrong as they’re only small examples but it’s not the way I’d do it In this instance, you would just need a service layer for the api and a separate one for the web one?
Think of [ASP.NET](https://ASP.NET) as a framework which runs on .NET and is used to server web requests and provide controllers which route those requests to the right location. Usually it will also return some response. It's like saying "[Web.NET](https://Web.NET)", even though that is a serious oversimplification.
Really hard question. TBH I don't see a solution unless you want to move on and become a consultant
Thank you for your help
Thank you the owner of the tutorial has already responded and i am currently working through the chapters of the tutorial.
Instead of using recursion to put values into an array of TreeViewItem's I put values into an array of this class that I can serialize with binary formatter. \[Serializable\] public class TNode { public string text { get; set; } public string\[\] tag { get; set; } public List&lt;TNode&gt; children { get; set; } &amp;#x200B; public TNode() { children = new List&lt;TNode&gt;(); } } &amp;#x200B; The size of the binary file is less than half than what it is to serialize an array of TreeNodes for a Windows Forms Treeview control.
Thats funny, your bagging someone out for using an overly complex tech and then suggest threading? All you need is an array to hold all your sockets. You really dont need or want threads. Source: used to write muds for shits and giggles.
Use the async pattern? 
that is using simd registers but it isn’t vectorized. vaddsd corresponds to the mm_add_sd inteinsic which only operates on the lower 64 bits. compilers often use simd registers with non vectorized code for other reasons. time this vs a hand coded simd solution if you are doubtful.
Thanks for the answer, I don't quite get it though. After the entire array is bulk-copied, don't you have to go over its elements one by one and, by changing a property of each element, create a brand new instance of the struct? So in a way you are still 'copying each object separately', or maybe I'm getting something wrong? Btw I think structs deserve a lot more love, their immutable nature makes them very natural to work with if you like a functional style. I always find myself using them for meta-data type objects and small objects that don't change a lot, say ColorRBG, Vector2 etc.
I'll go with "ability to predict the future". I spent months telling them that if they didn't update they will have serious recruitment and retention problems. When they still refused, every single senior dev in the company walked within a matter of a few months, and they couldn't find any replacements.
You are writing code to automate business logic. That is the point of software. If you leave, they will need an IT person with basic C# knowledge to maintain the code. This is how companies are supposed to progress. You have a person doing a task, it becomes repetitive and error prone, so someone in IT automates write a program to automate the task. As more tasks become automated, it frees up the rest of the staff to do more productive work. As more tasks become repetitive, you write more software.
You could always try to run a few simple tests and try to see for yourself ;) Also perhaps look at the generated IL (Intermediate Language) and see if there is a large difference between the two.
Perfect response. The only thing to add is that OP should ensure there is adequate comments/documentation and that they point this out to their manager, so if they decide to move on the company they work for can continue to effectively maintain these essential business tools either using a new staff member or contract resource.
Can you use it without authenticating?
Does this answer help? [https://stackoverflow.com/questions/19225568/wpf-datagrid-get-selected-cell-value](https://stackoverflow.com/questions/19225568/wpf-datagrid-get-selected-cell-value)
Yeah that's definitely the responsible thing to do, I wish more people did it!
You are doing fine.
The next progression is to take them off spreadsheets and onto an intranet site that pulls the data from a database. A centralized reporting vehicle.
Looks similar to https://github.com/damianh/ProxyKit Choice is good!
I trust you, I am not an expert of SIMD, I stopped using asm with just the old x86 on a 386. Should study SIMD in depth asap.
it is a lot of fun! i did a talk a while back that you may find useful: https://youtu.be/4Gs_CA_vm3o its in rust but the new c# platform intrinsics work the same way
Interesting! I had not seen that before. That project looks like it is for more complex scenarios. This is made for the vanilla scenarios that do not require any customization. :)
Why should you never pass mutable structs to in parameters?
look up span&lt;t&gt; and or the new platform intrinsics 
&gt; by changing a property of each element, create a brand new instance of the struct 1. My structs were mutable 2. Creating a brand new struct doesn't mean much because it goes in the same memory location as the one it replaced. (Unlike a new object, which gets a new memory location.)
You're working with cavemen and your career will suffer for it when you inevitably need to move on (which should be NOW).
Java still has a long future but Oracle is really hurting its prospects for greenfield applications beyond people who know Java and just want to stick with it. That's why I am so excited by C#. It has already caught up to Java and in many ways exceeded it. It is the future.
Would be curious to know more myself, feeling like I’ve plateaued :’(
Yea, and you begin to realize a lot of the online learning resources are relatively shallow. I want to find a resource that revolves around the highest levels of what's possible, even if it isn't practical.
Regarding 2, if the memory location stays the same doesn't that mean a struct instance passed to a function than mutated inside will affect its value to the caller of that function? Or does that only happen if the old instance is immediately discarded or something?
To this end I'd suggest that OP read Clean Code. Applying its principles has made my code so much easier to understand, for both me (when going back to it after some time) and my colleagues.
If you pass it to a function, then it is copied into the parameter. This parameter is essentially a local variable. Adding 'ref' says the parameter refers to the original struct rather than a copy.
Can you please explain what the example code does? What does it mean to use Bash on Windows? If I have Cygwin installed do you auto detect it? Really not sure what behavior to expect looking at the code the first time. 
To approach this from another angle, you could also be asking **why** you're doing these things. My first questions about those spreadsheet examples is "Why do they all come in spreadsheets?", "Why do we need the results in a spreadsheet?", "What **information** are we trying to get out of them?". There's nothing wrong at all with making those tools but perhaps you are seeing everything as a nail if you've missed opportunities to simply fix or remove processes which are just there because that's the way it's always been done. A counter example to yours is my workplace has a bunch of old reports that have to be manually run and built from an old system. Instead of charging in and automating them we asked **why** and realized another project will make all those legacy reports redundant anyway and would be a better use of time as a result. &amp;#x200B;
Seek out Joseph Albahari and his talk on a lightweight remoting solution. Covers a really cool lock free shared memory solution for their Linqpad debugger.
No complaints but I was just wondering if you can think of a use case I couldn't and obviously not everyone will want to install nginx on their server/computer (however it is pretty small) With nginx I can use a specific url or use regex as a proxy. I have `example.com/abc/` pointed to my test project `/123/` at another project and everyone also pointed to a folder for static files (html, js, images, whatever). Assuming I can use nginx do I have a reason to use AspNetCore.Proxy? Or is AspNetCore.Proxy just a choice and might be handy if I want to ship some source code without documenting how whhich urls to proxy? (But I can't think of a reason to proxy when using source code :()
You're doing a good thing! Keep it up! While you're at it, make sure your software is version controlled. Get your employer to sponsor a company GitHub or something, keep your tools in private repos, or run your own version control in house and ensure it's backed up. I'd lean towards a combination of hosted solution as a primary and in-house backups just in case. Make sure your tools are well documented and the process of finding them and setting up a build environment is documented as well. Think about what your boss is going to need to know in case you're hit by a bus tomorrow, in order to maintain business continuity if someone adds a new column to one of those excel sheets the day after. When considering building a new tool, consider that you will be burdening you and your team with the maintenance of that tool for maybe years to come. That might be a GOOD thing, but maybe not. Try to always consider the time you'll spend vs the time the tool will save. Daily tasks that can be made dramatically more efficient are pretty much always worth it. Occasional tasks might be made easier with a tool, but it's more difficult to break even on those - though sometimes the learnings you get on those projects are making you a more effective employee even if the tool costs more to make than it saves.
Haha, I agree. My specific use case was a podcast app that I was writing. I just needed to proxy one route. Seemed like overkill to set up nginx in my container over the need to proxy only one route. So, I think this is really meant for the case where including nginx (small container scenario, for example) seems like using a chainsaw on a small fern.
If you are as good as all the current education...maybe start looking for challenges that you haven’t had a chance to solve and go at them? Do some innovative research?
Ah ha, I see. I once wrote a proxy and it was slow as balls. Someone found the problem but I didn't remember it. Do you know how fast this can go? I didn't look at source but is it using asynchronous sockets? I think maybe somewhere I had a sleep left over from my synchronous version and that's what killed it but I'm not sure.
Organization is hard and not everyone's cup of tea. If there's under 20-40 classes in the project? Sure, stuff it anywhere, even in the root folder of the project. Ctrl-Shift-T will find it, assuming its named even half sensibly. A lot of young developers also get stuck in analysis paralysis when it comes to putting things in folders. They don't have enough experience to realize that refactoring (with R#, probably with VS) to move things around later is inexpensive. Our team has general organization rules that we use, like a folder for Controllers, Models, etc. But there's also times where we have a good enough reason to go against the rule that we'll break the rule.
Really depends. Five line methods everywhere is just as annoying as 100 line methods everywhere. VS/R#/Rider make it easy to extract methods from blocks, so I do use that a lot once things are working. But always with an eye to "does this really make things easier to understand".
Ugh. Yeah this is something I think about daily. One of our departments gets a daily email with a spreadsheet from an external vendor. Those are great for when someone has the occasional need to casually look something up, but when the data is needed as a part of a process that should be automated, I'd MUCH rather write a tool against a web api and query the data from the vendor. And if we're worried about having local/offline access, then sync the data into a local database and query against that. I absolutely despise having to read/write data from/to Excel spreadsheets.
Is the only difference between this library and using `Redirect` the fact that there's not an extra round trip from the client?
I've been studying cpu+memory architecture to understand how to better vectorize data so the algorithms run faster and are more scalable... At work we've been building a address lookup that should run on the server, be scalable and find the correct addresses with huge miss typing... But i guess this topic is more related to programming in general than just c#, but it is advanced
Just pass null for app-only mode. Unfortunately, virtually all of the API endpoints require authentication when using the OAuth host.
His library, and proxies in general, serve a different purpose than a redirect. There’s still an additional call, but it’s hidden from you. It allows you to do things like create an api gateway, where you might handle authorization and then proxy to a number of different servers/routes that may live behind a corp firewall, for which a redirect wouldn’t work. They also allow things like rate limiting and centralized caching. Cdns are a sort of proxy, they add localized caching after pulling resources from a number of different locations. And I’m pretty sure redirecting to static content files would be a pretty bad way to serve up content. People often use proxies, like reverse proxies in Ngnix, to handle requests to a local server url. For example, say you run an app on http://localhost:8080, but you want someone to come to your site from https://unclesurdad.com. Redirects wouldn’t work, but a proxy could expose a domain route with ssl. Sorry, this has been a long winded response, but I hope it helped at least one internet sibling.
Currently, no. I have not done any perf testing, but it just uses the vanilla `HttpClient`. I wanted it to be fairly interoperable with the rest of ASP.NET, so it uses the underlying infrastructure there to compute routes, etc. It could probably be improved by creating an `HttpClient` pool, with a client per thread, and then using the `HttpClient` from the pool.
This would have been my answer. A `Redirect` actually sends a response to the client, instructing the client to reissue the call on the new location. A proxy makes a request for you, and sends you back the response.
Can you describe in more detail what /u/antiduh is suggesting? Your way makes sense to me with building a web api and hosting in IIS or apache. Is he suggesting building a console application that basically includes the web server functionality, and listening with a raw socket on some port which the client would communicate with? 
Doesn't Microsoft still recommend putting a proxy in front of asp net core apps if you're using the built in server and not iis? 
I was mostly asking because until I ran my code for a bit I didn't know I f*ed up
No, at least, not for a while. https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/?view=aspnetcore-2.2&amp;tabs=windows#kestrel
Coolo. Thanks for the info!
big data and machine learning. look up ML.NET. and don't feel like you have to stick to C#. look into advanced languages like erlang and clojure. 
Not really. The member could be observed outside the method so two successive member accesses of an instance cannot be inlined.
Can you use DataGridView instead? It’s easy to get the row and column and cell indexes from my experience.
Yeah, haha.
Clean Code is a classic. 
The underlying implementation is just a string to the path of the shell. As long as you get the right string for Cygwin, it should work just fine. You would just implement the `Shell` abstract methods for your shell of choice; or, you can send a PR for a shell implementation, and I will add it. The implementation basically requires a string to the path of the shell, and function that can take a command and properly pass it to that shell. See [here](https://github.com/twitchax/Sheller/blob/master/src/Core/Implementations/Shells/Bash.cs) for `bash`. If you have bash installed on Windows, Mac, or Linux, that implementation will work for invoking your command in `bash`. If you want to use `cmd.exe`, then you would use [this](https://github.com/twitchax/Sheller/blob/master/src/Core/Implementations/Shells/Cmd.cs) implementation.
There is no DataGridView in WPF, might be in a library pack, but im making this for non-private use and would like to not use extra \*.dll files if possible. One of the frustrating things i noticed when i went from win forms to WPF, is that some basic things are missing (like DataGridView and DateTimePicker)
&gt; black belt coding No. Stop that. STOP IT. STOP. BAD. BAD. &amp;#x200B;
Microsoft have created ML.net and its a framework for Manchine Learning. You can find it on Github: https://github.com/dotnet/machinelearning
Using it in practice and understanding it are two different things. I think it's good to seek a higher understanding.
If u just want to know how programming works, u can read this book. U even can learn T-pascal or visual basic .net. But C# 2.0 have not many useful features in it, such as lambdas, LINQ, async methods and even array initializers
You need to get yourself a newer book man that's from C# 2.0 and we are currently up to C# 8.0. I used Murach C# 2015 when I learned, obviously a but dated but still a great book. If you want something a bit newer Pro C# 7 with .Net and .Net Core. That book would give you a great foundation. 
There're tons of new features in C# because the current version is 7.3 so it'd be better to buy an updated book. My favorite one is"C# 7.0 in a Nutshell". Please check its article in [wikipedia](https://en.m.wikipedia.org/wiki/C_Sharp_(programming_language)) 
Ah right, fair enough, that’s frustrating. Sorry I’m not much help :(
You are missing a lot. C# 2.0 is ancient as Windows XP. I found "C# in a nutshell" series to be very good in explaining things. Get the latest one.
Think of programming like any other industry, such as farming. Modern farmers are using GPS to lay down entire fields of crops with millimetre precision using high-tech tractors that are like entire factories on wheels. And here you are trying to farm using a steam engine tractor from the 19th century. And that’s it. Yes, it will work, but at what cost to you? All you’ll know is that 120+ year old machine, and wouldn’t know what to do with a modern tractor in order to be competitive with modern farming methods. You would be utterly lost and behind the curve when trying to keep up with other farmers; you will essentially be obsolete before you even began to compete. Grab a book on C# 7. Learn how to use modern machinery from step one.
I have that book, beyond amazing to catch up on the language. @OP the book is also available through unethical means if you catch my drift. I recommend buying it physically though.
You will be better off using just online resources. You can learn the basics of C# with that book, but if you use it for too long you will end up using outdated ways of solving problems. Why are you restricted to using this ancient book? 
We’re up to C# 7.3, actually, but it’s not just about the language either, but also the framework. At least it’s 2.0 :p (anything before that will really be pretty useless now).
&gt; All you’ll know is that 120+ year old machine, I mean, I know you’re making an analogy, but this is really exaggerated. Sure there are new nice features, but it’s not like there is a lot you simply can’t do if you only know the old version. That said, I’d also find a new book :)
8 isn't in full release yet? My mistake. 
Not even feature fixed, I think.
I must admit, Microsoft‘s documentation got improved so much over the last years. I’m using it as single source for new features, reference and whenever I get stuck: https://docs.microsoft.com/en-us/dotnet/ They also have dedicated learning sections of you’re looking for that. 
C#2 is ancient. Learn 7
2 things you can do now: make a nice cosy fire with this book and just go with online resources like MSDN. make a nice cosy fire with this book and buy a newer one. I can't verify if anything works a bit different since C# 2, could be, i don't know, wasn't around when C# 2 was a thing, but I wouldn't risk it. It's always a possibility. And you'd have to look up so much new stuff on the web anyway, just go with the web entirely.
Microsoft's documentation and learning resources are amazing. I'm blown away by how well detailed all their libraries are and many of them include useful examples of the class in discussion.
Actually in my experience it is misleading to learn to many of C#'s features at once. I have had several students who didn't properly learn how to solve something the "normal" way and instead used unnecessarily complex features all over the place without understanding the downsides. So imho it's actually a good thing to start with a core feature set. 
Just go udemy.com and buy a cheap c# course. Reading from book much more time consuming
Still applicable today, most of the changes from that book’s version of c# are syntax sugar...except for maybe generics and linq...
\&gt;C# 2.0
It’s ok, a friend texted me on my Nokia 6510 phone 
Looking over the additions each version; anonymous types, lambdas, async, tuples, extension methods the list goes on with some significant changes in how code is written and structured. I was going to say 120 years was a bit of a stretch but reading over the changes i'm going to side with the 120 year analogy. If i were to put a 2.0 code base next to a 7.3 one i would almost believe they were different languages.
I also recommend that book. I'm currently reading it and it's amazing how much I'm learning everyday! I had always thought it wasn't worth it to read that king of books, that I would learn by myself just working with the techno... I was wrong, you can learn the basics like that but you also need to learn more advanced content that you can then implement in your projects. 
I will agree there, especially over the last 2 years they've gone from my last port of call to first, they used to all be either straight out of /r/restofthefuckingowl or go read the API documentation and figure it out yourself.
Here's a sneak peek of /r/restofthefuckingowl using the [top posts](https://np.reddit.com/r/restofthefuckingowl/top/?sort=top&amp;t=year) of the year! \#1: [Draw the rest of the fucking rose.](https://imgur.com/vngvAOm) | [76 comments](https://np.reddit.com/r/restofthefuckingowl/comments/8o3vei/draw_the_rest_of_the_fucking_rose/) \#2: [“Now add bits to the bird” - from my 5 year old’s school book](https://i.redd.it/16dvt7k170u01.jpg) | [168 comments](https://np.reddit.com/r/restofthefuckingowl/comments/8ermit/now_add_bits_to_the_bird_from_my_5_year_olds/) \#3: [How to retire at 38](https://i.redd.it/2lbohfjp50g21.jpg) | [436 comments](https://np.reddit.com/r/restofthefuckingowl/comments/apkvmm/how_to_retire_at_38/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
I started out programming with "The C Programming Lamguage"s first version, which i got from my grand father when i was young. They talked about pointers like it was the holy grail - sure its extremely outdated, but you learn all the basics a language can have, when it is still the same language as it was back then. (E.g learning python1 does not make any sense) I started out, only with this one book - sure i suffered a lot, so many handy functions are not ready to use and you(!) have to come up with the ideas somebody had years ago (and ofc implemened it). What you won't learn from a book like this are design principles which are key for modern software projects - but still, you can learn them later online if it is your first language. Just make sure you don't stick to your coding style for too long, it would be totaly bad practice. I would recommend lerning it with the book! Master the basics and understand whats going on behind the scenes. You will come out as a great programmer (after years of exp.)
I just want to mention like the others: sure thing, you won't use c# 2.0 skills for a serious project, its about the basics. And if anybody is wants to read about the book i mentioned: its free and legal available! https://archive.org/details/TheCProgrammingLanguageFirstEdition Even for experienced Coders it's worth checking out
&gt; It could probably be improved by creating an HttpClient pool, with a client per thread, and then using the HttpClient from the pool. Yeah, don't do stuff like this: https://github.com/twitchax/AspNetCore.Proxy/blob/f1f5eb823661a5433f84955f5c0af3d75e288e8d/src/Core/Helpers.cs#L87 And don't create a pool yourself either. Use the `IHttpClientFactory` that is provided by Microsoft.
Get yourself a trial on Pluralsight If I remember rightly, you can sign up to azure for their free tier and get a 3 month pass on pluralsight (don’t quote me on this). I just know I’ve had a 3 month trial with them before through the msdn members package
It really depends if you already know how to program or not. If you are trying to learn the basics any programming language will do (any version, it doesn't matter), however if your goal is to learn idiomatic C# you need to start with the latest version, because the language evolves and there are now better ways to solve certain kinds of problems than a few years ago. If you pick up an old book you will just sabotage yourself.
Yeah, so, the underlying code for this was actually part of an abandoned package that Microsoft used to ship. When it was abandoned, I put it into this package. That is actually code that I took from that project, funnily enough. Never ran into performance issues, so never looked into the underlying code for performance issues. I should go through and address those things.
https://aspnetmonsters.com/2016/08/2016-08-27-httpclientwrong/
I echo what others have said. It is not worth learning from this book. C# 2.0 does not include LINQ which is fundamental to vaguely modern C#. If you use this book you will be learning old technologies and techniques and you will form bad habits from the start that will be an additional barrier to learning/practical application. I was tempted to say “technically” you can learn C#/programming this book... but I think that’s sugar coating it too much and isn’t helpful advice. I’m not being elitist or snobbish about keeping up with the times... C# 2.0 is literally too darn old. Find some online resources or a cheap paper book or ebook or some YouTube videos or something, but be more up to date that this. It is entirely possible all of my understanding is self-taught and on-the-cheap. 
The [Wikipedia article on C#](https://en.wikipedia.org/wiki/C_Sharp_(programming_language)#New_features) lists what came with each version... and looking back it's pretty amazing what's added over the years that we just take for granted now.
Organization is such a difficult topic that they even created a pattern for it in larger apps: DDD
Ah alright, that clears it up. Thanks a lot!
That's just how yield gets lowered. Async does something similar. 
&gt; I don’t care if information may be missing, but only if information may be incorrect/misleading There are better ways to do things in newer versions of C# (3.0 was a huge leap forward), but you will still learn the fundamentals from a C# 2.0 book. Don't forget to look in the sidebar --&gt; for free resources (or via the hamburger menu on mobile). The Yellow Book and the C# Fundamentals video series are both well liked.
&gt; If i were to put a 2.0 code base next to a 7.3 one i would almost believe they were different languages. There are many additions, yes, but I work in a large mixed code base with some of it dating back to close to 2.0, but most of it much newer. You can easily see the similarity. But old code can be pretty verbose :p 
The yellow book is free and is a written in a easy to understand language. http://www.csharpcourse.com
Yep, I have read that before. [Done](https://github.com/twitchax/AspNetCore.Proxy/commit/aef3d259a797eeb1498f55ec9148eb0a734d0756), and [released](https://github.com/twitchax/AspNetCore.Proxy/releases/tag/v2.0.0).
And what is your question? What is your issue and what have you tried to solve it?
Happy cake day!
That analogy is way too strong. C# 7 can be daunting. But essentially, it's just extensions to earlier versions of C#, and all the extensions are backwards compatible. As an aside, that book is about where Java is today. It has 95% of the language features required to do the job.
At the top of update put if (i == 3) { return; } this will stop any further execution. It's worth noting that update is called every frame not second.
You can instead watch YouTube tutorials. I'd recommend kudvenkat as his tutorials are very detailed on what you'll need to know. 
C 2.0 is over 13 years old. You will be missing important features such as Lambdas, Linq and expression trees, extention methods, async, etc. Is not that you'll be "missing" information or that it's incorrect, the problem is you'll open source code to modern software and think "that's not C#"🤔.
Learning the latest and greatest doesn't take gain much when you work somewhere still targeting .Net 3.5 or lower... 
If you use the extension ghostdoc it will auto fill from base class when you type ///
Which are an extremely important to understand. Many things from C# 2.0 have been deprecated because they have consistently made improvements as the .net framework evolved. 
True, but mostly syntax sugar...the jump from 2 to 4 was a big one, but everything you can do in 2.0, 1.1 and even 1.0 can still be used even today
As a guy who supports legacy Enterprise c# apps for a multi-billion dollar corporation (companies that are notorious for being slow to upgrade) you won't really run into many circumstances where you will be restricted to anything less than C# 4. With the impending death of Windows 7 and it's equivalent Windows Server version the lower .net frameworks won't be seen anymore either so I think going with C# 5 at the lowest is safe. I'd recommend getting a book that's at least C# 5 and then knowing the differences in what features were added for 5, 6, 7 so you can restrict yourself if you plan to be in a job that supports legacy code.
I wouldn’t use that. For C# anything pre .net 3.5 is too different (linq is a huge shift in the way we dev) For anything web related you may as well not learn anything outdated. So basically my personal advice is if you want to do winform/wpf/xamarin or any other application UI do not settle for anything earlier than .net 3.5. If you want to do anything web related do not settle for anything earlier than .net core 2.0
If that is what you got for now, the information is still valid. Some people say that your will miss out on Links, but you won't. Linq isn't hard, it's easy. You'll find good information on that book. And you'll appreciate what Linq will improve. Something old doesn't make it invalid/useless. It makes you appreciate the easier/ new ways.
.net 2 is not c# 2
If your book was written for C# 2.0, there's a lot of modern stuff you'll be missing out on. That's not necessarily a problem, as much of the modern stuff is built on the foundations of class and language features that were around earlier, so it'll be good to help you understand the fundamental concepts involved, but the book won't inform you about the state of the art in certain areas. The main areas that stick out to me are: * Database access: LINQ and Lambda Expressions didn't appear until C# 3, so I guess your book won't cover Entity Framework at all either. Anything your book says on DbConnections and DbDataReaders is good, but if it starts talking about DataAdapters and DataSets, put it down and find something more modern. * Desktop UIs: WPF was in its infancy in 2005, and I don't think it was really included in Visual Studio until 2008. Windows Forms does still have its place in C# development, but if you want to make a slick, whizzy desktop application, WPF is the place to go today. * Web: If you want to learn the state of the art in .net web applications today, put this book down and pick up something that talks about ASP.NET Core. Otherwise you might accidentally some ASP.NET Web Forms, and I wouldn't wish that on anyone in this day and age...
Something to keep in mind, is that college costs what, 100k, books per class cost like ~100 per class. Invest in yourself, and pay for a good c# book. You can get updated ones cheap for like 10-15 dollars. It’s worth it.
I’d even recommend buying yourself a plurasight subscription. You won’t regret it.
Let me put it to you this way: any .Net programmer who hasn't refreshed his skills in the last 3-5 years is so far behind the power curve he may never recover. The same goes for web devs of any sort. Do I have any books that are older than that? Yes. Are they worth reading? Not beyond the absolute basics of programming. Reading a book like that, you'll learn some practices that are actually wrong today, and it will hurt you in the long run. I agree with /u/rekabis. Get rid of that garbage for the same reason you'd toss out a can of tuna that's been in your grandmother's cupboard since that book was published. You cannot trust it. Your best option is one of the video course sites. At the VERY least, get a current book. &amp;#x200B;
C# is a pretty bread and butter programming language, if you want something more complex you will need to learn something else. I suggest Haskell.
On the one hand, C# has evolved a _lot_ since those days. The biggest one probably being LINQ. On the other hand, while it has gained a lot of functional aspects, its basic nature hasn’t changed: it is primarily an imperative, object-oriented language with C-style syntax. It started out as a Java competitor but has found its own way and arguably evolved a fair bit faster. If you know a language like Java already, you will have little trouble getting familiar. And if you read a book like this, it won’t really teach you anything *wrong*, though it may focus on the wrong things. Out with SOAP and BeginInvoke; in with Web API and async/await. You didn’t really tell us about your background (which languages do you already know, if any?) and intentions (what kind of code do you intend to write? A web app? Desktop app? Mobile? A game?), so it’s hard to say what benefit this book will give you.
This. I wouldn’t bother with that old 2.0 book. You’d learn a lot and then be confused by things like lambda expressions when you encounter any modern codebase.
Hello Mookie I have that same book. C#7.0 in a nut shell. I am a newbie do you think I should read that book yet? It has a lot of material. Appreciate your opinion.
Cool, looks a lot like [CliWrap](https://github.com/Tyrrrz/CliWrap) :)
What about a long is slow? Which operations are you performing and measuring. And even a long couldn't store 128 digits. Back of the envelope math says you need about 425 bits to precisely store 128 digit numbers (assuming you are talking base ten). Obviously there are no built in types for that sort of thing. You might want to look at BigInteger https://docs.microsoft.com/en-us/dotnet/api/system.numerics.biginteger?view=netframework-4.7.2. But clearly it will be slower than a long. If we knew more about the operations and use case, maybe we could give better recommendations. 
It's a must read book so the sooner the better. IMHO. It helps me a lot.
Yes, but this source is checked in. Check GitHub.
I strongly recommend you follow the advice of getting a more current book in version 7 or upcoming 8. Being too outdated could lead you to some undocumented behavior changes that are not clear when looking at the code. for/foreach with lambdas/closures, certain exceptions that were thrown by the old framework, etc .. These are not fights you want to be having with your projects unless u plan to target an older version of .net.
Have a gulp file in your project and define a task to walk the use through creating their API key. Use Gulp-Store and environment variables to store a config Jon file in the users user data. Keep in mind differences between windows and linux. Then users can just Gulp Setup -apikey blsgdhdhfhfstfytd5545$$-:'vgtd Or gulp-setup and get prompted. And gulp on node is cross platform. 
[Try this](https://docs.microsoft.com/en-us/aspnet/core/security/app-secrets?view=aspnetcore-2.2&amp;tabs=windows)
Long will slow the code down by 10,000 times? Think you need a rewrite not a new data type lol
You can send day a over udp without anyone asking for it. You just need to know who is listening.
Pluralsight has quite a few courses on Asp.net core and angular.js
Yeah a bit odd. I'm assuming they hand coded that for performance gain over compiler somewhere.
Find a way to make yourself indispensable. If you make tools like that... and aren’t told by management... do it after hours on your own time. Then you control the replication and use of it. 
If anything get 3.0 at least, that is where generics were introduced. You can also get a ton of free material by following how-tos on microsoft documentation pages, youtube, microsoft virtual academy, and by reading blogs of people like Jon Skeet, just his eduLINQ writeup is about 40 articles, teaching you a ton of stuff. Public libraries also offer a ton of books for very low monthly fee.
Have you taken any of them and can recommend one?
Just to say there won't necessarily be a 100 releases. They just use the 100s to group features. So they could jump from 105 to 200 to make it a different band.
That depends... Do you need transactional consistency in the files and metadata? If not - I'd just go filesystem
Cuz it was cheap at half-price books lol. Also I genuinely feel like I do better with a printed book. I know it’s kinda silly and irrational but eh whatever. 
[removed]
"Building your first app with asp.net core" by Kevin Dockx "Building a web app with Asp.net core, mvc, entity frame work, bootstrap and angular..." by Shawn Wildermuth I've finished both...both are good. 
So I’m just some random 15 yo who wants to get good at programming, like really good, I’m interested in attempting to learn conventions and just generally things before uni. I know it’s kinda a far fetched goal but I feel like I’m willing to work at it to some degree. However, I’m pretty bad at programming, not gonna sugar coat it. I always felt like I lacked the theory behind everything, and I wanted to see if tackling some of that could help me. 
Even the newer edition C# Programming Language misses a lot. I'd recommend picking up John Skeet's C# In Depth 4th Edition on Manning https://www.manning.com/books/c-sharp-in-depth-fourth-edition You also get the 3rd edition as a pdf and/or ebook free with it (or at least I did).
Problem us you will be learning patterns used to overcome problems inneficuently as many have been solved in IL or machine code today especially leveraging CPU extensions. But if you plan to start here and work towards newer books then that is an interesting insight into evolution of C# especially if you take care to investigate how things got fixed. Good luck 
I even got mine printed! Take the pdf, get it printed by an online printer and mailed to you.
You may want to change the name of you move forward with it.
After your scope method you can do .OnActivation() and pass in a method to run. Do it in there.
What book do you want? I can send it to you. I was going to offer to send my C# book (C# 6.0 and the .NET 4.6 Framework), but I love it too much... I learn best from paper books, too! They can be a bit outdated because the language changes in the time it takes to get published, but they shouldn't be as outdated as this one.
&gt;As an aside, this ancient book is about the level that Java is at today. You haven't checked Java 10, have you?
C# 2 is very old, but really you only need to learn in-depth C# 3, and then just learn. C# 4,5,6,7 individually by reading on what they added. https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-version-history
If you're dealing with SQL Server, then the answer is: File system via database. https://docs.microsoft.com/en-us/sql/relational-databases/blob/filestream-sql-server?view=sql-server-2017 In general it's a bad advise to store blob data in the databases. It will blow it up and make it more slow.
I'd start with C#3, and learn that. The rest you can read up on one at a time online pretty easily.
&gt; For anything web related you may as well not learn anything outdated. I can agree with that to an extent. Frameworks change rather quickly, and it's not very helpful to learn legacy ones unless you're going to be supporting legacy code.
Not silly. Having an actual book is fantastic, especially since you can write your own notes, mark pages, etc. Studies show that writing things down is more conducive to memorization than typing. It's also a lot easier to navigate than a pdf.
I've always liked the books by Apress (the yellow and black books). They usually take you through building a project and explain the steps along the way. 
Which types of problems are you having trouble solving?
I like books as well when it comes to big topics like an entire programming languages. But the problem of them being out of date is real. If you are serious at learning C#, get a newer book. I think C# 4 is the oldest even a beginner should start with. But unless you get an old one very cheap buy a current C#7 or newer one. 
I have mine printed too. It was handed to me by its author. Would definitely, highly recommend Robs materials on programming. Both his C# &amp; Python books are awesome.
Can you give me an example? :)
Don't give up. Keep practicing and don't get discouraged. Starting early will give you an advantage in the long run. Try to read and attempt to write code a few times a week or daily if you can. Good luck!
You may want to edit your code samples to not say BlogPost in a UserState example
It's literally OP's original question. If OP wants to use event-based programming, that's fine too. But that wasn't the question.
Of course. Just like for .NET there has been 4, 4.5/1/2 and a handful more. The question is, for how long will one batch of 100 be supported. I don't expect 15 years like it's the case for .NET 4, but still...
Appreciate the tips! I will certainly look at those, especially the last one sounds very relevant. :)
Exactly. This is exactly what usersecrets.json is designed for. 
Thanks! I will see if i can get it near me, combined with one of the courses from pluralsight i might be covered, at least on the mvc stuff.
Are you catching a crossthread violation by chance? If you're executing a method in a class file that updates something on the UI thread you need to invoke the update using a method invoker or similar thread safe call. 
Good answer but I'd add that linq is about a whole lot more than data access. It's a full functional stream processing system. I find that a very high percentage of my code is linq statements whether I'm accessing data or not. Expressions in the meantime are yet another whole subject - basically getting into meta programming and expression tree parsing Next, the TPL is a big friggin deal asking with async/await and what they do and do not do with respect to threading. Finally, generics are well beyond where they were in 2.0. Yes the underlying core has not changed but what you can and cannot do with them certainly has. Oh and dynamics. They are not necessarily the biggest deal but very useful as a way out of type system handcuffs
In this case, the operations that are used are basic arithmetic, multiplying, adding and comparing numbers and the modulo operation, which is used in combination with division to get a digit from a number.
I don't think it's true that the basic nature has not changed. Just look at how different inversion of control is now versus the castle Windsor days. There is simply more you can do with the language's metaprogramming aspects and the best developers nowadays certainly take advantage
[https://www.microsoft.com/en-us/research/wp-content/uploads/2006/04/tr-2006-45.pdf](https://www.microsoft.com/en-us/research/wp-content/uploads/2006/04/tr-2006-45.pdf)
I've tested it on a few numbers, in this case the program could discover that 123123111111111 is dividable by 3 within 12 ms and that 999998727899999 is a prime number also within 12 ms on a single thread with less then 10MB ram. When I tested the same numbers on a single thread it took 10000 times as long. I don't understand why, because I didn't think that datatypes would make such an impact.
I don't agree with that personally. I don't see why plugins giving ide functionality stops it being an ide once you have the plugins. I seems like a pointless distinction. 
It's good. But not compared to vs.
Im reading C# in Depth by Jon Skeet
&gt; I want to save 100,000 + files ... about 100k in size each ... sqlite database Danger, Will Robinson. &gt; 100,000 + files ... If I save the files through the file system Don't put them all in the same directory. What kind of app is this, what's the situation here? What kind of files? I wonder about the choice of SQLite, but there are scenarios where it would be appropriate (data backing a local app.. but what local app has 100,000 100kB files along with it). If you were talking about a web app I'd say put them on cloud storage and possibly behind a CDN.
\&gt; 1mb use file system &lt; 256 kb use SQL Server Seems reasonable to me.
Architecture.
&gt; Objects that are being stored are, on average, larger than 1 MB. &gt; Fast read access is important. &gt; You are developing applications that use a middle tier for application logic. &gt; For smaller objects, storing varbinary(max) BLOBs in the database often provides better streaming performance. So according to your link and his file size, varBinary(max) is the correct choice. 
100,000 records with SQLite? That doesn't sound right. SQLite is for single user scenarios. It performs really poorly if you try to have multiple people writing to it at the same time. (Multiple readers are ok if there are no writers at all.) I don't know your situation, but it sounds like you are using the wrong database.
It's just a programming language. No amount of staring into a carpenter's toolbox makes a better chair.
Also consider backup and recovery. Files in the database make backups simpler, but dramatically increase the amount of time they take.
I really don’t think IoC is (or should be) the sort of thing relevant to a teenager just starting out.
On mobile so lazy typing it. InSingletonScope().OnActivated(item =&gt; item.DoThatStuff) Also from memory so maybe slightly off.
I've been doing it for 10 years, almost ... just feeling bored 
Is it a library? Is it an asp.net website? Is it a console app? The answer differs based on that.
EF is definitely not the holy grail for all database access. It's fine and handy for basic stuff, but as soon as it's complicated or performance matters, go back to your basics.
ive tried just setting the variable directly, using a dispatcher and a task. nothing working.
This is an extraordinary goal. Well done! I started writing code (not very good code) at your age on the end of a 300baud acoustic coupled modem)If you PM me your address and the name of a book you're interested in. I'll get it to you.
Try setting a breakpoint at the event trigger and step through the debugger line by line (F11 in VS). Keep an eye on your output window and watch for any first chance exceptions that are being handled. Set breakpoints on any error traps you have too and see if maybe you're getting caught up in one of those. Something tells me you're catching an exception somewhere, whether it be a first chance or a crossthread violation, that's being suppressed and halting execution of your code. But I could be wrong. Step through your code as I mentioned above and let me know what you see. 
This is not silly at all and don't ever feel that way. As long as you don't ONLY learn from a book you're fine. However, to echo what everyone else is saying here: You will learn some outdated ways of handling situations if you use THIS particular book. [The Yellow Book](http://www.csharpcourse.com) is completely free to download and you can print it off yourself. Find someplace with cheap bulk printing and put it in a notebook. Also, talk to the people at Half Price books and tell them you're on the lookout for an updated C# book. When I lived in Indy they were really good about tracking down books people wanted for you. Hell, if you're in Indy I'll give my friend who works there a call and see what she can find.
&gt; We did not investigate the behavior of NTFS or SQL Server when multiple writes to multiple objects are interleaved. Keep in mind the testing in that paper was limited. I certainly would not refer to those values as a rule of thumb based on this paper alone.
I'm not, it corresponds to the recommendations cited by AB in MSDN.
Ive also tried that too... i've used multiple message boxes that display the name of the property being changed as well as when and they all match up to the correct place (aka it all works) Only problem is the main class doesnt want to update it's main variable that should be changed from the 2nd class even though i've put message boxes before and after the part where the main variable should be changed... and btw there are try-catches but none of the are catching anything (aka nothing going wrong... as far as i know)
Holy shit, this ended up being long-winded. My bad. TLDR: 1. Do you know of any good resources on understanding the structure, file interaction, etc... of non-trivial C# programs? 2. Does anything stand out to you as something that was super-helpful when going from beginner "learn loops and arrays" to intermediate/professional?
Although this book is outdated, it isn't bad to understand C# 2.0 as it is the ground work for everything. It won't help you day to day, but its good to know.
and async/await... that is important stuff!
Not much to say, but one thing that helped me was building a class library for myself that contained code I was using in many places. Whenever I would work on a new project and built code that I thought I would reuse, I'd clean it up and then pull it into my library. Doing this work helped me to build progressively larger projects while still understanding the code base. Learning how to use libraries and adding references to projects is a part of that. It also taught me how the code structure that I write directly impacts maintainability and reuse. In the beginning, I'd rewrite my library over and over trying to get it better. When you start thinking about that, it opens the door to design patterns and using interfaces/subclasses intelligently. Good luck and keep at it! If you have more specific questions, I'd be happy to help answer them!
 string myStr = null; myStr.IsNullOrEmpty(); Tell me you see the issue with this.
The reason `IsNullOrEmpty` is a static method is because if the single-dispatch target (i.e. `this`) was `null`, you'd get a null reference exception when invoking a method on it. Example: string x = null; bool isNullOrEmpty = x.IsNullOrEmpty(); // Whoops, instance method invocation on a null object. Segfault/NRE! Now, since that API was designed we *now* have extension methods that could in fact be used to make an API like that; but they're really just static methods made to look like instance methods, so same thing in the end. Btw `String.Empty` is a static field because that's what makes the most sense. There's only one value globally for an 'empty' string.
Sorry, I couldn't resist a swipe at Java :) JDK 10 doesn't add much. But that's not a bad thing - it's a strength that it doesn't change much, so it's easier to learn and more suitable for Enterprise (which wants rock solid tooling). Big topic.
What I'm getting at, is how do we know what advanced means to you if we don't know where your limits are currently? What might push your abilities and make you pull your hair out might be my day-to-day.
I genuinely have no idea how you are running a wpf in IIS. I didn't think that was possible. How do you do that?
I'm sorry, but how is that a justification for not having instance methods? Consider this code in C++ (not compiled, may have typos): class MyFancyString { public: MyFancyString() { this-&gt;buffer = new char[100]; } virtual ~MyFancyString() { delete this-&gt;buffer; } bool IsEmpty() const { return strcmp(this-&gt;buffer, ""); } private: char* buffer; } MyFancyString* myString = nullptr; bool empty = myString-&gt;IsEmpty(); That's going to crash because myString is a nullptr and you're calling IsEmpty() on it, however; Nothing about that fact prevents me from having IsEmpty as a method on the instance. It still seems like a design choice stemming from a preference?
That's a very helpful suggestion, thank you! I know libraries are an integral part of development (and any program's structure) and I know so little about them now (I know sometimes I see squiggly lines, press Alt+Enter, then `using System.Net` shows up on top of the program, lol). So that will help me learn more about libraries and structure and will give me something concrete to google (I bet I get many more relevant hits googling "building a C# class library" as opposed to "uhh... C# program structure?"). And 100% with you on importance of maintainability and reuse. At work I wrote a PowerShell script to automate some of the mundane tasks I have to do every day (mostly file manipulation, hence why I brought up Excel above). And I kept adding little things and it blossomed into a full-blown PowerShell CLI program (like, "Press 'y' for yes" type shit) that was passed out to my whole team. It's awesome and helpful and I'm proud of it, But I knew so much less back then, and now extending that or maintaining all the little hacks I'd wiggled in just to make it work is such a pain in the ass. So I feel that in my heart and that's why I've been reading Clean Architecture, Clean Code, etc..., so I don't paint myself into a corner like this again. One of my goals is to adapt that PowerShell script to a clean, easy-to-maintain-and-extend, full-blown C# program (with a GUI and everything), and that task is sort of related to my post above. Anyway, thanks so much for your time and recommendation! I've definitely added that to the top of my research/learn list. 
So after some research I saw that my previous collegee made a destkop app that is acting like a web server and is actually running on a virtual windows remote machine(and not on iis) the funniest part is that somehow the frontend written in js connects to that and it works but the thing is the server gets compiled down to a exe file so every time the server crashes you need to manually start it up, i have never seen something so wrong in my whole dev career.
No you're missing the point. If it was just `IsEmpty()` that would be one thing- but the fact that the method checks for *null* makes it static by necessity. Doing something like `if (this == null)` in C# is almost always a [code smell](https://en.wikipedia.org/wiki/Code_smell) because the runtime injects a null-reference check in to every instance call anyway before the method is actually invoked. If it didn't do that, you'd presumably get a segfault from attempting to access the method table of/read from a null pointer before you got to that point anyway, just like in C++. (For completeness sake: Sometimes it can make sense to compare `this` to `null` in very esoteric scenarios. But this isn't one of them.) ---- If you simply want `myStr.IsEmpty` rather than `myStr.Equals(String.Empty, ...)` then you can write an [extension method](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/extension-methods) for that. But I don't think it's really worth it.
Without knowing linq, extension methods, async and await, and dozens of other things, an expert in c# 2.0 would be lost in c# 7
Ahh okay, so C# goes out of its way to throw an exception that can be handled when a null reference crash would otherwise occur, and that behavior leads to certain ideal practices, which results in some static class methods which would otherwise be instance members? I think that makes sense. It also explains why I can call myString.Replace() or myString.Contains() just like I would in C++, as they wouldn't naturally check for a null reference like a empty check would?
This is what the null propogating operator is for 🤣
Structure depends heavily on purpose. Xamarin will look way different than unity , than asp.net, etc. But really what you need to do is come up with a project - a big one - and then code it. 
I'm doing files for this kind of problem, but I also want to make my game moddable so the files need to be editable by outside apps
Really great writup. JetBrains is hoping to have profiling on Mac and Linux in Rider 2019.1 (https://blog.jetbrains.com/dotnet/2019/01/17/performance-profiling-rider-2018-3-whats-new/). They say it’s basically done, but needs a little polish. C# definitely feels a bit Microsoft centric compared to Java which seems to have a more diverse ecosystem. However, with better Mac and Linux support, great language features, and a commitment to being open, it might just be a matter of time.
Instead of assigning the value of the Textbox directly like you have been, try this: &amp;#x200B; MethodInvoker mi = new MethodInvoker(() =&gt; YourTextBox.Text = TBText); if (YourTextBox.InvokeRequired) { YourTextBox.Invoke(mi); } else { mi.Invoke(); } This MethodInvoker Snippet makes a thread safe call to set the value of a control in the UI thread from a method being executed on a separate thread. Without using a MethodInvoker or another thread safe call your program will end up throwing a crossthread violation exception, which may be getting suppressed somehow. Give this a try, let me know how it goes. Hopefully this works for you. 
Files in a database in my experience cause pain.
I guess we'll start at the basics. Your project type will dictate whether you get something you can actually run (an exe) or a library that can be ran by another program (a dll). In theory, the only real difference between the two is just that an exe has an entry point so that the app can start, where the dll does not. In practice, different project types will give you different things and set up different environments for you, so it's not as simple as choosing an exe or a dll, but maybe you want a console app, or a WinForms app, or a WPF app, or a Windows Service, and so on and so forth. Yes, Visual Studio _Solutions_ can have multiple projects, and you can reference one project from another. It is highly recommended that you get in the habit of using multiple projects for the purpose of encapsulation. By putting code into a project, I can more effectively hide part of it (internal or private members). Anything that uses my project can only see what I expose (public members), so this helps keep you organized and keeps different parts of your code from doing things they shouldn't by accessing things that would be better off if they were hidden. Projects also aid in code reuse and make dependencies between projects much clearer. Resources in the technical sense are code items (icons, setting files, etc) that are built and packaged with the dll/exe. Those items are static and don't change once you run your code. Obviously your talking about resources in a more general sense, but that isn't the same as dot net resources, so I wanted to point that out. This means that the whole sequence of steps you laid out is something that you're going to have to build yourself. There's a number of steps you mentioned, so I won't comment on all of them, but I give you a hint on actually reading an Excel file. There's several ways to do this, but the best and easiest way I've found is using a library called [EPPlus](https://github.com/JanKallman/EPPlus). Docs aren't great, but there's plenty of examples out there. As far as "Clean Architecture", it's a great book, but without trying to sound to harsh, it's probably beyond where you are at this point. I would look towards something that's focused more on having you build something in a framework, whether it be ASP.Net, WPF/XAML, or even Unity if you want to do game development. Frankly without focus on one specific area, you'll get a lot of different advice, because each different area needs different things. Without enough context to know why that area does something a particular way, it can get confusing trying to apply all of that advice. Hope this helps.
Ha! Yeah, I didn't see your project until I was already way down the rabbit hole. I think the biggest difference is that Sheller returns a new instance every time without editing the calling instance, so you can reuse parts. For example, I had a use case where I created a shell object with a stdout handler, and then I just reused that over and over again everywhere in the app.
True, true. A C# 2 book is a good starter, have to upgrade to C# 7 at some point.
Just as a small side note, I’ve grown to favor Shared Projects for reusable utility code. It cuts down on the overhead and allows me to easily pick and choose between multiple shared projects based on category thus cutting down on unused code. Add these in at the Solution level. 
Release notes: [https://github.com/aelij/RoslynPad/releases/tag/14](https://github.com/aelij/RoslynPad/releases/tag/14) Version highlights: * .NET Core support on Windows and on Mac/Linux with Avalonia * Revamped NuGet with package references * Simplified process model with a small xplat build system that can run code independently of RoslynPad * C# 8
Thank you for the insight there and thanks so much for taking the time to respond. Mostly so far I've been working on just console apps and WPF apps. And just seeing the difference between those two I can definitely see how different use cases/frameworks would have different structures. I guess I may not have framed my question the right way; specifically I'm not fully understanding a lot of the "why" behind some of the things I do in Visual Studio/programming, how it's implemented, and various basic parts. So I thought it would be helpful if there was a tutorial focusing on overall like "this is what constitutes a project, this is a solution, this is a program, this is how your .cs files interact, this is what a repo is, this is what a .sln file is, here's what your bin folder is for, this is how you properly set up a reference file, this is how you set up and properly manage a program directory, here's how you associate a file or library, here are little quirks or things you should consider, etc..." for all that more broad structural stuff. A tutorial like that that would kind of explain and tie everything together, I feel. I know that's pretty broad and I know you just explained that depends heavily on purpose/framework, but I would imagine there would be similarities for anything running C#? I do have a few large projects I'm working on (pretty much exclusively working on WPF stuff right now, because that seemed like it would give me an introduction to build a native Windows desktop app with a GUI designed in part using a markup language, I feel like that would be good for me to learn). And like, I can make things work and run. But sometimes (and admittedly, part of this is my own fault and part of this is just the nature of development/programming) things just seem muzzy and really intricate and it's hard for me to keep track of everything. I mean, I've read a bunch on SOLID principles and I feel like I'm decent at implementing those, so it's not like my code itself or classes are crazy complicated, it's just trying to better organize my large projects. My thinking was, if I better understood how C# (or any language) handled things under the hood (like repos or .sln or whatever, this is the stuff I don't know much about), I'd be better able to understand how to break my large programs up into smaller solutions or projects or folders or whatever, rather than just having a bunch of .cs files staring at me from my solutions explorer. Does that make sense, or am I completely missing the mark here? And again, totally not expecting anyone to answer each of my questions above, I was just curious if anyone was aware of a good tutorial or reading material or something like that that may be helpful. Anyway, thanks again so much for your time and response. 
Have you tried YouTube? Search for iamtimcorey - he has some videos on specific issues, but is currently producing a series on start- finish of an application. It’s a great start to understanding how real development can work, slightly more complex apps, and free. Once you have followed his work then you will be both employable and at the ‘stackoverflow stage’ for your specific issues.
For now it's a form using .net.
Thanks, I'll do some reading.
Well C# goes out of its way to replace a hard segfault with a nice stack trace, but you couldn't make `IsNullOrEmpty()` in C++ either. You can't call an instance method through a null pointer in either language.
All of the disposable examples should either be sealed or correctly implement the disposing pattern. I suggest you reread this: https://www.codeproject.com/KB/dotnet/idisposable.aspx In short we should be splitting the handling of managed resources vs unmanaged resources and both should implement `IDisposable`... Unmanaged resources are handled in "Level 0" types. These are: * created specifically to handle disposal of the unmanaged resource * either `abstract` or `sealed` (almost always `sealed`) * designed to run in atomic regions * almost always derive from `SafeHandle` (thus designed to operate in a specific type of atomic region known as a Constrained Execution Region where the CLR has special support for `SafeHandle`) * may contain unmanaged resources or other level 0 types; if holding other level 0 types, must maintain reference counts in an atomic way Managed disposable types are handled in "level 1" types; these: * do not use a finalizer * do not inherit from a level 0 type * either `sealed` or implement Dispose by calling a virtual method which disposes of the managed disposable types held (prefer `sealed` if possible) 
Explain that last part. It's a language.
&gt; If you have a DLL compiled with .NET Framework, even if the code is “compatible”, the same DLL will not work with .NET Core. You will have to recompile it with .NET Standard or use multi-targeting. This is not exactly true. dotnet standard 2.0 provides a "compatibility mode" which can translate dotnet proper IL to dotnet standard IL, and thus usable by a dotnet core runtime. https://docs.microsoft.com/en-us/dotnet/standard/net-standard#net-framework-compatibility-mode 
Embedded database. One user.
It's a windows forms exe? Then it means that you want to load such configurations form file or registry and allow users to set it in "app settings". 
Why would I really need this if I have VS and VSCode?
Might work, but you are also in the free range for any commercial database. 
Wow cool stuff thanks, I hope I can watch it at work 
Local app. Taking infrared images about 1x/minute. Its the image being saved along with meta data about the images. That's driving the embedded database. One user...the app. Not a web app. Yeah...perhaps on folder per day.
\&gt; I guess specifically what would be helpful to me right now is tutorials or reading material on program structure and functionality (sorry, vague, I'm not entirely sure how to phrase this question). Right off the bat I'm going to suggest checking out DestroyAllSoftware because it helped me a lot when I was at the stage of learning you're in right now. If you haven't checked it out yet then you might want to see if the Intermediate or Advanced courses on Pluralsight are useful. \&gt; For example though, I open Visual Studio, and create a new project, write my classes, maybe add a reference file, and that's it. And that's all self-contained, I do a build and it does its thing and runs and works. But I don't know much at all about .dll files or .exe files, how the program actually like, works. You've got a good foundation of understanding to start learning about the .NET ecosystem and how MSBuild is incorporated into it. One thing that may help is for you to create your own Class Library project in VS and build it in release mode. Once you build it then you can take the \`.dll\` file from your \`..\\bin\\Release\\\` directory under the project folder. Place that \`.dll\` which is a class library into a different solution and add it as a Reference to a new project. This is basically what happens when you are downloading libraries from NuGet. Likewise, an \`.exe\` file is your executable and is a program which can be launched. An executable is typically written to target a framework like .NET Core or .NET Framework; by comparison, a Class Library often targets the .NET Standard which is a set of APIs supported by different frameworks. You can run your .NET Standard libraries on both .NET Core and .NET Framework executable files so long as they support that version of the standard APIs. \&gt;Or last example, say I want a program that checks a server for an oft-updated Excel file, and if the Excel file is newer than the one my program has, on startup my program downloads the new file to its resources (maybe? see, I kind of barely know about resources) and uses info from the new file. This is where you should consider using dependency injection or configuration to allow your program to be deployed into different locations. There is not an easy way to describe this without oversimplifying but I'll do my best. With Depedency Injection you might have your program separated into two different parts: * The Executable Project * Other Class Library Projects In this case you can put all of your configuration logic into the executable project. This logic would be responsible for determining where the program lives on disk, whether it has permissions to create files, and where it should create those files. A lot of times it's best to just do this in the User's AppData folder. This way your installation is decently portable and permissions shouldn't require administrator. Whether you choose to save those Excel files to disk or to simply store them in memory is up to you. Saving it to the Desktop is obviously not a great idea in the long term, but it's your call and depends on who will be using your software. \&gt;But I don't know how to implement that if the program goes on another persons computer (since install path could be different, where the file would go, etc...). Make all of your paths relative to the program's location when in doubt. You can just ask .NET where the program is located and try to do all of your work inside of that folder; this way it can be deployed to any folder. \&gt;Anyway, stuff like that is what I'm struggling with. I know starting with Visual Studio right off the bat maybe handicapped me a bit because VS probably takes care of a lot of behind the scenes stuff. You'll be all right. Visual Studio automates a lot of the MSBuild steps but those are easy to learn on your own. I recommend starting with .NET Core Command Line Interface and building simple .NET Core hello world apps that way. You'll learn pretty quickly how MSBuild works with a little tinkering. VS does much more than this of course, but it's a starting point since you expressed confusion about how exactly the app gets put together. \&gt;I've been reading "Clean Architecture" and that's very helpful with conceptualizing this aspect of software development, but it's abstract and language independent. It's a good habit to be reading a book like that on the side, but as you've realize those usually deal with abstract elements. This is okay and it's still important to read so long as you're getting something out of it. Nice work! Let me know if I can clarify anything else. I sorta wrote this in a jiff. 
$$$
How are you even doing that with a double, which is a floating point type? Modulo, for example - how are calculating modulo between two doubles?
Personally I would ignore that
What kind of pain?
The pc is backed up using unitrends. I believe it is block level. I however have no understanding of how databases store data in files. I could imagine block level could work well but also terribly.
Right, it seems I was a little unclear. It makes sense with 'IsNullOrEmpty()' and that's where my googling lead me, but my original intent was simply an empty check on a string and why there's no instance method for it. Unless the concept of an empty check implies a null check to the C# creators I still don't understand why I can call Contains() or Replace() on a string instance but not IsEmpty(), thus my guess.
Yes. I have a sqlexpress running on a different machine in the same network. It it's s dedicated to a single use. I'm not sure I like this app becoming dependent on on outside resource though.
I hate youtube videos for teaching stuff. I always have to play it at doubled speed to get a reasonable density of information. I guess it will be similar to others. So I would say hands off from youtube vids. I love reading coding blogs to just get a new point of view but they are most of the time unrelated to what I am doing. I can highly recommend Jon Skeets blog FAIC because it is really just about playing with C#. Best examples I read were “fixing random” and “monads”. Morning Dew collects everything for c# on a daily basis. It’s a great way to learn new bloggers. Scott Hanselman and Martin Fowler are also interesting. What made me really advance from beginner to rookie was coding as many projects as possible. Especially performance critical stuff really makes you get to know a lot of concepts. What made me advance from rookie to advanced was that somebody showed me TDD. This goes hand in hand with dependency injection which feels like it just solves all your problems at once. Read into paradigms. Gang of Four patterns, SOLID, KISS, YAGNI. When you did all of that you can start listening to youtube videos about why you should or should not use eventstore.
Even though you can deploy cross platform, most of the documentation, blogs and books assume you will be developing on Windows using Visual Studio 201x. C# "steals" ideas from F#, but treats F# developers like second class citizens. 
The "compatibility mode" almost never worked for my dependencies even if it works after I recompile the source code. (e.g. http://gigi.nullneuron.net/gigilabs/) I should change the wording to clarify tho. Thanks
ive binded a string to a textbox and changing that string (which updates through propertychanged events) in a class (the main class)
Personally I do. But professionally I can't.
* The database gets bloated. Backups / restores become a total pain in the arse, storage starts to a lot cost more, the database is unwieldy. * People put more than just an Id and File in a table which then leads to people incorrectly join to the table with files in it and bring back entire file systems without realising. * Performance suffers because a relation database is great at storing relational data, its crap at storing files, blobs, images, all that kind of stuff. * Increased load on the service that provides access to the files while an actual tailored solution for handling files would have solved the problem 100 times easier. * Manipulating the files generally evolves downloading them all out of the database, sticking them in some artificial file structure and then a lot of messing about trying to sync it all back. &amp;#x200B; I could go on, but in short. Just use a file store of some sort, a database is a bad choice for storing that kind of data. But until you do it your not going to understand the pain. So good luck. :) &amp;#x200B;
It's far quick to just test something, you don't even need a class, or even a Main(). Just type a snippet, and run.
Interesting. I just discovered this a few weeks ago at work when I was told to reference an old DLL in an asp.net core project that is supposed to run on a Linux machine. I was almost positive that it wasn't going to work, but it turned out fine, which confused me. After digging around a little bit I found this. Nice article though 👍🏻 
So it’s like REPL?
OK, I missed the part about the text being tied to a bound source. &amp;#x200B; I think this may be what you're actually looking for: [How to: Reflect Data Source Updates in a Windows Forms Control with the BindingSource](https://docs.microsoft.com/en-us/dotnet/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource) But more specifically: [BindingSource.ResetBindings(Boolean) Method](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.bindingsource.resetbindings?view=netframework-4.7.2) is the particular method you're looking for. &amp;#x200B; Alternatively, you can always unbind and rebind the DataSource manually and that should update the box.
Okay, let's clear a few things up first: A visual studio solution is an xml file that uses the *.sln file extension and stores references to projects. These projects describe their programming language, their dependencies, their used files and their build settings (and some more stuff, we don't need to care about now). An executable is a binary file that contains instructions that can be executed by the architecture of the computer or a by a virtual machine. The difference between an *.exe and a *.dll (or *.lib, depending on your language) is the fact that dynamic link libraries do not contain an entry point (the main method) and thus cannot be executed on their own (e.g. by starting it with the command line or clicking on it). It is just a library of executable instructions that can be called by another executable binary. Now to some internals: C# is a programming language that is compiled to an intermediate language called CIL and that can be run through an interpreter. The same intermediate language is the base for all .Net compatible programming languages (so VB.Net, F#, C#, Boo, ...). The compiler generates a set of IL instructions and stores it into *.exe and *.dll binary files. When you decompile a .Net-executable, you can see the IL code and even retrieve the original source code in a readable way. So, whenever you press compile, the compiler of your choice will try to parse your code and generate IL instructions that it stores in an executable file. Traditionally, these files are saved in the "bin" folder (short for binary), but it doesn't need to be that way. You can actually change that directory to any other you desire (and the compiler is allowed to write into). Here are a few things that I hope will give you some insight in how the language works internally: 1. Look at the documentation of .Net and C#. It is one of the best documentations I've ever seen and gives a lot of insight in how things may work under the hood. (This is a hint, to just click through the articles on [docs.microsoft.com](https://docs.microsoft.com/en-us/dotnet/)) 2. Want to see what really happens, when you call a Linq query? No problem, you can see the entire code for .Net on [referencesource.microsoft.com](https://referencesource.microsoft.com/) and I encourage you to look stuff up if you want to know what happens when you call a certain method. 3. Take a look at Roslyn, the open source compiler for C# provided by Microsoft which you can find [here](https://github.com/dotnet/roslyn). Actually, you should also take a look at the dragon book (or *Compilers: Principles, Techniques, and Tools*, but you can just type "dragon book" into Google). 4. Decompile your own code. Look at the IL and try to understand what actually happens, when you use a switch statement with strings as cases. You do not need to know IL to understand it, when you have the code next to it. I suggest you should grab [dotPeek](https://www.jetbrains.com/decompiler/) and see what happens when you compile code, especially with "code optimization" enabled. 5. There are books. A lot of them. I am the wrong person to suggest one for you, but if you are interested, some people here may have some good reads and also check out the sidebar in the subreddit.
This is pretty much the answer I'd give too. The one last thing I'd mention that the book wouldn't cover is "async/await". Doing asynchronous tasks is super important; the methods the book probably goes over are still usable today, but are nowhere nearly as easy as async/await.
Couldn't reach the repo - 404. Seems '/settings' is unnecessary
How does C# treat F# developers like second class citizens?
Thanks! Fixed it.
&gt; Some of the API does not behave uniformly across platforms. […] My biggest complaint is that this is not really mentioned in the documentation. Yeah, there are cases like that. I'm sure the documentation team will be grateful if you leave feedback explaining the problem.
More like a REP. It just runs the code once, there isn't an interactive loop like in a typical REPL.
You can. But you won't
It’s great for fast sandboxing of something. I have linq pad for this and it is excellent.
Learning design patterns will help you write good, reusable code. Pages 14-41 of the following book will give you a good rundown, and the rest is fine details: https://github.com/dieforfree/edsebooks/blob/master/ebooks/Design%20Patterns%2C%20Elements%20of%20Reusable%20Object-Oriented%20Software.pdf
There is a true REPL available for C# in Visual Studio 2017 and higher, called C# Interactive. Top Menu -&gt; View -&gt; Other Windows -&gt; C# Interactive [near the bottom of the menu]. Even if RoslynPad is more of a REP than a REPL, as /u/nemec pointed out, it's still well worth trying, you still get that drastically shortened feedback loop when writing and testing your code.
Oh nice, didn't know about this :)
Microsoft doesn't prioritise F# development and neglects it to a certain extent. 
I think he meant .net core. And he’d be right has 3.0 has some windows only features relating to UI I believe. 
Which book? The Yellow book? Or C# in a nutshell?
Wha is a core feature set?
Great release, thanks Eli. 
If it's a framework application you could use machinekeys, or you could use user-scoped settings with a settings file - those are persisted to the user's profile so they are protected to a certain degree.
No it's not, because the string could be empty.
Nice! Yeah, I do love ML, but my language of choice for that is Python.
My advice is don't do any VB coding and don't work for any company that expects you to use VB, even for small tasks (which in practice can turn into bigger tasks). It's eating your time and preventing you from gaining valuable experience in technologies that matter. You'll gain exactly 0 from it. 
There used to be a CLI REPL built into .Net Core. It was pretty handy and fun! Then one update it disappeared. There were rumors from Microsoft that it was being factored out into a separate command. That has not materialized. The complexity of a REPL is fairly low and they already had it in place, so we have to assume this move was either to avoid some patent infraction or else due to inter-office politics at Microsoft.
If you have an adjacency matrix for a graph with a fixed set of nodes and edges are being dynamically added and removed (sometimes making two non-adjacent nodes become adjacent, sometimes adding parallel edges, sometimes making two adjacent nodes become non-adjacent), you can just increment or decrement the appropriate entry in the matrix for that pair of nodes. If a simple graph has adjacency matrix |0|1|0| |1|0|0| |0|0|0| And you wish to add a self loop to node three, you can update the value at [3][3] in a consistent way. If you want the sum of every row or column to be equal to the degree of the corresponding node, the new adjacency matrix might look like |0|1|0| |1|0|0| |0|0|2| If you want to add a parallel edge between nodes 1 and 2, the new matrix would be |0|2|0| |2|0|0| |0|0|2|
What if new nodes could be dynamically added or removed? Would what you said still hold, with just the added necessity to recreate the matrix itself?
relevant https://www.hanselman.com/blog/CAndNETCoreScriptingWithTheDotnetscriptGlobalTool.aspx
That's the whole point of that operator. Not that it matters for this example, because the code that u/TheRoadOfDeath wrote, doesn't fail. Unless I wrote my extension method wrong. But I suppose since null is a valid value for a string, the extension method handles it just fine? I'm not sure. But the example code I wrote didn't throw an exception: [https://i.imgur.com/Ygw5WvS.png](https://i.imgur.com/Ygw5WvS.png)
also keep in mind sql express has a 10GB per database limit, so storing files in it can easily hit that limit.
Nice! When the dotnet cli was working, I was using it to write a few git-hooks. Using this Nuget package will be an option for future git-hooks.
Lazy question of the day: how does it stack against linqpad?
You mock out dependencies within the class being tested. For instance, say you have a service that takes a repository. The repository retrieves basic objects from your DB and overlays permissions on them. You want to test the service’s responsibility (the permissions) and not the repository element. So throw in a mock that gives you a predictable object from the “repository” and test what actually matters in the service. 
Yep. Unit testing is about testing a "unit"... which really means a small thing, smaller the better usually. You aren't testing all these external dependencies... so you MOQ them out (cause you don't care what they are really doing internally, you just need a result to work with). Unit testing becomes integration testing if you don't MOQ, because then you have to stand up all these external services to test your unit... which is slow, cumbersome, etc. Integration testing though is also very important, but it is different. Read up on both.
Open source and free.. linqpad free version is crippled I love linqpad but use c\# once in a while so the licence cost is pretty steep
I been programming for a long time. Not once have I ever mocked an object. Don't worry about it. I mostly write enough unit test to confirm I have the function doing what I suspect. I don't try to do anything crazy. Every time I find a bug I'd add it to the test and think about similar things to test
Nice page mate. I'll check it out. Remindme! 2 hours
Well, you will need fake objects for isolate your tests. Not all fake objects have the same purpose. Basically you have two types, "Stubs" and "Mocks". Stub its a object that allow a component to be isolated and tested, may fake or not. Mock its a component that verifies or fires test assertion, may fake or not. &amp;#x200B; For example: you need to verify air bag system on a car. Dummy car will be crashed from back. Air bags will be activated. You don't need a brand new engine, with any object with similar weight is sufficent (this is a stub). The other car that crashes dummy car don't need to be a brand new car, you could use a brand new car too. But is not necessary, this car will be your mock. &amp;#x200B; You could fake entire air bag system too, but test will no have sense. If you decide do this, you will get a lot of placebo tests.
I will be messaging you on [**2019-03-18 04:45:16 UTC**](http://www.wolframalpha.com/input/?i=2019-03-18 04:45:16 UTC To Local Time) to remind you of [**this link.**](/r/csharp/comments/b2b1gp/c_machine_learning_shape_recognition/eirzd3j/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[/r/csharp/comments/b2b1gp/c_machine_learning_shape_recognition/eirzd3j/]%0A%0ARemindMe! 2 hours) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
you can use ml.net and inception model and shapes as your dataset and your good to go
Hmmm not much in the .Net world. Have you considered running Kong with Postgresql in Docker containers on Linux?
&gt; I feel I've got down the basics of logic and flow (variables, ifs, loops, classes/interfaces/properties, basic understanding of delegates and events and extension methods and etc...) and now I'm looking toward getting more involved. Any advice on making the jump from beginner to intermediate? If indeed, you have C# and basic OOP down, then I would recommend picking up [the book Pro ASP.NET Core MVC 2](https://www.amazon.com/Pro-ASP-NET-Core-MVC-2/dp/148423149X/ref=dp_ob_title_bk) In this book, you will learn about: * Microsoft's ASP.NET framework (well, the CORE variant) But more broadly (read: you can apply this to any language), you'll learn: * Model-View-Controller (MVC) design pattern * A form of Inversion of Control (IoC) known as Dependency Injection (DI) -- another design pattern * Unit Testing and Test Driven Design * Object Relational Mappers (ORM) * Good "separation of concerns" (SoC) And by the end of the book, you'll be able to build complex technical websites. 
My brain can't compile the question..syntax error.
This is kind of what I was seeing, so thank you for this reply. That's a great article, even though I don't understand it all yet. Basically what I'm seeing is if you're mocking something, it's because you have a dependency in your class, which unit tests should be discouraging since this is tightly coupled code that is likely doing more than one thing. I'm also curious what the author means by dependency injection not being the primary mechanism for decoupling. I thought that was one of the other most important benefits of dependency injection, along with being able to make a method more testable. I'm going to have to reread this article a few times. Thanks!
So basically we should just be mocking the dependencies that are injected into the methods we are testing? 
Nice to see something like this. Am using licensed LinqPad at work every day. Was missing it on my home Mac. dotnet core and VS Code is not the same. So for quick stuff was using python. Tried it and unfortunately it didn’t work on Mac. Window opened with black canvas. Pity, will try to remember to test it again in next release.
It has a lot fewer bells-and-whistles than LinqPad, but it has the big advantage of supporting Intellisense and code completion without having to buy a license.
So Good! Remindme! 7 hours
IMO dependency injection is stupid. Thankfully I don't use Java and I don't have to deal with foolishness a lot of java developers are taught to do. You don't need dependency injection either. Just don't have a class touch 1000 other classes and you should be fine. As long as you use constructors to pass in the correct objects you'll probably be just fine. I suspect dependency injection is part of the factory stupidness Java people do.
You are better of just reading the Microsoft documentation than using that. 
I can not try that now, but 12ms for simple arithmetic is not realistic. You have smth wrong there.
In the abstract, if you add a node to the graph, you'd just add a new row and column to the matrix where each entry is zero. If I add a fourth node to the graph, the new matrix would be &amp;#x200B; |0|2|0|0| |2|0|0|0| |0|0|2|0| |0|0|0|0| &amp;#x200B; If I wanted to delete node 3, then I need to delete the third row and column resulting in a new matrix |0|2|0| |2|0|0| |0|0|0| &amp;#x200B; If you have an implementation of the adjacency matrix (or are writing your own) then you need to use an appropriate behavior for modifying the data consistent with your choice of data structure. I'm not sure that these are C# questions so much as general computer science questions. You might consider stackoverflow or another subreddit more focused on graph theory/data structures/algorithms for questions like this in the future.
Remindme! 3 hours "check"
I was able to get it to sort-of work on my Mac, by toggling between a normal window and fullscreen a couple times. I was able to then write and execute code, Intellisense was working, but there were still places where the window wasn't being rendered quite right.
I hope this version works on the UX a little bit I think the potential is super high on this but the previous versions were pretty painful to use. It is very new though so I don't judge it harshly
Here’s an example of what I run into: I have a class AwsS3StreamFactory that takes an AWS S3 bucket name, and a S3 key (filename) in a method “GetWriteStream” which returns a stream that you can write to which should write that stream out to S3. It buffers and uses multipart upload if you go past a certain size, otherwise it writes in a single upload. To test such a thing I use Moq and dependency injection. I don’t want the test to actually depend on an AWS connection. I simply want to test that it calls the proper methods of the AWS API at certain times. So to prepare my test I put a Moq AWS Client object in the DI container, and have it return a Moq S3 client object, etc. My test gets a stream and writes some value(s) to it, then makes sure that the class called the appropriate AWS methods at the correct times. This type of scenario plays itself out over and over throughout my system and having DI and Moq there to help inject fake dependencies is fantastic. 
The use of mocks imply one of three things: 1. Your code is badly designed and you need mocks to test code that should have been testable without them. (Ok for the short-term, but refactor the code as soon as possible.) 2. Your tests are badly designed and you should be testing with the real dependencies. (Learn to write better tests.) 3. Your dependencies are hard to deal with. For example, robots in an automated warehouse. (No, a simple database or web service doesn't count as "hard to deal with" unless you have some serious institutional problems and can't setup an integration envrionment.) 
Getting an exception on start (.net framework, win8.1 x64) - Missing method `RoslynPad.ExecutionPlatform..ctor(...)`
Can I ask what you think dependency injection is then? Your statement: &gt; As long as you use constructors to pass in the correct objects you'll probably be just fine. ... describes one of the primary methods of dependency injection. 
Don't know if it will do any good, but here you go... https://www.infoq.com/news/2019/03/ImageSharp-Licensing
How am I just finding out about this, it's fantastic! I've been using `csi.exe` for some time now, but this is far nicer for quickly smashing out small scripts. The built in nuget support is really cool as well.
The whole read what object to create from a file and make it with a factory thing
Watched 2s. No Hertzberg
Bingo. Only the class being tested should be instantiated; everything else (that's required for the test to run) should be mocked. It should be noted that mocks make the assumption that the class (well, usually interface) being mocked is implemented perfectly, so they're a bit of a double-edged sword. They allow you to test your class under well-known conditions, but they also force you to make assumptions about dependencies. If those assumptions are wrong then the unit test will pass, but the change will still introduce a bug or regression. Unit tests are very valuable, but don't fall into the trap of thinking that they'll protect against all code issues.
I am a new .NET developer and this is very interesting :)
The user will not be putting the api key in the finished product.... if that’s what you’re getting at? The other devs will need to include it in their source.
I haven't done anything with AWS nor S3 I never heard of Moq. What does it do? log function calls you make to the object? How does it know what value to return or what error? Most of the time libraries don't have to go through a network and many times if they do you can use test keys/auth so nothing is done and you won't be charged. Lets assume we're not doing something that would cause us to be billed, why not use a real object? Code that 'glues' or interfaces to another library is very minimum. Is that what you're testing? the interface code to see if you passed params correctly? I'm not sure what you'd be mocking
This looks nice! I'm pretty new to C\# but interested in ML, what's the learning curve to get to ML?
That would violate the requirements of this task though
I agree with 1, and 2 to eliminate most of the mocks, but for 3 being able to run the tests without anything external like a database or a web service is very convenient. I like being able to download a repo, and just have the tests work. I also like that the tests can be run in parallel, and won’t interfere with each other, like they might with real services.
MaxPlay, I remember your user name, you gave me a very helpful answer on a previous question I had posted to this subReddit. Coming through again! What you've said here has already given me lots of insight and ideas on what questions to ask, where to go to learn more, etc... (and I haven't even dived very deep into it yet). Like, I had no idea a .sln file was xml; I just now opened a few with a text editor and I see a bit about what you mention. I pretty frequently wind up looking at Microsoft Documentation but have not yet spent much time just browsing through it, usually it comes up when I google things. But I always go to those pages and agree, it's always quality. I'll have to spend more time there. I still don't know much about GitHub or other git clients (I mean, I get the concept of it, just haven't actually spent too much time with anything like that) so I'll still have a bit of a learning curve there, but one of my focuses going forward is to spend more time reading other peoples' code (like open source stuff, etc...). I hear people talk about Rosalyn all the time, so that's a great resource as well. Further along those lines, pointing me toward the Reference Source, I'm stoked on that. Like, one of the classes I use here and there a bit is System.Net's Ping; I just pulled that up. Some of it's a bit over my head right now, but I know it works and I'll be able to trace along and research what I don't know. And I feel like that'll be helpful with further understanding how classes are organized and written at a high/professional level. Same thing with dotPeek, sounds like I could learn a lot from decompiling to see how lower-level aspects function. Anyway, all of it, solid gold. Thanks so much for your time and kindness again! Very helpful and encouraging and gives me multiple avenues to learn and understand. :) &amp;#x200B;
I don't understand
Remindme! 2 hours
Far out, thanks very much for the recommendation! I've been fiddling a bit with WPF, but that's mostly because I have a Windows laptop and WPF seems available and straightforward enough to make work. I don't know much about frameworks at all yet either. I know it might be putting the cart way in front of the horse and I should be mostly focused on understanding concepts (as I'm learning development/programming, not a specific language), but just out of curiosity, is ASP.NET, like, a solid web framework to learn? I don't at all know tons about web development or industry standards there. I plan on eventually hopefully getting a job doing software development (still a ways down the road though) and hopefully applying what I've learned about development to other languages, so curious if ASP.NET is widely used and lots of potential for growth there. (I hope that's not too silly of a question; again, I know I should be learning concepts, and once down solid those could be applied to other languages/frameworks, just curious). Either way, thanks so much for the recommendation. :)
I think you're referring to the Factory pattern there, not DI
Ah, it's nothing, I'm glad to help. And don't worry about GitHub, you do not need to know git to visit the page and look at code. Think of it as a storage for source code and not as a git hoster. You can browse it much like your own code and even use a search function. But you should learn how git works, it's quite a helpfull tool, even when you just use it locally on your computer. Atlassian has a nice introduction for it, I guess. Anyways, I'm glad to help, when you have more questions, come back and ask again.
O awesome, thank you very much for the recommendation and link! I know I have lots to learn with design patterns, I haven't spent much time learning those at all (vaguely know about Singleton and factories and etc..., but not much at all). I clicked through and I think that will go a long way to help me. :) I really appreciate your time and you sharing that, thank you. 
Thanks very much for the recommendation! I feel like with YouTube there are so many videos out there, it can be kind of overwhelming getting started with one, so I'm glad you gave me a quality name to start with. Sometimes I get antsy when I watch videos where in some parts they do things I already know how to do. I get a little distracted and always end up turning it off or clicking somewhere else. But I know it'd be helpful to see a program start to finish, I need to just sit down and do it. Anyway, thanks for the name, I'll check it out!
Awesome, thank you for the heads up there! I think it's definitely worth me looking at. Just through quick google I also saw: "This can be useful when you want to create separate assemblies that target *specific* platforms but still have code that should be shared. " I've actually started looking a tiny bit at Mono, as I've got a few things in the distant, distant future that may need to run on OSX. TBH right now I'm not sure if Shared Projects would be relevant/applicable here, but sounds like it might be and either way, sounds like it's definitely worth me researching. Thanks very much for that one!
Thanks so much for taking the time to write out a detailed response and help explain different aspects and the application of them; I really appreciate that and your assistance/patience in explaining to me, it helps a lot and very encouraging. No worries about sounding to harsh, I totally understand needing to learn to walk before you run. I know I have a long, long way to go and every day I learn something new and I'm like "o god, this is a lot more complicated than I thought." But I'm staying positive and motivated, and it's interesting to me, so I like learning this stuff. Usually with reading conceptual stuff like Clean Architecture, I try to do more just sort of an initial pass-through. I know I won't understand everything, but I pick up things where I can and try to implement them if possible. Then once in a while, I'll pick it up and look at the table of contents and see "O, I know a bit more about that now," and I'll revisit that section to see if I can learn anything new. Granted, this has led to some misunderstandings and missteps on my part, but I don't totally mind. I guess my heart is in the right place and I know I'm still learning. And when I finally see the missteps I made, it's definitely a lot easier to not make those mistakes again. P.S. EPPlus is exactly what I've been using lately for Excel, so sounds like I'm on the right track. I started with using interop because I was initially a bit wary of 3rd party libraries (idk why, I've never really been a computer guy before now, so hesitant to install anything on my computer), but learned a bit more and found EPPlus and that's much better. :) Anyway, thanks again for your help here, greatly appreciated. 
So... Like C# interactive in Visual Studio... Which allows you to import your libraries and use them in a scratch pad manner?
C# 7.0 in a Nutshell 
Can you explain what DI is in english? I only have negative things to say about the 3 dozen ways I heard it explained. I don't understand why on earth anyone would do any of these https://en.wikipedia.org/wiki/Dependency_injection#Setter_injection All my code is the first two, no injection and construction injection. But I don't count the construction as injecting because it should be impossible to construct objects that doesn't have all the data and objects it needs. Is there something like data injection? Is passing a struct with no functions (just public variables) consider DI? 
Yooo, this is so incredible, thank you very much! I pulled up DestroyAllSoftware. TBH, it seems a bit intimidating to me, but I think in a good way (like, scareoused). I'm still learning obviously, but I think I learn best when I'm able to see "whys" and "hows" behind things; I know it's more work and takes longer, but I don't feel like I fully understand something and I feel like I easily make mistakes unless I've got a solid grasp soup to nuts. And a lot of times the "why" and "how" in what I've done thus far feels pretty elusive; this looks like it'll be a really great resource there. I did have a Pluralsight subscription for a bit and I really, really liked it. But at the time I didn't use it enough to justify the expense. I'm sort of in a different place in my life now and have been spending so much more time lately learning, I'll probably revisit Pluralsight soon, I think it's awesome and helpful. And o man, everything else is crazy helpful and encouraging: MSBuild, working on a class library, how to actually implement some of what I was struggling with. Like, I didn't even think about referencing the program's location for program files (as far as actually asking the program where it's at), but now that's easy enough for me to find/learn on my own. And the suggestion on doing things without Visual Studio, just for a brief behind the scenes look, I plan on fiddling with that soon. With Clean Architecture and other books like that, for sure it's kind of a side thing right now; it's not something I'm currently actively studying hard, I don't force myself to try to understand every concept, etc.. I kind of treat it as a casual read and I pick up what I can and try to apply it as I understand it. Then every once in a while I'll thumb through the table of contents and revisit a section I know more about this time around, and realize I misunderstood something and correct that, or I'll learn something new that went over my head last time, stuff like that. Anyway, I can't thank you enough. I really appreciate you took the time to lay all this out. Your comment was way helpful with exactly what I need and also it was encouraging/inspiring for path ahead. And if this is what you came up in a jiff, couldn't even imagine/handle full power. Thanks again so much. 
I don’t imagine it has anything to do with the IL, which, along with the metadata, is the same in core and framework. It has more to do with translating assembly references. 
Its abit like asking should i use a chain saw or a grinder to make a fence. Your answer was a chainsaw. Great mental gymnastics.
because it suits me to leave it as source, the code is utility but needs to be tweaked
because it suits me to leave it as source, the code is utility but needs to be tweaked depending on situation and/or version of other libraries used. 
[https://www.thecodingguys.net/resources/cs-cheat-sheet.pdf](https://www.thecodingguys.net/resources/cs-cheat-sheet.pdf) maybe this?
Is this library any good in terms of performance and ease of use?
DI is the practice of injecting dependencies into a class. Instead of giving a class control over its own dependencies, you inject them into the class (usually via the constructor). That way you can potentially controll the lifetime of the dependencies or inject a different set of dependecies, thereby reusing the same class. That said, I don't think you should be having opinions on these things at this point, considering you don't even really know what you're talking about.
I like C# for making GUI Forms but love Python to do ML. I hope someday, we can mix them together.
In general you only mock out dependencies that have side effects. E.g. your system reads from a file, does some operations and then writes to another file. If we want to test the operations that are happening on the data, we don't want to have anything to do with the files for various reasons. 1. it is slow. 2. it makes it unreliable(disk full, etc). 3. Adds a lot of complexity to the tests. So to solve this you can mock out the reader and the writer. We can verify on the writer moq that it has been written and we can setup the reader so it returns our test data.
What is the different to LINQPad? 
I always rewrite my 'libaries' / common patterns, often they come out the same but sometimes not. I do it for a couple of main reasons. It aviods the golden hammer, that is to say it lets the solution evolve organically and not restricted to what I did last time. Because even when writing generic crud applications, there is a variation in their requirements and complexity. I dont have to maintain a library and update mutiple projects to match any evolutions in the pattern as requirements change. The flipside to that is sometimes I go back on previous projects and have to overhall them to match a better solution I resolved. Im not saying my way is better or worse, perhaps im just not a very good developer, or perhaps im never happy with my work. I just thought it was an interesing contrast to your approach.
You have the datatype set to "json", but are you sending JSON to the controller? 
Moq and other mocking tools allow us to mark up interfaces and have them return specific objects, and log that certain methods were called and how many times. This allows my unit test to make sure that for large files multipart upload were used, it allows me to verify the sizes of The parts, the behavior of the library when the buffer is flushed at different times, etc. 
If you debug in your Post Action can you check if the Requests File collection has any items in it? Request.Files.Count Then check if your file is in there HttpPostedFileBase file = Request.Files\[counter\]; &amp;#x200B; &amp;#x200B;
I think this ship might have sailed. Great article though.
Moq and other mocking tools allow us to mock up interfaces and have them return specific objects, and log that certain methods were called and how many times. This allows my unit test to make sure that for large files multipart upload were used, it allows me to verify the sizes of the parts, the behavior of the library when the buffer is flushed at different times, etc. Machines that these unit tests run on do not have access to AWS. Credentials for AWS are retrieved from another system, a security storage system, which would require another whole level of access and setting up and maintaining. Would also bring up needing the test to clean up after itself, and be sure that certain resources were available for its use. I can’t be completely sure that the unit testing machine even has network access. My code isn’t simply glue code. There is a lot of sometimes complicated logic surrounding how to handle situations, parsing data, etc. if all I’m writing is glue code, you’re absolutely right. In fact I do argue a lot of glue code isn’t even necessary. So many times I see development teams writing the entire business logic layers that do nothing but transform a data object to a business object with the exact same fields. Such a thing is useless. I can go into more detail on the specific unit testing scenario that I’m talking about. But I’ve found in large enterprise development, where there are hundreds of developers, and many different systems required for my application to run, dependency injection in unit testing tools such as mocking frameworks are very valuable.
It's at v0.11.0, so the API changes with every release. That said, they have a github repo with their fully completed samples, and it seems to be decent to at least learn ML with. They even have some basic TensorFlow integration, so it doesn't run the models necessarily inside the IL. https://github.com/dotnet/machinelearning https://github.com/dotnet/machinelearning-samples
At the end of chapter you can find abs the same results.
Strongly disagree. Your unit tests should mock up dependencies unrelated to testing the particular unit of work. 
I think you have a somewhat confused view of unit testing. If you use a real database, test or otherwise, in your unit test and the test fails did it fail due to an invalid database state or bad code? If you are testing an auth service and it fails did the auth service behave incorrectly or code that you wrote? This is the crux of unit testing, you seem to be talking about integration testing and they are two different things with different aims. Isolation of the code you are testing is important in unit testing and this is achieved using dependency injection and a mixture of dummy, stub, fake and mock objects which enable you to test both the "front" and "back" of a given unit (typically a method). Moq is a library (framework?) which enables you to create mock objects very easily, for example you can ask it for an object that implements an interface and gives responses for certain methods when called without having to predefine the object in your code (this may not be a great explanation, I prefer just doing this work myself in my own projects so I have limited experience with it).
What are doing these ctors? public Milk(): base() { } public Milk(int quantity): base(quantity) { }
I agree it doesn't seem as prioritised but that's not really c# that's Ms. 
Oh well, for some reason these files are still there. I removed them yesterday, but don't know why they are present in the repo. Will remove them now.
&gt; 1. I think I should throw an exception in places I mentioned above for when value is negative although the constructor that is called already throws an ArgumentOutOfRangeException but I was thinking in these two places I should throw InvalidCastException. What do you think makes more sense? If the type can't be converted for over half its possible values, a conversion may not really be a valid thing to supply. You probably either need to coerce the int to a valid range (and an explicit cast in some cases implies a possible loss of range) or replace the cast with a standard function, depending on the actual context of what you're trying to achieve. A cast that throws an exception is not very elegant. &gt; 2. In this case doing things like ushort x; MyInt y = x; works because the second operators (with int) are explicit and ushort -&gt; ulong has its own cast ops. But should I write the code for all of them anyways (byte, ushort, uint,...)? Theoretically I'd say yes, you should provide a conversion for every type you want to support. &gt; 3. This may sound strange but is there a way to make these casts work with checked keywords just like how it works for value types? No, `checked`/`unchecked` are applied at compile time, and therefore only affect arithmetic operations in the immediate scope. If you need this behaviour toggleable, you could provide methods to do the conversion with a boolean parameter (i.e. `ConvertToInt(bool useCheckedArithmetic)`) or simply two sets of methods (i.e. `ConvertToInt()` and `ConvertToIntChecked()`).
good luck in the real world man lol
How am I doing so far?
For the use case you're describing here, assuming you're not leaving out any important requirements or constraints, you should use the File System. A few reasons for this: 1. The file system always exists. The database is an optional layer on top of the file system. 1. Adding a DB dependency adds complexity, and your job as a programmer is to minimize complexity. Don't add more components unless you really require them and can justify the added complexity! 1. The file system will be more portable to machines where the DB isn't installed, supported or available 1. Fewer dependencies in your code, because you won't need to use a DB client lib 1. Better performance, because you aren't going through a separate DB layer to store the data to disk 1. You can easily do things in the file system that would be harder in the database like backups (xcopy in a scheduled task), etc. 1. You can easily partition data into folders by path and be able to, for example, move files to separate folders by hash or prefix, and use symlinks to spread them out across disks for performance if necessary Now, if you need features which a DB provides like indexing, transactions, enforced relationships and data consistency, then you should consider it. But if it's just accessing blobs by name, the file system is a much better and simpler choice for you and should should always err on the side of simplicity.
- Don't new up random on every iteration. - limit the IP numbers to 0-255 instead of 0-999, 8 bits can not store 999. - why do you not use rnd.Next(0,256); ? - there will be a few IPs that will be unreachable for you, as configured in your router. - proxy servers are not limited to Port 8080, technically they could range from 1-65535 Also, this looks kinda like an illegal (and inefficient) way to find exploitable proxy servers.
You can see here that the property disposes the internal timer object when set to false: https://source.dot.net/#System.ComponentModel.TypeConverter/System/Timers/Timer.cs,107 
Yes, what you're doing is equivalent to calling \`Stop()\` and then \`Start()\` on your timer, which does reset it. You can google for 'pausing system.timers.timer', as you'll see there's no cookie-cutter solution.
Remindme! 5 days weekend fun.
Are you using the [Accord.NET](http://accord-framework.net/) Framework by chance?
Preferably just the GUID
Excel Interop is a worse solution in many ways compared to epplus. It's a lot to go into, but basically the interop libraries got through a predecessor to .net called COM, which has significant performance and memory implications that will significantly complicate your code if you do it right and cause you significant pain if you don't. I've wasted countless days of my life debugging that code, so it really is best to just stay away if you can avoid it.
a way you could directly show that the program identifies it it is calling some label with whatever an Auto implemented property returns from a string method
So it's a library?
It also prevents calling the delegate multiple times before the first call is complete. Typically, I use a try catch with the first line in the try to disable the timer. In the finally statement I re-enable the timer. 
The title of the post is "multithreaded server". Cheers.
Looks nice. If you need contributors, let me know
&gt; is ASP.NET a solid web framework to learn? Yes, it is. I first started with the ASP.NET MVC 1.0 framework in 2009. At the time, ASP.NET also had (still has?) a feature called WebForms, but it was kinda clunky and not flexible. The MVC design pattern was the new hotness at the time (2009). Ruby on Rails had already been doing MVC for 4 or 5 years at that point and the MVC design pattern had actually been around for 20+ years prior to that. (30+ years by now.) Microsoft has now release a couple editions of their ASP.NET Core framework which is designed to be cross-platform -- Linux and Windows, mostly. (Originally, you could only deploy ASP.NET code on a Microsoft IIS web server.) &gt; I've been fiddling a bit with WPF WPF is good to learn if you're into making apps that run on computers and other devices. If you're going to keep heading down the WPF path, I would read up on the Model-View-ViewModel (MVVM) design pattern and the common frameworks that implement MVVM. I used this one in 2012: http://www.mvvmlight.net/ -- It was pretty good, not too complex, and made life easier when implementing MVVM design with WPF. Btw, I'll fully concede that learning ASP.NET MVC is going to be a steep learning curve, but that book I linked to really does outline a lot of good practices and concepts that you should get into now rather than later. It addresses more "software engineering" practices rather than straight "computer science" concepts. Just take it one chapter at a time. It's a lot of pages, but you'll get it.
Documentation isn't 100% yet and so I keep hitting cases where I don't know quite what to do. For example, ran data through transformation, data is too large for memory so I save it to disk as binary, train the model, and everything is good. Then load the model and try to create a prediction engine only to realize that I can't do that easily as the data in the binary file isn't the data type from before and the prediction engine requires generic types to determine what the input is going to be and what the output is. Then it's a couple of hours of digging to figure out a way around it. So basic stuff is great and really simple to set up. But when you start getting into it there isn't enough info yet to get you over that hump without a lot of digging. &amp;#x200B; Performance is good but no GPU support outside of ONNX/Tensorflow scoring. And since the documentation isn't 100%, they don't really talk about how to improve your performance. There are definite ways to improve things considerably by doing simple tweaks. So for instance the example above took about a week to train first time we ran it. Note that we actually did multiple trainers so it probably took a day per trainer. Then talked to some of the people working on the library and dropped that down considerably.
What about if it get set timer.enable = true, then in 3 hours it get set time.enable = true? Would this dispose the timer?
ITT: Developers who don't understand unit testing and the difference between dependency injection and dependency injections libraries 
&gt;What about if it get set timer.enable = true, then in 3 hours it get set time.enable = true? Would this dispose the timer? What about if it get set timer.enable = true, then in 3 hours it get set time.enable = true? Would this dispose the timer? 
 What about if it get set timer.enable = true, then in 3 hours it get set time.enable = true? Would this dispose the timer? 
I think you're doing double duty here. You have a form with an input type "submit" and an asp-action set on the form and jQuery firing on submit button click. If you plan on going the jQuery route, you need to stop the form from submitting by calling preventDefault() before calling your .ajax routine. If purely MVC, you need a parameter of type IEnumerable&lt;HttpPostedFileBase&gt; and it needs to be the same name as your inputs, so add something like name="files" to each input. &amp;#x200B;
Traingle! Nice vid
At first I was like "look at this guy being pretentious about the knowledge of others ITT". I had only read the posts above yours when sorting by 'best'. Then I expanded the downvoted comment below yours made by /u/PrestigiousInterest9 and was like "look at this guy being 100% factual about other people ITT." lol. Jesus.
There are 3 ways to inject dependencies: * Constructor injection * Property injection (should use constructor injection over this when possible. only use this for truly optional dependencies). * Method injection (inject dependencies through method arguments. However, these dependencies are only used by the method's algorithm and NOT the class). Interface Segregation is usually used in conjunction with dependency injection. Both of these are part of the SOLID Programming Principles where "I" is Interface Segregation and "D" is Dependency Injection. When you say "dependency injection is stupid" and then say "as long as you use constructor to pass in correct objects", this means you have no clue what DI is. You got some reading to do.
If you need start-at support from a timer, you might try using a System.Threading.Timer instead. It has a constructor that takes a "when should this timer fire for the first time" parameter that can be used for a partial-interval delay. And it has several overloads, so you can use TimeSpans instead of ints/longs if you want.
What about if it get set timer.enable = true, then in 3 hours it get set time.enable = true? Would this dispose the timer?
At that point it is no longer a unit test: so either refactor your code or use the correct type of test.
&gt; Only the class being tested should be instantiated; What utter bullshit. &gt; I'm sorry, you can't test CustomerCollection without mock customer objects. That's the kind of idiotic nonsense this line of thinking leads to.
&gt; I like being able to download a repo, and just have the tests work. If you work on any project I write, you can do that even when the tests hit the database. 
So how do you unit test a class with a dependency? Are you saying that you shouldn’t unit test things with dependencies? Are you saying that things shouldn’t have dependencies? How do you architect a system like that. Teach me thy ways. Say I have a system that reads files from disk, applies some transformation logic based on some configuration, then writes the data to an S3 bucket. How do you test the transformation logic if it depends on input and output?
&gt; How do you test the transformation logic if it depends on input and output? Glad you asked. You unit test the DataTransformer class, supplying it with the data and checking its output. Then you write a wrapper class, lets call it ExtraTransformLoad, that uses the DataTransformer class. This uses integration tests because it's whole purpose is to talk to the disk and S3. If you cannot unit test the transformation because it's not in its own class separate from the I/O, you are in a #1 scenario in my list above. 
ITT: RemindMe
Glad you answered! Let’s walk through this: The DataTransformer takes IDataSource and IDataTarget which have the types of methods you’d expect from such classes. So how do I test that without getting an IDataSource from the database?
You are going to be a much better tester if you rewrite your code so that you can unit test pure code without injecting mocks. And then you use integration tests for the wrappers that deal with IO. Basically stack your code like this: Top Level (UI/Web) ==&gt; Integration Tested I/O Services ==&gt; Unit Tested Models and Rules Engines Those who are relying on mocks don't understand how to properly layer their code. They just cram everything together and then try to use mocks to deal with the problem that their code isn't testable.
&gt; You aren't testing all these external dependencies... so you MOQ them out Or you can extract the code that you want to unit test out from the classes that need external dependencies. Then you don't have to write mocks AND you get properly layered code instead of a ball of mud.
There are three possible scenarios to consider in the CustomerCollection example: 1. CustomerCollection is going to be calling methods on Customer objects (which could be a smell its own right, but that's another discussion). 2. CustomerCollection's behaviour depends on the values of certain properties or fields on Customer objects (e.g. for filtering or sorting). 3. CustomerCollection does nothing but hold and serve up Customer objects and never interacts with them. For case #1 the Customer objects would absolutely need to be mocked so you can isolate your unit tests on CustomerCollection from the implementation of Customer (which is not being tested here and would be unit tested separately). For case #2 it can suffice to instantiate the actual Customer class, but in the context of a test that can still be considered a "mock." While the validity of that name is certainly debatable, it doesn't change the point of doing it, which is to have your tests run in an environment with an explicitly defined state. For case #3 it might be possible to test without any Customer objects, but in cases where they are necessary, the previous paragraph applies.
I like your username, btw.
No, DataTransformer just takes data. ExtraTransformLoad takes a DataTransformer, a FileReader, and a S3Writer. 
What do you do for open source projects?
What? At some point, your code has to call an external dependency. You can refactor all you want... at some point, this still happens... and at that point, you should still unit test.
What if the system is designed to handle hundreds of billions of rows of data? Sure my unit test will work, but the system can’t accommodate holding all data in memory at once. In addition, say the logic in the transformer requires multiple records at once because it has some aggregation logic. So separating out farther into row by row isn’t an option. 
My only serious one is an ORM/database reflection tool. (To the best of my knowledge, I'm the only one who's making a general purpose .NET library for looking at database schema.) Most of the rest are toy projects where I'm most certainly not using what I would consider to be production-grade code. 
If it's already true, then you set it to true again, it's not going to do anything at all. Setting .Enable to false is what disposes the timer. Setting it to true only initializes and starts the timer if it's not already initialized and started.
&gt; For case #1 the Customer objects would absolutely need to be mocked so you can isolate your unit tests on CustomerCollection from the implementation of Customer (which is not being tested here and would be unit tested separately). Are you unit tests for Customer really so pitiful that you can't trust them? Your argument basically boils down to "My code is horrible. Even with tests I cannot trust it when testing code that depends on it. But I'm still going to use it in production anyways."
Understanding everything in the toolbox and knowing how to use the tools, along with ways others have used them will.
It fits my reputation as a cranky old man, but really it was a mistake. Back in my 20's I asked some SCA people (think renaissance fairs) to register my game name as Yohan Grauwolf. They changed the English Yohan to the German Johann, which is fair. But then they insisted that gray wolf is translated as Grauenwolf and I, not knowing German, conceded. Later I found out that it wasn't a real word, making it a perfect user name.
I think you missed the point behind my comment. I'm telling you as a beginner to your project what I found confusing about the quick 30 second elevator pitch. I see this in a lot of projects. Do with my advice as you wish
and at that point, you should **use a integration test to make sure your code plays well with its dependencies**. The goal is to push the dependencies into higher layers and test them there, not pretend that they don't exist at all.
Link?
That's why integration, performance, and stress tests are much, much more important than unit tests for most systems. Unit test DataTransformer with the bare minimum needed to show that it can work. Then focus the bulk of your efforts on trying to break ExtraTransformLoad using higher level tests. (Though to be honest, I'll often skip the unit test and jump right into the end-to-end testing because I want to increase my coverage-to-effort ratio as high as possible. I can always add unit tests later if my end-to-end tests find a problem.)
Your examples still shouldn't be wrong. public class ResourceHolder : IDisposable { DisposableResource _anotherResource = new DisposableResource(); public void Dispose() { _anotherResource.Dispose(); } } This class should either be `sealed` or should do the disposable in a virtual method like this: public class ResourceHolder : IDisposable { DisposableResource _anotherResource = new DisposableResource(); public void Dispose() { DisposeManagedResources(); } protected virtual void DisposeManagedResources() { _anotherResource.Dispose(); } } This class shouldn't exist: public class FileWrapper : IDisposable { IntPtr _handle; public FileWrapper(string name) { _handle = CreateFile(name, 0, 0, 0, 0, 0, IntPtr.Zero); } public void Dispose() { CloseHandle(_handle); } [DllImport("kernel32.dll", EntryPoint = "CreateFile", SetLastError = true)] private static extern IntPtr CreateFile(String lpFileName, UInt32 dwDesiredAccess, UInt32 dwShareMode, IntPtr lpSecurityAttributes, UInt32 dwCreationDisposition, UInt32 dwFlagsAndAttributes, IntPtr hTemplateFile); [DllImport("kernel32.dll", SetLastError=true)] private static extern bool CloseHandle(IntPtr hObject); } 1. it should be `sealed` so it cannot be inherited 2. it should either derive from `SafeHandle` or not hold on to an unmanaged resource Perhaps it might look something like this: internal static partial class NativeMethods { [DllImport("kernel32.dll", SetLastError = true)] //This attribute tells the CLR that this method should always be executed in a constrained execution region //in this case the method will never fail [ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)] public static extern bool CloseHandle(IntPtr hObject); } internal sealed class SafeFileHandle : SafeHandleZeroOrMinusOneIsInvalid { //SafeHandleZeroOrMinusOneIsInvalid is a helper type from the framework that inherits from SafeHandle // and maps to the common Win32 idiom of 0 and -1 being an invalid state private SafeFileHandle() : base(true) { } //This attribute tells the CLR that this method should always be executed in a constrained execution region //in this case the method may fail and then calling code should marshal [ReliabilityContract(Consistency.WillNotCorruptState, Cer.MayFail)] public SafeFileHandle(IntPtr existingHandle, bool ownsHandle) : base(ownsHandle) =&gt; SetHandle(existingHandle); protected override bool ReleaseHandle() =&gt; NativeMethods.CloseHandle(handle); } internal static partial class NativeMethods { [DllImport("kernel32.dll", EntryPoint = "CreateFile", CharSet = CharSet.Auto, BestFitMapping = false)] private static extern SafeFileHandle ExternCreateFile(string lpFileName, UInt32 dwDesiredAccess, UInt32 dwShareMode, IntPtr lpSecurityAttributes, UInt32 dwCreationDisposition, UInt32 dwFlagsAndAttributes, IntPtr hTemplateFile); // a better api would use the proper enumerations for the other parameters, here they are presumed default for brevity internal static SafeFileHandle CreateFile(string lpFileName) { var ret = ExternCreateFile(lpFileName, 0, 0, IntPtr.Zero, 0, 0, IntPtr.Zero); if (ret.IsInvalid) { Marshal.ThrowExceptionForHR(Marshal.GetHRForLastWin32Error()); } return ret; } } public sealed class FileWrapper : IDisposable { private readonly SafeFileHandle _handle; public FileWrapper(string fileName) { _handle = NativeMethods.CreateFile(fileName); } public void Dispose() { _handle.Dispose(); } } which is somewhet close to what you have later and yet: public class FileWrapper : IDisposable { SafeFileHandle _handle; bool _disposed; public FileWrapper(string name) { _handle = CreateFile(name, 0, 0, 0, 0, 0, IntPtr.Zero); } public void Dispose() { if(_disposed) return; _disposed = true; _handle.Dispose(); } [MethodImpl(MethodImplOptions.AggressiveInlining)] private void CheckDisposed() { if(_disposed) { throw new ObjectDisposedException(); } } [DllImport("kernel32.dll", EntryPoint = "CreateFile", SetLastError = true)] private static extern SafeFileHandle CreateFile(String lpFileName, UInt32 dwDesiredAccess, UInt32 dwShareMode, IntPtr lpSecurityAttributes, UInt32 dwCreationDisposition, UInt32 dwFlagsAndAttributes, IntPtr hTemplateFile); /// other methods } 1. this type is still not `sealed` 2. this type doesn't handle win32 exceptions that could be raised (by doing stuff like opening a `com:` device path) Also I am pretty sure the `[MethodImpl(MethodImplOptions.AggressiveInlining)]` is pointless here because this method directly throws an exception which prevents inlining.
Google Translate understands it. It also suggests "grauwolf", but the suggestion goes away if you split it into two words ("grauen wolf"). And if you flip it around and translate the other direction (en-&gt;de), it gives you "grauer wolf".
https://github.com/docevaad/Chain I warn you, this doesn't demonstrate normal testing techniques. For example, I could unit test the SQL generator. But I don't test if the generated SQL matches what I think it should generate because I might be wrong about what the database wants. So instead I focus on making sure that the SQL causes the correct state changes in the target database. So its like 95% integration tests when ideally it would have a much lower ratio. 
Agreed on integration and load testing - that’s definitely important. However, I’d like to write some unit tests to make sure data transformations are working quickly without a ton of overhead. Something that can run in a second with no dependencies on files or databases. This will allow me to test a bunch of very straight forward logic conditions without performance or integration being a factor. How would I create this unit test since the class requires implementations of those interfaces for it to act upon? Is this a bad design since my transformer requires data, or it requires a place to send data?
That makes nuget seem even worse to me. Why use one of the snippet services and just store it as code in there. If you update a nuget won't it override the changes you've made?
I respectfully disagree. You're right that good unit tests should mean that the class can be trusted - no arguments there. But drawing that hard line around the class under test allows one to test a single behaviour without having to worry about setting up all kinds of unrelated things. For example: let's say we're testing a service. That service class depends on a repository, a user permissions checker, and a couple little helpers. Each of those dependencies can have their own dependencies, e.g. the repository probably uses an ORM. The tree can grow fairly quickly. Since we really shouldn't be concerned with how the ORM or other depedencies behave when testing the service, we have to draw a line somewhere, and the only obvious place to do that is right around the class under test.
I'm not sure what you mean by dispose, but if you're using the term correctly - no, setting the `enabled` property should never dispose the instance.
&gt; &gt; &gt; How would I create this unit test since the class requires implementations of those interfaces for it to act upon? That's why I'm saying that you shouldn't have it require that interface if at all possible. Since you said I can't load all of the records at once, it may look something like this... DataTransformer convertedRecordsStream Transform(recordStream) ExtractTransformLoad void ETL(filePath, S3Path) { var inputStream = fileReader.OpenStream(); var outputStream = dataTransformer.Transform(inputStream) S3Writer.WriteStream (outputStream); } 
Take a look at Puresharp (MIT). I'm also in the process of finding a decent AOP solution and this one looks best so far.
If you are testing a service, then you really, really need to test all of those dependencies with it because its whole purpose is to bring those dependencies together. Just because each works in isolation doesn't necessarily mean that they will all work together.
100% agree, integration tests are imperative. But isn't the whole point of a unit test to do that isolated testing?
Yes, but you have to be reasonable about it. Isolating pure code like Customer from other pure code like CustomerCollection result in more reliable tests. And using mocks to test integration components rarely find bugs. A serious problem with our industry is that we fell in love with micro-tests. Smaller than even unit tests, so small and isolated that they have very little value as tests.
Yea, I wanted to publish sooner. But I got swamped by my day job and at the end of the day InfoQ is a paid hobby, not my career.
Are you referring to CodeLens? The little text above the definition. I found it completely unreliable and seemed to be a name matching, not actual source analysis.
Then I would have a disk and S3 dependency. Instead of that I can create a little test IDataSource and IDataTarget implementation. The source would provide my sample dataset, and the target would simply store in memory. Then my unit test just checks the contents of it’s little IDataTarget implementation after the transformer runs. Simple, right? Not simple enough though, I still have to write a test IDataSource and IDataTarget. Enter mocking...
Ok, so if its already started, nothing would change?
Yeah, that's fine. Judging by the responses of people from Microsoft they are hell bent on using SkiaSharp so it wouldn't matter that much. The article might be useful to people looking for a good library and if becomes more popular who knows maybe one day a different financial option may appear.
Awesome glad to hear that...
I think you can cover a good portion of it via Andrew Ng's course on Coursera. It really depends on you how far you want to dig in. I am very interested in mathematics and I give myself 1 hour to complete a project. So it is lots of fun actually.
I am not. I really want to dig deep into ML so I am implementing all by myself. But I have used [Accord.NET](https://Accord.NET) for many production projects. But you can do this project in maybe 10-20 mins top with Accord.NET
I agree. But K-Means actually returns group labels. You never know what label belongs to which shape in our case. It is called Unsupervised Learning. So in order to do that I really need to serialize the KMeans object and re-use it. But please note if i restart the app KMeans will select different labels each time. 
thank you :)
thank you very much
I know guys. Python IS the real deal. In PROD I always use python. BUT I do like my C#, so there it is. I really want to start a community for ML and C#. So I am building up to it.
Ahhh I did mix them once :) They are not right for each other :D
You don't need to create IDataSource, you already have one in `IEnumerable&lt;SourceRecord&gt;` or `IObservable&lt;SourceRecord&gt;`. You don't need to create IDataTarget, you already have one in `IEnumerable&lt;ConvertedRecord&gt;`. *** Lets say you ignore my advice and use IDataSource and IDataTarget. Then your architect says, "We really should be using TPL Dataflow. Wrap your transformer into a `TransformBlock` so we can see if the performance is as good as they claim." Now you're kinda stuck. Instead of having an independent `DataTransformer` class, you're tightly bound to `IDataSource` and `IDataTarget`. Actually, you are also tightly bound to the `FileReader` and `S3Writer`. Those interfaces only have one real implementation, so they are almost guaranteed to closely mirror the classes they are wrapping rather than being a generic abstraction. *** P.S. I highly recommend TPL Dataflow for this kind of task. It greatly simplifies orchestrating the movement of data between steps. And each step ("block" in their terminology) is naturally isolated and thus easy to test.
Thanks! I've got 46 open issues on the Github page, so please feel free to tackle one and do a pull request. =)
It has a lot less features but free intelisense. 
The UI is really weird and the autocomplete brackets make me want to pull my hair out. But I do love this application.
Right, but it's not going to re-start the timer. It's just going to ignore the instruction and keep on going as if you had done nothing at all.
Thank you for the information. I have used [Accord.NET](https://Accord.NET) and [ML.NET](https://ML.NET). Awesome libraries. Please note this is a fun project. I usually give my self 1 hour to code something up and you are seeing the result. One major thing for me is to NOT use 3-rd party libraries for these projects. I am really into mathematics and I want to learn the math models behind ML. Best way to do it? Give yourself a task and try to solve it in 1 hour. Everything in the project is implemented from scratch. For PROD I would prefer to use Python or if the requirement is .NET then I'd go with [Accord.NET](https://Accord.NET) Thank you for the comment
Yep, CodeLens. So I guess I’m not crazy. LOL
I disagree that the source reader and destination writer, and they may be used to store table level data. But I’ll continue like this. Let’s say I changed it to take an IEnumerable and return an IEnumerable. So now, how do I test this class?
Hey, could you please open an issue on GitHub, specifying your OS and .NET runtime versions?
Looks cool.
Haha I thought that might be a risk. But I was willing to take it. 
Just don't expect it to be fixed within a year.
Why did you choose for MSTest instead if the more widely used XUnit library?
F# team pays a lot more attention to compatibility with C# than the other way around. I doubt the C# team is even aware of F#.
what if you take the number the box shows, and once it is writen then change the label with a switch case?
That's good. I like it... In the context of the app I agree it would be better if I actually show the shapes label. But good design idea. Thank you I really appreaciate it
Because there isn't an IsEmpty method on a string, that's all. You have IsNullOrEmpty static, but that is a static method. If you really want an IsEmpty method, you can make an extension method for it. Note, though, extension methods WILL run against nulls, as it is just syntactic sugar for calling a static method.
My only critique is that it would be helpful if you posted the entire src of a project for some of the examples For instance I see in your video for the simple login exercise, theres a lot more code than what is in the markdown.
As so often with you your question is lacking. .NET has three `Timer` classes, two of them which have a `Enabled` property. None of them has a `enable` property. The documentation of those two `Enabled` properties both clearly state what happens if you assign `false` to it. Did you bother to read the documentation?
&gt; In the library I am trying to distribute it does not automatically update the version no matter how I publish the lib. How are you trying to update the version? Or what makes you think the version changes automatically? &gt; I believe that because the version is not being updated the nuget browser doesn't think there is an updated version available. Well, because there is no updated version available.
Let me answer this for you to help out anyone in the future, you would mock up an IEnumerable and pass it in. Most likely, this would just be an array of data. In this over simplified example, we have mocked up an IEnumerable in order to test our class. It requires mocking up the data because the class depends on data. If the class used an IDataWriter or such, we would mock that up and pass it in, verifying the contents after execution. Case in point. Mocking things for unit testing is not only a good idea, it’s often required to test the functionality of a unit. 
You are a stubborn one!
Does this work on linux?
&gt; That said, I don't think you should be having opinions on these things at this point, considering you don't even really know what you're talking about. LOL! Dude, when you can cleanly implement a VM, emulate hardware or write a 50K+ project by yourself without it becoming a mess you shouldn't have an opinion on programming practices. There's no random I should pay attention to insane ramblings about problems that don't exist in any of my projects.
are you looking to find a job as a developer? imo, start polishing your resume and practicing for interviews. i was in your shoes a few years ago, when i finally got the balls to start applying for developer jobs, i found i could have done it a long time before i actually did. you'll learn all this stuff for one corner of the tech when you start working on it day in and day out. if you're not ready to apply and interview, you have to just pick one project and stick with it until you figure it out, then move on. don't try to learn everything at once, start small.
VisualStudio is recognizing the ToString() method as Object.ToString(), and even though you have overriden it, it is still Object.ToString(). So all calls to ToString() are considered the same method signature. Quirky, but it makes sense. 
Integration tests are important. I've seen far too many projects with hundreds or thousands of unit tests fail because no one bothered to write any integration tests. In each case once I started writing those tests we discovered that what the backend thought we were doing looked nothing like what the front end thought. In some cases the data simply didn't exist and it was impossible to complete the project as requested, a fact they didn't discover until the project had been going on for a year or more. (Part of the reason was that there were backend APIs available, but they were just stubs didn't do anything. A quick smoke test would have discovered this fact.) 
I only ever heard of people talking about dependency injection when using dependency injection libraries. Doesn't change the fact that passing objects into a class outside of the constructor (which the wiki page list as a valid method) is completely insane. And those DI libraries more crazy
I agree that integration testing is important. It’s hardly relevant to the question. &gt; How do I use X? YOU DONT. X SUCKS. NOBODY DOES Y AND Y IS MORE IMPORTANT. 
I said X was overused and should be applied in situation C but not in the more common situations A and B. You just heard is as "never use X" because you are so in love with it that you want to use it everywhere. 
Yep. C# is indeed object oriented like C++, I ran into an atypical case, and the lack of IsEmpty() on string was a preference by the language designers, and I can extend the class just like I can in any other object oriented language to add the functionality I want, and I'm doing to be downvoted simply for posting text on /r/csharp. All is well my friend.
I had hoped that I could configure the version to automatically update on publish... in .net framework you could specify a version number using a wildcard for the publish and build numbers. Upon build this would update the build number, upon publishing the publish number would increase and the build number would revert to zero. In .net framework you could open AssemblyInfo.cs and find // Version information for an assembly consists of the following four values: // // Major Version // Minor Version // Build Number // Revision // // You can specify all the values or you can default the Build and Revision Numbers // by using the '*' as shown below: // [assembly: AssemblyVersion("1.0.*")] However the AssemblyInfo for a .net Core application contains the following: // Version information for an assembly consists of the following four values: // // Major Version // Minor Version // Build Number // Revision // [assembly: AssemblyVersion("1.0.0.0")] [assembly: AssemblyFileVersion("1.0.0.0")] So, I tried to update the value manually.. I right clicked the Project -&gt; Properties-&gt; package-&gt; Assmbley version and changed the values. But upon saving the file it reverts to 1.0.0.0 When I try to update the AssemblyInfo.cs to version "1.0.*" I get an exception: The specified version string contains wildcards, which are not compatible with determinism... either remove wildcards from the version string, or disable determinism for this compilation... But I am not certain how to "disable determinism" or even what all that entails... searching for c# determinism gives a ton of unrelated results b/c there is a lot of use of "Determinism, Deterministic" in programming... However, It Does seem that there was something funky going on when the values were revertting upon save... maybe those files where set to readonly at that time.. but it seems that manual updates stick currently... but I'd still prefer auto-increment... 
Yeah that's me. DI is different from what the original source of DI claims to be. https://www.martinfowler.com/articles/injection.html#FormsOfDependencyInjection is the original source. It suggest using Constructor Injection with a factory. How am I to know everyone else took the original article and completely change what it is suppose to mean (while calling it the same thing)
You are overriding a method that belongs to the Object class. That's why it shows up like that. I'm not sure if other code analysis tools make the differentiation or not. I think it requires significantly more static code analysis, if it is at all even possible, since any method that takes an object argument and calls ToString on it could in theory take an instance of your class (or any for that matter since everything is a sub class of object). So it's hard to definitely say that at run time any of the references infact don't point to your override 
It makes sense a lot more if you study Dependency Injection/Inversion of Control patterns. It really clicked to me when I read both *Dependency Inversion in .NET* and *The Art of Unit Testing* at the same time. The clearest case for Mocks comes when you have some "volatile" dependency in your tests. "Volatile" means you can't really make it behave predictably in a test environment. The best examples of this kind of dependency are: * The file system. * The network. * A database. All of those things can fail for reasons that have nothing to do with what you're testing. They also might *not* fail when you want to test your code handles those failures. If we want to write good unit tests, we have to do something to control these volatile dependencies. So instead of your code depending on the file system, it depends on some abstraction. `IFileSystem` is a good choice, maybe all it does is wrap the operations you use. But if you're loading, say, a user document, let's take it a level lower and say we have: public interface IUserPersistence { string Load(string path); string Save(string path, string data); } When you write a test like, "If a file that starts with a capital letter is loaded, do this thing...", that is hard to set up if you use a real filesystem. Your test has to create a file, put it at a known path, the file has to be successfully loaded, and you have to remember to clean up that file. This is volatility! We hate it in automated tests! So instead, you want an implementation that returns a known quantity. You could hand-write an implementation that returns it, but it's easier to just use a mock. Using some imaginary API loosely based on Moq: var persistence = new Mock&lt;IUserPersistence&gt;(); persistence.Setup((p) =&gt; p.Load(It.Is.Any&lt;string&gt;()) .Returns("This test file."); // Now you can use the mocked object. It's easy, it's consistent. The main objection is people will point out sooner or later you want to test out your class that actually touches the file system. Of course! But that is an *integration test* or a *system test*. Those are allowed to be more complicated because they have to deal with volatility. It's not as good an idea to use tools like mocks at that level. When we are unit testing, though, we always want to say, "Assuming the filesystem works..." and make it so. Not all volatile dependencies are so obvious. Sometimes you figure out you need a mock because it's too complicated to set up the initial data. Remember that a unit test wants to test as narrow and focused a unit as possible. So if you depend on "a parser" and feed it an input string to get an object that's used by the real code under test, it might be a good idea to use a mocked parser. *At some level* it becomes a philosophical debate. But at the level of very obviously volatile things like the filesystem there's no room for discussion: you don't have a unit test if you aren't mocking them. (Or, in the most technical parlance, "using some form of faked object". Some discussions distinguish between "a stub" and "a mock".) 
I've been having this same issue, even led to a VS crash the other day when I started a search and left it on one of these bad entries by mistake. I haven't really looked into it, though years ago I remember solving a similar problem by clearing out the part of the registry that stores the file type history.
RoslynPad has *different* features, not necessarily fewer :) Most notably missing are SQL connections and the debugger. &amp;#x200B; But RoslynPad does have... * Powerful Roslyn-based **editor features** (such as quick fixes and refactorings) - the same code that powers Visual Studio * **Rich language** that allows seamlessly combining types (classes), statements, expressions, assembly references (`#r`) and file includes (`#load`) in a single document (you can even place a class *between* statements), without switching modes * Support for running **.NET Core** processes * **Cross-platform** version that runs on **Mac/Linux** (albeit still in beta, since it relies on the beta of Avalonia) * Compiling **standalone** executables * NuGet package references with **background restore** that includes conflict resolution and cross-platform support * **Auto-save** so you never get prompted when you just want to close the app * Published packages that allow you to **embed** the full-featured C# editor into your WPF/Avalonia app &amp;#x200B; And of course it's fully open sourced and free, so **you** can help make it better!
Hey, I'd appreciate some actionable feedback :) What were your major pains? You can also open GitHub issues.
I added a feature to turn the brace completion off in v14 (a button on the status bar).
It should, but I haven't tested this version (it does work on a Mac). The cross-platform UI is still not very polished, as it is a rewrite using a new UI framework called Avalonia (which is also in beta).
Congrats on your programming prowess, I can't do that and I'm happy to except you've got a greater amount of experience and knowledge than myself. However just because something isn't old, doesn't make it bad. New paradigms arise all the time some are great, some are stupid, some get taken to an extreme but the idea at the core is sound. I class DI as the later pushing towards a good idea. I love hearing more experienced programmers opinions on this stuff and I've enjoyed reading lots in this thread. However it's a bit of downer when you hear an 'old timer' ;) say something is rubbish just because it wasn't how they did back in the 90's
While someone else has already answered *why* string.IsNullOrEmpty() "has" to be static, I wanted to point out that it's a fairly common pattern to add extension methods to your own projects to give you the effect you're looking for. &amp;#x200B; `public static class StringExtensions` `{` `public static bool IsNullOrEmpty(this string source)` `=&gt; string.IsNullOrEmpty(source);` `}` &amp;#x200B; This lets you call IsNullOrEmpty() directly on a string instance, while also safely account for null references. &amp;#x200B; Usage: `string myString = null;` `bool isNullOrEmpty = myString.IsNullOrEmpty(); // returns true`
My dude you literally asked a question, what the fuck is wrong with you? How the fuck can you have opinions on things when you're not even sure if you've ever used them lmao. Cringe honestly you are literally not capable of asking a question without first making sure everyone knows your dick is exactly THIS big. 
lol, now that I understand what people think it means (different from original article from 14 years ago) I can comfortably say it's insane and do it except for passing objects in to the constructor. Also don't use a factory to create the object. 
I was researching whether .NET was susceptible to "hash flooding", as well as understanding how RuntimeHelpers.GetHashCode works, and found this blog post very interesting, and wanted to share it with you all.
Thank you. That's awesome.
Sorry I typed that quickly on mobile. Just want to say I love your application use it pretty much daily. Keep up the awesome work :)
I assume it's the code editor that controls it. I think what it needs to do is erase the auto added one if you type the same. But I guess that could require pretty big changes.
How are you serializing the data "as binary"? 
As I recall, The head of ML at Microsoft basically said they're moving to using Facebook's PyTorch. I am not sure how much momentum the .NET machine learning APIs will have long-term.
[https://www.cnbc.com/2018/11/15/microsoft-allies-with-facebook-on-pytorch-onnx-ai-software.html](https://www.cnbc.com/2018/11/15/microsoft-allies-with-facebook-on-pytorch-onnx-ai-software.html)
Are you on the latest Visual Studio 15.9.9? I'm also seeing odd behavior since upgrading, including the following funky error message if I try to set a breakpoint in my debugger close to the start of a program starting: &amp;#x200B; the target process exited with code -2146233082 Something something AppXModel something something - it seems like the debugger causes a ton of instability for some reason. I disabled property evaluation in the Debug dialog using Quick Launch
I am as of yesterday I think on 15.9.9, but this issue has been around for at least a month or two. Every time I see the flag I'm like "oooh maybe they've fixed the chinese characters!" but alas. That AppXModel thing, I've not seen that, but these days I'm only doing Xamarin and Unity stuff so maybe I've been lucky.
Thanks, great to hear! :)
Oh interesting! I've not seen a crash yet fortunately. You're right, there's probably some registry key I could nuke but the risk just isn't worth it, especially because it's now trained me to just habitually open the options and check the field every time I do a find in files lol
Just wondering... do you speak/read Asian language like Chinese? 
Ooh interesting idea, I'd never thought to try translating it. Doesn't seem like anything other than gibberish though: https://imgur.com/a/OzB88ho
Also from keeping you from persisting and relying on the hash value not changing.
I believe it does the same with interface methods. So I think it's by design. Although in this case maybe a little off.
What the FUCK?! You insulted me and then ask me what's wrong with me for telling you you're silly? Fuck off 
Short answer: security Longer answer: Hashes are susceptible to attacks in situations when an attacker both knows the hashing algorithm and has freedom to craft custom attack strings. This happens in, for example, every single web app where an attacker can craft custom URL query strings, Headers, and POST body content, etc. If the attacker knows your hashing algorithm, he can craft a request where every parameter string has the same hash code. Putting all these into a single Hash (Dictionary&lt;string, X&gt;, etc) will transform all those lovely O(1) accesses to O(n), slowing down things significantly. Put enough parameters into your request, and make enough requests, and an attacker can crash the whole shebang. To combat this issue, modern .NET core randomizes certain aspects of the string hash algorithm every time the application starts. This way strings have different hash codes each time and aren't susceptible to the same collision attacks each time.
I’m pretty against unit tests historically. Places I e worked seem to apply them to the dumbest things like simple glue code. I also never really saw the point in Mock frameworks. However where I’m at now they have a lot of logic based code, and it’s heavy on DI throughout the systems. So it has its place. I understand mocking things better now and why you’d do it. Just trying to help you see another point of view since you are so adamantly against mocking and testing. 
Awesome post, thanks! That definitely makes a lot of sense and you really simplified things here. I’m reading 2 books right now... TTD with C# and dependency injection in .net. Things are finally starting to click and I’m glad I started this post and got some feedback. I think my problems stemmed from thinking too hard for the first examples of mocking that one of the books showed. Basically all the mocking was done and then the logic just returned a true or false. That was confusing because for this example there was no point in testing at all since we controlled all of the outputs of the method. One of the hardest parts of getting better at programming for me is letting something I don’t understand go for a short while and revisiting the topic once I’ve gained more dependency knowledge. Pun intended. Thanks!
What the FUCK?! You said I didn't have any credentials to speak. So I told you them. Now you're being a little bitch cursing at me. Fuck off. No place for you here
It sounds like his "cast" is more of a "map"
Microsoft made a new MSTest (MSTest V2) and now there's not much difference from others like XUnit. Mostly just preference now.
To make you not rely on it for anything other than checking if two instances are equal. Not a joke - in Framework people were relying on their magic numbers generated from the hashcode. This is specifically to prevent it.
This is a nice tl;dr for most people who just want to read this on their lunch break; thanks
Does the search work or does it behave like the actual search? 
Done: https://github.com/aelij/RoslynPad/issues/248