Out of memory eh, seems odd for my 16 gb mac (not running iOS, but macOS), but that is a great clue for me to look into! Thanks 
I can, yah never thought of that. Will do that tonight and post back! thanks for the idea been going crazy over this one
Nope, freed up memory and disk, no help. but thanks for the idea. 
Is your process itself growing over 4GB? It might be running as 32-bit. How many threads are you creating? You might be running out of space to put each threads' stack.
nope, definitely no where near 4 gb. I am only creating 1 thread! :D literally I am just testing via telnet. 
C#'s going to be as powerful as any other of your conventional programming languages in theory.
Tried on windows, no change...
Yah, not a memory issue, cleared everything and had tons free.. but thanks for the idea. 
Can you post more code around the thread stuff? What is the thread doing?
Isn't Angular JavaScript? I just noticed it in the last few bullet points and I fail to see how it relates to C#. Dynamic languages like python and JavaScript are like silly putty (taking the shape of their container) and static languages like C# and Fortran are like Legos (a structure from well defined parts).
I am using Telerik on a wpf project right now. I'm the tech lead, and I dont believe anyone spent too much time with training. We just jumped into it, read documentation as needed, and would call support if we were really confused. It's pretty straight forward. Replace wpf grid with radgrid and have more functionality. We are also using mvvmlight.
Thanks so much for the comment, really feeling lost here... Makes 0 sense, to me the code is a bunch of libs I've used a milions times. Starting to blame Mono / VS Community.......... SimplerAES simpleAES = new SimplerAES(); try { Int32 port = 9050; IPAddress localAddr = IPAddress.Parse("127.0.0.1"); server = new TcpListener(localAddr, port); server.Start(); Console.WriteLine("Waiting for clients..."); while (true) { while (!server.Pending()) { Thread.Sleep(1000); } Thread newthread = new Thread(new ThreadStart(HandleConnection)); newthread.Start(); } } catch (Exception e) { Console.WriteLine(e); }
What's the `HandleConnection` method? This random StackOverflow article says to do this: Thread thread = new Thread(SecondFoo); thread.Start();
A new challenger approaches! C# 5 unleashed by bart de smet. After 16 years of .net experience, it's the only .net book I keep around just in case. It's exhaustive and concise. I couldn't recommend it strongly enough.
I haven't read them, but Jon's book have a lot of good reviews, he's the user with most points in Stackoverflow and is currently working at Google, so he must know a lot, I think you can't go wrong with his book, but I'm not sure if it's the best choice to start with C#.
From scratch? Two years or more, could be faster for someone with excellent understanding of mathematics. Bet it would be faster for someone who's good at math but starting to learn C# rather than someone proficient in C# yet weak at math, since plenty of the building blocks are just a nuget command away, while so far we can't "download" math skill to our brain. Of course in practice people will fork the closest-to-their-goal open source cryptocurrency code available then tweak it as much as they want (which could take a weekend or weeks, even months). If the goal is simply a cryptocurrency that rely on people valuing it somehow like bitcoin, making one is easy but the train for convincing miner to join has passed years ago. Nowadays new cryptocurrencies must offer additional features to attract the miner like Ethereum, which consequently makes it far more complex.
Since you're not a beginner, I would say read Jon Skeet. Rob Miles' book is aimed at beginners - he uses it to teach Programming 101 at the University of Hull. Source: I have both, and studied CompSci at Hull Uni.
&gt; mach_vm_map(size=8388608) failed (error code=3) *** error: can't allocate region securely You can't be having this on Windows. What do you mean by "no change"?
Thanks for the feedback, I'll jump right into it then. I'm already using mvvmlight.
C# 5 unleashed is really a great book, i even do not know it before. tks 
Ctrl + f after highliting word, then f3 for next occurence 
If your just going block on waiting for a socket anyway, why don't you just call Accept on the TcpServer and pass the accepted socket over to the other thread? It'll be alot more responsive on accepting new connections that way.
Explore projects here: http://up-for-grabs.net and take up-for-grabs issues. 
&gt; C# 6.0 in a Nutshell by Joseph Albahari , Ben Albahari is a good one, I read it all during my boring classes
Ty. How do you deal with the first time you faced a real project like this? The largest thing I have worked on was a website with a database connection that I could have built solo in a week. It's like a massive wall. I don't know where to start or where to go. I can't see anyway to proceed. 
&gt; public void Awake {} . what is Awake? method name? 
I really like Skeet's book. It goes in to a bunch of details that can help performance but are counter intuitive for those coming from C++
Hi. "Using" is just a way to reference a namespace in your class. So let's say that you want to "use" a List&lt;T&gt; in your code. List is a class that belongs to the System.Collection.Generic namespace. So instead of having to write new System.Collection.Generic.List&lt;String&gt;(); If you "use" the namespace, you only need to write new List&lt;String&gt;(); The Awake() method is derrived from MonoBehaviour. The standard class in Unity derrives from MonoBehaviour (if you write a class in Unity, it usually extends MonoBehaviour. https://docs.unity3d.com/ScriptReference/MonoBehaviour.html 
He's at it again boys... I think plenty of people gave you a basic explanation of how a method is composed in one of your previous posts on this subreddit. One of the most important skills you will need if you wanna start programming is the ability to google and find out stuff yourself. Judging by your post history you are still at a very basic level and there are plenty of resources available for people learning to program. (check out the sidebar on the right of this subreddit)
Removed: Rule 4.
Removed: Rule 4.
Can I ask why you're creating a new thread for each connection, *after* the connection is made? Can I suggest that you use Task.Run or TaskFactory.StartNew or ThreadPool.QueueUserWorkItem? The performance of your service would be drastically improved. If you want to use your own threads, you should be pooling them so you aren't paying the price of thread creation on every connection. Especially if this is a licensing service and connections are brief due to a quick license check. 
How do you want to contribute? Write code? write documentation? Test applications? Promote something? You can contribute in a multiple way to an open source project. What do you want to work on? Websites? Frameworks? Databases? Compilers? OS? Try to find a project you'll be interested in. Join the team slack, irc or whatever. Introduce yourself, read their FAQ, guidelines, setup requirements... and if you want to help ask where you can start. 
Okay so this pending loop is no good and is what is killing you here. You're actually not accepting the connection until you get into the other thread. So imagine the flow. Once you get a new connection, pending is true. Therefore this loop goes into a spin, spawning threads as fast as it can loop until one of your threads can actually call AcceptSocket (or whichever you're calling). You should ditch pending altogether and call AcceptSocket or whatever accept function you prefer directly in this loop. Then use the overload for new Thread that takes object state to pass the newly accepted socket to your new handler thread. First line of the new handler thread casts the object to the appropriate socket type and you're in business. Or do the same thing while taking my other advice about not using new Thread for this, instead use Task.Run or TaskFactory.StartNew or ThreadPool.QueueUserWorkItem. RijndaelManaged is an IDisposable type. Therefore your since your class has an IDisposable field, it should be IDisposable as well.
Agreed, it really focuses well on what's different and how to put it to the best use, including all the gotchas. By far the best book I read when I moved to C#.
honestly, i want to work on software that people consider important or even vital to their work, not front end web development though. so frameworks that people use daily. i still feel very much like a beginner. I did my degree and enjoyed it but that was it there was nothing beyond the degree in there. the only thing i can say i can confidently do after that is building a website with a database connection using java.
I had several years of C# professional experience and I still learned things from that book. I can't recommend it enough.
I loved the "C# in Depth" book by Jon Skeet. That said, it is a highly theoretical (read: what's going on under the hood) type of book and might not be that useful for advancing your C# skill. It didn't make me a better C# programmer, but I did find it fascinating because it was a super deep dive into certain aspects of the language. So I'm going to warn you away from it, but mark it on your list for coming back to it later. It's definitely a good read. Just probably not the best for learning C#. To answer your question, it looks from your experience like you're a "web programmer". The C# book that advanced me to the next level was [Pro ASP.NET Core MVC](http://www.apress.com/us/book/9781484203989) -- It's a book on how to write ASP.NET MVC websites using C#. It teaches core software developer concepts like Unit Testing, Separation of Concerns, Dependency Injection, etc. as well as the MVC pattern and what goes with the Microsoft MVC Framework. Maybe this would be a good 3rd book.
Everyone does things differently, there are many ways you can improve yourself. Some of them might work you, other might not. One way is to choose a general area that interests you. Build a small program in that area. Expand it, make it medium size in terms of funcionality. Doing this will force you to learn many useful things about developing software. That should make it easier to step into bigger projects whether open-source or in your future job in some company. If you feel like you are a fast learner, you can try looking for entry level jobs even with requirements you are just starting to study, some companies are willing to invest time and effort into you. Whatever you do, the most important thing is to push your boundaries. Try to do something you think you are unable to do at the moment, but you think you will need to know. You will find out that after some learning and googling, you will be able to do it eventually.
Don't worry. Feeling like a begginer isn't as bad as it sounds. I feel like that most of the time. Sure sometimes it sucks because you want to do something and you are completely lost but OTOH it means that you are always learning :) and when you learn something cool, thats the best feeling. As for wich software to work on, you are going about it the wrong way. Don't pick a project that other people like because if YOU don't like it, you will be miserable and give up. If you want an example, C# is my favorite language and recently I found a missing API that would make my job easier. As such I took a look at the code in the corefx (working with frameworks is easier IMO because everything is better organized and independent) to see how it could be implemented. I haven't finished the pull request yet but I can tell you that adding the missing API is just 4 lines of code :) What I'm trying to say is, don't be discouraged by the size of the project. Every little thing counts :) But what counts the most is that you feel good doing it.
I would use Sandcastle. It has the several different output formats available (like html).
This could be totally wrong, I'm just free-handing it: foreach (var i in CardCollection) { Console.WriteLine("Collection Name: " + i.Key); foreach (var card in i.Value) { Console.WriteLine("\nName: " + card.cardName); Console.WriteLine("Description: " + card.cardDescription); Console.WriteLine("Value: " + card.cardValue); } }
C# in depth is amazing, as everything from Jon. But it's not focused on explaining everything. It's explains some topics really deep. And for that purpose, it's one of the best c# books there are. Having said that, I would recommend you CLR via C#, Jeffrey Richter, MS Press. It goes to really great depths about the clr. This is a need
I love this book, definitely not for people who don't have a solid programming foundation, but its very in depth and covers most important C# concepts.
Something like this Dictionary&lt;string, List&lt;Card&gt;&gt; dict = new Dictionary&lt;string, List&lt;Card&gt;&gt;(); dict.Add("Col1", new List&lt;Card&gt; { new Card() { suit = "hearts", value = 2 }, new Card() { suit = "spades", value = 4 } }); dict.Add("Col2", new List&lt;Card&gt; { new Card() { suit = "hearts", value = 5 }, new Card() { suit = "spades", value = 1 } }); dict.Add("Col3", new List&lt;Card&gt; { new Card() { suit = "hearts", value = 7 }, new Card() { suit = "spades", value = 9 } }); foreach(var collection in dict) { Response.Write(collection.Key + "&lt;br /&gt;"); foreach(var card in dict[collection.Key]) { Response.Write(card.suit + " " + card.value + "&lt;br /&gt;"); } Response.Write("&lt;br /&gt;&lt;br /&gt;"); }
I am not even sure if I am really answering your question, but if the final goal is to display your card collections, I would try something like this with string.Join(...). public class Program { public static void Main(string[] args) { Dictionary&lt;string, List&lt;Card&gt;&gt; CardCollection = new Dictionary&lt;string, List&lt;Card&gt;&gt; { { "MyCollection", new List&lt;Card&gt; { new Card { Name = "Joker" }, new Card { Name = "Queen" } } }, { "YourCollection", new List&lt;Card&gt; { new Card { Name = "Jack" }, new Card { Name = "King" } } } }; WriteLine(string.Join(Environment.NewLine, CardCollection.Select(kvp =&gt; $"{kvp.Key} : {string.Join(", ", kvp.Value.Select(v =&gt; v.Name))}"))); } internal class Card { public string Name { get; set; } } }
Thanks!
You would be better off starting with implementing a block chain which is relatively simple https://medium.com/@lhartikk/a-blockchain-in-200-lines-of-code-963cc1cc0e54 and is the basis of most of the cryptocurrencies i'm aware of, and is definately achievable for a school project The complexity of cryprocurrencies comes from how users as a group agree that a block is valid to be added to the official chain. This is done by having some difficult (usually mathematical) task which 'miners' perform which takes time and effort - for performing this task the 'miners' usually receive some kind of reward , however once you have a working blockchain you could define any proof of work function/reward system you like as long as your users agree on it. Making sure this system is secure is incredibly complex , but creating your own blockchain isn't 
omg 1700 pages. I thought that CLR via C# is long :)
Have edition 5, served me very well. Hoping to get 7 when it releases next month.
It sounds like you've figured out that a messagebox is simply a new form with a modified header and some buttons on it. Normally, you would create the new messagebox, the user would click a button, then you could work off of the returned enum result. You can actually do this using properties in the new form. Within your form's class file, add a new property public bool Overwrite { get; set; } The user would click one of the buttons on the form to set the `Overwrite` property, then close the form. Then you can capture the public property back to the calling class DialogForm f = new DialogForm(); f.ShowDialog(); //program will wait for the new form to close if (f.Overwrite) { } This is essentially the same when dealing with a separate assembly, but you just need to make sure to reference it. 
This was a solid course on async/await through Pluralsight https://app.pluralsight.com/library/courses/asynchronous-programming-dotnet-getting-started/table-of-contents You may not always have the luxury of working with a recent .NET framework version, so I would recommend spending the hour to learn about the BackgroundWorker class. This was another solid class on that subject: https://app.pluralsight.com/library/courses/dotnet-backgroundworker-component-introduction/table-of-contents Let me know if you need help getting the free Pluralsight subscription through the visual studio developer essentials program
[Async and Await](http://blog.stephencleary.com/2012/02/async-and-await.html) by Stephen Cleary is a nice start. If you like something visual [this article about tasks and threads](https://blogs.msdn.microsoft.com/benwilli/2015/09/10/tasks-are-still-not-threads-and-async-is-not-parallel/) can help too.
Thank you and yes, visual is helpful!
Luckily I do have the luxury of a lead developer and manager that both strive for the latest versions :)! I'll have a look at the course, thank you!
[Program.cs](https://pastebin.com/embed_js/QLikVj2k) [comparisonMenu.cs](https://pastebin.com/embed_js/UWDjGz8m) Here is the code. Program.cs has my console program that does the majority of the work, and comparisonMenu.cs has the functionality for the WFA form that displays the menu in a table. I have already commented out part of the messagebox that I was using previously (&amp; removed the if-else-if statements that I was using for it dialog result) You can see, in Program.cs the new references to the comparison Menu on lines 331 to 357. Thank you for the help!
This works exactly how I need it to in this situation. Thank you so much! I posted my code anyway in case there are any other suggestions (I'm sure there are). But this will do for me.
Not entirely sure I understand what your trying to do, but below is a way to display the contents of each key and pair. What you want to use if you are working with dictionaries and your foreach loops is a KeyValuePair&lt;whatever, whatever&gt;. Below is a working example of creating a deck of 52 cards and displaying them all. Sorry for the added content, but I wanted to add values to the cards as well. If you have any questions send me a private message. class Deck { private Dictionary&lt;string, int&gt; _CardValues = new Dictionary&lt;string, int&gt;() { {"Ace", 1 }, {"Two", 2 }, {"Three", 3 }, {"Four", 4 }, {"Five", 5 }, {"Six", 6 }, {"Seven", 7 }, {"Eight", 8 }, {"Nine", 9 }, {"Ten", 10 }, {"Jack", 10 }, {"Queen", 10 }, {"King", 10 } }; private Dictionary&lt;string, int&gt; _SuitValues = new Dictionary&lt;string, int&gt;() { {"Spades", 1 }, {"Clubs", 3 }, {"Hearts", 4 }, {"Diamonds", 2 } }; private Dictionary&lt;Dictionary&lt;string,int&gt;, Dictionary&lt;string, int&gt;&gt; _DeckOfCards = new Dictionary&lt;Dictionary&lt;string, int&gt;, Dictionary&lt;string, int&gt;&gt;(); public Dictionary&lt;Dictionary&lt;string, int&gt;, Dictionary&lt;string, int&gt;&gt; GetDeck { get { return _DeckOfCards; } } public Deck() { _DeckOfCards.Add(_CardValues,_SuitValues); } } class Program { private static int _CardNumber = 1; private static Deck _Deck = new Deck(); static void Main(string[] args) { DisplayAll(); Console.ReadLine(); } private static void DisplayAll() { foreach(KeyValuePair&lt;Dictionary&lt;string, int&gt;, Dictionary&lt;string, int&gt;&gt; kvp in _Deck.GetDeck) { DisplayCardsInSuit(kvp.Key, kvp.Value); } } private static void DisplayCardsInSuit(Dictionary&lt;string, int&gt; keys, Dictionary&lt;string, int&gt; values) { foreach(KeyValuePair&lt;string, int&gt; kvp1 in values) { foreach(KeyValuePair&lt;string, int&gt; kvp2 in keys) { Console.WriteLine(kvp2.Key + " of " + kvp1.Key); _CardNumber++; } } } } 
So, the main issue I see with your displayAll() method is that you are looping over the CardCollection twice, for i in CardCollection for value in CardCollection, which will return you x^2 number of KeyValuePairs where x is the size of the dictionary. Try: foreach (KeyValuePair kvp in CardCollection) { Console.WriteLine("Collection Name: " + kvp.Key); foreach (Card card in kvp.Value) { Console.WriteLine("Name: " + card.cardName); // ... } }
I assume you need a boolean result and not the actual difference and you already have the data from Cognos available during the execution. I'd go with, depending on the size of the table of course (I assume it's not huge, considering the source is HTML): - Get the Web table from Cognos and make sure I can iterate through each element. - Instead of grabbing all the data from Vertica to then hash it and so on, possibly spending more time in comparison than needed, iterate element-by-element through the Cognos table. - In the loop query Vertica to get the same data (single "row"). Have I gotten a response? Yes: great, move on. No: stop, you know the tables are not matching. If you need to know the difference you will need to go through the whole Cognos table at least once (in the same cycle). Every time you don't get a match from Vertica - store the iteration number in an [int[]]. By the end of it you'll have the list of row numbers in the Cognos table that are missing from Vertica.
I get Using the generic type 'KeyValuePair&lt;TKey, TValue&gt;' requires 2 type arguments for the KeyValuePair term. 
Jeremy Clark's "Task and Await in C#" playlist is good: https://www.youtube.com/user/jeremybytes/playlists 
Worth reading a few more of Stephen Cleary's articles there. He really knows it inside out and writes nice, readable articles.
Oh yeah. It should be KeyValuePair&lt;string, List&lt;Card&gt;&gt; Sorry, I'm just typing this straight into Reddit. Edit: you could just use 'var' too. I just typed KeyValuePair to ensure it was clear what objects were being referenced.
Where in your code are you actually accepting the connection? My thought is that the following line is being called repeatedly. Thread newthread = new Thread(new ThreadStart(HandleConnection)); newthread.Start(); Could you change it to this: while (true) { while (!server.Pending()) { Thread.Sleep(1000); } Thread newthread = new Thread(new ThreadStart(HandleConnection)); Console.WriteLine("Starting a new thread...."); newthread.Start(); } We also need to know what HandleConnection is doing. Is that spinning up more threads?
Also (VERY IMPORTANT!): newThread.Start(); will start running "HandleConnection" on a NEW thread. You need to understand that the current thread is going to immediately restart the while loop. If your new thread doesn't accept the connection quickly enough your main thread is going to still have a connection pending and attempt to spin up and start another thread.
Hmm well this seems to work ok foreach (var kvp in CardCollection.Keys) { Console.WriteLine(kvp); } But still doing that duplicate thing, but maybe im just not assigning it correctly. It will add the card to the other collection even though i intended to add it to the other one, so i get something like (example) Red Card Collection Red Card Blue Card Blue Card Collection Red Card Blue Card When Red should only be in red and blue should only be in blue The other part to this to display the cards is foreach (var cards in collList) { Console.WriteLine("\nName: " + cards.cardName); Console.WriteLine("Description: " + cards.cardDescription); Console.WriteLine("Value: " + cards.cardValue); } So i think i am just adding the Cards to collList instead of directly assigning it to the string name for a collection
&gt; But still doing that duplicate thing, but maybe im just not assigning it correctly. It will add the card to the other collection even though i intended to add it to the other one, so i get something like Yeah, I'm not sure how you are adding them but if your collection is a Dictionary&lt;string, List&lt;Card&gt;&gt; then you should do something like: CardCollection.Add("Red Cards", new List&lt;Card&gt;()); CardCollection["Red Cards"].Add(new Card("Red")); &gt; So i think i am just adding the Cards to collList instead of directly assigning it to the string name for a collection So, the List&lt;Card&gt; in KeyValuePair&lt;string, List&lt;Card&gt;&gt; is a reference object. That means that you are alway refering to a reference of the List&lt;Card&gt;, so you can pass the reference around and modify the List using any reference. Example: List&lt;Card&gt; newList = new List&lt;Card&gt;(); Dictionary&lt;string, List&lt;Card&gt;&gt; newDict = new Dictionary&lt;string, List&lt;Card&gt;&gt;(); newDict.Add("foo", newList); newDict["foo"].Add(new Card("red")); newList.Add(new Card("blue")); foreach (Card card in newDict["foo"]) Console.WriteLine(card.ToString()); // this will produce: // blue // red Edit: I should note that it wont output 'blue' and 'red' unless you override the ToString method in the Card class, but it will output two objects. I should also note that I wrote all of this, again, in reddit and can't verify that any of that code is without errors.
No worries i appreciate the help. Besides just creating it, i also have to validate and whatnot. I have public string collName { get; set; } in my CardCollection Class. In program, when creating/assigning a card to a collection, i have a ReadLine and then i pass that string into method public void dict (string _collName) { collName = _collName; } Then i display the available cards. The user chooses one to add to the collection they just created or selected. I then have var remove = cardList[index - 1]; bool exist = true; if (CardCollection.ContainsKey(collName) == exist) { cardList.RemoveAt(index - 1); collList.Add(remove); } else { CardCollection.Add(collName, collList); cardList.RemoveAt(index - 1); collList.Add(remove); } Although im sure this just makes collList accept all of the cards instead of assigning them to where the users chooses.
"Non-null" means you're trying to insert a null value into a column that doesn't accept nulls. "Unique" means you're trying to insert a row where one or more columns violates a uniqueness constraint: that column (or combination of columns) must have unique values for each row in the table. Foreign-key means you're trying to insert a value into a column that's linked to another table and the value you're inserting doesn't match an entry in the linked table. Basically, the message means that your database has rules that constrain what a valid row in the table should look like, and the data you're trying to insert violates one or more of those rules. You'll need to look at the table design and the data you're trying to insert, and figure out what rule(s) you are violating. Then either change the rules or change the data.
I get ya, thanks.
&gt; Basically, the message means that your database has rules that constrain what a valid row in the table should look like, and the data you're trying to insert violates one or more of those rules. Well, I guess OP is not trying to insert at this point, she's trying to (re-)enable constraints that were disabled. Same result, more or less, albeit with a much less specific error message.
Yeah I noticed this one as well. ReSharper has, from time to time, been a little too cute with its refactoring suggestions, producing not quote equivalent code.
This is why `var` is so useful. Manifest typing is pretty annoying with generics.
On a related note, check out this article for all things threading in C#, covers a lot of concepts behind concurrent programming: http://www.albahari.com/threading/
Ok, how do I get the XSD to refresh based on the changes that were made to the database? The error occurs as it try to do a TableAdapter.Fill(customertable). So the data is loaded in the table.
Not sure you can with any reliability. Checking the User Agent string will show a lot of browsers pretending to be Chrome. 
None, read Jeffrey richter clr via c#
The only browsers I have to support are IE 10+ and Chrome. This is an internal app, so we have specific allowed browsers.
Auto complete, example 2 is AFAIK what visual studio does already do using IntelliSense (builtin) Refactoring, example "if nesting" is IMHO nothing you actually need an extension for. *"Just"* add/remove a negation and change "&amp;&amp;" to "||" and vice versa :-) Same for the other example. In my opinion, your refactoring examples are not the ones where I would need an extension for... On the other side, the other and warning/hints examples are very good examples where you'd want extension support for. Edit: Larger if-constraints are of course more difficult to convert. My point was about things you don't *need* an extension to find/replace whereas looking for method usages or value changes is something *"designed"* to be done by an extension 
&gt; Auto complete, example 2 is AFAIK what visual studio does already do using IntelliSense (builtin) I get `myObject.Test` instead of `myObject.Test();` &gt; Just add/remove a negation and change "&amp;&amp;" to "||" and vice versa Way more annoying than Alt+Enter Enter. It's very convenient. Of course, I do not have to have them, but it makes things easier and more convenient. I'll be back in the same country as my desktop soon again and while ReSharper does slow it down, it's not debilitating. That's why I'd really like my convenience options back even without it ;)
So there you go. Check the user agent string, and send your header to those that identify as Chrome. 
What happens if you send both to the browser regardless?
I subscribe to /r/coding, /r/programming, /r/csharp, /r/dotnet, and the Hanselman RSS feed. I feel that keeps me pretty well up-to-date on the .NET-ecosystem.
Those are good, but I'm curious about sites outside of Reddit. I wasn't familiar with Hanselman though. Thanks! :)
Sounds like you're not using NotNull/CanBeNull/Contract Annotations. Static analysis is huge to the quality of your code, and an extremely important and powerful feature of resharper.
I didn't mean to sound argumentative. I appreciate the feedback. I *think* here it kind of makes sense, but the general consensus is what I thought: attributes really aren't meant for anything at runtime. I find myself doing a lot of 'code trickery' where it really isn't useful, just because I think it is cool and don't serious analyze its usefulness as much as I should.
Most good stuff gets posted/re-pposted to /r/csharp and /r/dotnet
Is that something I could do in the web config, or will that have to happen some where in code? Honestly, this is my first real project in Web Forms lol. I've always done MVC.
In testing I'm not seeing any errors or anything like that. I'm not sure if there really are any repercussions from doing so.
I'd go with that then
&gt; not quote perfect typo
I'm asking for alternatives to resharper.
Blogs by Stephen Cleary are awesome. He has even written some books on the same topic. https://blog.stephencleary.com/ [Prajnaa](http://Prajnaa.weebly.com)
Writing Roslyn extensions is surprisingly easy... if you don't find an existing extension for what you want, that's always a solution.
&gt; Just add/remove a negation and change "&amp;&amp;" to "||" and vice versa The math checks out, but that's a lot more risk of human error than I'd like, especially if your conditions are more complex.
There are many features of Resharper which are built-in in Visual Studio 2017. [Prajnaa] (http://prajnaa.weebly.com)
I edited my post to further explain what my point was regarding this topic: It can be done by hand whereas some of the other examples could not be (effectively) done by hand :-) 
Sorry for suggesting to make further use of it and improve the quality of your code, my apologies!
You can follow Stephen Cleary blogs. They are really good and very informative. [Prajnaa] (http://prajnaa.weebly.com)
I don't think he needs convincing of that, but his temporary laptop appears to disagree.
Codemaid has been a pretty valuable replacement for Resharper at my new job. Cleaning up documents feature is commendable. 
http://blog.cwa.me.uk/ http://chrismm.com/blog/ https://blogs.msdn.microsoft.com/alphageek/ https://msdn.microsoft.com/magazine/ http://mattwarren.org/
The C# room in the discord is pretty cool, not sure if its what youre looking for but its under resources in the sidebar!
Oh, awesome! That's pretty much what I was looking for. :)
Ahh. Thank you. :) 
[Roslynator](https://marketplace.visualstudio.com/items?itemName=josefpihrt.Roslynator), [CodeCracker](https://marketplace.visualstudio.com/items?itemName=GiovanniBassi-MVP.CodeCrackerforC), [SonarLint](http://www.sonarlint.org/visualstudio/) (SonarLint is impressively picky, which is of course a good thing in a linter) Why didn't you like CodeRush? Were you trying the Classic version or the Roslyn one?
I might have to look into that, thanks :)
you could try implementing some js/css that only pops up when the browser doesn't support x-frame-options. I don't know how to do that, but if you can do it reliably, it's probably a much better option.
Roslyn. And I honestly can't remember what it was. Just that there were a bunch of things I didn't like and Roslynator immediately felt better. I'll look into the links, thanks.
They're almost up to date.
If it's every form, every time, then look at the global.asax, specifically at the Application events. Otherwise, create a function somewhere and call it in your form where you're sending results to the user. 
Indeed, just writing code is nice but knowing what really happens under the hood can make a difference.
I don't use visual studio so take this advice with a grain of salt, but why not use a ram disk (the persistent kind).. when I used that with intellij for its index files boy did things fly. If these slow products are due to indexing or anything like that, it might be a way to go
This comes up pretty often. Morning brew is already on here, which i check daily. I also check www.alvinashcraft.com aka the Morning Dew daily as well. A bit more diversified than morning brew and has a podcast specific section 
I would, sadly the bottleneck seems to be the cpu
Uh, yeah, but I listed a bunch of features that aren't.
Chris Alcock is a fantastic guy, used to meet him at the local .net usergoup.
Add VS Refactoring Essentials to that list.
I don't see any reason why you can't just send the header to all browsers. Keep things simple
For the inversion of if statements. That is not the point. The best use is if you have an if block that is the rest of the method. Resharper will notice that, and give you the option to "invert the statement to reduce nesting". What will it do, is invert the if and add a return statement in it so you lose one level of nesting. The cool feature is not the action of the inversion, it's the fact that ReSharper recognizes the statements and offers you to cleanup the code.
I tried Rider (currently in RC phase) it's a lot faster even with Resharper than VS, so maybe try it.
As of now that's what I'm doing. Just wasn't sure if that would effect the browser having a header it doesn't know what to do with.
Github Project: https://github.com/tenor/CSharpAWSLambdaFunctions
Visual studio is known to be heavy IDE even without plugins You might want to give Rider a try, it is made by Jetbrains, so if you liked doing your Java stuff on IntelliJ, you'll absolutly love it https://www.jetbrains.com/rider/ It is based on Resharper backend, and it is really light / fast, so the reason for resharper being slow on Visual Studio is not on their side (this is my opinion, i'm probably wrong, but i tested both Rider and RS on VS..)
 System.Web.HttpBrowserCapabilities browser = Request.Browser; string s = "Browser Capabilities\n" + "Type = " + browser.Type + "\n" + "Name = " + browser.Browser + "\n" + "Version = " + browser.Version + "\n" + "Major Version = " + browser.MajorVersion + "\n" + "Minor Version = " + browser.MinorVersion + "\n" + "Platform = " + browser.Platform + "\n" + "Is Beta = " + browser.Beta + "\n" + "Is Crawler = " + browser.Crawler + "\n" + "Is AOL = " + browser.AOL + "\n" + "Is Win16 = " + browser.Win16 + "\n" + "Is Win32 = " + browser.Win32 + "\n" + "Supports Frames = " + browser.Frames + "\n" + "Supports Tables = " + browser.Tables + "\n" + "Supports Cookies = " + browser.Cookies + "\n" + "Supports VBScript = " + browser.VBScript + "\n" + "Supports JavaScript = " + browser.EcmaScriptVersion.ToString() + "\n" + "Supports Java Applets = " + browser.JavaApplets + "\n" + "Supports ActiveX Controls = " + browser.ActiveXControls + "\n"; HttpContext.Response.AddHeader("Content-Security-Policy", your value); 
these 2 commands should give you a decent starting point get browser capabilities then add header to the response PS. try not to do this by browser name , if possible PPS. why are you using frames &gt;:( 
Huge resharper fan here. Agree the performance is spotty. Agree, in general, that using a fast powerful computer is a good solution. Agree that it can be WAY CPU intensive, so you'd need a tasty newish I7 and speedy RAM to make the difference...it's not disk bound. 
Method usage hint is included out of the box in VS2015 and 2017. This includes test coverage.
The Morning Brew http://blog.cwa.me.uk
There is a way to do that in C#, but I having a feeling that what you're asking for is not what's needed here. Post your code (and indent it 4 spaces for proper formatting).
I will post my code . But I didn't understand the 4 spaces thing 
To get code to display properly on reddit, each line must begin with at least 4 spaces.
Thank you . I will do that right away
this is the important part //code start private static void PrimaryInfo() { Console.WriteLine("What's your name ? "); Console.Write("Please type your first name : "); FirstName = ReadLine(); CheckBlankSpace(FirstName); Console.Write("Please type your last name : "); LastName = ReadLine(); CheckBlankSpace(LastName); Console.WriteLine("Nice to meet you " + FirstName +" " + LastName); Console.ReadLine(); } private static void CheckBlankSpace(string temp) { if ((temp == " ") || (temp == "") || (temp == " ") || (temp == " ")) { Console.WriteLine(" sorry , you didn't unput anything , please try again "); Console.ReadLine(); Console.Clear() ; PrimaryInfo() ; } } // code end so what i want to do is using the "CheckBlankSpace" method multiple times but i don't want to copy past it . so i need a code that make me get back to the original method without calling it by name , in this case the "PrimaryInfo" method . btw : i am just a beginner who just started to learn the basics 
* [ASP.NET Official Blog](https://weblogs.asp.net/) * [Scott Hanselman - Microsoft Lead](http://www.hanselman.com/) * [Jeff Atwood's "Coding Horror" - SO Co-Founder/Discourse Founder](https://blog.codinghorror.com) * [A List Apart](http://alistapart.com/) * [Jon Skeet - Google Engineer](https://codeblog.jonskeet.uk/) * [Visual Studio Magazine](https://visualstudiomagazine.com/Home.aspx) * [David Walsh - Senior Engineer at Mozilla](https://davidwalsh.name/) * [DZone - Clickbait for Developers](https://dzone.com/) * [K Scott Allen's "Ode to Code"](http://odetocode.com/) * [Math Intersect Programming](https://jeremykun.com/) * [Dan Luu - Microsoft/Google Engineer](https://danluu.com/) Some of these aren't so much .NET as much as they are just Software Engineering in general, but they're all really good resources.
Use this: https://msdn.microsoft.com/en-us/library/system.string.isnullorempty(v=vs.110).aspx https://msdn.microsoft.com/en-us/library/t97s7bs3(v=vs.110).aspx 
thank you so much , that solve the " empty input problem" . I still want to know a way to return to the previous method , if you have any code to that , i will really appreciate it 
Sounds like you want a loop. Repeat collecting the input from the user until it is valid.
alphageek has only had one post this year, and mattwarren seems to post about 1.5 times per month. They look valuable, but I'm not sure they fit OPs criteria of good sites to visit daily.
i will try to do that , thank you 
If you create Random objects too close together (in a tight loop, say), the objects will have the same seed, and will generate 'random' numbers on the same sequence. Instead, create your Random object at the class level (instead of inside a method that forms the body of a tight loop!) and reuse it.
Initialize your random object once. When Random's constructor is called, it needs a seed. From there, the values that come out are deterministic based on the seed (pseudo random algorithms are just permutations of state). Since you called the default constructor, it used the current time as the seed. The value returned from most time methods update infrequently, about once per 15 ms depending on circumstances. Environment.TickCount being the underlying value in most cases, and that value is only updated, iirc, when the thread is rescheduled. If you ever need a random value based on actual entropy, you'll want to use a cryptographic random number generator. In C# that would be the RngCryptoServiceProvider. https://msdn.microsoft.com/en-us/library/system.security.cryptography.rngcryptoserviceprovider(v=vs.110).aspx
If you do a while loop (per Mordenstein), the string.IsNullOrEmpty (per argenpaul), you should not need the call to CheckBlankSpace. Since this looks like homework, that should be enough hints to get you going.
Not really a homework xD . I was following a course on mva for beginners and I wanted to try some ideas to test what I learned that's all . Anyway thanks guys for helping me ❤
I'm a huge fan of DevU.com. Bob really breaks it down and offers fun challenges. I had tried learning to program for 10+ years but all the content I could find got to advanced too fast and would cause me to lose focus and drive when I started to struggle with concepts. 
Yes, the [Task-based Asynchronous Pattern](https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap) is what you want.
hey thanks for the article. let me spend some time reading it. Just a side note, do you have any preferred method of validating the implementation. For now I am thinking of logging time stamps to see if they indeed are running in parallel.
I'm interested in this as well... ill.be following to see what your conclusion is! 
Yeah - a global random object is way better.
Here: https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/goto 
What? Just send them all. If a browser doesn't support it, it'll be ignored.
Rider is nice, but I have to work on a lot of Webform sites, and, understandably, Jetbrain didn't really optimize as much for those. The reason R# is lighter on Rider is afaik that it runs out of process there while they didn't do that for VS.
Actually if I read your requirements correctly the Task-based Asynchronous Pattern is unsuitable. The key here is "fire and forget" - async really assumes you are going to await the result. Since you're talking about a file upload I'll assume you're in ASP.NET or some other web context. If so I can say from experience that while starting another thread does work (i.e. Task.Run, etc) it is risky due to time limits on the web context and potentially recycling of the worker. Calling an async method without an await has similar problems. I have spent many hours hunting the obscure errors that result from this kind of thing. I'd suggest you google your options "ASP.NET fire and forget" or similar. Articles such as https://blog.stephencleary.com/2014/06/fire-and-forget-on-asp-net.html can be quite helpful. Not sure how big/important your secondary task is - if it's major you might even want to look into an architectural solution such as a message queue. P.S. if I'm completely mistaken about your context and you're not in a web site or service then starting a new Thread may be completely suitable.
Yeah, I have heard that DevU.com is pretty good, I will try it! 👍
Also, why do your variables and parameters have capital first letter?
Look up the constructor https://referencesource.microsoft.com/#mscorlib/system/random.cs,5d22f8880fc9f8d9,references Lookup Environment.TickCount https://msdn.microsoft.com/en-us/library/system.environment.tickcount(v=vs.110).aspx Read the remarks Note that, because it is derived from the system timer, the resolution of the TickCount property is limited to the resolution of the system timer, which is typically in the range of **10 to 16 milliseconds.**
You are exactly right. I'm in a web context and I actually read about the potential problems it can cause. I'm looking at this similar to a logging solution. Fires, should not affect the current request if it fails. It's not critical, but can be potentially useful. Let me try the google criteria you mentioned. I've googled quite abit before and most results are on await Async and as you said it's not what I'm looking for. Thanks for the inputs!
Awesome, finally!
I would categorize the options based on whether occasional failure is acceptable: Task.Run (or anything else that spawns a new thread) - will probably be OK for tasks shorter than 60 seconds. Occasional unexpected errors - unlikely to impact the user but can be confusing for admins. Not guaranteed (worst case you don't even get a log of what went wrong). Registered task - options such as HostingEnvironment.QueueBackgroundWorkItem or manual implementation via IRegisteredObject should be reasonably safe, though occasionally a task could be lost as they're still part of the web process. Architectural reliability - it's time consuming to set up message queues and local services but if you have a reliability requirement or simply deal with a lot of processing type tasks then it can be well worth the time investment. I can't really speak for the middle option, though it sounds like that might be what you need - when I've had unimportant stuff I slapped it in a Task.Run and put up with the occasional oddity. Anything vaguely important and I've usually used a message queue.
fantastic, actually this is a relative short task. but because the main task makes a call out to an external rest service , the additional few second seems noticeable, atleast from my testing. I am going to try out the 2nd option. Not exactly because i want it to be more safe than task.run but i think this is a good case to practice it; a non-critical function and see how it holds up. Thanks alot for your help btw and pointing me at the right direction. and yes I guess ill put up with the occasional oddity as it comes along.
Glad I could help. If you happen to remember at the end I'd be interested to know how that approach works out for you.
You can also seed it with datetime.Now
That would have the exact same issue.
I don't think so. The issue is Random is getting instantiated repeatedly, very close together using the same seed as a result. If a single instance of Random is used, every DT generated should be pseudorandom. That single Random instance can be seeded with datetime.now or rather DateTime.Now.Ticks since the seed must be int. Edit: Downdooted when my comment is exactly in line with the agreed solution.
Because they haven't learned the naming conventions. Examples of common standards/conventions: http://www.dofactory.com/reference/csharp-coding-standards
Yes, what makes the difference there is using a single `Random` instance. What seed you choose for that single instance is completely irrelevant to resolving this issue. The default seeding is time-based anyway (`Environment.TickCount`).
It's funny that you should mention that, local variables are about the only thing Microsoft themselves don't have [naming guidelines](https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/naming-guidelines) for in their [Framework Design Guidelines](https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/) even though the de facto standard is to use camel case for variable names. Having said that, they do specify that parameters should use camel case.
`goto` should only be used as a last resort when you can't use function calls, conditional statements/flow control (if/else if/else, switch/case), or loops (for, foreach, while, do...while) to easily accomplish what you're trying to do.
Then pick an engine that suites the needs of your game and make it work. If you're doing purely PC game in 3D either will work fine, you can embrace either and get a similar experience, if you want to do multi-platform, mac, linux or 2D go with unity. If you want to do something more shooter oriented that you can easily change the post processing and engine features at it's core go with Xenko.
Just looking at the second ReShaper output, it should be obvious even without checking with dotPeek that its logic isn't identical to what you originally had. After all, the compiler has no way of knowing that you want the two null coalescing operators to have their null checks together before their assignments.
yeah you'll be fine. Browsers get headers they don't know what to do with all the time.
Holy Necro post batman. &gt;more shooter oriented that you can easily change the post processing So you are saying these are some reasons to embrace it? How exactly is it "more shooter oriented" and how is it "easier to change the post processing?"
I wonder why they would choose these few fonts instead of going the full native system font route &gt; font-family: 'Segoe UI',"Helvetica Neue",Helvetica,Arial,sans-serif; vs. &gt; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
Have the controller that populates the WeightDistance object accept an optional datetime. If the datetime isn't null then filter with that datetime. if(suppliedDateTime != null) { weightDistance.Distance = allDistances.Where(x =&gt; x.DateTime.Month == suppliedDateTime.Month &amp;&amp; x.DateTime.Year == suppliedDateTime.Year); } That linq query will return every distance in allDistances that is in the same month. Just have the form where you are selecting month value submit to the current page. You don't need to make a new controller or page. I would suggest reading something like this http://www.apress.com/us/book/9781430265290
Yeah the book is a good shout. Sorry to sound dumb but you say "Have the controller that populates the WeightDistance object accept an optional datetime.", What controller what that be? I understand everything from there
`0.00000087` IS `8.7E-07`. You're confused by the way the debugger displays the value to you, or the way you print it back to a string.
All these changes, and they still didn't add sorting search results...
So if I put my double into request string (to my api) it will be "0.00000087" ?
Second search result for "double string format without exponent" brought up this [solution](https://stackoverflow.com/a/33697376) (alternatively use the answer below)
Yours is the comment of someone who is insecure about their programming skills, or lack thereof.
But if you think using JavaScript for server side programming is a good idea, you probably can't tell good code from bad, so go crazy.
That makes no sense, give me some example why is it so bad?
When I run that code I also get that string back, or actually `8,7E-07` due to locale settings, so it's not related to the debugger display.
Here's a link to the [demo](https://youtu.be/MiLAE6HMr10?t=1861) where he showed it off!
First tip, don't create just View and ViewModel folders and use them for all views and view models. Make subject/domain area folders and create view and view models folders within if needed.
themorningbrew.net is a bit easier to remember
And the models can be general for all ?
Point is, it's not related to the *parsing* of the double from a string but the *output formatting* of the double to a string.
Use either nuget or paket. They have command-line clients.
Hey guys, I'm new to C# but have written a lot about PowerShell in the past. This is my first time writting about C# so I would appreciate and criticism or advice you have to offer. I've got the second half of this post publishing later this week, where I go through the many issues I had converting the code to target dotnet core, so I hope you'll stay tuned :) 
Are you behind a load balancer? What are the actual values of each of those headers? Unless your lb terminates SSL (or has your private keys) it will be unable to rewrite the HTTP headers to add the forwarding headers.
Their image shows this: http://blog.nuget.org/images/2017-07-18-NuGetOrg-Gets-A-Facelift/NuGet-Gallery-Home-New.png But I see this: http://i.imgur.com/Yhc2pcn.png Looks kinda underwhelming. Also, their statistics are messed up: http://i.imgur.com/k1xKC3j.png And they use two different ways of displaying dates on the statistics page as well.
I love Visual Studio (I use 2015 but will upgrade to 2017 one of this days.) but recently I've been using Visual Studio Code and with the recent updates I use it almost as much as Visual Studio. Give it a shot :) 
From what I heard . Studio code isn't good for writing programs . Please tell me what the difference between vs code and vs 2015
Btw if you have a link for an offline instaler of vs 2015 i will appreciate it 
I'm... I'm so sorry...
I think if you go here: https://my.visualstudio.com/Downloads?q=visual%20studio%202015&amp;wt.mc_id=o~msft~vscom~older-downloads And sign in with your Microsoft account, the top "Visual Studio Community 2015" is an ~3.8GB ISO download. Not sure if the updates are included with that or not; might have to get those separately.
VS Code is amazing for writing programs. Just not .NET programs. Knee deep in Webdev with JS/Typescript and all that? It's a dream.
Is there any important updates I should get ? 
I understand . Thanks for the information
Not necessarily, a lot of the time the models will go into a separate domain project. Think about it in the sense that you don't want to tie your domain logic or models to a particular UI technology.
Well, ideally up to the latest Update 3. But depending on what you're doing with it, I suppose it's technically not necessary. I stumbled upon a direct link to the full Visual Studio with Update 3 all-in-one, it's 7.1GB though: http://download.microsoft.com/download/b/e/d/bedddfc4-55f4-4748-90a8-ffe38a40e89f/vs2015.3.com_enu.iso If it's for learning purposes, you could also look into grabbing Project Rider. I think the download is around 300mb (I don't know if it has additional components to download after that.)
It's just for learning . Because I am new to programming . I started with c# and I am following a MVA course . My ultimate goal is to use C# with unity game engine . Thanks for all the info , I really appreciate it . I wanted to install rider but I only have a 32 bit pc . So I guess I will increase ram and instal 64bit windows. Any extra info / advises would be much appreciated
VS Code is actually a very light IDE, more of a text editor. But it has amazing support for plug-ins which transform it to your liking/needs. 
Thanks for the explanation
My pleasure.
Given the following code: double a = 0.00000087; string b = "0.00000087"; double c = double.Parse(b); Console.WriteLine(a); Console.WriteLine(b); Console.WriteLine(c); Console.WriteLine(c.ToString("F12")); // 8.7E-07 // 0.00000087 // 8.7E-07 // 0.000000870000 Console.ReadLine(); The output of a non-string value type (like a double) will automatically have ToString called on it for display to you, the user. If you want to format that text in a specific way, use [Formatting Types](https://docs.microsoft.com/en-us/dotnet/standard/base-types/formatting-types). Edit: phone typo
No load balancer, and on the server if I connect via http it works, switch to https it gives the loop back address.
Calling the empty `Random()` constructor, in this context, is *exactly* the same as seeding it with `DateTime.Now` - which means that mentioning `DateTime.Now` adds nothing to the solution: the solution is to initialize a single `Random` instance and re-use it; at that point, you don't really care how it is seeded. Furthermore, `DateTime.Now` is actually a horrible value to use. Why? Because it can go backwards. It can go fowards. Two reads of it may have the same value, even though physical time has passed. User changes their system clock? `DateTime.Now` changes. NTP adjusts the system clock? `DateTime.Now` changes. User changes their time zone? `DateTime.Now` changes. `DateTime.UtcNow` has the same issues, with the only exception that it is isolated from time zone changes. As it is, `DateTime.Now` is computed from the same time source as Environment.TickCount, which means that both values are updated only once per system timer interrupt, which defaults to 10ms on single core machines and 15ms on multicore machines, but can be adjusted down to ~0.5 ms through the Windows Multimedia API. When you put all of this together, `DateTime.Now` and `UtcNow` are basically only good for displaying the time to a human, either in a UI, on the console, or in a log. If you want stable, high resolution, high precision timing that preserves order of events, you want the High Performance Clock, also known as the Win32 API `QueryPerformanceCounter()` and `QueryPerformanceFrequency()` . Thankfully, .Net provides a class that wraps these: `Stopwatch`. In summary: * Any mention of seeding `Random()` with system time, to solve duplicate-seeding issues, is spurious. The only solution is to seed once. * `DateTime.Now` is a terrible time source and is intended only for human consumption. * If you want high-precision, high accuracy, passage-of-time measurements or timestamps, that are always monotonically increasing: use `Stopwatch`.
Yeah, then maybe look into getting VS2015 with Update 3 so you can also use the [Visual Studio 2015 Tools for Unity](https://marketplace.visualstudio.com/items?itemName=SebastienLebreton.VisualStudio2015ToolsforUnity) plugin which lets you debug with VS and a few other features. But one thing at a time. If you're still learning the C# basics, then it can wait. Not sure about the 32bit requirements; no idea if any of these toolings require 64bit.
Removed: Rule 4. Feel free to repost it, but include the code you're using. Also consider looking into some of the [current 2D-specific tutorials ](https://unity3d.com/learn/tutorials) and see if they give you an idea.
My guess is HTTP_X_FORWARD_FOR or HTTP_CLIENT_IP is being set to the loopback for https for some reason -- can we get a print out of the value of all 3 variables for an https request?
VS Code is closer to Notepad++ and Atom than a full blown IDE. At it's core it will provide a fancy text editing experience. The plugins will turn it into a better development environment with debugging, intellisense, etc. That is why it works great for front end applications using typescript, or interpreted languages like python, but running the full .net framework is a little more rough. VS2015/2017 have everything built in to run the .net framework. It comes with templates, refactoring tools, relatively advanced debugging profilers, database integrations, etc. But that comes at the cost of being slower to startup and use, and can bloat your application with unnecessary stuff. Personally I use both. VS2017 community edition is great for most things you need for .net development and when I need to quick open files or want to keep another project open for reference I'll open it in vscode.
This is really amazing. To see a strong statically typed language being used to write front-ends, I feel like the current javascript fatigue that is seen might have an answer. 
Speaking in terms of WPF, my current system uses modular libraries that are loaded at runtime to supply aspects of the software. The main program acts as nothing more than the base framework and bootstrapper; all of the features and their configurations are in the DLLs. The reason I prefer this route is mostly because I'm dealing with a program that's very complex and (originally) poorly written, and I constantly have to push new updates or features to the software. On a small software, that's not a huge deal, but in this case I don't need to be updating a 600 Mb install just because I changed one little label. It's far easier to update one 5 Mb DLL file for everyone by letting the main program check for and update the file.
Take a look at Visual Studio 2017 as it allows for the creation of dotnet core projects
&gt; But that comes at the cost of being slower to startup and use, _and can bloat your application with unnecessary stuff._ Are you saying Visual Studio bloats your _compiled application_ with unnecessary stuff?
thanks for the explenation , do you know any link for VS2017 offline installer ? i looked for it , but no luck 
will do , thanks ♥
Kinda. You need to call ToString with the overload for a format strong.
they should have a separate category for most downloaded packages that start with system. and microsoft.
AFAIK, there isn't one. Starting with VS2017 they stopped supplying ISOs because VS2017 has so many different optional integrated modules that a full offline installer is reported to be ~50GB. That said, they did modularize the components to reduce your overall download size (if you choose only the small subset of components you need) and (apparently) made the installation process more robust for poor internet connections. https://visualstudio.uservoice.com/forums/121579-visual-studio-ide/suggestions/17541385-please-make-iso-files-for-visual-studio-2017 You could give it a shot and only choose the single/couple components you use. EDIT: There is a process by which you can make a separate offline installer (which is linked in the answer I linked above) which you could make at a separate location with a better internet connection and toss on a USB stick or burned DVD.
Hmm, both HTTP_X_FORWARDED_FOR and HTTP_CLIENT_IP are blank. The REMOTE_ADDR is returning a loopback address in HTTPS.
&gt; AFAIK, there isn't one. Starting with VS2017 they stopped supplying ISOs because VS2017 has so many different optional integrated modules that a full offline installer is reported to be ~50GB. &gt; i think i will download VS2015 , as far as i know it will get the job done right ?
Unless you know what you are doing, which OP has stated they are learning it still, VS will include templates for code you don't need. For example, If you startup an MVC app it will default to including security dlls and code that you don't need. It will also create a bunch of controllers, views, js/css files you don't need
A while after I wake up, I get a bunch of links from dew, early afternoon it's brew. I love that they are spaced apart :)
Ahh, got you. But VS won't actually add anything extra if compiling the same project/code. I would argue though that if OP is learning the initial basics of C#, .NET, and any of its platforms, that VS and its templates are probably a good way to get started. Not to mention the over abundance of tutorials and learning resources designed around the assumption that the user is using Visual Studio.
It featured on dot net rocks podcast a few weeks ago. He mentioned it uses .net 2.0 I think! :) It's great work I can't wait to use assembly in the week one day
Yup, it should.
Oh yeah, the same csproj compiled through vscode vs vs will end up identical. Sorry for being vague about that. And I completely agree. VS is the best place to learn .net. I use it for most of my development, with the exception being when I am experimenting with dotnet core on my linux machine
[See if you can gleen any information from this](https://stackoverflow.com/questions/17655292/asp-net-httpcontext-current-request-servervariables-not-working/17655337#17655337) maybe you can do something with HttpContext.Current.Request.UserHostAddress? Also what is your server setup? Apache? Nginx? IIS?
At that point, how can you trust in the .NET stack that was built by Microsoft, and then an external company comes up and build a better tool to manage your own stack. 
IIS. I decided to go the hacky way around this for the time being by gathering the users ip address by using an external api (accessed through jquery). What a nightmare!
But have you actually used them, without an IDE, in Bash? And have you used other package managers, like npm? Which is my baseline of user experience. NuGet is the obvious choice, but `nuget.exe` doesn't appear to be self-sufficient, it relies on PowerShell and/or an IDE, which I don't have. For example, `nuget.exe` doesn't touch your `.csproj`, which means that I have to edit it manually and run `nuget restore` or `msbuild /t:restore` (which, for some reason, doesn't create a directory with the restored packages). Which gets more complicated when looking for package updates. Should I try using it with [Pash](https://github.com/Pash-Project/Pash) or something?... Also, for example, when I run `nuget install X`, it installs unnecessary dependencies, which come with the framework I'm targeting. NuGet, if I understand correctly, can get that info from the project, but, for some reason, it needs a solution file, which, otherwise, is completely useless and redundant. About Paket - I've seen it too, and started reading its "Getting Started", but, straight off the bat, they ask you to add an executable binary and several other files to your project, tracked by version control, which, to me, is a pretty big "huh?". Also, it really doesn't appear very user-friendly, and I've seen some people mention here on Reddit that they find it over-complicated, compared to NuGet (which, in turn, doesn't feel like a top notch piece of console software either). However, I admit, I didn't study it properly yet, decided to ask here first. `dotnet` does everything I need, but it's Core-only, AFAIK.
&gt; how can you trust in the .NET stack that was built by Microsoft It is open source now. If you have any concerns you can look at the source code. &gt; and then an external company comes up and build a better tool to manage your own stack. Competition is always good... even in open source.
It should unless you're trying to do .net core I think.
since i don't understand what does .net core mean , then it will get the job done xD
Visual Studio with ReSharper is the best way to dev in .NET by far i'd say
is this a must have extension ? 
Sploosh!
If you want a simple fix, switch your double to a decimal. It eliminates this issues. 
it's the latest version of .net that is fully modular, and can run on Linux (it still runs on windows of course). Not many people use it yet cause it's fairly new, i think RTM was 1.5y ago? Its not a priority and it's not THAT different from the .net framework anyways.
&gt; About Paket - I've seen it too, and started reading its "Getting Started", but, straight off the bat, they ask you to add an executable binary and several other files to your project, tracked by version control, which, to me, is a pretty big "huh?". Because it's the easiest way. You're free to install it locally in the system and execute it from there.
No, it's too expensive for that. If you're just learning, don't bother with it.
not a "must have" i started out without it but i must save i would have saved loads of time if i would have used it from the get go. It has a few really nice QOL features. Try out their free trial and feel it out :) Also if you're doing web work id sugget web essentials, it give some nice "web to code tools" that makes things faster for you as well ;)
It's bad because he can't figure it out
I agree. For small projects, separating views from viewmodels seem like a good idea. For large application, it quickly gets out of hand. ReSharper and navigation is an aid that may overcome it, but now in hindsight I would recommend what you are. Models should be put in a separate assembly I think, as to make sure that the models do not depend on any MVVM or UI framework.
Don't go by server variables for this if possible. It sounds like you might have some odd redirection or firewall stuff going on, but its impossible to diagnose without a lot more information than a single nested 'if' statement. HttpContext.Current.Request.UserHostAddress Might work? There are a few other properties of the Request class that should work iirc. Put it into debug mode locally, slap a breakpoint on that line and investigate the request class until you find the property you're looking for.
Project Rider from JetBrains. IDE built around Resharper on a solid platform, and it runs on all major operating systems. 
I recommend putting models in an assembly of its own, just to make sure you won't get any misdirected dependencies. Also, never make any assumptions about threading model in the models assembly. You will thank me later when you want retrofit the models for some other project. :)
Sounds like the O in SOLID. 👍
thank you for the advice 
thank you for the advice,currently , i am just learning the basics in order to use c# with unity . 
Super strange, perhaps it's how IIS is handling the https request? I know you can accidently fudge this up with nginx fairly easily by routing https locally through the http server (which will cause the remote_addr to be the server address)
I'm weird I use visual studio code but then debug in visual studio when I need to. However I know lots of people who develop under vim using omnisharp and they quite like it.
It has enormous potential. When I first heard about WebAssembly, I was hoping it might bring us a better alternative to JavaScript. JavaScript just never really was meant to do the things we're doing with it now. It was originally meant to help manipulate mouse cursors and form elements and stuff. This could open up all kinds of possibilities of using a more mature language, since it looks like the future will be moving 99% of your application into the browser itself.
I actually started out with unity a while back and used Mono, but in retrospect i should have used visual studio, even just vs code would have been better than Mono :P 
I'm pretty sure we already saw it on this sub, but it doesn't matter because it's pretty neat.
Tried that, still loopback address. Problem is I cannot get an SSL cert local to test this bastard. And of course... "It works on my machine!" lol
Yeah I'm thinking the same thing, ugh. Thanks for the help!
Repost ftw :)
Your local IIS lets you create a self signed certificate. Google for some instructions. From there you set up your site, change the bindings so that its listening to https traffic, bind it to your new self signed certificate, and change your VS web project settings so that the launch URL is the https version. Change "localhost" to your machine name too. Run the site in debug mode from VS, but now running under https. The fact that you're seeing the servers ip address when deployed remotely implies that there is something else happening. It's not your browser making a call to the remote server, but you are making a call which is being intercepted, and possibly redirected, server-side.
Exactly, the ecosystem would be amazing. You can use your favourite language and environment to build applications, and they will be performant too (I'm guessing that the webassembly runtime would eventually be hooked into v8 and other js engines).
Keep in mind once you migrate to unity, they use a different version of C# than standard Visual Studio C# projects use. By default, it's a very old version of C#, so some language features that you may read/learn about won't work. However, in the latest version of Unity (Unity 2017) they released experimental support for a much newer version of C# in unity which brings most of those features in. Not something you need to concern yourself with right now, but something to be aware of later
Your browser is f'd, not the website. The stats display fine on the latest version of Chrome, and the numbers on the main page match theirs - they rapidly count up from zero on load.
My notes on the topic: https://www.infoq.com/news/2017/07/Blazor 
Thank you for the advice . I will keep that in mind
Too add to their suggestion of using a loop, maybe try to do it without a second or third method at first. Once you have the logic and flow figured out, notice the patterns that arise and extract the repeated code into a method.
Noted thanks
Your using a new Random each iteration of the loop. When you initialize a random generator without a seed it pulls a seed from the datetime object... so if you generate a bunch of randoms within the same ms... or whatever datetimes precision is... they will all have the same seed. You want to generate the random outside the loop so you generate a single random and pull subsequent random values rather then repeatedly pulling the first random value out of a random objects with the same seeds. 
Is it correct that when you delete the JS files they get re-created, but changes are not updated? If yes, then it's likely that you're not operating in the Development mode. Look up how to tell asp.net core that you're in development mode. It's quite possible that the underlaying tooling will only check for updates in development mode - because once released it would be pointless to check for changes.
Visual Studio
the fact that is on github doesnt mean they will receive and apply pull requests
The poor man's ReSharper: http://vsrefactoringessentials.com/ 
To do what, exactly? A double is a value type, so "wrapping" it doesn't make too much sense. If you find yourself doing the same conversion a lot, you could use an extension method to allow simplified syntax when displaying the number such as: double foo = 0.00000078; string bar = foo.AsFormattedString(); And your extension method would look like: public static string AsFormattedString(this double value) { return value.ToString("F10"); } It's really going to be driven by the needs of the application. The point overall though, is that you only need to do a conversion when you're either displaying the value to a user or hand off the data to another process which cannot directly use the value type such as serialization where you want the serialized output to match a given format. Edit: phone hates me
I used Angular 2 with .Net Core for about a year, and I used webpack in a visual studio code console to watch the source and compile when changes are saved. With webpack you can set up a template html file (can work with cshtml too), and your js/css will be automatically inserted. You can also have a hash of the file as the name, allowing it to bypass the browser cache. You can do it with VS using Task Explorer (webpack/grunt/gulp etc) but it was far slower than VSCode for me and basically froze VS2017. I much prefer VCCode for html/css/ts anyway. I would recommend using a build tool like webpack, gulp or grunt over manually compiling scripts.
I'm using the latest version of Chrome as well. Edit: Tried it in Firefox and it's still wrong. Edit 2: Tried it in Edge and it worked, same for Blisk.
Just a notice. While c# is statically typed. It does have dynamic type as well. Called dynamic. Which can be used if you wish. Nice article mixing lots of things to I like tho. From hardware, pi and c# so right up my street
I. WANT. THIS. SO. MUCH. 
Can you provide a screenshot of the exact error?
VS 2017 + Viasfora (Love it!)
Yeah same!! Really want to help make this a thing! 
Thanks man that's exactly the kind of feedback I was hoping for! Do you think there is something else I should include given the audience will be beginners too? I've got part two almost completed (the rpi is working running this app with a nice GUI too!) and should be publishing in a few days 
So you're just allowing people to use an entire page as part of the key when encrypting/decrypting? Interesting, but it doesn't seem very useful in the real world. 
It is possible to create with PowerShell 
http://i.imgur.com/Lk9CFAn.png
Lets assume you want to compose the message 'dog' and the source url is reddit. Assuming the content that's returned from reddit is 'abcdefghijklmnop&lt;|...s.d'. The packet would be composed such as: www.reddit.com|3|14|6, where each number is the char location. This packet is then encrypted and and returned as a base64 string. You pass this encoded string to someone else that has the app and it would decompose it. As I mentioned before, there are issues if the site has tons of dynamic content.
Upvote for webpack. I'm mostly a back-end guy, so learning how to get webpack working took a little bit of time, but I've used it in Angular and React apps now, and it makes life way nicer. Once you have the config set, you can just run the build with --watch and your files will update as you save. Bottom line is, you should get comfortable using CLI tools for your front-end process. The IDE is great in a lot of ways, but the lack of control and integration with the rapidly evolving front-end world quickly becomes a hindrance. Once you can set up webpack and an npm script for it, you have everything you need for rapid development.
Probably means changing JsonConvert.DeserializeObject&lt;RecipeList&gt;(json); to JsonConvert.DeserializeObject&lt;List&lt;RecipeDetails&gt;&gt;(json); but by doing that, you would need to remove the "recipe" text to the start and add square brackets to the outside of the json string to denote that you're dealing with an array or list. @"[{ \"publisher\": \"Real Simple\", ... \"title\": \"Chicken and Gruyre Turnovers\" }]"; But posting the error text would also help
I think you need the [DataMember] attribute on top of your properties. Like this [DataMember] public string publisher { get; set; } Give it a shot. Let me know if that works
Wow. I might actually start doing web development again if this comes to fruition.
This isn't something I'm committing to source control. It's just code I wrote to test the performance of a few chained linq queries. I ran into this Random instantiation issue in the process. The shop I work for uses capitals. As mentioned [below](https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/capitalization-conventions) by /u/VGPowerlord. .NET standard is Pascal case for everything but parameters, which are camel case.
Except that they do and have. Look at the history. Besides, your concern was regarding trust. All you need to satisfy trust is transparency.
I'm programming exclusively in VS Code, and I really like it! It supports tons of languages through plugins, and the Omnisharp plugin for C# is top-notch!
As far as I know, VS2015 supports .net core as well.
This look so cool! I would love to be able to use C# and other more mature languages in web development instead of javascript :)
I use sharpdevelop at work daily. I have VS, but it takes 2 minutes to load and builds at least 10x to 20x slower. Which is strange because I think they're the same build told. Sure, sharpdevelop has far fewer automated features, less support, and less style, but it's unbelievably faster.
What other IDEs are there besides VS?
Hey look everything I can almost do in Angular!
You could consider changing your JSON string into a format that looks like { "recipe" : [{ "publisher": "Real Simple", "f2f_url": "http://food2fork.com/view/37859" }] } since your deserialize expects an array of your class. Let me know if this works!
This is the answer. Had the same error earlier this week.
Removed: Rule 3, spam. Please try to limit your submission frequency and ideally take part in more /r/csharp or general discussions outside of your own submissions.
Removed: Rule 3, spam. Please try to limit your submission frequency and ideally take part in more /r/csharp or general discussions outside of your own submissions.
Because you can actually modify the DX12 api and shader loading with intellisense. This can be faster as well. Instead of having to write catchall shaderlab code. The way that the frustrum culling works in Xenko is more suited to corridors than Umbra. Umbra and the portal baking in Unity requires a lot of work to be usable in tight spaces and it's difficult to define your own occulsion portals with any effectiveness in Unity.
I don't use the SPA template, I prefer to just have ASP.NET Core doing Web API and static content for hosting the built Angular app for builds. The server-side rendering of the SPA template is definitely interesting, but also adds a good bit of complexity in my mind. Below is a copy/paste of my reply to [this thread](https://www.reddit.com/r/dotnet/comments/6c6bq1/noob_questions_about_spa/) that was asking a more basic question. It may not completely apply to you, but it might help: #Structure The general structure I use is an ASP.NET Core web app project, with the Angular app in a 'ui' subfolder. [Here is a gist](https://gist.github.com/anonymous/a84b7be7d5402a7296609eec47581a64) with the interesting files. ###Development/Debugging Launch `gulp serve` (or use Visual Studio Task Runner Explorer) and open a browser to http://localhost:4200/. The Angular CLI is configured to proxy `/api` to the ASP.NET Core web app on port 5000. Live reloads happen when angular files are changed, everything just seems to work pretty well here ###Builds/Deployment For builds/deployments, it depends on the scale of what you're deploying. If you want a simple single-server option, you can simply enable static content hosting in your ASP.NET Core app, and use the `ngbuild` npm script I have configured for the ui. That does a prod build with aot and writes output to the `wwwroot` directory. If you're doing a fancy/large-scale cloud deployment, you could build things, deploy them to aws cloud-front, etc... #Tasks Using the Visual Studio Task Runner Explorer, you can bind the `serve` task to run when the project is opened 
It's an interesting idea. So the URL and indexes are base64 encoded? What's to stop interception of the base64 string, converting it back, and then decoding the message? You mentioned encryption, where does that come in? And why not just use encryption alone? Useful or not, it sounds like a fun project making it work.
I think he's using JSON.Net which doesn't require that.
the program class shows the Newtonsoft.Json library
That's [Json.Net](https://json.net)
i stand corrected. thank you
Copy your JSON string to clipboard (CTRL+C), then go to Edit &gt; Paste Special &gt; Paste JSON as Classes. That will take your exact json schema and turn it into a C# class, complete with subclasses, navigation properties, etc.
&gt;The encoded base64 string was very large - larger than the file itself, haha. Isn't this always the case? Since you're only encoding single characters and each input character is represented by at least 2 output characters, plus the length of the URL and base64 overhead. Would make more sense if you attempted to express the message in as few substrings of the source as possible. Regarding the implementation itself, I'm not sure what all the try/catch/rethrow blocks are supposed to accomplish. The crypto code looks okay but the hardcoded key is of course not good. Also, why do you filter `*` (and *only* `*`) from the source?
Or you can register for a student account if you are one!
Look up "loopback capture". I know NAudio supports this, although I'm not sure if there aren't better C# audio libraries around these days.
Wisual Studio of course!
Subscribe to the KeyDown or KeyPressed event of the textbox, it triggers on most keys being pressed (you can whitelist characters such as Shift, ...), if the textbox is focused. It's a bit harder to check for the entire form (so if any control is highlighted), as most controls take input focus and as such the form's events wouldn't fire.
I tried resharper for a while. Loved all the refactoring tools and suggestions. Hated the fact it doesn't always work fine. Trivial things such as renaming or extract method sometimes fail. Sometimes made the computer significantly slower. Uninstalled it. Most of the things I need on a day to day basis can be done with VS2017 plus a couple extensions. I don't miss resharper at all. You can even do fine with VS2015, but VS2017 added a few key things you don't wanna miss.
Not really. Read my other response. You can do most useful things with just VS2017 and a couple extensions. Even with VS2015. I don't miss resharper at all.
Visual studio 2017 community edition. Free, powerful, and you can install just what you need. Take the time to learn all of its tools, specially refactoring, navigation and configure C# editor preferences, including code style. Plenty of extensions as well, but it's already super powerful out of the box.
The guide he is using is using Webpack.
Oh nice ! It seems to be a good way to work ! So, if I understand, I split my soft functionalities in a proper project ? 
As in a DDD solution ?
Indeed. 
Apart from the other answers, notice that you don’t need the `if (DaysReturned &lt; 1)` part. The loop below will not run in that case anyway. Also, you should properly camelCase your local variables and parameters. 
Most of my colleagues swear by resharper. I've never really cared for it. I get on fine. But when thy use my machine without it they get annoyed and so do I when I use theirs. It's just a preference. If you are used to it you will probably want to keep it. 
I have not been in a project in which DDD is used, so I can't claim to say either yes or no. What I can say though, is that the models should be reused for the same functions/layers/services. If not the same, you need to separate the models, because both layers will probably evolve differently.
My feeling is that some people started using it when VS didn't had some of its key features, and now keep using out of habit. I'm not truly convinced that nowadays it adds enough value to justify it's problems. Plus the fact it's not free, which might be a minor point since it's price is affordable for most devs, but for others might not. But I really want to know what I'm missing.
You are right about people using it out of habit. I've had a guy tell me he couldn't live without the 'go to implementation' feature. He was amazed when I told him it's been in VS for years. The hints and naming conventions and stuff is cool though. 
A never used it because it isn't something customers would pay for, nor available on the images we get from customer IT, thus we don't get security or IT clearance to install it.
Not true, there are a lot of features that vs doesn't have, so it's not just preference. The big thing I miss about resharper is the intelligent fill out of classes such as tostring, equality etc...and adjusting namespaces for a class. Still I find vs 2017 with codemaid comes close and is far cheaper.
Yeah, I love it when resharper generates the equality implementation and then people go on adding properties and forget it's there. Priceless :)
Challenge yourself, and you might learn something new
One of most important things about ReSharper for me is the code inspection. A lot of people even senior devs don't know code conventions. This is one of most annoying thing for me, to read dirty code. ReSharper helps a lot to simplify or format the code to match code conventions. Sure, maybe there are also other free tools for this, it's just how I feel about ReSharper.
If I'm understanding what you want correctly, you should be able to do it with [this](https://msdn.microsoft.com/en-us/library/393k7sb1\(v=vs.110\).aspx).
You should have a controller that gets hit before it loads your page right?
Removed: Rule 4. You can repost it, but be sure to trim your code down to the most relevant parts, that it's formatted for reddit (prefix each line with 4 spaces), and you include more details and better explanation of what you're trying to achieve and how it is not working.
No, sorry they were all deleted as we're all doing Core now. Bad lukc. Have you tried java?
If you set the KeyPreview property of the form to true its should receive the events before the controls do.
StyleCop ir Agent Smith are both plugins for resharper, that Will make your Code follow thousand of convenctions, plus grammar check in coments. Unit test framework continuos testing similar to NCrunch. DotPeak for assembly inspect. Navigation to documentación of library functions and decompilation if they are not available. Fast notion on what Code is being covered with unit test with dotcoverage. Many adicional plugins instalable as resharper extensions. And i have been only using It for a month... For me It has no color with vanilla 2017.
You should look at code analyzers, those things are becoming really good with roslyn and totally integrated into VS. IMO Resharper is not for code conventions.
And variables. And fields.
This is it. Code styling is so easy to use and share and haven't found a (free) replacement to resharper yet. When I read code written by my team, I'm not supposed to know who wrote it simply by looking at the way it is written. Plus some really useful extension, like Exceptional.. while it has its caveats, our exception management has never been so well done. Never again did we encountered unexpected exception, everything is either catch or well documents. Plus people have stopped writing catch-all clause, which has much improved the realibility of our softwares EDIT: guys, if you disagree with me, reply with your point of view instead of simply downvoting.. while I don't give a shit about karma and such, the downvotes imply that some of you strongly disagree with me and I'm curious as of why. Thank you
Interesting, i might take a look at it if i ever need to move from my custom monogame. But currently that is doing a great job for me.
not that i can currently think of, keep the articles coming though.
I use ReSharper. Almost every single time I open a file created by a ReSharper hater, that file is an abject mess. I then end up using ReSharper to clean up the mess and wonder how it is that someone who hates ReSharper is also often the messiest coder on the team...
What's the best way to help make it a thing?
Sure, sure. &gt; Core Hahaha... yeah, no. &gt; java ...
Sort of, but that's still keeping some aspects tied to your main software. The idea is to create a lightweight application and make it load extensions and content dynamically, with absolutely no knowledge of what they do, allowing you to make a modular application that can easily be maintained, tested, and updated. Each separate library contains all of the necessary components for that module, so in the case of using the MVVM patter, it would have the Models, Views, and ViewModels. Any dbcontext or other shared resources would be injected into the module's class constructors by the main application on load. I suggest you start reading about the [Managed Extensibility Framework (MEF)](https://docs.microsoft.com/en-us/dotnet/framework/mef/index) which will be one of the backbones of a properly modular application.
Stylecop is not a plugin for resharper. It has a plugin for resharper, but you didn't need resharper even back in the day, and you sure as fuck don't now.
[FluentScheduler] (https://github.com/fluentscheduler/FluentScheduler) is pretty neat for more complex tasks and availible as a nuget package. But like u/puhtahtoe suggested a Timer will probably suffice
I don't know of a C# library that can out-of-the-box convert directly from SVG to DWG. If there aren't any, you may need to combine two libraries: one for reading the SVG data, and one for writing a DWG file, and do the conversion between the two yourself. I can't speak to reading SVG files, though a quick googling shows there's a couple. But I've been using [Wout Ware's CadLib](https://www.woutware.com/cadLib/4.0) for years now with great success and no real complaints. It's expensive, though depending on your intended use, the expense may not be an issue. DWG requires the high-end "Professional" license, but if you're ok with the equivalent DXF format, then you can use the low-end "Basic" license. If you just need some manual or one-off conversions, there are a few free-ish utilities out there that should work out-of-the-box. Perhaps you may even be able to run them via command line input (which you could then drive from a C# program).
I find that Code Maid, which does lack in some areas, fills the gap reasonably well. Sure there are some features that would be nice to have but are by no means something that I can't live without. That and I am a bit of tight fisted miser so I will be just fine with out Resharper.
Resharper might be useful for some gotchas / language features, but you have to take its suggestions with a grain of salt, always. This renders the whole tool a little useless, because if you already know the language well, mostly you don't need Resharper.
Yes I am using JSON.Net
Here is my error [img](http://imgur.com/a/hn86m)
The easiest way to have something occur at a set time intererval is to use a timer and attach to the Tick Event. If you want a process to be running in the background and provide progress updates you can use a backgroundworker. You can attach a handler to the DoWork event of the background worker that will do whatever processing is needed... and you can set the backgroundworker to provide updates and attach a handler to the Update event. Additionally, you can attach to the workcomplete event and that event can provide information as to whether the background worker ran as expected, or stopped early due to an exception.
I worked in a place where most people used resharper. I found that it slowed down my environment too much so I only used the test runner. Some people seemed to make good use of it, but they weren't the ones who were most vocal about needing it. 
I would Like to change the JSON string but that is what I retrieve from the API. Here is my error [img](http://imgur.com/a/hn86m)
&gt; senior devs don't know code conventions I think that, by definition of senior, senior devs define conventions. ;) Edit: I guess I should have put a /s instead of the ;) , if they don't follow conventions and produce a lot of dirty code, are they really seniors? 
Closing and restarting the entire program has a performance overhead. To be a good programmer, you should try and eliminate these. What seems like the easiest option isn't always the best option. Key events are helpful here. A reset class that reinitializes the game is one solution. Going back to a main menu or restarting from a save (if you have those) are both interesting challenges that would improve UX.
Can't really change the JSON string that's what i am retrieving from the API
That's not Resharper's fault.
No.
That did it! Thanks a bunch... I never knew about that feature in Visual Studio 2017/2015. Do you know if there is an extension like that for Visual Studio Code
There are lots of ways of solving a problem like this. Personally, I'd create a method called `GetString()`. This method would take a single parameter, a `string` called `prompt`. It would display `prompt` to the user, read the user's input, and then, in a loop, repeat until the user has entered something valid, displaying a message if the user enters something invalid. Finally, it would return the (valid) input. Then, your `PrimaryInfo()` can use this method to prompt for and input each of the strings in turn. The problem with the way you're trying to do things is that it requires `CheckBlankSpace()` to know something about the method that's calling it. This is generally very bad practice, because it prevents you from re-using that code again anywhere else in this or any other project. If you look at what I've described, you'll see that `GetString()` knows nothing about what's calling it, and doesn't need to know anything about what's calling it. This means that many other methods can use the same `GetString()` method in the future.
Not really, this thread explains pretty good how it's defined in professional world: https://softwareengineering.stackexchange.com/a/25577
The answer that worked for me is what celluj34 said below.
Originally, I wasn't thinking about encryption/secure messages at all. The motivation for this idea was to allow someone (me) to encode a message without storing it on someones database. The encryption part came in when I wanted to obfuscate the string so it wouldn't be readable if they happen to get the base64 text...but it can still happen, just makes it a bit harder. Also, I randomize the character index. If there are multiple occurrences of the given char in the content, it'lll randomly pick the index of the given char. That why this breaks if the site is dymanic and changes a lot - I use bash.org to test my data and other sites. Right now, I basically open up PDF, text files, etc, and copy them into the application for testing, and it works pretty damn well. I may just take out the encryption part and find a better way to both obfuscate and also perform some type of compression to have the message reduced in size. You can also use a local file to generate these results, but then you would have to send that file to the recipient if you planned on having them deconstruct the message. Thats why I chose using sites, but this can be expanded to use _anything_ for the source. I also have a tool I wrote that scans the site and does many encodes/decodes to let me know if that site is viable for long-term storage. I have a list of sites that update every 30 minutes, etc...those would be great to use if you want to send that message to someone with an 'expiration' time. 
&gt; Audio visualisation for hard of hearing/deaf Isn't that just a fancy name for 'text' :).
Resharper used to be necessary, and in some ways it's still better. Fundamentally though, it's dog shit slow. 2013 and before that was fine, because VS was dog shit slow too, and there weren't any alternatives, but 2017 is actually really fast and with Roslyn you can get about 98% of the functionality without turning your VS into an unstable shit show. TL;DR, the stuff resharper does is useful, but most of what it does can be done for free and without having to generate the AST a second time badly.
Yea, I agree, I'm looking for a way to reduce the content of the string (perhaps some type of compression). Regarding encryption, I wasn't planning on doing this, I just wanted to obfuscate the entire string before converting it to base64, and I found this solution the easier for now, but is not reliable if you run this on other OS's (broke on OSX). If you can chime in with better ideas, please share! Regarding the exception handling, its a habit. I originally planned on making this extensible - where you could create your own plug-ins to allow you to use anything as a source (this was part of the wpf app I was writing). Also, the regular expression * grabs all the chars from the source.
VS2017 has quite a few code style options. And extensions such as code maid cover most of the rest. Which ones are you missing?
VS 2017 can deal with naming conventions. Also had quite a few hints, and you can add plenty more using analysers. Which ones would be missing?
I would say that System.Timers.Timer would work better for OP because Windows.Forms.Timer runs in the UI thread. It'd require the implementation of BackgroundWorker (similar as you said) for long UI tasks. The Forms timer isn't thread-safe either. Both should work for what he wants I suppose. I'm just not a fan of the Forms timer. 
I have created a subreddit for VS Mac developers: https://www.reddit.com/r/VisualStudioForMac/
Thank you for this article! I'm very new to C# (and programming in general) and I found this really informative and easy to follow. I appreciate it!
Thank you for your kind words and have fun with programming and C#!
I was also entertaining the idea of modifying a client/server chat I wrote years ago to include this as the protocol for sending messages. Perhaps I can include some type of caching. I'm also tinkering with files right now...trying to re-create a directory on my computer with a couple of files by encoding all of them via web content. I write enterprise software for a living and these pet-projects keep me sane during my very limited after-work hours, haha. 
How people can argue against this is beyond me. VS+R# is the bees knees.
I didn't understood fully . If you wrote a simple code , it would be appreciated 
I'm on my mobile, so I can't really write code right now - but I'll come back tomorrow with a sample for you.
Thank you so much . I will look forward to that :D 
Just a few days ago I posted about stuff in missing without r#. I re enabled it now and my productivity absolutely improved again.
That comment seems nonsensical to me. How does knowing the language make it less useful to generate code?
I had an idea, googled it, didn't find it, but found this: http://www.instructables.com/id/3D-Stereo-Audio-Spectrum-Visualizer/
What's on line 321? Why are you using raw sql? Use an ORM like EntityFramework to make your life easier. Also, you're vulnerable to SQL injections.
You will have to give him access of course (there's several way depending on where everything is run). But really, if he's going to use SQL server you should either setup the database on his tenant so he can run the database and the application on the same regional network, or you should setup network peering. Calling SQL over the public internet or cross data center boundaries sounds like a recipe for bad performance.
&gt; If so I can say from experience that while starting another thread does work (i.e. Task.Run, etc) Just to be clear, Tasks are not necessarily run in separate threads. A Task may be run in the same thread and can block the caller.
Can't really tell since I haven't had the chance to use vs2017 without resharper yet (I do not have lot of time at work for that kind of thing) I may try it at home when my PC is repaired, from what I can read in that thread, vs2017 seems to have a lot of new cool features missing from previous version
I find Resharper really useful when working with unit tests (TDD style) - their Test Viewer is much more polished than the default, or the one you can download for NUnit.
This will be an internal system plus this is me just doing a rough draft while the other guy is off on holiday. reason im doing it that way is cause i dont know how to do the other way. Plus about line 321 i have no clue cause i dont have a line 321 
Use SQL parameters rather than concatenated strings, sorry if you're new to this but its 2017, you shouldn't be creating your query this way. As above use EntityFramework/Dapper/ORM of your choice will solve this for you, if you don't want to use dapper or something for the love of god use SQL parameters
Yes i know i should be but I am only doing a very rough draft to see what i can do. plus i have no clue how to do all that stuff 
It's your sql statement that is bombing. Write the statement with the parameters that your are passing in out to the debug window to see what the statement is. Line 321 is where the issue is in the statement. 
Ok thank you will do that tomorrow. 
You can give access to the IP 0.0.0.0. Then firewall would allow access from any IP address.
[Roslynator makes much of what R# does redundant, and it's free, too.](https://marketplace.visualstudio.com/items?itemName=josefpihrt.Roslynator)
This may not be the best tutorial (I'm on my phone so can't look at them all properly) but this gives you an idea: http://csharp-station.com/Tutorial/AdoDotNet/Lesson06
Like several others here.... Visual Studio Community 2017 as it is very powerful and free.
Don't have a computer to test handy, but if you run update-database with the -script option, you will get an SQL script. That script should have an insert statement for the table which tracks migrations. Running that statement manually might help sync up your version.
For VSCode I'm not sure. It may be built in as far as know. I don't use I'm myself so I can't speak to that
Regardless, you shouldn't be allowing anything dodgy to happen. Strive to improve your own abilities. I'd suggest looking into EF &amp; the code-first approach. Also, your SQL string, the parameters aren't enclosed in anything? Try changing it like so: Title='" + Title + "', etc... If you were using EF you could just do something like this: https://pastebin.com/u4zsJnvB
I'm not at a computer either but can you just delete the column in SQL then just create a new migration with your column? If ur column has data you can script that first
Thanks for changing every line in the source so when we look for actual changes to see where something went wrong every line is highlighted. If you reformat an older file that doesn't fit your preference... I hate you.
Removed: Rule 3.
The best argument against it would be that it make VS freeze and lag from time to time, but even with that in mind it is better than any alternative i see today. 
You shouldn't even practice like that, it's a bad way of doing it. Someone could easily hack your database.
&gt; it's dog shit slow legit question, what sort of PCs is everyone working with that have issues with R# speed? Ive been fortunate to have high end development workstations, but i've noticed very minimal R# speed issues even on decently large solutions (50+ projects, 4 Mil LoC) even on my surface pro which certainly isn't anything special specs wise (8gb ram, low/midrange i7, low/midrange SSD, windows 10, vs2017+R#). Also do you have solution wide analysis turned on? I usually have this feature off because i find it more annoying than helpful but i wouldnt be surprised if it was also a heavy burden on hardware resources on older more outdated machines
As with every other EntityFramework problem - just make another damn Migration. Sometimes with -ignorechanges.
Heres some stuff i really love about resharper that when added together it makes for a package i really couldnt do without and wouldnt eventually get over being without: * a better live template system, * powerful template macros, * far more options for code colorizing/syntax highlighting, * far better autocompletion (in my opinion), * code suggestions for stuff that isnt in your imports defs yet/automatic resolution and adding of imports on paste, * ctrl+click any type to navigate to either its source, the reference source, or a decompiled copy of the code using dotPeek, * XamlSourceNameResolver implementation is much better so it gives you code suggestions and context inheritance aware in weak-object reference property setters in xaml (also event name resolution and colorization and ctrl+click linking), * xaml editor reformatting improvements with alignment, * solution wide on the fly analysis, * advanced regex colorizing and hinting and extended info on stuff like regex operators and syntax, * datetimeformats/timespanformats along with examples of the output, * a handy regex validator tool, * code generation and refactoring in general is far more advanced. * AssemblyExplorer * //Todo tracking * browse the stack trace live * see the resulting compiled IL code that any of your code will be compiled into live right there in the UI (awesome feature) * Resharper God Mode Menu is awesome, a ton of awesome tools that give you more perspective on whats going on under the hood with the compiler and in R# code analytics 
This is a good point, dotCover is a nice tool. It used to be feasible to purchase it separately, but now its part of Resharper Ultimate. But, VS 2017 Enterprise has a cool live unit testing: https://youtu.be/TJu0hzuz9hE?t=29s . Not everyone can affort the Enterprise version, but for those who do, this seems nice.
Video linked by /u/tk853d: Title|Channel|Published|Duration|Likes|Total Views :----------:|:----------:|:----------:|:----------:|:----------:|:----------: [.NET Productivity Improvements](https://youtu.be/TJu0hzuz9hE?t=29s)|Microsoft Visual Studio|2016-11-18|0:12:07|127+ (98%)|10,292 &gt; In this brief overview, we present some of the new... --- [^Info](https://np.reddit.com/r/youtubot/wiki/index) ^| [^/u/tk853d ^can ^delete](https://np.reddit.com/message/compose/?to=_youtubot_&amp;subject=delete\%20comment&amp;message=dkhkfwi\%0A\%0AReason\%3A\%20\%2A\%2Aplease+help+us+improve\%2A\%2A) ^| ^v1.1.3b
Will give it a try. Thanks for sharing!
NO. Do Not Do This. !!
It looks like one of the parameter you are passing has the value "321" and that you are not quoting you non-numeric values in the sql string you build. As others have mentioned, you should use parameters
not even close :)
How much time are you willing to spend figuring out what strings break your stuff? Its probably less time to have a look at how parameters work and just use them.
I have done this. The changes should not have been made by hand and if there aren't too many, just remove them by hand.
I use Code Maid as well, but other than reorganizing by access level and remove extra blank lines I don't think there's much to it that can't be currently done by VS.
Code first is stupid for server applications. Put your Database in source control. I highly recommend SQL Server Data Tools if applicable. EDIT: Down vote me all you want, but don't come crying to me when you realize that you need more than one application hitting the database. 
&gt; THREAD name : Need help figuring out how to parse JSON data Use Newtonsoft for this http://www.newtonsoft.com/json/help/html/DeserializeObject.htm You can also autogenetate classes with this website http://json2csharp.com/ About why it doesnt post, its best you see if there is an exception and what it says. &gt; using (WebClient client = new WebClient()) Is useless since you dont use client
Start up and solution loan time is a tad slower but honestly how often do people open/close projects? Not very often in my experience. So that seems like a minor cost to get such enormous benefit. And even that, SSDs and 8GB (and higher) memory configs greatly mitigate the performance penalty. If you really are stuck at less than 8GB memory than yeah maybe it's not worth it to be installed but at the same time you're coding probably isn't serious enough for it to make a difference.
i7 4790 @3.6ghz, 16gb DDR3 1600mhz, Samsung SSD 850 EVO 500GB, Windows 10 Every other tool I use works great. Resharper causes slowdowns at random, also VS takes way more time to start. And it doesn't always work properly. Sometimes trivial things such as renaming or extract method fail. In any case, the main point is that if it still adds enough value to worth it now that you can get most of the main features with just VS 2017 (at least the ones I used the most)
thanks, i cant fix the code now but i am sure that your solution will work, you've been a great help
Thanks for sharing this list! They look like legit reasons for your use case and likely for others. For me, I can live without them. Not sure about refactoring being far more advanced compared to VS 2017. I do miss some of them like invert conditional/bool, extract class, etc. Looking forward to try to replace them with extensions. And even if I don't get to replace them, I can live without that if that means not having to deal with some of R# problems. As for analysis VS 2017 is pretty good as well, and there's some analyzers that can be added on top of it.
Tip: Don't call AverageRgb() all the time but store it in a variable :-)
not sure why im bothering 3 months later with irrelovent horseshit lol but &gt; DAE EDGELORD? LE MEME XDDDDDDDDDDDD Theyre references to a character developed by comedian and radio personality Jim Norton named Chip that is making fun of people who think theyre hilarious and edgy but just kill any conversation flow and embarrass themselves Chip's transformed into a national sensation/voice of the nation https://www.youtube.com/watch?v=HjkPvcUIxqc
Yes you could do add-migration and then comment out the generated code 
Code first is great for SQLite and "the file is a database" style desktop/mobile applications. But it was never really meant for servers. Once you start getting beyond junior level database techniques and need to manage indexes, files, views, stored procedures, etc. Hand jamming this stuff into migration scripts hidden in your C# code is going to be a maintenance nightmare. 
I've used Resharper for about 3 years up until last week when I disabled it because I was sick to death of it bringing VS to a halt. I do prefer using Resharper but I just can't live with how slow it makes VS. I don't think that it is a problem with my work station as it is highly specced. 
[Visual Studio 2017](https://www.visualstudio.com/de/vs/community) supports C#7. You either managed to find an ancient version of VS somewhere, or you're confusing Unity's C# support (which is quite a bit behind the times) for Visual Studio.
It is not the VS that comes with that version. You can use C#7 normally, however Unity supports ( except the new versions 2017.x ) only C# 4 with .Net 3.5. You can update to Unity 2017 and then you will be able to use C# 6 with .Net 4.6. ( Because it is an experimental feature, you need to activate it first. )
Unity uses C# 4. VS 2017 supports C# 7, but Unity doesn't by default. If you're using Unity 2017.1 you can enable the experimental scripting engine for C# 6 and .NET 4.6 support, but it's probably buggy and not intended for production use yet.
Id say its more the random freezes you can experience switching views that resharper brings (you wont get them/get fewer without RS). This happens regardless of machine. 
Strange. I just installed it a couple of months ago, here's the 'about': Visual Studio Community 2017. Version 15.2 (26430.6) Release I basically added a "using static (filename)" line to a file and it told me that I had Csharp 4 and that could only be used in Csharp 6 and above. EDIT: Ok, so basically it seems c#7 is in my Visual Studio but when I created the project in Unity it marked it as Csharp 4 or something and I shouldn't mess with that.
Oh I see thanks, perhaps I should ask in the Unity subreddit if it's wise to upgrade to unity 2017 (and activate support for C# 6).
You must be working on a project file configured for an older C# version. Check the project settings under Build -&gt; Advanced, or try to create a new project. But as mentioned, if you're working on Unity stuff you will indeed not be able to use the newest language version.
Removed: Rule 3, spam. First off, this is hardly "Made Easy". Easiest is just to not bother making an offline installer. It's also basically reiterating the existing instructions to do so. Secondly, it's not terribly directly related to C#. Not far enough off to get it removed _only_ due to rule 3. But this easily removed in combination with [my warning here](https://www.reddit.com/r/csharp/comments/6od9om/devops_on_azure_visual_studio_to_kubernetes/dkgkv0c/).
While technically true the docs for Task.Run say "Queues the specified work to run on the ThreadPool and returns a task or Task&lt;TResult&gt; handle for that work." In practice I have never seen an instance where Task.Run grabbed the same thread. Do you have an example where Task.Run could block the caller, or does this statement only apply to Tasks created by other means?
I use Fodys ToString and Equals :-)
What I really like about them is to be able to install them as a nuget package (instead of vs extension), so they even work outside of VS
https://www.mathsisfun.com/prime-factorization.html
Unless you are doing professional work with Unity, you are probably fine. It won't hurt to learn the new language features now, since this feature will sooner or later be safe to use in production.
At a guess, the best way to make this a thing is to find a way to add more .NET APIs: &gt; For example, many of the .NET APIs you would expect to be able to use are not implemented. The best way of doing this is probably to make it conform to a .NET Standard. Admittedly, this isn't a small undertaking, as it would probably require modifying DotNetAnywhere. Another way you could contribute is by creating more interesting, non-"hello world" sample apps. Find out what limitations the framework has. Finally, you could try to improve the developer experience. I haven't tried it myself, but how easy is it to build and publish a project written with this framework? Could that be improved? 
Now only if resharper would refactor my stupidity....
You should probably explain why this is a terrible idea, although I hope the OP would know. Making SQL globally visible means you are exposed to every hacker and script kiddy out there. Even if they can't find a weakness or zero-day bug to exploit, it could still result in denial-of-service (DoS) from thousands trying to break in. And if one user does stupidly use a weak password, or a zero-day vulnerability arises, your database is toast.
Resharper functions by essentially writing its own compiler. It used to have to parse your code and generate an AST to be able to do what it does. Since Roslyn you don't need to do that anymore, which is why all sorts of free alternatives to resharper have started popping up over the last couple years, but resharper still does it that way. You can get solution wide analysis for free if you use Roslyn.
I need it in an own software, primefactors arent the only thing I am searching for. 
&gt;Resharper functions by essentially writing its own compiler. It used to have to parse your code and generate an AST to be able to do what it does. Is that what Resharper's PSI Tree system is? I have limited knowledge of the system but the concepts definitely intrigue me and ive tried to write ReSharper extensions and dig in deeper to understanding custom language implementation extensions in ReSharper, but its a lot to grasp at once. 
Yeah it's pain in the ass when this happens. As someone suggested, make sure your models are correct (reflects with the new columns), remove your migrations folder and then create a new migration using "Add-Migration". Do you have any errors in the console? 
You can actually tell your Unity project to utilize C# 5, 6 or 7 by using this neato stuff: https://bitbucket.org/alexzzzz/unity-c-5.0-and-6.0-integration/src
Why are you asking in a programming subreddit?
Another option is NCrunch. It continuously runs unit tests, and depending on tests results it highlights with green and red marks the correspondent productive code lines. The nice result using it is that when tests are red, one starts thinking of "code failing" rather than "tests failing": actually, a red test does not fail; on the contrary, it reveals that some part of the productive code is wrong. NCrunch helps highlighting that part of code. I strongly suggest you to give it a try, it's just amazing. A nice demo can be seen in the home page http://www.ncrunch.net/
Yeah I managed to solve deleting the migrations table, migration classes and adding a new migration ignoring changes as the other user suggested here. Thanks guys! 
I suppose ignoring changes works. I'll always try my dammed hardest to manually fix the changes before resorting to ignore as I feel your just bypassing its natural design. But that's just me and I'm still learning. Glad it's working. 
Removed: Rule 4. Please post the code you have and how it "does not work". Your basic premise is valid, checking if the `number % prime = 0`. Perhaps you're not checking for cases where the same prime factor is used multiple times (e.g., 12 = 2x2x3)? Or it could just be a small issue; maybe you aren't using the new divided number after finding a factor? Or maybe it's just a simple oversight. Regardless, impossible to really help without seeing your attempt.
You don't need the website to convert json to classes if you have vs2015 or vs2017. You can just Edit-&gt;Paste Special-&gt;Paste JSON as Classes
Mate. Learn how to use an internal nuget package and just push the EF database assembly to it from your build server. That's a solution that is not only in keeping with established practices in .NET, but it saves a lot of work to access the database from different applications. And of course: You do not even need to use EF to access the database. 
321 isn't a line number - it's probably part of a phone number that has spaces in it that's being passed as a parameter to the query. None of your variables have single quotes around them in the query that is output so SQL barfs. As others have already said this is a terrible way to build a sql query; use parameters - however if you really want to just fix this so you can see it working then you need to add single quotes within your query string around all the variables in your update statement, e.g. var query = $@"UPDATE TestDB.dbo.[crm-data] SET Title='" + Title + "', Forename='" + Forename + "', Surname='" + Surname + '", Telephone='" + Telephone + "', Email='" + Email + "', Mobile='" + Mobile + "' WHERE Caseid='" + Caseid + "'"; and so on. Or even better, as you are using the $ string interpolation operator you can just put your parameters in curly braces and stop using the + string concatenator, e.g. var query = $@"UPDATE TestDB.dbo.[crm-data] SET Title='{Title}', Forename='{Forename}', Surname='{Surname}', Telephone='{Telephone}', Email='{Email}', Mobile='{Mobile}' WHERE Caseid='{Caseid}'"; But - really - replace this as soon as possible if not before!
I tried what you suggested without ignoring changes but the new migration class generated was trying to add the new column again, which caused the duplicated column error. I think manually messing the database is already bypassing the natural design. That's why so many ugly interventions were necessary. 
Calling it "established practices in .NET" is an exaggeration. It is even really all that common among people who use EF, and it certainly isn't used by developers who prefer other ORMs such as Dapper. 
I didn't call EF an established practice. I called the idea of generating nuget packages and pushing it to an internal repo for re-use between projects an established practice.
And here I am living a happy life using code first but not letting EF generate the database
I would immediately take 30% pay cut if they let me use this and no JS
Can you elaborate? Thank you 
I just create tables the way I find optimal for the database and then write classes the code first way to match them. No generation in either direction. This removes the migrations and mapping drama. I don't have properties I don't need in the model simply to be able to declare a foreign key. And if it turns out that I was wrong I will simply put the db creation script n an initial migration and pretend I was doing migrations from the start
Good idea! I'm going down the Sample Apps route :-)
Sounds like an interesting approach but everything is so new to me so I don't fully understand. Do you still have a dbcontext to access the data? That was my idea when I tried adding the new property to the model manually to mimic the new database schema but I was getting the erro saying there was a mismatch between the context and the database. How does the framework /code keep track of that? In my case the new column was a date column so I created a new public date time property, but when trying to access the data that exception was being thrown. 
Yes, to be able to do what it does it needs to actually understand your code beyond the text. The problem for resharper is that with 2015 Microsoft rewrote the compiler do everyone can access all the intermediate stages of compilation that VS is already generating as part of normal operations. This means that the bar for being able to compete with resharper has lowered drastically. Essentially if you could write a plugin for resharper you can now compete with it.
I'm a little out of my element here because i've never used powershell, however, those dependencies all look like .Net Core dependencies. Are you using the .Net core version of Powershell? If not, then it sounds like you just don't have the right .Net framework installed. Make sure .Net 4.5 is installed.
The watch window indicates different types for the `cf` and `cf2` variables, unlike the source. Are you perhaps debugging an outdated build? Generally, inspecting variables can get funky when debugging Release builds. Redundant and intermediate variables may be completely eliminated, or invalid before the method is done.
ah, interesting. good catch! I worked around this already, but next time I encounter these shenanigans, I'll check this. It's unity, so every time you press play, it rebuilds...but maybe visual studio was lagging behind somehow?
Removing duplicate variable declarations and unused variables is not to "fit my preference". Adding in missing semicolons is not to "fit my preference". Removing 4-5 lines of white-space is not to "fit my preference". I could go on....
You can run SQL inside your migration. You can also edit the migration and the model will match your database afterwards. So just generate the migration with add-migration &lt;migration-name&gt; and delete the code where it's creating the duplicate column.
Are people regularly building compilers in C#?
:( now i'm getting something even stranger: Vector3 newPosition = position+ velocity * dt + 0.5f * acceleration * Misc.sq (dt); the sum of the stuff to the right is not 0 at all, but "newPosition" is 0 right after this line. I have verified via parallel debug that no other threads are running that could change this (especially since it's a local variable.) Tried rebuilding, didn't help. Going to try to reimport everything... that being said..it seems to be just a problem with visual studio - as printing the value out shows it fine. 
Man, i'm speechless. C# -&gt; Love.
What are you using to access the SQL server? A desktop app, a website? If your using an Azure website, it already has access. If you're using a desktop app or something similar, then you would be better off setting up a web service to access the database. Then you only expose the relevant data and have a little more security between the internet and the database. 
I love when it doesn't shut up until I declare every variable as a var. Before I uninstalled it it drove me up a tree... Why the hell is that on by default? Why does it want everything to be a var
This. I cringe every time I come across an EF application that is supposed to scale and is expected to be more than a simple CRUD app. 
Thanks for the tip, will do!
&gt; Roslyna Been trying it and is pretty nice. Now trying to get per-project settings. But the code analysis setting "rule set" (Analyze/Configure code analysis/For Solution/Code analysis settings) is lost each time I relaunch VS from Unity, as a new csproj file is generated, overwriting it. Any clues on how to get past that?
Are you building and debugging in release? Are you debugging a project you wrote is the same solution, or off of a pdb or decompiled pdb? Are you using standard? Are you compiling to a different cpu architecture than what your running on? Are you using the explicit operator for the conversion?
Codemaid I swear by ;-; I could probably live without her but I don't want to.
It's not hard to change. When doing refractors I've found Var lessens the change set size by quote a bit. Needless lines aren't changing because you have declare the type explicitly. I didn't like it at first but I've had a 180 on it.
Ah, glad to see Sprache on this list!
&gt; It's not hard to change. When doing refractors I've found Var lessens the change set size by quote a bit. Needless lines aren't changing because you have declare the type explicitly. I didn't like it at first but I've had a 180 on it. Yeah, and then goodbye implicit casts
Not Resharper's fault, I agree. My point is that it makes it too easy to generate sometimes needles code that yeah... has to be maintained :)
you mean to say live without her, right?
Ah, right maid implies gender. (will edit) 
This is a difficult question to answer. I have built a few for Domain Specific Languages in C# but not for general purpose languages. I guess someone do also that
We have also wrote an article just on Sprache: https://tomassetti.me/create-simple-parser-c-sprache/
all my settings are default. Unity-&gt;visual studio. I haven't touched anything. This isn't usually a problem - but it's definitely a visual studio only issue. I even see variables that in debug show as 0, get passed into functions, where their value returns to the correct one. So all standard, i guesss - same cpu. I have tried casting using (className)obj and "obj as className" same results. I am also getting stuff like b = 5; a = b; debugger shows a = 0; Maybe a computer restart..maybe a visual studio restart. 
The lastest VS comes with C# 7.1 Its only unity that sucks balls when it comes C# support.
Yes everything is the same except you don't use migrations and the db creation features of EF
Thank you for your open source contribution! Here is a list of constructive feedback meant for improve: - Do not commit the `.vs` folder to source control. These are user-specific files and will be automatically generated by Visual Studio if they're missing. - Do not commit the restored NuGet packages to source control. You're just adding binary bloat to your repository. These packages are not gonna disappear from the NuGet gallery, as you can't delete packages (only unlist). Visual Studio will automatically restore them upon compilation if they are missing. - Do not add your own packages to source control either. Those are build artifacts and can be re-created at any time. - Do not add the `obj/` and `bin/` folders to source control. These are build artifacts and can be created at any time. In fact, when rebuilding the solution these files will **always** be modified, resulting in a change in source control - even when nothing is changed. - I want to point out a general purpose `.gitignore` file maintained by the Github team: https://github.com/github/gitignore/blob/master/VisualStudio.gitignore - In a library, please use `ConfigureAwait(false)` when awaiting calls, because it's unlikely you require the synchronization context and the thread-pool can be better utilized. - Don't always create and dispose the `HttpClient` - even tho it implements `IDisposable`. It should be re-used across instances. Take a look at https://stackoverflow.com/a/15708633 and google for more resources regarding "dispose HttpClient". - Don't throw `Exception`s. Instead provide your own library specific exception type. - If a `null` argument is passed, throw a `ArgumentNullException` - not an `Exception`. This exception is meant specifically for `null` arguments. - If an argument in an invalid state is passed, throw a `ArgumentException` - not an `Exception`. This exception is meant specifically for arguments that do not match pre-conditions. - Make use of `internal` types. I've noticed almost all of your types are `public`, even internal extension types like `DictionaryExt`. Don't leak types unnecessarily. Have types `public` that are relevant to the API of your library. - It's very uncommon to have the back-tick character in file names. Even when you have a generic type like `Result&lt;T&gt;`, just name it `Result.cs`. That's the common convention. - AuthHeaderBuilder, #62: Is the order of the keys really relevant? I don't know about the Twitter API. If it's not relevant, remove the `OrderBy`, it's just unnecessary. - TweetyAuthContext, #16: Don't mention that the property is read-only in the documentation. We can see that thanks to the compiler already. Instead provide more valuable information. It says it checks if the data is valid or not - but what constitutes valid data? When is the data valid, and when not? - Result, #32-36: Make use of getter-only auto-properties. The private setter is not needed. - SubscriptionsManaer, #38: Don't throw `ArgumentNullException` when the argument is not `null` - that exception is specifically reserved for `null` arguments. When I'd be debugging an issue where I pass an empty string, I'd dismiss this argument as the culprit because it's not `null`, but the exception clearly says it's having a `null` argument. - Result type: Consider adding another `Result` class without a type parameter, which just offers a static generic `Create` method. That way you can make use of type inference and can write `Result.Create(subs)` instead of `new Result&lt;List&lt;WebhookRegistration&gt;&gt;(subs)`. Makes of more readable code. The implementation is simply `public static Create&lt;T&gt;(T obj) =&gt; new Result&lt;T&gt;(obj);` - Do you really need all those namespaces? Personally I consider it always really annoying when I have to add so many namespaces to use a library. For example I think the `Result&lt;T&gt;` type should be in the root namespace, and not in the `Models` namespace. I need this type for every single operation in your API - so it should be available immediately. - Document **all** your public members and types. This documentation is what the user of the library will see, this is what IntelliSense will provide. Personally I want good documentation (like the one .NET provides) right when I code - and not having to look up in the source what the meaning of something is (if I even can see it directly from the source). - Is there a reason why you use a **preview** version of `System.ValueTuple`? This is a dependency your library will bring along. - Add unit tests! It will help you to better design your library and become a better dev in general!
just realised that the program outputs "Need help figuring out how to parse JSON data", it is a thread name in r/learncsharp, and so are the rest, it reads the threads, writes them on the console, i posted the console output i think maybe someone got confused, ps i am not native american so my english is not so good 
**Here's a sneak peek of /r/learncsharp using the [top posts](https://np.reddit.com/r/learncsharp/top/?sort=top&amp;t=year) of the year!** \#1: [Developer of 20 years advice to new developers](https://np.reddit.com/r/learncsharp/comments/55t7h4/developer_of_20_years_advice_to_new_developers/) \#2: [C# Tutorial for Beginners](https://np.reddit.com/r/learncsharp/comments/69to2e/c_tutorial_for_beginners/) \#3: [Learning C# - List of resources and videos](https://np.reddit.com/r/learncsharp/comments/5to7bq/learning_c_list_of_resources_and_videos/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
Never knew this - thanks!
Set the **SelectionFont** of the RichTextBox for every formatted part of the string. After that, **AppendText** to the RichTextBox
Mmmm no I mean, if you already know the language well you don't need usage suggestions and the other suggestions that using ReSharper is useful for.
Looking at your post history I leave this here: https://www.reddit.com/wiki/selfpromotion
ReSharper does so much more than suggestions. There is extended static checking, code generation (both complete generations like equality, constructors as well as introducing a local variable just by typing it as a constructor parameter), better autocomplete, better method/class/interface extraction and more stuff. But yeah, I guess if you barely use R# you can easily make it useless by knowing the language.
Ok, so this is what I came up with: static void Main(string[] args) { string name = GetString("Please enter your name"); string town = GetString("Please enter your town"); Console.WriteLine($"Hello {name} from {town}"); } static string GetString(string prompt) { Console.WriteLine(prompt); string sInput = Console.ReadLine(); while (sInput == "") { Console.WriteLine("You must not enter an empty string - try again"); sInput = Console.ReadLine(); } return sInput; } The important thing to note here is that `GetString()` is re-usable - you can use it over and over again, for many different jobs. It doesn't know, or care, about what it's being used for, what method is calling it, or what happens with its result. Hope that helps!
+1 for unit tests
Hey! You already had your opportunity to be a mod! That said, looking at OP's post history I leave this here: https://www.reddit.com/wiki/selfpromotion EDIT: But in all seriousness, /u/justintimecoder, you are participating a bit outside of your own submissions. Try to keep that up, and ideally, increase your participation even more.
&gt; Hey! You already had your opportunity to be a mod! And I was the greatest damn mod you've ever seen for that day!
The stuff of legend.
Think about the state of all elements in that array. Perhaps you are thinking about how one is valid but are all of them?
The center of your dreams.
Sorry, I wasn't trying to make a correction or anything like that. I do mean Tasks in general. Task.Run should run in parallel, I was just talking about Tasks in general because just using async/await/Task isn't enough to guarantee parallel. I should have been more specific.
Thank you so much for your time . Every new information helps 
Thanks for the clarification. As much as I love the possibilities that async/await/Task introduce, their affect on the threading model tends to do my head in sometimes.
Guess they forgot to switch accounts: https://www.reddit.com/user/aderoz
I just see it as a sidegrade to existing VS functionality. There's no feature in R#, even the static checking, that makes me really want to use it. And it's heavy. And this is of course my opinion, non the facts.
It does get more cluttered with age too, though. The lack of keywords to introduce methods, fields and variables is starting to annoy me a bit when mixed with newer features, since it makes it very hard to locale where a method starts at a glance. Especially local methods with tuples of generics return values. It's so much easier in languages (most, really) where you have 'func' or 'def' or whatever. Edit: Apparently that's not a valid opinion :p
I don't think this is relevant. In one loop cycle, I'm only looking at 1 element of the array. I'm casting the the same way to 2 variables defined as the same time 1 line apart. The debugger shows one to be null and the other to be set. I found out the it's only a Visual Studio bug - as the actual code logic is fine and does what it should. 
I agree to an extent, but compared to Java the language really has aged well. I really like how Roslyn allows things like ValueTuples to offer us improved tooling at design-time. I think given that the emphasis has been on reducing bloat in general that is huge potential for further improvements in that direction.
You know what's still better than C# though? F#
I've only dabbled with that one, syntax reminds me a bit of TypeScript. I must admit a lot of the newer features in the language come from there and React.js has brought functional principle to the mainstream.
Auto Property initializers - yesssss.
The author, Dom Syme, based F# off of OCaml. F# is a beautiful language :).
Maybe you're using more features of it than I did. To me there hasn't been a big difference. I do miss the ability to invert ifs and extract class. Still haven't found how to replace those.
Thank you very mush for your notes, I really appreciate it, I did few commits to address the mentioned issues, and finally managed to add the test project.. And btw, yes, the key-value pairs that make the OAuth Signature should be sorted alphabetically! otherwise, the signature will be invalid :).
I'm going to [keep my eye on them.](http://i.imgur.com/5ZK9fmP.jpg) 
Generally the most common pattern is to have something like this: ```ViewModel(ISomeDataServie someDataService)``` Then use that service in the ViewModel to handle the logic for the data calls. Within that service you would then use your repository as required. ```SomeDataService(IRepository repository)``` The idea being from your VM you use the service but don't care how it works, you don't care if it writes to file, database or where ever, but your service knows that. Some people don't necessarily use a service layer in between, but it keeps the actual database stuff out of your ViewModel, which shouldn't care. There are other ways to do this, and depending on the specifics you require you may decide to do it differently, but this is just probably the most common pattern you'll see for this IMO 
I could swear I've seen invert if in Roslynator. edit: to expand now that I'm not on mobile, I didn't get the option when I tried to make do w/o R#, but I (think) I saw the refactoring in Roslynator's settings.
&gt; compared to Java the language really has aged well. I think that has more to do with how Microsoft is handling things versus how Oracle is handling things. It takes forever for new features to get into Java, and the features that do make it in aren't particularly big. Compared to the speed and frequency with which C# introduces new changes, Java may as well be a comatose tortoise.
[Here](https://www.reddit.com/r/csharp/comments/6o0ooe/trying_to_replace_resharper_any_extensions_for/) is my post about my main pain points when trying to replace R#. Other tools don't work with webforms properly and the normal autocomplete sucks as well.
Cool! I wasn't any help this time but next time I look forward to serve you better. Well wishes!
I don't know if I would say it's "getting better with age" so much as it's "getting better with updates". Excellent language that just keeps getting better.
I think you have articulated the point far better than I did :). I think we're also lucky that the performance improvements in the runtime and other aspects are such that C# itself gets to remain front and center in the new world. I think the JVM is great but most of the cool kids are off to use Scala or Netty. (This is a very generalized statement, I am of course ignoring the fact that Scala is popular because its a functional language and that alot of the gains in throughput for asp.net core is due to the use of Kestrel / libuv).
F# is nothing like TypeScript. TS is more like C# if anything.
So what I am think you maybe running into is compiler optimizations then. If you write; var x = 1000; Then you never use the variable x, the compiler will ignore that line. The C# compiler will automatically remove statements that do not effect the execution. This happens if you either have optimizations on within the project setup, or you are compiling a release build. By standard I meant core. This is a different version of .Net Framework that is cross platform.
Yes if you are doing unit testing use repositories in the VM (anything that requires IO really). It might be possible to do unit tests having all this in the VM but it would be less work overall and possible cleaner code by separating them now. Its easier to mock the repository layer than the database layer.
hmm, so for development/debugging I should turn off compiler optimization. 
hah :) Thanks for trying
It wouldn't compile without missing simicolons. I have added extra ones because crystal reports sucks ass. Yes I know it shouldn't effect it once compiled but those 3 semicolons for some reason made the damn thing work. This is especially true with using some finicky components and services that you don't have the source to. Sometimes you have to do ass backwards stuff to get it to run. Case in point anything that has to do with court records, insurance statutes, etc... They vary based on the system and there is no way to get a gov agency to change things because they don't match standards. Look dude. When there are 12 people working in the same project(s) with 30+ million lines don't just go reformating stuff. When things goes wrong (which it will) trying to narrow it down becomes a pain in the ass. If it's your code fine, but don't go messing with other people stuff because you prefer it in a different way.
Awesome, thank you! I'll try this when I get home from work. 
There's a "swap statements in if-else" refactoring in Roslynator. But not an "invert if" as in resharper: https://resharper-support.jetbrains.com/hc/en-us/community/posts/206676925-Invert-if-statement-to-reduce-nesting (sorry didn't found the link to its r# documentation on a quick search)
Good post. Btw I've been trying Roslynator and is nice, but so far can't find a solution for https://www.reddit.com/r/csharp/comments/6oeqds/resharper_vs_vanilla_visual_studio_2017/dki8d4d/
I've been trying Roslynator and is pretty nice. Now trying to get per-project settings. But the code analysis setting "rule set" (Analyze/Configure code analysis/For Solution/Code analysis settings) is lost each time I relaunch VS from Unity, as a new csproj file is generated, overwriting it. Any clues on how to get past that?
Was half expecting Director Fury there.
Nice!
This post isn't my own. Just something I thought was interesting that I thought others would like too.
&gt; don't come crying to me lol &gt;when you realize that you need more than one application hitting the database. I do maintenance on a set of sites that use EF and share several databases using nuget packages that are specific to a domain. I had never used EF before and had doubts about it, but in the year or so that I've been doing maintenance on them, I haven't seen any real issues. If the site was getting hundreds of thousands of requests per day, it might be a different story; Either hand build everything or use some of the time saved by using EF to measure performance and bypass EF where there are issues.
&gt; Either hand build everything or use some of the time saved by using EF to measure performance and bypass EF where there are issues. You missed the point entirely. I wasn't talking about using EF in general, I was talking about using EF to maintain the database schema. Selectively bypassing EF isn't really an option in that case, you have to have everything in EF's migration scripts. 
I have an open source xmpp library that could use some work. I am currently working at porting it to .net core. Message me for more info.
The opposition to pattern matching is unfounded. Yes, you can use it to switch based on inheritors, but the original use case for pattern matching was for algebraic data types, such as discriminated union types in F#.
No matter what you use to manage db migrations, you need to have everything in it and if people bypass it, things might get messed up. If its just about trying to get the annotations right on entities so that you get the right stuff in the database, then yes, I've had some pain with that, but I assumed it was at least in part because I hadn't used EF before. 
You could read the Excel sheet with something like EPPlus, or just save the excel file/data as a CSV or tab-delimited text file that you can then read in manually. With regards to associating the data together, skip the array and make your own class (perhaps `User`) which contains both bits of information. You can then combine them internally or implement the `IEquatable&lt;User&gt;` interface and override the `Equals` method to have this object act like a key. Other than that, not sure what more to suggest. Your question is pretty vague.
&gt; Fodys the one that uses reflection?
Why are you implementing `IXmlSerializable` in the first place? Just let the [`XmlSerializer`](https://msdn.microsoft.com/en-us/library/system.xml.serialization.xmlserializer%28v=vs.110%29.aspx) do all the work for you. If you want to make sure it outputs the various fields as attributes, mark them with the `[XmlAttribute]` attribute.
It isn't using Reflection, it reweaves while compiling, which means that it rewrites the IL code for the class. So it generates a "real" equals/toString method ;-)
&gt; No matter what you use to manage db migrations, you need to have everything in it and if people bypass it, things might get messed up. That's why I recommend SQL Server Data Tools. It puts the whole schema in source control, not just the tables. We even have it wired up for continuous deployment so that's the only way to make changes to our development database. &gt; If its just about trying to get the annotations right on entities so that you get the right stuff in the database, Yea, that's going to be a pain no matter what ORM you use. Or even no ORM, where you're matching IDataReader fields.
I Made a CSV File delimited by commas and instanced a list of objects with the properties I needed. It worked out well, thanks.
You would call [`XmlReader.Read`](https://msdn.microsoft.com/en-us/library/system.xml.xmlreader.read.aspx) in a loop, check if the current node is a `&lt;Family&gt;` element, repeat, check for `&lt;person&gt;` elements and generate objects for them, etc. It typically involves a lot of boilerplate code and is rather annoying to get right. Just using an `XmlSerializer` with attributes is typically easier, but a lot less flexible. If you *need* to implement `IXmlSerializable`, a convenient shortcut is creating an [`XNode`](https://msdn.microsoft.com/en-us/library/system.xml.linq.xnode.readfrom.aspx) from the `XmlReader` in the `ReadXml` method and parsing the XML that way.
I completely take your point. But if you look at most of the examples that are out there for c# the do not show this. Plus I wasn't against it just simply as someone whose only experience with things such as discriminated union types comes from TypeScript's typing system I would say whilst I can appreciate the power of the feature I could see it being misused by those not used to working in functional languages. I wouldn't have included it in the article if I thought it wasn't without merit. Just my personal opinion. If you have some examples of how it could / should be used I'd genuinely be keen for you to share / post about it :).
To add to this, the attributes let you specify the names so that you can have properly cased property names in code.
 CSVHelper : List&lt;string[]&gt; The `CSVHelper` class inherits `List&lt;string[]&gt;` and stores the values within itself.
can you... share a link, maybe? :"&gt;
thanks for the input, I'll consider this way
makes sense, do you mind giving an example?
Sure! Fody itself (also includes information on how it works and a list of adding like ToString): https://github.com/Fody/Fody The ToString: https://github.com/Fody/ToString
Sweet! Thx :)
Hey breenan I sent you a PM on reddit aswell as an email can you check it please? thanks its your friend from Trinidad.
I would start by reading in the Excel sheet using the OleDbConnection object and the ACE db engine. Then use linq &amp; xml to create an XDocument from the Excel sheet.
You would typically implement IXmlSerializable if the Xml that your class serializes does not easily map to the objects and values within the type. For example, the System.Data.DataSet type stores its rows of data in a way that direct serialization of its internal structures would lead to unnecessary complexity in the XML, so it implements this interface to override the behavior of serialization.
`CallerMemberName` looks pretty handy.
Well, if it's possible that something is intentionally writing to the variable the explanations are endless, not much point in guessing. Should be easy enough to find and inspect all places that reference the variable. Hash codes shouldn't randomly change, though. Generally, it *is* possible to write memory-unsafe code in C#, although it is hard to do it by accident.
As tweq said, C# is fairly safe in that you have to _try_ and do something unsafe (usually via the `unsafe` keyword) to even start such tomfoolery. If you're trying to debug a specific variable that's doing that, try wrapping it (put it into a backing field and add a property wrapper) and debug all calls to the `set` method to hopefully find the culprit setting bogus data. Also, depending on how you're checking the data, say if you're using the debugger and breakpoints, maybe it's being hit on a different instance from a different thread. So you think you're looking at the same instance, but really it's a completely different thread/part of the program that's hitting the breakpoint.
The default behavior of object.GetHashCode() is to return in implementation-defined value that is only guaranteed to not change for a given object in a given execution. In practice it's value is non-deterministic and (probably) based on memory addresses. This, or something like this, is the most likely cause.
Is the variable 'public static'?
Why wouldn't you use enums?
"Find all references" (or Ctrl K+R) shows all usages, so I usually resort to a global search for "variable_name =" to find assignments. This breaks if the same variable name is used in other parts of the code base. Anyone know if there is a better way to find assignments only?
Always? No. If you have A&lt;T :IB &gt;, but IB is something I can't or don't want to change, then there are times A should use typeof(T). As to if it's a good idea to rely on it in you're case, I'd have to see more specifically what you are doing, but my guess is it's probably not a good idea. If you mean something like: if( myobj.GetType() == typeof(Comma)) { ... } then generally you probably want to rely on dispatch for this sort of thing. Can you post an example of how you are using it? 
I will once I'm not on mobile. It's more like Token nextToken = Tokens.next(); if( nextToken.getType() == typeof( Comma ) ) { ... } else { //Handle invalid input } This is because the non-terminal the parser is building requires that a comma be the next token. Now, this is probably all because of how I setup the rules to build non-terminals. The parser uses reflection to enumerate all of the types that are NT. Each one has a static, internal property that describes how to build it. That might be "one comma followed by zero or more whitespace characters" The nice part about this is that I don't have to modify the actual parser when the grammar changes. I just create a new class for the construct and decide how to build it. The down side of that is that there's no enum to use since I really wanted to be able to add constructs without modifying *anything* but the new class. Was that worth it? I'm not sure, but that's how we ended up where we are.
Some possibilities: A typo of x += something rather than the intended X== something (though it's not legal in an if statement) Doing math on the int somewhere when you intended to do math on another var. You may have been distracted and typed the wrong var name. Some sort of strange race condition if you are using multi-threaded code. ::shrug:: just spitballing, none of these seem likely, but bugs don't have to be likely... 
If you’re working on a compiler or interpreter then a good pattern to use is the [Visitor Pattern](https://www.codeproject.com/Articles/588882/TheplusVisitorplusPatternplusExplained). It’s a bit difficult to understand at first, but it could be a good fit for your situation. In the example linked above the `Accept` method is part of a common base class, but you could just as easily put it in an interface (perhaps `IVisitable`) that each of your classes implements.
&gt; try wrapping it ~~FYI you can actually set a breakpoint to trigger [when a variable changes value](https://msdn.microsoft.com/en-us/library/aa295838(v=vs.60\).aspx#_core_setting_a_breakpoint_when_a_variable_changes_value) which is even easier than wrapping it~~ Oops, it doesn't work on fields :(
CodeMap in Visual Sudo Enterprise or Resharper's Semantic Search and Replace.
That's a poor design decision, but only because you're not using C# to its full potential. You should do one of these instead: if(nextToken is Comma) { ... } - var comma = nextToken as Comma; if(comma != null) { useComma(comma); } Or in C# 7 if(token is Comma comma) { useComma(comma); } That said, as /u/adamkemp mentioned the Visitor pattern may be a good one to use as well.
Well that's probably not the way I would choose to go about writing a parser, but I guess that's really not fundamentally worse than any alternative ad-hoc parser solution. If the project gets big enough I imagine you'll want to switch parsers once the language is more stable anyway, so I guess there's no real reason you need to rethink this. 
That's a good possibility - not a bug, but not understanding what the lifetime of hash values are (usually seen by someone trying to persist them as a key value). The other idea I had is the program is multithreaded and the int wasn't protected from other threads.
&gt; string[] values = Regex.Split(line, separator); This might be a problem - if you're expecting to use a comma as a separator, but then have a valid value in there that uses one such as: "Wrench, 10mm" this will split on the comma inside the quoted string. 
I actually blew the dust off of my old copy of the gang of four book when I started this. I got really hung up on not being able to implement something like a 'match' or 'valid' for this without creating an instance because interfaces can't have static methods. It probably isn't a big problem because I could have created an instance, attempted the match and thrown it away if it failed and that might have been cleaner. This is somewhat academic since I'm not sure that I'll rewrite this module anyway, but I'm trying to put some real effort into going back and thinking how I could have improved the design. Really appreciate your taking the time to respond.
Thanks! I'm new to C#, coming from other languages so didn't know that syntax.
Likely, yes. I'd probably end up with ANTLR or similar should this become more than what is essentially a research project.
[This](https://blog.jayway.com/2014/09/03/creating-self-signed-certificates-with-makecert-exe-for-development/) is a pretty good overview of creating a self-signed cert for local development if you don't have the full IIS installed locally. You would want to create the ServerSSL for a fake domain name (not localhost) and then edit your windows Hosts file to point your "domain" to 127.0.0.1 - that should allow you to put domain.com in your browser and view your site running locally.
Does that work for fields too; that is, can you set a breakpoint on the _field itself_? If not, isn't it just at the time the line of code that the breakpoint is set is executed and not during the actual assignment?
[`Object.getHashCode()`](https://msdn.microsoft.com/en-us/library/system.object.gethashcode(v=vs.110\).aspx) If an override of `getHashCode` was implemented by the developer in OPs post, they may have fed a field from the class into it that changes. ie: class Point { constructor(x, y) { this.x = x; this.y = y; } set X(value) { this.x = value; } override getHashCode() { return this.x + this.y; } } If you change X and ask for the hash again it will be different.
That’s a good point. Another reason not to use `foo.GetType() == typeof(Foo)` is that it would fail if `foo` is an instance of a subclass of `Foo`. `foo is Foo` would properly handle that case. 
Shoot, I misremembered [the second tip here](https://blogs.msdn.microsoft.com/visualstudio/2017/06/26/7-lesser-known-hacks-for-debugging-in-visual-studio/). I just tried in VS and neither the tip nor anything else I tried worked on fields. If OP is really in a bind, maybe changing it to a property (temporarily) will allow him to pinpoint the issue quickly.
Pattern matching is not very complete in C#, and algebraic data types in F# are pattern matched on enums that function as proxies for their types, IIRC.
Not sure the best way to give an example, are you familiar with the repository pattern and making that work with the entity framework? 
Maybe Datetime.Now is being cast by accident and it pulls the Datetime.Now.Ticks into it?
Might be someone thinking x^y is x to the power of y. (Works in other languages). This should produce some strange bit manipulations...
+1 There's a good chance a sane looking operator does something different than the developer intended. Anything doing bitwise operations on your integer will look non-deterministic because it's not doing normal maths.
I understand what you mean now thanks, I was thinking of implementing the repository pattern along with the viewmodel.
I started by reading this book: https://www.amazon.com/gp/aw/d/047064320X/ref=mp_s_a_1_1?ie=UTF8&amp;qid=1500714581&amp;sr=8-1&amp;pi=AC_SX236_SY340_FMwebp_QL65&amp;keywords=Test+driven+development+with+c%23&amp;dpPl=1&amp;dpID=51XYxuW-W1L&amp;ref=plSrch Which (for me) was a great way to learn about it. After reading it, I watched some pluralsight courses about it (but there should be some cheap ones on udemy as well if you don't have access to pluralsight). After that, I just started implementing the things I learned while I work. I wouldn't worry too much about the test driven design aspect at first (writing the tests before you write the code) since that's quite tricky to get the hang of and should only be applied if you know what the code will look like to a great extent. Having said that, that's what worked for me and it might not work for you. I do recommend the book though, since it was a great and easy read. 
Also, if you do want to practice the test driven design aspect of unit testing, code katas are a great way to get started since you know exactly what the code should do before hand. 
If you follow a process of make it work against tests, regardless of how shitty it is, you can fix these in a profiling round after. It will be slow though, you should not rely on the type for any decision based logic. Just get it working first, I mean don't not fix things that are obviously wrong, but don't start optimising stuff that isn't immediately causing your tests problems. IF you're doing a parser, it's worth having tests specifically to measure speed. Once you're up and running you'll want to see how changes affect performance.
Some of the old rules are moot now. If you think that 5-10 years ago you'd be shot for building static classes with static methods, these days there's a whole methodology behind doing just that. 
Sorry for the late reply, I don't check reddit often. You can only really see the original source for the package if the package is open source, otherwise you would have to decompile it to see how it works. 
Is it because today's increased processing power has made FP overhead less of an issue?
I found this book to be incredibly helpful: https://www.amazon.com/Art-Unit-Testing-examples/dp/1617290890/ref=sr_1_1?ie=UTF8&amp;qid=1500721325&amp;sr=8-1 It's not so much about Test Driven Development, but focuses more about how to organize and write unit tests and fakes. Has a lot of discussions pro and con regarding things you may run into. It also compares unit testing frameworks. Keep in mind that the book is over three years old now, so those comparisons may or may not hold up as well anymore. Doesn't detract from the rest of the book though.
[removed]
I would second this recommendation. It does not stay at a high level. Very pragmatic in its approach.
How many of these do you have? Something more scalable and maintainable (and likely higher performing) when You have many of these cases would be to make a Dictionary&lt;type, func&lt;&gt;&gt; . 
I've seen this happen most frequently from a BinaryReader.ReadInt32 called on the wrong portion of a stream, usually caused by a non-deterministic bug in the parsing (or serialization) code for a binary format.
Static methods are actually the natural form of a method, they're less processor intensive because you don't have to create a class instance. OP is more than likely referring to how OO programming was in fashion at one point
Make sure Multiline is set on the Textbox then var input = textBox1.Lines;
I see another issue: in your code, you declare an integer array, but the Text property is of string type. Depending on how the data needs to be entered by the user, another change may be required. If the user can enter multiple lines in the textbox, set its Multiline property to true. If no multiline input is permitted, you should instead declare a List&lt;string&gt; and call the Add() method passing the textbox content in parameter when appending to the list. You can then sort with a lambda, and call ToArray() to have a standard array.
The trip service kata is one of the best and most well known ways to play with unit testing: https://github.com/sandromancuso/trip-service-kata It is about making an already existing code unit testable and shows many problems which are occurring with bad / legacy code.
Using reflection to generate parser rules that are type-safe is a great idea. I recently open-sourced some similar work, with two main differences: - I still have a token enumeration, because tokenization is a global concept (if you add a new token, it might change the way other tokens were parsed or "steal" a few matches from other tokens, so you might as well look at all tokens) and I like being able to perform the complete tokenization before getting started on the grammar. This also lets me specify the tokenization rules for each token, using attributes, [for example](https://github.com/Lokad/cntksharp/blob/master/Lokad.BrainScript/Token.cs) `[Pattern("[a-zA-Z][a-zA-Z0-9_]*")] Id` - Instead of adding new **classes** to represent new AST nodes, I add new **methods** to a grammar class (although I still have one C# type for each non-terminal), with attributes on each parameter to determine what it should match, `T` for terminal and `NT` for non-terminal. [Here is the rule for `(params =&gt; expr)` lambda](https://github.com/Lokad/cntksharp/blob/master/Lokad.BrainScript/Parser.cs#L87).
1. Take a look at Rider. It is an IDE made by JetBrains. They are the developers of the arguably best plugin for Visual Studio, ReSharper. 2. Yes. Even though .net has just brief experiences of cross platform, but Microsoft is really pushing to make it possible. With Xamarin you can develop apps for every platform but Linux, using the same code for every platform when possible. If you are out for desktop application check out GTK#, it is probably the most sensible approach. 
Rider was mentioned and yeah, that's exactly the cross platform IDE you want. And it's done by the same people who made the best Java IDE: intelliJ. For x platform there is now dotnet core. It's pretty new but it's the future of .net. it's cross platform by design but it can't yet do everything the full framework (or mono) can do. You'll have to see if it's enough for you.
Visual Studio Code is worth looking at, it's really powerful as there are lots of plugins you can install for C# and .Net-Core to bring it up to Visual Studio's level. Rider is also a good option, as some others have said, but it's down to preference, and both are in an "early days" state right now
Oh man, please don’t advise people to write unparameterized SQL :p
Try turning off code optimzation under your project settings Edit: your probably want to turn it back on before building a release
There are better ways of doing it but the simplest is to just have the viewmodel constructor take the repositories it needs as parameters.
is this in unity somewhere?
Not really, it probably would have helped performance because of the overhead of looking up interface methods to the actual type implementing it and all that stuff. It was more to do with the generational hyperbole affecting the developers of the time. The weird thing about development is that it is highly cyclical. FP has been around 30+ years, even things like the MVC pattern everyone loved a year or two back was created in 1973ish. Where we move on and progress is the refinement. FP of old was a headache to teach and arguably not suitable for large scale developments, so various languages and frameworks borrowed bits to give us the productive hybrids of today. Productivity is way more useful than performance in almost all cases :)
I didn't, I advised the opposite! &gt; this is a terrible way to build a sql query; use parameters and also: &gt; But - really - replace this as soon as possible if not before! 
.Net Core is a rewrite of .Net that runs on Windows, macOS and 10-20 Linux distributions. Core is modular; just get the bits you need. It's new and it's a work-in-progess. Version 2 is in beta now and expected to be final in the 3rd quarter. ASP.Net Core for building web applications is built on .Net Core and runs on the same platforms. It's open source on github. The [roadmap](https://github.com/dotnet/core/blob/master/roadmap.md) suggests that Xamarin is also going to be on Core. Read [Why .NET Core and C# are the Next Big Thing](https://stackify.com/net-core-csharp-next-programming-language/); it's particularly apt to your situation.
The 2.0 version currently in preview goes a long long way toward filling out the feature gaps between Core and the full framework
Ok! thank-you for your Input turigi I will bare that in mind and amend the code Many thanks, Elliot
Ok dok, thank-you for the answer michaelquinlan Many thanks, Elliot
I was asked to reformat by the lead dev. 
Just fyi, you don't have to be so formal on Reddit. These aren't serious business e-mails, we're just a friendly community looking to help each other, no need for formalities!
One thing I'd add is this short article - [Testing on the Toilet: Test Behavior, Not Implementation](https://testing.googleblog.com/2013/08/testing-on-toilet-test-behavior-not.html) Illustrates an important point quite nicely before you get too deep. It's easy to get carried away at the start with too many tests of the wrong things.
I'm thinking about going the opposite way, C# =&gt; Java. As I've done some work with Java already, I can definitely say that C# is a better language in some regards. However when compared to Java, .NET ecosystem is lacking, .NET Core even more so. It is less widespread than Java, there are less libraries (see http://www.modulecounts.com/ take note these are .NET, .NET Core modules are even fewer), less applications and less innovation going on in the .NET world. The examples could be the app containerization, a thing with which .NET Core is trying to catch up with after all these years, open source projects not having .NET SDKs or having inferior client functionality. This thing comes from the commonplace .NET mentality, the industry standard is to follow Microsoft - use their frameworks and tools, a digital feudalism of sorts. Overall .NET Core seems to be a cool upcoming project but there are some red flags already. .NET Core has it's set of problems especially with communication between the community and Microsoft. A lot of developers are waiting for the framework to stabilize before jumping on it as there's a history of breaking changes and reports of new versions of runtime breaking the older builds. Microsoft introduced quite serious breaking changes in minor version updates without even letting the devs know - dropping the support for .NET Framework (the Windows version, naming's really a mess here). IIRC someone from the community noticed that and MS backtracked after the community backlash. There's also a huge issue with privacy, .NET Core CLI is calling home by default (see https://opinionatedgeek.com/Blog/2017/3/26/your-tools-shouldn-t-spy-on-you ). JetBrains IDEs are way ahead of Visual Studio which is quite lacking without Resharper (for me mostly in the refactorization department). It's also extremely bloated and sluggish on bigger solutions. I think Project Rider is definitely the way to go. Sure, go C# if it suits your needs, but have you considered other JVM languages, like Kotlin or Scala, wouldn't it be a more natural step?
What's the point of the DocumentPart.Accept method? Why not just have Document.Accept call the visit method directly? For example: public class Document { private List&lt;DocumentPart&gt; m_parts; public void Accept(IVisitor visitor) { foreach (DocumentPart part in this.m_parts) { visitor.Visit(part); } } Seems like it would make the code much cleaner.
Because that will always call the same overload of `visitor.Visit`, regardless of the concrete type of `part`.
I don't think it runs on Linux but rather it can compile Linux compatible binaries. There is VS for Windows, VS for Mac, and VS Code runs everywhere.
The section about the problem being solved (double dispatch) may help explain that a bit. The problem with just calling `Visit` directly is that it will end up calling the `DocumentPart` overload of `Visit` in your visitor. The dynamic dispatch is based on the type of visitor, but the choice of which particular `Visit` method to call is made statically based on the (compile-time) type of the argument, which is just `DocumentPart`. The problem with that is you may want to handle different subclasses of `DocumentPart` differently. You can’t do that without going through the `Accept` method. That allows you to do two dynamic dispatches: the first is based on the runtime type of the document part, and the second is based on the runtime type of the visitor. 
Can absolutely recommend the [The Art of Unit Testing](https://www.amazon.com/gp/product/1617290890/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1617290890&amp;linkCode=as2&amp;tag=codinglove-20&amp;linkId=3537d33e89ff2d944a62c63d35fbb425)!
 // Single-digit numbers string fromTextBox = "234701923464123680"; int[] numbers = new int[fromTextBox.Length]; for (int i = 0; i &lt; numbers.Length; i++) numbers[i] = Int32.Parse(fromTextBox.Substring(i, 1)); // Variable-length numbers string fromTextBox = "23,470,1,9,234,6,4123,680"; string[] textNumbers = fromTextBox.Split(','); int[] numbers = new int[textNumbers.Length]; for (int i = 0; i &lt; textNumbers.Length; i++) numbers[i] = Int32.Parse(textNumbers[i]); // Getting fancy! nums is int[]. LINQ is often succinct. var nums = (from tn in textBox1.Text.Split(',') select Int32.Parse(tn)).ToArray(); 
Understood. usually, I just use a console log as the breakpoint mechanic usually crashes Unity.
&gt; there are less libraries (see http://www.modulecounts.com/ take note these are .NET, .NET Core modules are even fewer) Library count means nothing. It's merely outsourced wheel-invention. Cool Java has 10 more datetime libraries than .NET. WHY? Now you have 10 different teams using 10 different datetime libraries and none of them know how to work together. Shift a developer from one to the next, now they have to stop and re-learn basic date operations simply because there's a different library. &gt; see https://opinionatedgeek.com/Blog/2017/3/26/your-tools-shouldn-t-spy-on-you That was a rather pointless hit-piece. Examine: &gt; But maybe they’ve tweaked it so that today it’s sending files as well? They managed to sneak the first change past me, so have I missed another? No? Maybe not. But tomorrow? I can’t know, since they’ve demonstrated I can’t trust them or the tool they created. [Except the entire dotnet CLI is open source.](https://github.com/dotnet/cli) He and the entire community can see exactly what it's sending. If he's that paranoid he can even build it himself. "I can't know". Bullshit. He doesn't want to know because argument-from-ignorance is the only argument he can make here. Stopped reading after that. I've looked through the source code. It's all incredibly basic, incredibly anonymized feature-usage information. Which makes perfect sense, since MS is interested in which features to spend time working on. What is the point of spending time on a feature nobody uses? The vast majority of the world's companies do this now. For some reason, Microsoft is the only one that nerds rage against. Google literally sniffs all of your personal correspondence? "I don't mind! Go ahead Google!". Microsoft tells their servers that you use the -o option a lot? "EVIL!!!!!!". Christ. 
I use .Net Core on my linux machine successfully! Also, visual studio code works pretty well for c#. You can't do a ton of awesome visual studio stuff, but you can do everything just fine via the command line. Check out [this podcast talking about switching from node to .Net Core](https://devchat.tv/js-jabber/moving-from-node-js-net-raygun-io-john-daniel-trask)
&gt; OP is more than likely referring to how OO programming was in fashion at one point For the last twenty years and at least the next five?
I think it's arguable whether it's been fashionable in the last 10. Web dev kinda took the top spot there, and JS is not really OO. As far as paradigms go, I think functional has been superseding OO for a while. Even in C# the style has gone more functional, which brings us back to the original point: static classes are actually pretty popular these days.
Do a search for videos by the author as well. He has done some good talks.
Thirded, this is a pretty damn good book. 
&gt; Check out this podcast talking about switching from node to .Net Core Thanks, I will!
No it would be in your project settings under compile, advanced compile options, uncheck the enable optimizations setting 
This article gives a really easy to understand introduction: https://codeaddiction.net/articles/23/introduction-to-unit-testing-in-c Perhaps you are past this point but if you're not...
&gt; But it was never really meant for servers. Microsoft's own examples show using it in an Asp.net Core web application and connecting to a Sql Server instance. It works fine for that. I am working on two projects now that use it that way and we manage things more complicated than adding indexes and views (we have hierarchical views, change tracking, and tables that will sometimes be modified outside of the migration system itself). You just have to keep in mind that you still need to know what changes you want before you type add-migration and that with a good understanding of TSQL you can manage the process directly if the auto generated stuff doesn't match what you want to do. That being said, EF migrations is still kind of a pain in the rear. I could understand why people would want to avoid it if they have used it before.
Visual Studio Code is a lighter and more mature option. Rider has been unusable for various reasons every time I've tried to use it. The real question is why they're dual booting. The Windows Subsystem for Linux has made dual booting redundant for myself.
Why? Its just a library and pattern for unit of work change tracking and mapping objects to SQL generation (and migrations if you use it). Its not like the SQL it generates for crud operations is magically better or worse than what most developers write by hand. It adds a small bit of CPU use and latency when rolling up changes and does poorly in performance critical sections, but you should be hand coding SQL for those types of operations anyways no matter how you access your database. It can save a lot of developer time on the 'long tail' of data access. I would argue that ORMs and Micro ORMS should have a place in most relational DB backed web apps, even ones that have complex needs and need to scale (though you could argue that it is hard to scale a purely relational DB backed web app, thats a different discussion)
We should stay away from emotional reactions and analyse this thing calmly. .NET already has several datetime packages and the BCL one has its problems; maybe you had a chance to encounter issues with DateTime and DateTimeOffset timezone, maybe not. That's the reason Jon Skeet created NodaTime which is based on Java's JodaTime... High module count is only a good thing. If not package diversity we'd all be stuck using mstest, who'd want that? Even Microsoft doesn't use mstest in their OSS anymore... And it's not only about diversity, but being able to rely on external modules instead of reinventing the wheel... You're saying it's common, which language CLI does call home by default like .NET Core does? What .NET Core team is doing is taking data harvesting to whole another level. It is open source and the very first link in the article links the ticket submitted to the project https://github.com/dotnet/cli/issues/3093 and that's the third most commented open ticket in the project. This really needs to be discussed, understood and addressed reasonably both by the community and Microsoft.
i think when using unity, that isn't available. What I mean is, when loading visual studio to hook up to unity, unity does the compilation i think. VS just listens on messages...or something of that sort. I see very little under project properties in my VS. 
I'm not dual booting. I'm using different computers.
JS is OO. It just uses prototypes instead of classes. Taking advantage of functional programming concepts in JS is a relatively new occurrence that mirrors the increase of popularity of React and the only functional programming concept that is regularly employed is immutability. I should mention that JS has even gone out of its way to become more like traditional OO by adding classes to its official spec, as well as some large popular frameworks moving to typescript, a languge offshoot that adds static typing and classes to JS. Functional isn't superseding OO, they are merging. If Functional programming was going to completely replace OO then we would have had a pure functional programming language in the top 10 at some point, since its a really old concept and the only reason for its resurgence was as a way to deal with the complexity of mutlithreading and parallel computing (which async and stateless patterns have dealt with more simply in web applications anyways). &gt; static classes are actually pretty popular these days. ...eh? Doing functional programming in C# doesn't mean using static classes...it means modeling immutable data, 'pure' functions and taking advantage of functional concepts like currying and lambdas. Basically doing functional programming in C# would look just like F# programming but missing some of the syntax help and safety F# would provide.
You mention a thing that worries me a lot about the .net framework. It's windows centric. Things built for it are generally written with windows in mind. The same is valid for end software (that often enough uses PInvoke to call some dll. Because: "It's built for windows, why not use it's features?") and libraries. For java there are good chances that an external library will work on more than one operating system. For .net, libraries with more than windows in mind seem to be the exception. (Atleast when it's important, obviously a lot of libraries are written entirely without native code.) &gt; Sure, go C# if it suits your needs, but have you considered other JVM languages, like Kotlin or Scala, wouldn't it be a more natural step? I'm not jet sure if it suits my needs, thats why I'm trying to figure it out. I know what to expect from Java. Not yet entirely what of C# and .net. As far as other languages in the JVM go: A big minus for Java is the way an end user runs the program. People using Windows are not used to receiving a bunch of classes or a jar file and then running a command line statement to start the program. So I usually end up writing a bat file (which doesn't look professional) or write a simple exe file in delphi (yeah it's 2017 and I still use it when I need to write stuff that needs to do something Windows specific) just to start the java VM and give the end user a nice experience with a pleasant icon and not a scary looking one. In a way C# would also remove my dependency on Delphi for a lot of Windows only things. With C# you compile the code and get an exe file to run on windows. (Which is a big plus on the user experience side.) Linux users on the other hand still need to run it with a command line but they generally know what they are doing and manage to write the "mono myapp.exe" to start it. There are a lot of factors at play and I'm not entirely sure what to make of it all.
Interesting. Why doesn't C# look at the type during runtime, then? I can't imagine the default behavior being intended in very many cases.
#FreeIBP 
If you're curious what they are doing with the telemetry; https://blogs.msdn.microsoft.com/dotnet/2017/07/21/what-weve-learned-from-net-core-sdk-telemetry/
That's just not how C# works, it's a statically typed language and only considers the information it has at compile time (unless you're using explicit casts or `dynamic`). It's the same reason you can't do something like this: object foo = new List&lt;string&gt;(); foo.Add("bar"); The compiler can't just assume that `m_parts` will only ever contain types for which overloads exist, what if someone creates a new class inherting from `DocumentPart` without adding a method for it to `IVisitor`?
If the program doesn't take any type information into account at runtime, then how can the visitor pattern work?
IntelliJ left such a bad taste in my mouth because of android studio. Then again I'm downloading it now to see if this works better, might not be IntelliJ's fault but all the android related things that make it take up most available memory and feeze stuff up for minutes. Fingers crossed.
&gt; that often enough uses PInvoke to call some dll I think you severely overestimate the number of libraries requiring pinvoke. pinvoke works with Linux libraries (.so) as well, so it's even possible to design cross-platform programs that use native libraries.
Because every class inheriting from `DocumentPart` overrides the `Accept(IVisitor)` method and calls the correct overload for itself. Calling the correct implementation of the virtual `DocumentPart.Accept` method for each instance has to be done done dynamically at runtime of course, but that's fine because it is statically guaranteed that all deriving classes have that method.
&gt; JS is OO JS isn't really OO. It's been possible to force it to behave similarly for the broad strokes of OO, but only recently has it added true classes, and it's never had details like interfaces and inheritance, which are really important in true OO. I guess you could argue that polymorphism is replaced by duck typing, but OO is enough of a mess when you have polymorphism explicitly defined by a strong-typing system. &gt; Functional isn't superseding OO, they are merging. I agree in principle that 'they are merging' but that's really just a factor of general programming languages being able to be used in many different styles. A great example being that you're able to use JS for OO if you want, despite it lacking some of the finer details. &gt; ...eh? Read the thread. That comment is relevant in context. Anyway once you've got your immutable types built, you'll likely be using static classes for the functionality; so even what you think I'm saying, is correct.
From what I (quickly) read, it doesn't have any reasonable support for GUIs at the moment so I'll pass it for now. But now that I know this exists I'm slightly hyped and looking forward to see what it will evolve into.
Demoware. Microsoft has a bad habit of throwing everything into ASP.NET or XAML demos without stopping to think whether or not its a good idea. Far too often I've seen people, myself included, follow their demo patterns and run face first into a wall. It was only later, after careful thought and much discussion, where I find the proper homes for a given pattern or library. In the case of EF migrations, it's a great idea for "the file is a database" such as SQLite.
I'm really liking that ValueTuples one. I often use a return bool to indicate the method success, but I also like to return an error message too, forcing me to add an errormessage object to the class.
Do you mind me asking what machine you ran Android Studio on? I have IntelliJ and AndroidStudio which I use for university work (installed on a regular hard disk), and they've been working fine on small to medium-sized applications. I'm running a core i7 4720HQ and 8 GB of RAM, and the only crash I experienced was due to me accidentally trying to open 3 emulators at once.
What kind of wall(s) did you run into? 
&gt; JS isn't really OO. Prototype languages are by definition OO. Object Oriented programming doesn't mean 'class based'. There are quite a few object oriented programming languages that don't use classes. JavaScript is one of them. &gt; it's never had details like interfaces and inheritance, which are really important in true OO No, thats only important to true class based programming. OO is a broader category. There are a number of prototypical languages and they are all OO based (or at least hybrid). Smalltalk for instance was the language that the phrase was based around and was dynamic in nature and a 'class' could be modified at runtime similar to how a prototype in JS can be. &gt; A great example being that you're able to use JS for OO if you want, despite it lacking some of the finer details. You are wrong. Almost all JS code is prototypical OO based code. You have to work hard to do any functional programming in JS, even moreso than in C#.
If you want to use free open source library, the ghostscript is the best one, for other open source, you can try pdfsharp or itextsharp, both can be used in c#.net. and if you want to use third part library, xspdf is a good choice, it can convert pdf to jpg easily http://www.xspdf.com/guide/pdf-jpg-converting/, can there is no extra install in server side.
Regarding the IDE; use VS Code. It's multi-platform
You could write a property into your Form class that accesses the text property of the Textbox so that other objects can use it: public partial class Form1 : Form { public Form1() { InitializeComponent(); } public string TextBoxString { get =&gt; textBox1.Text; set =&gt; textBox1.Text = value; } } and : [STAThread] static void Main() { Form1 form = new Form1(); form.ShowDialog(); Console.WriteLine(form.TextBoxString); //access to text property }
a little LINQ may help: public int[] ToArray(string input) // maybe use it as Extension Method? { return input .Split(' ') // string to array of strings split by space .Select(int.Parse) // IEnumerable of parsed ints (may throw exception) .ToArray(); // Converting back to Array and return }
Looks like a couple issues. First the text boxes are usually defined in your winforms app, and since you didn't pass them into your class/function they are not defined. If for some reason you derived this class from the winforms you would still get a reference error because the function is static. To fix it you could pass the values of the text boxes in as parameters. It would make the function more flexible (not dependent on text boxes) and easier to debug.
1) The text boxes exist within the form's class. You are trying to access it from the DictionaryClass, which doesn't know about the form. You can view the actual definition for this text box by right clicking the arrow to the left of the form file (e.g "Form1.cs"), and then opening the *.designer.cs file (e.g "Form.Designer.cs") The form is a **partial class**. This means that the definition for the class can be split over more than one file, allowing your normal code file to expose only what you need to edit, and hide what the designer creates. This allows code to be added without recreating the source file. --- 2) By "object reference," I believe you are referring to the following error: "An object reference is required for the non-static field, method or property…" If so, then the problem is this: you are accessing a non-static variable or function from a static one. Static objects and functions mean that there is only one instance of that object or function for that class. Static classes mean that there is only one instance of that class, for the whole program. --- 3) Microsoft has documentation for all of this. You can view documentation within the following two sites, as google searches will lead you to, https://docs.microsoft.com https://msdn.microsoft.com/ Or for what you are more interested in, there is a [C# programming guide](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/index) and the [C# Reference](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/index) --- You can pass the textbox's value to the function static public void DicWrite(string FileName, string engword1, string rusword1) Or pass a reference to the textbox to the class, (in this example, the functions are non-static. You can make everything static if you want, but you'd have to remove the constructor/make it a void function, and change this.* to DictionaryClass.*, where * is a wildcard): public class DictonaryClass { public TextBox EngWord; public TextBox RusWord; public Dictionary&lt;string, string&gt; Dic = new Dictionary&lt;string, string&gt;(); public DictionaryClass(TextBox EngWord, TextBox RusWord){ this.EngWord = EngWord; this.RusWord = RusWord; } public void DicWrite(string FileName) { string engword1 = EngWord.Text;//line 1 string rusword1 = RusWord.Text;//line 2 using (StreamWriter Write = new StreamWriter(FileName, true)) { Write.WriteLine(engword1); Write.WriteLine(rusword1); } } } When you pass an object as an argument to a function, you are actually passing a reference to the object. Since I made this non-static, I would create a DictionaryClass, and then call the function DicWrite: DictonaryClass MyDictionaryClassThing = new DictionaryClass(textBox3, textBox4); ... MyDictionaryClassThing.DicWrite("C:/SomeFile.txt"); and the DictionaryClass will take the current value of textBox3 and textBox4, and write it to the file Edits: Code and more links Edit: also, I think you may wish to make it non-static, and instead of passing the textboxes to the DictionaryClass, use the first example: public class DictonaryClass { public Dictionary&lt;string, string&gt; Dic = new Dictionary&lt;string, string&gt;(); public DictionaryClass(){ } public void DicWrite(string FileName, string engword1, string rusword1) { using (StreamWriter Write = new StreamWriter(FileName, true)) { Write.WriteLine(engword1); Write.WriteLine(rusword1); } } } ... DictonaryClass MyDictionaryClassThing = new DictionaryClass(); ... MyDictionaryClassThing.DicWrite("C:/SomeFile.txt", textBox3.Text, textBox4.Text);
Just an warning, RTBs are a pain to get working if you want to do anything a little outside of what they were designed for (e.g scrolling). I created a simple extension for the RTB: // Extension of the RichTextBox class to allow for inserting colored text public static class RichTextBoxExtensions { public static void AppendText(this RichTextBox txtbox, string text, Color Color, int Indent = 5, HorizontalAlignment align = HorizontalAlignment.Left) { if (txtbox.InvokeRequired) { txtbox.Invoke(new AppendTextDelegate(AppendText), txtbox, text, Color, Indent, align); } else { txtbox.SelectionLength = 0; txtbox.SelectionStart = txtbox.TextLength; txtbox.SelectionColor = Color; txtbox.SelectionIndent = Indent; txtbox.AppendText(text); txtbox.SelectionColor = txtbox.ForeColor; txtbox.SelectionAlignment = align; } } public static void nl(this RichTextBox txtbox) { if (txtbox.InvokeRequired) { txtbox.Invoke(new AppendTextDelegatenl(nl), txtbox); } else { txtbox.SelectionLength = 0; txtbox.SelectionStart = txtbox.TextLength; txtbox.AppendText(System.Environment.NewLine); txtbox.SelectionColor = txtbox.ForeColor; } } delegate void AppendTextDelegate(RichTextBox txtbox, string text, Color Color, int Indent, HorizontalAlignment align); delegate void AppendTextDelegatenl(RichTextBox txtbox); } --- Edit: Note, the delegates are used to bypass the following error: System.InvalidOperationException: 'Cross-thread operation not valid: Control 'richTextBox1' accessed from a thread other than the thread it was created on.' Edit 2: If you add a using statement at the top of your file for the namespace that this class is in, or if this is part of your namespace, you can then write: richTextBox1.AppendText("Something", Color.Red); and it will insert the text as red text. You can also modify the indent and alignment. This is an overload for the existing AppendText method, so just richTextBox1.AppendText("Something", Color.Red); will also work. richTextBox1.nl(); will insert a new line, though this is code I wrote a long time ago, so I don't remember particularly well why this was necessary, if at all.
I've started with Python/Flask some years ago, then ASP.NET (Windows), then (due to the need to migrate to Linux) ASP.NET Core, but hit some performance issues. So for this particular project I've used NodeJS. For the upcoming project, I need a backend language that has a long integer datatype (Ouch, Javascript) and I'm currently evaluating Spring and Vert.x, but both with Kotlin instead of Java. I have the freedom to do this, no tight timeline, so I thought "why not?". So far all I can say is that Spring is massive and mature. Not easy to grasp. But proven solutions for all kind of standard stuff. You can for example get a REST API for your data with almost no code (Spring JPA and Data REST). Of course based on ORM magic, but in contrast to EntityFramework Core these ORM solutions are much more mature. In the past I never wanted ORM solutions, but with this kind of integration I have to check it out. On the IDE side - IntelliJ Idea is also massiv. Some stuff better then VS, e.g. VSC integration, DB Tools. But sometime laggy and overwhelming. Java as a language is not a huge problem. Java 8 has streams. You get a lot of automation from the IDE (constructors, getters/setters). Kotlin is much nicer, though. But the ecosystem is a huge confusing mess. Starting from simple decisions about how to parse XML to which webframework to choose. After finising the project I'll be hopefully wiser :-). 
Visual Studio now runs on Mac and Linux also.
Very cool, I may use this.
I'd like to see the results if do end up using it, especially if you were to write a new model strategy for another data type :D
C# is amazing. That is all I have to say on the matter.
Short answer: No! MS is doing lots of stuff lately in order not loose even more market power, but Linux (and other none MS OS) really aren't first class citizens yet! On top of that the complete eco system around .NET (and C# in special) don't feel as mature as the JVM world. You will find less open source libs and **tooling** support on top. C# as a language still has some nice features Java does not gave yet. But overall the trouble is not worth if you really need cross platform! My advice: Switch to another language on the JVM (even if I don't like the hype: try Kotlin if you want a Java with some advanced features). There are so many with different philosophies: Scala, Groovy or Clojure. As I use C# at work, I tried it on Linux in my spare time - I gave up soon, as lots of libs were missing (WCF) in Mono or I couldn't get them up to work (NUnit and NSubstitute). GUIS are even missing completely - also not very platform agnostic.
No it doesn't; something calling itself Visual Studio does.
Dude, I could give you a blow by blow, but all I need to do is point you at this, which almost word for word mirrors what I'm saying: https://en.wikipedia.org/wiki/Object-oriented_programming#OOP_languages &gt; OOP languages &gt; * Languages with abstract data type support which may be used to resemble OO programming, but without all features of object-orientation. This includes object-based and prototype-based languages. Examples: JavaScript, Lua, Modula-2, CLU. JS can be made to resemble it, but doesn't have all the features required to be called a true OO language
To bring the discussion back on topic, yes OO was extremely trendy at one point, and a lot of the coding style has carried over and been used with JS (because it's possible, despite lacking key features) in Web Dev. However, FP's style has been influencing coding style for some time, and the most senior developers I know try to minimise type complexity and use static/module methods where possible; to make code more testable, reduce the number of object layers, use lambdas/IOC, and many other benefits which FP brings over OO. Since this is often applied to languages like C#, it can only go so far, but you can get many of the benefits by following some key FP principles.
Interesting! My PhD was in mathematical modelling of radiobiological systems, but I used fortran. How well does C# cope with mathematically intensive tasks? I'd like to get back to doing a bit more modelling, but I doubt I could go back to fortran.
Crash? Luckily I never got that. Just lots of slowdowns, waiting, more waiting and temporary freezes. Initially I ran it on a core 2 duo with 4GB of ram. Which ran about everything I could immagine smoothly enough at the time. (3 years ago) Android studio on the other hand: Start it, go away while it loads, go away if I'm opening a new project (go away if you're compiling but that's the compiler and not the IDE) and for the love of everything that is good, keep the rest of the computer as clear if at all possible because it can slow down even more. Opening firefox in the background would just result in random freezes. This was the only thing that behaved like this. The second run up was Visual Studio 2015 which needed a good minute or two to start up the first time and then run quite nicely. So no problems as far as I'm concerned. Now I'm running it (android studio) on an I5 4690 with 16gb of ram. I can run it, some VMs and GW2 in the background. It still loads projects slowly compared to other IDEs. But atleast it doesn't freeze the computer anymore. Compare that to something like Eclipse which runs quite fine on my 2ghz celeron laptop with 2GB of ram.
Visual Studio 2017 or Visual Studio Code? I know the later does, but it's hardly the same tool.
Very fancy videl! Thank-you for your help, Elliot
Knowing microsoft they will drop it in 3 years. 
Uhhh... are you really saying IntelliJ left a bad taste in your mouth because it performed poorly on a *Core 2 Duo* with **4**GB of RAM in 2014? That chip had been out of production for four years at that point and 4GB hasn't been enough to do serious development work for at least as long. That is *exactly* the kind of machine that I would expect to experience slowdowns, waiting, more waiting and temporary freezes. If you're going to blame the application at least make sure your hardware isn't ludicrously out of date.
It looks like AvaloniaUI is now supporting .NET Core. Combining it with VS Code or Rider should give you an almost identical dev environment on different OSes
I was in similar position and I found this short (around 1 hour) "course" by Jeremy Clark extremely helpful: https://www.youtube.com/watch?v=l4xhTq4qmC0&amp;list=PLdbkZkVDyKZXqPu-xDFkzuP66QijGeewz It's not obviously a novice to master type of guide, but nice for understanding testing in general. The course is for TDD, but you don't need any knowledge of unit testing to complete it.
First off sorry for not responding quickly(fell asleep just before you commented). But i used this method: &gt; public void DicWrite(string FileName, string engword1, string rusword1); It worked for this project just fine, i also thank you for the Educational Links. I still don't however understand the "object reference" thing. If you would be willing, could you give me a simple example of "passing an object reference"?
What you want to do is access the DOM after the Javascript in the page has run. Here is a stackoverflow question that addresses the problem you are seeing and might be helpful. https://stackoverflow.com/questions/7333973/how-to-get-rendered-html-processed-by-javascript-in-webbrowser-control
Declaring the textboxes as static variables enables you to use it in static methods, but i still dont really know which code tries to access what and where
Void launch_check (int min_altitude_for_explosion ){ If(min_altitude_for_explosion &lt; 10) { min_altitude_for_explosion=1000; Return ; } } Var altitude = 4; Launc_check(altitude) ; Launch () ; Boom you are dead 
It absolutely helps me write more efficient code. There's not always a need for so much garbage on the heap.
Explain the down votes guys - anyway the example shows that the altitude variable is passed by copy (I believe a copy of reference which is on the heap but bear with me), so the change will not be reflected to the caller and your beloved ones will die in a fiery fire. 
I didn't downvote you, but there's a lot wrong with that code. For example, `launch_check` and all of your arguments are not only incorrectly snake_cased, but returns `Void`, which should have been lowercase. In addition, `launch_check` should actually return a `bool` if you're going to evaluate the result of the explosion check, but instead you're arbitrarily reassigning some other integer variable that has nothing to do with anything else in the code. You could have kept `void` if you had passed `altitude` into `launch_check`, did something like `altitude += 10`, then attempted to evaluate `altitude` outside of the `launch_check` only to realize that `altitude` never had 10 added to it. I think you could have made a better statement if you used the code formatting features, proper naming conventions, showed an actual example of value type vs reference, and did not explicitly `return` from a void method. I hope that helps :)
could you give an example of declaring a textbox as a static variable?
We're looking for early feedback. Thank you!
sure, there are multiple more or less ugly ways to accomplish a static Textbox in your Form class. The easiest is modify the auto generated code, so that the TextBox you put in the designer becomes static -&gt; add "static" keyword to TextBox declaration and remove "this." from everything textbox related, because it's no longer linked to an instance, but the class itself (may become a problem with multiple forms of the same type) private void InitializeComponent() { textBox1 = new System.Windows.Forms.TextBox(); //no "this." this.SuspendLayout(); // // textBox1 // textBox1.Location = new System.Drawing.Point(82, 49); //no "this." textBox1.Name = "textBox1"; //no "this." textBox1.Size = new System.Drawing.Size(100, 20); //no "this." textBox1.TabIndex = 0; //no "this." // // Form1 // this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F); this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font; this.ClientSize = new System.Drawing.Size(284, 261); this.Controls.Add(textBox1); this.Name = "Form1"; this.Text = "Form1"; this.Load += new System.EventHandler(this.Form1_Load); this.ResumeLayout(false); this.PerformLayout(); } private static System.Windows.Forms.TextBox textBox1; //now static 
&gt; That is exactly the kind of machine that I would expect to experience slowdowns, waiting, more waiting and temporary freezes. Surprisingly this is exactly the kind of machine that was still able to run about everything else I ever cared to run (apart from android studio and gta5) without slowdowns, waiting or temporary freezes of any sort. &gt;If you're going to blame the application at least make sure your hardware isn't ludicrously out of date. Now if Visual Studio 2015 worked fine. Up to date NetBeans and Eclipse worked fine. The games that I wanted to run ran fine. Video editing with after effects was responsive (although the rendering times are noticably faster now). And then comes android studio and can't open a new tab without freezing itself for a couple of seconds or the entire computer if you do something more complex. Yeah I'm going to blame it, because compared to every other contemporary development tool I had installed it was the only one needing that much. But you know what else didn't run on my core 2 duo: Saints Row 2. It's working now on the i5. Though I think that relative to the time when the game came out the core 2 should have been apropriate. It was more than apropriate for SR3 and I even finished SR4 on it. It wasn't the hardware that was inapropriate. The game was just poorly written and required more than other games form the same period. Same as android studio vs any other IDE I had installed. Compared to other things it still needs a lot more of everything to run efficiently. But I don't know. Maybe android studio is not that bad, maybe everything else is just so much better.
(i would not recommend this though, try doing it like /u/JJagaimo suggested)
List of classes Application.cs ApplicationPool.cs AspSession.cs CIM_DirectoryContainsFile.cs DhcpServerAuditLog.cs DhcpServerDatabase.cs DhcpServerInDC.cs DhcpServerSetting.cs DhcpServerv4Binding.cs DhcpServerv4Class.cs DhcpServerv4DnsSetting.cs DhcpServerv4ExclusionRange.cs DhcpServerv4Filter.cs DhcpServerv4FilterList.cs DhcpServerv4Lease.cs DhcpServerv4Reservation.cs DhcpServerv4Scope.cs DhcpServerv4Superscope.cs DhcpServerv6Class.cs DhcpServerv6DnsSetting.cs DhcpServerv6ExclusionRange.cs DhcpServerv6Lease.cs DhcpServerv6Reservation.cs DhcpServerv6Scope.cs DhcpServerv6Statistics.cs DhcpServerVersion.cs DirectoryBrowseSection.cs DirectoryElement.cs DnsDomain.cs DnsServerCache.cs DnsServer.cs DnsServerDiagnostics.cs DnsServerPrimaryZone.cs DnsServerResourceRecordA.cs DnsServerResourceRecord.cs DnsServerRootHint.cs DnsServerSetting.cs DnsServerZoneAging.cs DnsServerZone.cs DnsServerZoneDelegation.cs FtpActiveDirectory.cs FtpAllowedCommandElement.cs FtpAnonymousAuthentication.cs FtpAuthentication.cs FtpAuthorizationRule.cs FtpAuthorizationSection.cs FtpBasicAuthentication.cs FtpCachePolicySettings.cs FtpCachingSection.cs FtpClientCertAuthentication.cs FtpConnections.cs FtpDirectoryBrowse.cs FtpFileHandling.cs FtpFirewallSupport.cs FtpFirewallSupportSection.cs FtpHostNameSupport.cs FtpLogFile.cs FtpLogSection.cs FtpMessages.cs FtpSecurity.cs FtpServerSettings.cs FtpSslClientCertificates.cs FtpSsl.cs HttpRequest.cs list.txt LogSection.cs MachineKeySection.cs MicrosoftDNS_AType.cs MicrosoftDNS_Cache.cs MicrosoftDNS_Domain.cs MicrosoftDNS_MXType.cs MicrosoftDNS_NSType.cs MicrosoftDNS_PTRType.cs MicrosoftDNS_RootHints.cs MicrosoftDNS_Server.cs MicrosoftDNS_SOAType.cs MicrosoftDNS_SRVType.cs MicrosoftDNS_TXTType.cs MicrosoftDNS_Zone.cs Microsoft_DomainTrustStatus.cs Microsoft_LocalDomainInfo.cs MicrosoftNLB_ClusterClusterSetting.cs MicrosoftNLB_Cluster.cs MicrosoftNLB_ClusterSetting.cs MicrosoftNLB_NodeControlEvent.cs MicrosoftNLB_Node.cs MicrosoftNLB_NodeNodeSetting.cs MicrosoftNLB_NodeSetting.cs MicrosoftNLB_PortRuleEx.cs MSAD_DomainController.cs MSAD_NamingContext.cs MSAD_ReplCursor.cs MSAD_ReplNeighbor.cs MSAD_ReplPendingOp.cs MSCluster_AvailableDisk.cs MSCluster_AvailableDiskPartition.cs MSCluster_Cluster.cs MSCluster_ClusterSharedVolume.cs MSCluster_ClusterToNetwork.cs MSCluster_ClusterToNetworkInterface.cs MSCluster_ClusterToNode.cs MSCluster_ClusterUtilities.cs MSCluster_Disk.cs MSCluster_DiskPartition.cs MSCluster_ExtendedStatus.cs MSCluster_Network.cs MSCluster_NetworkInterface.cs MSCluster_NetworkToNetworkInterface.cs MSCluster_Node.cs MSCluster_Resource.cs MSCluster_ResourceGroup.cs MSCluster_Service.cs MSCluster_ValidationStatus.cs MSFT_ServerFeature.cs MSFT_ServerInventory.cs MSFT_ServerManagerServerComponent.cs MSFT_ServerNetworkAdapter.cs MSFT_ServerOperatingSystem.cs MSFT_ServerPerformanceCounterSamples.cs MSFT_ServerServiceDetail.cs MSFT_SmbClientConfiguration.cs MSFT_SmbClientNetworkInterface.cs MSFT_SmbConnection.cs MSFT_SmbMapping.cs MSFT_SmbOpenFile.cs MSFT_SmbServerConfiguration.cs MSFT_SmbServerNetworkInterface.cs MSFT_SmbSession.cs MSFT_SmbShare.cs NAP_Client.cs NAP_EnforcementClient.cs NAP_SystemHealthAgent.cs RemoteAccessAccountingConnectionLocal.cs RemoteAccessConfigurationVersion.cs RemoteAccessConnectionLocal.cs RemoteAccessError.cs RemoteAccessInboxAccountingLocal.cs RemoteAccessMonitoringConnectionLocal.cs RemoteAccessServerHealthLocal.cs RemoteAccessUserActivityLocal.cs Server.cs SettingsSection.cs Site.cs SiteLogFile.cs SiteUsesSSLBinding.cs SmtpMailSettingsSection.cs SmtpNetworkSettings.cs SmtpSpecifiedPickupDirectorySettings.cs SocketSettings.cs SSLBinding2.cs SSLBinding.cs UrlMapping.cs VirtualDirectoryContainsConfigurationSection.cs VirtualDirectory.cs VirtualDirectoryElementDefaults.cs WebServicesSection.cs Win32_1394Controller.cs Win32_PerfFormattedData_InetInfo_InternetInformationServicesGlobal.cs Win32_PerfFormattedData_PerfDisk_LogicalDisk.cs Win32_PerfFormattedData_PerfDisk_PhysicalDisk.cs Win32_PerfFormattedData_PerfNet_Browser.cs Win32_PerfFormattedData_PerfNet_Redirector.cs Win32_PerfFormattedData_PerfNet_Server.cs Win32_PerfFormattedData_PerfNet_ServerWorkQueues.cs Win32_PerfFormattedData_PerfOS_Cache.cs Win32_PerfFormattedData_PerfOS_Memory.cs Win32_PerfFormattedData_PerfOS_Objects.cs Win32_PerfFormattedData_PerfOS_PagingFile.cs Win32_PerfFormattedData_PerfOS_Processor.cs Win32_PerfFormattedData_PerfOS_System.cs Win32_PerfFormattedData_RemoteAccess_RASPort.cs Win32_PerfFormattedData_RemoteAccess_RASTotal.cs Win32_PerfFormattedData_TermService_TerminalServicesSession.cs Win32_PerfFormattedData_usbhub_USB.cs Win32_PerfFormattedData_W3SVC_WebServiceCache.cs Win32_PerfFormattedData_W3SVC_WebService.cs Win32_PerfRawData_dhcpserver_DHCPServer.cs Win32_PerfRawData_DirectoryServices_DirectoryServices.cs Win32_PerfRawData_DNS_DNS.cs Win32_PerfRawData_ftpsvc_MicrosoftFTPService.cs Win32_PerfRawData_IAS_NPSAuthenticationServer.cs Win32_PerfRawData_IAS_NPSPolicyEngine.cs Win32_PerfRawData_Lsa_SecurityPerProcessStatistics.cs Win32_PerfRawData_Lsa_SecuritySystemWideStatistics.cs Win32_PerfRawData_MSDTC_DistributedTransactionCoordinator.cs Win32_PerfRawData_msmq_MSMQQueue.cs Win32_PerfRawData_msmq_MSMQService.cs Win32_PerfRawData_msmq_MSMQSession.cs Win32_PowerMeter.cs Win32_PowerPlan.cs Win32_PowerSetting.cs Win32_RDSHServer.cs Win32_ScheduledJob.cs Win32_SCSIController.cs Win32_SCSIControllerDevice.cs Win32_ServerConnection.cs Win32_ServerFeature.cs Win32_ServerSession.cs Win32_Service.cs Win32_SessionProcess.cs Win32_Terminal.cs Win32_TerminalService.cs Win32_TerminalServiceSetting.cs Win32_Thread.cs Win32_TimeZone.cs Win32_Tpm.cs Win32_TSClientSetting.cs Win32_TSGeneralSetting.cs Win32_TSLogonSetting.cs Win32_TSRemoteDesktop.cs Win32_TSSessionDirectory.cs Win32_TSSessionDirectorySetting.cs Win32_USBController.cs Win32_USBControllerDevice.cs Win32_USBHub.cs Win32_UserAccount.cs Win32_UserDesktop.cs Win32_UserInDomain.cs Win32_UserProfile.cs Win32_UTCTime.cs Win32_VideoController.cs Win32_VideoSettings.cs Win32_VirtualDesktopSession.cs Win32_VoltageProbe.cs Win32_Volume.cs Win32_VolumeQuota.cs WorkerProcessContainsAppDomain.cs WorkerProcess.cs
List of mssql table definitions and stored procedures for add, update, delete records, get count, select, select by ApplicationPool.sql Application.sql AspSession.sql CIM_DirectoryContainsFile.sql DhcpServerAuditLog.sql DhcpServerDatabase.sql DhcpServerInDC.sql DhcpServerSetting.sql DhcpServerv4Binding.sql DhcpServerv4Class.sql DhcpServerv4DnsSetting.sql DhcpServerv4ExclusionRange.sql DhcpServerv4FilterList.sql DhcpServerv4Filter.sql DhcpServerv4Lease.sql DhcpServerv4Reservation.sql DhcpServerv4Scope.sql DhcpServerv4Superscope.sql DhcpServerv6Class.sql DhcpServerv6DnsSetting.sql DhcpServerv6ExclusionRange.sql DhcpServerv6Lease.sql DhcpServerv6Reservation.sql DhcpServerv6Scope.sql DhcpServerv6Statistics.sql DhcpServerVersion.sql DirectoryBrowseSection.sql DirectoryElement.sql DnsDomain.sql DnsServerCache.sql DnsServerDiagnostics.sql DnsServerPrimaryZone.sql DnsServerResourceRecordA.sql DnsServerResourceRecord.sql DnsServerRootHint.sql DnsServerSetting.sql DnsServer.sql DnsServerZoneAging.sql DnsServerZoneDelegation.sql DnsServerZone.sql FtpActiveDirectory.sql FtpAllowedCommandElement.sql FtpAnonymousAuthentication.sql FtpAuthentication.sql FtpAuthorizationRule.sql FtpAuthorizationSection.sql FtpBasicAuthentication.sql FtpCachePolicySettings.sql FtpCachingSection.sql FtpClientCertAuthentication.sql FtpConnections.sql FtpDirectoryBrowse.sql FtpFileHandling.sql FtpFirewallSupportSection.sql FtpFirewallSupport.sql FtpHostNameSupport.sql FtpLogFile.sql FtpLogSection.sql FtpMessages.sql FtpSecurity.sql FtpServerSettings.sql FtpSslClientCertificates.sql FtpSsl.sql HttpRequest.sql list.txt LogSection.sql MachineKeySection.sql MicrosoftDNS_AType.sql MicrosoftDNS_Cache.sql MicrosoftDNS_Domain.sql MicrosoftDNS_MXType.sql MicrosoftDNS_NSType.sql MicrosoftDNS_PTRType.sql MicrosoftDNS_RootHints.sql MicrosoftDNS_Server.sql MicrosoftDNS_SOAType.sql MicrosoftDNS_SRVType.sql MicrosoftDNS_TXTType.sql MicrosoftDNS_Zone.sql Microsoft_DomainTrustStatus.sql Microsoft_LocalDomainInfo.sql MicrosoftNLB_ClusterClusterSetting.sql MicrosoftNLB_ClusterSetting.sql MicrosoftNLB_Cluster.sql MicrosoftNLB_NodeControlEvent.sql MicrosoftNLB_NodeNodeSetting.sql MicrosoftNLB_NodeSetting.sql MicrosoftNLB_Node.sql MicrosoftNLB_PortRuleEx.sql MSAD_DomainController.sql MSAD_NamingContext.sql MSAD_ReplCursor.sql MSAD_ReplNeighbor.sql MSAD_ReplPendingOp.sql MSCluster_AvailableDiskPartition.sql MSCluster_AvailableDisk.sql MSCluster_ClusterSharedVolume.sql MSCluster_Cluster.sql MSCluster_ClusterToNetworkInterface.sql MSCluster_ClusterToNetwork.sql MSCluster_ClusterToNode.sql MSCluster_ClusterUtilities.sql MSCluster_DiskPartition.sql MSCluster_Disk.sql MSCluster_ExtendedStatus.sql MSCluster_NetworkInterface.sql MSCluster_Network.sql MSCluster_NetworkToNetworkInterface.sql MSCluster_Node.sql MSCluster_ResourceGroup.sql MSCluster_Resource.sql MSCluster_Service.sql MSCluster_ValidationStatus.sql MSFT_ServerFeature.sql MSFT_ServerInventory.sql MSFT_ServerManagerServerComponent.sql MSFT_ServerNetworkAdapter.sql MSFT_ServerOperatingSystem.sql MSFT_ServerPerformanceCounterSamples.sql MSFT_ServerServiceDetail.sql MSFT_SmbClientConfiguration.sql MSFT_SmbClientNetworkInterface.sql MSFT_SmbConnection.sql MSFT_SmbMapping.sql MSFT_SmbOpenFile.sql MSFT_SmbServerConfiguration.sql MSFT_SmbServerNetworkInterface.sql MSFT_SmbSession.sql MSFT_SmbShare.sql NAP_Client.sql NAP_EnforcementClient.sql NAP_SystemHealthAgent.sql RemoteAccessAccountingConnectionLocal.sql RemoteAccessConfigurationVersion.sql RemoteAccessConnectionLocal.sql RemoteAccessError.sql RemoteAccessInboxAccountingLocal.sql RemoteAccessMonitoringConnectionLocal.sql RemoteAccessServerHealthLocal.sql RemoteAccessUserActivityLocal.sql Server.sql SettingsSection.sql SiteLogFile.sql Site.sql SiteUsesSSLBinding.sql SmtpMailSettingsSection.sql SmtpNetworkSettings.sql SmtpSpecifiedPickupDirectorySettings.sql SocketSettings.sql SSLBinding2.sql SSLBinding.sql UrlMapping.sql VirtualDirectoryContainsConfigurationSection.sql VirtualDirectoryElementDefaults.sql VirtualDirectory.sql WebServicesSection.sql Win32_1394Controller.sql Win32_PerfFormattedData_InetInfo_InternetInformationServicesGlobal.sql Win32_PerfFormattedData_PerfDisk_LogicalDisk.sql Win32_PerfFormattedData_PerfDisk_PhysicalDisk.sql Win32_PerfFormattedData_PerfNet_Browser.sql Win32_PerfFormattedData_PerfNet_Redirector.sql Win32_PerfFormattedData_PerfNet_Server.sql Win32_PerfFormattedData_PerfNet_ServerWorkQueues.sql Win32_PerfFormattedData_PerfOS_Cache.sql Win32_PerfFormattedData_PerfOS_Memory.sql Win32_PerfFormattedData_PerfOS_Objects.sql Win32_PerfFormattedData_PerfOS_PagingFile.sql Win32_PerfFormattedData_PerfOS_Processor.sql Win32_PerfFormattedData_PerfOS_System.sql Win32_PerfFormattedData_RemoteAccess_RASPort.sql Win32_PerfFormattedData_RemoteAccess_RASTotal.sql Win32_PerfFormattedData_TermService_TerminalServicesSession.sql Win32_PerfFormattedData_usbhub_USB.sql Win32_PerfFormattedData_W3SVC_WebServiceCache.sql Win32_PerfFormattedData_W3SVC_WebService.sql Win32_PerfRawData_dhcpserver_DHCPServer.sql Win32_PerfRawData_DirectoryServices_DirectoryServices.sql Win32_PerfRawData_DNS_DNS.sql Win32_PerfRawData_ftpsvc_MicrosoftFTPService.sql Win32_PerfRawData_IAS_NPSAuthenticationServer.sql Win32_PerfRawData_IAS_NPSPolicyEngine.sql Win32_PerfRawData_Lsa_SecurityPerProcessStatistics.sql Win32_PerfRawData_Lsa_SecuritySystemWideStatistics.sql Win32_PerfRawData_MSDTC_DistributedTransactionCoordinator.sql Win32_PerfRawData_msmq_MSMQQueue.sql Win32_PerfRawData_msmq_MSMQService.sql Win32_PerfRawData_msmq_MSMQSession.sql Win32_PowerMeter.sql Win32_PowerPlan.sql Win32_PowerSetting.sql Win32_RDSHServer.sql Win32_ScheduledJob.sql Win32_SCSIControllerDevice.sql Win32_SCSIController.sql Win32_ServerConnection.sql Win32_ServerFeature.sql Win32_ServerSession.sql Win32_Service.sql Win32_SessionProcess.sql Win32_TerminalServiceSetting.sql Win32_TerminalService.sql Win32_Terminal.sql Win32_Thread.sql Win32_TimeZone.sql Win32_Tpm.sql Win32_TSClientSetting.sql Win32_TSGeneralSetting.sql Win32_TSLogonSetting.sql Win32_TSRemoteDesktop.sql Win32_TSSessionDirectorySetting.sql Win32_TSSessionDirectory.sql Win32_USBControllerDevice.sql Win32_USBController.sql Win32_USBHub.sql Win32_UserAccount.sql Win32_UserDesktop.sql Win32_UserInDomain.sql Win32_UserProfile.sql Win32_UTCTime.sql Win32_VideoController.sql Win32_VideoSettings.sql Win32_VirtualDesktopSession.sql Win32_VoltageProbe.sql Win32_VolumeQuota.sql Win32_Volume.sql WorkerProcessContainsAppDomain.sql WorkerProcess.sql
How do you even manage to become a programmer without knowing the difference?
It is critical foundational knowledge. You have no business coding anything significant if you can't understand the concept and implications of the two.
You should be aware that the value type's pass-by-value/copy behaviour has no real association with it being on the stack or the heap. IIRC, a variable existing on stack memory is an implementation detail of whatever CLR is executing the code. Whether or not something exists on the stack or the heap is (typically) irrelevant, though developers can certainly use that knowledge to their advantage for _performance_ considerations. But by and large, stack vs heap should have no bearing on the resultant behaviour of the executing C# code. That is, with your code example, if the runtime decided to store `min_altitude_for_explosion` on the heap, the code should operate the exact same way with the same pass-by-value/copy semantics.
I'm confused as to what you are trying to show here.
Will give it a look thanks.
Hello again Videl, I have done some experimenting and for some reason this just always returns the instance error: CS0236 Has anyone got any further ideas?
Pretty sure it's a utility that when given JSON, it will produce a corresponding C# class that can be used to serialize/deserialize that JSON data. Not unlike Visual Studio's [Paste XML as Classes](https://docs.microsoft.com/en-us/dotnet/framework/wcf/generating-data-type-classes-from-xml) functionality. Unfortunately, Visual Studio [already has the Paste JSON as Classes feature](http://csharpcorner.mindcrackerinc.netdna-cdn.com/article/how-to-paste-json-as-classes-or-xml-as-classes-in-visual-stu/Images/4.png), I think since VS2015 and 2012 if you installed its Web Tools updates. So it'd be nice if /u/markprobst described what benefits his utility has over the built-in VS feature. Regardless, useful for those using a different IDE than Visual Studio.
1. The name might be a bit tough to search for. There are already projects named quicktype, the biggest one is probably the ios keyboard 2. Is there a way to control the output so it doesn't generate JsonProperty attributes? I'd rather just set the ContractResolver on JsonSerializerSettings to camelCase and keep the generated types cleaner (though this is probably less important for generated code). 3. I think code generators should almost always create partial class declarations so if someone wants to extend them, they can keep their code separated. 4. Plans to support [JSON Schema](http://json-schema.org/examples.html) maybe? 5. What are the plans for releasing this? Open-Source? Plans for a command-line? Any IDE integration? 
What even is this?
You'd be surprised. I'm new at this firm and I'm using ABL with Progress OpenEdge. Some of the developers have been using this technology for 20+ years, and yet some of these developers when asked have no idea about stack vs heap... 
Exactly my response haha 
Ok thanks, more information is never a bad thing.
Thank you for the feedback! 1. Good point. 2. We will have ways to customize the output. I'll look into the particular case you mention. 3. Same here. 4. Yes. 5. We're working on a command-line release. No concrete plans for anything further yet.
Nope, it didn't help. Tbh I'm still not 100% sure if I know the difference.
I don't know that number (never pay attention to them) but "instance error" sounds like you need an object. Where are you putting the code? You should have a button on your winform and execute the code in that button's Clicked! event. If that isn't helpful, show your code and specify where the error occurs.
http://json2csharp.com/
So, there are two things I can think of in regards to "object references." The first is passing an object to a function as an argument, and the second is the error you mentioned ("object reference required"). For the first, look at the following code: public class Program{ public static void main(){ TextBox SomeTB = new TextBox(...); SomeTB.Text = "Something"; DictionaryClass dic = new DictionaryClass(SomeTB); Console.WriteLine(dic.MyTextBox.Text); // Prints "Something" SomeTB.Text = "Something Else"; Console.WriteLine(dic.MyTextBox.Text); // Prints "Something Else" } } public class DictonaryClass { TextBox MyTextBox; public DictionaryClass(TextBox MyTextBox){ this.MyTextBox = MyTextBox; } } The DictionaryClass takes a TextBox as an input, and stores this in MyTextBox. In the main function (or where-ever you decide to put your code for creating the DictionaryClass object) creates a TextBox (substitute "..." with actual stuff, since I wrote this right here), and sets its text to "Something". after creating the dictionaryclass from that textbox, its textbox should also contain "Something". Now, if we change the text in the textbox, it should also change for the dictionaryclass' textbox, because it doesn't have an actual textbox, but rather a reference to the same textbox as SomeTB. Think of it like this: http://imgur.com/RIRxADp The SomeTB and MyTextBox are actually references to the actual text box, and we are sending and copying a reference. --- The second, the error you mentioned, is like this: public class Program{ public static void main(){ MyNonStaticClass mnsc = new MyNonStaticClass("Something"); MyNonStaticClass.MyStaticMethod(); } } public class MyNonStaticClass { public string MyNonStaticField; public MyNonStaticClass(string SomeString){ MyNonStaticField = SomeString; } public static void MyStaticMethod(){ MyNonStaticField = "Something Else"; } } We create a non static class, and then create an instance of it in the main function. When we try to run the "MyStaticMethod" function, though, there will be an error (in fact, the IDE will tell you and not let it compile). This is because a static class is trying to access a non static member. What does this mean? A static method or member means that there is one instance of it for the entire class. This means rather than saying `mnsc.MyStaticMethod`, we instead write `MyNonStaticClass.MyStaticMethod`. Now, what happens when a static method tries to get a non static member (variable, field, or property)? The method will not know which member to get. This is because there is only one instance of the static method, and one instance of the non-static member for each instance of the class. If you have 1,000 (or 1.000,0) MyNonStaticClasses, then there will be 1,000 MyNonStaticFields, but only 1 MyStaticMethod. 
You can use one of available Java launchers, package the app into an installer or perhaps write a generic/configurable launcher for your apps (even in .NET). A change of language to solve that particular problem seems like an overkill but there might be other things that I don't know of.
Yeah, Spring is a behemoth of a framework. Luckily there is Spring Boot :)
Thanks, I've been looking into it. Telemetry is not bad by itself but the way it's been enforced on users, opt-out by default is quite worrying to me.
I know the difference, just hasnt been useful knowledge to me ever.
This one : https://www.visualstudio.com/vs/visual-studio-mac/ i am talking about. A Xamarin Studio 2.0 with .NET Core and Asp.Net Core Support. 
Not sure if I understand. Visual Studio 2015 Update 1 had a "Go To Implementation" feature added and I've been using it just fine. EDIT: And not sure why you would want it to jump to "interface types and members"; they're not the implementation. Do you mean "Go To Definition"?
F12 is go to interface and ctrl + F12 is go to implementation. This doesn't work?
F12 is go to definition, really.
As others said, CTRL+F12. You can use it regardless of it being an interface or not.
That's a bit exaggerated.
N-state Markov chain can easily be mapped to 1-th order Markov chain, which can be represented as a table of transitions between states. That approach leads to very simple models out of use in many real word cases. More practical models can be obtained with Hidden Markov Models, are you planning to consider them?
Well, I wouldn't hire you if you didn't know the difference and I've hired hundreds of people over the years.
Yes, it's called ReSharper.
&gt;&gt; I'm trying to break away from R# &gt;Yes, it's called ReSharper. ...
I'd break away from Visual Studio before I'd break away from ReSharper. In fact, I already have... happy [Rider](https://www.jetbrains.com/rider/) user and will never look back.
ok i understand what a static is, But i still don't know how to reference an object in code. public class Program2 { public static void main() { MyNonStaticClass mnsc = new MyNonStaticClass("Something"); MyNonStaticClass.MyStatic_Method(); } } public class MyNonStaticClass { public string MyNonStaticfield;// MyNonStaticstring = "something" public MyNonStaticClass(string SomeString)// SomeString = "something" { MyNonStaticfield = SomeString;// self explainitory } public static void MyStatic_Method() { MyNonStaticfield = "Something Else";// trying to set a static Variable with a non-static Variable } } In ---MyStatic_Method(){MyNonStaticfield = "Something Else";}---MyNonStaticfield is asking for an object reference.(also i started a new project to review this code with less useless code to distract me)
I want to be able to cycle through all usages of something. I used to be able to do that with Resharper.
If you ever get a StackOverflowException, knowing the difference will certainly help. 
Could you explain what the "new" keyword does, and why you need to use it in some circumstances and not others? Of course, it's possible to just learn by rote when to use it, and when I'm teaching people who are new to programming, this is exactly how they learn. (And for that reason I'd disagree with the post you were replying to, which says you can't become a programmer without knowing the difference.) But there's a big difference between someone who knows a skill because they've learned the steps to accomplish that skill by rote, and someone who truly understands what they're doing and why in order to accomplish the same thing.
So, you are trying to set `MyNonStaticfield`, which is **not** static from a **static** function. This means that the `MyStatic_Method` needs a specific instance of `MyNonStaticClass` to get `MyNonStaticField` from / set `MyNonStaticField` in. Rather than setting a static variable with a non-static variable, as you commented, you are setting a non-static variable with a literal. Literals are just a hard coded value, like 6, 5.5f, "something", etc. To fix this, you have to pass a specific `MyNonStaticClass` for `MyStatic_Method` to get the field from: public static void MyStatic_Method(MyNonStaticClass mnsc) { mnsc.MyNonStaticfield = "Something Else"; } Also see: public class MyNonStaticClass { public string MyNonStaticfield; public MyNonStaticClass(string SomeString = "something") { MyNonStaticfield = SomeString;// self explainitory } // EVERYTHING BELOW THIS LINE IS STATIC public static void MyStatic_Method(MyNonStaticClass mnsc) { mnsc.MyNonStaticfield = "Something Else"; } } In this case, I made a comment that says, `EVERYTHING BELOW THIS LINE IS STATIC`. There is one instance of everything below that line. Everything above that line exists for every `MyNonStaticClass`, so doing the following: MyNonStaticClass a = new MyNonStaticClass("A"); MyNonStaticClass b = new MyNonStaticClass("B"); means that `MyNonStaticfield` in `a` is `"A"`, and `MyNonStaticfield` in `b` is `"B"`. Because of this, we have to pass a `MyNonStaticClass` as an argument (shown in the first code block), so it knows **which** `MyNonStaticfield` it should be using. That is referencing an object. BTW, you may notice that I wrote `string SomeString = "something"` as an argument in the second code block. This is known as an optional parameter. Basically, if you do: `MyNonStaticClass c = new MyNonStaticClass();`, `c.MyNonStaticfield` will be `"something"`. If nothing is passed for an optional parameter, then it will be initialized to whatever is written in the arguments.
There's stuff like Avalonia UI that let you make cross-platform GUIs with .NET Core. Native support would be sick but can't see that happening anytime soon. edit: just noticed someone else mentioned it earlier, fml
It's useful to me in game development using the Unity engine. Stuff on the heap requires garbage collection, which is slow and causes horrible lag spikes in gameplay.
I was trying to find out if i could add optional parameters weeks ago(google often fails me...) now i know. But anyway, So to reference a custom class i have to: &lt;ClassNameHere&gt; ClassName = new &lt;ClassNameHere&gt;(); and i reference it by the identifier "ClassName" , But if i want to reference a textBox i would: Form1 FormName = new Form1; string strg = FormName.textBox1.Text; But this would "create" a New textBox(which now is " ", Instead of whatever i had put inside the original textBox1), Or am i still wrong?
What exactly is the program meant to do?
for i: while sick; you maybe won't recover from this illness it seems unbreakable. what are you having issues with a pre-made code won't help you what are you up to what have you planned out so far? 
You are correct. Creating FormName **will** create a new textBox, also called textBox1, that is unique and distinct from another form's textBox1. Its text **will** be "". But, you can access both of them, by doing `FormName.textBox1`, and `&lt;SomeOtherForm&gt;.textBox1`. If textBox1 were static, it would **not** have created a new textBox, and FormName.textBox1 would not be valid (the IDE would tell you something's wrong) And about strg, changing the text of the textbox will **not** change strg. This is because strings are **value types**, while objects are **reference types**. They are stored a little differently in memory ([as seen here](http://net-informations.com/faq/general/valuetype-referencetype.htm)). There is a way to pass references to value types, using the `ref`keyword in arguments, but as you are using objects, there is no need. Also, there is no need to use ref for your purposes. Edit: also, sorry for posting walls of text...
It is built in to visual studio so it is hard to see how that will be useful
Walls of text relay information better than single sentences(or none at all) so it's very welcome. So let's start from the beginning, if i make a new winform project, add a textBox, the (default)form (the one that starts with the project) now has a textBox, But no identifier(i think). so how would i take what's in that textBox and use it in a class? With no identifier i can't call it by name, and it will either "Not exist in current context" or "object reference required" without that, So how would i access it? (Sorry i am very bad with communication and feel like we have been going in circles...) 
Is the VS "Paste JSON as Classes" lacking any features you wish it had?
Whats wrong with "Find all references"? Its not as good as R#, but it works similarly in most cases.
I'd like to be able to press the same shortcut key to iterate through the results.
You would have to create it with a reference to the textbox MyClass something = new MyClass(textBox1); and then store that reference / use textBox1 when creating the thing, or just pass a reference for the function something.DoAThing(textBox1); and `something` is created in the form. Now, within the constructor for `MyClass` (`public MyClass(TextBox a){...}`), you can use textBox1, and within `DoAThing` as well. (Don't worry about it :) ) p.s. Identifiers are the names you give to "namespaces, classes, methods, variables, and interfaces," so it does have an identifier, "textBox1", within the form, and whatever name you use as the argument for the function.
Not usually. The most common StackOverflowException is mistakes in the exit clause of a recursive function.
Post the assignment/spec. I want some practice over the holidays
I have 4 or so of them running. Some of them catch what others miss. If it starts causing performance problems, remove `em. 
No idea. I don't use it. :P [I'm an XML serialization guy.](http://s2.quickmeme.com/img/e0/e09a9cb80e3e3087d1a84b6762a5f475e5404b6d915185e7da6775ec8cc63210.jpg)
How do you use the built in one?
Maybe for video games or high performance code (GPU matrix calculations, high level algorithmic work or something like that), but for most web apps I'd take a developer that understood transactional concurrency over stack/heap optimizations any day.
I would love a copy if you wanted to work something out
It should be in edit -&gt; paste special, json to class. If it's not there in your version of vs you may need to install Microsoft web tools extension. 
Most inconvenient converter. Does not add annotations for naming and does not name properties properly in CamelCase. And made by my previous boss.
Is "Paste XML as Classes" lacking any features you wish it had? ;-)
Could you copy the exe to the user's temp directory and run it from there?
1. Reinventing the wheel. Visual Studio already has a Paste as JSON feature, almost entirely negating the usefulness of this tool, even more so with tools like [JSON2CSharp](http://json2csharp.com) out there, but disregarding this... 2. I do like the JSON.Net format over Visual Studio's default format. Well done. 3. I'm not entirely sold on the `Converter` class. Most developers would opt for the `JsonConvert` methods directly due to the `JsonSerializerSettings` support. Only real use for it that I can see can be mitigated due to point #4. 4. I _really_ don't like this `OneOfThisOrThat` handling of ambiguous data. If there is any ambiguity, handle it as an object and let the developer deal with it. Adding handlers for this makes the code needlessly complex and makes your job much harder. 5. Don't try to handle unions yourself. With more complexity, the overhead classes will make the code entirely unmaintainable. 6. I don't even know _how_ you're making the determination that the `us-average-temperatures.json` field `data` consists of a dictionary. This seems to be a huge assumption based on similar property names. I've tested this with real world data (REST APIs and GeoJSON) and have found the same problems and assumptions. All in all, the reigning theme here that I'm detecting is a lot of assumptions _for_ the developer. I personally can't use this tool based on that alone. At this rate, Visual Studio's tool is much better at handling the information, although it's not perfect. It seems like this tool is striving too hard to be all-encompassing when it really doesn't need to be.
Car rental places have cars. Cars have rates and a rental status. Ui triggers updates to storage (however you do it). You'll need to calculate rates. Ready? Go!
Are you suggesting that the `data` field in `us-average-temperatures.json` shouldn't be a dictionary? If you were writing this code by hand, what would you represent it as?
Also more generally, are you saying we're making the wrong assumptions, or that no assumptions can or must be made in principle? Thank you for taking the time to write such detailed feedback, by the way. We really appreciate it.
Technically, that _would_ be my solution to that data, but I'm more concerned about how it determines when to resolve a dictionary over a class. Pretty much every JSON-&gt;CSharp tool around simply resolves these as classes, because _you don't know whether a developer intended it that way_.
What I'm getting at is, try to keep the assumptions to a minimum. Tools like this should basically convert the JSON verbatim, and let the developer handle it. That's what they get paid for :)
Nope, I rarely use it. I'm usually the one generating the schema in the first place so I start with modelling the C# class anyway. The odd occasion I have used it, I just did it to get the ball rolling on some ridiculous 3rd party data then tweaked the classes afterward.
Removed: Rule 4.
Sorry for the lack of explanation! We've written a small post explaining the difference: http://blog.quicktype.io/2017/previewing-quicktype More to come, thanks for taking a look!
Yes, we felt json2csharp was pretty lacking too! We've written a small post explaining the difference: http://blog.quicktype.io/2017/previewing-quicktype More to come, thanks for taking a look!
We've written a small post to explain it: http://blog.quicktype.io/2017/previewing-quicktype Thanks for taking a look!
What platform are you targeting?
linux. I've been doing more googling, it seems I can extract the file to a location and run it, however it seems like it should be encrypted and stored in memory not disk.
I have my own converter extension for VS2017 which can convert JSON or JSON schema to C# classes with annotations (set by options)
You can add it as a resource like any other file.
Cool, what options do you use the most? We will add options soon.
If you absolutely need to do this (and I highly recommend exhausting all of your other options first), just encode the binary with something friendly (base64 comes to mind) and store it as a string (or several strings) in one of your source files. Then just join the string, decode it, and write it somewhere accessible like %temp%. Then execute. That being said, please don't ever do this. Just because you can doesn't mean you should. 
I was speaking of the "Identifier" of the first Form. I don't know what to call it (if that makes ANY sense)...if i go and : Form1 MakeNewForm = new Form1(); it makes a whole new set of objects(i think) like the textBoxes, which means they will be empty so any reference to them means nothing (unless i'm an idiot and can't see the obvious)... Maybe instead of me wasting your time, you just give me some links to some videos about this topic.I really dislike how much of your time you have wasted on me and my stupid questions...
Namespace and JsonProperty.
I try to stick to a library with a compiled dll, but in some cases it's just easier to use a snippet.
Thanks. I actually did a bit of research and think I found a solution that I like. I'm adding the the library projects as existing projects to what I'm currently working on, so if I need to go in an edit the libraries they'll always be up to date in my current project without having to rebuild the dll. After everything is hooked up, I'm using https://github.com/Fody/Costura#merge-assemblies-as-embedded-resources to compile the dlls into my exe so I have a clean output directory. So far it seems to be working well.
Its a pain to manage, but you could also create a standalone library and link it in through nuget and host your own feed somewhere. Might be worth the time if you are using something that can host nuget feeds for you like VSTS. This would matter more if your projects aren't all related and you don't want to keep them associated together in a single solution. If you they will always be in the same solution, then just adding them as an existing project is the best way (what you mentioned in your other comment).
Achieve eventually consistent what?
Actually, they aren't "empty." If you look at the main form code, you will see that the `Form1` constructor calls the `InitializeComponent`. The `InitializeComponent` method is in Form1.Designer.cs (click the arrow next to Form1 in the Solution Explorer), and it initializes the textBoxes. Also, you can just avoid the references and pass values instead, by doing: public static void MyFunction(string SomeText) { Console.WriteLine(SomeText); } and then doing WhateverClass.MyFunction(textBox1.Text); Your questions aren't stupid. They are actually getting at one of the main issues people trying to learn c++ have: pointers. You can think of the identifiers for the form and textboxes, which are objects, as being a little like pointers. Pointers are a variable that ["points" to another variable](http://imgur.com/u66zUv7). Now, you can "reference" the object by giving another object or function this pointer: public void doSomething(Form1 aForm) public SomeClass(Form1 aForm) If that object saves the reference as `aForm`, then you now have two pointers. If you passed the form `MakeNewForm` to some class: SomeClass b = new SomeClass(MakeNewForm); ... public SomeClass(Form1 aForm){ this.aForm = aForm; } then [you would have this](http://imgur.com/a/h5hP3). aForm is like a pointer, saying, "hey, that form you want is over there" **That** is what a reference is. You may wish to check some of the documentation [here](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/objects), [here](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/class), [here](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/passing-reference-type-parameters) for value references, and [here](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/methods) E: and don't worry about it, I don't mind. I'm writing a textbook right now, so it really helps with figuring out how to explain things to others
You can use onload event in winforms. For WPF you can bind to list in your ViewModel.
I'll get to reading those links right away. :)
This would be the "real" solution if it's something you're doing frequently and not just a pet side project, particularly if you're not the only one using these shared libraries. Like he said, VSTS does it, so do all the other CI tools. You could even write a pretty simple Powershell script to do it manually and add it as a git-commit hook. There's also the old git submodule approach. Each "shared" project in its own repo and you add a submodule to each project using it. At least then you don't have multiple (non-automated) copies of the same code anywhere and you don't have to know that another independent project is checked out in a particular directory to include it (if everyone working on it has to have everything checked out under C:\Code\ you've done it wrong).
Why? The only reason why you would want to encrypt it and store in in memory only would be to make it harder for people to get access to the binary. Unless that is a requirement, I would just write it to temp storage and run it from there.
I've only done minimal work with Alea and Cudafy, but in general it's very easy to get something running on the GPU, but much trickier to see meaningful performance gains from it. To understand if it will help you, you need to understand the amount of data you need to process and the amount of computation you need to perform on that data. If the amount of data is high and the amount of processing is low, it's probably not worth the effort, the overhead of transferring the data to the GPU will outweigh any gains in processing time. If the amount of data is low and the amount of processing is high, then it's probably worth taking a look. 
Not much in life as a business programmer. Garbage collection cleans up a lot of possible memory leakage, and wire time tends to dominate execution times to a large degree in the usual mix of web, database, and microservices. Combined with the limited control we have as programmers over where the system decides to allocate an object, it doesn't tend to come up, much. Understanding the distinction between value and reference type is much more useful, and not really the same thing.
Thanks for the feedback. I think hosting something via Nuget may be a little over my head at the moment. I'd also want to ensure that it remains private for the time being, so for now I will add them as an existing project and see how things go from there.
What is your usual use case for tools like this?
What do you like about rider over VS? I've been meaning to check it out.
Right now only deserialization works, but serialization is coming soon.
Could you perhaps give an example of what you mean?
You can go about your dev life without knowing the difference, but if you do know you have potential to be a very good developer. You SHOULD know the ins and outs of the tools you are using (C# in this case).
Yes, though how has this helped you in C# programming?
Hey, its about making a program for car rental. You can chose between 3 different types of cars with 3 different prices. The prices depends on the number of days(with a day rental price) and the number of km(with a kmprice). When the customer returns the car, the program should calculate how many km and how many days it have been used for and then showing a price for the customer 
Hey, its about making a program for car rental. You can chose between 3 different types of cars with 3 different prices. The prices depends on the number of days(with a day rental price) and the number of km(with a kmprice). When the customer returns the car, the program should calculate how many km and how many days it have been used for and then showing a price for the customer.. :)
Could you explain the issue without uploading files to dropbox? Poste code and wrong &amp; right output here. Would make it easier for me to help you (I'm on mobile).
I don’t think you understood the question. It’s not about two data structures. It’s about two places data can be stored in a program (I.e., “the stack” vs. “the heap”).
It's obviously supposed to be "eventual consistency."
Thanks for the reply. I definitely want to make it as easy as possible. However, I'm pretty new to all of this. Could you tell me the the best way for me to post/share code?
Use code highlighting reddit built into comments/posts, or use sites like pastebin/hastebin. For small code reddit's highlighting is preferred. (Indent 4 spaces on every line)
WriteLineAsync does just that - it writes your text as a line and then moves to the next line. You need to concatenate the things you want on one line, i.e. await sw.WriteLineAsync(label_Name.Text + " " + txtName.Text); (string interpolation or String.Format would be better but I used the + syntax for the sake of clarity). Alternatively you could use WriteAsync and do your newlines manually by writing out an Environment.NewLine.
 private async void btnExport_Click(object sender, EventArgs e) { using(SaveFileDialog sfd = new SaveFileDialog() { Filter="Text Documents|*.txt", ValidateNames = true }) { if (sfd.ShowDialog() == DialogResult.OK) { using(StreamWriter sw = new StreamWriter(sfd.FileName)) { await sw.WriteLineAsync(label_Start.Text); await sw.WriteLineAsync(label_Name.Text); await sw.WriteLineAsync(txtName.Text); await sw.WriteLineAsync(label_Center.Text); await sw.WriteLineAsync(comboBox_Center.Text); Output: START NAME TEST CENTER A90 Desired Output: START NAME TEST CENTER A90
I hope I did that right...
1. Using `async void` methods is bad practice. Consider using `async Task` methods and throw the result away. `Async void` methods handle exceptions really bad. You need to create a new `async Task` method and then call that from the `btnExport_Click` function. 2. Just use `WriteAsync` instead of `WriteLineAsync`. `WriteLine` theoratically appends a `\n` (new line character) before every write. (You could also do a single .WriteLineAsync() call and put the whole string you want in there (e.g: `firstLine + "\n" + secondLine1 + " " + secondLine2 + ....`) (use `$""` (string interpolation) tho. It's much cleaner)) Edit: formatting
Make a project and include it in the solution or import the dll. If you include the project in your solution it makes it easier to jump in and create an extension method if required
Wow, thanks for breaking that down! Per an old forum I read, I had actually tried your given example earlier *but* with ampersands instead of plus sign. It did not work. The user below suggested your example as well and it works! I will note that using async void is bad practice. This is like learning a second language and it's difficult to know how to form your foundation. I've really only been researching the thing I needed at that moment. Do you have any guidance or suggestions going forward?
Thank you, this worked! I had actually tried that earlier *but* with ampersands. It did not work. It's amazing how many different way you can write something. Forums can be overwhelming because each user approaches things their own way. Do you have any tips you could share? 
I would suggest learning the basics via an online course, once you got that just write stuff. Make small projects that either are just for practice, or make useful tools. Good luck! Btw: String concat with ampersand operator is used in VB.NET (Visual Basic), you might have found that.
In this context “hosting” via NuGet means making a directory, sticking your package in it and adding it to the list in NuGet settings. 
Hi I have been reading a little about hidden markov models, and yes it is something that I am interested in trying out, though I still need to get my head around it :) 
If this is just a personal project, then this would work nicely for you. 1. Create the standalone library 2. Create a nuget package from it 3. Place it in a folder on disc 4. Add a refrence to that folder as a new nuget feed https://docs.microsoft.com/en-us/nuget/hosting-packages/local-feeds It's a much cleaner approach than copying files between projects
Firstly learn how to use string interpolation or String.Format, using + isn't really bad but it gets messy. Make sure you search for C# examples, not VS. If the suggestion used ampersands it was probably written in VB. StackOverflow is your friend. Learn to Google your problem several different ways until you find your answer. As a beginner the answer is almost certainly out there if you ask the right question. When you ask a question be very specific. If possible provide a small example rather than dumping your entire code. Read the comments and understand why people are arguing for or against something - if an answer is incorrect chances are that someone will explain why. If not it's a style decision. Try to develop a style which follows best practice where sensible but at the same time don't get too hung up on it, programmers sometimes go overkill. Async/await is incredibly useful but simultaneously dangerous because it involves threading (which beginners traditionally didn't do). Read about how it works BEFORE you start using it heavily.
Thank you very much, indeed looks like a nice book and i will get started with it shortly.
Thank you very much. I love Jeremy Clark's work and i think it's important the understand the basics first with the video you provided and then get into some deeper stuff.
Not sure if Fody is cross platform but I used it last time with a windows app. The dll's we're embedded in the exe and this made deployment a whole lot simpler. One downside to this approach though is that it triggers false positives with most antivirus products.
Seems like a free replacement (candidate) for NServiceBus.
Yes it has Alt+End which is nice, but Ctrl+F12 actually works better in this case, since it also works correctly when there is derived implementation.
I've been trying it out the last week or so, and I really like it. It's a good deal faster than VS+R# at least, and has a much nicer sub-window layout.
Is pattern matching in C#7 any help to you? https://blogs.msdn.microsoft.com/dotnet/2017/03/09/new-features-in-c-7-0/ see: Pattern matching; "Is-expressions with patterns"; and "Switch statements with patterns"
Prefer? It'd depend on the specific case... I always prefer the option that is easiest to understand at first glance, and ideally results in less lines of code. If there's only a few possible outcomes the "traditional" approach is likely simpler. But this rapidly becomes a tangle as you add more cases, so in a more complex scenario pattern matching looks like it might be helpful. Off the top of my head Exceptions are potentially a poor choice for two reasons: - Overhead. If the method is frequently erroring you are wasting time capturing the stack, etc without reason. - They force you to continue your logic inside the catch statement, which can be a real pain in the neck for structuring your code well.
Hey, you should check out codewars, specifically https://www.codewars.com/kata/getting-to-know-linq You try to solve the questions and after can see how other people went about doing the same thing, the community then votes on the best solution so you learn new more efficient methods.
Which part are you not understanding? ContactsView.Filter = o =&gt; _SelectedContactGroup == null || ((Contact)o).ContactGroupId == _SelectedContactGroup.Id; Break it down into the smaller parts: ContactsView.Filter = ...; This is an assignment to the `Filter` property of your `ContactsView`. o =&gt; ... This is a lambda, a anonymous delegate. It's basically an "inline" method. The `o` is the parameter passed to the method, and everything right of the `=&gt;` is the body. The body is an expression, and the result of the expression is the return value of the method. _SelectedContactGroup == null This just compares the value of `_SelectedContactGroup` with `null`, returns `true` if the value is actually `null`. || This is the logical or operator. If the left expression is true OR the right expression is true, the whole expression is true. (Contact)o This is an explicit cast. You take the argument `o` and cast it to the type `Contact` (presumably because `o` is of type `object`, but you **know** it's actually a `Contact` and need to access a property). .ContactGroupId Here you just access a property. And the last part is just a comparison again.
Thank you for the information. I just browsed the web page, and it looked good. I will try to solve the problems in a couple of days. (added)-------- I justed solved it. It was kind of easy. But there was no more. It was just one problem. I clicked Next, but it was not a LINQ problem. How can I get more LINQ problems?
If you're not using the TPL already, take a look. Also, you will speed things up by searching in memory using something like a TextureCache and searching based on something other than pixels, then refining down. But, unless you're doing this for a very large number of images concurrently (conversely a very large image, with a smaller template), then it may not be worth the work to implement a cuda interface. 
Try out exercism.io, most of their problems are in some way able to be solved with Linq. Furthermore, after you completed a problem you can have a look at the solutions of others. It helped me a lot when trying to get into Linq and improve my C# in general.
var answer = this.GetSiteCollection().Where(s =&gt; s.HasLinqExercises == true).ToList();
A lot of the questions in the c# questions use linq in the answers. https://www.codewars.com/kata/operations-with-sequence As for questions specifically only for linq I'm unsure, your question did sound specifically like this website so I thought I'd mention it! 
For a beginner a simple rule: Never copy; always reuse. Anytime you need to copy any piece of code (even a single line) you should immediately think you're doing something wrong and try to rethink your approach.
In the abstract, I prefer returned values over thrown exceptions. In the concrete, I think exceptions are probably more idiomatic for this sort of case. This may change as pattern-matching becomes more widely available (my employer, at least, isn't up to C#7, yet), especially if we get something like discriminated unions and a match statement down the road.
My specific case has to do with serving images similar to ImageResizer HTTP module. The caller can specify various options and the possible responses are more than returning the file and an error. There are various combinations of allowed options and the image might not even be present in which case I must return 404 but my service layer should somehow indicate that via exception or in the result (i.e. the service layer cannot just return 404)
In this case I am more interested about the different result patterns (single class with properties vs different types) rather than in the exceptions vs result debate.
To elaborate on this, CollectionView.Filter is a method that takes a [delegate](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/delegates/) of type Predicate&lt;object&gt; which is basically the same as Func&lt;object, bool&gt;. This lets you pass in any method that takes an object and returns a boolean value. This method is then executed against every item in the CollectionView, to determine whether it should be included in the filtered resultset. So if there's no _SelectedContactGroup then the result will be an empty list, otherwise the result will be every item in _Contacts that has a ContactGroupId equal to _SelectedContactGroup.Id
I assume you are already using pointers and unsafe and it's still not fast enough?
*Personally*, I'd probably go with different types and pattern matching, *but* I'd want to check on the performance characteristics of it vs. a struct or class with an enum and properties and switching on the enum. In a work context, I would probably prefer a 'standard' result with a boolean success flag and properties for the error and success values, even in a world where I was using C# 7 for work. Partly because of the lack of built-in discriminated union types, and partly because the average programmer is, well, average. It would depend a lot on whether I thought pattern-matching on types was an easier sell than a result struct with properties, given that I can probably expect pushback on not using exceptions for error conditions. I think that ruling exceptions out entirely is a bit of a false dichotomy, especially since you can trivially translate a method that returns A and throws B into a method that returns a union of A and B (and vice-versa).
If the choice is between those two options, I would prefer the derived class/pattern matching variant because (like exceptions), you can't just ignore the failure condition and misuse a failure result as a successful one. With a simple result object, one might be tempted to access the result value without checking the success status first.
Yeah I am not some extremist anti-exception guy. I just counted that I would need 3 catch blocks and that seemed like a bit too much. This is a work project but it is greenfield and I am the sole backend dev for now. I can kind of set the standard :) 
I guarantee you have used both the stack and the heap. Nearly every non-trivial program uses both. They’re fundamental to how programs work. In general, local variables live on the stack, and `new`/`malloc` gives you memory from the heap. It’s important to know the difference because the lifetime of each is different. A stack variable lives only as long as the function call, but a heap variable lives until it is garbage collected (for GC languages) or explicitly freed (for non-GC languages).
Did you ever get this sorted out? You're definitely looping on the thread creation and exhausting threads that way.
I'm used to working with a lot of mediocre-to-fair developers and working in a place with a kind of overbearing and not very well documented 'coding standard'. The logistical and political details are a bit more important in my situation, even if I were doing greenfield work. (I'm not saying this is universal, but it's been what my experience has taught me to expect: new ideas will either be misunderstood or challenged. I *really* hope YMMV!) In that context, using exceptions for error conditions is both conventionally idiomatic, and very basic C#: any developer worth anything will understand and recognize what it means. In regards to whether 3 catch blocks is a lot ... it's only a lot if the exception handling code is all or mostly duplicated, and I'm not sure how pattern matching solves that in a way that's better. I'm not even sure there's less ceremony, just *different* ceremony--and you may still need a try-catch, depending on context.
Got the node right! but how can I find by XPath? //*[@id="ext-gen311"]/div[1]/table/tbody/tr[1]/td[2]/div/a hoping to use HTML agility pack much simpler in scrapping
I'd say the pattern matching code is better ceremony :) I expect more developers to be added to the project (lets hope it is successful enough that it makes sense), potentially mediocre but they will come one by one and while they can still misunderstand pattern matching at least they won't be able to challenge it because they are not in a group :)
The data is loaded into the page by the Javascript. HTML Agility Pack only sees the page before the data is loaded so it cannot retrieve the data for you. You can see this by going to the page then doing a View Page Source. The PSEi data isn't present in the HTML. It is only loaded later by the Javascript. You need something that executes the Javascript on the page in order to get at the data.
Consider using Serialization. There are tons of libraries for .NET to (de)serialize objects. I recommend Newtonsoft's [JSON.NET](http://www.newtonsoft.com/json) for it's simplicity. Create a class that will be your Business Object which has all properties you need (Window Size, Window Position, and others) and the serialize it in e.g. a .Save() method with JsonConvert.SerializeObject(...);. I'm sure you will be able to figure this out on your own. **Edit**: Should've read the whole code - you're already using XML serialization.. It's a good idea to have a class/struct that holds properties (e.g. "Preferences"), and a PreferencesManager that will have the `Preferences Load()` and `void Save(Preferences prefs)` (static) functions. This way you can easily add new properties only by adding them in the Preferences class/struct. If you really wanted to save "a form" then override the form's properties you want to use, and mark them as Serializable. Then you can just serialize the form object (.NET's default XML serialization will only serialize properties with the `[Serializable]` Attribute). (I wouldn't recommend you doing this though)
A product of nullable properties (A+1)(B+1)(C+1)... can express an arbitrary combination of success and multiple errors. If what you really have is just one success or one of many errors, consider expressing that with a pattern-matchable sum. If you have either one success or a combination of errors, combine the approaches with a pattern-match at the top level that includes an Error case that has multiple properties.
Ok so seems i am on the right track. So can i make a method in my SettingsManager like: public void SaveObjectSettings(object _object) { location = _object.location; size = _object.size; } And then depending on what kind of object i call it with save different data? Like if i call it with a Form, i can access the Size and Location from the object, that seems to work, but how do i make sure that the object is a form?
The `SaveObjectSettings(object obj)` should just serialize the object with XML serialization without knowing what type it is. It will serialize all properties that are marked with `[Serializable]`. So just mark all the properties you want saved with that attribute. (e.g.: [Serializable] public int Form_Width { get =&gt; this.Width; set { this.Width = value; } ) Then call the Save method with the form. Only `Form_Width` will be saved.
Saying that a single line should not be copied is a bit anal imo.. I tend to stick to the rule of not copying units of code (methods and such). If that line for instance can be used as a full method then by all means make it a method and reuse it as a dependency.
Where do i mark the properties as Serializable?
Yes I am 'stitching' up to 75 4k images, using needle/haystack approach. 
Thanks for the info. The app is setup to stitch screenshots, so standard computer res images. Upwards of 75 in number potentially. 
Are there any benefits to be gained from a multithreading or parallel processing point of view?
I gave you an example. Use the [Serializable] above all the properties.
Why bother with the .Is(X =&gt; ...) methods? If you expect a certain string, you can just stick it into the Setup lambda. I've never needed to use the Is method, except for when I just want to match *any* instance of a type. Have I missed something about the Is methods?
He should take a look at NSubstitute which is much more concise than Moq imo.
&gt; I have been out of the C# for a while I would like to get back into it, it's pretty simple: Have you used while(true){} ? (just kidding) If you use discord it's pretty fun to set up a discord bot. Also check out https://market.mashape.com they have some interesting API's that might give you some ideas of apps to make. 
Have you looked up Dapper? It would at least encapsulate most of your boilerplate around executing queries and mapping back the results.
Yeah, for an image scanning/pixel-comparison type of algorithm, almost definitely. It's also possible that switching to parallel processing won't work with or improve your current algorithm, but maybe it opens up some new options for you. Like switching to a different algorithm that's a better fit for parallel processing and also makes the detection more accurate / reliable.
Chain: var packages = DataSource.Sql(sql, parameters).ToCollection&lt;Package&gt;().Execute(); `DataSource` is a thread-safe abstraction over the database connection so you don't need to worry about creating and disposing connections. https://docevaad.github.io/Chain/Introduction.htm P.S. This uses a combination of reflection and runtime inspection of the database so you never have to deal with DBML style files.
Why settle with most when you can get rid of all of the boilerplate? Dapper: IEnumerable&lt;Dog&gt; dog; var guid = Guid.NewGuid(); using (var connection = new SqlConnection(s_ConnectionString)) { connection.Open(); dog = connection.Query&lt;Dog&gt;("select Age = @Age, Id = @Id", new { Age = (int?)null, Id = guid }); } Chain: var guid = Guid.NewGuid(); var dog = s_DataSource.Sql("select Age = @Age, Id = @Id", new { Age = (int?)null, Id = guid }).ToCollection&lt;Dog&gt;().Execute(); ; https://github.com/docevaad/Chain/wiki/A-Chain-comparison-to-Dapper
Nuget hosting? A drive, a share are excellent inhouse ways!
It is. I do this for a good amount of my debug methods. public void Log(string message, [CallerFilePath] string path = "", [CallerMemberName] string name = "", [CallerLineNumber] int ln = 0) { string fullMessage = $"[{Path.GetFileNameWithoutExtensions(path)}.{name}; ln {line}] - {message}"; } Ends up printing something like. [MyClass.MyMethod; ln 100] - Message!
Could you use a settings file instead? https://msdn.microsoft.com/en-us/library/a65txexh.aspx
Well... I'm a JetBrains fan overall and a long time IntelliJ user. So it is nice to have "one" IDE for everything, with one group of settings, one set of keystrokes to learn. No matter whether I use IntelliJ for Java, PyCharm for Python, WebStorm for Node, or now Rider for C#... my fingers don't have to "remember" that I'm in a different tool, because in essence I'm not. Each IDE is tailored to their particular language but each of them "feels" the same. Beyond that, nearly everything available in ReSharper is available in Rider. They have incorporated dotPeek so that when you look at anything - even things from closed source DLL's - you get a decompiled representation. It is cross platform so when I'm on a Mac or Linux (more and more these days) I get to use the same IDE. Rider isn't (yet) as fully featured as Visual Studio but I have seen JetBrains do this kind of thing in the past. They start small and focus on critical things and then within a few short years they crush the competition.
You _always_ benefit from asynchronous patterns when doing IO.
Yes but i am not sure where, in the Form?
That was my old approach, but someone sugested to do my own settings file, in that way you have more control of where the settings are saved.
It's useful for when an input parameter is a rich object. You can't necessarily do straight up matching because the reference might not match what is in your setup statement. You can instead use the Is method and define what properties inside the object that you care about are set to something meaningful.
Aha. I suppose that would be useful to inspect DTOs. In fact, I think I will use that strategy instead of capturing such objects in .Callback() to assert on them later. Thanks for the info!
I clicked the link on the FactoryPattern example and the author showed several simple examples in Java, C#, Python and PHP. The author seemed really excited about interfaces in C# (and I'm a C# programmer by instruction) but the example seemed much more complicated despite C# interfaces being an obvious and integral part to dependency injection. 
Yes, in the form. The form will get serialized. But because you only mark the width property as serializable, everything else gets ignored. So a form class will be created with default properties, but the saved width and height gets loaded. Again, I recommend you do not serialize the form directly this as this is very bad practice, you should use a seperate object/class for this. I have implemented this concept in [a small project](http://github.com/mrousavy/Fiddle) ([here](https://github.com/mrousavy/Fiddle/blob/master/Fiddle.UI/Preferences.cs)) (also saving Window dimensions, position, etc) Also you could end up with not initialized properties of the form that usually get initialized before the message loop by your Application when you serialize the form directly. (Win forms does this for you, it will probably be difficult to do this yourself)
Unless you're writing a simple console application and have no parallel requests. In that case the performance worsens.
Fair enough. If your app can't move on without waiting for the result of the IO _in any capacity_, then /u/AngularBeginner is correct and you should just be synchronous.
I've used Petapoco https://github.com/CollaboratingPlatypus/PetaPoco
Anyone know how to mock a method that takes a *ref* as a parameter?
http://www.newtonsoft.com/json
Pretty sure you don't have to manually open the connection with Dapper
Give this a try and let me know if it helps: http://www.quicktype.io It will generate the C# you need to work with this data, along with integration instructions.
Wow, I went through the same growing pains with Moq. Had tons of mock classes using the Factory pattern to keep the tests short, but there were so many of them that slight changes to the mock data would usually require a whole new set of mock classes or methods to support the testing scenario. Also, the longwinded names to help identify mock methods... Ugh. This is brilliant. I'm definitely using this.
NSubstitute seems to encapsulate the ideas presented in the blog post. If switching is an option, it would save a lot of effort. If you're already committed to Moq or some other framework, this serves as a best practice.
https://bitbucket.org/MDukhan/yeppp I've used it, its nice.
It depends. The best way to find out is to measure. You're the best tool (haha) for job. For the simplest things, using a Parallel.ForEach might give you the boost you're looking for without a lot of extra overhead. It can also depend on the nature of the problem. Are your tasks primarily CPU bound? Are they atomic and don't depend on external values or processes? Does it matter in what order they are processed? Even if your tasks are I/O bound, you can still benefit by making them asynchronous so that they aren't blocking each other or the main thread. Without knowing more about the problem, it's hard to advise more than that.
It's also worth mentioning that complicated "tasks" that seem to defy being made parallel can be tackled by breaking them into smaller sub-tasks and creating a pipeline or assembly line of tasks, where task processors are long-running tasks that process a specific sub-task type. Using a pipeline, an 8-core CPU can reduce the time to process an 8000 item list to the time it takes to process 1008 items. 
I'm working on this transition with one of my libraries, for a case when parsing user input fails (which can be expected at times). I switched from using exceptions to indicate an end of parsing or an error to a "Handle" method that forces you to consider all cases. It isn't built for the latest C# version, so no pattern matching, but is pretty similar. An example from one of my unit tests: var result = CliParser.Parse&lt;InfiniteNamedWithPositional&gt;( "-n one two three -- positional".Split()); result.Handle( opt =&gt; Assert.AreEqual("positional", opt.Positional), t =&gt; Assert.Fail("Trigger {0} executed.", t), e =&gt; Assert.Fail("Error parsing arguments.")); The result itself is something of a "union type" with flags: public class ParseResult&lt;T&gt; { private readonly bool HasValue; private readonly bool HasTrigger; private static readonly Exception[] EmptyErrors = new Exception[0]; private readonly T Value; private readonly ITerminatingTrigger Trigger; private readonly Exception[] Errors; public TRet Handle&lt;TRet&gt;( Func&lt;T, TRet&gt; handleValue, Func&lt;ITerminatingTrigger, TRet&gt; handleTrigger, Func&lt;Exception[], TRet&gt; handleErrors) { ... } }
Check out LINQpad.
Good article if you are going to use Moq anyway. Another thing I like to do which would fit well in the extended classes is mocking better default values for some things. For example you could setup Login() to always return true so you don't have to set it up each time. Most of the time on app flow you would only care about Login() returning false if you were testing that 1 case, all other times you don't want to deal with it.
Interesting and I get the reasoning but this seems to be like quite the heavy handed approach. You force the user to consider all the cases but he has to declare them with syntax that is less readable than the alternative.
Can you think of a good alternative that forces the (library) user to consider all cases? In this situation, the library is a CLI parser so if an "exception" goes unhandled it is surfaced directly to an end user (generally not the developer of the application), so it's better that the developer is forced to handle all cases than have your CLI application pop up an "unhandled exception" message box to the end user.
Perhaps, but you damn well better remember to close it. Something they usually omit from their examples.
Getting an exe file that people can simply run is just icing on the cake. Of course there are things that I'm missing in C#, most notably the diamond operator. But things like delegates (instead of interfaces for event handling), passing primitive values by reference and unsigned numerical types are what really warms my heart. It's the little things that don't seem to mean much, and it's possible to do without, but really simplify things if you have them available.
I cannot but maybe a result type with enum is good enough? I don't know maybe you are right. It just seems too heavy handed approach for C#. Ideally we would have sum types which would solve both problems but not today.
I use Marten. It's great. http://jasperfx.github.io/marten/
I put this together from a bunch of other random sources to try to get an understanding of the ZB64 that's nearly undocumented in the Zebra Programming handbook. I used this to have better control over QR codes, as they scale dynamically in size when more information is added. This is a major problem when you have limited space. Using this I am able to increase the QR code density rather than scale. This can also be used for logos, or unsupported zerba barcodes, or whatever else you could want to print.
[Sounds like a job for monads!](https://fsharpforfunandprofit.com/posts/recipe-part2/)
I wouldnt say integral. Helpful, certainly.
The using calls dispose which closes the connection.
Dapper, Massive, Chain, etc. basically use this approach. Look up micro ORMs. I've created a couple over the years that do something similar. My latest is SQLHelper.DB. But I use a class in it that I created that is a replacement for ExpandoObject. Basically adds a true dynamic type into C#... Well closer than what C# gives you anyway. Most of the others use ExpandoObject instead of a custom hash object. But the concept is the same.
Also if you're doing small queries on a local database, the overhead of async is greater than doing it synchronous. Which is why most speed tests comparing the two are usually fubar out of the gate. You get more if you can do things in parallel and have some latency.
Imho it is often better to capture them, because the individual asserts will pinpoint the erronous fields better than the "no performed invocations matches the expected setup" exception, and will be more readable than an overcrowded lambda.
A lot of samples don't show the connection instantiation, or don't show it in a using block.
True on all points. Dapper will follow 'What you hopefully meant to do' semantics. If you have an open connection, it keeps it open. If it's not open, it will open and close it. The only time I've seen myself manually opening/closing the connection is when I've been in a transaction.
Can you point me in the right direction to find more about using a TextureCache? My search results aren't coming up with much. 
Not offering much here, but MVVM is a hassle to implement without some sort of framework. If you decide to use one, I would recommend using whichever matches the style you feel most comfortable with.
As others have mentioned, you're spoiled for choice on Micro-ORMs. My personal suggestion is Dapper. It is what most people I've met in the wild use, and there's some tooling out there to help you get more out of it. Also, it's very close to the metal (as far as ORMs go), so if you ever wind up in the hell of '.NET shop with an Oracle Backend' it's not too bad to work with. 
&gt;.Where(s =&gt; s.HasLinqExercises) is shorter :P
That's an interesting method that seems perfect for this. I'll have to research that for c# though. Thanks Actually after reading about it, I'm not sure how it's really different from just making a class with a bool for success/failure, and a string for the result message. 
So go ahead and learn prism for this over just raw c# for MVVM?
It depends on what you are trying to accomplish. Do you want to learn MVVM or just make an application with the architecture?
Prism is made up of different features and you can use them a la carte. You don't have to use the shell &amp; regions features if you don't want to, but using the EventAggregator would allow your two windows to communicate with each other without tight coupling. For anything other than throw away code, I suggest MVVM when doing WPF dev. My team developed a large app that is ~800K lines of code using Prism, WPF, MVVM and 50 modules. Prism has some other MVVM features too, but you can mix it with another MVVM framework if you prefer, again Prism is a la carte. One window versus two: whatever makes for the better user experience. WPF will let you do either. Think of how you would use the app if you were the user. Good luck. 
Both. I have the MVVM structure down pretty well. All the views need to just bind directly to commands in the view model rather than having code behind them, where the view model does the logic and anything to the model updates and fetches to a DB for more info. To me it seems like all the ribbon features of the last 10 years are a result of MVVM? I'm looking to create many more applications within c# that deal with database connections and the like after this.
The EventAggregator is really what I'm digging into right now. Is that the best way to communicate and update between both view models? Does it allow two way communication or just one way? For example in my diagram... I need to create window 1 based on an item in window 2... though also want to be able to add an item in window 2, based on creating the item in window 1. Some of the examples I've used only have one way communication. edit: also is there an advantage to using the Shell from Prism rather than just base MVVM? My words and terms may be hard to follow since I'm just figuring this out as I am a self learner without education in any real comp sci.
It is one-way, but you can have 1 event going in the first direction and a second event going in the other. So, you can have a CreateWindow1Event that is fired from window2, and you can also have an AddItemToWindow2 event fired from window1. The payload of the events can be whatever data that will be useful to the code that handles the event, and the payload can be different for each event. Edit: saw you second question. The shell is useful when you have loosely-coupled modules that will inject different views into parts of the UI at runtime. For our large app with 50 modules, the user's role determines which ones are loaded at runtime and they can inject views dynamically at runtime. The shell has zero views or logic, is just a container for the modules. The modules are separate projects. Your scenario doesn't sound that complicated to where you are putting your two windows into separate projects, so I would not use a shell unless you just want to learn. 
Then I'd say go with vanilla C#. Don't forget to look up some examples of some MVVM helper classes!
I've done most vanilla c# until I now have to communicate between viewmodels and it seems Prism would help out here quite a bit. 
Well currently I am using the MainWindow to put in both Views on top of each other essentially. I am then turning one visible while the other is hidden, both on top of each other to take up the same space. I was curious if this is an ok practice or if I should use a Shell approach but wasn't quite sure if that was even correct. 
Based on your diagram, there shouldn't be that much view code. Just your two ICommands in Window1VM and your public-facing INotifyPropertyChanged-backed properties, right? (And of course the contents of Window2 view and viewmodel). Do you want a detailed example? I can provide one later if you like.
That's correct. Though I need Win1VM to pass to Win2VM on an Icommand to add an Item to it's list. I'm currently using Win2VM as an observable collection tied to a datagrid. I also need to be able to add an Item from Win1 to the observable collection in Win2. So the properties of Win1 are just the Item&lt;T&gt; while the datagrid of Win2 is an observablecollection&lt;Item&gt; of items. The outputs of Win1 need to change in real time of live edits to the Inputs of win1. That is all of the INotifyPropertyChanged-backed properties. These do not need to be edited in real time of edits to the data in Win2. These items need to be able to be saved as new items to the list in Win2. With that said, since there are not INotifyPropertyChanged-backed properties properties in Win2, should the list of Items on Win2 be an observablecollection? EDIT: I am redrawing the program and flow for you. Please see my other reply. http://i.imgur.com/mNJ0MEl.png
It's going to be easier to rewrite my response here: http://i.imgur.com/mNJ0MEl.png After further thinking, here's the new drawing. I need two views and two view models, one ViewList, one ViewOutput. The ViewList will have a Binding datagrid of Items. These items on ViewList should not need a INotifyPropertyChanged-backed property as it is only a list of data. That's unless below &lt;Issue#1&gt;. I need to then be able to select an Item and pass it to the ViewOutput view model. This page will only show 1 item and each input will have a INotifyPropertyChanged-backed property which needs to be displayed. These will then hook into a database to determine values required. I also need to be able to Add this Item to the List on ViewList. I have all of the INotifyPropertyChanged-backed properties completed and database connections working great. What is the best way to pass this Item to the other viewmodel and also communicate any changes on ViewList back to this item in the List? &lt;Issue#1&gt; If the user tries to live edit the item selected from the view list on the ViewOutput window, it will not live update the item on the viewlist. This is where the communication between windows would be required? I may just not include this feature at this time if it's difficult. I would need to create "Are you sure you want to save changes in ViewList or create a new Item?" type decision flow and can just remove that for now. Model public class Item : INotifyPropertyChanged ... ViewModelViewList List&lt;Item&gt; foo - bind to datagrid ICommands - bind to buttons ViewModelViewOutput Bind to Item Outputs change automatically due to InotifyProperty so now that I'm walking through this further... my main issue is the best way of passing the item from the list on ViewList to ViewOutput. 
I haven't played with it much but Linq2Db (https://github.com/linq2db/linq2db) might be a good option. A step above Dapper (Linq syntax not using strings) but below Linq2Sql as there is no change tracking.
I think I might prefer strings at this point.
You can .OrderByDescending(s =&gt; s.ranking) too. 
You know you can use strings in linqtosql in your current code base For example. Customer doesn't have to be in your dbml file as well. I think it can just be a POCO object. var customers = db.ExecuteQuery&lt;Customer&gt;(@"SELECT CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax FROM dbo.Customers WHERE City = {0}", "London");
I didn't say it's automatically wrong, just that you need to rethink your approach and decide whether that's the best approach. And I mentioned that that rule should only apply for beginners, as 9/10 copying is wrong. New developers should get used to trying to write code so it can be reused, as copying huge blocks of code is the most common mistake I see beginners do. But for the one-line it doesn't have to be created as a method, you can extract it as a variable/delegate (built-in classes like Func&lt;&gt; and Action make it very easy). You generally do not want to have exactly the same line of code in multiple places and if the lines only differ in one or two variables or actions that should also be made a method with parameters (delegate or just a normal variable). But when starting coding people generally think "hey I need the same logic here as well, let's just copy the code" and be done with it. So my approach is to answer never copy any code, try to figure out a way to make it reusable.
Google: Json deserialise c# Shouldn't need any other libraries, its all built in, and VS will let you PASTE JSON AS CLASS
&gt; Did you mean: Json deserialize c#
That's just shit 
This. Been using nsub for a few years and it is great
https://github.com/aspnet/EntityFramework/pull/8326. Removed in v2.0
I like enclosing mock declarations into their own methods and perhaps enclosing those methods into a separate class (just that all the fixtures can use them), but complicating it further just smells of fancy play syndrome. Mock declaration code is mostly there for testing purposes, it is not a publicly available library and doesn't have to be open for much further extension. Much more so than in normal code, it should imo be done in whatever way is practical at the moment, not necessarily just following some patterns for sake of following patterns.
Not too difficult with NSubstitute, even if not so elegant as other NSubstitute constructs: http://nsubstitute.github.io/help/setting-out-and-ref-arguments/ With Moq, AFAIK, it's a bit more convoluted: https://stackoverflow.com/a/19598345 
Just as with Java, strings can be null. You probably passed in a null `longString` parameter.
Probably what /u/TheMostCuriousThing said. But in addition to that, I would add that you should find a tutorial on debugging. It doesn't take much to learn the basics of VS debugging tools, and it will save you so much time and frustration - even in the short term.
I'm currently checking this, since it's plausible, but I highly doubt it. Edit: Why I'm doubting the gods of Reddit I don't know, but you were right. My program waits for the document to be loaded and then gets the source. However, the source loads just a fraction after the document itself. Since the other pages had other checks and this one didn't, this one got to ask the source before it was loaded, thus getting an empty string. This is also why it didn't show up during debugging, because me getting through the program step by step made sure the source had enough time to load. Anyway, I thank you /u/TheMostCuriousThing and I will make sure to put the spirit of redditors helping redditors by assisting a few people at r/excel and r/powershell 
Yeah I probably should. I kind of know how to do the basics, but I am not great at it.
[You can do a search for all problems that refer to LINQ.](https://www.codewars.com/kata/search/csharp?q=linq) Realistically you can just pick some problems that involve loops and try to implement them using LINQ as much as possible. Places like Codewars tend to involve a lot of 'clever' answers from people doing that kind of thing, so you can compare yours to theirs.
Dapper.SimpleCRUD is also a good extension library for Dapper 
Ah, I worked with the EPL printers. But it wasn't super nice, so thank you for this, hopefully it will help people.
Sorry I am apparently not experienced enough to understand this. I added the [Serializable] in the top of my form, like this. [Serializable] public partial class Main : Form { public Size Form_Size { get { return Size; } set { Size = value; } } public Point Form_Location { get { return Location; } set { Location = value; } } #region Form Init public Main() { InitializeComponent(); } Then this is my Save method. public void SaveObjectSettings(object _object) { configFileName = GetFileName(); StreamWriter swWriter = File.CreateText(configFileName); Type tType = _object.GetType(); if (tType.IsSerializable) { System.Xml.Serialization.XmlSerializer xsSerializer = new System.Xml.Serialization.XmlSerializer(tType); xsSerializer.Serialize(swWriter, settingsData); swWriter.Close(); } } But I then get this error when trying to do the new System.Xml...... An unhandled exception of type 'System.InvalidOperationException' occurred in System.Xml.dll Additional information: There was an error reflecting type 'MyAppUI.Main'.
No worries you're here to learn. This is what I warned you about. Just write a simple wrapper class that will save &amp; load the properties, e.g if you want to load the window width, load the preferences and then apply the window width in the form. There is a property called windowwidth or something in a preferences class. Look at the example I linked you earlier. That would be the fastest &amp; cleanest way.
I just hope that after early adopters move on you they will take into account what standard users will want :/ 
Yes that was why i was thinking of doing something like this. Witch does not work at all, since the object does not have the properties i am using here, but something like that. public void SaveObjectSettings(object _object) { if(_object.type == Form) { settings.Size = _object.Size; settings.Location = _object.Location; } // And then save my settings using Serializing. } I have looked at your code, but I don't understand it. //Load prefs Preferences = PreferencesManager.Load(); Current.Exit += delegate { PreferencesManager.WriteOut(Preferences); I do not understand how you get the forms current Size and Location into the Preferences.
&gt; I have to program in C# but I'm used to program in Java It shows --&gt; getDocumentIdPreview :) &gt; public static string getDocumentIdPreview(string longString) I would rename longString to something like url
Sorry I should have explained better. I have a `Preferences` class/object which holds all the properties I care about/i want to save&amp;load. Then I've got a `PreferencesManager` class that has two static methods. One for saving, which will just serialize the Preferences object (given by parameter) without knowing what properties are inside (JSON.NET will take care of this by just saving **every** property it can find, that's why I have a seperate class (we're talking about `Preferences`) for this), and one which will load by using the Generic overload of JSON.NET for deserializing. To then apply all the settings to the form, look at `Editor.xaml.cs`. ([Here](https://github.com/mrousavy/Fiddle/blob/master/Fiddle.UI/Editor.xaml.cs#L47)). Fairly simple process, I have loaded the Preferences (I've got a static object `App.Preferences`, you can just do a preferences load if you want) and now I just set the form's dimensions/properties to the values from my Preferences object.
&gt; It shows --&gt; getDocumentIdPreview :) Is that typical Java? Anyway, it works fine now. Just had to add a delay to make sure the value it collected was not null.
Something like this should work:- var localAppData = Environment.GetEnvironmentVariable("LOCALAPPDATA"); var databaseDirectory = localAppData + Path.DirectorySeparatorChar + "myappname" + Path.DirectorySeparatorChar; var myDbFile = new FileInfo(databaseDirectory + "mydatabase.db"); if (myDbFile.Exists == false) { Directory.CreateDirectory(databaseDirectory); myDbFile.Create(); }
Cool, thanks! That's 1 issue down, but I'm afraid the requirement I have for the connectionstring to be in the app.config file makes this even trickier since I can't set it to use this dynamic path. I was thinking of going with an installer that I can use to create a folder for the database, but I can't seem to find out how to set one up...
https://stackoverflow.com/questions/1189364/reading-settings-from-app-config-or-web-config-in-net